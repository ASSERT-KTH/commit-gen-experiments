BLEU SCORE: 0.03166014579801157

TEST MSG: Issue # 4934 : Enforced WS before javadoc tags ' arguments
GENERATED MSG: Issue # 4390 : Modified error handling of errors that are to be generated when missing HTML tags are encountered while parsing javadoc

TEST DIFF (one line): diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 <nl> index 2a14055 . . ecf4c30 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 <nl> @ @ - 250 , 6 + 250 , 7 @ @ Char8 : . <nl> <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> mode value ; <nl> + Leading _ asterisk2 : LEADING _ ASTERISK - > type ( LEADING _ ASTERISK ) ; <nl> Space6 : WS - > type ( WS ) ; <nl> Newline4 : NEWLINE - > type ( NEWLINE ) ; <nl> Package2 : PACKAGE - > type ( PACKAGE ) ; <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 <nl> index 74dc10c . . 52b6e2f 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 <nl> @ @ - 889 , 7 + 889 , 8 @ @ javadocTag : AUTHOR _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> <nl> | RETURN _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | SEE _ LITERAL ( WS | NEWLINE ) * reference ? ( STRING | htmlElement ) * ( WS | NEWLINE ) * description ? <nl> + | SEE _ LITERAL ( WS | NEWLINE ) * reference ? ( STRING | htmlElement ) * ( WS | NEWLINE ) * <nl> + ( ( WS | NEWLINE ) description ) ? <nl> <nl> | SERIAL _ LITERAL ( WS | NEWLINE ) * <nl> ( ( WS | NEWLINE ) description | LITERAL _ INCLUDE | LITERAL _ EXCLUDE ) ? ( WS | NEWLINE ) * <nl> @ @ - 917 , 11 + 918 , 14 @ @ javadocInlineTag : <nl> CODE _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK | text ) * <nl> | DOC _ ROOT _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * <nl> | INHERIT _ DOC _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * <nl> - | LINK _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference description ? <nl> - | LINKPLAIN _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference description ? <nl> + | LINK _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference ( WS | NEWLINE ) * <nl> + ( ( WS | NEWLINE ) description ) ? <nl> + | LINKPLAIN _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference ( WS | NEWLINE ) * <nl> + ( ( WS | NEWLINE ) description ) ? <nl> | LITERAL _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK | text ) * <nl> - | VALUE _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference ? <nl> - | CUSTOM _ NAME ( WS | NEWLINE | LEADING _ ASTERISK ) * description ? <nl> + | VALUE _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * ( ( WS | NEWLINE ) reference ) ? <nl> + | CUSTOM _ NAME ( WS | NEWLINE | LEADING _ ASTERISK ) * ( WS | NEWLINE ) * <nl> + ( ( WS | NEWLINE ) description ) ? <nl> ) <nl> JAVADOC _ INLINE _ TAG _ END <nl> ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> index 00e5d70 . . 53d32d0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> @ @ - 292 , 6 + 292 , 16 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { <nl> 31 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , <nl> " 57 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> 15 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , <nl> + " 64 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 32 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , <nl> + " 71 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 17 , " mismatched input ' < ' expecting < EOF > " , " JAVADOC " ) , <nl> + " 78 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 34 , " no viable alternative at input ' - ' " , " JAVADOC _ INLINE _ TAG " ) , <nl> + " 85 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 39 , " no viable alternative at input ' - ' " , " JAVADOC _ INLINE _ TAG " ) , <nl> + " 92 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 19 , " no viable alternative at input ' < ' " , " JAVADOC _ INLINE _ TAG " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java " ) , <nl> expected ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> index 2ab69c1 . . 2b72499 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> @ @ - 277 , 6 + 277 , 12 @ @ public class JavadocParseTreeTest extends AbstractTreeTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testSpaceBeforeDescriptionInInlineTags ( ) throws Exception { <nl> + verifyJavadocTree ( getDocPath ( " expectedSpaceBeforeArgsInInlineTagsAst . txt " ) , <nl> + getDocPath ( " InputSpaceBeforeArgsInInlineTags . javadoc " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testHtmlVoidElementKeygen ( ) throws Exception { <nl> verifyJavadocTree ( getHtmlPath ( " expectedHtmlVoidElementKeygenAst . txt " ) , <nl> getHtmlPath ( " InputHtmlVoidElementKeygen . javadoc " ) ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java <nl> index 4ea86e2 . . 920d6ce 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java <nl> @ @ - 60 , 4 + 60 , 38 @ @ public class InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags implements S <nl> <nl> } <nl> <nl> + / * * <nl> + * @ see # objectStreamField1 - description <nl> + * / <nl> + private static void method4 ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * @ customTag < description > <nl> + * / <nl> + private static void method8 ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * { @ link # objectStreamField2 - description } <nl> + * / <nl> + private static void method5 ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * { @ linkplain # objectStreamField3 - description } <nl> + * / <nl> + private static void method6 ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * { @ customlink < description > } <nl> + * / <nl> + private static void method7 ( ) { <nl> + <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeArgsInInlineTags . javadoc b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeArgsInInlineTags . javadoc <nl> new file mode 100644 <nl> index 0000000 . . 965d2c9 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeArgsInInlineTags . javadoc <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + * { @ link <nl> + * reference <nl> + * Description - on - multiple - <nl> + * lines } <nl> + <nl> + * { @ linkplain <nl> + * reference <nl> + * Description - on - multiple - <nl> + * lines } <nl> + <nl> + <nl> + * { @ customlink <nl> + * reference <nl> + * Description - on - multiple - <nl> + * lines } <nl> + <nl> + * { @ value <nl> + * Reference } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc <nl> index 5f037f7 . . 5400ea8 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc <nl> @ @ - 50 , 4 + 50 , 7 @ @ include <nl> <nl> * @ throws <nl> Exception Exception - description <nl> - spanning multiple lines <nl> \ No newline at end of file <nl> + spanning multiple lines <nl> + <nl> + * @ see package . Class # member ( Object , Object ) <nl> + * Description <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllJavadocInlineTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllJavadocInlineTagsAst . txt <nl> index ea5c5d0 . . 4609ca6 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllJavadocInlineTagsAst . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllJavadocInlineTagsAst . txt <nl> @ @ - 29 , 8 + 29 , 9 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> | | - - WS - > [ 0 : 69 ] <nl> | | - - REFERENCE - > REFERENCE [ 0 : 70 ] <nl> | | ` - - CLASS - > A [ 0 : 70 ] <nl> - | | - - DESCRIPTION - > DESCRIPTION [ 0 : 71 ] <nl> - | | ` - - TEXT - > A class [ 0 : 71 ] <nl> + | | - - WS - > [ 0 : 71 ] <nl> + | | - - DESCRIPTION - > DESCRIPTION [ 0 : 72 ] <nl> + | | ` - - TEXT - > A class [ 0 : 72 ] <nl> | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 0 : 79 ] <nl> | - - TEXT - > [ 0 : 80 ] <nl> | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 81 ] <nl> @ @ - 39 , 8 + 40 , 9 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> | | - - WS - > [ 0 : 92 ] <nl> | | - - REFERENCE - > REFERENCE [ 0 : 93 ] <nl> | | ` - - CLASS - > A [ 0 : 93 ] <nl> - | | - - DESCRIPTION - > DESCRIPTION [ 0 : 94 ] <nl> - | | ` - - TEXT - > another link [ 0 : 94 ] <nl> + | | - - WS - > [ 0 : 94 ] <nl> + | | - - DESCRIPTION - > DESCRIPTION [ 0 : 95 ] <nl> + | | ` - - TEXT - > another link [ 0 : 95 ] <nl> | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 0 : 107 ] <nl> | - - TEXT - > [ 0 : 108 ] <nl> | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 109 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedJavadocTagDescriptionWithInlineTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedJavadocTagDescriptionWithInlineTagsAst . txt <nl> index e02ca11 . . 5f4dc43 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedJavadocTagDescriptionWithInlineTagsAst . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedJavadocTagDescriptionWithInlineTagsAst . txt <nl> @ @ - 12 , 8 + 12 , 9 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> | | | | - - PACKAGE - > java . lang [ 0 : 23 ] <nl> | | | | - - DOT - > . [ 0 : 32 ] <nl> | | | ` - - CLASS - > Integer [ 0 : 33 ] <nl> - | | | - - DESCRIPTION - > DESCRIPTION [ 0 : 40 ] <nl> - | | | | - - TEXT - > Integer [ 0 : 40 ] <nl> + | | | - - WS - > [ 0 : 40 ] <nl> + | | | - - DESCRIPTION - > DESCRIPTION [ 0 : 41 ] <nl> + | | | | - - TEXT - > Integer [ 0 : 41 ] <nl> | | | ` - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 48 ] <nl> | | | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 0 : 48 ] <nl> | | | | - - CODE _ LITERAL - > @ code [ 0 : 49 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedLinkInlineTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedLinkInlineTagsAst . txt <nl> index 99ff1c5 . . da80c26 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedLinkInlineTagsAst . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedLinkInlineTagsAst . txt <nl> @ @ - 21 , 7 + 21 , 8 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> | | | - - CLASS - > Integer [ 1 : 17 ] <nl> | | | - - HASH - > # [ 1 : 24 ] <nl> | | ` - - MEMBER - > valueOf [ 1 : 25 ] <nl> - | | - - DESCRIPTION - > DESCRIPTION [ 1 : 32 ] <nl> - | | ` - - TEXT - > valueOf [ 1 : 32 ] <nl> + | | - - WS - > [ 1 : 32 ] <nl> + | | - - DESCRIPTION - > DESCRIPTION [ 1 : 33 ] <nl> + | | ` - - TEXT - > valueOf [ 1 : 33 ] <nl> | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 1 : 40 ] <nl> ` - - EOF - > < EOF > [ 1 : 41 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeArgsInInlineTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeArgsInInlineTagsAst . txt <nl> new file mode 100644 <nl> index 0000000 . . 1001bf6 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeArgsInInlineTagsAst . txt <nl> @ @ - 0 , 0 + 1 , 77 @ @ <nl> + JAVADOC - > JAVADOC [ 0 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 0 : 0 ] <nl> + | - - TEXT - > [ 0 : 1 ] <nl> + | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 2 ] <nl> + | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 0 : 2 ] <nl> + | | - - LINK _ LITERAL - > @ link [ 0 : 3 ] <nl> + | | - - NEWLINE - > \ n [ 0 : 8 ] <nl> + | | - - LEADING _ ASTERISK - > * [ 1 : 0 ] <nl> + | | - - WS - > [ 1 : 1 ] <nl> + | | - - REFERENCE - > REFERENCE [ 1 : 6 ] <nl> + | | ` - - PACKAGE - > reference [ 1 : 6 ] <nl> + | | - - WS - > [ 1 : 15 ] <nl> + | | - - NEWLINE - > \ n [ 1 : 20 ] <nl> + | | - - DESCRIPTION - > DESCRIPTION [ 2 : 0 ] <nl> + | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] <nl> + | | | - - TEXT - > Description - on - multiple - [ 2 : 1 ] <nl> + | | | - - NEWLINE - > \ n [ 2 : 30 ] <nl> + | | | - - LEADING _ ASTERISK - > * [ 3 : 0 ] <nl> + | | ` - - TEXT - > lines [ 3 : 1 ] <nl> + | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 3 : 11 ] <nl> + | - - NEWLINE - > \ n [ 3 : 12 ] <nl> + | - - NEWLINE - > \ n [ 4 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 5 : 0 ] <nl> + | - - TEXT - > [ 5 : 1 ] <nl> + | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 5 : 2 ] <nl> + | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 5 : 2 ] <nl> + | | - - LINKPLAIN _ LITERAL - > @ linkplain [ 5 : 3 ] <nl> + | | - - NEWLINE - > \ n [ 5 : 13 ] <nl> + | | - - LEADING _ ASTERISK - > * [ 6 : 0 ] <nl> + | | - - WS - > [ 6 : 1 ] <nl> + | | - - REFERENCE - > REFERENCE [ 6 : 6 ] <nl> + | | ` - - PACKAGE - > reference [ 6 : 6 ] <nl> + | | - - WS - > [ 6 : 15 ] <nl> + | | - - NEWLINE - > \ n [ 6 : 20 ] <nl> + | | - - DESCRIPTION - > DESCRIPTION [ 7 : 0 ] <nl> + | | | - - LEADING _ ASTERISK - > * [ 7 : 0 ] <nl> + | | | - - TEXT - > Description - on - multiple - [ 7 : 1 ] <nl> + | | | - - NEWLINE - > \ n [ 7 : 30 ] <nl> + | | | - - LEADING _ ASTERISK - > * [ 8 : 0 ] <nl> + | | ` - - TEXT - > lines [ 8 : 1 ] <nl> + | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 8 : 11 ] <nl> + | - - NEWLINE - > \ n [ 8 : 12 ] <nl> + | - - NEWLINE - > \ n [ 9 : 0 ] <nl> + | - - NEWLINE - > \ n [ 10 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 11 : 0 ] <nl> + | - - TEXT - > [ 11 : 1 ] <nl> + | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 11 : 2 ] <nl> + | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 11 : 2 ] <nl> + | | - - CUSTOM _ NAME - > @ customlink [ 11 : 3 ] <nl> + | | - - WS - > [ 11 : 14 ] <nl> + | | - - NEWLINE - > \ n [ 11 : 19 ] <nl> + | | - - LEADING _ ASTERISK - > * [ 12 : 0 ] <nl> + | | - - WS - > [ 12 : 1 ] <nl> + | | - - DESCRIPTION - > DESCRIPTION [ 12 : 6 ] <nl> + | | | - - TEXT - > reference [ 12 : 6 ] <nl> + | | | - - NEWLINE - > \ n [ 12 : 20 ] <nl> + | | | - - LEADING _ ASTERISK - > * [ 13 : 0 ] <nl> + | | | - - TEXT - > Description - on - multiple - [ 13 : 1 ] <nl> + | | | - - NEWLINE - > \ n [ 13 : 30 ] <nl> + | | | - - LEADING _ ASTERISK - > * [ 14 : 0 ] <nl> + | | ` - - TEXT - > lines [ 14 : 1 ] <nl> + | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 14 : 11 ] <nl> + | - - NEWLINE - > \ n [ 14 : 12 ] <nl> + | - - NEWLINE - > \ n [ 15 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 16 : 0 ] <nl> + | - - TEXT - > [ 16 : 1 ] <nl> + | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 16 : 2 ] <nl> + | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 16 : 2 ] <nl> + | | - - VALUE _ LITERAL - > @ value [ 16 : 3 ] <nl> + | | - - WS - > [ 16 : 9 ] <nl> + | | - - NEWLINE - > \ n [ 16 : 13 ] <nl> + | | - - LEADING _ ASTERISK - > * [ 17 : 0 ] <nl> + | | - - WS - > [ 17 : 1 ] <nl> + | | - - REFERENCE - > REFERENCE [ 17 : 6 ] <nl> + | | ` - - CLASS - > Reference [ 17 : 6 ] <nl> + | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 17 : 15 ] <nl> + ` - - EOF - > < EOF > [ 17 : 16 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt <nl> index 8671b78 . . 6628065 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt <nl> @ @ - 209 , 5 + 209 , 30 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> | ` - - DESCRIPTION - > DESCRIPTION [ 54 : 5 ] <nl> | | - - TEXT - > Exception Exception - description [ 54 : 5 ] <nl> | | - - NEWLINE - > \ n [ 54 : 40 ] <nl> - | ` - - TEXT - > spanning multiple lines [ 55 : 0 ] <nl> - ` - - EOF - > < EOF > [ 55 : 32 ] <nl> + | | - - TEXT - > spanning multiple lines [ 55 : 0 ] <nl> + | | - - NEWLINE - > \ n [ 55 : 32 ] <nl> + | ` - - NEWLINE - > \ n [ 56 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 57 : 0 ] <nl> + | - - WS - > [ 57 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 57 : 2 ] <nl> + | | - - SEE _ LITERAL - > @ see [ 57 : 2 ] <nl> + | | - - WS - > [ 57 : 6 ] <nl> + | | - - REFERENCE - > REFERENCE [ 57 : 7 ] <nl> + | | | - - PACKAGE - > package [ 57 : 7 ] <nl> + | | | - - DOT - > . [ 57 : 14 ] <nl> + | | | - - CLASS - > Class [ 57 : 15 ] <nl> + | | | - - HASH - > # [ 57 : 20 ] <nl> + | | | - - MEMBER - > member [ 57 : 21 ] <nl> + | | ` - - PARAMETERS - > PARAMETERS [ 57 : 27 ] <nl> + | | | - - LEFT _ BRACE - > ( [ 57 : 27 ] <nl> + | | | - - ARGUMENT - > Object [ 57 : 28 ] <nl> + | | | - - COMMA - > , [ 57 : 34 ] <nl> + | | | - - WS - > [ 57 : 35 ] <nl> + | | | - - ARGUMENT - > Object [ 57 : 36 ] <nl> + | | ` - - RIGHT _ BRACE - > ) [ 57 : 42 ] <nl> + | | - - WS - > [ 57 : 43 ] <nl> + | | - - NEWLINE - > \ n [ 57 : 56 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 58 : 0 ] <nl> + | | - - LEADING _ ASTERISK - > * [ 58 : 0 ] <nl> + | ` - - TEXT - > Description [ 58 : 1 ] <nl> + ` - - EOF - > < EOF > [ 58 : 21 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedTwoLinkTagsInRowAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedTwoLinkTagsInRowAst . txt <nl> index f4f0197 . . da34970 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedTwoLinkTagsInRowAst . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedTwoLinkTagsInRowAst . txt <nl> @ @ - 6 , 8 + 6 , 9 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> | | - - REFERENCE - > REFERENCE [ 0 : 7 ] <nl> | | | - - HASH - > # [ 0 : 7 ] <nl> | | ` - - MEMBER - > WHITESPACE [ 0 : 8 ] <nl> - | | - - DESCRIPTION - > DESCRIPTION [ 0 : 18 ] <nl> - | | ` - - TEXT - > WHITESPACE [ 0 : 18 ] <nl> + | | - - WS - > [ 0 : 18 ] <nl> + | | - - DESCRIPTION - > DESCRIPTION [ 0 : 19 ] <nl> + | | ` - - TEXT - > WHITESPACE [ 0 : 19 ] <nl> | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 0 : 29 ] <nl> | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 30 ] <nl> | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 0 : 30 ] <nl> @ @ - 16 , 7 + 17 , 8 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> | | - - REFERENCE - > REFERENCE [ 0 : 37 ] <nl> | | | - - HASH - > # [ 0 : 37 ] <nl> | | ` - - MEMBER - > trimFrom [ 0 : 38 ] <nl> - | | - - DESCRIPTION - > DESCRIPTION [ 0 : 46 ] <nl> - | | ` - - TEXT - > trimFrom [ 0 : 46 ] <nl> + | | - - WS - > [ 0 : 46 ] <nl> + | | - - DESCRIPTION - > DESCRIPTION [ 0 : 47 ] <nl> + | | ` - - TEXT - > trimFrom [ 0 : 47 ] <nl> | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 0 : 55 ] <nl> ` - - EOF - > < EOF > [ 0 : 56 ]
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java <nl> index 28929b0 . . e03185f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java <nl> @ @ - 31 , 8 + 31 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; <nl> <nl> / * * <nl> - * Counts the methods of the type - definition and checks whether this <nl> - * count is higher than the configured limit . <nl> + * Checks the number of methods declared in each type declaration by access <nl> + * modifier or total count . <nl> * @ author Alexander Jesse <nl> * @ author Oliver Burn <nl> * / <nl> @ @ - 110 , 13 + 110 , 12 @ @ public final class MethodCountCheck extends AbstractCheck { <nl> @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> if ( ast . getType ( ) = = TokenTypes . METHOD _ DEF ) { <nl> - if ( ! counters . isEmpty ( ) ) { <nl> + if ( isInLastestScopeDefinition ( ast ) ) { <nl> raiseCounter ( ast ) ; <nl> } <nl> } <nl> else { <nl> - final boolean inInterface = ast . getType ( ) = = TokenTypes . INTERFACE _ DEF ; <nl> - counters . push ( new MethodCounter ( inInterface ) ) ; <nl> + counters . push ( new MethodCounter ( ast ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 124 , 11 + 123 , 32 @ @ public final class MethodCountCheck extends AbstractCheck { <nl> public void leaveToken ( DetailAST ast ) { <nl> if ( ast . getType ( ) ! = TokenTypes . METHOD _ DEF ) { <nl> final MethodCounter counter = counters . pop ( ) ; <nl> + <nl> checkCounters ( counter , ast ) ; <nl> } <nl> } <nl> <nl> / * * <nl> + * Checks if there is a scope definition to check and that the method is found inside that scope <nl> + * ( class , enum , etc . ) . <nl> + * @ param methodDef <nl> + * The method to analzye . <nl> + * @ return { @ code true } if the method is part of the latest scope definition and should be <nl> + * counted . <nl> + * / <nl> + private boolean isInLastestScopeDefinition ( DetailAST methodDef ) { <nl> + boolean result = false ; <nl> + <nl> + if ( ! counters . isEmpty ( ) ) { <nl> + final DetailAST latestDefinition = counters . peek ( ) . getScopeDefinition ( ) ; <nl> + <nl> + result = latestDefinition = = methodDef . getParent ( ) . getParent ( ) ; <nl> + } <nl> + <nl> + return result ; <nl> + } <nl> + <nl> + / * * <nl> * Determine the visibility modifier and raise the corresponding counter . <nl> * @ param method <nl> * The method - subtree from the AbstractSyntaxTree . <nl> @ @ - 220 , 16 + 240 , 23 @ @ public final class MethodCountCheck extends AbstractCheck { <nl> private final Map < Scope , Integer > counts = new EnumMap < > ( Scope . class ) ; <nl> / * * Indicated is an interface , in which case all methods are public . * / <nl> private final boolean inInterface ; <nl> + / * * <nl> + * The surrounding scope definition ( class , enum , etc . ) which the method counts are connect <nl> + * to . <nl> + * / <nl> + private final DetailAST scopeDefinition ; <nl> / * * Tracks the total . * / <nl> private int total ; <nl> <nl> / * * <nl> * Creates an interface . <nl> - * @ param inInterface indicated if counter for an interface . In which <nl> - * case , add all counts as public methods . <nl> + * @ param scopeDefinition <nl> + * The surrounding scope definition ( class , enum , etc . ) which to count all methods <nl> + * for . <nl> * / <nl> - MethodCounter ( boolean inInterface ) { <nl> - this . inInterface = inInterface ; <nl> + MethodCounter ( DetailAST scopeDefinition ) { <nl> + this . scopeDefinition = scopeDefinition ; <nl> + inInterface = scopeDefinition . getType ( ) = = TokenTypes . INTERFACE _ DEF ; <nl> } <nl> <nl> / * * <nl> @ @ - 259 , 6 + 286 , 10 @ @ public final class MethodCountCheck extends AbstractCheck { <nl> return value ; <nl> } <nl> <nl> + private DetailAST getScopeDefinition ( ) { <nl> + return scopeDefinition ; <nl> + } <nl> + <nl> / * * <nl> * Fetches total number of methods . <nl> * @ return the total number of methods . <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java <nl> index 3097cc1 . . 7e684ba 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java <nl> @ @ - 159 , 4 + 159 , 17 @ @ public class MethodCountCheckTest extends AbstractModuleTestSupport { <nl> <nl> verify ( checkConfig , getPath ( " InputMethodCount6 . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testCountMethodToCorrectDefinition ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( MethodCountCheck . class ) ; <nl> + checkConfig . addAttribute ( " maxTotal " , " 1 " ) ; <nl> + checkConfig . addAttribute ( " tokens " , " ENUM _ DEF " ) ; <nl> + <nl> + final String [ ] expected = { <nl> + " 8 : " + getCheckMessage ( MSG _ MANY _ METHODS , 2 , 1 ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputMethodCount7 . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / methodcount / InputMethodCount7 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / methodcount / InputMethodCount7 . java <nl> new file mode 100644 <nl> index 0000000 . . aa7930b <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / methodcount / InputMethodCount7 . java <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + public class InputMethodCount7 { <nl> + void method1 ( ) { <nl> + } <nl> + <nl> + void method2 ( ) { <nl> + } <nl> + <nl> + enum InnerEnum { <nl> + ; <nl> + <nl> + public static void test1 ( ) { <nl> + Runnable r = ( new Runnable ( ) { <nl> + public void run ( ) { <nl> + run2 ( ) ; <nl> + } <nl> + <nl> + private void run2 ( ) { <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + public static void test2 ( ) { <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / xdocs / checks . xml b / src / xdocs / checks . xml <nl> index dca67fa . . 359a307 100644 <nl> - - - a / src / xdocs / checks . xml <nl> + + + b / src / xdocs / checks . xml <nl> @ @ - 409 , 7 + 409 , 8 @ @ <nl> < / tr > <nl> < tr > <nl> < td > < a href = " config _ sizes . html # MethodCount " > MethodCount < / a > < / td > <nl> - < td > Checks the number of methods declared in each type . < / td > <nl> + < td > Checks the number of methods declared in each type declaration by access modifier <nl> + or total count . < / td > <nl> < / tr > <nl> < tr > <nl> < td > < a href = " config _ sizes . html # MethodLength " > MethodLength < / a > < / td > <nl> diff - - git a / src / xdocs / config _ sizes . xml b / src / xdocs / config _ sizes . xml <nl> index c9849b8 . . 43dc98a 100644 <nl> - - - a / src / xdocs / config _ sizes . xml <nl> + + + b / src / xdocs / config _ sizes . xml <nl> @ @ - 417 , 10 + 417 , 45 @ @ <nl> < subsection name = " Description " > <nl> < p > Since Checkstyle 5 . 3 < / p > <nl> < p > <nl> - Checks the number of methods declared in each type . This <nl> - includes the number of each scope ( < code > private < / code > , <nl> - < code > package < / code > , < code > protected < / code > and <nl> - < code > public < / code > ) as well as an overall total . <nl> + Checks the number of methods declared in each type declaration by access modifier or <nl> + total count . <nl> + < / p > <nl> + < p > <nl> + This check can be configured to flag classes that define too many methods to prevent the <nl> + class from getting too complex . <nl> + Counting can be customized to prevent too many total methods in a type definition <nl> + ( < code > maxTotal < / code > ) , or to prevent too many methods of a specific access modifier <nl> + ( < code > private < / code > , < code > package < / code > , < code > protected < / code > or <nl> + < code > public < / code > ) . <nl> + Each count is completely separated to customize how many methods of each you want to allow . <nl> + For example , specifying a < code > maxTotal < / code > of 10 , still means you can prevent more <nl> + than 0 < code > maxPackage < / code > methods . A violation won ' t appear for 8 public methods , <nl> + but one will appear if there is also 3 private methods or any package - private methods . <nl> + < / p > <nl> + < p > <nl> + Methods defined in anonymous classes are not counted towards any totals . <nl> + Counts only go towards the main type declaration parent , and are kept separate from it ' s <nl> + children ' s inner types . <nl> + < source > <nl> + public class ExampleClass { <nl> + public enum Colors { <nl> + RED , GREEN , YELLOW ; <nl> + <nl> + public String getRGB ( ) { . . . } / / NOT counted towards ExampleClass <nl> + } <nl> + <nl> + public void example ( ) { / / counted towards ExampleClass <nl> + Runnable r = ( new Runnable ( ) { <nl> + public void run ( ) { . . . } / / NOT counted towards ExampleClass and won ' t produce any violations <nl> + } ) ; <nl> + } <nl> + <nl> + public static class InnerExampleClass { <nl> + protected void example2 ( ) { . . . } / / NOT counted towards ExampleClass , <nl> + / / but counted towards InnerExampleClass <nl> + } <nl> + } <nl> + < / source > <nl> < / p > <nl> < / subsection > <nl> <nl> @ @ - 503 , 7 + 538 , 7 @ @ <nl> < / source > <nl> <nl> < p > <nl> - To configure the check to allow at most 30 methods per type : <nl> + To configure the check to allow no more than 30 methods per type declaration : <nl> < / p > <nl> < source > <nl> & lt ; module name = " MethodCount " & gt ; <nl> @ @ - 511 , 6 + 546 , 16 @ @ <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> + < p > <nl> + To configure the check to allow no more than 10 public methods per type declaration , and 40 methods in total : <nl> + < / p > <nl> + < source > <nl> + & lt ; module name = " MethodCount " & gt ; <nl> + & lt ; property name = " maxPublic " value = " 10 " / & gt ; <nl> + & lt ; property name = " maxTotal " value = " 40 " / & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + <nl> < / subsection > <nl> <nl> < subsection name = " Example of Usage " >

TEST DIFF:
diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 
 index 2a14055 . . ecf4c30 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 
 @ @ - 250 , 6 + 250 , 7 @ @ Char8 : . 
 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 mode value ; 
 + Leading _ asterisk2 : LEADING _ ASTERISK - > type ( LEADING _ ASTERISK ) ; 
 Space6 : WS - > type ( WS ) ; 
 Newline4 : NEWLINE - > type ( NEWLINE ) ; 
 Package2 : PACKAGE - > type ( PACKAGE ) ; 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 
 index 74dc10c . . 52b6e2f 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 
 @ @ - 889 , 7 + 889 , 8 @ @ javadocTag : AUTHOR _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 
 | RETURN _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 
 - | SEE _ LITERAL ( WS | NEWLINE ) * reference ? ( STRING | htmlElement ) * ( WS | NEWLINE ) * description ? 
 + | SEE _ LITERAL ( WS | NEWLINE ) * reference ? ( STRING | htmlElement ) * ( WS | NEWLINE ) * 
 + ( ( WS | NEWLINE ) description ) ? 
 
 | SERIAL _ LITERAL ( WS | NEWLINE ) * 
 ( ( WS | NEWLINE ) description | LITERAL _ INCLUDE | LITERAL _ EXCLUDE ) ? ( WS | NEWLINE ) * 
 @ @ - 917 , 11 + 918 , 14 @ @ javadocInlineTag : 
 CODE _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK | text ) * 
 | DOC _ ROOT _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * 
 | INHERIT _ DOC _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * 
 - | LINK _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference description ? 
 - | LINKPLAIN _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference description ? 
 + | LINK _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference ( WS | NEWLINE ) * 
 + ( ( WS | NEWLINE ) description ) ? 
 + | LINKPLAIN _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference ( WS | NEWLINE ) * 
 + ( ( WS | NEWLINE ) description ) ? 
 | LITERAL _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK | text ) * 
 - | VALUE _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * reference ? 
 - | CUSTOM _ NAME ( WS | NEWLINE | LEADING _ ASTERISK ) * description ? 
 + | VALUE _ LITERAL ( WS | NEWLINE | LEADING _ ASTERISK ) * ( ( WS | NEWLINE ) reference ) ? 
 + | CUSTOM _ NAME ( WS | NEWLINE | LEADING _ ASTERISK ) * ( WS | NEWLINE ) * 
 + ( ( WS | NEWLINE ) description ) ? 
 ) 
 JAVADOC _ INLINE _ TAG _ END 
 ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 index 00e5d70 . . 53d32d0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 @ @ - 292 , 6 + 292 , 16 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { 
 31 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , 
 " 57 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 15 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , 
 + " 64 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 32 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , 
 + " 71 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 17 , " mismatched input ' < ' expecting < EOF > " , " JAVADOC " ) , 
 + " 78 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 34 , " no viable alternative at input ' - ' " , " JAVADOC _ INLINE _ TAG " ) , 
 + " 85 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 39 , " no viable alternative at input ' - ' " , " JAVADOC _ INLINE _ TAG " ) , 
 + " 92 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 19 , " no viable alternative at input ' < ' " , " JAVADOC _ INLINE _ TAG " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java " ) , 
 expected ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 index 2ab69c1 . . 2b72499 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 @ @ - 277 , 6 + 277 , 12 @ @ public class JavadocParseTreeTest extends AbstractTreeTestSupport { 
 } 
 
 @ Test 
 + public void testSpaceBeforeDescriptionInInlineTags ( ) throws Exception { 
 + verifyJavadocTree ( getDocPath ( " expectedSpaceBeforeArgsInInlineTagsAst . txt " ) , 
 + getDocPath ( " InputSpaceBeforeArgsInInlineTags . javadoc " ) ) ; 
 + } 
 + 
 + @ Test 
 public void testHtmlVoidElementKeygen ( ) throws Exception { 
 verifyJavadocTree ( getHtmlPath ( " expectedHtmlVoidElementKeygenAst . txt " ) , 
 getHtmlPath ( " InputHtmlVoidElementKeygen . javadoc " ) ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java 
 index 4ea86e2 . . 920d6ce 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java 
 @ @ - 60 , 4 + 60 , 38 @ @ public class InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags implements S 
 
 } 
 
 + / * * 
 + * @ see # objectStreamField1 - description 
 + * / 
 + private static void method4 ( ) { 
 + 
 + } 
 + 
 + / * * 
 + * @ customTag < description > 
 + * / 
 + private static void method8 ( ) { 
 + 
 + } 
 + 
 + / * * 
 + * { @ link # objectStreamField2 - description } 
 + * / 
 + private static void method5 ( ) { 
 + 
 + } 
 + 
 + / * * 
 + * { @ linkplain # objectStreamField3 - description } 
 + * / 
 + private static void method6 ( ) { 
 + 
 + } 
 + 
 + / * * 
 + * { @ customlink < description > } 
 + * / 
 + private static void method7 ( ) { 
 + 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeArgsInInlineTags . javadoc b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeArgsInInlineTags . javadoc 
 new file mode 100644 
 index 0000000 . . 965d2c9 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeArgsInInlineTags . javadoc 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + * { @ link 
 + * reference 
 + * Description - on - multiple - 
 + * lines } 
 + 
 + * { @ linkplain 
 + * reference 
 + * Description - on - multiple - 
 + * lines } 
 + 
 + 
 + * { @ customlink 
 + * reference 
 + * Description - on - multiple - 
 + * lines } 
 + 
 + * { @ value 
 + * Reference } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc 
 index 5f037f7 . . 5400ea8 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc 
 @ @ - 50 , 4 + 50 , 7 @ @ include 
 
 * @ throws 
 Exception Exception - description 
 - spanning multiple lines 
 \ No newline at end of file 
 + spanning multiple lines 
 + 
 + * @ see package . Class # member ( Object , Object ) 
 + * Description 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllJavadocInlineTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllJavadocInlineTagsAst . txt 
 index ea5c5d0 . . 4609ca6 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllJavadocInlineTagsAst . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllJavadocInlineTagsAst . txt 
 @ @ - 29 , 8 + 29 , 9 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 | | - - WS - > [ 0 : 69 ] 
 | | - - REFERENCE - > REFERENCE [ 0 : 70 ] 
 | | ` - - CLASS - > A [ 0 : 70 ] 
 - | | - - DESCRIPTION - > DESCRIPTION [ 0 : 71 ] 
 - | | ` - - TEXT - > A class [ 0 : 71 ] 
 + | | - - WS - > [ 0 : 71 ] 
 + | | - - DESCRIPTION - > DESCRIPTION [ 0 : 72 ] 
 + | | ` - - TEXT - > A class [ 0 : 72 ] 
 | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 0 : 79 ] 
 | - - TEXT - > [ 0 : 80 ] 
 | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 81 ] 
 @ @ - 39 , 8 + 40 , 9 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 | | - - WS - > [ 0 : 92 ] 
 | | - - REFERENCE - > REFERENCE [ 0 : 93 ] 
 | | ` - - CLASS - > A [ 0 : 93 ] 
 - | | - - DESCRIPTION - > DESCRIPTION [ 0 : 94 ] 
 - | | ` - - TEXT - > another link [ 0 : 94 ] 
 + | | - - WS - > [ 0 : 94 ] 
 + | | - - DESCRIPTION - > DESCRIPTION [ 0 : 95 ] 
 + | | ` - - TEXT - > another link [ 0 : 95 ] 
 | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 0 : 107 ] 
 | - - TEXT - > [ 0 : 108 ] 
 | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 109 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedJavadocTagDescriptionWithInlineTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedJavadocTagDescriptionWithInlineTagsAst . txt 
 index e02ca11 . . 5f4dc43 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedJavadocTagDescriptionWithInlineTagsAst . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedJavadocTagDescriptionWithInlineTagsAst . txt 
 @ @ - 12 , 8 + 12 , 9 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 | | | | - - PACKAGE - > java . lang [ 0 : 23 ] 
 | | | | - - DOT - > . [ 0 : 32 ] 
 | | | ` - - CLASS - > Integer [ 0 : 33 ] 
 - | | | - - DESCRIPTION - > DESCRIPTION [ 0 : 40 ] 
 - | | | | - - TEXT - > Integer [ 0 : 40 ] 
 + | | | - - WS - > [ 0 : 40 ] 
 + | | | - - DESCRIPTION - > DESCRIPTION [ 0 : 41 ] 
 + | | | | - - TEXT - > Integer [ 0 : 41 ] 
 | | | ` - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 48 ] 
 | | | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 0 : 48 ] 
 | | | | - - CODE _ LITERAL - > @ code [ 0 : 49 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedLinkInlineTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedLinkInlineTagsAst . txt 
 index 99ff1c5 . . da80c26 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedLinkInlineTagsAst . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedLinkInlineTagsAst . txt 
 @ @ - 21 , 7 + 21 , 8 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 | | | - - CLASS - > Integer [ 1 : 17 ] 
 | | | - - HASH - > # [ 1 : 24 ] 
 | | ` - - MEMBER - > valueOf [ 1 : 25 ] 
 - | | - - DESCRIPTION - > DESCRIPTION [ 1 : 32 ] 
 - | | ` - - TEXT - > valueOf [ 1 : 32 ] 
 + | | - - WS - > [ 1 : 32 ] 
 + | | - - DESCRIPTION - > DESCRIPTION [ 1 : 33 ] 
 + | | ` - - TEXT - > valueOf [ 1 : 33 ] 
 | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 1 : 40 ] 
 ` - - EOF - > < EOF > [ 1 : 41 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeArgsInInlineTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeArgsInInlineTagsAst . txt 
 new file mode 100644 
 index 0000000 . . 1001bf6 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeArgsInInlineTagsAst . txt 
 @ @ - 0 , 0 + 1 , 77 @ @ 
 + JAVADOC - > JAVADOC [ 0 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 0 : 0 ] 
 + | - - TEXT - > [ 0 : 1 ] 
 + | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 2 ] 
 + | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 0 : 2 ] 
 + | | - - LINK _ LITERAL - > @ link [ 0 : 3 ] 
 + | | - - NEWLINE - > \ n [ 0 : 8 ] 
 + | | - - LEADING _ ASTERISK - > * [ 1 : 0 ] 
 + | | - - WS - > [ 1 : 1 ] 
 + | | - - REFERENCE - > REFERENCE [ 1 : 6 ] 
 + | | ` - - PACKAGE - > reference [ 1 : 6 ] 
 + | | - - WS - > [ 1 : 15 ] 
 + | | - - NEWLINE - > \ n [ 1 : 20 ] 
 + | | - - DESCRIPTION - > DESCRIPTION [ 2 : 0 ] 
 + | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] 
 + | | | - - TEXT - > Description - on - multiple - [ 2 : 1 ] 
 + | | | - - NEWLINE - > \ n [ 2 : 30 ] 
 + | | | - - LEADING _ ASTERISK - > * [ 3 : 0 ] 
 + | | ` - - TEXT - > lines [ 3 : 1 ] 
 + | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 3 : 11 ] 
 + | - - NEWLINE - > \ n [ 3 : 12 ] 
 + | - - NEWLINE - > \ n [ 4 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 5 : 0 ] 
 + | - - TEXT - > [ 5 : 1 ] 
 + | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 5 : 2 ] 
 + | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 5 : 2 ] 
 + | | - - LINKPLAIN _ LITERAL - > @ linkplain [ 5 : 3 ] 
 + | | - - NEWLINE - > \ n [ 5 : 13 ] 
 + | | - - LEADING _ ASTERISK - > * [ 6 : 0 ] 
 + | | - - WS - > [ 6 : 1 ] 
 + | | - - REFERENCE - > REFERENCE [ 6 : 6 ] 
 + | | ` - - PACKAGE - > reference [ 6 : 6 ] 
 + | | - - WS - > [ 6 : 15 ] 
 + | | - - NEWLINE - > \ n [ 6 : 20 ] 
 + | | - - DESCRIPTION - > DESCRIPTION [ 7 : 0 ] 
 + | | | - - LEADING _ ASTERISK - > * [ 7 : 0 ] 
 + | | | - - TEXT - > Description - on - multiple - [ 7 : 1 ] 
 + | | | - - NEWLINE - > \ n [ 7 : 30 ] 
 + | | | - - LEADING _ ASTERISK - > * [ 8 : 0 ] 
 + | | ` - - TEXT - > lines [ 8 : 1 ] 
 + | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 8 : 11 ] 
 + | - - NEWLINE - > \ n [ 8 : 12 ] 
 + | - - NEWLINE - > \ n [ 9 : 0 ] 
 + | - - NEWLINE - > \ n [ 10 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 11 : 0 ] 
 + | - - TEXT - > [ 11 : 1 ] 
 + | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 11 : 2 ] 
 + | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 11 : 2 ] 
 + | | - - CUSTOM _ NAME - > @ customlink [ 11 : 3 ] 
 + | | - - WS - > [ 11 : 14 ] 
 + | | - - NEWLINE - > \ n [ 11 : 19 ] 
 + | | - - LEADING _ ASTERISK - > * [ 12 : 0 ] 
 + | | - - WS - > [ 12 : 1 ] 
 + | | - - DESCRIPTION - > DESCRIPTION [ 12 : 6 ] 
 + | | | - - TEXT - > reference [ 12 : 6 ] 
 + | | | - - NEWLINE - > \ n [ 12 : 20 ] 
 + | | | - - LEADING _ ASTERISK - > * [ 13 : 0 ] 
 + | | | - - TEXT - > Description - on - multiple - [ 13 : 1 ] 
 + | | | - - NEWLINE - > \ n [ 13 : 30 ] 
 + | | | - - LEADING _ ASTERISK - > * [ 14 : 0 ] 
 + | | ` - - TEXT - > lines [ 14 : 1 ] 
 + | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 14 : 11 ] 
 + | - - NEWLINE - > \ n [ 14 : 12 ] 
 + | - - NEWLINE - > \ n [ 15 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 16 : 0 ] 
 + | - - TEXT - > [ 16 : 1 ] 
 + | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 16 : 2 ] 
 + | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 16 : 2 ] 
 + | | - - VALUE _ LITERAL - > @ value [ 16 : 3 ] 
 + | | - - WS - > [ 16 : 9 ] 
 + | | - - NEWLINE - > \ n [ 16 : 13 ] 
 + | | - - LEADING _ ASTERISK - > * [ 17 : 0 ] 
 + | | - - WS - > [ 17 : 1 ] 
 + | | - - REFERENCE - > REFERENCE [ 17 : 6 ] 
 + | | ` - - CLASS - > Reference [ 17 : 6 ] 
 + | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 17 : 15 ] 
 + ` - - EOF - > < EOF > [ 17 : 16 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt 
 index 8671b78 . . 6628065 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt 
 @ @ - 209 , 5 + 209 , 30 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 | ` - - DESCRIPTION - > DESCRIPTION [ 54 : 5 ] 
 | | - - TEXT - > Exception Exception - description [ 54 : 5 ] 
 | | - - NEWLINE - > \ n [ 54 : 40 ] 
 - | ` - - TEXT - > spanning multiple lines [ 55 : 0 ] 
 - ` - - EOF - > < EOF > [ 55 : 32 ] 
 + | | - - TEXT - > spanning multiple lines [ 55 : 0 ] 
 + | | - - NEWLINE - > \ n [ 55 : 32 ] 
 + | ` - - NEWLINE - > \ n [ 56 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 57 : 0 ] 
 + | - - WS - > [ 57 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 57 : 2 ] 
 + | | - - SEE _ LITERAL - > @ see [ 57 : 2 ] 
 + | | - - WS - > [ 57 : 6 ] 
 + | | - - REFERENCE - > REFERENCE [ 57 : 7 ] 
 + | | | - - PACKAGE - > package [ 57 : 7 ] 
 + | | | - - DOT - > . [ 57 : 14 ] 
 + | | | - - CLASS - > Class [ 57 : 15 ] 
 + | | | - - HASH - > # [ 57 : 20 ] 
 + | | | - - MEMBER - > member [ 57 : 21 ] 
 + | | ` - - PARAMETERS - > PARAMETERS [ 57 : 27 ] 
 + | | | - - LEFT _ BRACE - > ( [ 57 : 27 ] 
 + | | | - - ARGUMENT - > Object [ 57 : 28 ] 
 + | | | - - COMMA - > , [ 57 : 34 ] 
 + | | | - - WS - > [ 57 : 35 ] 
 + | | | - - ARGUMENT - > Object [ 57 : 36 ] 
 + | | ` - - RIGHT _ BRACE - > ) [ 57 : 42 ] 
 + | | - - WS - > [ 57 : 43 ] 
 + | | - - NEWLINE - > \ n [ 57 : 56 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 58 : 0 ] 
 + | | - - LEADING _ ASTERISK - > * [ 58 : 0 ] 
 + | ` - - TEXT - > Description [ 58 : 1 ] 
 + ` - - EOF - > < EOF > [ 58 : 21 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedTwoLinkTagsInRowAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedTwoLinkTagsInRowAst . txt 
 index f4f0197 . . da34970 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedTwoLinkTagsInRowAst . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedTwoLinkTagsInRowAst . txt 
 @ @ - 6 , 8 + 6 , 9 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 | | - - REFERENCE - > REFERENCE [ 0 : 7 ] 
 | | | - - HASH - > # [ 0 : 7 ] 
 | | ` - - MEMBER - > WHITESPACE [ 0 : 8 ] 
 - | | - - DESCRIPTION - > DESCRIPTION [ 0 : 18 ] 
 - | | ` - - TEXT - > WHITESPACE [ 0 : 18 ] 
 + | | - - WS - > [ 0 : 18 ] 
 + | | - - DESCRIPTION - > DESCRIPTION [ 0 : 19 ] 
 + | | ` - - TEXT - > WHITESPACE [ 0 : 19 ] 
 | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 0 : 29 ] 
 | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 0 : 30 ] 
 | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 0 : 30 ] 
 @ @ - 16 , 7 + 17 , 8 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 | | - - REFERENCE - > REFERENCE [ 0 : 37 ] 
 | | | - - HASH - > # [ 0 : 37 ] 
 | | ` - - MEMBER - > trimFrom [ 0 : 38 ] 
 - | | - - DESCRIPTION - > DESCRIPTION [ 0 : 46 ] 
 - | | ` - - TEXT - > trimFrom [ 0 : 46 ] 
 + | | - - WS - > [ 0 : 46 ] 
 + | | - - DESCRIPTION - > DESCRIPTION [ 0 : 47 ] 
 + | | ` - - TEXT - > trimFrom [ 0 : 47 ] 
 | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 0 : 55 ] 
 ` - - EOF - > < EOF > [ 0 : 56 ]

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java 
 index 28929b0 . . e03185f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java 
 @ @ - 31 , 8 + 31 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; 
 
 / * * 
 - * Counts the methods of the type - definition and checks whether this 
 - * count is higher than the configured limit . 
 + * Checks the number of methods declared in each type declaration by access 
 + * modifier or total count . 
 * @ author Alexander Jesse 
 * @ author Oliver Burn 
 * / 
 @ @ - 110 , 13 + 110 , 12 @ @ public final class MethodCountCheck extends AbstractCheck { 
 @ Override 
 public void visitToken ( DetailAST ast ) { 
 if ( ast . getType ( ) = = TokenTypes . METHOD _ DEF ) { 
 - if ( ! counters . isEmpty ( ) ) { 
 + if ( isInLastestScopeDefinition ( ast ) ) { 
 raiseCounter ( ast ) ; 
 } 
 } 
 else { 
 - final boolean inInterface = ast . getType ( ) = = TokenTypes . INTERFACE _ DEF ; 
 - counters . push ( new MethodCounter ( inInterface ) ) ; 
 + counters . push ( new MethodCounter ( ast ) ) ; 
 } 
 } 
 
 @ @ - 124 , 11 + 123 , 32 @ @ public final class MethodCountCheck extends AbstractCheck { 
 public void leaveToken ( DetailAST ast ) { 
 if ( ast . getType ( ) ! = TokenTypes . METHOD _ DEF ) { 
 final MethodCounter counter = counters . pop ( ) ; 
 + 
 checkCounters ( counter , ast ) ; 
 } 
 } 
 
 / * * 
 + * Checks if there is a scope definition to check and that the method is found inside that scope 
 + * ( class , enum , etc . ) . 
 + * @ param methodDef 
 + * The method to analzye . 
 + * @ return { @ code true } if the method is part of the latest scope definition and should be 
 + * counted . 
 + * / 
 + private boolean isInLastestScopeDefinition ( DetailAST methodDef ) { 
 + boolean result = false ; 
 + 
 + if ( ! counters . isEmpty ( ) ) { 
 + final DetailAST latestDefinition = counters . peek ( ) . getScopeDefinition ( ) ; 
 + 
 + result = latestDefinition = = methodDef . getParent ( ) . getParent ( ) ; 
 + } 
 + 
 + return result ; 
 + } 
 + 
 + / * * 
 * Determine the visibility modifier and raise the corresponding counter . 
 * @ param method 
 * The method - subtree from the AbstractSyntaxTree . 
 @ @ - 220 , 16 + 240 , 23 @ @ public final class MethodCountCheck extends AbstractCheck { 
 private final Map < Scope , Integer > counts = new EnumMap < > ( Scope . class ) ; 
 / * * Indicated is an interface , in which case all methods are public . * / 
 private final boolean inInterface ; 
 + / * * 
 + * The surrounding scope definition ( class , enum , etc . ) which the method counts are connect 
 + * to . 
 + * / 
 + private final DetailAST scopeDefinition ; 
 / * * Tracks the total . * / 
 private int total ; 
 
 / * * 
 * Creates an interface . 
 - * @ param inInterface indicated if counter for an interface . In which 
 - * case , add all counts as public methods . 
 + * @ param scopeDefinition 
 + * The surrounding scope definition ( class , enum , etc . ) which to count all methods 
 + * for . 
 * / 
 - MethodCounter ( boolean inInterface ) { 
 - this . inInterface = inInterface ; 
 + MethodCounter ( DetailAST scopeDefinition ) { 
 + this . scopeDefinition = scopeDefinition ; 
 + inInterface = scopeDefinition . getType ( ) = = TokenTypes . INTERFACE _ DEF ; 
 } 
 
 / * * 
 @ @ - 259 , 6 + 286 , 10 @ @ public final class MethodCountCheck extends AbstractCheck { 
 return value ; 
 } 
 
 + private DetailAST getScopeDefinition ( ) { 
 + return scopeDefinition ; 
 + } 
 + 
 / * * 
 * Fetches total number of methods . 
 * @ return the total number of methods . 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java 
 index 3097cc1 . . 7e684ba 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java 
 @ @ - 159 , 4 + 159 , 17 @ @ public class MethodCountCheckTest extends AbstractModuleTestSupport { 
 
 verify ( checkConfig , getPath ( " InputMethodCount6 . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testCountMethodToCorrectDefinition ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( MethodCountCheck . class ) ; 
 + checkConfig . addAttribute ( " maxTotal " , " 1 " ) ; 
 + checkConfig . addAttribute ( " tokens " , " ENUM _ DEF " ) ; 
 + 
 + final String [ ] expected = { 
 + " 8 : " + getCheckMessage ( MSG _ MANY _ METHODS , 2 , 1 ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputMethodCount7 . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / methodcount / InputMethodCount7 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / methodcount / InputMethodCount7 . java 
 new file mode 100644 
 index 0000000 . . aa7930b 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / methodcount / InputMethodCount7 . java 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + public class InputMethodCount7 { 
 + void method1 ( ) { 
 + } 
 + 
 + void method2 ( ) { 
 + } 
 + 
 + enum InnerEnum { 
 + ; 
 + 
 + public static void test1 ( ) { 
 + Runnable r = ( new Runnable ( ) { 
 + public void run ( ) { 
 + run2 ( ) ; 
 + } 
 + 
 + private void run2 ( ) { 
 + } 
 + } ) ; 
 + } 
 + 
 + public static void test2 ( ) { 
 + } 
 + } 
 + } 
 diff - - git a / src / xdocs / checks . xml b / src / xdocs / checks . xml 
 index dca67fa . . 359a307 100644 
 - - - a / src / xdocs / checks . xml 
 + + + b / src / xdocs / checks . xml 
 @ @ - 409 , 7 + 409 , 8 @ @ 
 < / tr > 
 < tr > 
 < td > < a href = " config _ sizes . html # MethodCount " > MethodCount < / a > < / td > 
 - < td > Checks the number of methods declared in each type . < / td > 
 + < td > Checks the number of methods declared in each type declaration by access modifier 
 + or total count . < / td > 
 < / tr > 
 < tr > 
 < td > < a href = " config _ sizes . html # MethodLength " > MethodLength < / a > < / td > 
 diff - - git a / src / xdocs / config _ sizes . xml b / src / xdocs / config _ sizes . xml 
 index c9849b8 . . 43dc98a 100644 
 - - - a / src / xdocs / config _ sizes . xml 
 + + + b / src / xdocs / config _ sizes . xml 
 @ @ - 417 , 10 + 417 , 45 @ @ 
 < subsection name = " Description " > 
 < p > Since Checkstyle 5 . 3 < / p > 
 < p > 
 - Checks the number of methods declared in each type . This 
 - includes the number of each scope ( < code > private < / code > , 
 - < code > package < / code > , < code > protected < / code > and 
 - < code > public < / code > ) as well as an overall total . 
 + Checks the number of methods declared in each type declaration by access modifier or 
 + total count . 
 + < / p > 
 + < p > 
 + This check can be configured to flag classes that define too many methods to prevent the 
 + class from getting too complex . 
 + Counting can be customized to prevent too many total methods in a type definition 
 + ( < code > maxTotal < / code > ) , or to prevent too many methods of a specific access modifier 
 + ( < code > private < / code > , < code > package < / code > , < code > protected < / code > or 
 + < code > public < / code > ) . 
 + Each count is completely separated to customize how many methods of each you want to allow . 
 + For example , specifying a < code > maxTotal < / code > of 10 , still means you can prevent more 
 + than 0 < code > maxPackage < / code > methods . A violation won ' t appear for 8 public methods , 
 + but one will appear if there is also 3 private methods or any package - private methods . 
 + < / p > 
 + < p > 
 + Methods defined in anonymous classes are not counted towards any totals . 
 + Counts only go towards the main type declaration parent , and are kept separate from it ' s 
 + children ' s inner types . 
 + < source > 
 + public class ExampleClass { 
 + public enum Colors { 
 + RED , GREEN , YELLOW ; 
 + 
 + public String getRGB ( ) { . . . } / / NOT counted towards ExampleClass 
 + } 
 + 
 + public void example ( ) { / / counted towards ExampleClass 
 + Runnable r = ( new Runnable ( ) { 
 + public void run ( ) { . . . } / / NOT counted towards ExampleClass and won ' t produce any violations 
 + } ) ; 
 + } 
 + 
 + public static class InnerExampleClass { 
 + protected void example2 ( ) { . . . } / / NOT counted towards ExampleClass , 
 + / / but counted towards InnerExampleClass 
 + } 
 + } 
 + < / source > 
 < / p > 
 < / subsection > 
 
 @ @ - 503 , 7 + 538 , 7 @ @ 
 < / source > 
 
 < p > 
 - To configure the check to allow at most 30 methods per type : 
 + To configure the check to allow no more than 30 methods per type declaration : 
 < / p > 
 < source > 
 & lt ; module name = " MethodCount " & gt ; 
 @ @ - 511 , 6 + 546 , 16 @ @ 
 & lt ; / module & gt ; 
 < / source > 
 
 + < p > 
 + To configure the check to allow no more than 10 public methods per type declaration , and 40 methods in total : 
 + < / p > 
 + < source > 
 + & lt ; module name = " MethodCount " & gt ; 
 + & lt ; property name = " maxPublic " value = " 10 " / & gt ; 
 + & lt ; property name = " maxTotal " value = " 40 " / & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 + 
 < / subsection > 
 
 < subsection name = " Example of Usage " >
