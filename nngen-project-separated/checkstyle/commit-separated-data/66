BLEU SCORE: 0.020980574531482755

TEST MSG: Issue # 5750 : aligned javadoc / xdoc for MissingDeprecated
GENERATED MSG: Tidy up implementation loose ends .

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> index 1460c3b . . c858f4f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> @ @ - 33 , 25 + 33 , 19 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> <nl> / * * <nl> * < p > <nl> - * This class is used to verify that both the <nl> - * { @ link Deprecated Deprecated } annotation <nl> - * and the deprecated javadoc tag are present when <nl> - * either one is present . <nl> + * Verifies that both the & # 64 ; Deprecated annotation is present <nl> + * and the & # 64 ; deprecated javadoc tag are present when either one is present . <nl> * < / p > <nl> - * <nl> * < p > <nl> - * Both ways of flagging deprecation serve their own purpose . The <nl> - * { @ link Deprecated Deprecated } annotation is used for <nl> - * compilers and development tools . The deprecated javadoc tag is <nl> - * used to document why something is deprecated and what , if any , <nl> - * alternatives exist . <nl> + * Both ways of flagging deprecation serve their own purpose . <nl> + * The & # 64 ; Deprecated annotation is used for compilers and development tools . <nl> + * The & # 64 ; deprecated javadoc tag is used to document why something is deprecated <nl> + * and what , if any , alternatives exist . <nl> * < / p > <nl> - * <nl> * < p > <nl> * In order to properly mark something as deprecated both forms of <nl> * deprecation should be present . <nl> * < / p > <nl> - * <nl> * < p > <nl> * Package deprecation is a exception to the rule of always using the <nl> * javadoc tag and annotation to deprecate . Only the package - info . java <nl> @ @ - 62 , 39 + 56 , 45 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> * documentation was found confirming this behavior is correct <nl> * ( of the javadoc tool ) . < / b > <nl> * < / p > <nl> - * <nl> + * < ul > <nl> + * < li > <nl> + * Property { @ code skipNoJavadoc } - Ignore cases when JavaDoc is missing , but still warns when <nl> + * JavaDoc is present but either & # 64 ; deprecated is missing from JavaDoc <nl> + * or & # 64 ; Deprecated is missing from the element . Default value is { @ code false } . <nl> + * < / li > <nl> + * < / ul > <nl> * < p > <nl> - * To configure this check do the following : <nl> + * To configure the check : <nl> * < / p > <nl> - * <nl> * < pre > <nl> - * & lt ; module name = " JavadocDeprecated " / & gt ; <nl> + * & lt ; module name = & quot ; MissingDeprecated & quot ; / & gt ; <nl> * < / pre > <nl> - * <nl> * < p > <nl> * In addition you can configure this check with skipNoJavadoc <nl> * option to allow it to ignore cases when JavaDoc is missing , <nl> * but still warns when JavaDoc is present but either <nl> - * { @ link Deprecated Deprecated } is missing from JavaDoc or <nl> - * { @ link Deprecated Deprecated } is missing from the element . <nl> + * & # 64 ; deprecated is missing from JavaDoc or <nl> + * & # 64 ; Deprecated is missing from the element . <nl> * To configure this check to allow it use : <nl> * < / p > <nl> - * <nl> - * < pre > & lt ; property name = " skipNoJavadoc " value = " true " / & gt ; < / pre > <nl> - * <nl> - * < p > Examples of validating source code with skipNoJavadoc : < / p > <nl> - * <nl> * < pre > <nl> - * < code > <nl> - * { @ literal @ } deprecated <nl> + * & lt ; module name = & quot ; MissingDeprecated & quot ; & gt ; <nl> + * & lt ; property name = & quot ; skipNoJavadoc & quot ; value = & quot ; true & quot ; / & gt ; <nl> + * & lt ; / module & gt ; <nl> + * < / pre > <nl> + * < p > <nl> + * Examples of validating source code with skipNoJavadoc : <nl> + * < / p > <nl> + * < pre > <nl> + * & # 64 ; deprecated <nl> * public static final int MY _ CONST = 123456 ; / / no violation <nl> * <nl> * & # 47 ; * * This javadoc is missing deprecated tag . * & # 47 ; <nl> - * { @ literal @ } deprecated <nl> + * & # 64 ; deprecated <nl> * public static final int COUNTER = 10 ; / / violation as javadoc exists <nl> - * < / code > <nl> * < / pre > <nl> * <nl> + * @ since 5 . 0 <nl> * / <nl> @ StatelessCheck <nl> public final class MissingDeprecatedCheck extends AbstractCheck { <nl> @ @ - 142 , 11 + 142 , 16 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { <nl> / * * Multiline finished at next Javadoc . * / <nl> private static final String NEXT _ TAG = " @ " ; <nl> <nl> - / * * Is deprecated element valid without javadoc . * / <nl> + / * * <nl> + * Ignore cases when JavaDoc is missing , but still warns when JavaDoc is present but either <nl> + * & # 64 ; deprecated is missing from JavaDoc or & # 64 ; Deprecated is missing from the element . <nl> + * / <nl> private boolean skipNoJavadoc ; <nl> <nl> / * * <nl> - * Set skipJavadoc value . <nl> + * Setter to ignore cases when JavaDoc is missing , but still warns when JavaDoc is present <nl> + * but either & # 64 ; deprecated is missing from JavaDoc or & # 64 ; Deprecated is missing <nl> + * from the element . <nl> * @ param skipNoJavadoc user ' s value of skipJavadoc <nl> * / <nl> public void setSkipNoJavadoc ( boolean skipNoJavadoc ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> index 331c3be . . 118f756 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> @ @ - 85 , 6 + 85 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { <nl> " MemberName " , <nl> " MethodName " , <nl> " MethodTypeParameterName " , <nl> + " MissingDeprecated " , <nl> " PackageName " , <nl> " ParameterName " , <nl> " StaticVariableName " , <nl> diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml <nl> index 766aa31 . . 3ae3fb1 100644 <nl> - - - a / src / xdocs / config _ annotation . xml <nl> + + + b / src / xdocs / config _ annotation . xml <nl> @ @ - 510 , 11 + 510 , 32 @ @ public int foo ( ) { . . . } <nl> < / section > <nl> <nl> < section name = " MissingDeprecated " > <nl> + < p > Since Checkstyle 5 . 0 < / p > <nl> < subsection name = " Description " id = " MissingDeprecated _ Description " > <nl> - < p > Since Checkstyle 5 . 0 < / p > <nl> - < p > Verifies that both the java . lang . Deprecated annotation is <nl> - present and the @ deprecated Javadoc tag is present when <nl> - either is present . < / p > <nl> + < p > <nl> + Verifies that both the @ Deprecated annotation is present <nl> + and the @ deprecated javadoc tag are present when either one is present . <nl> + < / p > <nl> + < p > <nl> + Both ways of flagging deprecation serve their own purpose . <nl> + The @ Deprecated annotation is used for compilers and development tools . <nl> + The @ deprecated javadoc tag is used to document why something is deprecated <nl> + and what , if any , alternatives exist . <nl> + < / p > <nl> + < p > <nl> + In order to properly mark something as deprecated both forms of <nl> + deprecation should be present . <nl> + < / p > <nl> + < p > <nl> + Package deprecation is a exception to the rule of always using the <nl> + javadoc tag and annotation to deprecate . Only the package - info . java <nl> + file can contain a Deprecated annotation and it CANNOT contain <nl> + a deprecated javadoc tag . This is the case with <nl> + Sun ' s javadoc tool released with JDK 1 . 6 . 0 _ 11 . As a result , this check <nl> + does not deal with Deprecated packages in any way . < b > No official <nl> + documentation was found confirming this behavior is correct <nl> + ( of the javadoc tool ) . < / b > <nl> + < / p > <nl> < / subsection > <nl> < subsection name = " Properties " id = " MissingDeprecated _ Properties " > <nl> < table > <nl> @ @ - 527 , 13 + 548 , 12 @ @ public int foo ( ) { . . . } <nl> < / tr > <nl> < tr > <nl> < td > skipNoJavadoc < / td > <nl> - < td > When this property is set to true check ignore cases <nl> - when JavaDoc is missing , but still warns when JavaDoc is <nl> + < td > Ignore cases when JavaDoc is missing , but still warns when JavaDoc is <nl> present but either @ deprecated is missing from JavaDoc or <nl> @ Deprecated is missing from the element . <nl> < / td > <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> - < td > false < / td > <nl> + < td > < code > false < / code > < / td > <nl> < td > 6 . 16 < / td > <nl> < / tr > <nl> < / table > <nl> @ @ - 543 , 7 + 563 , 13 @ @ public int foo ( ) { . . . } <nl> < source > <nl> & lt ; module name = & quot ; MissingDeprecated & quot ; / & gt ; <nl> < / source > <nl> - < p > In addition you can configure this check with skipNoJavadoc option : < / p > <nl> + < p > <nl> + In addition you can configure this check with skipNoJavadoc <nl> + option to allow it to ignore cases when JavaDoc is missing , <nl> + but still warns when JavaDoc is present but either <nl> + @ deprecated is missing from JavaDoc or <nl> + @ Deprecated is missing from the element . <nl> + To configure this check to allow it use : < / p > <nl> < source > <nl> & lt ; module name = & quot ; MissingDeprecated & quot ; & gt ; <nl> & lt ; property name = " skipNoJavadoc " value = " true " / & gt ;
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> index b51edf2 . . 3002b25 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> @ @ - 240 , 7 + 240 , 7 @ @ public final class FileContents implements CommentListener <nl> * * / <nl> public boolean lineIsComment ( int aLineNo ) <nl> { <nl> - return MATCH _ SINGLELINE _ COMMENT . match ( mLines [ aLineNo ] ) ; <nl> + return MATCH _ SINGLELINE _ COMMENT . match ( mLines [ aLineNo ] ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> index a5a8f5d . . e32493b 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> @ @ - 98 , 7 + 98 , 7 @ @ public final class LocalizedMessage <nl> } <nl> <nl> if ( ! Arrays . equals ( mArgs , localizedMessage . mArgs ) ) { <nl> - return false ; <nl> + return false ; <nl> } <nl> / / ignoring mBundle for perf reasons . <nl> <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / j2ee / Utils . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / j2ee / Utils . java <nl> index 0e7f001 . . a687fe6 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / j2ee / Utils . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / j2ee / Utils . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public class Utils <nl> if ( ( child . getType ( ) = = TokenTypes . METHOD _ DEF ) <nl> & & Utils . isPublicMethod ( child , aName ) ) <nl> { <nl> - return true ; <nl> + return true ; <nl> } <nl> child = ( DetailAST ) child . getNextSibling ( ) ; <nl> } <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class Utils <nl> aName , <nl> aIsVoid ) ) <nl> { <nl> - return true ; <nl> + return true ; <nl> } <nl> child = ( DetailAST ) child . getNextSibling ( ) ; <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 index 1460c3b . . c858f4f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 @ @ - 33 , 25 + 33 , 19 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 
 / * * 
 * < p > 
 - * This class is used to verify that both the 
 - * { @ link Deprecated Deprecated } annotation 
 - * and the deprecated javadoc tag are present when 
 - * either one is present . 
 + * Verifies that both the & # 64 ; Deprecated annotation is present 
 + * and the & # 64 ; deprecated javadoc tag are present when either one is present . 
 * < / p > 
 - * 
 * < p > 
 - * Both ways of flagging deprecation serve their own purpose . The 
 - * { @ link Deprecated Deprecated } annotation is used for 
 - * compilers and development tools . The deprecated javadoc tag is 
 - * used to document why something is deprecated and what , if any , 
 - * alternatives exist . 
 + * Both ways of flagging deprecation serve their own purpose . 
 + * The & # 64 ; Deprecated annotation is used for compilers and development tools . 
 + * The & # 64 ; deprecated javadoc tag is used to document why something is deprecated 
 + * and what , if any , alternatives exist . 
 * < / p > 
 - * 
 * < p > 
 * In order to properly mark something as deprecated both forms of 
 * deprecation should be present . 
 * < / p > 
 - * 
 * < p > 
 * Package deprecation is a exception to the rule of always using the 
 * javadoc tag and annotation to deprecate . Only the package - info . java 
 @ @ - 62 , 39 + 56 , 45 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 * documentation was found confirming this behavior is correct 
 * ( of the javadoc tool ) . < / b > 
 * < / p > 
 - * 
 + * < ul > 
 + * < li > 
 + * Property { @ code skipNoJavadoc } - Ignore cases when JavaDoc is missing , but still warns when 
 + * JavaDoc is present but either & # 64 ; deprecated is missing from JavaDoc 
 + * or & # 64 ; Deprecated is missing from the element . Default value is { @ code false } . 
 + * < / li > 
 + * < / ul > 
 * < p > 
 - * To configure this check do the following : 
 + * To configure the check : 
 * < / p > 
 - * 
 * < pre > 
 - * & lt ; module name = " JavadocDeprecated " / & gt ; 
 + * & lt ; module name = & quot ; MissingDeprecated & quot ; / & gt ; 
 * < / pre > 
 - * 
 * < p > 
 * In addition you can configure this check with skipNoJavadoc 
 * option to allow it to ignore cases when JavaDoc is missing , 
 * but still warns when JavaDoc is present but either 
 - * { @ link Deprecated Deprecated } is missing from JavaDoc or 
 - * { @ link Deprecated Deprecated } is missing from the element . 
 + * & # 64 ; deprecated is missing from JavaDoc or 
 + * & # 64 ; Deprecated is missing from the element . 
 * To configure this check to allow it use : 
 * < / p > 
 - * 
 - * < pre > & lt ; property name = " skipNoJavadoc " value = " true " / & gt ; < / pre > 
 - * 
 - * < p > Examples of validating source code with skipNoJavadoc : < / p > 
 - * 
 * < pre > 
 - * < code > 
 - * { @ literal @ } deprecated 
 + * & lt ; module name = & quot ; MissingDeprecated & quot ; & gt ; 
 + * & lt ; property name = & quot ; skipNoJavadoc & quot ; value = & quot ; true & quot ; / & gt ; 
 + * & lt ; / module & gt ; 
 + * < / pre > 
 + * < p > 
 + * Examples of validating source code with skipNoJavadoc : 
 + * < / p > 
 + * < pre > 
 + * & # 64 ; deprecated 
 * public static final int MY _ CONST = 123456 ; / / no violation 
 * 
 * & # 47 ; * * This javadoc is missing deprecated tag . * & # 47 ; 
 - * { @ literal @ } deprecated 
 + * & # 64 ; deprecated 
 * public static final int COUNTER = 10 ; / / violation as javadoc exists 
 - * < / code > 
 * < / pre > 
 * 
 + * @ since 5 . 0 
 * / 
 @ StatelessCheck 
 public final class MissingDeprecatedCheck extends AbstractCheck { 
 @ @ - 142 , 11 + 142 , 16 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { 
 / * * Multiline finished at next Javadoc . * / 
 private static final String NEXT _ TAG = " @ " ; 
 
 - / * * Is deprecated element valid without javadoc . * / 
 + / * * 
 + * Ignore cases when JavaDoc is missing , but still warns when JavaDoc is present but either 
 + * & # 64 ; deprecated is missing from JavaDoc or & # 64 ; Deprecated is missing from the element . 
 + * / 
 private boolean skipNoJavadoc ; 
 
 / * * 
 - * Set skipJavadoc value . 
 + * Setter to ignore cases when JavaDoc is missing , but still warns when JavaDoc is present 
 + * but either & # 64 ; deprecated is missing from JavaDoc or & # 64 ; Deprecated is missing 
 + * from the element . 
 * @ param skipNoJavadoc user ' s value of skipJavadoc 
 * / 
 public void setSkipNoJavadoc ( boolean skipNoJavadoc ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 index 331c3be . . 118f756 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 @ @ - 85 , 6 + 85 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { 
 " MemberName " , 
 " MethodName " , 
 " MethodTypeParameterName " , 
 + " MissingDeprecated " , 
 " PackageName " , 
 " ParameterName " , 
 " StaticVariableName " , 
 diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml 
 index 766aa31 . . 3ae3fb1 100644 
 - - - a / src / xdocs / config _ annotation . xml 
 + + + b / src / xdocs / config _ annotation . xml 
 @ @ - 510 , 11 + 510 , 32 @ @ public int foo ( ) { . . . } 
 < / section > 
 
 < section name = " MissingDeprecated " > 
 + < p > Since Checkstyle 5 . 0 < / p > 
 < subsection name = " Description " id = " MissingDeprecated _ Description " > 
 - < p > Since Checkstyle 5 . 0 < / p > 
 - < p > Verifies that both the java . lang . Deprecated annotation is 
 - present and the @ deprecated Javadoc tag is present when 
 - either is present . < / p > 
 + < p > 
 + Verifies that both the @ Deprecated annotation is present 
 + and the @ deprecated javadoc tag are present when either one is present . 
 + < / p > 
 + < p > 
 + Both ways of flagging deprecation serve their own purpose . 
 + The @ Deprecated annotation is used for compilers and development tools . 
 + The @ deprecated javadoc tag is used to document why something is deprecated 
 + and what , if any , alternatives exist . 
 + < / p > 
 + < p > 
 + In order to properly mark something as deprecated both forms of 
 + deprecation should be present . 
 + < / p > 
 + < p > 
 + Package deprecation is a exception to the rule of always using the 
 + javadoc tag and annotation to deprecate . Only the package - info . java 
 + file can contain a Deprecated annotation and it CANNOT contain 
 + a deprecated javadoc tag . This is the case with 
 + Sun ' s javadoc tool released with JDK 1 . 6 . 0 _ 11 . As a result , this check 
 + does not deal with Deprecated packages in any way . < b > No official 
 + documentation was found confirming this behavior is correct 
 + ( of the javadoc tool ) . < / b > 
 + < / p > 
 < / subsection > 
 < subsection name = " Properties " id = " MissingDeprecated _ Properties " > 
 < table > 
 @ @ - 527 , 13 + 548 , 12 @ @ public int foo ( ) { . . . } 
 < / tr > 
 < tr > 
 < td > skipNoJavadoc < / td > 
 - < td > When this property is set to true check ignore cases 
 - when JavaDoc is missing , but still warns when JavaDoc is 
 + < td > Ignore cases when JavaDoc is missing , but still warns when JavaDoc is 
 present but either @ deprecated is missing from JavaDoc or 
 @ Deprecated is missing from the element . 
 < / td > 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 - < td > false < / td > 
 + < td > < code > false < / code > < / td > 
 < td > 6 . 16 < / td > 
 < / tr > 
 < / table > 
 @ @ - 543 , 7 + 563 , 13 @ @ public int foo ( ) { . . . } 
 < source > 
 & lt ; module name = & quot ; MissingDeprecated & quot ; / & gt ; 
 < / source > 
 - < p > In addition you can configure this check with skipNoJavadoc option : < / p > 
 + < p > 
 + In addition you can configure this check with skipNoJavadoc 
 + option to allow it to ignore cases when JavaDoc is missing , 
 + but still warns when JavaDoc is present but either 
 + @ deprecated is missing from JavaDoc or 
 + @ Deprecated is missing from the element . 
 + To configure this check to allow it use : < / p > 
 < source > 
 & lt ; module name = & quot ; MissingDeprecated & quot ; & gt ; 
 & lt ; property name = " skipNoJavadoc " value = " true " / & gt ;

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 index b51edf2 . . 3002b25 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 @ @ - 240 , 7 + 240 , 7 @ @ public final class FileContents implements CommentListener 
 * * / 
 public boolean lineIsComment ( int aLineNo ) 
 { 
 - return MATCH _ SINGLELINE _ COMMENT . match ( mLines [ aLineNo ] ) ; 
 + return MATCH _ SINGLELINE _ COMMENT . match ( mLines [ aLineNo ] ) ; 
 } 
 
 / * * 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 index a5a8f5d . . e32493b 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 @ @ - 98 , 7 + 98 , 7 @ @ public final class LocalizedMessage 
 } 
 
 if ( ! Arrays . equals ( mArgs , localizedMessage . mArgs ) ) { 
 - return false ; 
 + return false ; 
 } 
 / / ignoring mBundle for perf reasons . 
 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / j2ee / Utils . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / j2ee / Utils . java 
 index 0e7f001 . . a687fe6 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / j2ee / Utils . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / j2ee / Utils . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public class Utils 
 if ( ( child . getType ( ) = = TokenTypes . METHOD _ DEF ) 
 & & Utils . isPublicMethod ( child , aName ) ) 
 { 
 - return true ; 
 + return true ; 
 } 
 child = ( DetailAST ) child . getNextSibling ( ) ; 
 } 
 @ @ - 74 , 7 + 74 , 7 @ @ public class Utils 
 aName , 
 aIsVoid ) ) 
 { 
 - return true ; 
 + return true ; 
 } 
 child = ( DetailAST ) child . getNextSibling ( ) ; 
 }
