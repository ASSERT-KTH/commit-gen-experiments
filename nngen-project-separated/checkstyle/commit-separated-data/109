BLEU SCORE: 0.062494395809989875

TEST MSG: Issue # 6320 : added REMOVE _ CONDITIONALS mutator for annotation
GENERATED MSG: Coverage has been increased to 100 % in AnnotationLocationCheck . Issue # 908

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index edffd34 . . 7311d69 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1856 , 6 + 1856 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> index 67aea9d . . e2c547c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> @ @ - 264 , 22 + 264 , 12 @ @ public class AnnotationLocationCheck extends AbstractCheck { <nl> public void visitToken ( DetailAST ast ) { <nl> final DetailAST modifiersNode = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> <nl> - if ( hasAnnotations ( modifiersNode ) ) { <nl> + if ( modifiersNode ! = null ) { <nl> checkAnnotations ( modifiersNode , getExpectedAnnotationIndentation ( modifiersNode ) ) ; <nl> } <nl> } <nl> <nl> / * * <nl> - * Checks whether a given modifier node has an annotation . <nl> - * @ param modifierNode modifier node . <nl> - * @ return true if the given modifier node has the annotation . <nl> - * / <nl> - private static boolean hasAnnotations ( DetailAST modifierNode ) { <nl> - return modifierNode ! = null <nl> - & & modifierNode . findFirstToken ( TokenTypes . ANNOTATION ) ! = null ; <nl> - } <nl> - <nl> - / * * <nl> * Returns an expected annotation indentation . <nl> * The expected indentation should be the same as the indentation of the node <nl> * which is the parent of the target modifier node . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> index 142a807 . . cd99823 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> @ @ - 464 , 12 + 464 , 12 @ @ public final class AnnotationUseStyleCheck extends AbstractCheck { <nl> / / comma can be null if array is empty <nl> final DetailAST comma = rCurly . getPreviousSibling ( ) ; <nl> <nl> - if ( trailingArrayComma = = TrailingArrayComma . ALWAYS <nl> - & & ( comma = = null | | comma . getType ( ) ! = TokenTypes . COMMA ) ) { <nl> - log ( rCurly , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; <nl> + if ( trailingArrayComma = = TrailingArrayComma . ALWAYS ) { <nl> + if ( comma = = null | | comma . getType ( ) ! = TokenTypes . COMMA ) { <nl> + log ( rCurly , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; <nl> + } <nl> } <nl> - else if ( trailingArrayComma = = TrailingArrayComma . NEVER <nl> - & & comma ! = null & & comma . getType ( ) = = TokenTypes . COMMA ) { <nl> + else if ( comma ! = null & & comma . getType ( ) = = TokenTypes . COMMA ) { <nl> log ( comma , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) ; <nl> } <nl> } <nl> @ @ - 485 , 14 + 485 , 13 @ @ public final class AnnotationUseStyleCheck extends AbstractCheck { <nl> final DetailAST paren = ast . getLastChild ( ) ; <nl> final boolean parenExists = paren . getType ( ) = = TokenTypes . RPAREN ; <nl> <nl> - if ( closingParens = = ClosingParens . ALWAYS <nl> - & & ! parenExists ) { <nl> - log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) ; <nl> + if ( closingParens = = ClosingParens . ALWAYS ) { <nl> + if ( ! parenExists ) { <nl> + log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) ; <nl> + } <nl> } <nl> - else if ( closingParens = = ClosingParens . NEVER <nl> - & & parenExists <nl> + else if ( parenExists <nl> & & ! ast . branchContains ( TokenTypes . EXPR ) <nl> - & & ! ast . branchContains ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) <nl> & & ! ast . branchContains ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ) { <nl> log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> index 403bb34 . . b0cb9b7 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> @ @ - 81 , 6 + 81 , 38 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testIncorrectAllTokens ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationLocationCheck . class ) ; <nl> + checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " <nl> + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , " <nl> + + " LITERAL _ THROWS , IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , " <nl> + + " ANNOTATION _ FIELD _ DEF " ) ; <nl> + final String [ ] expected = { <nl> + " 6 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnn " ) , <nl> + " 11 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , <nl> + " 17 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation1 " , 8 , 4 ) , <nl> + " 25 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation1 " , 8 , 4 ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation2 " ) , <nl> + " 32 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 7 , 4 ) , <nl> + " 36 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 8 , 4 ) , <nl> + " 37 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation3 " , 6 , 4 ) , <nl> + " 38 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation4 " , 10 , 4 ) , <nl> + " 41 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , <nl> + " 48 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation1 " , 12 , 8 ) , <nl> + " 61 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 12 , 8 ) , <nl> + " 65 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 12 , 8 ) , <nl> + " 70 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 7 , 4 ) , <nl> + " 73 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , <nl> + " 85 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 11 , 8 ) , <nl> + " 88 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 10 , 8 ) , <nl> + " 98 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 0 , 3 ) , <nl> + " 100 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation2 " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputAnnotationLocationIncorrect . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testGetAcceptableTokens ( ) { <nl> final AnnotationLocationCheck constantNameCheckObj = new AnnotationLocationCheck ( ) ; <nl> final int [ ] actual = constantNameCheckObj . getAcceptableTokens ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java <nl> index 75a3974 . . 97d71f6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java <nl> @ @ - 75 , 6 + 75 , 7 @ @ public class AnnotationOnSameLineCheckTest extends AbstractModuleTestSupport { <nl> " 9 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , <nl> " 10 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , <nl> " 11 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Deprecated " ) , <nl> + " 16 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , <nl> } ; <nl> verify ( config , getPath ( " InputAnnotationOnSameLineCheck . java " ) , expected ) ; <nl> } <nl> @ @ - 90 , 6 + 91 , 7 @ @ public class AnnotationOnSameLineCheckTest extends AbstractModuleTestSupport { <nl> " 9 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , <nl> " 10 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , <nl> " 11 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Deprecated " ) , <nl> + " 16 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , <nl> } ; <nl> verify ( config , getPath ( " InputAnnotationOnSameLineCheck . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java <nl> index 16bc727 . . 851f9b4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java <nl> @ @ - 142 , 6 + 142 , 7 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { <nl> final String [ ] expected = { <nl> " 43 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , <nl> " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , <nl> + " 67 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; <nl> @ @ - 227 , 6 + 228 , 21 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { <nl> getNonCompilablePath ( " InputAnnotationUseStyleWithTrailingComma . java " ) , expected ) ; <nl> } <nl> <nl> + / * * <nl> + * Test that annotation parens are always present . <nl> + * / <nl> + @ Test <nl> + public void testTrailingArrayIgnore ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationUseStyleCheck . class ) ; <nl> + checkConfig . addAttribute ( " trailingArrayComma " , " ignore " ) ; <nl> + final String [ ] expected = { <nl> + " 9 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , <nl> + " 16 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputAnnotationUseStyleWithTrailingComma . java " ) , expected ) ; <nl> + } <nl> + <nl> @ Test <nl> public void testCommaNeverViolations ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationUseStyleCheck . class ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationlocation / InputAnnotationLocationIncorrect . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationlocation / InputAnnotationLocationIncorrect . java <nl> index 7e24bb0 . . ac76429 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationlocation / InputAnnotationLocationIncorrect . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationlocation / InputAnnotationLocationIncorrect . java <nl> @ @ - 96 , 7 + 96 , 11 @ @ class InputAnnotationLocationIncorrect <nl> @ MyAnnotation1 / / warn <nl> ( value = " " ) <nl> @ MyAnnotation2 <nl> - class Foo { } <nl> + class Foo { <nl> + public void method1 ( @ MyAnnotation3 @ MyAnnotation2 Object param1 ) { <nl> + return ; <nl> + } <nl> + } <nl> <nl> @ interface MyAnnotation1 { <nl> <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationonsameline / InputAnnotationOnSameLineCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationonsameline / InputAnnotationOnSameLineCheck . java <nl> index d24c94b . . f45aed3 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationonsameline / InputAnnotationOnSameLineCheck . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationonsameline / InputAnnotationOnSameLineCheck . java <nl> @ @ - 13 , 6 + 13 , 11 @ @ public class InputAnnotationOnSameLineCheck { <nl> return ( int ) x ; <nl> } <nl> <nl> + @ Annotation2 @ Annotation <nl> + public int field ; <nl> + <nl> + public <nl> + @ Annotation int field2 ; <nl> } <nl> <nl> class SomeClass { <nl> @ @ - 24 , 3 + 29 , 5 @ @ class SomeClass { <nl> <nl> @ interface Annotation { <nl> } <nl> + @ interface Annotation2 { <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java <nl> index b2c997d . . 6717b50 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java <nl> @ @ - 62 , 4 + 62 , 8 @ @ enum E { <nl> @ SomeArrays ( pooches = { } ) <nl> @ Another ( { } ) <nl> class Closing { <nl> + static final String UN _ U = " UN _ U " ; <nl> + <nl> + @ SuppressWarnings ( value = UN _ U ) <nl> + int d ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / missingoverride / InputMissingOverrideBadOverrideFromObject . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / missingoverride / InputMissingOverrideBadOverrideFromObject . java <nl> index b5374af . . 81e1251 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / missingoverride / InputMissingOverrideBadOverrideFromObject . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / missingoverride / InputMissingOverrideBadOverrideFromObject . java <nl> @ @ - 50 , 4 + 50 , 6 @ @ enum Bleh3 { <nl> public String toString ( ) { <nl> return " B " ; <nl> } <nl> + <nl> + private static void test ( ) { } <nl> }
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index ca03873 . . 34c7283 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1155 , 7 + 1155 , 6 @ @ <nl> < regex > < pattern > . * . checks . indentation . BlockParentHandler < / pattern > < branchRate > 86 < / branchRate > < lineRate > 98 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . ElseHandler < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . AbstractExpressionHandler < / pattern > < branchRate > 91 < / branchRate > < lineRate > 97 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . indentation . ForHandler < / pattern > < branchRate > 75 < / branchRate > < lineRate > 95 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . HandlerFactory < / pattern > < branchRate > 81 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . ImportHandler < / pattern > < branchRate > 50 < / branchRate > < lineRate > 87 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . IndentationCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java <nl> index c0bcc1b . . 1d72b98 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java <nl> @ @ - 78 , 14 + 78 , 6 @ @ public class ForHandler extends BlockParentHandler { <nl> lineWrap . checkIndentation ( ) ; <nl> } <nl> <nl> - @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> - if ( child instanceof ElseHandler ) { <nl> - return getLevel ( ) ; <nl> - } <nl> - return super . suggestedChildLevel ( child ) ; <nl> - } <nl> - <nl> / * * <nl> * Returns right parenthesis of for - loop statement . <nl> * @ param literalForAst

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index edffd34 . . 7311d69 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1856 , 6 + 1856 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 index 67aea9d . . e2c547c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 @ @ - 264 , 22 + 264 , 12 @ @ public class AnnotationLocationCheck extends AbstractCheck { 
 public void visitToken ( DetailAST ast ) { 
 final DetailAST modifiersNode = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 
 - if ( hasAnnotations ( modifiersNode ) ) { 
 + if ( modifiersNode ! = null ) { 
 checkAnnotations ( modifiersNode , getExpectedAnnotationIndentation ( modifiersNode ) ) ; 
 } 
 } 
 
 / * * 
 - * Checks whether a given modifier node has an annotation . 
 - * @ param modifierNode modifier node . 
 - * @ return true if the given modifier node has the annotation . 
 - * / 
 - private static boolean hasAnnotations ( DetailAST modifierNode ) { 
 - return modifierNode ! = null 
 - & & modifierNode . findFirstToken ( TokenTypes . ANNOTATION ) ! = null ; 
 - } 
 - 
 - / * * 
 * Returns an expected annotation indentation . 
 * The expected indentation should be the same as the indentation of the node 
 * which is the parent of the target modifier node . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 index 142a807 . . cd99823 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 @ @ - 464 , 12 + 464 , 12 @ @ public final class AnnotationUseStyleCheck extends AbstractCheck { 
 / / comma can be null if array is empty 
 final DetailAST comma = rCurly . getPreviousSibling ( ) ; 
 
 - if ( trailingArrayComma = = TrailingArrayComma . ALWAYS 
 - & & ( comma = = null | | comma . getType ( ) ! = TokenTypes . COMMA ) ) { 
 - log ( rCurly , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; 
 + if ( trailingArrayComma = = TrailingArrayComma . ALWAYS ) { 
 + if ( comma = = null | | comma . getType ( ) ! = TokenTypes . COMMA ) { 
 + log ( rCurly , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; 
 + } 
 } 
 - else if ( trailingArrayComma = = TrailingArrayComma . NEVER 
 - & & comma ! = null & & comma . getType ( ) = = TokenTypes . COMMA ) { 
 + else if ( comma ! = null & & comma . getType ( ) = = TokenTypes . COMMA ) { 
 log ( comma , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) ; 
 } 
 } 
 @ @ - 485 , 14 + 485 , 13 @ @ public final class AnnotationUseStyleCheck extends AbstractCheck { 
 final DetailAST paren = ast . getLastChild ( ) ; 
 final boolean parenExists = paren . getType ( ) = = TokenTypes . RPAREN ; 
 
 - if ( closingParens = = ClosingParens . ALWAYS 
 - & & ! parenExists ) { 
 - log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) ; 
 + if ( closingParens = = ClosingParens . ALWAYS ) { 
 + if ( ! parenExists ) { 
 + log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) ; 
 + } 
 } 
 - else if ( closingParens = = ClosingParens . NEVER 
 - & & parenExists 
 + else if ( parenExists 
 & & ! ast . branchContains ( TokenTypes . EXPR ) 
 - & & ! ast . branchContains ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) 
 & & ! ast . branchContains ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ) { 
 log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 index 403bb34 . . b0cb9b7 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 @ @ - 81 , 6 + 81 , 38 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testIncorrectAllTokens ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationLocationCheck . class ) ; 
 + checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " 
 + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , " 
 + + " LITERAL _ THROWS , IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , " 
 + + " ANNOTATION _ FIELD _ DEF " ) ; 
 + final String [ ] expected = { 
 + " 6 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnn " ) , 
 + " 11 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , 
 + " 17 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation1 " , 8 , 4 ) , 
 + " 25 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation1 " , 8 , 4 ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation2 " ) , 
 + " 32 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 7 , 4 ) , 
 + " 36 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 8 , 4 ) , 
 + " 37 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation3 " , 6 , 4 ) , 
 + " 38 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation4 " , 10 , 4 ) , 
 + " 41 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , 
 + " 48 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation1 " , 12 , 8 ) , 
 + " 61 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 12 , 8 ) , 
 + " 65 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 12 , 8 ) , 
 + " 70 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 7 , 4 ) , 
 + " 73 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , 
 + " 85 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 11 , 8 ) , 
 + " 88 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 10 , 8 ) , 
 + " 98 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 0 , 3 ) , 
 + " 100 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation2 " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputAnnotationLocationIncorrect . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testGetAcceptableTokens ( ) { 
 final AnnotationLocationCheck constantNameCheckObj = new AnnotationLocationCheck ( ) ; 
 final int [ ] actual = constantNameCheckObj . getAcceptableTokens ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java 
 index 75a3974 . . 97d71f6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java 
 @ @ - 75 , 6 + 75 , 7 @ @ public class AnnotationOnSameLineCheckTest extends AbstractModuleTestSupport { 
 " 9 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , 
 " 10 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , 
 " 11 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Deprecated " ) , 
 + " 16 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , 
 } ; 
 verify ( config , getPath ( " InputAnnotationOnSameLineCheck . java " ) , expected ) ; 
 } 
 @ @ - 90 , 6 + 91 , 7 @ @ public class AnnotationOnSameLineCheckTest extends AbstractModuleTestSupport { 
 " 9 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , 
 " 10 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , 
 " 11 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Deprecated " ) , 
 + " 16 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ ON _ SAME _ LINE , " Annotation " ) , 
 } ; 
 verify ( config , getPath ( " InputAnnotationOnSameLineCheck . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java 
 index 16bc727 . . 851f9b4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java 
 @ @ - 142 , 6 + 142 , 7 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { 
 final String [ ] expected = { 
 " 43 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , 
 " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , 
 + " 67 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; 
 @ @ - 227 , 6 + 228 , 21 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { 
 getNonCompilablePath ( " InputAnnotationUseStyleWithTrailingComma . java " ) , expected ) ; 
 } 
 
 + / * * 
 + * Test that annotation parens are always present . 
 + * / 
 + @ Test 
 + public void testTrailingArrayIgnore ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationUseStyleCheck . class ) ; 
 + checkConfig . addAttribute ( " trailingArrayComma " , " ignore " ) ; 
 + final String [ ] expected = { 
 + " 9 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , 
 + " 16 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputAnnotationUseStyleWithTrailingComma . java " ) , expected ) ; 
 + } 
 + 
 @ Test 
 public void testCommaNeverViolations ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationUseStyleCheck . class ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationlocation / InputAnnotationLocationIncorrect . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationlocation / InputAnnotationLocationIncorrect . java 
 index 7e24bb0 . . ac76429 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationlocation / InputAnnotationLocationIncorrect . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationlocation / InputAnnotationLocationIncorrect . java 
 @ @ - 96 , 7 + 96 , 11 @ @ class InputAnnotationLocationIncorrect 
 @ MyAnnotation1 / / warn 
 ( value = " " ) 
 @ MyAnnotation2 
 - class Foo { } 
 + class Foo { 
 + public void method1 ( @ MyAnnotation3 @ MyAnnotation2 Object param1 ) { 
 + return ; 
 + } 
 + } 
 
 @ interface MyAnnotation1 { 
 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationonsameline / InputAnnotationOnSameLineCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationonsameline / InputAnnotationOnSameLineCheck . java 
 index d24c94b . . f45aed3 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationonsameline / InputAnnotationOnSameLineCheck . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationonsameline / InputAnnotationOnSameLineCheck . java 
 @ @ - 13 , 6 + 13 , 11 @ @ public class InputAnnotationOnSameLineCheck { 
 return ( int ) x ; 
 } 
 
 + @ Annotation2 @ Annotation 
 + public int field ; 
 + 
 + public 
 + @ Annotation int field2 ; 
 } 
 
 class SomeClass { 
 @ @ - 24 , 3 + 29 , 5 @ @ class SomeClass { 
 
 @ interface Annotation { 
 } 
 + @ interface Annotation2 { 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java 
 index b2c997d . . 6717b50 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java 
 @ @ - 62 , 4 + 62 , 8 @ @ enum E { 
 @ SomeArrays ( pooches = { } ) 
 @ Another ( { } ) 
 class Closing { 
 + static final String UN _ U = " UN _ U " ; 
 + 
 + @ SuppressWarnings ( value = UN _ U ) 
 + int d ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / missingoverride / InputMissingOverrideBadOverrideFromObject . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / missingoverride / InputMissingOverrideBadOverrideFromObject . java 
 index b5374af . . 81e1251 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / missingoverride / InputMissingOverrideBadOverrideFromObject . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / missingoverride / InputMissingOverrideBadOverrideFromObject . java 
 @ @ - 50 , 4 + 50 , 6 @ @ enum Bleh3 { 
 public String toString ( ) { 
 return " B " ; 
 } 
 + 
 + private static void test ( ) { } 
 }

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index ca03873 . . 34c7283 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1155 , 7 + 1155 , 6 @ @ 
 < regex > < pattern > . * . checks . indentation . BlockParentHandler < / pattern > < branchRate > 86 < / branchRate > < lineRate > 98 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . ElseHandler < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . AbstractExpressionHandler < / pattern > < branchRate > 91 < / branchRate > < lineRate > 97 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . indentation . ForHandler < / pattern > < branchRate > 75 < / branchRate > < lineRate > 95 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . HandlerFactory < / pattern > < branchRate > 81 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . ImportHandler < / pattern > < branchRate > 50 < / branchRate > < lineRate > 87 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . IndentationCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java 
 index c0bcc1b . . 1d72b98 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java 
 @ @ - 78 , 14 + 78 , 6 @ @ public class ForHandler extends BlockParentHandler { 
 lineWrap . checkIndentation ( ) ; 
 } 
 
 - @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 - if ( child instanceof ElseHandler ) { 
 - return getLevel ( ) ; 
 - } 
 - return super . suggestedChildLevel ( child ) ; 
 - } 
 - 
 / * * 
 * Returns right parenthesis of for - loop statement . 
 * @ param literalForAst
