BLEU SCORE: 0.1640212036255557

TEST MSG: config : bump checkstyle maven plugin to 3 . 0 . 0
GENERATED MSG: config : bump sevntu . checkstyle version to 1 . 26 . 0

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 12305a8 . . d1ce716 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 219 , 7 + 219 , 7 @ @ <nl> < pmd . version > 5 . 8 . 1 < / pmd . version > <nl> < maven . jacoco . plugin . version > 0 . 7 . 9 < / maven . jacoco . plugin . version > <nl> < saxon . version > 9 . 8 . 0 - 7 < / saxon . version > <nl> - < maven . checkstyle . plugin . version > 2 . 17 < / maven . checkstyle . plugin . version > <nl> + < maven . checkstyle . plugin . version > 3 . 0 . 0 < / maven . checkstyle . plugin . version > <nl> < maven . sevntu . checkstyle . plugin . version > 1 . 26 . 0 < / maven . sevntu . checkstyle . plugin . version > <nl> < maven . sevntu - checkstyle - check . checkstyle . version > 8 . 5 < / maven . sevntu - checkstyle - check . checkstyle . version > <nl> < maven . versions . plugin . version > 2 . 5 < / maven . versions . plugin . version > <nl> @ @ - 586 , 7 + 586 , 9 @ @ <nl> < maxAllowedViolations > 0 < / maxAllowedViolations > <nl> < violationSeverity > error < / violationSeverity > <nl> < propertyExpansion > project . basedir = $ { project . basedir } < / propertyExpansion > <nl> - < sourceDirectory > $ { project . basedir } / src < / sourceDirectory > <nl> + < sourceDirectories > <nl> + < sourceDirectory > $ { project . basedir } / src < / sourceDirectory > <nl> + < / sourceDirectories > <nl> < excludes > * * / it / resources / * * / * , * * / test / resources / * * / * , * * / test / resources - noncompilable / * * / * < / excludes > <nl> < / configuration > <nl> < goals >
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java <nl> index 2aafd1e . . c1b6aec 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java <nl> @ @ - 80 , 6 + 80 , 27 @ @ public class TrailingCommentCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testFormat ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( TrailingCommentCheck . class ) ; <nl> + checkConfig . addAttribute ( " format " , " NOT MATCH " ) ; <nl> + final String [ ] expected = { <nl> + " 4 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 5 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 6 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 7 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 8 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 13 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 14 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 15 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 18 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 19 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 26 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputTrailingComment . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testCallVisitToken ( ) { <nl> final TrailingCommentCheck check = new TrailingCommentCheck ( ) ; <nl> try {

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 12305a8 . . d1ce716 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 219 , 7 + 219 , 7 @ @ 
 < pmd . version > 5 . 8 . 1 < / pmd . version > 
 < maven . jacoco . plugin . version > 0 . 7 . 9 < / maven . jacoco . plugin . version > 
 < saxon . version > 9 . 8 . 0 - 7 < / saxon . version > 
 - < maven . checkstyle . plugin . version > 2 . 17 < / maven . checkstyle . plugin . version > 
 + < maven . checkstyle . plugin . version > 3 . 0 . 0 < / maven . checkstyle . plugin . version > 
 < maven . sevntu . checkstyle . plugin . version > 1 . 26 . 0 < / maven . sevntu . checkstyle . plugin . version > 
 < maven . sevntu - checkstyle - check . checkstyle . version > 8 . 5 < / maven . sevntu - checkstyle - check . checkstyle . version > 
 < maven . versions . plugin . version > 2 . 5 < / maven . versions . plugin . version > 
 @ @ - 586 , 7 + 586 , 9 @ @ 
 < maxAllowedViolations > 0 < / maxAllowedViolations > 
 < violationSeverity > error < / violationSeverity > 
 < propertyExpansion > project . basedir = $ { project . basedir } < / propertyExpansion > 
 - < sourceDirectory > $ { project . basedir } / src < / sourceDirectory > 
 + < sourceDirectories > 
 + < sourceDirectory > $ { project . basedir } / src < / sourceDirectory > 
 + < / sourceDirectories > 
 < excludes > * * / it / resources / * * / * , * * / test / resources / * * / * , * * / test / resources - noncompilable / * * / * < / excludes > 
 < / configuration > 
 < goals >

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java 
 index 2aafd1e . . c1b6aec 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java 
 @ @ - 80 , 6 + 80 , 27 @ @ public class TrailingCommentCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testFormat ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( TrailingCommentCheck . class ) ; 
 + checkConfig . addAttribute ( " format " , " NOT MATCH " ) ; 
 + final String [ ] expected = { 
 + " 4 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 5 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 6 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 7 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 8 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 13 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 14 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 15 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 18 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 19 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 26 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputTrailingComment . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testCallVisitToken ( ) { 
 final TrailingCommentCheck check = new TrailingCommentCheck ( ) ; 
 try {
