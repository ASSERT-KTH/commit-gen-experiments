BLEU SCORE: 0.028398387225677897

TEST MSG: Issue # 2633 : Fix GenericWhitespace to not trigger error when it ends line
GENERATED MSG: Fixed false - positive in GenericWhitespaceCheck issue # 51

TEST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / GenericWhitespaceTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / GenericWhitespaceTest . java <nl> index 485520d . . 31431e5 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / GenericWhitespaceTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / GenericWhitespaceTest . java <nl> @ @ - 109 , 4 + 109 , 13 @ @ public class GenericWhitespaceTest extends BaseCheckTestSupport { <nl> final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void genericEndsTheLine ( ) throws Exception { <nl> + final Configuration checkConfig = getCheckConfig ( " GenericWhitespace " ) ; <nl> + final String [ ] expected = { <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputGenericWhitespaceEndsTheLine . java " ) , <nl> + expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputGenericWhitespaceEndsTheLine . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputGenericWhitespaceEndsTheLine . java <nl> new file mode 100644 <nl> index 0000000 . . bb95939 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputGenericWhitespaceEndsTheLine . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + package com . google . checkstyle . test . chapter4formatting . rule462horizontalwhitespace ; <nl> + <nl> + public class InputGenericWhitespaceEndsTheLine { <nl> + public boolean returnsGenericObjectAtEndOfLine ( Object otherObject ) { <nl> + return otherObject instanceof Enum < ? > ; <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> index 1e5125e . . be2edd8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> @ @ - 302 , 7 + 302 , 7 @ @ public class GenericWhitespaceCheck extends Check { <nl> } <nl> <nl> / * * <nl> - * Checks whether given character is valid to be right after generic ends <nl> + * Checks whether given character is valid to be right after generic ends . <nl> * @ param charAfter character to check <nl> * @ return checks if given character is valid <nl> * / <nl> @ @ - 310 , 6 + 310 , 7 @ @ public class GenericWhitespaceCheck extends Check { <nl> return Character . isWhitespace ( charAfter ) <nl> | | charAfter = = ' ( ' | | charAfter = = ' ) ' <nl> | | charAfter = = ' , ' | | charAfter = = ' [ ' <nl> - | | charAfter = = ' . ' | | charAfter = = ' : ' ; <nl> + | | charAfter = = ' . ' | | charAfter = = ' : ' <nl> + | | charAfter = = ' ; ' ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java <nl> index 929f9f5 . . 2f1d9fa 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java <nl> @ @ - 137 , 6 + 137 , 13 @ @ public class GenericWhitespaceCheckTest <nl> } <nl> <nl> @ Test <nl> + public void testGenericEndsTheLine ( ) throws Exception { <nl> + final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , getNonCompilablePath ( " InputGenericWhitespaceEndsTheLine . java " ) , <nl> + expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testGetAcceptableTokens ( ) { <nl> final GenericWhitespaceCheck genericWhitespaceCheckObj = new GenericWhitespaceCheck ( ) ; <nl> final int [ ] actual = genericWhitespaceCheckObj . getAcceptableTokens ( ) ; <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / whitespace / InputGenericWhitespaceEndsTheLine . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / whitespace / InputGenericWhitespaceEndsTheLine . java <nl> new file mode 100644 <nl> index 0000000 . . 6605453 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / whitespace / InputGenericWhitespaceEndsTheLine . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> + <nl> + public class InputGenericWhitespaceEndsTheLine { <nl> + public boolean returnsGenericObjectAtEndOfLine ( Object otherObject ) { <nl> + return otherObject instanceof Enum < ? > ; <nl> + } <nl> + } <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java <nl> index 903cc9a . . f29453a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java <nl> @ @ - 18 , 6 + 18 , 8 @ @ <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> package com . puppycrawl . tools . checkstyle . checks . modifier ; <nl> <nl> + import java . io . File ; <nl> + <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> @ @ - 50 , 7 + 52 , 8 @ @ public class ModifierOrderCheckTest <nl> createCheckConfig ( ModifierOrderCheck . class ) ; <nl> final String [ ] expected = { <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputModifier2 . java " ) , expected ) ; <nl> + verify ( checkConfig , new File ( " src / test / resources - noncompilable / com / puppycrawl / tools " <nl> + + " / checkstyle / InputModifier2 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / InputModifier2 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / InputModifier2 . java <nl> new file mode 100644 <nl> index 0000000 . . d5bb36d <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / InputModifier2 . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + import java . util . Comparator ; <nl> + public interface InputModifier2 extends Comparator < Integer > { <nl> + @ Override <nl> + default int compare ( Integer a , Integer b ) { <nl> + return 0 ; <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputModifier2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputModifier2 . java <nl> deleted file mode 100644 <nl> index 9516999 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputModifier2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - public interface InputModifier2 extends Comparator < Integer > { <nl> - @ Override <nl> - default int compare ( Integer a , Integer b ) { <nl> - return 0 ; <nl> - } <nl> - } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / GenericWhitespaceTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / GenericWhitespaceTest . java 
 index 485520d . . 31431e5 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / GenericWhitespaceTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / GenericWhitespaceTest . java 
 @ @ - 109 , 4 + 109 , 13 @ @ public class GenericWhitespaceTest extends BaseCheckTestSupport { 
 final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 + 
 + @ Test 
 + public void genericEndsTheLine ( ) throws Exception { 
 + final Configuration checkConfig = getCheckConfig ( " GenericWhitespace " ) ; 
 + final String [ ] expected = { 
 + } ; 
 + verify ( checkConfig , getPath ( " InputGenericWhitespaceEndsTheLine . java " ) , 
 + expected ) ; 
 + } 
 } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputGenericWhitespaceEndsTheLine . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputGenericWhitespaceEndsTheLine . java 
 new file mode 100644 
 index 0000000 . . bb95939 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputGenericWhitespaceEndsTheLine . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + package com . google . checkstyle . test . chapter4formatting . rule462horizontalwhitespace ; 
 + 
 + public class InputGenericWhitespaceEndsTheLine { 
 + public boolean returnsGenericObjectAtEndOfLine ( Object otherObject ) { 
 + return otherObject instanceof Enum < ? > ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 index 1e5125e . . be2edd8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 @ @ - 302 , 7 + 302 , 7 @ @ public class GenericWhitespaceCheck extends Check { 
 } 
 
 / * * 
 - * Checks whether given character is valid to be right after generic ends 
 + * Checks whether given character is valid to be right after generic ends . 
 * @ param charAfter character to check 
 * @ return checks if given character is valid 
 * / 
 @ @ - 310 , 6 + 310 , 7 @ @ public class GenericWhitespaceCheck extends Check { 
 return Character . isWhitespace ( charAfter ) 
 | | charAfter = = ' ( ' | | charAfter = = ' ) ' 
 | | charAfter = = ' , ' | | charAfter = = ' [ ' 
 - | | charAfter = = ' . ' | | charAfter = = ' : ' ; 
 + | | charAfter = = ' . ' | | charAfter = = ' : ' 
 + | | charAfter = = ' ; ' ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java 
 index 929f9f5 . . 2f1d9fa 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java 
 @ @ - 137 , 6 + 137 , 13 @ @ public class GenericWhitespaceCheckTest 
 } 
 
 @ Test 
 + public void testGenericEndsTheLine ( ) throws Exception { 
 + final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , getNonCompilablePath ( " InputGenericWhitespaceEndsTheLine . java " ) , 
 + expected ) ; 
 + } 
 + 
 + @ Test 
 public void testGetAcceptableTokens ( ) { 
 final GenericWhitespaceCheck genericWhitespaceCheckObj = new GenericWhitespaceCheck ( ) ; 
 final int [ ] actual = genericWhitespaceCheckObj . getAcceptableTokens ( ) ; 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / whitespace / InputGenericWhitespaceEndsTheLine . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / whitespace / InputGenericWhitespaceEndsTheLine . java 
 new file mode 100644 
 index 0000000 . . 6605453 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / whitespace / InputGenericWhitespaceEndsTheLine . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 + 
 + public class InputGenericWhitespaceEndsTheLine { 
 + public boolean returnsGenericObjectAtEndOfLine ( Object otherObject ) { 
 + return otherObject instanceof Enum < ? > ; 
 + } 
 + } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java 
 index 903cc9a . . f29453a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java 
 @ @ - 18 , 6 + 18 , 8 @ @ 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 package com . puppycrawl . tools . checkstyle . checks . modifier ; 
 
 + import java . io . File ; 
 + 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 @ @ - 50 , 7 + 52 , 8 @ @ public class ModifierOrderCheckTest 
 createCheckConfig ( ModifierOrderCheck . class ) ; 
 final String [ ] expected = { 
 } ; 
 - verify ( checkConfig , getPath ( " InputModifier2 . java " ) , expected ) ; 
 + verify ( checkConfig , new File ( " src / test / resources - noncompilable / com / puppycrawl / tools " 
 + + " / checkstyle / InputModifier2 . java " ) . getCanonicalPath ( ) , expected ) ; 
 } 
 
 } 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / InputModifier2 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / InputModifier2 . java 
 new file mode 100644 
 index 0000000 . . d5bb36d 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / InputModifier2 . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle ; 
 + import java . util . Comparator ; 
 + public interface InputModifier2 extends Comparator < Integer > { 
 + @ Override 
 + default int compare ( Integer a , Integer b ) { 
 + return 0 ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputModifier2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputModifier2 . java 
 deleted file mode 100644 
 index 9516999 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputModifier2 . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - public interface InputModifier2 extends Comparator < Integer > { 
 - @ Override 
 - default int compare ( Integer a , Integer b ) { 
 - return 0 ; 
 - } 
 - } 
 \ No newline at end of file
