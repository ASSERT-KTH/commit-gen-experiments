BLEU SCORE: 0.08295193507109855

TEST MSG: Issue # 3701 : removed backspace from google ' s IllegalTokenText
GENERATED MSG: Issue # 2792 : Include InterfaceTypeParameterName into Config of Google Style

TEST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / IllegalTokenTextTest . java b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / IllegalTokenTextTest . java <nl> index 58b67c1 . . 01bbca0 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / IllegalTokenTextTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / IllegalTokenTextTest . java <nl> @ @ - 39 , 13 + 39 , 11 @ @ public class IllegalTokenTextTest extends BaseCheckTestSupport { <nl> public void illegalTokensTest ( ) throws Exception { <nl> <nl> final String [ ] expected = { <nl> - " 17 : 27 : Avoid using corresponding octal or Unicode escape . " , <nl> " 18 : 27 : Avoid using corresponding octal or Unicode escape . " , <nl> " 19 : 27 : Avoid using corresponding octal or Unicode escape . " , <nl> " 22 : 25 : Avoid using corresponding octal or Unicode escape . " , <nl> " 23 : 25 : Avoid using corresponding octal or Unicode escape . " , <nl> " 25 : 16 : Avoid using corresponding octal or Unicode escape . " , <nl> - " 42 : 21 : Avoid using corresponding octal or Unicode escape . " , <nl> " 43 : 21 : Avoid using corresponding octal or Unicode escape . " , <nl> " 44 : 21 : Avoid using corresponding octal or Unicode escape . " , <nl> " 45 : 21 : Avoid using corresponding octal or Unicode escape . " , <nl> @ @ - 61 , 13 + 59 , 11 @ @ public class IllegalTokenTextTest extends BaseCheckTestSupport { <nl> " 59 : 21 : Avoid using corresponding octal or Unicode escape . " , <nl> " 60 : 21 : Avoid using corresponding octal or Unicode escape . " , <nl> " 61 : 21 : Avoid using corresponding octal or Unicode escape . " , <nl> - " 68 : 31 : Avoid using corresponding octal or Unicode escape . " , <nl> " 69 : 31 : Avoid using corresponding octal or Unicode escape . " , <nl> " 70 : 31 : Avoid using corresponding octal or Unicode escape . " , <nl> " 73 : 29 : Avoid using corresponding octal or Unicode escape . " , <nl> " 74 : 29 : Avoid using corresponding octal or Unicode escape . " , <nl> " 76 : 20 : Avoid using corresponding octal or Unicode escape . " , <nl> - " 93 : 25 : Avoid using corresponding octal or Unicode escape . " , <nl> " 94 : 25 : Avoid using corresponding octal or Unicode escape . " , <nl> " 95 : 25 : Avoid using corresponding octal or Unicode escape . " , <nl> " 96 : 25 : Avoid using corresponding octal or Unicode escape . " , <nl> @ @ - 83 , 13 + 79 , 11 @ @ public class IllegalTokenTextTest extends BaseCheckTestSupport { <nl> " 110 : 25 : Avoid using corresponding octal or Unicode escape . " , <nl> " 111 : 25 : Avoid using corresponding octal or Unicode escape . " , <nl> " 112 : 25 : Avoid using corresponding octal or Unicode escape . " , <nl> - " 118 : 35 : Avoid using corresponding octal or Unicode escape . " , <nl> " 119 : 35 : Avoid using corresponding octal or Unicode escape . " , <nl> " 120 : 35 : Avoid using corresponding octal or Unicode escape . " , <nl> " 123 : 33 : Avoid using corresponding octal or Unicode escape . " , <nl> " 124 : 33 : Avoid using corresponding octal or Unicode escape . " , <nl> " 126 : 24 : Avoid using corresponding octal or Unicode escape . " , <nl> - " 143 : 29 : Avoid using corresponding octal or Unicode escape . " , <nl> " 144 : 29 : Avoid using corresponding octal or Unicode escape . " , <nl> " 145 : 29 : Avoid using corresponding octal or Unicode escape . " , <nl> " 146 : 29 : Avoid using corresponding octal or Unicode escape . " , <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / InputIllegalTokenText . java b / src / it / resources / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / InputIllegalTokenText . java <nl> index 54681e8 . . 291f0f3 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / InputIllegalTokenText . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / InputIllegalTokenText . java <nl> @ @ - 14 , 7 + 14 , 7 @ @ public class InputIllegalTokenText <nl> <nl> public String wrongEscapeSequences ( ) <nl> { <nl> - final String r1 = " \ u0008 " ; / / warn <nl> + final String r1 = " \ u0008 " ; / / ok <nl> final String r2 = " \ u0009 " ; / / warn <nl> final String r3 = " \ u000csssdfsd " ; / / warn <nl> final String r4 = " \ u1111sdfsd \ 444 " ; / / ok <nl> @ @ - 39 , 7 + 39 , 7 @ @ public class InputIllegalTokenText <nl> <nl> public void specialCharsWithWarn ( ) <nl> { <nl> - String r1 = " \ \ u0008 " ; / / warn <nl> + String r1 = " \ \ u0008 " ; / / ok <nl> String r2 = " \ \ u0009 " ; / / warn <nl> String r3 = " \ \ u000a " ; / / warn <nl> String r4 = " \ \ u000c " ; / / warn <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class InputIllegalTokenText <nl> { <nl> public String wrongEscapeSequences ( ) <nl> { <nl> - final String r1 = " \ u0008 " ; / / warn <nl> + final String r1 = " \ u0008 " ; / / ok <nl> final String r2 = " \ u0009 " ; / / warn <nl> final String r3 = " \ u000csssdfsd " ; / / warn <nl> final String r4 = " \ u1111sdfsd \ 444 " ; / / ok <nl> @ @ - 90 , 7 + 90 , 7 @ @ public class InputIllegalTokenText <nl> <nl> public void specialCharsWithWarn ( ) <nl> { <nl> - String r1 = " \ \ u0008 " ; / / warn <nl> + String r1 = " \ \ u0008 " ; / / ok <nl> String r2 = " \ \ u0009 " ; / / warn <nl> String r3 = " \ \ u000a " ; / / warn <nl> String r4 = " \ \ u000c " ; / / warn <nl> @ @ - 115 , 7 + 115 , 7 @ @ public class InputIllegalTokenText <nl> Inner anoInner = new Inner ( ) { <nl> public String wrongEscapeSequences ( ) <nl> { <nl> - final String r1 = " \ u0008 " ; / / warn <nl> + final String r1 = " \ u0008 " ; / / ok <nl> final String r2 = " \ u0009 " ; / / warn <nl> final String r3 = " \ u000csssdfsd " ; / / warn <nl> final String r4 = " \ u1111sdfsd \ 444 " ; / / ok <nl> @ @ - 140 , 7 + 140 , 7 @ @ public class InputIllegalTokenText <nl> <nl> public void specialCharsWithWarn ( ) <nl> { <nl> - String r1 = " \ \ u0008 " ; / / warn <nl> + String r1 = " \ \ u0008 " ; / / ok <nl> String r2 = " \ \ u0009 " ; / / warn <nl> String r3 = " \ \ u000a " ; / / warn <nl> String r4 = " \ \ u000c " ; / / warn <nl> diff - - git a / src / main / resources / google _ checks . xml b / src / main / resources / google _ checks . xml <nl> index d3fe68e . . e618f10 100644 <nl> - - - a / src / main / resources / google _ checks . xml <nl> + + + b / src / main / resources / google _ checks . xml <nl> @ @ - 31 , 7 + 31 , 7 @ @ <nl> < module name = " OuterTypeFilename " / > <nl> < module name = " IllegalTokenText " > <nl> < property name = " tokens " value = " STRING _ LITERAL , CHAR _ LITERAL " / > <nl> - < property name = " format " value = " \ \ u00 ( 08 | 09 | 0 ( a | A ) | 0 ( c | C ) | 0 ( d | D ) | 22 | 27 | 5 ( C | c ) ) | \ \ ( 0 ( 10 | 11 | 12 | 14 | 15 | 42 | 47 ) | 134 ) " / > <nl> + < property name = " format " value = " \ \ u00 ( 09 | 0 ( a | A ) | 0 ( c | C ) | 0 ( d | D ) | 22 | 27 | 5 ( C | c ) ) | \ \ ( 0 ( 10 | 11 | 12 | 14 | 15 | 42 | 47 ) | 134 ) " / > <nl> < property name = " message " value = " Avoid using corresponding octal or Unicode escape . " / > <nl> < / module > <nl> < module name = " AvoidEscapedUnicodeCharacters " >
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> index 920a577 . . 378fd4f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> - import static org . hamcrest . CoreMatchers . anyOf ; <nl> + import static org . hamcrest . CoreMatchers . containsString ; <nl> import static org . hamcrest . CoreMatchers . instanceOf ; <nl> import static org . hamcrest . core . StringEndsWith . endsWith ; <nl> import static org . junit . Assert . assertEquals ; <nl> @ @ - 73 , 8 + 73 , 7 @ @ public class PropertyCacheFileTest { <nl> fail ( " FileNotFoundException is expected , since access to the file was denied ! " ) ; <nl> } <nl> catch ( FileNotFoundException ex ) { <nl> - assertThat ( ex . getMessage ( ) , anyOf ( endsWith ( " file . output ( Permission denied ) " ) , <nl> - endsWith ( " file . output ( Access is denied ) " ) ) ) ; <nl> + assertThat ( ex . getMessage ( ) , containsString ( " file . output " ) ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / IllegalTokenTextTest . java b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / IllegalTokenTextTest . java 
 index 58b67c1 . . 01bbca0 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / IllegalTokenTextTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / IllegalTokenTextTest . java 
 @ @ - 39 , 13 + 39 , 11 @ @ public class IllegalTokenTextTest extends BaseCheckTestSupport { 
 public void illegalTokensTest ( ) throws Exception { 
 
 final String [ ] expected = { 
 - " 17 : 27 : Avoid using corresponding octal or Unicode escape . " , 
 " 18 : 27 : Avoid using corresponding octal or Unicode escape . " , 
 " 19 : 27 : Avoid using corresponding octal or Unicode escape . " , 
 " 22 : 25 : Avoid using corresponding octal or Unicode escape . " , 
 " 23 : 25 : Avoid using corresponding octal or Unicode escape . " , 
 " 25 : 16 : Avoid using corresponding octal or Unicode escape . " , 
 - " 42 : 21 : Avoid using corresponding octal or Unicode escape . " , 
 " 43 : 21 : Avoid using corresponding octal or Unicode escape . " , 
 " 44 : 21 : Avoid using corresponding octal or Unicode escape . " , 
 " 45 : 21 : Avoid using corresponding octal or Unicode escape . " , 
 @ @ - 61 , 13 + 59 , 11 @ @ public class IllegalTokenTextTest extends BaseCheckTestSupport { 
 " 59 : 21 : Avoid using corresponding octal or Unicode escape . " , 
 " 60 : 21 : Avoid using corresponding octal or Unicode escape . " , 
 " 61 : 21 : Avoid using corresponding octal or Unicode escape . " , 
 - " 68 : 31 : Avoid using corresponding octal or Unicode escape . " , 
 " 69 : 31 : Avoid using corresponding octal or Unicode escape . " , 
 " 70 : 31 : Avoid using corresponding octal or Unicode escape . " , 
 " 73 : 29 : Avoid using corresponding octal or Unicode escape . " , 
 " 74 : 29 : Avoid using corresponding octal or Unicode escape . " , 
 " 76 : 20 : Avoid using corresponding octal or Unicode escape . " , 
 - " 93 : 25 : Avoid using corresponding octal or Unicode escape . " , 
 " 94 : 25 : Avoid using corresponding octal or Unicode escape . " , 
 " 95 : 25 : Avoid using corresponding octal or Unicode escape . " , 
 " 96 : 25 : Avoid using corresponding octal or Unicode escape . " , 
 @ @ - 83 , 13 + 79 , 11 @ @ public class IllegalTokenTextTest extends BaseCheckTestSupport { 
 " 110 : 25 : Avoid using corresponding octal or Unicode escape . " , 
 " 111 : 25 : Avoid using corresponding octal or Unicode escape . " , 
 " 112 : 25 : Avoid using corresponding octal or Unicode escape . " , 
 - " 118 : 35 : Avoid using corresponding octal or Unicode escape . " , 
 " 119 : 35 : Avoid using corresponding octal or Unicode escape . " , 
 " 120 : 35 : Avoid using corresponding octal or Unicode escape . " , 
 " 123 : 33 : Avoid using corresponding octal or Unicode escape . " , 
 " 124 : 33 : Avoid using corresponding octal or Unicode escape . " , 
 " 126 : 24 : Avoid using corresponding octal or Unicode escape . " , 
 - " 143 : 29 : Avoid using corresponding octal or Unicode escape . " , 
 " 144 : 29 : Avoid using corresponding octal or Unicode escape . " , 
 " 145 : 29 : Avoid using corresponding octal or Unicode escape . " , 
 " 146 : 29 : Avoid using corresponding octal or Unicode escape . " , 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / InputIllegalTokenText . java b / src / it / resources / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / InputIllegalTokenText . java 
 index 54681e8 . . 291f0f3 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / InputIllegalTokenText . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter2filebasic / rule232specialescape / InputIllegalTokenText . java 
 @ @ - 14 , 7 + 14 , 7 @ @ public class InputIllegalTokenText 
 
 public String wrongEscapeSequences ( ) 
 { 
 - final String r1 = " \ u0008 " ; / / warn 
 + final String r1 = " \ u0008 " ; / / ok 
 final String r2 = " \ u0009 " ; / / warn 
 final String r3 = " \ u000csssdfsd " ; / / warn 
 final String r4 = " \ u1111sdfsd \ 444 " ; / / ok 
 @ @ - 39 , 7 + 39 , 7 @ @ public class InputIllegalTokenText 
 
 public void specialCharsWithWarn ( ) 
 { 
 - String r1 = " \ \ u0008 " ; / / warn 
 + String r1 = " \ \ u0008 " ; / / ok 
 String r2 = " \ \ u0009 " ; / / warn 
 String r3 = " \ \ u000a " ; / / warn 
 String r4 = " \ \ u000c " ; / / warn 
 @ @ - 65 , 7 + 65 , 7 @ @ public class InputIllegalTokenText 
 { 
 public String wrongEscapeSequences ( ) 
 { 
 - final String r1 = " \ u0008 " ; / / warn 
 + final String r1 = " \ u0008 " ; / / ok 
 final String r2 = " \ u0009 " ; / / warn 
 final String r3 = " \ u000csssdfsd " ; / / warn 
 final String r4 = " \ u1111sdfsd \ 444 " ; / / ok 
 @ @ - 90 , 7 + 90 , 7 @ @ public class InputIllegalTokenText 
 
 public void specialCharsWithWarn ( ) 
 { 
 - String r1 = " \ \ u0008 " ; / / warn 
 + String r1 = " \ \ u0008 " ; / / ok 
 String r2 = " \ \ u0009 " ; / / warn 
 String r3 = " \ \ u000a " ; / / warn 
 String r4 = " \ \ u000c " ; / / warn 
 @ @ - 115 , 7 + 115 , 7 @ @ public class InputIllegalTokenText 
 Inner anoInner = new Inner ( ) { 
 public String wrongEscapeSequences ( ) 
 { 
 - final String r1 = " \ u0008 " ; / / warn 
 + final String r1 = " \ u0008 " ; / / ok 
 final String r2 = " \ u0009 " ; / / warn 
 final String r3 = " \ u000csssdfsd " ; / / warn 
 final String r4 = " \ u1111sdfsd \ 444 " ; / / ok 
 @ @ - 140 , 7 + 140 , 7 @ @ public class InputIllegalTokenText 
 
 public void specialCharsWithWarn ( ) 
 { 
 - String r1 = " \ \ u0008 " ; / / warn 
 + String r1 = " \ \ u0008 " ; / / ok 
 String r2 = " \ \ u0009 " ; / / warn 
 String r3 = " \ \ u000a " ; / / warn 
 String r4 = " \ \ u000c " ; / / warn 
 diff - - git a / src / main / resources / google _ checks . xml b / src / main / resources / google _ checks . xml 
 index d3fe68e . . e618f10 100644 
 - - - a / src / main / resources / google _ checks . xml 
 + + + b / src / main / resources / google _ checks . xml 
 @ @ - 31 , 7 + 31 , 7 @ @ 
 < module name = " OuterTypeFilename " / > 
 < module name = " IllegalTokenText " > 
 < property name = " tokens " value = " STRING _ LITERAL , CHAR _ LITERAL " / > 
 - < property name = " format " value = " \ \ u00 ( 08 | 09 | 0 ( a | A ) | 0 ( c | C ) | 0 ( d | D ) | 22 | 27 | 5 ( C | c ) ) | \ \ ( 0 ( 10 | 11 | 12 | 14 | 15 | 42 | 47 ) | 134 ) " / > 
 + < property name = " format " value = " \ \ u00 ( 09 | 0 ( a | A ) | 0 ( c | C ) | 0 ( d | D ) | 22 | 27 | 5 ( C | c ) ) | \ \ ( 0 ( 10 | 11 | 12 | 14 | 15 | 42 | 47 ) | 134 ) " / > 
 < property name = " message " value = " Avoid using corresponding octal or Unicode escape . " / > 
 < / module > 
 < module name = " AvoidEscapedUnicodeCharacters " >

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 index 920a577 . . 378fd4f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 - import static org . hamcrest . CoreMatchers . anyOf ; 
 + import static org . hamcrest . CoreMatchers . containsString ; 
 import static org . hamcrest . CoreMatchers . instanceOf ; 
 import static org . hamcrest . core . StringEndsWith . endsWith ; 
 import static org . junit . Assert . assertEquals ; 
 @ @ - 73 , 8 + 73 , 7 @ @ public class PropertyCacheFileTest { 
 fail ( " FileNotFoundException is expected , since access to the file was denied ! " ) ; 
 } 
 catch ( FileNotFoundException ex ) { 
 - assertThat ( ex . getMessage ( ) , anyOf ( endsWith ( " file . output ( Permission denied ) " ) , 
 - endsWith ( " file . output ( Access is denied ) " ) ) ) ; 
 + assertThat ( ex . getMessage ( ) , containsString ( " file . output " ) ) ; 
 } 
 } 

