BLEU SCORE: 0.7013967267997694

TEST MSG: Issue # 4582 : restored wercker xwiki
GENERATED MSG: Issue # 4582 : restored wercker hibernate search

TEST DIFF (one line): diff - - git a / wercker . yml b / wercker . yml <nl> index b084082 . . 9c9e2a4 100644 <nl> - - - a / wercker . yml <nl> + + + b / wercker . yml <nl> @ @ - 77 , 23 + 77 , 23 @ @ build : <nl> echo " build is skipped . . . " <nl> fi <nl> <nl> - # # NoErrorTest - XWiki ( oraclejdk8 ) <nl> - # - script : <nl> - # name : NoErrorTest - XWiki <nl> - # code : | <nl> - # if [ [ $ SKIP _ CI = = ' false ' ] ] ; then <nl> - # set - e <nl> - # CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> - # echo CS _ version : $ { CS _ POM _ VERSION } <nl> - # for i in 1 2 3 4 5 ; do git clone https : / / github . com / xwiki / xwiki - commons / & & break | | sleep 15 ; done <nl> - # cd xwiki - commons / xwiki - commons - core <nl> - # git checkout xwiki - commons - 8 . 2 - milestone - 1 <nl> - # mvn install - DskipTests - Dxwiki . clirr . skip = true checkstyle : check - Dcheckstyle . version = $ { CS _ POM _ VERSION } <nl> - # cd . . / . . / <nl> - # rm - rf xwiki - commons <nl> - # else <nl> - # echo " build is skipped . . . " <nl> - # fi <nl> + # NoErrorTest - XWiki ( oraclejdk8 ) <nl> + - script : <nl> + name : NoErrorTest - XWiki <nl> + code : | <nl> + if [ [ $ SKIP _ CI = = ' false ' ] ] ; then <nl> + set - e <nl> + CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + echo CS _ version : $ { CS _ POM _ VERSION } <nl> + for i in 1 2 3 4 5 ; do git clone https : / / github . com / xwiki / xwiki - commons / & & break | | sleep 15 ; done <nl> + cd xwiki - commons <nl> + git checkout 3bdb59d3c7fe776deed44f6818278f70d3030ecb <nl> + mvn install - DskipTests - Dxwiki . clirr . skip = true checkstyle : check - Dcheckstyle . version = $ { CS _ POM _ VERSION } <nl> + cd . . / . . / <nl> + rm - rf xwiki - commons <nl> + else <nl> + echo " build is skipped . . . " <nl> + fi <nl> <nl> # NoErrorTest - Apache Apex ( oraclejdk8 ) <nl> - script :
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / BlockOption . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / BlockOption . java <nl> index b90be62 . . d0b7ec8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / BlockOption . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / BlockOption . java <nl> @ @ - 46 , 5 + 46 , 5 @ @ public enum BlockOption { <nl> * } <nl> * < / pre > <nl> * / <nl> - STMT <nl> + STATEMENT <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> index d973149 . . e3e1a7e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> / * * <nl> * Checks for empty blocks . This check does not validate sequential blocks . <nl> * The policy to verify is specified using the { @ link <nl> - * BlockOption } class and defaults to { @ link BlockOption # STMT } . <nl> + * BlockOption } class and defaults to { @ link BlockOption # STATEMENT } . <nl> * <nl> * < p > By default the check will check the following blocks : <nl> * { @ link TokenTypes # LITERAL _ WHILE LITERAL _ WHILE } , <nl> @ @ - 69 , 7 + 69 , 7 @ @ public class EmptyBlockCheck <nl> * A key is pointing to the warning message text in " messages . properties " <nl> * file . <nl> * / <nl> - public static final String MSG _ KEY _ BLOCK _ NO _ STMT = " block . noStmt " ; <nl> + public static final String MSG _ KEY _ BLOCK _ NO _ STATEMENT = " block . noStatement " ; <nl> <nl> / * * <nl> * A key is pointing to the warning message text in " messages . properties " <nl> @ @ - 78 , 7 + 78 , 7 @ @ public class EmptyBlockCheck <nl> public static final String MSG _ KEY _ BLOCK _ EMPTY = " block . empty " ; <nl> <nl> / * * The policy to enforce . * / <nl> - private BlockOption option = BlockOption . STMT ; <nl> + private BlockOption option = BlockOption . STATEMENT ; <nl> <nl> / * * <nl> * Set the option to enforce . <nl> @ @ - 141 , 7 + 141 , 7 @ @ public class EmptyBlockCheck <nl> public void visitToken ( DetailAST ast ) { <nl> final DetailAST leftCurly = findLeftCurly ( ast ) ; <nl> if ( leftCurly ! = null ) { <nl> - if ( option = = BlockOption . STMT ) { <nl> + if ( option = = BlockOption . STATEMENT ) { <nl> final boolean emptyBlock ; <nl> if ( leftCurly . getType ( ) = = TokenTypes . LCURLY ) { <nl> emptyBlock = leftCurly . getNextSibling ( ) . getType ( ) ! = TokenTypes . CASE _ GROUP ; <nl> @ @ - 152 , 7 + 152 , 7 @ @ public class EmptyBlockCheck <nl> if ( emptyBlock ) { <nl> log ( leftCurly . getLineNo ( ) , <nl> leftCurly . getColumnNo ( ) , <nl> - MSG _ KEY _ BLOCK _ NO _ STMT , <nl> + MSG _ KEY _ BLOCK _ NO _ STATEMENT , <nl> ast . getText ( ) ) ; <nl> } <nl> } <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties <nl> index 2389f1b . . 24fe3dc 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> block . empty = Empty { 0 } block . <nl> block . nested = Avoid nested blocks . <nl> - block . noStmt = Must have at least one statement . <nl> + block . noStatement = Must have at least one statement . <nl> <nl> catch . block . empty = Empty catch block . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties <nl> index 2a96451 . . 56b7362 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> block . empty = Der Block ist leer : { 0 } <nl> block . nested = Verschachtelte Bl ö cke sollten vermieden werden . <nl> - block . noStmt = Ein Block muss mindestens eine Anweisung enthalten . <nl> + block . noStatement = Ein Block muss mindestens eine Anweisung enthalten . <nl> <nl> catch . block . empty = Der catch - Block ist leer . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties <nl> index c53cf8a . . c9898ba 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> block . empty = Bloque { 0 } vac í o . <nl> block . nested = Evitar bloques anidados . <nl> - block . noStmt = Debe tener al menos una sentencia . <nl> + block . noStatement = Debe tener al menos una sentencia . <nl> <nl> catch . block . empty = Bloque catch vac í o . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties <nl> index 1167353 . . 563169b 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> block . empty = Tyhj ä { 0 } - rakenne . <nl> block . nested = Avoid nested blocks . <nl> - block . noStmt = Pit ä ä olla ainakin yksi lause . <nl> + block . noStatement = Pit ä ä olla ainakin yksi lause . <nl> <nl> catch . block . empty = Tyhj ä catch - rakenne . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties <nl> index 51a253a . . 02dcb63 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> block . empty = Bloc ' ' { 0 } ' ' vide . <nl> block . nested = É vitez d ' ' imbriquer les blocs . <nl> - block . noStmt = Le bloc devrait contenir au moins une instruction . <nl> + block . noStatement = Le bloc devrait contenir au moins une instruction . <nl> <nl> catch . block . empty = Bloc catch vide . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties <nl> index 22b93db . . f406f2c 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> block . empty = 空 の { 0 } ブ ロ ッ ク で す 。 <nl> block . nested = ネ ス ト し た ブ ロ ッ ク は 避 け て く だ さ い 。 <nl> - block . noStmt = 少 な く と も 文 が 1 つ は 必 要 で す 。 <nl> + block . noStatement = 少 な く と も 文 が 1 つ は 必 要 で す 。 <nl> <nl> catch . block . empty = 空 の catch ブ ロ ッ ク で す 。 <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties <nl> index 520a005 . . 3577a57 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> block . empty = Block { 0 } vazio . <nl> block . nested = Avoid nested blocks . <nl> - block . noStmt = Tem que ter pelo menos uma instru ç ã o . <nl> + block . noStatement = Tem que ter pelo menos uma instru ç ã o . <nl> <nl> catch . block . empty = Bloco catch vazio . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties <nl> index 5ba5c29 . . 3cbff25 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties <nl> @ @ - 2 , 7 + 2 , 7 @ @ <nl> <nl> block . empty = Bo ş blok bulundu : { 0 } <nl> block . nested = İ ç i ç e bloklar kullan ı lmamal ı d ı r . <nl> - block . noStmt = Blok en az bir ifade i ç ermeli . <nl> + block . noStatement = Blok en az bir ifade i ç ermeli . <nl> <nl> catch . block . empty = Bo ş catch blo ğ u . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties <nl> index b439211 . . 62015cd 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> block . empty = 空 { 0 } 块 。 <nl> block . nested = 避 免 内 嵌 块 。 <nl> - block . noStmt = 块 中 应 至 少 有 一 条 代 码 语 句 。 <nl> + block . noStatement = 块 中 应 至 少 有 一 条 代 码 语 句 。 <nl> <nl> catch . block . empty = 空 catch 块 。 <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java <nl> index 146d734 . . 826d344 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . blocks ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . blocks . EmptyBlockCheck . MSG _ KEY _ BLOCK _ EMPTY ; <nl> - import static com . puppycrawl . tools . checkstyle . checks . blocks . EmptyBlockCheck . MSG _ KEY _ BLOCK _ NO _ STMT ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . blocks . EmptyBlockCheck . MSG _ KEY _ BLOCK _ NO _ STATEMENT ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> @ @ - 61 , 14 + 61 , 14 @ @ public class EmptyBlockCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( EmptyBlockCheck . class ) ; <nl> final String [ ] expected = { <nl> - " 33 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 35 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 37 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 40 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 63 : 5 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 71 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 73 : 41 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 84 : 12 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> + " 33 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 35 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 37 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 40 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 63 : 5 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 71 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 73 : 41 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 84 : 12 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputEmptyBlockSemantic . java " ) , expected ) ; <nl> } <nl> @ @ - 94 , 16 + 94 , 16 @ @ public class EmptyBlockCheckTest <nl> throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( EmptyBlockCheck . class ) ; <nl> - checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " option " , BlockOption . STATEMENT . toString ( ) ) ; <nl> final String [ ] expected = { <nl> - " 33 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 35 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 37 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 40 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 63 : 5 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 71 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 73 : 41 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 84 : 12 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> + " 33 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 35 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 37 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 40 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 63 : 5 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 71 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 73 : 41 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 84 : 12 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputEmptyBlockSemantic . java " ) , expected ) ; <nl> } <nl> @ @ - 112 , 15 + 112 , 15 @ @ public class EmptyBlockCheckTest <nl> public void allowEmptyLoops ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( EmptyBlockCheck . class ) ; <nl> - checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " option " , BlockOption . STATEMENT . toString ( ) ) ; <nl> checkConfig . addAttribute ( " tokens " , " LITERAL _ TRY , LITERAL _ CATCH , " <nl> + " LITERAL _ FINALLY , LITERAL _ DO , LITERAL _ IF , " <nl> + " LITERAL _ ELSE , INSTANCE _ INIT , STATIC _ INIT , LITERAL _ SWITCH " ) ; <nl> final String [ ] expected = { <nl> - " 16 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 19 : 42 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 22 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> - " 23 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , <nl> + " 16 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 19 : 42 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 22 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> + " 23 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputEmptyBlockSemantic2 . java " ) , expected ) ; <nl> } <nl> @ @ - 178 , 16 + 178 , 16 @ @ public class EmptyBlockCheckTest <nl> @ Test <nl> public void testForbidCaseWithoutStmt ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( EmptyBlockCheck . class ) ; <nl> - checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " option " , BlockOption . STATEMENT . toString ( ) ) ; <nl> checkConfig . addAttribute ( " tokens " , " LITERAL _ CASE " ) ; <nl> final String [ ] expected = { <nl> - " 12 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> - " 18 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> - " 22 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> - " 29 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> - " 31 : 37 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> - " 32 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> - " 32 : 40 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> + " 12 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , <nl> + " 18 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , <nl> + " 22 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , <nl> + " 29 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , <nl> + " 31 : 37 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , <nl> + " 32 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , <nl> + " 32 : 40 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputEmptyBlockCase . java " ) , expected ) ; <nl> } <nl> @ @ - 211 , 18 + 211 , 18 @ @ public class EmptyBlockCheckTest <nl> @ Test <nl> public void testForbidDefaultWithoutStatement ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( EmptyBlockCheck . class ) ; <nl> - checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " option " , BlockOption . STATEMENT . toString ( ) ) ; <nl> checkConfig . addAttribute ( " tokens " , " LITERAL _ DEFAULT " ) ; <nl> final String [ ] expected = { <nl> - " 5 : 30 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , <nl> - " 11 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , <nl> - " 15 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , <nl> - " 26 : 30 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , <nl> - " 36 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , <nl> - " 44 : 47 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , <nl> - " 50 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , <nl> - " 65 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , <nl> - " 78 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , <nl> + " 5 : 30 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , <nl> + " 11 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , <nl> + " 15 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , <nl> + " 26 : 30 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , <nl> + " 36 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , <nl> + " 44 : 47 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , <nl> + " 50 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , <nl> + " 65 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , <nl> + " 78 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputEmptyBlockDefault . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml <nl> index 13437d2 . . bb360d5 100644 <nl> - - - a / src / xdocs / config _ blocks . xml <nl> + + + b / src / xdocs / config _ blocks . xml <nl> @ @ - 193 , 7 + 193 , 7 @ @ switch ( a ) <nl> < td > option < / td > <nl> < td > policy on block contents < / td > <nl> < td > < a href = " property _ types . html # block " > block policy < / a > < / td > <nl> - < td > < code > stmt < / code > < / td > <nl> + < td > < code > statement < / code > < / td > <nl> < / tr > <nl> < tr > <nl> < td > tokens < / td > <nl> @ @ - 276 , 8 + 276 , 8 @ @ switch ( a ) <nl> block . empty < / a > <nl> < / li > <nl> < li > <nl> - < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources % 2Fcom % 2Fpuppycrawl % 2Ftools % 2Fcheckstyle % 2Fchecks % 2Fblocks + filename % 3Amessages * . properties + repo % 3Acheckstyle % 2Fcheckstyle + % 22block . noStmt % 22 " > <nl> - block . noStmt < / a > <nl> + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources % 2Fcom % 2Fpuppycrawl % 2Ftools % 2Fcheckstyle % 2Fchecks % 2Fblocks + filename % 3Amessages * . properties + repo % 3Acheckstyle % 2Fcheckstyle + % 22block . noStatement % 22 " > <nl> + block . noStatement < / a > <nl> < / li > <nl> < / ul > <nl> < p > <nl> diff - - git a / src / xdocs / property _ types . xml b / src / xdocs / property _ types . xml <nl> index 2951579 . . 7de339a 100644 <nl> - - - a / src / xdocs / property _ types . xml <nl> + + + b / src / xdocs / property _ types . xml <nl> @ @ - 202 , 7 + 202 , 7 @ @ <nl> < / td > <nl> < / tr > <nl> < tr > <nl> - < td > < code > stmt < / code > < / td > <nl> + < td > < code > statement < / code > < / td > <nl> < td > <nl> Require that there is a statement in the block . For example : <nl> < pre >

TEST DIFF:
diff - - git a / wercker . yml b / wercker . yml 
 index b084082 . . 9c9e2a4 100644 
 - - - a / wercker . yml 
 + + + b / wercker . yml 
 @ @ - 77 , 23 + 77 , 23 @ @ build : 
 echo " build is skipped . . . " 
 fi 
 
 - # # NoErrorTest - XWiki ( oraclejdk8 ) 
 - # - script : 
 - # name : NoErrorTest - XWiki 
 - # code : | 
 - # if [ [ $ SKIP _ CI = = ' false ' ] ] ; then 
 - # set - e 
 - # CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 - # echo CS _ version : $ { CS _ POM _ VERSION } 
 - # for i in 1 2 3 4 5 ; do git clone https : / / github . com / xwiki / xwiki - commons / & & break | | sleep 15 ; done 
 - # cd xwiki - commons / xwiki - commons - core 
 - # git checkout xwiki - commons - 8 . 2 - milestone - 1 
 - # mvn install - DskipTests - Dxwiki . clirr . skip = true checkstyle : check - Dcheckstyle . version = $ { CS _ POM _ VERSION } 
 - # cd . . / . . / 
 - # rm - rf xwiki - commons 
 - # else 
 - # echo " build is skipped . . . " 
 - # fi 
 + # NoErrorTest - XWiki ( oraclejdk8 ) 
 + - script : 
 + name : NoErrorTest - XWiki 
 + code : | 
 + if [ [ $ SKIP _ CI = = ' false ' ] ] ; then 
 + set - e 
 + CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + echo CS _ version : $ { CS _ POM _ VERSION } 
 + for i in 1 2 3 4 5 ; do git clone https : / / github . com / xwiki / xwiki - commons / & & break | | sleep 15 ; done 
 + cd xwiki - commons 
 + git checkout 3bdb59d3c7fe776deed44f6818278f70d3030ecb 
 + mvn install - DskipTests - Dxwiki . clirr . skip = true checkstyle : check - Dcheckstyle . version = $ { CS _ POM _ VERSION } 
 + cd . . / . . / 
 + rm - rf xwiki - commons 
 + else 
 + echo " build is skipped . . . " 
 + fi 
 
 # NoErrorTest - Apache Apex ( oraclejdk8 ) 
 - script :

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / BlockOption . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / BlockOption . java 
 index b90be62 . . d0b7ec8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / BlockOption . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / BlockOption . java 
 @ @ - 46 , 5 + 46 , 5 @ @ public enum BlockOption { 
 * } 
 * < / pre > 
 * / 
 - STMT 
 + STATEMENT 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 index d973149 . . e3e1a7e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 @ @ - 29 , 7 + 29 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 / * * 
 * Checks for empty blocks . This check does not validate sequential blocks . 
 * The policy to verify is specified using the { @ link 
 - * BlockOption } class and defaults to { @ link BlockOption # STMT } . 
 + * BlockOption } class and defaults to { @ link BlockOption # STATEMENT } . 
 * 
 * < p > By default the check will check the following blocks : 
 * { @ link TokenTypes # LITERAL _ WHILE LITERAL _ WHILE } , 
 @ @ - 69 , 7 + 69 , 7 @ @ public class EmptyBlockCheck 
 * A key is pointing to the warning message text in " messages . properties " 
 * file . 
 * / 
 - public static final String MSG _ KEY _ BLOCK _ NO _ STMT = " block . noStmt " ; 
 + public static final String MSG _ KEY _ BLOCK _ NO _ STATEMENT = " block . noStatement " ; 
 
 / * * 
 * A key is pointing to the warning message text in " messages . properties " 
 @ @ - 78 , 7 + 78 , 7 @ @ public class EmptyBlockCheck 
 public static final String MSG _ KEY _ BLOCK _ EMPTY = " block . empty " ; 
 
 / * * The policy to enforce . * / 
 - private BlockOption option = BlockOption . STMT ; 
 + private BlockOption option = BlockOption . STATEMENT ; 
 
 / * * 
 * Set the option to enforce . 
 @ @ - 141 , 7 + 141 , 7 @ @ public class EmptyBlockCheck 
 public void visitToken ( DetailAST ast ) { 
 final DetailAST leftCurly = findLeftCurly ( ast ) ; 
 if ( leftCurly ! = null ) { 
 - if ( option = = BlockOption . STMT ) { 
 + if ( option = = BlockOption . STATEMENT ) { 
 final boolean emptyBlock ; 
 if ( leftCurly . getType ( ) = = TokenTypes . LCURLY ) { 
 emptyBlock = leftCurly . getNextSibling ( ) . getType ( ) ! = TokenTypes . CASE _ GROUP ; 
 @ @ - 152 , 7 + 152 , 7 @ @ public class EmptyBlockCheck 
 if ( emptyBlock ) { 
 log ( leftCurly . getLineNo ( ) , 
 leftCurly . getColumnNo ( ) , 
 - MSG _ KEY _ BLOCK _ NO _ STMT , 
 + MSG _ KEY _ BLOCK _ NO _ STATEMENT , 
 ast . getText ( ) ) ; 
 } 
 } 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties 
 index 2389f1b . . 24fe3dc 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 block . empty = Empty { 0 } block . 
 block . nested = Avoid nested blocks . 
 - block . noStmt = Must have at least one statement . 
 + block . noStatement = Must have at least one statement . 
 
 catch . block . empty = Empty catch block . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties 
 index 2a96451 . . 56b7362 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 block . empty = Der Block ist leer : { 0 } 
 block . nested = Verschachtelte Bl ö cke sollten vermieden werden . 
 - block . noStmt = Ein Block muss mindestens eine Anweisung enthalten . 
 + block . noStatement = Ein Block muss mindestens eine Anweisung enthalten . 
 
 catch . block . empty = Der catch - Block ist leer . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties 
 index c53cf8a . . c9898ba 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 block . empty = Bloque { 0 } vac í o . 
 block . nested = Evitar bloques anidados . 
 - block . noStmt = Debe tener al menos una sentencia . 
 + block . noStatement = Debe tener al menos una sentencia . 
 
 catch . block . empty = Bloque catch vac í o . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties 
 index 1167353 . . 563169b 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 block . empty = Tyhj ä { 0 } - rakenne . 
 block . nested = Avoid nested blocks . 
 - block . noStmt = Pit ä ä olla ainakin yksi lause . 
 + block . noStatement = Pit ä ä olla ainakin yksi lause . 
 
 catch . block . empty = Tyhj ä catch - rakenne . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties 
 index 51a253a . . 02dcb63 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 block . empty = Bloc ' ' { 0 } ' ' vide . 
 block . nested = É vitez d ' ' imbriquer les blocs . 
 - block . noStmt = Le bloc devrait contenir au moins une instruction . 
 + block . noStatement = Le bloc devrait contenir au moins une instruction . 
 
 catch . block . empty = Bloc catch vide . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties 
 index 22b93db . . f406f2c 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 block . empty = 空 の { 0 } ブ ロ ッ ク で す 。 
 block . nested = ネ ス ト し た ブ ロ ッ ク は 避 け て く だ さ い 。 
 - block . noStmt = 少 な く と も 文 が 1 つ は 必 要 で す 。 
 + block . noStatement = 少 な く と も 文 が 1 つ は 必 要 で す 。 
 
 catch . block . empty = 空 の catch ブ ロ ッ ク で す 。 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties 
 index 520a005 . . 3577a57 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 block . empty = Block { 0 } vazio . 
 block . nested = Avoid nested blocks . 
 - block . noStmt = Tem que ter pelo menos uma instru ç ã o . 
 + block . noStatement = Tem que ter pelo menos uma instru ç ã o . 
 
 catch . block . empty = Bloco catch vazio . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties 
 index 5ba5c29 . . 3cbff25 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties 
 @ @ - 2 , 7 + 2 , 7 @ @ 
 
 block . empty = Bo ş blok bulundu : { 0 } 
 block . nested = İ ç i ç e bloklar kullan ı lmamal ı d ı r . 
 - block . noStmt = Blok en az bir ifade i ç ermeli . 
 + block . noStatement = Blok en az bir ifade i ç ermeli . 
 
 catch . block . empty = Bo ş catch blo ğ u . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties 
 index b439211 . . 62015cd 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 block . empty = 空 { 0 } 块 。 
 block . nested = 避 免 内 嵌 块 。 
 - block . noStmt = 块 中 应 至 少 有 一 条 代 码 语 句 。 
 + block . noStatement = 块 中 应 至 少 有 一 条 代 码 语 句 。 
 
 catch . block . empty = 空 catch 块 。 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java 
 index 146d734 . . 826d344 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java 
 @ @ - 20 , 7 + 20 , 7 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . blocks ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . blocks . EmptyBlockCheck . MSG _ KEY _ BLOCK _ EMPTY ; 
 - import static com . puppycrawl . tools . checkstyle . checks . blocks . EmptyBlockCheck . MSG _ KEY _ BLOCK _ NO _ STMT ; 
 + import static com . puppycrawl . tools . checkstyle . checks . blocks . EmptyBlockCheck . MSG _ KEY _ BLOCK _ NO _ STATEMENT ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 @ @ - 61 , 14 + 61 , 14 @ @ public class EmptyBlockCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( EmptyBlockCheck . class ) ; 
 final String [ ] expected = { 
 - " 33 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 35 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 37 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 40 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 63 : 5 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 71 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 73 : 41 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 84 : 12 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 + " 33 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 35 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 37 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 40 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 63 : 5 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 71 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 73 : 41 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 84 : 12 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputEmptyBlockSemantic . java " ) , expected ) ; 
 } 
 @ @ - 94 , 16 + 94 , 16 @ @ public class EmptyBlockCheckTest 
 throws Exception { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( EmptyBlockCheck . class ) ; 
 - checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; 
 + checkConfig . addAttribute ( " option " , BlockOption . STATEMENT . toString ( ) ) ; 
 final String [ ] expected = { 
 - " 33 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 35 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 37 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 40 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 63 : 5 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 71 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 73 : 41 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 84 : 12 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 + " 33 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 35 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 37 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 40 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 63 : 5 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 71 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 73 : 41 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 84 : 12 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputEmptyBlockSemantic . java " ) , expected ) ; 
 } 
 @ @ - 112 , 15 + 112 , 15 @ @ public class EmptyBlockCheckTest 
 public void allowEmptyLoops ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( EmptyBlockCheck . class ) ; 
 - checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; 
 + checkConfig . addAttribute ( " option " , BlockOption . STATEMENT . toString ( ) ) ; 
 checkConfig . addAttribute ( " tokens " , " LITERAL _ TRY , LITERAL _ CATCH , " 
 + " LITERAL _ FINALLY , LITERAL _ DO , LITERAL _ IF , " 
 + " LITERAL _ ELSE , INSTANCE _ INIT , STATIC _ INIT , LITERAL _ SWITCH " ) ; 
 final String [ ] expected = { 
 - " 16 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 19 : 42 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 22 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 - " 23 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT ) , 
 + " 16 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 19 : 42 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 22 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 + " 23 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputEmptyBlockSemantic2 . java " ) , expected ) ; 
 } 
 @ @ - 178 , 16 + 178 , 16 @ @ public class EmptyBlockCheckTest 
 @ Test 
 public void testForbidCaseWithoutStmt ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( EmptyBlockCheck . class ) ; 
 - checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; 
 + checkConfig . addAttribute ( " option " , BlockOption . STATEMENT . toString ( ) ) ; 
 checkConfig . addAttribute ( " tokens " , " LITERAL _ CASE " ) ; 
 final String [ ] expected = { 
 - " 12 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 - " 18 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 - " 22 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 - " 29 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 - " 31 : 37 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 - " 32 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 - " 32 : 40 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 + " 12 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , 
 + " 18 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , 
 + " 22 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , 
 + " 29 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , 
 + " 31 : 37 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , 
 + " 32 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , 
 + " 32 : 40 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " case " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputEmptyBlockCase . java " ) , expected ) ; 
 } 
 @ @ - 211 , 18 + 211 , 18 @ @ public class EmptyBlockCheckTest 
 @ Test 
 public void testForbidDefaultWithoutStatement ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( EmptyBlockCheck . class ) ; 
 - checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; 
 + checkConfig . addAttribute ( " option " , BlockOption . STATEMENT . toString ( ) ) ; 
 checkConfig . addAttribute ( " tokens " , " LITERAL _ DEFAULT " ) ; 
 final String [ ] expected = { 
 - " 5 : 30 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , 
 - " 11 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , 
 - " 15 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , 
 - " 26 : 30 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , 
 - " 36 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , 
 - " 44 : 47 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , 
 - " 50 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , 
 - " 65 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , 
 - " 78 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " default " ) , 
 + " 5 : 30 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , 
 + " 11 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , 
 + " 15 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , 
 + " 26 : 30 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , 
 + " 36 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , 
 + " 44 : 47 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , 
 + " 50 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , 
 + " 65 : 22 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , 
 + " 78 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STATEMENT , " default " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputEmptyBlockDefault . java " ) , expected ) ; 
 } 
 diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml 
 index 13437d2 . . bb360d5 100644 
 - - - a / src / xdocs / config _ blocks . xml 
 + + + b / src / xdocs / config _ blocks . xml 
 @ @ - 193 , 7 + 193 , 7 @ @ switch ( a ) 
 < td > option < / td > 
 < td > policy on block contents < / td > 
 < td > < a href = " property _ types . html # block " > block policy < / a > < / td > 
 - < td > < code > stmt < / code > < / td > 
 + < td > < code > statement < / code > < / td > 
 < / tr > 
 < tr > 
 < td > tokens < / td > 
 @ @ - 276 , 8 + 276 , 8 @ @ switch ( a ) 
 block . empty < / a > 
 < / li > 
 < li > 
 - < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources % 2Fcom % 2Fpuppycrawl % 2Ftools % 2Fcheckstyle % 2Fchecks % 2Fblocks + filename % 3Amessages * . properties + repo % 3Acheckstyle % 2Fcheckstyle + % 22block . noStmt % 22 " > 
 - block . noStmt < / a > 
 + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources % 2Fcom % 2Fpuppycrawl % 2Ftools % 2Fcheckstyle % 2Fchecks % 2Fblocks + filename % 3Amessages * . properties + repo % 3Acheckstyle % 2Fcheckstyle + % 22block . noStatement % 22 " > 
 + block . noStatement < / a > 
 < / li > 
 < / ul > 
 < p > 
 diff - - git a / src / xdocs / property _ types . xml b / src / xdocs / property _ types . xml 
 index 2951579 . . 7de339a 100644 
 - - - a / src / xdocs / property _ types . xml 
 + + + b / src / xdocs / property _ types . xml 
 @ @ - 202 , 7 + 202 , 7 @ @ 
 < / td > 
 < / tr > 
 < tr > 
 - < td > < code > stmt < / code > < / td > 
 + < td > < code > statement < / code > < / td > 
 < td > 
 Require that there is a statement in the block . For example : 
 < pre >
