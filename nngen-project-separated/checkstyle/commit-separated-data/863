BLEU SCORE: 0.034220976227266095

TEST MSG: spelling : fix grammar in messages . properties for indentation package
GENERATED MSG: Created test to show supporting double line wrap indent . # 59

TEST DIFF (one line): diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages . properties <nl> index 1144ff1 . . 94a40cc 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages . properties <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - indentation . error . multi = ' ' { 0 } ' ' have incorrect indentation level { 1 } , expected level should be one of the following : { 2 } . <nl> - indentation . child . error . multi = ' ' { 0 } ' ' child have incorrect indentation level { 1 } , expected level should be one of the following : { 2 } . <nl> - indentation . error = ' ' { 0 } ' ' have incorrect indentation level { 1 } , expected level should be { 2 } . <nl> - indentation . child . error = ' ' { 0 } ' ' child have incorrect indentation level { 1 } , expected level should be { 2 } . <nl> + indentation . error . multi = ' ' { 0 } ' ' has incorrect indentation level { 1 } , expected level should be one of the following : { 2 } . <nl> + indentation . child . error . multi = ' ' { 0 } ' ' child has incorrect indentation level { 1 } , expected level should be one of the following : { 2 } . <nl> + indentation . error = ' ' { 0 } ' ' has incorrect indentation level { 1 } , expected level should be { 2 } . <nl> + indentation . child . error = ' ' { 0 } ' ' child has incorrect indentation level { 1 } , expected level should be { 2 } . <nl> comments . indentation . single = Comment has incorrect indentation level { 1 } , expected is { 2 } , indentation should be the same level as line { 0 } . <nl> comments . indentation . block = Block comment has incorrect indentation level { 1 } , expected is { 2 } , indentation should be the same level as line { 0 } .
NEAREST DIFF (one line): diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputSeparatorWrap . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputSeparatorWrap . java <nl> index dca0b68 . . 2a5594a 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputSeparatorWrap . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputSeparatorWrap . java <nl> @ @ - 2 , 7 + 2 , 7 @ @ package com . puppycrawl . tools . checkstyle . whitespace ; <nl> <nl> public class InputSeparatorWrap < T extends Foo <nl> & Bar > { <nl> - public void goodCase ( ) <nl> + public void goodCase ( ) throws FooException , BarException <nl> { <nl> int i = 0 ; <nl> String s = " ffffooooString " ; <nl> @ @ - 10 , 13 + 10 , 13 @ @ public class InputSeparatorWrap < T extends Foo <nl> . isEmpty ( ) ; / / good wrapping <nl> s . isEmpty ( ) ; <nl> try { <nl> - <nl> + foo ( i , s ) ; <nl> } catch ( FooException | <nl> BarException e ) { } <nl> foo ( i , <nl> s ) ; / / good wrapping <nl> } <nl> - public static void foo ( int i , String s ) <nl> + public static void foo ( int i , String s ) throws FooException , BarException <nl> { <nl> <nl> } <nl> @ @ - 24 , 26 + 24 , 42 @ @ public class InputSeparatorWrap < T extends Foo <nl> <nl> class badCase < T extends Foo & Bar > { <nl> <nl> - 	 @ Override <nl> - public void goodCase ( int . . . aFoo ) <nl> + 	 <nl> + public void goodCase ( int . . . aFoo ) throws FooException , BarException <nl> { <nl> String s = " ffffooooString " ; <nl> s . <nl> isEmpty ( ) ; / / bad wrapping <nl> try { <nl> - <nl> + foo ( 1 , s ) ; <nl> } catch ( FooException <nl> | BarException e ) { } <nl> <nl> - foo ( i <nl> + foo ( 1 <nl> , s ) ; / / bad wrapping <nl> int [ ] i ; <nl> } <nl> - public static void foo ( int i , String s ) <nl> + public static String foo ( int i , String s ) throws FooException , BarException <nl> { <nl> - return new StringBuilder ( maxLength ) <nl> - . append ( seq , 0 , truncationLength ) <nl> - . append ( truncationIndicator ) <nl> + return new StringBuilder ( " " ) <nl> + . append ( " " , 0 , 1 ) <nl> + . append ( " " ) <nl> . toString ( ) ; <nl> } <nl> + } <nl> + <nl> + interface Foo { <nl> + <nl> + } <nl> + <nl> + interface Bar { <nl> + <nl> + } <nl> + <nl> + class FooException extends Exception { <nl> + 	 <nl> + } <nl> + <nl> + class BarException extends Exception { <nl> + 	 <nl> } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages . properties 
 index 1144ff1 . . 94a40cc 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - indentation . error . multi = ' ' { 0 } ' ' have incorrect indentation level { 1 } , expected level should be one of the following : { 2 } . 
 - indentation . child . error . multi = ' ' { 0 } ' ' child have incorrect indentation level { 1 } , expected level should be one of the following : { 2 } . 
 - indentation . error = ' ' { 0 } ' ' have incorrect indentation level { 1 } , expected level should be { 2 } . 
 - indentation . child . error = ' ' { 0 } ' ' child have incorrect indentation level { 1 } , expected level should be { 2 } . 
 + indentation . error . multi = ' ' { 0 } ' ' has incorrect indentation level { 1 } , expected level should be one of the following : { 2 } . 
 + indentation . child . error . multi = ' ' { 0 } ' ' child has incorrect indentation level { 1 } , expected level should be one of the following : { 2 } . 
 + indentation . error = ' ' { 0 } ' ' has incorrect indentation level { 1 } , expected level should be { 2 } . 
 + indentation . child . error = ' ' { 0 } ' ' child has incorrect indentation level { 1 } , expected level should be { 2 } . 
 comments . indentation . single = Comment has incorrect indentation level { 1 } , expected is { 2 } , indentation should be the same level as line { 0 } . 
 comments . indentation . block = Block comment has incorrect indentation level { 1 } , expected is { 2 } , indentation should be the same level as line { 0 } .

NEAREST DIFF:
diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputSeparatorWrap . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputSeparatorWrap . java 
 index dca0b68 . . 2a5594a 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputSeparatorWrap . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputSeparatorWrap . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package com . puppycrawl . tools . checkstyle . whitespace ; 
 
 public class InputSeparatorWrap < T extends Foo 
 & Bar > { 
 - public void goodCase ( ) 
 + public void goodCase ( ) throws FooException , BarException 
 { 
 int i = 0 ; 
 String s = " ffffooooString " ; 
 @ @ - 10 , 13 + 10 , 13 @ @ public class InputSeparatorWrap < T extends Foo 
 . isEmpty ( ) ; / / good wrapping 
 s . isEmpty ( ) ; 
 try { 
 - 
 + foo ( i , s ) ; 
 } catch ( FooException | 
 BarException e ) { } 
 foo ( i , 
 s ) ; / / good wrapping 
 } 
 - public static void foo ( int i , String s ) 
 + public static void foo ( int i , String s ) throws FooException , BarException 
 { 
 
 } 
 @ @ - 24 , 26 + 24 , 42 @ @ public class InputSeparatorWrap < T extends Foo 
 
 class badCase < T extends Foo & Bar > { 
 
 - 	 @ Override 
 - public void goodCase ( int . . . aFoo ) 
 + 	 
 + public void goodCase ( int . . . aFoo ) throws FooException , BarException 
 { 
 String s = " ffffooooString " ; 
 s . 
 isEmpty ( ) ; / / bad wrapping 
 try { 
 - 
 + foo ( 1 , s ) ; 
 } catch ( FooException 
 | BarException e ) { } 
 
 - foo ( i 
 + foo ( 1 
 , s ) ; / / bad wrapping 
 int [ ] i ; 
 } 
 - public static void foo ( int i , String s ) 
 + public static String foo ( int i , String s ) throws FooException , BarException 
 { 
 - return new StringBuilder ( maxLength ) 
 - . append ( seq , 0 , truncationLength ) 
 - . append ( truncationIndicator ) 
 + return new StringBuilder ( " " ) 
 + . append ( " " , 0 , 1 ) 
 + . append ( " " ) 
 . toString ( ) ; 
 } 
 + } 
 + 
 + interface Foo { 
 + 
 + } 
 + 
 + interface Bar { 
 + 
 + } 
 + 
 + class FooException extends Exception { 
 + 	 
 + } 
 + 
 + class BarException extends Exception { 
 + 	 
 } 
 \ No newline at end of file
