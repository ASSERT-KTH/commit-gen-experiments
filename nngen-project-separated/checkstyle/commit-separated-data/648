BLEU SCORE: 0.057737720665823

TEST MSG: Issue # 4726 : fix MethodMayBeStatic idea violations
GENERATED MSG: Issue # 2661 : Enforce LogicConditionNeedOptimizationCheck of sevntu - checkstyle over Checkstyle source code

TEST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index 41cfd52 . . c66fe41 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 1395 , 12 + 1395 , 12 @ @ <nl> < option name = " m _ includeLibraryClasses " value = " false " / > <nl> < option name = " m _ limit " value = " 25 " / > <nl> < / inspection _ tool > <nl> - < inspection _ tool class = " MethodMayBeStatic " enabled = " false " level = " WARNING " enabled _ by _ default = " false " > <nl> - < scope name = " Production " level = " WARNING " enabled = " false " > <nl> - < option name = " m _ onlyPrivateOrFinal " value = " false " / > <nl> + < inspection _ tool class = " MethodMayBeStatic " enabled = " true " level = " WARNING " enabled _ by _ default = " true " > <nl> + < scope name = " Production " level = " WARNING " enabled = " true " > <nl> + < option name = " m _ onlyPrivateOrFinal " value = " true " / > <nl> < option name = " m _ ignoreEmptyMethods " value = " true " / > <nl> < / scope > <nl> - < option name = " m _ onlyPrivateOrFinal " value = " false " / > <nl> + < option name = " m _ onlyPrivateOrFinal " value = " true " / > <nl> < option name = " m _ ignoreEmptyMethods " value = " true " / > <nl> < / inspection _ tool > <nl> < inspection _ tool class = " MethodMayBeSynchronized " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> index d63d573 . . 9ff376a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> @ @ - 219 , 7 + 219 , 7 @ @ public class NeedBracesCheck extends AbstractCheck { <nl> * @ param ast ast to test . <nl> * @ return true if current ast is default and it is part of annotation . <nl> * / <nl> - private boolean isDefaultInAnnotation ( DetailAST ast ) { <nl> + private static boolean isDefaultInAnnotation ( DetailAST ast ) { <nl> boolean isDefaultInAnnotation = false ; <nl> if ( ast . getType ( ) = = TokenTypes . LITERAL _ DEFAULT <nl> & & ast . getParent ( ) . getType ( ) = = TokenTypes . ANNOTATION _ FIELD _ DEF ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java <nl> index eab700d . . 4135916 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java <nl> @ @ - 521 , 7 + 521 , 7 @ @ public class FinalLocalVariableCheck extends AbstractCheck { <nl> * @ param parameterDefAst parameter definition <nl> * @ return true if it is a multiple type catch , false otherwise <nl> * / <nl> - private boolean isMultipleTypeCatch ( DetailAST parameterDefAst ) { <nl> + private static boolean isMultipleTypeCatch ( DetailAST parameterDefAst ) { <nl> final DetailAST typeAst = parameterDefAst . findFirstToken ( TokenTypes . TYPE ) ; <nl> return typeAst . getFirstChild ( ) . getType ( ) = = TokenTypes . BOR ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java <nl> index d02f1a8 . . c2c5fd7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java <nl> @ @ - 157 , 7 + 157 , 7 @ @ public class DesignForExtensionCheck extends AbstractCheck { <nl> * @ param methodDef method definition token . <nl> * @ return true if a method has a javadoc comment . <nl> * / <nl> - private boolean hasJavadocComment ( DetailAST methodDef ) { <nl> + private static boolean hasJavadocComment ( DetailAST methodDef ) { <nl> final DetailAST modifiers = methodDef . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> return modifiers . branchContains ( TokenTypes . BLOCK _ COMMENT _ BEGIN ) ; <nl> } <nl> @ @ - 167 , 7 + 167 , 7 @ @ public class DesignForExtensionCheck extends AbstractCheck { <nl> * @ param ast method definition token . <nl> * @ return true if a methods is native . <nl> * / <nl> - private boolean isNativeMethod ( DetailAST ast ) { <nl> + private static boolean isNativeMethod ( DetailAST ast ) { <nl> final DetailAST mods = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> return mods . branchContains ( TokenTypes . LITERAL _ NATIVE ) ; <nl> } <nl> @ @ - 201 , 7 + 201 , 7 @ @ public class DesignForExtensionCheck extends AbstractCheck { <nl> * @ param methodDef method definition token . <nl> * @ return true if a method can be overridden in a subclass . <nl> * / <nl> - private boolean canBeOverridden ( DetailAST methodDef ) { <nl> + private static boolean canBeOverridden ( DetailAST methodDef ) { <nl> final DetailAST modifiers = methodDef . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> return ScopeUtils . getSurroundingScope ( methodDef ) . isIn ( Scope . PROTECTED ) <nl> & & ! ScopeUtils . isInInterfaceOrAnnotationBlock ( methodDef ) <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> index c9f7786 . . c22cefc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> @ @ - 415 , 7 + 415 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * <nl> * @ return the first line of the expression <nl> * / <nl> - protected final int getFirstLine ( int startLine , DetailAST tree ) { <nl> + protected static int getFirstLine ( int startLine , DetailAST tree ) { <nl> int realStart = startLine ; <nl> final int currLine = tree . getLineNo ( ) ; <nl> if ( currLine < realStart ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> index c02fbb7 . . 9ee72d8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> @ @ - 251 , 7 + 251 , 7 @ @ public class LineWrappingHandler { <nl> * @ return true if all the nodes up to the last annotation node are end of scope nodes <nl> * false otherwise <nl> * / <nl> - private boolean isEndOfScope ( final DetailAST lastAnnotationNode , final DetailAST node ) { <nl> + private static boolean isEndOfScope ( final DetailAST lastAnnotationNode , final DetailAST node ) { <nl> DetailAST checkNode = node ; <nl> boolean endOfScope = true ; <nl> while ( endOfScope & & ! checkNode . equals ( lastAnnotationNode ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java <nl> index 0763a29 . . 4a895fa 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public class MethodDefHandler extends BlockParentHandler { <nl> * The method definition ast . <nl> * @ return The start column position of the method . <nl> * / <nl> - private int getMethodDefLineStart ( DetailAST mainAst ) { <nl> + private static int getMethodDefLineStart ( DetailAST mainAst ) { <nl> / / get first type position <nl> int lineStart = mainAst . findFirstToken ( TokenTypes . IDENT ) . getLineNo ( ) ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java <nl> index 70dd95d . . 58de618 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java <nl> @ @ - 161 , 7 + 161 , 7 @ @ public class SummaryJavadocCheck extends AbstractJavadocCheck { <nl> * @ param ast Javadoc root node . <nl> * @ return error string <nl> * / <nl> - private String getSummarySentence ( DetailNode ast ) { <nl> + private static String getSummarySentence ( DetailNode ast ) { <nl> boolean flag = true ; <nl> final StringBuilder result = new StringBuilder ( ) ; <nl> for ( DetailNode child : ast . getChildren ( ) ) { <nl> @ @ - 206 , 7 + 206 , 7 @ @ public class SummaryJavadocCheck extends AbstractJavadocCheck { <nl> * @ param detailNode javadoc tag node <nl> * @ return java doc tag content appended in result <nl> * / <nl> - private String getStringInsideTag ( String result , DetailNode detailNode ) { <nl> + private static String getStringInsideTag ( String result , DetailNode detailNode ) { <nl> final StringBuilder contents = new StringBuilder ( result ) ; <nl> DetailNode tempNode = detailNode ; <nl> while ( tempNode ! = null ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java <nl> index c94f6f1 . . bb3c87b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java <nl> @ @ - 294 , 7 + 294 , 7 @ @ public class ParseTreeTablePresentation { <nl> * @ param column column index . <nl> * @ return value at specified column . <nl> * / <nl> - private Object getValueAtDetailNode ( DetailNode node , int column ) { <nl> + private static Object getValueAtDetailNode ( DetailNode node , int column ) { <nl> final Object value ; <nl> <nl> switch ( column ) { <nl> @ @ - 326 , 7 + 326 , 7 @ @ public class ParseTreeTablePresentation { <nl> * @ param column column index . <nl> * @ return value at specified column . <nl> * / <nl> - private Object getValueAtDetailAST ( DetailAST ast , int column ) { <nl> + private static Object getValueAtDetailAST ( DetailAST ast , int column ) { <nl> final Object value ; <nl> <nl> switch ( column ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> index 3574ddd . . 5e89671 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> @ @ - 123 , 7 + 123 , 6 @ @ public class BaseCheckTestSupport { <nl> * @ param filename file name . <nl> * @ deprecated This method is now used in AbstractModuleTestSupport . <nl> * @ return URI - representation of the path for the file with the given file name . <nl> - * @ noinspection MethodMayBeStatic <nl> * / <nl> @ Deprecated <nl> protected String getUriString ( String filename ) {
NEAREST DIFF (one line): diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index de88452 . . 9481b33 100644 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 77 , 10 + 77 , 10 @ @ <nl> create HTML web page to describe how to open issues against Checkstyle . Author : Michal Kordas , Roman Ivanov < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2344 " > # 2344 < / a > <nl> < / li > <nl> < li > <nl> - Pull # 2607 : Update JGit to 4 . 1 . 1 . 201511131810 - r . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2607 " > # 2607 < / a > <nl> + Update JGit to 4 . 1 . 1 . 201511131810 - r . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2607 " > # 2607 < / a > <nl> < / li > <nl> < li > <nl> - Pull # 2605 : Make methods private in RequireThisCheck . Author : Vladislav Lisetskiy < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2605 " > # 2605 < / a > <nl> + Make methods private in RequireThisCheck . Author : Vladislav Lisetskiy < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2605 " > # 2605 < / a > <nl> < / li > <nl> < li > <nl> Tests for validating commit message should not allow period at the end of commit message . Author : Andrei Selkin < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2590 " > # 2590 < / a > <nl> @ @ - 101 , 10 + 101 , 10 @ @ <nl> Create test for checkstyle - X . X - all . jar on Travis . Author : Roman Ivanov < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2516 " > # 2516 < / a > <nl> < / li > <nl> < li > <nl> - Pull # 2586 : Update slf4j - simple to 1 . 7 . 13 . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2586 " > # 2586 < / a > <nl> + Update slf4j - simple to 1 . 7 . 13 . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2586 " > # 2586 < / a > <nl> < / li > <nl> < li > <nl> - Pull # 2585 : Update FindBugs Maven Plugin to 3 . 0 . 3 . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2585 " > # 2585 < / a > <nl> + Update FindBugs Maven Plugin to 3 . 0 . 3 . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2585 " > # 2585 < / a > <nl> < / li > <nl> < li > <nl> PMD : resolve problems from DefaultPackage rule . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 957 " > # 957 < / a >

TEST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index 41cfd52 . . c66fe41 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 1395 , 12 + 1395 , 12 @ @ 
 < option name = " m _ includeLibraryClasses " value = " false " / > 
 < option name = " m _ limit " value = " 25 " / > 
 < / inspection _ tool > 
 - < inspection _ tool class = " MethodMayBeStatic " enabled = " false " level = " WARNING " enabled _ by _ default = " false " > 
 - < scope name = " Production " level = " WARNING " enabled = " false " > 
 - < option name = " m _ onlyPrivateOrFinal " value = " false " / > 
 + < inspection _ tool class = " MethodMayBeStatic " enabled = " true " level = " WARNING " enabled _ by _ default = " true " > 
 + < scope name = " Production " level = " WARNING " enabled = " true " > 
 + < option name = " m _ onlyPrivateOrFinal " value = " true " / > 
 < option name = " m _ ignoreEmptyMethods " value = " true " / > 
 < / scope > 
 - < option name = " m _ onlyPrivateOrFinal " value = " false " / > 
 + < option name = " m _ onlyPrivateOrFinal " value = " true " / > 
 < option name = " m _ ignoreEmptyMethods " value = " true " / > 
 < / inspection _ tool > 
 < inspection _ tool class = " MethodMayBeSynchronized " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 index d63d573 . . 9ff376a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 @ @ - 219 , 7 + 219 , 7 @ @ public class NeedBracesCheck extends AbstractCheck { 
 * @ param ast ast to test . 
 * @ return true if current ast is default and it is part of annotation . 
 * / 
 - private boolean isDefaultInAnnotation ( DetailAST ast ) { 
 + private static boolean isDefaultInAnnotation ( DetailAST ast ) { 
 boolean isDefaultInAnnotation = false ; 
 if ( ast . getType ( ) = = TokenTypes . LITERAL _ DEFAULT 
 & & ast . getParent ( ) . getType ( ) = = TokenTypes . ANNOTATION _ FIELD _ DEF ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java 
 index eab700d . . 4135916 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java 
 @ @ - 521 , 7 + 521 , 7 @ @ public class FinalLocalVariableCheck extends AbstractCheck { 
 * @ param parameterDefAst parameter definition 
 * @ return true if it is a multiple type catch , false otherwise 
 * / 
 - private boolean isMultipleTypeCatch ( DetailAST parameterDefAst ) { 
 + private static boolean isMultipleTypeCatch ( DetailAST parameterDefAst ) { 
 final DetailAST typeAst = parameterDefAst . findFirstToken ( TokenTypes . TYPE ) ; 
 return typeAst . getFirstChild ( ) . getType ( ) = = TokenTypes . BOR ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java 
 index d02f1a8 . . c2c5fd7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java 
 @ @ - 157 , 7 + 157 , 7 @ @ public class DesignForExtensionCheck extends AbstractCheck { 
 * @ param methodDef method definition token . 
 * @ return true if a method has a javadoc comment . 
 * / 
 - private boolean hasJavadocComment ( DetailAST methodDef ) { 
 + private static boolean hasJavadocComment ( DetailAST methodDef ) { 
 final DetailAST modifiers = methodDef . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 return modifiers . branchContains ( TokenTypes . BLOCK _ COMMENT _ BEGIN ) ; 
 } 
 @ @ - 167 , 7 + 167 , 7 @ @ public class DesignForExtensionCheck extends AbstractCheck { 
 * @ param ast method definition token . 
 * @ return true if a methods is native . 
 * / 
 - private boolean isNativeMethod ( DetailAST ast ) { 
 + private static boolean isNativeMethod ( DetailAST ast ) { 
 final DetailAST mods = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 return mods . branchContains ( TokenTypes . LITERAL _ NATIVE ) ; 
 } 
 @ @ - 201 , 7 + 201 , 7 @ @ public class DesignForExtensionCheck extends AbstractCheck { 
 * @ param methodDef method definition token . 
 * @ return true if a method can be overridden in a subclass . 
 * / 
 - private boolean canBeOverridden ( DetailAST methodDef ) { 
 + private static boolean canBeOverridden ( DetailAST methodDef ) { 
 final DetailAST modifiers = methodDef . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 return ScopeUtils . getSurroundingScope ( methodDef ) . isIn ( Scope . PROTECTED ) 
 & & ! ScopeUtils . isInInterfaceOrAnnotationBlock ( methodDef ) 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 index c9f7786 . . c22cefc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 @ @ - 415 , 7 + 415 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * 
 * @ return the first line of the expression 
 * / 
 - protected final int getFirstLine ( int startLine , DetailAST tree ) { 
 + protected static int getFirstLine ( int startLine , DetailAST tree ) { 
 int realStart = startLine ; 
 final int currLine = tree . getLineNo ( ) ; 
 if ( currLine < realStart ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 index c02fbb7 . . 9ee72d8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 @ @ - 251 , 7 + 251 , 7 @ @ public class LineWrappingHandler { 
 * @ return true if all the nodes up to the last annotation node are end of scope nodes 
 * false otherwise 
 * / 
 - private boolean isEndOfScope ( final DetailAST lastAnnotationNode , final DetailAST node ) { 
 + private static boolean isEndOfScope ( final DetailAST lastAnnotationNode , final DetailAST node ) { 
 DetailAST checkNode = node ; 
 boolean endOfScope = true ; 
 while ( endOfScope & & ! checkNode . equals ( lastAnnotationNode ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java 
 index 0763a29 . . 4a895fa 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public class MethodDefHandler extends BlockParentHandler { 
 * The method definition ast . 
 * @ return The start column position of the method . 
 * / 
 - private int getMethodDefLineStart ( DetailAST mainAst ) { 
 + private static int getMethodDefLineStart ( DetailAST mainAst ) { 
 / / get first type position 
 int lineStart = mainAst . findFirstToken ( TokenTypes . IDENT ) . getLineNo ( ) ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java 
 index 70dd95d . . 58de618 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java 
 @ @ - 161 , 7 + 161 , 7 @ @ public class SummaryJavadocCheck extends AbstractJavadocCheck { 
 * @ param ast Javadoc root node . 
 * @ return error string 
 * / 
 - private String getSummarySentence ( DetailNode ast ) { 
 + private static String getSummarySentence ( DetailNode ast ) { 
 boolean flag = true ; 
 final StringBuilder result = new StringBuilder ( ) ; 
 for ( DetailNode child : ast . getChildren ( ) ) { 
 @ @ - 206 , 7 + 206 , 7 @ @ public class SummaryJavadocCheck extends AbstractJavadocCheck { 
 * @ param detailNode javadoc tag node 
 * @ return java doc tag content appended in result 
 * / 
 - private String getStringInsideTag ( String result , DetailNode detailNode ) { 
 + private static String getStringInsideTag ( String result , DetailNode detailNode ) { 
 final StringBuilder contents = new StringBuilder ( result ) ; 
 DetailNode tempNode = detailNode ; 
 while ( tempNode ! = null ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java 
 index c94f6f1 . . bb3c87b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java 
 @ @ - 294 , 7 + 294 , 7 @ @ public class ParseTreeTablePresentation { 
 * @ param column column index . 
 * @ return value at specified column . 
 * / 
 - private Object getValueAtDetailNode ( DetailNode node , int column ) { 
 + private static Object getValueAtDetailNode ( DetailNode node , int column ) { 
 final Object value ; 
 
 switch ( column ) { 
 @ @ - 326 , 7 + 326 , 7 @ @ public class ParseTreeTablePresentation { 
 * @ param column column index . 
 * @ return value at specified column . 
 * / 
 - private Object getValueAtDetailAST ( DetailAST ast , int column ) { 
 + private static Object getValueAtDetailAST ( DetailAST ast , int column ) { 
 final Object value ; 
 
 switch ( column ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 index 3574ddd . . 5e89671 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 @ @ - 123 , 7 + 123 , 6 @ @ public class BaseCheckTestSupport { 
 * @ param filename file name . 
 * @ deprecated This method is now used in AbstractModuleTestSupport . 
 * @ return URI - representation of the path for the file with the given file name . 
 - * @ noinspection MethodMayBeStatic 
 * / 
 @ Deprecated 
 protected String getUriString ( String filename ) {

NEAREST DIFF:
diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index de88452 . . 9481b33 100644 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 77 , 10 + 77 , 10 @ @ 
 create HTML web page to describe how to open issues against Checkstyle . Author : Michal Kordas , Roman Ivanov < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2344 " > # 2344 < / a > 
 < / li > 
 < li > 
 - Pull # 2607 : Update JGit to 4 . 1 . 1 . 201511131810 - r . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2607 " > # 2607 < / a > 
 + Update JGit to 4 . 1 . 1 . 201511131810 - r . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2607 " > # 2607 < / a > 
 < / li > 
 < li > 
 - Pull # 2605 : Make methods private in RequireThisCheck . Author : Vladislav Lisetskiy < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2605 " > # 2605 < / a > 
 + Make methods private in RequireThisCheck . Author : Vladislav Lisetskiy < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2605 " > # 2605 < / a > 
 < / li > 
 < li > 
 Tests for validating commit message should not allow period at the end of commit message . Author : Andrei Selkin < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2590 " > # 2590 < / a > 
 @ @ - 101 , 10 + 101 , 10 @ @ 
 Create test for checkstyle - X . X - all . jar on Travis . Author : Roman Ivanov < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2516 " > # 2516 < / a > 
 < / li > 
 < li > 
 - Pull # 2586 : Update slf4j - simple to 1 . 7 . 13 . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2586 " > # 2586 < / a > 
 + Update slf4j - simple to 1 . 7 . 13 . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2586 " > # 2586 < / a > 
 < / li > 
 < li > 
 - Pull # 2585 : Update FindBugs Maven Plugin to 3 . 0 . 3 . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2585 " > # 2585 < / a > 
 + Update FindBugs Maven Plugin to 3 . 0 . 3 . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2585 " > # 2585 < / a > 
 < / li > 
 < li > 
 PMD : resolve problems from DefaultPackage rule . Author : Michal Kordas < a href = " https : / / github . com / checkstyle / checkstyle / issues / 957 " > # 957 < / a >
