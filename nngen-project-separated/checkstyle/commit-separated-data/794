BLEU SCORE: 0.9391044157537525

TEST MSG: Issue # 4313 : Split and Organize Checkstyle inputs by Test for checks in annotation package : CleanUp
GENERATED MSG: Issue # 4313 : Split and Organize Checkstyle inputs by Test for checks in annotation package : AnnotationUseStyle

TEST DIFF (one line): diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation2 . java <nl> deleted file mode 100644 <nl> index c91ff05 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 26 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> - <nl> - @ MyAnnotation11 @ MyAnnotation12 @ MyAnnotation13 <nl> - public class InputAnnotationLocation2 { <nl> - <nl> - @ MyAnnotation13 <nl> - void method ( ) { <nl> - <nl> - } <nl> - <nl> - @ MyAnnotation13 <nl> - @ MyAnnotation12 <nl> - void method2 ( ) { <nl> - <nl> - } <nl> - 	 <nl> - } <nl> - <nl> - @ interface MyAnnotation11 { <nl> - } <nl> - <nl> - @ interface MyAnnotation12 { <nl> - } <nl> - <nl> - @ interface MyAnnotation13 { <nl> - }
NEAREST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 6d32b3d . . dc4ed62 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 93 , 5 + 93 , 5 @ @ <nl> < ! - - Until https : / / github . com / checkstyle / checkstyle / issues / 3496 - - > <nl> < suppress id = " returnCountMaxOne " files = " . * [ \ \ / ] ant [ \ \ / ] | . * [ \ \ / ] filters [ \ \ / ] | . * [ \ \ / ] api [ \ \ / ] | . * [ \ \ / ] annotation [ \ \ / ] | <nl> | . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] design [ \ \ / ] | . * [ \ \ / ] imports [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] | . * [ \ \ / ] javadoc [ \ \ / ] | <nl> - | . * [ \ \ / ] naming [ \ \ / ] | . * [ \ \ / ] regexp [ \ \ / ] | . * [ \ \ / ] sizes [ \ \ / ] | . * [ \ \ / ] utils [ \ \ / ] | . * [ \ \ / ] internal [ \ \ / ] " / > <nl> + | . * [ \ \ / ] naming [ \ \ / ] | . * [ \ \ / ] regexp [ \ \ / ] | . * [ \ \ / ] sizes [ \ \ / ] " / > <nl> < / suppressions > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java <nl> index 8d3638e . . 98a208a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java <nl> @ @ - 150 , 12 + 150 , 14 @ @ public final class CommonUtils { <nl> * @ return whether there is only whitespace <nl> * / <nl> public static boolean hasWhitespaceBefore ( int index , String line ) { <nl> + boolean result = true ; <nl> for ( int i = 0 ; i < index ; i + + ) { <nl> if ( ! Character . isWhitespace ( line . charAt ( i ) ) ) { <nl> - return false ; <nl> + result = false ; <nl> + break ; <nl> } <nl> } <nl> - return true ; <nl> + return result ; <nl> } <nl> <nl> / * * <nl> @ @ - 214 , 13 + 216 , 14 @ @ public final class CommonUtils { <nl> * @ return true if the pattern is valid false otherwise <nl> * / <nl> public static boolean isPatternValid ( String pattern ) { <nl> + boolean isValid = true ; <nl> try { <nl> Pattern . compile ( pattern ) ; <nl> } <nl> catch ( final PatternSyntaxException ignored ) { <nl> - return false ; <nl> + isValid = false ; <nl> } <nl> - return true ; <nl> + return isValid ; <nl> } <nl> <nl> / * * <nl> @ @ - 229 , 14 + 232 , 15 @ @ public final class CommonUtils { <nl> * @ return the base class name from a fully qualified name <nl> * / <nl> public static String baseClassName ( String type ) { <nl> + final String className ; <nl> final int index = type . lastIndexOf ( ' . ' ) ; <nl> - <nl> if ( index = = - 1 ) { <nl> - return type ; <nl> + className = type ; <nl> } <nl> else { <nl> - return type . substring ( index + 1 ) ; <nl> + className = type . substring ( index + 1 ) ; <nl> } <nl> + return className ; <nl> } <nl> <nl> / * * <nl> @ @ - 250 , 12 + 254 , 16 @ @ public final class CommonUtils { <nl> * path or path if base directory is null . <nl> * / <nl> public static String relativizeAndNormalizePath ( final String baseDirectory , final String path ) { <nl> + final String resultPath ; <nl> if ( baseDirectory = = null ) { <nl> - return path ; <nl> + resultPath = path ; <nl> + } <nl> + else { <nl> + final Path pathAbsolute = Paths . get ( path ) . normalize ( ) ; <nl> + final Path pathBase = Paths . get ( baseDirectory ) . normalize ( ) ; <nl> + resultPath = pathBase . relativize ( pathAbsolute ) . toString ( ) ; <nl> } <nl> - final Path pathAbsolute = Paths . get ( path ) . normalize ( ) ; <nl> - final Path pathBase = Paths . get ( baseDirectory ) . normalize ( ) ; <nl> - return pathBase . relativize ( pathAbsolute ) . toString ( ) ; <nl> + return resultPath ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> index bd14692 . . b447baa 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> @ @ - 332 , 13 + 332 , 9 @ @ public final class JavadocUtils { <nl> * @ return true if node contains any node of type type among children on any deep level . <nl> * / <nl> public static boolean containsInBranch ( DetailNode node , int type ) { <nl> + boolean result = true ; <nl> DetailNode curNode = node ; <nl> - while ( true ) { <nl> - <nl> - if ( type = = curNode . getType ( ) ) { <nl> - return true ; <nl> - } <nl> - <nl> + while ( type ! = curNode . getType ( ) ) { <nl> DetailNode toVisit = getFirstChild ( curNode ) ; <nl> while ( curNode ! = null & & toVisit = = null ) { <nl> toVisit = getNextSibling ( curNode ) ; <nl> @ @ - 348 , 13 + 344 , 13 @ @ public final class JavadocUtils { <nl> } <nl> <nl> if ( curNode = = toVisit ) { <nl> + result = false ; <nl> break ; <nl> } <nl> <nl> curNode = toVisit ; <nl> } <nl> - <nl> - return false ; <nl> + return result ; <nl> } <nl> <nl> / * * <nl> @ @ - 364 , 15 + 360 , 16 @ @ public final class JavadocUtils { <nl> * @ return next sibling . <nl> * / <nl> public static DetailNode getNextSibling ( DetailNode node ) { <nl> + DetailNode nextSibling = null ; <nl> final DetailNode parent = node . getParent ( ) ; <nl> if ( parent ! = null ) { <nl> final int nextSiblingIndex = node . getIndex ( ) + 1 ; <nl> final DetailNode [ ] children = parent . getChildren ( ) ; <nl> if ( nextSiblingIndex < = children . length - 1 ) { <nl> - return children [ nextSiblingIndex ] ; <nl> + nextSibling = children [ nextSiblingIndex ] ; <nl> } <nl> } <nl> - return null ; <nl> + return nextSibling ; <nl> } <nl> <nl> / * * <nl> @ @ - 396 , 13 + 393 , 14 @ @ public final class JavadocUtils { <nl> * @ return previous sibling <nl> * / <nl> public static DetailNode getPreviousSibling ( DetailNode node ) { <nl> + DetailNode previousSibling = null ; <nl> final DetailNode parent = node . getParent ( ) ; <nl> final int previousSiblingIndex = node . getIndex ( ) - 1 ; <nl> final DetailNode [ ] children = parent . getChildren ( ) ; <nl> if ( previousSiblingIndex > = 0 ) { <nl> - return children [ previousSiblingIndex ] ; <nl> + previousSibling = children [ previousSiblingIndex ] ; <nl> } <nl> - return null ; <nl> + return previousSibling ; <nl> } <nl> <nl> / * * <nl> @ @ - 412 , 15 + 410 , 18 @ @ public final class JavadocUtils { <nl> * @ return a token name <nl> * / <nl> public static String getTokenName ( int id ) { <nl> + final String name ; <nl> if ( id = = JavadocTokenTypes . EOF ) { <nl> - return " EOF " ; <nl> + name = " EOF " ; <nl> } <nl> - if ( id > TOKEN _ VALUE _ TO _ NAME . length - 1 ) { <nl> + else if ( id > TOKEN _ VALUE _ TO _ NAME . length - 1 ) { <nl> throw new IllegalArgumentException ( UNKNOWN _ JAVADOC _ TOKEN _ ID _ EXCEPTION _ MESSAGE + id ) ; <nl> } <nl> - final String name = TOKEN _ VALUE _ TO _ NAME [ id ] ; <nl> - if ( name = = null ) { <nl> - throw new IllegalArgumentException ( UNKNOWN _ JAVADOC _ TOKEN _ ID _ EXCEPTION _ MESSAGE + id ) ; <nl> + else { <nl> + name = TOKEN _ VALUE _ TO _ NAME [ id ] ; <nl> + if ( name = = null ) { <nl> + throw new IllegalArgumentException ( UNKNOWN _ JAVADOC _ TOKEN _ ID _ EXCEPTION _ MESSAGE + id ) ; <nl> + } <nl> } <nl> return name ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> index 2d485bd . . b8e5491 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> @ @ - 539 , 11 + 539 , 13 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> * / <nl> private static boolean isSubset ( int [ ] array , int . . . arrayToCheckIn ) { <nl> Arrays . sort ( arrayToCheckIn ) ; <nl> + boolean result = true ; <nl> for ( final int element : array ) { <nl> if ( Arrays . binarySearch ( arrayToCheckIn , element ) < 0 ) { <nl> - return false ; <nl> + result = false ; <nl> + break ; <nl> } <nl> } <nl> - return true ; <nl> + return result ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> index c9e0518 . . e5aa345 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> @ @ - 319 , 8 + 319 , 9 @ @ public final class CheckUtil { <nl> * / <nl> public static String getCheckMessage ( Class < ? > module , Locale locale , String messageKey , <nl> Object . . . arguments ) { <nl> - final Properties pr = new Properties ( ) ; <nl> + String checkMessage ; <nl> try { <nl> + final Properties pr = new Properties ( ) ; <nl> if ( locale = = Locale . ENGLISH ) { <nl> pr . load ( module . getResourceAsStream ( " messages . properties " ) ) ; <nl> } <nl> @ @ - 328 , 17 + 329 , 19 @ @ public final class CheckUtil { <nl> pr . load ( module <nl> . getResourceAsStream ( " messages _ " + locale . getLanguage ( ) + " . properties " ) ) ; <nl> } <nl> + final MessageFormat formatter = new MessageFormat ( pr . getProperty ( messageKey ) , locale ) ; <nl> + checkMessage = formatter . format ( arguments ) ; <nl> } <nl> catch ( IOException ex ) { <nl> - return null ; <nl> + checkMessage = null ; <nl> } <nl> - final MessageFormat formatter = new MessageFormat ( pr . getProperty ( messageKey ) , locale ) ; <nl> - return formatter . format ( arguments ) ; <nl> + return checkMessage ; <nl> } <nl> <nl> public static String getTokenText ( int [ ] tokens , int . . . subtractions ) { <nl> + final String tokenText ; <nl> if ( subtractions . length = = 0 & & Arrays . equals ( tokens , TokenUtils . getAllTokenIds ( ) ) ) { <nl> - return " TokenTypes . " ; <nl> + tokenText = " TokenTypes . " ; <nl> } <nl> else { <nl> final StringBuilder result = new StringBuilder ( ) ; <nl> @ @ - 375 , 8 + 378 , 9 @ @ public final class CheckUtil { <nl> result . append ( " . " ) ; <nl> } <nl> <nl> - return result . toString ( ) ; <nl> + tokenText = result . toString ( ) ; <nl> } <nl> + return tokenText ; <nl> } <nl> <nl> public static Set < String > getTokenNameSet ( int . . . tokens ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XmlUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XmlUtil . java <nl> index aba2284 . . 9333026 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XmlUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XmlUtil . java <nl> @ @ - 40 , 6 + 40 , 7 @ @ public final class XmlUtil { <nl> <nl> public static Document getRawXml ( String fileName , String code , String unserializedSource ) <nl> throws ParserConfigurationException { <nl> + Document rawXml = null ; <nl> try { <nl> final DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance ( ) ; <nl> factory . setValidating ( false ) ; <nl> @ @ - 47 , 14 + 48 , 14 @ @ public final class XmlUtil { <nl> <nl> final DocumentBuilder builder = factory . newDocumentBuilder ( ) ; <nl> <nl> - return builder . parse ( new InputSource ( new StringReader ( code ) ) ) ; <nl> + rawXml = builder . parse ( new InputSource ( new StringReader ( code ) ) ) ; <nl> } <nl> catch ( IOException | SAXException ex ) { <nl> Assert . fail ( fileName + " has invalid xml ( " + ex . getMessage ( ) + " ) : " <nl> + unserializedSource ) ; <nl> } <nl> <nl> - return null ; <nl> + return rawXml ; <nl> } <nl> <nl> public static Set < Node > getChildrenElements ( Node node ) { <nl> @ @ - 70 , 13 + 71 , 15 @ @ public final class XmlUtil { <nl> } <nl> <nl> public static Node getFirstChildElement ( Node node ) { <nl> + Node firstChildElement = null ; <nl> for ( Node child = node . getFirstChild ( ) ; child ! = null ; child = child . getNextSibling ( ) ) { <nl> if ( child . getNodeType ( ) ! = Node . TEXT _ NODE ) { <nl> - return child ; <nl> + firstChildElement = child ; <nl> + break ; <nl> } <nl> } <nl> <nl> - return null ; <nl> + return firstChildElement ; <nl> } <nl> <nl> public static Set < Node > findChildElementsByTag ( Node node , String tag ) {

TEST DIFF:
diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation2 . java 
 deleted file mode 100644 
 index c91ff05 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation2 . java 
 + + + / dev / null 
 @ @ - 1 , 26 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 - 
 - @ MyAnnotation11 @ MyAnnotation12 @ MyAnnotation13 
 - public class InputAnnotationLocation2 { 
 - 
 - @ MyAnnotation13 
 - void method ( ) { 
 - 
 - } 
 - 
 - @ MyAnnotation13 
 - @ MyAnnotation12 
 - void method2 ( ) { 
 - 
 - } 
 - 	 
 - } 
 - 
 - @ interface MyAnnotation11 { 
 - } 
 - 
 - @ interface MyAnnotation12 { 
 - } 
 - 
 - @ interface MyAnnotation13 { 
 - }

NEAREST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 6d32b3d . . dc4ed62 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 93 , 5 + 93 , 5 @ @ 
 < ! - - Until https : / / github . com / checkstyle / checkstyle / issues / 3496 - - > 
 < suppress id = " returnCountMaxOne " files = " . * [ \ \ / ] ant [ \ \ / ] | . * [ \ \ / ] filters [ \ \ / ] | . * [ \ \ / ] api [ \ \ / ] | . * [ \ \ / ] annotation [ \ \ / ] | 
 | . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] design [ \ \ / ] | . * [ \ \ / ] imports [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] | . * [ \ \ / ] javadoc [ \ \ / ] | 
 - | . * [ \ \ / ] naming [ \ \ / ] | . * [ \ \ / ] regexp [ \ \ / ] | . * [ \ \ / ] sizes [ \ \ / ] | . * [ \ \ / ] utils [ \ \ / ] | . * [ \ \ / ] internal [ \ \ / ] " / > 
 + | . * [ \ \ / ] naming [ \ \ / ] | . * [ \ \ / ] regexp [ \ \ / ] | . * [ \ \ / ] sizes [ \ \ / ] " / > 
 < / suppressions > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java 
 index 8d3638e . . 98a208a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java 
 @ @ - 150 , 12 + 150 , 14 @ @ public final class CommonUtils { 
 * @ return whether there is only whitespace 
 * / 
 public static boolean hasWhitespaceBefore ( int index , String line ) { 
 + boolean result = true ; 
 for ( int i = 0 ; i < index ; i + + ) { 
 if ( ! Character . isWhitespace ( line . charAt ( i ) ) ) { 
 - return false ; 
 + result = false ; 
 + break ; 
 } 
 } 
 - return true ; 
 + return result ; 
 } 
 
 / * * 
 @ @ - 214 , 13 + 216 , 14 @ @ public final class CommonUtils { 
 * @ return true if the pattern is valid false otherwise 
 * / 
 public static boolean isPatternValid ( String pattern ) { 
 + boolean isValid = true ; 
 try { 
 Pattern . compile ( pattern ) ; 
 } 
 catch ( final PatternSyntaxException ignored ) { 
 - return false ; 
 + isValid = false ; 
 } 
 - return true ; 
 + return isValid ; 
 } 
 
 / * * 
 @ @ - 229 , 14 + 232 , 15 @ @ public final class CommonUtils { 
 * @ return the base class name from a fully qualified name 
 * / 
 public static String baseClassName ( String type ) { 
 + final String className ; 
 final int index = type . lastIndexOf ( ' . ' ) ; 
 - 
 if ( index = = - 1 ) { 
 - return type ; 
 + className = type ; 
 } 
 else { 
 - return type . substring ( index + 1 ) ; 
 + className = type . substring ( index + 1 ) ; 
 } 
 + return className ; 
 } 
 
 / * * 
 @ @ - 250 , 12 + 254 , 16 @ @ public final class CommonUtils { 
 * path or path if base directory is null . 
 * / 
 public static String relativizeAndNormalizePath ( final String baseDirectory , final String path ) { 
 + final String resultPath ; 
 if ( baseDirectory = = null ) { 
 - return path ; 
 + resultPath = path ; 
 + } 
 + else { 
 + final Path pathAbsolute = Paths . get ( path ) . normalize ( ) ; 
 + final Path pathBase = Paths . get ( baseDirectory ) . normalize ( ) ; 
 + resultPath = pathBase . relativize ( pathAbsolute ) . toString ( ) ; 
 } 
 - final Path pathAbsolute = Paths . get ( path ) . normalize ( ) ; 
 - final Path pathBase = Paths . get ( baseDirectory ) . normalize ( ) ; 
 - return pathBase . relativize ( pathAbsolute ) . toString ( ) ; 
 + return resultPath ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 index bd14692 . . b447baa 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 @ @ - 332 , 13 + 332 , 9 @ @ public final class JavadocUtils { 
 * @ return true if node contains any node of type type among children on any deep level . 
 * / 
 public static boolean containsInBranch ( DetailNode node , int type ) { 
 + boolean result = true ; 
 DetailNode curNode = node ; 
 - while ( true ) { 
 - 
 - if ( type = = curNode . getType ( ) ) { 
 - return true ; 
 - } 
 - 
 + while ( type ! = curNode . getType ( ) ) { 
 DetailNode toVisit = getFirstChild ( curNode ) ; 
 while ( curNode ! = null & & toVisit = = null ) { 
 toVisit = getNextSibling ( curNode ) ; 
 @ @ - 348 , 13 + 344 , 13 @ @ public final class JavadocUtils { 
 } 
 
 if ( curNode = = toVisit ) { 
 + result = false ; 
 break ; 
 } 
 
 curNode = toVisit ; 
 } 
 - 
 - return false ; 
 + return result ; 
 } 
 
 / * * 
 @ @ - 364 , 15 + 360 , 16 @ @ public final class JavadocUtils { 
 * @ return next sibling . 
 * / 
 public static DetailNode getNextSibling ( DetailNode node ) { 
 + DetailNode nextSibling = null ; 
 final DetailNode parent = node . getParent ( ) ; 
 if ( parent ! = null ) { 
 final int nextSiblingIndex = node . getIndex ( ) + 1 ; 
 final DetailNode [ ] children = parent . getChildren ( ) ; 
 if ( nextSiblingIndex < = children . length - 1 ) { 
 - return children [ nextSiblingIndex ] ; 
 + nextSibling = children [ nextSiblingIndex ] ; 
 } 
 } 
 - return null ; 
 + return nextSibling ; 
 } 
 
 / * * 
 @ @ - 396 , 13 + 393 , 14 @ @ public final class JavadocUtils { 
 * @ return previous sibling 
 * / 
 public static DetailNode getPreviousSibling ( DetailNode node ) { 
 + DetailNode previousSibling = null ; 
 final DetailNode parent = node . getParent ( ) ; 
 final int previousSiblingIndex = node . getIndex ( ) - 1 ; 
 final DetailNode [ ] children = parent . getChildren ( ) ; 
 if ( previousSiblingIndex > = 0 ) { 
 - return children [ previousSiblingIndex ] ; 
 + previousSibling = children [ previousSiblingIndex ] ; 
 } 
 - return null ; 
 + return previousSibling ; 
 } 
 
 / * * 
 @ @ - 412 , 15 + 410 , 18 @ @ public final class JavadocUtils { 
 * @ return a token name 
 * / 
 public static String getTokenName ( int id ) { 
 + final String name ; 
 if ( id = = JavadocTokenTypes . EOF ) { 
 - return " EOF " ; 
 + name = " EOF " ; 
 } 
 - if ( id > TOKEN _ VALUE _ TO _ NAME . length - 1 ) { 
 + else if ( id > TOKEN _ VALUE _ TO _ NAME . length - 1 ) { 
 throw new IllegalArgumentException ( UNKNOWN _ JAVADOC _ TOKEN _ ID _ EXCEPTION _ MESSAGE + id ) ; 
 } 
 - final String name = TOKEN _ VALUE _ TO _ NAME [ id ] ; 
 - if ( name = = null ) { 
 - throw new IllegalArgumentException ( UNKNOWN _ JAVADOC _ TOKEN _ ID _ EXCEPTION _ MESSAGE + id ) ; 
 + else { 
 + name = TOKEN _ VALUE _ TO _ NAME [ id ] ; 
 + if ( name = = null ) { 
 + throw new IllegalArgumentException ( UNKNOWN _ JAVADOC _ TOKEN _ ID _ EXCEPTION _ MESSAGE + id ) ; 
 + } 
 } 
 return name ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 index 2d485bd . . b8e5491 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 @ @ - 539 , 11 + 539 , 13 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 * / 
 private static boolean isSubset ( int [ ] array , int . . . arrayToCheckIn ) { 
 Arrays . sort ( arrayToCheckIn ) ; 
 + boolean result = true ; 
 for ( final int element : array ) { 
 if ( Arrays . binarySearch ( arrayToCheckIn , element ) < 0 ) { 
 - return false ; 
 + result = false ; 
 + break ; 
 } 
 } 
 - return true ; 
 + return result ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 index c9e0518 . . e5aa345 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 @ @ - 319 , 8 + 319 , 9 @ @ public final class CheckUtil { 
 * / 
 public static String getCheckMessage ( Class < ? > module , Locale locale , String messageKey , 
 Object . . . arguments ) { 
 - final Properties pr = new Properties ( ) ; 
 + String checkMessage ; 
 try { 
 + final Properties pr = new Properties ( ) ; 
 if ( locale = = Locale . ENGLISH ) { 
 pr . load ( module . getResourceAsStream ( " messages . properties " ) ) ; 
 } 
 @ @ - 328 , 17 + 329 , 19 @ @ public final class CheckUtil { 
 pr . load ( module 
 . getResourceAsStream ( " messages _ " + locale . getLanguage ( ) + " . properties " ) ) ; 
 } 
 + final MessageFormat formatter = new MessageFormat ( pr . getProperty ( messageKey ) , locale ) ; 
 + checkMessage = formatter . format ( arguments ) ; 
 } 
 catch ( IOException ex ) { 
 - return null ; 
 + checkMessage = null ; 
 } 
 - final MessageFormat formatter = new MessageFormat ( pr . getProperty ( messageKey ) , locale ) ; 
 - return formatter . format ( arguments ) ; 
 + return checkMessage ; 
 } 
 
 public static String getTokenText ( int [ ] tokens , int . . . subtractions ) { 
 + final String tokenText ; 
 if ( subtractions . length = = 0 & & Arrays . equals ( tokens , TokenUtils . getAllTokenIds ( ) ) ) { 
 - return " TokenTypes . " ; 
 + tokenText = " TokenTypes . " ; 
 } 
 else { 
 final StringBuilder result = new StringBuilder ( ) ; 
 @ @ - 375 , 8 + 378 , 9 @ @ public final class CheckUtil { 
 result . append ( " . " ) ; 
 } 
 
 - return result . toString ( ) ; 
 + tokenText = result . toString ( ) ; 
 } 
 + return tokenText ; 
 } 
 
 public static Set < String > getTokenNameSet ( int . . . tokens ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XmlUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XmlUtil . java 
 index aba2284 . . 9333026 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XmlUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XmlUtil . java 
 @ @ - 40 , 6 + 40 , 7 @ @ public final class XmlUtil { 
 
 public static Document getRawXml ( String fileName , String code , String unserializedSource ) 
 throws ParserConfigurationException { 
 + Document rawXml = null ; 
 try { 
 final DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance ( ) ; 
 factory . setValidating ( false ) ; 
 @ @ - 47 , 14 + 48 , 14 @ @ public final class XmlUtil { 
 
 final DocumentBuilder builder = factory . newDocumentBuilder ( ) ; 
 
 - return builder . parse ( new InputSource ( new StringReader ( code ) ) ) ; 
 + rawXml = builder . parse ( new InputSource ( new StringReader ( code ) ) ) ; 
 } 
 catch ( IOException | SAXException ex ) { 
 Assert . fail ( fileName + " has invalid xml ( " + ex . getMessage ( ) + " ) : " 
 + unserializedSource ) ; 
 } 
 
 - return null ; 
 + return rawXml ; 
 } 
 
 public static Set < Node > getChildrenElements ( Node node ) { 
 @ @ - 70 , 13 + 71 , 15 @ @ public final class XmlUtil { 
 } 
 
 public static Node getFirstChildElement ( Node node ) { 
 + Node firstChildElement = null ; 
 for ( Node child = node . getFirstChild ( ) ; child ! = null ; child = child . getNextSibling ( ) ) { 
 if ( child . getNodeType ( ) ! = Node . TEXT _ NODE ) { 
 - return child ; 
 + firstChildElement = child ; 
 + break ; 
 } 
 } 
 
 - return null ; 
 + return firstChildElement ; 
 } 
 
 public static Set < Node > findChildElementsByTag ( Node node , String tag ) {
