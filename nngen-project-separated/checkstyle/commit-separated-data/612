BLEU SCORE: 0.028289458031628013

TEST MSG: Issue # 4846 : ignore annotation in enum constructor for RedundantModifier
GENERATED MSG: Redundant Modifier Check fixed bug with warning on final variables in default methods issue # 364

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> index 3a0f98a . . 75b7f75 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> @ @ - 209 , 7 + 209 , 8 @ @ public class RedundantModifierCheck <nl> * / <nl> private void checkEnumConstructorModifiers ( DetailAST ast ) { <nl> final DetailAST modifiers = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - final DetailAST modifier = modifiers . getFirstChild ( ) ; <nl> + final DetailAST modifier = getFirstModifierAst ( modifiers ) ; <nl> + <nl> if ( modifier ! = null ) { <nl> log ( modifier . getLineNo ( ) , modifier . getColumnNo ( ) , <nl> MSG _ KEY , modifier . getText ( ) ) ; <nl> @ @ - 217 , 6 + 218 , 21 @ @ public class RedundantModifierCheck <nl> } <nl> <nl> / * * <nl> + * Retrieves the first modifier that is not an annotation . <nl> + * @ param modifiers The ast to examine . <nl> + * @ return The first modifier or { @ code null } if none found . <nl> + * / <nl> + private static DetailAST getFirstModifierAst ( DetailAST modifiers ) { <nl> + DetailAST modifier = modifiers . getFirstChild ( ) ; <nl> + <nl> + while ( modifier ! = null & & modifier . getType ( ) = = TokenTypes . ANNOTATION ) { <nl> + modifier = modifier . getNextSibling ( ) ; <nl> + } <nl> + <nl> + return modifier ; <nl> + } <nl> + <nl> + / * * <nl> * Checks whether enum has proper modifiers . <nl> * @ param ast enum definition . <nl> * / <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> index 84b266d . . 4d90731 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> @ @ - 230 , 4 + 230 , 14 @ @ public class RedundantModifierCheckTest <nl> } ; <nl> verify ( checkConfig , getPath ( " InputRedundantModifierFinalInEnumMethods . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testAnnotationOnEnumConstructor ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( RedundantModifierCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 14 : 5 : " + getCheckMessage ( MSG _ KEY , " private " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputRedundantModifierAnnotationOnEnumConstructor . java " ) , <nl> + expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / redundantmodifier / InputRedundantModifierAnnotationOnEnumConstructor . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / redundantmodifier / InputRedundantModifierAnnotationOnEnumConstructor . java <nl> new file mode 100644 <nl> index 0000000 . . 162a81d <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / redundantmodifier / InputRedundantModifierAnnotationOnEnumConstructor . java <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . modifier . redundantmodifier ; <nl> + <nl> + public enum InputRedundantModifierAnnotationOnEnumConstructor { <nl> + ; <nl> + <nl> + @ SuppressWarnings ( " checkstyle : name " ) <nl> + InputRedundantModifierAnnotationOnEnumConstructor ( ) { <nl> + } <nl> + } <nl> + enum InputRedundantModifierAnnotationOnEnumConstructor2 { <nl> + ; <nl> + <nl> + @ SuppressWarnings ( " checkstyle : name " ) <nl> + private InputRedundantModifierAnnotationOnEnumConstructor2 ( ) { <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java <nl> index 7935ccc . . 927c7ab 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class BadDeprecatedAnnotation <nl> / * * <nl> * @ deprecated stuff <nl> * / <nl> - interface Foo { <nl> + interface Foo1 { <nl> <nl> / * * <nl> * @ deprecated stuff

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 index 3a0f98a . . 75b7f75 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 @ @ - 209 , 7 + 209 , 8 @ @ public class RedundantModifierCheck 
 * / 
 private void checkEnumConstructorModifiers ( DetailAST ast ) { 
 final DetailAST modifiers = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - final DetailAST modifier = modifiers . getFirstChild ( ) ; 
 + final DetailAST modifier = getFirstModifierAst ( modifiers ) ; 
 + 
 if ( modifier ! = null ) { 
 log ( modifier . getLineNo ( ) , modifier . getColumnNo ( ) , 
 MSG _ KEY , modifier . getText ( ) ) ; 
 @ @ - 217 , 6 + 218 , 21 @ @ public class RedundantModifierCheck 
 } 
 
 / * * 
 + * Retrieves the first modifier that is not an annotation . 
 + * @ param modifiers The ast to examine . 
 + * @ return The first modifier or { @ code null } if none found . 
 + * / 
 + private static DetailAST getFirstModifierAst ( DetailAST modifiers ) { 
 + DetailAST modifier = modifiers . getFirstChild ( ) ; 
 + 
 + while ( modifier ! = null & & modifier . getType ( ) = = TokenTypes . ANNOTATION ) { 
 + modifier = modifier . getNextSibling ( ) ; 
 + } 
 + 
 + return modifier ; 
 + } 
 + 
 + / * * 
 * Checks whether enum has proper modifiers . 
 * @ param ast enum definition . 
 * / 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 index 84b266d . . 4d90731 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 @ @ - 230 , 4 + 230 , 14 @ @ public class RedundantModifierCheckTest 
 } ; 
 verify ( checkConfig , getPath ( " InputRedundantModifierFinalInEnumMethods . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testAnnotationOnEnumConstructor ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( RedundantModifierCheck . class ) ; 
 + final String [ ] expected = { 
 + " 14 : 5 : " + getCheckMessage ( MSG _ KEY , " private " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputRedundantModifierAnnotationOnEnumConstructor . java " ) , 
 + expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / redundantmodifier / InputRedundantModifierAnnotationOnEnumConstructor . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / redundantmodifier / InputRedundantModifierAnnotationOnEnumConstructor . java 
 new file mode 100644 
 index 0000000 . . 162a81d 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / redundantmodifier / InputRedundantModifierAnnotationOnEnumConstructor . java 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . modifier . redundantmodifier ; 
 + 
 + public enum InputRedundantModifierAnnotationOnEnumConstructor { 
 + ; 
 + 
 + @ SuppressWarnings ( " checkstyle : name " ) 
 + InputRedundantModifierAnnotationOnEnumConstructor ( ) { 
 + } 
 + } 
 + enum InputRedundantModifierAnnotationOnEnumConstructor2 { 
 + ; 
 + 
 + @ SuppressWarnings ( " checkstyle : name " ) 
 + private InputRedundantModifierAnnotationOnEnumConstructor2 ( ) { 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java 
 index 7935ccc . . 927c7ab 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java 
 @ @ - 35 , 7 + 35 , 7 @ @ public class BadDeprecatedAnnotation 
 / * * 
 * @ deprecated stuff 
 * / 
 - interface Foo { 
 + interface Foo1 { 
 
 / * * 
 * @ deprecated stuff
