BLEU SCORE: 0.026052442434962204

TEST MSG: Issue # 4709 : fix avoid boolean parameters for public methods
GENERATED MSG: Implemented a new version of Checker for that uses the Checks . The intent is

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> index 55e7235 . . 5d60598 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> @ @ - 53 , 6 + 53 , 24 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * / <nl> public final class ConfigurationLoader { <nl> <nl> + / * * <nl> + * Enum to specify behaviour regarding ignored modules . <nl> + * / <nl> + public enum IgnoredModulesOptions { <nl> + / * * <nl> + * Omit ignored modules . <nl> + * / <nl> + OMIT , <nl> + <nl> + / * * <nl> + * Execute ignored modules . <nl> + * / <nl> + EXECUTE <nl> + } <nl> + <nl> + / * * Format of message for sax parse exception . * / <nl> + private static final String SAX _ PARSE _ EXCEPTION _ FORMAT = " % s - % s : % s : % s " ; <nl> + <nl> / * * The public ID for version 1 _ 0 of the configuration dtd . * / <nl> private static final String DTD _ PUBLIC _ ID _ 1 _ 0 = <nl> " - / / Puppy Crawl / / DTD Check Configuration 1 . 0 / / EN " ; <nl> @ @ - 179 , 7 + 197 , 7 @ @ public final class ConfigurationLoader { <nl> * / <nl> public static Configuration loadConfiguration ( String config , <nl> PropertyResolver overridePropsResolver ) throws CheckstyleException { <nl> - return loadConfiguration ( config , overridePropsResolver , false ) ; <nl> + return loadConfiguration ( config , overridePropsResolver , IgnoredModulesOptions . EXECUTE ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 193 , 7 + 211 , 8 @ @ public final class ConfigurationLoader { <nl> public static Configuration loadConfiguration ( String config , <nl> PropertyResolver overridePropsResolver , ThreadModeSettings threadModeSettings ) <nl> throws CheckstyleException { <nl> - return loadConfiguration ( config , overridePropsResolver , false , threadModeSettings ) ; <nl> + return loadConfiguration ( config , overridePropsResolver , <nl> + IgnoredModulesOptions . EXECUTE , threadModeSettings ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 205 , 8 + 224 , 10 @ @ public final class ConfigurationLoader { <nl> * ' ignore ' should be omitted , { @ code false } otherwise <nl> * @ return the check configurations <nl> * @ throws CheckstyleException if an error occurs <nl> + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> * @ noinspection BooleanParameter <nl> * / <nl> + @ Deprecated <nl> public static Configuration loadConfiguration ( String config , <nl> PropertyResolver overridePropsResolver , boolean omitIgnoredModules ) <nl> throws CheckstyleException { <nl> @ @ - 224 , 8 + 245 , 10 @ @ public final class ConfigurationLoader { <nl> * @ param threadModeSettings the thread mode configuration <nl> * @ return the check configurations <nl> * @ throws CheckstyleException if an error occurs <nl> + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> * @ noinspection BooleanParameter <nl> * / <nl> + @ Deprecated <nl> public static Configuration loadConfiguration ( String config , <nl> PropertyResolver overridePropsResolver , <nl> boolean omitIgnoredModules , ThreadModeSettings threadModeSettings ) <nl> @ @ - 274 , 8 + 297 , 10 @ @ public final class ConfigurationLoader { <nl> * ' ignore ' should be omitted , { @ code false } otherwise <nl> * @ return the check configurations <nl> * @ throws CheckstyleException if an error occurs <nl> + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> * @ noinspection BooleanParameter <nl> * / <nl> + @ Deprecated <nl> public static Configuration loadConfiguration ( InputSource configSource , <nl> PropertyResolver overridePropsResolver , boolean omitIgnoredModules ) <nl> throws CheckstyleException { <nl> @ @ - 295 , 8 + 320 , 10 @ @ public final class ConfigurationLoader { <nl> * @ param threadModeSettings the thread mode configuration <nl> * @ return the check configurations <nl> * @ throws CheckstyleException if an error occurs <nl> + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> * @ noinspection BooleanParameter <nl> * / <nl> + @ Deprecated <nl> public static Configuration loadConfiguration ( InputSource configSource , <nl> PropertyResolver overridePropsResolver , <nl> boolean omitIgnoredModules , ThreadModeSettings threadModeSettings ) <nl> @ @ - 309 , 7 + 336 , 105 @ @ public final class ConfigurationLoader { <nl> return loader . configuration ; <nl> } <nl> catch ( final SAXParseException ex ) { <nl> - final String message = String . format ( Locale . ROOT , " % s - % s : % s : % s " , <nl> + final String message = String . format ( Locale . ROOT , SAX _ PARSE _ EXCEPTION _ FORMAT , <nl> + UNABLE _ TO _ PARSE _ EXCEPTION _ PREFIX , <nl> + ex . getMessage ( ) , ex . getLineNumber ( ) , ex . getColumnNumber ( ) ) ; <nl> + throw new CheckstyleException ( message , ex ) ; <nl> + } <nl> + catch ( final ParserConfigurationException | IOException | SAXException ex ) { <nl> + throw new CheckstyleException ( UNABLE _ TO _ PARSE _ EXCEPTION _ PREFIX , ex ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Returns the module configurations in a specified file . <nl> + * <nl> + * @ param config location of config file , can be either a URL or a filename <nl> + * @ param overridePropsResolver overriding properties <nl> + * @ param ignoredModulesOptions { @ code OMIT } if modules with severity <nl> + * ' ignore ' should be omitted , { @ code EXECUTE } otherwise <nl> + * @ return the check configurations <nl> + * @ throws CheckstyleException if an error occurs <nl> + * / <nl> + public static Configuration loadConfiguration ( String config , <nl> + PropertyResolver overridePropsResolver , <nl> + IgnoredModulesOptions ignoredModulesOptions ) <nl> + throws CheckstyleException { <nl> + return loadConfiguration ( config , overridePropsResolver , ignoredModulesOptions , <nl> + ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Returns the module configurations in a specified file . <nl> + * <nl> + * @ param config location of config file , can be either a URL or a filename <nl> + * @ param overridePropsResolver overriding properties <nl> + * @ param ignoredModulesOptions { @ code OMIT } if modules with severity <nl> + * ' ignore ' should be omitted , { @ code EXECUTE } otherwise <nl> + * @ param threadModeSettings the thread mode configuration <nl> + * @ return the check configurations <nl> + * @ throws CheckstyleException if an error occurs <nl> + * / <nl> + public static Configuration loadConfiguration ( String config , <nl> + PropertyResolver overridePropsResolver , <nl> + IgnoredModulesOptions ignoredModulesOptions , <nl> + ThreadModeSettings threadModeSettings ) <nl> + throws CheckstyleException { <nl> + / / figure out if this is a File or a URL <nl> + final URI uri = CommonUtils . getUriByFilename ( config ) ; <nl> + final InputSource source = new InputSource ( uri . toString ( ) ) ; <nl> + return loadConfiguration ( source , overridePropsResolver , <nl> + ignoredModulesOptions , threadModeSettings ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Returns the module configurations from a specified input source . <nl> + * Note that if the source does wrap an open byte or character <nl> + * stream , clients are required to close that stream by themselves <nl> + * <nl> + * @ param configSource the input stream to the Checkstyle configuration <nl> + * @ param overridePropsResolver overriding properties <nl> + * @ param ignoredModulesOptions { @ code OMIT } if modules with severity <nl> + * ' ignore ' should be omitted , { @ code EXECUTE } otherwise <nl> + * @ return the check configurations <nl> + * @ throws CheckstyleException if an error occurs <nl> + * / <nl> + public static Configuration loadConfiguration ( InputSource configSource , <nl> + PropertyResolver overridePropsResolver , <nl> + IgnoredModulesOptions ignoredModulesOptions ) <nl> + throws CheckstyleException { <nl> + return loadConfiguration ( configSource , overridePropsResolver , <nl> + ignoredModulesOptions , ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Returns the module configurations from a specified input source . <nl> + * Note that if the source does wrap an open byte or character <nl> + * stream , clients are required to close that stream by themselves <nl> + * <nl> + * @ param configSource the input stream to the Checkstyle configuration <nl> + * @ param overridePropsResolver overriding properties <nl> + * @ param ignoredModulesOptions { @ code OMIT } if modules with severity <nl> + * ' ignore ' should be omitted , { @ code EXECUTE } otherwise <nl> + * @ param threadModeSettings the thread mode configuration <nl> + * @ return the check configurations <nl> + * @ throws CheckstyleException if an error occurs <nl> + * / <nl> + public static Configuration loadConfiguration ( InputSource configSource , <nl> + PropertyResolver overridePropsResolver , <nl> + IgnoredModulesOptions ignoredModulesOptions , <nl> + ThreadModeSettings threadModeSettings ) <nl> + throws CheckstyleException { <nl> + try { <nl> + final boolean omitIgnoreModules = ignoredModulesOptions = = IgnoredModulesOptions . OMIT ; <nl> + final ConfigurationLoader loader = <nl> + new ConfigurationLoader ( overridePropsResolver , <nl> + omitIgnoreModules , threadModeSettings ) ; <nl> + loader . parseInputSource ( configSource ) ; <nl> + return loader . configuration ; <nl> + } <nl> + catch ( final SAXParseException ex ) { <nl> + final String message = String . format ( Locale . ROOT , SAX _ PARSE _ EXCEPTION _ FORMAT , <nl> UNABLE _ TO _ PARSE _ EXCEPTION _ PREFIX , <nl> ex . getMessage ( ) , ex . getLineNumber ( ) , ex . getColumnNumber ( ) ) ; <nl> throw new CheckstyleException ( message , ex ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> index 5810354 . . d801dd5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> @ @ - 40 , 6 + 40 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; <nl> * <nl> * @ author < a href = " mailto : stephane . bailliez @ wanadoo . fr " > Stephane Bailliez < / a > <nl> * @ see XMLLogger <nl> + * @ noinspection ClassWithTooManyConstructors <nl> * / <nl> public class DefaultLogger extends AutomaticBean implements AuditListener { <nl> <nl> @ @ - 76 , 8 + 77 , 10 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { <nl> * Creates a new { @ code DefaultLogger } instance . <nl> * @ param outputStream where to log infos and errors <nl> * @ param closeStreamsAfterUse if oS should be closed in auditFinished ( ) <nl> + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> * @ noinspection BooleanParameter <nl> * / <nl> + @ Deprecated <nl> public DefaultLogger ( OutputStream outputStream , boolean closeStreamsAfterUse ) { <nl> / / no need to close oS twice <nl> this ( outputStream , closeStreamsAfterUse , outputStream , false ) ; <nl> @ @ - 89 , 8 + 92 , 10 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { <nl> * @ param closeInfoAfterUse auditFinished should close infoStream . <nl> * @ param errorStream the { @ code OutputStream } for error messages . <nl> * @ param closeErrorAfterUse auditFinished should close errorStream <nl> + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> * @ noinspection BooleanParameter <nl> * / <nl> + @ Deprecated <nl> public DefaultLogger ( OutputStream infoStream , <nl> boolean closeInfoAfterUse , <nl> OutputStream errorStream , <nl> @ @ - 107 , 8 + 112 , 10 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { <nl> * @ param errorStream the { @ code OutputStream } for error messages <nl> * @ param closeErrorAfterUse auditFinished should close errorStream <nl> * @ param messageFormatter formatter for the log message . <nl> + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> * @ noinspection BooleanParameter <nl> * / <nl> + @ Deprecated <nl> public DefaultLogger ( OutputStream infoStream , <nl> boolean closeInfoAfterUse , <nl> OutputStream errorStream , <nl> @ @ - 131 , 6 + 138 , 61 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { <nl> } <nl> <nl> / * * <nl> + * Creates a new { @ code DefaultLogger } instance . <nl> + * @ param outputStream where to log infos and errors <nl> + * @ param outputStreamOptions if { @ code CLOSE } that should be closed in auditFinished ( ) <nl> + * / <nl> + public DefaultLogger ( OutputStream outputStream , OutputStreamOptions outputStreamOptions ) { <nl> + / / no need to close oS twice <nl> + this ( outputStream , outputStreamOptions , outputStream , OutputStreamOptions . NONE ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Creates a new { @ code DefaultLogger } instance . <nl> + * @ param infoStream the { @ code OutputStream } for info messages . <nl> + * @ param infoStreamOptions if { @ code CLOSE } info should be closed in auditFinished ( ) <nl> + * @ param errorStream the { @ code OutputStream } for error messages . <nl> + * @ param errorStreamOptions if { @ code CLOSE } error should be closed in auditFinished ( ) <nl> + * / <nl> + public DefaultLogger ( OutputStream infoStream , <nl> + OutputStreamOptions infoStreamOptions , <nl> + OutputStream errorStream , <nl> + OutputStreamOptions errorStreamOptions ) { <nl> + this ( infoStream , infoStreamOptions , errorStream , errorStreamOptions , <nl> + new AuditEventDefaultFormatter ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Creates a new { @ code DefaultLogger } instance . <nl> + * <nl> + * @ param infoStream the { @ code OutputStream } for info messages <nl> + * @ param infoStreamOptions if { @ code CLOSE } info should be closed in auditFinished ( ) <nl> + * @ param errorStream the { @ code OutputStream } for error messages <nl> + * @ param errorStreamOptions if { @ code CLOSE } error should be closed in auditFinished ( ) <nl> + * @ param messageFormatter formatter for the log message . <nl> + * / <nl> + public DefaultLogger ( OutputStream infoStream , <nl> + OutputStreamOptions infoStreamOptions , <nl> + OutputStream errorStream , <nl> + OutputStreamOptions errorStreamOptions , <nl> + AuditEventFormatter messageFormatter ) { <nl> + closeInfo = infoStreamOptions = = OutputStreamOptions . CLOSE ; <nl> + closeError = errorStreamOptions = = OutputStreamOptions . CLOSE ; <nl> + final Writer infoStreamWriter = new OutputStreamWriter ( infoStream , StandardCharsets . UTF _ 8 ) ; <nl> + infoWriter = new PrintWriter ( infoStreamWriter ) ; <nl> + <nl> + if ( infoStream = = errorStream ) { <nl> + errorWriter = infoWriter ; <nl> + } <nl> + else { <nl> + final Writer errorStreamWriter = new OutputStreamWriter ( errorStream , <nl> + StandardCharsets . UTF _ 8 ) ; <nl> + errorWriter = new PrintWriter ( errorStreamWriter ) ; <nl> + } <nl> + formatter = messageFormatter ; <nl> + } <nl> + <nl> + / * * <nl> * Print an Emacs compliant line on the error stream . <nl> * If the column number is non zero , then also display it . <nl> * @ see AuditListener <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index 22215ac . . ca869bb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 47 , 6 + 47 , 7 @ @ import org . apache . commons . logging . LogFactory ; <nl> <nl> import com . google . common . io . Closeables ; <nl> import com . puppycrawl . tools . checkstyle . api . AuditListener ; <nl> + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> @ @ - 491 , 9 + 492 , 18 @ @ public final class Main { <nl> final ThreadModeSettings multiThreadModeSettings = <nl> new ThreadModeSettings ( <nl> cliOptions . checkerThreadsNumber , cliOptions . treeWalkerThreadsNumber ) ; <nl> + <nl> + final ConfigurationLoader . IgnoredModulesOptions ignoredModulesOptions ; <nl> + if ( cliOptions . executeIgnoredModules ) { <nl> + ignoredModulesOptions = ConfigurationLoader . IgnoredModulesOptions . EXECUTE ; <nl> + } <nl> + else { <nl> + ignoredModulesOptions = ConfigurationLoader . IgnoredModulesOptions . OMIT ; <nl> + } <nl> + <nl> final Configuration config = ConfigurationLoader . loadConfiguration ( <nl> cliOptions . configLocation , new PropertiesExpander ( props ) , <nl> - ! cliOptions . executeIgnoredModules , multiThreadModeSettings ) ; <nl> + ignoredModulesOptions , multiThreadModeSettings ) ; <nl> <nl> / / create a listener for output <nl> final AuditListener listener = createListener ( cliOptions . format , cliOptions . outputLocation ) ; <nl> @ @ - 582 , 14 + 592 , 14 @ @ public final class Main { <nl> <nl> / / setup the output stream <nl> final OutputStream out ; <nl> - final boolean closeOutputStream ; <nl> + final AutomaticBean . OutputStreamOptions closeOutputStream ; <nl> if ( outputLocation = = null ) { <nl> out = System . out ; <nl> - closeOutputStream = false ; <nl> + closeOutputStream = AutomaticBean . OutputStreamOptions . NONE ; <nl> } <nl> else { <nl> out = new FileOutputStream ( outputLocation ) ; <nl> - closeOutputStream = true ; <nl> + closeOutputStream = AutomaticBean . OutputStreamOptions . CLOSE ; <nl> } <nl> <nl> / / setup a listener <nl> @ @ - 599 , 11 + 609 , 12 @ @ public final class Main { <nl> <nl> } <nl> else if ( PLAIN _ FORMAT _ NAME . equals ( format ) ) { <nl> - listener = new DefaultLogger ( out , closeOutputStream , out , false ) ; <nl> + listener = new DefaultLogger ( out , closeOutputStream , out , <nl> + AutomaticBean . OutputStreamOptions . NONE ) ; <nl> <nl> } <nl> else { <nl> - if ( closeOutputStream ) { <nl> + if ( closeOutputStream = = AutomaticBean . OutputStreamOptions . CLOSE ) { <nl> CommonUtils . close ( out ) ; <nl> } <nl> final LocalizedMessage outputFormatExceptionMessage = new LocalizedMessage ( 0 , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> index db7be51 . . b88a8cc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> @ @ - 67 , 14 + 67 , 27 @ @ public class XMLLogger <nl> * Sets the output to a defined stream . <nl> * @ param outputStream the stream to write logs to . <nl> * @ param closeStream close oS in auditFinished <nl> + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> * @ noinspection BooleanParameter <nl> * / <nl> + @ Deprecated <nl> public XMLLogger ( OutputStream outputStream , boolean closeStream ) { <nl> setOutputStream ( outputStream ) ; <nl> this . closeStream = closeStream ; <nl> } <nl> <nl> / * * <nl> + * Creates a new { @ code XMLLogger } instance . <nl> + * Sets the output to a defined stream . <nl> + * @ param outputStream the stream to write logs to . <nl> + * @ param outputStreamOptions if { @ code CLOSE } stream should be closed in auditFinished ( ) <nl> + * / <nl> + public XMLLogger ( OutputStream outputStream , OutputStreamOptions outputStreamOptions ) { <nl> + setOutputStream ( outputStream ) ; <nl> + closeStream = outputStreamOptions = = OutputStreamOptions . CLOSE ; <nl> + } <nl> + <nl> + / * * <nl> * Sets the OutputStream . <nl> * @ param outputStream the OutputStream to use <nl> * * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> index f1b287f . . 04a6158 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> @ @ - 54 , 6 + 54 , 7 @ @ import com . puppycrawl . tools . checkstyle . PropertiesExpander ; <nl> import com . puppycrawl . tools . checkstyle . ThreadModeSettings ; <nl> import com . puppycrawl . tools . checkstyle . XMLLogger ; <nl> import com . puppycrawl . tools . checkstyle . api . AuditListener ; <nl> + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . RootModule ; <nl> @ @ - 395 , 9 + 396 , 16 @ @ public class CheckstyleAntTask extends Task { <nl> final Properties props = createOverridingProperties ( ) ; <nl> final ThreadModeSettings threadModeSettings = <nl> ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ; <nl> - final Configuration configuration = ConfigurationLoader . loadConfiguration ( <nl> - config , new PropertiesExpander ( props ) , <nl> - ! executeIgnoredModules , threadModeSettings ) ; <nl> + final ConfigurationLoader . IgnoredModulesOptions ignoredModulesOptions ; <nl> + if ( executeIgnoredModules ) { <nl> + ignoredModulesOptions = ConfigurationLoader . IgnoredModulesOptions . EXECUTE ; <nl> + } <nl> + else { <nl> + ignoredModulesOptions = ConfigurationLoader . IgnoredModulesOptions . OMIT ; <nl> + } <nl> + <nl> + final Configuration configuration = ConfigurationLoader . loadConfiguration ( config , <nl> + new PropertiesExpander ( props ) , ignoredModulesOptions , threadModeSettings ) ; <nl> <nl> final ClassLoader moduleClassLoader = <nl> Checker . class . getClassLoader ( ) ; <nl> @ @ - 478 , 7 + 486 , 8 @ @ public class CheckstyleAntTask extends Task { <nl> if ( formatters . isEmpty ( ) ) { <nl> final OutputStream debug = new LogOutputStream ( this , Project . MSG _ DEBUG ) ; <nl> final OutputStream err = new LogOutputStream ( this , Project . MSG _ ERR ) ; <nl> - listeners [ 0 ] = new DefaultLogger ( debug , true , err , true ) ; <nl> + listeners [ 0 ] = new DefaultLogger ( debug , AutomaticBean . OutputStreamOptions . CLOSE , <nl> + err , AutomaticBean . OutputStreamOptions . CLOSE ) ; <nl> } <nl> else { <nl> for ( int i = 0 ; i < formatterCount ; i + + ) { <nl> @ @ - 684 , 11 + 693 , 16 @ @ public class CheckstyleAntTask extends Task { <nl> if ( toFile = = null | | ! useFile ) { <nl> defaultLogger = new DefaultLogger ( <nl> new LogOutputStream ( task , Project . MSG _ DEBUG ) , <nl> - true , new LogOutputStream ( task , Project . MSG _ ERR ) , true ) ; <nl> + AutomaticBean . OutputStreamOptions . CLOSE , <nl> + new LogOutputStream ( task , Project . MSG _ ERR ) , <nl> + AutomaticBean . OutputStreamOptions . CLOSE <nl> + ) ; <nl> } <nl> else { <nl> final FileOutputStream infoStream = new FileOutputStream ( toFile ) ; <nl> - defaultLogger = new DefaultLogger ( infoStream , true , infoStream , false ) ; <nl> + defaultLogger = <nl> + new DefaultLogger ( infoStream , AutomaticBean . OutputStreamOptions . CLOSE , <nl> + infoStream , AutomaticBean . OutputStreamOptions . NONE ) ; <nl> } <nl> return defaultLogger ; <nl> } <nl> @ @ - 702 , 10 + 716 , 12 @ @ public class CheckstyleAntTask extends Task { <nl> private AuditListener createXmlLogger ( Task task ) throws IOException { <nl> final AuditListener xmlLogger ; <nl> if ( toFile = = null | | ! useFile ) { <nl> - xmlLogger = new XMLLogger ( new LogOutputStream ( task , Project . MSG _ INFO ) , true ) ; <nl> + xmlLogger = new XMLLogger ( new LogOutputStream ( task , Project . MSG _ INFO ) , <nl> + AutomaticBean . OutputStreamOptions . CLOSE ) ; <nl> } <nl> else { <nl> - xmlLogger = new XMLLogger ( new FileOutputStream ( toFile ) , true ) ; <nl> + xmlLogger = new XMLLogger ( new FileOutputStream ( toFile ) , <nl> + AutomaticBean . OutputStreamOptions . CLOSE ) ; <nl> } <nl> return xmlLogger ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java <nl> index ea61718 . . 7e977ea 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java <nl> @ @ - 56 , 6 + 56 , 21 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> public class AutomaticBean <nl> implements Configurable , Contextualizable { <nl> <nl> + / * * <nl> + * Enum to specify behaviour regarding ignored modules . <nl> + * / <nl> + public enum OutputStreamOptions { <nl> + / * * <nl> + * Close stream in the end . <nl> + * / <nl> + CLOSE , <nl> + <nl> + / * * <nl> + * Do nothing in the end . <nl> + * / <nl> + NONE <nl> + } <nl> + <nl> / * * Comma separator for StringTokenizer . * / <nl> private static final String COMMA _ SEPARATOR = " , " ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> index 157f5f8 . . deb8849 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> @ @ - 173 , 6 + 173 , 25 @ @ public class ConfigurationLoaderTest { <nl> } <nl> <nl> @ Test <nl> + public void testMissingPropertyNameInMethodWithBooleanParameter ( ) { <nl> + try { <nl> + final String fName = getConfigPath ( " missing _ property _ name . xml " ) ; <nl> + ConfigurationLoader . loadConfiguration ( fName , new PropertiesExpander ( new Properties ( ) ) , <nl> + false ) ; <nl> + <nl> + fail ( " missing property name " ) ; <nl> + } <nl> + catch ( CheckstyleException ex ) { <nl> + assertTrue ( " Invalid exception message : " + ex . getMessage ( ) , <nl> + ex . getMessage ( ) . contains ( " \ " name \ " " ) ) ; <nl> + assertTrue ( " Invalid exception message : " + ex . getMessage ( ) , <nl> + ex . getMessage ( ) . contains ( " \ " property \ " " ) ) ; <nl> + assertTrue ( " Invalid exception message : " + ex . getMessage ( ) , <nl> + ex . getMessage ( ) . endsWith ( " : 8 : 41 " ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> public void testMissingPropertyValue ( ) { <nl> try { <nl> loadConfiguration ( " missing _ property _ value . xml " ) ; <nl> @ @ - 644 , 4 + 663 , 25 @ @ public class ConfigurationLoaderTest { <nl> assertEquals ( " Fragments list has unexpected amount of items " , <nl> 1 , fragments . size ( ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testConstructors ( ) throws Exception { <nl> + final Properties props = new Properties ( ) ; <nl> + props . setProperty ( " checkstyle . basedir " , " basedir " ) ; <nl> + final String fName = getConfigPath ( " checkstyle _ checks . xml " ) ; <nl> + <nl> + final Configuration configuration = ConfigurationLoader . loadConfiguration ( fName , <nl> + new PropertiesExpander ( props ) , ConfigurationLoader . IgnoredModulesOptions . OMIT ) ; <nl> + assertEquals ( " Name is not expected " , " Checker " , configuration . getName ( ) ) ; <nl> + <nl> + final DefaultConfiguration configuration1 = <nl> + ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( <nl> + new InputSource ( <nl> + new FileInputStream ( getConfigPath ( " config _ with _ ignore . xml " ) ) ) , <nl> + new PropertiesExpander ( new Properties ( ) ) , <nl> + ConfigurationLoader . IgnoredModulesOptions . EXECUTE ) ; <nl> + <nl> + final Configuration [ ] children = configuration1 . getChildren ( ) ; <nl> + assertEquals ( " Unexpected children size " , 1 , children [ 0 ] . getChildren ( ) . length ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java <nl> index 0454950 . . 23136eb 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java <nl> @ @ - 20 , 6 + 20 , 9 @ @ <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> import static org . junit . Assert . assertTrue ; <nl> + import static org . mockito . Mockito . spy ; <nl> + import static org . mockito . Mockito . times ; <nl> + import static org . mockito . Mockito . verify ; <nl> <nl> import java . io . ByteArrayOutputStream ; <nl> import java . io . OutputStream ; <nl> @ @ - 28 , 6 + 31 , 7 @ @ import java . io . UnsupportedEncodingException ; <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> <nl> public class DefaultLoggerTest { <nl> @ @ - 60 , 4 + 64 , 38 @ @ public class DefaultLoggerTest { <nl> assertTrue ( " Message should contain exception info , but was " + output , <nl> output . contains ( " java . lang . IllegalStateException : upsss " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testNewCtor ( ) throws Exception { <nl> + final OutputStream infoStream = spy ( new ByteArrayOutputStream ( ) ) ; <nl> + final ByteArrayOutputStream errorStream = spy ( new ByteArrayOutputStream ( ) ) ; <nl> + final DefaultLogger dl = new DefaultLogger ( infoStream , <nl> + AutomaticBean . OutputStreamOptions . CLOSE , errorStream , <nl> + AutomaticBean . OutputStreamOptions . CLOSE ) ; <nl> + dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; <nl> + dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; <nl> + final String output = errorStream . toString ( " UTF - 8 " ) ; <nl> + final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . addException " , <nl> + new String [ ] { " myfile " } , null , <nl> + getClass ( ) , null ) ; <nl> + <nl> + verify ( infoStream , times ( 1 ) ) . close ( ) ; <nl> + verify ( errorStream , times ( 1 ) ) . close ( ) ; <nl> + assertTrue ( " Message should contain exception info , but was " + output , <nl> + output . contains ( addExceptionMessage . getMessage ( ) ) ) ; <nl> + assertTrue ( " Message should contain exception info , but was " + output , <nl> + output . contains ( " java . lang . IllegalStateException : upsss " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testNewCtorWithTwoParameters ( ) { <nl> + final OutputStream infoStream = new ByteArrayOutputStream ( ) ; <nl> + final DefaultLogger dl = new DefaultLogger ( infoStream , <nl> + AutomaticBean . OutputStreamOptions . NONE ) ; <nl> + dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; <nl> + dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; <nl> + assertTrue ( " Message should contain exception info , but was " + infoStream , <nl> + infoStream . toString ( ) . contains ( " java . lang . IllegalStateException : upsss " ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> index b394a84 . . 64a4433 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> @ @ - 24 , 12 + 24 , 18 @ @ import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNotEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> + import static org . mockito . Matchers . any ; <nl> + import static org . mockito . Mockito . times ; <nl> + import static org . powermock . api . mockito . PowerMockito . doNothing ; <nl> import static org . powermock . api . mockito . PowerMockito . mock ; <nl> + import static org . powermock . api . mockito . PowerMockito . mockStatic ; <nl> + import static org . powermock . api . mockito . PowerMockito . verifyStatic ; <nl> import static org . powermock . api . mockito . PowerMockito . when ; <nl> <nl> import java . io . ByteArrayInputStream ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> import java . lang . reflect . Constructor ; <nl> import java . lang . reflect . Field ; <nl> import java . lang . reflect . Method ; <nl> @ @ - 42 , 10 + 48 , 14 @ @ import java . util . HashSet ; <nl> import java . util . Set ; <nl> <nl> import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> import org . mockito . Mockito ; <nl> + import org . powermock . core . classloader . annotations . PrepareForTest ; <nl> + import org . powermock . modules . junit4 . PowerMockRunner ; <nl> import org . xml . sax . Attributes ; <nl> import org . xml . sax . SAXException ; <nl> <nl> + import com . google . common . io . Closeables ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> <nl> / * * <nl> @ @ - 53 , 6 + 63 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> * @ author Rick Giles <nl> * @ author lkuehne <nl> * / <nl> + @ RunWith ( PowerMockRunner . class ) <nl> + @ PrepareForTest ( { PackageNamesLoader . class , Closeables . class } ) <nl> public class PackageNamesLoaderTest extends AbstractPathTestSupport { <nl> @ Override <nl> protected String getPackageLocation ( ) { <nl> @ @ - 72 , 6 + 84 , 10 @ @ public class PackageNamesLoaderTest extends AbstractPathTestSupport { <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> public void testPackagesFile ( ) throws Exception { <nl> + mockStatic ( Closeables . class ) ; <nl> + doNothing ( ) . when ( Closeables . class ) ; <nl> + Closeables . closeQuietly ( any ( InputStream . class ) ) ; <nl> + <nl> final Method processFileMethod = PackageNamesLoader . class . getDeclaredMethod ( " processFile " , <nl> URL . class , PackageNamesLoader . class ) ; <nl> processFileMethod . setAccessible ( true ) ; <nl> @ @ - 113 , 6 + 129 , 9 @ @ public class PackageNamesLoaderTest extends AbstractPathTestSupport { <nl> final Set < String > checkstylePackagesSet = <nl> new HashSet < > ( Arrays . asList ( expectedPackageNames ) ) ; <nl> assertEquals ( " Invalid names set . " , checkstylePackagesSet , actualPackageNames ) ; <nl> + <nl> + verifyStatic ( times ( 1 ) ) ; <nl> + Closeables . closeQuietly ( any ( InputStream . class ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> index 678331b . . d2ba676 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> @ @ - 36 , 6 + 36 , 7 @ @ import java . util . regex . Pattern ; <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> @ @ - 105 , 9 + 106 , 13 @ @ public class XMLLoggerTest { <nl> @ Test <nl> public void testCloseStream ( ) <nl> throws IOException { <nl> - final XMLLogger logger = new XMLLogger ( outStream , true ) ; <nl> + final XMLLogger logger = new XMLLogger ( outStream , <nl> + AutomaticBean . OutputStreamOptions . CLOSE ) ; <nl> logger . auditStarted ( null ) ; <nl> logger . auditFinished ( null ) ; <nl> + <nl> + assertEquals ( " Invalid close count " , 1 , outStream . getCloseCount ( ) ) ; <nl> + <nl> final String [ ] expectedLines = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> verifyLines ( expectedLines ) ; <nl> } <nl> @ @ - 115 , 9 + 120 , 13 @ @ public class XMLLoggerTest { <nl> @ Test <nl> public void testNoCloseStream ( ) <nl> throws IOException { <nl> - final XMLLogger logger = new XMLLogger ( outStream , false ) ; <nl> + final XMLLogger logger = new XMLLogger ( outStream , <nl> + AutomaticBean . OutputStreamOptions . NONE ) ; <nl> logger . auditStarted ( null ) ; <nl> logger . auditFinished ( null ) ; <nl> + <nl> + assertEquals ( " Invalid close count " , 0 , outStream . getCloseCount ( ) ) ; <nl> + <nl> outStream . close ( ) ; <nl> final String [ ] expectedLines = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> verifyLines ( expectedLines ) ;
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 59949a8 . . 282c67d 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 331 , 6 + 331 , 7 @ @ <nl> < junit printsummary = " yes " <nl> fork = " yes " <nl> haltonfailure = " no " <nl> + showoutput = " yes " <nl> failureProperty = " tests . have . failed " > <nl> < jvmarg value = " - Dtestinputs . dir = $ { testinputs . dir } " / > <nl> < formatter type = " xml " / > <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / Check . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / Check . java <nl> index 0c70585 . . ab217ab 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / Check . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / Check . java <nl> @ @ - 282 , 9 + 282 , 6 @ @ public abstract class Check <nl> * / <nl> public void log ( int aLineNo , int aColNo , String aKey , Object [ ] aArgs ) <nl> { <nl> - final String fname = getFilename ( ) ; <nl> - System . out . println ( fname + " : " + aLineNo + " : " + aKey ) ; <nl> - <nl> final int col = aColNo + 1 ; <nl> / / final int col = 1 + Utils . lengthExpandedTabs ( <nl> / / mLines [ aLineNo - 1 ] , aColNo , mTabWidth ) ; <nl> @ @ - 313 , 7 + 310 , 7 @ @ public abstract class Check <nl> / / PERF : check perf impact , maybe cache result <nl> final String className = this . getClass ( ) . getName ( ) ; <nl> final String packageName = <nl> - className . substring ( className . lastIndexOf ( ' . ' ) + 1 ) ; <nl> + className . substring ( 0 , className . lastIndexOf ( ' . ' ) ) ; <nl> return packageName + " . " + " messages " ; <nl> } <nl> } <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> index 6ce5597 . . d3c410b 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> @ @ - 96 , 7 + 96 , 6 @ @ public class LocalizedMessage <nl> / * * @ return the translated message * * / <nl> public String getMessage ( ) <nl> { <nl> - System . err . println ( " LocalizedMessage . getMessage " ) ; <nl> try { <nl> / / PERF : Very simple approach - wait for performance problems . <nl> / / Important to use the default class loader , and not the one in the <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / AvoidStarImportTest . java b / src / tests / com / puppycrawl / tools / checkstyle / AvoidStarImportTest . java <nl> index 8cf94b6 . . fa3e659 100644 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / AvoidStarImportTest . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / AvoidStarImportTest . java <nl> @ @ - 47 , 7 + 47 , 15 @ @ extends TestCase <nl> assertEquals ( msgs . getMessages ( ) [ 0 ] . getLineNo ( ) , 7 ) ; <nl> assertEquals ( msgs . getMessages ( ) [ 1 ] . getLineNo ( ) , 9 ) ; <nl> assertEquals ( msgs . getMessages ( ) [ 2 ] . getLineNo ( ) , 10 ) ; <nl> - assertEquals ( msgs . getMessages ( ) [ 0 ] . getMessage ( ) , " help me Ronda " ) ; <nl> + assertEquals ( <nl> + " Avoid using the ' . * ' form of import . " , <nl> + msgs . getMessages ( ) [ 0 ] . getMessage ( ) ) ; <nl> + assertEquals ( <nl> + " Avoid using the ' . * ' form of import . " , <nl> + msgs . getMessages ( ) [ 1 ] . getMessage ( ) ) ; <nl> + assertEquals ( <nl> + " Avoid using the ' . * ' form of import . " , <nl> + msgs . getMessages ( ) [ 2 ] . getMessage ( ) ) ; <nl> } <nl> <nl> / * *

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 index 55e7235 . . 5d60598 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 @ @ - 53 , 6 + 53 , 24 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * / 
 public final class ConfigurationLoader { 
 
 + / * * 
 + * Enum to specify behaviour regarding ignored modules . 
 + * / 
 + public enum IgnoredModulesOptions { 
 + / * * 
 + * Omit ignored modules . 
 + * / 
 + OMIT , 
 + 
 + / * * 
 + * Execute ignored modules . 
 + * / 
 + EXECUTE 
 + } 
 + 
 + / * * Format of message for sax parse exception . * / 
 + private static final String SAX _ PARSE _ EXCEPTION _ FORMAT = " % s - % s : % s : % s " ; 
 + 
 / * * The public ID for version 1 _ 0 of the configuration dtd . * / 
 private static final String DTD _ PUBLIC _ ID _ 1 _ 0 = 
 " - / / Puppy Crawl / / DTD Check Configuration 1 . 0 / / EN " ; 
 @ @ - 179 , 7 + 197 , 7 @ @ public final class ConfigurationLoader { 
 * / 
 public static Configuration loadConfiguration ( String config , 
 PropertyResolver overridePropsResolver ) throws CheckstyleException { 
 - return loadConfiguration ( config , overridePropsResolver , false ) ; 
 + return loadConfiguration ( config , overridePropsResolver , IgnoredModulesOptions . EXECUTE ) ; 
 } 
 
 / * * 
 @ @ - 193 , 7 + 211 , 8 @ @ public final class ConfigurationLoader { 
 public static Configuration loadConfiguration ( String config , 
 PropertyResolver overridePropsResolver , ThreadModeSettings threadModeSettings ) 
 throws CheckstyleException { 
 - return loadConfiguration ( config , overridePropsResolver , false , threadModeSettings ) ; 
 + return loadConfiguration ( config , overridePropsResolver , 
 + IgnoredModulesOptions . EXECUTE , threadModeSettings ) ; 
 } 
 
 / * * 
 @ @ - 205 , 8 + 224 , 10 @ @ public final class ConfigurationLoader { 
 * ' ignore ' should be omitted , { @ code false } otherwise 
 * @ return the check configurations 
 * @ throws CheckstyleException if an error occurs 
 + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 * @ noinspection BooleanParameter 
 * / 
 + @ Deprecated 
 public static Configuration loadConfiguration ( String config , 
 PropertyResolver overridePropsResolver , boolean omitIgnoredModules ) 
 throws CheckstyleException { 
 @ @ - 224 , 8 + 245 , 10 @ @ public final class ConfigurationLoader { 
 * @ param threadModeSettings the thread mode configuration 
 * @ return the check configurations 
 * @ throws CheckstyleException if an error occurs 
 + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 * @ noinspection BooleanParameter 
 * / 
 + @ Deprecated 
 public static Configuration loadConfiguration ( String config , 
 PropertyResolver overridePropsResolver , 
 boolean omitIgnoredModules , ThreadModeSettings threadModeSettings ) 
 @ @ - 274 , 8 + 297 , 10 @ @ public final class ConfigurationLoader { 
 * ' ignore ' should be omitted , { @ code false } otherwise 
 * @ return the check configurations 
 * @ throws CheckstyleException if an error occurs 
 + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 * @ noinspection BooleanParameter 
 * / 
 + @ Deprecated 
 public static Configuration loadConfiguration ( InputSource configSource , 
 PropertyResolver overridePropsResolver , boolean omitIgnoredModules ) 
 throws CheckstyleException { 
 @ @ - 295 , 8 + 320 , 10 @ @ public final class ConfigurationLoader { 
 * @ param threadModeSettings the thread mode configuration 
 * @ return the check configurations 
 * @ throws CheckstyleException if an error occurs 
 + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 * @ noinspection BooleanParameter 
 * / 
 + @ Deprecated 
 public static Configuration loadConfiguration ( InputSource configSource , 
 PropertyResolver overridePropsResolver , 
 boolean omitIgnoredModules , ThreadModeSettings threadModeSettings ) 
 @ @ - 309 , 7 + 336 , 105 @ @ public final class ConfigurationLoader { 
 return loader . configuration ; 
 } 
 catch ( final SAXParseException ex ) { 
 - final String message = String . format ( Locale . ROOT , " % s - % s : % s : % s " , 
 + final String message = String . format ( Locale . ROOT , SAX _ PARSE _ EXCEPTION _ FORMAT , 
 + UNABLE _ TO _ PARSE _ EXCEPTION _ PREFIX , 
 + ex . getMessage ( ) , ex . getLineNumber ( ) , ex . getColumnNumber ( ) ) ; 
 + throw new CheckstyleException ( message , ex ) ; 
 + } 
 + catch ( final ParserConfigurationException | IOException | SAXException ex ) { 
 + throw new CheckstyleException ( UNABLE _ TO _ PARSE _ EXCEPTION _ PREFIX , ex ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Returns the module configurations in a specified file . 
 + * 
 + * @ param config location of config file , can be either a URL or a filename 
 + * @ param overridePropsResolver overriding properties 
 + * @ param ignoredModulesOptions { @ code OMIT } if modules with severity 
 + * ' ignore ' should be omitted , { @ code EXECUTE } otherwise 
 + * @ return the check configurations 
 + * @ throws CheckstyleException if an error occurs 
 + * / 
 + public static Configuration loadConfiguration ( String config , 
 + PropertyResolver overridePropsResolver , 
 + IgnoredModulesOptions ignoredModulesOptions ) 
 + throws CheckstyleException { 
 + return loadConfiguration ( config , overridePropsResolver , ignoredModulesOptions , 
 + ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ) ; 
 + } 
 + 
 + / * * 
 + * Returns the module configurations in a specified file . 
 + * 
 + * @ param config location of config file , can be either a URL or a filename 
 + * @ param overridePropsResolver overriding properties 
 + * @ param ignoredModulesOptions { @ code OMIT } if modules with severity 
 + * ' ignore ' should be omitted , { @ code EXECUTE } otherwise 
 + * @ param threadModeSettings the thread mode configuration 
 + * @ return the check configurations 
 + * @ throws CheckstyleException if an error occurs 
 + * / 
 + public static Configuration loadConfiguration ( String config , 
 + PropertyResolver overridePropsResolver , 
 + IgnoredModulesOptions ignoredModulesOptions , 
 + ThreadModeSettings threadModeSettings ) 
 + throws CheckstyleException { 
 + / / figure out if this is a File or a URL 
 + final URI uri = CommonUtils . getUriByFilename ( config ) ; 
 + final InputSource source = new InputSource ( uri . toString ( ) ) ; 
 + return loadConfiguration ( source , overridePropsResolver , 
 + ignoredModulesOptions , threadModeSettings ) ; 
 + } 
 + 
 + / * * 
 + * Returns the module configurations from a specified input source . 
 + * Note that if the source does wrap an open byte or character 
 + * stream , clients are required to close that stream by themselves 
 + * 
 + * @ param configSource the input stream to the Checkstyle configuration 
 + * @ param overridePropsResolver overriding properties 
 + * @ param ignoredModulesOptions { @ code OMIT } if modules with severity 
 + * ' ignore ' should be omitted , { @ code EXECUTE } otherwise 
 + * @ return the check configurations 
 + * @ throws CheckstyleException if an error occurs 
 + * / 
 + public static Configuration loadConfiguration ( InputSource configSource , 
 + PropertyResolver overridePropsResolver , 
 + IgnoredModulesOptions ignoredModulesOptions ) 
 + throws CheckstyleException { 
 + return loadConfiguration ( configSource , overridePropsResolver , 
 + ignoredModulesOptions , ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ) ; 
 + } 
 + 
 + / * * 
 + * Returns the module configurations from a specified input source . 
 + * Note that if the source does wrap an open byte or character 
 + * stream , clients are required to close that stream by themselves 
 + * 
 + * @ param configSource the input stream to the Checkstyle configuration 
 + * @ param overridePropsResolver overriding properties 
 + * @ param ignoredModulesOptions { @ code OMIT } if modules with severity 
 + * ' ignore ' should be omitted , { @ code EXECUTE } otherwise 
 + * @ param threadModeSettings the thread mode configuration 
 + * @ return the check configurations 
 + * @ throws CheckstyleException if an error occurs 
 + * / 
 + public static Configuration loadConfiguration ( InputSource configSource , 
 + PropertyResolver overridePropsResolver , 
 + IgnoredModulesOptions ignoredModulesOptions , 
 + ThreadModeSettings threadModeSettings ) 
 + throws CheckstyleException { 
 + try { 
 + final boolean omitIgnoreModules = ignoredModulesOptions = = IgnoredModulesOptions . OMIT ; 
 + final ConfigurationLoader loader = 
 + new ConfigurationLoader ( overridePropsResolver , 
 + omitIgnoreModules , threadModeSettings ) ; 
 + loader . parseInputSource ( configSource ) ; 
 + return loader . configuration ; 
 + } 
 + catch ( final SAXParseException ex ) { 
 + final String message = String . format ( Locale . ROOT , SAX _ PARSE _ EXCEPTION _ FORMAT , 
 UNABLE _ TO _ PARSE _ EXCEPTION _ PREFIX , 
 ex . getMessage ( ) , ex . getLineNumber ( ) , ex . getColumnNumber ( ) ) ; 
 throw new CheckstyleException ( message , ex ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 index 5810354 . . d801dd5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 @ @ - 40 , 6 + 40 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; 
 * 
 * @ author < a href = " mailto : stephane . bailliez @ wanadoo . fr " > Stephane Bailliez < / a > 
 * @ see XMLLogger 
 + * @ noinspection ClassWithTooManyConstructors 
 * / 
 public class DefaultLogger extends AutomaticBean implements AuditListener { 
 
 @ @ - 76 , 8 + 77 , 10 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { 
 * Creates a new { @ code DefaultLogger } instance . 
 * @ param outputStream where to log infos and errors 
 * @ param closeStreamsAfterUse if oS should be closed in auditFinished ( ) 
 + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 * @ noinspection BooleanParameter 
 * / 
 + @ Deprecated 
 public DefaultLogger ( OutputStream outputStream , boolean closeStreamsAfterUse ) { 
 / / no need to close oS twice 
 this ( outputStream , closeStreamsAfterUse , outputStream , false ) ; 
 @ @ - 89 , 8 + 92 , 10 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { 
 * @ param closeInfoAfterUse auditFinished should close infoStream . 
 * @ param errorStream the { @ code OutputStream } for error messages . 
 * @ param closeErrorAfterUse auditFinished should close errorStream 
 + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 * @ noinspection BooleanParameter 
 * / 
 + @ Deprecated 
 public DefaultLogger ( OutputStream infoStream , 
 boolean closeInfoAfterUse , 
 OutputStream errorStream , 
 @ @ - 107 , 8 + 112 , 10 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { 
 * @ param errorStream the { @ code OutputStream } for error messages 
 * @ param closeErrorAfterUse auditFinished should close errorStream 
 * @ param messageFormatter formatter for the log message . 
 + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 * @ noinspection BooleanParameter 
 * / 
 + @ Deprecated 
 public DefaultLogger ( OutputStream infoStream , 
 boolean closeInfoAfterUse , 
 OutputStream errorStream , 
 @ @ - 131 , 6 + 138 , 61 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { 
 } 
 
 / * * 
 + * Creates a new { @ code DefaultLogger } instance . 
 + * @ param outputStream where to log infos and errors 
 + * @ param outputStreamOptions if { @ code CLOSE } that should be closed in auditFinished ( ) 
 + * / 
 + public DefaultLogger ( OutputStream outputStream , OutputStreamOptions outputStreamOptions ) { 
 + / / no need to close oS twice 
 + this ( outputStream , outputStreamOptions , outputStream , OutputStreamOptions . NONE ) ; 
 + } 
 + 
 + / * * 
 + * Creates a new { @ code DefaultLogger } instance . 
 + * @ param infoStream the { @ code OutputStream } for info messages . 
 + * @ param infoStreamOptions if { @ code CLOSE } info should be closed in auditFinished ( ) 
 + * @ param errorStream the { @ code OutputStream } for error messages . 
 + * @ param errorStreamOptions if { @ code CLOSE } error should be closed in auditFinished ( ) 
 + * / 
 + public DefaultLogger ( OutputStream infoStream , 
 + OutputStreamOptions infoStreamOptions , 
 + OutputStream errorStream , 
 + OutputStreamOptions errorStreamOptions ) { 
 + this ( infoStream , infoStreamOptions , errorStream , errorStreamOptions , 
 + new AuditEventDefaultFormatter ( ) ) ; 
 + } 
 + 
 + / * * 
 + * Creates a new { @ code DefaultLogger } instance . 
 + * 
 + * @ param infoStream the { @ code OutputStream } for info messages 
 + * @ param infoStreamOptions if { @ code CLOSE } info should be closed in auditFinished ( ) 
 + * @ param errorStream the { @ code OutputStream } for error messages 
 + * @ param errorStreamOptions if { @ code CLOSE } error should be closed in auditFinished ( ) 
 + * @ param messageFormatter formatter for the log message . 
 + * / 
 + public DefaultLogger ( OutputStream infoStream , 
 + OutputStreamOptions infoStreamOptions , 
 + OutputStream errorStream , 
 + OutputStreamOptions errorStreamOptions , 
 + AuditEventFormatter messageFormatter ) { 
 + closeInfo = infoStreamOptions = = OutputStreamOptions . CLOSE ; 
 + closeError = errorStreamOptions = = OutputStreamOptions . CLOSE ; 
 + final Writer infoStreamWriter = new OutputStreamWriter ( infoStream , StandardCharsets . UTF _ 8 ) ; 
 + infoWriter = new PrintWriter ( infoStreamWriter ) ; 
 + 
 + if ( infoStream = = errorStream ) { 
 + errorWriter = infoWriter ; 
 + } 
 + else { 
 + final Writer errorStreamWriter = new OutputStreamWriter ( errorStream , 
 + StandardCharsets . UTF _ 8 ) ; 
 + errorWriter = new PrintWriter ( errorStreamWriter ) ; 
 + } 
 + formatter = messageFormatter ; 
 + } 
 + 
 + / * * 
 * Print an Emacs compliant line on the error stream . 
 * If the column number is non zero , then also display it . 
 * @ see AuditListener 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index 22215ac . . ca869bb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 47 , 6 + 47 , 7 @ @ import org . apache . commons . logging . LogFactory ; 
 
 import com . google . common . io . Closeables ; 
 import com . puppycrawl . tools . checkstyle . api . AuditListener ; 
 + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 @ @ - 491 , 9 + 492 , 18 @ @ public final class Main { 
 final ThreadModeSettings multiThreadModeSettings = 
 new ThreadModeSettings ( 
 cliOptions . checkerThreadsNumber , cliOptions . treeWalkerThreadsNumber ) ; 
 + 
 + final ConfigurationLoader . IgnoredModulesOptions ignoredModulesOptions ; 
 + if ( cliOptions . executeIgnoredModules ) { 
 + ignoredModulesOptions = ConfigurationLoader . IgnoredModulesOptions . EXECUTE ; 
 + } 
 + else { 
 + ignoredModulesOptions = ConfigurationLoader . IgnoredModulesOptions . OMIT ; 
 + } 
 + 
 final Configuration config = ConfigurationLoader . loadConfiguration ( 
 cliOptions . configLocation , new PropertiesExpander ( props ) , 
 - ! cliOptions . executeIgnoredModules , multiThreadModeSettings ) ; 
 + ignoredModulesOptions , multiThreadModeSettings ) ; 
 
 / / create a listener for output 
 final AuditListener listener = createListener ( cliOptions . format , cliOptions . outputLocation ) ; 
 @ @ - 582 , 14 + 592 , 14 @ @ public final class Main { 
 
 / / setup the output stream 
 final OutputStream out ; 
 - final boolean closeOutputStream ; 
 + final AutomaticBean . OutputStreamOptions closeOutputStream ; 
 if ( outputLocation = = null ) { 
 out = System . out ; 
 - closeOutputStream = false ; 
 + closeOutputStream = AutomaticBean . OutputStreamOptions . NONE ; 
 } 
 else { 
 out = new FileOutputStream ( outputLocation ) ; 
 - closeOutputStream = true ; 
 + closeOutputStream = AutomaticBean . OutputStreamOptions . CLOSE ; 
 } 
 
 / / setup a listener 
 @ @ - 599 , 11 + 609 , 12 @ @ public final class Main { 
 
 } 
 else if ( PLAIN _ FORMAT _ NAME . equals ( format ) ) { 
 - listener = new DefaultLogger ( out , closeOutputStream , out , false ) ; 
 + listener = new DefaultLogger ( out , closeOutputStream , out , 
 + AutomaticBean . OutputStreamOptions . NONE ) ; 
 
 } 
 else { 
 - if ( closeOutputStream ) { 
 + if ( closeOutputStream = = AutomaticBean . OutputStreamOptions . CLOSE ) { 
 CommonUtils . close ( out ) ; 
 } 
 final LocalizedMessage outputFormatExceptionMessage = new LocalizedMessage ( 0 , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 index db7be51 . . b88a8cc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 @ @ - 67 , 14 + 67 , 27 @ @ public class XMLLogger 
 * Sets the output to a defined stream . 
 * @ param outputStream the stream to write logs to . 
 * @ param closeStream close oS in auditFinished 
 + * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 * @ noinspection BooleanParameter 
 * / 
 + @ Deprecated 
 public XMLLogger ( OutputStream outputStream , boolean closeStream ) { 
 setOutputStream ( outputStream ) ; 
 this . closeStream = closeStream ; 
 } 
 
 / * * 
 + * Creates a new { @ code XMLLogger } instance . 
 + * Sets the output to a defined stream . 
 + * @ param outputStream the stream to write logs to . 
 + * @ param outputStreamOptions if { @ code CLOSE } stream should be closed in auditFinished ( ) 
 + * / 
 + public XMLLogger ( OutputStream outputStream , OutputStreamOptions outputStreamOptions ) { 
 + setOutputStream ( outputStream ) ; 
 + closeStream = outputStreamOptions = = OutputStreamOptions . CLOSE ; 
 + } 
 + 
 + / * * 
 * Sets the OutputStream . 
 * @ param outputStream the OutputStream to use 
 * * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 index f1b287f . . 04a6158 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 @ @ - 54 , 6 + 54 , 7 @ @ import com . puppycrawl . tools . checkstyle . PropertiesExpander ; 
 import com . puppycrawl . tools . checkstyle . ThreadModeSettings ; 
 import com . puppycrawl . tools . checkstyle . XMLLogger ; 
 import com . puppycrawl . tools . checkstyle . api . AuditListener ; 
 + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . RootModule ; 
 @ @ - 395 , 9 + 396 , 16 @ @ public class CheckstyleAntTask extends Task { 
 final Properties props = createOverridingProperties ( ) ; 
 final ThreadModeSettings threadModeSettings = 
 ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ; 
 - final Configuration configuration = ConfigurationLoader . loadConfiguration ( 
 - config , new PropertiesExpander ( props ) , 
 - ! executeIgnoredModules , threadModeSettings ) ; 
 + final ConfigurationLoader . IgnoredModulesOptions ignoredModulesOptions ; 
 + if ( executeIgnoredModules ) { 
 + ignoredModulesOptions = ConfigurationLoader . IgnoredModulesOptions . EXECUTE ; 
 + } 
 + else { 
 + ignoredModulesOptions = ConfigurationLoader . IgnoredModulesOptions . OMIT ; 
 + } 
 + 
 + final Configuration configuration = ConfigurationLoader . loadConfiguration ( config , 
 + new PropertiesExpander ( props ) , ignoredModulesOptions , threadModeSettings ) ; 
 
 final ClassLoader moduleClassLoader = 
 Checker . class . getClassLoader ( ) ; 
 @ @ - 478 , 7 + 486 , 8 @ @ public class CheckstyleAntTask extends Task { 
 if ( formatters . isEmpty ( ) ) { 
 final OutputStream debug = new LogOutputStream ( this , Project . MSG _ DEBUG ) ; 
 final OutputStream err = new LogOutputStream ( this , Project . MSG _ ERR ) ; 
 - listeners [ 0 ] = new DefaultLogger ( debug , true , err , true ) ; 
 + listeners [ 0 ] = new DefaultLogger ( debug , AutomaticBean . OutputStreamOptions . CLOSE , 
 + err , AutomaticBean . OutputStreamOptions . CLOSE ) ; 
 } 
 else { 
 for ( int i = 0 ; i < formatterCount ; i + + ) { 
 @ @ - 684 , 11 + 693 , 16 @ @ public class CheckstyleAntTask extends Task { 
 if ( toFile = = null | | ! useFile ) { 
 defaultLogger = new DefaultLogger ( 
 new LogOutputStream ( task , Project . MSG _ DEBUG ) , 
 - true , new LogOutputStream ( task , Project . MSG _ ERR ) , true ) ; 
 + AutomaticBean . OutputStreamOptions . CLOSE , 
 + new LogOutputStream ( task , Project . MSG _ ERR ) , 
 + AutomaticBean . OutputStreamOptions . CLOSE 
 + ) ; 
 } 
 else { 
 final FileOutputStream infoStream = new FileOutputStream ( toFile ) ; 
 - defaultLogger = new DefaultLogger ( infoStream , true , infoStream , false ) ; 
 + defaultLogger = 
 + new DefaultLogger ( infoStream , AutomaticBean . OutputStreamOptions . CLOSE , 
 + infoStream , AutomaticBean . OutputStreamOptions . NONE ) ; 
 } 
 return defaultLogger ; 
 } 
 @ @ - 702 , 10 + 716 , 12 @ @ public class CheckstyleAntTask extends Task { 
 private AuditListener createXmlLogger ( Task task ) throws IOException { 
 final AuditListener xmlLogger ; 
 if ( toFile = = null | | ! useFile ) { 
 - xmlLogger = new XMLLogger ( new LogOutputStream ( task , Project . MSG _ INFO ) , true ) ; 
 + xmlLogger = new XMLLogger ( new LogOutputStream ( task , Project . MSG _ INFO ) , 
 + AutomaticBean . OutputStreamOptions . CLOSE ) ; 
 } 
 else { 
 - xmlLogger = new XMLLogger ( new FileOutputStream ( toFile ) , true ) ; 
 + xmlLogger = new XMLLogger ( new FileOutputStream ( toFile ) , 
 + AutomaticBean . OutputStreamOptions . CLOSE ) ; 
 } 
 return xmlLogger ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java 
 index ea61718 . . 7e977ea 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java 
 @ @ - 56 , 6 + 56 , 21 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 public class AutomaticBean 
 implements Configurable , Contextualizable { 
 
 + / * * 
 + * Enum to specify behaviour regarding ignored modules . 
 + * / 
 + public enum OutputStreamOptions { 
 + / * * 
 + * Close stream in the end . 
 + * / 
 + CLOSE , 
 + 
 + / * * 
 + * Do nothing in the end . 
 + * / 
 + NONE 
 + } 
 + 
 / * * Comma separator for StringTokenizer . * / 
 private static final String COMMA _ SEPARATOR = " , " ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 index 157f5f8 . . deb8849 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 @ @ - 173 , 6 + 173 , 25 @ @ public class ConfigurationLoaderTest { 
 } 
 
 @ Test 
 + public void testMissingPropertyNameInMethodWithBooleanParameter ( ) { 
 + try { 
 + final String fName = getConfigPath ( " missing _ property _ name . xml " ) ; 
 + ConfigurationLoader . loadConfiguration ( fName , new PropertiesExpander ( new Properties ( ) ) , 
 + false ) ; 
 + 
 + fail ( " missing property name " ) ; 
 + } 
 + catch ( CheckstyleException ex ) { 
 + assertTrue ( " Invalid exception message : " + ex . getMessage ( ) , 
 + ex . getMessage ( ) . contains ( " \ " name \ " " ) ) ; 
 + assertTrue ( " Invalid exception message : " + ex . getMessage ( ) , 
 + ex . getMessage ( ) . contains ( " \ " property \ " " ) ) ; 
 + assertTrue ( " Invalid exception message : " + ex . getMessage ( ) , 
 + ex . getMessage ( ) . endsWith ( " : 8 : 41 " ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 public void testMissingPropertyValue ( ) { 
 try { 
 loadConfiguration ( " missing _ property _ value . xml " ) ; 
 @ @ - 644 , 4 + 663 , 25 @ @ public class ConfigurationLoaderTest { 
 assertEquals ( " Fragments list has unexpected amount of items " , 
 1 , fragments . size ( ) ) ; 
 } 
 + 
 + @ Test 
 + public void testConstructors ( ) throws Exception { 
 + final Properties props = new Properties ( ) ; 
 + props . setProperty ( " checkstyle . basedir " , " basedir " ) ; 
 + final String fName = getConfigPath ( " checkstyle _ checks . xml " ) ; 
 + 
 + final Configuration configuration = ConfigurationLoader . loadConfiguration ( fName , 
 + new PropertiesExpander ( props ) , ConfigurationLoader . IgnoredModulesOptions . OMIT ) ; 
 + assertEquals ( " Name is not expected " , " Checker " , configuration . getName ( ) ) ; 
 + 
 + final DefaultConfiguration configuration1 = 
 + ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( 
 + new InputSource ( 
 + new FileInputStream ( getConfigPath ( " config _ with _ ignore . xml " ) ) ) , 
 + new PropertiesExpander ( new Properties ( ) ) , 
 + ConfigurationLoader . IgnoredModulesOptions . EXECUTE ) ; 
 + 
 + final Configuration [ ] children = configuration1 . getChildren ( ) ; 
 + assertEquals ( " Unexpected children size " , 1 , children [ 0 ] . getChildren ( ) . length ) ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java 
 index 0454950 . . 23136eb 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java 
 @ @ - 20 , 6 + 20 , 9 @ @ 
 package com . puppycrawl . tools . checkstyle ; 
 
 import static org . junit . Assert . assertTrue ; 
 + import static org . mockito . Mockito . spy ; 
 + import static org . mockito . Mockito . times ; 
 + import static org . mockito . Mockito . verify ; 
 
 import java . io . ByteArrayOutputStream ; 
 import java . io . OutputStream ; 
 @ @ - 28 , 6 + 31 , 7 @ @ import java . io . UnsupportedEncodingException ; 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 
 public class DefaultLoggerTest { 
 @ @ - 60 , 4 + 64 , 38 @ @ public class DefaultLoggerTest { 
 assertTrue ( " Message should contain exception info , but was " + output , 
 output . contains ( " java . lang . IllegalStateException : upsss " ) ) ; 
 } 
 + 
 + @ Test 
 + public void testNewCtor ( ) throws Exception { 
 + final OutputStream infoStream = spy ( new ByteArrayOutputStream ( ) ) ; 
 + final ByteArrayOutputStream errorStream = spy ( new ByteArrayOutputStream ( ) ) ; 
 + final DefaultLogger dl = new DefaultLogger ( infoStream , 
 + AutomaticBean . OutputStreamOptions . CLOSE , errorStream , 
 + AutomaticBean . OutputStreamOptions . CLOSE ) ; 
 + dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; 
 + dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; 
 + final String output = errorStream . toString ( " UTF - 8 " ) ; 
 + final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . addException " , 
 + new String [ ] { " myfile " } , null , 
 + getClass ( ) , null ) ; 
 + 
 + verify ( infoStream , times ( 1 ) ) . close ( ) ; 
 + verify ( errorStream , times ( 1 ) ) . close ( ) ; 
 + assertTrue ( " Message should contain exception info , but was " + output , 
 + output . contains ( addExceptionMessage . getMessage ( ) ) ) ; 
 + assertTrue ( " Message should contain exception info , but was " + output , 
 + output . contains ( " java . lang . IllegalStateException : upsss " ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testNewCtorWithTwoParameters ( ) { 
 + final OutputStream infoStream = new ByteArrayOutputStream ( ) ; 
 + final DefaultLogger dl = new DefaultLogger ( infoStream , 
 + AutomaticBean . OutputStreamOptions . NONE ) ; 
 + dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; 
 + dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; 
 + assertTrue ( " Message should contain exception info , but was " + infoStream , 
 + infoStream . toString ( ) . contains ( " java . lang . IllegalStateException : upsss " ) ) ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 index b394a84 . . 64a4433 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 @ @ - 24 , 12 + 24 , 18 @ @ import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertNotEquals ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 + import static org . mockito . Matchers . any ; 
 + import static org . mockito . Mockito . times ; 
 + import static org . powermock . api . mockito . PowerMockito . doNothing ; 
 import static org . powermock . api . mockito . PowerMockito . mock ; 
 + import static org . powermock . api . mockito . PowerMockito . mockStatic ; 
 + import static org . powermock . api . mockito . PowerMockito . verifyStatic ; 
 import static org . powermock . api . mockito . PowerMockito . when ; 
 
 import java . io . ByteArrayInputStream ; 
 import java . io . File ; 
 import java . io . IOException ; 
 + import java . io . InputStream ; 
 import java . lang . reflect . Constructor ; 
 import java . lang . reflect . Field ; 
 import java . lang . reflect . Method ; 
 @ @ - 42 , 10 + 48 , 14 @ @ import java . util . HashSet ; 
 import java . util . Set ; 
 
 import org . junit . Test ; 
 + import org . junit . runner . RunWith ; 
 import org . mockito . Mockito ; 
 + import org . powermock . core . classloader . annotations . PrepareForTest ; 
 + import org . powermock . modules . junit4 . PowerMockRunner ; 
 import org . xml . sax . Attributes ; 
 import org . xml . sax . SAXException ; 
 
 + import com . google . common . io . Closeables ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 
 / * * 
 @ @ - 53 , 6 + 63 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 * @ author Rick Giles 
 * @ author lkuehne 
 * / 
 + @ RunWith ( PowerMockRunner . class ) 
 + @ PrepareForTest ( { PackageNamesLoader . class , Closeables . class } ) 
 public class PackageNamesLoaderTest extends AbstractPathTestSupport { 
 @ Override 
 protected String getPackageLocation ( ) { 
 @ @ - 72 , 6 + 84 , 10 @ @ public class PackageNamesLoaderTest extends AbstractPathTestSupport { 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 public void testPackagesFile ( ) throws Exception { 
 + mockStatic ( Closeables . class ) ; 
 + doNothing ( ) . when ( Closeables . class ) ; 
 + Closeables . closeQuietly ( any ( InputStream . class ) ) ; 
 + 
 final Method processFileMethod = PackageNamesLoader . class . getDeclaredMethod ( " processFile " , 
 URL . class , PackageNamesLoader . class ) ; 
 processFileMethod . setAccessible ( true ) ; 
 @ @ - 113 , 6 + 129 , 9 @ @ public class PackageNamesLoaderTest extends AbstractPathTestSupport { 
 final Set < String > checkstylePackagesSet = 
 new HashSet < > ( Arrays . asList ( expectedPackageNames ) ) ; 
 assertEquals ( " Invalid names set . " , checkstylePackagesSet , actualPackageNames ) ; 
 + 
 + verifyStatic ( times ( 1 ) ) ; 
 + Closeables . closeQuietly ( any ( InputStream . class ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 index 678331b . . d2ba676 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 @ @ - 36 , 6 + 36 , 7 @ @ import java . util . regex . Pattern ; 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 @ @ - 105 , 9 + 106 , 13 @ @ public class XMLLoggerTest { 
 @ Test 
 public void testCloseStream ( ) 
 throws IOException { 
 - final XMLLogger logger = new XMLLogger ( outStream , true ) ; 
 + final XMLLogger logger = new XMLLogger ( outStream , 
 + AutomaticBean . OutputStreamOptions . CLOSE ) ; 
 logger . auditStarted ( null ) ; 
 logger . auditFinished ( null ) ; 
 + 
 + assertEquals ( " Invalid close count " , 1 , outStream . getCloseCount ( ) ) ; 
 + 
 final String [ ] expectedLines = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 verifyLines ( expectedLines ) ; 
 } 
 @ @ - 115 , 9 + 120 , 13 @ @ public class XMLLoggerTest { 
 @ Test 
 public void testNoCloseStream ( ) 
 throws IOException { 
 - final XMLLogger logger = new XMLLogger ( outStream , false ) ; 
 + final XMLLogger logger = new XMLLogger ( outStream , 
 + AutomaticBean . OutputStreamOptions . NONE ) ; 
 logger . auditStarted ( null ) ; 
 logger . auditFinished ( null ) ; 
 + 
 + assertEquals ( " Invalid close count " , 0 , outStream . getCloseCount ( ) ) ; 
 + 
 outStream . close ( ) ; 
 final String [ ] expectedLines = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 verifyLines ( expectedLines ) ;

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 59949a8 . . 282c67d 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 331 , 6 + 331 , 7 @ @ 
 < junit printsummary = " yes " 
 fork = " yes " 
 haltonfailure = " no " 
 + showoutput = " yes " 
 failureProperty = " tests . have . failed " > 
 < jvmarg value = " - Dtestinputs . dir = $ { testinputs . dir } " / > 
 < formatter type = " xml " / > 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / Check . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / Check . java 
 index 0c70585 . . ab217ab 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / Check . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / Check . java 
 @ @ - 282 , 9 + 282 , 6 @ @ public abstract class Check 
 * / 
 public void log ( int aLineNo , int aColNo , String aKey , Object [ ] aArgs ) 
 { 
 - final String fname = getFilename ( ) ; 
 - System . out . println ( fname + " : " + aLineNo + " : " + aKey ) ; 
 - 
 final int col = aColNo + 1 ; 
 / / final int col = 1 + Utils . lengthExpandedTabs ( 
 / / mLines [ aLineNo - 1 ] , aColNo , mTabWidth ) ; 
 @ @ - 313 , 7 + 310 , 7 @ @ public abstract class Check 
 / / PERF : check perf impact , maybe cache result 
 final String className = this . getClass ( ) . getName ( ) ; 
 final String packageName = 
 - className . substring ( className . lastIndexOf ( ' . ' ) + 1 ) ; 
 + className . substring ( 0 , className . lastIndexOf ( ' . ' ) ) ; 
 return packageName + " . " + " messages " ; 
 } 
 } 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 index 6ce5597 . . d3c410b 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 @ @ - 96 , 7 + 96 , 6 @ @ public class LocalizedMessage 
 / * * @ return the translated message * * / 
 public String getMessage ( ) 
 { 
 - System . err . println ( " LocalizedMessage . getMessage " ) ; 
 try { 
 / / PERF : Very simple approach - wait for performance problems . 
 / / Important to use the default class loader , and not the one in the 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / AvoidStarImportTest . java b / src / tests / com / puppycrawl / tools / checkstyle / AvoidStarImportTest . java 
 index 8cf94b6 . . fa3e659 100644 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / AvoidStarImportTest . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / AvoidStarImportTest . java 
 @ @ - 47 , 7 + 47 , 15 @ @ extends TestCase 
 assertEquals ( msgs . getMessages ( ) [ 0 ] . getLineNo ( ) , 7 ) ; 
 assertEquals ( msgs . getMessages ( ) [ 1 ] . getLineNo ( ) , 9 ) ; 
 assertEquals ( msgs . getMessages ( ) [ 2 ] . getLineNo ( ) , 10 ) ; 
 - assertEquals ( msgs . getMessages ( ) [ 0 ] . getMessage ( ) , " help me Ronda " ) ; 
 + assertEquals ( 
 + " Avoid using the ' . * ' form of import . " , 
 + msgs . getMessages ( ) [ 0 ] . getMessage ( ) ) ; 
 + assertEquals ( 
 + " Avoid using the ' . * ' form of import . " , 
 + msgs . getMessages ( ) [ 1 ] . getMessage ( ) ) ; 
 + assertEquals ( 
 + " Avoid using the ' . * ' form of import . " , 
 + msgs . getMessages ( ) [ 2 ] . getMessage ( ) ) ; 
 } 
 
 / * *
