BLEU SCORE: 0.04266331692956902

TEST MSG: minor : comment was added to circle . yml
GENERATED MSG: Issue # 2815 : change mvn command in circleCI cache

TEST DIFF (one line): diff - - git a / circle . yml b / circle . yml <nl> index 009dc4b . . 6486881 100644 <nl> - - - a / circle . yml <nl> + + + b / circle . yml <nl> @ @ - 12 , 6 + 12 , 7 @ @ machine : <nl> environment : <nl> CMD1 : " cd contribution / checkstyle - tester " <nl> DEP1 : " & & sed - i . ' ' ' s / ^ guava / # guava / ' projects - to - test - on . properties " <nl> + # we need this to let pass ' mvn site ' on no - projects mode to download all dependecies <nl> DEP2 : " & & echo ' class ClassEmpty { } ' > src / main / java / EmptyClass . java " <nl> DEP3 : " & & . / launch . sh - Dcheckstyle . config . location = my _ check . xml " <nl> TESTER _ DEPENDENCIES : $ CMD1 $ DEP1 $ DEP2 $ DEP3
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index abb4166 . . aa9239b 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 137 , 5 + 137 , 6 @ @ <nl> # # # InnerInterface ( . * ) <nl> # # # InnerClass ( . * ) " / > <nl> < / module > <nl> + < module name = " LogicConditionNeedOptimizationCheck " / > <nl> < / module > <nl> < / module > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 3a8e0d1 . . 68f975a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 156 , 8 + 156 , 7 @ @ public class SuppressWarningsHolder <nl> final boolean afterStart = <nl> entry . getFirstLine ( ) < line <nl> | | entry . getFirstLine ( ) = = line <nl> - & & ( entry . getFirstColumn ( ) < = column <nl> - | | column = = 0 ) ; <nl> + & & ( column = = 0 | | entry . getFirstColumn ( ) < = column ) ; <nl> final boolean beforeEnd = <nl> entry . getLastLine ( ) > line <nl> | | entry . getLastLine ( ) = = line & & entry <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> index 1fa51f2 . . 58c09d4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> @ @ - 253 , 9 + 253 , 9 @ @ public class AnnotationLocationCheck extends Check { <nl> else { <nl> allowingCondition = allowSamelineSingleParameterlessAnnotation ; <nl> } <nl> - return allowingCondition & & ! hasNodeBefore ( annotation ) <nl> - | | ! allowingCondition & & ! hasNodeBeside ( annotation ) <nl> - | | allowSamelineMultipleAnnotations ; <nl> + return allowSamelineMultipleAnnotations <nl> + | | allowingCondition & & ! hasNodeBefore ( annotation ) <nl> + | | ! allowingCondition & & ! hasNodeBeside ( annotation ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> index 204f0af . . 3c3e1e4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> @ @ - 501 , 10 + 501 , 10 @ @ public final class AnnotationUseStyleCheck extends Check { <nl> log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) ; <nl> } <nl> else if ( closingParens = = ClosingParens . NEVER <nl> - & & ! ast . branchContains ( TokenTypes . EXPR ) <nl> - & & ! ast . branchContains ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) <nl> - & & ! ast . branchContains ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) <nl> - & & parenExists ) { <nl> + & & parenExists <nl> + & & ! ast . branchContains ( TokenTypes . EXPR ) <nl> + & & ! ast . branchContains ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) <nl> + & & ! ast . branchContains ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ) { <nl> log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> index 4ae865f . . d9e4081 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> @ @ - 385 , 8 + 385 , 8 @ @ public class LeftCurlyCheck <nl> nextToken = leftCurly . getFirstChild ( ) ; <nl> } <nl> else { <nl> - if ( leftCurly . getParent ( ) . getParent ( ) . getType ( ) = = TokenTypes . ENUM _ DEF <nl> - & & ! ignoreEnums ) { <nl> + if ( ! ignoreEnums <nl> + & & leftCurly . getParent ( ) . getParent ( ) . getType ( ) = = TokenTypes . ENUM _ DEF ) { <nl> nextToken = leftCurly . getNextSibling ( ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> index 30814d3 . . 0d1a123 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> @ @ - 401 , 7 + 401 , 7 @ @ public class HiddenFieldCheck <nl> * ignoreSetter is true and ast is the parameter of a setter method . <nl> * / <nl> private boolean isIgnoredSetterParam ( DetailAST ast , String name ) { <nl> - if ( ast . getType ( ) = = TokenTypes . PARAMETER _ DEF & & ignoreSetter ) { <nl> + if ( ignoreSetter & & ast . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { <nl> final DetailAST parametersAST = ast . getParent ( ) ; <nl> final DetailAST methodAST = parametersAST . getParent ( ) ; <nl> if ( parametersAST . getChildCount ( ) = = 1 <nl> @ @ - 479 , 8 + 479 , 8 @ @ public class HiddenFieldCheck <nl> * / <nl> private boolean isIgnoredConstructorParam ( DetailAST ast ) { <nl> boolean result = false ; <nl> - if ( ast . getType ( ) = = TokenTypes . PARAMETER _ DEF <nl> - & & ignoreConstructorParameter ) { <nl> + if ( ignoreConstructorParameter <nl> + & & ast . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { <nl> final DetailAST parametersAST = ast . getParent ( ) ; <nl> final DetailAST constructorAST = parametersAST . getParent ( ) ; <nl> result = constructorAST . getType ( ) = = TokenTypes . CTOR _ DEF ; <nl> @ @ - 497 , 8 + 497 , 8 @ @ public class HiddenFieldCheck <nl> * / <nl> private boolean isIgnoredParamOfAbstractMethod ( DetailAST ast ) { <nl> boolean result = false ; <nl> - if ( ast . getType ( ) = = TokenTypes . PARAMETER _ DEF <nl> - & & ignoreAbstractMethods ) { <nl> + if ( ignoreAbstractMethods <nl> + & & ast . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { <nl> final DetailAST method = ast . getParent ( ) . getParent ( ) ; <nl> if ( method . getType ( ) = = TokenTypes . METHOD _ DEF ) { <nl> final DetailAST mods = method . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java <nl> index c1b9911 . . acb3f1d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java <nl> @ @ - 123 , 8 + 123 , 8 @ @ public final class OneStatementPerLineCheck extends Check { <nl> if ( ! hasResourcesPrevSibling & & isMultilineStatement ( currentStatement ) ) { <nl> currentStatement = ast . getPreviousSibling ( ) ; <nl> } <nl> - if ( isOnTheSameLine ( currentStatement , lastStatementEnd , <nl> - forStatementEnd ) & & ! inForHeader ) { <nl> + if ( ! inForHeader <nl> + & & isOnTheSameLine ( currentStatement , lastStatementEnd , forStatementEnd ) ) { <nl> log ( ast , MSG _ KEY ) ; <nl> } <nl> break ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> index 1a2ef8e . . 44c660f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> @ @ - 262 , 8 + 262 , 8 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { <nl> final int parentType = ast . getParent ( ) . getType ( ) ; <nl> final DetailAST modifiers = ast . getFirstChild ( ) ; <nl> <nl> - if ( ! ( ignoreFinal & & modifiers . branchContains ( TokenTypes . FINAL ) <nl> - | | parentType = = TokenTypes . OBJBLOCK ) ) { <nl> + if ( ! ( parentType = = TokenTypes . OBJBLOCK <nl> + | | ignoreFinal & & modifiers . branchContains ( TokenTypes . FINAL ) ) ) { <nl> final DetailAST variable = ast . findFirstToken ( TokenTypes . IDENT ) ; <nl> <nl> if ( ! isVariableMatchesIgnorePattern ( variable . getText ( ) ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> index 98685aa . . fa3bc91 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> @ @ - 785 , 7 + 785 , 7 @ @ public class CustomImportOrderCheck extends Check { <nl> final StringTokenizer tokens = new StringTokenizer ( packageFullPath , " . " ) ; <nl> int count = firstPackageDomainsCount ; <nl> <nl> - while ( tokens . hasMoreTokens ( ) & & count > 0 ) { <nl> + while ( count > 0 & & tokens . hasMoreTokens ( ) ) { <nl> builder . append ( tokens . nextToken ( ) ) . append ( ' . ' ) ; <nl> count - - ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> index 363663b . . 8e670a7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> @ @ - 417 , 8 + 417 , 8 @ @ public class ImportOrderCheck <nl> final int groupIdx = getGroupNumber ( name ) ; <nl> final int line = ident . getLineNo ( ) ; <nl> <nl> - if ( ! beforeFirstImport & & isAlphabeticallySortableStaticImport ( isStatic ) <nl> - | | groupIdx = = lastGroup ) { <nl> + if ( groupIdx = = lastGroup <nl> + | | ! beforeFirstImport & & isAlphabeticallySortableStaticImport ( isStatic ) ) { <nl> doVisitTokenInSameGroup ( isStatic , previous , name , line ) ; <nl> } <nl> else if ( groupIdx > lastGroup ) { <nl> @ @ - 469 , 17 + 469 , 17 @ @ public class ImportOrderCheck <nl> } <nl> else { <nl> final boolean shouldFireError = <nl> - / / current and previous static or current and <nl> - / / previous non - static <nl> - lastImportStatic = = isStatic <nl> - & & <nl> - / / and out of lexicographic order <nl> - compare ( lastImport , name , caseSensitive ) > 0 <nl> - | | <nl> / / previous non - static but current is static ( above ) <nl> / / or <nl> / / previous static but current is non - static ( under ) <nl> - previous ; <nl> + previous <nl> + | | <nl> + / / current and previous static or current and <nl> + / / previous non - static <nl> + lastImportStatic = = isStatic <nl> + & & <nl> + / / and out of lexicographic order <nl> + compare ( lastImport , name , caseSensitive ) > 0 ; <nl> <nl> if ( shouldFireError ) { <nl> log ( line , MSG _ ORDERING , name ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> index a47dcc3 . . 8a9981c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> @ @ - 577 , 8 + 577 , 9 @ @ public abstract class AbstractExpressionHandler { <nl> / / or has < lparen level > + 1 indentation <nl> final int lparenLevel = expandedTabsColumnNo ( lparen ) ; <nl> <nl> - if ( ! getIndent ( ) . isAcceptable ( rparenLevel ) & & isOnStartOfLine ( rparen ) <nl> - & & rparenLevel ! = lparenLevel + 1 ) { <nl> + if ( rparenLevel ! = lparenLevel + 1 <nl> + & & ! getIndent ( ) . isAcceptable ( rparenLevel ) <nl> + & & isOnStartOfLine ( rparen ) ) { <nl> logError ( rparen , " rparen " , rparenLevel ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> index a9ef8a4 . . be7c96b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> @ @ - 315 , 8 + 315 , 8 @ @ public class CommentsIndentationCheck extends Check { <nl> * / <nl> private static boolean isFallThroughSingleLineComment ( DetailAST prevStmt , DetailAST nextStmt ) { <nl> return prevStmt ! = null <nl> - & & prevStmt . getType ( ) ! = TokenTypes . LITERAL _ CASE <nl> & & nextStmt ! = null <nl> + & & prevStmt . getType ( ) ! = TokenTypes . LITERAL _ CASE <nl> & & ( nextStmt . getType ( ) = = TokenTypes . LITERAL _ CASE <nl> | | nextStmt . getType ( ) = = TokenTypes . LITERAL _ DEFAULT ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java <nl> index 4cdaaaf . . cfc60cf 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java <nl> @ @ - 81 , 8 + 81 , 8 @ @ public class SlistHandler extends BlockParentHandler { <nl> / / if our parent is a block handler we want to be transparent <nl> if ( getParent ( ) instanceof BlockParentHandler <nl> & & ! ( getParent ( ) instanceof SlistHandler ) <nl> - | | getParent ( ) instanceof CaseHandler <nl> - & & child instanceof SlistHandler ) { <nl> + | | child instanceof SlistHandler <nl> + & & getParent ( ) instanceof CaseHandler ) { <nl> return getParent ( ) . getSuggestedChildIndent ( child ) ; <nl> } <nl> return super . getSuggestedChildIndent ( child ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 3be5532 . . 689875a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 462 , 10 + 462 , 11 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> private boolean shouldCheck ( final DetailAST ast , final Scope nodeScope ) { <nl> final Scope surroundingScope = ScopeUtils . getSurroundingScope ( ast ) ; <nl> <nl> - return nodeScope . isIn ( scope ) <nl> - & & surroundingScope . isIn ( scope ) <nl> - & & ( excludeScope = = null | | nodeScope ! = excludeScope <nl> - & & surroundingScope ! = excludeScope ) ; <nl> + return ( excludeScope = = null <nl> + | | nodeScope ! = excludeScope <nl> + & & surroundingScope ! = excludeScope ) <nl> + & & nodeScope . isIn ( scope ) <nl> + & & surroundingScope . isIn ( scope ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 488 , 7 + 489 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> else { <nl> / / Check for inheritDoc <nl> boolean hasInheritDocTag = false ; <nl> - while ( it . hasNext ( ) & & ! hasInheritDocTag ) { <nl> + while ( ! hasInheritDocTag & & it . hasNext ( ) ) { <nl> hasInheritDocTag = it . next ( ) . isInheritDocTag ( ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> index 3f46102 . . 68d777c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> @ @ - 334 , 7 + 334 , 7 @ @ public class RedundantModifierCheck <nl> else { <nl> final DetailAST parentClassAst = ast . getParent ( ) . getParent ( ) ; <nl> <nl> - if ( parentClassAst . getType ( ) = = TokenTypes . INTERFACE _ DEF | | hasPublicModifier ) { <nl> + if ( hasPublicModifier | | parentClassAst . getType ( ) = = TokenTypes . INTERFACE _ DEF ) { <nl> isAccessibleFromPublic = isClassPublic ( parentClassAst ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> index be2edd8 . . 551da6a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> @ @ - 307 , 10 + 307 , 10 @ @ public class GenericWhitespaceCheck extends Check { <nl> * @ return checks if given character is valid <nl> * / <nl> private static boolean isCharacterValidAfterGenericEnd ( char charAfter ) { <nl> - return Character . isWhitespace ( charAfter ) <nl> - | | charAfter = = ' ( ' | | charAfter = = ' ) ' <nl> - | | charAfter = = ' , ' | | charAfter = = ' [ ' <nl> - | | charAfter = = ' . ' | | charAfter = = ' : ' <nl> - | | charAfter = = ' ; ' ; <nl> + return charAfter = = ' ( ' | | charAfter = = ' ) ' <nl> + | | charAfter = = ' , ' | | charAfter = = ' [ ' <nl> + | | charAfter = = ' . ' | | charAfter = = ' : ' <nl> + | | charAfter = = ' ; ' <nl> + | | Character . isWhitespace ( charAfter ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheck . java <nl> index 4a53384 . . 0f2e9ca 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheck . java <nl> @ @ - 123 , 9 + 123 , 9 @ @ public class WhitespaceAfterCheck <nl> <nl> if ( after < line . length ( ) ) { <nl> final char charAfter = line . charAt ( after ) ; <nl> - followedByWhitespace = Character . isWhitespace ( charAfter ) <nl> - | | targetAST . getType ( ) = = TokenTypes . SEMI <nl> - & & ( charAfter = = ' ; ' | | charAfter = = ' ) ' ) ; <nl> + followedByWhitespace = charAfter = = ' ; ' <nl> + | | charAfter = = ' ) ' <nl> + | | Character . isWhitespace ( charAfter ) ; <nl> } <nl> return followedByWhitespace ; <nl> }

TEST DIFF:
diff - - git a / circle . yml b / circle . yml 
 index 009dc4b . . 6486881 100644 
 - - - a / circle . yml 
 + + + b / circle . yml 
 @ @ - 12 , 6 + 12 , 7 @ @ machine : 
 environment : 
 CMD1 : " cd contribution / checkstyle - tester " 
 DEP1 : " & & sed - i . ' ' ' s / ^ guava / # guava / ' projects - to - test - on . properties " 
 + # we need this to let pass ' mvn site ' on no - projects mode to download all dependecies 
 DEP2 : " & & echo ' class ClassEmpty { } ' > src / main / java / EmptyClass . java " 
 DEP3 : " & & . / launch . sh - Dcheckstyle . config . location = my _ check . xml " 
 TESTER _ DEPENDENCIES : $ CMD1 $ DEP1 $ DEP2 $ DEP3

NEAREST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index abb4166 . . aa9239b 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 137 , 5 + 137 , 6 @ @ 
 # # # InnerInterface ( . * ) 
 # # # InnerClass ( . * ) " / > 
 < / module > 
 + < module name = " LogicConditionNeedOptimizationCheck " / > 
 < / module > 
 < / module > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 3a8e0d1 . . 68f975a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 156 , 8 + 156 , 7 @ @ public class SuppressWarningsHolder 
 final boolean afterStart = 
 entry . getFirstLine ( ) < line 
 | | entry . getFirstLine ( ) = = line 
 - & & ( entry . getFirstColumn ( ) < = column 
 - | | column = = 0 ) ; 
 + & & ( column = = 0 | | entry . getFirstColumn ( ) < = column ) ; 
 final boolean beforeEnd = 
 entry . getLastLine ( ) > line 
 | | entry . getLastLine ( ) = = line & & entry 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 index 1fa51f2 . . 58c09d4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 @ @ - 253 , 9 + 253 , 9 @ @ public class AnnotationLocationCheck extends Check { 
 else { 
 allowingCondition = allowSamelineSingleParameterlessAnnotation ; 
 } 
 - return allowingCondition & & ! hasNodeBefore ( annotation ) 
 - | | ! allowingCondition & & ! hasNodeBeside ( annotation ) 
 - | | allowSamelineMultipleAnnotations ; 
 + return allowSamelineMultipleAnnotations 
 + | | allowingCondition & & ! hasNodeBefore ( annotation ) 
 + | | ! allowingCondition & & ! hasNodeBeside ( annotation ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 index 204f0af . . 3c3e1e4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 @ @ - 501 , 10 + 501 , 10 @ @ public final class AnnotationUseStyleCheck extends Check { 
 log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) ; 
 } 
 else if ( closingParens = = ClosingParens . NEVER 
 - & & ! ast . branchContains ( TokenTypes . EXPR ) 
 - & & ! ast . branchContains ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) 
 - & & ! ast . branchContains ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) 
 - & & parenExists ) { 
 + & & parenExists 
 + & & ! ast . branchContains ( TokenTypes . EXPR ) 
 + & & ! ast . branchContains ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) 
 + & & ! ast . branchContains ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ) { 
 log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 index 4ae865f . . d9e4081 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 @ @ - 385 , 8 + 385 , 8 @ @ public class LeftCurlyCheck 
 nextToken = leftCurly . getFirstChild ( ) ; 
 } 
 else { 
 - if ( leftCurly . getParent ( ) . getParent ( ) . getType ( ) = = TokenTypes . ENUM _ DEF 
 - & & ! ignoreEnums ) { 
 + if ( ! ignoreEnums 
 + & & leftCurly . getParent ( ) . getParent ( ) . getType ( ) = = TokenTypes . ENUM _ DEF ) { 
 nextToken = leftCurly . getNextSibling ( ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 index 30814d3 . . 0d1a123 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 @ @ - 401 , 7 + 401 , 7 @ @ public class HiddenFieldCheck 
 * ignoreSetter is true and ast is the parameter of a setter method . 
 * / 
 private boolean isIgnoredSetterParam ( DetailAST ast , String name ) { 
 - if ( ast . getType ( ) = = TokenTypes . PARAMETER _ DEF & & ignoreSetter ) { 
 + if ( ignoreSetter & & ast . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { 
 final DetailAST parametersAST = ast . getParent ( ) ; 
 final DetailAST methodAST = parametersAST . getParent ( ) ; 
 if ( parametersAST . getChildCount ( ) = = 1 
 @ @ - 479 , 8 + 479 , 8 @ @ public class HiddenFieldCheck 
 * / 
 private boolean isIgnoredConstructorParam ( DetailAST ast ) { 
 boolean result = false ; 
 - if ( ast . getType ( ) = = TokenTypes . PARAMETER _ DEF 
 - & & ignoreConstructorParameter ) { 
 + if ( ignoreConstructorParameter 
 + & & ast . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { 
 final DetailAST parametersAST = ast . getParent ( ) ; 
 final DetailAST constructorAST = parametersAST . getParent ( ) ; 
 result = constructorAST . getType ( ) = = TokenTypes . CTOR _ DEF ; 
 @ @ - 497 , 8 + 497 , 8 @ @ public class HiddenFieldCheck 
 * / 
 private boolean isIgnoredParamOfAbstractMethod ( DetailAST ast ) { 
 boolean result = false ; 
 - if ( ast . getType ( ) = = TokenTypes . PARAMETER _ DEF 
 - & & ignoreAbstractMethods ) { 
 + if ( ignoreAbstractMethods 
 + & & ast . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { 
 final DetailAST method = ast . getParent ( ) . getParent ( ) ; 
 if ( method . getType ( ) = = TokenTypes . METHOD _ DEF ) { 
 final DetailAST mods = method . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java 
 index c1b9911 . . acb3f1d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java 
 @ @ - 123 , 8 + 123 , 8 @ @ public final class OneStatementPerLineCheck extends Check { 
 if ( ! hasResourcesPrevSibling & & isMultilineStatement ( currentStatement ) ) { 
 currentStatement = ast . getPreviousSibling ( ) ; 
 } 
 - if ( isOnTheSameLine ( currentStatement , lastStatementEnd , 
 - forStatementEnd ) & & ! inForHeader ) { 
 + if ( ! inForHeader 
 + & & isOnTheSameLine ( currentStatement , lastStatementEnd , forStatementEnd ) ) { 
 log ( ast , MSG _ KEY ) ; 
 } 
 break ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 index 1a2ef8e . . 44c660f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 @ @ - 262 , 8 + 262 , 8 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { 
 final int parentType = ast . getParent ( ) . getType ( ) ; 
 final DetailAST modifiers = ast . getFirstChild ( ) ; 
 
 - if ( ! ( ignoreFinal & & modifiers . branchContains ( TokenTypes . FINAL ) 
 - | | parentType = = TokenTypes . OBJBLOCK ) ) { 
 + if ( ! ( parentType = = TokenTypes . OBJBLOCK 
 + | | ignoreFinal & & modifiers . branchContains ( TokenTypes . FINAL ) ) ) { 
 final DetailAST variable = ast . findFirstToken ( TokenTypes . IDENT ) ; 
 
 if ( ! isVariableMatchesIgnorePattern ( variable . getText ( ) ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 index 98685aa . . fa3bc91 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 @ @ - 785 , 7 + 785 , 7 @ @ public class CustomImportOrderCheck extends Check { 
 final StringTokenizer tokens = new StringTokenizer ( packageFullPath , " . " ) ; 
 int count = firstPackageDomainsCount ; 
 
 - while ( tokens . hasMoreTokens ( ) & & count > 0 ) { 
 + while ( count > 0 & & tokens . hasMoreTokens ( ) ) { 
 builder . append ( tokens . nextToken ( ) ) . append ( ' . ' ) ; 
 count - - ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 index 363663b . . 8e670a7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 @ @ - 417 , 8 + 417 , 8 @ @ public class ImportOrderCheck 
 final int groupIdx = getGroupNumber ( name ) ; 
 final int line = ident . getLineNo ( ) ; 
 
 - if ( ! beforeFirstImport & & isAlphabeticallySortableStaticImport ( isStatic ) 
 - | | groupIdx = = lastGroup ) { 
 + if ( groupIdx = = lastGroup 
 + | | ! beforeFirstImport & & isAlphabeticallySortableStaticImport ( isStatic ) ) { 
 doVisitTokenInSameGroup ( isStatic , previous , name , line ) ; 
 } 
 else if ( groupIdx > lastGroup ) { 
 @ @ - 469 , 17 + 469 , 17 @ @ public class ImportOrderCheck 
 } 
 else { 
 final boolean shouldFireError = 
 - / / current and previous static or current and 
 - / / previous non - static 
 - lastImportStatic = = isStatic 
 - & & 
 - / / and out of lexicographic order 
 - compare ( lastImport , name , caseSensitive ) > 0 
 - | | 
 / / previous non - static but current is static ( above ) 
 / / or 
 / / previous static but current is non - static ( under ) 
 - previous ; 
 + previous 
 + | | 
 + / / current and previous static or current and 
 + / / previous non - static 
 + lastImportStatic = = isStatic 
 + & & 
 + / / and out of lexicographic order 
 + compare ( lastImport , name , caseSensitive ) > 0 ; 
 
 if ( shouldFireError ) { 
 log ( line , MSG _ ORDERING , name ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 index a47dcc3 . . 8a9981c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 @ @ - 577 , 8 + 577 , 9 @ @ public abstract class AbstractExpressionHandler { 
 / / or has < lparen level > + 1 indentation 
 final int lparenLevel = expandedTabsColumnNo ( lparen ) ; 
 
 - if ( ! getIndent ( ) . isAcceptable ( rparenLevel ) & & isOnStartOfLine ( rparen ) 
 - & & rparenLevel ! = lparenLevel + 1 ) { 
 + if ( rparenLevel ! = lparenLevel + 1 
 + & & ! getIndent ( ) . isAcceptable ( rparenLevel ) 
 + & & isOnStartOfLine ( rparen ) ) { 
 logError ( rparen , " rparen " , rparenLevel ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 index a9ef8a4 . . be7c96b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 @ @ - 315 , 8 + 315 , 8 @ @ public class CommentsIndentationCheck extends Check { 
 * / 
 private static boolean isFallThroughSingleLineComment ( DetailAST prevStmt , DetailAST nextStmt ) { 
 return prevStmt ! = null 
 - & & prevStmt . getType ( ) ! = TokenTypes . LITERAL _ CASE 
 & & nextStmt ! = null 
 + & & prevStmt . getType ( ) ! = TokenTypes . LITERAL _ CASE 
 & & ( nextStmt . getType ( ) = = TokenTypes . LITERAL _ CASE 
 | | nextStmt . getType ( ) = = TokenTypes . LITERAL _ DEFAULT ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java 
 index 4cdaaaf . . cfc60cf 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java 
 @ @ - 81 , 8 + 81 , 8 @ @ public class SlistHandler extends BlockParentHandler { 
 / / if our parent is a block handler we want to be transparent 
 if ( getParent ( ) instanceof BlockParentHandler 
 & & ! ( getParent ( ) instanceof SlistHandler ) 
 - | | getParent ( ) instanceof CaseHandler 
 - & & child instanceof SlistHandler ) { 
 + | | child instanceof SlistHandler 
 + & & getParent ( ) instanceof CaseHandler ) { 
 return getParent ( ) . getSuggestedChildIndent ( child ) ; 
 } 
 return super . getSuggestedChildIndent ( child ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 3be5532 . . 689875a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 462 , 10 + 462 , 11 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 private boolean shouldCheck ( final DetailAST ast , final Scope nodeScope ) { 
 final Scope surroundingScope = ScopeUtils . getSurroundingScope ( ast ) ; 
 
 - return nodeScope . isIn ( scope ) 
 - & & surroundingScope . isIn ( scope ) 
 - & & ( excludeScope = = null | | nodeScope ! = excludeScope 
 - & & surroundingScope ! = excludeScope ) ; 
 + return ( excludeScope = = null 
 + | | nodeScope ! = excludeScope 
 + & & surroundingScope ! = excludeScope ) 
 + & & nodeScope . isIn ( scope ) 
 + & & surroundingScope . isIn ( scope ) ; 
 } 
 
 / * * 
 @ @ - 488 , 7 + 489 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 else { 
 / / Check for inheritDoc 
 boolean hasInheritDocTag = false ; 
 - while ( it . hasNext ( ) & & ! hasInheritDocTag ) { 
 + while ( ! hasInheritDocTag & & it . hasNext ( ) ) { 
 hasInheritDocTag = it . next ( ) . isInheritDocTag ( ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 index 3f46102 . . 68d777c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 @ @ - 334 , 7 + 334 , 7 @ @ public class RedundantModifierCheck 
 else { 
 final DetailAST parentClassAst = ast . getParent ( ) . getParent ( ) ; 
 
 - if ( parentClassAst . getType ( ) = = TokenTypes . INTERFACE _ DEF | | hasPublicModifier ) { 
 + if ( hasPublicModifier | | parentClassAst . getType ( ) = = TokenTypes . INTERFACE _ DEF ) { 
 isAccessibleFromPublic = isClassPublic ( parentClassAst ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 index be2edd8 . . 551da6a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 @ @ - 307 , 10 + 307 , 10 @ @ public class GenericWhitespaceCheck extends Check { 
 * @ return checks if given character is valid 
 * / 
 private static boolean isCharacterValidAfterGenericEnd ( char charAfter ) { 
 - return Character . isWhitespace ( charAfter ) 
 - | | charAfter = = ' ( ' | | charAfter = = ' ) ' 
 - | | charAfter = = ' , ' | | charAfter = = ' [ ' 
 - | | charAfter = = ' . ' | | charAfter = = ' : ' 
 - | | charAfter = = ' ; ' ; 
 + return charAfter = = ' ( ' | | charAfter = = ' ) ' 
 + | | charAfter = = ' , ' | | charAfter = = ' [ ' 
 + | | charAfter = = ' . ' | | charAfter = = ' : ' 
 + | | charAfter = = ' ; ' 
 + | | Character . isWhitespace ( charAfter ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheck . java 
 index 4a53384 . . 0f2e9ca 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheck . java 
 @ @ - 123 , 9 + 123 , 9 @ @ public class WhitespaceAfterCheck 
 
 if ( after < line . length ( ) ) { 
 final char charAfter = line . charAt ( after ) ; 
 - followedByWhitespace = Character . isWhitespace ( charAfter ) 
 - | | targetAST . getType ( ) = = TokenTypes . SEMI 
 - & & ( charAfter = = ' ; ' | | charAfter = = ' ) ' ) ; 
 + followedByWhitespace = charAfter = = ' ; ' 
 + | | charAfter = = ' ) ' 
 + | | Character . isWhitespace ( charAfter ) ; 
 } 
 return followedByWhitespace ; 
 }
