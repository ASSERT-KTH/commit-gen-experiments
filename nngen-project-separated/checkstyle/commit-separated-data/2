BLEU SCORE: 0.8801117367933934

TEST MSG: Issue # 6586 : aligned javadoc / xdoc for ModifiedControlVariable
GENERATED MSG: Issue # 6586 : aligned javadoc / xdoc for FinalLocalVariable

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java <nl> index aa1edbb . . 6b5b5f6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java <nl> @ @ - 34 , 40 + 34 , 46 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> / * * <nl> + * < p > <nl> * Check for ensuring that for loop control variables are not modified <nl> * inside the for block . An example is : <nl> - * <nl> + * < / p > <nl> * < pre > <nl> - * { @ code <nl> * for ( int i = 0 ; i & lt ; 1 ; i + + ) { <nl> - * i + + ; / / violation <nl> - * } <nl> + * i + + ; / / violation <nl> * } <nl> * < / pre > <nl> + * < p > <nl> * Rationale : If the control variable is modified inside the loop <nl> - * body , the program flow becomes more difficult to follow . < br > <nl> - * See < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 " > <nl> + * body , the program flow becomes more difficult to follow . <nl> + * See < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 " > <nl> * FOR statement < / a > specification for more details . <nl> - * < p > Examples : < / p > <nl> - * <nl> + * < / p > <nl> + * < p > <nl> + * Such loop would be suppressed : <nl> + * < / p > <nl> * < pre > <nl> - * & lt ; module name = & quot ; ModifiedControlVariable & quot ; & gt ; <nl> - * & lt ; / module & gt ; <nl> + * for ( int i = 0 ; i & lt ; 10 ; ) { <nl> + * i + + ; <nl> + * } <nl> * < / pre > <nl> - * <nl> - * < p > Such loop would be suppressed : <nl> - * <nl> + * < ul > <nl> + * < li > <nl> + * Property { @ code skipEnhancedForLoopVariable } - Control whether to check <nl> + * < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > <nl> + * enhanced for - loop < / a > variable . <nl> + * Default value is { @ code false } . <nl> + * < / li > <nl> + * < / ul > <nl> + * < p > <nl> + * To configure the check : <nl> + * < / p > <nl> * < pre > <nl> - * { @ code <nl> - * for ( int i = 0 ; i & lt ; 10 ; ) { <nl> - * i + + ; <nl> - * } <nl> - * } <nl> + * & lt ; module name = " ModifiedControlVariable " / & gt ; <nl> * < / pre > <nl> - * <nl> * < p > <nl> * By default , This Check validates <nl> - * < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 . 2 " > <nl> + * < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > <nl> * Enhanced For - Loop < / a > . <nl> * < / p > <nl> * < p > <nl> @ @ - 79 , 20 + 85 , 18 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * < / p > <nl> * < pre > <nl> * & lt ; module name = " ModifiedControlVariable " & gt ; <nl> - * & lt ; property name = " skipEnhancedForLoopVariable " value = " true " / & gt ; <nl> + * & lt ; property name = " skipEnhancedForLoopVariable " value = " true " / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> * < p > Example : < / p > <nl> * <nl> * < pre > <nl> - * { @ code <nl> * for ( String line : lines ) { <nl> - * line = line . trim ( ) ; / / it will skip this violation <nl> - * } <nl> + * line = line . trim ( ) ; / / it will skip this violation <nl> * } <nl> * < / pre > <nl> * <nl> - * <nl> + * @ since 3 . 5 <nl> * / <nl> @ FileStatefulCheck <nl> public final class ModifiedControlVariableCheck extends AbstractCheck { <nl> @ @ - 121 , 11 + 125 , 17 @ @ public final class ModifiedControlVariableCheck extends AbstractCheck { <nl> / * * Stack of block parameters . * / <nl> private final Deque < Deque < String > > variableStack = new ArrayDeque < > ( ) ; <nl> <nl> - / * * Controls whether to skip enhanced for - loop variable . * / <nl> + / * * <nl> + * Control whether to check <nl> + * < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > <nl> + * enhanced for - loop < / a > variable . <nl> + * / <nl> private boolean skipEnhancedForLoopVariable ; <nl> <nl> / * * <nl> - * Whether to skip enhanced for - loop variable or not . <nl> + * Setter to control whether to check <nl> + * < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > <nl> + * enhanced for - loop < / a > variable . <nl> * @ param skipEnhancedForLoopVariable whether to skip enhanced for - loop variable <nl> * / <nl> public void setSkipEnhancedForLoopVariable ( boolean skipEnhancedForLoopVariable ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> index f0f3a75 . . e16724a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> @ @ - 116 , 6 + 116 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { <nl> " MissingJavadocType " , <nl> " MissingOverride " , <nl> " MissingSwitchDefault " , <nl> + " ModifiedControlVariable " , <nl> " MultipleStringLiterals " , <nl> " MultipleVariableDeclarations " , <nl> " NeedBraces " , <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index 7b2a403 . . 952d166 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 2774 , 8 + 2774 , 8 @ @ class TestMethodCall { <nl> < / section > <nl> <nl> < section name = " ModifiedControlVariable " > <nl> + < p > Since Checkstyle 3 . 5 < / p > <nl> < subsection name = " Description " id = " ModifiedControlVariable _ Description " > <nl> - < p > Since Checkstyle 3 . 5 < / p > <nl> < p > <nl> Check for ensuring that for loop control variables are not modified inside <nl> the for block . An example is : <nl> @ @ - 2787 , 9 + 2787 , 9 @ @ for ( int i = 0 ; i & lt ; 1 ; i + + ) { <nl> < / source > <nl> < p > <nl> Rationale : If the control variable is modified inside the loop <nl> - body , the program flow becomes more difficult to follow . < br / > <nl> - See < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 " > <nl> - FOR statement < / a > specification for more details . <nl> + body , the program flow becomes more difficult to follow . See <nl> + < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 " > <nl> + FOR statement < / a > specification for more details . <nl> < / p > <nl> < p > <nl> Such loop would be suppressed : <nl> @ @ - 2813 , 9 + 2813 , 9 @ @ for ( int i = 0 ; i & lt ; 10 ; ) { <nl> <nl> < tr > <nl> < td > skipEnhancedForLoopVariable < / td > <nl> - < td > Controls whether to check <nl> - < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 . 2 " > <nl> - enhanced for - loop < / a > variable . < / td > <nl> + < td > Control whether to check <nl> + < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > <nl> + enhanced for - loop < / a > variable . < / td > <nl> < td > <nl> < a <nl> href = " property _ types . html # boolean " > Boolean < / a > <nl> @ @ - 2840 , 7 + 2840 , 7 @ @ for ( int i = 0 ; i & lt ; 10 ; ) { <nl> <nl> < p > <nl> By default , This Check validates <nl> - < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 . 2 " > <nl> + < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > <nl> Enhanced For - Loop < / a > . <nl> < / p > <nl> < p > <nl> @ @ - 2856 , 13 + 2856 , 11 @ @ for ( int i = 0 ; i & lt ; 10 ; ) { <nl> & lt ; / module & gt ; <nl> < / source > <nl> < p > Example : < / p > <nl> - < p > <nl> < source > <nl> - for ( String line : lines ) { <nl> + for ( String line : lines ) { <nl> line = line . trim ( ) ; / / it will skip this violation <nl> } <nl> < / source > <nl> - < / p > <nl> < / subsection > <nl> <nl> < subsection name = " Example of Usage " id = " ModifiedControlVariable _ Example _ of _ Usage " >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheck . java <nl> index cfa9e67 . . cb27f55 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheck . java <nl> @ @ - 26 , 8 + 26 , 51 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> <nl> / * * <nl> + * < p > <nl> * The check does verifying that annotations are located on the same line with their targets . <nl> * Verifying with this check is not good practice , but it is using by some style guides . <nl> + * < / p > <nl> + * < ul > <nl> + * < li > <nl> + * Property { @ code tokens } - tokens to check <nl> + * Default value is : <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > <nl> + * CLASS _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > <nl> + * INTERFACE _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > <nl> + * ENUM _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > <nl> + * METHOD _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CTOR _ DEF " > <nl> + * CTOR _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > <nl> + * VARIABLE _ DEF < / a > . <nl> + * < / li > <nl> + * < / ul > <nl> + * < p > <nl> + * To configure the check : <nl> + * < / p > <nl> + * < pre > <nl> + * & lt ; module name = & quot ; AnnotationOnSameLine & quot ; / & gt ; <nl> + * < / pre > <nl> + * < p > <nl> + * Example to allow annotations on the same line <nl> + * < / p > <nl> + * < pre > <nl> + * & # 64 ; Override public int toString ( ) { . . . } / / no violations <nl> + * & # 64 ; Before & # 64 ; Override public void set ( ) { . . . } / / no violation <nl> + * < / pre > <nl> + * < p > <nl> + * Example to disallow annotations on previous line <nl> + * < / p > <nl> + * < pre > <nl> + * & # 64 ; SuppressWarnings ( " deprecation " ) / / violation <nl> + * & # 64 ; Override / / violation <nl> + * public int foo ( ) { . . . } <nl> + * < / pre > <nl> + * <nl> + * @ since 8 . 2 <nl> * / <nl> @ StatelessCheck <nl> public class AnnotationOnSameLineCheck extends AbstractCheck { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> index 461bea1 . . eb9a09b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> @ @ - 71 , 6 + 71 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { <nl> " AbbreviationAsWordInName " , <nl> " AbstractClassName " , <nl> " AnnotationLocation " , <nl> + " AnnotationOnSameLine " , <nl> " AtclauseOrder " , <nl> " CatchParameterName " , <nl> " ClassMemberImpliedModifier " , <nl> diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml <nl> index abc4836 . . 397858f 100644 <nl> - - - a / src / xdocs / config _ annotation . xml <nl> + + + b / src / xdocs / config _ annotation . xml <nl> @ @ - 259 , 8 + 259 , 8 @ @ public void test ( & # 64 ; MyAnnotation String s ) { / / OK <nl> < / section > <nl> <nl> < section name = " AnnotationOnSameLine " > <nl> + < p > Since Checkstyle 8 . 2 < / p > <nl> < subsection name = " Description " id = " AnnotationOnSameLine _ Description " > <nl> - < p > Since Checkstyle 8 . 2 < / p > <nl> < p > <nl> The check does verifying that annotations are located on the same line with their targets . <nl> Verifying with this check is not good practice , but it is using by some style guides .

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java 
 index aa1edbb . . 6b5b5f6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java 
 @ @ - 34 , 40 + 34 , 46 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 / * * 
 + * < p > 
 * Check for ensuring that for loop control variables are not modified 
 * inside the for block . An example is : 
 - * 
 + * < / p > 
 * < pre > 
 - * { @ code 
 * for ( int i = 0 ; i & lt ; 1 ; i + + ) { 
 - * i + + ; / / violation 
 - * } 
 + * i + + ; / / violation 
 * } 
 * < / pre > 
 + * < p > 
 * Rationale : If the control variable is modified inside the loop 
 - * body , the program flow becomes more difficult to follow . < br > 
 - * See < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 " > 
 + * body , the program flow becomes more difficult to follow . 
 + * See < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 " > 
 * FOR statement < / a > specification for more details . 
 - * < p > Examples : < / p > 
 - * 
 + * < / p > 
 + * < p > 
 + * Such loop would be suppressed : 
 + * < / p > 
 * < pre > 
 - * & lt ; module name = & quot ; ModifiedControlVariable & quot ; & gt ; 
 - * & lt ; / module & gt ; 
 + * for ( int i = 0 ; i & lt ; 10 ; ) { 
 + * i + + ; 
 + * } 
 * < / pre > 
 - * 
 - * < p > Such loop would be suppressed : 
 - * 
 + * < ul > 
 + * < li > 
 + * Property { @ code skipEnhancedForLoopVariable } - Control whether to check 
 + * < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > 
 + * enhanced for - loop < / a > variable . 
 + * Default value is { @ code false } . 
 + * < / li > 
 + * < / ul > 
 + * < p > 
 + * To configure the check : 
 + * < / p > 
 * < pre > 
 - * { @ code 
 - * for ( int i = 0 ; i & lt ; 10 ; ) { 
 - * i + + ; 
 - * } 
 - * } 
 + * & lt ; module name = " ModifiedControlVariable " / & gt ; 
 * < / pre > 
 - * 
 * < p > 
 * By default , This Check validates 
 - * < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 . 2 " > 
 + * < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > 
 * Enhanced For - Loop < / a > . 
 * < / p > 
 * < p > 
 @ @ - 79 , 20 + 85 , 18 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * < / p > 
 * < pre > 
 * & lt ; module name = " ModifiedControlVariable " & gt ; 
 - * & lt ; property name = " skipEnhancedForLoopVariable " value = " true " / & gt ; 
 + * & lt ; property name = " skipEnhancedForLoopVariable " value = " true " / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 * < p > Example : < / p > 
 * 
 * < pre > 
 - * { @ code 
 * for ( String line : lines ) { 
 - * line = line . trim ( ) ; / / it will skip this violation 
 - * } 
 + * line = line . trim ( ) ; / / it will skip this violation 
 * } 
 * < / pre > 
 * 
 - * 
 + * @ since 3 . 5 
 * / 
 @ FileStatefulCheck 
 public final class ModifiedControlVariableCheck extends AbstractCheck { 
 @ @ - 121 , 11 + 125 , 17 @ @ public final class ModifiedControlVariableCheck extends AbstractCheck { 
 / * * Stack of block parameters . * / 
 private final Deque < Deque < String > > variableStack = new ArrayDeque < > ( ) ; 
 
 - / * * Controls whether to skip enhanced for - loop variable . * / 
 + / * * 
 + * Control whether to check 
 + * < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > 
 + * enhanced for - loop < / a > variable . 
 + * / 
 private boolean skipEnhancedForLoopVariable ; 
 
 / * * 
 - * Whether to skip enhanced for - loop variable or not . 
 + * Setter to control whether to check 
 + * < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > 
 + * enhanced for - loop < / a > variable . 
 * @ param skipEnhancedForLoopVariable whether to skip enhanced for - loop variable 
 * / 
 public void setSkipEnhancedForLoopVariable ( boolean skipEnhancedForLoopVariable ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 index f0f3a75 . . e16724a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 @ @ - 116 , 6 + 116 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { 
 " MissingJavadocType " , 
 " MissingOverride " , 
 " MissingSwitchDefault " , 
 + " ModifiedControlVariable " , 
 " MultipleStringLiterals " , 
 " MultipleVariableDeclarations " , 
 " NeedBraces " , 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index 7b2a403 . . 952d166 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 2774 , 8 + 2774 , 8 @ @ class TestMethodCall { 
 < / section > 
 
 < section name = " ModifiedControlVariable " > 
 + < p > Since Checkstyle 3 . 5 < / p > 
 < subsection name = " Description " id = " ModifiedControlVariable _ Description " > 
 - < p > Since Checkstyle 3 . 5 < / p > 
 < p > 
 Check for ensuring that for loop control variables are not modified inside 
 the for block . An example is : 
 @ @ - 2787 , 9 + 2787 , 9 @ @ for ( int i = 0 ; i & lt ; 1 ; i + + ) { 
 < / source > 
 < p > 
 Rationale : If the control variable is modified inside the loop 
 - body , the program flow becomes more difficult to follow . < br / > 
 - See < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 " > 
 - FOR statement < / a > specification for more details . 
 + body , the program flow becomes more difficult to follow . See 
 + < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 " > 
 + FOR statement < / a > specification for more details . 
 < / p > 
 < p > 
 Such loop would be suppressed : 
 @ @ - 2813 , 9 + 2813 , 9 @ @ for ( int i = 0 ; i & lt ; 10 ; ) { 
 
 < tr > 
 < td > skipEnhancedForLoopVariable < / td > 
 - < td > Controls whether to check 
 - < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 . 2 " > 
 - enhanced for - loop < / a > variable . < / td > 
 + < td > Control whether to check 
 + < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > 
 + enhanced for - loop < / a > variable . < / td > 
 < td > 
 < a 
 href = " property _ types . html # boolean " > Boolean < / a > 
 @ @ - 2840 , 7 + 2840 , 7 @ @ for ( int i = 0 ; i & lt ; 10 ; ) { 
 
 < p > 
 By default , This Check validates 
 - < a href = " https : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 14 . 2 " > 
 + < a href = " https : / / docs . oracle . com / javase / specs / jls / se11 / html / jls - 14 . html # jls - 14 . 14 . 2 " > 
 Enhanced For - Loop < / a > . 
 < / p > 
 < p > 
 @ @ - 2856 , 13 + 2856 , 11 @ @ for ( int i = 0 ; i & lt ; 10 ; ) { 
 & lt ; / module & gt ; 
 < / source > 
 < p > Example : < / p > 
 - < p > 
 < source > 
 - for ( String line : lines ) { 
 + for ( String line : lines ) { 
 line = line . trim ( ) ; / / it will skip this violation 
 } 
 < / source > 
 - < / p > 
 < / subsection > 
 
 < subsection name = " Example of Usage " id = " ModifiedControlVariable _ Example _ of _ Usage " >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheck . java 
 index cfa9e67 . . cb27f55 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheck . java 
 @ @ - 26 , 8 + 26 , 51 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 
 / * * 
 + * < p > 
 * The check does verifying that annotations are located on the same line with their targets . 
 * Verifying with this check is not good practice , but it is using by some style guides . 
 + * < / p > 
 + * < ul > 
 + * < li > 
 + * Property { @ code tokens } - tokens to check 
 + * Default value is : 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > 
 + * CLASS _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > 
 + * INTERFACE _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > 
 + * ENUM _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > 
 + * METHOD _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CTOR _ DEF " > 
 + * CTOR _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > 
 + * VARIABLE _ DEF < / a > . 
 + * < / li > 
 + * < / ul > 
 + * < p > 
 + * To configure the check : 
 + * < / p > 
 + * < pre > 
 + * & lt ; module name = & quot ; AnnotationOnSameLine & quot ; / & gt ; 
 + * < / pre > 
 + * < p > 
 + * Example to allow annotations on the same line 
 + * < / p > 
 + * < pre > 
 + * & # 64 ; Override public int toString ( ) { . . . } / / no violations 
 + * & # 64 ; Before & # 64 ; Override public void set ( ) { . . . } / / no violation 
 + * < / pre > 
 + * < p > 
 + * Example to disallow annotations on previous line 
 + * < / p > 
 + * < pre > 
 + * & # 64 ; SuppressWarnings ( " deprecation " ) / / violation 
 + * & # 64 ; Override / / violation 
 + * public int foo ( ) { . . . } 
 + * < / pre > 
 + * 
 + * @ since 8 . 2 
 * / 
 @ StatelessCheck 
 public class AnnotationOnSameLineCheck extends AbstractCheck { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 index 461bea1 . . eb9a09b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 @ @ - 71 , 6 + 71 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { 
 " AbbreviationAsWordInName " , 
 " AbstractClassName " , 
 " AnnotationLocation " , 
 + " AnnotationOnSameLine " , 
 " AtclauseOrder " , 
 " CatchParameterName " , 
 " ClassMemberImpliedModifier " , 
 diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml 
 index abc4836 . . 397858f 100644 
 - - - a / src / xdocs / config _ annotation . xml 
 + + + b / src / xdocs / config _ annotation . xml 
 @ @ - 259 , 8 + 259 , 8 @ @ public void test ( & # 64 ; MyAnnotation String s ) { / / OK 
 < / section > 
 
 < section name = " AnnotationOnSameLine " > 
 + < p > Since Checkstyle 8 . 2 < / p > 
 < subsection name = " Description " id = " AnnotationOnSameLine _ Description " > 
 - < p > Since Checkstyle 8 . 2 < / p > 
 < p > 
 The check does verifying that annotations are located on the same line with their targets . 
 Verifying with this check is not good practice , but it is using by some style guides .
