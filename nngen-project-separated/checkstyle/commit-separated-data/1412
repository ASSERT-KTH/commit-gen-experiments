BLEU SCORE: 0.078594386815106

TEST MSG: Issue # 2291 : Fix not raising violation NeedBraces with ForEach loop with single stmt
GENERATED MSG: Issue # 2135 : Fix exception at NeedBraces check in enhanced for loops

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> index cb81cfd . . a46bfc7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> @ @ - 354 , 36 + 354 , 12 @ @ public class NeedBracesCheck extends Check { <nl> } <nl> else if ( literalFor . getParent ( ) . getType ( ) = = TokenTypes . SLIST <nl> & & literalFor . getLastChild ( ) . getType ( ) ! = TokenTypes . SLIST ) { <nl> - final DetailAST block = findExpressionBlockInForLoop ( literalFor ) ; <nl> - if ( block = = null ) { <nl> - result = literalFor . getLineNo ( ) = = literalFor . getLastChild ( ) . getLineNo ( ) ; <nl> - } <nl> - else { <nl> - result = literalFor . getLineNo ( ) = = block . getLineNo ( ) ; <nl> - } <nl> + result = literalFor . getLineNo ( ) = = literalFor . getLastChild ( ) . getLineNo ( ) ; <nl> } <nl> return result ; <nl> } <nl> <nl> / * * <nl> - * Detects and returns expression block in classical and enhanced for loops . <nl> - * <nl> - * @ param literalFor parent for loop literal <nl> - * @ return expression block <nl> - * / <nl> - private static DetailAST findExpressionBlockInForLoop ( DetailAST literalFor ) { <nl> - final DetailAST forEachClause = literalFor . findFirstToken ( TokenTypes . FOR _ EACH _ CLAUSE ) ; <nl> - final DetailAST firstToken ; <nl> - if ( forEachClause = = null ) { <nl> - firstToken = literalFor . findFirstToken ( TokenTypes . EXPR ) ; <nl> - } <nl> - else { <nl> - firstToken = forEachClause . findFirstToken ( TokenTypes . EXPR ) ; <nl> - } <nl> - return firstToken ; <nl> - } <nl> - <nl> - / * * <nl> * Checks if current if statement is single - line statement , e . g . : <nl> * < p > <nl> * { @ code <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheckTest . java <nl> index 91dd8a6 . . b7fdaea 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheckTest . java <nl> @ @ - 85 , 6 + 85 , 7 @ @ public class NeedBracesCheckTest extends BaseCheckTestSupport { <nl> " 91 : " + getCheckMessage ( MSG _ KEY _ NEED _ BRACES , " if " ) , <nl> " 95 : " + getCheckMessage ( MSG _ KEY _ NEED _ BRACES , " else " ) , <nl> " 107 : " + getCheckMessage ( MSG _ KEY _ NEED _ BRACES , " if " ) , <nl> + " 114 : " + getCheckMessage ( MSG _ KEY _ NEED _ BRACES , " for " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputBracesSingleLineStatements . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputBracesSingleLineStatements . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputBracesSingleLineStatements . java <nl> index 84e8e7e . . 5e89a77 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputBracesSingleLineStatements . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputBracesSingleLineStatements . java <nl> @ @ - 108 , 4 + 108 , 10 @ @ public class InputBracesSingleLineStatements <nl> return true ; <nl> } <nl> } <nl> + <nl> + private void forEachLoop ( ) { <nl> + for ( String s : new String [ ] { " " } ) break ; <nl> + for ( String s : new String [ ] { " " } ) <nl> + break ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 26332ff . . 89702b4 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 61 , 17 + 61 , 31 @ @ <nl> < / roles > <nl> < / developer > <nl> < developer > <nl> + < id > rdiachenko < / id > <nl> + < name > Ruslan Diachenko < / name > <nl> + < roles > <nl> + < role > developer < / role > <nl> + < / roles > <nl> + < / developer > <nl> + < developer > <nl> + < id > baratali < / id > <nl> + < name > Baratali Izmailov < / name > <nl> + < roles > <nl> + < role > developer < / role > <nl> + < / roles > <nl> + < / developer > <nl> + < developer > <nl> < id > daniilyar < / id > <nl> < name > Daniil Yaroslavtsev < / name > <nl> < roles > <nl> - < role > developer < / role > <nl> + < role > former developer < / role > <nl> < / roles > <nl> < / developer > <nl> < developer > <nl> < id > moradan < / id > <nl> < name > Ivan Sopov < / name > <nl> < roles > <nl> - < role > developer < / role > <nl> + < role > former developer < / role > <nl> < / roles > <nl> < / developer > <nl> < developer >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 index cb81cfd . . a46bfc7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 @ @ - 354 , 36 + 354 , 12 @ @ public class NeedBracesCheck extends Check { 
 } 
 else if ( literalFor . getParent ( ) . getType ( ) = = TokenTypes . SLIST 
 & & literalFor . getLastChild ( ) . getType ( ) ! = TokenTypes . SLIST ) { 
 - final DetailAST block = findExpressionBlockInForLoop ( literalFor ) ; 
 - if ( block = = null ) { 
 - result = literalFor . getLineNo ( ) = = literalFor . getLastChild ( ) . getLineNo ( ) ; 
 - } 
 - else { 
 - result = literalFor . getLineNo ( ) = = block . getLineNo ( ) ; 
 - } 
 + result = literalFor . getLineNo ( ) = = literalFor . getLastChild ( ) . getLineNo ( ) ; 
 } 
 return result ; 
 } 
 
 / * * 
 - * Detects and returns expression block in classical and enhanced for loops . 
 - * 
 - * @ param literalFor parent for loop literal 
 - * @ return expression block 
 - * / 
 - private static DetailAST findExpressionBlockInForLoop ( DetailAST literalFor ) { 
 - final DetailAST forEachClause = literalFor . findFirstToken ( TokenTypes . FOR _ EACH _ CLAUSE ) ; 
 - final DetailAST firstToken ; 
 - if ( forEachClause = = null ) { 
 - firstToken = literalFor . findFirstToken ( TokenTypes . EXPR ) ; 
 - } 
 - else { 
 - firstToken = forEachClause . findFirstToken ( TokenTypes . EXPR ) ; 
 - } 
 - return firstToken ; 
 - } 
 - 
 - / * * 
 * Checks if current if statement is single - line statement , e . g . : 
 * < p > 
 * { @ code 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheckTest . java 
 index 91dd8a6 . . b7fdaea 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheckTest . java 
 @ @ - 85 , 6 + 85 , 7 @ @ public class NeedBracesCheckTest extends BaseCheckTestSupport { 
 " 91 : " + getCheckMessage ( MSG _ KEY _ NEED _ BRACES , " if " ) , 
 " 95 : " + getCheckMessage ( MSG _ KEY _ NEED _ BRACES , " else " ) , 
 " 107 : " + getCheckMessage ( MSG _ KEY _ NEED _ BRACES , " if " ) , 
 + " 114 : " + getCheckMessage ( MSG _ KEY _ NEED _ BRACES , " for " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputBracesSingleLineStatements . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputBracesSingleLineStatements . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputBracesSingleLineStatements . java 
 index 84e8e7e . . 5e89a77 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputBracesSingleLineStatements . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputBracesSingleLineStatements . java 
 @ @ - 108 , 4 + 108 , 10 @ @ public class InputBracesSingleLineStatements 
 return true ; 
 } 
 } 
 + 
 + private void forEachLoop ( ) { 
 + for ( String s : new String [ ] { " " } ) break ; 
 + for ( String s : new String [ ] { " " } ) 
 + break ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 26332ff . . 89702b4 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 61 , 17 + 61 , 31 @ @ 
 < / roles > 
 < / developer > 
 < developer > 
 + < id > rdiachenko < / id > 
 + < name > Ruslan Diachenko < / name > 
 + < roles > 
 + < role > developer < / role > 
 + < / roles > 
 + < / developer > 
 + < developer > 
 + < id > baratali < / id > 
 + < name > Baratali Izmailov < / name > 
 + < roles > 
 + < role > developer < / role > 
 + < / roles > 
 + < / developer > 
 + < developer > 
 < id > daniilyar < / id > 
 < name > Daniil Yaroslavtsev < / name > 
 < roles > 
 - < role > developer < / role > 
 + < role > former developer < / role > 
 < / roles > 
 < / developer > 
 < developer > 
 < id > moradan < / id > 
 < name > Ivan Sopov < / name > 
 < roles > 
 - < role > developer < / role > 
 + < role > former developer < / role > 
 < / roles > 
 < / developer > 
 < developer >
