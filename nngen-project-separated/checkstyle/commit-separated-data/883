BLEU SCORE: 0.04515183688171632

TEST MSG: Pull # 4102 : changed loops to end execution early
GENERATED MSG: Remove unnecessary semicolons to fix PMD violations , issue # 744

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 7a80099 . . b5eca8e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 166 , 6 + 166 , 7 @ @ public class SuppressWarningsHolder <nl> & & event . getModuleId ( ) . equals ( entry . getCheckName ( ) ) ; <nl> if ( afterStart & & beforeEnd & & ( nameMatches | | idMatches ) ) { <nl> suppressed = true ; <nl> + break ; <nl> } <nl> } <nl> return suppressed ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> index b528180 . . 9ad6c9f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> @ @ - 236 , 6 + 236 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { <nl> modifier = modifier . getNextSibling ( ) ) { <nl> if ( memberModifiers . contains ( modifier . getType ( ) ) ) { <nl> result = true ; <nl> + break ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java <nl> index 1e3fa78 . . 0a8960f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java <nl> @ @ - 442 , 9 + 442 , 10 @ @ public class MagicNumberCheck extends AbstractCheck { <nl> do { <nl> if ( node . getType ( ) = = type ) { <nl> result = true ; <nl> + break ; <nl> } <nl> node = node . getParent ( ) ; <nl> - } while ( node ! = null & & ! result ) ; <nl> + } while ( node ! = null ) ; <nl> <nl> return result ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> index f44a4e1 . . 674849c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> @ @ - 520 , 6 + 520 , 7 @ @ public class RequireThisCheck extends AbstractCheck { <nl> if ( prevSibling ! = null <nl> & & prevSibling . getType ( ) = = TokenTypes . LITERAL _ THIS ) { <nl> userDefinedArrangementOfThis = true ; <nl> + break ; <nl> } <nl> } <nl> return userDefinedArrangementOfThis ; <nl> @ @ - 1189 , 6 + 1190 , 7 @ @ public class RequireThisCheck extends AbstractCheck { <nl> final boolean finalMod = mods . branchContains ( TokenTypes . FINAL ) ; <nl> if ( finalMod & & member . equals ( instanceMember ) ) { <nl> result = true ; <nl> + break ; <nl> } <nl> } <nl> return result ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> index d717bff . . 3a9799e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> @ @ - 149 , 6 + 149 , 7 @ @ public final class ThrowsCountCheck extends AbstractCheck { <nl> if ( child . getType ( ) = = TokenTypes . ANNOTATION <nl> & & " Override " . equals ( getAnnotationName ( child ) ) ) { <nl> isOverriding = true ; <nl> + break ; <nl> } <nl> child = child . getNextSibling ( ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 67d3860 . . 9de035b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 940 , 14 + 940 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> ExceptionInfo foundException = null ; <nl> <nl> / / First look for matches on the exception name <nl> - final ListIterator < ExceptionInfo > throwIt = throwsList . listIterator ( ) ; <nl> - while ( ! found & & throwIt . hasNext ( ) ) { <nl> - final ExceptionInfo exceptionInfo = throwIt . next ( ) ; <nl> - <nl> + for ( ExceptionInfo exceptionInfo : throwsList ) { <nl> if ( exceptionInfo . getName ( ) . getText ( ) . equals ( <nl> documentedClassInfo . getName ( ) . getText ( ) ) ) { <nl> found = true ; <nl> foundException = exceptionInfo ; <nl> + break ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java <nl> index 4f47806 . . 4493f75 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java <nl> @ @ - 303 , 6 + 303 , 7 @ @ public class JavadocTypeCheck <nl> & & tag . getFirstArg ( ) . indexOf ( OPEN _ ANGLE _ BRACKET <nl> + typeParamName + CLOSE _ ANGLE _ BRACKET ) = = 0 ) { <nl> found = true ; <nl> + break ; <nl> } <nl> } <nl> if ( ! found ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceBeforeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceBeforeCheck . java <nl> index c8102ce . . 29b4285 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceBeforeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceBeforeCheck . java <nl> @ @ - 115 , 6 + 115 , 7 @ @ public class NoWhitespaceBeforeCheck <nl> for ( int i = 0 ; ! flag & & i < before ; i + + ) { <nl> if ( ! Character . isWhitespace ( line . charAt ( i ) ) ) { <nl> flag = true ; <nl> + break ; <nl> } <nl> } <nl> if ( flag ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java <nl> index e8514df . . bb66ff2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java <nl> @ @ - 132 , 6 + 132 , 7 @ @ public final class CommonUtils { <nl> for ( final String fileExtension : withDotExtensions ) { <nl> if ( fileName . endsWith ( fileExtension ) ) { <nl> result = true ; <nl> + break ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTypeMemberModifiers . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTypeMemberModifiers . java <nl> index fe42567 . . cc88bac 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTypeMemberModifiers . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTypeMemberModifiers . java <nl> @ @ - 31 , 4 + 31 , 5 @ @ public class InputIllegalTypeMemberModifiers { <nl> } <nl> / / WARNING if memberModifiers is set and contains TokenTypes . LITERAL _ PROTECTED <nl> protected AbstractClass a1 = null ; <nl> + public AbstractClass a2 = null ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index c2446d6 . . a289805 100644 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 73 , 7 + 73 , 7 @ @ <nl> < li > <nl> Site : feeds icons were added . Author : Alex Kravin < a href = " https : / / github . com / checkstyle / checkstyle / issues / 617 " > # 617 < / a > <nl> < / li > <nl> - 	 < li > <nl> + < li > <nl> TreeWalker update , added logging warning if AcceptableTokens are broken . Acceptable tokens are specified for all checks . Author : Alex Kravin < a href = " https : / / github . com / checkstyle / checkstyle / issues / 342 " > # 342 < / a > <nl> < / li > <nl> < li >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 7a80099 . . b5eca8e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 166 , 6 + 166 , 7 @ @ public class SuppressWarningsHolder 
 & & event . getModuleId ( ) . equals ( entry . getCheckName ( ) ) ; 
 if ( afterStart & & beforeEnd & & ( nameMatches | | idMatches ) ) { 
 suppressed = true ; 
 + break ; 
 } 
 } 
 return suppressed ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 index b528180 . . 9ad6c9f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 @ @ - 236 , 6 + 236 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { 
 modifier = modifier . getNextSibling ( ) ) { 
 if ( memberModifiers . contains ( modifier . getType ( ) ) ) { 
 result = true ; 
 + break ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java 
 index 1e3fa78 . . 0a8960f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java 
 @ @ - 442 , 9 + 442 , 10 @ @ public class MagicNumberCheck extends AbstractCheck { 
 do { 
 if ( node . getType ( ) = = type ) { 
 result = true ; 
 + break ; 
 } 
 node = node . getParent ( ) ; 
 - } while ( node ! = null & & ! result ) ; 
 + } while ( node ! = null ) ; 
 
 return result ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 index f44a4e1 . . 674849c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 @ @ - 520 , 6 + 520 , 7 @ @ public class RequireThisCheck extends AbstractCheck { 
 if ( prevSibling ! = null 
 & & prevSibling . getType ( ) = = TokenTypes . LITERAL _ THIS ) { 
 userDefinedArrangementOfThis = true ; 
 + break ; 
 } 
 } 
 return userDefinedArrangementOfThis ; 
 @ @ - 1189 , 6 + 1190 , 7 @ @ public class RequireThisCheck extends AbstractCheck { 
 final boolean finalMod = mods . branchContains ( TokenTypes . FINAL ) ; 
 if ( finalMod & & member . equals ( instanceMember ) ) { 
 result = true ; 
 + break ; 
 } 
 } 
 return result ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 index d717bff . . 3a9799e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 @ @ - 149 , 6 + 149 , 7 @ @ public final class ThrowsCountCheck extends AbstractCheck { 
 if ( child . getType ( ) = = TokenTypes . ANNOTATION 
 & & " Override " . equals ( getAnnotationName ( child ) ) ) { 
 isOverriding = true ; 
 + break ; 
 } 
 child = child . getNextSibling ( ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 67d3860 . . 9de035b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 940 , 14 + 940 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 ExceptionInfo foundException = null ; 
 
 / / First look for matches on the exception name 
 - final ListIterator < ExceptionInfo > throwIt = throwsList . listIterator ( ) ; 
 - while ( ! found & & throwIt . hasNext ( ) ) { 
 - final ExceptionInfo exceptionInfo = throwIt . next ( ) ; 
 - 
 + for ( ExceptionInfo exceptionInfo : throwsList ) { 
 if ( exceptionInfo . getName ( ) . getText ( ) . equals ( 
 documentedClassInfo . getName ( ) . getText ( ) ) ) { 
 found = true ; 
 foundException = exceptionInfo ; 
 + break ; 
 } 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java 
 index 4f47806 . . 4493f75 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java 
 @ @ - 303 , 6 + 303 , 7 @ @ public class JavadocTypeCheck 
 & & tag . getFirstArg ( ) . indexOf ( OPEN _ ANGLE _ BRACKET 
 + typeParamName + CLOSE _ ANGLE _ BRACKET ) = = 0 ) { 
 found = true ; 
 + break ; 
 } 
 } 
 if ( ! found ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceBeforeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceBeforeCheck . java 
 index c8102ce . . 29b4285 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceBeforeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceBeforeCheck . java 
 @ @ - 115 , 6 + 115 , 7 @ @ public class NoWhitespaceBeforeCheck 
 for ( int i = 0 ; ! flag & & i < before ; i + + ) { 
 if ( ! Character . isWhitespace ( line . charAt ( i ) ) ) { 
 flag = true ; 
 + break ; 
 } 
 } 
 if ( flag ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java 
 index e8514df . . bb66ff2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java 
 @ @ - 132 , 6 + 132 , 7 @ @ public final class CommonUtils { 
 for ( final String fileExtension : withDotExtensions ) { 
 if ( fileName . endsWith ( fileExtension ) ) { 
 result = true ; 
 + break ; 
 } 
 } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTypeMemberModifiers . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTypeMemberModifiers . java 
 index fe42567 . . cc88bac 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTypeMemberModifiers . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTypeMemberModifiers . java 
 @ @ - 31 , 4 + 31 , 5 @ @ public class InputIllegalTypeMemberModifiers { 
 } 
 / / WARNING if memberModifiers is set and contains TokenTypes . LITERAL _ PROTECTED 
 protected AbstractClass a1 = null ; 
 + public AbstractClass a2 = null ; 
 }

NEAREST DIFF:
diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index c2446d6 . . a289805 100644 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 73 , 7 + 73 , 7 @ @ 
 < li > 
 Site : feeds icons were added . Author : Alex Kravin < a href = " https : / / github . com / checkstyle / checkstyle / issues / 617 " > # 617 < / a > 
 < / li > 
 - 	 < li > 
 + < li > 
 TreeWalker update , added logging warning if AcceptableTokens are broken . Acceptable tokens are specified for all checks . Author : Alex Kravin < a href = " https : / / github . com / checkstyle / checkstyle / issues / 342 " > # 342 < / a > 
 < / li > 
 < li >
