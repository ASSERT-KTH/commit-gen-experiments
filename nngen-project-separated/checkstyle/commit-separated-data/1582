BLEU SCORE: 0.05406502668979586

TEST MSG: infra : usage of shields . io for Travis is unstable ( shows invalid status always ) , reverted to Travis default
GENERATED MSG: infra : attept to resolve invalid status at Travis badge

TEST DIFF (one line): diff - - git a / README . md b / README . md <nl> index 60661fe . . 3f4a2b8 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 62 , 7 + 62 , 7 @ @ these packages are in the file named " LICENSE . apache20 " in this <nl> directory . <nl> <nl> [ travis ] : http : / / travis - ci . org / checkstyle / checkstyle <nl> - [ travis img ] : https : / / img . shields . io / travis / checkstyle / checkstyle / master . svg ? label = LinuxMac <nl> + [ travis img ] : https : / / secure . travis - ci . org / checkstyle / checkstyle . png <nl> <nl> [ appveyor ] : https : / / ci . appveyor . com / project / checkstyle / checkstyle <nl> [ appveyor img ] : https : / / img . shields . io / appveyor / ci / checkstyle / checkstyle . svg ? label = Windows
NEAREST DIFF (one line): diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 10ba74c . . baca175 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 244 , 7 + 244 , 7 @ @ <nl> < rule ref = " rulesets / java / strings . xml " / > <nl> < rule ref = " rulesets / java / sunsecure . xml / MethodReturnsInternalArray " > <nl> < properties > <nl> - < ! - - It ' s not imoprtant when array is empty - - > <nl> + < ! - - It ' s not important when array is empty - - > <nl> < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocNodeImpl ' ] " / > <nl> < / properties > <nl> < / rule > <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index a6e1d5f . . 8322c5a 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 77 , 7 + 77 , 7 @ @ <nl> < suppress checks = " MultipleStringLiterals " files = " JavadocStyleCheck \ . java | AbstractTypeAwareCheck \ . java | XMLLogger \ . java " / > <nl> < suppress checks = " MultipleStringLiterals " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> <nl> - < ! - - There are a lot of setters / getters in the Check . A small number of methods is left for Check ' s logics - - > <nl> + < ! - - There are a lot of setters / getters in the Check . A small number of methods is left for Check ' s logic - - > <nl> < suppress checks = " MethodCount " files = " [ \ \ / ] JavadocMethodCheck . java $ " / > <nl> <nl> < ! - - getDetails ( ) method - huge Switch , it has to be monolithic - - > <nl> @ @ - 87 , 7 + 87 , 7 @ @ <nl> <nl> < ! - - we need that set of converters - - > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " AutomaticBean \ . java " / > <nl> - < ! - - they are agregators of logic , usage a several of classes are ok - - > <nl> + < ! - - they are aggregators of logic , usage a several of classes are ok - - > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | AbstractJavadocCheck ) \ . java " / > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest ) \ . java " / > <nl> < ! - - a lot of GUI elements is OK - - > <nl> @ @ - 96 , 7 + 96 , 7 @ @ <nl> < ! - - Should be fixed after moving https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / blob / master / sevntu - checks / src / main / java / com / github / sevntu / checkstyle / checks / coding / ReturnCountExtendedCheck . java into the main repo - - > <nl> < suppress checks = " ReturnCount " files = " ( ClassResolver | ConfigurationLoader | IndentationCheckTest ) \ . java " / > <nl> <nl> - < ! - - Just big SWITCHes . Cannot be splitted to several methods . Till https : / / github . com / checkstyle / checkstyle / issues / 2029 - - > <nl> + < ! - - Just big switches . Cannot be split to several methods . Till https : / / github . com / checkstyle / checkstyle / issues / 2029 - - > <nl> < suppress checks = " CyclomaticComplexity " files = " ( AbstractDeclarationCollector | SuppressWarningsHolder | LeftCurlyCheck | FallThroughCheck | FinalLocalVariableCheck | ModifiedControlVariableCheck ) \ . java " / > <nl> < suppress checks = " CyclomaticComplexity " files = " ( ParameterAssignmentCheck | VariableDeclarationUsageDistanceCheck | BooleanExpressionComplexityCheck | NPathComplexityCheck | CheckUtils ) \ . java " / > <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java <nl> index 163913a . . 9724f1b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java <nl> @ @ - 99 , 7 + 99 , 7 @ @ public class DesignForExtensionCheck extends Check { <nl> & & ! classMods . branchContains ( TokenTypes . FINAL ) ; <nl> <nl> if ( nonEmptyImplementation & & classCanBeSubclassed <nl> - & & hasDefaultOrExplNonPrivateCtor ( classDef ) ) { <nl> + & & hasDefaultOrExplicitNonPrivateCtor ( classDef ) ) { <nl> <nl> final String name = ast . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; <nl> log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , name ) ; <nl> @ @ - 122 , 16 + 122 , 16 @ @ public class DesignForExtensionCheck extends Check { <nl> } <nl> <nl> / * * <nl> - * Has Default Or Expl Non Private Ctor . <nl> + * Has Default Or Explicit Non Private Ctor . <nl> * @ param classDef class ast <nl> * @ return true if Check should make a violation <nl> * / <nl> - private static boolean hasDefaultOrExplNonPrivateCtor ( DetailAST classDef ) { <nl> + private static boolean hasDefaultOrExplicitNonPrivateCtor ( DetailAST classDef ) { <nl> / / check if subclassing is prevented by having only private ctors <nl> final DetailAST objBlock = classDef . findFirstToken ( TokenTypes . OBJBLOCK ) ; <nl> <nl> boolean hasDefaultConstructor = true ; <nl> - boolean hasExplNonPrivateCtor = false ; <nl> + boolean hasExplicitNonPrivateCtor = false ; <nl> <nl> DetailAST candidate = objBlock . getFirstChild ( ) ; <nl> <nl> @ @ - 142 , 14 + 142 , 14 @ @ public class DesignForExtensionCheck extends Check { <nl> final DetailAST ctorMods = <nl> candidate . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> if ( ! ctorMods . branchContains ( TokenTypes . LITERAL _ PRIVATE ) ) { <nl> - hasExplNonPrivateCtor = true ; <nl> + hasExplicitNonPrivateCtor = true ; <nl> break ; <nl> } <nl> } <nl> candidate = candidate . getNextSibling ( ) ; <nl> } <nl> <nl> - return hasDefaultConstructor | | hasExplNonPrivateCtor ; <nl> + return hasDefaultConstructor | | hasExplicitNonPrivateCtor ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> index 0b2aed7 . . 8e15564 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> @ @ - 89 , 7 + 89 , 7 @ @ final class ImportControlLoader extends AbstractLoader { <nl> <nl> @ Override <nl> public void startElement ( final String namespaceURI , <nl> - final String locqName , <nl> + final String localName , <nl> final String qName , <nl> final Attributes attributes ) <nl> throws SAXException { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> index b8b80dc . . b80f931 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> @ @ - 339 , 18 + 339 , 18 @ @ public class JavadocStyleCheck <nl> * the Javadoc comment . <nl> * / <nl> private void checkHtmlTags ( final DetailAST ast , final TextBlock comment ) { <nl> - final int lineno = comment . getStartLineNo ( ) ; <nl> + final int lineNo = comment . getStartLineNo ( ) ; <nl> final Deque < HtmlTag > htmlStack = new ArrayDeque < > ( ) ; <nl> final String [ ] text = comment . getText ( ) ; <nl> <nl> - final TagParser parser = new TagParser ( text , lineno ) ; <nl> + final TagParser parser = new TagParser ( text , lineNo ) ; <nl> <nl> while ( parser . hasNextTag ( ) ) { <nl> final HtmlTag tag = parser . nextTag ( ) ; <nl> <nl> if ( tag . isIncompleteTag ( ) ) { <nl> log ( tag . getLineNo ( ) , INCOMPLETE _ TAG , <nl> - text [ tag . getLineNo ( ) - lineno ] ) ; <nl> + text [ tag . getLineNo ( ) - lineNo ] ) ; <nl> return ; <nl> } <nl> if ( tag . isClosedTag ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / SinglelineDetector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / SinglelineDetector . java <nl> index 30d24cc . . a91b7c8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / SinglelineDetector . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / SinglelineDetector . java <nl> @ @ - 76 , 12 + 76 , 12 @ @ class SinglelineDetector { <nl> <nl> / * * <nl> * Check a line for matches . <nl> - * @ param lineno the line number of the line to check <nl> + * @ param lineNo the line number of the line to check <nl> * @ param line the line to check <nl> * @ param matcher the matcher to use <nl> * @ param startPosition the position to start searching from . <nl> * / <nl> - private void checkLine ( int lineno , String line , Matcher matcher , <nl> + private void checkLine ( int lineNo , String line , Matcher matcher , <nl> int startPosition ) { <nl> final boolean foundMatch = matcher . find ( startPosition ) ; <nl> if ( ! foundMatch ) { <nl> @ @ - 96 , 10 + 96 , 10 @ @ class SinglelineDetector { <nl> / / needs column number of the last character . <nl> / / So we need to use ( endCol - 1 ) here . <nl> if ( options . getSuppressor ( ) <nl> - . shouldSuppress ( lineno , startCol , lineno , endCol - 1 ) ) { <nl> + . shouldSuppress ( lineNo , startCol , lineNo , endCol - 1 ) ) { <nl> if ( endCol < line . length ( ) ) { <nl> / / check if the expression is on the rest of the line <nl> - checkLine ( lineno , line , matcher , endCol ) ; <nl> + checkLine ( lineNo , line , matcher , endCol ) ; <nl> } <nl> return ; <nl> } <nl> @ @ - 107 , 11 + 107 , 11 @ @ class SinglelineDetector { <nl> currentMatches + + ; <nl> if ( currentMatches > options . getMaximum ( ) ) { <nl> if ( options . getMessage ( ) . isEmpty ( ) ) { <nl> - options . getReporter ( ) . log ( lineno , " regexp . exceeded " , <nl> + options . getReporter ( ) . log ( lineNo , " regexp . exceeded " , <nl> matcher . pattern ( ) . toString ( ) ) ; <nl> } <nl> else { <nl> - options . getReporter ( ) . log ( lineno , options . getMessage ( ) ) ; <nl> + options . getReporter ( ) . log ( lineNo , options . getMessage ( ) ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableCellRenderer . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableCellRenderer . java <nl> index fe462ec . . c4b45cd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableCellRenderer . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableCellRenderer . java <nl> @ @ - 102 , 7 + 102 , 7 @ @ class TreeTableCellRenderer extends JTree implements <nl> } <nl> <nl> / * * <nl> - * Sublcassed to translate the graphics such that the last visible <nl> + * Subclassed to translate the graphics such that the last visible <nl> * row will be drawn at 0 , 0 . <nl> * / <nl> @ Override <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd b / src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd <nl> index 8f7385c . . 48e000a 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd <nl> @ @ - 42 , 7 + 42 , 7 @ @ <nl> messages . <nl> <nl> The ' key ' attribute specifies for which actual Checkstyle message the <nl> - replacing should occur , look into Checkstyles message . properties for <nl> + replacing should occur , look into Checkstyle ' s message . properties for <nl> the according message keys . <nl> <nl> The ' value ' attribute defines the custom message patterns including <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> index fa489f6 . . cdf0f8e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> @ @ - 142 , 10 + 142 , 10 @ @ public class CheckerTest { <nl> checker . addFilter ( filter ) ; <nl> <nl> filter . resetFilter ( ) ; <nl> - final SortedSet < LocalizedMessage > msgs = Sets . newTreeSet ( ) ; <nl> - msgs . add ( new LocalizedMessage ( 0 , 0 , " a Bundle " , " message . key " , <nl> + final SortedSet < LocalizedMessage > messages = Sets . newTreeSet ( ) ; <nl> + messages . add ( new LocalizedMessage ( 0 , 0 , " a Bundle " , " message . key " , <nl> new Object [ ] { " arg " } , null , getClass ( ) , null ) ) ; <nl> - checker . fireErrors ( " Some File Name " , msgs ) ; <nl> + checker . fireErrors ( " Some File Name " , messages ) ; <nl> assertTrue ( " Checker . fireErrors ( ) doesn ' t call filter " , filter . wasCalled ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 2495c65 . . 46f0cc4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 125 , 7 + 125 , 7 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " / google _ checks . xml " , " NonexistingFile . java " ) ; <nl> + Main . main ( " - c " , " / google _ checks . xml " , " NonExistingFile . java " ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingOverrideCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingOverrideCheckTest . java <nl> index ba03839 . . 8e42e84 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingOverrideCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingOverrideCheckTest . java <nl> @ @ - 58 , 7 + 58 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { <nl> * flagged for only including the inheritDoc tag even in Java 5 compatibility mode . <nl> * / <nl> @ Test <nl> - public void testBadOverrideFromObjectJ5Compat ( ) throws Exception { <nl> + public void testBadOverrideFromObjectJ5Compatible ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; <nl> checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; <nl> <nl> @ @ - 97 , 7 + 97 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { <nl> * Java 5 compatibility mode . <nl> * / <nl> @ Test <nl> - public void testBadOverrideFromOtherJ5Compat ( ) throws Exception { <nl> + public void testBadOverrideFromOtherJ5Compatible ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; <nl> checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; <nl> <nl> @ @ - 128 , 7 + 128 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { <nl> * Java 5 compatibility mode . <nl> * / <nl> @ Test <nl> - public void testBadAnnotationOverrideJ5Compat ( ) throws Exception { <nl> + public void testBadAnnotationOverrideJ5Compatible ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; <nl> checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> @ @ - 169 , 7 + 169 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { <nl> * flagged for only including the inheritDoc tag even in Java 5 compatibility mode . <nl> * / <nl> @ Test <nl> - public void testGoodOverrideFromObjectJ5Compat ( ) throws Exception { <nl> + public void testGoodOverrideFromObjectJ5Compatible ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; <nl> checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; <nl> <nl> @ @ - 195 , 7 + 195 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { <nl> * Java 5 compatibility mode . <nl> * / <nl> @ Test <nl> - public void testGoodOverrideFromOtherJ5Compat ( ) throws Exception { <nl> + public void testGoodOverrideFromOtherJ5Compatible ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; <nl> checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; <nl> <nl> @ @ - 221 , 7 + 221 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { <nl> * Java 5 compatibility mode . <nl> * / <nl> @ Test <nl> - public void testGoodAnnotationOverrideJ5Compat ( ) throws Exception { <nl> + public void testGoodAnnotationOverrideJ5Compatible ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; <nl> checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> index e5209c5 . . 1b13bb9 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> @ @ - 165 , 7 + 165 , 7 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> @ Test <nl> public void testIoExceptionWhenLoadingHeaderFile ( ) throws Exception { <nl> HeaderCheck check = PowerMockito . spy ( new HeaderCheck ( ) ) ; <nl> - PowerMockito . doThrow ( new IOException ( " excpected exception " ) ) . when ( check , " loadHeader " , <nl> + PowerMockito . doThrow ( new IOException ( " expected exception " ) ) . when ( check , " loadHeader " , <nl> anyObject ( ) ) ; <nl> <nl> check . setHeaderFile ( getPath ( " InputRegexpHeader1 . java " ) ) ;

TEST DIFF:
diff - - git a / README . md b / README . md 
 index 60661fe . . 3f4a2b8 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 62 , 7 + 62 , 7 @ @ these packages are in the file named " LICENSE . apache20 " in this 
 directory . 
 
 [ travis ] : http : / / travis - ci . org / checkstyle / checkstyle 
 - [ travis img ] : https : / / img . shields . io / travis / checkstyle / checkstyle / master . svg ? label = LinuxMac 
 + [ travis img ] : https : / / secure . travis - ci . org / checkstyle / checkstyle . png 
 
 [ appveyor ] : https : / / ci . appveyor . com / project / checkstyle / checkstyle 
 [ appveyor img ] : https : / / img . shields . io / appveyor / ci / checkstyle / checkstyle . svg ? label = Windows

NEAREST DIFF:
diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 10ba74c . . baca175 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 244 , 7 + 244 , 7 @ @ 
 < rule ref = " rulesets / java / strings . xml " / > 
 < rule ref = " rulesets / java / sunsecure . xml / MethodReturnsInternalArray " > 
 < properties > 
 - < ! - - It ' s not imoprtant when array is empty - - > 
 + < ! - - It ' s not important when array is empty - - > 
 < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocNodeImpl ' ] " / > 
 < / properties > 
 < / rule > 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index a6e1d5f . . 8322c5a 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 77 , 7 + 77 , 7 @ @ 
 < suppress checks = " MultipleStringLiterals " files = " JavadocStyleCheck \ . java | AbstractTypeAwareCheck \ . java | XMLLogger \ . java " / > 
 < suppress checks = " MultipleStringLiterals " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 
 - < ! - - There are a lot of setters / getters in the Check . A small number of methods is left for Check ' s logics - - > 
 + < ! - - There are a lot of setters / getters in the Check . A small number of methods is left for Check ' s logic - - > 
 < suppress checks = " MethodCount " files = " [ \ \ / ] JavadocMethodCheck . java $ " / > 
 
 < ! - - getDetails ( ) method - huge Switch , it has to be monolithic - - > 
 @ @ - 87 , 7 + 87 , 7 @ @ 
 
 < ! - - we need that set of converters - - > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " AutomaticBean \ . java " / > 
 - < ! - - they are agregators of logic , usage a several of classes are ok - - > 
 + < ! - - they are aggregators of logic , usage a several of classes are ok - - > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | AbstractJavadocCheck ) \ . java " / > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest ) \ . java " / > 
 < ! - - a lot of GUI elements is OK - - > 
 @ @ - 96 , 7 + 96 , 7 @ @ 
 < ! - - Should be fixed after moving https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / blob / master / sevntu - checks / src / main / java / com / github / sevntu / checkstyle / checks / coding / ReturnCountExtendedCheck . java into the main repo - - > 
 < suppress checks = " ReturnCount " files = " ( ClassResolver | ConfigurationLoader | IndentationCheckTest ) \ . java " / > 
 
 - < ! - - Just big SWITCHes . Cannot be splitted to several methods . Till https : / / github . com / checkstyle / checkstyle / issues / 2029 - - > 
 + < ! - - Just big switches . Cannot be split to several methods . Till https : / / github . com / checkstyle / checkstyle / issues / 2029 - - > 
 < suppress checks = " CyclomaticComplexity " files = " ( AbstractDeclarationCollector | SuppressWarningsHolder | LeftCurlyCheck | FallThroughCheck | FinalLocalVariableCheck | ModifiedControlVariableCheck ) \ . java " / > 
 < suppress checks = " CyclomaticComplexity " files = " ( ParameterAssignmentCheck | VariableDeclarationUsageDistanceCheck | BooleanExpressionComplexityCheck | NPathComplexityCheck | CheckUtils ) \ . java " / > 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java 
 index 163913a . . 9724f1b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / DesignForExtensionCheck . java 
 @ @ - 99 , 7 + 99 , 7 @ @ public class DesignForExtensionCheck extends Check { 
 & & ! classMods . branchContains ( TokenTypes . FINAL ) ; 
 
 if ( nonEmptyImplementation & & classCanBeSubclassed 
 - & & hasDefaultOrExplNonPrivateCtor ( classDef ) ) { 
 + & & hasDefaultOrExplicitNonPrivateCtor ( classDef ) ) { 
 
 final String name = ast . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; 
 log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , name ) ; 
 @ @ - 122 , 16 + 122 , 16 @ @ public class DesignForExtensionCheck extends Check { 
 } 
 
 / * * 
 - * Has Default Or Expl Non Private Ctor . 
 + * Has Default Or Explicit Non Private Ctor . 
 * @ param classDef class ast 
 * @ return true if Check should make a violation 
 * / 
 - private static boolean hasDefaultOrExplNonPrivateCtor ( DetailAST classDef ) { 
 + private static boolean hasDefaultOrExplicitNonPrivateCtor ( DetailAST classDef ) { 
 / / check if subclassing is prevented by having only private ctors 
 final DetailAST objBlock = classDef . findFirstToken ( TokenTypes . OBJBLOCK ) ; 
 
 boolean hasDefaultConstructor = true ; 
 - boolean hasExplNonPrivateCtor = false ; 
 + boolean hasExplicitNonPrivateCtor = false ; 
 
 DetailAST candidate = objBlock . getFirstChild ( ) ; 
 
 @ @ - 142 , 14 + 142 , 14 @ @ public class DesignForExtensionCheck extends Check { 
 final DetailAST ctorMods = 
 candidate . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 if ( ! ctorMods . branchContains ( TokenTypes . LITERAL _ PRIVATE ) ) { 
 - hasExplNonPrivateCtor = true ; 
 + hasExplicitNonPrivateCtor = true ; 
 break ; 
 } 
 } 
 candidate = candidate . getNextSibling ( ) ; 
 } 
 
 - return hasDefaultConstructor | | hasExplNonPrivateCtor ; 
 + return hasDefaultConstructor | | hasExplicitNonPrivateCtor ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 index 0b2aed7 . . 8e15564 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 @ @ - 89 , 7 + 89 , 7 @ @ final class ImportControlLoader extends AbstractLoader { 
 
 @ Override 
 public void startElement ( final String namespaceURI , 
 - final String locqName , 
 + final String localName , 
 final String qName , 
 final Attributes attributes ) 
 throws SAXException { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 index b8b80dc . . b80f931 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 @ @ - 339 , 18 + 339 , 18 @ @ public class JavadocStyleCheck 
 * the Javadoc comment . 
 * / 
 private void checkHtmlTags ( final DetailAST ast , final TextBlock comment ) { 
 - final int lineno = comment . getStartLineNo ( ) ; 
 + final int lineNo = comment . getStartLineNo ( ) ; 
 final Deque < HtmlTag > htmlStack = new ArrayDeque < > ( ) ; 
 final String [ ] text = comment . getText ( ) ; 
 
 - final TagParser parser = new TagParser ( text , lineno ) ; 
 + final TagParser parser = new TagParser ( text , lineNo ) ; 
 
 while ( parser . hasNextTag ( ) ) { 
 final HtmlTag tag = parser . nextTag ( ) ; 
 
 if ( tag . isIncompleteTag ( ) ) { 
 log ( tag . getLineNo ( ) , INCOMPLETE _ TAG , 
 - text [ tag . getLineNo ( ) - lineno ] ) ; 
 + text [ tag . getLineNo ( ) - lineNo ] ) ; 
 return ; 
 } 
 if ( tag . isClosedTag ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / SinglelineDetector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / SinglelineDetector . java 
 index 30d24cc . . a91b7c8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / SinglelineDetector . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / SinglelineDetector . java 
 @ @ - 76 , 12 + 76 , 12 @ @ class SinglelineDetector { 
 
 / * * 
 * Check a line for matches . 
 - * @ param lineno the line number of the line to check 
 + * @ param lineNo the line number of the line to check 
 * @ param line the line to check 
 * @ param matcher the matcher to use 
 * @ param startPosition the position to start searching from . 
 * / 
 - private void checkLine ( int lineno , String line , Matcher matcher , 
 + private void checkLine ( int lineNo , String line , Matcher matcher , 
 int startPosition ) { 
 final boolean foundMatch = matcher . find ( startPosition ) ; 
 if ( ! foundMatch ) { 
 @ @ - 96 , 10 + 96 , 10 @ @ class SinglelineDetector { 
 / / needs column number of the last character . 
 / / So we need to use ( endCol - 1 ) here . 
 if ( options . getSuppressor ( ) 
 - . shouldSuppress ( lineno , startCol , lineno , endCol - 1 ) ) { 
 + . shouldSuppress ( lineNo , startCol , lineNo , endCol - 1 ) ) { 
 if ( endCol < line . length ( ) ) { 
 / / check if the expression is on the rest of the line 
 - checkLine ( lineno , line , matcher , endCol ) ; 
 + checkLine ( lineNo , line , matcher , endCol ) ; 
 } 
 return ; 
 } 
 @ @ - 107 , 11 + 107 , 11 @ @ class SinglelineDetector { 
 currentMatches + + ; 
 if ( currentMatches > options . getMaximum ( ) ) { 
 if ( options . getMessage ( ) . isEmpty ( ) ) { 
 - options . getReporter ( ) . log ( lineno , " regexp . exceeded " , 
 + options . getReporter ( ) . log ( lineNo , " regexp . exceeded " , 
 matcher . pattern ( ) . toString ( ) ) ; 
 } 
 else { 
 - options . getReporter ( ) . log ( lineno , options . getMessage ( ) ) ; 
 + options . getReporter ( ) . log ( lineNo , options . getMessage ( ) ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableCellRenderer . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableCellRenderer . java 
 index fe462ec . . c4b45cd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableCellRenderer . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableCellRenderer . java 
 @ @ - 102 , 7 + 102 , 7 @ @ class TreeTableCellRenderer extends JTree implements 
 } 
 
 / * * 
 - * Sublcassed to translate the graphics such that the last visible 
 + * Subclassed to translate the graphics such that the last visible 
 * row will be drawn at 0 , 0 . 
 * / 
 @ Override 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd b / src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd 
 index 8f7385c . . 48e000a 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd 
 @ @ - 42 , 7 + 42 , 7 @ @ 
 messages . 
 
 The ' key ' attribute specifies for which actual Checkstyle message the 
 - replacing should occur , look into Checkstyles message . properties for 
 + replacing should occur , look into Checkstyle ' s message . properties for 
 the according message keys . 
 
 The ' value ' attribute defines the custom message patterns including 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 index fa489f6 . . cdf0f8e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 @ @ - 142 , 10 + 142 , 10 @ @ public class CheckerTest { 
 checker . addFilter ( filter ) ; 
 
 filter . resetFilter ( ) ; 
 - final SortedSet < LocalizedMessage > msgs = Sets . newTreeSet ( ) ; 
 - msgs . add ( new LocalizedMessage ( 0 , 0 , " a Bundle " , " message . key " , 
 + final SortedSet < LocalizedMessage > messages = Sets . newTreeSet ( ) ; 
 + messages . add ( new LocalizedMessage ( 0 , 0 , " a Bundle " , " message . key " , 
 new Object [ ] { " arg " } , null , getClass ( ) , null ) ) ; 
 - checker . fireErrors ( " Some File Name " , msgs ) ; 
 + checker . fireErrors ( " Some File Name " , messages ) ; 
 assertTrue ( " Checker . fireErrors ( ) doesn ' t call filter " , filter . wasCalled ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 2495c65 . . 46f0cc4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 125 , 7 + 125 , 7 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " / google _ checks . xml " , " NonexistingFile . java " ) ; 
 + Main . main ( " - c " , " / google _ checks . xml " , " NonExistingFile . java " ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingOverrideCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingOverrideCheckTest . java 
 index ba03839 . . 8e42e84 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingOverrideCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingOverrideCheckTest . java 
 @ @ - 58 , 7 + 58 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { 
 * flagged for only including the inheritDoc tag even in Java 5 compatibility mode . 
 * / 
 @ Test 
 - public void testBadOverrideFromObjectJ5Compat ( ) throws Exception { 
 + public void testBadOverrideFromObjectJ5Compatible ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; 
 checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; 
 
 @ @ - 97 , 7 + 97 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { 
 * Java 5 compatibility mode . 
 * / 
 @ Test 
 - public void testBadOverrideFromOtherJ5Compat ( ) throws Exception { 
 + public void testBadOverrideFromOtherJ5Compatible ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; 
 checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; 
 
 @ @ - 128 , 7 + 128 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { 
 * Java 5 compatibility mode . 
 * / 
 @ Test 
 - public void testBadAnnotationOverrideJ5Compat ( ) throws Exception { 
 + public void testBadAnnotationOverrideJ5Compatible ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; 
 checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 @ @ - 169 , 7 + 169 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { 
 * flagged for only including the inheritDoc tag even in Java 5 compatibility mode . 
 * / 
 @ Test 
 - public void testGoodOverrideFromObjectJ5Compat ( ) throws Exception { 
 + public void testGoodOverrideFromObjectJ5Compatible ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; 
 checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; 
 
 @ @ - 195 , 7 + 195 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { 
 * Java 5 compatibility mode . 
 * / 
 @ Test 
 - public void testGoodOverrideFromOtherJ5Compat ( ) throws Exception { 
 + public void testGoodOverrideFromOtherJ5Compatible ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; 
 checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; 
 
 @ @ - 221 , 7 + 221 , 7 @ @ public class MissingOverrideCheckTest extends BaseCheckTestSupport { 
 * Java 5 compatibility mode . 
 * / 
 @ Test 
 - public void testGoodAnnotationOverrideJ5Compat ( ) throws Exception { 
 + public void testGoodAnnotationOverrideJ5Compatible ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( MissingOverrideCheck . class ) ; 
 checkConfig . addAttribute ( " javaFiveCompatibility " , " true " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 index e5209c5 . . 1b13bb9 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 @ @ - 165 , 7 + 165 , 7 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { 
 @ Test 
 public void testIoExceptionWhenLoadingHeaderFile ( ) throws Exception { 
 HeaderCheck check = PowerMockito . spy ( new HeaderCheck ( ) ) ; 
 - PowerMockito . doThrow ( new IOException ( " excpected exception " ) ) . when ( check , " loadHeader " , 
 + PowerMockito . doThrow ( new IOException ( " expected exception " ) ) . when ( check , " loadHeader " , 
 anyObject ( ) ) ; 
 
 check . setHeaderFile ( getPath ( " InputRegexpHeader1 . java " ) ) ;
