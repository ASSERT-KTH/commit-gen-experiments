BLEU SCORE: 0.09287528999566796

TEST MSG: Issue # 4857 : hot fix for BooleanParameter idea violation
GENERATED MSG: Issue # 1566 : InnerTypeLast turned on

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java <nl> index b47853d . . 4d440ba 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java <nl> @ @ - 48 , 6 + 48 , 22 @ @ import com . puppycrawl . tools . checkstyle . utils . ModuleReflectionUtils ; <nl> <nl> public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport { <nl> <nl> + / * * <nl> + * Enum to specify options for checker creation . <nl> + * / <nl> + public enum ModuleCreationOption { <nl> + / * * <nl> + * Points that the module configurations <nl> + * has to be added under { @ link TreeWalker } . <nl> + * / <nl> + IN _ TREEWALKER , <nl> + / * * <nl> + * Points that checker will be created as <nl> + * a root of default configuration . <nl> + * / <nl> + IN _ CHECKER <nl> + } <nl> + <nl> private final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; <nl> <nl> / * * <nl> @ @ - 78 , 36 + 94 , 36 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport <nl> * / <nl> public Checker createChecker ( Configuration moduleConfig ) <nl> throws Exception { <nl> - boolean addTreeWalker = false ; <nl> + ModuleCreationOption moduleCreationOption = ModuleCreationOption . IN _ CHECKER ; <nl> <nl> try { <nl> final Class < ? > moduleClass = Class . forName ( moduleConfig . getName ( ) ) ; <nl> if ( ModuleReflectionUtils . isCheckstyleCheck ( moduleClass ) <nl> | | ModuleReflectionUtils . isTreeWalkerFilterModule ( moduleClass ) ) { <nl> - addTreeWalker = true ; <nl> + moduleCreationOption = ModuleCreationOption . IN _ TREEWALKER ; <nl> } <nl> } <nl> catch ( ClassNotFoundException ignore ) { <nl> / / ignore exception , assume it is not part of TreeWalker <nl> } <nl> <nl> - return createChecker ( moduleConfig , addTreeWalker ) ; <nl> + return createChecker ( moduleConfig , moduleCreationOption ) ; <nl> } <nl> <nl> / * * <nl> * Creates { @ link Checker } instance based on the given { @ link Configuration } instance . <nl> * @ param moduleConfig { @ link Configuration } instance . <nl> - * @ param addTreeWalker { @ code true } if the { @ code moduleConfig } should be added under <nl> - * { @ link TreeWalker } . <nl> + * @ param moduleCreationOption { @ code IN _ TREEWALKER } if the { @ code moduleConfig } should be added <nl> + * under { @ link TreeWalker } . <nl> * @ return { @ link Checker } instance based on the given { @ link Configuration } instance . <nl> * @ throws Exception if an exception occurs during checker configuration . <nl> - * @ noinspection BooleanParameter <nl> * / <nl> - public Checker createChecker ( Configuration moduleConfig , boolean addTreeWalker ) <nl> + public Checker createChecker ( Configuration moduleConfig , <nl> + ModuleCreationOption moduleCreationOption ) <nl> throws Exception { <nl> final Configuration dc ; <nl> <nl> - if ( addTreeWalker ) { <nl> + if ( moduleCreationOption = = ModuleCreationOption . IN _ TREEWALKER ) { <nl> dc = createTreeWalkerConfig ( moduleConfig ) ; <nl> } <nl> else { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> index a346c16 . . 34b8d09 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> @ @ - 144 , 7 + 144 , 8 @ @ public class TreeWalkerTest extends AbstractModuleTestSupport { <nl> <nl> try { <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( createChecker ( checkConfig , true ) , temporaryFolder . newFile ( ) . getPath ( ) , expected ) ; <nl> + verify ( createChecker ( checkConfig , ModuleCreationOption . IN _ TREEWALKER ) , <nl> + temporaryFolder . newFile ( ) . getPath ( ) , expected ) ; <nl> fail ( " CheckstyleException is expected " ) ; <nl> } <nl> catch ( CheckstyleException exception ) {
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> index 2bfe1c6 . . 6dfe7cf 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> @ @ - 140 , 7 + 140 , 7 @ @ public class ConfigurationLoaderTest { <nl> assertTrue ( <nl> ex . getMessage ( ) . endsWith ( <nl> " Document root element \ " property \ " , must match DOCTYPE " <nl> - + " root \ " module \ " . : 7 : 38 " ) ) ; <nl> + + " root \ " module \ " . : 8 : 38 " ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml <nl> index 4ab4de3 . . 07768c6 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml <nl> @ @ - 4 , 5 + 4 , 6 @ @ <nl> " - / / Puppy Crawl / / DTD Check Configuration 1 . 1 / / EN " <nl> " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 1 . dtd " > <nl> <nl> + < ! - - suppress XmlWrongRootElement - wrong element used for test purposes - - > <nl> < property name = " tabWidth " value = " 4 " / > <nl>

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java 
 index b47853d . . 4d440ba 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java 
 @ @ - 48 , 6 + 48 , 22 @ @ import com . puppycrawl . tools . checkstyle . utils . ModuleReflectionUtils ; 
 
 public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport { 
 
 + / * * 
 + * Enum to specify options for checker creation . 
 + * / 
 + public enum ModuleCreationOption { 
 + / * * 
 + * Points that the module configurations 
 + * has to be added under { @ link TreeWalker } . 
 + * / 
 + IN _ TREEWALKER , 
 + / * * 
 + * Points that checker will be created as 
 + * a root of default configuration . 
 + * / 
 + IN _ CHECKER 
 + } 
 + 
 private final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; 
 
 / * * 
 @ @ - 78 , 36 + 94 , 36 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport 
 * / 
 public Checker createChecker ( Configuration moduleConfig ) 
 throws Exception { 
 - boolean addTreeWalker = false ; 
 + ModuleCreationOption moduleCreationOption = ModuleCreationOption . IN _ CHECKER ; 
 
 try { 
 final Class < ? > moduleClass = Class . forName ( moduleConfig . getName ( ) ) ; 
 if ( ModuleReflectionUtils . isCheckstyleCheck ( moduleClass ) 
 | | ModuleReflectionUtils . isTreeWalkerFilterModule ( moduleClass ) ) { 
 - addTreeWalker = true ; 
 + moduleCreationOption = ModuleCreationOption . IN _ TREEWALKER ; 
 } 
 } 
 catch ( ClassNotFoundException ignore ) { 
 / / ignore exception , assume it is not part of TreeWalker 
 } 
 
 - return createChecker ( moduleConfig , addTreeWalker ) ; 
 + return createChecker ( moduleConfig , moduleCreationOption ) ; 
 } 
 
 / * * 
 * Creates { @ link Checker } instance based on the given { @ link Configuration } instance . 
 * @ param moduleConfig { @ link Configuration } instance . 
 - * @ param addTreeWalker { @ code true } if the { @ code moduleConfig } should be added under 
 - * { @ link TreeWalker } . 
 + * @ param moduleCreationOption { @ code IN _ TREEWALKER } if the { @ code moduleConfig } should be added 
 + * under { @ link TreeWalker } . 
 * @ return { @ link Checker } instance based on the given { @ link Configuration } instance . 
 * @ throws Exception if an exception occurs during checker configuration . 
 - * @ noinspection BooleanParameter 
 * / 
 - public Checker createChecker ( Configuration moduleConfig , boolean addTreeWalker ) 
 + public Checker createChecker ( Configuration moduleConfig , 
 + ModuleCreationOption moduleCreationOption ) 
 throws Exception { 
 final Configuration dc ; 
 
 - if ( addTreeWalker ) { 
 + if ( moduleCreationOption = = ModuleCreationOption . IN _ TREEWALKER ) { 
 dc = createTreeWalkerConfig ( moduleConfig ) ; 
 } 
 else { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 index a346c16 . . 34b8d09 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 @ @ - 144 , 7 + 144 , 8 @ @ public class TreeWalkerTest extends AbstractModuleTestSupport { 
 
 try { 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( createChecker ( checkConfig , true ) , temporaryFolder . newFile ( ) . getPath ( ) , expected ) ; 
 + verify ( createChecker ( checkConfig , ModuleCreationOption . IN _ TREEWALKER ) , 
 + temporaryFolder . newFile ( ) . getPath ( ) , expected ) ; 
 fail ( " CheckstyleException is expected " ) ; 
 } 
 catch ( CheckstyleException exception ) {

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 index 2bfe1c6 . . 6dfe7cf 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 @ @ - 140 , 7 + 140 , 7 @ @ public class ConfigurationLoaderTest { 
 assertTrue ( 
 ex . getMessage ( ) . endsWith ( 
 " Document root element \ " property \ " , must match DOCTYPE " 
 - + " root \ " module \ " . : 7 : 38 " ) ) ; 
 + + " root \ " module \ " . : 8 : 38 " ) ) ; 
 } 
 } 
 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml 
 index 4ab4de3 . . 07768c6 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml 
 @ @ - 4 , 5 + 4 , 6 @ @ 
 " - / / Puppy Crawl / / DTD Check Configuration 1 . 1 / / EN " 
 " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 1 . dtd " > 
 
 + < ! - - suppress XmlWrongRootElement - wrong element used for test purposes - - > 
 < property name = " tabWidth " value = " 4 " / > 

