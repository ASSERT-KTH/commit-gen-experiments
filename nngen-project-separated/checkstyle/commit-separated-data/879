BLEU SCORE: 0.06870636427700047

TEST MSG: spelling : fix typos in tests
GENERATED MSG: minor : removed exceptions not actually thrown

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> index b27bcbb . . 1b80bc4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> @ @ - 263 , 7 + 263 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { <nl> } <nl> break ; <nl> default : <nl> - throw new IllegalStateException ( " unexpected ast syntax " + parent ) ; <nl> + throw new IllegalStateException ( " unexpected ast syntax " + parent ) ; <nl> } <nl> } <nl> return previousElement ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> index 598f06e . . 0a5e6ca 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> @ @ - 230 , 7 + 230 , 7 @ @ public class BaseCheckTestSupport { <nl> } <nl> <nl> / * * <nl> - * We keep two verify methods with separate logic only for convenience of debuging <nl> + * We keep two verify methods with separate logic only for convenience of debugging <nl> * We have minimum amount of multi - file test cases <nl> * / <nl> protected void verify ( Checker checker , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> index 87c1bef . . 78e8799 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> @ @ - 565 , 7 + 565 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> / / An Error indicates serious problems that a reasonable application should not try to <nl> / / catch , but due to issue https : / / github . com / checkstyle / checkstyle / issues / 2285 <nl> / / we catch errors in ' processFiles ' method . Most such errors are abnormal conditions , <nl> - / / that is why we use PowerMockito to reproduse them . <nl> + / / that is why we use PowerMockito to reproduce them . <nl> final File mock = PowerMockito . mock ( File . class ) ; <nl> / / Assume that I / O error is happened when we try to invoke ' lastModified ( ) ' method . <nl> final String errorMessage = " Java Virtual Machine is broken " <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultConfigurationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultConfigurationTest . java <nl> index 821a3d6 . . ab7fb09 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultConfigurationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultConfigurationTest . java <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class DefaultConfigurationTest { <nl> } <nl> <nl> @ Test <nl> - public void testExceptioForNonExistingAttribute ( ) { <nl> + public void testExceptionForNonExistingAttribute ( ) { <nl> final String name = " MyConfig " ; <nl> final DefaultConfiguration config = new DefaultConfiguration ( name ) ; <nl> final String attributeName = " NonExisting # $ % " ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 74cb890 . . 5069f04 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 395 , 9 + 395 , 9 @ @ public class MainTest { <nl> final String output = String . format ( Locale . ROOT , <nl> " Checkstyle ends with 1 errors . % n " ) ; <nl> assertEquals ( output , systemOut . getLog ( ) ) ; <nl> - final String errorOuput = " com . puppycrawl . tools . checkstyle . api . " <nl> + final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " <nl> + " CheckstyleException : unable to parse configuration stream - " ; <nl> - assertTrue ( systemErr . getLog ( ) . startsWith ( errorOuput ) ) ; <nl> + assertTrue ( systemErr . getLog ( ) . startsWith ( errorOutput ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " config - Incorrect . xml " ) , <nl> getPath ( " InputMain . java " ) ) ; <nl> @ @ - 411 , 10 + 411 , 10 @ @ public class MainTest { <nl> final String output = String . format ( Locale . ROOT , <nl> " Checkstyle ends with 1 errors . % n " ) ; <nl> assertEquals ( output , systemOut . getLog ( ) ) ; <nl> - final String errorOuput = " com . puppycrawl . tools . checkstyle . api . " <nl> + final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " <nl> + " CheckstyleException : cannot initialize module RegexpSingleline " <nl> + " - RegexpSingleline is not allowed as a child in RegexpSingleline " ; <nl> - assertTrue ( systemErr . getLog ( ) . startsWith ( errorOuput ) ) ; <nl> + assertTrue ( systemErr . getLog ( ) . startsWith ( errorOutput ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " config - incorrectChildren . xml " ) , <nl> getPath ( " InputMain . java " ) ) ; <nl> @ @ - 428 , 10 + 428 , 10 @ @ public class MainTest { <nl> final String output = String . format ( Locale . ROOT , <nl> " Checkstyle ends with 1 errors . % n " ) ; <nl> assertEquals ( output , systemOut . getLog ( ) ) ; <nl> - final String errorOuput = " com . puppycrawl . tools . checkstyle . api . " <nl> + final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " <nl> + " CheckstyleException : cannot initialize module TreeWalker " <nl> + " - JavadocVariable is not allowed as a child in JavadocMethod " ; <nl> - assertTrue ( systemErr . getLog ( ) . startsWith ( errorOuput ) ) ; <nl> + assertTrue ( systemErr . getLog ( ) . startsWith ( errorOutput ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " config - incorrectChildren2 . xml " ) , <nl> getPath ( " InputMain . java " ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> index 00b3a2a . . 8f41057 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> @ @ - 150 , 7 + 150 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public final void testMaxWarningExeeded ( ) throws IOException { <nl> + public final void testMaxWarningExceeded ( ) throws IOException { <nl> final CheckstyleAntTask antTask = getCheckstyleAntTask ( ) ; <nl> antTask . setFile ( new File ( getPath ( " ant / InputCheckstyleAntTaskWarning . java " ) ) ) ; <nl> antTask . setMaxWarnings ( 0 ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java <nl> index d4d40ba . . b526713 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java <nl> @ @ - 130 , 7 + 130 , 7 @ @ public class FinalParametersCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testRecieverParameters ( ) throws Exception { <nl> + public void testReceiverParameters ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( FinalParametersCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheckTest . java <nl> index ec08a33 . . 3cf4dbb 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheckTest . java <nl> @ @ - 254 , 7 + 254 , 7 @ @ public class RequireThisCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testMethodReferencess ( ) throws Exception { <nl> + public void testMethodReferences ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( RequireThisCheck . class ) ; <nl> final String [ ] expected = { <nl> " 15 : 9 : " + getCheckMessage ( MSG _ VARIABLE , " tags " , " " ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> index 8ab5087 . . 86481b6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> @ @ - 583 , 7 + 583 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testAllowToSkipOverriden ( ) throws Exception { <nl> + public void testAllowToSkipOverridden ( ) throws Exception { <nl> checkConfig . addAttribute ( " allowedAnnotations " , " MyAnnotation " ) ; <nl> final String [ ] expected = { <nl> " 7 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " BAD " ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java <nl> index 0002d7a . . 581e08f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java <nl> @ @ - 114 , 7 + 114 , 7 @ @ public class ModifierOrderCheckTest <nl> <nl> @ Test <nl> public void testSkipTypeAnnotations ( ) throws Exception { <nl> - / / Type Annotations are avaliable only in Java 8 <nl> + / / Type Annotations are available only in Java 8 <nl> / / We skip type annotations from validation <nl> / / See https : / / github . com / checkstyle / checkstyle / issues / 903 # issuecomment - 172228013 <nl> final DefaultConfiguration checkConfig = createCheckConfig ( ModifierOrderCheck . class ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java <nl> index d0cf76d . . 34407fe 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java <nl> @ @ - 211 , 7 + 211 , 7 @ @ public class NoWhitespaceAfterCheckTest <nl> fail ( " no intended exception thrown " ) ; <nl> } <nl> catch ( IllegalStateException ex ) { <nl> - assertEquals ( " unexpected ast syntaximport [ 0x - 1 ] " , ex . getMessage ( ) ) ; <nl> + assertEquals ( " unexpected ast syntax import [ 0x - 1 ] " , ex . getMessage ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> index b475bb7 . . d390f55 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> @ @ - 161 , 7 + 161 , 7 @ @ public class SuppressElementTest { <nl> <nl> @ Test <nl> public void testEquals ( ) { <nl> - / / filterBased is used instead of filter field only to satisfy IntelijIdea Inspection <nl> + / / filterBased is used instead of filter field only to satisfy IntelliJ Idea Inspection <nl> / / Inspection " Arguments to assertEquals ( ) in wrong order " <nl> final SuppressElement filterBased = new SuppressElement ( " Test " ) ; <nl> filterBased . setChecks ( " Test " ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> index c086021 . . 8a091ae 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> @ @ - 78 , 7 + 78 , 7 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " <nl> + " suppressions _ none . xml " ; <nl> final boolean optional = false ; <nl> - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; <nl> + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; <nl> <nl> final AuditEvent ev = new AuditEvent ( this , " ATest . java " , null ) ; <nl> <nl> @ @ - 89 , 7 + 89 , 7 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> public void testAcceptOnNullFile ( ) throws CheckstyleException { <nl> final String fileName = null ; <nl> final boolean optional = false ; <nl> - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; <nl> + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; <nl> <nl> final AuditEvent ev = new AuditEvent ( this , " AnyJava . java " , null ) ; <nl> <nl> @ @ - 97 , 12 + 97 , 12 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testNonExistanceSuppressionFileWithFalseOptional ( ) { <nl> + public void testNonExistingSuppressionFileWithFalseOptional ( ) { <nl> final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " <nl> - + " non _ existance _ suppresion _ file . xml " ; <nl> + + " non _ existing _ suppression _ file . xml " ; <nl> try { <nl> final boolean optional = false ; <nl> - createSupressionFilter ( fileName , optional ) ; <nl> + createSuppressionFilter ( fileName , optional ) ; <nl> fail ( " Exception is expected " ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> @ @ - 111 , 12 + 111 , 12 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testExistanceInvalidSuppressionFileWithTrueOptional ( ) { <nl> + public void testExistingInvalidSuppressionFileWithTrueOptional ( ) { <nl> final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " <nl> + " suppressions _ invalid _ file . xml " ; <nl> try { <nl> final boolean optional = true ; <nl> - createSupressionFilter ( fileName , optional ) ; <nl> + createSuppressionFilter ( fileName , optional ) ; <nl> fail ( " Exception is expected " ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> @ @ - 130 , 7 + 130 , 7 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " <nl> + " suppressions _ none . xml " ; <nl> final boolean optional = true ; <nl> - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; <nl> + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; <nl> <nl> final AuditEvent ev = new AuditEvent ( this , " AnyFile . java " , null ) ; <nl> <nl> @ @ - 156 , 17 + 156 , 17 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> BDDMockito . given ( CommonUtils . getUriByFilename ( fileName ) ) . willReturn ( uri ) ; <nl> <nl> final boolean optional = true ; <nl> - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; <nl> + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; <nl> final AuditEvent ev = new AuditEvent ( this , " AnyFile . java " , null ) ; <nl> assertTrue ( filter . accept ( ev ) ) ; <nl> } <nl> <nl> @ Test <nl> - public void testNonExistanceSuppressionFileWithTrueOptional ( ) throws Exception { <nl> + public void testNonExistingSuppressionFileWithTrueOptional ( ) throws Exception { <nl> final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " <nl> - + " non _ existance _ suppresion _ file . xml " ; <nl> + + " non _ existing _ suppression _ file . xml " ; <nl> final boolean optional = true ; <nl> - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; <nl> + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; <nl> <nl> final AuditEvent ev = new AuditEvent ( this , " AnyFile . java " , null ) ; <nl> <nl> @ @ - 174 , 11 + 174 , 11 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testNonExistanceSuppressionUrlWithTrueOptional ( ) throws Exception { <nl> + public void testNonExistingSuppressionUrlWithTrueOptional ( ) throws Exception { <nl> final String fileName = <nl> " http : / / checkstyle . sourceforge . net / non _ existing _ suppression . xml " ; <nl> final boolean optional = true ; <nl> - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; <nl> + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; <nl> <nl> final AuditEvent ev = new AuditEvent ( this , " AnyFile . java " , null ) ; <nl> <nl> @ @ - 275 , 9 + 275 , 9 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> while ( attemptCount < = attemptLimit ) { <nl> InputStream stream = null ; <nl> try { <nl> - final URL addres = new URL ( url ) ; <nl> - stream = addres . openStream ( ) ; <nl> - / / Attemt to read a byte in order to check wtether file content is available <nl> + final URL address = new URL ( url ) ; <nl> + stream = address . openStream ( ) ; <nl> + / / Attempt to read a byte in order to check whether file content is available <nl> available = stream . read ( ) ! = - 1 ; <nl> break ; <nl> } <nl> @ @ - 314 , 7 + 314 , 7 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> return true ; <nl> } <nl> <nl> - private static SuppressionFilter createSupressionFilter ( String fileName , boolean optional ) <nl> + private static SuppressionFilter createSuppressionFilter ( String fileName , boolean optional ) <nl> throws CheckstyleException { <nl> final SuppressionFilter suppressionFilter = new SuppressionFilter ( ) ; <nl> suppressionFilter . setFile ( fileName ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java <nl> index 3433596 . . d88def5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java <nl> @ @ - 76 , 7 + 76 , 7 @ @ public class MethodReferencesTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testFromHiernate ( ) <nl> + public void testFromHibernate ( ) <nl> throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> index 4ef7b73 . . 4447580 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> @ @ - 361 , 7 + 361 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> <nl> configCheckTokens . put ( checkName , configTokens ) ; <nl> <nl> - / / add all overriden tokens <nl> + / / add all overridden tokens <nl> final Set < String > overrideTokens = tokensToIgnore . get ( checkName ) ; <nl> <nl> if ( overrideTokens ! = null ) { <nl> @ @ - 433 , 7 + 433 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> } <nl> else { <nl> Assert . assertFalse ( name <nl> - + " should have atleast one ' MSG _ * ' field for error messages " , CheckUtil <nl> + + " should have at least one ' MSG _ * ' field for error messages " , CheckUtil <nl> . getCheckMessages ( module ) . isEmpty ( ) ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> index a55a015 . . eae24ed 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> @ @ - 103 , 7 + 103 , 7 @ @ public class CommitValidationTest { <nl> <nl> @ Test <nl> public void testHasCommits ( ) { <nl> - assertTrue ( " must have atleast one commit to validate " , <nl> + assertTrue ( " must have at least one commit to validate " , <nl> lastCommits ! = null & & ! lastCommits . isEmpty ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java <nl> index efe9a74 . . 4a59318 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java <nl> @ @ - 254 , 7 + 254 , 7 @ @ public class XdocsPagesTest { <nl> final String input = new String ( Files . readAllBytes ( path ) , UTF _ 8 ) ; <nl> final Document document = XmlUtil . getRawXml ( fileName , input , input ) ; <nl> final NodeList sources = document . getElementsByTagName ( " section " ) ; <nl> - String lastSectioName = null ; <nl> + String lastSectionName = null ; <nl> <nl> for ( int position = 0 ; position < sources . getLength ( ) ; position + + ) { <nl> final Node section = sources . item ( position ) ; <nl> @ @ - 263 , 23 + 263 , 23 @ @ public class XdocsPagesTest { <nl> <nl> if ( " Content " . equals ( sectionName ) | | " Overview " . equals ( sectionName ) ) { <nl> Assert . assertNull ( fileName + " section ' " + sectionName + " ' should be first " , <nl> - lastSectioName ) ; <nl> + lastSectionName ) ; <nl> continue ; <nl> } <nl> <nl> Assert . assertTrue ( fileName + " section ' " + sectionName <nl> + " ' shouldn ' t end with ' Check ' " , ! sectionName . endsWith ( " Check " ) ) ; <nl> - if ( lastSectioName ! = null ) { <nl> + if ( lastSectionName ! = null ) { <nl> Assert . assertTrue ( <nl> fileName + " section ' " + sectionName <nl> - + " ' is out of order compared to ' " + lastSectioName + " ' " , <nl> + + " ' is out of order compared to ' " + lastSectionName + " ' " , <nl> sectionName . toLowerCase ( Locale . ENGLISH ) . compareTo ( <nl> - lastSectioName . toLowerCase ( Locale . ENGLISH ) ) > = 0 ) ; <nl> + lastSectionName . toLowerCase ( Locale . ENGLISH ) ) > = 0 ) ; <nl> } <nl> <nl> validateCheckSection ( moduleFactory , fileName , sectionName , section ) ; <nl> <nl> - lastSectioName = sectionName ; <nl> + lastSectionName = sectionName ; <nl> } <nl> } <nl> } <nl> @ @ - 973 , 7 + 973 , 7 @ @ public class XdocsPagesTest { <nl> } <nl> <nl> Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' anchor " + position <nl> - + " shoud have matching name / url " , expectedUrl , actualUrl ) ; <nl> + + " should have matching name / url " , expectedUrl , actualUrl ) ; <nl> <nl> position + + ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java <nl> index bcb3268 . . f76bb89 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java <nl> @ @ - 122 , 7 + 122 , 7 @ @ public class CheckUtilsTest { <nl> <nl> try { <nl> CheckUtils . getAccessModifierFromModifiersToken ( modifiers ) ; <nl> - fail ( IllegalArgumentException . class . getSimpleName ( ) + " was expcted . " ) ; <nl> + fail ( IllegalArgumentException . class . getSimpleName ( ) + " was expected . " ) ; <nl> } <nl> catch ( IllegalArgumentException exc ) { <nl> final String expectedExceptionMsg = " expected non - null AST - token with type ' MODIFIERS ' " ; <nl> @ @ - 135 , 7 + 135 , 7 @ @ public class CheckUtilsTest { <nl> public void testGetAccessModifierFromModifiersTokenWithNullParameter ( ) { <nl> try { <nl> CheckUtils . getAccessModifierFromModifiersToken ( null ) ; <nl> - fail ( IllegalArgumentException . class . getSimpleName ( ) + " was expcted . " ) ; <nl> + fail ( IllegalArgumentException . class . getSimpleName ( ) + " was expected . " ) ; <nl> } <nl> catch ( IllegalArgumentException exc ) { <nl> final String expectedExceptionMsg = " expected non - null AST - token with type ' MODIFIERS ' " ;
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java <nl> index e7e6640 . . 52479b5 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java <nl> @ @ - 126 , 7 + 126 , 7 @ @ public class BaseIndentationCheckSupport extends BaseCheckTestSupport { <nl> final int indentInComment = getIndentFromComment ( comment ) ; <nl> final boolean isWarnComment = isWarnComment ( comment ) ; <nl> <nl> - boolean result ; <nl> + final boolean result ; <nl> final CommentType type = getCommentType ( comment ) ; <nl> switch ( type ) { <nl> case MULTILEVEL : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index b1f78ca . . be1187b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 324 , 8 + 324 , 8 @ @ public final class Main { <nl> throws FileNotFoundException { <nl> <nl> / / setup the output stream <nl> - OutputStream out ; <nl> - boolean closeOutputStream ; <nl> + final OutputStream out ; <nl> + final boolean closeOutputStream ; <nl> if ( outputLocation = = null ) { <nl> out = System . out ; <nl> closeOutputStream = false ; <nl> @ @ - 336 , 7 + 336 , 7 @ @ public final class Main { <nl> } <nl> <nl> / / setup a listener <nl> - AuditListener listener ; <nl> + final AuditListener listener ; <nl> if ( XML _ FORMAT _ NAME . equals ( format ) ) { <nl> listener = new XMLLogger ( out , closeOutputStream ) ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> index c374015 . . 3f277df 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> @ @ - 327 , 7 + 327 , 7 @ @ public final class TreeWalker <nl> * / <nl> private void notifyBegin ( DetailAST rootAST , FileContents contents , <nl> AstState astState ) { <nl> - Set < Check > checks ; <nl> + final Set < Check > checks ; <nl> <nl> if ( astState = = AstState . WITH _ COMMENTS ) { <nl> checks = commentChecks ; <nl> @ @ - 348 , 7 + 348 , 7 @ @ public final class TreeWalker <nl> * @ param astState state of AST . <nl> * / <nl> private void notifyEnd ( DetailAST rootAST , AstState astState ) { <nl> - Set < Check > checks ; <nl> + final Set < Check > checks ; <nl> <nl> if ( astState = = AstState . WITH _ COMMENTS ) { <nl> checks = commentChecks ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> index b7d4d3a . . 1fd69d7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> @ @ - 225 , 7 + 225 , 7 @ @ public class XMLLogger <nl> * / <nl> private static String encodeAmpersand ( String value , int ampPosition ) { <nl> final int nextSemi = value . indexOf ( ' ; ' , ampPosition ) ; <nl> - String result ; <nl> + final String result ; <nl> if ( nextSemi < 0 <nl> | | ! isReference ( value . substring ( ampPosition , nextSemi + 1 ) ) ) { <nl> result = " & amp ; " ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> index c8e585e . . cd763b1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> @ @ - 176 , 7 + 176 , 7 @ @ public final class FileContents implements CommentListener { <nl> * * / <nl> private String [ ] extractCComment ( int startLineNo , int startColNo , <nl> int endLineNo , int endColNo ) { <nl> - String [ ] returnValue ; <nl> + final String [ ] returnValue ; <nl> if ( startLineNo = = endLineNo ) { <nl> returnValue = new String [ 1 ] ; <nl> returnValue [ 0 ] = line ( startLineNo - 1 ) . substring ( startColNo , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 88b902f . . e1ea60c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 333 , 7 + 333 , 7 @ @ public class SuppressWarningsHolder <nl> * @ return returns ast - parent of given <nl> * / <nl> private static DetailAST getAcceptableParent ( DetailAST child ) { <nl> - DetailAST result ; <nl> + final DetailAST result ; <nl> final DetailAST parent = child . getParent ( ) ; <nl> switch ( parent . getType ( ) ) { <nl> case TokenTypes . ANNOTATION _ DEF : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java <nl> index 0d107ec . . 647a357 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java <nl> @ @ - 166 , 8 + 166 , 8 @ @ public class TrailingCommentCheck extends Check { <nl> <nl> for ( Integer lineNo : lines ) { <nl> final String line = getLines ( ) [ lineNo - 1 ] ; <nl> - String lineBefore ; <nl> - TextBlock comment ; <nl> + final String lineBefore ; <nl> + final TextBlock comment ; <nl> if ( cppComments . containsKey ( lineNo ) ) { <nl> comment = cppComments . get ( lineNo ) ; <nl> lineBefore = line . substring ( 0 , comment . getStartColNo ( ) ) ; <nl> @ @ - 197 , 7 + 197 , 7 @ @ public class TrailingCommentCheck extends Check { <nl> * @ return true if the comment if legal . <nl> * / <nl> private boolean isLegalComment ( final TextBlock comment ) { <nl> - boolean legal ; <nl> + final boolean legal ; <nl> <nl> / / multi - line comment can not be legal <nl> if ( legalComment = = null | | comment . getStartLineNo ( ) ! = comment . getEndLineNo ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> index 7c2641a . . 566cb25 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> @ @ - 153 , 7 + 153 , 7 @ @ public class EmptyBlockCheck <nl> <nl> if ( leftCurly ! = null ) { <nl> if ( option = = BlockOption . STMT ) { <nl> - boolean emptyBlock ; <nl> + final boolean emptyBlock ; <nl> if ( leftCurly . getType ( ) = = TokenTypes . LCURLY ) { <nl> emptyBlock = leftCurly . getNextSibling ( ) . getType ( ) ! = TokenTypes . CASE _ GROUP ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> index e0ddd02 . . 0735850 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> @ @ - 177 , 7 + 177 , 7 @ @ public class LeftCurlyCheck <nl> <nl> @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> - DetailAST startToken ; <nl> + final DetailAST startToken ; <nl> DetailAST brace ; <nl> <nl> switch ( ast . getType ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> index 312f29f . . 104985e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> @ @ - 265 , 7 + 265 , 7 @ @ public class NeedBracesCheck extends Check { <nl> * @ return true if current statement is single - line statement . <nl> * / <nl> private static boolean isSingleLineStatement ( DetailAST statement ) { <nl> - boolean result ; <nl> + final boolean result ; <nl> <nl> switch ( statement . getType ( ) ) { <nl> case TokenTypes . LITERAL _ IF : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index e67fe37 . . 7d7ce5b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 318 , 7 + 318 , 7 @ @ public class RightCurlyCheck extends Check { <nl> / / Attempt to locate the tokens to do the check <nl> boolean shouldCheckLastRcurly = false ; <nl> DetailAST rcurly = null ; <nl> - DetailAST lcurly ; <nl> + final DetailAST lcurly ; <nl> DetailAST nextToken ; <nl> <nl> switch ( ast . getType ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> index ee65cf5 . . 336bfc9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> @ @ - 376 , 7 + 376 , 7 @ @ public class EqualsAvoidNullCheck extends Check { <nl> * @ return true if the object is of String type . <nl> * / <nl> private boolean isCalledOnStringFieldOrVariable ( DetailAST objCalledOn ) { <nl> - boolean result ; <nl> + final boolean result ; <nl> final DetailAST previousSiblingAst = objCalledOn . getPreviousSibling ( ) ; <nl> if ( previousSiblingAst = = null ) { <nl> result = isStringFieldOrVariable ( objCalledOn ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> index 6afc7d6 . . 7aa191b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> @ @ - 161 , 7 + 161 , 7 @ @ public class FallThroughCheck extends Check { <nl> * / <nl> private boolean isTerminated ( final DetailAST ast , boolean useBreak , <nl> boolean useContinue ) { <nl> - boolean terminated ; <nl> + final boolean terminated ; <nl> <nl> switch ( ast . getType ( ) ) { <nl> case TokenTypes . LITERAL _ RETURN : <nl> @ @ - 249 , 7 + 249 , 7 @ @ public class FallThroughCheck extends Check { <nl> * @ return true if loop is terminated . <nl> * / <nl> private boolean checkLoop ( final DetailAST ast ) { <nl> - DetailAST loopBody ; <nl> + final DetailAST loopBody ; <nl> if ( ast . getType ( ) = = TokenTypes . LITERAL _ DO ) { <nl> final DetailAST lparen = ast . findFirstToken ( TokenTypes . DO _ WHILE ) ; <nl> loopBody = lparen . getPreviousSibling ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> index eb536f3 . . 3b12dd0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> @ @ - 508 , 7 + 508 , 7 @ @ public class RequireThisCheck extends Check { <nl> * @ return whether it was found . <nl> * / <nl> protected AbstractFrame getIfContains ( DetailAST nameToFind , boolean lookForMethod ) { <nl> - AbstractFrame frame ; <nl> + final AbstractFrame frame ; <nl> <nl> if ( ! lookForMethod <nl> & & containsFieldOrVariable ( nameToFind ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> index 42ba85f . . ed9116d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> @ @ - 268 , 7 + 268 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { <nl> <nl> if ( ! isVariableMatchesIgnorePattern ( variable . getText ( ) ) ) { <nl> final DetailAST semicolonAst = ast . getNextSibling ( ) ; <nl> - Entry < DetailAST , Integer > entry ; <nl> + final Entry < DetailAST , Integer > entry ; <nl> if ( validateBetweenScopes ) { <nl> entry = calculateDistanceBetweenScopes ( semicolonAst , variable ) ; <nl> } <nl> @ @ - 572 , 7 + 572 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { <nl> DetailAST firstNodeInsideBlock = null ; <nl> <nl> if ( ! isVariableInOperatorExpr ( block , variable ) ) { <nl> - DetailAST currentNode ; <nl> + final DetailAST currentNode ; <nl> <nl> / / Find currentNode for DO - WHILE block . <nl> if ( block . getType ( ) = = TokenTypes . LITERAL _ DO ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> index 998f1ef . . 4bb90f7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> @ @ - 163 , 7 + 163 , 7 @ @ public final class ThrowsCountCheck extends Check { <nl> * / <nl> private static String getAnnotationName ( DetailAST annotation ) { <nl> final DetailAST dotAst = annotation . findFirstToken ( TokenTypes . DOT ) ; <nl> - String name ; <nl> + final String name ; <nl> if ( dotAst = = null ) { <nl> name = annotation . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> index ed557e0 . . 7af4444 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> @ @ - 649 , 7 + 649 , 7 @ @ public class VisibilityModifierCheck <nl> * @ return String representation of given type ' s name . <nl> * / <nl> private static String getTypeName ( DetailAST type , boolean isCanonicalName ) { <nl> - String typeName ; <nl> + final String typeName ; <nl> if ( isCanonicalName ) { <nl> typeName = getCanonicalName ( type ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> index 51e21c6 . . f9a2949 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> @ @ - 249 , 7 + 249 , 7 @ @ public class ImportOrderCheck <nl> for ( int i = 0 ; i < packageGroups . length ; i + + ) { <nl> String pkg = packageGroups [ i ] ; <nl> final StringBuilder pkgBuilder = new StringBuilder ( pkg ) ; <nl> - Pattern grp ; <nl> + final Pattern grp ; <nl> <nl> / / if the pkg name is the wildcard , make it match zero chars <nl> / / from any name , so it will always be used as last resort . <nl> @ @ - 532 , 7 + 532 , 7 @ @ public class ImportOrderCheck <nl> * / <nl> private static int compare ( String string1 , String string2 , <nl> boolean caseSensitive ) { <nl> - int result ; <nl> + final int result ; <nl> if ( caseSensitive ) { <nl> result = string1 . compareTo ( string2 ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java <nl> index 0046a82 . . 9354442 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java <nl> @ @ - 112 , 7 + 112 , 7 @ @ class PkgControl { <nl> * @ return an { @ link AccessResult } . <nl> * / <nl> AccessResult checkAccess ( final String forImport , final String inPkg ) { <nl> - AccessResult result ; <nl> + final AccessResult result ; <nl> final AccessResult returnValue = localCheckAccess ( forImport , inPkg ) ; <nl> if ( returnValue ! = AccessResult . UNKNOWN ) { <nl> result = returnValue ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> index ada165b . . 5224acc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> @ @ - 565 , 7 + 565 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> * @ return token which begins the line . <nl> * / <nl> private static DetailAST findTokenWhichBeginsTheLine ( DetailAST root ) { <nl> - DetailAST tokenWhichBeginsTheLine ; <nl> + final DetailAST tokenWhichBeginsTheLine ; <nl> if ( isUsingOfObjectReferenceToInvokeMethod ( root ) ) { <nl> tokenWhichBeginsTheLine = findStartTokenOfMethodCallChain ( root ) ; <nl> } <nl> @ @ - 726 , 7 + 726 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> * / <nl> private static boolean areSameLevelIndented ( DetailAST comment , DetailAST prevStmt , <nl> DetailAST nextStmt ) { <nl> - boolean result ; <nl> + final boolean result ; <nl> if ( prevStmt = = null ) { <nl> result = comment . getColumnNo ( ) = = nextStmt . getColumnNo ( ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> index ab72c52 . . 1cbe5c4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> @ @ - 137 , 7 + 137 , 7 @ @ public class HandlerFactory { <nl> * / <nl> public AbstractExpressionHandler getHandler ( IndentationCheck indentCheck , <nl> DetailAST ast , AbstractExpressionHandler parent ) { <nl> - AbstractExpressionHandler resultHandler ; <nl> + final AbstractExpressionHandler resultHandler ; <nl> final AbstractExpressionHandler handler = <nl> createdHandlers . get ( ast ) ; <nl> if ( handler ! = null ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> index c4c2b1e . . 3d1267e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public class MethodCallHandler extends AbstractExpressionHandler { <nl> <nl> @ Override <nl> protected IndentLevel getIndentImpl ( ) { <nl> - IndentLevel indentLevel ; <nl> + final IndentLevel indentLevel ; <nl> / / if inside a method call ' s params , this could be part of <nl> / / an expression , so get the previous line ' s start <nl> if ( getParent ( ) instanceof MethodCallHandler ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index 833c6ed . . 05b4195 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 180 , 7 + 180 , 7 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> final String treeCacheKey = blockCommentNode . getLineNo ( ) + " : " <nl> + blockCommentNode . getColumnNo ( ) ; <nl> <nl> - ParseStatus result ; <nl> + final ParseStatus result ; <nl> <nl> if ( TREE _ CACHE . get ( ) . containsKey ( treeCacheKey ) ) { <nl> result = TREE _ CACHE . get ( ) . get ( treeCacheKey ) ; <nl> @ @ - 418 , 7 + 418 , 7 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> * @ return token type from JavadocTokenTypes <nl> * / <nl> private static int getTokenType ( ParseTree node ) { <nl> - int tokenType ; <nl> + final int tokenType ; <nl> <nl> if ( node . getChildCount ( ) = = 0 ) { <nl> tokenType = ( ( TerminalNode ) node ) . getSymbol ( ) . getType ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 0c2275b . . 5e0088a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 395 , 7 + 395 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * @ return Some javadoc . <nl> * / <nl> private static int getMethodsNumberOfLine ( DetailAST methodDef ) { <nl> - int numberOfLines ; <nl> + final int numberOfLines ; <nl> final DetailAST lcurly = methodDef . getLastChild ( ) ; <nl> final DetailAST rcurly = lcurly . getLastChild ( ) ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java <nl> index 95f6808 . . 342d2b7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java <nl> @ @ - 339 , 7 + 339 , 7 @ @ public class JavaNCSSCheck extends Check { <nl> * @ return true if the expression is countable , false otherwise <nl> * / <nl> private static boolean isExpressionCountable ( DetailAST ast ) { <nl> - boolean countable ; <nl> + final boolean countable ; <nl> <nl> / / count expressions only if they are direct child to a slist ( method <nl> / / body , for loop . . . ) <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> index 7f45995 . . a2d2170 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> @ @ - 145 , 7 + 145 , 7 @ @ public class NoWhitespaceAfterCheck extends Check { <nl> * @ return node before ast . <nl> * / <nl> private static DetailAST getWhitespaceFollowedNode ( DetailAST ast ) { <nl> - DetailAST whitespaceFollowedAst ; <nl> + final DetailAST whitespaceFollowedAst ; <nl> switch ( ast . getType ( ) ) { <nl> case TokenTypes . TYPECAST : <nl> whitespaceFollowedAst = ast . findFirstToken ( TokenTypes . RPAREN ) ; <nl> @ @ - 277 , 7 + 277 , 7 @ @ public class NoWhitespaceAfterCheck extends Check { <nl> * @ return previous node by text order . <nl> * / <nl> private static DetailAST getIndexOpPreviousElement ( DetailAST ast ) { <nl> - DetailAST result ; <nl> + final DetailAST result ; <nl> final DetailAST firstChild = ast . getFirstChild ( ) ; <nl> if ( firstChild . getType ( ) = = TokenTypes . INDEX _ OP ) { <nl> / / second or higher array index <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java <nl> index a059727 . . 141ad4a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java <nl> @ @ - 104 , 7 + 104 , 7 @ @ public class ParseTreeTableModel implements TreeModel { <nl> * @ return the type for column number { @ code column } . <nl> * / <nl> public Class < ? > getColumnClass ( int column ) { <nl> - Class < ? > columnClass ; <nl> + final Class < ? > columnClass ; <nl> <nl> switch ( column ) { <nl> case 0 : <nl> @ @ - 136 , 7 + 136 , 7 @ @ public class ParseTreeTableModel implements TreeModel { <nl> * / <nl> public Object getValueAt ( Object node , int column ) { <nl> final DetailAST ast = ( DetailAST ) node ; <nl> - Object value ; <nl> + final Object value ; <nl> <nl> switch ( column ) { <nl> case 1 : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> index d824c56 . . efe03db 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> @ @ - 439 , 7 + 439 , 7 @ @ public final class JavadocUtils { <nl> * @ return name , of the javadocTagSection ' s tag . <nl> * / <nl> public static String getTagName ( DetailNode javadocTagSection ) { <nl> - String javadocTagName ; <nl> + final String javadocTagName ; <nl> if ( javadocTagSection . getType ( ) = = JavadocTokenTypes . JAVADOC _ INLINE _ TAG ) { <nl> javadocTagName = getNextSibling ( <nl> getFirstChild ( javadocTagSection ) ) . getText ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> index 94e6cf4 . . e892f5a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> @ @ - 149 , 7 + 149 , 7 @ @ public class TokenTypesDocletTest { <nl> private static RootDoc getRootDoc ( JavadocTool javadocTool , ListBuffer < String [ ] > options , <nl> ListBuffer < String > names ) throws Exception { <nl> final Method getRootDocImpl = getMethodGetRootDocImplByReflection ( ) ; <nl> - RootDoc rootDoc ; <nl> + final RootDoc rootDoc ; <nl> if ( System . getProperty ( " java . version " ) . startsWith ( " 1 . 7 . " ) ) { <nl> rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , " UTF - 8 " , <nl> new ModifierFilter ( ModifierFilter . ALL _ ACCESS ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java <nl> index 645a795 . . a03adf6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java <nl> @ @ - 56 , 7 + 56 , 7 @ @ class CompareTreesWithComments extends Check { <nl> } <nl> <nl> private static boolean isAstEquals ( DetailAST expected , DetailAST actual ) { <nl> - boolean result ; <nl> + final boolean result ; <nl> if ( expected = = actual ) { <nl> result = true ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> index 848cca9 . . 95727df 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> @ @ - 138 , 7 + 138 , 7 @ @ public class CommitValidationTest { <nl> } <nl> <nl> private static List < RevCommit > getCommitsToCheck ( ) throws Exception { <nl> - List < RevCommit > commits ; <nl> + final List < RevCommit > commits ; <nl> try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { <nl> final RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; <nl> if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { <nl> @ @ - 168 , 8 + 168 , 8 @ @ public class CommitValidationTest { <nl> RevCommitsPair revCommitIteratorPair ; <nl> <nl> try ( RevWalk revWalk = new RevWalk ( repo ) ) { <nl> - Iterator < RevCommit > first ; <nl> - Iterator < RevCommit > second ; <nl> + final Iterator < RevCommit > first ; <nl> + final Iterator < RevCommit > second ; <nl> final ObjectId headId = repo . resolve ( Constants . HEAD ) ; <nl> final RevCommit headCommit = revWalk . parseCommit ( headId ) ; <nl>

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 index b27bcbb . . 1b80bc4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 @ @ - 263 , 7 + 263 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { 
 } 
 break ; 
 default : 
 - throw new IllegalStateException ( " unexpected ast syntax " + parent ) ; 
 + throw new IllegalStateException ( " unexpected ast syntax " + parent ) ; 
 } 
 } 
 return previousElement ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 index 598f06e . . 0a5e6ca 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 @ @ - 230 , 7 + 230 , 7 @ @ public class BaseCheckTestSupport { 
 } 
 
 / * * 
 - * We keep two verify methods with separate logic only for convenience of debuging 
 + * We keep two verify methods with separate logic only for convenience of debugging 
 * We have minimum amount of multi - file test cases 
 * / 
 protected void verify ( Checker checker , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 index 87c1bef . . 78e8799 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 @ @ - 565 , 7 + 565 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 / / An Error indicates serious problems that a reasonable application should not try to 
 / / catch , but due to issue https : / / github . com / checkstyle / checkstyle / issues / 2285 
 / / we catch errors in ' processFiles ' method . Most such errors are abnormal conditions , 
 - / / that is why we use PowerMockito to reproduse them . 
 + / / that is why we use PowerMockito to reproduce them . 
 final File mock = PowerMockito . mock ( File . class ) ; 
 / / Assume that I / O error is happened when we try to invoke ' lastModified ( ) ' method . 
 final String errorMessage = " Java Virtual Machine is broken " 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultConfigurationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultConfigurationTest . java 
 index 821a3d6 . . ab7fb09 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultConfigurationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultConfigurationTest . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class DefaultConfigurationTest { 
 } 
 
 @ Test 
 - public void testExceptioForNonExistingAttribute ( ) { 
 + public void testExceptionForNonExistingAttribute ( ) { 
 final String name = " MyConfig " ; 
 final DefaultConfiguration config = new DefaultConfiguration ( name ) ; 
 final String attributeName = " NonExisting # $ % " ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 74cb890 . . 5069f04 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 395 , 9 + 395 , 9 @ @ public class MainTest { 
 final String output = String . format ( Locale . ROOT , 
 " Checkstyle ends with 1 errors . % n " ) ; 
 assertEquals ( output , systemOut . getLog ( ) ) ; 
 - final String errorOuput = " com . puppycrawl . tools . checkstyle . api . " 
 + final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " 
 + " CheckstyleException : unable to parse configuration stream - " ; 
 - assertTrue ( systemErr . getLog ( ) . startsWith ( errorOuput ) ) ; 
 + assertTrue ( systemErr . getLog ( ) . startsWith ( errorOutput ) ) ; 
 } ) ; 
 Main . main ( " - c " , getPath ( " config - Incorrect . xml " ) , 
 getPath ( " InputMain . java " ) ) ; 
 @ @ - 411 , 10 + 411 , 10 @ @ public class MainTest { 
 final String output = String . format ( Locale . ROOT , 
 " Checkstyle ends with 1 errors . % n " ) ; 
 assertEquals ( output , systemOut . getLog ( ) ) ; 
 - final String errorOuput = " com . puppycrawl . tools . checkstyle . api . " 
 + final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " 
 + " CheckstyleException : cannot initialize module RegexpSingleline " 
 + " - RegexpSingleline is not allowed as a child in RegexpSingleline " ; 
 - assertTrue ( systemErr . getLog ( ) . startsWith ( errorOuput ) ) ; 
 + assertTrue ( systemErr . getLog ( ) . startsWith ( errorOutput ) ) ; 
 } ) ; 
 Main . main ( " - c " , getPath ( " config - incorrectChildren . xml " ) , 
 getPath ( " InputMain . java " ) ) ; 
 @ @ - 428 , 10 + 428 , 10 @ @ public class MainTest { 
 final String output = String . format ( Locale . ROOT , 
 " Checkstyle ends with 1 errors . % n " ) ; 
 assertEquals ( output , systemOut . getLog ( ) ) ; 
 - final String errorOuput = " com . puppycrawl . tools . checkstyle . api . " 
 + final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " 
 + " CheckstyleException : cannot initialize module TreeWalker " 
 + " - JavadocVariable is not allowed as a child in JavadocMethod " ; 
 - assertTrue ( systemErr . getLog ( ) . startsWith ( errorOuput ) ) ; 
 + assertTrue ( systemErr . getLog ( ) . startsWith ( errorOutput ) ) ; 
 } ) ; 
 Main . main ( " - c " , getPath ( " config - incorrectChildren2 . xml " ) , 
 getPath ( " InputMain . java " ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 index 00b3a2a . . 8f41057 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 @ @ - 150 , 7 + 150 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public final void testMaxWarningExeeded ( ) throws IOException { 
 + public final void testMaxWarningExceeded ( ) throws IOException { 
 final CheckstyleAntTask antTask = getCheckstyleAntTask ( ) ; 
 antTask . setFile ( new File ( getPath ( " ant / InputCheckstyleAntTaskWarning . java " ) ) ) ; 
 antTask . setMaxWarnings ( 0 ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java 
 index d4d40ba . . b526713 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java 
 @ @ - 130 , 7 + 130 , 7 @ @ public class FinalParametersCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testRecieverParameters ( ) throws Exception { 
 + public void testReceiverParameters ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( FinalParametersCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheckTest . java 
 index ec08a33 . . 3cf4dbb 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheckTest . java 
 @ @ - 254 , 7 + 254 , 7 @ @ public class RequireThisCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testMethodReferencess ( ) throws Exception { 
 + public void testMethodReferences ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( RequireThisCheck . class ) ; 
 final String [ ] expected = { 
 " 15 : 9 : " + getCheckMessage ( MSG _ VARIABLE , " tags " , " " ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 index 8ab5087 . . 86481b6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 @ @ - 583 , 7 + 583 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testAllowToSkipOverriden ( ) throws Exception { 
 + public void testAllowToSkipOverridden ( ) throws Exception { 
 checkConfig . addAttribute ( " allowedAnnotations " , " MyAnnotation " ) ; 
 final String [ ] expected = { 
 " 7 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " BAD " ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java 
 index 0002d7a . . 581e08f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class ModifierOrderCheckTest 
 
 @ Test 
 public void testSkipTypeAnnotations ( ) throws Exception { 
 - / / Type Annotations are avaliable only in Java 8 
 + / / Type Annotations are available only in Java 8 
 / / We skip type annotations from validation 
 / / See https : / / github . com / checkstyle / checkstyle / issues / 903 # issuecomment - 172228013 
 final DefaultConfiguration checkConfig = createCheckConfig ( ModifierOrderCheck . class ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java 
 index d0cf76d . . 34407fe 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java 
 @ @ - 211 , 7 + 211 , 7 @ @ public class NoWhitespaceAfterCheckTest 
 fail ( " no intended exception thrown " ) ; 
 } 
 catch ( IllegalStateException ex ) { 
 - assertEquals ( " unexpected ast syntaximport [ 0x - 1 ] " , ex . getMessage ( ) ) ; 
 + assertEquals ( " unexpected ast syntax import [ 0x - 1 ] " , ex . getMessage ( ) ) ; 
 } 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 index b475bb7 . . d390f55 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 @ @ - 161 , 7 + 161 , 7 @ @ public class SuppressElementTest { 
 
 @ Test 
 public void testEquals ( ) { 
 - / / filterBased is used instead of filter field only to satisfy IntelijIdea Inspection 
 + / / filterBased is used instead of filter field only to satisfy IntelliJ Idea Inspection 
 / / Inspection " Arguments to assertEquals ( ) in wrong order " 
 final SuppressElement filterBased = new SuppressElement ( " Test " ) ; 
 filterBased . setChecks ( " Test " ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 index c086021 . . 8a091ae 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 @ @ - 78 , 7 + 78 , 7 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " 
 + " suppressions _ none . xml " ; 
 final boolean optional = false ; 
 - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; 
 + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; 
 
 final AuditEvent ev = new AuditEvent ( this , " ATest . java " , null ) ; 
 
 @ @ - 89 , 7 + 89 , 7 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 public void testAcceptOnNullFile ( ) throws CheckstyleException { 
 final String fileName = null ; 
 final boolean optional = false ; 
 - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; 
 + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; 
 
 final AuditEvent ev = new AuditEvent ( this , " AnyJava . java " , null ) ; 
 
 @ @ - 97 , 12 + 97 , 12 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testNonExistanceSuppressionFileWithFalseOptional ( ) { 
 + public void testNonExistingSuppressionFileWithFalseOptional ( ) { 
 final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " 
 - + " non _ existance _ suppresion _ file . xml " ; 
 + + " non _ existing _ suppression _ file . xml " ; 
 try { 
 final boolean optional = false ; 
 - createSupressionFilter ( fileName , optional ) ; 
 + createSuppressionFilter ( fileName , optional ) ; 
 fail ( " Exception is expected " ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 @ @ - 111 , 12 + 111 , 12 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testExistanceInvalidSuppressionFileWithTrueOptional ( ) { 
 + public void testExistingInvalidSuppressionFileWithTrueOptional ( ) { 
 final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " 
 + " suppressions _ invalid _ file . xml " ; 
 try { 
 final boolean optional = true ; 
 - createSupressionFilter ( fileName , optional ) ; 
 + createSuppressionFilter ( fileName , optional ) ; 
 fail ( " Exception is expected " ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 @ @ - 130 , 7 + 130 , 7 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " 
 + " suppressions _ none . xml " ; 
 final boolean optional = true ; 
 - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; 
 + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; 
 
 final AuditEvent ev = new AuditEvent ( this , " AnyFile . java " , null ) ; 
 
 @ @ - 156 , 17 + 156 , 17 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 BDDMockito . given ( CommonUtils . getUriByFilename ( fileName ) ) . willReturn ( uri ) ; 
 
 final boolean optional = true ; 
 - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; 
 + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; 
 final AuditEvent ev = new AuditEvent ( this , " AnyFile . java " , null ) ; 
 assertTrue ( filter . accept ( ev ) ) ; 
 } 
 
 @ Test 
 - public void testNonExistanceSuppressionFileWithTrueOptional ( ) throws Exception { 
 + public void testNonExistingSuppressionFileWithTrueOptional ( ) throws Exception { 
 final String fileName = " src / test / resources / com / puppycrawl / tools / checkstyle / filters / " 
 - + " non _ existance _ suppresion _ file . xml " ; 
 + + " non _ existing _ suppression _ file . xml " ; 
 final boolean optional = true ; 
 - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; 
 + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; 
 
 final AuditEvent ev = new AuditEvent ( this , " AnyFile . java " , null ) ; 
 
 @ @ - 174 , 11 + 174 , 11 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testNonExistanceSuppressionUrlWithTrueOptional ( ) throws Exception { 
 + public void testNonExistingSuppressionUrlWithTrueOptional ( ) throws Exception { 
 final String fileName = 
 " http : / / checkstyle . sourceforge . net / non _ existing _ suppression . xml " ; 
 final boolean optional = true ; 
 - final SuppressionFilter filter = createSupressionFilter ( fileName , optional ) ; 
 + final SuppressionFilter filter = createSuppressionFilter ( fileName , optional ) ; 
 
 final AuditEvent ev = new AuditEvent ( this , " AnyFile . java " , null ) ; 
 
 @ @ - 275 , 9 + 275 , 9 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 while ( attemptCount < = attemptLimit ) { 
 InputStream stream = null ; 
 try { 
 - final URL addres = new URL ( url ) ; 
 - stream = addres . openStream ( ) ; 
 - / / Attemt to read a byte in order to check wtether file content is available 
 + final URL address = new URL ( url ) ; 
 + stream = address . openStream ( ) ; 
 + / / Attempt to read a byte in order to check whether file content is available 
 available = stream . read ( ) ! = - 1 ; 
 break ; 
 } 
 @ @ - 314 , 7 + 314 , 7 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 return true ; 
 } 
 
 - private static SuppressionFilter createSupressionFilter ( String fileName , boolean optional ) 
 + private static SuppressionFilter createSuppressionFilter ( String fileName , boolean optional ) 
 throws CheckstyleException { 
 final SuppressionFilter suppressionFilter = new SuppressionFilter ( ) ; 
 suppressionFilter . setFile ( fileName ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java 
 index 3433596 . . d88def5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java 
 @ @ - 76 , 7 + 76 , 7 @ @ public class MethodReferencesTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testFromHiernate ( ) 
 + public void testFromHibernate ( ) 
 throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 index 4ef7b73 . . 4447580 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 @ @ - 361 , 7 + 361 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 
 configCheckTokens . put ( checkName , configTokens ) ; 
 
 - / / add all overriden tokens 
 + / / add all overridden tokens 
 final Set < String > overrideTokens = tokensToIgnore . get ( checkName ) ; 
 
 if ( overrideTokens ! = null ) { 
 @ @ - 433 , 7 + 433 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 } 
 else { 
 Assert . assertFalse ( name 
 - + " should have atleast one ' MSG _ * ' field for error messages " , CheckUtil 
 + + " should have at least one ' MSG _ * ' field for error messages " , CheckUtil 
 . getCheckMessages ( module ) . isEmpty ( ) ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 index a55a015 . . eae24ed 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 @ @ - 103 , 7 + 103 , 7 @ @ public class CommitValidationTest { 
 
 @ Test 
 public void testHasCommits ( ) { 
 - assertTrue ( " must have atleast one commit to validate " , 
 + assertTrue ( " must have at least one commit to validate " , 
 lastCommits ! = null & & ! lastCommits . isEmpty ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java 
 index efe9a74 . . 4a59318 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java 
 @ @ - 254 , 7 + 254 , 7 @ @ public class XdocsPagesTest { 
 final String input = new String ( Files . readAllBytes ( path ) , UTF _ 8 ) ; 
 final Document document = XmlUtil . getRawXml ( fileName , input , input ) ; 
 final NodeList sources = document . getElementsByTagName ( " section " ) ; 
 - String lastSectioName = null ; 
 + String lastSectionName = null ; 
 
 for ( int position = 0 ; position < sources . getLength ( ) ; position + + ) { 
 final Node section = sources . item ( position ) ; 
 @ @ - 263 , 23 + 263 , 23 @ @ public class XdocsPagesTest { 
 
 if ( " Content " . equals ( sectionName ) | | " Overview " . equals ( sectionName ) ) { 
 Assert . assertNull ( fileName + " section ' " + sectionName + " ' should be first " , 
 - lastSectioName ) ; 
 + lastSectionName ) ; 
 continue ; 
 } 
 
 Assert . assertTrue ( fileName + " section ' " + sectionName 
 + " ' shouldn ' t end with ' Check ' " , ! sectionName . endsWith ( " Check " ) ) ; 
 - if ( lastSectioName ! = null ) { 
 + if ( lastSectionName ! = null ) { 
 Assert . assertTrue ( 
 fileName + " section ' " + sectionName 
 - + " ' is out of order compared to ' " + lastSectioName + " ' " , 
 + + " ' is out of order compared to ' " + lastSectionName + " ' " , 
 sectionName . toLowerCase ( Locale . ENGLISH ) . compareTo ( 
 - lastSectioName . toLowerCase ( Locale . ENGLISH ) ) > = 0 ) ; 
 + lastSectionName . toLowerCase ( Locale . ENGLISH ) ) > = 0 ) ; 
 } 
 
 validateCheckSection ( moduleFactory , fileName , sectionName , section ) ; 
 
 - lastSectioName = sectionName ; 
 + lastSectionName = sectionName ; 
 } 
 } 
 } 
 @ @ - 973 , 7 + 973 , 7 @ @ public class XdocsPagesTest { 
 } 
 
 Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' anchor " + position 
 - + " shoud have matching name / url " , expectedUrl , actualUrl ) ; 
 + + " should have matching name / url " , expectedUrl , actualUrl ) ; 
 
 position + + ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java 
 index bcb3268 . . f76bb89 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java 
 @ @ - 122 , 7 + 122 , 7 @ @ public class CheckUtilsTest { 
 
 try { 
 CheckUtils . getAccessModifierFromModifiersToken ( modifiers ) ; 
 - fail ( IllegalArgumentException . class . getSimpleName ( ) + " was expcted . " ) ; 
 + fail ( IllegalArgumentException . class . getSimpleName ( ) + " was expected . " ) ; 
 } 
 catch ( IllegalArgumentException exc ) { 
 final String expectedExceptionMsg = " expected non - null AST - token with type ' MODIFIERS ' " ; 
 @ @ - 135 , 7 + 135 , 7 @ @ public class CheckUtilsTest { 
 public void testGetAccessModifierFromModifiersTokenWithNullParameter ( ) { 
 try { 
 CheckUtils . getAccessModifierFromModifiersToken ( null ) ; 
 - fail ( IllegalArgumentException . class . getSimpleName ( ) + " was expcted . " ) ; 
 + fail ( IllegalArgumentException . class . getSimpleName ( ) + " was expected . " ) ; 
 } 
 catch ( IllegalArgumentException exc ) { 
 final String expectedExceptionMsg = " expected non - null AST - token with type ' MODIFIERS ' " ;

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java 
 index e7e6640 . . 52479b5 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java 
 @ @ - 126 , 7 + 126 , 7 @ @ public class BaseIndentationCheckSupport extends BaseCheckTestSupport { 
 final int indentInComment = getIndentFromComment ( comment ) ; 
 final boolean isWarnComment = isWarnComment ( comment ) ; 
 
 - boolean result ; 
 + final boolean result ; 
 final CommentType type = getCommentType ( comment ) ; 
 switch ( type ) { 
 case MULTILEVEL : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index b1f78ca . . be1187b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 324 , 8 + 324 , 8 @ @ public final class Main { 
 throws FileNotFoundException { 
 
 / / setup the output stream 
 - OutputStream out ; 
 - boolean closeOutputStream ; 
 + final OutputStream out ; 
 + final boolean closeOutputStream ; 
 if ( outputLocation = = null ) { 
 out = System . out ; 
 closeOutputStream = false ; 
 @ @ - 336 , 7 + 336 , 7 @ @ public final class Main { 
 } 
 
 / / setup a listener 
 - AuditListener listener ; 
 + final AuditListener listener ; 
 if ( XML _ FORMAT _ NAME . equals ( format ) ) { 
 listener = new XMLLogger ( out , closeOutputStream ) ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 index c374015 . . 3f277df 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 @ @ - 327 , 7 + 327 , 7 @ @ public final class TreeWalker 
 * / 
 private void notifyBegin ( DetailAST rootAST , FileContents contents , 
 AstState astState ) { 
 - Set < Check > checks ; 
 + final Set < Check > checks ; 
 
 if ( astState = = AstState . WITH _ COMMENTS ) { 
 checks = commentChecks ; 
 @ @ - 348 , 7 + 348 , 7 @ @ public final class TreeWalker 
 * @ param astState state of AST . 
 * / 
 private void notifyEnd ( DetailAST rootAST , AstState astState ) { 
 - Set < Check > checks ; 
 + final Set < Check > checks ; 
 
 if ( astState = = AstState . WITH _ COMMENTS ) { 
 checks = commentChecks ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 index b7d4d3a . . 1fd69d7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 @ @ - 225 , 7 + 225 , 7 @ @ public class XMLLogger 
 * / 
 private static String encodeAmpersand ( String value , int ampPosition ) { 
 final int nextSemi = value . indexOf ( ' ; ' , ampPosition ) ; 
 - String result ; 
 + final String result ; 
 if ( nextSemi < 0 
 | | ! isReference ( value . substring ( ampPosition , nextSemi + 1 ) ) ) { 
 result = " & amp ; " ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 index c8e585e . . cd763b1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 @ @ - 176 , 7 + 176 , 7 @ @ public final class FileContents implements CommentListener { 
 * * / 
 private String [ ] extractCComment ( int startLineNo , int startColNo , 
 int endLineNo , int endColNo ) { 
 - String [ ] returnValue ; 
 + final String [ ] returnValue ; 
 if ( startLineNo = = endLineNo ) { 
 returnValue = new String [ 1 ] ; 
 returnValue [ 0 ] = line ( startLineNo - 1 ) . substring ( startColNo , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 88b902f . . e1ea60c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 333 , 7 + 333 , 7 @ @ public class SuppressWarningsHolder 
 * @ return returns ast - parent of given 
 * / 
 private static DetailAST getAcceptableParent ( DetailAST child ) { 
 - DetailAST result ; 
 + final DetailAST result ; 
 final DetailAST parent = child . getParent ( ) ; 
 switch ( parent . getType ( ) ) { 
 case TokenTypes . ANNOTATION _ DEF : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java 
 index 0d107ec . . 647a357 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java 
 @ @ - 166 , 8 + 166 , 8 @ @ public class TrailingCommentCheck extends Check { 
 
 for ( Integer lineNo : lines ) { 
 final String line = getLines ( ) [ lineNo - 1 ] ; 
 - String lineBefore ; 
 - TextBlock comment ; 
 + final String lineBefore ; 
 + final TextBlock comment ; 
 if ( cppComments . containsKey ( lineNo ) ) { 
 comment = cppComments . get ( lineNo ) ; 
 lineBefore = line . substring ( 0 , comment . getStartColNo ( ) ) ; 
 @ @ - 197 , 7 + 197 , 7 @ @ public class TrailingCommentCheck extends Check { 
 * @ return true if the comment if legal . 
 * / 
 private boolean isLegalComment ( final TextBlock comment ) { 
 - boolean legal ; 
 + final boolean legal ; 
 
 / / multi - line comment can not be legal 
 if ( legalComment = = null | | comment . getStartLineNo ( ) ! = comment . getEndLineNo ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 index 7c2641a . . 566cb25 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 @ @ - 153 , 7 + 153 , 7 @ @ public class EmptyBlockCheck 
 
 if ( leftCurly ! = null ) { 
 if ( option = = BlockOption . STMT ) { 
 - boolean emptyBlock ; 
 + final boolean emptyBlock ; 
 if ( leftCurly . getType ( ) = = TokenTypes . LCURLY ) { 
 emptyBlock = leftCurly . getNextSibling ( ) . getType ( ) ! = TokenTypes . CASE _ GROUP ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 index e0ddd02 . . 0735850 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 @ @ - 177 , 7 + 177 , 7 @ @ public class LeftCurlyCheck 
 
 @ Override 
 public void visitToken ( DetailAST ast ) { 
 - DetailAST startToken ; 
 + final DetailAST startToken ; 
 DetailAST brace ; 
 
 switch ( ast . getType ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 index 312f29f . . 104985e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 @ @ - 265 , 7 + 265 , 7 @ @ public class NeedBracesCheck extends Check { 
 * @ return true if current statement is single - line statement . 
 * / 
 private static boolean isSingleLineStatement ( DetailAST statement ) { 
 - boolean result ; 
 + final boolean result ; 
 
 switch ( statement . getType ( ) ) { 
 case TokenTypes . LITERAL _ IF : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index e67fe37 . . 7d7ce5b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 318 , 7 + 318 , 7 @ @ public class RightCurlyCheck extends Check { 
 / / Attempt to locate the tokens to do the check 
 boolean shouldCheckLastRcurly = false ; 
 DetailAST rcurly = null ; 
 - DetailAST lcurly ; 
 + final DetailAST lcurly ; 
 DetailAST nextToken ; 
 
 switch ( ast . getType ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 index ee65cf5 . . 336bfc9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 @ @ - 376 , 7 + 376 , 7 @ @ public class EqualsAvoidNullCheck extends Check { 
 * @ return true if the object is of String type . 
 * / 
 private boolean isCalledOnStringFieldOrVariable ( DetailAST objCalledOn ) { 
 - boolean result ; 
 + final boolean result ; 
 final DetailAST previousSiblingAst = objCalledOn . getPreviousSibling ( ) ; 
 if ( previousSiblingAst = = null ) { 
 result = isStringFieldOrVariable ( objCalledOn ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 index 6afc7d6 . . 7aa191b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 @ @ - 161 , 7 + 161 , 7 @ @ public class FallThroughCheck extends Check { 
 * / 
 private boolean isTerminated ( final DetailAST ast , boolean useBreak , 
 boolean useContinue ) { 
 - boolean terminated ; 
 + final boolean terminated ; 
 
 switch ( ast . getType ( ) ) { 
 case TokenTypes . LITERAL _ RETURN : 
 @ @ - 249 , 7 + 249 , 7 @ @ public class FallThroughCheck extends Check { 
 * @ return true if loop is terminated . 
 * / 
 private boolean checkLoop ( final DetailAST ast ) { 
 - DetailAST loopBody ; 
 + final DetailAST loopBody ; 
 if ( ast . getType ( ) = = TokenTypes . LITERAL _ DO ) { 
 final DetailAST lparen = ast . findFirstToken ( TokenTypes . DO _ WHILE ) ; 
 loopBody = lparen . getPreviousSibling ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 index eb536f3 . . 3b12dd0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 @ @ - 508 , 7 + 508 , 7 @ @ public class RequireThisCheck extends Check { 
 * @ return whether it was found . 
 * / 
 protected AbstractFrame getIfContains ( DetailAST nameToFind , boolean lookForMethod ) { 
 - AbstractFrame frame ; 
 + final AbstractFrame frame ; 
 
 if ( ! lookForMethod 
 & & containsFieldOrVariable ( nameToFind ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 index 42ba85f . . ed9116d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 @ @ - 268 , 7 + 268 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { 
 
 if ( ! isVariableMatchesIgnorePattern ( variable . getText ( ) ) ) { 
 final DetailAST semicolonAst = ast . getNextSibling ( ) ; 
 - Entry < DetailAST , Integer > entry ; 
 + final Entry < DetailAST , Integer > entry ; 
 if ( validateBetweenScopes ) { 
 entry = calculateDistanceBetweenScopes ( semicolonAst , variable ) ; 
 } 
 @ @ - 572 , 7 + 572 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { 
 DetailAST firstNodeInsideBlock = null ; 
 
 if ( ! isVariableInOperatorExpr ( block , variable ) ) { 
 - DetailAST currentNode ; 
 + final DetailAST currentNode ; 
 
 / / Find currentNode for DO - WHILE block . 
 if ( block . getType ( ) = = TokenTypes . LITERAL _ DO ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 index 998f1ef . . 4bb90f7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 @ @ - 163 , 7 + 163 , 7 @ @ public final class ThrowsCountCheck extends Check { 
 * / 
 private static String getAnnotationName ( DetailAST annotation ) { 
 final DetailAST dotAst = annotation . findFirstToken ( TokenTypes . DOT ) ; 
 - String name ; 
 + final String name ; 
 if ( dotAst = = null ) { 
 name = annotation . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 index ed557e0 . . 7af4444 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 @ @ - 649 , 7 + 649 , 7 @ @ public class VisibilityModifierCheck 
 * @ return String representation of given type ' s name . 
 * / 
 private static String getTypeName ( DetailAST type , boolean isCanonicalName ) { 
 - String typeName ; 
 + final String typeName ; 
 if ( isCanonicalName ) { 
 typeName = getCanonicalName ( type ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 index 51e21c6 . . f9a2949 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 @ @ - 249 , 7 + 249 , 7 @ @ public class ImportOrderCheck 
 for ( int i = 0 ; i < packageGroups . length ; i + + ) { 
 String pkg = packageGroups [ i ] ; 
 final StringBuilder pkgBuilder = new StringBuilder ( pkg ) ; 
 - Pattern grp ; 
 + final Pattern grp ; 
 
 / / if the pkg name is the wildcard , make it match zero chars 
 / / from any name , so it will always be used as last resort . 
 @ @ - 532 , 7 + 532 , 7 @ @ public class ImportOrderCheck 
 * / 
 private static int compare ( String string1 , String string2 , 
 boolean caseSensitive ) { 
 - int result ; 
 + final int result ; 
 if ( caseSensitive ) { 
 result = string1 . compareTo ( string2 ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java 
 index 0046a82 . . 9354442 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java 
 @ @ - 112 , 7 + 112 , 7 @ @ class PkgControl { 
 * @ return an { @ link AccessResult } . 
 * / 
 AccessResult checkAccess ( final String forImport , final String inPkg ) { 
 - AccessResult result ; 
 + final AccessResult result ; 
 final AccessResult returnValue = localCheckAccess ( forImport , inPkg ) ; 
 if ( returnValue ! = AccessResult . UNKNOWN ) { 
 result = returnValue ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 index ada165b . . 5224acc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 @ @ - 565 , 7 + 565 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 * @ return token which begins the line . 
 * / 
 private static DetailAST findTokenWhichBeginsTheLine ( DetailAST root ) { 
 - DetailAST tokenWhichBeginsTheLine ; 
 + final DetailAST tokenWhichBeginsTheLine ; 
 if ( isUsingOfObjectReferenceToInvokeMethod ( root ) ) { 
 tokenWhichBeginsTheLine = findStartTokenOfMethodCallChain ( root ) ; 
 } 
 @ @ - 726 , 7 + 726 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 * / 
 private static boolean areSameLevelIndented ( DetailAST comment , DetailAST prevStmt , 
 DetailAST nextStmt ) { 
 - boolean result ; 
 + final boolean result ; 
 if ( prevStmt = = null ) { 
 result = comment . getColumnNo ( ) = = nextStmt . getColumnNo ( ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 index ab72c52 . . 1cbe5c4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 @ @ - 137 , 7 + 137 , 7 @ @ public class HandlerFactory { 
 * / 
 public AbstractExpressionHandler getHandler ( IndentationCheck indentCheck , 
 DetailAST ast , AbstractExpressionHandler parent ) { 
 - AbstractExpressionHandler resultHandler ; 
 + final AbstractExpressionHandler resultHandler ; 
 final AbstractExpressionHandler handler = 
 createdHandlers . get ( ast ) ; 
 if ( handler ! = null ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 index c4c2b1e . . 3d1267e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public class MethodCallHandler extends AbstractExpressionHandler { 
 
 @ Override 
 protected IndentLevel getIndentImpl ( ) { 
 - IndentLevel indentLevel ; 
 + final IndentLevel indentLevel ; 
 / / if inside a method call ' s params , this could be part of 
 / / an expression , so get the previous line ' s start 
 if ( getParent ( ) instanceof MethodCallHandler ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index 833c6ed . . 05b4195 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 180 , 7 + 180 , 7 @ @ public abstract class AbstractJavadocCheck extends Check { 
 final String treeCacheKey = blockCommentNode . getLineNo ( ) + " : " 
 + blockCommentNode . getColumnNo ( ) ; 
 
 - ParseStatus result ; 
 + final ParseStatus result ; 
 
 if ( TREE _ CACHE . get ( ) . containsKey ( treeCacheKey ) ) { 
 result = TREE _ CACHE . get ( ) . get ( treeCacheKey ) ; 
 @ @ - 418 , 7 + 418 , 7 @ @ public abstract class AbstractJavadocCheck extends Check { 
 * @ return token type from JavadocTokenTypes 
 * / 
 private static int getTokenType ( ParseTree node ) { 
 - int tokenType ; 
 + final int tokenType ; 
 
 if ( node . getChildCount ( ) = = 0 ) { 
 tokenType = ( ( TerminalNode ) node ) . getSymbol ( ) . getType ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 0c2275b . . 5e0088a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 395 , 7 + 395 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * @ return Some javadoc . 
 * / 
 private static int getMethodsNumberOfLine ( DetailAST methodDef ) { 
 - int numberOfLines ; 
 + final int numberOfLines ; 
 final DetailAST lcurly = methodDef . getLastChild ( ) ; 
 final DetailAST rcurly = lcurly . getLastChild ( ) ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java 
 index 95f6808 . . 342d2b7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java 
 @ @ - 339 , 7 + 339 , 7 @ @ public class JavaNCSSCheck extends Check { 
 * @ return true if the expression is countable , false otherwise 
 * / 
 private static boolean isExpressionCountable ( DetailAST ast ) { 
 - boolean countable ; 
 + final boolean countable ; 
 
 / / count expressions only if they are direct child to a slist ( method 
 / / body , for loop . . . ) 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 index 7f45995 . . a2d2170 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 @ @ - 145 , 7 + 145 , 7 @ @ public class NoWhitespaceAfterCheck extends Check { 
 * @ return node before ast . 
 * / 
 private static DetailAST getWhitespaceFollowedNode ( DetailAST ast ) { 
 - DetailAST whitespaceFollowedAst ; 
 + final DetailAST whitespaceFollowedAst ; 
 switch ( ast . getType ( ) ) { 
 case TokenTypes . TYPECAST : 
 whitespaceFollowedAst = ast . findFirstToken ( TokenTypes . RPAREN ) ; 
 @ @ - 277 , 7 + 277 , 7 @ @ public class NoWhitespaceAfterCheck extends Check { 
 * @ return previous node by text order . 
 * / 
 private static DetailAST getIndexOpPreviousElement ( DetailAST ast ) { 
 - DetailAST result ; 
 + final DetailAST result ; 
 final DetailAST firstChild = ast . getFirstChild ( ) ; 
 if ( firstChild . getType ( ) = = TokenTypes . INDEX _ OP ) { 
 / / second or higher array index 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java 
 index a059727 . . 141ad4a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java 
 @ @ - 104 , 7 + 104 , 7 @ @ public class ParseTreeTableModel implements TreeModel { 
 * @ return the type for column number { @ code column } . 
 * / 
 public Class < ? > getColumnClass ( int column ) { 
 - Class < ? > columnClass ; 
 + final Class < ? > columnClass ; 
 
 switch ( column ) { 
 case 0 : 
 @ @ - 136 , 7 + 136 , 7 @ @ public class ParseTreeTableModel implements TreeModel { 
 * / 
 public Object getValueAt ( Object node , int column ) { 
 final DetailAST ast = ( DetailAST ) node ; 
 - Object value ; 
 + final Object value ; 
 
 switch ( column ) { 
 case 1 : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 index d824c56 . . efe03db 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 @ @ - 439 , 7 + 439 , 7 @ @ public final class JavadocUtils { 
 * @ return name , of the javadocTagSection ' s tag . 
 * / 
 public static String getTagName ( DetailNode javadocTagSection ) { 
 - String javadocTagName ; 
 + final String javadocTagName ; 
 if ( javadocTagSection . getType ( ) = = JavadocTokenTypes . JAVADOC _ INLINE _ TAG ) { 
 javadocTagName = getNextSibling ( 
 getFirstChild ( javadocTagSection ) ) . getText ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 index 94e6cf4 . . e892f5a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 @ @ - 149 , 7 + 149 , 7 @ @ public class TokenTypesDocletTest { 
 private static RootDoc getRootDoc ( JavadocTool javadocTool , ListBuffer < String [ ] > options , 
 ListBuffer < String > names ) throws Exception { 
 final Method getRootDocImpl = getMethodGetRootDocImplByReflection ( ) ; 
 - RootDoc rootDoc ; 
 + final RootDoc rootDoc ; 
 if ( System . getProperty ( " java . version " ) . startsWith ( " 1 . 7 . " ) ) { 
 rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , " UTF - 8 " , 
 new ModifierFilter ( ModifierFilter . ALL _ ACCESS ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java 
 index 645a795 . . a03adf6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java 
 @ @ - 56 , 7 + 56 , 7 @ @ class CompareTreesWithComments extends Check { 
 } 
 
 private static boolean isAstEquals ( DetailAST expected , DetailAST actual ) { 
 - boolean result ; 
 + final boolean result ; 
 if ( expected = = actual ) { 
 result = true ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 index 848cca9 . . 95727df 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 @ @ - 138 , 7 + 138 , 7 @ @ public class CommitValidationTest { 
 } 
 
 private static List < RevCommit > getCommitsToCheck ( ) throws Exception { 
 - List < RevCommit > commits ; 
 + final List < RevCommit > commits ; 
 try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { 
 final RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; 
 if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { 
 @ @ - 168 , 8 + 168 , 8 @ @ public class CommitValidationTest { 
 RevCommitsPair revCommitIteratorPair ; 
 
 try ( RevWalk revWalk = new RevWalk ( repo ) ) { 
 - Iterator < RevCommit > first ; 
 - Iterator < RevCommit > second ; 
 + final Iterator < RevCommit > first ; 
 + final Iterator < RevCommit > second ; 
 final ObjectId headId = repo . resolve ( Constants . HEAD ) ; 
 final RevCommit headCommit = revWalk . parseCommit ( headId ) ; 

