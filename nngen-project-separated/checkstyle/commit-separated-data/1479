BLEU SCORE: 0.1135935489027116

TEST MSG: config : revert version to 6 . 13 - SNAPSHOT as build is invalid
GENERATED MSG: [ maven - release - plugin ] prepare release checkstyle - 6 . 13

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 53defdc . . 98d9bf0 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 22 , 7 + 22 , 7 @ @ <nl> <nl> < groupId > com . puppycrawl . tools < / groupId > <nl> < artifactId > checkstyle < / artifactId > <nl> - < version > 6 . 13 < / version > <nl> + < version > 6 . 13 - SNAPSHOT < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > checkstyle < / name >
NEAREST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index cab045e . . 322b0a2 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 37 , 7 + 37 , 7 @ @ <nl> files = " AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java " / > <nl> <nl> < ! - - Tone down the checking for test code - - > <nl> - < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 341 " / > <nl> + < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 333 " / > <nl> < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4843defaultcasepresent / MissingSwitchDefaultTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4843defaultcasepresent / MissingSwitchDefaultTest . java <nl> index 17914e2 . . af8ced7 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4843defaultcasepresent / MissingSwitchDefaultTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4843defaultcasepresent / MissingSwitchDefaultTest . java <nl> @ @ - 45 , 12 + 45 , 12 @ @ public class MissingSwitchDefaultTest extends BaseCheckTestSupport { <nl> " missing . switch . default " ) ; <nl> <nl> final String [ ] expected = { <nl> - " 11 : 9 : " + msg , <nl> - " 19 : 9 : " + msg , <nl> - " 23 : 9 : " + msg , <nl> - " 31 : 13 : " + msg , <nl> - " 38 : 21 : " + msg , <nl> - " 42 : 21 : " + msg , <nl> + " 11 : " + msg , <nl> + " 19 : " + msg , <nl> + " 23 : " + msg , <nl> + " 31 : " + msg , <nl> + " 38 : " + msg , <nl> + " 42 : " + msg , <nl> } ; <nl> <nl> final Configuration checkConfig = builder . getCheckConfig ( " MissingSwitchDefault " ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java <nl> index 658d73a . . 2f41a1b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java <nl> @ @ - 19 , 9 + 19 , 9 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> + import com . puppycrawl . tools . checkstyle . api . Check ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> - import com . puppycrawl . tools . checkstyle . checks . DescendantTokenCheck ; <nl> - import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; <nl> <nl> / * * <nl> * < p > <nl> @ @ - 44 , 7 + 44 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; <nl> * < / pre > <nl> * @ author o _ sukhodolsky <nl> * / <nl> - public class MissingSwitchDefaultCheck extends DescendantTokenCheck { <nl> + public class MissingSwitchDefaultCheck extends Check { <nl> <nl> / * * <nl> * A key is pointing to the warning message text in " messages . properties " <nl> @ @ - 52 , 14 + 52 , 6 @ @ public class MissingSwitchDefaultCheck extends DescendantTokenCheck { <nl> * / <nl> public static final String MSG _ KEY = " missing . switch . default " ; <nl> <nl> - / * * Creates new instance of the check . * / <nl> - public MissingSwitchDefaultCheck ( ) { <nl> - setLimitedTokens ( TokenUtils . getTokenName ( TokenTypes . LITERAL _ DEFAULT ) ) ; <nl> - setMinimumNumber ( 1 ) ; <nl> - setMaximumDepth ( 2 ) ; <nl> - setMinimumMessage ( MSG _ KEY ) ; <nl> - } <nl> - <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> return new int [ ] { TokenTypes . LITERAL _ SWITCH } ; <nl> @ @ - 74 , 4 + 66 , 34 @ @ public class MissingSwitchDefaultCheck extends DescendantTokenCheck { <nl> public int [ ] getRequiredTokens ( ) { <nl> return getDefaultTokens ( ) ; <nl> } <nl> + <nl> + @ Override <nl> + public void visitToken ( DetailAST ast ) { <nl> + final DetailAST firstCaseGroupAst = ast . findFirstToken ( TokenTypes . CASE _ GROUP ) ; <nl> + <nl> + if ( ! containsDefaultSwitch ( firstCaseGroupAst ) ) { <nl> + log ( ast . getLineNo ( ) , MSG _ KEY ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Checks if the case group or its sibling contain the ' default ' switch . <nl> + * @ param caseGroupAst first case group to check . <nl> + * @ return true if ' default ' switch found . <nl> + * / <nl> + private static boolean containsDefaultSwitch ( DetailAST caseGroupAst ) { <nl> + DetailAST nextAst = caseGroupAst ; <nl> + boolean found = false ; <nl> + <nl> + while ( nextAst ! = null ) { <nl> + if ( nextAst . findFirstToken ( TokenTypes . LITERAL _ DEFAULT ) ! = null ) { <nl> + found = true ; <nl> + break ; <nl> + } <nl> + <nl> + nextAst = nextAst . getNextSibling ( ) ; <nl> + } <nl> + <nl> + return found ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> index d154db5 . . cda73be 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> @ @ - 131 , 14 + 131 , 6 @ @ public class XDocsPagesTest { <nl> " TypeNameCheck . compileFlags " , <nl> " RegexpCheck . compileFlags " , <nl> " SuppressionCommentFilter . fileContents " , <nl> - " MissingSwitchDefaultCheck . limitedTokens " , <nl> - " MissingSwitchDefaultCheck . maximumDepth " , <nl> - " MissingSwitchDefaultCheck . maximumMessage " , <nl> - " MissingSwitchDefaultCheck . maximumNumber " , <nl> - " MissingSwitchDefaultCheck . minimumDepth " , <nl> - " MissingSwitchDefaultCheck . minimumMessage " , <nl> - " MissingSwitchDefaultCheck . minimumNumber " , <nl> - " MissingSwitchDefaultCheck . sumTokenCounts " , <nl> " MissingCtorCheck . limitedTokens " , <nl> " MissingCtorCheck . maximumDepth " , <nl> " MissingCtorCheck . maximumMessage " , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheckTest . java <nl> index 4c48e01 . . 3ab87bd 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheckTest . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class MissingSwitchDefaultCheckTest <nl> @ Test <nl> public void testMissingSwitchDefault ( ) throws Exception { <nl> final String [ ] expected = { <nl> - " 17 : 9 : " + getCheckMessage ( MSG _ KEY , " default " ) , <nl> + " 17 : " + getCheckMessage ( MSG _ KEY , " default " ) , <nl> } ; <nl> verify ( <nl> checkConfig ,

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 53defdc . . 98d9bf0 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 22 , 7 + 22 , 7 @ @ 
 
 < groupId > com . puppycrawl . tools < / groupId > 
 < artifactId > checkstyle < / artifactId > 
 - < version > 6 . 13 < / version > 
 + < version > 6 . 13 - SNAPSHOT < / version > 
 < packaging > jar < / packaging > 
 
 < name > checkstyle < / name >

NEAREST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index cab045e . . 322b0a2 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 37 , 7 + 37 , 7 @ @ 
 files = " AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java " / > 
 
 < ! - - Tone down the checking for test code - - > 
 - < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 341 " / > 
 + < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 333 " / > 
 < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4843defaultcasepresent / MissingSwitchDefaultTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4843defaultcasepresent / MissingSwitchDefaultTest . java 
 index 17914e2 . . af8ced7 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4843defaultcasepresent / MissingSwitchDefaultTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4843defaultcasepresent / MissingSwitchDefaultTest . java 
 @ @ - 45 , 12 + 45 , 12 @ @ public class MissingSwitchDefaultTest extends BaseCheckTestSupport { 
 " missing . switch . default " ) ; 
 
 final String [ ] expected = { 
 - " 11 : 9 : " + msg , 
 - " 19 : 9 : " + msg , 
 - " 23 : 9 : " + msg , 
 - " 31 : 13 : " + msg , 
 - " 38 : 21 : " + msg , 
 - " 42 : 21 : " + msg , 
 + " 11 : " + msg , 
 + " 19 : " + msg , 
 + " 23 : " + msg , 
 + " 31 : " + msg , 
 + " 38 : " + msg , 
 + " 42 : " + msg , 
 } ; 
 
 final Configuration checkConfig = builder . getCheckConfig ( " MissingSwitchDefault " ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java 
 index 658d73a . . 2f41a1b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java 
 @ @ - 19 , 9 + 19 , 9 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 + import com . puppycrawl . tools . checkstyle . api . Check ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 - import com . puppycrawl . tools . checkstyle . checks . DescendantTokenCheck ; 
 - import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; 
 
 / * * 
 * < p > 
 @ @ - 44 , 7 + 44 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; 
 * < / pre > 
 * @ author o _ sukhodolsky 
 * / 
 - public class MissingSwitchDefaultCheck extends DescendantTokenCheck { 
 + public class MissingSwitchDefaultCheck extends Check { 
 
 / * * 
 * A key is pointing to the warning message text in " messages . properties " 
 @ @ - 52 , 14 + 52 , 6 @ @ public class MissingSwitchDefaultCheck extends DescendantTokenCheck { 
 * / 
 public static final String MSG _ KEY = " missing . switch . default " ; 
 
 - / * * Creates new instance of the check . * / 
 - public MissingSwitchDefaultCheck ( ) { 
 - setLimitedTokens ( TokenUtils . getTokenName ( TokenTypes . LITERAL _ DEFAULT ) ) ; 
 - setMinimumNumber ( 1 ) ; 
 - setMaximumDepth ( 2 ) ; 
 - setMinimumMessage ( MSG _ KEY ) ; 
 - } 
 - 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 return new int [ ] { TokenTypes . LITERAL _ SWITCH } ; 
 @ @ - 74 , 4 + 66 , 34 @ @ public class MissingSwitchDefaultCheck extends DescendantTokenCheck { 
 public int [ ] getRequiredTokens ( ) { 
 return getDefaultTokens ( ) ; 
 } 
 + 
 + @ Override 
 + public void visitToken ( DetailAST ast ) { 
 + final DetailAST firstCaseGroupAst = ast . findFirstToken ( TokenTypes . CASE _ GROUP ) ; 
 + 
 + if ( ! containsDefaultSwitch ( firstCaseGroupAst ) ) { 
 + log ( ast . getLineNo ( ) , MSG _ KEY ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Checks if the case group or its sibling contain the ' default ' switch . 
 + * @ param caseGroupAst first case group to check . 
 + * @ return true if ' default ' switch found . 
 + * / 
 + private static boolean containsDefaultSwitch ( DetailAST caseGroupAst ) { 
 + DetailAST nextAst = caseGroupAst ; 
 + boolean found = false ; 
 + 
 + while ( nextAst ! = null ) { 
 + if ( nextAst . findFirstToken ( TokenTypes . LITERAL _ DEFAULT ) ! = null ) { 
 + found = true ; 
 + break ; 
 + } 
 + 
 + nextAst = nextAst . getNextSibling ( ) ; 
 + } 
 + 
 + return found ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 index d154db5 . . cda73be 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 @ @ - 131 , 14 + 131 , 6 @ @ public class XDocsPagesTest { 
 " TypeNameCheck . compileFlags " , 
 " RegexpCheck . compileFlags " , 
 " SuppressionCommentFilter . fileContents " , 
 - " MissingSwitchDefaultCheck . limitedTokens " , 
 - " MissingSwitchDefaultCheck . maximumDepth " , 
 - " MissingSwitchDefaultCheck . maximumMessage " , 
 - " MissingSwitchDefaultCheck . maximumNumber " , 
 - " MissingSwitchDefaultCheck . minimumDepth " , 
 - " MissingSwitchDefaultCheck . minimumMessage " , 
 - " MissingSwitchDefaultCheck . minimumNumber " , 
 - " MissingSwitchDefaultCheck . sumTokenCounts " , 
 " MissingCtorCheck . limitedTokens " , 
 " MissingCtorCheck . maximumDepth " , 
 " MissingCtorCheck . maximumMessage " , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheckTest . java 
 index 4c48e01 . . 3ab87bd 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheckTest . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class MissingSwitchDefaultCheckTest 
 @ Test 
 public void testMissingSwitchDefault ( ) throws Exception { 
 final String [ ] expected = { 
 - " 17 : 9 : " + getCheckMessage ( MSG _ KEY , " default " ) , 
 + " 17 : " + getCheckMessage ( MSG _ KEY , " default " ) , 
 } ; 
 verify ( 
 checkConfig ,
