BLEU SCORE: 0.05366912772746423

TEST MSG: Issue # 4164 : Custom tags ' content not to be parsed as HTML
GENERATED MSG: Issue # 461 : Antlr4 grammar has been edited to support custom javadoc tags with dots and colons

TEST DIFF (one line): diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 <nl> index 1ea09d6 . . 34d1e5f 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 <nl> @ @ - 224 , 7 + 224 , 8 @ @ LINK _ LITERAL : ' @ link ' - > pushMode ( seeLink ) ; <nl> LINKPLAIN _ LITERAL : ' @ linkplain ' - > pushMode ( seeLink ) ; <nl> LITERAL _ LITERAL : ' @ literal ' { recognizeXmlTags = false ; } - > mode ( code ) ; <nl> VALUE _ LITERAL : ' @ value ' - > pushMode ( value ) ; <nl> - CustomName1 : ' @ ' [ a - zA - Z0 - 9 : . _ - ] + - > type ( CUSTOM _ NAME ) , mode ( DEFAULT _ MODE ) ; <nl> + CustomName1 : ' @ ' [ a - zA - Z0 - 9 : . _ - ] + { recognizeXmlTags = false ; } <nl> + - > type ( CUSTOM _ NAME ) , mode ( DEFAULT _ MODE ) ; <nl> Char6 : . - > type ( CHAR ) , mode ( DEFAULT _ MODE ) ; <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> mode code ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> index 4e37b35 . . 9955fdb 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> @ @ - 302 , 6 + 302 , 14 @ @ public class JavadocParseTreeTest { <nl> compareTrees ( expectedTree , generatedTree ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testInlineCustomJavadocTag ( ) throws IOException { <nl> + final String filename = getDocPath ( " InputInlineCustomJavadocTag . txt " ) ; <nl> + final ParseTree generatedTree = parseJavadoc ( getFileContent ( new File ( filename ) ) ) ; <nl> + final ParseTree expectedTree = ParseTreeBuilder . treeInlineCustomJavadocTag ( ) ; <nl> + compareTrees ( expectedTree , generatedTree ) ; <nl> + } <nl> + <nl> private void compareTrees ( ParseTree first , ParseTree second ) { <nl> Assert . assertEquals ( first . toStringTree ( parser ) , second . toStringTree ( parser ) ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java <nl> index 8c9592e . . 96e6627 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java <nl> @ @ - 6285 , 4 + 6285 , 60 @ @ final class ParseTreeBuilder { <nl> javadocContext0 . addChild ( eof0 ) ; <nl> return javadocContext0 ; <nl> } <nl> + public static ParseTree treeInlineCustomJavadocTag ( ) { <nl> + JavadocContext javadocContext0 = new JavadocContext ( null , 0 ) ; <nl> + TextContext textContext0 = new TextContext ( javadocContext0 , 0 ) ; <nl> + CommonToken char0 = new CommonToken ( JavadocTokenTypes . CHAR , " N " ) ; <nl> + textContext0 . addChild ( char0 ) ; <nl> + CommonToken char1 = new CommonToken ( JavadocTokenTypes . CHAR , " o " ) ; <nl> + textContext0 . addChild ( char1 ) ; <nl> + CommonToken char2 = new CommonToken ( JavadocTokenTypes . CHAR , " n " ) ; <nl> + textContext0 . addChild ( char2 ) ; <nl> + CommonToken ws0 = new CommonToken ( JavadocTokenTypes . WS , " " ) ; <nl> + textContext0 . addChild ( ws0 ) ; <nl> + CommonToken char3 = new CommonToken ( JavadocTokenTypes . CHAR , " s " ) ; <nl> + textContext0 . addChild ( char3 ) ; <nl> + CommonToken char4 = new CommonToken ( JavadocTokenTypes . CHAR , " t " ) ; <nl> + textContext0 . addChild ( char4 ) ; <nl> + CommonToken char5 = new CommonToken ( JavadocTokenTypes . CHAR , " a " ) ; <nl> + textContext0 . addChild ( char5 ) ; <nl> + CommonToken char6 = new CommonToken ( JavadocTokenTypes . CHAR , " n " ) ; <nl> + textContext0 . addChild ( char6 ) ; <nl> + CommonToken char7 = new CommonToken ( JavadocTokenTypes . CHAR , " d " ) ; <nl> + textContext0 . addChild ( char7 ) ; <nl> + CommonToken char8 = new CommonToken ( JavadocTokenTypes . CHAR , " a " ) ; <nl> + textContext0 . addChild ( char8 ) ; <nl> + CommonToken char9 = new CommonToken ( JavadocTokenTypes . CHAR , " r " ) ; <nl> + textContext0 . addChild ( char9 ) ; <nl> + CommonToken char10 = new CommonToken ( JavadocTokenTypes . CHAR , " d " ) ; <nl> + textContext0 . addChild ( char10 ) ; <nl> + CommonToken ws1 = new CommonToken ( JavadocTokenTypes . WS , " " ) ; <nl> + textContext0 . addChild ( ws1 ) ; <nl> + javadocContext0 . addChild ( textContext0 ) ; <nl> + JavadocInlineTagContext javadocInlineTagContext0 = new JavadocInlineTagContext ( javadocContext0 , 0 ) ; <nl> + CommonToken javadocInlineTagStart0 = new CommonToken ( JavadocTokenTypes . JAVADOC _ INLINE _ TAG _ START , " { " ) ; <nl> + javadocInlineTagContext0 . addChild ( javadocInlineTagStart0 ) ; <nl> + CommonToken customName0 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ preformat " ) ; <nl> + javadocInlineTagContext0 . addChild ( customName0 ) ; <nl> + CommonToken ws2 = new CommonToken ( JavadocTokenTypes . WS , " " ) ; <nl> + javadocInlineTagContext0 . addChild ( ws2 ) ; <nl> + DescriptionContext descriptionContext0 = new DescriptionContext ( javadocInlineTagContext0 , 0 ) ; <nl> + TextContext textContext1 = new TextContext ( descriptionContext0 , 0 ) ; <nl> + CommonToken char11 = new CommonToken ( JavadocTokenTypes . CHAR , " a " ) ; <nl> + textContext1 . addChild ( char11 ) ; <nl> + CommonToken char12 = new CommonToken ( JavadocTokenTypes . CHAR , " < " ) ; <nl> + textContext1 . addChild ( char12 ) ; <nl> + CommonToken char13 = new CommonToken ( JavadocTokenTypes . CHAR , " b " ) ; <nl> + textContext1 . addChild ( char13 ) ; <nl> + descriptionContext0 . addChild ( textContext1 ) ; <nl> + javadocInlineTagContext0 . addChild ( descriptionContext0 ) ; <nl> + CommonToken javadocInlineTagEnd0 = new CommonToken ( JavadocTokenTypes . JAVADOC _ INLINE _ TAG _ END , " } " ) ; <nl> + javadocInlineTagContext0 . addChild ( javadocInlineTagEnd0 ) ; <nl> + javadocContext0 . addChild ( javadocInlineTagContext0 ) ; <nl> + CommonToken newline0 = new CommonToken ( JavadocTokenTypes . NEWLINE , LINE _ SEPARATOR ) ; <nl> + javadocContext0 . addChild ( newline0 ) ; <nl> + CommonToken eof0 = new CommonToken ( JavadocTokenTypes . EOF , " < EOF > " ) ; <nl> + javadocContext0 . addChild ( eof0 ) ; <nl> + return javadocContext0 ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputInlineCustomJavadocTag . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputInlineCustomJavadocTag . txt <nl> new file mode 100644 <nl> index 0000000 . . bfee843 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputInlineCustomJavadocTag . txt <nl> @ @ - 0 , 0 + 1 @ @ <nl> + Non standard { @ preformat a < b }
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index b89282b . . 9d93632 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 11 , 5 + 11 , 6 @ @ <nl> < module name = " NestedSwitchCheck " / > <nl> < module name = " CauseParameterInException " / > <nl> < module name = " NameConventionForJunit4TestClassesCheck " / > <nl> + < module name = " EmptyPublicCtorInClassCheck " / > <nl> < / module > <nl> < / module >

TEST DIFF:
diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 
 index 1ea09d6 . . 34d1e5f 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 
 @ @ - 224 , 7 + 224 , 8 @ @ LINK _ LITERAL : ' @ link ' - > pushMode ( seeLink ) ; 
 LINKPLAIN _ LITERAL : ' @ linkplain ' - > pushMode ( seeLink ) ; 
 LITERAL _ LITERAL : ' @ literal ' { recognizeXmlTags = false ; } - > mode ( code ) ; 
 VALUE _ LITERAL : ' @ value ' - > pushMode ( value ) ; 
 - CustomName1 : ' @ ' [ a - zA - Z0 - 9 : . _ - ] + - > type ( CUSTOM _ NAME ) , mode ( DEFAULT _ MODE ) ; 
 + CustomName1 : ' @ ' [ a - zA - Z0 - 9 : . _ - ] + { recognizeXmlTags = false ; } 
 + - > type ( CUSTOM _ NAME ) , mode ( DEFAULT _ MODE ) ; 
 Char6 : . - > type ( CHAR ) , mode ( DEFAULT _ MODE ) ; 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 mode code ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 index 4e37b35 . . 9955fdb 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 @ @ - 302 , 6 + 302 , 14 @ @ public class JavadocParseTreeTest { 
 compareTrees ( expectedTree , generatedTree ) ; 
 } 
 
 + @ Test 
 + public void testInlineCustomJavadocTag ( ) throws IOException { 
 + final String filename = getDocPath ( " InputInlineCustomJavadocTag . txt " ) ; 
 + final ParseTree generatedTree = parseJavadoc ( getFileContent ( new File ( filename ) ) ) ; 
 + final ParseTree expectedTree = ParseTreeBuilder . treeInlineCustomJavadocTag ( ) ; 
 + compareTrees ( expectedTree , generatedTree ) ; 
 + } 
 + 
 private void compareTrees ( ParseTree first , ParseTree second ) { 
 Assert . assertEquals ( first . toStringTree ( parser ) , second . toStringTree ( parser ) ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java 
 index 8c9592e . . 96e6627 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java 
 @ @ - 6285 , 4 + 6285 , 60 @ @ final class ParseTreeBuilder { 
 javadocContext0 . addChild ( eof0 ) ; 
 return javadocContext0 ; 
 } 
 + public static ParseTree treeInlineCustomJavadocTag ( ) { 
 + JavadocContext javadocContext0 = new JavadocContext ( null , 0 ) ; 
 + TextContext textContext0 = new TextContext ( javadocContext0 , 0 ) ; 
 + CommonToken char0 = new CommonToken ( JavadocTokenTypes . CHAR , " N " ) ; 
 + textContext0 . addChild ( char0 ) ; 
 + CommonToken char1 = new CommonToken ( JavadocTokenTypes . CHAR , " o " ) ; 
 + textContext0 . addChild ( char1 ) ; 
 + CommonToken char2 = new CommonToken ( JavadocTokenTypes . CHAR , " n " ) ; 
 + textContext0 . addChild ( char2 ) ; 
 + CommonToken ws0 = new CommonToken ( JavadocTokenTypes . WS , " " ) ; 
 + textContext0 . addChild ( ws0 ) ; 
 + CommonToken char3 = new CommonToken ( JavadocTokenTypes . CHAR , " s " ) ; 
 + textContext0 . addChild ( char3 ) ; 
 + CommonToken char4 = new CommonToken ( JavadocTokenTypes . CHAR , " t " ) ; 
 + textContext0 . addChild ( char4 ) ; 
 + CommonToken char5 = new CommonToken ( JavadocTokenTypes . CHAR , " a " ) ; 
 + textContext0 . addChild ( char5 ) ; 
 + CommonToken char6 = new CommonToken ( JavadocTokenTypes . CHAR , " n " ) ; 
 + textContext0 . addChild ( char6 ) ; 
 + CommonToken char7 = new CommonToken ( JavadocTokenTypes . CHAR , " d " ) ; 
 + textContext0 . addChild ( char7 ) ; 
 + CommonToken char8 = new CommonToken ( JavadocTokenTypes . CHAR , " a " ) ; 
 + textContext0 . addChild ( char8 ) ; 
 + CommonToken char9 = new CommonToken ( JavadocTokenTypes . CHAR , " r " ) ; 
 + textContext0 . addChild ( char9 ) ; 
 + CommonToken char10 = new CommonToken ( JavadocTokenTypes . CHAR , " d " ) ; 
 + textContext0 . addChild ( char10 ) ; 
 + CommonToken ws1 = new CommonToken ( JavadocTokenTypes . WS , " " ) ; 
 + textContext0 . addChild ( ws1 ) ; 
 + javadocContext0 . addChild ( textContext0 ) ; 
 + JavadocInlineTagContext javadocInlineTagContext0 = new JavadocInlineTagContext ( javadocContext0 , 0 ) ; 
 + CommonToken javadocInlineTagStart0 = new CommonToken ( JavadocTokenTypes . JAVADOC _ INLINE _ TAG _ START , " { " ) ; 
 + javadocInlineTagContext0 . addChild ( javadocInlineTagStart0 ) ; 
 + CommonToken customName0 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ preformat " ) ; 
 + javadocInlineTagContext0 . addChild ( customName0 ) ; 
 + CommonToken ws2 = new CommonToken ( JavadocTokenTypes . WS , " " ) ; 
 + javadocInlineTagContext0 . addChild ( ws2 ) ; 
 + DescriptionContext descriptionContext0 = new DescriptionContext ( javadocInlineTagContext0 , 0 ) ; 
 + TextContext textContext1 = new TextContext ( descriptionContext0 , 0 ) ; 
 + CommonToken char11 = new CommonToken ( JavadocTokenTypes . CHAR , " a " ) ; 
 + textContext1 . addChild ( char11 ) ; 
 + CommonToken char12 = new CommonToken ( JavadocTokenTypes . CHAR , " < " ) ; 
 + textContext1 . addChild ( char12 ) ; 
 + CommonToken char13 = new CommonToken ( JavadocTokenTypes . CHAR , " b " ) ; 
 + textContext1 . addChild ( char13 ) ; 
 + descriptionContext0 . addChild ( textContext1 ) ; 
 + javadocInlineTagContext0 . addChild ( descriptionContext0 ) ; 
 + CommonToken javadocInlineTagEnd0 = new CommonToken ( JavadocTokenTypes . JAVADOC _ INLINE _ TAG _ END , " } " ) ; 
 + javadocInlineTagContext0 . addChild ( javadocInlineTagEnd0 ) ; 
 + javadocContext0 . addChild ( javadocInlineTagContext0 ) ; 
 + CommonToken newline0 = new CommonToken ( JavadocTokenTypes . NEWLINE , LINE _ SEPARATOR ) ; 
 + javadocContext0 . addChild ( newline0 ) ; 
 + CommonToken eof0 = new CommonToken ( JavadocTokenTypes . EOF , " < EOF > " ) ; 
 + javadocContext0 . addChild ( eof0 ) ; 
 + return javadocContext0 ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputInlineCustomJavadocTag . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputInlineCustomJavadocTag . txt 
 new file mode 100644 
 index 0000000 . . bfee843 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputInlineCustomJavadocTag . txt 
 @ @ - 0 , 0 + 1 @ @ 
 + Non standard { @ preformat a < b }

NEAREST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index b89282b . . 9d93632 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 11 , 5 + 11 , 6 @ @ 
 < module name = " NestedSwitchCheck " / > 
 < module name = " CauseParameterInException " / > 
 < module name = " NameConventionForJunit4TestClassesCheck " / > 
 + < module name = " EmptyPublicCtorInClassCheck " / > 
 < / module > 
 < / module >
