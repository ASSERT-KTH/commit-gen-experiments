BLEU SCORE: 0.04955970694341068

TEST MSG: Issue # 4587 : Moved resources for FinalParameters check test
GENERATED MSG: Issue # 3900 : Modified TypecastParenPadCheckTest . java and moved its test - files to a subdir

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java <nl> index b526713 . . 4570a61 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java <nl> @ @ - 33 , 7 + 33 , 10 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> public class FinalParametersCheckTest extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> - return super . getPath ( " checks " + File . separator + filename ) ; <nl> + return super . getPath ( " checks " + File . separator <nl> + + " misc " + File . separator <nl> + + " finalparameters " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParameters . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParameters . java <nl> deleted file mode 100644 <nl> index 1ce811b . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParameters . java <nl> + + + / dev / null <nl> @ @ - 1 , 177 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2003 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - import javax . swing . AbstractAction ; <nl> - import javax . swing . Action ; <nl> - import java . awt . event . ActionEvent ; <nl> - <nl> - / * * <nl> - * Test case for detecting missing final parameters . <nl> - * @ author Lars K ü hne <nl> - * * / <nl> - class InputFinalParameters <nl> - { <nl> - / * * no param constructor * / <nl> - InputFinalParameters ( ) <nl> - { <nl> - } <nl> - <nl> - / * * non final param constructor * / <nl> - InputFinalParameters ( String s ) <nl> - { <nl> - } <nl> - <nl> - / * * non final param constructor * / <nl> - InputFinalParameters ( final Integer i ) <nl> - { <nl> - } <nl> - <nl> - / * * final param constructor with annotation * / <nl> - InputFinalParameters ( final @ MyAnnotation3 Class < Object > i ) <nl> - { <nl> - } <nl> - <nl> - / * * non - final param constructor with annotation * / <nl> - InputFinalParameters ( @ MyAnnotation3 Boolean i ) <nl> - { <nl> - } <nl> - <nl> - / * * mixed * / <nl> - InputFinalParameters ( String s , final Integer i ) <nl> - { <nl> - } <nl> - <nl> - / * * no param method * / <nl> - void method ( ) <nl> - { <nl> - } <nl> - <nl> - / * * non final param method * / <nl> - void method ( String s ) <nl> - { <nl> - } <nl> - <nl> - / * * final param method * / <nl> - void method ( final Integer i ) <nl> - { <nl> - } <nl> - <nl> - / * * final param method with annotation * * / <nl> - void method ( @ MyAnnotation3 final Object s ) <nl> - { <nl> - <nl> - } <nl> - <nl> - / * * non - final param method with annotation * * / <nl> - void method ( @ MyAnnotation3 Class < Object > s ) <nl> - { <nl> - <nl> - } <nl> - <nl> - / * * mixed * / <nl> - void method ( String s , final Integer i ) <nl> - { <nl> - } <nl> - <nl> - / * * interface methods should not be flagged . * / <nl> - interface TestInterface <nl> - { <nl> - void method ( String s ) ; <nl> - } <nl> - <nl> - / * * methods in anonymous inner classes * / <nl> - void holder ( ) <nl> - { <nl> - Action a = new AbstractAction ( ) <nl> - { <nl> - public void actionPerformed ( ActionEvent e ) <nl> - { <nl> - } <nl> - void somethingElse ( @ MyAnnotation3 ActionEvent e ) <nl> - { <nl> - } <nl> - } ; <nl> - <nl> - Action b = new AbstractAction ( ) <nl> - { <nl> - public void actionPerformed ( final ActionEvent e ) <nl> - { <nl> - } <nl> - void somethingElse ( @ MyAnnotation3 final ActionEvent e ) <nl> - { <nl> - } <nl> - } ; <nl> - } <nl> - <nl> - / * * methods with complicated types of the parameters . * / <nl> - void methodA ( java . lang . String aParam ) { <nl> - } <nl> - <nl> - void methodB ( String [ ] args ) { <nl> - } <nl> - <nl> - void methodC ( java . lang . String [ ] args ) { <nl> - } <nl> - <nl> - / * * some catch blocks * / <nl> - void method1 ( ) <nl> - { <nl> - try { <nl> - String . CASE _ INSENSITIVE _ ORDER . equals ( " " ) ; <nl> - } <nl> - catch ( java . lang . NullPointerException npe ) { <nl> - npe . getMessage ( ) ; <nl> - } <nl> - catch ( @ MyAnnotation3 final ClassCastException e ) { <nl> - e . getMessage ( ) ; <nl> - } <nl> - catch ( RuntimeException e ) { <nl> - e . getMessage ( ) ; <nl> - } <nl> - catch ( @ MyAnnotation3 NoClassDefFoundError e ) { <nl> - e . getMessage ( ) ; <nl> - } <nl> - } <nl> - <nl> - native void method ( int i ) ; <nl> - } <nl> - <nl> - abstract class AbstractClass <nl> - { <nl> - public abstract void abstractMethod ( int aParam ) ; <nl> - } <nl> - <nl> - class Foo <nl> - { <nl> - / * Some for - each clauses * / <nl> - public void Bar ( ) <nl> - { <nl> - for ( String s : someExpression ( ) ) <nl> - { <nl> - <nl> - } <nl> - for ( final String s : someExpression ( ) ) <nl> - { <nl> - <nl> - } <nl> - for ( @ MyAnnotation3 String s : someExpression ( ) ) <nl> - { <nl> - <nl> - } <nl> - for ( @ MyAnnotation3 final String s : someExpression ( ) ) <nl> - { <nl> - <nl> - } <nl> - } <nl> - <nl> - private String [ ] someExpression ( ) <nl> - { <nl> - return null ; <nl> - } <nl> - } <nl> - <nl> - @ interface MyAnnotation3 { <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersPrimitiveTypes . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersPrimitiveTypes . java <nl> deleted file mode 100644 <nl> index 2d44c98 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersPrimitiveTypes . java <nl> + + + / dev / null <nl> @ @ - 1 , 11 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - public class InputFinalParametersPrimitiveTypes <nl> - { <nl> - void foo ( int i ) { } / / no warning <nl> - void foo1 ( int i , String k , float s ) { } / / no warning on ' i ' and ' s ' <nl> - void foo2 ( String s , Object o , long l ) { } / / no warning on ' l ' <nl> - void foo3 ( int [ ] array ) { } / / warning <nl> - void foo4 ( int i , float x , int [ ] s ) { } / / warning on ' s ' <nl> - void foo5 ( int x , long [ ] l , String s ) { } / / warning on ' l ' and ' s ' <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersReceiver . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersReceiver . java <nl> deleted file mode 100644 <nl> index 194f123 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersReceiver . java <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - public class InputFinalParametersReceiver { <nl> - public void foo4 ( InputFinalParametersReceiver this ) { } <nl> - <nl> - private class Inner { <nl> - public Inner ( InputFinalParametersReceiver InputFinalParametersReceiver . this ) { } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParameters . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParameters . java <nl> new file mode 100644 <nl> index 0000000 . . 468d8cf <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParameters . java <nl> @ @ - 0 , 0 + 1 , 177 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2003 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . finalparameters ; <nl> + <nl> + import javax . swing . AbstractAction ; <nl> + import javax . swing . Action ; <nl> + import java . awt . event . ActionEvent ; <nl> + <nl> + / * * <nl> + * Test case for detecting missing final parameters . <nl> + * @ author Lars K ü hne <nl> + * * / <nl> + class InputFinalParameters <nl> + { <nl> + / * * no param constructor * / <nl> + InputFinalParameters ( ) <nl> + { <nl> + } <nl> + <nl> + / * * non final param constructor * / <nl> + InputFinalParameters ( String s ) <nl> + { <nl> + } <nl> + <nl> + / * * non final param constructor * / <nl> + InputFinalParameters ( final Integer i ) <nl> + { <nl> + } <nl> + <nl> + / * * final param constructor with annotation * / <nl> + InputFinalParameters ( final @ MyAnnotation3 Class < Object > i ) <nl> + { <nl> + } <nl> + <nl> + / * * non - final param constructor with annotation * / <nl> + InputFinalParameters ( @ MyAnnotation3 Boolean i ) <nl> + { <nl> + } <nl> + <nl> + / * * mixed * / <nl> + InputFinalParameters ( String s , final Integer i ) <nl> + { <nl> + } <nl> + <nl> + / * * no param method * / <nl> + void method ( ) <nl> + { <nl> + } <nl> + <nl> + / * * non final param method * / <nl> + void method ( String s ) <nl> + { <nl> + } <nl> + <nl> + / * * final param method * / <nl> + void method ( final Integer i ) <nl> + { <nl> + } <nl> + <nl> + / * * final param method with annotation * * / <nl> + void method ( @ MyAnnotation3 final Object s ) <nl> + { <nl> + <nl> + } <nl> + <nl> + / * * non - final param method with annotation * * / <nl> + void method ( @ MyAnnotation3 Class < Object > s ) <nl> + { <nl> + <nl> + } <nl> + <nl> + / * * mixed * / <nl> + void method ( String s , final Integer i ) <nl> + { <nl> + } <nl> + <nl> + / * * interface methods should not be flagged . * / <nl> + interface TestInterface <nl> + { <nl> + void method ( String s ) ; <nl> + } <nl> + <nl> + / * * methods in anonymous inner classes * / <nl> + void holder ( ) <nl> + { <nl> + Action a = new AbstractAction ( ) <nl> + { <nl> + public void actionPerformed ( ActionEvent e ) <nl> + { <nl> + } <nl> + void somethingElse ( @ MyAnnotation3 ActionEvent e ) <nl> + { <nl> + } <nl> + } ; <nl> + <nl> + Action b = new AbstractAction ( ) <nl> + { <nl> + public void actionPerformed ( final ActionEvent e ) <nl> + { <nl> + } <nl> + void somethingElse ( @ MyAnnotation3 final ActionEvent e ) <nl> + { <nl> + } <nl> + } ; <nl> + } <nl> + <nl> + / * * methods with complicated types of the parameters . * / <nl> + void methodA ( java . lang . String aParam ) { <nl> + } <nl> + <nl> + void methodB ( String [ ] args ) { <nl> + } <nl> + <nl> + void methodC ( java . lang . String [ ] args ) { <nl> + } <nl> + <nl> + / * * some catch blocks * / <nl> + void method1 ( ) <nl> + { <nl> + try { <nl> + String . CASE _ INSENSITIVE _ ORDER . equals ( " " ) ; <nl> + } <nl> + catch ( java . lang . NullPointerException npe ) { <nl> + npe . getMessage ( ) ; <nl> + } <nl> + catch ( @ MyAnnotation3 final ClassCastException e ) { <nl> + e . getMessage ( ) ; <nl> + } <nl> + catch ( RuntimeException e ) { <nl> + e . getMessage ( ) ; <nl> + } <nl> + catch ( @ MyAnnotation3 NoClassDefFoundError e ) { <nl> + e . getMessage ( ) ; <nl> + } <nl> + } <nl> + <nl> + native void method ( int i ) ; <nl> + } <nl> + <nl> + abstract class AbstractClass <nl> + { <nl> + public abstract void abstractMethod ( int aParam ) ; <nl> + } <nl> + <nl> + class Foo <nl> + { <nl> + / * Some for - each clauses * / <nl> + public void Bar ( ) <nl> + { <nl> + for ( String s : someExpression ( ) ) <nl> + { <nl> + <nl> + } <nl> + for ( final String s : someExpression ( ) ) <nl> + { <nl> + <nl> + } <nl> + for ( @ MyAnnotation3 String s : someExpression ( ) ) <nl> + { <nl> + <nl> + } <nl> + for ( @ MyAnnotation3 final String s : someExpression ( ) ) <nl> + { <nl> + <nl> + } <nl> + } <nl> + <nl> + private String [ ] someExpression ( ) <nl> + { <nl> + return null ; <nl> + } <nl> + } <nl> + <nl> + @ interface MyAnnotation3 { <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersPrimitiveTypes . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersPrimitiveTypes . java <nl> new file mode 100644 <nl> index 0000000 . . b1ae53c <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersPrimitiveTypes . java <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . finalparameters ; <nl> + <nl> + public class InputFinalParametersPrimitiveTypes <nl> + { <nl> + void foo ( int i ) { } / / no warning <nl> + void foo1 ( int i , String k , float s ) { } / / no warning on ' i ' and ' s ' <nl> + void foo2 ( String s , Object o , long l ) { } / / no warning on ' l ' <nl> + void foo3 ( int [ ] array ) { } / / warning <nl> + void foo4 ( int i , float x , int [ ] s ) { } / / warning on ' s ' <nl> + void foo5 ( int x , long [ ] l , String s ) { } / / warning on ' l ' and ' s ' <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersReceiver . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersReceiver . java <nl> new file mode 100644 <nl> index 0000000 . . 4b45447 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersReceiver . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . finalparameters ; <nl> + <nl> + public class InputFinalParametersReceiver { <nl> + public void foo4 ( InputFinalParametersReceiver this ) { } <nl> + <nl> + private class Inner { <nl> + public Inner ( InputFinalParametersReceiver InputFinalParametersReceiver . this ) { } <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm <nl> index 46e2299 . . 2809831 100644 <nl> - - - a / src / xdocs / index . xml . vm <nl> + + + b / src / xdocs / index . xml . vm <nl> @ @ - 168 , 14 + 168 , 14 @ @ <nl> < / td > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> < td > David Schneider < / td > <nl> < td > <nl> < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home Page < / a > <nl> < / td > <nl> < td > <nl> In 2007 was awarded <nl> - < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > <nl> + < a href = " https : / / eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > <nl> Best Open Source Eclipse - based Developer tool <nl> < / a > . <nl> < / td > <nl> @ @ - 201 , 7 + 201 , 7 @ @ <nl> < td / > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> < td > Roman Ivanov < / td > <nl> < td > <nl> < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > <nl> @ @ - 344 , 7 + 344 , 7 @ @ <nl> < td / > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> < td > Marco van Meegen < / td > <nl> < td > <nl> < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java 
 index b526713 . . 4570a61 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java 
 @ @ - 33 , 7 + 33 , 10 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 public class FinalParametersCheckTest extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 - return super . getPath ( " checks " + File . separator + filename ) ; 
 + return super . getPath ( " checks " + File . separator 
 + + " misc " + File . separator 
 + + " finalparameters " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParameters . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParameters . java 
 deleted file mode 100644 
 index 1ce811b . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParameters . java 
 + + + / dev / null 
 @ @ - 1 , 177 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2003 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - import javax . swing . AbstractAction ; 
 - import javax . swing . Action ; 
 - import java . awt . event . ActionEvent ; 
 - 
 - / * * 
 - * Test case for detecting missing final parameters . 
 - * @ author Lars K ü hne 
 - * * / 
 - class InputFinalParameters 
 - { 
 - / * * no param constructor * / 
 - InputFinalParameters ( ) 
 - { 
 - } 
 - 
 - / * * non final param constructor * / 
 - InputFinalParameters ( String s ) 
 - { 
 - } 
 - 
 - / * * non final param constructor * / 
 - InputFinalParameters ( final Integer i ) 
 - { 
 - } 
 - 
 - / * * final param constructor with annotation * / 
 - InputFinalParameters ( final @ MyAnnotation3 Class < Object > i ) 
 - { 
 - } 
 - 
 - / * * non - final param constructor with annotation * / 
 - InputFinalParameters ( @ MyAnnotation3 Boolean i ) 
 - { 
 - } 
 - 
 - / * * mixed * / 
 - InputFinalParameters ( String s , final Integer i ) 
 - { 
 - } 
 - 
 - / * * no param method * / 
 - void method ( ) 
 - { 
 - } 
 - 
 - / * * non final param method * / 
 - void method ( String s ) 
 - { 
 - } 
 - 
 - / * * final param method * / 
 - void method ( final Integer i ) 
 - { 
 - } 
 - 
 - / * * final param method with annotation * * / 
 - void method ( @ MyAnnotation3 final Object s ) 
 - { 
 - 
 - } 
 - 
 - / * * non - final param method with annotation * * / 
 - void method ( @ MyAnnotation3 Class < Object > s ) 
 - { 
 - 
 - } 
 - 
 - / * * mixed * / 
 - void method ( String s , final Integer i ) 
 - { 
 - } 
 - 
 - / * * interface methods should not be flagged . * / 
 - interface TestInterface 
 - { 
 - void method ( String s ) ; 
 - } 
 - 
 - / * * methods in anonymous inner classes * / 
 - void holder ( ) 
 - { 
 - Action a = new AbstractAction ( ) 
 - { 
 - public void actionPerformed ( ActionEvent e ) 
 - { 
 - } 
 - void somethingElse ( @ MyAnnotation3 ActionEvent e ) 
 - { 
 - } 
 - } ; 
 - 
 - Action b = new AbstractAction ( ) 
 - { 
 - public void actionPerformed ( final ActionEvent e ) 
 - { 
 - } 
 - void somethingElse ( @ MyAnnotation3 final ActionEvent e ) 
 - { 
 - } 
 - } ; 
 - } 
 - 
 - / * * methods with complicated types of the parameters . * / 
 - void methodA ( java . lang . String aParam ) { 
 - } 
 - 
 - void methodB ( String [ ] args ) { 
 - } 
 - 
 - void methodC ( java . lang . String [ ] args ) { 
 - } 
 - 
 - / * * some catch blocks * / 
 - void method1 ( ) 
 - { 
 - try { 
 - String . CASE _ INSENSITIVE _ ORDER . equals ( " " ) ; 
 - } 
 - catch ( java . lang . NullPointerException npe ) { 
 - npe . getMessage ( ) ; 
 - } 
 - catch ( @ MyAnnotation3 final ClassCastException e ) { 
 - e . getMessage ( ) ; 
 - } 
 - catch ( RuntimeException e ) { 
 - e . getMessage ( ) ; 
 - } 
 - catch ( @ MyAnnotation3 NoClassDefFoundError e ) { 
 - e . getMessage ( ) ; 
 - } 
 - } 
 - 
 - native void method ( int i ) ; 
 - } 
 - 
 - abstract class AbstractClass 
 - { 
 - public abstract void abstractMethod ( int aParam ) ; 
 - } 
 - 
 - class Foo 
 - { 
 - / * Some for - each clauses * / 
 - public void Bar ( ) 
 - { 
 - for ( String s : someExpression ( ) ) 
 - { 
 - 
 - } 
 - for ( final String s : someExpression ( ) ) 
 - { 
 - 
 - } 
 - for ( @ MyAnnotation3 String s : someExpression ( ) ) 
 - { 
 - 
 - } 
 - for ( @ MyAnnotation3 final String s : someExpression ( ) ) 
 - { 
 - 
 - } 
 - } 
 - 
 - private String [ ] someExpression ( ) 
 - { 
 - return null ; 
 - } 
 - } 
 - 
 - @ interface MyAnnotation3 { 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersPrimitiveTypes . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersPrimitiveTypes . java 
 deleted file mode 100644 
 index 2d44c98 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersPrimitiveTypes . java 
 + + + / dev / null 
 @ @ - 1 , 11 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - public class InputFinalParametersPrimitiveTypes 
 - { 
 - void foo ( int i ) { } / / no warning 
 - void foo1 ( int i , String k , float s ) { } / / no warning on ' i ' and ' s ' 
 - void foo2 ( String s , Object o , long l ) { } / / no warning on ' l ' 
 - void foo3 ( int [ ] array ) { } / / warning 
 - void foo4 ( int i , float x , int [ ] s ) { } / / warning on ' s ' 
 - void foo5 ( int x , long [ ] l , String s ) { } / / warning on ' l ' and ' s ' 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersReceiver . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersReceiver . java 
 deleted file mode 100644 
 index 194f123 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputFinalParametersReceiver . java 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - public class InputFinalParametersReceiver { 
 - public void foo4 ( InputFinalParametersReceiver this ) { } 
 - 
 - private class Inner { 
 - public Inner ( InputFinalParametersReceiver InputFinalParametersReceiver . this ) { } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParameters . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParameters . java 
 new file mode 100644 
 index 0000000 . . 468d8cf 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParameters . java 
 @ @ - 0 , 0 + 1 , 177 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2003 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . misc . finalparameters ; 
 + 
 + import javax . swing . AbstractAction ; 
 + import javax . swing . Action ; 
 + import java . awt . event . ActionEvent ; 
 + 
 + / * * 
 + * Test case for detecting missing final parameters . 
 + * @ author Lars K ü hne 
 + * * / 
 + class InputFinalParameters 
 + { 
 + / * * no param constructor * / 
 + InputFinalParameters ( ) 
 + { 
 + } 
 + 
 + / * * non final param constructor * / 
 + InputFinalParameters ( String s ) 
 + { 
 + } 
 + 
 + / * * non final param constructor * / 
 + InputFinalParameters ( final Integer i ) 
 + { 
 + } 
 + 
 + / * * final param constructor with annotation * / 
 + InputFinalParameters ( final @ MyAnnotation3 Class < Object > i ) 
 + { 
 + } 
 + 
 + / * * non - final param constructor with annotation * / 
 + InputFinalParameters ( @ MyAnnotation3 Boolean i ) 
 + { 
 + } 
 + 
 + / * * mixed * / 
 + InputFinalParameters ( String s , final Integer i ) 
 + { 
 + } 
 + 
 + / * * no param method * / 
 + void method ( ) 
 + { 
 + } 
 + 
 + / * * non final param method * / 
 + void method ( String s ) 
 + { 
 + } 
 + 
 + / * * final param method * / 
 + void method ( final Integer i ) 
 + { 
 + } 
 + 
 + / * * final param method with annotation * * / 
 + void method ( @ MyAnnotation3 final Object s ) 
 + { 
 + 
 + } 
 + 
 + / * * non - final param method with annotation * * / 
 + void method ( @ MyAnnotation3 Class < Object > s ) 
 + { 
 + 
 + } 
 + 
 + / * * mixed * / 
 + void method ( String s , final Integer i ) 
 + { 
 + } 
 + 
 + / * * interface methods should not be flagged . * / 
 + interface TestInterface 
 + { 
 + void method ( String s ) ; 
 + } 
 + 
 + / * * methods in anonymous inner classes * / 
 + void holder ( ) 
 + { 
 + Action a = new AbstractAction ( ) 
 + { 
 + public void actionPerformed ( ActionEvent e ) 
 + { 
 + } 
 + void somethingElse ( @ MyAnnotation3 ActionEvent e ) 
 + { 
 + } 
 + } ; 
 + 
 + Action b = new AbstractAction ( ) 
 + { 
 + public void actionPerformed ( final ActionEvent e ) 
 + { 
 + } 
 + void somethingElse ( @ MyAnnotation3 final ActionEvent e ) 
 + { 
 + } 
 + } ; 
 + } 
 + 
 + / * * methods with complicated types of the parameters . * / 
 + void methodA ( java . lang . String aParam ) { 
 + } 
 + 
 + void methodB ( String [ ] args ) { 
 + } 
 + 
 + void methodC ( java . lang . String [ ] args ) { 
 + } 
 + 
 + / * * some catch blocks * / 
 + void method1 ( ) 
 + { 
 + try { 
 + String . CASE _ INSENSITIVE _ ORDER . equals ( " " ) ; 
 + } 
 + catch ( java . lang . NullPointerException npe ) { 
 + npe . getMessage ( ) ; 
 + } 
 + catch ( @ MyAnnotation3 final ClassCastException e ) { 
 + e . getMessage ( ) ; 
 + } 
 + catch ( RuntimeException e ) { 
 + e . getMessage ( ) ; 
 + } 
 + catch ( @ MyAnnotation3 NoClassDefFoundError e ) { 
 + e . getMessage ( ) ; 
 + } 
 + } 
 + 
 + native void method ( int i ) ; 
 + } 
 + 
 + abstract class AbstractClass 
 + { 
 + public abstract void abstractMethod ( int aParam ) ; 
 + } 
 + 
 + class Foo 
 + { 
 + / * Some for - each clauses * / 
 + public void Bar ( ) 
 + { 
 + for ( String s : someExpression ( ) ) 
 + { 
 + 
 + } 
 + for ( final String s : someExpression ( ) ) 
 + { 
 + 
 + } 
 + for ( @ MyAnnotation3 String s : someExpression ( ) ) 
 + { 
 + 
 + } 
 + for ( @ MyAnnotation3 final String s : someExpression ( ) ) 
 + { 
 + 
 + } 
 + } 
 + 
 + private String [ ] someExpression ( ) 
 + { 
 + return null ; 
 + } 
 + } 
 + 
 + @ interface MyAnnotation3 { 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersPrimitiveTypes . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersPrimitiveTypes . java 
 new file mode 100644 
 index 0000000 . . b1ae53c 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersPrimitiveTypes . java 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . misc . finalparameters ; 
 + 
 + public class InputFinalParametersPrimitiveTypes 
 + { 
 + void foo ( int i ) { } / / no warning 
 + void foo1 ( int i , String k , float s ) { } / / no warning on ' i ' and ' s ' 
 + void foo2 ( String s , Object o , long l ) { } / / no warning on ' l ' 
 + void foo3 ( int [ ] array ) { } / / warning 
 + void foo4 ( int i , float x , int [ ] s ) { } / / warning on ' s ' 
 + void foo5 ( int x , long [ ] l , String s ) { } / / warning on ' l ' and ' s ' 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersReceiver . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersReceiver . java 
 new file mode 100644 
 index 0000000 . . 4b45447 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / finalparameters / InputFinalParametersReceiver . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . misc . finalparameters ; 
 + 
 + public class InputFinalParametersReceiver { 
 + public void foo4 ( InputFinalParametersReceiver this ) { } 
 + 
 + private class Inner { 
 + public Inner ( InputFinalParametersReceiver InputFinalParametersReceiver . this ) { } 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm 
 index 46e2299 . . 2809831 100644 
 - - - a / src / xdocs / index . xml . vm 
 + + + b / src / xdocs / index . xml . vm 
 @ @ - 168 , 14 + 168 , 14 @ @ 
 < / td > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 < td > David Schneider < / td > 
 < td > 
 < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home Page < / a > 
 < / td > 
 < td > 
 In 2007 was awarded 
 - < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > 
 + < a href = " https : / / eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > 
 Best Open Source Eclipse - based Developer tool 
 < / a > . 
 < / td > 
 @ @ - 201 , 7 + 201 , 7 @ @ 
 < td / > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 < td > Roman Ivanov < / td > 
 < td > 
 < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > 
 @ @ - 344 , 7 + 344 , 7 @ @ 
 < td / > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 < td > Marco van Meegen < / td > 
 < td > 
 < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a >
