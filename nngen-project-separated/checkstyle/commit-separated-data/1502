BLEU SCORE: 0.044568827606990644

TEST MSG: Issue # 2388 : Make JavadocType check customizable by list of tokens
GENERATED MSG: JavadocType does not check parameters in inner classes . # 1421

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java <nl> index a9471af . . 6470613 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java <nl> @ @ - 23 , 6 + 23 , 8 @ @ import java . util . List ; <nl> import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> <nl> + import org . apache . commons . lang3 . ArrayUtils ; <nl> + <nl> import com . puppycrawl . tools . checkstyle . api . Check ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> @ @ - 177 , 7 + 179 , 7 @ @ public class JavadocTypeCheck <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return ArrayUtils . EMPTY _ INT _ ARRAY ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java <nl> index 0a692c3 . . 9e6bee5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java <nl> @ @ - 50 , 13 + 50 , 7 @ @ public class JavadocTypeCheckTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void testGetRequiredTokens ( ) { <nl> final JavadocTypeCheck javadocTypeCheck = new JavadocTypeCheck ( ) ; <nl> - final int [ ] expected = { <nl> - TokenTypes . INTERFACE _ DEF , <nl> - TokenTypes . CLASS _ DEF , <nl> - TokenTypes . ENUM _ DEF , <nl> - TokenTypes . ANNOTATION _ DEF , <nl> - } ; <nl> - assertArrayEquals ( expected , javadocTypeCheck . getRequiredTokens ( ) ) ; <nl> + assertArrayEquals ( ArrayUtils . EMPTY _ INT _ ARRAY , javadocTypeCheck . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 292 , 6 + 286 , 17 @ @ public class JavadocTypeCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testLimitViolationsBySpecifyingTokens ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( JavadocTypeCheck . class ) ; <nl> + checkConfig . addAttribute ( " tokens " , " INTERFACE _ DEF " ) ; <nl> + final String [ ] expected = { <nl> + " 4 : " + getCheckMessage ( JAVADOC _ MISSING ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputNoJavadocOnInterface . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testScopes2 ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( JavadocTypeCheck . class ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputNoJavadocOnInterface . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputNoJavadocOnInterface . java <nl> new file mode 100644 <nl> index 0000000 . . fc6eac6 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputNoJavadocOnInterface . java <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> + <nl> + class InputNoJavadocOnInterface { / / no violation , CLASS _ DEF not in the list of tokens <nl> + interface NoJavadoc { } / / violation , INTERFACE _ DEF in the list of tokens <nl> + } <nl> diff - - git a / src / xdocs / config _ javadoc . xml b / src / xdocs / config _ javadoc . xml <nl> index a30c439 . . 57a13c2 100644 <nl> - - - a / src / xdocs / config _ javadoc . xml <nl> + + + b / src / xdocs / config _ javadoc . xml <nl> @ @ - 166 , 6 + 166 , 23 @ @ <nl> < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > <nl> < td > < code > false < / code > < / td > <nl> < / tr > <nl> + < tr > <nl> + < td > tokens < / td > <nl> + < td > tokens to check < / td > <nl> + < td > <nl> + subset of tokens <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > INTERFACE _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > CLASS _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > ENUM _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ DEF " > ANNOTATION _ DEF < / a > . <nl> + < / td > <nl> + < td > <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > INTERFACE _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > CLASS _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > ENUM _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ DEF " > ANNOTATION _ DEF < / a > . <nl> + < / td > <nl> + < / tr > <nl> < / table > <nl> < / subsection > <nl>
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index df04cee . . ca03873 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1202 , 7 + 1202 , 6 @ @ <nl> <nl> < regex > < pattern > . * . checks . whitespace . AbstractParenPadCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . whitespace . EmptyForInitializerPadCheck < / pattern > < branchRate > 91 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . whitespace . GenericWhitespaceCheck < / pattern > < branchRate > 86 < / branchRate > < lineRate > 96 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . whitespace . NoWhitespaceAfterCheck < / pattern > < branchRate > 94 < / branchRate > < lineRate > 98 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . whitespace . NoWhitespaceBeforeCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . whitespace . OperatorWrapCheck < / pattern > < branchRate > 68 < / branchRate > < lineRate > 81 < / lineRate > < / regex > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> index b0dec5f . . 5f25655 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> @ @ - 115 , 13 + 115 , 17 @ @ public class GenericWhitespaceCheck extends Check { <nl> <nl> @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> - if ( ast . getType ( ) = = TokenTypes . GENERIC _ START ) { <nl> - processStart ( ast ) ; <nl> - depth + + ; <nl> - } <nl> - else if ( ast . getType ( ) = = TokenTypes . GENERIC _ END ) { <nl> - processEnd ( ast ) ; <nl> - depth - - ; <nl> + switch ( ast . getType ( ) ) { <nl> + case TokenTypes . GENERIC _ START : <nl> + processStart ( ast ) ; <nl> + depth + + ; <nl> + break ; <nl> + case TokenTypes . GENERIC _ END : <nl> + processEnd ( ast ) ; <nl> + depth - - ; <nl> + break ; <nl> + default : <nl> + throw new IllegalArgumentException ( " Unknown type " + ast ) ; <nl> } <nl> } <nl> <nl> @ @ - 134 , 7 + 138 , 7 @ @ public class GenericWhitespaceCheck extends Check { <nl> final int before = ast . getColumnNo ( ) - 1 ; <nl> final int after = ast . getColumnNo ( ) + 1 ; <nl> <nl> - if ( 0 < = before & & Character . isWhitespace ( line . charAt ( before ) ) <nl> + if ( before > = 0 & & Character . isWhitespace ( line . charAt ( before ) ) <nl> & & ! Utils . whitespaceBefore ( before , line ) ) { <nl> log ( ast . getLineNo ( ) , before , WS _ PRECEDED , " > " ) ; <nl> } <nl> @ @ - 168 , 7 + 172 , 7 @ @ public class GenericWhitespaceCheck extends Check { <nl> / / should be whitespace if followed by & - + <nl> / / <nl> final int indexOfAmp = line . indexOf ( ' & ' , after ) ; <nl> - if ( indexOfAmp ! = - 1 <nl> + if ( indexOfAmp > = 0 <nl> & & whitespaceBetween ( after , indexOfAmp , line ) ) { <nl> if ( indexOfAmp - after = = 0 ) { <nl> log ( ast . getLineNo ( ) , after , WS _ NOT _ PRECEDED , " & " ) ; <nl> @ @ - 201 , 10 + 205 , 9 @ @ public class GenericWhitespaceCheck extends Check { <nl> } <nl> } <nl> else if ( ! Character . isWhitespace ( charAfter ) <nl> - & & ' ( ' ! = charAfter & & ' ) ' ! = charAfter <nl> - & & ' , ' ! = charAfter & & ' [ ' ! = charAfter <nl> - & & ' . ' ! = charAfter & & ' : ' ! = charAfter <nl> - & & ! isAfterMethodReference ( ast ) ) { <nl> + & & charAfter ! = ' ( ' & & charAfter ! = ' ) ' <nl> + & & charAfter ! = ' , ' & & charAfter ! = ' [ ' <nl> + & & charAfter ! = ' . ' & & charAfter ! = ' : ' ) { <nl> log ( ast . getLineNo ( ) , after , WS _ ILLEGAL _ FOLLOW , " > " ) ; <nl> } <nl> } <nl> @ @ - 248 , 7 + 251 , 7 @ @ public class GenericWhitespaceCheck extends Check { <nl> / / ^ ^ <nl> / / ws reqd - - - + + - - - whitespace NOT required <nl> / / <nl> - if ( 0 < = before ) { <nl> + if ( before > = 0 ) { <nl> / / Detect if the first case <nl> final DetailAST parent = ast . getParent ( ) ; <nl> final DetailAST grandparent = parent . getParent ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java <nl> index 9d517e9 . . e85cf52 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java <nl> @ @ - 19 , 22 + 19 , 25 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> <nl> - import com . google . common . collect . Maps ; <nl> - import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> - import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ FOLLOWED ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ ILLEGAL _ FOLLOW ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ NOT _ PRECEDED ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ PRECEDED ; <nl> <nl> import java . io . File ; <nl> import java . util . Map ; <nl> <nl> + import org . junit . Assert ; <nl> import org . junit . Before ; <nl> import org . junit . Test ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ FOLLOWED ; <nl> - import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck <nl> - . WS _ ILLEGAL _ FOLLOW ; <nl> - import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck <nl> - . WS _ NOT _ PRECEDED ; <nl> - import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ PRECEDED ; <nl> + import antlr . CommonHiddenStreamToken ; <nl> + <nl> + import com . google . common . collect . Maps ; <nl> + import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> public class GenericWhitespaceCheckTest <nl> extends BaseCheckTestSupport { <nl> @ @ - 117 , 4 + 120 , 24 @ @ public class GenericWhitespaceCheckTest <nl> + " checkstyle / whitespace / " <nl> + " InputGenericWhitespaceMethodRef . java " ) . getCanonicalPath ( ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testGetAcceptableTokens ( ) { <nl> + GenericWhitespaceCheck genericWhitespaceCheckObj = new GenericWhitespaceCheck ( ) ; <nl> + int [ ] actual = genericWhitespaceCheckObj . getAcceptableTokens ( ) ; <nl> + int [ ] expected = new int [ ] { <nl> + TokenTypes . GENERIC _ START , <nl> + TokenTypes . GENERIC _ END , <nl> + } ; <nl> + Assert . assertNotNull ( actual ) ; <nl> + Assert . assertArrayEquals ( expected , actual ) ; <nl> + } <nl> + <nl> + @ Test ( expected = IllegalArgumentException . class ) <nl> + public void testWrongTokenType ( ) { <nl> + GenericWhitespaceCheck genericWhitespaceCheckObj = new GenericWhitespaceCheck ( ) ; <nl> + DetailAST ast = new DetailAST ( ) ; <nl> + ast . initialize ( new CommonHiddenStreamToken ( TokenTypes . INTERFACE _ DEF , " interface " ) ) ; <nl> + genericWhitespaceCheckObj . visitToken ( ast ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputGenericWhitespaceCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputGenericWhitespaceCheck . java <nl> index 0a5ba07 . . 4386fee 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputGenericWhitespaceCheck . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputGenericWhitespaceCheck . java <nl> @ @ - 62 , 4 + 62 , 19 @ @ class InputGenericWhitespaceCheck implements Comparable < InputGenericWhitespaceCh <nl> <nl> public static class IntEnumValueType3 < E extends Enum < E > & IntEnum > { <nl> } <nl> + <nl> + public static class IntEnumValueType4 < T extends Comparable < List < T > > & IntEnum > { <nl> + } <nl> + <nl> + public void beforeAndAfter ( ) { <nl> + List <nl> + < <nl> + Integer > x = new ArrayList < Integer <nl> + > ( ) ; <nl> + List <nl> + < Integer > y = new ArrayList < Integer <nl> + > ( ) ; <nl> + Map < Class < ? > , Integer > a = new HashMap < Class < ? > , Integer > ( ) ; <nl> + Map < Class < ? > , Integer > b = ( Map < Class < ? > , Integer > ) a ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java 
 index a9471af . . 6470613 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java 
 @ @ - 23 , 6 + 23 , 8 @ @ import java . util . List ; 
 import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 
 + import org . apache . commons . lang3 . ArrayUtils ; 
 + 
 import com . puppycrawl . tools . checkstyle . api . Check ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 @ @ - 177 , 7 + 179 , 7 @ @ public class JavadocTypeCheck 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return ArrayUtils . EMPTY _ INT _ ARRAY ; 
 } 
 
 @ Override 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java 
 index 0a692c3 . . 9e6bee5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java 
 @ @ - 50 , 13 + 50 , 7 @ @ public class JavadocTypeCheckTest extends BaseCheckTestSupport { 
 @ Test 
 public void testGetRequiredTokens ( ) { 
 final JavadocTypeCheck javadocTypeCheck = new JavadocTypeCheck ( ) ; 
 - final int [ ] expected = { 
 - TokenTypes . INTERFACE _ DEF , 
 - TokenTypes . CLASS _ DEF , 
 - TokenTypes . ENUM _ DEF , 
 - TokenTypes . ANNOTATION _ DEF , 
 - } ; 
 - assertArrayEquals ( expected , javadocTypeCheck . getRequiredTokens ( ) ) ; 
 + assertArrayEquals ( ArrayUtils . EMPTY _ INT _ ARRAY , javadocTypeCheck . getRequiredTokens ( ) ) ; 
 } 
 
 @ Test 
 @ @ - 292 , 6 + 286 , 17 @ @ public class JavadocTypeCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void testLimitViolationsBySpecifyingTokens ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( JavadocTypeCheck . class ) ; 
 + checkConfig . addAttribute ( " tokens " , " INTERFACE _ DEF " ) ; 
 + final String [ ] expected = { 
 + " 4 : " + getCheckMessage ( JAVADOC _ MISSING ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputNoJavadocOnInterface . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testScopes2 ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( JavadocTypeCheck . class ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputNoJavadocOnInterface . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputNoJavadocOnInterface . java 
 new file mode 100644 
 index 0000000 . . fc6eac6 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputNoJavadocOnInterface . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 + 
 + class InputNoJavadocOnInterface { / / no violation , CLASS _ DEF not in the list of tokens 
 + interface NoJavadoc { } / / violation , INTERFACE _ DEF in the list of tokens 
 + } 
 diff - - git a / src / xdocs / config _ javadoc . xml b / src / xdocs / config _ javadoc . xml 
 index a30c439 . . 57a13c2 100644 
 - - - a / src / xdocs / config _ javadoc . xml 
 + + + b / src / xdocs / config _ javadoc . xml 
 @ @ - 166 , 6 + 166 , 23 @ @ 
 < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > 
 < td > < code > false < / code > < / td > 
 < / tr > 
 + < tr > 
 + < td > tokens < / td > 
 + < td > tokens to check < / td > 
 + < td > 
 + subset of tokens 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > INTERFACE _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > CLASS _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > ENUM _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ DEF " > ANNOTATION _ DEF < / a > . 
 + < / td > 
 + < td > 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > INTERFACE _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > CLASS _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > ENUM _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ DEF " > ANNOTATION _ DEF < / a > . 
 + < / td > 
 + < / tr > 
 < / table > 
 < / subsection > 


NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index df04cee . . ca03873 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1202 , 7 + 1202 , 6 @ @ 
 
 < regex > < pattern > . * . checks . whitespace . AbstractParenPadCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . whitespace . EmptyForInitializerPadCheck < / pattern > < branchRate > 91 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . whitespace . GenericWhitespaceCheck < / pattern > < branchRate > 86 < / branchRate > < lineRate > 96 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . whitespace . NoWhitespaceAfterCheck < / pattern > < branchRate > 94 < / branchRate > < lineRate > 98 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . whitespace . NoWhitespaceBeforeCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . whitespace . OperatorWrapCheck < / pattern > < branchRate > 68 < / branchRate > < lineRate > 81 < / lineRate > < / regex > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 index b0dec5f . . 5f25655 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 @ @ - 115 , 13 + 115 , 17 @ @ public class GenericWhitespaceCheck extends Check { 
 
 @ Override 
 public void visitToken ( DetailAST ast ) { 
 - if ( ast . getType ( ) = = TokenTypes . GENERIC _ START ) { 
 - processStart ( ast ) ; 
 - depth + + ; 
 - } 
 - else if ( ast . getType ( ) = = TokenTypes . GENERIC _ END ) { 
 - processEnd ( ast ) ; 
 - depth - - ; 
 + switch ( ast . getType ( ) ) { 
 + case TokenTypes . GENERIC _ START : 
 + processStart ( ast ) ; 
 + depth + + ; 
 + break ; 
 + case TokenTypes . GENERIC _ END : 
 + processEnd ( ast ) ; 
 + depth - - ; 
 + break ; 
 + default : 
 + throw new IllegalArgumentException ( " Unknown type " + ast ) ; 
 } 
 } 
 
 @ @ - 134 , 7 + 138 , 7 @ @ public class GenericWhitespaceCheck extends Check { 
 final int before = ast . getColumnNo ( ) - 1 ; 
 final int after = ast . getColumnNo ( ) + 1 ; 
 
 - if ( 0 < = before & & Character . isWhitespace ( line . charAt ( before ) ) 
 + if ( before > = 0 & & Character . isWhitespace ( line . charAt ( before ) ) 
 & & ! Utils . whitespaceBefore ( before , line ) ) { 
 log ( ast . getLineNo ( ) , before , WS _ PRECEDED , " > " ) ; 
 } 
 @ @ - 168 , 7 + 172 , 7 @ @ public class GenericWhitespaceCheck extends Check { 
 / / should be whitespace if followed by & - + 
 / / 
 final int indexOfAmp = line . indexOf ( ' & ' , after ) ; 
 - if ( indexOfAmp ! = - 1 
 + if ( indexOfAmp > = 0 
 & & whitespaceBetween ( after , indexOfAmp , line ) ) { 
 if ( indexOfAmp - after = = 0 ) { 
 log ( ast . getLineNo ( ) , after , WS _ NOT _ PRECEDED , " & " ) ; 
 @ @ - 201 , 10 + 205 , 9 @ @ public class GenericWhitespaceCheck extends Check { 
 } 
 } 
 else if ( ! Character . isWhitespace ( charAfter ) 
 - & & ' ( ' ! = charAfter & & ' ) ' ! = charAfter 
 - & & ' , ' ! = charAfter & & ' [ ' ! = charAfter 
 - & & ' . ' ! = charAfter & & ' : ' ! = charAfter 
 - & & ! isAfterMethodReference ( ast ) ) { 
 + & & charAfter ! = ' ( ' & & charAfter ! = ' ) ' 
 + & & charAfter ! = ' , ' & & charAfter ! = ' [ ' 
 + & & charAfter ! = ' . ' & & charAfter ! = ' : ' ) { 
 log ( ast . getLineNo ( ) , after , WS _ ILLEGAL _ FOLLOW , " > " ) ; 
 } 
 } 
 @ @ - 248 , 7 + 251 , 7 @ @ public class GenericWhitespaceCheck extends Check { 
 / / ^ ^ 
 / / ws reqd - - - + + - - - whitespace NOT required 
 / / 
 - if ( 0 < = before ) { 
 + if ( before > = 0 ) { 
 / / Detect if the first case 
 final DetailAST parent = ast . getParent ( ) ; 
 final DetailAST grandparent = parent . getParent ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java 
 index 9d517e9 . . e85cf52 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheckTest . java 
 @ @ - 19 , 22 + 19 , 25 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 
 - import com . google . common . collect . Maps ; 
 - import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 - import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ FOLLOWED ; 
 + import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ ILLEGAL _ FOLLOW ; 
 + import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ NOT _ PRECEDED ; 
 + import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ PRECEDED ; 
 
 import java . io . File ; 
 import java . util . Map ; 
 
 + import org . junit . Assert ; 
 import org . junit . Before ; 
 import org . junit . Test ; 
 
 - import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ FOLLOWED ; 
 - import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck 
 - . WS _ ILLEGAL _ FOLLOW ; 
 - import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck 
 - . WS _ NOT _ PRECEDED ; 
 - import static com . puppycrawl . tools . checkstyle . checks . whitespace . GenericWhitespaceCheck . WS _ PRECEDED ; 
 + import antlr . CommonHiddenStreamToken ; 
 + 
 + import com . google . common . collect . Maps ; 
 + import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 public class GenericWhitespaceCheckTest 
 extends BaseCheckTestSupport { 
 @ @ - 117 , 4 + 120 , 24 @ @ public class GenericWhitespaceCheckTest 
 + " checkstyle / whitespace / " 
 + " InputGenericWhitespaceMethodRef . java " ) . getCanonicalPath ( ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testGetAcceptableTokens ( ) { 
 + GenericWhitespaceCheck genericWhitespaceCheckObj = new GenericWhitespaceCheck ( ) ; 
 + int [ ] actual = genericWhitespaceCheckObj . getAcceptableTokens ( ) ; 
 + int [ ] expected = new int [ ] { 
 + TokenTypes . GENERIC _ START , 
 + TokenTypes . GENERIC _ END , 
 + } ; 
 + Assert . assertNotNull ( actual ) ; 
 + Assert . assertArrayEquals ( expected , actual ) ; 
 + } 
 + 
 + @ Test ( expected = IllegalArgumentException . class ) 
 + public void testWrongTokenType ( ) { 
 + GenericWhitespaceCheck genericWhitespaceCheckObj = new GenericWhitespaceCheck ( ) ; 
 + DetailAST ast = new DetailAST ( ) ; 
 + ast . initialize ( new CommonHiddenStreamToken ( TokenTypes . INTERFACE _ DEF , " interface " ) ) ; 
 + genericWhitespaceCheckObj . visitToken ( ast ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputGenericWhitespaceCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputGenericWhitespaceCheck . java 
 index 0a5ba07 . . 4386fee 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputGenericWhitespaceCheck . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputGenericWhitespaceCheck . java 
 @ @ - 62 , 4 + 62 , 19 @ @ class InputGenericWhitespaceCheck implements Comparable < InputGenericWhitespaceCh 
 
 public static class IntEnumValueType3 < E extends Enum < E > & IntEnum > { 
 } 
 + 
 + public static class IntEnumValueType4 < T extends Comparable < List < T > > & IntEnum > { 
 + } 
 + 
 + public void beforeAndAfter ( ) { 
 + List 
 + < 
 + Integer > x = new ArrayList < Integer 
 + > ( ) ; 
 + List 
 + < Integer > y = new ArrayList < Integer 
 + > ( ) ; 
 + Map < Class < ? > , Integer > a = new HashMap < Class < ? > , Integer > ( ) ; 
 + Map < Class < ? > , Integer > b = ( Map < Class < ? > , Integer > ) a ; 
 + } 
 }
