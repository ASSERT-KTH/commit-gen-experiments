BLEU SCORE: 0.08295193507109855

TEST MSG: Issue # 4587 : Moved all necessary resource files for OuterTypeFilename
GENERATED MSG: Issue # 2161 : unify test input locations

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java <nl> index 6dd3dae . . 45c8c7f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java <nl> @ @ - 35 , 12 + 35 , 18 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> public class OuterTypeFilenameCheckTest extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> - return super . getPath ( " checks " + File . separator + filename ) ; <nl> + return super . getPath ( " checks " + File . separator <nl> + + " misc " + File . separator <nl> + + " outertypefilename " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Override <nl> protected String getNonCompilablePath ( String filename ) throws IOException { <nl> - return super . getNonCompilablePath ( " checks " + File . separator + filename ) ; <nl> + return super . getNonCompilablePath ( " checks " + File . separator <nl> + + " misc " + File . separator <nl> + + " outertypefilename " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 61 , 7 + 67 , 7 @ @ public class OuterTypeFilenameCheckTest extends BaseCheckTestSupport { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( OuterTypeFilenameCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputIllegalTokens . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputOuterTypeFilenameIllegalTokens . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 69 , 7 + 75 , 7 @ @ public class OuterTypeFilenameCheckTest extends BaseCheckTestSupport { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( OuterTypeFilenameCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " Input15Extensions . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputOuterTypeFilename15Extensions . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / package - info . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / package - info . java <nl> new file mode 100644 <nl> index 0000000 . . 391a1a4 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / package - info . java <nl> @ @ - 0 , 0 + 1 , 3 @ @ <nl> + @ Deprecated <nl> + package com . puppycrawl . tools . checkstyle . checks ; <nl> + <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / package - info . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / package - info . java <nl> deleted file mode 100644 <nl> index 391a1a4 . . 0000000 <nl> - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / package - info . java <nl> + + + / dev / null <nl> @ @ - 1 , 3 + 0 , 0 @ @ <nl> - @ Deprecated <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename1 . java <nl> deleted file mode 100644 <nl> index 1d3cf3e . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename1 . java <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - / / someexamples of 1 . 5 extensions <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - public class InputOuterTypeFilename1 { <nl> - <nl> - public class UnicClassName { <nl> - <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename2 . java <nl> deleted file mode 100644 <nl> index 9a513ea . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 7 + 0 , 0 @ @ <nl> - / / someexamples of 1 . 5 extensions <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - public class InputOuterTypeFilename2 { <nl> - <nl> - <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename3 . java <nl> deleted file mode 100644 <nl> index 10bedc3 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename3 . java <nl> + + + / dev / null <nl> @ @ - 1 , 7 + 0 , 0 @ @ <nl> - / / someexamples of 1 . 5 extensions <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - class InputOuterTypeFilename3 { <nl> - <nl> - <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename5 . java <nl> deleted file mode 100644 <nl> index 001f6b7 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename5 . java <nl> + + + / dev / null <nl> @ @ - 1 , 7 + 0 , 0 @ @ <nl> - / / someexamples of 1 . 5 extensions <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - class InputOuterTypeFilenameCheckWrongName2 { <nl> - <nl> - <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename1 . java <nl> new file mode 100644 <nl> index 0000000 . . c6ff0b9 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename1 . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + / / someexamples of 1 . 5 extensions <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; <nl> + <nl> + public class InputOuterTypeFilename1 { <nl> + <nl> + public class UnicClassName { <nl> + <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename15Extensions . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename15Extensions . java <nl> new file mode 100644 <nl> index 0000000 . . 7f367f2 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename15Extensions . java <nl> @ @ - 0 , 0 + 1 , 36 @ @ <nl> + / / someexamples of 1 . 5 extensions <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; <nl> + <nl> + @ interface MyAnnotation1 { <nl> + String name ( ) ; <nl> + int version ( ) ; <nl> + } <nl> + <nl> + @ MyAnnotation1 ( name = " ABC " , version = 1 ) <nl> + public class InputOuterTypeFilename15Extensions <nl> + { <nl> + <nl> + } <nl> + <nl> + enum Enum1 <nl> + { <nl> + A , B , C ; <nl> + Enum1 ( ) { } <nl> + public String toString ( ) { <nl> + return " " ; / / some custom implementation <nl> + } <nl> + } <nl> + <nl> + interface TestRequireThisEnum <nl> + { <nl> + enum DAY _ OF _ WEEK <nl> + { <nl> + SUNDAY , <nl> + MONDAY , <nl> + TUESDAY , <nl> + WEDNESDAY , <nl> + THURSDAY , <nl> + FRIDAY , <nl> + SATURDAY <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename2 . java <nl> new file mode 100644 <nl> index 0000000 . . 5e01853 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename2 . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + / / someexamples of 1 . 5 extensions <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; <nl> + <nl> + public class InputOuterTypeFilename2 { <nl> + <nl> + <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename3 . java <nl> new file mode 100644 <nl> index 0000000 . . 844c625 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename3 . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + / / someexamples of 1 . 5 extensions <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; <nl> + <nl> + class InputOuterTypeFilename3 { <nl> + <nl> + <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename5 . java <nl> new file mode 100644 <nl> index 0000000 . . 2b15f81 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename5 . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + / / someexamples of 1 . 5 extensions <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; <nl> + <nl> + class InputOuterTypeFilenameCheckWrongName2 { <nl> + <nl> + <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilenameIllegalTokens . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilenameIllegalTokens . java <nl> new file mode 100644 <nl> index 0000000 . . 76bc704 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilenameIllegalTokens . java <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; <nl> + <nl> + public class InputOuterTypeFilenameIllegalTokens <nl> + { <nl> + public void methodWithPreviouslyIllegalTokens ( ) <nl> + { <nl> + int i = 0 ; <nl> + switch ( i ) <nl> + { <nl> + default : <nl> + i - - ; <nl> + i + + ; <nl> + break ; <nl> + } <nl> + } <nl> + <nl> + public native void nativeMethod ( ) ; <nl> + }
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java <nl> index 9af22a9 . . 2cdac81 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java <nl> @ @ - 137 , 17 + 137 , 17 @ @ public class CommitValidationTest { <nl> } <nl> <nl> private static List < RevCommit > getCommitsToCheck ( ) throws Exception { <nl> - Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ; <nl> - <nl> - RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; <nl> List < RevCommit > commits ; <nl> - if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { <nl> - commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; <nl> - commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; <nl> - } <nl> - else { <nl> - commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; <nl> - commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; <nl> + try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { <nl> + RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; <nl> + if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { <nl> + commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; <nl> + commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; <nl> + } <nl> + else { <nl> + commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; <nl> + commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; <nl> + } <nl> } <nl> return commits ; <nl> } <nl> @ @ - 165 , 12 + 165 , 10 @ @ public class CommitValidationTest { <nl> <nl> private static RevCommitsPair resolveRevCommitsPair ( Repository repo ) { <nl> RevCommitsPair revCommitIteratorPair ; <nl> - try { <nl> + <nl> + try ( RevWalk revWalk = new RevWalk ( repo ) ) { <nl> Iterator < RevCommit > first ; <nl> Iterator < RevCommit > second ; <nl> - <nl> - RevWalk revWalk = new RevWalk ( repo ) ; <nl> - <nl> ObjectId headId = repo . resolve ( Constants . HEAD ) ; <nl> RevCommit headCommit = revWalk . parseCommit ( headId ) ; <nl> <nl> @ @ - 178 , 11 + 176 , 15 @ @ public class CommitValidationTest { <nl> RevCommit firstParent = headCommit . getParent ( 0 ) ; <nl> RevCommit secondParent = headCommit . getParent ( 1 ) ; <nl> <nl> - first = new Git ( repo ) . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; <nl> - second = new Git ( repo ) . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; <nl> + try ( Git git = new Git ( repo ) ) { <nl> + first = git . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; <nl> + second = git . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; <nl> + } <nl> } <nl> else { <nl> - first = new Git ( repo ) . log ( ) . call ( ) . iterator ( ) ; <nl> + try ( Git git = new Git ( repo ) ) { <nl> + first = git . log ( ) . call ( ) . iterator ( ) ; <nl> + } <nl> second = Collections . emptyIterator ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java 
 index 6dd3dae . . 45c8c7f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java 
 @ @ - 35 , 12 + 35 , 18 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 public class OuterTypeFilenameCheckTest extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 - return super . getPath ( " checks " + File . separator + filename ) ; 
 + return super . getPath ( " checks " + File . separator 
 + + " misc " + File . separator 
 + + " outertypefilename " + File . separator 
 + + filename ) ; 
 } 
 
 @ Override 
 protected String getNonCompilablePath ( String filename ) throws IOException { 
 - return super . getNonCompilablePath ( " checks " + File . separator + filename ) ; 
 + return super . getNonCompilablePath ( " checks " + File . separator 
 + + " misc " + File . separator 
 + + " outertypefilename " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 @ @ - 61 , 7 + 67 , 7 @ @ public class OuterTypeFilenameCheckTest extends BaseCheckTestSupport { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( OuterTypeFilenameCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputIllegalTokens . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputOuterTypeFilenameIllegalTokens . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 69 , 7 + 75 , 7 @ @ public class OuterTypeFilenameCheckTest extends BaseCheckTestSupport { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( OuterTypeFilenameCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " Input15Extensions . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputOuterTypeFilename15Extensions . java " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / package - info . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / package - info . java 
 new file mode 100644 
 index 0000000 . . 391a1a4 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / package - info . java 
 @ @ - 0 , 0 + 1 , 3 @ @ 
 + @ Deprecated 
 + package com . puppycrawl . tools . checkstyle . checks ; 
 + 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / package - info . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / package - info . java 
 deleted file mode 100644 
 index 391a1a4 . . 0000000 
 - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / package - info . java 
 + + + / dev / null 
 @ @ - 1 , 3 + 0 , 0 @ @ 
 - @ Deprecated 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename1 . java 
 deleted file mode 100644 
 index 1d3cf3e . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename1 . java 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - / / someexamples of 1 . 5 extensions 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - public class InputOuterTypeFilename1 { 
 - 
 - public class UnicClassName { 
 - 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename2 . java 
 deleted file mode 100644 
 index 9a513ea . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename2 . java 
 + + + / dev / null 
 @ @ - 1 , 7 + 0 , 0 @ @ 
 - / / someexamples of 1 . 5 extensions 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - public class InputOuterTypeFilename2 { 
 - 
 - 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename3 . java 
 deleted file mode 100644 
 index 10bedc3 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename3 . java 
 + + + / dev / null 
 @ @ - 1 , 7 + 0 , 0 @ @ 
 - / / someexamples of 1 . 5 extensions 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - class InputOuterTypeFilename3 { 
 - 
 - 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename5 . java 
 deleted file mode 100644 
 index 001f6b7 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputOuterTypeFilename5 . java 
 + + + / dev / null 
 @ @ - 1 , 7 + 0 , 0 @ @ 
 - / / someexamples of 1 . 5 extensions 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - class InputOuterTypeFilenameCheckWrongName2 { 
 - 
 - 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename1 . java 
 new file mode 100644 
 index 0000000 . . c6ff0b9 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename1 . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + / / someexamples of 1 . 5 extensions 
 + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; 
 + 
 + public class InputOuterTypeFilename1 { 
 + 
 + public class UnicClassName { 
 + 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename15Extensions . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename15Extensions . java 
 new file mode 100644 
 index 0000000 . . 7f367f2 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename15Extensions . java 
 @ @ - 0 , 0 + 1 , 36 @ @ 
 + / / someexamples of 1 . 5 extensions 
 + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; 
 + 
 + @ interface MyAnnotation1 { 
 + String name ( ) ; 
 + int version ( ) ; 
 + } 
 + 
 + @ MyAnnotation1 ( name = " ABC " , version = 1 ) 
 + public class InputOuterTypeFilename15Extensions 
 + { 
 + 
 + } 
 + 
 + enum Enum1 
 + { 
 + A , B , C ; 
 + Enum1 ( ) { } 
 + public String toString ( ) { 
 + return " " ; / / some custom implementation 
 + } 
 + } 
 + 
 + interface TestRequireThisEnum 
 + { 
 + enum DAY _ OF _ WEEK 
 + { 
 + SUNDAY , 
 + MONDAY , 
 + TUESDAY , 
 + WEDNESDAY , 
 + THURSDAY , 
 + FRIDAY , 
 + SATURDAY 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename2 . java 
 new file mode 100644 
 index 0000000 . . 5e01853 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename2 . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + / / someexamples of 1 . 5 extensions 
 + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; 
 + 
 + public class InputOuterTypeFilename2 { 
 + 
 + 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename3 . java 
 new file mode 100644 
 index 0000000 . . 844c625 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename3 . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + / / someexamples of 1 . 5 extensions 
 + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; 
 + 
 + class InputOuterTypeFilename3 { 
 + 
 + 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename5 . java 
 new file mode 100644 
 index 0000000 . . 2b15f81 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilename5 . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + / / someexamples of 1 . 5 extensions 
 + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; 
 + 
 + class InputOuterTypeFilenameCheckWrongName2 { 
 + 
 + 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilenameIllegalTokens . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilenameIllegalTokens . java 
 new file mode 100644 
 index 0000000 . . 76bc704 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / outertypefilename / InputOuterTypeFilenameIllegalTokens . java 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . misc . outertypefilename ; 
 + 
 + public class InputOuterTypeFilenameIllegalTokens 
 + { 
 + public void methodWithPreviouslyIllegalTokens ( ) 
 + { 
 + int i = 0 ; 
 + switch ( i ) 
 + { 
 + default : 
 + i - - ; 
 + i + + ; 
 + break ; 
 + } 
 + } 
 + 
 + public native void nativeMethod ( ) ; 
 + }

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java 
 index 9af22a9 . . 2cdac81 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java 
 @ @ - 137 , 17 + 137 , 17 @ @ public class CommitValidationTest { 
 } 
 
 private static List < RevCommit > getCommitsToCheck ( ) throws Exception { 
 - Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ; 
 - 
 - RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; 
 List < RevCommit > commits ; 
 - if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { 
 - commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; 
 - commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; 
 - } 
 - else { 
 - commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; 
 - commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; 
 + try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { 
 + RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; 
 + if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { 
 + commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; 
 + commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; 
 + } 
 + else { 
 + commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; 
 + commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; 
 + } 
 } 
 return commits ; 
 } 
 @ @ - 165 , 12 + 165 , 10 @ @ public class CommitValidationTest { 
 
 private static RevCommitsPair resolveRevCommitsPair ( Repository repo ) { 
 RevCommitsPair revCommitIteratorPair ; 
 - try { 
 + 
 + try ( RevWalk revWalk = new RevWalk ( repo ) ) { 
 Iterator < RevCommit > first ; 
 Iterator < RevCommit > second ; 
 - 
 - RevWalk revWalk = new RevWalk ( repo ) ; 
 - 
 ObjectId headId = repo . resolve ( Constants . HEAD ) ; 
 RevCommit headCommit = revWalk . parseCommit ( headId ) ; 
 
 @ @ - 178 , 11 + 176 , 15 @ @ public class CommitValidationTest { 
 RevCommit firstParent = headCommit . getParent ( 0 ) ; 
 RevCommit secondParent = headCommit . getParent ( 1 ) ; 
 
 - first = new Git ( repo ) . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; 
 - second = new Git ( repo ) . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; 
 + try ( Git git = new Git ( repo ) ) { 
 + first = git . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; 
 + second = git . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; 
 + } 
 } 
 else { 
 - first = new Git ( repo ) . log ( ) . call ( ) . iterator ( ) ; 
 + try ( Git git = new Git ( repo ) ) { 
 + first = git . log ( ) . call ( ) . iterator ( ) ; 
 + } 
 second = Collections . emptyIterator ( ) ; 
 } 

