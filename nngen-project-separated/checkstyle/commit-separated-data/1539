BLEU SCORE: 0.06285596338261261

TEST MSG: Issue # 46 : switch case clauses should not have too many lines .
GENERATED MSG: Issue # 1290 : SuppressWarningHolder coverage has been increased

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> index 4d00a4d . . 5b87dbf 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> @ @ - 167 , 14 + 167 , 7 @ @ public class XMLLogger <nl> sb . append ( " & quot ; " ) ; <nl> break ; <nl> case ' & ' : <nl> - final int nextSemi = value . indexOf ( ' ; ' , i ) ; <nl> - if ( nextSemi < 0 <nl> - | | ! isReference ( value . substring ( i , nextSemi + 1 ) ) ) { <nl> - sb . append ( " & amp ; " ) ; <nl> - } <nl> - else { <nl> - sb . append ( ' & ' ) ; <nl> - } <nl> + sb . append ( encodeAmpersend ( value , i ) ) ; <nl> break ; <nl> default : <nl> sb . append ( chr ) ; <nl> @ @ - 223 , 4 + 216 , 23 @ @ public class XMLLogger <nl> } <nl> return reference ; <nl> } <nl> + <nl> + / * * <nl> + * Encodes ampersand in value at required position . <nl> + * @ param value string value , which contains ampersand <nl> + * @ param ampPosition position of ampersand in value <nl> + * @ return encoded ampersand which should be used in xml <nl> + * / <nl> + private static String encodeAmpersend ( String value , int ampPosition ) { <nl> + final int nextSemi = value . indexOf ( ' ; ' , ampPosition ) ; <nl> + String result ; <nl> + if ( nextSemi < 0 <nl> + | | ! isReference ( value . substring ( ampPosition , nextSemi + 1 ) ) ) { <nl> + result = " & amp ; " ; <nl> + } <nl> + else { <nl> + result = " & " ; <nl> + } <nl> + return result ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 89d13fd . . f04e800 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 307 , 34 + 307 , 11 @ @ public class SuppressWarningsHolder <nl> * / <nl> private static DetailAST getAnnotationTarget ( DetailAST ast ) { <nl> DetailAST targetAST = null ; <nl> - DetailAST parentAST = ast . getParent ( ) ; <nl> + final DetailAST parentAST = ast . getParent ( ) ; <nl> switch ( parentAST . getType ( ) ) { <nl> case TokenTypes . MODIFIERS : <nl> case TokenTypes . ANNOTATIONS : <nl> - parentAST = parentAST . getParent ( ) ; <nl> - switch ( parentAST . getType ( ) ) { <nl> - case TokenTypes . ANNOTATION _ DEF : <nl> - case TokenTypes . PACKAGE _ DEF : <nl> - case TokenTypes . CLASS _ DEF : <nl> - case TokenTypes . INTERFACE _ DEF : <nl> - case TokenTypes . ENUM _ DEF : <nl> - case TokenTypes . ENUM _ CONSTANT _ DEF : <nl> - case TokenTypes . CTOR _ DEF : <nl> - case TokenTypes . METHOD _ DEF : <nl> - case TokenTypes . PARAMETER _ DEF : <nl> - case TokenTypes . VARIABLE _ DEF : <nl> - case TokenTypes . ANNOTATION _ FIELD _ DEF : <nl> - case TokenTypes . TYPE : <nl> - case TokenTypes . LITERAL _ NEW : <nl> - case TokenTypes . LITERAL _ THROWS : <nl> - case TokenTypes . TYPE _ ARGUMENT : <nl> - case TokenTypes . IMPLEMENTS _ CLAUSE : <nl> - case TokenTypes . DOT : <nl> - targetAST = parentAST ; <nl> - break ; <nl> - default : <nl> - / / it ' s possible case , but shouldn ' t be processed here <nl> - } <nl> + targetAST = getAcceptableParent ( parentAST ) ; <nl> break ; <nl> default : <nl> / / unexpected container type <nl> @ @ - 344 , 6 + 321 , 44 @ @ public class SuppressWarningsHolder <nl> } <nl> <nl> / * * <nl> + * Returns parent of given ast if parent has one of the following types : <nl> + * ANNOTATION _ DEF , PACKAGE _ DEF , CLASS _ DEF , ENUM _ DEF , ENUM _ CONSTANT _ DEF , CTOR _ DEF , <nl> + * METHOD _ DEF , PARAMETER _ DEF , VARIABLE _ DEF , ANNOTATION _ FIELD _ DEF , TYPE , LITERAL _ NEW , <nl> + * LITERAL _ THROWS , TYPE _ ARGUMENT , IMPLEMENTS _ CLAUSE , DOT . <nl> + * @ param child an ast <nl> + * @ return returns ast - parent of given <nl> + * / <nl> + private static DetailAST getAcceptableParent ( DetailAST child ) { <nl> + DetailAST result ; <nl> + final DetailAST parent = child . getParent ( ) ; <nl> + switch ( parent . getType ( ) ) { <nl> + case TokenTypes . ANNOTATION _ DEF : <nl> + case TokenTypes . PACKAGE _ DEF : <nl> + case TokenTypes . CLASS _ DEF : <nl> + case TokenTypes . INTERFACE _ DEF : <nl> + case TokenTypes . ENUM _ DEF : <nl> + case TokenTypes . ENUM _ CONSTANT _ DEF : <nl> + case TokenTypes . CTOR _ DEF : <nl> + case TokenTypes . METHOD _ DEF : <nl> + case TokenTypes . PARAMETER _ DEF : <nl> + case TokenTypes . VARIABLE _ DEF : <nl> + case TokenTypes . ANNOTATION _ FIELD _ DEF : <nl> + case TokenTypes . TYPE : <nl> + case TokenTypes . LITERAL _ NEW : <nl> + case TokenTypes . LITERAL _ THROWS : <nl> + case TokenTypes . TYPE _ ARGUMENT : <nl> + case TokenTypes . IMPLEMENTS _ CLAUSE : <nl> + case TokenTypes . DOT : <nl> + result = parent ; <nl> + break ; <nl> + default : <nl> + / / it ' s possible case , but shouldn ' t be processed here <nl> + result = null ; <nl> + } <nl> + return result ; <nl> + } <nl> + <nl> + / * * <nl> * Returns the n ' th child of an AST node . <nl> * @ param ast the AST node to get the child of <nl> * @ param index the index of the child to get <nl> @ @ - 418 , 15 + 433 , 7 @ @ public class SuppressWarningsHolder <nl> return ImmutableList . of ( getStringExpr ( ast ) ) ; <nl> <nl> case TokenTypes . ANNOTATION _ ARRAY _ INIT : <nl> - final List < String > valueList = Lists . newLinkedList ( ) ; <nl> - DetailAST childAST = ast . getFirstChild ( ) ; <nl> - while ( childAST ! = null ) { <nl> - if ( childAST . getType ( ) = = TokenTypes . EXPR ) { <nl> - valueList . add ( getStringExpr ( childAST ) ) ; <nl> - } <nl> - childAST = childAST . getNextSibling ( ) ; <nl> - } <nl> - return valueList ; <nl> + return findAllExpressionsInChildren ( ast ) ; <nl> <nl> default : <nl> throw new IllegalArgumentException ( <nl> @ @ - 434 , 6 + 441 , 23 @ @ public class SuppressWarningsHolder <nl> } <nl> } <nl> <nl> + / * * <nl> + * Method looks at children and returns list of expressions in strings . <nl> + * @ param parent ast , that contains children <nl> + * @ return list of expressions in strings <nl> + * / <nl> + private static List < String > findAllExpressionsInChildren ( DetailAST parent ) { <nl> + final List < String > valueList = Lists . newLinkedList ( ) ; <nl> + DetailAST childAST = parent . getFirstChild ( ) ; <nl> + while ( childAST ! = null ) { <nl> + if ( childAST . getType ( ) = = TokenTypes . EXPR ) { <nl> + valueList . add ( getStringExpr ( childAST ) ) ; <nl> + } <nl> + childAST = childAST . getNextSibling ( ) ; <nl> + } <nl> + return valueList ; <nl> + } <nl> + <nl> / * * Records a particular suppression for a region of a file . * / <nl> private static class Entry { <nl> / * * The source name of the suppressed check . * /
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java <nl> index b63af44 . . 47f57e7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java <nl> @ @ - 326 , 13 + 326 , 14 @ @ public class JavadocTypeCheck <nl> if ( tag . isParamTag ( ) ) { <nl> <nl> final Matcher matcher = pattern . matcher ( tag . getFirstArg ( ) ) ; <nl> - matcher . find ( ) ; <nl> - final String typeParamName = matcher . group ( 1 ) . trim ( ) ; <nl> - if ( ! typeParamNames . contains ( typeParamName ) ) { <nl> - log ( tag . getLineNo ( ) , tag . getColumnNo ( ) , <nl> - UNUSED _ TAG , <nl> - JavadocTagInfo . PARAM . getText ( ) , <nl> - OPEN _ ANGLE _ BRACKET + typeParamName + CLOSE _ ANGLE _ BRACKET ) ; <nl> + if ( matcher . find ( ) ) { <nl> + final String typeParamName = matcher . group ( 1 ) . trim ( ) ; <nl> + if ( ! typeParamNames . contains ( typeParamName ) ) { <nl> + log ( tag . getLineNo ( ) , tag . getColumnNo ( ) , <nl> + UNUSED _ TAG , <nl> + JavadocTagInfo . PARAM . getText ( ) , <nl> + OPEN _ ANGLE _ BRACKET + typeParamName + CLOSE _ ANGLE _ BRACKET ) ; <nl> + } <nl> } <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java <nl> index f3e16df . . bd50286 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java <nl> @ @ - 37 , 10 + 37 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . Scope ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> / * * <nl> - * To change this generated comment edit the template variable " typecomment " : <nl> - * Window > Preferences > Java > Templates . <nl> - * To enable and disable the creation of type comments go to <nl> - * Window > Preferences > Java > Code Generation . <nl> * @ author Oliver . Burn <nl> * / <nl> public class JavadocTypeCheckTest extends BaseCheckTestSupport { <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java <nl> index d9afbed . . f36a8bd 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java <nl> @ @ - 56 , 3 + 56 , 6 @ @ public class InputTypeParamsTags < A , B1 , C456 extends Comparable > <nl> { <nl> } <nl> } <nl> + <nl> + / * * @ param x * / <nl> + class Test { }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 index 4d00a4d . . 5b87dbf 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 @ @ - 167 , 14 + 167 , 7 @ @ public class XMLLogger 
 sb . append ( " & quot ; " ) ; 
 break ; 
 case ' & ' : 
 - final int nextSemi = value . indexOf ( ' ; ' , i ) ; 
 - if ( nextSemi < 0 
 - | | ! isReference ( value . substring ( i , nextSemi + 1 ) ) ) { 
 - sb . append ( " & amp ; " ) ; 
 - } 
 - else { 
 - sb . append ( ' & ' ) ; 
 - } 
 + sb . append ( encodeAmpersend ( value , i ) ) ; 
 break ; 
 default : 
 sb . append ( chr ) ; 
 @ @ - 223 , 4 + 216 , 23 @ @ public class XMLLogger 
 } 
 return reference ; 
 } 
 + 
 + / * * 
 + * Encodes ampersand in value at required position . 
 + * @ param value string value , which contains ampersand 
 + * @ param ampPosition position of ampersand in value 
 + * @ return encoded ampersand which should be used in xml 
 + * / 
 + private static String encodeAmpersend ( String value , int ampPosition ) { 
 + final int nextSemi = value . indexOf ( ' ; ' , ampPosition ) ; 
 + String result ; 
 + if ( nextSemi < 0 
 + | | ! isReference ( value . substring ( ampPosition , nextSemi + 1 ) ) ) { 
 + result = " & amp ; " ; 
 + } 
 + else { 
 + result = " & " ; 
 + } 
 + return result ; 
 + } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 89d13fd . . f04e800 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 307 , 34 + 307 , 11 @ @ public class SuppressWarningsHolder 
 * / 
 private static DetailAST getAnnotationTarget ( DetailAST ast ) { 
 DetailAST targetAST = null ; 
 - DetailAST parentAST = ast . getParent ( ) ; 
 + final DetailAST parentAST = ast . getParent ( ) ; 
 switch ( parentAST . getType ( ) ) { 
 case TokenTypes . MODIFIERS : 
 case TokenTypes . ANNOTATIONS : 
 - parentAST = parentAST . getParent ( ) ; 
 - switch ( parentAST . getType ( ) ) { 
 - case TokenTypes . ANNOTATION _ DEF : 
 - case TokenTypes . PACKAGE _ DEF : 
 - case TokenTypes . CLASS _ DEF : 
 - case TokenTypes . INTERFACE _ DEF : 
 - case TokenTypes . ENUM _ DEF : 
 - case TokenTypes . ENUM _ CONSTANT _ DEF : 
 - case TokenTypes . CTOR _ DEF : 
 - case TokenTypes . METHOD _ DEF : 
 - case TokenTypes . PARAMETER _ DEF : 
 - case TokenTypes . VARIABLE _ DEF : 
 - case TokenTypes . ANNOTATION _ FIELD _ DEF : 
 - case TokenTypes . TYPE : 
 - case TokenTypes . LITERAL _ NEW : 
 - case TokenTypes . LITERAL _ THROWS : 
 - case TokenTypes . TYPE _ ARGUMENT : 
 - case TokenTypes . IMPLEMENTS _ CLAUSE : 
 - case TokenTypes . DOT : 
 - targetAST = parentAST ; 
 - break ; 
 - default : 
 - / / it ' s possible case , but shouldn ' t be processed here 
 - } 
 + targetAST = getAcceptableParent ( parentAST ) ; 
 break ; 
 default : 
 / / unexpected container type 
 @ @ - 344 , 6 + 321 , 44 @ @ public class SuppressWarningsHolder 
 } 
 
 / * * 
 + * Returns parent of given ast if parent has one of the following types : 
 + * ANNOTATION _ DEF , PACKAGE _ DEF , CLASS _ DEF , ENUM _ DEF , ENUM _ CONSTANT _ DEF , CTOR _ DEF , 
 + * METHOD _ DEF , PARAMETER _ DEF , VARIABLE _ DEF , ANNOTATION _ FIELD _ DEF , TYPE , LITERAL _ NEW , 
 + * LITERAL _ THROWS , TYPE _ ARGUMENT , IMPLEMENTS _ CLAUSE , DOT . 
 + * @ param child an ast 
 + * @ return returns ast - parent of given 
 + * / 
 + private static DetailAST getAcceptableParent ( DetailAST child ) { 
 + DetailAST result ; 
 + final DetailAST parent = child . getParent ( ) ; 
 + switch ( parent . getType ( ) ) { 
 + case TokenTypes . ANNOTATION _ DEF : 
 + case TokenTypes . PACKAGE _ DEF : 
 + case TokenTypes . CLASS _ DEF : 
 + case TokenTypes . INTERFACE _ DEF : 
 + case TokenTypes . ENUM _ DEF : 
 + case TokenTypes . ENUM _ CONSTANT _ DEF : 
 + case TokenTypes . CTOR _ DEF : 
 + case TokenTypes . METHOD _ DEF : 
 + case TokenTypes . PARAMETER _ DEF : 
 + case TokenTypes . VARIABLE _ DEF : 
 + case TokenTypes . ANNOTATION _ FIELD _ DEF : 
 + case TokenTypes . TYPE : 
 + case TokenTypes . LITERAL _ NEW : 
 + case TokenTypes . LITERAL _ THROWS : 
 + case TokenTypes . TYPE _ ARGUMENT : 
 + case TokenTypes . IMPLEMENTS _ CLAUSE : 
 + case TokenTypes . DOT : 
 + result = parent ; 
 + break ; 
 + default : 
 + / / it ' s possible case , but shouldn ' t be processed here 
 + result = null ; 
 + } 
 + return result ; 
 + } 
 + 
 + / * * 
 * Returns the n ' th child of an AST node . 
 * @ param ast the AST node to get the child of 
 * @ param index the index of the child to get 
 @ @ - 418 , 15 + 433 , 7 @ @ public class SuppressWarningsHolder 
 return ImmutableList . of ( getStringExpr ( ast ) ) ; 
 
 case TokenTypes . ANNOTATION _ ARRAY _ INIT : 
 - final List < String > valueList = Lists . newLinkedList ( ) ; 
 - DetailAST childAST = ast . getFirstChild ( ) ; 
 - while ( childAST ! = null ) { 
 - if ( childAST . getType ( ) = = TokenTypes . EXPR ) { 
 - valueList . add ( getStringExpr ( childAST ) ) ; 
 - } 
 - childAST = childAST . getNextSibling ( ) ; 
 - } 
 - return valueList ; 
 + return findAllExpressionsInChildren ( ast ) ; 
 
 default : 
 throw new IllegalArgumentException ( 
 @ @ - 434 , 6 + 441 , 23 @ @ public class SuppressWarningsHolder 
 } 
 } 
 
 + / * * 
 + * Method looks at children and returns list of expressions in strings . 
 + * @ param parent ast , that contains children 
 + * @ return list of expressions in strings 
 + * / 
 + private static List < String > findAllExpressionsInChildren ( DetailAST parent ) { 
 + final List < String > valueList = Lists . newLinkedList ( ) ; 
 + DetailAST childAST = parent . getFirstChild ( ) ; 
 + while ( childAST ! = null ) { 
 + if ( childAST . getType ( ) = = TokenTypes . EXPR ) { 
 + valueList . add ( getStringExpr ( childAST ) ) ; 
 + } 
 + childAST = childAST . getNextSibling ( ) ; 
 + } 
 + return valueList ; 
 + } 
 + 
 / * * Records a particular suppression for a region of a file . * / 
 private static class Entry { 
 / * * The source name of the suppressed check . * /

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java 
 index b63af44 . . 47f57e7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheck . java 
 @ @ - 326 , 13 + 326 , 14 @ @ public class JavadocTypeCheck 
 if ( tag . isParamTag ( ) ) { 
 
 final Matcher matcher = pattern . matcher ( tag . getFirstArg ( ) ) ; 
 - matcher . find ( ) ; 
 - final String typeParamName = matcher . group ( 1 ) . trim ( ) ; 
 - if ( ! typeParamNames . contains ( typeParamName ) ) { 
 - log ( tag . getLineNo ( ) , tag . getColumnNo ( ) , 
 - UNUSED _ TAG , 
 - JavadocTagInfo . PARAM . getText ( ) , 
 - OPEN _ ANGLE _ BRACKET + typeParamName + CLOSE _ ANGLE _ BRACKET ) ; 
 + if ( matcher . find ( ) ) { 
 + final String typeParamName = matcher . group ( 1 ) . trim ( ) ; 
 + if ( ! typeParamNames . contains ( typeParamName ) ) { 
 + log ( tag . getLineNo ( ) , tag . getColumnNo ( ) , 
 + UNUSED _ TAG , 
 + JavadocTagInfo . PARAM . getText ( ) , 
 + OPEN _ ANGLE _ BRACKET + typeParamName + CLOSE _ ANGLE _ BRACKET ) ; 
 + } 
 } 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java 
 index f3e16df . . bd50286 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java 
 @ @ - 37 , 10 + 37 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . Scope ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 / * * 
 - * To change this generated comment edit the template variable " typecomment " : 
 - * Window > Preferences > Java > Templates . 
 - * To enable and disable the creation of type comments go to 
 - * Window > Preferences > Java > Code Generation . 
 * @ author Oliver . Burn 
 * / 
 public class JavadocTypeCheckTest extends BaseCheckTestSupport { 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java 
 index d9afbed . . f36a8bd 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java 
 @ @ - 56 , 3 + 56 , 6 @ @ public class InputTypeParamsTags < A , B1 , C456 extends Comparable > 
 { 
 } 
 } 
 + 
 + / * * @ param x * / 
 + class Test { }
