BLEU SCORE: 0.31239399369202553

TEST MSG: config : dump guava to 23 . 1 - jre
GENERATED MSG: config : bump guava to 23 . 0

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index ba2924e . . aedbadc 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 271 , 7 + 271 , 7 @ @ <nl> < dependency > <nl> < groupId > com . google . guava < / groupId > <nl> < artifactId > guava < / artifactId > <nl> - < version > 23 . 0 < / version > <nl> + < version > 23 . 1 - jre < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupId > org . apache . ant < / groupId >
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 24a0850 . . 2b88ede 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 31 , 24 + 31 , 10 @ @ <nl> < property name = " severity " value = " ignore " / > <nl> < property name = " acceptOnMatch " value = " false " / > <nl> < / module > <nl> - < module name = " SuppressionCommentFilter " > <nl> - < ! - - <nl> - Use suppressions . xml for suppressions , this is only example . <nl> - checkFormat will prevent suppression comments from being valid . <nl> - - - > <nl> - < property name = " checkFormat " value = " IGNORETHIS " / > <nl> - < property name = " offCommentFormat " value = " CSOFF \ : . * " / > <nl> - < property name = " onCommentFormat " value = " CSON \ : . * " / > <nl> - < / module > <nl> < module name = " SuppressionFilter " > <nl> < property name = " file " value = " $ { checkstyle . suppressions . file } " / > <nl> < / module > <nl> < module name = " SuppressWarningsFilter " / > <nl> - < module name = " SuppressWithNearbyCommentFilter " > <nl> - < property name = " commentFormat " value = " - @ cs \ [ ( \ w { 8 , } ( \ | \ w { 8 , } ) * ) \ ] \ w [ \ ( \ ) \ - \ . \ ' \ ` \ , \ : \ ; \ w ] { 10 , } " / > <nl> - < property name = " checkFormat " value = " $ 1 " / > <nl> - < property name = " influenceFormat " value = " 3 " / > <nl> - < / module > <nl> <nl> < ! - - Headers - - > <nl> < module name = " Header " > <nl> @ @ - 298 , 6 + 284 , 22 @ @ <nl> < module name = " UnnecessaryParentheses " / > <nl> < module name = " VariableDeclarationUsageDistance " / > <nl> <nl> + < ! - - Filters - - > <nl> + < module name = " SuppressionCommentFilter " > <nl> + < ! - - <nl> + Use suppressions . xml for suppressions , this is only example . <nl> + checkFormat will prevent suppression comments from being valid . <nl> + - - > <nl> + < property name = " checkFormat " value = " IGNORETHIS " / > <nl> + < property name = " offCommentFormat " value = " CSOFF \ : . * " / > <nl> + < property name = " onCommentFormat " value = " CSON \ : . * " / > <nl> + < / module > <nl> + < module name = " SuppressWithNearbyCommentFilter " > <nl> + < property name = " commentFormat " value = " - @ cs \ [ ( \ w { 8 , } ( \ | \ w { 8 , } ) * ) \ ] \ w [ \ ( \ ) \ - \ . \ ' \ ` \ , \ : \ ; \ w ] { 10 , } " / > <nl> + < property name = " checkFormat " value = " $ 1 " / > <nl> + < property name = " influenceFormat " value = " 3 " / > <nl> + < / module > <nl> + <nl> < ! - - Imports - - > <nl> < module name = " AvoidStarImport " / > <nl> < module name = " AvoidStaticImport " / > <nl> diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index 6b1e719 . . 1cfed6c 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 14 , 13 + 14 , 13 @ @ <nl> < module name = " SuppressionFilter " > <nl> < property name = " file " value = " $ { project . basedir } / config / sevntu _ suppressions . xml " / > <nl> < / module > <nl> - < module name = " SuppressWithNearbyCommentFilter " > <nl> - < property name = " commentFormat " value = " - @ cs \ [ ( \ w { 8 , } ) \ ] \ w [ \ ( \ ) \ - \ . \ ' \ ` \ , \ : \ ; \ w ] { 10 , } " / > <nl> - < property name = " checkFormat " value = " $ 1 " / > <nl> - < property name = " influenceFormat " value = " 3 " / > <nl> - < / module > <nl> <nl> < module name = " TreeWalker " > <nl> + < module name = " SuppressWithNearbyCommentFilter " > <nl> + < property name = " commentFormat " value = " - @ cs \ [ ( \ w { 8 , } ) \ ] \ w [ \ ( \ ) \ - \ . \ ' \ ` \ , \ : \ ; \ w ] { 10 , } " / > <nl> + < property name = " checkFormat " value = " $ 1 " / > <nl> + < property name = " influenceFormat " value = " 3 " / > <nl> + < / module > <nl> < module name = " FileContentsHolder " / > <nl> < module name = " StaticMethodCandidate " / > <nl> < module name = " UselessSingleCatchCheck " / > <nl> diff - - git a / config / import - control . xml b / config / import - control . xml <nl> index e34ebd8 . . 6ff5c7f 100644 <nl> - - - a / config / import - control . xml <nl> + + + b / config / import - control . xml <nl> @ @ - 142 , 6 + 142 , 8 @ @ <nl> <nl> < subpackage name = " filters " > <nl> < allow class = " java . lang . ref . WeakReference " local - only = " true " / > <nl> + < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent " local - only = " true " / > <nl> + < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerFilter " local - only = " true " / > <nl> < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . checks \ . [ ^ . ] + " regex = " true " / > <nl> < allow pkg = " com . puppycrawl . tools . checkstyle . utils " / > <nl> < / subpackage > <nl> diff - - git a / pom . xml b / pom . xml <nl> index 9367f4d . . 97dc8d2 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 517 , 6 + 517 , 9 @ @ <nl> < id > sevntu - checkstyle - check < / id > <nl> < phase > verify < / phase > <nl> < configuration > <nl> + < ! - - skipped until sevntu - checks to 8 . 1 upgrade <nl> + see https : / / github . com / checkstyle / checkstyle / pull / 4755 - - > <nl> + < skip > true < / skip > <nl> < configLocation > $ { project . basedir } / config / checkstyle _ sevntu _ checks . xml < / configLocation > <nl> < failOnViolation > true < / failOnViolation > <nl> < includeResources > false < / includeResources > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> index 7fef3ba . . a805de2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> @ @ - 29 , 6 + 29 , 8 @ @ import java . util . HashSet ; <nl> import java . util . Locale ; <nl> import java . util . Map . Entry ; <nl> import java . util . Set ; <nl> + import java . util . SortedSet ; <nl> + import java . util . TreeSet ; <nl> <nl> import antlr . CommonHiddenStreamToken ; <nl> import antlr . RecognitionException ; <nl> @ @ - 40 , 6 + 42 , 7 @ @ import com . google . common . collect . HashMultimap ; <nl> import com . google . common . collect . Multimap ; <nl> import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; <nl> import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; <nl> + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . Context ; <nl> @ @ - 47 , 6 + 50 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . ExternalResourceHolder ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaLexer ; <nl> import com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaRecognizer ; <nl> @ @ - 59 , 6 + 63 , 9 @ @ import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; <nl> * <nl> * @ author Oliver Burn <nl> * / <nl> + / / - @ cs [ ClassFanOutComplexity ] To resolve issue 4714 , new classes were imported . Number of <nl> + / / classes current class relies on currently is 27 , which is above threshold 25 . <nl> + / / see https : / / github . com / checkstyle / checkstyle / issues / 4714 . <nl> public final class TreeWalker extends AbstractFileSetCheck implements ExternalResourceHolder { <nl> <nl> / * * Default distance between tab stops . * / <nl> @ @ - 78 , 6 + 85 , 12 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe <nl> / * * Registered comment checks . * / <nl> private final Set < AbstractCheck > commentChecks = new HashSet < > ( ) ; <nl> <nl> + / * * The ast filters . * / <nl> + private final Set < TreeWalkerFilter > filters = new HashSet < > ( ) ; <nl> + <nl> + / * * The sorted set of messages . * / <nl> + private final SortedSet < LocalizedMessage > messages = new TreeSet < > ( ) ; <nl> + <nl> / * * The distance between tab stops . * / <nl> private int tabWidth = DEFAULT _ TAB _ WIDTH ; <nl> <nl> @ @ - 144 , 23 + 157 , 35 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe <nl> childContext = checkContext ; <nl> } <nl> <nl> + / * * <nl> + * { @ inheritDoc } Creates child module . <nl> + * @ noinspection ChainOfInstanceofChecks <nl> + * / <nl> @ Override <nl> public void setupChild ( Configuration childConf ) <nl> throws CheckstyleException { <nl> final String name = childConf . getName ( ) ; <nl> final Object module = moduleFactory . createModule ( name ) ; <nl> - if ( ! ( module instanceof AbstractCheck ) ) { <nl> + if ( module instanceof AutomaticBean ) { <nl> + final AutomaticBean bean = ( AutomaticBean ) module ; <nl> + bean . contextualize ( childContext ) ; <nl> + bean . configure ( childConf ) ; <nl> + } <nl> + if ( module instanceof AbstractCheck ) { <nl> + final AbstractCheck check = ( AbstractCheck ) module ; <nl> + check . init ( ) ; <nl> + registerCheck ( check ) ; <nl> + } <nl> + else if ( module instanceof TreeWalkerFilter ) { <nl> + final TreeWalkerFilter filter = ( TreeWalkerFilter ) module ; <nl> + filters . add ( filter ) ; <nl> + } <nl> + else { <nl> throw new CheckstyleException ( <nl> " TreeWalker is not allowed as a parent of " + name <nl> + " Please review ' Parent Module ' section for this Check in web " <nl> + " documentation if Check is standard . " ) ; <nl> } <nl> - final AbstractCheck check = ( AbstractCheck ) module ; <nl> - check . contextualize ( childContext ) ; <nl> - check . configure ( childConf ) ; <nl> - check . init ( ) ; <nl> - <nl> - registerCheck ( check ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 169 , 6 + 194 , 7 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe <nl> if ( CommonUtils . matchesFileExtension ( file , getFileExtensions ( ) ) ) { <nl> final String msg = " % s occurred during the analysis of file % s . " ; <nl> final String fileName = file . getPath ( ) ; <nl> + <nl> try { <nl> if ( ! ordinaryChecks . isEmpty ( ) <nl> | | ! commentChecks . isEmpty ( ) ) { <nl> @ @ - 183 , 6 + 209 , 10 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe <nl> <nl> walk ( astWithComments , contents , AstState . WITH _ COMMENTS ) ; <nl> } <nl> + final SortedSet < LocalizedMessage > filteredMessages = <nl> + getFilteredMessages ( fileName , contents ) ; <nl> + addMessages ( filteredMessages ) ; <nl> + messages . clear ( ) ; <nl> } <nl> } <nl> catch ( final TokenStreamRecognitionException tre ) { <nl> @ @ - 199 , 6 + 229 , 28 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe <nl> } <nl> <nl> / * * <nl> + * Returns filtered set of { @ link LocalizedMessage } . <nl> + * @ param fileName path to the file <nl> + * @ param fileContents the contents of the file <nl> + * @ return filtered set of messages <nl> + * / <nl> + private SortedSet < LocalizedMessage > getFilteredMessages ( String fileName , <nl> + FileContents fileContents ) { <nl> + final SortedSet < LocalizedMessage > result = new TreeSet < > ( messages ) ; <nl> + for ( LocalizedMessage element : messages ) { <nl> + final TreeWalkerAuditEvent event = <nl> + new TreeWalkerAuditEvent ( fileContents , fileName , element ) ; <nl> + for ( TreeWalkerFilter filter : filters ) { <nl> + if ( ! filter . accept ( event ) ) { <nl> + result . remove ( element ) ; <nl> + break ; <nl> + } <nl> + } <nl> + } <nl> + return result ; <nl> + } <nl> + <nl> + / * * <nl> * Register a check for a given configuration . <nl> * @ param check the check to register <nl> * @ throws CheckstyleException if an error occurs <nl> @ @ - 350 , 7 + 402 , 7 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe <nl> <nl> for ( AbstractCheck check : checks ) { <nl> check . finishTree ( rootAST ) ; <nl> - addMessages ( check . getMessages ( ) ) ; <nl> + messages . addAll ( check . getMessages ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerAuditEvent . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerAuditEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 00beac9 <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerAuditEvent . java <nl> @ @ - 0 , 0 + 1 , 118 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2017 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> + <nl> + / * * <nl> + * Raw { @ code TreeWalker } event for audit . <nl> + * <nl> + * @ author Timur Tibeyev <nl> + * / <nl> + public class TreeWalkerAuditEvent { <nl> + / * * Filename event associated with . * * / <nl> + private final String fileName ; <nl> + / * * The file contents . * / <nl> + private final FileContents fileContents ; <nl> + / * * Message associated with the event . * * / <nl> + private final LocalizedMessage localizedMessage ; <nl> + <nl> + / * * <nl> + * Creates a new { @ code TreeWalkerAuditEvent } instance . <nl> + * <nl> + * @ param fileContents contents of the file associated with the event <nl> + * @ param fileName file associated with the event <nl> + * @ param localizedMessage the actual message <nl> + * / <nl> + public TreeWalkerAuditEvent ( FileContents fileContents , String fileName , <nl> + LocalizedMessage localizedMessage ) { <nl> + this . fileContents = fileContents ; <nl> + this . fileName = fileName ; <nl> + this . localizedMessage = localizedMessage ; <nl> + } <nl> + <nl> + / * * <nl> + * Returns name of file being audited . <nl> + * @ return the file name currently being audited or null if there is <nl> + * no relation to a file . <nl> + * / <nl> + public String getFileName ( ) { <nl> + return fileName ; <nl> + } <nl> + <nl> + / * * <nl> + * Returns contents of the file . <nl> + * @ return contents of the file . <nl> + * / <nl> + public FileContents getFileContents ( ) { <nl> + return fileContents ; <nl> + } <nl> + <nl> + / * * <nl> + * Gets the localized message . <nl> + * @ return the localized message <nl> + * / <nl> + public LocalizedMessage getLocalizedMessage ( ) { <nl> + return localizedMessage ; <nl> + } <nl> + <nl> + / * * <nl> + * Return the line number on the source file where the event occurred . <nl> + * This may be 0 if there is no relation to a file content . <nl> + * @ return an integer representing the line number in the file source code . <nl> + * / <nl> + public int getLine ( ) { <nl> + return localizedMessage . getLineNo ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Return the message associated to the event . <nl> + * @ return the event message <nl> + * / <nl> + public String getMessage ( ) { <nl> + return localizedMessage . getMessage ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Gets the column associated with the message . <nl> + * @ return the column associated with the message <nl> + * / <nl> + public int getColumn ( ) { <nl> + return localizedMessage . getColumnNo ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Returns id of module . <nl> + * @ return the identifier of the module that generated the event . Can return <nl> + * null . <nl> + * / <nl> + public String getModuleId ( ) { <nl> + return localizedMessage . getModuleId ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Gets the name of the source for the message . <nl> + * @ return the name of the source for the message <nl> + * / <nl> + public String getSourceName ( ) { <nl> + return localizedMessage . getSourceName ( ) ; <nl> + } <nl> + } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerFilter . java <nl> new file mode 100644 <nl> index 0000000 . . 74ad7e7 <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerFilter . java <nl> @ @ - 0 , 0 + 1 , 35 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2017 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + / * * <nl> + * An interface for filtering { @ code TreeWalkerAuditEvent } . <nl> + * <nl> + * @ author Timur Tibeyev . <nl> + * / <nl> + @ FunctionalInterface <nl> + public interface TreeWalkerFilter { <nl> + / * * <nl> + * Determines whether or not a filtered { @ code TreeWalkerAuditEvent } is accepted . <nl> + * @ param treeWalkerAuditEvent the TreeWalkerAuditEvent to filter . <nl> + * @ return true if the event is accepted . <nl> + * / <nl> + boolean accept ( TreeWalkerAuditEvent treeWalkerAuditEvent ) ; <nl> + } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> index c6afdb5 . . c1fafdd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> @ @ - 28 , 12 + 28 , 11 @ @ import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> import java . util . regex . PatternSyntaxException ; <nl> <nl> - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . TreeWalkerFilter ; <nl> import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> - import com . puppycrawl . tools . checkstyle . api . Filter ; <nl> import com . puppycrawl . tools . checkstyle . api . TextBlock ; <nl> - import com . puppycrawl . tools . checkstyle . checks . FileContentsHolder ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> / * * <nl> @ @ - 72 , 7 + 71 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * / <nl> public class SuppressWithNearbyCommentFilter <nl> extends AutomaticBean <nl> - implements Filter { <nl> + implements TreeWalkerFilter { <nl> <nl> / * * Format to turns checkstyle reporting off . * / <nl> private static final String DEFAULT _ COMMENT _ FORMAT = <nl> @ @ - 183 , 13 + 182 , 13 @ @ public class SuppressWithNearbyCommentFilter <nl> } <nl> <nl> @ Override <nl> - public boolean accept ( AuditEvent event ) { <nl> + public boolean accept ( TreeWalkerAuditEvent event ) { <nl> boolean accepted = true ; <nl> <nl> if ( event . getLocalizedMessage ( ) ! = null ) { <nl> / / Lazy update . If the first event for the current file , update file <nl> / / contents and tag suppressions <nl> - final FileContents currentContents = FileContentsHolder . getCurrentFileContents ( ) ; <nl> + final FileContents currentContents = event . getFileContents ( ) ; <nl> <nl> if ( getFileContents ( ) ! = currentContents ) { <nl> setFileContents ( currentContents ) ; <nl> @ @ - 204 , 10 + 203 , 10 @ @ public class SuppressWithNearbyCommentFilter <nl> <nl> / * * <nl> * Whether current event matches any tag from { @ link # tags } . <nl> - * @ param event AuditEvent to test match on { @ link # tags } . <nl> + * @ param event TreeWalkerAuditEvent to test match on { @ link # tags } . <nl> * @ return true if event matches any tag from { @ link # tags } , false otherwise . <nl> * / <nl> - private boolean matchesTag ( AuditEvent event ) { <nl> + private boolean matchesTag ( TreeWalkerAuditEvent event ) { <nl> boolean result = false ; <nl> for ( final Tag tag : tags ) { <nl> if ( tag . isMatch ( event ) ) { <nl> @ @ - 383 , 10 + 382 , 10 @ @ public class SuppressWithNearbyCommentFilter <nl> / * * <nl> * Determines whether the source of an audit event <nl> * matches the text of this tag . <nl> - * @ param event the { @ code AuditEvent } to check . <nl> + * @ param event the { @ code TreeWalkerAuditEvent } to check . <nl> * @ return true if the source of event matches the text of this tag . <nl> * / <nl> - public boolean isMatch ( AuditEvent event ) { <nl> + public boolean isMatch ( TreeWalkerAuditEvent event ) { <nl> final int line = event . getLine ( ) ; <nl> boolean match = false ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> index e3d1710 . . dd8c7d7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> @ @ - 29 , 12 + 29 , 11 @ @ import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> import java . util . regex . PatternSyntaxException ; <nl> <nl> - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . TreeWalkerFilter ; <nl> import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> - import com . puppycrawl . tools . checkstyle . api . Filter ; <nl> import com . puppycrawl . tools . checkstyle . api . TextBlock ; <nl> - import com . puppycrawl . tools . checkstyle . checks . FileContentsHolder ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> / * * <nl> @ @ - 58 , 11 + 57 , 10 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * < / p > <nl> * @ author Mike McMahon <nl> * @ author Rick Giles <nl> - * @ see FileContentsHolder <nl> * / <nl> public class SuppressionCommentFilter <nl> extends AutomaticBean <nl> - implements Filter { <nl> + implements TreeWalkerFilter { <nl> <nl> / * * Turns checkstyle reporting off . * / <nl> private static final String DEFAULT _ OFF _ FORMAT = " CHECKSTYLE : OFF " ; <nl> @ @ - 172 , 13 + 170 , 13 @ @ public class SuppressionCommentFilter <nl> } <nl> <nl> @ Override <nl> - public boolean accept ( AuditEvent event ) { <nl> + public boolean accept ( TreeWalkerAuditEvent event ) { <nl> boolean accepted = true ; <nl> <nl> if ( event . getLocalizedMessage ( ) ! = null ) { <nl> / / Lazy update . If the first event for the current file , update file <nl> / / contents and tag suppressions <nl> - final FileContents currentContents = FileContentsHolder . getCurrentFileContents ( ) ; <nl> + final FileContents currentContents = event . getFileContents ( ) ; <nl> <nl> if ( getFileContents ( ) ! = currentContents ) { <nl> setFileContents ( currentContents ) ; <nl> @ @ - 193 , 10 + 191 , 10 @ @ public class SuppressionCommentFilter <nl> / * * <nl> * Finds the nearest comment text tag that matches an audit event . <nl> * The nearest tag is before the line and column of the event . <nl> - * @ param event the { @ code AuditEvent } to match . <nl> + * @ param event the { @ code TreeWalkerAuditEvent } to match . <nl> * @ return The { @ code Tag } nearest event . <nl> * / <nl> - private Tag findNearestMatch ( AuditEvent event ) { <nl> + private Tag findNearestMatch ( TreeWalkerAuditEvent event ) { <nl> Tag result = null ; <nl> for ( Tag tag : tags ) { <nl> if ( tag . getLine ( ) > event . getLine ( ) <nl> @ @ - 427 , 10 + 425 , 10 @ @ public class SuppressionCommentFilter <nl> / * * <nl> * Determines whether the source of an audit event <nl> * matches the text of this tag . <nl> - * @ param event the { @ code AuditEvent } to check . <nl> + * @ param event the { @ code TreeWalkerAuditEvent } to check . <nl> * @ return true if the source of event matches the text of this tag . <nl> * / <nl> - public boolean isMatch ( AuditEvent event ) { <nl> + public boolean isMatch ( TreeWalkerAuditEvent event ) { <nl> boolean match = false ; <nl> final Matcher tagMatcher = tagCheckRegexp . matcher ( event . getSourceName ( ) ) ; <nl> if ( tagMatcher . find ( ) ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> index deb0cc9 . . 992c4cb 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> @ @ - 47 , 6 + 47 , 7 @ @ import org . mockito . internal . util . reflection . Whitebox ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> + import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . Context ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> @ @ - 56 , 7 + 57 , 9 @ @ import com . puppycrawl . tools . checkstyle . checks . indentation . CommentsIndentationChe <nl> import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocPackageCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocParagraphCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; <nl> + import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . TypeNameCheck ; <nl> + import com . puppycrawl . tools . checkstyle . filters . SuppressionCommentFilter ; <nl> import com . puppycrawl . tools . checkstyle . internal . TestUtils ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> @ @ - 145 , 6 + 148 , 26 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testSetupChildExceptions ( ) { <nl> + final TreeWalker treeWalker = new TreeWalker ( ) ; <nl> + final PackageObjectFactory factory = new PackageObjectFactory ( <nl> + new HashSet < > ( ) , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> + treeWalker . setModuleFactory ( factory ) ; <nl> + <nl> + final Configuration config = new DefaultConfiguration ( " java . lang . String " ) ; <nl> + try { <nl> + treeWalker . setupChild ( config ) ; <nl> + fail ( " Exception is expected " ) ; <nl> + } <nl> + catch ( CheckstyleException ex ) { <nl> + assertEquals ( " Error message is not expected " , <nl> + " TreeWalker is not allowed as a parent of java . lang . String Please review " <nl> + + " ' Parent Module ' section for this Check in web documentation if " <nl> + + " Check is standard . " , ex . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> public void testSettersForParameters ( ) throws Exception { <nl> final TreeWalker treeWalker = new TreeWalker ( ) ; <nl> final DefaultConfiguration config = new DefaultConfiguration ( " default config " ) ; <nl> @ @ - 399 , 6 + 422 , 36 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testBehaviourWithChecksAndFilters ( ) throws Exception { <nl> + final DefaultConfiguration checkerConfig = <nl> + new DefaultConfiguration ( " configuration " ) ; <nl> + final DefaultConfiguration treeWalkerConfig = createCheckConfig ( TreeWalker . class ) ; <nl> + treeWalkerConfig . addChild ( createCheckConfig ( MemberNameCheck . class ) ) ; <nl> + final DefaultConfiguration filterConfig = <nl> + createCheckConfig ( SuppressionCommentFilter . class ) ; <nl> + filterConfig . addAttribute ( " checkCPP " , " false " ) ; <nl> + treeWalkerConfig . addChild ( filterConfig ) ; <nl> + checkerConfig . addChild ( treeWalkerConfig ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> + checker . configure ( checkerConfig ) ; <nl> + checker . addListener ( getBriefUtLogger ( ) ) ; <nl> + <nl> + final File file = new File ( getPath ( " InputTreeWalkerSuppressionCommentFilter . java " ) ) ; <nl> + <nl> + final String [ ] expected = { <nl> + " 9 : 17 : " + getCheckMessage ( MemberNameCheck . class , " name . invalidPattern " , " P " , <nl> + " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 4 : 17 : " + getCheckMessage ( MemberNameCheck . class , " name . invalidPattern " , " I " , <nl> + " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + } ; <nl> + <nl> + verify ( checker , <nl> + file . getPath ( ) , <nl> + expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testAppendHiddenBlockCommentNodes ( ) throws Exception { <nl> final DetailAST root = <nl> TestUtils . parseFile ( new File ( getPath ( " InputTreeWalkerHiddenComments . java " ) ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java <nl> index c2ce3c2 . . b63dd72 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . Checker ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> @ @ - 224 , 7 + 224 , 7 @ @ public class SuppressWithNearbyCommentFilterTest <nl> checksConfig . addChild ( createCheckConfig ( IllegalCatchCheck . class ) ) ; <nl> checkerConfig . addChild ( checksConfig ) ; <nl> if ( checkConfig ! = null ) { <nl> - checkerConfig . addChild ( checkConfig ) ; <nl> + checksConfig . addChild ( checkConfig ) ; <nl> } <nl> final Checker checker = new Checker ( ) ; <nl> final Locale locale = Locale . ROOT ; <nl> @ @ - 298 , 7 + 298 , 7 @ @ public class SuppressWithNearbyCommentFilterTest <nl> @ Test <nl> public void testAcceptNullLocalizedMessage ( ) { <nl> final SuppressWithNearbyCommentFilter filter = new SuppressWithNearbyCommentFilter ( ) ; <nl> - final AuditEvent auditEvent = new AuditEvent ( this ) ; <nl> + final TreeWalkerAuditEvent auditEvent = new TreeWalkerAuditEvent ( null , null , null ) ; <nl> assertTrue ( filter . accept ( auditEvent ) ) ; <nl> } <nl> <nl> @ @ - 350 , 22 + 350 , 23 @ @ public class SuppressWithNearbyCommentFilterTest <nl> public void testTagsAreClearedEachRun ( ) { <nl> final SuppressWithNearbyCommentFilter suppressionCommentFilter = <nl> new SuppressWithNearbyCommentFilter ( ) ; <nl> - final AuditEvent dummyEvent = new AuditEvent ( new Object ( ) , " filename " , <nl> - new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; <nl> - <nl> final FileContentsHolder fileContentsHolder = new FileContentsHolder ( ) ; <nl> final FileContents contents = <nl> new FileContents ( " filename " , " / / SUPPRESS CHECKSTYLE ignore " , " line2 " ) ; <nl> contents . reportSingleLineComment ( 1 , 0 ) ; <nl> fileContentsHolder . setFileContents ( contents ) ; <nl> fileContentsHolder . beginTree ( null ) ; <nl> + final TreeWalkerAuditEvent dummyEvent = new TreeWalkerAuditEvent ( contents , " filename " , <nl> + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; <nl> suppressionCommentFilter . accept ( dummyEvent ) ; <nl> final FileContents contents2 = <nl> new FileContents ( " filename2 " , " some line " , " / / SUPPRESS CHECKSTYLE ignore " ) ; <nl> contents2 . reportSingleLineComment ( 2 , 0 ) ; <nl> fileContentsHolder . setFileContents ( contents2 ) ; <nl> fileContentsHolder . beginTree ( null ) ; <nl> - suppressionCommentFilter . accept ( dummyEvent ) ; <nl> + final TreeWalkerAuditEvent dummyEvent2 = new TreeWalkerAuditEvent ( contents2 , " filename " , <nl> + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; <nl> + suppressionCommentFilter . accept ( dummyEvent2 ) ; <nl> final List < SuppressionCommentFilter . Tag > tags = <nl> Whitebox . getInternalState ( suppressionCommentFilter , " tags " ) ; <nl> assertEquals ( 1 , tags . size ( ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java <nl> index bd1a9de . . 062f870 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . Checker ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> @ @ - 225 , 7 + 225 , 7 @ @ public class SuppressionCommentFilterTest <nl> checksConfig . addChild ( createCheckConfig ( IllegalCatchCheck . class ) ) ; <nl> checkerConfig . addChild ( checksConfig ) ; <nl> if ( checkConfig ! = null ) { <nl> - checkerConfig . addChild ( checkConfig ) ; <nl> + checksConfig . addChild ( checkConfig ) ; <nl> } <nl> final Checker checker = new Checker ( ) ; <nl> final Locale locale = Locale . ROOT ; <nl> @ @ - 297 , 8 + 297 , 9 @ @ public class SuppressionCommentFilterTest <nl> @ Test <nl> public void testAcceptNullLocalizedMessage ( ) { <nl> final SuppressionCommentFilter filter = new SuppressionCommentFilter ( ) ; <nl> - final AuditEvent auditEvent = new AuditEvent ( this ) ; <nl> + final TreeWalkerAuditEvent auditEvent = new TreeWalkerAuditEvent ( null , null , null ) ; <nl> Assert . assertTrue ( filter . accept ( auditEvent ) ) ; <nl> + Assert . assertNull ( auditEvent . getFileName ( ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 327 , 15 + 328 , 14 @ @ public class SuppressionCommentFilterTest <nl> @ Test <nl> public void testFindNearestMatchDontAllowSameColumn ( ) { <nl> final SuppressionCommentFilter suppressionCommentFilter = new SuppressionCommentFilter ( ) ; <nl> - final AuditEvent dummyEvent = new AuditEvent ( new Object ( ) , " filename " , <nl> - new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; <nl> - <nl> final FileContentsHolder fileContentsHolder = new FileContentsHolder ( ) ; <nl> final FileContents contents = <nl> new FileContents ( " filename " , " / / CHECKSTYLE : OFF : ConstantNameCheck " , " line2 " ) ; <nl> contents . reportSingleLineComment ( 1 , 0 ) ; <nl> fileContentsHolder . setFileContents ( contents ) ; <nl> fileContentsHolder . beginTree ( null ) ; <nl> + final TreeWalkerAuditEvent dummyEvent = new TreeWalkerAuditEvent ( contents , " filename " , <nl> + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; <nl> final boolean result = suppressionCommentFilter . accept ( dummyEvent ) ; <nl> assertFalse ( result ) ; <nl> } <nl> @ @ - 343 , 22 + 343 , 23 @ @ public class SuppressionCommentFilterTest <nl> @ Test <nl> public void testTagsAreClearedEachRun ( ) { <nl> final SuppressionCommentFilter suppressionCommentFilter = new SuppressionCommentFilter ( ) ; <nl> - final AuditEvent dummyEvent = new AuditEvent ( new Object ( ) , " filename " , <nl> - new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; <nl> - <nl> final FileContentsHolder fileContentsHolder = new FileContentsHolder ( ) ; <nl> final FileContents contents = <nl> new FileContents ( " filename " , " / / CHECKSTYLE : OFF " , " line2 " ) ; <nl> contents . reportSingleLineComment ( 1 , 0 ) ; <nl> fileContentsHolder . setFileContents ( contents ) ; <nl> fileContentsHolder . beginTree ( null ) ; <nl> + final TreeWalkerAuditEvent dummyEvent = new TreeWalkerAuditEvent ( contents , " filename " , <nl> + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; <nl> suppressionCommentFilter . accept ( dummyEvent ) ; <nl> final FileContents contents2 = <nl> new FileContents ( " filename2 " , " some line " , " / / CHECKSTYLE : OFF " ) ; <nl> contents2 . reportSingleLineComment ( 2 , 0 ) ; <nl> fileContentsHolder . setFileContents ( contents2 ) ; <nl> fileContentsHolder . beginTree ( null ) ; <nl> - suppressionCommentFilter . accept ( dummyEvent ) ; <nl> + final TreeWalkerAuditEvent dummyEvent2 = new TreeWalkerAuditEvent ( contents2 , " filename " , <nl> + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; <nl> + suppressionCommentFilter . accept ( dummyEvent2 ) ; <nl> final List < SuppressionCommentFilter . Tag > tags = <nl> Whitebox . getInternalState ( suppressionCommentFilter , " tags " ) ; <nl> assertEquals ( 1 , tags . size ( ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java <nl> index c4b3597 . . 9f95b45 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java <nl> @ @ - 83 , 8 + 83 , 6 @ @ public class XdocsPagesTest { <nl> " name = \ " Translation \ " " , <nl> " name = \ " SeverityMatchFilter \ " " , <nl> " name = \ " SuppressionFilter \ " " , <nl> - " name = \ " SuppressionCommentFilter \ " " , <nl> - " name = \ " SuppressWithNearbyCommentFilter \ " " , <nl> " name = \ " SuppressWarningsFilter \ " " , <nl> " name = \ " BeforeExecutionExclusionFileFilter \ " " , <nl> " name = \ " RegexpHeader \ " " , <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTreeWalkerSuppressionCommentFilter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTreeWalkerSuppressionCommentFilter . java <nl> new file mode 100644 <nl> index 0000000 . . 917b76e <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTreeWalkerSuppressionCommentFilter . java <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + public class InputTreeWalkerSuppressionCommentFilter { <nl> + private int I ; <nl> + / * CHECKSTYLE : OFF * / <nl> + private int J ; <nl> + / * CHECKSTYLE : ON * / <nl> + / / CHECKSTYLE : OFF <nl> + private int P ; <nl> + / / CHECKSTYLE : ON <nl> + } <nl> diff - - git a / src / xdocs / config _ filters . xml b / src / xdocs / config _ filters . xml <nl> index d55ffd7 . . ad42cf0 100644 <nl> - - - a / src / xdocs / config _ filters . xml <nl> + + + b / src / xdocs / config _ filters . xml <nl> @ @ - 110 , 11 + 110 , 8 @ @ <nl> file is edited . <nl> < / p > <nl> < p > <nl> - Usage : This filter only works in conjunction with a < code > FileContentsHolder < / code > , since that check makes <nl> - the suppression comments in the Java files available . A configuration that includes this filter must <nl> - configure < code > FileContentsHolder < / code > as a <nl> - child module of < code > TreeWalker < / code > . Note that the suppression comment should be put <nl> - before the violation . You can use more than one suppression comment each on separate line . <nl> + Note that the suppression comment should be put before the violation . You can use more <nl> + than one suppression comment each on separate line . <nl> < / p > <nl> < / subsection > <nl> < subsection name = " Properties " > <nl> @ @ - 176 , 22 + 173 , 12 @ @ <nl> < / subsection > <nl> < subsection name = " Examples " > <nl> < p > <nl> - Make sure that comments are available to the filter by enabling FileContentsHolder : <nl> - < / p > <nl> - < source > <nl> - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> - . . . <nl> - & lt ; module name = & quot ; FileContentsHolder & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> - < p > <nl> To configure a filter to suppress audit events between a comment <nl> containing < code > CHECKSTYLE : OFF < / code > and a comment containing <nl> < code > CHECKSTYLE : ON < / code > : <nl> < / p > <nl> < source > <nl> - & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> . . . <nl> & lt ; module name = & quot ; SuppressionCommentFilter & quot ; / & gt ; <nl> . . . <nl> @ @ - 409 , 7 + 396 , 7 @ @ public class UserService { <nl> < / subsection > <nl> <nl> < subsection name = " Parent Module " > <nl> - < p > < a href = " config . html # Checker " > Checker < / a > < / p > <nl> + < p > < a href = " config . html # TreeWalker " > TreeWalker < / a > < / p > <nl> < / subsection > <nl> < / section > <nl> <nl> @ @ - 768 , 12 + 755 , 6 @ @ public static void foo ( ) { <nl> single comments . This requires fewer lines to mark a region , and <nl> may be aesthetically preferable in some contexts . <nl> < / p > <nl> - < p > <nl> - Usage : This filter only works in conjunction with a < code > FileContentsHolder < / code > , since that check makes <nl> - the suppression comments in the Java files available . A configuration that includes this filter must <nl> - configure < code > FileContentsHolder < / code > as a <nl> - child module of < code > TreeWalker < / code > . <nl> - < / p > <nl> < / subsection > <nl> < subsection name = " Properties " > <nl> < table > <nl> @ @ - 831 , 16 + 812 , 6 @ @ public static void foo ( ) { <nl> < / subsection > <nl> < subsection name = " Examples " > <nl> < p > <nl> - To configure the check that makes comments available to the filter : <nl> - < / p > <nl> - < source > <nl> - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> - . . . <nl> - & lt ; module name = & quot ; FileContentsHolder & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> - < p > <nl> To configure a filter to suppress audit events for < i > check < / i > <nl> on any line with a comment < code > SUPPRESS CHECKSTYLE < i > check < / i > < / code > : <nl> < / p > <nl> @ @ - 1012 , 7 + 983 , 7 @ @ public class UserService { <nl> < / subsection > <nl> <nl> < subsection name = " Parent Module " > <nl> - < p > < a href = " config . html # Checker " > Checker < / a > < / p > <nl> + < p > < a href = " config . html # TreeWalker " > TreeWalker < / a > < / p > <nl> < / subsection > <nl> < / section > <nl> < / body > <nl> diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml <nl> index 2ebc6af . . 10e5ec3 100644 <nl> - - - a / src / xdocs / config _ misc . xml <nl> + + + b / src / xdocs / config _ misc . xml <nl> @ @ - 858 , 10 + 858 , 8 @ @ String unitAbbrev = " \ u03bc \ u03bc \ u03bc " ; <nl> < subsection name = " Examples " > <nl> < p > <nl> This check should not be used by itself , as it does no reporting . <nl> - It is to be used in conjunction with other checks like <nl> - < a href = " config _ filters . html # SuppressionCommentFilter " > SuppressionCommentFilter < / a > <nl> - and <nl> - < a href = " config _ filters . html # SuppressWithNearbyCommentFilter " > SuppressWithNearbyCommentFilter < / a > . <nl> + It is to be used in conjunction with other checks . <nl> + No checks use < code > FileContentsHolder < / code > currently . <nl> < / p > <nl> < / subsection > <nl>

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index ba2924e . . aedbadc 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 271 , 7 + 271 , 7 @ @ 
 < dependency > 
 < groupId > com . google . guava < / groupId > 
 < artifactId > guava < / artifactId > 
 - < version > 23 . 0 < / version > 
 + < version > 23 . 1 - jre < / version > 
 < / dependency > 
 < dependency > 
 < groupId > org . apache . ant < / groupId >

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 24a0850 . . 2b88ede 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 31 , 24 + 31 , 10 @ @ 
 < property name = " severity " value = " ignore " / > 
 < property name = " acceptOnMatch " value = " false " / > 
 < / module > 
 - < module name = " SuppressionCommentFilter " > 
 - < ! - - 
 - Use suppressions . xml for suppressions , this is only example . 
 - checkFormat will prevent suppression comments from being valid . 
 - - - > 
 - < property name = " checkFormat " value = " IGNORETHIS " / > 
 - < property name = " offCommentFormat " value = " CSOFF \ : . * " / > 
 - < property name = " onCommentFormat " value = " CSON \ : . * " / > 
 - < / module > 
 < module name = " SuppressionFilter " > 
 < property name = " file " value = " $ { checkstyle . suppressions . file } " / > 
 < / module > 
 < module name = " SuppressWarningsFilter " / > 
 - < module name = " SuppressWithNearbyCommentFilter " > 
 - < property name = " commentFormat " value = " - @ cs \ [ ( \ w { 8 , } ( \ | \ w { 8 , } ) * ) \ ] \ w [ \ ( \ ) \ - \ . \ ' \ ` \ , \ : \ ; \ w ] { 10 , } " / > 
 - < property name = " checkFormat " value = " $ 1 " / > 
 - < property name = " influenceFormat " value = " 3 " / > 
 - < / module > 
 
 < ! - - Headers - - > 
 < module name = " Header " > 
 @ @ - 298 , 6 + 284 , 22 @ @ 
 < module name = " UnnecessaryParentheses " / > 
 < module name = " VariableDeclarationUsageDistance " / > 
 
 + < ! - - Filters - - > 
 + < module name = " SuppressionCommentFilter " > 
 + < ! - - 
 + Use suppressions . xml for suppressions , this is only example . 
 + checkFormat will prevent suppression comments from being valid . 
 + - - > 
 + < property name = " checkFormat " value = " IGNORETHIS " / > 
 + < property name = " offCommentFormat " value = " CSOFF \ : . * " / > 
 + < property name = " onCommentFormat " value = " CSON \ : . * " / > 
 + < / module > 
 + < module name = " SuppressWithNearbyCommentFilter " > 
 + < property name = " commentFormat " value = " - @ cs \ [ ( \ w { 8 , } ( \ | \ w { 8 , } ) * ) \ ] \ w [ \ ( \ ) \ - \ . \ ' \ ` \ , \ : \ ; \ w ] { 10 , } " / > 
 + < property name = " checkFormat " value = " $ 1 " / > 
 + < property name = " influenceFormat " value = " 3 " / > 
 + < / module > 
 + 
 < ! - - Imports - - > 
 < module name = " AvoidStarImport " / > 
 < module name = " AvoidStaticImport " / > 
 diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index 6b1e719 . . 1cfed6c 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 14 , 13 + 14 , 13 @ @ 
 < module name = " SuppressionFilter " > 
 < property name = " file " value = " $ { project . basedir } / config / sevntu _ suppressions . xml " / > 
 < / module > 
 - < module name = " SuppressWithNearbyCommentFilter " > 
 - < property name = " commentFormat " value = " - @ cs \ [ ( \ w { 8 , } ) \ ] \ w [ \ ( \ ) \ - \ . \ ' \ ` \ , \ : \ ; \ w ] { 10 , } " / > 
 - < property name = " checkFormat " value = " $ 1 " / > 
 - < property name = " influenceFormat " value = " 3 " / > 
 - < / module > 
 
 < module name = " TreeWalker " > 
 + < module name = " SuppressWithNearbyCommentFilter " > 
 + < property name = " commentFormat " value = " - @ cs \ [ ( \ w { 8 , } ) \ ] \ w [ \ ( \ ) \ - \ . \ ' \ ` \ , \ : \ ; \ w ] { 10 , } " / > 
 + < property name = " checkFormat " value = " $ 1 " / > 
 + < property name = " influenceFormat " value = " 3 " / > 
 + < / module > 
 < module name = " FileContentsHolder " / > 
 < module name = " StaticMethodCandidate " / > 
 < module name = " UselessSingleCatchCheck " / > 
 diff - - git a / config / import - control . xml b / config / import - control . xml 
 index e34ebd8 . . 6ff5c7f 100644 
 - - - a / config / import - control . xml 
 + + + b / config / import - control . xml 
 @ @ - 142 , 6 + 142 , 8 @ @ 
 
 < subpackage name = " filters " > 
 < allow class = " java . lang . ref . WeakReference " local - only = " true " / > 
 + < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent " local - only = " true " / > 
 + < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerFilter " local - only = " true " / > 
 < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . checks \ . [ ^ . ] + " regex = " true " / > 
 < allow pkg = " com . puppycrawl . tools . checkstyle . utils " / > 
 < / subpackage > 
 diff - - git a / pom . xml b / pom . xml 
 index 9367f4d . . 97dc8d2 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 517 , 6 + 517 , 9 @ @ 
 < id > sevntu - checkstyle - check < / id > 
 < phase > verify < / phase > 
 < configuration > 
 + < ! - - skipped until sevntu - checks to 8 . 1 upgrade 
 + see https : / / github . com / checkstyle / checkstyle / pull / 4755 - - > 
 + < skip > true < / skip > 
 < configLocation > $ { project . basedir } / config / checkstyle _ sevntu _ checks . xml < / configLocation > 
 < failOnViolation > true < / failOnViolation > 
 < includeResources > false < / includeResources > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 index 7fef3ba . . a805de2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 @ @ - 29 , 6 + 29 , 8 @ @ import java . util . HashSet ; 
 import java . util . Locale ; 
 import java . util . Map . Entry ; 
 import java . util . Set ; 
 + import java . util . SortedSet ; 
 + import java . util . TreeSet ; 
 
 import antlr . CommonHiddenStreamToken ; 
 import antlr . RecognitionException ; 
 @ @ - 40 , 6 + 42 , 7 @ @ import com . google . common . collect . HashMultimap ; 
 import com . google . common . collect . Multimap ; 
 import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; 
 import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; 
 + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . Context ; 
 @ @ - 47 , 6 + 50 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . ExternalResourceHolder ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 import com . puppycrawl . tools . checkstyle . api . FileText ; 
 + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaLexer ; 
 import com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaRecognizer ; 
 @ @ - 59 , 6 + 63 , 9 @ @ import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; 
 * 
 * @ author Oliver Burn 
 * / 
 + / / - @ cs [ ClassFanOutComplexity ] To resolve issue 4714 , new classes were imported . Number of 
 + / / classes current class relies on currently is 27 , which is above threshold 25 . 
 + / / see https : / / github . com / checkstyle / checkstyle / issues / 4714 . 
 public final class TreeWalker extends AbstractFileSetCheck implements ExternalResourceHolder { 
 
 / * * Default distance between tab stops . * / 
 @ @ - 78 , 6 + 85 , 12 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe 
 / * * Registered comment checks . * / 
 private final Set < AbstractCheck > commentChecks = new HashSet < > ( ) ; 
 
 + / * * The ast filters . * / 
 + private final Set < TreeWalkerFilter > filters = new HashSet < > ( ) ; 
 + 
 + / * * The sorted set of messages . * / 
 + private final SortedSet < LocalizedMessage > messages = new TreeSet < > ( ) ; 
 + 
 / * * The distance between tab stops . * / 
 private int tabWidth = DEFAULT _ TAB _ WIDTH ; 
 
 @ @ - 144 , 23 + 157 , 35 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe 
 childContext = checkContext ; 
 } 
 
 + / * * 
 + * { @ inheritDoc } Creates child module . 
 + * @ noinspection ChainOfInstanceofChecks 
 + * / 
 @ Override 
 public void setupChild ( Configuration childConf ) 
 throws CheckstyleException { 
 final String name = childConf . getName ( ) ; 
 final Object module = moduleFactory . createModule ( name ) ; 
 - if ( ! ( module instanceof AbstractCheck ) ) { 
 + if ( module instanceof AutomaticBean ) { 
 + final AutomaticBean bean = ( AutomaticBean ) module ; 
 + bean . contextualize ( childContext ) ; 
 + bean . configure ( childConf ) ; 
 + } 
 + if ( module instanceof AbstractCheck ) { 
 + final AbstractCheck check = ( AbstractCheck ) module ; 
 + check . init ( ) ; 
 + registerCheck ( check ) ; 
 + } 
 + else if ( module instanceof TreeWalkerFilter ) { 
 + final TreeWalkerFilter filter = ( TreeWalkerFilter ) module ; 
 + filters . add ( filter ) ; 
 + } 
 + else { 
 throw new CheckstyleException ( 
 " TreeWalker is not allowed as a parent of " + name 
 + " Please review ' Parent Module ' section for this Check in web " 
 + " documentation if Check is standard . " ) ; 
 } 
 - final AbstractCheck check = ( AbstractCheck ) module ; 
 - check . contextualize ( childContext ) ; 
 - check . configure ( childConf ) ; 
 - check . init ( ) ; 
 - 
 - registerCheck ( check ) ; 
 } 
 
 @ Override 
 @ @ - 169 , 6 + 194 , 7 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe 
 if ( CommonUtils . matchesFileExtension ( file , getFileExtensions ( ) ) ) { 
 final String msg = " % s occurred during the analysis of file % s . " ; 
 final String fileName = file . getPath ( ) ; 
 + 
 try { 
 if ( ! ordinaryChecks . isEmpty ( ) 
 | | ! commentChecks . isEmpty ( ) ) { 
 @ @ - 183 , 6 + 209 , 10 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe 
 
 walk ( astWithComments , contents , AstState . WITH _ COMMENTS ) ; 
 } 
 + final SortedSet < LocalizedMessage > filteredMessages = 
 + getFilteredMessages ( fileName , contents ) ; 
 + addMessages ( filteredMessages ) ; 
 + messages . clear ( ) ; 
 } 
 } 
 catch ( final TokenStreamRecognitionException tre ) { 
 @ @ - 199 , 6 + 229 , 28 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe 
 } 
 
 / * * 
 + * Returns filtered set of { @ link LocalizedMessage } . 
 + * @ param fileName path to the file 
 + * @ param fileContents the contents of the file 
 + * @ return filtered set of messages 
 + * / 
 + private SortedSet < LocalizedMessage > getFilteredMessages ( String fileName , 
 + FileContents fileContents ) { 
 + final SortedSet < LocalizedMessage > result = new TreeSet < > ( messages ) ; 
 + for ( LocalizedMessage element : messages ) { 
 + final TreeWalkerAuditEvent event = 
 + new TreeWalkerAuditEvent ( fileContents , fileName , element ) ; 
 + for ( TreeWalkerFilter filter : filters ) { 
 + if ( ! filter . accept ( event ) ) { 
 + result . remove ( element ) ; 
 + break ; 
 + } 
 + } 
 + } 
 + return result ; 
 + } 
 + 
 + / * * 
 * Register a check for a given configuration . 
 * @ param check the check to register 
 * @ throws CheckstyleException if an error occurs 
 @ @ - 350 , 7 + 402 , 7 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe 
 
 for ( AbstractCheck check : checks ) { 
 check . finishTree ( rootAST ) ; 
 - addMessages ( check . getMessages ( ) ) ; 
 + messages . addAll ( check . getMessages ( ) ) ; 
 } 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerAuditEvent . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerAuditEvent . java 
 new file mode 100644 
 index 0000000 . . 00beac9 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerAuditEvent . java 
 @ @ - 0 , 0 + 1 , 118 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2017 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 + 
 + / * * 
 + * Raw { @ code TreeWalker } event for audit . 
 + * 
 + * @ author Timur Tibeyev 
 + * / 
 + public class TreeWalkerAuditEvent { 
 + / * * Filename event associated with . * * / 
 + private final String fileName ; 
 + / * * The file contents . * / 
 + private final FileContents fileContents ; 
 + / * * Message associated with the event . * * / 
 + private final LocalizedMessage localizedMessage ; 
 + 
 + / * * 
 + * Creates a new { @ code TreeWalkerAuditEvent } instance . 
 + * 
 + * @ param fileContents contents of the file associated with the event 
 + * @ param fileName file associated with the event 
 + * @ param localizedMessage the actual message 
 + * / 
 + public TreeWalkerAuditEvent ( FileContents fileContents , String fileName , 
 + LocalizedMessage localizedMessage ) { 
 + this . fileContents = fileContents ; 
 + this . fileName = fileName ; 
 + this . localizedMessage = localizedMessage ; 
 + } 
 + 
 + / * * 
 + * Returns name of file being audited . 
 + * @ return the file name currently being audited or null if there is 
 + * no relation to a file . 
 + * / 
 + public String getFileName ( ) { 
 + return fileName ; 
 + } 
 + 
 + / * * 
 + * Returns contents of the file . 
 + * @ return contents of the file . 
 + * / 
 + public FileContents getFileContents ( ) { 
 + return fileContents ; 
 + } 
 + 
 + / * * 
 + * Gets the localized message . 
 + * @ return the localized message 
 + * / 
 + public LocalizedMessage getLocalizedMessage ( ) { 
 + return localizedMessage ; 
 + } 
 + 
 + / * * 
 + * Return the line number on the source file where the event occurred . 
 + * This may be 0 if there is no relation to a file content . 
 + * @ return an integer representing the line number in the file source code . 
 + * / 
 + public int getLine ( ) { 
 + return localizedMessage . getLineNo ( ) ; 
 + } 
 + 
 + / * * 
 + * Return the message associated to the event . 
 + * @ return the event message 
 + * / 
 + public String getMessage ( ) { 
 + return localizedMessage . getMessage ( ) ; 
 + } 
 + 
 + / * * 
 + * Gets the column associated with the message . 
 + * @ return the column associated with the message 
 + * / 
 + public int getColumn ( ) { 
 + return localizedMessage . getColumnNo ( ) ; 
 + } 
 + 
 + / * * 
 + * Returns id of module . 
 + * @ return the identifier of the module that generated the event . Can return 
 + * null . 
 + * / 
 + public String getModuleId ( ) { 
 + return localizedMessage . getModuleId ( ) ; 
 + } 
 + 
 + / * * 
 + * Gets the name of the source for the message . 
 + * @ return the name of the source for the message 
 + * / 
 + public String getSourceName ( ) { 
 + return localizedMessage . getSourceName ( ) ; 
 + } 
 + } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerFilter . java 
 new file mode 100644 
 index 0000000 . . 74ad7e7 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalkerFilter . java 
 @ @ - 0 , 0 + 1 , 35 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2017 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + / * * 
 + * An interface for filtering { @ code TreeWalkerAuditEvent } . 
 + * 
 + * @ author Timur Tibeyev . 
 + * / 
 + @ FunctionalInterface 
 + public interface TreeWalkerFilter { 
 + / * * 
 + * Determines whether or not a filtered { @ code TreeWalkerAuditEvent } is accepted . 
 + * @ param treeWalkerAuditEvent the TreeWalkerAuditEvent to filter . 
 + * @ return true if the event is accepted . 
 + * / 
 + boolean accept ( TreeWalkerAuditEvent treeWalkerAuditEvent ) ; 
 + } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 index c6afdb5 . . c1fafdd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 @ @ - 28 , 12 + 28 , 11 @ @ import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 import java . util . regex . PatternSyntaxException ; 
 
 - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . TreeWalkerFilter ; 
 import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 - import com . puppycrawl . tools . checkstyle . api . Filter ; 
 import com . puppycrawl . tools . checkstyle . api . TextBlock ; 
 - import com . puppycrawl . tools . checkstyle . checks . FileContentsHolder ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 / * * 
 @ @ - 72 , 7 + 71 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * / 
 public class SuppressWithNearbyCommentFilter 
 extends AutomaticBean 
 - implements Filter { 
 + implements TreeWalkerFilter { 
 
 / * * Format to turns checkstyle reporting off . * / 
 private static final String DEFAULT _ COMMENT _ FORMAT = 
 @ @ - 183 , 13 + 182 , 13 @ @ public class SuppressWithNearbyCommentFilter 
 } 
 
 @ Override 
 - public boolean accept ( AuditEvent event ) { 
 + public boolean accept ( TreeWalkerAuditEvent event ) { 
 boolean accepted = true ; 
 
 if ( event . getLocalizedMessage ( ) ! = null ) { 
 / / Lazy update . If the first event for the current file , update file 
 / / contents and tag suppressions 
 - final FileContents currentContents = FileContentsHolder . getCurrentFileContents ( ) ; 
 + final FileContents currentContents = event . getFileContents ( ) ; 
 
 if ( getFileContents ( ) ! = currentContents ) { 
 setFileContents ( currentContents ) ; 
 @ @ - 204 , 10 + 203 , 10 @ @ public class SuppressWithNearbyCommentFilter 
 
 / * * 
 * Whether current event matches any tag from { @ link # tags } . 
 - * @ param event AuditEvent to test match on { @ link # tags } . 
 + * @ param event TreeWalkerAuditEvent to test match on { @ link # tags } . 
 * @ return true if event matches any tag from { @ link # tags } , false otherwise . 
 * / 
 - private boolean matchesTag ( AuditEvent event ) { 
 + private boolean matchesTag ( TreeWalkerAuditEvent event ) { 
 boolean result = false ; 
 for ( final Tag tag : tags ) { 
 if ( tag . isMatch ( event ) ) { 
 @ @ - 383 , 10 + 382 , 10 @ @ public class SuppressWithNearbyCommentFilter 
 / * * 
 * Determines whether the source of an audit event 
 * matches the text of this tag . 
 - * @ param event the { @ code AuditEvent } to check . 
 + * @ param event the { @ code TreeWalkerAuditEvent } to check . 
 * @ return true if the source of event matches the text of this tag . 
 * / 
 - public boolean isMatch ( AuditEvent event ) { 
 + public boolean isMatch ( TreeWalkerAuditEvent event ) { 
 final int line = event . getLine ( ) ; 
 boolean match = false ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 index e3d1710 . . dd8c7d7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 @ @ - 29 , 12 + 29 , 11 @ @ import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 import java . util . regex . PatternSyntaxException ; 
 
 - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . TreeWalkerFilter ; 
 import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 - import com . puppycrawl . tools . checkstyle . api . Filter ; 
 import com . puppycrawl . tools . checkstyle . api . TextBlock ; 
 - import com . puppycrawl . tools . checkstyle . checks . FileContentsHolder ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 / * * 
 @ @ - 58 , 11 + 57 , 10 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * < / p > 
 * @ author Mike McMahon 
 * @ author Rick Giles 
 - * @ see FileContentsHolder 
 * / 
 public class SuppressionCommentFilter 
 extends AutomaticBean 
 - implements Filter { 
 + implements TreeWalkerFilter { 
 
 / * * Turns checkstyle reporting off . * / 
 private static final String DEFAULT _ OFF _ FORMAT = " CHECKSTYLE : OFF " ; 
 @ @ - 172 , 13 + 170 , 13 @ @ public class SuppressionCommentFilter 
 } 
 
 @ Override 
 - public boolean accept ( AuditEvent event ) { 
 + public boolean accept ( TreeWalkerAuditEvent event ) { 
 boolean accepted = true ; 
 
 if ( event . getLocalizedMessage ( ) ! = null ) { 
 / / Lazy update . If the first event for the current file , update file 
 / / contents and tag suppressions 
 - final FileContents currentContents = FileContentsHolder . getCurrentFileContents ( ) ; 
 + final FileContents currentContents = event . getFileContents ( ) ; 
 
 if ( getFileContents ( ) ! = currentContents ) { 
 setFileContents ( currentContents ) ; 
 @ @ - 193 , 10 + 191 , 10 @ @ public class SuppressionCommentFilter 
 / * * 
 * Finds the nearest comment text tag that matches an audit event . 
 * The nearest tag is before the line and column of the event . 
 - * @ param event the { @ code AuditEvent } to match . 
 + * @ param event the { @ code TreeWalkerAuditEvent } to match . 
 * @ return The { @ code Tag } nearest event . 
 * / 
 - private Tag findNearestMatch ( AuditEvent event ) { 
 + private Tag findNearestMatch ( TreeWalkerAuditEvent event ) { 
 Tag result = null ; 
 for ( Tag tag : tags ) { 
 if ( tag . getLine ( ) > event . getLine ( ) 
 @ @ - 427 , 10 + 425 , 10 @ @ public class SuppressionCommentFilter 
 / * * 
 * Determines whether the source of an audit event 
 * matches the text of this tag . 
 - * @ param event the { @ code AuditEvent } to check . 
 + * @ param event the { @ code TreeWalkerAuditEvent } to check . 
 * @ return true if the source of event matches the text of this tag . 
 * / 
 - public boolean isMatch ( AuditEvent event ) { 
 + public boolean isMatch ( TreeWalkerAuditEvent event ) { 
 boolean match = false ; 
 final Matcher tagMatcher = tagCheckRegexp . matcher ( event . getSourceName ( ) ) ; 
 if ( tagMatcher . find ( ) ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 index deb0cc9 . . 992c4cb 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 @ @ - 47 , 6 + 47 , 7 @ @ import org . mockito . internal . util . reflection . Whitebox ; 
 
 import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 + import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . Context ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . FileText ; 
 @ @ - 56 , 7 + 57 , 9 @ @ import com . puppycrawl . tools . checkstyle . checks . indentation . CommentsIndentationChe 
 import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocPackageCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocParagraphCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; 
 + import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . TypeNameCheck ; 
 + import com . puppycrawl . tools . checkstyle . filters . SuppressionCommentFilter ; 
 import com . puppycrawl . tools . checkstyle . internal . TestUtils ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 @ @ - 145 , 6 + 148 , 26 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void testSetupChildExceptions ( ) { 
 + final TreeWalker treeWalker = new TreeWalker ( ) ; 
 + final PackageObjectFactory factory = new PackageObjectFactory ( 
 + new HashSet < > ( ) , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 + treeWalker . setModuleFactory ( factory ) ; 
 + 
 + final Configuration config = new DefaultConfiguration ( " java . lang . String " ) ; 
 + try { 
 + treeWalker . setupChild ( config ) ; 
 + fail ( " Exception is expected " ) ; 
 + } 
 + catch ( CheckstyleException ex ) { 
 + assertEquals ( " Error message is not expected " , 
 + " TreeWalker is not allowed as a parent of java . lang . String Please review " 
 + + " ' Parent Module ' section for this Check in web documentation if " 
 + + " Check is standard . " , ex . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 public void testSettersForParameters ( ) throws Exception { 
 final TreeWalker treeWalker = new TreeWalker ( ) ; 
 final DefaultConfiguration config = new DefaultConfiguration ( " default config " ) ; 
 @ @ - 399 , 6 + 422 , 36 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void testBehaviourWithChecksAndFilters ( ) throws Exception { 
 + final DefaultConfiguration checkerConfig = 
 + new DefaultConfiguration ( " configuration " ) ; 
 + final DefaultConfiguration treeWalkerConfig = createCheckConfig ( TreeWalker . class ) ; 
 + treeWalkerConfig . addChild ( createCheckConfig ( MemberNameCheck . class ) ) ; 
 + final DefaultConfiguration filterConfig = 
 + createCheckConfig ( SuppressionCommentFilter . class ) ; 
 + filterConfig . addAttribute ( " checkCPP " , " false " ) ; 
 + treeWalkerConfig . addChild ( filterConfig ) ; 
 + checkerConfig . addChild ( treeWalkerConfig ) ; 
 + final Checker checker = new Checker ( ) ; 
 + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 + checker . configure ( checkerConfig ) ; 
 + checker . addListener ( getBriefUtLogger ( ) ) ; 
 + 
 + final File file = new File ( getPath ( " InputTreeWalkerSuppressionCommentFilter . java " ) ) ; 
 + 
 + final String [ ] expected = { 
 + " 9 : 17 : " + getCheckMessage ( MemberNameCheck . class , " name . invalidPattern " , " P " , 
 + " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 4 : 17 : " + getCheckMessage ( MemberNameCheck . class , " name . invalidPattern " , " I " , 
 + " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + } ; 
 + 
 + verify ( checker , 
 + file . getPath ( ) , 
 + expected ) ; 
 + } 
 + 
 + @ Test 
 public void testAppendHiddenBlockCommentNodes ( ) throws Exception { 
 final DetailAST root = 
 TestUtils . parseFile ( new File ( getPath ( " InputTreeWalkerHiddenComments . java " ) ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java 
 index c2ce3c2 . . b63dd72 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java 
 @ @ - 35 , 7 + 35 , 7 @ @ import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; 
 import com . puppycrawl . tools . checkstyle . Checker ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 @ @ - 224 , 7 + 224 , 7 @ @ public class SuppressWithNearbyCommentFilterTest 
 checksConfig . addChild ( createCheckConfig ( IllegalCatchCheck . class ) ) ; 
 checkerConfig . addChild ( checksConfig ) ; 
 if ( checkConfig ! = null ) { 
 - checkerConfig . addChild ( checkConfig ) ; 
 + checksConfig . addChild ( checkConfig ) ; 
 } 
 final Checker checker = new Checker ( ) ; 
 final Locale locale = Locale . ROOT ; 
 @ @ - 298 , 7 + 298 , 7 @ @ public class SuppressWithNearbyCommentFilterTest 
 @ Test 
 public void testAcceptNullLocalizedMessage ( ) { 
 final SuppressWithNearbyCommentFilter filter = new SuppressWithNearbyCommentFilter ( ) ; 
 - final AuditEvent auditEvent = new AuditEvent ( this ) ; 
 + final TreeWalkerAuditEvent auditEvent = new TreeWalkerAuditEvent ( null , null , null ) ; 
 assertTrue ( filter . accept ( auditEvent ) ) ; 
 } 
 
 @ @ - 350 , 22 + 350 , 23 @ @ public class SuppressWithNearbyCommentFilterTest 
 public void testTagsAreClearedEachRun ( ) { 
 final SuppressWithNearbyCommentFilter suppressionCommentFilter = 
 new SuppressWithNearbyCommentFilter ( ) ; 
 - final AuditEvent dummyEvent = new AuditEvent ( new Object ( ) , " filename " , 
 - new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; 
 - 
 final FileContentsHolder fileContentsHolder = new FileContentsHolder ( ) ; 
 final FileContents contents = 
 new FileContents ( " filename " , " / / SUPPRESS CHECKSTYLE ignore " , " line2 " ) ; 
 contents . reportSingleLineComment ( 1 , 0 ) ; 
 fileContentsHolder . setFileContents ( contents ) ; 
 fileContentsHolder . beginTree ( null ) ; 
 + final TreeWalkerAuditEvent dummyEvent = new TreeWalkerAuditEvent ( contents , " filename " , 
 + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; 
 suppressionCommentFilter . accept ( dummyEvent ) ; 
 final FileContents contents2 = 
 new FileContents ( " filename2 " , " some line " , " / / SUPPRESS CHECKSTYLE ignore " ) ; 
 contents2 . reportSingleLineComment ( 2 , 0 ) ; 
 fileContentsHolder . setFileContents ( contents2 ) ; 
 fileContentsHolder . beginTree ( null ) ; 
 - suppressionCommentFilter . accept ( dummyEvent ) ; 
 + final TreeWalkerAuditEvent dummyEvent2 = new TreeWalkerAuditEvent ( contents2 , " filename " , 
 + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; 
 + suppressionCommentFilter . accept ( dummyEvent2 ) ; 
 final List < SuppressionCommentFilter . Tag > tags = 
 Whitebox . getInternalState ( suppressionCommentFilter , " tags " ) ; 
 assertEquals ( 1 , tags . size ( ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java 
 index bd1a9de . . 062f870 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java 
 @ @ - 36 , 7 + 36 , 7 @ @ import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; 
 import com . puppycrawl . tools . checkstyle . Checker ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 @ @ - 225 , 7 + 225 , 7 @ @ public class SuppressionCommentFilterTest 
 checksConfig . addChild ( createCheckConfig ( IllegalCatchCheck . class ) ) ; 
 checkerConfig . addChild ( checksConfig ) ; 
 if ( checkConfig ! = null ) { 
 - checkerConfig . addChild ( checkConfig ) ; 
 + checksConfig . addChild ( checkConfig ) ; 
 } 
 final Checker checker = new Checker ( ) ; 
 final Locale locale = Locale . ROOT ; 
 @ @ - 297 , 8 + 297 , 9 @ @ public class SuppressionCommentFilterTest 
 @ Test 
 public void testAcceptNullLocalizedMessage ( ) { 
 final SuppressionCommentFilter filter = new SuppressionCommentFilter ( ) ; 
 - final AuditEvent auditEvent = new AuditEvent ( this ) ; 
 + final TreeWalkerAuditEvent auditEvent = new TreeWalkerAuditEvent ( null , null , null ) ; 
 Assert . assertTrue ( filter . accept ( auditEvent ) ) ; 
 + Assert . assertNull ( auditEvent . getFileName ( ) ) ; 
 } 
 
 @ Test 
 @ @ - 327 , 15 + 328 , 14 @ @ public class SuppressionCommentFilterTest 
 @ Test 
 public void testFindNearestMatchDontAllowSameColumn ( ) { 
 final SuppressionCommentFilter suppressionCommentFilter = new SuppressionCommentFilter ( ) ; 
 - final AuditEvent dummyEvent = new AuditEvent ( new Object ( ) , " filename " , 
 - new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; 
 - 
 final FileContentsHolder fileContentsHolder = new FileContentsHolder ( ) ; 
 final FileContents contents = 
 new FileContents ( " filename " , " / / CHECKSTYLE : OFF : ConstantNameCheck " , " line2 " ) ; 
 contents . reportSingleLineComment ( 1 , 0 ) ; 
 fileContentsHolder . setFileContents ( contents ) ; 
 fileContentsHolder . beginTree ( null ) ; 
 + final TreeWalkerAuditEvent dummyEvent = new TreeWalkerAuditEvent ( contents , " filename " , 
 + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; 
 final boolean result = suppressionCommentFilter . accept ( dummyEvent ) ; 
 assertFalse ( result ) ; 
 } 
 @ @ - 343 , 22 + 343 , 23 @ @ public class SuppressionCommentFilterTest 
 @ Test 
 public void testTagsAreClearedEachRun ( ) { 
 final SuppressionCommentFilter suppressionCommentFilter = new SuppressionCommentFilter ( ) ; 
 - final AuditEvent dummyEvent = new AuditEvent ( new Object ( ) , " filename " , 
 - new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; 
 - 
 final FileContentsHolder fileContentsHolder = new FileContentsHolder ( ) ; 
 final FileContents contents = 
 new FileContents ( " filename " , " / / CHECKSTYLE : OFF " , " line2 " ) ; 
 contents . reportSingleLineComment ( 1 , 0 ) ; 
 fileContentsHolder . setFileContents ( contents ) ; 
 fileContentsHolder . beginTree ( null ) ; 
 + final TreeWalkerAuditEvent dummyEvent = new TreeWalkerAuditEvent ( contents , " filename " , 
 + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; 
 suppressionCommentFilter . accept ( dummyEvent ) ; 
 final FileContents contents2 = 
 new FileContents ( " filename2 " , " some line " , " / / CHECKSTYLE : OFF " ) ; 
 contents2 . reportSingleLineComment ( 2 , 0 ) ; 
 fileContentsHolder . setFileContents ( contents2 ) ; 
 fileContentsHolder . beginTree ( null ) ; 
 - suppressionCommentFilter . accept ( dummyEvent ) ; 
 + final TreeWalkerAuditEvent dummyEvent2 = new TreeWalkerAuditEvent ( contents2 , " filename " , 
 + new LocalizedMessage ( 1 , null , null , null , null , Object . class , null ) ) ; 
 + suppressionCommentFilter . accept ( dummyEvent2 ) ; 
 final List < SuppressionCommentFilter . Tag > tags = 
 Whitebox . getInternalState ( suppressionCommentFilter , " tags " ) ; 
 assertEquals ( 1 , tags . size ( ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java 
 index c4b3597 . . 9f95b45 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java 
 @ @ - 83 , 8 + 83 , 6 @ @ public class XdocsPagesTest { 
 " name = \ " Translation \ " " , 
 " name = \ " SeverityMatchFilter \ " " , 
 " name = \ " SuppressionFilter \ " " , 
 - " name = \ " SuppressionCommentFilter \ " " , 
 - " name = \ " SuppressWithNearbyCommentFilter \ " " , 
 " name = \ " SuppressWarningsFilter \ " " , 
 " name = \ " BeforeExecutionExclusionFileFilter \ " " , 
 " name = \ " RegexpHeader \ " " , 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTreeWalkerSuppressionCommentFilter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTreeWalkerSuppressionCommentFilter . java 
 new file mode 100644 
 index 0000000 . . 917b76e 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTreeWalkerSuppressionCommentFilter . java 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + public class InputTreeWalkerSuppressionCommentFilter { 
 + private int I ; 
 + / * CHECKSTYLE : OFF * / 
 + private int J ; 
 + / * CHECKSTYLE : ON * / 
 + / / CHECKSTYLE : OFF 
 + private int P ; 
 + / / CHECKSTYLE : ON 
 + } 
 diff - - git a / src / xdocs / config _ filters . xml b / src / xdocs / config _ filters . xml 
 index d55ffd7 . . ad42cf0 100644 
 - - - a / src / xdocs / config _ filters . xml 
 + + + b / src / xdocs / config _ filters . xml 
 @ @ - 110 , 11 + 110 , 8 @ @ 
 file is edited . 
 < / p > 
 < p > 
 - Usage : This filter only works in conjunction with a < code > FileContentsHolder < / code > , since that check makes 
 - the suppression comments in the Java files available . A configuration that includes this filter must 
 - configure < code > FileContentsHolder < / code > as a 
 - child module of < code > TreeWalker < / code > . Note that the suppression comment should be put 
 - before the violation . You can use more than one suppression comment each on separate line . 
 + Note that the suppression comment should be put before the violation . You can use more 
 + than one suppression comment each on separate line . 
 < / p > 
 < / subsection > 
 < subsection name = " Properties " > 
 @ @ - 176 , 22 + 173 , 12 @ @ 
 < / subsection > 
 < subsection name = " Examples " > 
 < p > 
 - Make sure that comments are available to the filter by enabling FileContentsHolder : 
 - < / p > 
 - < source > 
 - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 - . . . 
 - & lt ; module name = & quot ; FileContentsHolder & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 - < p > 
 To configure a filter to suppress audit events between a comment 
 containing < code > CHECKSTYLE : OFF < / code > and a comment containing 
 < code > CHECKSTYLE : ON < / code > : 
 < / p > 
 < source > 
 - & lt ; module name = & quot ; Checker & quot ; & gt ; 
 + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 . . . 
 & lt ; module name = & quot ; SuppressionCommentFilter & quot ; / & gt ; 
 . . . 
 @ @ - 409 , 7 + 396 , 7 @ @ public class UserService { 
 < / subsection > 
 
 < subsection name = " Parent Module " > 
 - < p > < a href = " config . html # Checker " > Checker < / a > < / p > 
 + < p > < a href = " config . html # TreeWalker " > TreeWalker < / a > < / p > 
 < / subsection > 
 < / section > 
 
 @ @ - 768 , 12 + 755 , 6 @ @ public static void foo ( ) { 
 single comments . This requires fewer lines to mark a region , and 
 may be aesthetically preferable in some contexts . 
 < / p > 
 - < p > 
 - Usage : This filter only works in conjunction with a < code > FileContentsHolder < / code > , since that check makes 
 - the suppression comments in the Java files available . A configuration that includes this filter must 
 - configure < code > FileContentsHolder < / code > as a 
 - child module of < code > TreeWalker < / code > . 
 - < / p > 
 < / subsection > 
 < subsection name = " Properties " > 
 < table > 
 @ @ - 831 , 16 + 812 , 6 @ @ public static void foo ( ) { 
 < / subsection > 
 < subsection name = " Examples " > 
 < p > 
 - To configure the check that makes comments available to the filter : 
 - < / p > 
 - < source > 
 - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 - . . . 
 - & lt ; module name = & quot ; FileContentsHolder & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 - < p > 
 To configure a filter to suppress audit events for < i > check < / i > 
 on any line with a comment < code > SUPPRESS CHECKSTYLE < i > check < / i > < / code > : 
 < / p > 
 @ @ - 1012 , 7 + 983 , 7 @ @ public class UserService { 
 < / subsection > 
 
 < subsection name = " Parent Module " > 
 - < p > < a href = " config . html # Checker " > Checker < / a > < / p > 
 + < p > < a href = " config . html # TreeWalker " > TreeWalker < / a > < / p > 
 < / subsection > 
 < / section > 
 < / body > 
 diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml 
 index 2ebc6af . . 10e5ec3 100644 
 - - - a / src / xdocs / config _ misc . xml 
 + + + b / src / xdocs / config _ misc . xml 
 @ @ - 858 , 10 + 858 , 8 @ @ String unitAbbrev = " \ u03bc \ u03bc \ u03bc " ; 
 < subsection name = " Examples " > 
 < p > 
 This check should not be used by itself , as it does no reporting . 
 - It is to be used in conjunction with other checks like 
 - < a href = " config _ filters . html # SuppressionCommentFilter " > SuppressionCommentFilter < / a > 
 - and 
 - < a href = " config _ filters . html # SuppressWithNearbyCommentFilter " > SuppressWithNearbyCommentFilter < / a > . 
 + It is to be used in conjunction with other checks . 
 + No checks use < code > FileContentsHolder < / code > currently . 
 < / p > 
 < / subsection > 

