BLEU SCORE: 0.04753622060013115

TEST MSG: Issue # 4165 : Split and Organize Checkstyle inputs by Test for checks in coding package : PackageDeclaration
GENERATED MSG: Issue # 2161 : unify test input locations

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheckTest . java <nl> index 7e5ea4d . . e4cc8f9 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheckTest . java <nl> @ @ - 36 , 13 + 36 , 17 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " coding " + File . separator + filename ) ; <nl> + + " coding " + File . separator <nl> + + " packagedeclaration " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Override <nl> protected String getNonCompilablePath ( String filename ) throws IOException { <nl> return super . getNonCompilablePath ( " checks " + File . separator <nl> - + " coding " + File . separator + filename ) ; <nl> + + " coding " + File . separator <nl> + + " packagedeclaration " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 62 , 7 + 66 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { <nl> <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " InputPackageDeclaration . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputPackageDeclarationPlain . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 73 , 7 + 77 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { <nl> " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " InputWithCommentOnly . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputPackageDeclarationWithCommentOnly . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 84 , 7 + 88 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { <nl> " 1 : " + getCheckMessage ( MSG _ KEY _ MISMATCH ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " InputPackageDiffDirectory . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputPackageDeclarationDiffDirectory . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 95 , 7 + 99 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { <nl> " 1 : " + getCheckMessage ( MSG _ KEY _ MISMATCH ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " InputPackageDiffDirectoryAtParent . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputPackageDeclarationDiffDirectoryAtParent . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 106 , 7 + 110 , 8 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { <nl> " 1 : " + getCheckMessage ( MSG _ KEY _ MISMATCH ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " InputPackageDiffDirectoryAtSubpackage . java " ) , expected ) ; <nl> + verify ( checkConfig , <nl> + getPath ( " InputPackageDeclarationDiffDirectoryAtSubpackage . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 115 , 7 + 120 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " matchDirectoryStructure " , " false " ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " InputPackageDiffDirectory . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputPackageDeclarationDiffDirectory . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 124 , 7 + 129 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " matchDirectoryStructure " , " false " ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " InputPackageDiffDirectoryAtParent . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputPackageDeclarationDiffDirectoryAtParent . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 133 , 7 + 138 , 8 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " matchDirectoryStructure " , " false " ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " InputPackageDiffDirectoryAtSubpackage . java " ) , expected ) ; <nl> + verify ( checkConfig , <nl> + getPath ( " InputPackageDeclarationDiffDirectoryAtSubpackage . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputNoPackage . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputNoPackage . java <nl> deleted file mode 100644 <nl> index 4fd3b56 . . 0000000 <nl> - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputNoPackage . java <nl> + + + / dev / null <nl> @ @ - 1 , 5 + 0 , 0 @ @ <nl> - / * * <nl> - * No package here . Compilable by javac , but noncompilable by eclipse <nl> - * / <nl> - public class InputNoPackage { <nl> - } <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputNoPackage . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputNoPackage . java <nl> new file mode 100644 <nl> index 0000000 . . 4fd3b56 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputNoPackage . java <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + / * * <nl> + * No package here . Compilable by javac , but noncompilable by eclipse <nl> + * / <nl> + public class InputNoPackage { <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDeclaration . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDeclaration . java <nl> deleted file mode 100644 <nl> index 552f05a . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDeclaration . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> - <nl> - class InputPackageDeclaration { <nl> - public String value ; <nl> - <nl> - private void get ( ) { <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectory . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectory . java <nl> deleted file mode 100644 <nl> index ffe12ed . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectory . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . testing . packagediffdirectory ; <nl> - <nl> - public class InputPackageDiffDirectory { <nl> - public String value ; <nl> - <nl> - private void get ( ) { <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtParent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtParent . java <nl> deleted file mode 100644 <nl> index 46ca11e . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtParent . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - public class InputPackageDiffDirectoryAtParent { <nl> - public String value ; <nl> - <nl> - private void get ( ) { <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtSubpackage . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtSubpackage . java <nl> deleted file mode 100644 <nl> index 72275aa . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtSubpackage . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . coding . subpackage ; <nl> - <nl> - public class InputPackageDiffDirectoryAtSubpackage { <nl> - public String value ; <nl> - <nl> - private void get ( ) { <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputWithCommentOnly . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputWithCommentOnly . java <nl> deleted file mode 100644 <nl> index 0684207 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputWithCommentOnly . java <nl> + + + / dev / null <nl> @ @ - 1 + 0 , 0 @ @ <nl> - / * Comment only * / <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectory . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectory . java <nl> new file mode 100644 <nl> index 0000000 . . 2c1c799 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectory . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . testing . packagediffdirectory ; <nl> + <nl> + public class InputPackageDeclarationDiffDirectory { <nl> + public String value ; <nl> + <nl> + private void get ( ) { <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtParent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtParent . java <nl> new file mode 100644 <nl> index 0000000 . . d24baeb <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtParent . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> + <nl> + public class InputPackageDeclarationDiffDirectoryAtParent { <nl> + public String value ; <nl> + <nl> + private void get ( ) { <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtSubpackage . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtSubpackage . java <nl> new file mode 100644 <nl> index 0000000 . . f89307f <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtSubpackage . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding . packagedeclaration . subpackage ; <nl> + <nl> + public class InputPackageDeclarationDiffDirectoryAtSubpackage { <nl> + public String value ; <nl> + <nl> + private void get ( ) { <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationPlain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationPlain . java <nl> new file mode 100644 <nl> index 0000000 . . 21bfd91 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationPlain . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding . packagedeclaration ; <nl> + <nl> + class InputPackageDeclarationPlain { <nl> + public String value ; <nl> + <nl> + private void get ( ) { <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationWithCommentOnly . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationWithCommentOnly . java <nl> new file mode 100644 <nl> index 0000000 . . 0684207 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationWithCommentOnly . java <nl> @ @ - 0 , 0 + 1 @ @ <nl> + / * Comment only * /
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java <nl> index 9af22a9 . . 2cdac81 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java <nl> @ @ - 137 , 17 + 137 , 17 @ @ public class CommitValidationTest { <nl> } <nl> <nl> private static List < RevCommit > getCommitsToCheck ( ) throws Exception { <nl> - Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ; <nl> - <nl> - RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; <nl> List < RevCommit > commits ; <nl> - if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { <nl> - commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; <nl> - commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; <nl> - } <nl> - else { <nl> - commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; <nl> - commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; <nl> + try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { <nl> + RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; <nl> + if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { <nl> + commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; <nl> + commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; <nl> + } <nl> + else { <nl> + commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; <nl> + commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; <nl> + } <nl> } <nl> return commits ; <nl> } <nl> @ @ - 165 , 12 + 165 , 10 @ @ public class CommitValidationTest { <nl> <nl> private static RevCommitsPair resolveRevCommitsPair ( Repository repo ) { <nl> RevCommitsPair revCommitIteratorPair ; <nl> - try { <nl> + <nl> + try ( RevWalk revWalk = new RevWalk ( repo ) ) { <nl> Iterator < RevCommit > first ; <nl> Iterator < RevCommit > second ; <nl> - <nl> - RevWalk revWalk = new RevWalk ( repo ) ; <nl> - <nl> ObjectId headId = repo . resolve ( Constants . HEAD ) ; <nl> RevCommit headCommit = revWalk . parseCommit ( headId ) ; <nl> <nl> @ @ - 178 , 11 + 176 , 15 @ @ public class CommitValidationTest { <nl> RevCommit firstParent = headCommit . getParent ( 0 ) ; <nl> RevCommit secondParent = headCommit . getParent ( 1 ) ; <nl> <nl> - first = new Git ( repo ) . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; <nl> - second = new Git ( repo ) . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; <nl> + try ( Git git = new Git ( repo ) ) { <nl> + first = git . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; <nl> + second = git . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; <nl> + } <nl> } <nl> else { <nl> - first = new Git ( repo ) . log ( ) . call ( ) . iterator ( ) ; <nl> + try ( Git git = new Git ( repo ) ) { <nl> + first = git . log ( ) . call ( ) . iterator ( ) ; <nl> + } <nl> second = Collections . emptyIterator ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheckTest . java 
 index 7e5ea4d . . e4cc8f9 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheckTest . java 
 @ @ - 36 , 13 + 36 , 17 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " coding " + File . separator + filename ) ; 
 + + " coding " + File . separator 
 + + " packagedeclaration " + File . separator 
 + + filename ) ; 
 } 
 
 @ Override 
 protected String getNonCompilablePath ( String filename ) throws IOException { 
 return super . getNonCompilablePath ( " checks " + File . separator 
 - + " coding " + File . separator + filename ) ; 
 + + " coding " + File . separator 
 + + " packagedeclaration " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 @ @ - 62 , 7 + 66 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { 
 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " InputPackageDeclaration . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputPackageDeclarationPlain . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 73 , 7 + 77 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { 
 " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " InputWithCommentOnly . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputPackageDeclarationWithCommentOnly . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 84 , 7 + 88 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { 
 " 1 : " + getCheckMessage ( MSG _ KEY _ MISMATCH ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " InputPackageDiffDirectory . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputPackageDeclarationDiffDirectory . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 95 , 7 + 99 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { 
 " 1 : " + getCheckMessage ( MSG _ KEY _ MISMATCH ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " InputPackageDiffDirectoryAtParent . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputPackageDeclarationDiffDirectoryAtParent . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 106 , 7 + 110 , 8 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { 
 " 1 : " + getCheckMessage ( MSG _ KEY _ MISMATCH ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " InputPackageDiffDirectoryAtSubpackage . java " ) , expected ) ; 
 + verify ( checkConfig , 
 + getPath ( " InputPackageDeclarationDiffDirectoryAtSubpackage . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 115 , 7 + 120 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " matchDirectoryStructure " , " false " ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " InputPackageDiffDirectory . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputPackageDeclarationDiffDirectory . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 124 , 7 + 129 , 7 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " matchDirectoryStructure " , " false " ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " InputPackageDiffDirectoryAtParent . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputPackageDeclarationDiffDirectoryAtParent . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 133 , 7 + 138 , 8 @ @ public class PackageDeclarationCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " matchDirectoryStructure " , " false " ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " InputPackageDiffDirectoryAtSubpackage . java " ) , expected ) ; 
 + verify ( checkConfig , 
 + getPath ( " InputPackageDeclarationDiffDirectoryAtSubpackage . java " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputNoPackage . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputNoPackage . java 
 deleted file mode 100644 
 index 4fd3b56 . . 0000000 
 - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputNoPackage . java 
 + + + / dev / null 
 @ @ - 1 , 5 + 0 , 0 @ @ 
 - / * * 
 - * No package here . Compilable by javac , but noncompilable by eclipse 
 - * / 
 - public class InputNoPackage { 
 - } 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputNoPackage . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputNoPackage . java 
 new file mode 100644 
 index 0000000 . . 4fd3b56 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputNoPackage . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + / * * 
 + * No package here . Compilable by javac , but noncompilable by eclipse 
 + * / 
 + public class InputNoPackage { 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDeclaration . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDeclaration . java 
 deleted file mode 100644 
 index 552f05a . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDeclaration . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . coding ; 
 - 
 - class InputPackageDeclaration { 
 - public String value ; 
 - 
 - private void get ( ) { 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectory . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectory . java 
 deleted file mode 100644 
 index ffe12ed . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectory . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . testing . packagediffdirectory ; 
 - 
 - public class InputPackageDiffDirectory { 
 - public String value ; 
 - 
 - private void get ( ) { 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtParent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtParent . java 
 deleted file mode 100644 
 index 46ca11e . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtParent . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - public class InputPackageDiffDirectoryAtParent { 
 - public String value ; 
 - 
 - private void get ( ) { 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtSubpackage . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtSubpackage . java 
 deleted file mode 100644 
 index 72275aa . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputPackageDiffDirectoryAtSubpackage . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . coding . subpackage ; 
 - 
 - public class InputPackageDiffDirectoryAtSubpackage { 
 - public String value ; 
 - 
 - private void get ( ) { 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputWithCommentOnly . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputWithCommentOnly . java 
 deleted file mode 100644 
 index 0684207 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputWithCommentOnly . java 
 + + + / dev / null 
 @ @ - 1 + 0 , 0 @ @ 
 - / * Comment only * / 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectory . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectory . java 
 new file mode 100644 
 index 0000000 . . 2c1c799 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectory . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . testing . packagediffdirectory ; 
 + 
 + public class InputPackageDeclarationDiffDirectory { 
 + public String value ; 
 + 
 + private void get ( ) { 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtParent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtParent . java 
 new file mode 100644 
 index 0000000 . . d24baeb 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtParent . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding ; 
 + 
 + public class InputPackageDeclarationDiffDirectoryAtParent { 
 + public String value ; 
 + 
 + private void get ( ) { 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtSubpackage . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtSubpackage . java 
 new file mode 100644 
 index 0000000 . . f89307f 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationDiffDirectoryAtSubpackage . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding . packagedeclaration . subpackage ; 
 + 
 + public class InputPackageDeclarationDiffDirectoryAtSubpackage { 
 + public String value ; 
 + 
 + private void get ( ) { 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationPlain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationPlain . java 
 new file mode 100644 
 index 0000000 . . 21bfd91 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationPlain . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding . packagedeclaration ; 
 + 
 + class InputPackageDeclarationPlain { 
 + public String value ; 
 + 
 + private void get ( ) { 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationWithCommentOnly . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationWithCommentOnly . java 
 new file mode 100644 
 index 0000000 . . 0684207 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / packagedeclaration / InputPackageDeclarationWithCommentOnly . java 
 @ @ - 0 , 0 + 1 @ @ 
 + / * Comment only * /

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java 
 index 9af22a9 . . 2cdac81 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java 
 @ @ - 137 , 17 + 137 , 17 @ @ public class CommitValidationTest { 
 } 
 
 private static List < RevCommit > getCommitsToCheck ( ) throws Exception { 
 - Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ; 
 - 
 - RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; 
 List < RevCommit > commits ; 
 - if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { 
 - commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; 
 - commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; 
 - } 
 - else { 
 - commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; 
 - commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; 
 + try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { 
 + RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; 
 + if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { 
 + commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; 
 + commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; 
 + } 
 + else { 
 + commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; 
 + commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; 
 + } 
 } 
 return commits ; 
 } 
 @ @ - 165 , 12 + 165 , 10 @ @ public class CommitValidationTest { 
 
 private static RevCommitsPair resolveRevCommitsPair ( Repository repo ) { 
 RevCommitsPair revCommitIteratorPair ; 
 - try { 
 + 
 + try ( RevWalk revWalk = new RevWalk ( repo ) ) { 
 Iterator < RevCommit > first ; 
 Iterator < RevCommit > second ; 
 - 
 - RevWalk revWalk = new RevWalk ( repo ) ; 
 - 
 ObjectId headId = repo . resolve ( Constants . HEAD ) ; 
 RevCommit headCommit = revWalk . parseCommit ( headId ) ; 
 
 @ @ - 178 , 11 + 176 , 15 @ @ public class CommitValidationTest { 
 RevCommit firstParent = headCommit . getParent ( 0 ) ; 
 RevCommit secondParent = headCommit . getParent ( 1 ) ; 
 
 - first = new Git ( repo ) . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; 
 - second = new Git ( repo ) . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; 
 + try ( Git git = new Git ( repo ) ) { 
 + first = git . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; 
 + second = git . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; 
 + } 
 } 
 else { 
 - first = new Git ( repo ) . log ( ) . call ( ) . iterator ( ) ; 
 + try ( Git git = new Git ( repo ) ) { 
 + first = git . log ( ) . call ( ) . iterator ( ) ; 
 + } 
 second = Collections . emptyIterator ( ) ; 
 } 

