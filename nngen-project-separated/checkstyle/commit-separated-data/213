BLEU SCORE: 0.17268932789342512

TEST MSG: minor : fetch tags to existing repos to let releasenotes - gen . sh works properly ( problem detected on buddy . works ci )
GENERATED MSG: minor : extension of output for . ci / travis / xtr _ releasenotes - gen . sh

TEST DIFF (one line): diff - - git a / . ci / travis / xtr _ releasenotes - gen . sh b / . ci / travis / xtr _ releasenotes - gen . sh <nl> index 3548860 . . bfec327 100755 <nl> - - - a / . ci / travis / xtr _ releasenotes - gen . sh <nl> + + + b / . ci / travis / xtr _ releasenotes - gen . sh <nl> @ @ - 17 , 6 + 17 , 7 @ @ if [ - d contribution ] ; then <nl> cd contribution / <nl> git reset - - hard origin / master <nl> git pull origin master <nl> + git fetch - - tags <nl> cd . . / <nl> else <nl> git clone https : / / github . com / checkstyle / contribution <nl> @ @ - 30 , 6 + 31 , 7 @ @ if [ - d checkstyle ] ; then <nl> cd checkstyle / <nl> git reset - - hard origin / master <nl> git pull origin master <nl> + git fetch - - tags <nl> cd . . / <nl> else <nl> git clone https : / / github . com / checkstyle / checkstyle
NEAREST DIFF (one line): diff - - git a / . ci / shippable . sh b / . ci / shippable . sh <nl> index 40a9db6 . . cc572ed 100755 <nl> - - - a / . ci / shippable . sh <nl> + + + b / . ci / shippable . sh <nl> @ @ - 33 , 7 + 33 , 7 @ @ pitest - checkstyle - xpath | pitest - checkstyle - filters | pitest - checks - imports \ <nl> | pitest - checks - metrics | pitest - checks - regexp | pitest - checks - sizes | pitest - checks - misc \ <nl> | pitest - checks - design | pitest - checks - annotation | pitest - checks - header \ <nl> | pitest - checks - modifier | pitest - checks - naming | pitest - checkstyle - tree - walker | pitest - checkstyle - main \ <nl> - | pitest - checks - whitespace ) <nl> + | pitest - checks - whitespace | pitest - checkstyle - utils ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> # Format of ignored items : < report _ name > : < survived line > <nl> declare - a ignoredItems = ( ) ; <nl> @ @ - 107 , 16 + 107 , 6 @ @ pitest - checkstyle - api ) <nl> checkPitestReport " $ { ignoredItems [ @ ] } " <nl> ; ; <nl> <nl> - pitest - checkstyle - utils ) <nl> - mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> - # Format of ignored items : < report _ name > : < survived line > <nl> - declare - a ignoredItems = ( <nl> - " JavadocUtils . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > continue ; < / span > < / pre > < / td > < / tr > " <nl> - " TokenUtils . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > continue ; < / span > < / pre > < / td > < / tr > " <nl> - ) ; <nl> - checkPitestReport " $ { ignoredItems [ @ ] } " <nl> - ; ; <nl> - <nl> pitest - checkstyle - gui | pitest - checks - indentation | pitest - checks - javadoc ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> # too much supprssions , post validation is skipped <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> index fae0421 . . 48fc249 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> @ @ - 88 , 25 + 88 , 24 @ @ public final class JavadocUtils { <nl> <nl> for ( final Field field : fields ) { <nl> / / Only process public int fields . <nl> - if ( ! Modifier . isPublic ( field . getModifiers ( ) ) <nl> - | | field . getType ( ) ! = Integer . TYPE ) { <nl> - continue ; <nl> - } <nl> + if ( Modifier . isPublic ( field . getModifiers ( ) ) <nl> + & & field . getType ( ) = = Integer . TYPE ) { <nl> <nl> - final String name = field . getName ( ) ; <nl> + final String name = field . getName ( ) ; <nl> <nl> - final int tokenValue = TokenUtils . getIntFromField ( field , name ) ; <nl> - builder . put ( name , tokenValue ) ; <nl> - if ( tokenValue > tempTokenValueToName . length - 1 ) { <nl> - final String [ ] temp = new String [ tokenValue + 1 ] ; <nl> - System . arraycopy ( tempTokenValueToName , 0 , temp , 0 , tempTokenValueToName . length ) ; <nl> - tempTokenValueToName = temp ; <nl> - } <nl> - if ( tokenValue = = - 1 ) { <nl> - tempTokenValueToName [ 0 ] = name ; <nl> - } <nl> - else { <nl> - tempTokenValueToName [ tokenValue ] = name ; <nl> + final int tokenValue = TokenUtils . getIntFromField ( field , name ) ; <nl> + builder . put ( name , tokenValue ) ; <nl> + if ( tokenValue > tempTokenValueToName . length - 1 ) { <nl> + final String [ ] temp = new String [ tokenValue + 1 ] ; <nl> + System . arraycopy ( tempTokenValueToName , 0 , temp , 0 , tempTokenValueToName . length ) ; <nl> + tempTokenValueToName = temp ; <nl> + } <nl> + if ( tokenValue = = - 1 ) { <nl> + tempTokenValueToName [ 0 ] = name ; <nl> + } <nl> + else { <nl> + tempTokenValueToName [ tokenValue ] = name ; <nl> + } <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / TokenUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / TokenUtils . java <nl> index 014a79f . . 9190b1c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / TokenUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / TokenUtils . java <nl> @ @ - 58 , 20 + 58 , 19 @ @ public final class TokenUtils { <nl> String [ ] tempTokenValueToName = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> for ( final Field field : fields ) { <nl> / / Only process the int declarations . <nl> - if ( field . getType ( ) ! = Integer . TYPE ) { <nl> - continue ; <nl> + if ( field . getType ( ) = = Integer . TYPE ) { <nl> + <nl> + final String name = field . getName ( ) ; <nl> + final int tokenValue = getIntFromField ( field , name ) ; <nl> + builder . put ( name , tokenValue ) ; <nl> + if ( tokenValue > tempTokenValueToName . length - 1 ) { <nl> + final String [ ] temp = new String [ tokenValue + 1 ] ; <nl> + System . arraycopy ( tempTokenValueToName , 0 , <nl> + temp , 0 , tempTokenValueToName . length ) ; <nl> + tempTokenValueToName = temp ; <nl> + } <nl> + tempTokenValueToName [ tokenValue ] = name ; <nl> } <nl> - <nl> - final String name = field . getName ( ) ; <nl> - final int tokenValue = getIntFromField ( field , name ) ; <nl> - builder . put ( name , tokenValue ) ; <nl> - if ( tokenValue > tempTokenValueToName . length - 1 ) { <nl> - final String [ ] temp = new String [ tokenValue + 1 ] ; <nl> - System . arraycopy ( tempTokenValueToName , 0 , <nl> - temp , 0 , tempTokenValueToName . length ) ; <nl> - tempTokenValueToName = temp ; <nl> - } <nl> - tempTokenValueToName [ tokenValue ] = name ; <nl> } <nl> <nl> TOKEN _ NAME _ TO _ VALUE = builder . build ( ) ;

TEST DIFF:
diff - - git a / . ci / travis / xtr _ releasenotes - gen . sh b / . ci / travis / xtr _ releasenotes - gen . sh 
 index 3548860 . . bfec327 100755 
 - - - a / . ci / travis / xtr _ releasenotes - gen . sh 
 + + + b / . ci / travis / xtr _ releasenotes - gen . sh 
 @ @ - 17 , 6 + 17 , 7 @ @ if [ - d contribution ] ; then 
 cd contribution / 
 git reset - - hard origin / master 
 git pull origin master 
 + git fetch - - tags 
 cd . . / 
 else 
 git clone https : / / github . com / checkstyle / contribution 
 @ @ - 30 , 6 + 31 , 7 @ @ if [ - d checkstyle ] ; then 
 cd checkstyle / 
 git reset - - hard origin / master 
 git pull origin master 
 + git fetch - - tags 
 cd . . / 
 else 
 git clone https : / / github . com / checkstyle / checkstyle

NEAREST DIFF:
diff - - git a / . ci / shippable . sh b / . ci / shippable . sh 
 index 40a9db6 . . cc572ed 100755 
 - - - a / . ci / shippable . sh 
 + + + b / . ci / shippable . sh 
 @ @ - 33 , 7 + 33 , 7 @ @ pitest - checkstyle - xpath | pitest - checkstyle - filters | pitest - checks - imports \ 
 | pitest - checks - metrics | pitest - checks - regexp | pitest - checks - sizes | pitest - checks - misc \ 
 | pitest - checks - design | pitest - checks - annotation | pitest - checks - header \ 
 | pitest - checks - modifier | pitest - checks - naming | pitest - checkstyle - tree - walker | pitest - checkstyle - main \ 
 - | pitest - checks - whitespace ) 
 + | pitest - checks - whitespace | pitest - checkstyle - utils ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 # Format of ignored items : < report _ name > : < survived line > 
 declare - a ignoredItems = ( ) ; 
 @ @ - 107 , 16 + 107 , 6 @ @ pitest - checkstyle - api ) 
 checkPitestReport " $ { ignoredItems [ @ ] } " 
 ; ; 
 
 - pitest - checkstyle - utils ) 
 - mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 - # Format of ignored items : < report _ name > : < survived line > 
 - declare - a ignoredItems = ( 
 - " JavadocUtils . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > continue ; < / span > < / pre > < / td > < / tr > " 
 - " TokenUtils . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > continue ; < / span > < / pre > < / td > < / tr > " 
 - ) ; 
 - checkPitestReport " $ { ignoredItems [ @ ] } " 
 - ; ; 
 - 
 pitest - checkstyle - gui | pitest - checks - indentation | pitest - checks - javadoc ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 # too much supprssions , post validation is skipped 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 index fae0421 . . 48fc249 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 @ @ - 88 , 25 + 88 , 24 @ @ public final class JavadocUtils { 
 
 for ( final Field field : fields ) { 
 / / Only process public int fields . 
 - if ( ! Modifier . isPublic ( field . getModifiers ( ) ) 
 - | | field . getType ( ) ! = Integer . TYPE ) { 
 - continue ; 
 - } 
 + if ( Modifier . isPublic ( field . getModifiers ( ) ) 
 + & & field . getType ( ) = = Integer . TYPE ) { 
 
 - final String name = field . getName ( ) ; 
 + final String name = field . getName ( ) ; 
 
 - final int tokenValue = TokenUtils . getIntFromField ( field , name ) ; 
 - builder . put ( name , tokenValue ) ; 
 - if ( tokenValue > tempTokenValueToName . length - 1 ) { 
 - final String [ ] temp = new String [ tokenValue + 1 ] ; 
 - System . arraycopy ( tempTokenValueToName , 0 , temp , 0 , tempTokenValueToName . length ) ; 
 - tempTokenValueToName = temp ; 
 - } 
 - if ( tokenValue = = - 1 ) { 
 - tempTokenValueToName [ 0 ] = name ; 
 - } 
 - else { 
 - tempTokenValueToName [ tokenValue ] = name ; 
 + final int tokenValue = TokenUtils . getIntFromField ( field , name ) ; 
 + builder . put ( name , tokenValue ) ; 
 + if ( tokenValue > tempTokenValueToName . length - 1 ) { 
 + final String [ ] temp = new String [ tokenValue + 1 ] ; 
 + System . arraycopy ( tempTokenValueToName , 0 , temp , 0 , tempTokenValueToName . length ) ; 
 + tempTokenValueToName = temp ; 
 + } 
 + if ( tokenValue = = - 1 ) { 
 + tempTokenValueToName [ 0 ] = name ; 
 + } 
 + else { 
 + tempTokenValueToName [ tokenValue ] = name ; 
 + } 
 } 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / TokenUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / TokenUtils . java 
 index 014a79f . . 9190b1c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / TokenUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / TokenUtils . java 
 @ @ - 58 , 20 + 58 , 19 @ @ public final class TokenUtils { 
 String [ ] tempTokenValueToName = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 for ( final Field field : fields ) { 
 / / Only process the int declarations . 
 - if ( field . getType ( ) ! = Integer . TYPE ) { 
 - continue ; 
 + if ( field . getType ( ) = = Integer . TYPE ) { 
 + 
 + final String name = field . getName ( ) ; 
 + final int tokenValue = getIntFromField ( field , name ) ; 
 + builder . put ( name , tokenValue ) ; 
 + if ( tokenValue > tempTokenValueToName . length - 1 ) { 
 + final String [ ] temp = new String [ tokenValue + 1 ] ; 
 + System . arraycopy ( tempTokenValueToName , 0 , 
 + temp , 0 , tempTokenValueToName . length ) ; 
 + tempTokenValueToName = temp ; 
 + } 
 + tempTokenValueToName [ tokenValue ] = name ; 
 } 
 - 
 - final String name = field . getName ( ) ; 
 - final int tokenValue = getIntFromField ( field , name ) ; 
 - builder . put ( name , tokenValue ) ; 
 - if ( tokenValue > tempTokenValueToName . length - 1 ) { 
 - final String [ ] temp = new String [ tokenValue + 1 ] ; 
 - System . arraycopy ( tempTokenValueToName , 0 , 
 - temp , 0 , tempTokenValueToName . length ) ; 
 - tempTokenValueToName = temp ; 
 - } 
 - tempTokenValueToName [ tokenValue ] = name ; 
 } 
 
 TOKEN _ NAME _ TO _ VALUE = builder . build ( ) ;
