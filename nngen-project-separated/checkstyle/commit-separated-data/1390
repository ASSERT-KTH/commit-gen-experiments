BLEU SCORE: 0.07635362674858093

TEST MSG: minor : renaming indentation methods to more natural name
GENERATED MSG: Rename boolean methods to start with question word . # 1555

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index a268a67 . . 1575989 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 228 , 7 + 228 , 7 @ @ public class RightCurlyCheck extends Check { <nl> else if ( shouldBeAloneOnLine ( bracePolicy , details ) ) { <nl> violation = MSG _ KEY _ LINE _ ALONE ; <nl> } <nl> - else if ( shouldStartLine & & ! startsLine ( details , targetSourceLine ) ) { <nl> + else if ( shouldStartLine & & ! isOnStartOfLine ( details , targetSourceLine ) ) { <nl> violation = MSG _ KEY _ LINE _ NEW ; <nl> } <nl> return violation ; <nl> @ @ - 268 , 7 + 268 , 7 @ @ public class RightCurlyCheck extends Check { <nl> * @ param targetSourceLine source line to check <nl> * @ return true if right curly brace starts target source line . <nl> * / <nl> - private static boolean startsLine ( Details details , String targetSourceLine ) { <nl> + private static boolean isOnStartOfLine ( Details details , String targetSourceLine ) { <nl> return CommonUtils . hasWhitespaceBefore ( details . rcurly . getColumnNo ( ) , targetSourceLine ) <nl> | | details . lcurly . getLineNo ( ) = = details . rcurly . getLineNo ( ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> index 55bdd55 . . 3335ecd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> @ @ - 190 , 7 + 190 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * <nl> * @ return true if it is , false otherwise <nl> * / <nl> - protected final boolean startsLine ( DetailAST ast ) { <nl> + protected final boolean isOnStartOfLine ( DetailAST ast ) { <nl> return getLineStart ( ast ) = = expandedTabsColumnNo ( ast ) ; <nl> } <nl> <nl> @ @ - 507 , 7 + 507 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> for ( DetailAST modifier = modifiers . getFirstChild ( ) ; <nl> modifier ! = null ; <nl> modifier = modifier . getNextSibling ( ) ) { <nl> - if ( startsLine ( modifier ) <nl> + if ( isOnStartOfLine ( modifier ) <nl> & & ! getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( modifier ) ) ) { <nl> logError ( modifier , " modifier " , <nl> expandedTabsColumnNo ( modifier ) ) ; <nl> @ @ - 577 , 7 + 577 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> / / or has < lparen level > + 1 indentation <nl> final int lparenLevel = expandedTabsColumnNo ( lparen ) ; <nl> <nl> - if ( ! getLevel ( ) . isAcceptable ( rparenLevel ) & & startsLine ( rparen ) <nl> + if ( ! getLevel ( ) . isAcceptable ( rparenLevel ) & & isOnStartOfLine ( rparen ) <nl> & & rparenLevel ! = lparenLevel + 1 ) { <nl> logError ( rparen , " rparen " , rparenLevel ) ; <nl> } <nl> @ @ - 593 , 7 + 593 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> / / same line as the lcurly <nl> if ( lparen = = null <nl> | | getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( lparen ) ) <nl> - | | ! startsLine ( lparen ) ) { <nl> + | | ! isOnStartOfLine ( lparen ) ) { <nl> return ; <nl> } <nl> logError ( lparen , " lparen " , expandedTabsColumnNo ( lparen ) ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> index a7fd2ea . . 3bb995d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> @ @ - 96 , 7 + 96 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> | | getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( topLevel ) ) | | hasLabelBefore ( ) ) { <nl> return ; <nl> } <nl> - if ( ! shouldTopLevelStartLine ( ) & & ! startsLine ( topLevel ) ) { <nl> + if ( ! shouldTopLevelStartLine ( ) & & ! isOnStartOfLine ( topLevel ) ) { <nl> return ; <nl> } <nl> logError ( topLevel , " " , expandedTabsColumnNo ( topLevel ) ) ; <nl> @ @ - 158 , 7 + 158 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> final DetailAST lcurly = getLCurly ( ) ; <nl> final int lcurlyPos = expandedTabsColumnNo ( lcurly ) ; <nl> <nl> - if ( curlyLevel ( ) . isAcceptable ( lcurlyPos ) | | ! startsLine ( lcurly ) ) { <nl> + if ( curlyLevel ( ) . isAcceptable ( lcurlyPos ) | | ! isOnStartOfLine ( lcurly ) ) { <nl> return ; <nl> } <nl> <nl> @ @ - 203 , 7 + 203 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> final int rcurlyPos = expandedTabsColumnNo ( rcurly ) ; <nl> <nl> if ( curlyLevel ( ) . isAcceptable ( rcurlyPos ) <nl> - | | ! shouldStartWithRCurly ( ) & & ! startsLine ( rcurly ) <nl> + | | ! shouldStartWithRCurly ( ) & & ! isOnStartOfLine ( rcurly ) <nl> | | areOnSameLine ( rcurly , lcurly ) ) { <nl> return ; <nl> } <nl> @ @ - 295 , 10 + 295 , 10 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> / / try to suggest single level to children using curlies ' <nl> / / levels . <nl> if ( getLevel ( ) . isMultiLevel ( ) & & hasCurlies ( ) ) { <nl> - if ( startsLine ( getLCurly ( ) ) ) { <nl> + if ( isOnStartOfLine ( getLCurly ( ) ) ) { <nl> indentLevel = new IndentLevel ( expandedTabsColumnNo ( getLCurly ( ) ) + getBasicOffset ( ) ) ; <nl> } <nl> - else if ( startsLine ( getRCurly ( ) ) ) { <nl> + else if ( isOnStartOfLine ( getRCurly ( ) ) ) { <nl> final IndentLevel level = new IndentLevel ( curlyLevel ( ) , getBasicOffset ( ) ) ; <nl> level . addAcceptedIndent ( level . getFirstIndentLevel ( ) + getLineWrappingIndent ( ) ) ; <nl> indentLevel = level ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java <nl> index 5e4742e . . c6a4567 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java <nl> @ @ - 66 , 7 + 66 , 7 @ @ public class MemberDefHandler extends AbstractExpressionHandler { <nl> @ Override <nl> protected void checkModifiers ( ) { <nl> final DetailAST modifier = getMainAst ( ) . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - if ( startsLine ( modifier ) <nl> + if ( isOnStartOfLine ( modifier ) <nl> & & ! getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( modifier ) ) ) { <nl> logError ( modifier , " modifier " , expandedTabsColumnNo ( modifier ) ) ; <nl> } <nl> @ @ - 79 , 7 + 79 , 7 @ @ public class MemberDefHandler extends AbstractExpressionHandler { <nl> final DetailAST type = getMainAst ( ) . findFirstToken ( TokenTypes . TYPE ) ; <nl> final DetailAST ident = AbstractExpressionHandler . getFirstToken ( type ) ; <nl> final int columnNo = expandedTabsColumnNo ( ident ) ; <nl> - if ( startsLine ( ident ) & & ! getLevel ( ) . isAcceptable ( columnNo ) ) { <nl> + if ( isOnStartOfLine ( ident ) & & ! getLevel ( ) . isAcceptable ( columnNo ) ) { <nl> logError ( ident , " type " , columnNo ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java <nl> index 1b89ff2 . . c2efbaf 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java <nl> @ @ - 51 , 7 + 51 , 7 @ @ public class MethodDefHandler extends BlockParentHandler { <nl> @ Override <nl> protected void checkModifiers ( ) { <nl> final DetailAST modifier = getMainAst ( ) . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - if ( startsLine ( modifier ) <nl> + if ( isOnStartOfLine ( modifier ) <nl> & & ! getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( modifier ) ) ) { <nl> logError ( modifier , " modifier " , expandedTabsColumnNo ( modifier ) ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java <nl> index f9dc2c0 . . c4d59c0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java <nl> @ @ - 95 , 7 + 95 , 7 @ @ public class ObjectBlockHandler extends BlockParentHandler { <nl> final IndentLevel level = curlyLevel ( ) ; <nl> level . addAcceptedIndent ( level . getFirstIndentLevel ( ) + getLineWrappingIndentation ( ) ) ; <nl> <nl> - if ( ! level . isAcceptable ( rcurlyPos ) & & startsLine ( rcurly ) ) { <nl> + if ( ! level . isAcceptable ( rcurlyPos ) & & isOnStartOfLine ( rcurly ) ) { <nl> logError ( rcurly , " rcurly " , rcurlyPos , curlyLevel ( ) ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index bc83e45 . . eeb5ab9 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 318 , 6 + 318 , 7 @ @ <nl> < module name = " ModifiedControlVariable " / > <nl> < module name = " AvoidInlineConditionals " / > <nl> < module name = " IllegalType " / > <nl> + < module name = " TrailingComment " / > <nl> <nl> < ! - - <nl> < module name = " ClassDataAbstractionCoupling " / > <nl> @ @ - 334 , 7 + 335 , 6 @ @ <nl> < module name = " OneTopLevelClass " / > <nl> < module name = " OverloadMethodsDeclarationOrder " / > <nl> < module name = " PackageDeclaration " / > <nl> - < module name = " TrailingComment " / > <nl> < module name = " RequireThis " / > <nl> < module name = " ReturnCount " / > <nl> < module name = " SingleLineJavadoc " / > <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 80ddbc8 . . 51156f1 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 63 , 4 + 63 , 8 @ @ <nl> <nl> < ! - - Should be solved after fixing https : / / github . com / checkstyle / checkstyle / issues / 1805 - - > <nl> < suppress checks = " IllegalType " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] | ( AbstractTypeAwareCheck | TryHandler | SlistHandler | PrimordialHandler | MethodCallHandler | MemberDefHandler | IndentationCheck | IfHandler | HandlerFactory | CaseHandler | BlockParentHandler | AbstractExpressionHandler | JavadocMethodCheck | DetectorOptions ) \ . java " / > <nl> + <nl> + < ! - - Till https : / / github . com / checkstyle / checkstyle / issues / 1854 - - > <nl> + < suppress checks = " TrailingComment " files = " ( InnerAssignmentCheck \ . java | OperatorWrapCheck \ . java | XMLLoggerTest \ . java | AbbreviationAsWordInNameCheckTest \ . java ) " / > <nl> + <nl> < / suppressions >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index a268a67 . . 1575989 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 228 , 7 + 228 , 7 @ @ public class RightCurlyCheck extends Check { 
 else if ( shouldBeAloneOnLine ( bracePolicy , details ) ) { 
 violation = MSG _ KEY _ LINE _ ALONE ; 
 } 
 - else if ( shouldStartLine & & ! startsLine ( details , targetSourceLine ) ) { 
 + else if ( shouldStartLine & & ! isOnStartOfLine ( details , targetSourceLine ) ) { 
 violation = MSG _ KEY _ LINE _ NEW ; 
 } 
 return violation ; 
 @ @ - 268 , 7 + 268 , 7 @ @ public class RightCurlyCheck extends Check { 
 * @ param targetSourceLine source line to check 
 * @ return true if right curly brace starts target source line . 
 * / 
 - private static boolean startsLine ( Details details , String targetSourceLine ) { 
 + private static boolean isOnStartOfLine ( Details details , String targetSourceLine ) { 
 return CommonUtils . hasWhitespaceBefore ( details . rcurly . getColumnNo ( ) , targetSourceLine ) 
 | | details . lcurly . getLineNo ( ) = = details . rcurly . getLineNo ( ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 index 55bdd55 . . 3335ecd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 @ @ - 190 , 7 + 190 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * 
 * @ return true if it is , false otherwise 
 * / 
 - protected final boolean startsLine ( DetailAST ast ) { 
 + protected final boolean isOnStartOfLine ( DetailAST ast ) { 
 return getLineStart ( ast ) = = expandedTabsColumnNo ( ast ) ; 
 } 
 
 @ @ - 507 , 7 + 507 , 7 @ @ public abstract class AbstractExpressionHandler { 
 for ( DetailAST modifier = modifiers . getFirstChild ( ) ; 
 modifier ! = null ; 
 modifier = modifier . getNextSibling ( ) ) { 
 - if ( startsLine ( modifier ) 
 + if ( isOnStartOfLine ( modifier ) 
 & & ! getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( modifier ) ) ) { 
 logError ( modifier , " modifier " , 
 expandedTabsColumnNo ( modifier ) ) ; 
 @ @ - 577 , 7 + 577 , 7 @ @ public abstract class AbstractExpressionHandler { 
 / / or has < lparen level > + 1 indentation 
 final int lparenLevel = expandedTabsColumnNo ( lparen ) ; 
 
 - if ( ! getLevel ( ) . isAcceptable ( rparenLevel ) & & startsLine ( rparen ) 
 + if ( ! getLevel ( ) . isAcceptable ( rparenLevel ) & & isOnStartOfLine ( rparen ) 
 & & rparenLevel ! = lparenLevel + 1 ) { 
 logError ( rparen , " rparen " , rparenLevel ) ; 
 } 
 @ @ - 593 , 7 + 593 , 7 @ @ public abstract class AbstractExpressionHandler { 
 / / same line as the lcurly 
 if ( lparen = = null 
 | | getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( lparen ) ) 
 - | | ! startsLine ( lparen ) ) { 
 + | | ! isOnStartOfLine ( lparen ) ) { 
 return ; 
 } 
 logError ( lparen , " lparen " , expandedTabsColumnNo ( lparen ) ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 index a7fd2ea . . 3bb995d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 @ @ - 96 , 7 + 96 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 | | getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( topLevel ) ) | | hasLabelBefore ( ) ) { 
 return ; 
 } 
 - if ( ! shouldTopLevelStartLine ( ) & & ! startsLine ( topLevel ) ) { 
 + if ( ! shouldTopLevelStartLine ( ) & & ! isOnStartOfLine ( topLevel ) ) { 
 return ; 
 } 
 logError ( topLevel , " " , expandedTabsColumnNo ( topLevel ) ) ; 
 @ @ - 158 , 7 + 158 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 final DetailAST lcurly = getLCurly ( ) ; 
 final int lcurlyPos = expandedTabsColumnNo ( lcurly ) ; 
 
 - if ( curlyLevel ( ) . isAcceptable ( lcurlyPos ) | | ! startsLine ( lcurly ) ) { 
 + if ( curlyLevel ( ) . isAcceptable ( lcurlyPos ) | | ! isOnStartOfLine ( lcurly ) ) { 
 return ; 
 } 
 
 @ @ - 203 , 7 + 203 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 final int rcurlyPos = expandedTabsColumnNo ( rcurly ) ; 
 
 if ( curlyLevel ( ) . isAcceptable ( rcurlyPos ) 
 - | | ! shouldStartWithRCurly ( ) & & ! startsLine ( rcurly ) 
 + | | ! shouldStartWithRCurly ( ) & & ! isOnStartOfLine ( rcurly ) 
 | | areOnSameLine ( rcurly , lcurly ) ) { 
 return ; 
 } 
 @ @ - 295 , 10 + 295 , 10 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 / / try to suggest single level to children using curlies ' 
 / / levels . 
 if ( getLevel ( ) . isMultiLevel ( ) & & hasCurlies ( ) ) { 
 - if ( startsLine ( getLCurly ( ) ) ) { 
 + if ( isOnStartOfLine ( getLCurly ( ) ) ) { 
 indentLevel = new IndentLevel ( expandedTabsColumnNo ( getLCurly ( ) ) + getBasicOffset ( ) ) ; 
 } 
 - else if ( startsLine ( getRCurly ( ) ) ) { 
 + else if ( isOnStartOfLine ( getRCurly ( ) ) ) { 
 final IndentLevel level = new IndentLevel ( curlyLevel ( ) , getBasicOffset ( ) ) ; 
 level . addAcceptedIndent ( level . getFirstIndentLevel ( ) + getLineWrappingIndent ( ) ) ; 
 indentLevel = level ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java 
 index 5e4742e . . c6a4567 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java 
 @ @ - 66 , 7 + 66 , 7 @ @ public class MemberDefHandler extends AbstractExpressionHandler { 
 @ Override 
 protected void checkModifiers ( ) { 
 final DetailAST modifier = getMainAst ( ) . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - if ( startsLine ( modifier ) 
 + if ( isOnStartOfLine ( modifier ) 
 & & ! getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( modifier ) ) ) { 
 logError ( modifier , " modifier " , expandedTabsColumnNo ( modifier ) ) ; 
 } 
 @ @ - 79 , 7 + 79 , 7 @ @ public class MemberDefHandler extends AbstractExpressionHandler { 
 final DetailAST type = getMainAst ( ) . findFirstToken ( TokenTypes . TYPE ) ; 
 final DetailAST ident = AbstractExpressionHandler . getFirstToken ( type ) ; 
 final int columnNo = expandedTabsColumnNo ( ident ) ; 
 - if ( startsLine ( ident ) & & ! getLevel ( ) . isAcceptable ( columnNo ) ) { 
 + if ( isOnStartOfLine ( ident ) & & ! getLevel ( ) . isAcceptable ( columnNo ) ) { 
 logError ( ident , " type " , columnNo ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java 
 index 1b89ff2 . . c2efbaf 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodDefHandler . java 
 @ @ - 51 , 7 + 51 , 7 @ @ public class MethodDefHandler extends BlockParentHandler { 
 @ Override 
 protected void checkModifiers ( ) { 
 final DetailAST modifier = getMainAst ( ) . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - if ( startsLine ( modifier ) 
 + if ( isOnStartOfLine ( modifier ) 
 & & ! getLevel ( ) . isAcceptable ( expandedTabsColumnNo ( modifier ) ) ) { 
 logError ( modifier , " modifier " , expandedTabsColumnNo ( modifier ) ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java 
 index f9dc2c0 . . c4d59c0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java 
 @ @ - 95 , 7 + 95 , 7 @ @ public class ObjectBlockHandler extends BlockParentHandler { 
 final IndentLevel level = curlyLevel ( ) ; 
 level . addAcceptedIndent ( level . getFirstIndentLevel ( ) + getLineWrappingIndentation ( ) ) ; 
 
 - if ( ! level . isAcceptable ( rcurlyPos ) & & startsLine ( rcurly ) ) { 
 + if ( ! level . isAcceptable ( rcurlyPos ) & & isOnStartOfLine ( rcurly ) ) { 
 logError ( rcurly , " rcurly " , rcurlyPos , curlyLevel ( ) ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index bc83e45 . . eeb5ab9 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 318 , 6 + 318 , 7 @ @ 
 < module name = " ModifiedControlVariable " / > 
 < module name = " AvoidInlineConditionals " / > 
 < module name = " IllegalType " / > 
 + < module name = " TrailingComment " / > 
 
 < ! - - 
 < module name = " ClassDataAbstractionCoupling " / > 
 @ @ - 334 , 7 + 335 , 6 @ @ 
 < module name = " OneTopLevelClass " / > 
 < module name = " OverloadMethodsDeclarationOrder " / > 
 < module name = " PackageDeclaration " / > 
 - < module name = " TrailingComment " / > 
 < module name = " RequireThis " / > 
 < module name = " ReturnCount " / > 
 < module name = " SingleLineJavadoc " / > 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 80ddbc8 . . 51156f1 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 63 , 4 + 63 , 8 @ @ 
 
 < ! - - Should be solved after fixing https : / / github . com / checkstyle / checkstyle / issues / 1805 - - > 
 < suppress checks = " IllegalType " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] | ( AbstractTypeAwareCheck | TryHandler | SlistHandler | PrimordialHandler | MethodCallHandler | MemberDefHandler | IndentationCheck | IfHandler | HandlerFactory | CaseHandler | BlockParentHandler | AbstractExpressionHandler | JavadocMethodCheck | DetectorOptions ) \ . java " / > 
 + 
 + < ! - - Till https : / / github . com / checkstyle / checkstyle / issues / 1854 - - > 
 + < suppress checks = " TrailingComment " files = " ( InnerAssignmentCheck \ . java | OperatorWrapCheck \ . java | XMLLoggerTest \ . java | AbbreviationAsWordInNameCheckTest \ . java ) " / > 
 + 
 < / suppressions >
