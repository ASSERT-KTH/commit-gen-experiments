BLEU SCORE: 0.06837203339116285

TEST MSG: Issue # 3632 : several Travils items were moved to travis . sh
GENERATED MSG: Issue # 3159 : Reduce the number of tasks performed by Travis CI

TEST DIFF (one line): diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh <nl> index 856ad2d . . 5b8239e 100755 <nl> - - - a / . ci / travis / travis . sh <nl> + + + b / . ci / travis / travis . sh <nl> @ @ - 4 , 6 + 4 , 40 @ @ set - e <nl> <nl> case " $ GOAL " in <nl> <nl> + nondex ) <nl> + mvn - - fail - never clean nondex : nondex <nl> + cat ` grep - RlE ' td class = . x ' . nondex / | cat ` < / dev / null > output . txt <nl> + RESULT = $ ( cat output . txt | wc - c ) <nl> + cat output . txt <nl> + echo ' Size of output : ' $ RESULT <nl> + if [ [ $ RESULT ! = 0 ] ] ; then false ; fi <nl> + ; ; <nl> + <nl> + assembly - run - all - jar ) <nl> + mvn clean package - Passembly <nl> + CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + echo version : $ CS _ POM _ VERSION <nl> + java - jar target / checkstyle - $ CS _ POM _ VERSION - all . jar - c / google _ checks . xml \ <nl> + src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / InputNoLineWrapGood . java > output . log <nl> + if grep - vE ' ( Starting audit ) | ( warning ) | ( Audit done . ) ' output . log ; then exit 1 ; fi <nl> + if grep ' warning ' output . log ; then exit 1 ; fi <nl> + ; ; <nl> + <nl> + sonarqube ) <nl> + if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi <nl> + mvn clean package cobertura : cobertura sonar : sonar \ <nl> + - Dsonar . host . url = https : / / sonarqube . com \ <nl> + - Dsonar . login = $ SONAR _ TOKEN \ <nl> + - Dcobertura . report . format = xml - Dmaven . test . failure . ignore = true \ <nl> + - Dcheckstyle . skip = true - Dpmd . skip = true - Dcheckstyle . ant . skip = true <nl> + ; ; <nl> + <nl> + release - dry - run ) <nl> + mvn release : prepare - DdryRun = true - - batch - mode - Darguments = ' - DskipTests - DskipITs \ <nl> + - Dcobertura . skip = true - Dpmd . skip = true - Dfindbugs . skip = true - Dxml . skip = true \ <nl> + - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dgpg . skip = true ' <nl> + ; ; <nl> + <nl> releasenotes - gen ) <nl> . ci / travis / xtr _ releasenotes - gen . sh <nl> ; ; <nl> diff - - git a / . travis . yml b / . travis . yml <nl> index bdb0174 . . e358635 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 24 , 7 + 24 , 11 @ @ matrix : <nl> include : <nl> # unit tests ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> - env : DESC = " tests and deploy " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " DEPLOY = " true " <nl> + env : <nl> + - DESC = " tests and deploy " <nl> + - CMD = " mvn clean integration - test failsafe : verify " <nl> + - COVERAGE _ CMD = " " <nl> + - DEPLOY = " true " <nl> <nl> # checkstyle ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> @ @ - 50 , 11 + 54 , 8 @ @ matrix : <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " NonDex " <nl> - - CMD1 = " mvn - - fail - never clean nondex : nondex " <nl> - - CMD2 = " & & cat ` grep - RlE ' td class = . x ' . nondex / | cat ` < / dev / null > output . txt " <nl> - - CMD3 = " & & RESULT = \ $ ( cat output . txt | wc - c ) & & cat output . txt " <nl> - - CMD4 = " & & echo ' Size of output : ' \ $ RESULT & & if [ [ \ $ RESULT ! = 0 ] ] ; then false ; fi " <nl> - - CMD = $ CMD1 $ CMD2 $ CMD3 $ CMD4 <nl> + - GOAL = " nondex " <nl> + - CMD = " . / . ci / travis / travis . sh " <nl> - COVERAGE _ CMD = " " <nl> <nl> # site ( oraclejdk8 as ' site ' success is required to be sure that on release time all will be ok , admins will use oracle8 version ) <nl> @ @ - 72 , 26 + 73 , 15 @ @ matrix : <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " assembly & run ' - all ' jar " <nl> - - CMD1 = " mvn clean package - Passembly " <nl> - - CMD2 = " & & CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) " <nl> - - CMD3 = " & & echo version : \ $ CS _ POM _ VERSION " <nl> - - CMD4 = " & & java - jar target / checkstyle - \ $ CS _ POM _ VERSION - all . jar - c / google _ checks . xml " <nl> - - CMD5 = " src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / InputNoLineWrapGood . java > output . log " <nl> - - CMD6 = " & & if grep - vE ' ( Starting audit ) | ( warning ) | ( Audit done . ) ' output . log ; then exit 1 ; fi " <nl> - - CMD7 = " & & if grep ' warning ' output . log ; then exit 1 ; fi " <nl> - - CMD = $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 <nl> + - GOAL = " assembly - run - all - jar " <nl> + - CMD = " . / . ci / travis / travis . sh " <nl> - COVERAGE _ CMD = " " <nl> # https : / / sonarqube . com ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " sonarqube . com " <nl> - - CMD1 = " if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi " <nl> - - CMD2 = " & & mvn clean package cobertura : cobertura sonar : sonar " <nl> - - CMD3 = " - Dsonar . host . url = https : / / sonarqube . com " <nl> - - CMD4 = " - Dsonar . login = \ $ SONAR _ TOKEN " <nl> - - CMD5 = " - Dcobertura . report . format = xml - Dmaven . test . failure . ignore = true " <nl> - - CMD6 = " - Dcheckstyle . skip = true - Dpmd . skip = true - Dcheckstyle . ant . skip = true " <nl> - - CMD = $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 <nl> + - GOAL = " sonarqube " <nl> + - CMD = " . / . ci / travis / travis . sh " <nl> - COVERAGE _ CMD = " " <nl> <nl> # NoExceptiontest - Checkstyle , sevntu - checkstyle ( oraclejdk8 ) <nl> @ @ - 222 , 10 + 212 , 8 @ @ matrix : <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " release dry run " <nl> - - CMD1 = " mvn release : prepare - DdryRun = true - - batch - mode - Darguments = ' - DskipTests - DskipITs " <nl> - - CMD2 = " - Dcobertura . skip = true - Dpmd . skip = true - Dfindbugs . skip = true - Dxml . skip = true " <nl> - - CMD3 = " - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dgpg . skip = true ' " <nl> - - CMD = $ CMD1 $ CMD2 $ CMD3 <nl> + - GOAL = " release - dry - run " <nl> + - CMD = " . / . ci / travis / travis . sh " <nl> - COVERAGE _ CMD = " " <nl> <nl> # unit tests in German locale ( oraclejdk8 )
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> index 1a5fe91 . . 67fc54d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> @ @ - 236 , 9 + 236 , 9 @ @ public abstract class AbstractExpressionHandler { <nl> * <nl> * @ return the start of the specified line <nl> * / <nl> - protected final int getLineStart ( String line ) { <nl> + private int getLineStart ( String line ) { <nl> int index = 0 ; <nl> - while ( index < line . length ( ) & & Character . isWhitespace ( line . charAt ( index ) ) ) { <nl> + while ( Character . isWhitespace ( line . charAt ( index ) ) ) { <nl> index + + ; <nl> } <nl> return CommonUtils . lengthExpandedTabs ( <nl> @ @ - 256 , 27 + 256 , 6 @ @ public abstract class AbstractExpressionHandler { <nl> } <nl> <nl> / * * <nl> - * Check the indentation of consecutive lines for the expression we are <nl> - * handling . <nl> - * <nl> - * @ param startLine the first line to check <nl> - * @ param endLine the last line to check <nl> - * @ param indentLevel the required indent level <nl> - * / <nl> - protected final void checkLinesIndent ( int startLine , int endLine , <nl> - IndentLevel indentLevel ) { <nl> - / / check first line <nl> - checkLineIndent ( startLine , indentLevel ) ; <nl> - <nl> - / / check following lines <nl> - final IndentLevel offsetLevel = <nl> - new IndentLevel ( indentLevel , getBasicOffset ( ) ) ; <nl> - for ( int i = startLine + 1 ; i < = endLine ; i + + ) { <nl> - checkLineIndent ( i , offsetLevel ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> * Check the indentation for a set of lines . <nl> * <nl> * @ param lines the set of lines to check <nl> @ @ - 329 , 22 + 308 , 6 @ @ public abstract class AbstractExpressionHandler { <nl> } <nl> <nl> / * * <nl> - * Check the indent level for a single line . <nl> - * <nl> - * @ param lineNum the line number to check <nl> - * @ param indentLevel the required indent level <nl> - * / <nl> - private void checkLineIndent ( int lineNum , IndentLevel indentLevel ) { <nl> - final String line = indentCheck . getLine ( lineNum - 1 ) ; <nl> - if ( ! line . isEmpty ( ) ) { <nl> - final int start = getLineStart ( line ) ; <nl> - if ( indentLevel . isGreaterThan ( start ) ) { <nl> - logChildError ( lineNum , start , indentLevel ) ; <nl> - } <nl> - } <nl> - } <nl> - <nl> - / * * <nl> * Check the indentation for a single line . <nl> * <nl> * @ param lineNum the number of the line to check <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ImportHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ImportHandler . java <nl> index d1a93c3 . . 54fc104 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ImportHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ImportHandler . java <nl> @ @ - 43 , 12 + 43 , 14 @ @ public class ImportHandler extends AbstractExpressionHandler { <nl> <nl> @ Override <nl> public void checkIndentation ( ) { <nl> - final int lineStart = getMainAst ( ) . getLineNo ( ) ; <nl> - final DetailAST semi = getMainAst ( ) . findFirstToken ( TokenTypes . SEMI ) ; <nl> - final int lineEnd = semi . getLineNo ( ) ; <nl> + final int columnNo = expandedTabsColumnNo ( getMainAst ( ) ) ; <nl> <nl> - if ( getMainAst ( ) . getLineNo ( ) ! = lineEnd ) { <nl> - checkLinesIndent ( lineStart , lineEnd , getIndent ( ) ) ; <nl> + if ( ! getIndent ( ) . isAcceptable ( columnNo ) & & isOnStartOfLine ( getMainAst ( ) ) ) { <nl> + logError ( getMainAst ( ) , " " , columnNo ) ; <nl> } <nl> + <nl> + final DetailAST semi = getMainAst ( ) . findFirstToken ( TokenTypes . SEMI ) ; <nl> + <nl> + checkWrappingIndentation ( getMainAst ( ) , semi ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> index 7e1ff94 . . 2127ba6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> @ @ - 201 , 7 + 201 , 8 @ @ public class LineWrappingHandler { <nl> & & node . equals ( lastAnnotationNode ) ; <nl> if ( isCurrentNodeCloseAnnotationAloneInLine <nl> | | node . getType ( ) = = TokenTypes . AT <nl> - & & parentNode . getParent ( ) . getType ( ) = = TokenTypes . MODIFIERS ) { <nl> + & & ( parentNode . getParent ( ) . getType ( ) = = TokenTypes . MODIFIERS <nl> + | | parentNode . getParent ( ) . getType ( ) = = TokenTypes . ANNOTATIONS ) ) { <nl> logWarningMessage ( node , firstNodeIndent ) ; <nl> } <nl> else { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PackageDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PackageDefHandler . java <nl> index 6ab177d . . d113657 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PackageDefHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PackageDefHandler . java <nl> @ @ - 44 , 12 + 44 , 13 @ @ public class PackageDefHandler extends AbstractExpressionHandler { <nl> @ Override <nl> public void checkIndentation ( ) { <nl> final int columnNo = expandedTabsColumnNo ( getMainAst ( ) ) ; <nl> - if ( ! getIndent ( ) . isAcceptable ( columnNo ) ) { <nl> + <nl> + if ( ! getIndent ( ) . isAcceptable ( columnNo ) & & isOnStartOfLine ( getMainAst ( ) ) ) { <nl> logError ( getMainAst ( ) , " " , columnNo ) ; <nl> } <nl> <nl> - checkLinesIndent ( getMainAst ( ) . getLineNo ( ) , <nl> - getMainAst ( ) . findFirstToken ( TokenTypes . SEMI ) . getLineNo ( ) , <nl> - getIndent ( ) ) ; <nl> + final DetailAST semi = getMainAst ( ) . findFirstToken ( TokenTypes . SEMI ) ; <nl> + <nl> + checkWrappingIndentation ( getMainAst ( ) , semi ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> index 4785834 . . 1bbed90 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> @ @ - 1463 , 7 + 1463 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " basicOffset " , " 8 " ) ; <nl> checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> final String [ ] expected = { <nl> - " 4 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " import " , 2 , 8 ) , <nl> + " 4 : " + getCheckMessage ( MSG _ ERROR , " . " , 2 , 4 ) , <nl> + " 5 : " + getCheckMessage ( MSG _ ERROR , " import " , 1 , 0 ) , <nl> } ; <nl> verifyWarns ( checkConfig , getPath ( " InputInvalidImportIndent . java " ) , expected ) ; <nl> } <nl> @ @ - 1604 , 6 + 1605 , 24 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testPackageDeclaration2 ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; <nl> + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> + final String [ ] expected = { <nl> + " 2 : " + getCheckMessage ( MSG _ ERROR , " package def " , 1 , 0 ) , <nl> + } ; <nl> + verifyWarns ( checkConfig , getNonCompilablePath ( " InputPackageDeclaration2 . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testPackageDeclaration3 ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; <nl> + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verifyWarns ( checkConfig , getPath ( " InputPackageDeclaration3 . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testLambda1 ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; <nl> checkConfig . addAttribute ( " tabWidth " , " 2 " ) ; <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration2 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration2 . java <nl> new file mode 100644 <nl> index 0000000 . . ac88911 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration2 . java <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + @ Deprecated / / indent : 1 exp : 1 <nl> + package com . puppycrawl . tools . checkstyle . checks . indentation ; / / indent : 1 exp : 0 warn <nl> + <nl> + public class InputPackageDeclaration2 { } / / indent : 0 exp : 0 <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidImportIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidImportIndent . java <nl> index 2a3830b . . f08a917 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidImportIndent . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidImportIndent . java <nl> @ @ - 1 , 7 + 1 , 10 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . indentation ; / / indent : 0 exp : 0 <nl> <nl> import java . util / / indent : 0 exp : 0 <nl> - . RandomAccess ; / / indent : 2 exp : 8 warn <nl> + . RandomAccess ; import java . util . RandomAccess ; / / indent : 2 exp : 4 warn <nl> + import java . util . RandomAccess ; / / indent : 1 exp : 0 warn <nl> + import java . util / / indent : 0 exp : 0 <nl> + . RandomAccess ; / / indent : 19 exp : > = 8 <nl> <nl> / * * / / indent : 0 exp : 0 <nl> * This test - input is intended to be checked using following configuration : / / indent : 1 exp : 1 <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration3 . java <nl> new file mode 100644 <nl> index 0000000 . . 6a7e108 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration3 . java <nl> @ @ - 0 , 0 + 1 , 3 @ @ <nl> + / * * Comment * / package com . puppycrawl . tools . checkstyle . checks . indentation ; / / indent : 0 exp : > = 0 <nl> + <nl> + public class InputPackageDeclaration3 { } / / indent : 0 exp : 0

TEST DIFF:
diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh 
 index 856ad2d . . 5b8239e 100755 
 - - - a / . ci / travis / travis . sh 
 + + + b / . ci / travis / travis . sh 
 @ @ - 4 , 6 + 4 , 40 @ @ set - e 
 
 case " $ GOAL " in 
 
 + nondex ) 
 + mvn - - fail - never clean nondex : nondex 
 + cat ` grep - RlE ' td class = . x ' . nondex / | cat ` < / dev / null > output . txt 
 + RESULT = $ ( cat output . txt | wc - c ) 
 + cat output . txt 
 + echo ' Size of output : ' $ RESULT 
 + if [ [ $ RESULT ! = 0 ] ] ; then false ; fi 
 + ; ; 
 + 
 + assembly - run - all - jar ) 
 + mvn clean package - Passembly 
 + CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + echo version : $ CS _ POM _ VERSION 
 + java - jar target / checkstyle - $ CS _ POM _ VERSION - all . jar - c / google _ checks . xml \ 
 + src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / InputNoLineWrapGood . java > output . log 
 + if grep - vE ' ( Starting audit ) | ( warning ) | ( Audit done . ) ' output . log ; then exit 1 ; fi 
 + if grep ' warning ' output . log ; then exit 1 ; fi 
 + ; ; 
 + 
 + sonarqube ) 
 + if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi 
 + mvn clean package cobertura : cobertura sonar : sonar \ 
 + - Dsonar . host . url = https : / / sonarqube . com \ 
 + - Dsonar . login = $ SONAR _ TOKEN \ 
 + - Dcobertura . report . format = xml - Dmaven . test . failure . ignore = true \ 
 + - Dcheckstyle . skip = true - Dpmd . skip = true - Dcheckstyle . ant . skip = true 
 + ; ; 
 + 
 + release - dry - run ) 
 + mvn release : prepare - DdryRun = true - - batch - mode - Darguments = ' - DskipTests - DskipITs \ 
 + - Dcobertura . skip = true - Dpmd . skip = true - Dfindbugs . skip = true - Dxml . skip = true \ 
 + - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dgpg . skip = true ' 
 + ; ; 
 + 
 releasenotes - gen ) 
 . ci / travis / xtr _ releasenotes - gen . sh 
 ; ; 
 diff - - git a / . travis . yml b / . travis . yml 
 index bdb0174 . . e358635 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 24 , 7 + 24 , 11 @ @ matrix : 
 include : 
 # unit tests ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 - env : DESC = " tests and deploy " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " DEPLOY = " true " 
 + env : 
 + - DESC = " tests and deploy " 
 + - CMD = " mvn clean integration - test failsafe : verify " 
 + - COVERAGE _ CMD = " " 
 + - DEPLOY = " true " 
 
 # checkstyle ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 @ @ - 50 , 11 + 54 , 8 @ @ matrix : 
 - jdk : oraclejdk8 
 env : 
 - DESC = " NonDex " 
 - - CMD1 = " mvn - - fail - never clean nondex : nondex " 
 - - CMD2 = " & & cat ` grep - RlE ' td class = . x ' . nondex / | cat ` < / dev / null > output . txt " 
 - - CMD3 = " & & RESULT = \ $ ( cat output . txt | wc - c ) & & cat output . txt " 
 - - CMD4 = " & & echo ' Size of output : ' \ $ RESULT & & if [ [ \ $ RESULT ! = 0 ] ] ; then false ; fi " 
 - - CMD = $ CMD1 $ CMD2 $ CMD3 $ CMD4 
 + - GOAL = " nondex " 
 + - CMD = " . / . ci / travis / travis . sh " 
 - COVERAGE _ CMD = " " 
 
 # site ( oraclejdk8 as ' site ' success is required to be sure that on release time all will be ok , admins will use oracle8 version ) 
 @ @ - 72 , 26 + 73 , 15 @ @ matrix : 
 - jdk : oraclejdk8 
 env : 
 - DESC = " assembly & run ' - all ' jar " 
 - - CMD1 = " mvn clean package - Passembly " 
 - - CMD2 = " & & CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) " 
 - - CMD3 = " & & echo version : \ $ CS _ POM _ VERSION " 
 - - CMD4 = " & & java - jar target / checkstyle - \ $ CS _ POM _ VERSION - all . jar - c / google _ checks . xml " 
 - - CMD5 = " src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / InputNoLineWrapGood . java > output . log " 
 - - CMD6 = " & & if grep - vE ' ( Starting audit ) | ( warning ) | ( Audit done . ) ' output . log ; then exit 1 ; fi " 
 - - CMD7 = " & & if grep ' warning ' output . log ; then exit 1 ; fi " 
 - - CMD = $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 
 + - GOAL = " assembly - run - all - jar " 
 + - CMD = " . / . ci / travis / travis . sh " 
 - COVERAGE _ CMD = " " 
 # https : / / sonarqube . com ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - DESC = " sonarqube . com " 
 - - CMD1 = " if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi " 
 - - CMD2 = " & & mvn clean package cobertura : cobertura sonar : sonar " 
 - - CMD3 = " - Dsonar . host . url = https : / / sonarqube . com " 
 - - CMD4 = " - Dsonar . login = \ $ SONAR _ TOKEN " 
 - - CMD5 = " - Dcobertura . report . format = xml - Dmaven . test . failure . ignore = true " 
 - - CMD6 = " - Dcheckstyle . skip = true - Dpmd . skip = true - Dcheckstyle . ant . skip = true " 
 - - CMD = $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 
 + - GOAL = " sonarqube " 
 + - CMD = " . / . ci / travis / travis . sh " 
 - COVERAGE _ CMD = " " 
 
 # NoExceptiontest - Checkstyle , sevntu - checkstyle ( oraclejdk8 ) 
 @ @ - 222 , 10 + 212 , 8 @ @ matrix : 
 - jdk : oraclejdk8 
 env : 
 - DESC = " release dry run " 
 - - CMD1 = " mvn release : prepare - DdryRun = true - - batch - mode - Darguments = ' - DskipTests - DskipITs " 
 - - CMD2 = " - Dcobertura . skip = true - Dpmd . skip = true - Dfindbugs . skip = true - Dxml . skip = true " 
 - - CMD3 = " - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dgpg . skip = true ' " 
 - - CMD = $ CMD1 $ CMD2 $ CMD3 
 + - GOAL = " release - dry - run " 
 + - CMD = " . / . ci / travis / travis . sh " 
 - COVERAGE _ CMD = " " 
 
 # unit tests in German locale ( oraclejdk8 )

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 index 1a5fe91 . . 67fc54d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 @ @ - 236 , 9 + 236 , 9 @ @ public abstract class AbstractExpressionHandler { 
 * 
 * @ return the start of the specified line 
 * / 
 - protected final int getLineStart ( String line ) { 
 + private int getLineStart ( String line ) { 
 int index = 0 ; 
 - while ( index < line . length ( ) & & Character . isWhitespace ( line . charAt ( index ) ) ) { 
 + while ( Character . isWhitespace ( line . charAt ( index ) ) ) { 
 index + + ; 
 } 
 return CommonUtils . lengthExpandedTabs ( 
 @ @ - 256 , 27 + 256 , 6 @ @ public abstract class AbstractExpressionHandler { 
 } 
 
 / * * 
 - * Check the indentation of consecutive lines for the expression we are 
 - * handling . 
 - * 
 - * @ param startLine the first line to check 
 - * @ param endLine the last line to check 
 - * @ param indentLevel the required indent level 
 - * / 
 - protected final void checkLinesIndent ( int startLine , int endLine , 
 - IndentLevel indentLevel ) { 
 - / / check first line 
 - checkLineIndent ( startLine , indentLevel ) ; 
 - 
 - / / check following lines 
 - final IndentLevel offsetLevel = 
 - new IndentLevel ( indentLevel , getBasicOffset ( ) ) ; 
 - for ( int i = startLine + 1 ; i < = endLine ; i + + ) { 
 - checkLineIndent ( i , offsetLevel ) ; 
 - } 
 - } 
 - 
 - / * * 
 * Check the indentation for a set of lines . 
 * 
 * @ param lines the set of lines to check 
 @ @ - 329 , 22 + 308 , 6 @ @ public abstract class AbstractExpressionHandler { 
 } 
 
 / * * 
 - * Check the indent level for a single line . 
 - * 
 - * @ param lineNum the line number to check 
 - * @ param indentLevel the required indent level 
 - * / 
 - private void checkLineIndent ( int lineNum , IndentLevel indentLevel ) { 
 - final String line = indentCheck . getLine ( lineNum - 1 ) ; 
 - if ( ! line . isEmpty ( ) ) { 
 - final int start = getLineStart ( line ) ; 
 - if ( indentLevel . isGreaterThan ( start ) ) { 
 - logChildError ( lineNum , start , indentLevel ) ; 
 - } 
 - } 
 - } 
 - 
 - / * * 
 * Check the indentation for a single line . 
 * 
 * @ param lineNum the number of the line to check 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ImportHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ImportHandler . java 
 index d1a93c3 . . 54fc104 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ImportHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ImportHandler . java 
 @ @ - 43 , 12 + 43 , 14 @ @ public class ImportHandler extends AbstractExpressionHandler { 
 
 @ Override 
 public void checkIndentation ( ) { 
 - final int lineStart = getMainAst ( ) . getLineNo ( ) ; 
 - final DetailAST semi = getMainAst ( ) . findFirstToken ( TokenTypes . SEMI ) ; 
 - final int lineEnd = semi . getLineNo ( ) ; 
 + final int columnNo = expandedTabsColumnNo ( getMainAst ( ) ) ; 
 
 - if ( getMainAst ( ) . getLineNo ( ) ! = lineEnd ) { 
 - checkLinesIndent ( lineStart , lineEnd , getIndent ( ) ) ; 
 + if ( ! getIndent ( ) . isAcceptable ( columnNo ) & & isOnStartOfLine ( getMainAst ( ) ) ) { 
 + logError ( getMainAst ( ) , " " , columnNo ) ; 
 } 
 + 
 + final DetailAST semi = getMainAst ( ) . findFirstToken ( TokenTypes . SEMI ) ; 
 + 
 + checkWrappingIndentation ( getMainAst ( ) , semi ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 index 7e1ff94 . . 2127ba6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 @ @ - 201 , 7 + 201 , 8 @ @ public class LineWrappingHandler { 
 & & node . equals ( lastAnnotationNode ) ; 
 if ( isCurrentNodeCloseAnnotationAloneInLine 
 | | node . getType ( ) = = TokenTypes . AT 
 - & & parentNode . getParent ( ) . getType ( ) = = TokenTypes . MODIFIERS ) { 
 + & & ( parentNode . getParent ( ) . getType ( ) = = TokenTypes . MODIFIERS 
 + | | parentNode . getParent ( ) . getType ( ) = = TokenTypes . ANNOTATIONS ) ) { 
 logWarningMessage ( node , firstNodeIndent ) ; 
 } 
 else { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PackageDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PackageDefHandler . java 
 index 6ab177d . . d113657 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PackageDefHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PackageDefHandler . java 
 @ @ - 44 , 12 + 44 , 13 @ @ public class PackageDefHandler extends AbstractExpressionHandler { 
 @ Override 
 public void checkIndentation ( ) { 
 final int columnNo = expandedTabsColumnNo ( getMainAst ( ) ) ; 
 - if ( ! getIndent ( ) . isAcceptable ( columnNo ) ) { 
 + 
 + if ( ! getIndent ( ) . isAcceptable ( columnNo ) & & isOnStartOfLine ( getMainAst ( ) ) ) { 
 logError ( getMainAst ( ) , " " , columnNo ) ; 
 } 
 
 - checkLinesIndent ( getMainAst ( ) . getLineNo ( ) , 
 - getMainAst ( ) . findFirstToken ( TokenTypes . SEMI ) . getLineNo ( ) , 
 - getIndent ( ) ) ; 
 + final DetailAST semi = getMainAst ( ) . findFirstToken ( TokenTypes . SEMI ) ; 
 + 
 + checkWrappingIndentation ( getMainAst ( ) , semi ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 index 4785834 . . 1bbed90 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 @ @ - 1463 , 7 + 1463 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " basicOffset " , " 8 " ) ; 
 checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 final String [ ] expected = { 
 - " 4 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " import " , 2 , 8 ) , 
 + " 4 : " + getCheckMessage ( MSG _ ERROR , " . " , 2 , 4 ) , 
 + " 5 : " + getCheckMessage ( MSG _ ERROR , " import " , 1 , 0 ) , 
 } ; 
 verifyWarns ( checkConfig , getPath ( " InputInvalidImportIndent . java " ) , expected ) ; 
 } 
 @ @ - 1604 , 6 + 1605 , 24 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void testPackageDeclaration2 ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; 
 + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 + final String [ ] expected = { 
 + " 2 : " + getCheckMessage ( MSG _ ERROR , " package def " , 1 , 0 ) , 
 + } ; 
 + verifyWarns ( checkConfig , getNonCompilablePath ( " InputPackageDeclaration2 . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testPackageDeclaration3 ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; 
 + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verifyWarns ( checkConfig , getPath ( " InputPackageDeclaration3 . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testLambda1 ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; 
 checkConfig . addAttribute ( " tabWidth " , " 2 " ) ; 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration2 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration2 . java 
 new file mode 100644 
 index 0000000 . . ac88911 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration2 . java 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + @ Deprecated / / indent : 1 exp : 1 
 + package com . puppycrawl . tools . checkstyle . checks . indentation ; / / indent : 1 exp : 0 warn 
 + 
 + public class InputPackageDeclaration2 { } / / indent : 0 exp : 0 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidImportIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidImportIndent . java 
 index 2a3830b . . f08a917 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidImportIndent . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidImportIndent . java 
 @ @ - 1 , 7 + 1 , 10 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . indentation ; / / indent : 0 exp : 0 
 
 import java . util / / indent : 0 exp : 0 
 - . RandomAccess ; / / indent : 2 exp : 8 warn 
 + . RandomAccess ; import java . util . RandomAccess ; / / indent : 2 exp : 4 warn 
 + import java . util . RandomAccess ; / / indent : 1 exp : 0 warn 
 + import java . util / / indent : 0 exp : 0 
 + . RandomAccess ; / / indent : 19 exp : > = 8 
 
 / * * / / indent : 0 exp : 0 
 * This test - input is intended to be checked using following configuration : / / indent : 1 exp : 1 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration3 . java 
 new file mode 100644 
 index 0000000 . . 6a7e108 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputPackageDeclaration3 . java 
 @ @ - 0 , 0 + 1 , 3 @ @ 
 + / * * Comment * / package com . puppycrawl . tools . checkstyle . checks . indentation ; / / indent : 0 exp : > = 0 
 + 
 + public class InputPackageDeclaration3 { } / / indent : 0 exp : 0
