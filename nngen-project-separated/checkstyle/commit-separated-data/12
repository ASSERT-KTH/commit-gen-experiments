BLEU SCORE: 0.8801117367933934

TEST MSG: Issue # 6586 : aligned javadoc / xdoc for SimplifyBooleanReturn
GENERATED MSG: Issue # 6586 : aligned javadoc / xdoc for SimplifyBooleanExpression

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java <nl> index f036b75 . . b2bdb28 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java <nl> @ @ - 26 , 15 + 26 , 33 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> / * * <nl> * < p > <nl> - * Checks for overly complicated boolean return statements . <nl> - * Idea shamelessly stolen from the equivalent PMD rule ( pmd . sourceforge . net ) . <nl> + * Checks for over - complicated boolean return statements . <nl> + * For example the following code <nl> + * < / p > <nl> + * < pre > <nl> + * if ( valid ( ) ) <nl> + * return false ; <nl> + * else <nl> + * return true ; <nl> + * < / pre > <nl> + * < p > <nl> + * could be written as <nl> + * < / p > <nl> + * < pre > <nl> + * return ! valid ( ) ; <nl> + * < / pre > <nl> + * < p > <nl> + * The idea for this Check has been shamelessly stolen from the equivalent <nl> + * < a href = " http : / / pmd . sourceforge . net " > PMD < / a > rule . <nl> * < / p > <nl> * < p > <nl> - * An example of how to configure the check is : <nl> + * To configure the check : <nl> * < / p > <nl> * < pre > <nl> - * & lt ; module name = " SimplifyBooleanReturn " / & gt ; <nl> + * & lt ; module name = & quot ; SimplifyBooleanReturn & quot ; / & gt ; <nl> * < / pre > <nl> + * <nl> + * @ since 3 . 0 <nl> * / <nl> @ StatelessCheck <nl> public class SimplifyBooleanReturnCheck <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> index 77671f5 . . ca1b6dc 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> @ @ - 123 , 6 + 123 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { <nl> " RequireThis " , <nl> " RightCurly " , <nl> " SimplifyBooleanExpression " , <nl> + " SimplifyBooleanReturn " , <nl> " StaticVariableName " , <nl> " StringLiteralEquality " , <nl> " SuppressWarnings " , <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index 9c16702 . . c9c97e0 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 4328 , 8 + 4328 , 8 @ @ class C { <nl> < / section > <nl> <nl> < section name = " SimplifyBooleanReturn " > <nl> + < p > Since Checkstyle 3 . 0 < / p > <nl> < subsection name = " Description " id = " SimplifyBooleanReturn _ Description " > <nl> - < p > Since Checkstyle 3 . 0 < / p > <nl> < p > <nl> Checks for over - complicated boolean return statements . For example <nl> the following code
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java <nl> index a949fdd . . 9a4dfe7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java <nl> @ @ - 227 , 7 + 227 , 8 @ @ public final class BlockCommentPosition { <nl> private static boolean isOnPlainClassMember ( DetailAST blockComment , int memberType ) { <nl> DetailAST parent = blockComment . getParent ( ) ; <nl> / / type could be in fully qualified form , so we go up to Type token <nl> - while ( parent ! = null & & parent . getType ( ) = = TokenTypes . DOT ) { <nl> + while ( parent ! = null & & ( parent . getType ( ) = = TokenTypes . DOT <nl> + | | parent . getType ( ) = = TokenTypes . ARRAY _ DECLARATOR ) ) { <nl> parent = parent . getParent ( ) ; <nl> } <nl> return parent ! = null <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java <nl> index b80cc1b . . f5ba8af 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java <nl> @ @ - 76 , 6 + 76 , 7 @ @ public class SummaryJavadocCheckTest extends AbstractModuleTestSupport { <nl> " 126 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> " 132 : " + getCheckMessage ( MSG _ SUMMARY _ FIRST _ SENTENCE ) , <nl> " 137 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> + " 140 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputSummaryJavadocIncorrect . java " ) , expected ) ; <nl> } <nl> @ @ - 117 , 6 + 118 , 7 @ @ public class SummaryJavadocCheckTest extends AbstractModuleTestSupport { <nl> " 126 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> " 132 : " + getCheckMessage ( MSG _ SUMMARY _ FIRST _ SENTENCE ) , <nl> " 137 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> + " 140 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> } ; <nl> <nl> createChecker ( checkConfig ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java <nl> index 0d76d4a . . 8a17463 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class BlockCommentPositionTest extends AbstractPathTestSupport { <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnClass . java " , <nl> BlockCommentPosition : : isOnClass , 3 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnMethod . java " , <nl> - BlockCommentPosition : : isOnMethod , 5 ) , <nl> + BlockCommentPosition : : isOnMethod , 6 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnField . java " , <nl> BlockCommentPosition : : isOnField , 3 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnEnum . java " , <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java <nl> index 937862a . . ca00727 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java <nl> @ @ - 136 , 4 + 136 , 7 @ @ class InputSummaryJavadocIncorrect { <nl> <nl> / * * * / <nl> < T > T foo8 ( T t ) { return null ; } <nl> + <nl> + / * * * / <nl> + String [ ] foo9 ( ) { return null ; } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java <nl> index ef496d6 . . 0f3de73 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java <nl> @ @ - 36 , 4 + 36 , 11 @ @ public class InputBlockCommentPositionOnMethod { <nl> < T > T method4 ( T t ) { <nl> return null ; <nl> } <nl> + <nl> + / * * <nl> + * I ' m a javadoc <nl> + * / <nl> + String [ ] method5 ( ) { <nl> + return null ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java 
 index f036b75 . . b2bdb28 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java 
 @ @ - 26 , 15 + 26 , 33 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 / * * 
 * < p > 
 - * Checks for overly complicated boolean return statements . 
 - * Idea shamelessly stolen from the equivalent PMD rule ( pmd . sourceforge . net ) . 
 + * Checks for over - complicated boolean return statements . 
 + * For example the following code 
 + * < / p > 
 + * < pre > 
 + * if ( valid ( ) ) 
 + * return false ; 
 + * else 
 + * return true ; 
 + * < / pre > 
 + * < p > 
 + * could be written as 
 + * < / p > 
 + * < pre > 
 + * return ! valid ( ) ; 
 + * < / pre > 
 + * < p > 
 + * The idea for this Check has been shamelessly stolen from the equivalent 
 + * < a href = " http : / / pmd . sourceforge . net " > PMD < / a > rule . 
 * < / p > 
 * < p > 
 - * An example of how to configure the check is : 
 + * To configure the check : 
 * < / p > 
 * < pre > 
 - * & lt ; module name = " SimplifyBooleanReturn " / & gt ; 
 + * & lt ; module name = & quot ; SimplifyBooleanReturn & quot ; / & gt ; 
 * < / pre > 
 + * 
 + * @ since 3 . 0 
 * / 
 @ StatelessCheck 
 public class SimplifyBooleanReturnCheck 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 index 77671f5 . . ca1b6dc 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 @ @ - 123 , 6 + 123 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { 
 " RequireThis " , 
 " RightCurly " , 
 " SimplifyBooleanExpression " , 
 + " SimplifyBooleanReturn " , 
 " StaticVariableName " , 
 " StringLiteralEquality " , 
 " SuppressWarnings " , 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index 9c16702 . . c9c97e0 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 4328 , 8 + 4328 , 8 @ @ class C { 
 < / section > 
 
 < section name = " SimplifyBooleanReturn " > 
 + < p > Since Checkstyle 3 . 0 < / p > 
 < subsection name = " Description " id = " SimplifyBooleanReturn _ Description " > 
 - < p > Since Checkstyle 3 . 0 < / p > 
 < p > 
 Checks for over - complicated boolean return statements . For example 
 the following code

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java 
 index a949fdd . . 9a4dfe7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java 
 @ @ - 227 , 7 + 227 , 8 @ @ public final class BlockCommentPosition { 
 private static boolean isOnPlainClassMember ( DetailAST blockComment , int memberType ) { 
 DetailAST parent = blockComment . getParent ( ) ; 
 / / type could be in fully qualified form , so we go up to Type token 
 - while ( parent ! = null & & parent . getType ( ) = = TokenTypes . DOT ) { 
 + while ( parent ! = null & & ( parent . getType ( ) = = TokenTypes . DOT 
 + | | parent . getType ( ) = = TokenTypes . ARRAY _ DECLARATOR ) ) { 
 parent = parent . getParent ( ) ; 
 } 
 return parent ! = null 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java 
 index b80cc1b . . f5ba8af 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java 
 @ @ - 76 , 6 + 76 , 7 @ @ public class SummaryJavadocCheckTest extends AbstractModuleTestSupport { 
 " 126 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 " 132 : " + getCheckMessage ( MSG _ SUMMARY _ FIRST _ SENTENCE ) , 
 " 137 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 + " 140 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputSummaryJavadocIncorrect . java " ) , expected ) ; 
 } 
 @ @ - 117 , 6 + 118 , 7 @ @ public class SummaryJavadocCheckTest extends AbstractModuleTestSupport { 
 " 126 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 " 132 : " + getCheckMessage ( MSG _ SUMMARY _ FIRST _ SENTENCE ) , 
 " 137 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 + " 140 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 } ; 
 
 createChecker ( checkConfig ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java 
 index 0d76d4a . . 8a17463 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class BlockCommentPositionTest extends AbstractPathTestSupport { 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnClass . java " , 
 BlockCommentPosition : : isOnClass , 3 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnMethod . java " , 
 - BlockCommentPosition : : isOnMethod , 5 ) , 
 + BlockCommentPosition : : isOnMethod , 6 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnField . java " , 
 BlockCommentPosition : : isOnField , 3 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnEnum . java " , 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java 
 index 937862a . . ca00727 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java 
 @ @ - 136 , 4 + 136 , 7 @ @ class InputSummaryJavadocIncorrect { 
 
 / * * * / 
 < T > T foo8 ( T t ) { return null ; } 
 + 
 + / * * * / 
 + String [ ] foo9 ( ) { return null ; } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java 
 index ef496d6 . . 0f3de73 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java 
 @ @ - 36 , 4 + 36 , 11 @ @ public class InputBlockCommentPositionOnMethod { 
 < T > T method4 ( T t ) { 
 return null ; 
 } 
 + 
 + / * * 
 + * I ' m a javadoc 
 + * / 
 + String [ ] method5 ( ) { 
 + return null ; 
 + } 
 }
