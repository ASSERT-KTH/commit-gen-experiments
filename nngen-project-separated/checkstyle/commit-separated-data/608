BLEU SCORE: 0.09848320372827338

TEST MSG: Issue # 4940 : fix twelfth part idea violations
GENERATED MSG: Issue # 4801 : fix some violations from the eleventh part of idea violations

TEST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index b0c8a74 . . 87304f2 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 44 , 8 + 44 , 7 @ @ <nl> < inspection _ tool class = " AnonymousClassMethodCount " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " AnonymousClassVariableHidesContainingMethodVariable " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " AnonymousFunctionJS " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> - < ! - - suppressed till GSoC project completion . . . . - - > <nl> - < inspection _ tool class = " AnonymousHasLambdaAlternative " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> + < inspection _ tool class = " AnonymousHasLambdaAlternative " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> < ! - - we are ok with anonymous classes - - > <nl> < inspection _ tool class = " AnonymousInnerClass " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " AnonymousInnerClassMayBeStatic " enabled = " true " level = " WARNING " enabled _ by _ default = " true " > <nl> @ @ - 455 , 8 + 454 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us <nl> < inspection _ tool class = " ControlFlowStatementWithoutBraces " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " Convert2Diamond " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " Convert2Lambda " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> - < ! - - disabled till GSoC project completion - - > <nl> - < inspection _ tool class = " Convert2MethodRef " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> + < inspection _ tool class = " Convert2MethodRef " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can <nl> distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > <nl> < inspection _ tool class = " Convert2streamapi " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> @ @ - 1230 , 8 + 1228 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us <nl> < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can <nl> distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > <nl> < inspection _ tool class = " Java8MapApi " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> - < ! - - Disabled till GSoC completion - - > <nl> - < inspection _ tool class = " Java8MapForEach " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> + < inspection _ tool class = " Java8MapForEach " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " JavaDoc " enabled = " true " level = " ERROR " enabled _ by _ default = " true " > <nl> < option name = " TOP _ LEVEL _ CLASS _ OPTIONS " > <nl> < value > <nl> @ @ - 1522 , 7 + 1519 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us <nl> < / inspection _ tool > <nl> < ! - - we like nested method calls - - > <nl> < inspection _ tool class = " NestedMethodCall " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> - < inspection _ tool class = " NestedSwitchStatement " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> + < inspection _ tool class = " NestedSwitchStatement " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " NestedSwitchStatementJS " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " NestedSynchronizedStatement " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " NestedTryStatement " enabled = " true " level = " ERROR " enabled _ by _ default = " true " > <nl> @ @ - 1905 , 8 + 1902 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us <nl> < inspection _ tool class = " SimplifiableIfStatement " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " SimplifiableJUnitAssertion " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " SimplifyNegatedBinaryExpression " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> - < ! - - suppressed till GSoC project completion . . . . - - > <nl> - < inspection _ tool class = " SimplifyStreamApiCallChains " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> + < inspection _ tool class = " SimplifyStreamApiCallChains " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> < ! - - the only violation found is false - positive at AvoidEscapedUnicodeCharactersCheck - - > <nl> < inspection _ tool class = " SingleCharAlternation " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " SingleCharacterStartsWith " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> @ @ - 2051 , 7 + 2047 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us <nl> < inspection _ tool class = " StringBufferReplaceableByString " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " StringBufferReplaceableByStringBuilder " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " StringBufferToStringInConcatenation " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> - < inspection _ tool class = " StringCompareTo " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> + < inspection _ tool class = " StringCompareTo " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < ! - - we like it , it is not performance issue for us - - > <nl> < inspection _ tool class = " StringConcatenation " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " StringConcatenationArgumentToLogCall " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> @ @ - 2268 , 8 + 2264 , 11 @ @ isolated classes and we cannot put them to separate package as it will affect us <nl> < inspection _ tool class = " TodoComment " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> < ! - - show too much false - positives in our code - - > <nl> < inspection _ tool class = " TooBroadCatch " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> - < ! - - Disabled till GSoC completion - - > <nl> - < inspection _ tool class = " TooBroadScope " enabled = " false " level = " ERROR " enabled _ by _ default = " false " > <nl> + < inspection _ tool class = " TooBroadScope " enabled = " true " level = " ERROR " enabled _ by _ default = " false " > <nl> + < scope name = " Production " level = " ERROR " enabled = " true " > <nl> + < option name = " m _ allowConstructorAsInitializer " value = " false " / > <nl> + < option name = " m _ onlyLookAtBlocks " value = " false " / > <nl> + < / scope > <nl> < option name = " m _ allowConstructorAsInitializer " value = " false " / > <nl> < option name = " m _ onlyLookAtBlocks " value = " false " / > <nl> < / inspection _ tool > <nl> diff - - git a / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java b / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java <nl> index 11f0da5 . . 342728b 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java <nl> @ @ - 133 , 7 + 133 , 6 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport <nl> * @ param moduleConfig { @ link Configuration } instance . <nl> * @ return { @ link Checker } instance . <nl> * @ throws CheckstyleException if an exception occurs during checker configuration . <nl> - * @ noinspection BooleanParameter <nl> * / <nl> protected Checker createChecker ( Configuration moduleConfig , boolean addTreeWalker ) <nl> throws Exception { <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java <nl> index bff213a . . 72ec64d 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class PackageNameTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> private String getPath ( String packageName , String fileName ) throws IOException { <nl> - return super . getPath ( " rule521 " + packageName + File . separator + fileName ) ; <nl> + return getPath ( " rule521 " + packageName + File . separator + fileName ) ; <nl> } <nl> <nl> @ BeforeClass <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java <nl> index ef03801 . . b6523ea 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java <nl> @ @ - 322 , 7 + 322 , 7 @ @ final class PropertyCacheFile { <nl> * @ return true if the contents of external configuration resources were changed . <nl> * / <nl> private boolean areExternalResourcesChanged ( Set < ExternalResource > resources ) { <nl> - return resources . stream ( ) . filter ( resource - > { <nl> + return resources . stream ( ) . anyMatch ( resource - > { <nl> boolean changed = false ; <nl> if ( isResourceLocationInCache ( resource . location ) ) { <nl> final String contentHashSum = resource . contentHashSum ; <nl> @ @ - 335 , 7 + 335 , 7 @ @ final class PropertyCacheFile { <nl> changed = true ; <nl> } <nl> return changed ; <nl> - } ) . findFirst ( ) . isPresent ( ) ; <nl> + } ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java <nl> index d04c75b . . 3b12ffe 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java <nl> @ @ - 126 , 9 + 126 , 9 @ @ public final class FileText { <nl> / / Use the BufferedReader to break down the lines as this <nl> / / is about 30 % faster than using the <nl> / / LINE _ TERMINATOR . split ( fullText , - 1 ) method <nl> - final ArrayList < String > textLines = new ArrayList < > ( ) ; <nl> final BufferedReader reader = new BufferedReader ( new StringReader ( fullText ) ) ; <nl> try { <nl> + final ArrayList < String > textLines = new ArrayList < > ( ) ; <nl> while ( true ) { <nl> final String line = reader . readLine ( ) ; <nl> if ( line = = null ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 7c61b09 . . 8f36059 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 71 , 12 + 71 , 8 @ @ public class SuppressWarningsHolder <nl> * A thread - local holder for the list of suppression entries for the last <nl> * file parsed . <nl> * / <nl> - private static final ThreadLocal < List < Entry > > ENTRIES = new ThreadLocal < List < Entry > > ( ) { <nl> - @ Override <nl> - protected List < Entry > initialValue ( ) { <nl> - return new LinkedList < > ( ) ; <nl> - } <nl> - } ; <nl> + private static final ThreadLocal < List < Entry > > ENTRIES = <nl> + ThreadLocal . withInitial ( LinkedList : : new ) ; <nl> <nl> / * * <nl> * Returns the default alias for the source name of a check , which is the <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java <nl> index 7191d06 . . 11c0e44 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java <nl> @ @ - 164 , 8 + 164 , 7 @ @ public class EqualsHashCodeCheck <nl> final DetailAST equalsAST = detailASTDetailASTEntry . getValue ( ) ; <nl> log ( equalsAST . getLineNo ( ) , equalsAST . getColumnNo ( ) , MSG _ KEY _ HASHCODE ) ; <nl> } ) ; <nl> - objBlockWithHashCode . entrySet ( ) . forEach ( detailASTDetailASTEntry - > { <nl> - final DetailAST equalsAST = detailASTDetailASTEntry . getValue ( ) ; <nl> + objBlockWithHashCode . forEach ( ( key , equalsAST ) - > { <nl> log ( equalsAST . getLineNo ( ) , equalsAST . getColumnNo ( ) , MSG _ KEY _ EQUALS ) ; <nl> } ) ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> index 57941b0 . . c7ae8d0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> @ @ - 722 , 11 + 722 , 11 @ @ public class VisibilityModifierCheck <nl> * @ return true if all of generic type arguments are immutable . <nl> * / <nl> private boolean areImmutableTypeArguments ( List < String > typeArgsClassNames ) { <nl> - return ! typeArgsClassNames . stream ( ) . filter ( <nl> + return typeArgsClassNames . stream ( ) . noneMatch ( <nl> typeName - > { <nl> return ! immutableClassShortNames . contains ( typeName ) <nl> & & ! immutableClassCanonicalNames . contains ( typeName ) ; <nl> - } ) . findFirst ( ) . isPresent ( ) ; <nl> + } ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java <nl> index b18f5b7 . . 983a141 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java <nl> @ @ - 248 , 13 + 248 , 15 @ @ public class UnusedImportsCheck extends AbstractCheck { <nl> * @ return a set of classes referenced in the javadoc block <nl> * / <nl> private static Set < String > collectReferencesFromJavadoc ( TextBlock textBlock ) { <nl> - final Set < String > references = new HashSet < > ( ) ; <nl> final List < JavadocTag > tags = new ArrayList < > ( ) ; <nl> / / gather all the inline tags , like @ link <nl> / / INLINE tags inside BLOCKs get hidden when using ALL <nl> tags . addAll ( getValidTags ( textBlock , JavadocUtils . JavadocTagType . INLINE ) ) ; <nl> / / gather all the block - level tags , like @ throws and @ see <nl> tags . addAll ( getValidTags ( textBlock , JavadocUtils . JavadocTagType . BLOCK ) ) ; <nl> + <nl> + final Set < String > references = new HashSet < > ( ) ; <nl> + <nl> tags . stream ( ) <nl> . filter ( JavadocTag : : canReferenceImports ) <nl> . forEach ( tag - > references . addAll ( processJavadocTag ( tag ) ) ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index d25ebfa . . bf87d35 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 76 , 12 + 76 , 7 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> * to guarantee basic thread safety and avoid shared , mutable state when not necessary . <nl> * / <nl> private static final ThreadLocal < Map < String , ParseStatus > > TREE _ CACHE = <nl> - new ThreadLocal < Map < String , ParseStatus > > ( ) { <nl> - @ Override <nl> - protected Map < String , ParseStatus > initialValue ( ) { <nl> - return new HashMap < > ( ) ; <nl> - } <nl> - } ; <nl> + ThreadLocal . withInitial ( HashMap : : new ) ; <nl> <nl> / * * <nl> * The file context . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java b / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java <nl> index e752da6 . . f565438 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java <nl> @ @ - 81 , 7 + 81 , 7 @ @ public final class TokenTypesDoclet { <nl> final List < Tag > tags = Arrays . asList ( field . firstSentenceTags ( ) ) ; <nl> final String joinedTags = tags <nl> . stream ( ) <nl> - . map ( tag - > tag . toString ( ) ) <nl> + . map ( Tag : : toString ) <nl> . collect ( Collectors . joining ( " \ " , \ " " , " [ \ " " , " \ " ] " ) ) ; <nl> final String message = String . format ( Locale . ROOT , <nl> " Should be only one tag for % s . Tags % s . " , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> index 78f630e . . 2544be4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> @ @ - 147 , 11 + 147 , 11 @ @ public class DetailASTTest extends AbstractModuleTestSupport { <nl> parent . setFirstChild ( child ) ; <nl> <nl> final List < Consumer < DetailAST > > clearBranchTokenTypesMethods = Arrays . asList ( <nl> - ast - > child . setFirstChild ( ast ) , <nl> - ast - > child . setNextSibling ( ast ) , <nl> - ast - > child . addPreviousSibling ( ast ) , <nl> - ast - > child . addNextSibling ( ast ) , <nl> - ast - > child . addChild ( ast ) , <nl> + child : : setFirstChild , <nl> + child : : setNextSibling , <nl> + child : : addPreviousSibling , <nl> + child : : addNextSibling , <nl> + child : : addChild , <nl> ast - > { <nl> try { <nl> Whitebox . invokeMethod ( child , " setParent " , ast ) ; <nl> @ @ - 180 , 9 + 180 , 9 @ @ public class DetailASTTest extends AbstractModuleTestSupport { <nl> parent . setFirstChild ( child ) ; <nl> <nl> final List < Consumer < DetailAST > > clearChildCountCacheMethods = Arrays . asList ( <nl> - ast - > child . setNextSibling ( ast ) , <nl> - ast - > child . addPreviousSibling ( ast ) , <nl> - ast - > child . addNextSibling ( ast ) <nl> + child : : setNextSibling , <nl> + child : : addPreviousSibling , <nl> + child : : addNextSibling <nl> ) ; <nl> <nl> for ( Consumer < DetailAST > method : clearChildCountCacheMethods ) {
NEAREST DIFF (one line): diff - - git a / fast - forward - merge . sh b / fast - forward - merge . sh <nl> index 59134d3 . . 6f588a8 100755 <nl> - - - a / fast - forward - merge . sh <nl> + + + b / fast - forward - merge . sh <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - # ! / usr / bin / env bash <nl> + # ! / usr / bin / env bash <nl> <nl> # GitHub does not support fast - forward merge . <nl> # This script is intended to simplify merge of Pull Requests to keep history linear ( fast - forwarded ) <nl> @ @ - 22 , 6 + 22 , 9 @ @ USER _ BRANCH = $ 2 <nl> REPO = $ { FORK _ USER _ NAME } - fork <nl> LOCAL _ USER _ BRANCH = $ { FORK _ USER _ NAME } - $ { USER _ BRANCH } <nl> <nl> + echo " removing remote $ { REPO } if present . . . " <nl> + git remote rm $ { REPO } <nl> + <nl> echo " adding remote . . . " <nl> git remote add $ { REPO } https : / / github . com / $ { FORK _ USER _ NAME } / $ { GIT _ REPO } . git <nl> git fetch $ { REPO }

TEST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index b0c8a74 . . 87304f2 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 44 , 8 + 44 , 7 @ @ 
 < inspection _ tool class = " AnonymousClassMethodCount " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 < inspection _ tool class = " AnonymousClassVariableHidesContainingMethodVariable " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " AnonymousFunctionJS " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 - < ! - - suppressed till GSoC project completion . . . . - - > 
 - < inspection _ tool class = " AnonymousHasLambdaAlternative " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 + < inspection _ tool class = " AnonymousHasLambdaAlternative " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 < ! - - we are ok with anonymous classes - - > 
 < inspection _ tool class = " AnonymousInnerClass " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 < inspection _ tool class = " AnonymousInnerClassMayBeStatic " enabled = " true " level = " WARNING " enabled _ by _ default = " true " > 
 @ @ - 455 , 8 + 454 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us 
 < inspection _ tool class = " ControlFlowStatementWithoutBraces " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " Convert2Diamond " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " Convert2Lambda " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 - < ! - - disabled till GSoC project completion - - > 
 - < inspection _ tool class = " Convert2MethodRef " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 + < inspection _ tool class = " Convert2MethodRef " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can 
 distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > 
 < inspection _ tool class = " Convert2streamapi " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 @ @ - 1230 , 8 + 1228 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us 
 < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can 
 distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > 
 < inspection _ tool class = " Java8MapApi " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 - < ! - - Disabled till GSoC completion - - > 
 - < inspection _ tool class = " Java8MapForEach " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 + < inspection _ tool class = " Java8MapForEach " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " JavaDoc " enabled = " true " level = " ERROR " enabled _ by _ default = " true " > 
 < option name = " TOP _ LEVEL _ CLASS _ OPTIONS " > 
 < value > 
 @ @ - 1522 , 7 + 1519 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us 
 < / inspection _ tool > 
 < ! - - we like nested method calls - - > 
 < inspection _ tool class = " NestedMethodCall " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 - < inspection _ tool class = " NestedSwitchStatement " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 + < inspection _ tool class = " NestedSwitchStatement " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " NestedSwitchStatementJS " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " NestedSynchronizedStatement " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " NestedTryStatement " enabled = " true " level = " ERROR " enabled _ by _ default = " true " > 
 @ @ - 1905 , 8 + 1902 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us 
 < inspection _ tool class = " SimplifiableIfStatement " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " SimplifiableJUnitAssertion " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " SimplifyNegatedBinaryExpression " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 - < ! - - suppressed till GSoC project completion . . . . - - > 
 - < inspection _ tool class = " SimplifyStreamApiCallChains " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 + < inspection _ tool class = " SimplifyStreamApiCallChains " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 < ! - - the only violation found is false - positive at AvoidEscapedUnicodeCharactersCheck - - > 
 < inspection _ tool class = " SingleCharAlternation " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 < inspection _ tool class = " SingleCharacterStartsWith " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 @ @ - 2051 , 7 + 2047 , 7 @ @ isolated classes and we cannot put them to separate package as it will affect us 
 < inspection _ tool class = " StringBufferReplaceableByString " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " StringBufferReplaceableByStringBuilder " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " StringBufferToStringInConcatenation " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 - < inspection _ tool class = " StringCompareTo " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 + < inspection _ tool class = " StringCompareTo " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < ! - - we like it , it is not performance issue for us - - > 
 < inspection _ tool class = " StringConcatenation " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 < inspection _ tool class = " StringConcatenationArgumentToLogCall " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 @ @ - 2268 , 8 + 2264 , 11 @ @ isolated classes and we cannot put them to separate package as it will affect us 
 < inspection _ tool class = " TodoComment " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 < ! - - show too much false - positives in our code - - > 
 < inspection _ tool class = " TooBroadCatch " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 - < ! - - Disabled till GSoC completion - - > 
 - < inspection _ tool class = " TooBroadScope " enabled = " false " level = " ERROR " enabled _ by _ default = " false " > 
 + < inspection _ tool class = " TooBroadScope " enabled = " true " level = " ERROR " enabled _ by _ default = " false " > 
 + < scope name = " Production " level = " ERROR " enabled = " true " > 
 + < option name = " m _ allowConstructorAsInitializer " value = " false " / > 
 + < option name = " m _ onlyLookAtBlocks " value = " false " / > 
 + < / scope > 
 < option name = " m _ allowConstructorAsInitializer " value = " false " / > 
 < option name = " m _ onlyLookAtBlocks " value = " false " / > 
 < / inspection _ tool > 
 diff - - git a / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java b / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java 
 index 11f0da5 . . 342728b 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java 
 @ @ - 133 , 7 + 133 , 6 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport 
 * @ param moduleConfig { @ link Configuration } instance . 
 * @ return { @ link Checker } instance . 
 * @ throws CheckstyleException if an exception occurs during checker configuration . 
 - * @ noinspection BooleanParameter 
 * / 
 protected Checker createChecker ( Configuration moduleConfig , boolean addTreeWalker ) 
 throws Exception { 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java 
 index bff213a . . 72ec64d 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public class PackageNameTest extends AbstractModuleTestSupport { 
 } 
 
 private String getPath ( String packageName , String fileName ) throws IOException { 
 - return super . getPath ( " rule521 " + packageName + File . separator + fileName ) ; 
 + return getPath ( " rule521 " + packageName + File . separator + fileName ) ; 
 } 
 
 @ BeforeClass 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java 
 index ef03801 . . b6523ea 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java 
 @ @ - 322 , 7 + 322 , 7 @ @ final class PropertyCacheFile { 
 * @ return true if the contents of external configuration resources were changed . 
 * / 
 private boolean areExternalResourcesChanged ( Set < ExternalResource > resources ) { 
 - return resources . stream ( ) . filter ( resource - > { 
 + return resources . stream ( ) . anyMatch ( resource - > { 
 boolean changed = false ; 
 if ( isResourceLocationInCache ( resource . location ) ) { 
 final String contentHashSum = resource . contentHashSum ; 
 @ @ - 335 , 7 + 335 , 7 @ @ final class PropertyCacheFile { 
 changed = true ; 
 } 
 return changed ; 
 - } ) . findFirst ( ) . isPresent ( ) ; 
 + } ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java 
 index d04c75b . . 3b12ffe 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java 
 @ @ - 126 , 9 + 126 , 9 @ @ public final class FileText { 
 / / Use the BufferedReader to break down the lines as this 
 / / is about 30 % faster than using the 
 / / LINE _ TERMINATOR . split ( fullText , - 1 ) method 
 - final ArrayList < String > textLines = new ArrayList < > ( ) ; 
 final BufferedReader reader = new BufferedReader ( new StringReader ( fullText ) ) ; 
 try { 
 + final ArrayList < String > textLines = new ArrayList < > ( ) ; 
 while ( true ) { 
 final String line = reader . readLine ( ) ; 
 if ( line = = null ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 7c61b09 . . 8f36059 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 71 , 12 + 71 , 8 @ @ public class SuppressWarningsHolder 
 * A thread - local holder for the list of suppression entries for the last 
 * file parsed . 
 * / 
 - private static final ThreadLocal < List < Entry > > ENTRIES = new ThreadLocal < List < Entry > > ( ) { 
 - @ Override 
 - protected List < Entry > initialValue ( ) { 
 - return new LinkedList < > ( ) ; 
 - } 
 - } ; 
 + private static final ThreadLocal < List < Entry > > ENTRIES = 
 + ThreadLocal . withInitial ( LinkedList : : new ) ; 
 
 / * * 
 * Returns the default alias for the source name of a check , which is the 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java 
 index 7191d06 . . 11c0e44 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java 
 @ @ - 164 , 8 + 164 , 7 @ @ public class EqualsHashCodeCheck 
 final DetailAST equalsAST = detailASTDetailASTEntry . getValue ( ) ; 
 log ( equalsAST . getLineNo ( ) , equalsAST . getColumnNo ( ) , MSG _ KEY _ HASHCODE ) ; 
 } ) ; 
 - objBlockWithHashCode . entrySet ( ) . forEach ( detailASTDetailASTEntry - > { 
 - final DetailAST equalsAST = detailASTDetailASTEntry . getValue ( ) ; 
 + objBlockWithHashCode . forEach ( ( key , equalsAST ) - > { 
 log ( equalsAST . getLineNo ( ) , equalsAST . getColumnNo ( ) , MSG _ KEY _ EQUALS ) ; 
 } ) ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 index 57941b0 . . c7ae8d0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 @ @ - 722 , 11 + 722 , 11 @ @ public class VisibilityModifierCheck 
 * @ return true if all of generic type arguments are immutable . 
 * / 
 private boolean areImmutableTypeArguments ( List < String > typeArgsClassNames ) { 
 - return ! typeArgsClassNames . stream ( ) . filter ( 
 + return typeArgsClassNames . stream ( ) . noneMatch ( 
 typeName - > { 
 return ! immutableClassShortNames . contains ( typeName ) 
 & & ! immutableClassCanonicalNames . contains ( typeName ) ; 
 - } ) . findFirst ( ) . isPresent ( ) ; 
 + } ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java 
 index b18f5b7 . . 983a141 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java 
 @ @ - 248 , 13 + 248 , 15 @ @ public class UnusedImportsCheck extends AbstractCheck { 
 * @ return a set of classes referenced in the javadoc block 
 * / 
 private static Set < String > collectReferencesFromJavadoc ( TextBlock textBlock ) { 
 - final Set < String > references = new HashSet < > ( ) ; 
 final List < JavadocTag > tags = new ArrayList < > ( ) ; 
 / / gather all the inline tags , like @ link 
 / / INLINE tags inside BLOCKs get hidden when using ALL 
 tags . addAll ( getValidTags ( textBlock , JavadocUtils . JavadocTagType . INLINE ) ) ; 
 / / gather all the block - level tags , like @ throws and @ see 
 tags . addAll ( getValidTags ( textBlock , JavadocUtils . JavadocTagType . BLOCK ) ) ; 
 + 
 + final Set < String > references = new HashSet < > ( ) ; 
 + 
 tags . stream ( ) 
 . filter ( JavadocTag : : canReferenceImports ) 
 . forEach ( tag - > references . addAll ( processJavadocTag ( tag ) ) ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index d25ebfa . . bf87d35 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 76 , 12 + 76 , 7 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 * to guarantee basic thread safety and avoid shared , mutable state when not necessary . 
 * / 
 private static final ThreadLocal < Map < String , ParseStatus > > TREE _ CACHE = 
 - new ThreadLocal < Map < String , ParseStatus > > ( ) { 
 - @ Override 
 - protected Map < String , ParseStatus > initialValue ( ) { 
 - return new HashMap < > ( ) ; 
 - } 
 - } ; 
 + ThreadLocal . withInitial ( HashMap : : new ) ; 
 
 / * * 
 * The file context . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java b / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java 
 index e752da6 . . f565438 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java 
 @ @ - 81 , 7 + 81 , 7 @ @ public final class TokenTypesDoclet { 
 final List < Tag > tags = Arrays . asList ( field . firstSentenceTags ( ) ) ; 
 final String joinedTags = tags 
 . stream ( ) 
 - . map ( tag - > tag . toString ( ) ) 
 + . map ( Tag : : toString ) 
 . collect ( Collectors . joining ( " \ " , \ " " , " [ \ " " , " \ " ] " ) ) ; 
 final String message = String . format ( Locale . ROOT , 
 " Should be only one tag for % s . Tags % s . " , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 index 78f630e . . 2544be4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 @ @ - 147 , 11 + 147 , 11 @ @ public class DetailASTTest extends AbstractModuleTestSupport { 
 parent . setFirstChild ( child ) ; 
 
 final List < Consumer < DetailAST > > clearBranchTokenTypesMethods = Arrays . asList ( 
 - ast - > child . setFirstChild ( ast ) , 
 - ast - > child . setNextSibling ( ast ) , 
 - ast - > child . addPreviousSibling ( ast ) , 
 - ast - > child . addNextSibling ( ast ) , 
 - ast - > child . addChild ( ast ) , 
 + child : : setFirstChild , 
 + child : : setNextSibling , 
 + child : : addPreviousSibling , 
 + child : : addNextSibling , 
 + child : : addChild , 
 ast - > { 
 try { 
 Whitebox . invokeMethod ( child , " setParent " , ast ) ; 
 @ @ - 180 , 9 + 180 , 9 @ @ public class DetailASTTest extends AbstractModuleTestSupport { 
 parent . setFirstChild ( child ) ; 
 
 final List < Consumer < DetailAST > > clearChildCountCacheMethods = Arrays . asList ( 
 - ast - > child . setNextSibling ( ast ) , 
 - ast - > child . addPreviousSibling ( ast ) , 
 - ast - > child . addNextSibling ( ast ) 
 + child : : setNextSibling , 
 + child : : addPreviousSibling , 
 + child : : addNextSibling 
 ) ; 
 
 for ( Consumer < DetailAST > method : clearChildCountCacheMethods ) {

NEAREST DIFF:
diff - - git a / fast - forward - merge . sh b / fast - forward - merge . sh 
 index 59134d3 . . 6f588a8 100755 
 - - - a / fast - forward - merge . sh 
 + + + b / fast - forward - merge . sh 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - # ! / usr / bin / env bash 
 + # ! / usr / bin / env bash 
 
 # GitHub does not support fast - forward merge . 
 # This script is intended to simplify merge of Pull Requests to keep history linear ( fast - forwarded ) 
 @ @ - 22 , 6 + 22 , 9 @ @ USER _ BRANCH = $ 2 
 REPO = $ { FORK _ USER _ NAME } - fork 
 LOCAL _ USER _ BRANCH = $ { FORK _ USER _ NAME } - $ { USER _ BRANCH } 
 
 + echo " removing remote $ { REPO } if present . . . " 
 + git remote rm $ { REPO } 
 + 
 echo " adding remote . . . " 
 git remote add $ { REPO } https : / / github . com / $ { FORK _ USER _ NAME } / $ { GIT _ REPO } . git 
 git fetch $ { REPO }
