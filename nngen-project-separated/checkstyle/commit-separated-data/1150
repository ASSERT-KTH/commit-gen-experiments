BLEU SCORE: 0.04935157841536379

TEST MSG: minor : fix for IntelijIdea inspection violations
GENERATED MSG: Remove redundant tests for equals methods . # 1555

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> index db098c3 . . 2486d05 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> @ @ - 114 , 7 + 114 , 7 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { <nl> getPath ( " InputUniquePropertiesCheckNotExisting . properties " ) ; <nl> final File file = new File ( fileName ) ; <nl> final SortedSet < LocalizedMessage > messages = <nl> - check . process ( file , Collections . < String > emptyList ( ) ) ; <nl> + check . process ( file , Collections . emptyList ( ) ) ; <nl> assertEquals ( " Wrong messages count : " + messages . size ( ) , <nl> 1 , messages . size ( ) ) ; <nl> final LocalizedMessage message = messages . iterator ( ) . next ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> index 21aea96 . . 921a12c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . filters ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertNotEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> import org . junit . Before ; <nl> @ @ - 160 , 27 + 161 , 32 @ @ public class SuppressElementTest { <nl> <nl> @ Test <nl> public void testEquals ( ) { <nl> + / / filterBased is used instead of filter field only to satisfy IntelijIdea Inspection <nl> + / / Inspection " Arguments to assertEquals ( ) in wrong order " <nl> + final SuppressElement filterBased = new SuppressElement ( " Test " ) ; <nl> + filterBased . setChecks ( " Test " ) ; <nl> + <nl> final SuppressElement filter2 = new SuppressElement ( " Test " ) ; <nl> filter2 . setChecks ( " Test " ) ; <nl> - assertEquals ( " filter , filter2 " , filter , filter2 ) ; <nl> + assertEquals ( " filter , filter2 " , filterBased , filter2 ) ; <nl> final SuppressElement filter3 = new SuppressElement ( " Test " ) ; <nl> filter3 . setChecks ( " Test3 " ) ; <nl> - assertFalse ( " filter , filter3 " , filter . equals ( filter3 ) ) ; <nl> - filter . setColumns ( " 1 - 10 " ) ; <nl> - assertFalse ( " filter , filter2 " , filter . equals ( filter2 ) ) ; <nl> + assertNotEquals ( " filter , filter3 " , filterBased , filter3 ) ; <nl> + filterBased . setColumns ( " 1 - 10 " ) ; <nl> + assertNotEquals ( " filter , filter2 " , filterBased , filter2 ) ; <nl> filter2 . setColumns ( " 1 - 10 " ) ; <nl> - assertEquals ( " filter , filter2 " , filter , filter2 ) ; <nl> - filter . setColumns ( null ) ; <nl> - assertFalse ( " filter , filter2 " , filter . equals ( filter2 ) ) ; <nl> + assertEquals ( " filter , filter2 " , filterBased , filter2 ) ; <nl> + filterBased . setColumns ( null ) ; <nl> + assertNotEquals ( " filter , filter2 " , filterBased , filter2 ) ; <nl> filter2 . setColumns ( null ) ; <nl> - filter . setLines ( " 3 , 4 " ) ; <nl> - assertFalse ( " filter , filter2 " , filter . equals ( filter2 ) ) ; <nl> + filterBased . setLines ( " 3 , 4 " ) ; <nl> + assertNotEquals ( " filter , filter2 " , filterBased , filter2 ) ; <nl> filter2 . setLines ( " 3 , 4 " ) ; <nl> - assertEquals ( " filter , filter2 " , filter , filter2 ) ; <nl> - filter . setColumns ( " 1 - 10 " ) ; <nl> - assertFalse ( " filter , filter2 " , filter . equals ( filter2 ) ) ; <nl> + assertEquals ( " filter , filter2 " , filterBased , filter2 ) ; <nl> + filterBased . setColumns ( " 1 - 10 " ) ; <nl> + assertNotEquals ( " filter , filter2 " , filterBased , filter2 ) ; <nl> filter2 . setColumns ( " 1 - 10 " ) ; <nl> - assertEquals ( " filter , filter2 " , filter , filter2 ) ; <nl> + assertEquals ( " filter , filter2 " , filterBased , filter2 ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> index f461cdb . . 5f2f9f2 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . base ; <nl> <nl> + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ INTEGER _ OBJECT _ ARRAY ; <nl> import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> import java . io . File ; <nl> @ @ - 24 , 6 + 25 , 7 @ @ public class ConfigValidationTest extends BaseCheckTestSupport { <nl> <nl> / / runs over all input files ; <nl> / / as severity level is " warning " , no errors expected <nl> - verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , EMPTY _ STRING _ ARRAY , null ) ; <nl> + verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , <nl> + EMPTY _ STRING _ ARRAY , EMPTY _ INTEGER _ OBJECT _ ARRAY ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 index db098c3 . . 2486d05 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { 
 getPath ( " InputUniquePropertiesCheckNotExisting . properties " ) ; 
 final File file = new File ( fileName ) ; 
 final SortedSet < LocalizedMessage > messages = 
 - check . process ( file , Collections . < String > emptyList ( ) ) ; 
 + check . process ( file , Collections . emptyList ( ) ) ; 
 assertEquals ( " Wrong messages count : " + messages . size ( ) , 
 1 , messages . size ( ) ) ; 
 final LocalizedMessage message = messages . iterator ( ) . next ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 index 21aea96 . . 921a12c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . filters ; 
 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 + import static org . junit . Assert . assertNotEquals ; 
 import static org . junit . Assert . assertTrue ; 
 
 import org . junit . Before ; 
 @ @ - 160 , 27 + 161 , 32 @ @ public class SuppressElementTest { 
 
 @ Test 
 public void testEquals ( ) { 
 + / / filterBased is used instead of filter field only to satisfy IntelijIdea Inspection 
 + / / Inspection " Arguments to assertEquals ( ) in wrong order " 
 + final SuppressElement filterBased = new SuppressElement ( " Test " ) ; 
 + filterBased . setChecks ( " Test " ) ; 
 + 
 final SuppressElement filter2 = new SuppressElement ( " Test " ) ; 
 filter2 . setChecks ( " Test " ) ; 
 - assertEquals ( " filter , filter2 " , filter , filter2 ) ; 
 + assertEquals ( " filter , filter2 " , filterBased , filter2 ) ; 
 final SuppressElement filter3 = new SuppressElement ( " Test " ) ; 
 filter3 . setChecks ( " Test3 " ) ; 
 - assertFalse ( " filter , filter3 " , filter . equals ( filter3 ) ) ; 
 - filter . setColumns ( " 1 - 10 " ) ; 
 - assertFalse ( " filter , filter2 " , filter . equals ( filter2 ) ) ; 
 + assertNotEquals ( " filter , filter3 " , filterBased , filter3 ) ; 
 + filterBased . setColumns ( " 1 - 10 " ) ; 
 + assertNotEquals ( " filter , filter2 " , filterBased , filter2 ) ; 
 filter2 . setColumns ( " 1 - 10 " ) ; 
 - assertEquals ( " filter , filter2 " , filter , filter2 ) ; 
 - filter . setColumns ( null ) ; 
 - assertFalse ( " filter , filter2 " , filter . equals ( filter2 ) ) ; 
 + assertEquals ( " filter , filter2 " , filterBased , filter2 ) ; 
 + filterBased . setColumns ( null ) ; 
 + assertNotEquals ( " filter , filter2 " , filterBased , filter2 ) ; 
 filter2 . setColumns ( null ) ; 
 - filter . setLines ( " 3 , 4 " ) ; 
 - assertFalse ( " filter , filter2 " , filter . equals ( filter2 ) ) ; 
 + filterBased . setLines ( " 3 , 4 " ) ; 
 + assertNotEquals ( " filter , filter2 " , filterBased , filter2 ) ; 
 filter2 . setLines ( " 3 , 4 " ) ; 
 - assertEquals ( " filter , filter2 " , filter , filter2 ) ; 
 - filter . setColumns ( " 1 - 10 " ) ; 
 - assertFalse ( " filter , filter2 " , filter . equals ( filter2 ) ) ; 
 + assertEquals ( " filter , filter2 " , filterBased , filter2 ) ; 
 + filterBased . setColumns ( " 1 - 10 " ) ; 
 + assertNotEquals ( " filter , filter2 " , filterBased , filter2 ) ; 
 filter2 . setColumns ( " 1 - 10 " ) ; 
 - assertEquals ( " filter , filter2 " , filter , filter2 ) ; 
 + assertEquals ( " filter , filter2 " , filterBased , filter2 ) ; 
 } 
 
 @ Test

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 index f461cdb . . 5f2f9f2 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package com . google . checkstyle . test . base ; 
 
 + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ INTEGER _ OBJECT _ ARRAY ; 
 import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 import java . io . File ; 
 @ @ - 24 , 6 + 25 , 7 @ @ public class ConfigValidationTest extends BaseCheckTestSupport { 
 
 / / runs over all input files ; 
 / / as severity level is " warning " , no errors expected 
 - verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , EMPTY _ STRING _ ARRAY , null ) ; 
 + verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , 
 + EMPTY _ STRING _ ARRAY , EMPTY _ INTEGER _ OBJECT _ ARRAY ) ; 
 } 
 }
