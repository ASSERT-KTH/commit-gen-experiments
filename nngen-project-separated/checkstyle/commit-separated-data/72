BLEU SCORE: 0.0260859600387516

TEST MSG: minor : expanded PackageObjectFactory test for invalid classes
GENERATED MSG: Pull # 3406 : Replace Guava ' s Joiner with Java 8 native approach

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java <nl> index a5f9708 . . efb8dec 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java <nl> @ @ - 29 , 7 + 29 , 6 @ @ import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . PACKAGE _ SEPAR <nl> import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . STRING _ SEPARATOR ; <nl> import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . UNABLE _ TO _ INSTANTIATE _ EXCEPTION _ MESSAGE ; <nl> import static org . junit . Assert . assertEquals ; <nl> - import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertNotNull ; <nl> import static org . junit . Assert . fail ; <nl> <nl> @ @ - 42 , 6 + 41 , 7 @ @ import java . util . Collections ; <nl> import java . util . HashSet ; <nl> import java . util . LinkedHashSet ; <nl> import java . util . Map ; <nl> + import java . util . Optional ; <nl> import java . util . Set ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 341 , 8 + 341 , 19 @ @ public class PackageObjectFactoryTest { <nl> final Field field = packageObjectFactoryClass . getDeclaredField ( " NAME _ TO _ FULL _ MODULE _ NAME " ) ; <nl> field . setAccessible ( true ) ; <nl> final Collection < String > canonicalNames = ( ( Map < String , String > ) field . get ( null ) ) . values ( ) ; <nl> - assertFalse ( " Invalid canonical name " , classes . stream ( ) <nl> - . anyMatch ( clazz - > ! canonicalNames . contains ( clazz . getCanonicalName ( ) ) ) ) ; <nl> + <nl> + final Optional < Class < ? > > optional1 = classes . stream ( ) <nl> + . filter ( clazz - > ! canonicalNames . contains ( clazz . getCanonicalName ( ) ) ) . findFirst ( ) ; <nl> + if ( optional1 . isPresent ( ) ) { <nl> + fail ( " Invalid canonical name : " + optional1 . get ( ) ) ; <nl> + } <nl> + final Optional < String > optional2 = canonicalNames . stream ( ) . filter ( canonicalName - > { <nl> + return classes . stream ( ) . map ( Class : : getCanonicalName ) <nl> + . noneMatch ( clssCanonicalName - > clssCanonicalName . equals ( canonicalName ) ) ; <nl> + } ) . findFirst ( ) ; <nl> + if ( optional2 . isPresent ( ) ) { <nl> + fail ( " Invalid class : " + optional2 . get ( ) ) ; <nl> + } <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 2476548 . . 0383f97 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 713 , 7 + 713 , 7 @ @ <nl> < plugin > <nl> < groupId > org . codehaus . mojo < / groupId > <nl> < artifactId > build - helper - maven - plugin < / artifactId > <nl> - < version > 1 . 10 < / version > <nl> + < version > 1 . 11 < / version > <nl> < executions > <nl> < execution > <nl> < id > add - source < / id >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java 
 index a5f9708 . . efb8dec 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java 
 @ @ - 29 , 7 + 29 , 6 @ @ import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . PACKAGE _ SEPAR 
 import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . STRING _ SEPARATOR ; 
 import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . UNABLE _ TO _ INSTANTIATE _ EXCEPTION _ MESSAGE ; 
 import static org . junit . Assert . assertEquals ; 
 - import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertNotNull ; 
 import static org . junit . Assert . fail ; 
 
 @ @ - 42 , 6 + 41 , 7 @ @ import java . util . Collections ; 
 import java . util . HashSet ; 
 import java . util . LinkedHashSet ; 
 import java . util . Map ; 
 + import java . util . Optional ; 
 import java . util . Set ; 
 
 import org . junit . Test ; 
 @ @ - 341 , 8 + 341 , 19 @ @ public class PackageObjectFactoryTest { 
 final Field field = packageObjectFactoryClass . getDeclaredField ( " NAME _ TO _ FULL _ MODULE _ NAME " ) ; 
 field . setAccessible ( true ) ; 
 final Collection < String > canonicalNames = ( ( Map < String , String > ) field . get ( null ) ) . values ( ) ; 
 - assertFalse ( " Invalid canonical name " , classes . stream ( ) 
 - . anyMatch ( clazz - > ! canonicalNames . contains ( clazz . getCanonicalName ( ) ) ) ) ; 
 + 
 + final Optional < Class < ? > > optional1 = classes . stream ( ) 
 + . filter ( clazz - > ! canonicalNames . contains ( clazz . getCanonicalName ( ) ) ) . findFirst ( ) ; 
 + if ( optional1 . isPresent ( ) ) { 
 + fail ( " Invalid canonical name : " + optional1 . get ( ) ) ; 
 + } 
 + final Optional < String > optional2 = canonicalNames . stream ( ) . filter ( canonicalName - > { 
 + return classes . stream ( ) . map ( Class : : getCanonicalName ) 
 + . noneMatch ( clssCanonicalName - > clssCanonicalName . equals ( canonicalName ) ) ; 
 + } ) . findFirst ( ) ; 
 + if ( optional2 . isPresent ( ) ) { 
 + fail ( " Invalid class : " + optional2 . get ( ) ) ; 
 + } 
 } 
 
 @ Test

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 2476548 . . 0383f97 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 713 , 7 + 713 , 7 @ @ 
 < plugin > 
 < groupId > org . codehaus . mojo < / groupId > 
 < artifactId > build - helper - maven - plugin < / artifactId > 
 - < version > 1 . 10 < / version > 
 + < version > 1 . 11 < / version > 
 < executions > 
 < execution > 
 < id > add - source < / id >
