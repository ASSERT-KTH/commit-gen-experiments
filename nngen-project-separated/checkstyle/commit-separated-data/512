BLEU SCORE: 0.09287528999566796

TEST MSG: Issue # 5003 : kill mutation in ParenPadCheck # isAcceptableToken
GENERATED MSG: Issue # 2451 : removed excess hierarchy from EmptyForInitializerPadCheck

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheckTest . java <nl> index a9df661 . . 76628ee 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheckTest . java <nl> @ @ - 26 , 12 + 26 , 17 @ @ import static com . puppycrawl . tools . checkstyle . checks . whitespace . AbstractParenPad <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> <nl> + import java . lang . reflect . Method ; <nl> + <nl> import org . junit . Test ; <nl> + import org . powermock . reflect . Whitebox ; <nl> <nl> import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> + import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; <nl> <nl> public class ParenPadCheckTest <nl> extends AbstractModuleTestSupport { <nl> @ @ - 455 , 4 + 460 , 29 @ @ public class ParenPadCheckTest <nl> } ; <nl> verify ( checkConfig , getPath ( " InputParenPadTryWithResources . java " ) , expected ) ; <nl> } <nl> + <nl> + / * * <nl> + * Pitest requires us to specify more concrete lower bound for condition for <nl> + * ParenPadCheck # isAcceptableToken as nodes of first several types like CTOR _ DEF , <nl> + * METHOD _ DEF will never reach this method . It is hard to recreate conditions for <nl> + * all tokens to go through this method . We do not want to change main code to have <nl> + * this set ok tokens more exact , because it will not be ease to understand . <nl> + * So we have to use reflection to be sure all <nl> + * acceptable tokens pass that check . <nl> + * / <nl> + @ Test <nl> + public void testIsAcceptableToken ( ) throws Exception { <nl> + final ParenPadCheck check = new ParenPadCheck ( ) ; <nl> + final Method method = Whitebox . getMethod ( ParenPadCheck . class , <nl> + " isAcceptableToken " , DetailAST . class ) ; <nl> + final DetailAST ast = new DetailAST ( ) ; <nl> + final String message = " Expected that all accaptable tokens will pass isAccaptableToken " <nl> + + " method , but some token don ' t : " ; <nl> + <nl> + for ( int token : check . getAcceptableTokens ( ) ) { <nl> + ast . setType ( token ) ; <nl> + assertTrue ( message + TokenUtils . getTokenName ( token ) , <nl> + ( boolean ) method . invoke ( check , ast ) ) ; <nl> + } <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 98d9bf0 . . 53defdc 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 22 , 7 + 22 , 7 @ @ <nl> <nl> < groupId > com . puppycrawl . tools < / groupId > <nl> < artifactId > checkstyle < / artifactId > <nl> - < version > 6 . 13 - SNAPSHOT < / version > <nl> + < version > 6 . 13 < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > checkstyle < / name >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheckTest . java 
 index a9df661 . . 76628ee 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheckTest . java 
 @ @ - 26 , 12 + 26 , 17 @ @ import static com . puppycrawl . tools . checkstyle . checks . whitespace . AbstractParenPad 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 
 + import java . lang . reflect . Method ; 
 + 
 import org . junit . Test ; 
 + import org . powermock . reflect . Whitebox ; 
 
 import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 + import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; 
 
 public class ParenPadCheckTest 
 extends AbstractModuleTestSupport { 
 @ @ - 455 , 4 + 460 , 29 @ @ public class ParenPadCheckTest 
 } ; 
 verify ( checkConfig , getPath ( " InputParenPadTryWithResources . java " ) , expected ) ; 
 } 
 + 
 + / * * 
 + * Pitest requires us to specify more concrete lower bound for condition for 
 + * ParenPadCheck # isAcceptableToken as nodes of first several types like CTOR _ DEF , 
 + * METHOD _ DEF will never reach this method . It is hard to recreate conditions for 
 + * all tokens to go through this method . We do not want to change main code to have 
 + * this set ok tokens more exact , because it will not be ease to understand . 
 + * So we have to use reflection to be sure all 
 + * acceptable tokens pass that check . 
 + * / 
 + @ Test 
 + public void testIsAcceptableToken ( ) throws Exception { 
 + final ParenPadCheck check = new ParenPadCheck ( ) ; 
 + final Method method = Whitebox . getMethod ( ParenPadCheck . class , 
 + " isAcceptableToken " , DetailAST . class ) ; 
 + final DetailAST ast = new DetailAST ( ) ; 
 + final String message = " Expected that all accaptable tokens will pass isAccaptableToken " 
 + + " method , but some token don ' t : " ; 
 + 
 + for ( int token : check . getAcceptableTokens ( ) ) { 
 + ast . setType ( token ) ; 
 + assertTrue ( message + TokenUtils . getTokenName ( token ) , 
 + ( boolean ) method . invoke ( check , ast ) ) ; 
 + } 
 + } 
 }

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 98d9bf0 . . 53defdc 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 22 , 7 + 22 , 7 @ @ 
 
 < groupId > com . puppycrawl . tools < / groupId > 
 < artifactId > checkstyle < / artifactId > 
 - < version > 6 . 13 - SNAPSHOT < / version > 
 + < version > 6 . 13 < / version > 
 < packaging > jar < / packaging > 
 
 < name > checkstyle < / name >
