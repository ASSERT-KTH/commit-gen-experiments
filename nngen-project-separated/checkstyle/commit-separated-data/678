BLEU SCORE: 0.04515183688171632

TEST MSG: minor : extending intellij instruction with command to copy scope
GENERATED MSG: Issue # 2131 : Add inspection scope profile for IDEA analysis

TEST DIFF (one line): diff - - git a / src / xdocs / idea . xml b / src / xdocs / idea . xml <nl> index 635edcd . . 9ad86d5 100644 <nl> - - - a / src / xdocs / idea . xml <nl> + + + b / src / xdocs / idea . xml <nl> @ @ - 79 , 7 + 79 , 10 @ @ <nl> Not all files in repository should be analyzed . For example test input files contain numerous <nl> violations on purpose . Our shared inspection scope can be used to exclude such files . < br / > <nl> To add custom scope copy file < code > config / intellij - idea - inspection - scope . xml < / code > <nl> - to < code > . idea / scopes < / code > directory . Now it should be ready to use in inspect code window : < br / > < br / > <nl> + to < code > . idea / scopes < / code > directory . <nl> + Command from root of repo is <nl> + < code > mkdir - p . idea / scopes ; cp config / intellij - idea - inspection - scope . xml . idea / scopes / < / code > < br / > <nl> + Now it should be ready to use in inspect code window : < br / > < br / > <nl> < img alt = " Scope for inspections " src = " images / gui _ screenshot _ scope _ idea . png " / > <nl> < / p > <nl> < / section >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertiesExpander . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertiesExpander . java <nl> index 41c1604 . . 13b4156 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertiesExpander . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertiesExpander . java <nl> @ @ - 19 , 7 + 19 , 6 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> - import java . util . Map ; <nl> import java . util . Properties ; <nl> <nl> / * * <nl> @ @ - 39 , 7 + 38 , 7 @ @ public final class PropertiesExpander <nl> * property resolution . <nl> * @ throws IllegalArgumentException indicates null was passed <nl> * / <nl> - public PropertiesExpander ( Map < Object , Object > properties ) { <nl> + public PropertiesExpander ( Properties properties ) { <nl> if ( properties = = null ) { <nl> throw new IllegalArgumentException ( " cannot pass null " ) ; <nl> }

TEST DIFF:
diff - - git a / src / xdocs / idea . xml b / src / xdocs / idea . xml 
 index 635edcd . . 9ad86d5 100644 
 - - - a / src / xdocs / idea . xml 
 + + + b / src / xdocs / idea . xml 
 @ @ - 79 , 7 + 79 , 10 @ @ 
 Not all files in repository should be analyzed . For example test input files contain numerous 
 violations on purpose . Our shared inspection scope can be used to exclude such files . < br / > 
 To add custom scope copy file < code > config / intellij - idea - inspection - scope . xml < / code > 
 - to < code > . idea / scopes < / code > directory . Now it should be ready to use in inspect code window : < br / > < br / > 
 + to < code > . idea / scopes < / code > directory . 
 + Command from root of repo is 
 + < code > mkdir - p . idea / scopes ; cp config / intellij - idea - inspection - scope . xml . idea / scopes / < / code > < br / > 
 + Now it should be ready to use in inspect code window : < br / > < br / > 
 < img alt = " Scope for inspections " src = " images / gui _ screenshot _ scope _ idea . png " / > 
 < / p > 
 < / section >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertiesExpander . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertiesExpander . java 
 index 41c1604 . . 13b4156 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertiesExpander . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertiesExpander . java 
 @ @ - 19 , 7 + 19 , 6 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 - import java . util . Map ; 
 import java . util . Properties ; 
 
 / * * 
 @ @ - 39 , 7 + 38 , 7 @ @ public final class PropertiesExpander 
 * property resolution . 
 * @ throws IllegalArgumentException indicates null was passed 
 * / 
 - public PropertiesExpander ( Map < Object , Object > properties ) { 
 + public PropertiesExpander ( Properties properties ) { 
 if ( properties = = null ) { 
 throw new IllegalArgumentException ( " cannot pass null " ) ; 
 }
