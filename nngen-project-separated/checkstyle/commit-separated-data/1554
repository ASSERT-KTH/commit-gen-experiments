BLEU SCORE: 0.12223075560872526

TEST MSG: Issue # 2161 : unify test input locations
GENERATED MSG: Issue # 1566 : InnerTypeLast turned on

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheckTest . java <nl> index a4b2a62 . . 7a68de5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheckTest . java <nl> @ @ - 21 , 6 + 21 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . OverloadMethodsDeclarationOrderCheck . MSG _ KEY ; <nl> <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> @ @ - 29 , 6 + 32 , 12 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> <nl> public class OverloadMethodsDeclarationOrderCheckTest <nl> extends BaseCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " coding " + File . separator + filename ) ; <nl> + } <nl> + <nl> @ Test <nl> public void testDefault ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> @ @ - 40 , 7 + 49 , 7 @ @ public class OverloadMethodsDeclarationOrderCheckTest <nl> " 68 : " + getCheckMessage ( MSG _ KEY , 66 ) , <nl> " 111 : " + getCheckMessage ( MSG _ KEY , 100 ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " coding / InputOverloadMethodsDeclarationOrder . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputOverloadMethodsDeclarationOrder . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOverloadMethodsDeclarationOrder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOverloadMethodsDeclarationOrder . java <nl> new file mode 100644 <nl> index 0000000 . . 0bcfabf <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOverloadMethodsDeclarationOrder . java <nl> @ @ - 0 , 0 + 1 , 119 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> + <nl> + <nl> + <nl> + class OverloadInput <nl> + { <nl> + public void overloadMethod ( int i ) <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + public void overloadMethod ( String s ) <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + public void overloadMethod ( boolean b ) <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + public void fooMethod ( ) <nl> + { <nl> + <nl> + } <nl> + <nl> + / / error because overloads never split <nl> + public void overloadMethod ( String s , Boolean b , int i ) / / warn <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + OverloadInput anonynous = new OverloadInput ( ) <nl> + { <nl> + public void overloadMethod ( int i ) <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + public void overloadMethod ( String s ) <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + public void overloadMethod ( boolean b ) <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + public void fooMethod ( ) <nl> + { <nl> + <nl> + } <nl> + <nl> + / / error because overloads never split <nl> + public void overloadMethod ( String s , Boolean b , int i ) / / warn <nl> + { <nl> + / / some foo code <nl> + } <nl> + } ; <nl> + } <nl> + <nl> + interface Fooable <nl> + { <nl> + public abstract void foo ( int i ) ; <nl> + public abstract void foo ( String s ) ; <nl> + public abstract void noFoo ( ) ; <nl> + public abstract void foo ( String s , Boolean b , int i ) ; / / warn <nl> + } <nl> + <nl> + enum FooType { <nl> + Strategy ( " " ) , <nl> + Shooter ( " " ) , <nl> + RPG ( " " ) ; <nl> + <nl> + private String description ; <nl> + <nl> + private FooType ( String description ) { <nl> + this . description = description ; <nl> + } <nl> + <nl> + public String getDescription ( ) { <nl> + return description ; <nl> + } <nl> + <nl> + public void setDescription ( String description ) { <nl> + this . description = description ; <nl> + } <nl> + <nl> + public void overloadMethod ( int i ) <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + public void overloadMethod ( String s ) <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + public void overloadMethod ( boolean b ) <nl> + { <nl> + / / some foo code <nl> + } <nl> + <nl> + public void fooMethod ( ) <nl> + { <nl> + <nl> + } <nl> + <nl> + / / error because overloads never split <nl> + public void overloadMethod ( String s , Boolean b , int i ) / / warn <nl> + { <nl> + / / some foo code <nl> + } <nl> + } <nl> + <nl> + @ interface ClassPreamble { <nl> + String author ( ) ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java <nl> deleted file mode 100644 <nl> index 83b707f . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java <nl> + + + / dev / null <nl> @ @ - 1 , 119 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . coding ; <nl> - <nl> - <nl> - <nl> - class OverloadInput <nl> - { <nl> - public void overloadMethod ( int i ) <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - public void overloadMethod ( String s ) <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - public void overloadMethod ( boolean b ) <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - public void fooMethod ( ) <nl> - { <nl> - <nl> - } <nl> - <nl> - / / error because overloads never split <nl> - public void overloadMethod ( String s , Boolean b , int i ) / / warn <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - OverloadInput anonynous = new OverloadInput ( ) <nl> - { <nl> - public void overloadMethod ( int i ) <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - public void overloadMethod ( String s ) <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - public void overloadMethod ( boolean b ) <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - public void fooMethod ( ) <nl> - { <nl> - <nl> - } <nl> - <nl> - / / error because overloads never split <nl> - public void overloadMethod ( String s , Boolean b , int i ) / / warn <nl> - { <nl> - / / some foo code <nl> - } <nl> - } ; <nl> - } <nl> - <nl> - interface Fooable <nl> - { <nl> - public abstract void foo ( int i ) ; <nl> - public abstract void foo ( String s ) ; <nl> - public abstract void noFoo ( ) ; <nl> - public abstract void foo ( String s , Boolean b , int i ) ; / / warn <nl> - } <nl> - <nl> - enum FooType { <nl> - Strategy ( " " ) , <nl> - Shooter ( " " ) , <nl> - RPG ( " " ) ; <nl> - <nl> - private String description ; <nl> - <nl> - private FooType ( String description ) { <nl> - this . description = description ; <nl> - } <nl> - <nl> - public String getDescription ( ) { <nl> - return description ; <nl> - } <nl> - <nl> - public void setDescription ( String description ) { <nl> - this . description = description ; <nl> - } <nl> - <nl> - public void overloadMethod ( int i ) <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - public void overloadMethod ( String s ) <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - public void overloadMethod ( boolean b ) <nl> - { <nl> - / / some foo code <nl> - } <nl> - <nl> - public void fooMethod ( ) <nl> - { <nl> - <nl> - } <nl> - <nl> - / / error because overloads never split <nl> - public void overloadMethod ( String s , Boolean b , int i ) / / warn <nl> - { <nl> - / / some foo code <nl> - } <nl> - } <nl> - <nl> - @ interface ClassPreamble { <nl> - String author ( ) ; <nl> - }
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> index 2bfe1c6 . . 6dfe7cf 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> @ @ - 140 , 7 + 140 , 7 @ @ public class ConfigurationLoaderTest { <nl> assertTrue ( <nl> ex . getMessage ( ) . endsWith ( <nl> " Document root element \ " property \ " , must match DOCTYPE " <nl> - + " root \ " module \ " . : 7 : 38 " ) ) ; <nl> + + " root \ " module \ " . : 8 : 38 " ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml <nl> index 4ab4de3 . . 07768c6 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml <nl> @ @ - 4 , 5 + 4 , 6 @ @ <nl> " - / / Puppy Crawl / / DTD Check Configuration 1 . 1 / / EN " <nl> " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 1 . dtd " > <nl> <nl> + < ! - - suppress XmlWrongRootElement - wrong element used for test purposes - - > <nl> < property name = " tabWidth " value = " 4 " / > <nl>

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheckTest . java 
 index a4b2a62 . . 7a68de5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheckTest . java 
 @ @ - 21 , 6 + 21 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . coding . OverloadMethodsDeclarationOrderCheck . MSG _ KEY ; 
 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 
 @ @ - 29 , 6 + 32 , 12 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 
 public class OverloadMethodsDeclarationOrderCheckTest 
 extends BaseCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " coding " + File . separator + filename ) ; 
 + } 
 + 
 @ Test 
 public void testDefault ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 @ @ - 40 , 7 + 49 , 7 @ @ public class OverloadMethodsDeclarationOrderCheckTest 
 " 68 : " + getCheckMessage ( MSG _ KEY , 66 ) , 
 " 111 : " + getCheckMessage ( MSG _ KEY , 100 ) , 
 } ; 
 - verify ( checkConfig , getPath ( " coding / InputOverloadMethodsDeclarationOrder . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputOverloadMethodsDeclarationOrder . java " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOverloadMethodsDeclarationOrder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOverloadMethodsDeclarationOrder . java 
 new file mode 100644 
 index 0000000 . . 0bcfabf 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOverloadMethodsDeclarationOrder . java 
 @ @ - 0 , 0 + 1 , 119 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding ; 
 + 
 + 
 + 
 + class OverloadInput 
 + { 
 + public void overloadMethod ( int i ) 
 + { 
 + / / some foo code 
 + } 
 + 
 + public void overloadMethod ( String s ) 
 + { 
 + / / some foo code 
 + } 
 + 
 + public void overloadMethod ( boolean b ) 
 + { 
 + / / some foo code 
 + } 
 + 
 + public void fooMethod ( ) 
 + { 
 + 
 + } 
 + 
 + / / error because overloads never split 
 + public void overloadMethod ( String s , Boolean b , int i ) / / warn 
 + { 
 + / / some foo code 
 + } 
 + 
 + OverloadInput anonynous = new OverloadInput ( ) 
 + { 
 + public void overloadMethod ( int i ) 
 + { 
 + / / some foo code 
 + } 
 + 
 + public void overloadMethod ( String s ) 
 + { 
 + / / some foo code 
 + } 
 + 
 + public void overloadMethod ( boolean b ) 
 + { 
 + / / some foo code 
 + } 
 + 
 + public void fooMethod ( ) 
 + { 
 + 
 + } 
 + 
 + / / error because overloads never split 
 + public void overloadMethod ( String s , Boolean b , int i ) / / warn 
 + { 
 + / / some foo code 
 + } 
 + } ; 
 + } 
 + 
 + interface Fooable 
 + { 
 + public abstract void foo ( int i ) ; 
 + public abstract void foo ( String s ) ; 
 + public abstract void noFoo ( ) ; 
 + public abstract void foo ( String s , Boolean b , int i ) ; / / warn 
 + } 
 + 
 + enum FooType { 
 + Strategy ( " " ) , 
 + Shooter ( " " ) , 
 + RPG ( " " ) ; 
 + 
 + private String description ; 
 + 
 + private FooType ( String description ) { 
 + this . description = description ; 
 + } 
 + 
 + public String getDescription ( ) { 
 + return description ; 
 + } 
 + 
 + public void setDescription ( String description ) { 
 + this . description = description ; 
 + } 
 + 
 + public void overloadMethod ( int i ) 
 + { 
 + / / some foo code 
 + } 
 + 
 + public void overloadMethod ( String s ) 
 + { 
 + / / some foo code 
 + } 
 + 
 + public void overloadMethod ( boolean b ) 
 + { 
 + / / some foo code 
 + } 
 + 
 + public void fooMethod ( ) 
 + { 
 + 
 + } 
 + 
 + / / error because overloads never split 
 + public void overloadMethod ( String s , Boolean b , int i ) / / warn 
 + { 
 + / / some foo code 
 + } 
 + } 
 + 
 + @ interface ClassPreamble { 
 + String author ( ) ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java 
 deleted file mode 100644 
 index 83b707f . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java 
 + + + / dev / null 
 @ @ - 1 , 119 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . coding ; 
 - 
 - 
 - 
 - class OverloadInput 
 - { 
 - public void overloadMethod ( int i ) 
 - { 
 - / / some foo code 
 - } 
 - 
 - public void overloadMethod ( String s ) 
 - { 
 - / / some foo code 
 - } 
 - 
 - public void overloadMethod ( boolean b ) 
 - { 
 - / / some foo code 
 - } 
 - 
 - public void fooMethod ( ) 
 - { 
 - 
 - } 
 - 
 - / / error because overloads never split 
 - public void overloadMethod ( String s , Boolean b , int i ) / / warn 
 - { 
 - / / some foo code 
 - } 
 - 
 - OverloadInput anonynous = new OverloadInput ( ) 
 - { 
 - public void overloadMethod ( int i ) 
 - { 
 - / / some foo code 
 - } 
 - 
 - public void overloadMethod ( String s ) 
 - { 
 - / / some foo code 
 - } 
 - 
 - public void overloadMethod ( boolean b ) 
 - { 
 - / / some foo code 
 - } 
 - 
 - public void fooMethod ( ) 
 - { 
 - 
 - } 
 - 
 - / / error because overloads never split 
 - public void overloadMethod ( String s , Boolean b , int i ) / / warn 
 - { 
 - / / some foo code 
 - } 
 - } ; 
 - } 
 - 
 - interface Fooable 
 - { 
 - public abstract void foo ( int i ) ; 
 - public abstract void foo ( String s ) ; 
 - public abstract void noFoo ( ) ; 
 - public abstract void foo ( String s , Boolean b , int i ) ; / / warn 
 - } 
 - 
 - enum FooType { 
 - Strategy ( " " ) , 
 - Shooter ( " " ) , 
 - RPG ( " " ) ; 
 - 
 - private String description ; 
 - 
 - private FooType ( String description ) { 
 - this . description = description ; 
 - } 
 - 
 - public String getDescription ( ) { 
 - return description ; 
 - } 
 - 
 - public void setDescription ( String description ) { 
 - this . description = description ; 
 - } 
 - 
 - public void overloadMethod ( int i ) 
 - { 
 - / / some foo code 
 - } 
 - 
 - public void overloadMethod ( String s ) 
 - { 
 - / / some foo code 
 - } 
 - 
 - public void overloadMethod ( boolean b ) 
 - { 
 - / / some foo code 
 - } 
 - 
 - public void fooMethod ( ) 
 - { 
 - 
 - } 
 - 
 - / / error because overloads never split 
 - public void overloadMethod ( String s , Boolean b , int i ) / / warn 
 - { 
 - / / some foo code 
 - } 
 - } 
 - 
 - @ interface ClassPreamble { 
 - String author ( ) ; 
 - }

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 index 2bfe1c6 . . 6dfe7cf 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 @ @ - 140 , 7 + 140 , 7 @ @ public class ConfigurationLoaderTest { 
 assertTrue ( 
 ex . getMessage ( ) . endsWith ( 
 " Document root element \ " property \ " , must match DOCTYPE " 
 - + " root \ " module \ " . : 7 : 38 " ) ) ; 
 + + " root \ " module \ " . : 8 : 38 " ) ) ; 
 } 
 } 
 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml 
 index 4ab4de3 . . 07768c6 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / configs / missing _ config _ parent . xml 
 @ @ - 4 , 5 + 4 , 6 @ @ 
 " - / / Puppy Crawl / / DTD Check Configuration 1 . 1 / / EN " 
 " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 1 . dtd " > 
 
 + < ! - - suppress XmlWrongRootElement - wrong element used for test purposes - - > 
 < property name = " tabWidth " value = " 4 " / > 

