BLEU SCORE: 0.4671379777282001

TEST MSG: Issue # 6293 : finalized pitest mutation for blocks profile
GENERATED MSG: Issue # 3708 : finalized pitest mutation for misc profile

TEST DIFF (one line): diff - - git a / . ci / pitest . sh b / . ci / pitest . sh <nl> index b10890c . . fb5eb65 100755 <nl> - - - a / . ci / pitest . sh <nl> + + + b / . ci / pitest . sh <nl> @ @ - 36 , 24 + 36 , 12 @ @ pitest - annotation | pitest - design | pitest - header | pitest - imports \ <nl> | pitest - regexp | pitest - sizes | pitest - whitespace | pitest - ant \ <nl> | pitest - api | pitest - common | pitest - filters | pitest - main \ <nl> | pitest - packagenamesloader | pitest - tree - walker | pitest - utils \ <nl> - | pitest - xpath | pitest - common - 2 | pitest - misc ) <nl> + | pitest - xpath | pitest - common - 2 | pitest - misc | pitest - blocks ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> declare - a ignoredItems = ( ) ; <nl> checkPitestReport " $ { ignoredItems [ @ ] } " <nl> ; ; <nl> <nl> - pitest - blocks ) <nl> - mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> - declare - a ignoredItems = ( <nl> - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; annotation . getNextSibling ( ) . getType ( ) = = TokenTypes . ANNOTATION ) { < / span > < / pre > < / td > < / tr > " <nl> - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; previousAnnotation . getPreviousSibling ( ) . getLineNo ( ) < / span > < / pre > < / td > < / tr > " <nl> - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( tokenAfterLast . getLineNo ( ) & # 62 ; lastAnnotation . getLineNo ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return previousAnnotation ; < / span > < / pre > < / td > < / tr > " <nl> - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > while ( previousAnnotation . getPreviousSibling ( ) ! = null < / span > < / pre > < / td > < / tr > " <nl> - ) ; <nl> - checkPitestReport " $ { ignoredItems [ @ ] } " <nl> - ; ; <nl> - <nl> pitest - coding ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> declare - a ignoredItems = ( <nl> diff - - git a / pom . xml b / pom . xml <nl> index e5f5e17 . . 4d2472a 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1905 , 7 + 1905 , 7 @ @ <nl> < param > * . Input * < / param > <nl> < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 97 < / mutationThreshold > <nl> + < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> index fc59988 . . fc8c3f1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> @ @ - 277 , 11 + 277 , 11 @ @ public class LeftCurlyCheck <nl> tokenAfterLast = lastAnnotation . getNextSibling ( ) ; <nl> } <nl> <nl> - if ( tokenAfterLast . getLineNo ( ) > lastAnnotation . getLineNo ( ) ) { <nl> - resultNode = tokenAfterLast ; <nl> + if ( tokenAfterLast . getLineNo ( ) = = lastAnnotation . getLineNo ( ) ) { <nl> + resultNode = getFirstAnnotationOnSameLine ( lastAnnotation ) ; <nl> } <nl> else { <nl> - resultNode = getFirstAnnotationOnSameLine ( lastAnnotation ) ; <nl> + resultNode = tokenAfterLast ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> index a42dd21 . . 8f900da 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> @ @ - 239 , 6 + 239 , 21 @ @ public class LeftCurlyCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testNlowWithAnnotations ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( LeftCurlyCheck . class ) ; <nl> + checkConfig . addAttribute ( " option " , LeftCurlyOption . NLOW . toString ( ) ) ; <nl> + final String [ ] expected = { <nl> + " 10 : 1 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 1 ) , <nl> + " 14 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , <nl> + " 21 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , <nl> + " 27 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , <nl> + " 50 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , <nl> + " 58 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputLeftCurlyAnnotations . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testLineBreakAfter ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( LeftCurlyCheck . class ) ; <nl> checkConfig . addAttribute ( " option " , LeftCurlyOption . EOL . toString ( ) ) ; <nl> @ @ - 268 , 7 + 283 , 9 @ @ public class LeftCurlyCheckTest extends AbstractModuleTestSupport { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( LeftCurlyCheck . class ) ; <nl> checkConfig . addAttribute ( " option " , LeftCurlyOption . EOL . toString ( ) ) ; <nl> checkConfig . addAttribute ( " ignoreEnums " , " true " ) ; <nl> - final String [ ] expectedWhileTrue = CommonUtil . EMPTY _ STRING _ ARRAY ; <nl> + final String [ ] expectedWhileTrue = { <nl> + " 8 : 44 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ AFTER , " { " , 44 ) , <nl> + } ; <nl> verify ( checkConfig , getPath ( " InputLeftCurlyIgnoreEnums . java " ) , expectedWhileTrue ) ; <nl> } <nl> <nl> @ @ - 279 , 6 + 296 , 7 @ @ public class LeftCurlyCheckTest extends AbstractModuleTestSupport { <nl> checkConfig . addAttribute ( " ignoreEnums " , " false " ) ; <nl> final String [ ] expectedWhileFalse = { <nl> " 4 : 17 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ AFTER , " { " , 17 ) , <nl> + " 8 : 44 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ AFTER , " { " , 44 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputLeftCurlyIgnoreEnums . java " ) , expectedWhileFalse ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / leftcurly / InputLeftCurlyIgnoreEnums . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / leftcurly / InputLeftCurlyIgnoreEnums . java <nl> index c964915 . . a0ebeff 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / leftcurly / InputLeftCurlyIgnoreEnums . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / leftcurly / InputLeftCurlyIgnoreEnums . java <nl> @ @ - 3 , 7 + 3 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . blocks . leftcurly ; <nl> public class InputLeftCurlyIgnoreEnums { <nl> enum Colors { RED , <nl> BLUE , <nl> - GREEN <nl> + GREEN ; <nl> + <nl> + @ Override public String toString ( ) { return " " ; } ; <nl> } <nl> <nl> enum Languages {
NEAREST DIFF (one line): diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words <nl> index 0c18b36 . . f04b022 100644 <nl> - - - a / . ci / jsoref - spellchecker / whitelist . words <nl> + + + b / . ci / jsoref - spellchecker / whitelist . words <nl> @ @ - 80 , 6 + 80 , 7 @ @ atlassian <nl> attlist <nl> attr <nl> autoboxing <nl> + autocomplete <nl> autocrlf <nl> Autoproxy <nl> Autowire <nl> @ @ - 1402 , 3 + 1403 , 4 @ @ yyyy <nl> Yzz <nl> zf <nl> zh <nl> + ZSH <nl> diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm <nl> index a937e33 . . e7a1a87 100644 <nl> - - - a / src / xdocs / cmdline . xml . vm <nl> + + + b / src / xdocs / cmdline . xml . vm <nl> @ @ - 167 , 6 + 167 , 13 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ <nl> specifying a property file using the < code > - p < / code > option . If a <nl> property file is specified , the system properties are ignored . <nl> < / p > <nl> + < p > <nl> + CLI is implemented by means of < a href = " https : / / picocli . info " > picocli < / a > <nl> + library . Our CLI supports definition of arguments in file <nl> + by means of < a href = " https : / / picocli . info / # AtFiles " > AtFiles < / a > feature <nl> + and also command line completion in Bash or ZSH Unix shells , see how to make it <nl> + < a href = " https : / / picocli . info / autocomplete . html " > here < / a > . <nl> + < / p > <nl> < / section > <nl> <nl> < section name = " Download and Run " >

TEST DIFF:
diff - - git a / . ci / pitest . sh b / . ci / pitest . sh 
 index b10890c . . fb5eb65 100755 
 - - - a / . ci / pitest . sh 
 + + + b / . ci / pitest . sh 
 @ @ - 36 , 24 + 36 , 12 @ @ pitest - annotation | pitest - design | pitest - header | pitest - imports \ 
 | pitest - regexp | pitest - sizes | pitest - whitespace | pitest - ant \ 
 | pitest - api | pitest - common | pitest - filters | pitest - main \ 
 | pitest - packagenamesloader | pitest - tree - walker | pitest - utils \ 
 - | pitest - xpath | pitest - common - 2 | pitest - misc ) 
 + | pitest - xpath | pitest - common - 2 | pitest - misc | pitest - blocks ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 declare - a ignoredItems = ( ) ; 
 checkPitestReport " $ { ignoredItems [ @ ] } " 
 ; ; 
 
 - pitest - blocks ) 
 - mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 - declare - a ignoredItems = ( 
 - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; annotation . getNextSibling ( ) . getType ( ) = = TokenTypes . ANNOTATION ) { < / span > < / pre > < / td > < / tr > " 
 - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; previousAnnotation . getPreviousSibling ( ) . getLineNo ( ) < / span > < / pre > < / td > < / tr > " 
 - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( tokenAfterLast . getLineNo ( ) & # 62 ; lastAnnotation . getLineNo ( ) ) { < / span > < / pre > < / td > < / tr > " 
 - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return previousAnnotation ; < / span > < / pre > < / td > < / tr > " 
 - " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > while ( previousAnnotation . getPreviousSibling ( ) ! = null < / span > < / pre > < / td > < / tr > " 
 - ) ; 
 - checkPitestReport " $ { ignoredItems [ @ ] } " 
 - ; ; 
 - 
 pitest - coding ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 declare - a ignoredItems = ( 
 diff - - git a / pom . xml b / pom . xml 
 index e5f5e17 . . 4d2472a 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1905 , 7 + 1905 , 7 @ @ 
 < param > * . Input * < / param > 
 < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 97 < / mutationThreshold > 
 + < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 index fc59988 . . fc8c3f1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 @ @ - 277 , 11 + 277 , 11 @ @ public class LeftCurlyCheck 
 tokenAfterLast = lastAnnotation . getNextSibling ( ) ; 
 } 
 
 - if ( tokenAfterLast . getLineNo ( ) > lastAnnotation . getLineNo ( ) ) { 
 - resultNode = tokenAfterLast ; 
 + if ( tokenAfterLast . getLineNo ( ) = = lastAnnotation . getLineNo ( ) ) { 
 + resultNode = getFirstAnnotationOnSameLine ( lastAnnotation ) ; 
 } 
 else { 
 - resultNode = getFirstAnnotationOnSameLine ( lastAnnotation ) ; 
 + resultNode = tokenAfterLast ; 
 } 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 index a42dd21 . . 8f900da 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 @ @ - 239 , 6 + 239 , 21 @ @ public class LeftCurlyCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testNlowWithAnnotations ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( LeftCurlyCheck . class ) ; 
 + checkConfig . addAttribute ( " option " , LeftCurlyOption . NLOW . toString ( ) ) ; 
 + final String [ ] expected = { 
 + " 10 : 1 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 1 ) , 
 + " 14 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , 
 + " 21 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , 
 + " 27 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , 
 + " 50 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , 
 + " 58 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 5 ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputLeftCurlyAnnotations . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testLineBreakAfter ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( LeftCurlyCheck . class ) ; 
 checkConfig . addAttribute ( " option " , LeftCurlyOption . EOL . toString ( ) ) ; 
 @ @ - 268 , 7 + 283 , 9 @ @ public class LeftCurlyCheckTest extends AbstractModuleTestSupport { 
 final DefaultConfiguration checkConfig = createModuleConfig ( LeftCurlyCheck . class ) ; 
 checkConfig . addAttribute ( " option " , LeftCurlyOption . EOL . toString ( ) ) ; 
 checkConfig . addAttribute ( " ignoreEnums " , " true " ) ; 
 - final String [ ] expectedWhileTrue = CommonUtil . EMPTY _ STRING _ ARRAY ; 
 + final String [ ] expectedWhileTrue = { 
 + " 8 : 44 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ AFTER , " { " , 44 ) , 
 + } ; 
 verify ( checkConfig , getPath ( " InputLeftCurlyIgnoreEnums . java " ) , expectedWhileTrue ) ; 
 } 
 
 @ @ - 279 , 6 + 296 , 7 @ @ public class LeftCurlyCheckTest extends AbstractModuleTestSupport { 
 checkConfig . addAttribute ( " ignoreEnums " , " false " ) ; 
 final String [ ] expectedWhileFalse = { 
 " 4 : 17 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ AFTER , " { " , 17 ) , 
 + " 8 : 44 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ AFTER , " { " , 44 ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputLeftCurlyIgnoreEnums . java " ) , expectedWhileFalse ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / leftcurly / InputLeftCurlyIgnoreEnums . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / leftcurly / InputLeftCurlyIgnoreEnums . java 
 index c964915 . . a0ebeff 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / leftcurly / InputLeftCurlyIgnoreEnums . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / leftcurly / InputLeftCurlyIgnoreEnums . java 
 @ @ - 3 , 7 + 3 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . blocks . leftcurly ; 
 public class InputLeftCurlyIgnoreEnums { 
 enum Colors { RED , 
 BLUE , 
 - GREEN 
 + GREEN ; 
 + 
 + @ Override public String toString ( ) { return " " ; } ; 
 } 
 
 enum Languages {

NEAREST DIFF:
diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words 
 index 0c18b36 . . f04b022 100644 
 - - - a / . ci / jsoref - spellchecker / whitelist . words 
 + + + b / . ci / jsoref - spellchecker / whitelist . words 
 @ @ - 80 , 6 + 80 , 7 @ @ atlassian 
 attlist 
 attr 
 autoboxing 
 + autocomplete 
 autocrlf 
 Autoproxy 
 Autowire 
 @ @ - 1402 , 3 + 1403 , 4 @ @ yyyy 
 Yzz 
 zf 
 zh 
 + ZSH 
 diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm 
 index a937e33 . . e7a1a87 100644 
 - - - a / src / xdocs / cmdline . xml . vm 
 + + + b / src / xdocs / cmdline . xml . vm 
 @ @ - 167 , 6 + 167 , 13 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ 
 specifying a property file using the < code > - p < / code > option . If a 
 property file is specified , the system properties are ignored . 
 < / p > 
 + < p > 
 + CLI is implemented by means of < a href = " https : / / picocli . info " > picocli < / a > 
 + library . Our CLI supports definition of arguments in file 
 + by means of < a href = " https : / / picocli . info / # AtFiles " > AtFiles < / a > feature 
 + and also command line completion in Bash or ZSH Unix shells , see how to make it 
 + < a href = " https : / / picocli . info / autocomplete . html " > here < / a > . 
 + < / p > 
 < / section > 
 
 < section name = " Download and Run " >
