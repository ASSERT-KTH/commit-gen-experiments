BLEU SCORE: 0.15685718045401453

TEST MSG: spelling : fix then / than typos
GENERATED MSG: spelling : fix some typos in code / javadoc / comments

TEST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 59bd328 . . b3cde79 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 97 , 12 + 97 , 12 @ @ <nl> < module name = " RegexpSingleline " > <nl> < property name = " format " value = " ^ ( ? ! ( . * http | import ) ) . { 101 , } $ " / > <nl> < property name = " fileExtensions " value = " g , g4 " / > <nl> - < property name = " message " value = " Line should not be longer then 100 symbols " / > <nl> + < property name = " message " value = " Line should not be longer than 100 symbols " / > <nl> < / module > <nl> < module name = " RegexpSingleline " > <nl> < property name = " format " value = " ^ ( ? ! ( . * href = & quot ; | . * http ) ) . { 101 , } $ " / > <nl> < property name = " fileExtensions " value = " xml , vm " / > <nl> - < property name = " message " value = " Line should not be longer then 100 symbols " / > <nl> + < property name = " message " value = " Line should not be longer than 100 symbols " / > <nl> < / module > <nl> < module name = " RegexpOnFilename " / > <nl> < module name = " RegexpOnFilename " > <nl> diff - - git a / config / checkstyle _ non _ main _ files _ checks . xml b / config / checkstyle _ non _ main _ files _ checks . xml <nl> index e6ed6a0 . . 9030692 100644 <nl> - - - a / config / checkstyle _ non _ main _ files _ checks . xml <nl> + + + b / config / checkstyle _ non _ main _ files _ checks . xml <nl> @ @ - 20 , 6 + 20 , 6 @ @ <nl> < ! - - catch lines above 100 symbols - - > <nl> < property name = " format " <nl> value = " ^ ( ? ! ( . * href | . * http | import | . * com . * | . * com / . * | . * files = ) ) . { 101 , } $ " / > <nl> - < property name = " message " value = " Line should not be longer then 100 symbols " / > <nl> + < property name = " message " value = " Line should not be longer than 100 symbols " / > <nl> < / module > <nl> < / module > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java <nl> index 941baee . . 61fe348 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java <nl> @ @ - 169 , 7 + 169 , 7 @ @ public abstract class AbstractFileSetCheck <nl> / * * <nl> * Notify all listeners about the errors in a file . <nl> * Calls { @ code MessageDispatcher . fireErrors ( ) } with <nl> - * all logged errors and than clears errors ' list . <nl> + * all logged errors and then clears errors ' list . <nl> * @ param fileName the audited file <nl> * / <nl> protected final void fireErrors ( String fileName ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java <nl> index 204dabf . . a6d2a34 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java <nl> @ @ - 204 , 7 + 204 , 7 @ @ public abstract class AutomaticBean <nl> * @ param key key of value <nl> * @ param value value <nl> * @ param recheck whether to check for property existence before copy <nl> - * @ throws CheckstyleException then property defined incorrectly <nl> + * @ throws CheckstyleException when property defined incorrectly <nl> * / <nl> private void tryCopyProperty ( String key , Object value , boolean recheck ) <nl> throws CheckstyleException { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> index bd0f7e8 . . 5571e4e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> @ @ - 132 , 7 + 132 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * Distance for variable ' sum ' = 3 . <nl> * < / pre > <nl> * < p > <nl> - * As the distance is more then the default one , the Check raises warning for variable <nl> + * As the distance is more than the default one , the Check raises warning for variable <nl> * ' sum ' to move it into the ' for ( . . . ) ' block . But there is situation when <nl> * variable ' sum ' hasn ' t to be 0 within each iteration . So , to avoid such <nl> * warnings you can use Suppression Filter , provided by Checkstyle , for the <nl> @ @ - 557 , 7 + 557 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { <nl> variableUsageExpressions . add ( currentStatementAst ) ; <nl> } <nl> / / If expression doesn ' t contain variable and this variable <nl> - / / hasn ' t been met yet , than distance + 1 . <nl> + / / hasn ' t been met yet , then distance + 1 . <nl> else if ( variableUsageExpressions . isEmpty ( ) <nl> & & currentStatementAst . getType ( ) ! = TokenTypes . VARIABLE _ DEF ) { <nl> distance + + ; <nl> @ @ - 576 , 7 + 576 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { <nl> * @ param variable <nl> * Variable which is checked for content in block . <nl> * @ return If variable usage is met only inside the block <nl> - * ( not in its declaration ! ) than return the first Ast node <nl> + * ( not in its declaration ! ) then return the first Ast node <nl> * of this block , otherwise - null . <nl> * / <nl> private static DetailAST getFirstNodeInsideForWhileDoWhileBlocks ( <nl> @ @ - 618 , 7 + 618 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { <nl> * @ param variable <nl> * Variable which is checked for content in block . <nl> * @ return If variable usage is met only inside the block <nl> - * ( not in its declaration ! ) than return the first Ast node <nl> + * ( not in its declaration ! ) then return the first Ast node <nl> * of this block , otherwise - null . <nl> * / <nl> private static DetailAST getFirstNodeInsideIfBlock ( <nl> @ @ - 652 , 7 + 652 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { <nl> } <nl> } <nl> <nl> - / / If IF block doesn ' t include ELSE than analyze variable usage <nl> + / / If IF block doesn ' t include ELSE then analyze variable usage <nl> / / only inside IF block . <nl> if ( currentNode ! = null <nl> & & isChild ( currentNode , variable ) ) { <nl> @ @ - 679 , 7 + 679 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { <nl> * @ param variable <nl> * Variable which is checked for content in block . <nl> * @ return If variable usage is met only inside the block <nl> - * ( not in its declaration ! ) than return the first Ast node <nl> + * ( not in its declaration ! ) then return the first Ast node <nl> * of this block , otherwise - null . <nl> * / <nl> private static DetailAST getFirstNodeInsideSwitchBlock ( <nl> @ @ - 720 , 7 + 720 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { <nl> * @ param variable <nl> * Variable which is checked for content in block . <nl> * @ return If variable usage is met only inside the block <nl> - * ( not in its declaration ! ) than return the first Ast node <nl> + * ( not in its declaration ! ) then return the first Ast node <nl> * of this block , otherwise - null . <nl> * / <nl> private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks ( <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> index 6537139 . . edb54fb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> @ @ - 131 , 7 + 131 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> * < / pre > <nl> * < p > <nl> * Result : import will be assigned to SPECIAL _ IMPORTS . Matching substring length is 5 for both <nl> - * patterns . However , " Avoid " position is lower then " Check " position . <nl> + * patterns . However , " Avoid " position is lower than " Check " position . <nl> * < / p > <nl> * < ul > <nl> * < li > <nl> @ @ - 835 , 7 + 835 , 7 @ @ public class CustomImportOrderCheck extends AbstractCheck { <nl> * @ param packageFullPath <nl> * full identifier containing path to package or imported object . <nl> * @ return String with defined amount of domains or full identifier <nl> - * ( if full identifier had less domain then specified ) <nl> + * ( if full identifier had less domain than specified ) <nl> * / <nl> private static String getFirstDomainsFromIdent ( <nl> final int firstPackageDomainsCount , final String packageFullPath ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> index 7691804 . . 4408358 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> @ @ - 448 , 7 + 448 , 7 @ @ public class CommentsIndentationCheck extends AbstractCheck { <nl> * . . . <nl> * case OPTION _ ONE : <nl> * int someVariable = 1 ; <nl> - * / / than init variable a - OK <nl> + * / / then init variable a - OK <nl> * case OPTION _ TWO : <nl> * int a = 5 ; <nl> * break ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java <nl> index 6e032a7 . . 6d8ff52 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java <nl> @ @ - 79 , 10 + 79 , 10 @ @ public class IndentLevel { <nl> } <nl> <nl> / * * <nl> - * Returns true if indent less then minimal of <nl> + * Returns true if indent less than minimal of <nl> * acceptable indentation levels , false otherwise . <nl> * @ param indent indentation to check . <nl> - * @ return true if { @ code indent } less then minimal of <nl> + * @ return true if { @ code indent } less than minimal of <nl> * acceptable indentation levels , false otherwise . <nl> * / <nl> public boolean isGreaterThan ( int indent ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> index 787f89d . . 5a51237 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> <nl> / * * <nl> * This class checks line - wrapping into definitions and expressions . The <nl> - * line - wrapping indentation should be not less then value of the <nl> + * line - wrapping indentation should be not less than value of the <nl> * lineWrappingIndentation parameter . <nl> * <nl> * / <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> index 2ee7e84 . . a3a820e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> @ @ - 115 , 7 + 115 , 7 @ @ public class CheckstyleAntTaskTest extends AbstractPathTestSupport { <nl> assertTrue ( " Checker is not processed " , <nl> TestRootModuleChecker . isProcessed ( ) ) ; <nl> final List < File > filesToCheck = TestRootModuleChecker . getFilesToCheck ( ) ; <nl> - assertThat ( " There more files to check then expected " , <nl> + assertThat ( " There are more files to check than expected " , <nl> filesToCheck . size ( ) , is ( 1 ) ) ; <nl> assertThat ( " The path of file differs from expected " , <nl> filesToCheck . get ( 0 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> @ @ - 153 , 7 + 153 , 7 @ @ public class CheckstyleAntTaskTest extends AbstractPathTestSupport { <nl> assertTrue ( " Checker is not processed " , <nl> TestRootModuleChecker . isProcessed ( ) ) ; <nl> final List < File > filesToCheck = TestRootModuleChecker . getFilesToCheck ( ) ; <nl> - assertThat ( " There more files to check then expected " , <nl> + assertThat ( " There are more files to check than expected " , <nl> filesToCheck . size ( ) , is ( 1 ) ) ; <nl> assertThat ( " The path of file differs from expected " , <nl> filesToCheck . get ( 0 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> @ @ - 181 , 7 + 181 , 7 @ @ public class CheckstyleAntTaskTest extends AbstractPathTestSupport { <nl> assertTrue ( " Checker is not processed " , <nl> TestRootModuleChecker . isProcessed ( ) ) ; <nl> final List < File > filesToCheck = TestRootModuleChecker . getFilesToCheck ( ) ; <nl> - assertThat ( " There more files to check then expected " , <nl> + assertThat ( " There are more files to check than expected " , <nl> filesToCheck . size ( ) , is ( 9 ) ) ; <nl> assertThat ( " The path of file differs from expected " , <nl> filesToCheck . get ( 6 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> @ @ - 213 , 7 + 213 , 7 @ @ public class CheckstyleAntTaskTest extends AbstractPathTestSupport { <nl> assertTrue ( " Checker is not processed " , <nl> TestRootModuleChecker . isProcessed ( ) ) ; <nl> final List < File > filesToCheck = TestRootModuleChecker . getFilesToCheck ( ) ; <nl> - assertThat ( " There more files to check then expected " , <nl> + assertThat ( " There are more files to check than expected " , <nl> filesToCheck . size ( ) , is ( 1 ) ) ; <nl> assertThat ( " The path of file differs from expected " , <nl> filesToCheck . get ( 0 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / ant / checkstyleanttask / InputCheckstyleAntTaskError . java b / src / test / resources / com / puppycrawl / tools / checkstyle / ant / checkstyleanttask / InputCheckstyleAntTaskError . java <nl> index eaf82bd . . 058c8d2 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / ant / checkstyleanttask / InputCheckstyleAntTaskError . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / ant / checkstyleanttask / InputCheckstyleAntTaskError . java <nl> @ @ - 4 , 7 + 4 , 7 @ @ package com . puppycrawl . tools . checkstyle . ant . checkstyleanttask ; <nl> * @ incomplete Some javadoc <nl> * / <nl> public final class InputCheckstyleAntTaskError { <nl> - private static final String FOO = " This line is longer then 70 characters . " ; <nl> + private static final String FOO = " This line is longer than 70 characters . " ; <nl> <nl> - private static final String FOOO = " This line is longer then 70 characters . " ; <nl> + private static final String FOOO = " This line is longer than 70 characters . " ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / designforextension / InputDesignForExtensionOverridableMethods . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / designforextension / InputDesignForExtensionOverridableMethods . java <nl> index 6e3df76 . . bc82d0f 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / designforextension / InputDesignForExtensionOverridableMethods . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / designforextension / InputDesignForExtensionOverridableMethods . java <nl> @ @ - 209 , 7 + 209 , 7 @ @ public class InputDesignForExtensionOverridableMethods { <nl> <nl> / * * <nl> * @ param indent indentation to check . <nl> - * @ return true if { @ code indent } less then minimal of <nl> + * @ return true if { @ code indent } less than minimal of <nl> * acceptable indentation levels , false otherwise . <nl> * / <nl> public boolean isGreaterThan ( int indent ) { <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index 291c17e . . ecc2a06 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 4840 , 7 + 4840 , 7 @ @ for ( int i = 0 ; i & lt ; 20 ; i + + ) { <nl> Distance for variable ' sum ' = 3 . <nl> < / p > <nl> < p > <nl> - As the distance is more then the default one , the Check <nl> + As the distance is more than the default one , the Check <nl> raises warning for variable ' sum ' to move it into the ' for ( . . . ) ' block . <nl> But there is situation when variable ' sum ' hasn ' t to be 0 within each iteration . <nl> So , to avoid such warnings you can use Suppression Filter , provided by <nl> diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml <nl> index d7df492 . . cdd36cc 100644 <nl> - - - a / src / xdocs / config _ imports . xml <nl> + + + b / src / xdocs / config _ imports . xml <nl> @ @ - 330 , 7 + 330 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . imports . AvoidStarImportCheck ; <nl> < / source > <nl> < p > <nl> Result : import will be assigned to SPECIAL _ IMPORTS . Matching substring length is 5 for <nl> - both patterns . However , " Avoid " position is lower then " Check " position . <nl> + both patterns . However , " Avoid " position is lower than " Check " position . <nl> < / p > <nl> < / subsection > <nl>
NEAREST DIFF (one line): diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm <nl> index 2809831 . . 43ffebb 100644 <nl> - - - a / src / xdocs / index . xml . vm <nl> + + + b / src / xdocs / index . xml . vm <nl> @ @ - 338 , 7 + 338 , 7 @ @ <nl> < td > Combines multiple tools ( CheckStyle , findbugs , PMD , Cobertura , etc . ) < / td > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . bluej . org " > BlueJ < / a > < / td > <nl> + < td > < a href = " https : / / www . bluej . org / " > BlueJ < / a > < / td > <nl> < td > Rick Giles < / td > <nl> < td > < a href = " http : / / bluejcheckstyle . sourceforge . net / " > bluejcheckstyle home page < / a > < / td > <nl> < td / >

TEST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 59bd328 . . b3cde79 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 97 , 12 + 97 , 12 @ @ 
 < module name = " RegexpSingleline " > 
 < property name = " format " value = " ^ ( ? ! ( . * http | import ) ) . { 101 , } $ " / > 
 < property name = " fileExtensions " value = " g , g4 " / > 
 - < property name = " message " value = " Line should not be longer then 100 symbols " / > 
 + < property name = " message " value = " Line should not be longer than 100 symbols " / > 
 < / module > 
 < module name = " RegexpSingleline " > 
 < property name = " format " value = " ^ ( ? ! ( . * href = & quot ; | . * http ) ) . { 101 , } $ " / > 
 < property name = " fileExtensions " value = " xml , vm " / > 
 - < property name = " message " value = " Line should not be longer then 100 symbols " / > 
 + < property name = " message " value = " Line should not be longer than 100 symbols " / > 
 < / module > 
 < module name = " RegexpOnFilename " / > 
 < module name = " RegexpOnFilename " > 
 diff - - git a / config / checkstyle _ non _ main _ files _ checks . xml b / config / checkstyle _ non _ main _ files _ checks . xml 
 index e6ed6a0 . . 9030692 100644 
 - - - a / config / checkstyle _ non _ main _ files _ checks . xml 
 + + + b / config / checkstyle _ non _ main _ files _ checks . xml 
 @ @ - 20 , 6 + 20 , 6 @ @ 
 < ! - - catch lines above 100 symbols - - > 
 < property name = " format " 
 value = " ^ ( ? ! ( . * href | . * http | import | . * com . * | . * com / . * | . * files = ) ) . { 101 , } $ " / > 
 - < property name = " message " value = " Line should not be longer then 100 symbols " / > 
 + < property name = " message " value = " Line should not be longer than 100 symbols " / > 
 < / module > 
 < / module > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java 
 index 941baee . . 61fe348 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java 
 @ @ - 169 , 7 + 169 , 7 @ @ public abstract class AbstractFileSetCheck 
 / * * 
 * Notify all listeners about the errors in a file . 
 * Calls { @ code MessageDispatcher . fireErrors ( ) } with 
 - * all logged errors and than clears errors ' list . 
 + * all logged errors and then clears errors ' list . 
 * @ param fileName the audited file 
 * / 
 protected final void fireErrors ( String fileName ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java 
 index 204dabf . . a6d2a34 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java 
 @ @ - 204 , 7 + 204 , 7 @ @ public abstract class AutomaticBean 
 * @ param key key of value 
 * @ param value value 
 * @ param recheck whether to check for property existence before copy 
 - * @ throws CheckstyleException then property defined incorrectly 
 + * @ throws CheckstyleException when property defined incorrectly 
 * / 
 private void tryCopyProperty ( String key , Object value , boolean recheck ) 
 throws CheckstyleException { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 index bd0f7e8 . . 5571e4e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 @ @ - 132 , 7 + 132 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * Distance for variable ' sum ' = 3 . 
 * < / pre > 
 * < p > 
 - * As the distance is more then the default one , the Check raises warning for variable 
 + * As the distance is more than the default one , the Check raises warning for variable 
 * ' sum ' to move it into the ' for ( . . . ) ' block . But there is situation when 
 * variable ' sum ' hasn ' t to be 0 within each iteration . So , to avoid such 
 * warnings you can use Suppression Filter , provided by Checkstyle , for the 
 @ @ - 557 , 7 + 557 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { 
 variableUsageExpressions . add ( currentStatementAst ) ; 
 } 
 / / If expression doesn ' t contain variable and this variable 
 - / / hasn ' t been met yet , than distance + 1 . 
 + / / hasn ' t been met yet , then distance + 1 . 
 else if ( variableUsageExpressions . isEmpty ( ) 
 & & currentStatementAst . getType ( ) ! = TokenTypes . VARIABLE _ DEF ) { 
 distance + + ; 
 @ @ - 576 , 7 + 576 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { 
 * @ param variable 
 * Variable which is checked for content in block . 
 * @ return If variable usage is met only inside the block 
 - * ( not in its declaration ! ) than return the first Ast node 
 + * ( not in its declaration ! ) then return the first Ast node 
 * of this block , otherwise - null . 
 * / 
 private static DetailAST getFirstNodeInsideForWhileDoWhileBlocks ( 
 @ @ - 618 , 7 + 618 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { 
 * @ param variable 
 * Variable which is checked for content in block . 
 * @ return If variable usage is met only inside the block 
 - * ( not in its declaration ! ) than return the first Ast node 
 + * ( not in its declaration ! ) then return the first Ast node 
 * of this block , otherwise - null . 
 * / 
 private static DetailAST getFirstNodeInsideIfBlock ( 
 @ @ - 652 , 7 + 652 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { 
 } 
 } 
 
 - / / If IF block doesn ' t include ELSE than analyze variable usage 
 + / / If IF block doesn ' t include ELSE then analyze variable usage 
 / / only inside IF block . 
 if ( currentNode ! = null 
 & & isChild ( currentNode , variable ) ) { 
 @ @ - 679 , 7 + 679 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { 
 * @ param variable 
 * Variable which is checked for content in block . 
 * @ return If variable usage is met only inside the block 
 - * ( not in its declaration ! ) than return the first Ast node 
 + * ( not in its declaration ! ) then return the first Ast node 
 * of this block , otherwise - null . 
 * / 
 private static DetailAST getFirstNodeInsideSwitchBlock ( 
 @ @ - 720 , 7 + 720 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { 
 * @ param variable 
 * Variable which is checked for content in block . 
 * @ return If variable usage is met only inside the block 
 - * ( not in its declaration ! ) than return the first Ast node 
 + * ( not in its declaration ! ) then return the first Ast node 
 * of this block , otherwise - null . 
 * / 
 private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks ( 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 index 6537139 . . edb54fb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 @ @ - 131 , 7 + 131 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 * < / pre > 
 * < p > 
 * Result : import will be assigned to SPECIAL _ IMPORTS . Matching substring length is 5 for both 
 - * patterns . However , " Avoid " position is lower then " Check " position . 
 + * patterns . However , " Avoid " position is lower than " Check " position . 
 * < / p > 
 * < ul > 
 * < li > 
 @ @ - 835 , 7 + 835 , 7 @ @ public class CustomImportOrderCheck extends AbstractCheck { 
 * @ param packageFullPath 
 * full identifier containing path to package or imported object . 
 * @ return String with defined amount of domains or full identifier 
 - * ( if full identifier had less domain then specified ) 
 + * ( if full identifier had less domain than specified ) 
 * / 
 private static String getFirstDomainsFromIdent ( 
 final int firstPackageDomainsCount , final String packageFullPath ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 index 7691804 . . 4408358 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 @ @ - 448 , 7 + 448 , 7 @ @ public class CommentsIndentationCheck extends AbstractCheck { 
 * . . . 
 * case OPTION _ ONE : 
 * int someVariable = 1 ; 
 - * / / than init variable a - OK 
 + * / / then init variable a - OK 
 * case OPTION _ TWO : 
 * int a = 5 ; 
 * break ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java 
 index 6e032a7 . . 6d8ff52 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java 
 @ @ - 79 , 10 + 79 , 10 @ @ public class IndentLevel { 
 } 
 
 / * * 
 - * Returns true if indent less then minimal of 
 + * Returns true if indent less than minimal of 
 * acceptable indentation levels , false otherwise . 
 * @ param indent indentation to check . 
 - * @ return true if { @ code indent } less then minimal of 
 + * @ return true if { @ code indent } less than minimal of 
 * acceptable indentation levels , false otherwise . 
 * / 
 public boolean isGreaterThan ( int indent ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 index 787f89d . . 5a51237 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 @ @ - 30 , 7 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 
 / * * 
 * This class checks line - wrapping into definitions and expressions . The 
 - * line - wrapping indentation should be not less then value of the 
 + * line - wrapping indentation should be not less than value of the 
 * lineWrappingIndentation parameter . 
 * 
 * / 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 index 2ee7e84 . . a3a820e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 @ @ - 115 , 7 + 115 , 7 @ @ public class CheckstyleAntTaskTest extends AbstractPathTestSupport { 
 assertTrue ( " Checker is not processed " , 
 TestRootModuleChecker . isProcessed ( ) ) ; 
 final List < File > filesToCheck = TestRootModuleChecker . getFilesToCheck ( ) ; 
 - assertThat ( " There more files to check then expected " , 
 + assertThat ( " There are more files to check than expected " , 
 filesToCheck . size ( ) , is ( 1 ) ) ; 
 assertThat ( " The path of file differs from expected " , 
 filesToCheck . get ( 0 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 @ @ - 153 , 7 + 153 , 7 @ @ public class CheckstyleAntTaskTest extends AbstractPathTestSupport { 
 assertTrue ( " Checker is not processed " , 
 TestRootModuleChecker . isProcessed ( ) ) ; 
 final List < File > filesToCheck = TestRootModuleChecker . getFilesToCheck ( ) ; 
 - assertThat ( " There more files to check then expected " , 
 + assertThat ( " There are more files to check than expected " , 
 filesToCheck . size ( ) , is ( 1 ) ) ; 
 assertThat ( " The path of file differs from expected " , 
 filesToCheck . get ( 0 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 @ @ - 181 , 7 + 181 , 7 @ @ public class CheckstyleAntTaskTest extends AbstractPathTestSupport { 
 assertTrue ( " Checker is not processed " , 
 TestRootModuleChecker . isProcessed ( ) ) ; 
 final List < File > filesToCheck = TestRootModuleChecker . getFilesToCheck ( ) ; 
 - assertThat ( " There more files to check then expected " , 
 + assertThat ( " There are more files to check than expected " , 
 filesToCheck . size ( ) , is ( 9 ) ) ; 
 assertThat ( " The path of file differs from expected " , 
 filesToCheck . get ( 6 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 @ @ - 213 , 7 + 213 , 7 @ @ public class CheckstyleAntTaskTest extends AbstractPathTestSupport { 
 assertTrue ( " Checker is not processed " , 
 TestRootModuleChecker . isProcessed ( ) ) ; 
 final List < File > filesToCheck = TestRootModuleChecker . getFilesToCheck ( ) ; 
 - assertThat ( " There more files to check then expected " , 
 + assertThat ( " There are more files to check than expected " , 
 filesToCheck . size ( ) , is ( 1 ) ) ; 
 assertThat ( " The path of file differs from expected " , 
 filesToCheck . get ( 0 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / ant / checkstyleanttask / InputCheckstyleAntTaskError . java b / src / test / resources / com / puppycrawl / tools / checkstyle / ant / checkstyleanttask / InputCheckstyleAntTaskError . java 
 index eaf82bd . . 058c8d2 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / ant / checkstyleanttask / InputCheckstyleAntTaskError . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / ant / checkstyleanttask / InputCheckstyleAntTaskError . java 
 @ @ - 4 , 7 + 4 , 7 @ @ package com . puppycrawl . tools . checkstyle . ant . checkstyleanttask ; 
 * @ incomplete Some javadoc 
 * / 
 public final class InputCheckstyleAntTaskError { 
 - private static final String FOO = " This line is longer then 70 characters . " ; 
 + private static final String FOO = " This line is longer than 70 characters . " ; 
 
 - private static final String FOOO = " This line is longer then 70 characters . " ; 
 + private static final String FOOO = " This line is longer than 70 characters . " ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / designforextension / InputDesignForExtensionOverridableMethods . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / designforextension / InputDesignForExtensionOverridableMethods . java 
 index 6e3df76 . . bc82d0f 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / designforextension / InputDesignForExtensionOverridableMethods . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / designforextension / InputDesignForExtensionOverridableMethods . java 
 @ @ - 209 , 7 + 209 , 7 @ @ public class InputDesignForExtensionOverridableMethods { 
 
 / * * 
 * @ param indent indentation to check . 
 - * @ return true if { @ code indent } less then minimal of 
 + * @ return true if { @ code indent } less than minimal of 
 * acceptable indentation levels , false otherwise . 
 * / 
 public boolean isGreaterThan ( int indent ) { 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index 291c17e . . ecc2a06 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 4840 , 7 + 4840 , 7 @ @ for ( int i = 0 ; i & lt ; 20 ; i + + ) { 
 Distance for variable ' sum ' = 3 . 
 < / p > 
 < p > 
 - As the distance is more then the default one , the Check 
 + As the distance is more than the default one , the Check 
 raises warning for variable ' sum ' to move it into the ' for ( . . . ) ' block . 
 But there is situation when variable ' sum ' hasn ' t to be 0 within each iteration . 
 So , to avoid such warnings you can use Suppression Filter , provided by 
 diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml 
 index d7df492 . . cdd36cc 100644 
 - - - a / src / xdocs / config _ imports . xml 
 + + + b / src / xdocs / config _ imports . xml 
 @ @ - 330 , 7 + 330 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . imports . AvoidStarImportCheck ; 
 < / source > 
 < p > 
 Result : import will be assigned to SPECIAL _ IMPORTS . Matching substring length is 5 for 
 - both patterns . However , " Avoid " position is lower then " Check " position . 
 + both patterns . However , " Avoid " position is lower than " Check " position . 
 < / p > 
 < / subsection > 


NEAREST DIFF:
diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm 
 index 2809831 . . 43ffebb 100644 
 - - - a / src / xdocs / index . xml . vm 
 + + + b / src / xdocs / index . xml . vm 
 @ @ - 338 , 7 + 338 , 7 @ @ 
 < td > Combines multiple tools ( CheckStyle , findbugs , PMD , Cobertura , etc . ) < / td > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . bluej . org " > BlueJ < / a > < / td > 
 + < td > < a href = " https : / / www . bluej . org / " > BlueJ < / a > < / td > 
 < td > Rick Giles < / td > 
 < td > < a href = " http : / / bluejcheckstyle . sourceforge . net / " > bluejcheckstyle home page < / a > < / td > 
 < td / >
