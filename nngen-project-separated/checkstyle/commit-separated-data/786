BLEU SCORE: 0.04767707020457096

TEST MSG: minor : fix for linkcheck failure for stackoverflow link
GENERATED MSG: stackoverflow added to main page

TEST DIFF (one line): diff - - git a / src / site / site . xml b / src / site / site . xml <nl> index 396c4e6 . . 465e8e4 100644 <nl> - - - a / src / site / site . xml <nl> + + + b / src / site / site . xml <nl> @ @ - 32 , 7 + 32 , 7 @ @ <nl> / > <nl> < logo name = " Stackoverflow " <nl> img = " images / stackoverflow . jpeg " <nl> - href = " http : / / stackoverflow . com / questions / tagged / checkstyle " <nl> + href = " https : / / stackoverflow . com / questions / tagged / checkstyle " <nl> / > <nl> < logo name = " GoogleGroups " <nl> img = " images / groups . png "
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java <nl> index 0f01c64 . . 8b0572a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java <nl> @ @ - 18 , 10 + 18 , 7 @ @ <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> package com . puppycrawl . tools . checkstyle . checks . indentation ; <nl> <nl> - import java . util . SortedSet ; <nl> - <nl> - import com . google . common . base . Joiner ; <nl> - import com . google . common . collect . Sets ; <nl> + import java . util . BitSet ; <nl> <nl> / * * <nl> * Encapsulates representation of notion of expected indentation levels . <nl> @ @ - 32 , 7 + 29 , 7 @ @ import com . google . common . collect . Sets ; <nl> public class IndentLevel <nl> { <nl> / * * set of acceptable indentation levels . * / <nl> - private final SortedSet < Integer > mLevels = Sets . newTreeSet ( ) ; <nl> + private final BitSet mLevels = new BitSet ( ) ; <nl> <nl> / * * <nl> * Creates new instance with one accaptable indentation level . <nl> @ @ - 40 , 7 + 37 , 7 @ @ public class IndentLevel <nl> * / <nl> public IndentLevel ( int aIndent ) <nl> { <nl> - mLevels . add ( aIndent ) ; <nl> + mLevels . set ( aIndent ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 50 , 9 + 47 , 10 @ @ public class IndentLevel <nl> * / <nl> public IndentLevel ( IndentLevel aBase , int . . . aOffsets ) <nl> { <nl> - for ( Integer base : aBase . mLevels ) { <nl> + final BitSet src = aBase . mLevels ; <nl> + for ( int i = src . nextSetBit ( 0 ) ; i > = 0 ; i = src . nextSetBit ( i + 1 ) ) { <nl> for ( int offset : aOffsets ) { <nl> - mLevels . add ( base + offset ) ; <nl> + mLevels . set ( i + offset ) ; <nl> } <nl> } <nl> } <nl> @ @ - 63 , 7 + 61 , 7 @ @ public class IndentLevel <nl> * / <nl> public final boolean isMultiLevel ( ) <nl> { <nl> - return mLevels . size ( ) > 1 ; <nl> + return mLevels . cardinality ( ) > 1 ; <nl> } <nl> <nl> / * * <nl> @ @ - 74 , 7 + 72 , 7 @ @ public class IndentLevel <nl> * / <nl> public boolean accept ( int aIndent ) <nl> { <nl> - return ( mLevels . contains ( aIndent ) ) ; <nl> + return mLevels . get ( aIndent ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 84 , 7 + 82 , 7 @ @ public class IndentLevel <nl> * / <nl> public boolean gt ( int aIndent ) <nl> { <nl> - return ( ( mLevels . first ( ) ) . intValue ( ) > aIndent ) ; <nl> + return mLevels . nextSetBit ( 0 ) > aIndent ; <nl> } <nl> <nl> / * * <nl> @ @ - 93 , 7 + 91 , 7 @ @ public class IndentLevel <nl> * / <nl> public void addAcceptedIndent ( int aIndent ) <nl> { <nl> - mLevels . add ( aIndent ) ; <nl> + mLevels . set ( aIndent ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 102 , 7 + 100 , 7 @ @ public class IndentLevel <nl> * / <nl> public void addAcceptedIndent ( IndentLevel aIndent ) <nl> { <nl> - mLevels . addAll ( aIndent . mLevels ) ; <nl> + mLevels . or ( aIndent . mLevels ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 111 , 7 + 109 , 7 @ @ public class IndentLevel <nl> * / <nl> public int getFirstIndentLevel ( ) <nl> { <nl> - return mLevels . first ( ) ; <nl> + return mLevels . nextSetBit ( 0 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 120 , 12 + 118 , 24 @ @ public class IndentLevel <nl> * / <nl> public int getLastIndentLevel ( ) <nl> { <nl> - return mLevels . last ( ) ; <nl> + return mLevels . length ( ) - 1 ; <nl> } <nl> <nl> @ Override <nl> public String toString ( ) <nl> { <nl> - return Joiner . on ( " , " ) . join ( mLevels ) ; <nl> + if ( mLevels . cardinality ( ) = = 1 ) { <nl> + return String . valueOf ( mLevels . nextSetBit ( 0 ) ) ; <nl> + } <nl> + final StringBuilder sb = new StringBuilder ( ) ; <nl> + for ( int i = mLevels . nextSetBit ( 0 ) ; i > = 0 ; <nl> + i = mLevels . nextSetBit ( i + 1 ) ) <nl> + { <nl> + if ( sb . length ( ) > 0 ) { <nl> + sb . append ( " , " ) ; <nl> + } <nl> + sb . append ( i ) ; <nl> + } <nl> + return sb . toString ( ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / site / site . xml b / src / site / site . xml 
 index 396c4e6 . . 465e8e4 100644 
 - - - a / src / site / site . xml 
 + + + b / src / site / site . xml 
 @ @ - 32 , 7 + 32 , 7 @ @ 
 / > 
 < logo name = " Stackoverflow " 
 img = " images / stackoverflow . jpeg " 
 - href = " http : / / stackoverflow . com / questions / tagged / checkstyle " 
 + href = " https : / / stackoverflow . com / questions / tagged / checkstyle " 
 / > 
 < logo name = " GoogleGroups " 
 img = " images / groups . png "

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java 
 index 0f01c64 . . 8b0572a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java 
 @ @ - 18 , 10 + 18 , 7 @ @ 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 package com . puppycrawl . tools . checkstyle . checks . indentation ; 
 
 - import java . util . SortedSet ; 
 - 
 - import com . google . common . base . Joiner ; 
 - import com . google . common . collect . Sets ; 
 + import java . util . BitSet ; 
 
 / * * 
 * Encapsulates representation of notion of expected indentation levels . 
 @ @ - 32 , 7 + 29 , 7 @ @ import com . google . common . collect . Sets ; 
 public class IndentLevel 
 { 
 / * * set of acceptable indentation levels . * / 
 - private final SortedSet < Integer > mLevels = Sets . newTreeSet ( ) ; 
 + private final BitSet mLevels = new BitSet ( ) ; 
 
 / * * 
 * Creates new instance with one accaptable indentation level . 
 @ @ - 40 , 7 + 37 , 7 @ @ public class IndentLevel 
 * / 
 public IndentLevel ( int aIndent ) 
 { 
 - mLevels . add ( aIndent ) ; 
 + mLevels . set ( aIndent ) ; 
 } 
 
 / * * 
 @ @ - 50 , 9 + 47 , 10 @ @ public class IndentLevel 
 * / 
 public IndentLevel ( IndentLevel aBase , int . . . aOffsets ) 
 { 
 - for ( Integer base : aBase . mLevels ) { 
 + final BitSet src = aBase . mLevels ; 
 + for ( int i = src . nextSetBit ( 0 ) ; i > = 0 ; i = src . nextSetBit ( i + 1 ) ) { 
 for ( int offset : aOffsets ) { 
 - mLevels . add ( base + offset ) ; 
 + mLevels . set ( i + offset ) ; 
 } 
 } 
 } 
 @ @ - 63 , 7 + 61 , 7 @ @ public class IndentLevel 
 * / 
 public final boolean isMultiLevel ( ) 
 { 
 - return mLevels . size ( ) > 1 ; 
 + return mLevels . cardinality ( ) > 1 ; 
 } 
 
 / * * 
 @ @ - 74 , 7 + 72 , 7 @ @ public class IndentLevel 
 * / 
 public boolean accept ( int aIndent ) 
 { 
 - return ( mLevels . contains ( aIndent ) ) ; 
 + return mLevels . get ( aIndent ) ; 
 } 
 
 / * * 
 @ @ - 84 , 7 + 82 , 7 @ @ public class IndentLevel 
 * / 
 public boolean gt ( int aIndent ) 
 { 
 - return ( ( mLevels . first ( ) ) . intValue ( ) > aIndent ) ; 
 + return mLevels . nextSetBit ( 0 ) > aIndent ; 
 } 
 
 / * * 
 @ @ - 93 , 7 + 91 , 7 @ @ public class IndentLevel 
 * / 
 public void addAcceptedIndent ( int aIndent ) 
 { 
 - mLevels . add ( aIndent ) ; 
 + mLevels . set ( aIndent ) ; 
 } 
 
 / * * 
 @ @ - 102 , 7 + 100 , 7 @ @ public class IndentLevel 
 * / 
 public void addAcceptedIndent ( IndentLevel aIndent ) 
 { 
 - mLevels . addAll ( aIndent . mLevels ) ; 
 + mLevels . or ( aIndent . mLevels ) ; 
 } 
 
 / * * 
 @ @ - 111 , 7 + 109 , 7 @ @ public class IndentLevel 
 * / 
 public int getFirstIndentLevel ( ) 
 { 
 - return mLevels . first ( ) ; 
 + return mLevels . nextSetBit ( 0 ) ; 
 } 
 
 / * * 
 @ @ - 120 , 12 + 118 , 24 @ @ public class IndentLevel 
 * / 
 public int getLastIndentLevel ( ) 
 { 
 - return mLevels . last ( ) ; 
 + return mLevels . length ( ) - 1 ; 
 } 
 
 @ Override 
 public String toString ( ) 
 { 
 - return Joiner . on ( " , " ) . join ( mLevels ) ; 
 + if ( mLevels . cardinality ( ) = = 1 ) { 
 + return String . valueOf ( mLevels . nextSetBit ( 0 ) ) ; 
 + } 
 + final StringBuilder sb = new StringBuilder ( ) ; 
 + for ( int i = mLevels . nextSetBit ( 0 ) ; i > = 0 ; 
 + i = mLevels . nextSetBit ( i + 1 ) ) 
 + { 
 + if ( sb . length ( ) > 0 ) { 
 + sb . append ( " , " ) ; 
 + } 
 + sb . append ( i ) ; 
 + } 
 + return sb . toString ( ) ; 
 } 
 }
