BLEU SCORE: 0.025708144432736023

TEST MSG: infra : releasenotes build
GENERATED MSG: Issue # 2245 : Add release dry run to Travis build configuration

TEST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index 614b810 . . 340487e 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 224 , 10 + 224 , 30 @ @ matrix : <nl> - DESC = " checkstyle " <nl> - CMD = " mvn clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " <nl> - COVERAGE _ CMD = " " <nl> + <nl> # MacOS verify <nl> - os : osx <nl> - env : DESC = " MacOS verify " CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " <nl> - <nl> + env : <nl> + - DESC = " MacOS verify " <nl> + - CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & mvn clean integration - test failsafe : verify " <nl> + - COVERAGE _ CMD = " " <nl> + <nl> + # Releasenotes generation - validaton <nl> + - jdk : oraclejdk8 <nl> + env : <nl> + - DESC = " Releasenotes generation " <nl> + - CMD0 = " if [ [ $ TRAVIS _ PULL _ REQUEST ] ] ; then exit 0 ; fi " <nl> + - CMD1 = " & & git clone https : / / github . com / checkstyle / contribution & & cd contribution / releasenotes - xdoc - builder " <nl> + - CMD2 = " & & mvn clean compile package " <nl> + - CMD3 = " & & cd . . / . . / " <nl> + - CMD4 = " & & LATEST _ RELEASE _ TAG = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) ) " <nl> + - CMD5 = " & & CS _ RELEASE _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec | sed ' s / - SNAPSHOT / / ' ) " <nl> + - CMD6 = " & & java - jar contribution / releasenotes - xdoc - builder / target / releasenotes - xdoc - builder - 1 . 0 - all . jar " <nl> + - CMD7 = " - localRepoPath . - startRef \ $ LATEST _ RELEASE _ TAG - releaseNumber \ $ CS _ RELEASE _ VERSION - authToken $ GITHUB _ AUTH _ TOKEN " <nl> + - CMD8 = " & & cat releasenotes . xml " <nl> + - CMD = $ CMD0 $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 $ CMD8 <nl> + - COVERAGE _ CMD = " " <nl> + <nl> script : eval $ CMD <nl> <nl> after _ success :
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / JavadocTagContinuationIndentationTest . java b / src / it / java / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / JavadocTagContinuationIndentationTest . java <nl> index cc1ecee . . 8143b08 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / JavadocTagContinuationIndentationTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / JavadocTagContinuationIndentationTest . java <nl> @ @ - 2 , 58 + 2 , 38 @ @ package com . google . checkstyle . test . chapter7javadoc . rule713atclauses ; <nl> <nl> import java . io . File ; <nl> <nl> - import org . junit . BeforeClass ; <nl> import org . junit . Test ; <nl> <nl> import com . google . checkstyle . test . base . BaseCheckTestSupport ; <nl> import com . google . checkstyle . test . base . ConfigurationBuilder ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> - import com . puppycrawl . tools . checkstyle . checks . coding . NoFinalizerCheck ; <nl> + import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTagContinuationIndentationCheck ; <nl> <nl> public class JavadocTagContinuationIndentationTest extends BaseCheckTestSupport { <nl> <nl> - private static ConfigurationBuilder builder ; <nl> - <nl> - @ BeforeClass <nl> - public static void setConfigurationBuilder ( ) { <nl> - builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void noFinalizerBasicTest ( ) throws Exception { <nl> - <nl> - String msg = getCheckMessage ( NoFinalizerCheck . class , " avoid . finalizer . method " ) ; <nl> - <nl> - final String [ ] expected = { <nl> - " 5 : " + msg , <nl> - } ; <nl> - <nl> - Configuration checkConfig = builder . getCheckConfig ( " NoFinalizer " ) ; <nl> - String filePath = builder . getFilePath ( " NoFinalizerInput " ) ; <nl> - <nl> - Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> - verify ( checkConfig , filePath , expected , warnList ) ; <nl> - } <nl> - <nl> @ Test <nl> - public void noFinalizerExtendedTest ( ) throws Exception { <nl> - <nl> - String msg = getCheckMessage ( NoFinalizerCheck . class , " avoid . finalizer . method " ) ; <nl> + public void testWithDefaultConfiguration ( ) throws Exception { <nl> + ConfigurationBuilder builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> + String msg = getCheckMessage ( JavadocTagContinuationIndentationCheck . class , <nl> + " tag . continuation . indent " , 4 ) ; <nl> <nl> final String [ ] expected = { <nl> - " 9 : " + msg , <nl> - " 21 : " + msg , <nl> - " 33 : " + msg , <nl> - " 45 : " + msg , <nl> - " 57 : " + msg , <nl> - " 69 : " + msg , <nl> - " 79 : " + msg , <nl> - " 119 : " + msg , <nl> - " 136 : " + msg , <nl> + " 47 : " + msg , <nl> + " 109 : " + msg , <nl> + " 112 : " + msg , <nl> + " 203 : " + msg , <nl> + " 206 : " + msg , <nl> + " 221 : " + msg , <nl> + " 223 : " + msg , <nl> + " 285 : " + msg , <nl> + " 288 : " + msg , <nl> + " 290 : " + msg , <nl> + " 310 : " + msg , <nl> + " 322 : " + msg , <nl> } ; <nl> <nl> - Configuration checkConfig = builder . getCheckConfig ( " NoFinalizer " ) ; <nl> - String filePath = builder . getFilePath ( " NoFinalizeExtendInput " ) ; <nl> + Configuration checkConfig = builder . getCheckConfig ( " JavadocTagContinuationIndentation " ) ; <nl> + String filePath = builder . getFilePath ( " InputJavaDocTagContinuationIndentation " ) ; <nl> <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ;

TEST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index 614b810 . . 340487e 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 224 , 10 + 224 , 30 @ @ matrix : 
 - DESC = " checkstyle " 
 - CMD = " mvn clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " 
 - COVERAGE _ CMD = " " 
 + 
 # MacOS verify 
 - os : osx 
 - env : DESC = " MacOS verify " CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " 
 - 
 + env : 
 + - DESC = " MacOS verify " 
 + - CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & mvn clean integration - test failsafe : verify " 
 + - COVERAGE _ CMD = " " 
 + 
 + # Releasenotes generation - validaton 
 + - jdk : oraclejdk8 
 + env : 
 + - DESC = " Releasenotes generation " 
 + - CMD0 = " if [ [ $ TRAVIS _ PULL _ REQUEST ] ] ; then exit 0 ; fi " 
 + - CMD1 = " & & git clone https : / / github . com / checkstyle / contribution & & cd contribution / releasenotes - xdoc - builder " 
 + - CMD2 = " & & mvn clean compile package " 
 + - CMD3 = " & & cd . . / . . / " 
 + - CMD4 = " & & LATEST _ RELEASE _ TAG = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) ) " 
 + - CMD5 = " & & CS _ RELEASE _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec | sed ' s / - SNAPSHOT / / ' ) " 
 + - CMD6 = " & & java - jar contribution / releasenotes - xdoc - builder / target / releasenotes - xdoc - builder - 1 . 0 - all . jar " 
 + - CMD7 = " - localRepoPath . - startRef \ $ LATEST _ RELEASE _ TAG - releaseNumber \ $ CS _ RELEASE _ VERSION - authToken $ GITHUB _ AUTH _ TOKEN " 
 + - CMD8 = " & & cat releasenotes . xml " 
 + - CMD = $ CMD0 $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 $ CMD8 
 + - COVERAGE _ CMD = " " 
 + 
 script : eval $ CMD 
 
 after _ success :

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / JavadocTagContinuationIndentationTest . java b / src / it / java / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / JavadocTagContinuationIndentationTest . java 
 index cc1ecee . . 8143b08 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / JavadocTagContinuationIndentationTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / JavadocTagContinuationIndentationTest . java 
 @ @ - 2 , 58 + 2 , 38 @ @ package com . google . checkstyle . test . chapter7javadoc . rule713atclauses ; 
 
 import java . io . File ; 
 
 - import org . junit . BeforeClass ; 
 import org . junit . Test ; 
 
 import com . google . checkstyle . test . base . BaseCheckTestSupport ; 
 import com . google . checkstyle . test . base . ConfigurationBuilder ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 - import com . puppycrawl . tools . checkstyle . checks . coding . NoFinalizerCheck ; 
 + import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTagContinuationIndentationCheck ; 
 
 public class JavadocTagContinuationIndentationTest extends BaseCheckTestSupport { 
 
 - private static ConfigurationBuilder builder ; 
 - 
 - @ BeforeClass 
 - public static void setConfigurationBuilder ( ) { 
 - builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 - } 
 - 
 - @ Test 
 - public void noFinalizerBasicTest ( ) throws Exception { 
 - 
 - String msg = getCheckMessage ( NoFinalizerCheck . class , " avoid . finalizer . method " ) ; 
 - 
 - final String [ ] expected = { 
 - " 5 : " + msg , 
 - } ; 
 - 
 - Configuration checkConfig = builder . getCheckConfig ( " NoFinalizer " ) ; 
 - String filePath = builder . getFilePath ( " NoFinalizerInput " ) ; 
 - 
 - Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 - verify ( checkConfig , filePath , expected , warnList ) ; 
 - } 
 - 
 @ Test 
 - public void noFinalizerExtendedTest ( ) throws Exception { 
 - 
 - String msg = getCheckMessage ( NoFinalizerCheck . class , " avoid . finalizer . method " ) ; 
 + public void testWithDefaultConfiguration ( ) throws Exception { 
 + ConfigurationBuilder builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 + String msg = getCheckMessage ( JavadocTagContinuationIndentationCheck . class , 
 + " tag . continuation . indent " , 4 ) ; 
 
 final String [ ] expected = { 
 - " 9 : " + msg , 
 - " 21 : " + msg , 
 - " 33 : " + msg , 
 - " 45 : " + msg , 
 - " 57 : " + msg , 
 - " 69 : " + msg , 
 - " 79 : " + msg , 
 - " 119 : " + msg , 
 - " 136 : " + msg , 
 + " 47 : " + msg , 
 + " 109 : " + msg , 
 + " 112 : " + msg , 
 + " 203 : " + msg , 
 + " 206 : " + msg , 
 + " 221 : " + msg , 
 + " 223 : " + msg , 
 + " 285 : " + msg , 
 + " 288 : " + msg , 
 + " 290 : " + msg , 
 + " 310 : " + msg , 
 + " 322 : " + msg , 
 } ; 
 
 - Configuration checkConfig = builder . getCheckConfig ( " NoFinalizer " ) ; 
 - String filePath = builder . getFilePath ( " NoFinalizeExtendInput " ) ; 
 + Configuration checkConfig = builder . getCheckConfig ( " JavadocTagContinuationIndentation " ) ; 
 + String filePath = builder . getFilePath ( " InputJavaDocTagContinuationIndentation " ) ; 
 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ;
