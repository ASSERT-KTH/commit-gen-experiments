BLEU SCORE: 0.5401725898595141

TEST MSG: Issue # 3891 : Split and Organize Checkstyle inputs by Test , renamed test method name and test resource
GENERATED MSG: Issue # 3891 : Split and Organize Checkstyle inputs by Test for AvoidInlineConditionals

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheckTest . java <nl> index 780c3ab . . 391e08a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheckTest . java <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class AvoidInlineConditionalsCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testIt ( ) <nl> + public void testDefault ( ) <nl> throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( AvoidInlineConditionalsCheck . class ) ; <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class AvoidInlineConditionalsCheckTest <nl> " 33 : 20 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 46 : 34 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputWhitespace . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputAvoidInlineConditionals . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputAvoidInlineConditionals . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputAvoidInlineConditionals . java <nl> new file mode 100644 <nl> index 0000000 . . 5893a80 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputAvoidInlineConditionals . java <nl> @ @ - 0 , 0 + 1 , 54 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl <nl> + . tools . <nl> + checkstyle . checks . coding . avoidinlineconditionals ; <nl> + <nl> + / * * <nl> + * Class for testing inline conditionals . <nl> + * error missing author tag <nl> + * * / <nl> + class InputAvoidInlineConditionals <nl> + { <nl> + / * * method * * / <nl> + void method1 ( ) <nl> + { <nl> + final int a = 1 ; <nl> + int b = 1 ; / / Ignore 1 <nl> + b = 1 ; / / Ignore 1 <nl> + b + = 1 ; / / Ignore 1 <nl> + b - = - 1 + ( + b ) ; / / Ignore 2 <nl> + b = b + + + b - - ; / / Ignore 1 <nl> + b = + + b - - - b ; / / Ignore 1 <nl> + } <nl> + <nl> + private int mVar4 = 1 ; <nl> + <nl> + / * * test questions * * / <nl> + private void testQuestions ( ) <nl> + { <nl> + boolean b = ( 1 = = 2 ) ? true : false ; <nl> + b = ( 1 = = 2 ) ? false : true ; <nl> + } <nl> + <nl> + / * * assert statement test * / <nl> + public void assertTest ( ) <nl> + { <nl> + / / OK <nl> + assert true ; <nl> + <nl> + / / OK <nl> + assert true : " Whups " ; <nl> + <nl> + / / evil colons , should be OK <nl> + assert " OK " . equals ( null ) ? false : true : " Whups " ; <nl> + <nl> + / / missing WS around assert <nl> + assert ( true ) ; <nl> + <nl> + / / missing WS around colon <nl> + assert true : " Whups " ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputWhitespace . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputWhitespace . java <nl> deleted file mode 100644 <nl> index 46069a2 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputWhitespace . java <nl> + + + / dev / null <nl> @ @ - 1 , 54 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2001 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl <nl> - . tools . <nl> - checkstyle . checks . coding . avoidinlineconditionals ; <nl> - <nl> - / * * <nl> - * Class for testing inline conditionals . <nl> - * error missing author tag <nl> - * * / <nl> - class InputWhitespace <nl> - { <nl> - / * * method * * / <nl> - void method1 ( ) <nl> - { <nl> - final int a = 1 ; <nl> - int b = 1 ; / / Ignore 1 <nl> - b = 1 ; / / Ignore 1 <nl> - b + = 1 ; / / Ignore 1 <nl> - b - = - 1 + ( + b ) ; / / Ignore 2 <nl> - b = b + + + b - - ; / / Ignore 1 <nl> - b = + + b - - - b ; / / Ignore 1 <nl> - } <nl> - <nl> - private int mVar4 = 1 ; <nl> - <nl> - / * * test questions * * / <nl> - private void testQuestions ( ) <nl> - { <nl> - boolean b = ( 1 = = 2 ) ? true : false ; <nl> - b = ( 1 = = 2 ) ? false : true ; <nl> - } <nl> - <nl> - / * * assert statement test * / <nl> - public void assertTest ( ) <nl> - { <nl> - / / OK <nl> - assert true ; <nl> - <nl> - / / OK <nl> - assert true : " Whups " ; <nl> - <nl> - / / evil colons , should be OK <nl> - assert " OK " . equals ( null ) ? false : true : " Whups " ; <nl> - <nl> - / / missing WS around assert <nl> - assert ( true ) ; <nl> - <nl> - / / missing WS around colon <nl> - assert true : " Whups " ; <nl> - } <nl> - }
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheckTest . java <nl> index d87f83f . . a3bd0a4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheckTest . java <nl> @ @ - 50 , 7 + 50 , 8 @ @ public class EmptyForInitializerPadCheckTest <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " whitespace " + File . separator + filename ) ; <nl> + + " whitespace " + File . separator + " emptyforinitializerpad " <nl> + + File . separator + filename ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 65 , 7 + 66 , 7 @ @ public class EmptyForInitializerPadCheckTest <nl> final String [ ] expected = { <nl> " 48 : 14 : " + getCheckMessage ( MSG _ PRECEDED , " ; " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputForWhitespace . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputEmptyForInitializerPadDefaultConfig . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 74 , 7 + 75 , 7 @ @ public class EmptyForInitializerPadCheckTest <nl> final String [ ] expected = { <nl> " 51 : 13 : " + getCheckMessage ( MSG _ NOT _ PRECEDED , " ; " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputForWhitespace . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputEmptyForInitializerPad . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 115 , 7 + 116 , 7 @ @ public class EmptyForInitializerPadCheckTest <nl> try { <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " InputForWhitespace . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputEmptyForInitializerPad . java " ) , expected ) ; <nl> fail ( " exception expected " ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPad . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPad . java <nl> new file mode 100644 <nl> index 0000000 . . 9d263cf <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPad . java <nl> @ @ - 0 , 0 + 1 , 58 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for FOR _ ITERATION and whitespace . <nl> + / / Created : 2003 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . emptyforinitializerpad ; <nl> + <nl> + class InputEmptyForInitializerPad <nl> + { <nl> + void method1 ( ) <nl> + { <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; ) { <nl> + i + + ; <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; ) { <nl> + i + + ; <nl> + } <nl> + <nl> + / / test eol , there is no space after second SEMI <nl> + for ( int i = 0 ; i < 1 ; <nl> + ) { <nl> + i + + ; <nl> + } <nl> + } <nl> + <nl> + void method2 ( ) <nl> + { <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; ) { <nl> + i + + ; <nl> + } <nl> + <nl> + int i = 0 ; <nl> + for ( ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( ; i < 2 ; i + + ) { <nl> + } <nl> + <nl> + for ( <nl> + ; ; ) { <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPadDefaultConfig . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPadDefaultConfig . java <nl> new file mode 100644 <nl> index 0000000 . . b255773 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPadDefaultConfig . java <nl> @ @ - 0 , 0 + 1 , 58 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for FOR _ ITERATION and whitespace . <nl> + / / Created : 2003 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . emptyforinitializerpad ; <nl> + <nl> + class InputEmptyForInitializerPadDefaultConfig <nl> + { <nl> + void method1 ( ) <nl> + { <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; ) { <nl> + i + + ; <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; ) { <nl> + i + + ; <nl> + } <nl> + <nl> + / / test eol , there is no space after second SEMI <nl> + for ( int i = 0 ; i < 1 ; <nl> + ) { <nl> + i + + ; <nl> + } <nl> + } <nl> + <nl> + void method2 ( ) <nl> + { <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 1 ; ) { <nl> + i + + ; <nl> + } <nl> + <nl> + int i = 0 ; <nl> + for ( ; i < 1 ; i + + ) { <nl> + } <nl> + <nl> + for ( ; i < 2 ; i + + ) { <nl> + } <nl> + <nl> + for ( <nl> + ; ; ) { <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheckTest . java 
 index 780c3ab . . 391e08a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheckTest . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class AvoidInlineConditionalsCheckTest 
 } 
 
 @ Test 
 - public void testIt ( ) 
 + public void testDefault ( ) 
 throws Exception { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( AvoidInlineConditionalsCheck . class ) ; 
 @ @ - 49 , 7 + 49 , 7 @ @ public class AvoidInlineConditionalsCheckTest 
 " 33 : 20 : " + getCheckMessage ( MSG _ KEY ) , 
 " 46 : 34 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputWhitespace . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputAvoidInlineConditionals . java " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputAvoidInlineConditionals . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputAvoidInlineConditionals . java 
 new file mode 100644 
 index 0000000 . . 5893a80 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputAvoidInlineConditionals . java 
 @ @ - 0 , 0 + 1 , 54 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl 
 + . tools . 
 + checkstyle . checks . coding . avoidinlineconditionals ; 
 + 
 + / * * 
 + * Class for testing inline conditionals . 
 + * error missing author tag 
 + * * / 
 + class InputAvoidInlineConditionals 
 + { 
 + / * * method * * / 
 + void method1 ( ) 
 + { 
 + final int a = 1 ; 
 + int b = 1 ; / / Ignore 1 
 + b = 1 ; / / Ignore 1 
 + b + = 1 ; / / Ignore 1 
 + b - = - 1 + ( + b ) ; / / Ignore 2 
 + b = b + + + b - - ; / / Ignore 1 
 + b = + + b - - - b ; / / Ignore 1 
 + } 
 + 
 + private int mVar4 = 1 ; 
 + 
 + / * * test questions * * / 
 + private void testQuestions ( ) 
 + { 
 + boolean b = ( 1 = = 2 ) ? true : false ; 
 + b = ( 1 = = 2 ) ? false : true ; 
 + } 
 + 
 + / * * assert statement test * / 
 + public void assertTest ( ) 
 + { 
 + / / OK 
 + assert true ; 
 + 
 + / / OK 
 + assert true : " Whups " ; 
 + 
 + / / evil colons , should be OK 
 + assert " OK " . equals ( null ) ? false : true : " Whups " ; 
 + 
 + / / missing WS around assert 
 + assert ( true ) ; 
 + 
 + / / missing WS around colon 
 + assert true : " Whups " ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputWhitespace . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputWhitespace . java 
 deleted file mode 100644 
 index 46069a2 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / avoidinlineconditionals / InputWhitespace . java 
 + + + / dev / null 
 @ @ - 1 , 54 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2001 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl 
 - . tools . 
 - checkstyle . checks . coding . avoidinlineconditionals ; 
 - 
 - / * * 
 - * Class for testing inline conditionals . 
 - * error missing author tag 
 - * * / 
 - class InputWhitespace 
 - { 
 - / * * method * * / 
 - void method1 ( ) 
 - { 
 - final int a = 1 ; 
 - int b = 1 ; / / Ignore 1 
 - b = 1 ; / / Ignore 1 
 - b + = 1 ; / / Ignore 1 
 - b - = - 1 + ( + b ) ; / / Ignore 2 
 - b = b + + + b - - ; / / Ignore 1 
 - b = + + b - - - b ; / / Ignore 1 
 - } 
 - 
 - private int mVar4 = 1 ; 
 - 
 - / * * test questions * * / 
 - private void testQuestions ( ) 
 - { 
 - boolean b = ( 1 = = 2 ) ? true : false ; 
 - b = ( 1 = = 2 ) ? false : true ; 
 - } 
 - 
 - / * * assert statement test * / 
 - public void assertTest ( ) 
 - { 
 - / / OK 
 - assert true ; 
 - 
 - / / OK 
 - assert true : " Whups " ; 
 - 
 - / / evil colons , should be OK 
 - assert " OK " . equals ( null ) ? false : true : " Whups " ; 
 - 
 - / / missing WS around assert 
 - assert ( true ) ; 
 - 
 - / / missing WS around colon 
 - assert true : " Whups " ; 
 - } 
 - }

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheckTest . java 
 index d87f83f . . a3bd0a4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheckTest . java 
 @ @ - 50 , 7 + 50 , 8 @ @ public class EmptyForInitializerPadCheckTest 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " whitespace " + File . separator + filename ) ; 
 + + " whitespace " + File . separator + " emptyforinitializerpad " 
 + + File . separator + filename ) ; 
 } 
 
 @ Test 
 @ @ - 65 , 7 + 66 , 7 @ @ public class EmptyForInitializerPadCheckTest 
 final String [ ] expected = { 
 " 48 : 14 : " + getCheckMessage ( MSG _ PRECEDED , " ; " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputForWhitespace . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputEmptyForInitializerPadDefaultConfig . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 74 , 7 + 75 , 7 @ @ public class EmptyForInitializerPadCheckTest 
 final String [ ] expected = { 
 " 51 : 13 : " + getCheckMessage ( MSG _ NOT _ PRECEDED , " ; " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputForWhitespace . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputEmptyForInitializerPad . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 115 , 7 + 116 , 7 @ @ public class EmptyForInitializerPadCheckTest 
 try { 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " InputForWhitespace . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputEmptyForInitializerPad . java " ) , expected ) ; 
 fail ( " exception expected " ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPad . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPad . java 
 new file mode 100644 
 index 0000000 . . 9d263cf 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPad . java 
 @ @ - 0 , 0 + 1 , 58 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for FOR _ ITERATION and whitespace . 
 + / / Created : 2003 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . emptyforinitializerpad ; 
 + 
 + class InputEmptyForInitializerPad 
 + { 
 + void method1 ( ) 
 + { 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; ) { 
 + i + + ; 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; ) { 
 + i + + ; 
 + } 
 + 
 + / / test eol , there is no space after second SEMI 
 + for ( int i = 0 ; i < 1 ; 
 + ) { 
 + i + + ; 
 + } 
 + } 
 + 
 + void method2 ( ) 
 + { 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; ) { 
 + i + + ; 
 + } 
 + 
 + int i = 0 ; 
 + for ( ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( ; i < 2 ; i + + ) { 
 + } 
 + 
 + for ( 
 + ; ; ) { 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPadDefaultConfig . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPadDefaultConfig . java 
 new file mode 100644 
 index 0000000 . . b255773 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / emptyforinitializerpad / InputEmptyForInitializerPadDefaultConfig . java 
 @ @ - 0 , 0 + 1 , 58 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for FOR _ ITERATION and whitespace . 
 + / / Created : 2003 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . emptyforinitializerpad ; 
 + 
 + class InputEmptyForInitializerPadDefaultConfig 
 + { 
 + void method1 ( ) 
 + { 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; ) { 
 + i + + ; 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; ) { 
 + i + + ; 
 + } 
 + 
 + / / test eol , there is no space after second SEMI 
 + for ( int i = 0 ; i < 1 ; 
 + ) { 
 + i + + ; 
 + } 
 + } 
 + 
 + void method2 ( ) 
 + { 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 1 ; ) { 
 + i + + ; 
 + } 
 + 
 + int i = 0 ; 
 + for ( ; i < 1 ; i + + ) { 
 + } 
 + 
 + for ( ; i < 2 ; i + + ) { 
 + } 
 + 
 + for ( 
 + ; ; ) { 
 + } 
 + } 
 + }
