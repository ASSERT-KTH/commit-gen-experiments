BLEU SCORE: 0.01222796968620182

TEST MSG: Issue # 5718 : UpperEll rule description gives bogus reason : Capital L looks like 1
GENERATED MSG: Added the documentation missing in the patch .

TEST DIFF (one line): diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml <nl> index b38d700 . . 2c83277 100644 <nl> - - - a / src / xdocs / config _ misc . xml <nl> + + + b / src / xdocs / config _ misc . xml <nl> @ @ - 1951 , 7 + 1951 , 7 @ @ messages _ home _ fr _ CA _ UNIX . properties <nl> < / p > <nl> <nl> < p > <nl> - The capital L looks a lot like < code > 1 < / code > . <nl> + The lower - case ell < code > ' l ' < / code > looks a lot like < code > 1 < / code > . <nl> < / p > <nl> < / subsection > <nl>
NEAREST DIFF (one line): diff - - git a / AllCheckstyleTests . launch b / AllCheckstyleTests . launch <nl> deleted file mode 100755 <nl> index dade949 . . 0000000 <nl> - - - a / AllCheckstyleTests . launch <nl> + + + / dev / null <nl> @ @ - 1 , 27 + 0 , 0 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " standalone = " no " ? > <nl> - < launchConfiguration type = " org . eclipse . jdt . junit . launchconfig " > <nl> - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ PATHS " > <nl> - < listEntry value = " / checkstyle - v5 / src / tests " / > <nl> - < / listAttribute > <nl> - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ TYPES " > <nl> - < listEntry value = " 2 " / > <nl> - < / listAttribute > <nl> - < booleanAttribute key = " org . eclipse . debug . core . appendEnvironmentVariables " value = " true " / > <nl> - < listAttribute key = " org . eclipse . debug . ui . favoriteGroups " > <nl> - < listEntry value = " org . eclipse . debug . ui . launchGroup . run " / > <nl> - < / listAttribute > <nl> - < stringAttribute key = " org . eclipse . jdt . junit . CONTAINER " value = " = checkstyle - v5 / src \ / tests " / > <nl> - < booleanAttribute key = " org . eclipse . jdt . junit . KEEPRUNNING _ ATTR " value = " false " / > <nl> - < stringAttribute key = " org . eclipse . jdt . junit . TESTNAME " value = " " / > <nl> - < stringAttribute key = " org . eclipse . jdt . junit . TEST _ KIND " value = " org . eclipse . jdt . junit . loader . junit4 " / > <nl> - < listAttribute key = " org . eclipse . jdt . launching . CLASSPATH " > <nl> - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry containerPath = & quot ; org . eclipse . jdt . launching . JRE _ CONTAINER & quot ; javaProject = & quot ; checkstyle - v5 & quot ; path = & quot ; 1 & quot ; type = & quot ; 4 & quot ; / & gt ; & # 13 ; & # 10 ; " / > <nl> - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry id = & quot ; org . eclipse . jdt . launching . classpathentry . defaultClasspath & quot ; & gt ; & # 13 ; & # 10 ; & lt ; memento exportedEntriesOnly = & quot ; false & quot ; project = & quot ; checkstyle - v5 & quot ; / & gt ; & # 13 ; & # 10 ; & lt ; / runtimeClasspathEntry & gt ; & # 13 ; & # 10 ; " / > <nl> - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry internalArchive = & quot ; / checkstyle - v5 / target / testinputs & quot ; path = & quot ; 3 & quot ; type = & quot ; 2 & quot ; / & gt ; & # 13 ; & # 10 ; " / > <nl> - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry internalArchive = & quot ; / checkstyle - v5 / target / checkstyle & quot ; path = & quot ; 3 & quot ; type = & quot ; 2 & quot ; / & gt ; & # 13 ; & # 10 ; " / > <nl> - < / listAttribute > <nl> - < booleanAttribute key = " org . eclipse . jdt . launching . DEFAULT _ CLASSPATH " value = " false " / > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . MAIN _ TYPE " value = " " / > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . PROJECT _ ATTR " value = " checkstyle - v5 " / > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . VM _ ARGUMENTS " value = " - Dtestinputs . dir = $ { project _ loc } \ src \ testinputs \ com \ puppycrawl \ tools \ checkstyle & # 13 ; & # 10 ; - Dcheckstyle . root = $ { project _ loc } " / > <nl> - < / launchConfiguration > <nl> diff - - git a / README - Eclipse . txt b / README - Eclipse . txt <nl> new file mode 100644 <nl> index 0000000 . . abfc618 <nl> - - - / dev / null <nl> + + + b / README - Eclipse . txt <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + To run the JUnit tests in the Eclipse , you need to set the following VM arguments : <nl> + <nl> + - Dtestinputs . dir = $ { project _ loc } \ src \ testinputs \ com \ puppycrawl \ tools \ checkstyle <nl> + - Dtestsrcs . dir = $ { project _ loc } \ src \ tests \ com \ puppycrawl \ tools \ checkstyle <nl> + - Dcheckstyle . root = $ { project _ loc } <nl> diff - - git a / Specific Checkstyle Test . launch b / Specific Checkstyle Test . launch <nl> deleted file mode 100755 <nl> index a62534c . . 0000000 <nl> - - - a / Specific Checkstyle Test . launch 	 <nl> + + + / dev / null <nl> @ @ - 1 , 27 + 0 , 0 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " standalone = " no " ? > <nl> - < launchConfiguration type = " org . eclipse . jdt . junit . launchconfig " > <nl> - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ PATHS " > <nl> - < listEntry value = " / checkstyle - v5 / src / tests / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java " / > <nl> - < / listAttribute > <nl> - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ TYPES " > <nl> - < listEntry value = " 1 " / > <nl> - < / listAttribute > <nl> - < booleanAttribute key = " org . eclipse . debug . core . appendEnvironmentVariables " value = " true " / > <nl> - < listAttribute key = " org . eclipse . debug . ui . favoriteGroups " > <nl> - < listEntry value = " org . eclipse . debug . ui . launchGroup . run " / > <nl> - < / listAttribute > <nl> - < stringAttribute key = " org . eclipse . jdt . junit . CONTAINER " value = " " / > <nl> - < booleanAttribute key = " org . eclipse . jdt . junit . KEEPRUNNING _ ATTR " value = " false " / > <nl> - < stringAttribute key = " org . eclipse . jdt . junit . TESTNAME " value = " " / > <nl> - < stringAttribute key = " org . eclipse . jdt . junit . TEST _ KIND " value = " org . eclipse . jdt . junit . loader . junit4 " / > <nl> - < listAttribute key = " org . eclipse . jdt . launching . CLASSPATH " > <nl> - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry containerPath = & quot ; org . eclipse . jdt . launching . JRE _ CONTAINER & quot ; javaProject = & quot ; checkstyle - v5 & quot ; path = & quot ; 1 & quot ; type = & quot ; 4 & quot ; / & gt ; & # 13 ; & # 10 ; " / > <nl> - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry id = & quot ; org . eclipse . jdt . launching . classpathentry . defaultClasspath & quot ; & gt ; & # 13 ; & # 10 ; & lt ; memento exportedEntriesOnly = & quot ; false & quot ; project = & quot ; checkstyle - v5 & quot ; / & gt ; & # 13 ; & # 10 ; & lt ; / runtimeClasspathEntry & gt ; & # 13 ; & # 10 ; " / > <nl> - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry internalArchive = & quot ; / checkstyle - v5 / target / testinputs & quot ; path = & quot ; 3 & quot ; type = & quot ; 2 & quot ; / & gt ; & # 13 ; & # 10 ; " / > <nl> - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry internalArchive = & quot ; / checkstyle - v5 / target / checkstyle & quot ; path = & quot ; 3 & quot ; type = & quot ; 2 & quot ; / & gt ; & # 13 ; & # 10 ; " / > <nl> - < / listAttribute > <nl> - < booleanAttribute key = " org . eclipse . jdt . launching . DEFAULT _ CLASSPATH " value = " false " / > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . MAIN _ TYPE " value = " com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTypeCheckTest " / > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . PROJECT _ ATTR " value = " checkstyle - v5 " / > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . VM _ ARGUMENTS " value = " - Dtestinputs . dir = $ { project _ loc } \ src \ testinputs \ com \ puppycrawl \ tools \ checkstyle & # 13 ; & # 10 ; - Dcheckstyle . root = $ { project _ loc } " / > <nl> - < / launchConfiguration > <nl> diff - - git a / checkstyle - cmd . launch b / checkstyle - cmd . launch <nl> deleted file mode 100755 <nl> index afa381f . . 0000000 <nl> - - - a / checkstyle - cmd . launch <nl> + + + / dev / null <nl> @ @ - 1 , 17 + 0 , 0 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " standalone = " no " ? > <nl> - < launchConfiguration type = " org . eclipse . jdt . launching . localJavaApplication " > <nl> - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ PATHS " > <nl> - < listEntry value = " / checkstyle - v5 / src / checkstyle / com / puppycrawl / tools / checkstyle / Main . java " / > <nl> - < / listAttribute > <nl> - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ TYPES " > <nl> - < listEntry value = " 1 " / > <nl> - < / listAttribute > <nl> - < booleanAttribute key = " org . eclipse . debug . core . appendEnvironmentVariables " value = " true " / > <nl> - < listAttribute key = " org . eclipse . debug . ui . favoriteGroups " > <nl> - < listEntry value = " org . eclipse . debug . ui . launchGroup . run " / > <nl> - < / listAttribute > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . MAIN _ TYPE " value = " com . puppycrawl . tools . checkstyle . Main " / > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . PROGRAM _ ARGUMENTS " value = " - c $ { project _ loc } / checkstyle _ checks . xml - r $ { project _ loc } / src / checkstyle " / > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . PROJECT _ ATTR " value = " checkstyle - v5 " / > <nl> - < stringAttribute key = " org . eclipse . jdt . launching . VM _ ARGUMENTS " value = " - Dcheckstyle . suppressions . file = $ { project _ loc } / suppressions . xml & # 13 ; & # 10 ; - Dtranslation . severity = ignore & # 13 ; & # 10 ; - Dcheckstyle . header . file = $ { project _ loc } / java . header & # 13 ; & # 10 ; - Dcheckstyle . importcontrol . file = $ { project _ loc } / import - control . xml " / > <nl> - < / launchConfiguration > <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheck . java <nl> index c1131c9 . . 3b3c1a6 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheck . java <nl> @ @ - 44 , 6 + 44 , 19 @ @ public final class MethodCountCheck extends Check <nl> / * * Maintains the counts . * / <nl> private final EnumMap < Scope , Integer > mCounts = <nl> new EnumMap < Scope , Integer > ( Scope . class ) ; <nl> + / * * indicated is an interface , in which case all methods are public * / <nl> + private final boolean mInInterface ; <nl> + / * * tracks the total . * / <nl> + private int mTotal ; <nl> + <nl> + / * * <nl> + * Creates an interface . <nl> + * @ param inInterface indicated if counter for an interface . In which <nl> + * case , add all counts as public methods . <nl> + * / <nl> + MethodCounter ( boolean inInterface ) { <nl> + mInInterface = inInterface ; <nl> + } <nl> <nl> / * * <nl> * Increments to counter by one for the supplied scope . <nl> @ @ - 51 , 7 + 64 , 13 @ @ public final class MethodCountCheck extends Check <nl> * / <nl> void increment ( Scope aScope ) <nl> { <nl> - mCounts . put ( aScope , 1 + value ( aScope ) ) ; <nl> + mTotal + + ; <nl> + if ( mInInterface ) { <nl> + mCounts . put ( Scope . PUBLIC , 1 + value ( Scope . PUBLIC ) ) ; <nl> + } <nl> + else { <nl> + mCounts . put ( aScope , 1 + value ( aScope ) ) ; <nl> + } <nl> } <nl> <nl> / * * <nl> @ @ - 63 , 6 + 82 , 11 @ @ public final class MethodCountCheck extends Check <nl> final Integer value = mCounts . get ( aScope ) ; <nl> return ( null = = value ) ? 0 : value ; <nl> } <nl> + <nl> + / * * @ return the total number of methods . * / <nl> + int getTotal ( ) { <nl> + return mTotal ; <nl> + } <nl> } ; <nl> <nl> / * * default maximum number of methods * / <nl> @ @ - 78 , 7 + 102 , 7 @ @ public final class MethodCountCheck extends Check <nl> / * * Maximum total number of methods . * / <nl> private int mMaxTotal = DEFAULT _ MAX _ METHODS ; <nl> / * * Maintains stack of counters , to support inner types . * / <nl> - private FastStack < MethodCounter > mCounters = <nl> + private final FastStack < MethodCounter > mCounters = <nl> new FastStack < MethodCounter > ( ) ; <nl> <nl> @ Override <nl> @ @ - 94 , 7 + 118 , 8 @ @ public final class MethodCountCheck extends Check <nl> if ( ( TokenTypes . CLASS _ DEF = = aAST . getType ( ) ) <nl> | | ( TokenTypes . INTERFACE _ DEF = = aAST . getType ( ) ) ) <nl> { <nl> - mCounters . push ( new MethodCounter ( ) ) ; <nl> + mCounters . push ( new MethodCounter ( <nl> + TokenTypes . INTERFACE _ DEF = = aAST . getType ( ) ) ) ; <nl> } <nl> else if ( TokenTypes . METHOD _ DEF = = aAST . getType ( ) ) { <nl> raiseCounter ( aAST ) ; <nl> @ @ - 140 , 6 + 165 , 7 @ @ public final class MethodCountCheck extends Check <nl> " too . many . protectedMethods " , aAst ) ; <nl> checkMax ( mMaxPublic , aCounter . value ( Scope . PUBLIC ) , <nl> " too . many . publicMethods " , aAst ) ; <nl> + checkMax ( mMaxTotal , aCounter . getTotal ( ) , " too . many . methods " , aAst ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 155 , 4 + 181 , 29 @ @ public final class MethodCountCheck extends Check <nl> log ( aAst . getLineNo ( ) , aMsg , aValue , aMax ) ; <nl> } <nl> } <nl> + <nl> + public void setMaxPrivate ( int maxPrivate ) <nl> + { <nl> + mMaxPrivate = maxPrivate ; <nl> + } <nl> + <nl> + public void setMaxPackage ( int maxPackage ) <nl> + { <nl> + mMaxPackage = maxPackage ; <nl> + } <nl> + <nl> + public void setMaxProtected ( int maxProtected ) <nl> + { <nl> + mMaxProtected = maxProtected ; <nl> + } <nl> + <nl> + public void setMaxPublic ( int maxPublic ) <nl> + { <nl> + mMaxPublic = maxPublic ; <nl> + } <nl> + <nl> + public void setMaxTotal ( int maxTotal ) <nl> + { <nl> + mMaxTotal = maxTotal ; <nl> + } <nl> } <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / messages . properties b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / messages . properties <nl> index f687209 . . a154526 100755 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / messages . properties <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / messages . properties <nl> @ @ - 28 , 3 + 28 , 8 @ @ unusedVariable = Variable ' ' { 0 } ' ' is never used . <nl> ncss . method = NCSS for this method is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . <nl> ncss . class = NCSS for this class is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . <nl> ncss . file = NCSS for this file is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . <nl> + too . many . privateMethods = Number of private methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . <nl> + too . many . packageMethods = Number of package methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . <nl> + too . many . protectedMethods = Number of protected methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . <nl> + too . many . publicMethods = Number of public methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . <nl> + too . many . methods = Total number of methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckInput . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckInput . java <nl> index 9c4a479 . . 6472a44 100644 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckInput . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckInput . java <nl> @ @ - 56 , 17 + 56 , 17 @ @ public class MethodCountCheckInput { <nl> / * * <nl> * Dummy method doing nothing <nl> * / <nl> - public void doNothing62 ( ) ; <nl> + public abstract void doNothing62 ( ) ; <nl> <nl> / * * <nl> * Dummy method doing nothing <nl> * / <nl> - public void doNothing63 ( ) ; <nl> + abstract void doNothing63 ( ) ; <nl> <nl> / * * <nl> * Dummy method doing nothing <nl> * / <nl> - public void doNothing64 ( ) ; <nl> + void doNothing64 ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckTest . java <nl> index ac720a2 . . 1d48974 100644 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckTest . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckTest . java <nl> @ @ - 1 , 13 + 1 , 48 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . metrics ; <nl> <nl> + import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> import org . junit . Test ; <nl> - import static org . junit . Assert . * ; <nl> <nl> - public class MethodCountCheckTest { <nl> + public class MethodCountCheckTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> - public void testSomeMethod ( ) { <nl> - fail ( " Need to implement " ) ; <nl> + public void testDefaults ( ) throws Exception <nl> + { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( MethodCountCheck . class ) ; <nl> + <nl> + final String [ ] expected = { <nl> + } ; <nl> + <nl> + verify ( checkConfig , <nl> + getSrcPath ( " checks / metrics / MethodCountCheckInput . java " ) , expected ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testThrees ( ) throws Exception <nl> + { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( MethodCountCheck . class ) ; <nl> + checkConfig . addAttribute ( " maxPrivate " , " 3 " ) ; <nl> + checkConfig . addAttribute ( " maxPackage " , " 3 " ) ; <nl> + checkConfig . addAttribute ( " maxProtected " , " 3 " ) ; <nl> + checkConfig . addAttribute ( " maxPublic " , " 3 " ) ; <nl> + checkConfig . addAttribute ( " maxTotal " , " 3 " ) ; <nl> + <nl> + final String [ ] expected = { <nl> + " 3 : Number of package methods is 5 ( max allowed is 3 ) . " , <nl> + " 3 : Number of private methods is 5 ( max allowed is 3 ) . " , <nl> + " 3 : Number of protected methods is 5 ( max allowed is 3 ) . " , <nl> + " 3 : Number of public methods is 5 ( max allowed is 3 ) . " , <nl> + " 3 : Total number of methods is 20 ( max allowed is 3 ) . " , <nl> + " 9 : Number of public methods is 5 ( max allowed is 3 ) . " , <nl> + " 9 : Total number of methods is 5 ( max allowed is 3 ) . " , <nl> + " 45 : Number of public methods is 5 ( max allowed is 3 ) . " , <nl> + " 45 : Total number of methods is 5 ( max allowed is 3 ) . " , <nl> + } ; <nl> + <nl> + verify ( checkConfig , <nl> + getSrcPath ( " checks / metrics / MethodCountCheckInput . java " ) , expected ) ; <nl> + } <nl> } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml 
 index b38d700 . . 2c83277 100644 
 - - - a / src / xdocs / config _ misc . xml 
 + + + b / src / xdocs / config _ misc . xml 
 @ @ - 1951 , 7 + 1951 , 7 @ @ messages _ home _ fr _ CA _ UNIX . properties 
 < / p > 
 
 < p > 
 - The capital L looks a lot like < code > 1 < / code > . 
 + The lower - case ell < code > ' l ' < / code > looks a lot like < code > 1 < / code > . 
 < / p > 
 < / subsection > 


NEAREST DIFF:
diff - - git a / AllCheckstyleTests . launch b / AllCheckstyleTests . launch 
 deleted file mode 100755 
 index dade949 . . 0000000 
 - - - a / AllCheckstyleTests . launch 
 + + + / dev / null 
 @ @ - 1 , 27 + 0 , 0 @ @ 
 - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " standalone = " no " ? > 
 - < launchConfiguration type = " org . eclipse . jdt . junit . launchconfig " > 
 - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ PATHS " > 
 - < listEntry value = " / checkstyle - v5 / src / tests " / > 
 - < / listAttribute > 
 - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ TYPES " > 
 - < listEntry value = " 2 " / > 
 - < / listAttribute > 
 - < booleanAttribute key = " org . eclipse . debug . core . appendEnvironmentVariables " value = " true " / > 
 - < listAttribute key = " org . eclipse . debug . ui . favoriteGroups " > 
 - < listEntry value = " org . eclipse . debug . ui . launchGroup . run " / > 
 - < / listAttribute > 
 - < stringAttribute key = " org . eclipse . jdt . junit . CONTAINER " value = " = checkstyle - v5 / src \ / tests " / > 
 - < booleanAttribute key = " org . eclipse . jdt . junit . KEEPRUNNING _ ATTR " value = " false " / > 
 - < stringAttribute key = " org . eclipse . jdt . junit . TESTNAME " value = " " / > 
 - < stringAttribute key = " org . eclipse . jdt . junit . TEST _ KIND " value = " org . eclipse . jdt . junit . loader . junit4 " / > 
 - < listAttribute key = " org . eclipse . jdt . launching . CLASSPATH " > 
 - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry containerPath = & quot ; org . eclipse . jdt . launching . JRE _ CONTAINER & quot ; javaProject = & quot ; checkstyle - v5 & quot ; path = & quot ; 1 & quot ; type = & quot ; 4 & quot ; / & gt ; & # 13 ; & # 10 ; " / > 
 - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry id = & quot ; org . eclipse . jdt . launching . classpathentry . defaultClasspath & quot ; & gt ; & # 13 ; & # 10 ; & lt ; memento exportedEntriesOnly = & quot ; false & quot ; project = & quot ; checkstyle - v5 & quot ; / & gt ; & # 13 ; & # 10 ; & lt ; / runtimeClasspathEntry & gt ; & # 13 ; & # 10 ; " / > 
 - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry internalArchive = & quot ; / checkstyle - v5 / target / testinputs & quot ; path = & quot ; 3 & quot ; type = & quot ; 2 & quot ; / & gt ; & # 13 ; & # 10 ; " / > 
 - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry internalArchive = & quot ; / checkstyle - v5 / target / checkstyle & quot ; path = & quot ; 3 & quot ; type = & quot ; 2 & quot ; / & gt ; & # 13 ; & # 10 ; " / > 
 - < / listAttribute > 
 - < booleanAttribute key = " org . eclipse . jdt . launching . DEFAULT _ CLASSPATH " value = " false " / > 
 - < stringAttribute key = " org . eclipse . jdt . launching . MAIN _ TYPE " value = " " / > 
 - < stringAttribute key = " org . eclipse . jdt . launching . PROJECT _ ATTR " value = " checkstyle - v5 " / > 
 - < stringAttribute key = " org . eclipse . jdt . launching . VM _ ARGUMENTS " value = " - Dtestinputs . dir = $ { project _ loc } \ src \ testinputs \ com \ puppycrawl \ tools \ checkstyle & # 13 ; & # 10 ; - Dcheckstyle . root = $ { project _ loc } " / > 
 - < / launchConfiguration > 
 diff - - git a / README - Eclipse . txt b / README - Eclipse . txt 
 new file mode 100644 
 index 0000000 . . abfc618 
 - - - / dev / null 
 + + + b / README - Eclipse . txt 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + To run the JUnit tests in the Eclipse , you need to set the following VM arguments : 
 + 
 + - Dtestinputs . dir = $ { project _ loc } \ src \ testinputs \ com \ puppycrawl \ tools \ checkstyle 
 + - Dtestsrcs . dir = $ { project _ loc } \ src \ tests \ com \ puppycrawl \ tools \ checkstyle 
 + - Dcheckstyle . root = $ { project _ loc } 
 diff - - git a / Specific Checkstyle Test . launch b / Specific Checkstyle Test . launch 
 deleted file mode 100755 
 index a62534c . . 0000000 
 - - - a / Specific Checkstyle Test . launch 	 
 + + + / dev / null 
 @ @ - 1 , 27 + 0 , 0 @ @ 
 - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " standalone = " no " ? > 
 - < launchConfiguration type = " org . eclipse . jdt . junit . launchconfig " > 
 - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ PATHS " > 
 - < listEntry value = " / checkstyle - v5 / src / tests / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java " / > 
 - < / listAttribute > 
 - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ TYPES " > 
 - < listEntry value = " 1 " / > 
 - < / listAttribute > 
 - < booleanAttribute key = " org . eclipse . debug . core . appendEnvironmentVariables " value = " true " / > 
 - < listAttribute key = " org . eclipse . debug . ui . favoriteGroups " > 
 - < listEntry value = " org . eclipse . debug . ui . launchGroup . run " / > 
 - < / listAttribute > 
 - < stringAttribute key = " org . eclipse . jdt . junit . CONTAINER " value = " " / > 
 - < booleanAttribute key = " org . eclipse . jdt . junit . KEEPRUNNING _ ATTR " value = " false " / > 
 - < stringAttribute key = " org . eclipse . jdt . junit . TESTNAME " value = " " / > 
 - < stringAttribute key = " org . eclipse . jdt . junit . TEST _ KIND " value = " org . eclipse . jdt . junit . loader . junit4 " / > 
 - < listAttribute key = " org . eclipse . jdt . launching . CLASSPATH " > 
 - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry containerPath = & quot ; org . eclipse . jdt . launching . JRE _ CONTAINER & quot ; javaProject = & quot ; checkstyle - v5 & quot ; path = & quot ; 1 & quot ; type = & quot ; 4 & quot ; / & gt ; & # 13 ; & # 10 ; " / > 
 - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry id = & quot ; org . eclipse . jdt . launching . classpathentry . defaultClasspath & quot ; & gt ; & # 13 ; & # 10 ; & lt ; memento exportedEntriesOnly = & quot ; false & quot ; project = & quot ; checkstyle - v5 & quot ; / & gt ; & # 13 ; & # 10 ; & lt ; / runtimeClasspathEntry & gt ; & # 13 ; & # 10 ; " / > 
 - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry internalArchive = & quot ; / checkstyle - v5 / target / testinputs & quot ; path = & quot ; 3 & quot ; type = & quot ; 2 & quot ; / & gt ; & # 13 ; & # 10 ; " / > 
 - < listEntry value = " & lt ; ? xml version = & quot ; 1 . 0 & quot ; encoding = & quot ; UTF - 8 & quot ; standalone = & quot ; no & quot ; ? & gt ; & # 13 ; & # 10 ; & lt ; runtimeClasspathEntry internalArchive = & quot ; / checkstyle - v5 / target / checkstyle & quot ; path = & quot ; 3 & quot ; type = & quot ; 2 & quot ; / & gt ; & # 13 ; & # 10 ; " / > 
 - < / listAttribute > 
 - < booleanAttribute key = " org . eclipse . jdt . launching . DEFAULT _ CLASSPATH " value = " false " / > 
 - < stringAttribute key = " org . eclipse . jdt . launching . MAIN _ TYPE " value = " com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTypeCheckTest " / > 
 - < stringAttribute key = " org . eclipse . jdt . launching . PROJECT _ ATTR " value = " checkstyle - v5 " / > 
 - < stringAttribute key = " org . eclipse . jdt . launching . VM _ ARGUMENTS " value = " - Dtestinputs . dir = $ { project _ loc } \ src \ testinputs \ com \ puppycrawl \ tools \ checkstyle & # 13 ; & # 10 ; - Dcheckstyle . root = $ { project _ loc } " / > 
 - < / launchConfiguration > 
 diff - - git a / checkstyle - cmd . launch b / checkstyle - cmd . launch 
 deleted file mode 100755 
 index afa381f . . 0000000 
 - - - a / checkstyle - cmd . launch 
 + + + / dev / null 
 @ @ - 1 , 17 + 0 , 0 @ @ 
 - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " standalone = " no " ? > 
 - < launchConfiguration type = " org . eclipse . jdt . launching . localJavaApplication " > 
 - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ PATHS " > 
 - < listEntry value = " / checkstyle - v5 / src / checkstyle / com / puppycrawl / tools / checkstyle / Main . java " / > 
 - < / listAttribute > 
 - < listAttribute key = " org . eclipse . debug . core . MAPPED _ RESOURCE _ TYPES " > 
 - < listEntry value = " 1 " / > 
 - < / listAttribute > 
 - < booleanAttribute key = " org . eclipse . debug . core . appendEnvironmentVariables " value = " true " / > 
 - < listAttribute key = " org . eclipse . debug . ui . favoriteGroups " > 
 - < listEntry value = " org . eclipse . debug . ui . launchGroup . run " / > 
 - < / listAttribute > 
 - < stringAttribute key = " org . eclipse . jdt . launching . MAIN _ TYPE " value = " com . puppycrawl . tools . checkstyle . Main " / > 
 - < stringAttribute key = " org . eclipse . jdt . launching . PROGRAM _ ARGUMENTS " value = " - c $ { project _ loc } / checkstyle _ checks . xml - r $ { project _ loc } / src / checkstyle " / > 
 - < stringAttribute key = " org . eclipse . jdt . launching . PROJECT _ ATTR " value = " checkstyle - v5 " / > 
 - < stringAttribute key = " org . eclipse . jdt . launching . VM _ ARGUMENTS " value = " - Dcheckstyle . suppressions . file = $ { project _ loc } / suppressions . xml & # 13 ; & # 10 ; - Dtranslation . severity = ignore & # 13 ; & # 10 ; - Dcheckstyle . header . file = $ { project _ loc } / java . header & # 13 ; & # 10 ; - Dcheckstyle . importcontrol . file = $ { project _ loc } / import - control . xml " / > 
 - < / launchConfiguration > 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheck . java 
 index c1131c9 . . 3b3c1a6 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheck . java 
 @ @ - 44 , 6 + 44 , 19 @ @ public final class MethodCountCheck extends Check 
 / * * Maintains the counts . * / 
 private final EnumMap < Scope , Integer > mCounts = 
 new EnumMap < Scope , Integer > ( Scope . class ) ; 
 + / * * indicated is an interface , in which case all methods are public * / 
 + private final boolean mInInterface ; 
 + / * * tracks the total . * / 
 + private int mTotal ; 
 + 
 + / * * 
 + * Creates an interface . 
 + * @ param inInterface indicated if counter for an interface . In which 
 + * case , add all counts as public methods . 
 + * / 
 + MethodCounter ( boolean inInterface ) { 
 + mInInterface = inInterface ; 
 + } 
 
 / * * 
 * Increments to counter by one for the supplied scope . 
 @ @ - 51 , 7 + 64 , 13 @ @ public final class MethodCountCheck extends Check 
 * / 
 void increment ( Scope aScope ) 
 { 
 - mCounts . put ( aScope , 1 + value ( aScope ) ) ; 
 + mTotal + + ; 
 + if ( mInInterface ) { 
 + mCounts . put ( Scope . PUBLIC , 1 + value ( Scope . PUBLIC ) ) ; 
 + } 
 + else { 
 + mCounts . put ( aScope , 1 + value ( aScope ) ) ; 
 + } 
 } 
 
 / * * 
 @ @ - 63 , 6 + 82 , 11 @ @ public final class MethodCountCheck extends Check 
 final Integer value = mCounts . get ( aScope ) ; 
 return ( null = = value ) ? 0 : value ; 
 } 
 + 
 + / * * @ return the total number of methods . * / 
 + int getTotal ( ) { 
 + return mTotal ; 
 + } 
 } ; 
 
 / * * default maximum number of methods * / 
 @ @ - 78 , 7 + 102 , 7 @ @ public final class MethodCountCheck extends Check 
 / * * Maximum total number of methods . * / 
 private int mMaxTotal = DEFAULT _ MAX _ METHODS ; 
 / * * Maintains stack of counters , to support inner types . * / 
 - private FastStack < MethodCounter > mCounters = 
 + private final FastStack < MethodCounter > mCounters = 
 new FastStack < MethodCounter > ( ) ; 
 
 @ Override 
 @ @ - 94 , 7 + 118 , 8 @ @ public final class MethodCountCheck extends Check 
 if ( ( TokenTypes . CLASS _ DEF = = aAST . getType ( ) ) 
 | | ( TokenTypes . INTERFACE _ DEF = = aAST . getType ( ) ) ) 
 { 
 - mCounters . push ( new MethodCounter ( ) ) ; 
 + mCounters . push ( new MethodCounter ( 
 + TokenTypes . INTERFACE _ DEF = = aAST . getType ( ) ) ) ; 
 } 
 else if ( TokenTypes . METHOD _ DEF = = aAST . getType ( ) ) { 
 raiseCounter ( aAST ) ; 
 @ @ - 140 , 6 + 165 , 7 @ @ public final class MethodCountCheck extends Check 
 " too . many . protectedMethods " , aAst ) ; 
 checkMax ( mMaxPublic , aCounter . value ( Scope . PUBLIC ) , 
 " too . many . publicMethods " , aAst ) ; 
 + checkMax ( mMaxTotal , aCounter . getTotal ( ) , " too . many . methods " , aAst ) ; 
 } 
 
 / * * 
 @ @ - 155 , 4 + 181 , 29 @ @ public final class MethodCountCheck extends Check 
 log ( aAst . getLineNo ( ) , aMsg , aValue , aMax ) ; 
 } 
 } 
 + 
 + public void setMaxPrivate ( int maxPrivate ) 
 + { 
 + mMaxPrivate = maxPrivate ; 
 + } 
 + 
 + public void setMaxPackage ( int maxPackage ) 
 + { 
 + mMaxPackage = maxPackage ; 
 + } 
 + 
 + public void setMaxProtected ( int maxProtected ) 
 + { 
 + mMaxProtected = maxProtected ; 
 + } 
 + 
 + public void setMaxPublic ( int maxPublic ) 
 + { 
 + mMaxPublic = maxPublic ; 
 + } 
 + 
 + public void setMaxTotal ( int maxTotal ) 
 + { 
 + mMaxTotal = maxTotal ; 
 + } 
 } 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / messages . properties b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / messages . properties 
 index f687209 . . a154526 100755 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / messages . properties 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / messages . properties 
 @ @ - 28 , 3 + 28 , 8 @ @ unusedVariable = Variable ' ' { 0 } ' ' is never used . 
 ncss . method = NCSS for this method is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . 
 ncss . class = NCSS for this class is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . 
 ncss . file = NCSS for this file is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . 
 + too . many . privateMethods = Number of private methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . 
 + too . many . packageMethods = Number of package methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . 
 + too . many . protectedMethods = Number of protected methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . 
 + too . many . publicMethods = Number of public methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . 
 + too . many . methods = Total number of methods is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckInput . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckInput . java 
 index 9c4a479 . . 6472a44 100644 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckInput . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckInput . java 
 @ @ - 56 , 17 + 56 , 17 @ @ public class MethodCountCheckInput { 
 / * * 
 * Dummy method doing nothing 
 * / 
 - public void doNothing62 ( ) ; 
 + public abstract void doNothing62 ( ) ; 
 
 / * * 
 * Dummy method doing nothing 
 * / 
 - public void doNothing63 ( ) ; 
 + abstract void doNothing63 ( ) ; 
 
 / * * 
 * Dummy method doing nothing 
 * / 
 - public void doNothing64 ( ) ; 
 + void doNothing64 ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckTest . java 
 index ac720a2 . . 1d48974 100644 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckTest . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / metrics / MethodCountCheckTest . java 
 @ @ - 1 , 13 + 1 , 48 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . metrics ; 
 
 + import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 import org . junit . Test ; 
 - import static org . junit . Assert . * ; 
 
 - public class MethodCountCheckTest { 
 + public class MethodCountCheckTest extends BaseCheckTestSupport { 
 
 @ Test 
 - public void testSomeMethod ( ) { 
 - fail ( " Need to implement " ) ; 
 + public void testDefaults ( ) throws Exception 
 + { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( MethodCountCheck . class ) ; 
 + 
 + final String [ ] expected = { 
 + } ; 
 + 
 + verify ( checkConfig , 
 + getSrcPath ( " checks / metrics / MethodCountCheckInput . java " ) , expected ) ; 
 } 
 
 + @ Test 
 + public void testThrees ( ) throws Exception 
 + { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( MethodCountCheck . class ) ; 
 + checkConfig . addAttribute ( " maxPrivate " , " 3 " ) ; 
 + checkConfig . addAttribute ( " maxPackage " , " 3 " ) ; 
 + checkConfig . addAttribute ( " maxProtected " , " 3 " ) ; 
 + checkConfig . addAttribute ( " maxPublic " , " 3 " ) ; 
 + checkConfig . addAttribute ( " maxTotal " , " 3 " ) ; 
 + 
 + final String [ ] expected = { 
 + " 3 : Number of package methods is 5 ( max allowed is 3 ) . " , 
 + " 3 : Number of private methods is 5 ( max allowed is 3 ) . " , 
 + " 3 : Number of protected methods is 5 ( max allowed is 3 ) . " , 
 + " 3 : Number of public methods is 5 ( max allowed is 3 ) . " , 
 + " 3 : Total number of methods is 20 ( max allowed is 3 ) . " , 
 + " 9 : Number of public methods is 5 ( max allowed is 3 ) . " , 
 + " 9 : Total number of methods is 5 ( max allowed is 3 ) . " , 
 + " 45 : Number of public methods is 5 ( max allowed is 3 ) . " , 
 + " 45 : Total number of methods is 5 ( max allowed is 3 ) . " , 
 + } ; 
 + 
 + verify ( checkConfig , 
 + getSrcPath ( " checks / metrics / MethodCountCheckInput . java " ) , expected ) ; 
 + } 
 } 
 \ No newline at end of file
