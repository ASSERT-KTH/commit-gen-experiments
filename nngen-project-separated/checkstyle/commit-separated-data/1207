BLEU SCORE: 0.0367352656298894

TEST MSG: Issue # 3175 : sevntu - checkstyle violations were resolved in test area
GENERATED MSG: Fix typos in code and Javadoc . # 1555

TEST DIFF (one line): diff - - git a / config / sevntu _ suppressions . xml b / config / sevntu _ suppressions . xml <nl> index 3254e15 . . dd58d64 100644 <nl> - - - a / config / sevntu _ suppressions . xml <nl> + + + b / config / sevntu _ suppressions . xml <nl> @ @ - 49 , 7 + 49 , 8 @ @ <nl> files = " AbstractViolationReporter . java " <nl> lines = " 152 , 164 " / > <nl> <nl> - < ! - - Tone down the checking for test code - - > <nl> - < suppress checks = " CauseParameterInException | ForbidCCommentsInMethods | IllegalCatchExtended " <nl> - files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> + < ! - - testing for catch Error is part of 100 % coverage - - > <nl> + < suppress checks = " IllegalCatchExtended " <nl> + files = " CheckerTest \ . java " <nl> + lines = " 569 " / > <nl> < / suppressions > <nl> \ No newline at end of file <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> index f83a8db . . a27ff2c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> @ @ - 206 , 7 + 206 , 7 @ @ public class XMLLoggerTest { <nl> new LocalizedMessage ( 1 , 1 , <nl> " messages . properties " , null , null , null , getClass ( ) , null ) ; <nl> final AuditEvent ev = new AuditEvent ( this , " Test . java " , message ) ; <nl> - logger . addException ( ev , new TestException ( ) ) ; <nl> + logger . addException ( ev , new TestException ( " msg " , new RuntimeException ( " msg " ) ) ) ; <nl> logger . auditFinished ( null ) ; <nl> final String [ ] expectedLines = { <nl> " & lt ; exception & gt ; " , <nl> @ @ - 261 , 6 + 261 , 10 @ @ public class XMLLoggerTest { <nl> <nl> private static final long serialVersionUID = 1L ; <nl> <nl> + TestException ( String msg , Throwable cause ) { <nl> + super ( msg , cause ) ; <nl> + } <nl> + <nl> @ Override <nl> public void printStackTrace ( PrintWriter printWriter ) { <nl> printWriter . print ( " stackTrace " ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> index 01a6111 . . de7147e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> @ @ - 243 , 10 + 243 , 6 @ @ public class ImportOrderCheckTest extends BaseCheckTestSupport { <nl> public void testWildcardUnspecified ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( ImportOrderCheck . class ) ; <nl> <nl> - / * <nl> - < property name = " ordered " value = " true " / > <nl> - < property name = " separated " value = " true " / > <nl> - * / <nl> checkConfig . addAttribute ( " groups " , " java , javax , org " ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> index c41e09a . . d2f7de7 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> @ @ - 120 , 11 + 120 , 9 @ @ public class CommitValidationTest { <nl> final String commitMessage = commit . getFullMessage ( ) ; <nl> final Matcher matcher = NEWLINE _ PATTERN . matcher ( commitMessage ) ; <nl> if ( matcher . find ( ) ) { <nl> - / * * <nl> - * Git by default put newline character at the end of commit message . To check <nl> - * if commit message has a single line we have to make sure that the only <nl> - * newline character found is in the end of commit message . <nl> - * / <nl> + / / Git by default put newline character at the end of commit message . To check <nl> + / / if commit message has a single line we have to make sure that the only <nl> + / / newline character found is in the end of commit message . <nl> final boolean isFoundNewLineCharacterAtTheEndOfMessage = <nl> matcher . end ( ) = = commitMessage . length ( ) ; <nl> assertTrue ( getInvalidCommitMessageFormattingError ( commitId , commitMessage ) ,
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> index f3415ce . . a36aee0 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> @ @ - 19 , 22 + 19 , 22 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> <nl> public class ConfigurationBuilder extends BaseCheckTestSupport { <nl> <nl> + 	 private static final String XML _ NAME = " / google _ checks . xml " ; <nl> + <nl> 	 private final File root ; <nl> <nl> 	 private final List < File > files = new ArrayList < > ( ) ; <nl> <nl> 	 Configuration config ; <nl> - 	 <nl> + <nl> 	 URL url ; <nl> - 	 <nl> - 	 final String xmlName = " / google _ checks . xml " ; <nl> - 	 <nl> + <nl> 	 final Pattern warnPattern = Utils . createPattern ( " . * [ ] * / / [ ] * warn [ ] * | / [ * ] warn [ * ] / " ) ; <nl> <nl> 	 public ConfigurationBuilder ( File aROOT ) <nl> 	 	 	 throws CheckstyleException , IOException { <nl> 	 	 root = aROOT ; <nl> - 	 	 config = getConfigurationFromXML ( xmlName , System . getProperties ( ) ) ; <nl> + 	 	 config = getConfigurationFromXML ( XML _ NAME , System . getProperties ( ) ) ; <nl> 	 	 listFiles ( files , root , " java " ) ; <nl> 	 } <nl>

TEST DIFF:
diff - - git a / config / sevntu _ suppressions . xml b / config / sevntu _ suppressions . xml 
 index 3254e15 . . dd58d64 100644 
 - - - a / config / sevntu _ suppressions . xml 
 + + + b / config / sevntu _ suppressions . xml 
 @ @ - 49 , 7 + 49 , 8 @ @ 
 files = " AbstractViolationReporter . java " 
 lines = " 152 , 164 " / > 
 
 - < ! - - Tone down the checking for test code - - > 
 - < suppress checks = " CauseParameterInException | ForbidCCommentsInMethods | IllegalCatchExtended " 
 - files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 + < ! - - testing for catch Error is part of 100 % coverage - - > 
 + < suppress checks = " IllegalCatchExtended " 
 + files = " CheckerTest \ . java " 
 + lines = " 569 " / > 
 < / suppressions > 
 \ No newline at end of file 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 index f83a8db . . a27ff2c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 @ @ - 206 , 7 + 206 , 7 @ @ public class XMLLoggerTest { 
 new LocalizedMessage ( 1 , 1 , 
 " messages . properties " , null , null , null , getClass ( ) , null ) ; 
 final AuditEvent ev = new AuditEvent ( this , " Test . java " , message ) ; 
 - logger . addException ( ev , new TestException ( ) ) ; 
 + logger . addException ( ev , new TestException ( " msg " , new RuntimeException ( " msg " ) ) ) ; 
 logger . auditFinished ( null ) ; 
 final String [ ] expectedLines = { 
 " & lt ; exception & gt ; " , 
 @ @ - 261 , 6 + 261 , 10 @ @ public class XMLLoggerTest { 
 
 private static final long serialVersionUID = 1L ; 
 
 + TestException ( String msg , Throwable cause ) { 
 + super ( msg , cause ) ; 
 + } 
 + 
 @ Override 
 public void printStackTrace ( PrintWriter printWriter ) { 
 printWriter . print ( " stackTrace " ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 index 01a6111 . . de7147e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 @ @ - 243 , 10 + 243 , 6 @ @ public class ImportOrderCheckTest extends BaseCheckTestSupport { 
 public void testWildcardUnspecified ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( ImportOrderCheck . class ) ; 
 
 - / * 
 - < property name = " ordered " value = " true " / > 
 - < property name = " separated " value = " true " / > 
 - * / 
 checkConfig . addAttribute ( " groups " , " java , javax , org " ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 index c41e09a . . d2f7de7 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 @ @ - 120 , 11 + 120 , 9 @ @ public class CommitValidationTest { 
 final String commitMessage = commit . getFullMessage ( ) ; 
 final Matcher matcher = NEWLINE _ PATTERN . matcher ( commitMessage ) ; 
 if ( matcher . find ( ) ) { 
 - / * * 
 - * Git by default put newline character at the end of commit message . To check 
 - * if commit message has a single line we have to make sure that the only 
 - * newline character found is in the end of commit message . 
 - * / 
 + / / Git by default put newline character at the end of commit message . To check 
 + / / if commit message has a single line we have to make sure that the only 
 + / / newline character found is in the end of commit message . 
 final boolean isFoundNewLineCharacterAtTheEndOfMessage = 
 matcher . end ( ) = = commitMessage . length ( ) ; 
 assertTrue ( getInvalidCommitMessageFormattingError ( commitId , commitMessage ) ,

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 index f3415ce . . a36aee0 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 @ @ - 19 , 22 + 19 , 22 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 
 public class ConfigurationBuilder extends BaseCheckTestSupport { 
 
 + 	 private static final String XML _ NAME = " / google _ checks . xml " ; 
 + 
 	 private final File root ; 
 
 	 private final List < File > files = new ArrayList < > ( ) ; 
 
 	 Configuration config ; 
 - 	 
 + 
 	 URL url ; 
 - 	 
 - 	 final String xmlName = " / google _ checks . xml " ; 
 - 	 
 + 
 	 final Pattern warnPattern = Utils . createPattern ( " . * [ ] * / / [ ] * warn [ ] * | / [ * ] warn [ * ] / " ) ; 
 
 	 public ConfigurationBuilder ( File aROOT ) 
 	 	 	 throws CheckstyleException , IOException { 
 	 	 root = aROOT ; 
 - 	 	 config = getConfigurationFromXML ( xmlName , System . getProperties ( ) ) ; 
 + 	 	 config = getConfigurationFromXML ( XML _ NAME , System . getProperties ( ) ) ; 
 	 	 listFiles ( files , root , " java " ) ; 
 	 } 

