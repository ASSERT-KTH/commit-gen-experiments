BLEU SCORE: 0.03416211359799979

TEST MSG: Issue # 2421 : expanded checks on test directory
GENERATED MSG: finally added all the new checks that I built during feature freeze

TEST DIFF (one line): diff - - git a / config / ant - phase - verify . xml b / config / ant - phase - verify . xml <nl> index ff05d55 . . 4fe4f09 100644 <nl> - - - a / config / ant - phase - verify . xml <nl> + + + b / config / ant - phase - verify . xml <nl> @ @ - 27 , 8 + 27 , 7 @ @ <nl> failureProperty = " checkstyle . failure . property " <nl> > <nl> < fileset dir = " src " <nl> - includes = " main / * * / * . java , main / * * / * . properties , xdocs / * * / * . xml , test / java / * * / * Test . java " <nl> - excludes = " * * / Generated * . java " / > <nl> + includes = " main / * * / * . java , main / * * / * . properties , xdocs / * * / * . xml , test / java / * * / * . java " / > <nl> < formatter type = " plain " / > <nl> < formatter type = " xml " toFile = " $ { mvn . project . build . directory } / cs _ errors . xml " / > <nl> < classpath path = " $ { mvn . runtime _ classpath } " / > <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index a3f0fe8 . . e42b316 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 47 , 6 + 47 , 7 @ @ <nl> < suppress checks = " MethodCount " files = " [ \ \ / ] JavadocMethodCheckTest . java $ " / > <nl> < suppress checks = " MethodCount " files = " [ \ \ / ] MainTest . java $ " / > <nl> < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > <nl> + < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ " / > <nl> < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> <nl> < ! - - suppressions to remove over time - - > <nl> @ @ - 91 , 7 + 92 , 7 @ @ <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " AutomaticBean \ . java " / > <nl> < ! - - they are aggregators of logic , usage a several of classes are ok - - > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | AbstractJavadocCheck ) \ . java " / > <nl> - < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest ) \ . java " / > <nl> + < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest | BaseCheckTestSupport ) \ . java " / > <nl> < ! - - a lot of GUI elements is OK - - > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " ParseTreeInfoPanel \ . java " / > <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> index 6775d6a . . f7c2127 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> @ @ - 1 , 3 + 1 , 22 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> import static java . util . Arrays . asList ; <nl> @ @ - 29 , 25 + 48 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> <nl> public class BaseCheckTestSupport { <nl> - / * * <nl> - * A brief logger that only display info about errors . <nl> - * / <nl> - protected static class BriefLogger <nl> - extends DefaultLogger { <nl> - public BriefLogger ( OutputStream out ) { <nl> - super ( out , true , out , false , false ) ; <nl> - } <nl> - <nl> - public BriefLogger ( OutputStream out , boolean printSeverity ) { <nl> - super ( out , true , out , false , printSeverity ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void auditStarted ( AuditEvent event ) { <nl> - } <nl> - <nl> - } <nl> - <nl> protected final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; <nl> <nl> protected static DefaultConfiguration createCheckConfig ( Class < ? > clazz ) { <nl> @ @ - 157 , 14 + 157 , 55 @ @ public class BaseCheckTestSupport { <nl> Collections . addAll ( theFiles , processedFiles ) ; <nl> final int errs = checker . process ( theFiles ) ; <nl> <nl> + final Map < String , List < String > > actualViolations = getActualViolations ( errs ) ; <nl> + final Map < String , List < String > > realExpectedViolations = Maps . filterValues ( expectedViolations , new Predicate < List < String > > ( ) { <nl> + @ Override <nl> + public boolean apply ( List < String > input ) { <nl> + return ! input . isEmpty ( ) ; <nl> + } <nl> + } ) ; <nl> + final MapDifference < String , List < String > > violationDifferences = Maps . difference ( realExpectedViolations , actualViolations ) ; <nl> + <nl> + final Map < String , List < String > > missingViolations = violationDifferences . entriesOnlyOnLeft ( ) ; <nl> + final Map < String , List < String > > unexpectedViolations = violationDifferences . entriesOnlyOnRight ( ) ; <nl> + final Map < String , ValueDifference < List < String > > > differingViolations = violationDifferences . entriesDiffering ( ) ; <nl> + <nl> + final StringBuilder message = new StringBuilder ( ) ; <nl> + if ( ! missingViolations . isEmpty ( ) ) { <nl> + message . append ( " missing violations : " ) . append ( missingViolations ) ; <nl> + } <nl> + if ( ! unexpectedViolations . isEmpty ( ) ) { <nl> + if ( message . length ( ) > 0 ) { <nl> + message . append ( ' \ n ' ) ; <nl> + } <nl> + message . append ( " unexpected violations : " ) . append ( unexpectedViolations ) ; <nl> + } <nl> + if ( ! differingViolations . isEmpty ( ) ) { <nl> + if ( message . length ( ) > 0 ) { <nl> + message . append ( ' \ n ' ) ; <nl> + } <nl> + message . append ( " differing violations : " ) . append ( differingViolations ) ; <nl> + } <nl> + <nl> + assertTrue ( message . toString ( ) , <nl> + missingViolations . isEmpty ( ) <nl> + & & unexpectedViolations . isEmpty ( ) <nl> + & & differingViolations . isEmpty ( ) ) ; <nl> + <nl> + checker . destroy ( ) ; <nl> + } <nl> + <nl> + private Map < String , List < String > > getActualViolations ( int errorCount ) throws IOException { <nl> / / process each of the lines <nl> final ByteArrayInputStream inputStream = <nl> new ByteArrayInputStream ( stream . toByteArray ( ) ) ; <nl> + <nl> try ( final LineNumberReader lnr = new LineNumberReader ( <nl> new InputStreamReader ( inputStream , StandardCharsets . UTF _ 8 ) ) ) { <nl> <nl> final Map < String , List < String > > actualViolations = new HashMap < > ( ) ; <nl> - for ( String line = lnr . readLine ( ) ; line ! = null & & lnr . getLineNumber ( ) < = errs ; line = lnr . readLine ( ) ) { <nl> + for ( String line = lnr . readLine ( ) ; line ! = null & & lnr . getLineNumber ( ) < = errorCount ; <nl> + line = lnr . readLine ( ) ) { <nl> / / have at least 2 characters before the splitting colon , <nl> / / to not split after the drive letter on windows <nl> final String [ ] actualViolation = line . split ( " ( ? < = . { 2 } ) : " , 2 ) ; <nl> @ @ - 179 , 41 + 220 , 8 @ @ public class BaseCheckTestSupport { <nl> actualViolationsPerFile . add ( actualViolationMessage ) ; <nl> } <nl> <nl> - final Map < String , List < String > > realExpectedViolations = Maps . filterValues ( expectedViolations , new Predicate < List < String > > ( ) { <nl> - @ Override <nl> - public boolean apply ( List < String > input ) { <nl> - return ! input . isEmpty ( ) ; <nl> - } <nl> - } ) ; <nl> - final MapDifference < String , List < String > > violationDifferences = Maps . difference ( realExpectedViolations , actualViolations ) ; <nl> - <nl> - final Map < String , List < String > > missingViolations = violationDifferences . entriesOnlyOnLeft ( ) ; <nl> - final Map < String , List < String > > unexpectedViolations = violationDifferences . entriesOnlyOnRight ( ) ; <nl> - final Map < String , ValueDifference < List < String > > > differingViolations = violationDifferences . entriesDiffering ( ) ; <nl> - <nl> - final StringBuilder message = new StringBuilder ( ) ; <nl> - if ( ! missingViolations . isEmpty ( ) ) { <nl> - message . append ( " missing violations : " ) . append ( missingViolations ) ; <nl> - } <nl> - if ( ! unexpectedViolations . isEmpty ( ) ) { <nl> - if ( message . length ( ) > 0 ) { <nl> - message . append ( ' \ n ' ) ; <nl> - } <nl> - message . append ( " unexpected violations : " ) . append ( unexpectedViolations ) ; <nl> - } <nl> - if ( ! differingViolations . isEmpty ( ) ) { <nl> - if ( message . length ( ) > 0 ) { <nl> - message . append ( ' \ n ' ) ; <nl> - } <nl> - message . append ( " differing violations : " ) . append ( differingViolations ) ; <nl> - } <nl> - <nl> - assertTrue ( message . toString ( ) , <nl> - missingViolations . isEmpty ( ) <nl> - & & unexpectedViolations . isEmpty ( ) <nl> - & & differingViolations . isEmpty ( ) ) ; <nl> + return actualViolations ; <nl> } <nl> - checker . destroy ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 227 , 11 + 235 , 30 @ @ public class BaseCheckTestSupport { <nl> Properties pr = new Properties ( ) ; <nl> try { <nl> pr . load ( getClass ( ) . getResourceAsStream ( " messages . properties " ) ) ; <nl> - } catch ( IOException e ) { <nl> + } <nl> + catch ( IOException e ) { <nl> return null ; <nl> } <nl> final MessageFormat formatter = new MessageFormat ( pr . getProperty ( messageKey ) , <nl> Locale . ROOT ) ; <nl> return formatter . format ( arguments ) ; <nl> } <nl> + <nl> + / * * <nl> + * A brief logger that only display info about errors . <nl> + * / <nl> + protected static class BriefLogger <nl> + extends DefaultLogger { <nl> + public BriefLogger ( OutputStream out ) { <nl> + super ( out , true , out , false , false ) ; <nl> + } <nl> + <nl> + public BriefLogger ( OutputStream out , boolean printSeverity ) { <nl> + super ( out , true , out , false , printSeverity ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void auditStarted ( AuditEvent event ) { <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseFileSetCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseFileSetCheckTestSupport . java <nl> index 128be4e . . 8763964 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseFileSetCheckTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseFileSetCheckTestSupport . java <nl> @ @ - 1 , 3 + 1 , 22 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java b / src / test / java / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java <nl> index 8001f02 . . a35605d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java <nl> @ @ - 1 , 7 + 1 , 21 @ @ <nl> - / * <nl> - * To change this template , choose Tools | Templates <nl> - * and open the template in the editor . <nl> - * / <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java b / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java <nl> index f12eda4 . . 70852f8 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java <nl> @ @ - 1 , 7 + 1 , 21 @ @ <nl> - / * <nl> - * To change this template , choose Tools | Templates <nl> - * and open the template in the editor . <nl> - * / <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DebugFilter . java b / src / test / java / com / puppycrawl / tools / checkstyle / DebugFilter . java <nl> index 0f09349 . . 3b5ed14 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DebugFilter . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DebugFilter . java <nl> @ @ - 1 , 7 + 1 , 21 @ @ <nl> - / * <nl> - * To change this template , choose Tools | Templates <nl> - * and open the template in the editor . <nl> - * / <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java <nl> index 4c39d6c . . 3c82dcf 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java <nl> @ @ - 1 , 3 + 1 , 22 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> package com . puppycrawl . tools . checkstyle . grammars ; <nl> <nl> import java . io . File ; <nl> @ @ - 30 , 15 + 49 , 19 @ @ public class GeneratedJava14LexerTest <nl> <nl> @ Test <nl> public void testUnexpectedChar ( ) throws Exception { <nl> - Assume . assumeFalse ( SystemUtils . IS _ OS _ WINDOWS ) ; / / Encoding problems can occur in Windows <nl> + / / Encoding problems can occur in Windows <nl> + Assume . assumeFalse ( SystemUtils . IS _ OS _ WINDOWS ) ; <nl> + <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> + / / input is ' Ã Я ' <nl> final String [ ] expected = { <nl> - " 7 : 9 : Name ' Ã Я ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 7 : 9 : Name ' " + ( char ) 0xC3 + ( char ) 0x042F <nl> + + " ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputGrammar . java " ) , expected ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> public void testSemicolonBetweenImports ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java <nl> index eb6ab36 . . 883b952 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java <nl> @ @ - 634 , 7 + 634 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void testCompareExpectedTreeWithInput1 ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( CompareTreesWithComments . class ) ; <nl> - CompareTreesWithComments . expectedTree = buildInput1 ( ) ; <nl> + CompareTreesWithComments . setExpectedTree ( buildInput1 ( ) ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , getPath ( " InputComments1 . java " ) , expected ) ; <nl> } <nl> @ @ - 642 , 7 + 642 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void testCompareExpectedTreeWithInput2 ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( CompareTreesWithComments . class ) ; <nl> - CompareTreesWithComments . expectedTree = buildInput2 ( ) ; <nl> + CompareTreesWithComments . setExpectedTree ( buildInput2 ( ) ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , getPath ( " InputComments2 . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java <nl> index 5998815 . . 97af7ff 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java <nl> @ @ - 1 , 3 + 1 , 22 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> package com . puppycrawl . tools . checkstyle . grammars . comments ; <nl> <nl> import org . apache . commons . lang3 . ArrayUtils ; <nl> @ @ - 7 , 7 + 26 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Check ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> <nl> class CompareTreesWithComments extends Check { <nl> - static DetailAST expectedTree ; <nl> + private static DetailAST expectedTree ; <nl> <nl> @ Override <nl> public boolean isCommentNodesRequired ( ) { <nl> @ @ - 35 , 38 + 54 , 51 @ @ class CompareTreesWithComments extends Check { <nl> } <nl> <nl> private static boolean isAstEquals ( DetailAST expected , DetailAST actual ) { <nl> - boolean result = false ; <nl> + boolean result ; <nl> if ( expected = = actual ) { <nl> result = true ; <nl> } <nl> else if ( actual = = null | | expected = = null ) { <nl> result = false ; <nl> - } else { <nl> - if ( expected . getType ( ) = = actual . getType ( ) <nl> - & & expected . getLineNo ( ) = = actual . getLineNo ( ) <nl> - & & expected . getColumnNo ( ) = = actual . getColumnNo ( ) ) { <nl> - if ( expected . getText ( ) = = null ) { <nl> - result = actual . getText ( ) = = null ; <nl> - } <nl> - else if ( expected . getText ( ) . equals ( actual . getText ( ) ) ) { <nl> - result = true ; <nl> - } <nl> + } <nl> + else { <nl> + result = isAstEqualsSafe ( expected , actual ) ; <nl> + } <nl> + if ( ! result ) { <nl> + System . out . println ( " Expected : " + expected + " | Actual : " + actual ) ; <nl> + } <nl> + return result ; <nl> + } <nl> + <nl> + private static boolean isAstEqualsSafe ( DetailAST expected , DetailAST actual ) { <nl> + boolean result = false ; <nl> + <nl> + if ( expected . getType ( ) = = actual . getType ( ) <nl> + & & expected . getLineNo ( ) = = actual . getLineNo ( ) <nl> + & & expected . getColumnNo ( ) = = actual . getColumnNo ( ) ) { <nl> + if ( expected . getText ( ) = = null ) { <nl> + result = actual . getText ( ) = = null ; <nl> + } <nl> + else if ( expected . getText ( ) . equals ( actual . getText ( ) ) ) { <nl> + result = true ; <nl> } <nl> + } <nl> <nl> + if ( result ) { <nl> + DetailAST childExpected = expected . getFirstChild ( ) ; <nl> + DetailAST childActual = actual . getFirstChild ( ) ; <nl> + result = isAstEquals ( childExpected , childActual ) ; <nl> if ( result ) { <nl> - DetailAST childExpected = expected . getFirstChild ( ) ; <nl> - DetailAST childActual = actual . getFirstChild ( ) ; <nl> - result = isAstEquals ( childExpected , childActual ) ; <nl> - if ( result ) { <nl> - DetailAST nextSiblingExpected = expected . getNextSibling ( ) ; <nl> - DetailAST nextSiblingActual = actual . getNextSibling ( ) ; <nl> - result = isAstEquals ( nextSiblingExpected , nextSiblingActual ) ; <nl> - } <nl> + DetailAST nextSiblingExpected = expected . getNextSibling ( ) ; <nl> + DetailAST nextSiblingActual = actual . getNextSibling ( ) ; <nl> + result = isAstEquals ( nextSiblingExpected , nextSiblingActual ) ; <nl> } <nl> } <nl> - if ( ! result ) { <nl> - System . out . println ( " Expected : " + expected + " | Actual : " + actual ) ; <nl> - } <nl> + <nl> return result ; <nl> } <nl> + <nl> + public static void setExpectedTree ( DetailAST expectedTree ) { <nl> + CompareTreesWithComments . expectedTree = expectedTree ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index ac19098 . . d47fb1e 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 212 , 14 + 212 , 14 @ @ <nl> < / target > <nl> <nl> < target name = " checkstyle . checkstyle " depends = " compile . checkstyle " <nl> - description = " Runs checkstyle on a file to test various rules " > <nl> + description = " Runs checkstyle against it ' s own sources " > <nl> < taskdef name = " checkstyle " <nl> classname = " com . puppycrawl . tools . checkstyle . CheckStyleTask " > <nl> < classpath refid = " run . classpath " / > <nl> < / taskdef > <nl> < delete file = " target / cachefile " / > <nl> <nl> - < property name = " todo . pattern " value = " NOTHingWillMatCH _ - " / > <nl> + < property name = " checkstyle . pattern . todo " value = " NOTHingWillMatCH _ - " / > <nl> < property name = " check . config " location = " docs / checkstyle _ checks . xml " / > <nl> < checkstyle config = " $ { check . config } " > <nl> < fileset dir = " src / checkstyle " <nl> @ @ - 228 , 38 + 228 , 25 @ @ <nl> < formatter type = " plain " / > <nl> < formatter type = " xml " toFile = " target / cs _ errors . xml " / > <nl> < classpath refid = " run . classpath " / > <nl> - < property key = " checkstyle . pattern . todo " value = " $ { todo . pattern } " / > <nl> < property key = " checkstyle . cache . file " file = " target / cachefile " / > <nl> < property key = " checkstyle . header . file " file = " docs / java . header " / > <nl> < / checkstyle > <nl> < / target > <nl> <nl> - < target name = " checkstyle . style " depends = " compile . checkstyle " <nl> - description = " Runs checkstyle to test generation of error reports " > <nl> - < taskdef name = " checkstyle " <nl> - classname = " com . puppycrawl . tools . checkstyle . CheckStyleTask " > <nl> - < classpath refid = " run . classpath " / > <nl> - < / taskdef > <nl> + < target name = " checkstyle . style " depends = " checkstyle . checkstyle " <nl> + description = " Runs checkstyle against it ' s own sources to test generation of error reports " > <nl> < mkdir dir = " target / style / frames " / > <nl> < mkdir dir = " target / style / noframes " / > <nl> < mkdir dir = " target / style / simple " / > <nl> - < checkstyle failOnViolation = " false " <nl> - basedir = " . " > <nl> - < fileset dir = " src / checkstyle " <nl> - includes = " * * / * . java " <nl> - excludes = " * * / Generated * . java " / > <nl> - < formatter type = " xml " toFile = " target / style / cs _ errors . xml " / > <nl> - < classpath refid = " build . classpath " / > <nl> - < / checkstyle > <nl> - < style basedir = " target / style " <nl> + < style basedir = " target " <nl> destdir = " target / style / noframes " <nl> includes = " cs _ errors . xml " <nl> style = " contrib / checkstyle - noframes . xsl " / > <nl> - < style basedir = " target / style " <nl> + < style basedir = " target " <nl> destdir = " target / style / frames " <nl> includes = " cs _ errors . xml " <nl> style = " contrib / checkstyle - frames . xsl " / > <nl> - < style basedir = " target / style " <nl> + < style basedir = " target " <nl> destdir = " target / style / simple " <nl> includes = " cs _ errors . xml " <nl> style = " contrib / checkstyle - simple . xsl " / >

TEST DIFF:
diff - - git a / config / ant - phase - verify . xml b / config / ant - phase - verify . xml 
 index ff05d55 . . 4fe4f09 100644 
 - - - a / config / ant - phase - verify . xml 
 + + + b / config / ant - phase - verify . xml 
 @ @ - 27 , 8 + 27 , 7 @ @ 
 failureProperty = " checkstyle . failure . property " 
 > 
 < fileset dir = " src " 
 - includes = " main / * * / * . java , main / * * / * . properties , xdocs / * * / * . xml , test / java / * * / * Test . java " 
 - excludes = " * * / Generated * . java " / > 
 + includes = " main / * * / * . java , main / * * / * . properties , xdocs / * * / * . xml , test / java / * * / * . java " / > 
 < formatter type = " plain " / > 
 < formatter type = " xml " toFile = " $ { mvn . project . build . directory } / cs _ errors . xml " / > 
 < classpath path = " $ { mvn . runtime _ classpath } " / > 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index a3f0fe8 . . e42b316 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 47 , 6 + 47 , 7 @ @ 
 < suppress checks = " MethodCount " files = " [ \ \ / ] JavadocMethodCheckTest . java $ " / > 
 < suppress checks = " MethodCount " files = " [ \ \ / ] MainTest . java $ " / > 
 < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > 
 + < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ " / > 
 < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 
 < ! - - suppressions to remove over time - - > 
 @ @ - 91 , 7 + 92 , 7 @ @ 
 < suppress checks = " ClassDataAbstractionCoupling " files = " AutomaticBean \ . java " / > 
 < ! - - they are aggregators of logic , usage a several of classes are ok - - > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | AbstractJavadocCheck ) \ . java " / > 
 - < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest ) \ . java " / > 
 + < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest | BaseCheckTestSupport ) \ . java " / > 
 < ! - - a lot of GUI elements is OK - - > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " ParseTreeInfoPanel \ . java " / > 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 index 6775d6a . . f7c2127 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 @ @ - 1 , 3 + 1 , 22 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 package com . puppycrawl . tools . checkstyle ; 
 
 import static java . util . Arrays . asList ; 
 @ @ - 29 , 25 + 48 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 
 public class BaseCheckTestSupport { 
 - / * * 
 - * A brief logger that only display info about errors . 
 - * / 
 - protected static class BriefLogger 
 - extends DefaultLogger { 
 - public BriefLogger ( OutputStream out ) { 
 - super ( out , true , out , false , false ) ; 
 - } 
 - 
 - public BriefLogger ( OutputStream out , boolean printSeverity ) { 
 - super ( out , true , out , false , printSeverity ) ; 
 - } 
 - 
 - @ Override 
 - public void auditStarted ( AuditEvent event ) { 
 - } 
 - 
 - } 
 - 
 protected final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; 
 
 protected static DefaultConfiguration createCheckConfig ( Class < ? > clazz ) { 
 @ @ - 157 , 14 + 157 , 55 @ @ public class BaseCheckTestSupport { 
 Collections . addAll ( theFiles , processedFiles ) ; 
 final int errs = checker . process ( theFiles ) ; 
 
 + final Map < String , List < String > > actualViolations = getActualViolations ( errs ) ; 
 + final Map < String , List < String > > realExpectedViolations = Maps . filterValues ( expectedViolations , new Predicate < List < String > > ( ) { 
 + @ Override 
 + public boolean apply ( List < String > input ) { 
 + return ! input . isEmpty ( ) ; 
 + } 
 + } ) ; 
 + final MapDifference < String , List < String > > violationDifferences = Maps . difference ( realExpectedViolations , actualViolations ) ; 
 + 
 + final Map < String , List < String > > missingViolations = violationDifferences . entriesOnlyOnLeft ( ) ; 
 + final Map < String , List < String > > unexpectedViolations = violationDifferences . entriesOnlyOnRight ( ) ; 
 + final Map < String , ValueDifference < List < String > > > differingViolations = violationDifferences . entriesDiffering ( ) ; 
 + 
 + final StringBuilder message = new StringBuilder ( ) ; 
 + if ( ! missingViolations . isEmpty ( ) ) { 
 + message . append ( " missing violations : " ) . append ( missingViolations ) ; 
 + } 
 + if ( ! unexpectedViolations . isEmpty ( ) ) { 
 + if ( message . length ( ) > 0 ) { 
 + message . append ( ' \ n ' ) ; 
 + } 
 + message . append ( " unexpected violations : " ) . append ( unexpectedViolations ) ; 
 + } 
 + if ( ! differingViolations . isEmpty ( ) ) { 
 + if ( message . length ( ) > 0 ) { 
 + message . append ( ' \ n ' ) ; 
 + } 
 + message . append ( " differing violations : " ) . append ( differingViolations ) ; 
 + } 
 + 
 + assertTrue ( message . toString ( ) , 
 + missingViolations . isEmpty ( ) 
 + & & unexpectedViolations . isEmpty ( ) 
 + & & differingViolations . isEmpty ( ) ) ; 
 + 
 + checker . destroy ( ) ; 
 + } 
 + 
 + private Map < String , List < String > > getActualViolations ( int errorCount ) throws IOException { 
 / / process each of the lines 
 final ByteArrayInputStream inputStream = 
 new ByteArrayInputStream ( stream . toByteArray ( ) ) ; 
 + 
 try ( final LineNumberReader lnr = new LineNumberReader ( 
 new InputStreamReader ( inputStream , StandardCharsets . UTF _ 8 ) ) ) { 
 
 final Map < String , List < String > > actualViolations = new HashMap < > ( ) ; 
 - for ( String line = lnr . readLine ( ) ; line ! = null & & lnr . getLineNumber ( ) < = errs ; line = lnr . readLine ( ) ) { 
 + for ( String line = lnr . readLine ( ) ; line ! = null & & lnr . getLineNumber ( ) < = errorCount ; 
 + line = lnr . readLine ( ) ) { 
 / / have at least 2 characters before the splitting colon , 
 / / to not split after the drive letter on windows 
 final String [ ] actualViolation = line . split ( " ( ? < = . { 2 } ) : " , 2 ) ; 
 @ @ - 179 , 41 + 220 , 8 @ @ public class BaseCheckTestSupport { 
 actualViolationsPerFile . add ( actualViolationMessage ) ; 
 } 
 
 - final Map < String , List < String > > realExpectedViolations = Maps . filterValues ( expectedViolations , new Predicate < List < String > > ( ) { 
 - @ Override 
 - public boolean apply ( List < String > input ) { 
 - return ! input . isEmpty ( ) ; 
 - } 
 - } ) ; 
 - final MapDifference < String , List < String > > violationDifferences = Maps . difference ( realExpectedViolations , actualViolations ) ; 
 - 
 - final Map < String , List < String > > missingViolations = violationDifferences . entriesOnlyOnLeft ( ) ; 
 - final Map < String , List < String > > unexpectedViolations = violationDifferences . entriesOnlyOnRight ( ) ; 
 - final Map < String , ValueDifference < List < String > > > differingViolations = violationDifferences . entriesDiffering ( ) ; 
 - 
 - final StringBuilder message = new StringBuilder ( ) ; 
 - if ( ! missingViolations . isEmpty ( ) ) { 
 - message . append ( " missing violations : " ) . append ( missingViolations ) ; 
 - } 
 - if ( ! unexpectedViolations . isEmpty ( ) ) { 
 - if ( message . length ( ) > 0 ) { 
 - message . append ( ' \ n ' ) ; 
 - } 
 - message . append ( " unexpected violations : " ) . append ( unexpectedViolations ) ; 
 - } 
 - if ( ! differingViolations . isEmpty ( ) ) { 
 - if ( message . length ( ) > 0 ) { 
 - message . append ( ' \ n ' ) ; 
 - } 
 - message . append ( " differing violations : " ) . append ( differingViolations ) ; 
 - } 
 - 
 - assertTrue ( message . toString ( ) , 
 - missingViolations . isEmpty ( ) 
 - & & unexpectedViolations . isEmpty ( ) 
 - & & differingViolations . isEmpty ( ) ) ; 
 + return actualViolations ; 
 } 
 - checker . destroy ( ) ; 
 } 
 
 / * * 
 @ @ - 227 , 11 + 235 , 30 @ @ public class BaseCheckTestSupport { 
 Properties pr = new Properties ( ) ; 
 try { 
 pr . load ( getClass ( ) . getResourceAsStream ( " messages . properties " ) ) ; 
 - } catch ( IOException e ) { 
 + } 
 + catch ( IOException e ) { 
 return null ; 
 } 
 final MessageFormat formatter = new MessageFormat ( pr . getProperty ( messageKey ) , 
 Locale . ROOT ) ; 
 return formatter . format ( arguments ) ; 
 } 
 + 
 + / * * 
 + * A brief logger that only display info about errors . 
 + * / 
 + protected static class BriefLogger 
 + extends DefaultLogger { 
 + public BriefLogger ( OutputStream out ) { 
 + super ( out , true , out , false , false ) ; 
 + } 
 + 
 + public BriefLogger ( OutputStream out , boolean printSeverity ) { 
 + super ( out , true , out , false , printSeverity ) ; 
 + } 
 + 
 + @ Override 
 + public void auditStarted ( AuditEvent event ) { 
 + } 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseFileSetCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseFileSetCheckTestSupport . java 
 index 128be4e . . 8763964 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseFileSetCheckTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseFileSetCheckTestSupport . java 
 @ @ - 1 , 3 + 1 , 22 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 package com . puppycrawl . tools . checkstyle ; 
 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java b / src / test / java / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java 
 index 8001f02 . . a35605d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java 
 @ @ - 1 , 7 + 1 , 21 @ @ 
 - / * 
 - * To change this template , choose Tools | Templates 
 - * and open the template in the editor . 
 - * / 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java b / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java 
 index f12eda4 . . 70852f8 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java 
 @ @ - 1 , 7 + 1 , 21 @ @ 
 - / * 
 - * To change this template , choose Tools | Templates 
 - * and open the template in the editor . 
 - * / 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DebugFilter . java b / src / test / java / com / puppycrawl / tools / checkstyle / DebugFilter . java 
 index 0f09349 . . 3b5ed14 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DebugFilter . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DebugFilter . java 
 @ @ - 1 , 7 + 1 , 21 @ @ 
 - / * 
 - * To change this template , choose Tools | Templates 
 - * and open the template in the editor . 
 - * / 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java 
 index 4c39d6c . . 3c82dcf 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java 
 @ @ - 1 , 3 + 1 , 22 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 package com . puppycrawl . tools . checkstyle . grammars ; 
 
 import java . io . File ; 
 @ @ - 30 , 15 + 49 , 19 @ @ public class GeneratedJava14LexerTest 
 
 @ Test 
 public void testUnexpectedChar ( ) throws Exception { 
 - Assume . assumeFalse ( SystemUtils . IS _ OS _ WINDOWS ) ; / / Encoding problems can occur in Windows 
 + / / Encoding problems can occur in Windows 
 + Assume . assumeFalse ( SystemUtils . IS _ OS _ WINDOWS ) ; 
 + 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( MemberNameCheck . class ) ; 
 + / / input is ' Ã Я ' 
 final String [ ] expected = { 
 - " 7 : 9 : Name ' Ã Я ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 7 : 9 : Name ' " + ( char ) 0xC3 + ( char ) 0x042F 
 + + " ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 } ; 
 verify ( checkConfig , getPath ( " InputGrammar . java " ) , expected ) ; 
 } 
 - 
 + 
 @ Test 
 public void testSemicolonBetweenImports ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java 
 index eb6ab36 . . 883b952 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java 
 @ @ - 634 , 7 + 634 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { 
 @ Test 
 public void testCompareExpectedTreeWithInput1 ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( CompareTreesWithComments . class ) ; 
 - CompareTreesWithComments . expectedTree = buildInput1 ( ) ; 
 + CompareTreesWithComments . setExpectedTree ( buildInput1 ( ) ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , getPath ( " InputComments1 . java " ) , expected ) ; 
 } 
 @ @ - 642 , 7 + 642 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { 
 @ Test 
 public void testCompareExpectedTreeWithInput2 ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( CompareTreesWithComments . class ) ; 
 - CompareTreesWithComments . expectedTree = buildInput2 ( ) ; 
 + CompareTreesWithComments . setExpectedTree ( buildInput2 ( ) ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , getPath ( " InputComments2 . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java 
 index 5998815 . . 97af7ff 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java 
 @ @ - 1 , 3 + 1 , 22 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 package com . puppycrawl . tools . checkstyle . grammars . comments ; 
 
 import org . apache . commons . lang3 . ArrayUtils ; 
 @ @ - 7 , 7 + 26 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Check ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 
 class CompareTreesWithComments extends Check { 
 - static DetailAST expectedTree ; 
 + private static DetailAST expectedTree ; 
 
 @ Override 
 public boolean isCommentNodesRequired ( ) { 
 @ @ - 35 , 38 + 54 , 51 @ @ class CompareTreesWithComments extends Check { 
 } 
 
 private static boolean isAstEquals ( DetailAST expected , DetailAST actual ) { 
 - boolean result = false ; 
 + boolean result ; 
 if ( expected = = actual ) { 
 result = true ; 
 } 
 else if ( actual = = null | | expected = = null ) { 
 result = false ; 
 - } else { 
 - if ( expected . getType ( ) = = actual . getType ( ) 
 - & & expected . getLineNo ( ) = = actual . getLineNo ( ) 
 - & & expected . getColumnNo ( ) = = actual . getColumnNo ( ) ) { 
 - if ( expected . getText ( ) = = null ) { 
 - result = actual . getText ( ) = = null ; 
 - } 
 - else if ( expected . getText ( ) . equals ( actual . getText ( ) ) ) { 
 - result = true ; 
 - } 
 + } 
 + else { 
 + result = isAstEqualsSafe ( expected , actual ) ; 
 + } 
 + if ( ! result ) { 
 + System . out . println ( " Expected : " + expected + " | Actual : " + actual ) ; 
 + } 
 + return result ; 
 + } 
 + 
 + private static boolean isAstEqualsSafe ( DetailAST expected , DetailAST actual ) { 
 + boolean result = false ; 
 + 
 + if ( expected . getType ( ) = = actual . getType ( ) 
 + & & expected . getLineNo ( ) = = actual . getLineNo ( ) 
 + & & expected . getColumnNo ( ) = = actual . getColumnNo ( ) ) { 
 + if ( expected . getText ( ) = = null ) { 
 + result = actual . getText ( ) = = null ; 
 + } 
 + else if ( expected . getText ( ) . equals ( actual . getText ( ) ) ) { 
 + result = true ; 
 } 
 + } 
 
 + if ( result ) { 
 + DetailAST childExpected = expected . getFirstChild ( ) ; 
 + DetailAST childActual = actual . getFirstChild ( ) ; 
 + result = isAstEquals ( childExpected , childActual ) ; 
 if ( result ) { 
 - DetailAST childExpected = expected . getFirstChild ( ) ; 
 - DetailAST childActual = actual . getFirstChild ( ) ; 
 - result = isAstEquals ( childExpected , childActual ) ; 
 - if ( result ) { 
 - DetailAST nextSiblingExpected = expected . getNextSibling ( ) ; 
 - DetailAST nextSiblingActual = actual . getNextSibling ( ) ; 
 - result = isAstEquals ( nextSiblingExpected , nextSiblingActual ) ; 
 - } 
 + DetailAST nextSiblingExpected = expected . getNextSibling ( ) ; 
 + DetailAST nextSiblingActual = actual . getNextSibling ( ) ; 
 + result = isAstEquals ( nextSiblingExpected , nextSiblingActual ) ; 
 } 
 } 
 - if ( ! result ) { 
 - System . out . println ( " Expected : " + expected + " | Actual : " + actual ) ; 
 - } 
 + 
 return result ; 
 } 
 + 
 + public static void setExpectedTree ( DetailAST expectedTree ) { 
 + CompareTreesWithComments . expectedTree = expectedTree ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index ac19098 . . d47fb1e 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 212 , 14 + 212 , 14 @ @ 
 < / target > 
 
 < target name = " checkstyle . checkstyle " depends = " compile . checkstyle " 
 - description = " Runs checkstyle on a file to test various rules " > 
 + description = " Runs checkstyle against it ' s own sources " > 
 < taskdef name = " checkstyle " 
 classname = " com . puppycrawl . tools . checkstyle . CheckStyleTask " > 
 < classpath refid = " run . classpath " / > 
 < / taskdef > 
 < delete file = " target / cachefile " / > 
 
 - < property name = " todo . pattern " value = " NOTHingWillMatCH _ - " / > 
 + < property name = " checkstyle . pattern . todo " value = " NOTHingWillMatCH _ - " / > 
 < property name = " check . config " location = " docs / checkstyle _ checks . xml " / > 
 < checkstyle config = " $ { check . config } " > 
 < fileset dir = " src / checkstyle " 
 @ @ - 228 , 38 + 228 , 25 @ @ 
 < formatter type = " plain " / > 
 < formatter type = " xml " toFile = " target / cs _ errors . xml " / > 
 < classpath refid = " run . classpath " / > 
 - < property key = " checkstyle . pattern . todo " value = " $ { todo . pattern } " / > 
 < property key = " checkstyle . cache . file " file = " target / cachefile " / > 
 < property key = " checkstyle . header . file " file = " docs / java . header " / > 
 < / checkstyle > 
 < / target > 
 
 - < target name = " checkstyle . style " depends = " compile . checkstyle " 
 - description = " Runs checkstyle to test generation of error reports " > 
 - < taskdef name = " checkstyle " 
 - classname = " com . puppycrawl . tools . checkstyle . CheckStyleTask " > 
 - < classpath refid = " run . classpath " / > 
 - < / taskdef > 
 + < target name = " checkstyle . style " depends = " checkstyle . checkstyle " 
 + description = " Runs checkstyle against it ' s own sources to test generation of error reports " > 
 < mkdir dir = " target / style / frames " / > 
 < mkdir dir = " target / style / noframes " / > 
 < mkdir dir = " target / style / simple " / > 
 - < checkstyle failOnViolation = " false " 
 - basedir = " . " > 
 - < fileset dir = " src / checkstyle " 
 - includes = " * * / * . java " 
 - excludes = " * * / Generated * . java " / > 
 - < formatter type = " xml " toFile = " target / style / cs _ errors . xml " / > 
 - < classpath refid = " build . classpath " / > 
 - < / checkstyle > 
 - < style basedir = " target / style " 
 + < style basedir = " target " 
 destdir = " target / style / noframes " 
 includes = " cs _ errors . xml " 
 style = " contrib / checkstyle - noframes . xsl " / > 
 - < style basedir = " target / style " 
 + < style basedir = " target " 
 destdir = " target / style / frames " 
 includes = " cs _ errors . xml " 
 style = " contrib / checkstyle - frames . xsl " / > 
 - < style basedir = " target / style " 
 + < style basedir = " target " 
 destdir = " target / style / simple " 
 includes = " cs _ errors . xml " 
 style = " contrib / checkstyle - simple . xsl " / >
