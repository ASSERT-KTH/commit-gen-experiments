BLEU SCORE: 0.054011574454540336

TEST MSG: Issue # 4414 : Simple name conflict of Checks from thirdparty checks will cause exception in run time
GENERATED MSG: Issue # 2109 : CLI should print a file name where exception is happen

TEST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index 75e592c . . 6b1e719 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> < module name = " PublicReferenceToPrivateTypeCheck " / > <nl> < module name = " NoNullForCollectionReturnCheck " / > <nl> < module name = " NoMainMethodInAbstractClass " / > <nl> - < module name = " InterfaceTypeParameterNameCheck " / > <nl> + < module name = " com . github . sevntu . checkstyle . checks . naming . InterfaceTypeParameterNameCheck " / > <nl> < module name = " ForbidThrowAnonymousExceptionsCheck " / > <nl> < module name = " ForbidReturnInFinallyBlock " / > <nl> < module name = " ForbidInstantiation " > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> index 3463868 . . 87c288d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle ; <nl> <nl> import java . io . IOException ; <nl> import java . lang . reflect . Constructor ; <nl> + import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . LinkedHashSet ; <nl> import java . util . Map ; <nl> @ @ - 55 , 6 + 56 , 10 @ @ public class PackageObjectFactory implements ModuleFactory { <nl> public static final String UNABLE _ TO _ INSTANTIATE _ EXCEPTION _ MESSAGE = <nl> " PackageObjectFactory . unableToInstantiateExceptionMessage " ; <nl> <nl> + / * * Exception message when there is ambigugous module name in config file . * / <nl> + public static final String AMBIGUOUS _ MODULE _ NAME _ EXCEPTION _ MESSAGE = <nl> + " PackageObjectFactory . ambiguousModuleNameExceptionMessage " ; <nl> + <nl> / * * Suffix of checks . * / <nl> public static final String CHECK _ SUFFIX = " Check " ; <nl> <nl> @ @ - 79 , 8 + 84 , 8 @ @ public class PackageObjectFactory implements ModuleFactory { <nl> / * * The class loader used to load Checkstyle core and custom modules . * / <nl> private final ClassLoader moduleClassLoader ; <nl> <nl> - / * * Map of third party Checkstyle module names to their fully qualified names . * / <nl> - private Map < String , String > thirdPartyNameToFullModuleName ; <nl> + / * * Map of third party Checkstyle module names to the set of their fully qualified names . * / <nl> + private Map < String , Set < String > > thirdPartyNameToFullModuleNames ; <nl> <nl> static { <nl> fillShortToFullModuleNamesMap ( ) ; <nl> @ @ - 139 , 13 + 144 , 26 @ @ public class PackageObjectFactory implements ModuleFactory { <nl> Object instance = null ; <nl> / / if the name is a simple class name , try to find it in maps at first <nl> if ( ! name . contains ( PACKAGE _ SEPARATOR ) ) { <nl> - instance = createObjectFromMap ( name , NAME _ TO _ FULL _ MODULE _ NAME ) ; <nl> + / / find the name in hardcode map <nl> + final String fullModuleName = NAME _ TO _ FULL _ MODULE _ NAME . get ( name ) ; <nl> + if ( fullModuleName = = null ) { <nl> + final String fullCheckModuleName = <nl> + NAME _ TO _ FULL _ MODULE _ NAME . get ( name + CHECK _ SUFFIX ) ; <nl> + if ( fullCheckModuleName ! = null ) { <nl> + instance = createObject ( fullCheckModuleName ) ; <nl> + } <nl> + } <nl> + else { <nl> + instance = createObject ( fullModuleName ) ; <nl> + } <nl> + <nl> + / / find the name in third party map <nl> if ( instance = = null ) { <nl> - if ( thirdPartyNameToFullModuleName = = null ) { <nl> - thirdPartyNameToFullModuleName = <nl> + if ( thirdPartyNameToFullModuleNames = = null ) { <nl> + thirdPartyNameToFullModuleNames = <nl> generateThirdPartyNameToFullModuleName ( moduleClassLoader ) ; <nl> } <nl> - instance = createObjectFromMap ( name , thirdPartyNameToFullModuleName ) ; <nl> + instance = createObjectFromMap ( name , thirdPartyNameToFullModuleNames ) ; <nl> } <nl> } <nl> <nl> @ @ - 172 , 36 + 190 , 72 @ @ public class PackageObjectFactory implements ModuleFactory { <nl> * Create object with the help of the supplied map . <nl> * @ param name name of module . <nl> * @ param map the supplied map . <nl> - * @ return instance of module if it is found in modules map . <nl> - * @ throws CheckstyleException if the class fails to instantiate . <nl> + * @ return instance of module if it is found in modules map and no ambiguous classes exist . <nl> + * @ throws CheckstyleException if the class fails to instantiate or there are ambiguous classes . <nl> * / <nl> - private Object createObjectFromMap ( String name , Map < String , String > map ) <nl> + private Object createObjectFromMap ( String name , Map < String , Set < String > > map ) <nl> throws CheckstyleException { <nl> - final String fullModuleName = map . get ( name ) ; <nl> + final Set < String > fullModuleNames = map . get ( name ) ; <nl> Object instance = null ; <nl> - if ( fullModuleName = = null ) { <nl> - final String fullCheckModuleName = map . get ( name + CHECK _ SUFFIX ) ; <nl> - if ( fullCheckModuleName ! = null ) { <nl> - instance = createObject ( fullCheckModuleName ) ; <nl> + if ( fullModuleNames = = null ) { <nl> + final Set < String > fullCheckModuleNames = map . get ( name + CHECK _ SUFFIX ) ; <nl> + if ( fullCheckModuleNames ! = null ) { <nl> + instance = createObjectFromFullModuleNames ( name , fullCheckModuleNames ) ; <nl> } <nl> } <nl> else { <nl> - instance = createObject ( fullModuleName ) ; <nl> + instance = createObjectFromFullModuleNames ( name , fullModuleNames ) ; <nl> } <nl> return instance ; <nl> } <nl> <nl> / * * <nl> - * Generate the map of third party Checkstyle module names to their fully qualified names . <nl> + * Create Object from optional full module names . <nl> + * In most case , there should be only one element in { @ code fullModuleName } , otherwise <nl> + * an exception would be thrown . <nl> + * @ param name name of module <nl> + * @ param fullModuleNames the supplied full module names set <nl> + * @ return instance of module if there is only one element in { @ code fullModuleName } <nl> + * @ throws CheckstyleException if the class fails to instantiate or there are more than one <nl> + * element in { @ code fullModuleName } <nl> + * / <nl> + private Object createObjectFromFullModuleNames ( String name , Set < String > fullModuleNames ) <nl> + throws CheckstyleException { <nl> + final Object returnValue ; <nl> + if ( fullModuleNames . size ( ) = = 1 ) { <nl> + returnValue = createObject ( fullModuleNames . iterator ( ) . next ( ) ) ; <nl> + } <nl> + else { <nl> + final String optionalNames = fullModuleNames . stream ( ) <nl> + . sorted ( ) <nl> + . collect ( Collectors . joining ( STRING _ SEPARATOR ) ) ; <nl> + final LocalizedMessage exceptionMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , AMBIGUOUS _ MODULE _ NAME _ EXCEPTION _ MESSAGE , <nl> + new String [ ] { name , optionalNames } , null , getClass ( ) , null ) ; <nl> + throw new CheckstyleException ( exceptionMessage . getMessage ( ) ) ; <nl> + } <nl> + return returnValue ; <nl> + } <nl> + <nl> + / * * <nl> + * Generate the map of third party Checkstyle module names to the set of their fully qualified <nl> + * names . <nl> * @ param loader the class loader used to load Checkstyle package names <nl> - * @ return the map of third party Checkstyle module names to their fully qualified names <nl> + * @ return the map of third party Checkstyle module names to the set of their fully qualified <nl> + * names <nl> * / <nl> - private Map < String , String > generateThirdPartyNameToFullModuleName ( ClassLoader loader ) { <nl> - Map < String , String > returnValue ; <nl> + private Map < String , Set < String > > generateThirdPartyNameToFullModuleName ( ClassLoader loader ) { <nl> + Map < String , Set < String > > returnValue ; <nl> try { <nl> returnValue = ModuleReflectionUtils . getCheckstyleModules ( packages , loader ) . stream ( ) <nl> - . filter ( clazz - > ! NAME _ TO _ FULL _ MODULE _ NAME . keySet ( ) . contains ( clazz . getSimpleName ( ) ) ) <nl> - . collect ( Collectors . toMap ( Class : : getSimpleName , Class : : getCanonicalName ) ) ; <nl> + . collect ( Collectors . toMap ( <nl> + Class : : getSimpleName , <nl> + cls - > Collections . singleton ( cls . getCanonicalName ( ) ) , <nl> + ( fullNames1 , fullNames2 ) - > { <nl> + final Set < String > mergedNames = new LinkedHashSet < > ( fullNames1 ) ; <nl> + mergedNames . addAll ( fullNames2 ) ; <nl> + return mergedNames ; <nl> + } ) ) ; <nl> } <nl> catch ( IOException ignore ) { <nl> returnValue = new HashMap < > ( ) ; <nl> @ @ - 234 , 7 + 288 , 7 @ @ public class PackageObjectFactory implements ModuleFactory { <nl> clazz = Class . forName ( className , true , moduleClassLoader ) ; <nl> } <nl> catch ( final ReflectiveOperationException | NoClassDefFoundError ignored ) { <nl> - / / keep looking , ignoring exception <nl> + / / ignore the exception <nl> } <nl> <nl> Object instance = null ; <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties <nl> index de2f0ab . . 00bbe2b 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties <nl> @ @ - 13 , 3 + 13 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = Unable to instantiate ' <nl> Please recheck that class name is specified as canonical name or read how to configure \ <nl> short name usage http : / / checkstyle . sourceforge . net / config . html \ # Packages . Please also \ <nl> recheck that provided ClassLoader to Checker is configured correctly . <nl> + <nl> + PackageObjectFactory . ambiguousModuleNameExceptionMessage = In config there is ' ' { 0 } ' ' , \ <nl> + but in classpath there are { 1 } , please resolve ambiguity by specifying fully qualified \ <nl> + name in config . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties <nl> index ac9c846 . . 41b4784 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties <nl> @ @ - 13 , 3 + 13 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = Fehler beim Instanziier <nl> Bitte pr ü fen Sie , dass der Klassenname als kanonischer Name angegeben wurde oder lesen Sie , wie Sie \ <nl> abgek ü rzte Namen konfigurieren : http : / / checkstyle . sourceforge . net / config . html \ # Packages . \ <nl> Bitte pr ü fen Sie auch , dass der angegebene ClassLoader des Checkers richtig konfiguriert ist . <nl> + <nl> + PackageObjectFactory . ambiguousModuleNameExceptionMessage = In config gibt es ' ' { 0 } ' ' , \ <nl> + aber im Klassenpfad gibt es { 1 } , bitte l ö sen Sie Mehrdeutigkeit durch die Angabe voll \ <nl> + qualifizierten Namen in config . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties <nl> index 8be3592 . . ed78290 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties <nl> @ @ - 14 , 3 + 14 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = No se ha podido crear <nl> de clase se especifica como nombre can ó nico o leer c ó mo configurar nombre de uso \ <nl> a corto http : / / checkstyle . sourceforge . net / config . html \ # Packages . Por favor , vuelva \ <nl> a comprobar tambi é n la proporcionada ClassLoader al inspector est á configurado correctamente . <nl> + <nl> + PackageObjectFactory . ambiguousModuleNameExceptionMessage = En configuraci ó n hay ' ' { 0 } ' ' , \ <nl> + pero en classpath hay { 1 } , por favor , resolver la ambig ü edad mediante la especificaci ó n \ <nl> + de nombre completo en config . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties <nl> index d2b30f1 . . dc83b0d 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties <nl> @ @ - 14 , 3 + 14 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = Ei voitu instantiate <nl> m ä ä ritetty kanoninen nimi tai lukea miten m ä ä ritt ä ä lyhyt nimi k ä ytt ö \ <nl> http : / / checkstyle . sourceforge . net / config . html \ # Packages . Muista my ö s tarkista , \ <nl> ett ä tarjotaan classloader Checker on m ä ä ritetty oikein . <nl> + <nl> + PackageObjectFactory . ambiguousModuleNameExceptionMessage = Konfigissa on ' ' { 0 } ' ' , \ <nl> + mutta luokkapolussa on { 1 } , ratkaise ep ä selvyys m ä ä ritt ä m ä ll ä t ä ydellinen nimi \ <nl> + konfiguroinnilla . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties <nl> index 82e0abc . . e721e7d 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties <nl> @ @ - 13 , 3 + 13 , 6 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = Impossible d ' instanci <nl> Veuillez v é rifier que le nom de classe est sp é cifi é comme nom canonique ou regardez comment \ <nl> configurer l ' ' utilisation du nom court http : / / checkstyle . sourceforge . net / config . html \ # Packages . \ <nl> Veuillez é galement v é rifier que le ClassLoader fourni au Checker est correctement configur é . <nl> + <nl> + PackageObjectFactory . ambiguousModuleNameExceptionMessage = Dans la configuration il y a ' ' { 0 } ' ' , \ <nl> + mais dans classpath il y a { 1 } , r é solvez l ' ambigu ï t é en sp é cifiant le nom complet dans config . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties <nl> index deafdc7 . . 4daf971 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties <nl> @ @ - 12 , 3 + 12 , 6 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = ' ' { 0 } ' ' ク ラ ス を イ <nl> ク ラ ス 名 を 正 規 名 で 指 定 し て い る か 再 確 認 し て く だ さ い 。 ま た は 、 単 純 名 の 使 用 を 設 定 す る 方 法 \ <nl> http : / / checkstyle . sourceforge . net / config . html \ # Packages を お 読 み く だ さ い 。 \ <nl> ま た 、 Checker に 渡 さ れ て い る ク ラ ス ロ ー ダ が 正 し く 設 定 さ れ て い る か 再 確 認 し て く だ さ い 。 <nl> + <nl> + PackageObjectFactory . ambiguousModuleNameExceptionMessage = 設 定 に は ' ' { 0 } ' ' が あ り ま す が 、 \ <nl> + ク ラ ス パ ス に は { 1 } が あ り ま す 。 設 定 に 完 全 修 飾 名 を 指 定 し て あ い ま い さ を 解 決 し て く だ さ い 。 <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties <nl> index 824fedb . . 97f5ca8 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties <nl> @ @ - 14 , 3 + 14 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = N ã o é poss í vel ins <nl> é especificado como nome can ô nico ou ler como configurar o uso do nome curto \ <nl> http : / / checkstyle . sourceforge . net / config . html \ # Packages . Por favor , volte a verificar \ <nl> tamb é m que ClassLoader fornecido para Checker est á configurado corretamente . <nl> + <nl> + PackageObjectFactory . ambiguousModuleNameExceptionMessage = Na configura ç ã o h á ' ' { 0 } ' ' , \ <nl> + mas no classpath h á { 1 } , resolva a ambiguidade especificando o nome totalmente \ <nl> + qualificado na configura ç ã o . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties <nl> index 10bedb6 . . 96769f5 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties <nl> @ @ - 13 , 3 + 13 , 6 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = ' ' { 0 } ' ' s ı n ı f ı n ı a <nl> kullan ı m ı n ı http : / / checkstyle . sourceforge . net / config . html \ # Packages nas ı l \ <nl> yap ı land ı r ı laca ğ ı okuyunuz . Ayr ı ca Checker ş art ı yla ClassLoader d ü zg ü n \ <nl> yap ı land ı r ı lm ı ş oldu ğ unu tekrar kontrol ediniz . <nl> + <nl> + PackageObjectFactory . ambiguousModuleNameExceptionMessage = Yap ı land ı rmada ' ' { 0 } ' ' var , \ <nl> + ancak s ı n ı f yolunda { 1 } var , l ü tfen yap ı land ı rmada tam ad ı belirterek belirsizli ğ i gidermek . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties <nl> index cf7eada . . bb7e614 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties <nl> @ @ - 13 , 3 + 13 , 6 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = 无 法 初 始 化 类 ： ' <nl> 请 检 查 类 名 大 小 写 ， 或 阅 读 帮 助 手 册 中 短 名 称 配 置 部 分 ： \ <nl> http : / / checkstyle . sourceforge . net / config . html \ # Packages . \ <nl> 同 时 ， 请 检 查 Checker 的 ClassLoader 是 否 配 置 正 确 。 <nl> + <nl> + PackageObjectFactory . ambiguousModuleNameExceptionMessage = 配 置 文 件 中 出 现 ' ' { 0 } ' ' ， \ <nl> + 但 在 classpath 中 存 在 { 1 } ， 请 在 配 置 文 件 中 使 用 Module 的 fully qualified name 以 避 免 混 淆 。 <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java <nl> index 34ad043 . . a513022 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> + import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . AMBIGUOUS _ MODULE _ NAME _ EXCEPTION _ MESSAGE ; <nl> import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . BASE _ PACKAGE ; <nl> import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . CHECK _ SUFFIX ; <nl> import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . NULL _ LOADER _ MESSAGE ; <nl> @ @ - 38 , 9 + 39 , 11 @ @ import java . io . IOException ; <nl> import java . lang . reflect . Field ; <nl> import java . lang . reflect . Method ; <nl> import java . net . URLClassLoader ; <nl> + import java . util . Arrays ; <nl> import java . util . Collection ; <nl> import java . util . Collections ; <nl> import java . util . HashSet ; <nl> + import java . util . LinkedHashSet ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> @ @ - 150 , 6 + 153 , 43 @ @ public class PackageObjectFactoryTest { <nl> } <nl> <nl> @ Test <nl> + public void testCreateObjectFromMap ( ) throws Exception { <nl> + final String moduleName = " Foo " ; <nl> + final String name = moduleName + CHECK _ SUFFIX ; <nl> + final String packageName = BASE _ PACKAGE + " . packageobjectfactory . bar " ; <nl> + final String fullName = packageName + PACKAGE _ SEPARATOR + name ; <nl> + final ClassLoader classLoader = Thread . currentThread ( ) . getContextClassLoader ( ) ; <nl> + final PackageObjectFactory objectFactory = <nl> + new PackageObjectFactory ( packageName , classLoader ) ; <nl> + final Object instance1 = objectFactory . createModule ( name ) ; <nl> + assertEquals ( fullName , instance1 . getClass ( ) . getCanonicalName ( ) ) ; <nl> + final Object instance2 = objectFactory . createModule ( moduleName ) ; <nl> + assertEquals ( fullName , instance2 . getClass ( ) . getCanonicalName ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testCreateObjectFromFullModuleNamesWithException ( ) throws Exception { <nl> + final String barPackage = BASE _ PACKAGE + " . packageobjectfactory . bar " ; <nl> + final String fooPackage = BASE _ PACKAGE + " . packageobjectfactory . foo " ; <nl> + final ClassLoader classLoader = Thread . currentThread ( ) . getContextClassLoader ( ) ; <nl> + final PackageObjectFactory objectFactory = new PackageObjectFactory ( <nl> + new LinkedHashSet < > ( Arrays . asList ( barPackage , fooPackage ) ) , classLoader ) ; <nl> + final String name = " FooCheck " ; <nl> + try { <nl> + objectFactory . createModule ( name ) ; <nl> + fail ( " Exception is expected " ) ; <nl> + } <nl> + catch ( CheckstyleException ex ) { <nl> + final String optionalNames = barPackage + PACKAGE _ SEPARATOR + name <nl> + + STRING _ SEPARATOR + fooPackage + PACKAGE _ SEPARATOR + name ; <nl> + final LocalizedMessage exceptionMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , AMBIGUOUS _ MODULE _ NAME _ EXCEPTION _ MESSAGE , <nl> + new String [ ] { name , optionalNames } , null , getClass ( ) , null ) ; <nl> + assertEquals ( exceptionMessage . getMessage ( ) , ex . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> public void testGenerateThirdPartyNameToFullModuleNameWithException ( ) throws Exception { <nl> final URLClassLoader classLoader = mock ( URLClassLoader . class ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> index 20652bf . . 3564e45 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> @ @ - 169 , 6 + 169 , 8 @ @ public final class CheckUtil { <nl> return classPath . getTopLevelClassesRecursive ( packageName ) . stream ( ) <nl> . map ( ClassPath . ClassInfo : : load ) <nl> . filter ( ModuleReflectionUtils : : isCheckstyleModule ) <nl> + . filter ( cls - > ! cls . getCanonicalName ( ) <nl> + . startsWith ( " com . puppycrawl . tools . checkstyle . packageobjectfactory " ) ) <nl> . collect ( Collectors . toSet ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / bar / FooCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / bar / FooCheck . java <nl> new file mode 100644 <nl> index 0000000 . . abc8a28 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / bar / FooCheck . java <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + package com . puppycrawl . tools . checkstyle . packageobjectfactory . bar ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; <nl> + <nl> + public class FooCheck extends AbstractCheck { <nl> + @ Override <nl> + public int [ ] getDefaultTokens ( ) { <nl> + return new int [ ] { 0 } ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / foo / FooCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / foo / FooCheck . java <nl> new file mode 100644 <nl> index 0000000 . . 44649b3 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / foo / FooCheck . java <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + package com . puppycrawl . tools . checkstyle . packageobjectfactory . foo ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; <nl> + <nl> + public class FooCheck extends AbstractCheck { <nl> + @ Override <nl> + public int [ ] getDefaultTokens ( ) { <nl> + return new int [ ] { 0 } ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java <nl> index dae6cd4 . . 348d5d0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java <nl> @ @ - 58 , 8 + 58 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> public void testAllChecksWithDefaultConfiguration ( ) throws Exception { <nl> <nl> final Set < Class < ? > > checkstyleChecks = getCheckstyleChecks ( ) ; <nl> - final String inputFilePath = " src / test / resources - noncompilable / " <nl> - + " com / puppycrawl / tools / checkstyle / InputDefaultConfig . java " ; <nl> + final String inputFilePath = getNonCompilablePath ( " InputDefaultConfig . java " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> for ( Class < ? > check : checkstyleChecks ) { <nl> @ @ - 69 , 8 + 68 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> / / Checks which have Check as a parent . <nl> if ( check . equals ( ImportControlCheck . class ) ) { <nl> / / ImportControlCheck must have the import control configuration file to avoid violation . <nl> - checkConfig . addAttribute ( " file " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ complete . xml " ) ; <nl> + checkConfig . addAttribute ( " file " , getPath ( " import - control _ complete . xml " ) ) ; <nl> } <nl> checker = createChecker ( checkConfig ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> index cfa3873 . . c30edb7 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> @ @ - 44 , 6 + 44 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> * @ author lkuehne <nl> * / <nl> public class ConfigurationLoaderTest { <nl> + private static String getConfigPath ( String filename ) { <nl> + return " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " + filename ; <nl> + } <nl> <nl> private static Configuration loadConfiguration ( String name ) <nl> throws CheckstyleException { <nl> @ @ - 52 , 8 + 55 , 7 @ @ public class ConfigurationLoaderTest { <nl> <nl> private static Configuration loadConfiguration ( <nl> String name , Properties props ) throws CheckstyleException { <nl> - final String fName = <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " + name ; <nl> + final String fName = getConfigPath ( name ) ; <nl> <nl> return ConfigurationLoader . loadConfiguration ( <nl> fName , new PropertiesExpander ( props ) ) ; <nl> @ @ - 66 , 7 + 68 , 7 @ @ public class ConfigurationLoaderTest { <nl> <nl> / / load config that ' s only found in the classpath <nl> final DefaultConfiguration config = ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / checkstyle _ checks . xml " , new PropertiesExpander ( props ) ) ; <nl> + getConfigPath ( " checkstyle _ checks . xml " ) , new PropertiesExpander ( props ) ) ; <nl> <nl> / / verify the root , and property substitution <nl> final Properties attributes = new Properties ( ) ; <nl> @ @ - 334 , 8 + 336 , 7 @ @ public class ConfigurationLoaderTest { <nl> final Properties props = new Properties ( ) ; <nl> props . setProperty ( " checkstyle . basedir " , " basedir " ) ; <nl> <nl> - final File file = new File ( <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / subdir / including . xml " ) ; <nl> + final File file = new File ( getConfigPath ( " subdir / including . xml " ) ) ; <nl> final DefaultConfiguration config = <nl> ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( <nl> file . toURI ( ) . toString ( ) , new PropertiesExpander ( props ) ) ; <nl> @ @ - 403 , 8 + 404 , 7 @ @ public class ConfigurationLoaderTest { <nl> <nl> final DefaultConfiguration config = <nl> ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " <nl> - + " config _ with _ ignore . xml " , <nl> + getConfigPath ( " config _ with _ ignore . xml " ) , <nl> new PropertiesExpander ( new Properties ( ) ) , true ) ; <nl> <nl> final Configuration [ ] children = config . getChildren ( ) ; <nl> @ @ - 416 , 8 + 416 , 7 @ @ public class ConfigurationLoaderTest { <nl> <nl> final DefaultConfiguration config = <nl> ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( new InputSource ( <nl> - new File ( " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " <nl> - + " config _ with _ ignore . xml " ) . toURI ( ) . toString ( ) ) , <nl> + new File ( getConfigPath ( " config _ with _ ignore . xml " ) ) . toURI ( ) . toString ( ) ) , <nl> new PropertiesExpander ( new Properties ( ) ) , true ) ; <nl> <nl> final Configuration [ ] children = config . getChildren ( ) ; <nl> @ @ - 429 , 8 + 428 , 7 @ @ public class ConfigurationLoaderTest { <nl> <nl> final DefaultConfiguration config = <nl> ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " <nl> - + " config _ with _ checker _ ignore . xml " , <nl> + getConfigPath ( " config _ with _ checker _ ignore . xml " ) , <nl> new PropertiesExpander ( new Properties ( ) ) , true ) ; <nl> <nl> final Configuration [ ] children = config . getChildren ( ) ; <nl> @ @ - 460 , 9 + 458 , 7 @ @ public class ConfigurationLoaderTest { <nl> @ SuppressWarnings ( " deprecation " ) <nl> final DefaultConfiguration config = <nl> ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( <nl> - new FileInputStream ( <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " <nl> - + " config _ with _ ignore . xml " ) , <nl> + new FileInputStream ( getConfigPath ( " config _ with _ ignore . xml " ) ) , <nl> new PropertiesExpander ( new Properties ( ) ) , true ) ; <nl> <nl> final Configuration [ ] children = config . getChildren ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 806a1c1 . . 3b7bf29 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 55 , 6 + 55 , 14 @ @ public class MainTest { <nl> @ Rule <nl> public final SystemOutRule systemOut = new SystemOutRule ( ) . enableLog ( ) . mute ( ) ; <nl> <nl> + private static String getPath ( String filename ) { <nl> + return " src / test / resources / com / puppycrawl / tools / checkstyle / " + filename ; <nl> + } <nl> + <nl> + private static String getFilePath ( String filename ) throws IOException { <nl> + return new File ( getPath ( filename ) ) . getCanonicalPath ( ) ; <nl> + } <nl> + <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> assertUtilsClassHasPrivateConstructor ( Main . class ) ; <nl> @ @ - 110 , 7 + 118 , 7 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + Main . main ( getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 143 , 7 + 151 , 7 @ @ public class MainTest { <nl> } <nl> } ) ; <nl> Main . main ( " - c " , " src / main / resources / non _ existing _ config . xml " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 158 , 7 + 166 , 7 @ @ public class MainTest { <nl> } <nl> } ) ; <nl> Main . main ( " - c " , " / google _ checks . xml " , " - f " , " xmlp " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 198 , 8 + 206 , 8 @ @ public class MainTest { <nl> } <nl> } ) ; <nl> <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - non - existing - classname . xml " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + Main . main ( " - c " , getPath ( " config - non - existing - classname . xml " ) , <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 213 , 8 + 221 , 8 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 223 , 10 + 231 , 7 @ @ public class MainTest { <nl> exit . checkAssertionAfterwards ( new Assertion ( ) { <nl> @ Override <nl> public void checkAssertion ( ) throws IOException { <nl> - String currentPath = new File ( " . " ) . getCanonicalPath ( ) ; <nl> - String expectedPath = currentPath <nl> - + " / src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " <nl> - . replace ( " / " , File . separator ) ; <nl> + String expectedPath = getFilePath ( " InputMain . java " ) ; <nl> final ResourceBundle compilationProperties = <nl> ResourceBundle . getBundle ( " checkstylecompilation " ) ; <nl> String version = compilationProperties . getString ( " checkstyle . compile . version " ) ; <nl> @ @ - 239 , 9 + 244 , 9 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , <nl> + Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> " - f " , " xml " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 255 , 9 + 260 , 9 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , <nl> + Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> " - f " , " plain " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 266 , 10 + 271 , 7 @ @ public class MainTest { <nl> exit . checkAssertionAfterwards ( new Assertion ( ) { <nl> @ Override <nl> public void checkAssertion ( ) throws IOException { <nl> - String currentPath = new File ( " . " ) . getCanonicalPath ( ) ; <nl> - String expectedPath = currentPath <nl> - + " / src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " <nl> - . replace ( " / " , File . separator ) ; <nl> + String expectedPath = getFilePath ( " InputMain . java " ) ; <nl> assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " <nl> + " % 1 $ s : 3 : 14 : " <nl> + " warning : Name ' InputMain ' must match pattern ' ^ [ a - z0 - 9 ] * $ ' . % n " <nl> @ @ - 280 , 8 + 282 , 8 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname2 . xml " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + Main . main ( " - c " , getPath ( " config - classname2 . xml " ) , <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 291 , 10 + 293 , 7 @ @ public class MainTest { <nl> exit . checkAssertionAfterwards ( new Assertion ( ) { <nl> @ Override <nl> public void checkAssertion ( ) throws IOException { <nl> - String currentPath = new File ( " . " ) . getCanonicalPath ( ) ; <nl> - String expectedPath = currentPath <nl> - + " / src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " <nl> - . replace ( " / " , File . separator ) ; <nl> + String expectedPath = getFilePath ( " InputMain . java " ) ; <nl> assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " <nl> + " % 1 $ s : 3 : 14 : error : " <nl> + " Name ' InputMain ' must match pattern ' ^ [ a - z0 - 9 ] * $ ' . % n " <nl> @ @ - 306 , 8 + 305 , 8 @ @ public class MainTest { <nl> } <nl> } ) ; <nl> Main . main ( " - c " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname2 - error . xml " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " config - classname2 - error . xml " ) , <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 321 , 10 + 320 , 10 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , <nl> + Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> " - f " , " plain " , <nl> " - o " , temporaryFolder . getRoot ( ) + " / output . txt " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 338 , 10 + 337 , 10 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , <nl> + Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> " - f " , " plain " , <nl> " - o " , file . getCanonicalPath ( ) , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 359 , 10 + 358 , 10 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , <nl> + Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> " - f " , " plain " , <nl> " - o " , file . getCanonicalPath ( ) , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 384 , 10 + 383 , 10 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , <nl> + Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> " - f " , " plain " , <nl> " - o " , file . getCanonicalPath ( ) , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 402 , 10 + 401 , 9 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / " <nl> - + " config - classname - prop . xml " , <nl> - " - p " , " src / test / resources / com / puppycrawl / tools / checkstyle / mycheckstyle . properties " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + Main . main ( " - c " , getPath ( " config - classname - prop . xml " ) , <nl> + " - p " , getPath ( " mycheckstyle . properties " ) , <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 420 , 10 + 418 , 9 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / " <nl> - + " config - classname - prop . xml " , <nl> + Main . main ( " - c " , getPath ( " config - classname - prop . xml " ) , <nl> " - p " , " nonexisting . properties " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 443 , 9 + 440 , 8 @ @ public class MainTest { <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> } ) ; <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / " <nl> - + " config - Incorrect . xml " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; <nl> + Main . main ( " - c " , getPath ( " config - Incorrect . xml " ) , <nl> + getPath ( " InputMain . java " ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 522 , 10 + 518 , 7 @ @ public class MainTest { <nl> <nl> exit . checkAssertionAfterwards ( new Assertion ( ) { <nl> @ Override public void checkAssertion ( ) throws IOException { <nl> - String currentPath = new File ( " . " ) . getCanonicalPath ( ) ; <nl> - String expectedPath = currentPath <nl> - + " / src / test / resources / com / puppycrawl / tools / checkstyle / checks / metrics / " <nl> - . replace ( " / " , File . separator ) ; <nl> + String expectedPath = getFilePath ( " checks / metrics " ) + File . separator ; <nl> StringBuilder sb = new StringBuilder ( ) ; <nl> sb . append ( " Starting audit . . . " ) . append ( System . getProperty ( " line . separator " ) ) ; <nl> String format = " % s . java : % s : warning : File length is % s lines ( max allowed is 170 ) . " ; <nl> @ @ - 541 , 8 + 534 , 8 @ @ public class MainTest { <nl> } <nl> } ) ; <nl> <nl> - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - filelength . xml " , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / checks / metrics / " ) ; <nl> + Main . main ( " - c " , getPath ( " config - filelength . xml " ) , <nl> + getPath ( " checks / metrics " ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / import - control _ complete . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / import - control _ complete . xml <nl> new file mode 100644 <nl> index 0000000 . . 3bdfcad <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / import - control _ complete . xml <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + < ! DOCTYPE import - control PUBLIC <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 0 / / EN " <nl> + " http : / / www . puppycrawl . com / dtds / import _ control _ 1 _ 0 . dtd " > <nl> + <nl> + < import - control pkg = " com " > <nl> + < allow class = " some . class " / > <nl> + < disallow class = " another . class " local - only = " true " / > <nl> + < allow pkg = " some . pkg " / > <nl> + < disallow pkg = " another . pkg " local - only = " true " / > <nl> + < disallow pkg = " and . another . pkg " exact - match = " true " / > <nl> + < subpackage name = " puppycrawl " > <nl> + < disallow pkg = " some . pkg " / > <nl> + < disallow class = " some . class " / > <nl> + < / subpackage > <nl> + < / import - control > <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index 75e592c . . 6b1e719 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 < module name = " PublicReferenceToPrivateTypeCheck " / > 
 < module name = " NoNullForCollectionReturnCheck " / > 
 < module name = " NoMainMethodInAbstractClass " / > 
 - < module name = " InterfaceTypeParameterNameCheck " / > 
 + < module name = " com . github . sevntu . checkstyle . checks . naming . InterfaceTypeParameterNameCheck " / > 
 < module name = " ForbidThrowAnonymousExceptionsCheck " / > 
 < module name = " ForbidReturnInFinallyBlock " / > 
 < module name = " ForbidInstantiation " > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 index 3463868 . . 87c288d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle ; 
 
 import java . io . IOException ; 
 import java . lang . reflect . Constructor ; 
 + import java . util . Collections ; 
 import java . util . HashMap ; 
 import java . util . LinkedHashSet ; 
 import java . util . Map ; 
 @ @ - 55 , 6 + 56 , 10 @ @ public class PackageObjectFactory implements ModuleFactory { 
 public static final String UNABLE _ TO _ INSTANTIATE _ EXCEPTION _ MESSAGE = 
 " PackageObjectFactory . unableToInstantiateExceptionMessage " ; 
 
 + / * * Exception message when there is ambigugous module name in config file . * / 
 + public static final String AMBIGUOUS _ MODULE _ NAME _ EXCEPTION _ MESSAGE = 
 + " PackageObjectFactory . ambiguousModuleNameExceptionMessage " ; 
 + 
 / * * Suffix of checks . * / 
 public static final String CHECK _ SUFFIX = " Check " ; 
 
 @ @ - 79 , 8 + 84 , 8 @ @ public class PackageObjectFactory implements ModuleFactory { 
 / * * The class loader used to load Checkstyle core and custom modules . * / 
 private final ClassLoader moduleClassLoader ; 
 
 - / * * Map of third party Checkstyle module names to their fully qualified names . * / 
 - private Map < String , String > thirdPartyNameToFullModuleName ; 
 + / * * Map of third party Checkstyle module names to the set of their fully qualified names . * / 
 + private Map < String , Set < String > > thirdPartyNameToFullModuleNames ; 
 
 static { 
 fillShortToFullModuleNamesMap ( ) ; 
 @ @ - 139 , 13 + 144 , 26 @ @ public class PackageObjectFactory implements ModuleFactory { 
 Object instance = null ; 
 / / if the name is a simple class name , try to find it in maps at first 
 if ( ! name . contains ( PACKAGE _ SEPARATOR ) ) { 
 - instance = createObjectFromMap ( name , NAME _ TO _ FULL _ MODULE _ NAME ) ; 
 + / / find the name in hardcode map 
 + final String fullModuleName = NAME _ TO _ FULL _ MODULE _ NAME . get ( name ) ; 
 + if ( fullModuleName = = null ) { 
 + final String fullCheckModuleName = 
 + NAME _ TO _ FULL _ MODULE _ NAME . get ( name + CHECK _ SUFFIX ) ; 
 + if ( fullCheckModuleName ! = null ) { 
 + instance = createObject ( fullCheckModuleName ) ; 
 + } 
 + } 
 + else { 
 + instance = createObject ( fullModuleName ) ; 
 + } 
 + 
 + / / find the name in third party map 
 if ( instance = = null ) { 
 - if ( thirdPartyNameToFullModuleName = = null ) { 
 - thirdPartyNameToFullModuleName = 
 + if ( thirdPartyNameToFullModuleNames = = null ) { 
 + thirdPartyNameToFullModuleNames = 
 generateThirdPartyNameToFullModuleName ( moduleClassLoader ) ; 
 } 
 - instance = createObjectFromMap ( name , thirdPartyNameToFullModuleName ) ; 
 + instance = createObjectFromMap ( name , thirdPartyNameToFullModuleNames ) ; 
 } 
 } 
 
 @ @ - 172 , 36 + 190 , 72 @ @ public class PackageObjectFactory implements ModuleFactory { 
 * Create object with the help of the supplied map . 
 * @ param name name of module . 
 * @ param map the supplied map . 
 - * @ return instance of module if it is found in modules map . 
 - * @ throws CheckstyleException if the class fails to instantiate . 
 + * @ return instance of module if it is found in modules map and no ambiguous classes exist . 
 + * @ throws CheckstyleException if the class fails to instantiate or there are ambiguous classes . 
 * / 
 - private Object createObjectFromMap ( String name , Map < String , String > map ) 
 + private Object createObjectFromMap ( String name , Map < String , Set < String > > map ) 
 throws CheckstyleException { 
 - final String fullModuleName = map . get ( name ) ; 
 + final Set < String > fullModuleNames = map . get ( name ) ; 
 Object instance = null ; 
 - if ( fullModuleName = = null ) { 
 - final String fullCheckModuleName = map . get ( name + CHECK _ SUFFIX ) ; 
 - if ( fullCheckModuleName ! = null ) { 
 - instance = createObject ( fullCheckModuleName ) ; 
 + if ( fullModuleNames = = null ) { 
 + final Set < String > fullCheckModuleNames = map . get ( name + CHECK _ SUFFIX ) ; 
 + if ( fullCheckModuleNames ! = null ) { 
 + instance = createObjectFromFullModuleNames ( name , fullCheckModuleNames ) ; 
 } 
 } 
 else { 
 - instance = createObject ( fullModuleName ) ; 
 + instance = createObjectFromFullModuleNames ( name , fullModuleNames ) ; 
 } 
 return instance ; 
 } 
 
 / * * 
 - * Generate the map of third party Checkstyle module names to their fully qualified names . 
 + * Create Object from optional full module names . 
 + * In most case , there should be only one element in { @ code fullModuleName } , otherwise 
 + * an exception would be thrown . 
 + * @ param name name of module 
 + * @ param fullModuleNames the supplied full module names set 
 + * @ return instance of module if there is only one element in { @ code fullModuleName } 
 + * @ throws CheckstyleException if the class fails to instantiate or there are more than one 
 + * element in { @ code fullModuleName } 
 + * / 
 + private Object createObjectFromFullModuleNames ( String name , Set < String > fullModuleNames ) 
 + throws CheckstyleException { 
 + final Object returnValue ; 
 + if ( fullModuleNames . size ( ) = = 1 ) { 
 + returnValue = createObject ( fullModuleNames . iterator ( ) . next ( ) ) ; 
 + } 
 + else { 
 + final String optionalNames = fullModuleNames . stream ( ) 
 + . sorted ( ) 
 + . collect ( Collectors . joining ( STRING _ SEPARATOR ) ) ; 
 + final LocalizedMessage exceptionMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , AMBIGUOUS _ MODULE _ NAME _ EXCEPTION _ MESSAGE , 
 + new String [ ] { name , optionalNames } , null , getClass ( ) , null ) ; 
 + throw new CheckstyleException ( exceptionMessage . getMessage ( ) ) ; 
 + } 
 + return returnValue ; 
 + } 
 + 
 + / * * 
 + * Generate the map of third party Checkstyle module names to the set of their fully qualified 
 + * names . 
 * @ param loader the class loader used to load Checkstyle package names 
 - * @ return the map of third party Checkstyle module names to their fully qualified names 
 + * @ return the map of third party Checkstyle module names to the set of their fully qualified 
 + * names 
 * / 
 - private Map < String , String > generateThirdPartyNameToFullModuleName ( ClassLoader loader ) { 
 - Map < String , String > returnValue ; 
 + private Map < String , Set < String > > generateThirdPartyNameToFullModuleName ( ClassLoader loader ) { 
 + Map < String , Set < String > > returnValue ; 
 try { 
 returnValue = ModuleReflectionUtils . getCheckstyleModules ( packages , loader ) . stream ( ) 
 - . filter ( clazz - > ! NAME _ TO _ FULL _ MODULE _ NAME . keySet ( ) . contains ( clazz . getSimpleName ( ) ) ) 
 - . collect ( Collectors . toMap ( Class : : getSimpleName , Class : : getCanonicalName ) ) ; 
 + . collect ( Collectors . toMap ( 
 + Class : : getSimpleName , 
 + cls - > Collections . singleton ( cls . getCanonicalName ( ) ) , 
 + ( fullNames1 , fullNames2 ) - > { 
 + final Set < String > mergedNames = new LinkedHashSet < > ( fullNames1 ) ; 
 + mergedNames . addAll ( fullNames2 ) ; 
 + return mergedNames ; 
 + } ) ) ; 
 } 
 catch ( IOException ignore ) { 
 returnValue = new HashMap < > ( ) ; 
 @ @ - 234 , 7 + 288 , 7 @ @ public class PackageObjectFactory implements ModuleFactory { 
 clazz = Class . forName ( className , true , moduleClassLoader ) ; 
 } 
 catch ( final ReflectiveOperationException | NoClassDefFoundError ignored ) { 
 - / / keep looking , ignoring exception 
 + / / ignore the exception 
 } 
 
 Object instance = null ; 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties 
 index de2f0ab . . 00bbe2b 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties 
 @ @ - 13 , 3 + 13 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = Unable to instantiate ' 
 Please recheck that class name is specified as canonical name or read how to configure \ 
 short name usage http : / / checkstyle . sourceforge . net / config . html \ # Packages . Please also \ 
 recheck that provided ClassLoader to Checker is configured correctly . 
 + 
 + PackageObjectFactory . ambiguousModuleNameExceptionMessage = In config there is ' ' { 0 } ' ' , \ 
 + but in classpath there are { 1 } , please resolve ambiguity by specifying fully qualified \ 
 + name in config . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties 
 index ac9c846 . . 41b4784 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties 
 @ @ - 13 , 3 + 13 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = Fehler beim Instanziier 
 Bitte pr ü fen Sie , dass der Klassenname als kanonischer Name angegeben wurde oder lesen Sie , wie Sie \ 
 abgek ü rzte Namen konfigurieren : http : / / checkstyle . sourceforge . net / config . html \ # Packages . \ 
 Bitte pr ü fen Sie auch , dass der angegebene ClassLoader des Checkers richtig konfiguriert ist . 
 + 
 + PackageObjectFactory . ambiguousModuleNameExceptionMessage = In config gibt es ' ' { 0 } ' ' , \ 
 + aber im Klassenpfad gibt es { 1 } , bitte l ö sen Sie Mehrdeutigkeit durch die Angabe voll \ 
 + qualifizierten Namen in config . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties 
 index 8be3592 . . ed78290 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties 
 @ @ - 14 , 3 + 14 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = No se ha podido crear 
 de clase se especifica como nombre can ó nico o leer c ó mo configurar nombre de uso \ 
 a corto http : / / checkstyle . sourceforge . net / config . html \ # Packages . Por favor , vuelva \ 
 a comprobar tambi é n la proporcionada ClassLoader al inspector est á configurado correctamente . 
 + 
 + PackageObjectFactory . ambiguousModuleNameExceptionMessage = En configuraci ó n hay ' ' { 0 } ' ' , \ 
 + pero en classpath hay { 1 } , por favor , resolver la ambig ü edad mediante la especificaci ó n \ 
 + de nombre completo en config . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties 
 index d2b30f1 . . dc83b0d 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties 
 @ @ - 14 , 3 + 14 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = Ei voitu instantiate 
 m ä ä ritetty kanoninen nimi tai lukea miten m ä ä ritt ä ä lyhyt nimi k ä ytt ö \ 
 http : / / checkstyle . sourceforge . net / config . html \ # Packages . Muista my ö s tarkista , \ 
 ett ä tarjotaan classloader Checker on m ä ä ritetty oikein . 
 + 
 + PackageObjectFactory . ambiguousModuleNameExceptionMessage = Konfigissa on ' ' { 0 } ' ' , \ 
 + mutta luokkapolussa on { 1 } , ratkaise ep ä selvyys m ä ä ritt ä m ä ll ä t ä ydellinen nimi \ 
 + konfiguroinnilla . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties 
 index 82e0abc . . e721e7d 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties 
 @ @ - 13 , 3 + 13 , 6 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = Impossible d ' instanci 
 Veuillez v é rifier que le nom de classe est sp é cifi é comme nom canonique ou regardez comment \ 
 configurer l ' ' utilisation du nom court http : / / checkstyle . sourceforge . net / config . html \ # Packages . \ 
 Veuillez é galement v é rifier que le ClassLoader fourni au Checker est correctement configur é . 
 + 
 + PackageObjectFactory . ambiguousModuleNameExceptionMessage = Dans la configuration il y a ' ' { 0 } ' ' , \ 
 + mais dans classpath il y a { 1 } , r é solvez l ' ambigu ï t é en sp é cifiant le nom complet dans config . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties 
 index deafdc7 . . 4daf971 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties 
 @ @ - 12 , 3 + 12 , 6 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = ' ' { 0 } ' ' ク ラ ス を イ 
 ク ラ ス 名 を 正 規 名 で 指 定 し て い る か 再 確 認 し て く だ さ い 。 ま た は 、 単 純 名 の 使 用 を 設 定 す る 方 法 \ 
 http : / / checkstyle . sourceforge . net / config . html \ # Packages を お 読 み く だ さ い 。 \ 
 ま た 、 Checker に 渡 さ れ て い る ク ラ ス ロ ー ダ が 正 し く 設 定 さ れ て い る か 再 確 認 し て く だ さ い 。 
 + 
 + PackageObjectFactory . ambiguousModuleNameExceptionMessage = 設 定 に は ' ' { 0 } ' ' が あ り ま す が 、 \ 
 + ク ラ ス パ ス に は { 1 } が あ り ま す 。 設 定 に 完 全 修 飾 名 を 指 定 し て あ い ま い さ を 解 決 し て く だ さ い 。 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties 
 index 824fedb . . 97f5ca8 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties 
 @ @ - 14 , 3 + 14 , 7 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = N ã o é poss í vel ins 
 é especificado como nome can ô nico ou ler como configurar o uso do nome curto \ 
 http : / / checkstyle . sourceforge . net / config . html \ # Packages . Por favor , volte a verificar \ 
 tamb é m que ClassLoader fornecido para Checker est á configurado corretamente . 
 + 
 + PackageObjectFactory . ambiguousModuleNameExceptionMessage = Na configura ç ã o h á ' ' { 0 } ' ' , \ 
 + mas no classpath h á { 1 } , resolva a ambiguidade especificando o nome totalmente \ 
 + qualificado na configura ç ã o . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties 
 index 10bedb6 . . 96769f5 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties 
 @ @ - 13 , 3 + 13 , 6 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = ' ' { 0 } ' ' s ı n ı f ı n ı a 
 kullan ı m ı n ı http : / / checkstyle . sourceforge . net / config . html \ # Packages nas ı l \ 
 yap ı land ı r ı laca ğ ı okuyunuz . Ayr ı ca Checker ş art ı yla ClassLoader d ü zg ü n \ 
 yap ı land ı r ı lm ı ş oldu ğ unu tekrar kontrol ediniz . 
 + 
 + PackageObjectFactory . ambiguousModuleNameExceptionMessage = Yap ı land ı rmada ' ' { 0 } ' ' var , \ 
 + ancak s ı n ı f yolunda { 1 } var , l ü tfen yap ı land ı rmada tam ad ı belirterek belirsizli ğ i gidermek . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties 
 index cf7eada . . bb7e614 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties 
 @ @ - 13 , 3 + 13 , 6 @ @ PackageObjectFactory . unableToInstantiateExceptionMessage = 无 法 初 始 化 类 ： ' 
 请 检 查 类 名 大 小 写 ， 或 阅 读 帮 助 手 册 中 短 名 称 配 置 部 分 ： \ 
 http : / / checkstyle . sourceforge . net / config . html \ # Packages . \ 
 同 时 ， 请 检 查 Checker 的 ClassLoader 是 否 配 置 正 确 。 
 + 
 + PackageObjectFactory . ambiguousModuleNameExceptionMessage = 配 置 文 件 中 出 现 ' ' { 0 } ' ' ， \ 
 + 但 在 classpath 中 存 在 { 1 } ， 请 在 配 置 文 件 中 使 用 Module 的 fully qualified name 以 避 免 混 淆 。 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java 
 index 34ad043 . . a513022 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 + import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . AMBIGUOUS _ MODULE _ NAME _ EXCEPTION _ MESSAGE ; 
 import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . BASE _ PACKAGE ; 
 import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . CHECK _ SUFFIX ; 
 import static com . puppycrawl . tools . checkstyle . PackageObjectFactory . NULL _ LOADER _ MESSAGE ; 
 @ @ - 38 , 9 + 39 , 11 @ @ import java . io . IOException ; 
 import java . lang . reflect . Field ; 
 import java . lang . reflect . Method ; 
 import java . net . URLClassLoader ; 
 + import java . util . Arrays ; 
 import java . util . Collection ; 
 import java . util . Collections ; 
 import java . util . HashSet ; 
 + import java . util . LinkedHashSet ; 
 import java . util . List ; 
 import java . util . Map ; 
 import java . util . Set ; 
 @ @ - 150 , 6 + 153 , 43 @ @ public class PackageObjectFactoryTest { 
 } 
 
 @ Test 
 + public void testCreateObjectFromMap ( ) throws Exception { 
 + final String moduleName = " Foo " ; 
 + final String name = moduleName + CHECK _ SUFFIX ; 
 + final String packageName = BASE _ PACKAGE + " . packageobjectfactory . bar " ; 
 + final String fullName = packageName + PACKAGE _ SEPARATOR + name ; 
 + final ClassLoader classLoader = Thread . currentThread ( ) . getContextClassLoader ( ) ; 
 + final PackageObjectFactory objectFactory = 
 + new PackageObjectFactory ( packageName , classLoader ) ; 
 + final Object instance1 = objectFactory . createModule ( name ) ; 
 + assertEquals ( fullName , instance1 . getClass ( ) . getCanonicalName ( ) ) ; 
 + final Object instance2 = objectFactory . createModule ( moduleName ) ; 
 + assertEquals ( fullName , instance2 . getClass ( ) . getCanonicalName ( ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testCreateObjectFromFullModuleNamesWithException ( ) throws Exception { 
 + final String barPackage = BASE _ PACKAGE + " . packageobjectfactory . bar " ; 
 + final String fooPackage = BASE _ PACKAGE + " . packageobjectfactory . foo " ; 
 + final ClassLoader classLoader = Thread . currentThread ( ) . getContextClassLoader ( ) ; 
 + final PackageObjectFactory objectFactory = new PackageObjectFactory ( 
 + new LinkedHashSet < > ( Arrays . asList ( barPackage , fooPackage ) ) , classLoader ) ; 
 + final String name = " FooCheck " ; 
 + try { 
 + objectFactory . createModule ( name ) ; 
 + fail ( " Exception is expected " ) ; 
 + } 
 + catch ( CheckstyleException ex ) { 
 + final String optionalNames = barPackage + PACKAGE _ SEPARATOR + name 
 + + STRING _ SEPARATOR + fooPackage + PACKAGE _ SEPARATOR + name ; 
 + final LocalizedMessage exceptionMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , AMBIGUOUS _ MODULE _ NAME _ EXCEPTION _ MESSAGE , 
 + new String [ ] { name , optionalNames } , null , getClass ( ) , null ) ; 
 + assertEquals ( exceptionMessage . getMessage ( ) , ex . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 public void testGenerateThirdPartyNameToFullModuleNameWithException ( ) throws Exception { 
 final URLClassLoader classLoader = mock ( URLClassLoader . class ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 index 20652bf . . 3564e45 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 @ @ - 169 , 6 + 169 , 8 @ @ public final class CheckUtil { 
 return classPath . getTopLevelClassesRecursive ( packageName ) . stream ( ) 
 . map ( ClassPath . ClassInfo : : load ) 
 . filter ( ModuleReflectionUtils : : isCheckstyleModule ) 
 + . filter ( cls - > ! cls . getCanonicalName ( ) 
 + . startsWith ( " com . puppycrawl . tools . checkstyle . packageobjectfactory " ) ) 
 . collect ( Collectors . toSet ( ) ) ; 
 } 
 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / bar / FooCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / bar / FooCheck . java 
 new file mode 100644 
 index 0000000 . . abc8a28 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / bar / FooCheck . java 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + package com . puppycrawl . tools . checkstyle . packageobjectfactory . bar ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; 
 + 
 + public class FooCheck extends AbstractCheck { 
 + @ Override 
 + public int [ ] getDefaultTokens ( ) { 
 + return new int [ ] { 0 } ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / foo / FooCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / foo / FooCheck . java 
 new file mode 100644 
 index 0000000 . . 44649b3 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / packageobjectfactory / foo / FooCheck . java 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + package com . puppycrawl . tools . checkstyle . packageobjectfactory . foo ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; 
 + 
 + public class FooCheck extends AbstractCheck { 
 + @ Override 
 + public int [ ] getDefaultTokens ( ) { 
 + return new int [ ] { 0 } ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java 
 index dae6cd4 . . 348d5d0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java 
 @ @ - 58 , 8 + 58 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 public void testAllChecksWithDefaultConfiguration ( ) throws Exception { 
 
 final Set < Class < ? > > checkstyleChecks = getCheckstyleChecks ( ) ; 
 - final String inputFilePath = " src / test / resources - noncompilable / " 
 - + " com / puppycrawl / tools / checkstyle / InputDefaultConfig . java " ; 
 + final String inputFilePath = getNonCompilablePath ( " InputDefaultConfig . java " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 for ( Class < ? > check : checkstyleChecks ) { 
 @ @ - 69 , 8 + 68 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 / / Checks which have Check as a parent . 
 if ( check . equals ( ImportControlCheck . class ) ) { 
 / / ImportControlCheck must have the import control configuration file to avoid violation . 
 - checkConfig . addAttribute ( " file " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ complete . xml " ) ; 
 + checkConfig . addAttribute ( " file " , getPath ( " import - control _ complete . xml " ) ) ; 
 } 
 checker = createChecker ( checkConfig ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 index cfa3873 . . c30edb7 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 @ @ - 44 , 6 + 44 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 * @ author lkuehne 
 * / 
 public class ConfigurationLoaderTest { 
 + private static String getConfigPath ( String filename ) { 
 + return " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " + filename ; 
 + } 
 
 private static Configuration loadConfiguration ( String name ) 
 throws CheckstyleException { 
 @ @ - 52 , 8 + 55 , 7 @ @ public class ConfigurationLoaderTest { 
 
 private static Configuration loadConfiguration ( 
 String name , Properties props ) throws CheckstyleException { 
 - final String fName = 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " + name ; 
 + final String fName = getConfigPath ( name ) ; 
 
 return ConfigurationLoader . loadConfiguration ( 
 fName , new PropertiesExpander ( props ) ) ; 
 @ @ - 66 , 7 + 68 , 7 @ @ public class ConfigurationLoaderTest { 
 
 / / load config that ' s only found in the classpath 
 final DefaultConfiguration config = ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / checkstyle _ checks . xml " , new PropertiesExpander ( props ) ) ; 
 + getConfigPath ( " checkstyle _ checks . xml " ) , new PropertiesExpander ( props ) ) ; 
 
 / / verify the root , and property substitution 
 final Properties attributes = new Properties ( ) ; 
 @ @ - 334 , 8 + 336 , 7 @ @ public class ConfigurationLoaderTest { 
 final Properties props = new Properties ( ) ; 
 props . setProperty ( " checkstyle . basedir " , " basedir " ) ; 
 
 - final File file = new File ( 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / subdir / including . xml " ) ; 
 + final File file = new File ( getConfigPath ( " subdir / including . xml " ) ) ; 
 final DefaultConfiguration config = 
 ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( 
 file . toURI ( ) . toString ( ) , new PropertiesExpander ( props ) ) ; 
 @ @ - 403 , 8 + 404 , 7 @ @ public class ConfigurationLoaderTest { 
 
 final DefaultConfiguration config = 
 ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " 
 - + " config _ with _ ignore . xml " , 
 + getConfigPath ( " config _ with _ ignore . xml " ) , 
 new PropertiesExpander ( new Properties ( ) ) , true ) ; 
 
 final Configuration [ ] children = config . getChildren ( ) ; 
 @ @ - 416 , 8 + 416 , 7 @ @ public class ConfigurationLoaderTest { 
 
 final DefaultConfiguration config = 
 ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( new InputSource ( 
 - new File ( " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " 
 - + " config _ with _ ignore . xml " ) . toURI ( ) . toString ( ) ) , 
 + new File ( getConfigPath ( " config _ with _ ignore . xml " ) ) . toURI ( ) . toString ( ) ) , 
 new PropertiesExpander ( new Properties ( ) ) , true ) ; 
 
 final Configuration [ ] children = config . getChildren ( ) ; 
 @ @ - 429 , 8 + 428 , 7 @ @ public class ConfigurationLoaderTest { 
 
 final DefaultConfiguration config = 
 ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " 
 - + " config _ with _ checker _ ignore . xml " , 
 + getConfigPath ( " config _ with _ checker _ ignore . xml " ) , 
 new PropertiesExpander ( new Properties ( ) ) , true ) ; 
 
 final Configuration [ ] children = config . getChildren ( ) ; 
 @ @ - 460 , 9 + 458 , 7 @ @ public class ConfigurationLoaderTest { 
 @ SuppressWarnings ( " deprecation " ) 
 final DefaultConfiguration config = 
 ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( 
 - new FileInputStream ( 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / configs / " 
 - + " config _ with _ ignore . xml " ) , 
 + new FileInputStream ( getConfigPath ( " config _ with _ ignore . xml " ) ) , 
 new PropertiesExpander ( new Properties ( ) ) , true ) ; 
 
 final Configuration [ ] children = config . getChildren ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 806a1c1 . . 3b7bf29 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 55 , 6 + 55 , 14 @ @ public class MainTest { 
 @ Rule 
 public final SystemOutRule systemOut = new SystemOutRule ( ) . enableLog ( ) . mute ( ) ; 
 
 + private static String getPath ( String filename ) { 
 + return " src / test / resources / com / puppycrawl / tools / checkstyle / " + filename ; 
 + } 
 + 
 + private static String getFilePath ( String filename ) throws IOException { 
 + return new File ( getPath ( filename ) ) . getCanonicalPath ( ) ; 
 + } 
 + 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 assertUtilsClassHasPrivateConstructor ( Main . class ) ; 
 @ @ - 110 , 7 + 118 , 7 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + Main . main ( getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 143 , 7 + 151 , 7 @ @ public class MainTest { 
 } 
 } ) ; 
 Main . main ( " - c " , " src / main / resources / non _ existing _ config . xml " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 158 , 7 + 166 , 7 @ @ public class MainTest { 
 } 
 } ) ; 
 Main . main ( " - c " , " / google _ checks . xml " , " - f " , " xmlp " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 198 , 8 + 206 , 8 @ @ public class MainTest { 
 } 
 } ) ; 
 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - non - existing - classname . xml " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + Main . main ( " - c " , getPath ( " config - non - existing - classname . xml " ) , 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 213 , 8 + 221 , 8 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 223 , 10 + 231 , 7 @ @ public class MainTest { 
 exit . checkAssertionAfterwards ( new Assertion ( ) { 
 @ Override 
 public void checkAssertion ( ) throws IOException { 
 - String currentPath = new File ( " . " ) . getCanonicalPath ( ) ; 
 - String expectedPath = currentPath 
 - + " / src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " 
 - . replace ( " / " , File . separator ) ; 
 + String expectedPath = getFilePath ( " InputMain . java " ) ; 
 final ResourceBundle compilationProperties = 
 ResourceBundle . getBundle ( " checkstylecompilation " ) ; 
 String version = compilationProperties . getString ( " checkstyle . compile . version " ) ; 
 @ @ - 239 , 9 + 244 , 9 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , 
 + Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 " - f " , " xml " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 255 , 9 + 260 , 9 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , 
 + Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 " - f " , " plain " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 266 , 10 + 271 , 7 @ @ public class MainTest { 
 exit . checkAssertionAfterwards ( new Assertion ( ) { 
 @ Override 
 public void checkAssertion ( ) throws IOException { 
 - String currentPath = new File ( " . " ) . getCanonicalPath ( ) ; 
 - String expectedPath = currentPath 
 - + " / src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " 
 - . replace ( " / " , File . separator ) ; 
 + String expectedPath = getFilePath ( " InputMain . java " ) ; 
 assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " 
 + " % 1 $ s : 3 : 14 : " 
 + " warning : Name ' InputMain ' must match pattern ' ^ [ a - z0 - 9 ] * $ ' . % n " 
 @ @ - 280 , 8 + 282 , 8 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname2 . xml " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + Main . main ( " - c " , getPath ( " config - classname2 . xml " ) , 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 291 , 10 + 293 , 7 @ @ public class MainTest { 
 exit . checkAssertionAfterwards ( new Assertion ( ) { 
 @ Override 
 public void checkAssertion ( ) throws IOException { 
 - String currentPath = new File ( " . " ) . getCanonicalPath ( ) ; 
 - String expectedPath = currentPath 
 - + " / src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " 
 - . replace ( " / " , File . separator ) ; 
 + String expectedPath = getFilePath ( " InputMain . java " ) ; 
 assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " 
 + " % 1 $ s : 3 : 14 : error : " 
 + " Name ' InputMain ' must match pattern ' ^ [ a - z0 - 9 ] * $ ' . % n " 
 @ @ - 306 , 8 + 305 , 8 @ @ public class MainTest { 
 } 
 } ) ; 
 Main . main ( " - c " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname2 - error . xml " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " config - classname2 - error . xml " ) , 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 321 , 10 + 320 , 10 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , 
 + Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 " - f " , " plain " , 
 " - o " , temporaryFolder . getRoot ( ) + " / output . txt " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 338 , 10 + 337 , 10 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , 
 + Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 " - f " , " plain " , 
 " - o " , file . getCanonicalPath ( ) , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 359 , 10 + 358 , 10 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , 
 + Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 " - f " , " plain " , 
 " - o " , file . getCanonicalPath ( ) , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 384 , 10 + 383 , 10 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - classname . xml " , 
 + Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 " - f " , " plain " , 
 " - o " , file . getCanonicalPath ( ) , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 402 , 10 + 401 , 9 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / " 
 - + " config - classname - prop . xml " , 
 - " - p " , " src / test / resources / com / puppycrawl / tools / checkstyle / mycheckstyle . properties " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + Main . main ( " - c " , getPath ( " config - classname - prop . xml " ) , 
 + " - p " , getPath ( " mycheckstyle . properties " ) , 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 420 , 10 + 418 , 9 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / " 
 - + " config - classname - prop . xml " , 
 + Main . main ( " - c " , getPath ( " config - classname - prop . xml " ) , 
 " - p " , " nonexisting . properties " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 443 , 9 + 440 , 8 @ @ public class MainTest { 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 } ) ; 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / " 
 - + " config - Incorrect . xml " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / InputMain . java " ) ; 
 + Main . main ( " - c " , getPath ( " config - Incorrect . xml " ) , 
 + getPath ( " InputMain . java " ) ) ; 
 } 
 
 @ Test 
 @ @ - 522 , 10 + 518 , 7 @ @ public class MainTest { 
 
 exit . checkAssertionAfterwards ( new Assertion ( ) { 
 @ Override public void checkAssertion ( ) throws IOException { 
 - String currentPath = new File ( " . " ) . getCanonicalPath ( ) ; 
 - String expectedPath = currentPath 
 - + " / src / test / resources / com / puppycrawl / tools / checkstyle / checks / metrics / " 
 - . replace ( " / " , File . separator ) ; 
 + String expectedPath = getFilePath ( " checks / metrics " ) + File . separator ; 
 StringBuilder sb = new StringBuilder ( ) ; 
 sb . append ( " Starting audit . . . " ) . append ( System . getProperty ( " line . separator " ) ) ; 
 String format = " % s . java : % s : warning : File length is % s lines ( max allowed is 170 ) . " ; 
 @ @ - 541 , 8 + 534 , 8 @ @ public class MainTest { 
 } 
 } ) ; 
 
 - Main . main ( " - c " , " src / test / resources / com / puppycrawl / tools / checkstyle / config - filelength . xml " , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / checks / metrics / " ) ; 
 + Main . main ( " - c " , getPath ( " config - filelength . xml " ) , 
 + getPath ( " checks / metrics " ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / import - control _ complete . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / import - control _ complete . xml 
 new file mode 100644 
 index 0000000 . . 3bdfcad 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / import - control _ complete . xml 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + < ! DOCTYPE import - control PUBLIC 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 0 / / EN " 
 + " http : / / www . puppycrawl . com / dtds / import _ control _ 1 _ 0 . dtd " > 
 + 
 + < import - control pkg = " com " > 
 + < allow class = " some . class " / > 
 + < disallow class = " another . class " local - only = " true " / > 
 + < allow pkg = " some . pkg " / > 
 + < disallow pkg = " another . pkg " local - only = " true " / > 
 + < disallow pkg = " and . another . pkg " exact - match = " true " / > 
 + < subpackage name = " puppycrawl " > 
 + < disallow pkg = " some . pkg " / > 
 + < disallow class = " some . class " / > 
 + < / subpackage > 
 + < / import - control > 
 \ No newline at end of file
