BLEU SCORE: 0.04085507150363301

TEST MSG: Issue # 3212 : aligned string array setters for properties
GENERATED MSG: Replace ' for ' loop with ' foreach ' . # 1538

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 4afe625 . . 2766315 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 131 , 8 + 131 , 8 @ @ public class SuppressWarningsHolder <nl> * paramnum } . <nl> * @ param aliasList the list of comma - separated alias assignments <nl> * / <nl> - public void setAliasList ( String aliasList ) { <nl> - for ( String sourceAlias : aliasList . split ( " , " ) ) { <nl> + public void setAliasList ( String . . . aliasList ) { <nl> + for ( String sourceAlias : aliasList ) { <nl> final int index = sourceAlias . indexOf ( ' = ' ) ; <nl> if ( index > 0 ) { <nl> registerAlias ( sourceAlias . substring ( 0 , index ) , sourceAlias <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java <nl> index bebce58 . . 6becb4c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java <nl> @ @ - 70 , 8 + 70 , 6 @ @ public class AtclauseOrderCheck extends AbstractJavadocCheck { <nl> * / <nl> public static final String MSG _ KEY = " at . clause . order " ; <nl> <nl> - / * * Comma literal . * / <nl> - private static final String COMMA _ SEPARATOR = " , " ; <nl> / * * <nl> * Default order of atclauses . <nl> * / <nl> @ @ - 103 , 26 + 101 , 24 @ @ public class AtclauseOrderCheck extends AbstractJavadocCheck { <nl> <nl> / * * <nl> * Sets custom targets . <nl> - * @ param target user ' s targets . <nl> + * @ param targets user ' s targets . <nl> * / <nl> - public void setTarget ( String target ) { <nl> + public void setTarget ( String . . . targets ) { <nl> final List < Integer > customTarget = new ArrayList < > ( ) ; <nl> - final String [ ] sTarget = target . split ( COMMA _ SEPARATOR ) ; <nl> - for ( String aSTarget : sTarget ) { <nl> - customTarget . add ( TokenUtils . getTokenId ( aSTarget . trim ( ) ) ) ; <nl> + for ( String temp : targets ) { <nl> + customTarget . add ( TokenUtils . getTokenId ( temp . trim ( ) ) ) ; <nl> } <nl> - this . target = customTarget ; <nl> + target = customTarget ; <nl> } <nl> <nl> / * * <nl> * Sets custom order of atclauses . <nl> - * @ param order user ' s order . <nl> + * @ param orders user ' s orders . <nl> * / <nl> - public void setTagOrder ( String order ) { <nl> + public void setTagOrder ( String . . . orders ) { <nl> final List < String > customOrder = new ArrayList < > ( ) ; <nl> - final String [ ] sOrder = order . split ( COMMA _ SEPARATOR ) ; <nl> - for ( String aSOrder : sOrder ) { <nl> - customOrder . add ( aSOrder . trim ( ) ) ; <nl> + for ( String order : orders ) { <nl> + customOrder . add ( order . trim ( ) ) ; <nl> } <nl> tagOrder = customOrder ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java <nl> index d6cd562 . . 81bd401 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java <nl> @ @ - 22 , 7 + 22 , 6 @ @ package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> import java . util . ArrayList ; <nl> import java . util . List ; <nl> <nl> - import com . google . common . base . Splitter ; <nl> import com . google . common . collect . Lists ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailNode ; <nl> @ @ - 80 , 9 + 79 , 8 @ @ public class SingleLineJavadocCheck extends AbstractJavadocCheck { <nl> * <nl> * @ param tags to be ignored by check . <nl> * / <nl> - public void setIgnoredTags ( String tags ) { <nl> - ignoredTags = <nl> - Lists . newArrayList ( Splitter . on ( " , " ) . omitEmptyStrings ( ) . trimResults ( ) . split ( tags ) ) ; <nl> + public void setIgnoredTags ( String . . . tags ) { <nl> + ignoredTags = Lists . newArrayList ( tags ) ; <nl> } <nl> <nl> / * *
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index b312c40 . . 8a9c1c5 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1128 , 7 + 1128 , 6 @ @ <nl> < regex > < pattern > . * . checks . metrics . AbstractClassCouplingCheck < / pattern > < branchRate > 87 < / branchRate > < lineRate > 97 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . metrics . AbstractClassCouplingCheck \ $ . * < / pattern > < branchRate > 78 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . metrics . BooleanExpressionComplexityCheck < / pattern > < branchRate > 74 < / branchRate > < lineRate > 80 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . metrics . JavaNCSSCheck < / pattern > < branchRate > 87 < / branchRate > < lineRate > 97 < / lineRate > < / regex > <nl> <nl> < regex > < pattern > . * . checks . regexp . CommentSuppressor < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . regexp . DetectorOptions < / pattern > < branchRate > 100 < / branchRate > < lineRate > 96 < / lineRate > < / regex > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheckTest . java <nl> index b01518b . . 1544f57 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheckTest . java <nl> @ @ - 26 , 10 + 26 , 12 @ @ import static org . junit . Assert . fail ; <nl> <nl> import java . io . File ; <nl> <nl> + import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> / * * <nl> * Testcase for the JavaNCSS - Check . <nl> @ @ - 47 , 7 + 49 , 7 @ @ public class JavaNCSSCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " fileMaximum " , " 2 " ) ; <nl> <nl> String [ ] expected = { <nl> - " 2 : 1 : " + getCheckMessage ( MSG _ FILE , 35 , 2 ) , <nl> + " 2 : 1 : " + getCheckMessage ( MSG _ FILE , 39 , 2 ) , <nl> " 9 : 1 : " + getCheckMessage ( MSG _ CLASS , 22 , 1 ) , <nl> " 14 : 5 : " + getCheckMessage ( MSG _ METHOD , 2 , 0 ) , <nl> " 21 : 5 : " + getCheckMessage ( MSG _ METHOD , 4 , 0 ) , <nl> @ @ - 56 , 6 + 58 , 10 @ @ public class JavaNCSSCheckTest extends BaseCheckTestSupport { <nl> " 49 : 5 : " + getCheckMessage ( MSG _ CLASS , 2 , 1 ) , <nl> " 56 : 1 : " + getCheckMessage ( MSG _ CLASS , 10 , 1 ) , <nl> " 61 : 5 : " + getCheckMessage ( MSG _ METHOD , 8 , 0 ) , <nl> + " 80 : 1 : " + getCheckMessage ( MSG _ CLASS , 4 , 1 ) , <nl> + " 81 : 5 : " + getCheckMessage ( MSG _ METHOD , 1 , 0 ) , <nl> + " 82 : 5 : " + getCheckMessage ( MSG _ METHOD , 1 , 0 ) , <nl> + " 83 : 5 : " + getCheckMessage ( MSG _ METHOD , 1 , 0 ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " metrics " + File . separator <nl> @ @ - 78 , 4 + 84 , 80 @ @ public class JavaNCSSCheckTest extends BaseCheckTestSupport { <nl> fail ( ) ; <nl> } <nl> } <nl> + <nl> + @ Test <nl> + public void testGetAcceptableTokens ( ) { <nl> + JavaNCSSCheck javaNcssCheckObj = new JavaNCSSCheck ( ) ; <nl> + int [ ] actual = javaNcssCheckObj . getAcceptableTokens ( ) ; <nl> + int [ ] expected = new int [ ] { <nl> + TokenTypes . CLASS _ DEF , <nl> + TokenTypes . INTERFACE _ DEF , <nl> + TokenTypes . METHOD _ DEF , <nl> + TokenTypes . CTOR _ DEF , <nl> + TokenTypes . INSTANCE _ INIT , <nl> + TokenTypes . STATIC _ INIT , <nl> + TokenTypes . PACKAGE _ DEF , <nl> + TokenTypes . IMPORT , <nl> + TokenTypes . VARIABLE _ DEF , <nl> + TokenTypes . CTOR _ CALL , <nl> + TokenTypes . SUPER _ CTOR _ CALL , <nl> + TokenTypes . LITERAL _ IF , <nl> + TokenTypes . LITERAL _ ELSE , <nl> + TokenTypes . LITERAL _ WHILE , <nl> + TokenTypes . LITERAL _ DO , <nl> + TokenTypes . LITERAL _ FOR , <nl> + TokenTypes . LITERAL _ SWITCH , <nl> + TokenTypes . LITERAL _ BREAK , <nl> + TokenTypes . LITERAL _ CONTINUE , <nl> + TokenTypes . LITERAL _ RETURN , <nl> + TokenTypes . LITERAL _ THROW , <nl> + TokenTypes . LITERAL _ SYNCHRONIZED , <nl> + TokenTypes . LITERAL _ CATCH , <nl> + TokenTypes . LITERAL _ FINALLY , <nl> + TokenTypes . EXPR , <nl> + TokenTypes . LABELED _ STAT , <nl> + TokenTypes . LITERAL _ CASE , <nl> + TokenTypes . LITERAL _ DEFAULT , <nl> + } ; <nl> + Assert . assertNotNull ( actual ) ; <nl> + Assert . assertArrayEquals ( expected , actual ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testGetRequiredTokens ( ) { <nl> + JavaNCSSCheck javaNcssCheckObj = new JavaNCSSCheck ( ) ; <nl> + int [ ] actual = javaNcssCheckObj . getRequiredTokens ( ) ; <nl> + int [ ] expected = new int [ ] { <nl> + TokenTypes . CLASS _ DEF , <nl> + TokenTypes . INTERFACE _ DEF , <nl> + TokenTypes . METHOD _ DEF , <nl> + TokenTypes . CTOR _ DEF , <nl> + TokenTypes . INSTANCE _ INIT , <nl> + TokenTypes . STATIC _ INIT , <nl> + TokenTypes . PACKAGE _ DEF , <nl> + TokenTypes . IMPORT , <nl> + TokenTypes . VARIABLE _ DEF , <nl> + TokenTypes . CTOR _ CALL , <nl> + TokenTypes . SUPER _ CTOR _ CALL , <nl> + TokenTypes . LITERAL _ IF , <nl> + TokenTypes . LITERAL _ ELSE , <nl> + TokenTypes . LITERAL _ WHILE , <nl> + TokenTypes . LITERAL _ DO , <nl> + TokenTypes . LITERAL _ FOR , <nl> + TokenTypes . LITERAL _ SWITCH , <nl> + TokenTypes . LITERAL _ BREAK , <nl> + TokenTypes . LITERAL _ CONTINUE , <nl> + TokenTypes . LITERAL _ RETURN , <nl> + TokenTypes . LITERAL _ THROW , <nl> + TokenTypes . LITERAL _ SYNCHRONIZED , <nl> + TokenTypes . LITERAL _ CATCH , <nl> + TokenTypes . LITERAL _ FINALLY , <nl> + TokenTypes . EXPR , <nl> + TokenTypes . LABELED _ STAT , <nl> + TokenTypes . LITERAL _ CASE , <nl> + TokenTypes . LITERAL _ DEFAULT , <nl> + } ; <nl> + Assert . assertNotNull ( actual ) ; <nl> + Assert . assertArrayEquals ( expected , actual ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / metrics / JavaNCSSCheckTestInput . java b / src / test / resources / com / puppycrawl / tools / checkstyle / metrics / JavaNCSSCheckTestInput . java <nl> index e0fc96d . . db705be 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / metrics / JavaNCSSCheckTestInput . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / metrics / JavaNCSSCheckTestInput . java <nl> @ @ - 76 , 3 + 76 , 9 @ @ class TestTopLevelNestedClass { <nl> } <nl> } <nl> } <nl> + <nl> + class Input0 { <nl> + static { } <nl> + { } <nl> + public Input0 ( ) { } <nl> + }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 4afe625 . . 2766315 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 131 , 8 + 131 , 8 @ @ public class SuppressWarningsHolder 
 * paramnum } . 
 * @ param aliasList the list of comma - separated alias assignments 
 * / 
 - public void setAliasList ( String aliasList ) { 
 - for ( String sourceAlias : aliasList . split ( " , " ) ) { 
 + public void setAliasList ( String . . . aliasList ) { 
 + for ( String sourceAlias : aliasList ) { 
 final int index = sourceAlias . indexOf ( ' = ' ) ; 
 if ( index > 0 ) { 
 registerAlias ( sourceAlias . substring ( 0 , index ) , sourceAlias 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java 
 index bebce58 . . 6becb4c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java 
 @ @ - 70 , 8 + 70 , 6 @ @ public class AtclauseOrderCheck extends AbstractJavadocCheck { 
 * / 
 public static final String MSG _ KEY = " at . clause . order " ; 
 
 - / * * Comma literal . * / 
 - private static final String COMMA _ SEPARATOR = " , " ; 
 / * * 
 * Default order of atclauses . 
 * / 
 @ @ - 103 , 26 + 101 , 24 @ @ public class AtclauseOrderCheck extends AbstractJavadocCheck { 
 
 / * * 
 * Sets custom targets . 
 - * @ param target user ' s targets . 
 + * @ param targets user ' s targets . 
 * / 
 - public void setTarget ( String target ) { 
 + public void setTarget ( String . . . targets ) { 
 final List < Integer > customTarget = new ArrayList < > ( ) ; 
 - final String [ ] sTarget = target . split ( COMMA _ SEPARATOR ) ; 
 - for ( String aSTarget : sTarget ) { 
 - customTarget . add ( TokenUtils . getTokenId ( aSTarget . trim ( ) ) ) ; 
 + for ( String temp : targets ) { 
 + customTarget . add ( TokenUtils . getTokenId ( temp . trim ( ) ) ) ; 
 } 
 - this . target = customTarget ; 
 + target = customTarget ; 
 } 
 
 / * * 
 * Sets custom order of atclauses . 
 - * @ param order user ' s order . 
 + * @ param orders user ' s orders . 
 * / 
 - public void setTagOrder ( String order ) { 
 + public void setTagOrder ( String . . . orders ) { 
 final List < String > customOrder = new ArrayList < > ( ) ; 
 - final String [ ] sOrder = order . split ( COMMA _ SEPARATOR ) ; 
 - for ( String aSOrder : sOrder ) { 
 - customOrder . add ( aSOrder . trim ( ) ) ; 
 + for ( String order : orders ) { 
 + customOrder . add ( order . trim ( ) ) ; 
 } 
 tagOrder = customOrder ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java 
 index d6cd562 . . 81bd401 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java 
 @ @ - 22 , 7 + 22 , 6 @ @ package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 
 - import com . google . common . base . Splitter ; 
 import com . google . common . collect . Lists ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . DetailNode ; 
 @ @ - 80 , 9 + 79 , 8 @ @ public class SingleLineJavadocCheck extends AbstractJavadocCheck { 
 * 
 * @ param tags to be ignored by check . 
 * / 
 - public void setIgnoredTags ( String tags ) { 
 - ignoredTags = 
 - Lists . newArrayList ( Splitter . on ( " , " ) . omitEmptyStrings ( ) . trimResults ( ) . split ( tags ) ) ; 
 + public void setIgnoredTags ( String . . . tags ) { 
 + ignoredTags = Lists . newArrayList ( tags ) ; 
 } 
 
 / * *

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index b312c40 . . 8a9c1c5 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1128 , 7 + 1128 , 6 @ @ 
 < regex > < pattern > . * . checks . metrics . AbstractClassCouplingCheck < / pattern > < branchRate > 87 < / branchRate > < lineRate > 97 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . metrics . AbstractClassCouplingCheck \ $ . * < / pattern > < branchRate > 78 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . metrics . BooleanExpressionComplexityCheck < / pattern > < branchRate > 74 < / branchRate > < lineRate > 80 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . metrics . JavaNCSSCheck < / pattern > < branchRate > 87 < / branchRate > < lineRate > 97 < / lineRate > < / regex > 
 
 < regex > < pattern > . * . checks . regexp . CommentSuppressor < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . regexp . DetectorOptions < / pattern > < branchRate > 100 < / branchRate > < lineRate > 96 < / lineRate > < / regex > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheckTest . java 
 index b01518b . . 1544f57 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheckTest . java 
 @ @ - 26 , 10 + 26 , 12 @ @ import static org . junit . Assert . fail ; 
 
 import java . io . File ; 
 
 + import org . junit . Assert ; 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 / * * 
 * Testcase for the JavaNCSS - Check . 
 @ @ - 47 , 7 + 49 , 7 @ @ public class JavaNCSSCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " fileMaximum " , " 2 " ) ; 
 
 String [ ] expected = { 
 - " 2 : 1 : " + getCheckMessage ( MSG _ FILE , 35 , 2 ) , 
 + " 2 : 1 : " + getCheckMessage ( MSG _ FILE , 39 , 2 ) , 
 " 9 : 1 : " + getCheckMessage ( MSG _ CLASS , 22 , 1 ) , 
 " 14 : 5 : " + getCheckMessage ( MSG _ METHOD , 2 , 0 ) , 
 " 21 : 5 : " + getCheckMessage ( MSG _ METHOD , 4 , 0 ) , 
 @ @ - 56 , 6 + 58 , 10 @ @ public class JavaNCSSCheckTest extends BaseCheckTestSupport { 
 " 49 : 5 : " + getCheckMessage ( MSG _ CLASS , 2 , 1 ) , 
 " 56 : 1 : " + getCheckMessage ( MSG _ CLASS , 10 , 1 ) , 
 " 61 : 5 : " + getCheckMessage ( MSG _ METHOD , 8 , 0 ) , 
 + " 80 : 1 : " + getCheckMessage ( MSG _ CLASS , 4 , 1 ) , 
 + " 81 : 5 : " + getCheckMessage ( MSG _ METHOD , 1 , 0 ) , 
 + " 82 : 5 : " + getCheckMessage ( MSG _ METHOD , 1 , 0 ) , 
 + " 83 : 5 : " + getCheckMessage ( MSG _ METHOD , 1 , 0 ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " metrics " + File . separator 
 @ @ - 78 , 4 + 84 , 80 @ @ public class JavaNCSSCheckTest extends BaseCheckTestSupport { 
 fail ( ) ; 
 } 
 } 
 + 
 + @ Test 
 + public void testGetAcceptableTokens ( ) { 
 + JavaNCSSCheck javaNcssCheckObj = new JavaNCSSCheck ( ) ; 
 + int [ ] actual = javaNcssCheckObj . getAcceptableTokens ( ) ; 
 + int [ ] expected = new int [ ] { 
 + TokenTypes . CLASS _ DEF , 
 + TokenTypes . INTERFACE _ DEF , 
 + TokenTypes . METHOD _ DEF , 
 + TokenTypes . CTOR _ DEF , 
 + TokenTypes . INSTANCE _ INIT , 
 + TokenTypes . STATIC _ INIT , 
 + TokenTypes . PACKAGE _ DEF , 
 + TokenTypes . IMPORT , 
 + TokenTypes . VARIABLE _ DEF , 
 + TokenTypes . CTOR _ CALL , 
 + TokenTypes . SUPER _ CTOR _ CALL , 
 + TokenTypes . LITERAL _ IF , 
 + TokenTypes . LITERAL _ ELSE , 
 + TokenTypes . LITERAL _ WHILE , 
 + TokenTypes . LITERAL _ DO , 
 + TokenTypes . LITERAL _ FOR , 
 + TokenTypes . LITERAL _ SWITCH , 
 + TokenTypes . LITERAL _ BREAK , 
 + TokenTypes . LITERAL _ CONTINUE , 
 + TokenTypes . LITERAL _ RETURN , 
 + TokenTypes . LITERAL _ THROW , 
 + TokenTypes . LITERAL _ SYNCHRONIZED , 
 + TokenTypes . LITERAL _ CATCH , 
 + TokenTypes . LITERAL _ FINALLY , 
 + TokenTypes . EXPR , 
 + TokenTypes . LABELED _ STAT , 
 + TokenTypes . LITERAL _ CASE , 
 + TokenTypes . LITERAL _ DEFAULT , 
 + } ; 
 + Assert . assertNotNull ( actual ) ; 
 + Assert . assertArrayEquals ( expected , actual ) ; 
 + } 
 + 
 + @ Test 
 + public void testGetRequiredTokens ( ) { 
 + JavaNCSSCheck javaNcssCheckObj = new JavaNCSSCheck ( ) ; 
 + int [ ] actual = javaNcssCheckObj . getRequiredTokens ( ) ; 
 + int [ ] expected = new int [ ] { 
 + TokenTypes . CLASS _ DEF , 
 + TokenTypes . INTERFACE _ DEF , 
 + TokenTypes . METHOD _ DEF , 
 + TokenTypes . CTOR _ DEF , 
 + TokenTypes . INSTANCE _ INIT , 
 + TokenTypes . STATIC _ INIT , 
 + TokenTypes . PACKAGE _ DEF , 
 + TokenTypes . IMPORT , 
 + TokenTypes . VARIABLE _ DEF , 
 + TokenTypes . CTOR _ CALL , 
 + TokenTypes . SUPER _ CTOR _ CALL , 
 + TokenTypes . LITERAL _ IF , 
 + TokenTypes . LITERAL _ ELSE , 
 + TokenTypes . LITERAL _ WHILE , 
 + TokenTypes . LITERAL _ DO , 
 + TokenTypes . LITERAL _ FOR , 
 + TokenTypes . LITERAL _ SWITCH , 
 + TokenTypes . LITERAL _ BREAK , 
 + TokenTypes . LITERAL _ CONTINUE , 
 + TokenTypes . LITERAL _ RETURN , 
 + TokenTypes . LITERAL _ THROW , 
 + TokenTypes . LITERAL _ SYNCHRONIZED , 
 + TokenTypes . LITERAL _ CATCH , 
 + TokenTypes . LITERAL _ FINALLY , 
 + TokenTypes . EXPR , 
 + TokenTypes . LABELED _ STAT , 
 + TokenTypes . LITERAL _ CASE , 
 + TokenTypes . LITERAL _ DEFAULT , 
 + } ; 
 + Assert . assertNotNull ( actual ) ; 
 + Assert . assertArrayEquals ( expected , actual ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / metrics / JavaNCSSCheckTestInput . java b / src / test / resources / com / puppycrawl / tools / checkstyle / metrics / JavaNCSSCheckTestInput . java 
 index e0fc96d . . db705be 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / metrics / JavaNCSSCheckTestInput . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / metrics / JavaNCSSCheckTestInput . java 
 @ @ - 76 , 3 + 76 , 9 @ @ class TestTopLevelNestedClass { 
 } 
 } 
 } 
 + 
 + class Input0 { 
 + static { } 
 + { } 
 + public Input0 ( ) { } 
 + }
