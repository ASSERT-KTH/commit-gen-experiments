BLEU SCORE: 0.037477767366779206

TEST MSG: Issue # 6490 : Add MultipleVariableDeclarations check to Sun style config
GENERATED MSG: Implemented UniqueProperties check

TEST DIFF (one line): diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words <nl> index 1ee2ae1 . . 0cb45d0 100644 <nl> - - - a / . ci / jsoref - spellchecker / whitelist . words <nl> + + + b / . ci / jsoref - spellchecker / whitelist . words <nl> @ @ - 253 , 7 + 253 , 7 @ @ commerical <nl> Compat <nl> Compiletime <nl> Comspace <nl> - Concat <nl> + concat <nl> config <nl> configurationloader <nl> Connell ' s <nl> @ @ - 908 , 6 + 908 , 7 @ @ nts <nl> nullanalysis <nl> NULLCHECK <nl> nullness <nl> + numberperline <nl> numericliterals <nl> nutsandbolts <nl> nyu <nl> diff - - git a / src / it / java / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / MultipleVariableDeclarationsTest . java b / src / it / java / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / MultipleVariableDeclarationsTest . java <nl> new file mode 100644 <nl> index 0000000 . . a778587 <nl> - - - / dev / null <nl> + + + b / src / it / java / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / MultipleVariableDeclarationsTest . java <nl> @ @ - 0 , 0 + 1 , 72 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2019 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . sun . checkstyle . test . chapter6declarations . rule61numberperline ; <nl> + <nl> + import org . junit . Test ; <nl> + <nl> + import com . google . checkstyle . test . base . AbstractModuleTestSupport ; <nl> + import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> + import com . puppycrawl . tools . checkstyle . checks . coding . MultipleVariableDeclarationsCheck ; <nl> + <nl> + public class MultipleVariableDeclarationsTest extends AbstractModuleTestSupport { <nl> + <nl> + @ Override <nl> + protected String getPackageLocation ( ) { <nl> + return " com / sun / checkstyle / test / chapter6declarations / rule61numberperline " ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testMultipleVariableDeclarations ( ) throws Exception { <nl> + final String msgComma = getCheckMessage ( MultipleVariableDeclarationsCheck . class , <nl> + " multiple . variable . declarations . comma " ) ; <nl> + final String msg = getCheckMessage ( MultipleVariableDeclarationsCheck . class , <nl> + " multiple . variable . declarations " ) ; <nl> + <nl> + final String [ ] expected = { <nl> + " 5 : 5 : " + msgComma , <nl> + " 6 : 5 : " + msg , <nl> + " 9 : 9 : " + msgComma , <nl> + " 10 : 9 : " + msg , <nl> + " 14 : 5 : " + msg , <nl> + " 17 : 5 : " + msg , <nl> + " 31 : 9 : " + msgComma , <nl> + " 32 : 9 : " + msg , <nl> + " 35 : 13 : " + msgComma , <nl> + " 36 : 13 : " + msg , <nl> + " 40 : 9 : " + msg , <nl> + " 43 : 9 : " + msg , <nl> + " 57 : 13 : " + msgComma , <nl> + " 58 : 13 : " + msg , <nl> + " 61 : 17 : " + msgComma , <nl> + " 62 : 17 : " + msg , <nl> + " 66 : 13 : " + msg , <nl> + " 69 : 13 : " + msg , <nl> + " 86 : 5 : " + msgComma , <nl> + " 89 : 5 : " + msgComma , <nl> + } ; <nl> + <nl> + final Configuration checkConfig = getModuleConfig ( " MultipleVariableDeclarations " ) ; <nl> + final String filePath = getPath ( " InputMultipleVariableDeclarations . java " ) ; <nl> + <nl> + final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; <nl> + verify ( checkConfig , filePath , expected , warnList ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / it / resources / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / InputMultipleVariableDeclarations . java b / src / it / resources / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / InputMultipleVariableDeclarations . java <nl> new file mode 100644 <nl> index 0000000 . . 533c6e5 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / InputMultipleVariableDeclarations . java <nl> @ @ - 0 , 0 + 1 , 90 @ @ <nl> + package com . sun . checkstyle . test . chapter6declarations . rule61numberperline ; <nl> + <nl> + public class InputMultipleVariableDeclarations <nl> + { <nl> + int i , j ; / / warn <nl> + int i1 ; int j1 ; / / warn <nl> + <nl> + void method1 ( ) { <nl> + String str , str1 ; / / warn <nl> + java . lang . Object obj ; Object obj1 ; / / warn <nl> + } <nl> + / / second definition is wrapped <nl> + / / line of VARIABLE _ DEF is not the same as first line of the definition <nl> + java . lang . String string ; java . lang . String / / warn <nl> + strings [ ] ; <nl> + / / both definitions is wrapped <nl> + java . lang . / / warn <nl> + String string1 ; java . lang . String <nl> + strings1 [ ] ; <nl> + <nl> + void method2 ( ) { <nl> + for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { / / ok <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 4 ; i + + ) { <nl> + <nl> + } <nl> + } <nl> + <nl> + class Inner { <nl> + int i , j ; / / warn <nl> + int i1 ; int j1 ; / / warn <nl> + <nl> + void method1 ( ) { <nl> + String str , str1 ; / / warn <nl> + java . lang . Object obj ; Object obj1 ; / / warn <nl> + } <nl> + / / second definition is wrapped <nl> + / / line of VARIABLE _ DEF is not the same as first line of the definition <nl> + java . lang . String string ; java . lang . String / / warn <nl> + strings [ ] ; <nl> + / / both definitions is wrapped <nl> + java . lang . / / warn <nl> + String string1 ; java . lang . String <nl> + strings1 [ ] ; <nl> + <nl> + void method2 ( ) { <nl> + for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { / / ok <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 4 ; i + + ) { <nl> + <nl> + } <nl> + } <nl> + Inner anon = new Inner ( ) <nl> + { <nl> + int i , j ; / / warn <nl> + int i1 ; int j1 ; / / warn <nl> + <nl> + void method1 ( ) { <nl> + String str , str1 ; / / warn <nl> + java . lang . Object obj ; Object obj1 ; / / warn <nl> + } <nl> + / / second definition is wrapped <nl> + / / line of VARIABLE _ DEF is not the same as first line of the definition <nl> + java . lang . String string ; java . lang . String / / warn <nl> + strings [ ] ; <nl> + / / both definitions is wrapped <nl> + java . lang . / / warn <nl> + String string1 ; java . lang . String <nl> + strings1 [ ] ; <nl> + <nl> + void method2 ( ) { <nl> + for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { / / ok <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 4 ; i + + ) { <nl> + <nl> + } <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> + <nl> + class Suppress { <nl> + @ SuppressWarnings ( " unused " ) / / warn <nl> + long q1 , q2 , q3 ; <nl> + <nl> + @ SuppressWarnings ( " unused " ) long q4 , q5 , q6 ; / / warn <nl> + } <nl> diff - - git a / src / main / resources / sun _ checks . xml b / src / main / resources / sun _ checks . xml <nl> index 35826d1 . . fa2a2da 100644 <nl> - - - a / src / main / resources / sun _ checks . xml <nl> + + + b / src / main / resources / sun _ checks . xml <nl> @ @ - 154 , 6 + 154 , 7 @ @ <nl> < module name = " InnerAssignment " / > <nl> < module name = " MagicNumber " / > <nl> < module name = " MissingSwitchDefault " / > <nl> + < module name = " MultipleVariableDeclarations " / > <nl> < module name = " SimplifyBooleanExpression " / > <nl> < module name = " SimplifyBooleanReturn " / > <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java <nl> index 2fd3cb5 . . c9d67c3 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java <nl> @ @ - 147 , 6 + 147 , 72 @ @ public class XdocsPagesTest { <nl> <nl> private static final Set < String > SUN _ MODULES = Collections . unmodifiableSet ( <nl> new HashSet < > ( CheckUtil . getConfigSunStyleModules ( ) ) ) ; <nl> + / / ignore the not yet properly covered modules while testing newly added ones <nl> + / / add proper sections to the coverage report and integration tests <nl> + / / and then remove this list eventually <nl> + private static final List < String > IGNORED _ SUN _ MODULES = Arrays . asList ( <nl> + " ArrayTypeStyle " , <nl> + " AvoidNestedBlocks " , <nl> + " AvoidStarImport " , <nl> + " ConstantName " , <nl> + " DesignForExtension " , <nl> + " EmptyBlock " , <nl> + " EmptyForIteratorPad " , <nl> + " EmptyStatement " , <nl> + " EqualsHashCode " , <nl> + " FileLength " , <nl> + " FileTabCharacter " , <nl> + " FinalClass " , <nl> + " FinalParameters " , <nl> + " GenericWhitespace " , <nl> + " HiddenField " , <nl> + " HideUtilityClassConstructor " , <nl> + " IllegalImport " , <nl> + " IllegalInstantiation " , <nl> + " InnerAssignment " , <nl> + " InterfaceIsType " , <nl> + " JavadocMethod " , <nl> + " JavadocPackage " , <nl> + " JavadocStyle " , <nl> + " JavadocType " , <nl> + " JavadocVariable " , <nl> + " LeftCurly " , <nl> + " LineLength " , <nl> + " LocalFinalVariableName " , <nl> + " LocalVariableName " , <nl> + " MagicNumber " , <nl> + " MemberName " , <nl> + " MethodLength " , <nl> + " MethodName " , <nl> + " MethodParamPad " , <nl> + " MissingSwitchDefault " , <nl> + " ModifierOrder " , <nl> + " NeedBraces " , <nl> + " NewlineAtEndOfFile " , <nl> + " NoWhitespaceAfter " , <nl> + " NoWhitespaceBefore " , <nl> + " OperatorWrap " , <nl> + " PackageName " , <nl> + " ParameterName " , <nl> + " ParameterNumber " , <nl> + " ParenPad " , <nl> + " RedundantImport " , <nl> + " RedundantModifier " , <nl> + " RegexpSingleline " , <nl> + " RightCurly " , <nl> + " SimplifyBooleanExpression " , <nl> + " SimplifyBooleanReturn " , <nl> + " StaticVariableName " , <nl> + " TodoComment " , <nl> + " Translation " , <nl> + " TypecastParenPad " , <nl> + " TypeName " , <nl> + " UnusedImports " , <nl> + " UpperEll " , <nl> + " VisibilityModifier " , <nl> + " WhitespaceAfter " , <nl> + " WhitespaceAround " <nl> + ) ; <nl> private static final Set < String > GOOGLE _ MODULES = Collections . unmodifiableSet ( <nl> new HashSet < > ( CheckUtil . getConfigGoogleStyleModules ( ) ) ) ; <nl> <nl> @ @ - 1338 , 16 + 1404 , 25 @ @ public class XdocsPagesTest { <nl> public void testAllStyleRules ( ) throws Exception { <nl> for ( Path path : XdocUtil . getXdocsStyleFilePaths ( XdocUtil . getXdocsFilePaths ( ) ) ) { <nl> final String fileName = path . getFileName ( ) . toString ( ) ; <nl> + final String styleName = fileName . substring ( 0 , fileName . lastIndexOf ( ' _ ' ) ) ; <nl> final String input = new String ( Files . readAllBytes ( path ) , UTF _ 8 ) ; <nl> final Document document = XmlUtil . getRawXml ( fileName , input , input ) ; <nl> final NodeList sources = document . getElementsByTagName ( " tr " ) ; <nl> - Set < String > styleChecks = null ; <nl> <nl> - if ( path . toFile ( ) . getName ( ) . contains ( " google " ) ) { <nl> - styleChecks = new HashSet < > ( GOOGLE _ MODULES ) ; <nl> - } <nl> - else if ( path . toFile ( ) . getName ( ) . contains ( " sun " ) ) { <nl> - styleChecks = new HashSet < > ( ) ; <nl> + final Set < String > styleChecks ; <nl> + switch ( styleName ) { <nl> + case " google " : <nl> + styleChecks = new HashSet < > ( GOOGLE _ MODULES ) ; <nl> + break ; <nl> + <nl> + case " sun " : <nl> + styleChecks = new HashSet < > ( SUN _ MODULES ) ; <nl> + styleChecks . removeAll ( IGNORED _ SUN _ MODULES ) ; <nl> + break ; <nl> + <nl> + default : <nl> + Assert . fail ( " Missing modules list for style file ' " + fileName + " ' " ) ; <nl> + styleChecks = null ; <nl> } <nl> <nl> String lastRuleName = null ; <nl> @ @ - 1372 , 7 + 1447 , 7 @ @ public class XdocsPagesTest { <nl> } <nl> <nl> validateStyleModules ( XmlUtil . findChildElementsByTag ( columns . get ( 2 ) , " a " ) , <nl> - XmlUtil . findChildElementsByTag ( columns . get ( 3 ) , " a " ) , styleChecks , fileName , <nl> + XmlUtil . findChildElementsByTag ( columns . get ( 3 ) , " a " ) , styleChecks , styleName , <nl> ruleName ) ; <nl> <nl> lastRuleName = ruleName ; <nl> @ @ - 1486 , 7 + 1561 , 7 @ @ public class XdocsPagesTest { <nl> } <nl> <nl> private static void validateStyleModules ( Set < Node > checks , Set < Node > configs , <nl> - Set < String > styleChecks , String fileName , String ruleName ) { <nl> + Set < String > styleChecks , String styleName , String ruleName ) { <nl> final Iterator < Node > itrChecks = checks . iterator ( ) ; <nl> final Iterator < Node > itrConfigs = configs . iterator ( ) ; <nl> <nl> @ @ - 1499 , 7 + 1574 , 7 @ @ public class XdocsPagesTest { <nl> continue ; <nl> } <nl> <nl> - Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName <nl> + Assert . assertTrue ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " + moduleName <nl> + " ' shouldn ' t end with ' Check ' " , ! moduleName . endsWith ( " Check " ) ) ; <nl> <nl> styleChecks . remove ( moduleName ) ; <nl> @ @ - 1511 , 43 + 1586 , 45 @ @ public class XdocsPagesTest { <nl> config = itrConfigs . next ( ) ; <nl> } <nl> catch ( NoSuchElementException ignore ) { <nl> - Assert . fail ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName <nl> - + " ' is missing the config link : " + configName ) ; <nl> + Assert . fail ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " <nl> + + moduleName + " ' is missing the config link : " + configName ) ; <nl> } <nl> <nl> - Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName <nl> - + " ' has mismatched config / test links " , configName , config . getTextContent ( ) <nl> - . trim ( ) ) ; <nl> + Assert . assertEquals ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " <nl> + + moduleName + " ' has mismatched config / test links " , configName , <nl> + config . getTextContent ( ) . trim ( ) ) ; <nl> <nl> final String configUrl = config . getAttributes ( ) . getNamedItem ( " href " ) <nl> . getTextContent ( ) ; <nl> <nl> if ( " config " . equals ( configName ) ) { <nl> final String expectedUrl = " https : / / github . com / search ? q = " <nl> - + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3Agoogle _ checks . xml + " <nl> - + " repo % 3Acheckstyle % 2Fcheckstyle + " + moduleName ; <nl> + + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3A " + styleName <nl> + + " _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + " + moduleName ; <nl> <nl> - Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName <nl> - + " ' should have matching " + configName + " url " , expectedUrl , <nl> - configUrl ) ; <nl> + Assert . assertEquals ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " <nl> + + moduleName + " ' should have matching " + configName + " url " , <nl> + expectedUrl , configUrl ) ; <nl> } <nl> else if ( " test " . equals ( configName ) ) { <nl> - Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName <nl> - + " ' should have matching " + configName + " url " , <nl> + Assert . assertTrue ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " <nl> + + moduleName + " ' should have matching " + configName + " url " , <nl> configUrl . startsWith ( " https : / / github . com / checkstyle / checkstyle / " <nl> - + " blob / master / src / it / java / com / google / checkstyle / test / " ) ) ; <nl> - Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName <nl> - + " ' should have matching " + configName + " url " , <nl> + + " blob / master / src / it / java / com / " + styleName <nl> + + " / checkstyle / test / " ) ) ; <nl> + Assert . assertTrue ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " <nl> + + moduleName + " ' should have matching " + configName + " url " , <nl> configUrl . endsWith ( " / " + moduleName + " Test . java " ) ) ; <nl> <nl> - Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName <nl> - + " ' should have a test that exists " , new File ( configUrl . substring ( 53 ) <nl> - . replace ( ' / ' , File . separatorChar ) ) . exists ( ) ) ; <nl> + Assert . assertTrue ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " <nl> + + moduleName + " ' should have a test that exists " , <nl> + new File ( configUrl . substring ( 53 ) <nl> + . replace ( ' / ' , File . separatorChar ) ) . exists ( ) ) ; <nl> } <nl> } <nl> } <nl> <nl> - Assert . assertFalse ( fileName + " rule ' " + ruleName + " ' has too many configs " , <nl> + Assert . assertFalse ( styleName + " _ style . xml rule ' " + ruleName + " ' has too many configs " , <nl> itrConfigs . hasNext ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index 5ac485f . . 7cea00c 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 3004 , 6 + 3004 , 10 @ @ for ( String line : lines ) { <nl> Google Style < / a > <nl> < / li > <nl> < li > <nl> + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources + filename % 3Asun _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + MultipleVariableDeclarations " > <nl> + Sun Style < / a > <nl> + < / li > <nl> + < li > <nl> < a href = " https : / / github . com / search ? q = path % 3Aconfig + filename % 3Acheckstyle _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + MultipleVariableDeclarations " > <nl> Checkstyle Style < / a > <nl> < / li > <nl> diff - - git a / src / xdocs / sun _ style . xml b / src / xdocs / sun _ style . xml <nl> index 055ac69 . . c013058 100644 <nl> - - - a / src / xdocs / sun _ style . xml <nl> + + + b / src / xdocs / sun _ style . xml <nl> @ @ - 414 , 8 + 414 , 21 @ @ <nl> 6 . 1 Number Per Line <nl> < / a > <nl> < / td > <nl> - < td > ? ? ? < / td > <nl> - < td / > <nl> + < td > <nl> + < img src = " images / ok _ green . png " alt = " " / > <nl> + < a href = " config _ coding . html # MultipleVariableDeclarations " > <nl> + MultipleVariableDeclarations <nl> + < / a > <nl> + < / td > <nl> + < td > <nl> + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources + filename % 3Asun _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + MultipleVariableDeclarations " > <nl> + config <nl> + < / a > <nl> + < br / > <nl> + < a href = " https : / / github . com / checkstyle / checkstyle / blob / master / src / it / java / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / MultipleVariableDeclarationsTest . java " > <nl> + test <nl> + < / a > <nl> + < / td > <nl> < / tr > <nl> < tr > <nl> < td >
NEAREST DIFF (one line): diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index ae832bc . . 1dead6f 100755 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 49 , 12 + 49 , 6 @ @ <nl> Thanks to Travis Schneeberger for patch # 1921815 ( bug # 1649038 ) . <nl> < / li > <nl> < / ul > <nl> - < p > Notes : < / p > <nl> - < ul > <nl> - < li > <nl> - . . . <nl> - < / li > <nl> - < / ul > <nl> < / section > <nl> <nl> < section name = " Release 5 . 4 " >

TEST DIFF:
diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words 
 index 1ee2ae1 . . 0cb45d0 100644 
 - - - a / . ci / jsoref - spellchecker / whitelist . words 
 + + + b / . ci / jsoref - spellchecker / whitelist . words 
 @ @ - 253 , 7 + 253 , 7 @ @ commerical 
 Compat 
 Compiletime 
 Comspace 
 - Concat 
 + concat 
 config 
 configurationloader 
 Connell ' s 
 @ @ - 908 , 6 + 908 , 7 @ @ nts 
 nullanalysis 
 NULLCHECK 
 nullness 
 + numberperline 
 numericliterals 
 nutsandbolts 
 nyu 
 diff - - git a / src / it / java / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / MultipleVariableDeclarationsTest . java b / src / it / java / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / MultipleVariableDeclarationsTest . java 
 new file mode 100644 
 index 0000000 . . a778587 
 - - - / dev / null 
 + + + b / src / it / java / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / MultipleVariableDeclarationsTest . java 
 @ @ - 0 , 0 + 1 , 72 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2019 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . sun . checkstyle . test . chapter6declarations . rule61numberperline ; 
 + 
 + import org . junit . Test ; 
 + 
 + import com . google . checkstyle . test . base . AbstractModuleTestSupport ; 
 + import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 + import com . puppycrawl . tools . checkstyle . checks . coding . MultipleVariableDeclarationsCheck ; 
 + 
 + public class MultipleVariableDeclarationsTest extends AbstractModuleTestSupport { 
 + 
 + @ Override 
 + protected String getPackageLocation ( ) { 
 + return " com / sun / checkstyle / test / chapter6declarations / rule61numberperline " ; 
 + } 
 + 
 + @ Test 
 + public void testMultipleVariableDeclarations ( ) throws Exception { 
 + final String msgComma = getCheckMessage ( MultipleVariableDeclarationsCheck . class , 
 + " multiple . variable . declarations . comma " ) ; 
 + final String msg = getCheckMessage ( MultipleVariableDeclarationsCheck . class , 
 + " multiple . variable . declarations " ) ; 
 + 
 + final String [ ] expected = { 
 + " 5 : 5 : " + msgComma , 
 + " 6 : 5 : " + msg , 
 + " 9 : 9 : " + msgComma , 
 + " 10 : 9 : " + msg , 
 + " 14 : 5 : " + msg , 
 + " 17 : 5 : " + msg , 
 + " 31 : 9 : " + msgComma , 
 + " 32 : 9 : " + msg , 
 + " 35 : 13 : " + msgComma , 
 + " 36 : 13 : " + msg , 
 + " 40 : 9 : " + msg , 
 + " 43 : 9 : " + msg , 
 + " 57 : 13 : " + msgComma , 
 + " 58 : 13 : " + msg , 
 + " 61 : 17 : " + msgComma , 
 + " 62 : 17 : " + msg , 
 + " 66 : 13 : " + msg , 
 + " 69 : 13 : " + msg , 
 + " 86 : 5 : " + msgComma , 
 + " 89 : 5 : " + msgComma , 
 + } ; 
 + 
 + final Configuration checkConfig = getModuleConfig ( " MultipleVariableDeclarations " ) ; 
 + final String filePath = getPath ( " InputMultipleVariableDeclarations . java " ) ; 
 + 
 + final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; 
 + verify ( checkConfig , filePath , expected , warnList ) ; 
 + } 
 + 
 + } 
 diff - - git a / src / it / resources / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / InputMultipleVariableDeclarations . java b / src / it / resources / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / InputMultipleVariableDeclarations . java 
 new file mode 100644 
 index 0000000 . . 533c6e5 
 - - - / dev / null 
 + + + b / src / it / resources / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / InputMultipleVariableDeclarations . java 
 @ @ - 0 , 0 + 1 , 90 @ @ 
 + package com . sun . checkstyle . test . chapter6declarations . rule61numberperline ; 
 + 
 + public class InputMultipleVariableDeclarations 
 + { 
 + int i , j ; / / warn 
 + int i1 ; int j1 ; / / warn 
 + 
 + void method1 ( ) { 
 + String str , str1 ; / / warn 
 + java . lang . Object obj ; Object obj1 ; / / warn 
 + } 
 + / / second definition is wrapped 
 + / / line of VARIABLE _ DEF is not the same as first line of the definition 
 + java . lang . String string ; java . lang . String / / warn 
 + strings [ ] ; 
 + / / both definitions is wrapped 
 + java . lang . / / warn 
 + String string1 ; java . lang . String 
 + strings1 [ ] ; 
 + 
 + void method2 ( ) { 
 + for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { / / ok 
 + } 
 + 
 + for ( int i = 0 ; i < 4 ; i + + ) { 
 + 
 + } 
 + } 
 + 
 + class Inner { 
 + int i , j ; / / warn 
 + int i1 ; int j1 ; / / warn 
 + 
 + void method1 ( ) { 
 + String str , str1 ; / / warn 
 + java . lang . Object obj ; Object obj1 ; / / warn 
 + } 
 + / / second definition is wrapped 
 + / / line of VARIABLE _ DEF is not the same as first line of the definition 
 + java . lang . String string ; java . lang . String / / warn 
 + strings [ ] ; 
 + / / both definitions is wrapped 
 + java . lang . / / warn 
 + String string1 ; java . lang . String 
 + strings1 [ ] ; 
 + 
 + void method2 ( ) { 
 + for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { / / ok 
 + } 
 + 
 + for ( int i = 0 ; i < 4 ; i + + ) { 
 + 
 + } 
 + } 
 + Inner anon = new Inner ( ) 
 + { 
 + int i , j ; / / warn 
 + int i1 ; int j1 ; / / warn 
 + 
 + void method1 ( ) { 
 + String str , str1 ; / / warn 
 + java . lang . Object obj ; Object obj1 ; / / warn 
 + } 
 + / / second definition is wrapped 
 + / / line of VARIABLE _ DEF is not the same as first line of the definition 
 + java . lang . String string ; java . lang . String / / warn 
 + strings [ ] ; 
 + / / both definitions is wrapped 
 + java . lang . / / warn 
 + String string1 ; java . lang . String 
 + strings1 [ ] ; 
 + 
 + void method2 ( ) { 
 + for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { / / ok 
 + } 
 + 
 + for ( int i = 0 ; i < 4 ; i + + ) { 
 + 
 + } 
 + } 
 + } ; 
 + } 
 + } 
 + 
 + class Suppress { 
 + @ SuppressWarnings ( " unused " ) / / warn 
 + long q1 , q2 , q3 ; 
 + 
 + @ SuppressWarnings ( " unused " ) long q4 , q5 , q6 ; / / warn 
 + } 
 diff - - git a / src / main / resources / sun _ checks . xml b / src / main / resources / sun _ checks . xml 
 index 35826d1 . . fa2a2da 100644 
 - - - a / src / main / resources / sun _ checks . xml 
 + + + b / src / main / resources / sun _ checks . xml 
 @ @ - 154 , 6 + 154 , 7 @ @ 
 < module name = " InnerAssignment " / > 
 < module name = " MagicNumber " / > 
 < module name = " MissingSwitchDefault " / > 
 + < module name = " MultipleVariableDeclarations " / > 
 < module name = " SimplifyBooleanExpression " / > 
 < module name = " SimplifyBooleanReturn " / > 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java 
 index 2fd3cb5 . . c9d67c3 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsPagesTest . java 
 @ @ - 147 , 6 + 147 , 72 @ @ public class XdocsPagesTest { 
 
 private static final Set < String > SUN _ MODULES = Collections . unmodifiableSet ( 
 new HashSet < > ( CheckUtil . getConfigSunStyleModules ( ) ) ) ; 
 + / / ignore the not yet properly covered modules while testing newly added ones 
 + / / add proper sections to the coverage report and integration tests 
 + / / and then remove this list eventually 
 + private static final List < String > IGNORED _ SUN _ MODULES = Arrays . asList ( 
 + " ArrayTypeStyle " , 
 + " AvoidNestedBlocks " , 
 + " AvoidStarImport " , 
 + " ConstantName " , 
 + " DesignForExtension " , 
 + " EmptyBlock " , 
 + " EmptyForIteratorPad " , 
 + " EmptyStatement " , 
 + " EqualsHashCode " , 
 + " FileLength " , 
 + " FileTabCharacter " , 
 + " FinalClass " , 
 + " FinalParameters " , 
 + " GenericWhitespace " , 
 + " HiddenField " , 
 + " HideUtilityClassConstructor " , 
 + " IllegalImport " , 
 + " IllegalInstantiation " , 
 + " InnerAssignment " , 
 + " InterfaceIsType " , 
 + " JavadocMethod " , 
 + " JavadocPackage " , 
 + " JavadocStyle " , 
 + " JavadocType " , 
 + " JavadocVariable " , 
 + " LeftCurly " , 
 + " LineLength " , 
 + " LocalFinalVariableName " , 
 + " LocalVariableName " , 
 + " MagicNumber " , 
 + " MemberName " , 
 + " MethodLength " , 
 + " MethodName " , 
 + " MethodParamPad " , 
 + " MissingSwitchDefault " , 
 + " ModifierOrder " , 
 + " NeedBraces " , 
 + " NewlineAtEndOfFile " , 
 + " NoWhitespaceAfter " , 
 + " NoWhitespaceBefore " , 
 + " OperatorWrap " , 
 + " PackageName " , 
 + " ParameterName " , 
 + " ParameterNumber " , 
 + " ParenPad " , 
 + " RedundantImport " , 
 + " RedundantModifier " , 
 + " RegexpSingleline " , 
 + " RightCurly " , 
 + " SimplifyBooleanExpression " , 
 + " SimplifyBooleanReturn " , 
 + " StaticVariableName " , 
 + " TodoComment " , 
 + " Translation " , 
 + " TypecastParenPad " , 
 + " TypeName " , 
 + " UnusedImports " , 
 + " UpperEll " , 
 + " VisibilityModifier " , 
 + " WhitespaceAfter " , 
 + " WhitespaceAround " 
 + ) ; 
 private static final Set < String > GOOGLE _ MODULES = Collections . unmodifiableSet ( 
 new HashSet < > ( CheckUtil . getConfigGoogleStyleModules ( ) ) ) ; 
 
 @ @ - 1338 , 16 + 1404 , 25 @ @ public class XdocsPagesTest { 
 public void testAllStyleRules ( ) throws Exception { 
 for ( Path path : XdocUtil . getXdocsStyleFilePaths ( XdocUtil . getXdocsFilePaths ( ) ) ) { 
 final String fileName = path . getFileName ( ) . toString ( ) ; 
 + final String styleName = fileName . substring ( 0 , fileName . lastIndexOf ( ' _ ' ) ) ; 
 final String input = new String ( Files . readAllBytes ( path ) , UTF _ 8 ) ; 
 final Document document = XmlUtil . getRawXml ( fileName , input , input ) ; 
 final NodeList sources = document . getElementsByTagName ( " tr " ) ; 
 - Set < String > styleChecks = null ; 
 
 - if ( path . toFile ( ) . getName ( ) . contains ( " google " ) ) { 
 - styleChecks = new HashSet < > ( GOOGLE _ MODULES ) ; 
 - } 
 - else if ( path . toFile ( ) . getName ( ) . contains ( " sun " ) ) { 
 - styleChecks = new HashSet < > ( ) ; 
 + final Set < String > styleChecks ; 
 + switch ( styleName ) { 
 + case " google " : 
 + styleChecks = new HashSet < > ( GOOGLE _ MODULES ) ; 
 + break ; 
 + 
 + case " sun " : 
 + styleChecks = new HashSet < > ( SUN _ MODULES ) ; 
 + styleChecks . removeAll ( IGNORED _ SUN _ MODULES ) ; 
 + break ; 
 + 
 + default : 
 + Assert . fail ( " Missing modules list for style file ' " + fileName + " ' " ) ; 
 + styleChecks = null ; 
 } 
 
 String lastRuleName = null ; 
 @ @ - 1372 , 7 + 1447 , 7 @ @ public class XdocsPagesTest { 
 } 
 
 validateStyleModules ( XmlUtil . findChildElementsByTag ( columns . get ( 2 ) , " a " ) , 
 - XmlUtil . findChildElementsByTag ( columns . get ( 3 ) , " a " ) , styleChecks , fileName , 
 + XmlUtil . findChildElementsByTag ( columns . get ( 3 ) , " a " ) , styleChecks , styleName , 
 ruleName ) ; 
 
 lastRuleName = ruleName ; 
 @ @ - 1486 , 7 + 1561 , 7 @ @ public class XdocsPagesTest { 
 } 
 
 private static void validateStyleModules ( Set < Node > checks , Set < Node > configs , 
 - Set < String > styleChecks , String fileName , String ruleName ) { 
 + Set < String > styleChecks , String styleName , String ruleName ) { 
 final Iterator < Node > itrChecks = checks . iterator ( ) ; 
 final Iterator < Node > itrConfigs = configs . iterator ( ) ; 
 
 @ @ - 1499 , 7 + 1574 , 7 @ @ public class XdocsPagesTest { 
 continue ; 
 } 
 
 - Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName 
 + Assert . assertTrue ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " + moduleName 
 + " ' shouldn ' t end with ' Check ' " , ! moduleName . endsWith ( " Check " ) ) ; 
 
 styleChecks . remove ( moduleName ) ; 
 @ @ - 1511 , 43 + 1586 , 45 @ @ public class XdocsPagesTest { 
 config = itrConfigs . next ( ) ; 
 } 
 catch ( NoSuchElementException ignore ) { 
 - Assert . fail ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName 
 - + " ' is missing the config link : " + configName ) ; 
 + Assert . fail ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " 
 + + moduleName + " ' is missing the config link : " + configName ) ; 
 } 
 
 - Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName 
 - + " ' has mismatched config / test links " , configName , config . getTextContent ( ) 
 - . trim ( ) ) ; 
 + Assert . assertEquals ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " 
 + + moduleName + " ' has mismatched config / test links " , configName , 
 + config . getTextContent ( ) . trim ( ) ) ; 
 
 final String configUrl = config . getAttributes ( ) . getNamedItem ( " href " ) 
 . getTextContent ( ) ; 
 
 if ( " config " . equals ( configName ) ) { 
 final String expectedUrl = " https : / / github . com / search ? q = " 
 - + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3Agoogle _ checks . xml + " 
 - + " repo % 3Acheckstyle % 2Fcheckstyle + " + moduleName ; 
 + + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3A " + styleName 
 + + " _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + " + moduleName ; 
 
 - Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName 
 - + " ' should have matching " + configName + " url " , expectedUrl , 
 - configUrl ) ; 
 + Assert . assertEquals ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " 
 + + moduleName + " ' should have matching " + configName + " url " , 
 + expectedUrl , configUrl ) ; 
 } 
 else if ( " test " . equals ( configName ) ) { 
 - Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName 
 - + " ' should have matching " + configName + " url " , 
 + Assert . assertTrue ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " 
 + + moduleName + " ' should have matching " + configName + " url " , 
 configUrl . startsWith ( " https : / / github . com / checkstyle / checkstyle / " 
 - + " blob / master / src / it / java / com / google / checkstyle / test / " ) ) ; 
 - Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName 
 - + " ' should have matching " + configName + " url " , 
 + + " blob / master / src / it / java / com / " + styleName 
 + + " / checkstyle / test / " ) ) ; 
 + Assert . assertTrue ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " 
 + + moduleName + " ' should have matching " + configName + " url " , 
 configUrl . endsWith ( " / " + moduleName + " Test . java " ) ) ; 
 
 - Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' module ' " + moduleName 
 - + " ' should have a test that exists " , new File ( configUrl . substring ( 53 ) 
 - . replace ( ' / ' , File . separatorChar ) ) . exists ( ) ) ; 
 + Assert . assertTrue ( styleName + " _ style . xml rule ' " + ruleName + " ' module ' " 
 + + moduleName + " ' should have a test that exists " , 
 + new File ( configUrl . substring ( 53 ) 
 + . replace ( ' / ' , File . separatorChar ) ) . exists ( ) ) ; 
 } 
 } 
 } 
 
 - Assert . assertFalse ( fileName + " rule ' " + ruleName + " ' has too many configs " , 
 + Assert . assertFalse ( styleName + " _ style . xml rule ' " + ruleName + " ' has too many configs " , 
 itrConfigs . hasNext ( ) ) ; 
 } 
 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index 5ac485f . . 7cea00c 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 3004 , 6 + 3004 , 10 @ @ for ( String line : lines ) { 
 Google Style < / a > 
 < / li > 
 < li > 
 + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources + filename % 3Asun _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + MultipleVariableDeclarations " > 
 + Sun Style < / a > 
 + < / li > 
 + < li > 
 < a href = " https : / / github . com / search ? q = path % 3Aconfig + filename % 3Acheckstyle _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + MultipleVariableDeclarations " > 
 Checkstyle Style < / a > 
 < / li > 
 diff - - git a / src / xdocs / sun _ style . xml b / src / xdocs / sun _ style . xml 
 index 055ac69 . . c013058 100644 
 - - - a / src / xdocs / sun _ style . xml 
 + + + b / src / xdocs / sun _ style . xml 
 @ @ - 414 , 8 + 414 , 21 @ @ 
 6 . 1 Number Per Line 
 < / a > 
 < / td > 
 - < td > ? ? ? < / td > 
 - < td / > 
 + < td > 
 + < img src = " images / ok _ green . png " alt = " " / > 
 + < a href = " config _ coding . html # MultipleVariableDeclarations " > 
 + MultipleVariableDeclarations 
 + < / a > 
 + < / td > 
 + < td > 
 + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources + filename % 3Asun _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + MultipleVariableDeclarations " > 
 + config 
 + < / a > 
 + < br / > 
 + < a href = " https : / / github . com / checkstyle / checkstyle / blob / master / src / it / java / com / sun / checkstyle / test / chapter6declarations / rule61numberperline / MultipleVariableDeclarationsTest . java " > 
 + test 
 + < / a > 
 + < / td > 
 < / tr > 
 < tr > 
 < td >

NEAREST DIFF:
diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index ae832bc . . 1dead6f 100755 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 49 , 12 + 49 , 6 @ @ 
 Thanks to Travis Schneeberger for patch # 1921815 ( bug # 1649038 ) . 
 < / li > 
 < / ul > 
 - < p > Notes : < / p > 
 - < ul > 
 - < li > 
 - . . . 
 - < / li > 
 - < / ul > 
 < / section > 
 
 < section name = " Release 5 . 4 " >
