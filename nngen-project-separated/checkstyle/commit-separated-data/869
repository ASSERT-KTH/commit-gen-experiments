BLEU SCORE: 0.007910967275770701

TEST MSG: Issue # 3902 : Formatting issue in documentation
GENERATED MSG: verify that xdocs can be filtered prior to generation . ( this breaks the ANT build again )

TEST DIFF (one line): diff - - git a / src / site / resources / css / site . css b / src / site / resources / css / site . css <nl> index 78e262e . . 4d3f5d0 100644 <nl> - - - a / src / site / resources / css / site . css <nl> + + + b / src / site / resources / css / site . css <nl> @ @ - 49 , 3 + 49 , 16 @ @ h2 : hover . anchor { <nl> . anchor { <nl> display : none ; <nl> } <nl> + <nl> + . source { <nl> + width : 90 % ; <nl> + overflow - x : auto ; <nl> + white - space : nowrap ; <nl> + } <nl> + <nl> + . wrap - content { <nl> + white - space : pre - wrap ! important ; <nl> + white - space : - moz - pre - wrap ! important ; <nl> + white - space : - o - pre - wrap ! important ; <nl> + word - wrap : break - word ! important ; <nl> + } <nl> diff - - git a / src / xdocs / beginning _ development . xml b / src / xdocs / beginning _ development . xml <nl> index 1c2cd3c . . 9e8cf08 100644 <nl> - - - a / src / xdocs / beginning _ development . xml <nl> + + + b / src / xdocs / beginning _ development . xml <nl> @ @ - 30 , 11 + 30 , 11 @ @ <nl> < a href = " https : / / help . github . com / articles / fork - a - repo / " > here < / a > < br / > <nl> 3 . Checkout the current source code from : https : / / github . com / you _ user _ name / checkstyle / < br / > <nl> by running <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git clone git @ github . com : you _ user _ name / checkstyle . git <nl> < / source > <nl> Attention for Windows users , command should be : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git config - - global core . autocrlf true <nl> git clone git @ github . com : you _ user _ name / checkstyle . git <nl> < / source > <nl> @ @ - 52 , 37 + 52 , 37 @ @ git clone git @ github . com : you _ user _ name / checkstyle . git <nl> < p > <nl> Follow these instructions of Git usage and creating a Pull Request : < br / > <nl> 1 ) Configure remotes : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git remote add main https : / / github . com / checkstyle / checkstyle <nl> < / source > <nl> 2 ) Create a branch for a new check : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git checkout - b my - new - check <nl> < / source > <nl> 3 ) Commit changes to my - new - check branch : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git add . <nl> git commit - m " commit message " <nl> < / source > <nl> 4 ) Push branch to GitHub , to allow your mentor to review your code : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git push origin my - new - check <nl> < / source > <nl> 5 ) Repeat steps 3 - 4 till development is complete < br / > <nl> 6 ) Update current branch and local master by pulling changes that were done < br / > <nl> by other contributors : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git pull - - rebase main master <nl> < / source > <nl> 7 ) In the process of the rebase , it may discover conflicts . < br / > <nl> In that case it will stop and allow you to fix the conflicts . < br / > <nl> After fixing conflicts , use git add . to update the index with those contents , < br / > <nl> and then just run : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git rebase - - continue <nl> < / source > <nl> 8 ) Push branch to GitHub ( with all your final changes and actual code of Checkstyle ) : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git push - - force origin my - new - check <nl> < / source > <nl> 9 ) Only after all content is finished and testing is done - send a < a href = " https : / / help . github . com / articles / using - pull - requests / " > Pull Request < / a > <nl> diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm <nl> index ebcd4ab . . 4fb7f76 100644 <nl> - - - a / src / xdocs / cmdline . xml . vm <nl> + + + b / src / xdocs / cmdline . xml . vm <nl> @ @ - 140 , 7 + 140 , 7 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ <nl> the < code > - jar < / code > option . Download latest < a href = " http : / / downloads . sourceforge . net / project / checkstyle / checkstyle / $ { projectVersion } / checkstyle - $ { projectVersion } - all . jar " > <nl> checkstyle - $ { projectVersion } - all . jar < / a > . <nl> An example of run would be : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> java - jar checkstyle - $ { projectVersion } - all . jar - c / sun _ checks . xml MyClass . java <nl> java - jar checkstyle - $ { projectVersion } - all . jar - c / google _ checks . xml MyClass . java <nl> < / source > <nl> @ @ - 153 , 7 + 153 , 7 @ @ java - jar checkstyle - $ { projectVersion } - all . jar - c / google _ checks . xml MyClass . jav <nl> the < code > - jar < / code > option . Download latest < a href = " http : / / downloads . sourceforge . net / project / checkstyle / checkstyle / $ { projectVersion } / checkstyle - $ { projectVersion } - all . jar " > <nl> checkstyle - $ { projectVersion } - all . jar < / a > . <nl> An example of run would be ( path to java file is optional ) : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gui . Main MyClass . java <nl> < / source > <nl> < / p > <nl> @ @ - 162 , 24 + 162 , 22 @ @ java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gu <nl> < section name = " Run after compilation " > <nl> < p > <nl> Download and compile : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> git clone https : / / github . com / checkstyle / checkstyle . git <nl> cd checkstyle <nl> mvn clean compile <nl> < / source > <nl> <nl> Run validation with arguments : <nl> - < source > <nl> - mvn exec : java - Dexec . mainClass = " com . puppycrawl . tools . checkstyle . Main " \ <nl> - - Dexec . args = " - c / sun _ checks . xml src / main / java " <nl> + < source class = " wrap - content " > <nl> + mvn exec : java - Dexec . mainClass = " com . puppycrawl . tools . checkstyle . Main " - Dexec . args = " - c / sun _ checks . xml src / main / java " <nl> < / source > <nl> Run UI application for file : <nl> - < source > <nl> - mvn exec : java - Dexec . mainClass = " com . puppycrawl . tools . checkstyle . gui . Main " \ <nl> - - Dexec . args = " src / main / java / com / puppycrawl / tools / checkstyle / Checker . java " <nl> + < source class = " wrap - content " > <nl> + mvn exec : java - Dexec . mainClass = " com . puppycrawl . tools . checkstyle . gui . Main " - Dexec . args = " src / main / java / com / puppycrawl / tools / checkstyle / Checker . java " <nl> < / source > <nl> Build all jars , and launch CLI from new build : <nl> - < source > <nl> + < source class = " wrap - content " > <nl> mvn clean package - Passembly <nl> java - jar target / checkstyle - X . X - SNAPSHOT - all . jar - c / sun _ checks . xml MyClass . java <nl> < / source > <nl> @ @ - 203 , 9 + 201 , 8 @ @ java - jar target / checkstyle - X . X - SNAPSHOT - all . jar - c / sun _ checks . xml MyClass . java <nl> < code > docs / sun _ checks . xml < / code > on a filesystem <nl> < / b > <nl> < / p > <nl> - < source > <nl> - java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ <nl> - Check . java <nl> + < source class = " wrap - content " > <nl> + java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml Check . java <nl> < / source > <nl> <nl> < p > <nl> @ @ - 214 , 9 + 211 , 8 @ @ java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ <nl> < code > docs / sun _ checks . xml < / code > on all Java files in a directory <nl> < / b > <nl> < / p > <nl> - < source > <nl> - java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ <nl> - src / <nl> + < source class = " wrap - content " > <nl> + java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml src / <nl> < / source > <nl> <nl> < p > <nl> @ @ - 226 , 10 + 222 , 8 @ @ java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ <nl> property <nl> < / b > <nl> < / p > <nl> - < source > <nl> - java - Dcheckstyle . cache . file = target / cachefile \ <nl> - com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ <nl> - Check . java <nl> + < source class = " wrap - content " > <nl> + java - Dcheckstyle . cache . file = target / cachefile com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml Check . java <nl> < / source > <nl> <nl> < p > <nl> @ @ - 239 , 9 + 233 , 8 @ @ java - Dcheckstyle . cache . file = target / cachefile \ <nl> file <nl> < / b > <nl> < / p > <nl> - < source > <nl> - java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ <nl> - - p myCheckstyle . properties Check . java <nl> + < source class = " wrap - content " > <nl> + java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml - p myCheckstyle . properties Check . java <nl> < / source > <nl> <nl> < p > <nl> @ @ - 251 , 9 + 244 , 8 @ @ java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ <nl> XML format <nl> < / b > <nl> < / p > <nl> - < source > <nl> - java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ <nl> - - f xml - o build / checkstyle _ errors . xml Check . java <nl> + < source class = " wrap - content " > <nl> + java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml - f xml - o build / checkstyle _ errors . xml Check . java <nl> < / source > <nl> <nl> < p > <nl> @ @ - 262 , 10 + 254 , 8 @ @ java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ <nl> ( Root module , Checks , etc ) < / a > in configuration file : <nl> < / b > <nl> < / p > <nl> - < source > <nl> - java - classpath MyCustom . jar ; checkstyle - $ { projectVersion } - all . jar \ <nl> - com . puppycrawl . tools . checkstyle . Main \ <nl> - - c config . xml Check . java <nl> + < source class = " wrap - content " > <nl> + java - classpath MyCustom . jar ; checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . Main - c config . xml Check . java <nl> < / source > <nl> < p > <nl> < b > Note < / b > : Custom modules should be specified with the class ' <nl> diff - - git a / src / xdocs / writingchecks . xml b / src / xdocs / writingchecks . xml <nl> index 8b5d2ae . . 9035e28 100644 <nl> - - - a / src / xdocs / writingchecks . xml <nl> + + + b / src / xdocs / writingchecks . xml <nl> @ @ - 183 , 7 + 183 , 7 @ @ CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] <nl> Still with us ? Great , you have mastered the basic theory so here <nl> is your reward - a GUI that displays the structure of a Java source file . To run it type <nl> < / p > <nl> - < source > <nl> + < source class = " wrap - content " > <nl> java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gui . Main <nl> < / source > <nl> <nl> @ @ - 581 , 17 + 581 , 13 @ @ public class MethodLimitCheck extends AbstractCheck <nl> < / p > <nl> <nl> < p > For Linux / Unix OS : < / p > <nl> - < source > <nl> - java - classpath mycompanychecks . jar : checkstyle - $ { projectVersion } - all . jar \ <nl> - com . puppycrawl . tools . checkstyle . Main <nl> - - c config . xml myproject <nl> + < source class = " wrap - content " > <nl> + java - classpath mycompanychecks . jar : checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . Main - c config . xml myproject <nl> < / source > <nl> <nl> < p > For Windows OS : < / p > <nl> - < source > <nl> - java - classpath mycompanychecks . jar ; checkstyle - $ { projectVersion } - all . jar \ <nl> - com . puppycrawl . tools . checkstyle . Main <nl> - - c config . xml myproject <nl> + < source class = " wrap - content " > <nl> + java - classpath mycompanychecks . jar ; checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . Main - c config . xml myproject <nl> < / source > <nl> <nl> < p > <nl> diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm <nl> index 3636806 . . 514d5c0 100644 <nl> - - - a / src / xdocs / writingjavadocchecks . xml . vm <nl> + + + b / src / xdocs / writingjavadocchecks . xml . vm <nl> @ @ - 149 , 7 + 149 , 7 @ @ public class MyClass { <nl> } <nl> ] ] > < / source > <nl> < p > Command : < / p > <nl> - < source > java - jar checkstyle - X . XX - all . jar - J MyClass . java < / source > <nl> + < source class = " wrap - content " > java - jar checkstyle - X . XX - all . jar - J MyClass . java < / source > <nl> < p > Output : < / p > <nl> < source > < ! [ CDATA [ <nl> CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] <nl> @ @ - 204 , 7 + 204 , 7 @ @ CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] <nl> * @ see AbstractClass <nl> ] ] > < / source > <nl> < p > Command : < / p > <nl> - < source > java - jar checkstyle - X . XX - all . jar - j MyJavadocComment . javadoc < / source > <nl> + < source class = " wrap - content " > java - jar checkstyle - X . XX - all . jar - j MyJavadocComment . javadoc < / source > <nl> < p > Output : < / p > <nl> < source > < ! [ CDATA [ <nl> JAVADOC - > * My < b > class < / b > . \ r \ n * @ see AbstractClass < EOF > [ 0 : 0 ] <nl> @ @ - 343 , 7 + 343 , 7 @ @ JAVADOC - > < audio > < source src = " horse . ogg " type = " audio / ogg " / > < / audio > < EOF > [ 0 : 0 ] <nl> Input : <nl> < source > & lt ; audio & gt ; test < / source > <nl> Output : <nl> - < source > [ ERROR : 0 ] Javadoc comment at column 1 has parse error . Missed HTML close tag ' audio ' . Sometimes it means that close tag missed for one of previous tags . < / source > <nl> + < source class = " wrap - content " > [ ERROR : 0 ] Javadoc comment at column 1 has parse error . Missed HTML close tag ' audio ' . Sometimes it means that close tag missed for one of previous tags . < / source > <nl> As you see Javadoc parser prints error and doesn ' t build AST if unknown HTML tag doesn ' t have matching end tag . If that a case please create an issue against Checkstyle to upgrade parser . <nl> < / p > <nl> <nl> @ @ - 474 , 7 + 474 , 7 @ @ JAVADOC - > < p > First < / p > \ r \ n < p > Second < / p > < EOF > [ 0 : 0 ] <nl> < p > <nl> Checkstyle GUI allows to showing javadoc tree in java files . To run in use <nl> < / p > <nl> - < source > <nl> + < source class = " wrap - content " > <nl> java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gui . Main <nl> < / source > <nl> < p >
NEAREST DIFF (one line): diff - - git a / src / xdocs / config . xml b / src / xdocs / config . xml <nl> index c256df7 . . a7e5f2b 100755 <nl> - - - a / src / xdocs / config . xml <nl> + + + b / src / xdocs / config . xml <nl> @ @ - 964 , 6 + 964 , 20 @ @ <nl> & lt ; property name = & quot ; checkFormat & quot ; value = & quot ; $ 1 & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> + <nl> + < p > <nl> + To configure a filter to suppress all audit events between a comment <nl> + containing < code > CHECKSTYLE _ OFF : ALL < / code > and a comment containing <nl> + < code > CHECKSTYLE _ OFF : ALL < / code > except for the < em > EqualsHashCode < / em > check : <nl> + < / p > <nl> + <nl> + < source > <nl> + & lt ; module name = & quot ; SuppressionCommentFilter & quot ; & gt ; <nl> + & lt ; property name = & quot ; offCommentFormat & quot ; value = & quot ; CHECKSTYLE _ OFF : ALL & quot ; / & gt ; <nl> + & lt ; property name = & quot ; onCommentFormat & quot ; value = & quot ; CHECKSTYLE _ ON : ALL & quot ; / & gt ; <nl> + & lt ; property name = & quot ; checkFormat & quot ; value = & quot ; ^ ( ( ? ! ( EqualsHashCode ) ) . ) * $ & quot ; / & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> < / subsection > <nl> <nl> < subsection name = " SuppressWithNearbyCommentFilter " >

TEST DIFF:
diff - - git a / src / site / resources / css / site . css b / src / site / resources / css / site . css 
 index 78e262e . . 4d3f5d0 100644 
 - - - a / src / site / resources / css / site . css 
 + + + b / src / site / resources / css / site . css 
 @ @ - 49 , 3 + 49 , 16 @ @ h2 : hover . anchor { 
 . anchor { 
 display : none ; 
 } 
 + 
 + . source { 
 + width : 90 % ; 
 + overflow - x : auto ; 
 + white - space : nowrap ; 
 + } 
 + 
 + . wrap - content { 
 + white - space : pre - wrap ! important ; 
 + white - space : - moz - pre - wrap ! important ; 
 + white - space : - o - pre - wrap ! important ; 
 + word - wrap : break - word ! important ; 
 + } 
 diff - - git a / src / xdocs / beginning _ development . xml b / src / xdocs / beginning _ development . xml 
 index 1c2cd3c . . 9e8cf08 100644 
 - - - a / src / xdocs / beginning _ development . xml 
 + + + b / src / xdocs / beginning _ development . xml 
 @ @ - 30 , 11 + 30 , 11 @ @ 
 < a href = " https : / / help . github . com / articles / fork - a - repo / " > here < / a > < br / > 
 3 . Checkout the current source code from : https : / / github . com / you _ user _ name / checkstyle / < br / > 
 by running 
 - < source > 
 + < source class = " wrap - content " > 
 git clone git @ github . com : you _ user _ name / checkstyle . git 
 < / source > 
 Attention for Windows users , command should be : 
 - < source > 
 + < source class = " wrap - content " > 
 git config - - global core . autocrlf true 
 git clone git @ github . com : you _ user _ name / checkstyle . git 
 < / source > 
 @ @ - 52 , 37 + 52 , 37 @ @ git clone git @ github . com : you _ user _ name / checkstyle . git 
 < p > 
 Follow these instructions of Git usage and creating a Pull Request : < br / > 
 1 ) Configure remotes : 
 - < source > 
 + < source class = " wrap - content " > 
 git remote add main https : / / github . com / checkstyle / checkstyle 
 < / source > 
 2 ) Create a branch for a new check : 
 - < source > 
 + < source class = " wrap - content " > 
 git checkout - b my - new - check 
 < / source > 
 3 ) Commit changes to my - new - check branch : 
 - < source > 
 + < source class = " wrap - content " > 
 git add . 
 git commit - m " commit message " 
 < / source > 
 4 ) Push branch to GitHub , to allow your mentor to review your code : 
 - < source > 
 + < source class = " wrap - content " > 
 git push origin my - new - check 
 < / source > 
 5 ) Repeat steps 3 - 4 till development is complete < br / > 
 6 ) Update current branch and local master by pulling changes that were done < br / > 
 by other contributors : 
 - < source > 
 + < source class = " wrap - content " > 
 git pull - - rebase main master 
 < / source > 
 7 ) In the process of the rebase , it may discover conflicts . < br / > 
 In that case it will stop and allow you to fix the conflicts . < br / > 
 After fixing conflicts , use git add . to update the index with those contents , < br / > 
 and then just run : 
 - < source > 
 + < source class = " wrap - content " > 
 git rebase - - continue 
 < / source > 
 8 ) Push branch to GitHub ( with all your final changes and actual code of Checkstyle ) : 
 - < source > 
 + < source class = " wrap - content " > 
 git push - - force origin my - new - check 
 < / source > 
 9 ) Only after all content is finished and testing is done - send a < a href = " https : / / help . github . com / articles / using - pull - requests / " > Pull Request < / a > 
 diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm 
 index ebcd4ab . . 4fb7f76 100644 
 - - - a / src / xdocs / cmdline . xml . vm 
 + + + b / src / xdocs / cmdline . xml . vm 
 @ @ - 140 , 7 + 140 , 7 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ 
 the < code > - jar < / code > option . Download latest < a href = " http : / / downloads . sourceforge . net / project / checkstyle / checkstyle / $ { projectVersion } / checkstyle - $ { projectVersion } - all . jar " > 
 checkstyle - $ { projectVersion } - all . jar < / a > . 
 An example of run would be : 
 - < source > 
 + < source class = " wrap - content " > 
 java - jar checkstyle - $ { projectVersion } - all . jar - c / sun _ checks . xml MyClass . java 
 java - jar checkstyle - $ { projectVersion } - all . jar - c / google _ checks . xml MyClass . java 
 < / source > 
 @ @ - 153 , 7 + 153 , 7 @ @ java - jar checkstyle - $ { projectVersion } - all . jar - c / google _ checks . xml MyClass . jav 
 the < code > - jar < / code > option . Download latest < a href = " http : / / downloads . sourceforge . net / project / checkstyle / checkstyle / $ { projectVersion } / checkstyle - $ { projectVersion } - all . jar " > 
 checkstyle - $ { projectVersion } - all . jar < / a > . 
 An example of run would be ( path to java file is optional ) : 
 - < source > 
 + < source class = " wrap - content " > 
 java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gui . Main MyClass . java 
 < / source > 
 < / p > 
 @ @ - 162 , 24 + 162 , 22 @ @ java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gu 
 < section name = " Run after compilation " > 
 < p > 
 Download and compile : 
 - < source > 
 + < source class = " wrap - content " > 
 git clone https : / / github . com / checkstyle / checkstyle . git 
 cd checkstyle 
 mvn clean compile 
 < / source > 
 
 Run validation with arguments : 
 - < source > 
 - mvn exec : java - Dexec . mainClass = " com . puppycrawl . tools . checkstyle . Main " \ 
 - - Dexec . args = " - c / sun _ checks . xml src / main / java " 
 + < source class = " wrap - content " > 
 + mvn exec : java - Dexec . mainClass = " com . puppycrawl . tools . checkstyle . Main " - Dexec . args = " - c / sun _ checks . xml src / main / java " 
 < / source > 
 Run UI application for file : 
 - < source > 
 - mvn exec : java - Dexec . mainClass = " com . puppycrawl . tools . checkstyle . gui . Main " \ 
 - - Dexec . args = " src / main / java / com / puppycrawl / tools / checkstyle / Checker . java " 
 + < source class = " wrap - content " > 
 + mvn exec : java - Dexec . mainClass = " com . puppycrawl . tools . checkstyle . gui . Main " - Dexec . args = " src / main / java / com / puppycrawl / tools / checkstyle / Checker . java " 
 < / source > 
 Build all jars , and launch CLI from new build : 
 - < source > 
 + < source class = " wrap - content " > 
 mvn clean package - Passembly 
 java - jar target / checkstyle - X . X - SNAPSHOT - all . jar - c / sun _ checks . xml MyClass . java 
 < / source > 
 @ @ - 203 , 9 + 201 , 8 @ @ java - jar target / checkstyle - X . X - SNAPSHOT - all . jar - c / sun _ checks . xml MyClass . java 
 < code > docs / sun _ checks . xml < / code > on a filesystem 
 < / b > 
 < / p > 
 - < source > 
 - java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ 
 - Check . java 
 + < source class = " wrap - content " > 
 + java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml Check . java 
 < / source > 
 
 < p > 
 @ @ - 214 , 9 + 211 , 8 @ @ java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ 
 < code > docs / sun _ checks . xml < / code > on all Java files in a directory 
 < / b > 
 < / p > 
 - < source > 
 - java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ 
 - src / 
 + < source class = " wrap - content " > 
 + java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml src / 
 < / source > 
 
 < p > 
 @ @ - 226 , 10 + 222 , 8 @ @ java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ 
 property 
 < / b > 
 < / p > 
 - < source > 
 - java - Dcheckstyle . cache . file = target / cachefile \ 
 - com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ 
 - Check . java 
 + < source class = " wrap - content " > 
 + java - Dcheckstyle . cache . file = target / cachefile com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml Check . java 
 < / source > 
 
 < p > 
 @ @ - 239 , 9 + 233 , 8 @ @ java - Dcheckstyle . cache . file = target / cachefile \ 
 file 
 < / b > 
 < / p > 
 - < source > 
 - java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ 
 - - p myCheckstyle . properties Check . java 
 + < source class = " wrap - content " > 
 + java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml - p myCheckstyle . properties Check . java 
 < / source > 
 
 < p > 
 @ @ - 251 , 9 + 244 , 8 @ @ java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ 
 XML format 
 < / b > 
 < / p > 
 - < source > 
 - java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ 
 - - f xml - o build / checkstyle _ errors . xml Check . java 
 + < source class = " wrap - content " > 
 + java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml - f xml - o build / checkstyle _ errors . xml Check . java 
 < / source > 
 
 < p > 
 @ @ - 262 , 10 + 254 , 8 @ @ java com . puppycrawl . tools . checkstyle . Main - c docs / sun _ checks . xml \ 
 ( Root module , Checks , etc ) < / a > in configuration file : 
 < / b > 
 < / p > 
 - < source > 
 - java - classpath MyCustom . jar ; checkstyle - $ { projectVersion } - all . jar \ 
 - com . puppycrawl . tools . checkstyle . Main \ 
 - - c config . xml Check . java 
 + < source class = " wrap - content " > 
 + java - classpath MyCustom . jar ; checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . Main - c config . xml Check . java 
 < / source > 
 < p > 
 < b > Note < / b > : Custom modules should be specified with the class ' 
 diff - - git a / src / xdocs / writingchecks . xml b / src / xdocs / writingchecks . xml 
 index 8b5d2ae . . 9035e28 100644 
 - - - a / src / xdocs / writingchecks . xml 
 + + + b / src / xdocs / writingchecks . xml 
 @ @ - 183 , 7 + 183 , 7 @ @ CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] 
 Still with us ? Great , you have mastered the basic theory so here 
 is your reward - a GUI that displays the structure of a Java source file . To run it type 
 < / p > 
 - < source > 
 + < source class = " wrap - content " > 
 java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gui . Main 
 < / source > 
 
 @ @ - 581 , 17 + 581 , 13 @ @ public class MethodLimitCheck extends AbstractCheck 
 < / p > 
 
 < p > For Linux / Unix OS : < / p > 
 - < source > 
 - java - classpath mycompanychecks . jar : checkstyle - $ { projectVersion } - all . jar \ 
 - com . puppycrawl . tools . checkstyle . Main 
 - - c config . xml myproject 
 + < source class = " wrap - content " > 
 + java - classpath mycompanychecks . jar : checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . Main - c config . xml myproject 
 < / source > 
 
 < p > For Windows OS : < / p > 
 - < source > 
 - java - classpath mycompanychecks . jar ; checkstyle - $ { projectVersion } - all . jar \ 
 - com . puppycrawl . tools . checkstyle . Main 
 - - c config . xml myproject 
 + < source class = " wrap - content " > 
 + java - classpath mycompanychecks . jar ; checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . Main - c config . xml myproject 
 < / source > 
 
 < p > 
 diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm 
 index 3636806 . . 514d5c0 100644 
 - - - a / src / xdocs / writingjavadocchecks . xml . vm 
 + + + b / src / xdocs / writingjavadocchecks . xml . vm 
 @ @ - 149 , 7 + 149 , 7 @ @ public class MyClass { 
 } 
 ] ] > < / source > 
 < p > Command : < / p > 
 - < source > java - jar checkstyle - X . XX - all . jar - J MyClass . java < / source > 
 + < source class = " wrap - content " > java - jar checkstyle - X . XX - all . jar - J MyClass . java < / source > 
 < p > Output : < / p > 
 < source > < ! [ CDATA [ 
 CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] 
 @ @ - 204 , 7 + 204 , 7 @ @ CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] 
 * @ see AbstractClass 
 ] ] > < / source > 
 < p > Command : < / p > 
 - < source > java - jar checkstyle - X . XX - all . jar - j MyJavadocComment . javadoc < / source > 
 + < source class = " wrap - content " > java - jar checkstyle - X . XX - all . jar - j MyJavadocComment . javadoc < / source > 
 < p > Output : < / p > 
 < source > < ! [ CDATA [ 
 JAVADOC - > * My < b > class < / b > . \ r \ n * @ see AbstractClass < EOF > [ 0 : 0 ] 
 @ @ - 343 , 7 + 343 , 7 @ @ JAVADOC - > < audio > < source src = " horse . ogg " type = " audio / ogg " / > < / audio > < EOF > [ 0 : 0 ] 
 Input : 
 < source > & lt ; audio & gt ; test < / source > 
 Output : 
 - < source > [ ERROR : 0 ] Javadoc comment at column 1 has parse error . Missed HTML close tag ' audio ' . Sometimes it means that close tag missed for one of previous tags . < / source > 
 + < source class = " wrap - content " > [ ERROR : 0 ] Javadoc comment at column 1 has parse error . Missed HTML close tag ' audio ' . Sometimes it means that close tag missed for one of previous tags . < / source > 
 As you see Javadoc parser prints error and doesn ' t build AST if unknown HTML tag doesn ' t have matching end tag . If that a case please create an issue against Checkstyle to upgrade parser . 
 < / p > 
 
 @ @ - 474 , 7 + 474 , 7 @ @ JAVADOC - > < p > First < / p > \ r \ n < p > Second < / p > < EOF > [ 0 : 0 ] 
 < p > 
 Checkstyle GUI allows to showing javadoc tree in java files . To run in use 
 < / p > 
 - < source > 
 + < source class = " wrap - content " > 
 java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gui . Main 
 < / source > 
 < p >

NEAREST DIFF:
diff - - git a / src / xdocs / config . xml b / src / xdocs / config . xml 
 index c256df7 . . a7e5f2b 100755 
 - - - a / src / xdocs / config . xml 
 + + + b / src / xdocs / config . xml 
 @ @ - 964 , 6 + 964 , 20 @ @ 
 & lt ; property name = & quot ; checkFormat & quot ; value = & quot ; $ 1 & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 + 
 + < p > 
 + To configure a filter to suppress all audit events between a comment 
 + containing < code > CHECKSTYLE _ OFF : ALL < / code > and a comment containing 
 + < code > CHECKSTYLE _ OFF : ALL < / code > except for the < em > EqualsHashCode < / em > check : 
 + < / p > 
 + 
 + < source > 
 + & lt ; module name = & quot ; SuppressionCommentFilter & quot ; & gt ; 
 + & lt ; property name = & quot ; offCommentFormat & quot ; value = & quot ; CHECKSTYLE _ OFF : ALL & quot ; / & gt ; 
 + & lt ; property name = & quot ; onCommentFormat & quot ; value = & quot ; CHECKSTYLE _ ON : ALL & quot ; / & gt ; 
 + & lt ; property name = & quot ; checkFormat & quot ; value = & quot ; ^ ( ( ? ! ( EqualsHashCode ) ) . ) * $ & quot ; / & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 < / subsection > 
 
 < subsection name = " SuppressWithNearbyCommentFilter " >
