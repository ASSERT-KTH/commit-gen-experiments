BLEU SCORE: 0.037477767366779206

TEST MSG: Issue # 974 : PMD violation ConfusingTernary ( partial fix )
GENERATED MSG: Invert if statements with negated conditions . # 1555

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> index 2f0cf62 . . f37f12d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> @ @ - 335 , 20 + 335 , 7 @ @ public final class ConfigurationLoader { <nl> fragments . add ( String . valueOf ( DOLLAR _ SIGN ) ) ; <nl> prev = pos + 1 ; <nl> } <nl> - else if ( value . charAt ( pos + 1 ) ! = ' { ' ) { <nl> - if ( value . charAt ( pos + 1 ) = = DOLLAR _ SIGN ) { <nl> - / / backwards compatibility two $ map to one mode <nl> - fragments . add ( String . valueOf ( DOLLAR _ SIGN ) ) ; <nl> - prev = pos + 2 ; <nl> - } <nl> - else { <nl> - / / new behaviour : $ X maps to $ X for all values of X ! = ' $ ' <nl> - fragments . add ( value . substring ( pos , pos + 2 ) ) ; <nl> - prev = pos + 2 ; <nl> - } <nl> - <nl> - } <nl> - else { <nl> + else if ( value . charAt ( pos + 1 ) = = ' { ' ) { <nl> / / property found , extract its name or bail on a typo <nl> final int endName = value . indexOf ( ' } ' , pos ) ; <nl> if ( endName < 0 ) { <nl> @ @ - 360 , 6 + 347 , 18 @ @ public final class ConfigurationLoader { <nl> propertyRefs . add ( propertyName ) ; <nl> prev = endName + 1 ; <nl> } <nl> + else { <nl> + if ( value . charAt ( pos + 1 ) = = DOLLAR _ SIGN ) { <nl> + / / backwards compatibility two $ map to one mode <nl> + fragments . add ( String . valueOf ( DOLLAR _ SIGN ) ) ; <nl> + prev = pos + 2 ; <nl> + } <nl> + else { <nl> + / / new behaviour : $ X maps to $ X for all values of X ! = ' $ ' <nl> + fragments . add ( value . substring ( pos , pos + 2 ) ) ; <nl> + prev = pos + 2 ; <nl> + } <nl> + } <nl> <nl> / / search for the next instance of $ from the ' prev ' position <nl> pos = value . indexOf ( DOLLAR _ SIGN , prev ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index 6750215 . . fa77ad1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 327 , 14 + 327 , 14 @ @ public final class Main { <nl> / / setup the output stream <nl> OutputStream out ; <nl> boolean closeOutputStream ; <nl> - if ( outputLocation ! = null ) { <nl> - out = new FileOutputStream ( outputLocation ) ; <nl> - closeOutputStream = true ; <nl> - } <nl> - else { <nl> + if ( outputLocation = = null ) { <nl> out = System . out ; <nl> closeOutputStream = false ; <nl> } <nl> + else { <nl> + out = new FileOutputStream ( outputLocation ) ; <nl> + closeOutputStream = true ; <nl> + } <nl> <nl> / / setup a listener <nl> AuditListener listener ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java <nl> index 3bbeb73 . . e8ea3c7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java <nl> @ @ - 213 , 11 + 213 , 11 @ @ public abstract class AbstractDeclarationCollector extends Check { <nl> * @ return LexicalFrame containing declaration or null <nl> * / <nl> private LexicalFrame findFrame ( String name ) { <nl> - if ( current ! = null ) { <nl> - return current . getIfContains ( name ) ; <nl> + if ( current = = null ) { <nl> + return null ; <nl> } <nl> else { <nl> - return null ; <nl> + return current . getIfContains ( name ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> index 1da4985 . . 744afd6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> @ @ - 252 , 17 + 252 , 16 @ @ public class AvoidEscapedUnicodeCharactersCheck <nl> final DetailAST variableDef = getVariableDef ( ast ) ; <nl> DetailAST semi ; <nl> <nl> - if ( variableDef ! = null ) { <nl> - <nl> + if ( variableDef = = null ) { <nl> + semi = getSemi ( ast ) ; <nl> + } <nl> + else { <nl> semi = variableDef . getNextSibling ( ) ; <nl> <nl> if ( semi . getType ( ) ! = TokenTypes . SEMI ) { <nl> semi = variableDef . getLastChild ( ) ; <nl> } <nl> } <nl> - else { <nl> - semi = getSemi ( ast ) ; <nl> - } <nl> <nl> boolean result = false ; <nl> if ( semi ! = null ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 9210986 . . 1934186 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 214 , 14 + 214 , 14 @ @ public class SuppressWarningsHolder <nl> final DetailAST nextAST = targetAST . getNextSibling ( ) ; <nl> final int lastLine ; <nl> final int lastColumn ; <nl> - if ( nextAST ! = null ) { <nl> - lastLine = nextAST . getLineNo ( ) ; <nl> - lastColumn = nextAST . getColumnNo ( ) - 1 ; <nl> - } <nl> - else { <nl> + if ( nextAST = = null ) { <nl> lastLine = Integer . MAX _ VALUE ; <nl> lastColumn = Integer . MAX _ VALUE ; <nl> } <nl> + else { <nl> + lastLine = nextAST . getLineNo ( ) ; <nl> + lastColumn = nextAST . getColumnNo ( ) - 1 ; <nl> + } <nl> <nl> / / add suppression entries for listed checks <nl> final List < Entry > entries = ENTRIES . get ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> index d18934f . . 90ae3b5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> @ @ - 218 , 19 + 218 , 18 @ @ public final class MissingDeprecatedCheck extends Check { <nl> if ( multilineCont . find ( ) ) { <nl> reindex = lines . length ; <nl> final String lFin = multilineCont . group ( 1 ) ; <nl> - if ( ! lFin . equals ( NEXT _ TAG ) <nl> - & & ! lFin . equals ( END _ JAVADOC ) ) { <nl> + if ( lFin . equals ( NEXT _ TAG ) | | lFin . equals ( END _ JAVADOC ) ) { <nl> + log ( currentLine , MSG _ KEY _ JAVADOC _ MISSING ) ; <nl> if ( foundBefore ) { <nl> log ( currentLine , MSG _ KEY _ JAVADOC _ DUPLICATE _ TAG , <nl> - JavadocTagInfo . DEPRECATED . getText ( ) ) ; <nl> + JavadocTagInfo . DEPRECATED . getText ( ) ) ; <nl> } <nl> found = true ; <nl> } <nl> else { <nl> - log ( currentLine , MSG _ KEY _ JAVADOC _ MISSING ) ; <nl> if ( foundBefore ) { <nl> log ( currentLine , MSG _ KEY _ JAVADOC _ DUPLICATE _ TAG , <nl> - JavadocTagInfo . DEPRECATED . getText ( ) ) ; <nl> + JavadocTagInfo . DEPRECATED . getText ( ) ) ; <nl> } <nl> found = true ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java <nl> index 4126db0 . . 9f54c75 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java <nl> @ @ - 156 , 12 + 156 , 12 @ @ public class SuppressWarningsCheck extends AbstractFormatCheck { <nl> warningHolder . findFirstToken ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) ; <nl> DetailAST warning ; <nl> <nl> - if ( token ! = null ) { <nl> - / / case like ' @ SuppressWarnings ( value = UNUSED ) ' <nl> - warning = token . findFirstToken ( TokenTypes . EXPR ) ; <nl> + if ( token = = null ) { <nl> + warning = warningHolder . findFirstToken ( TokenTypes . EXPR ) ; <nl> } <nl> else { <nl> - warning = warningHolder . findFirstToken ( TokenTypes . EXPR ) ; <nl> + / / case like ' @ SuppressWarnings ( value = UNUSED ) ' <nl> + warning = token . findFirstToken ( TokenTypes . EXPR ) ; <nl> } <nl> <nl> / / rare case with empty array ex : @ SuppressWarnings ( { } ) <nl> @ @ - 252 , 13 + 252 , 13 @ @ public class SuppressWarningsCheck extends AbstractFormatCheck { <nl> annotation . findFirstToken ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) ; <nl> final DetailAST annArrayInit ; <nl> <nl> - if ( annValuePair ! = null ) { <nl> + if ( annValuePair = = null ) { <nl> annArrayInit = <nl> - annValuePair . findFirstToken ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ; <nl> + annotation . findFirstToken ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ; <nl> } <nl> else { <nl> annArrayInit = <nl> - annotation . findFirstToken ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ; <nl> + annValuePair . findFirstToken ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ; <nl> } <nl> <nl> if ( annArrayInit ! = null ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> index f4ad906 . . 9a9b9c0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> @ @ - 193 , 16 + 193 , 14 @ @ public class EmptyBlockCheck <nl> } <nl> else { <nl> / / check only whitespace of first & last lines <nl> - if ( ! lines [ slistLineNo - 1 ] <nl> - . substring ( slistColNo + 1 ) . trim ( ) . isEmpty ( ) <nl> - | | ! lines [ rcurlyLineNo - 1 ] <nl> - . substring ( 0 , rcurlyColNo ) . trim ( ) . isEmpty ( ) ) { <nl> - retVal = true ; <nl> - } <nl> - else { <nl> + if ( lines [ slistLineNo - 1 ] . substring ( slistColNo + 1 ) . trim ( ) . isEmpty ( ) <nl> + & & lines [ rcurlyLineNo - 1 ] . substring ( 0 , rcurlyColNo ) . trim ( ) . isEmpty ( ) ) { <nl> / / check if all lines are also only whitespace <nl> retVal = ! checkIsAllLinesAreWhitespace ( lines , slistLineNo , rcurlyLineNo ) ; <nl> } <nl> + else { <nl> + retVal = true ; <nl> + } <nl> } <nl> return retVal ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> index 8ef7bc6 . . d9c8b97 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> @ @ - 297 , 11 + 297 , 11 @ @ public class NeedBracesCheck extends Check { <nl> private static DetailAST findExpressionBlockInForLoop ( DetailAST literalFor ) { <nl> final DetailAST forEachClause = literalFor . findFirstToken ( TokenTypes . FOR _ EACH _ CLAUSE ) ; <nl> final DetailAST firstToken ; <nl> - if ( forEachClause ! = null ) { <nl> - firstToken = forEachClause . findFirstToken ( TokenTypes . EXPR ) ; <nl> + if ( forEachClause = = null ) { <nl> + firstToken = literalFor . findFirstToken ( TokenTypes . EXPR ) ; <nl> } <nl> else { <nl> - firstToken = literalFor . findFirstToken ( TokenTypes . EXPR ) ; <nl> + firstToken = forEachClause . findFirstToken ( TokenTypes . EXPR ) ; <nl> } <nl> return firstToken ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index ad1e66a . . 359a7c0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 325 , 16 + 325 , 16 @ @ public class RightCurlyCheck extends AbstractOptionCheck < RightCurlyOption > { <nl> break ; <nl> case TokenTypes . LITERAL _ IF : <nl> nextToken = ast . findFirstToken ( TokenTypes . LITERAL _ ELSE ) ; <nl> - if ( nextToken ! = null ) { <nl> - lcurly = nextToken . getPreviousSibling ( ) ; <nl> - rcurly = lcurly . getLastChild ( ) ; <nl> - } <nl> - else { <nl> + if ( nextToken = = null ) { <nl> shouldCheckLastRcurly = true ; <nl> nextToken = getNextToken ( ast ) ; <nl> lcurly = ast . getLastChild ( ) ; <nl> rcurly = lcurly . getLastChild ( ) ; <nl> } <nl> + else { <nl> + lcurly = nextToken . getPreviousSibling ( ) ; <nl> + rcurly = lcurly . getLastChild ( ) ; <nl> + } <nl> break ; <nl> case TokenTypes . LITERAL _ ELSE : <nl> case TokenTypes . LITERAL _ FINALLY :
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> index c8f04fb . . 427bd3b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> @ @ - 247 , 18 + 247 , 18 @ @ public class Checker extends AutomaticBean implements MessageDispatcher { <nl> } <nl> <nl> / / Process each file <nl> - for ( final File f : files ) { <nl> - if ( ! Utils . fileExtensionMatches ( f , fileExtensions ) ) { <nl> + for ( final File file : files ) { <nl> + if ( ! Utils . fileExtensionMatches ( file , fileExtensions ) ) { <nl> continue ; <nl> } <nl> - final String fileName = f . getAbsolutePath ( ) ; <nl> + final String fileName = file . getAbsolutePath ( ) ; <nl> fireFileStarted ( fileName ) ; <nl> final SortedSet < LocalizedMessage > fileMessages = Sets . newTreeSet ( ) ; <nl> try { <nl> - final FileText theText = new FileText ( f . getAbsoluteFile ( ) , <nl> + final FileText theText = new FileText ( file . getAbsoluteFile ( ) , <nl> charset ) ; <nl> for ( final FileSetCheck fsc : fileSetChecks ) { <nl> - fileMessages . addAll ( fsc . process ( f , theText ) ) ; <nl> + fileMessages . addAll ( fsc . process ( file , theText ) ) ; <nl> } <nl> } <nl> catch ( final IOException ioe ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> index 2959416 . . 96fc724 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> @ @ - 437 , 12 + 437 , 12 @ @ public final class ConfigurationLoader { <nl> parsePropertyString ( value , fragments , propertyRefs ) ; <nl> <nl> final StringBuilder sb = new StringBuilder ( ) ; <nl> - final Iterator < String > i = fragments . iterator ( ) ; <nl> - final Iterator < String > j = propertyRefs . iterator ( ) ; <nl> - while ( i . hasNext ( ) ) { <nl> - String fragment = i . next ( ) ; <nl> + final Iterator < String > fragmentsIterator = fragments . iterator ( ) ; <nl> + final Iterator < String > propertyRefsIterator = propertyRefs . iterator ( ) ; <nl> + while ( fragmentsIterator . hasNext ( ) ) { <nl> + String fragment = fragmentsIterator . next ( ) ; <nl> if ( fragment = = null ) { <nl> - final String propertyName = j . next ( ) ; <nl> + final String propertyName = propertyRefsIterator . next ( ) ; <nl> fragment = props . resolve ( propertyName ) ; <nl> if ( fragment = = null ) { <nl> if ( defaultValue ! = null ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> index 8520eae . . cbe74ce 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> @ @ - 170 , 12 + 170 , 12 @ @ public final class TreeWalker <nl> throw new CheckstyleException ( <nl> " TreeWalker is not allowed as a parent of " + name ) ; <nl> } <nl> - final Check c = ( Check ) module ; <nl> - c . contextualize ( childContext ) ; <nl> - c . configure ( childConf ) ; <nl> - c . init ( ) ; <nl> + final Check check = ( Check ) module ; <nl> + check . contextualize ( childContext ) ; <nl> + check . configure ( childConf ) ; <nl> + check . init ( ) ; <nl> <nl> - registerCheck ( c ) ; <nl> + registerCheck ( check ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 345 , 9 + 345 , 9 @ @ public final class TreeWalker <nl> checks = ordinaryChecks ; <nl> } <nl> <nl> - for ( Check ch : checks ) { <nl> - ch . setFileContents ( contents ) ; <nl> - ch . beginTree ( rootAST ) ; <nl> + for ( Check check : checks ) { <nl> + check . setFileContents ( contents ) ; <nl> + check . beginTree ( rootAST ) ; <nl> } <nl> } <nl> <nl> @ @ - 366 , 8 + 366 , 8 @ @ public final class TreeWalker <nl> checks = ordinaryChecks ; <nl> } <nl> <nl> - for ( Check ch : checks ) { <nl> - ch . finishTree ( rootAST ) ; <nl> + for ( Check check : checks ) { <nl> + check . finishTree ( rootAST ) ; <nl> } <nl> } <nl> <nl> @ @ - 393 , 8 + 393 , 8 @ @ public final class TreeWalker <nl> visitors = tokenToOrdinaryChecks . get ( tokenType ) ; <nl> } <nl> <nl> - for ( Check c : visitors ) { <nl> - c . visitToken ( ast ) ; <nl> + for ( Check check : visitors ) { <nl> + check . visitToken ( ast ) ; <nl> } <nl> } <nl> <nl> @ @ - 421 , 8 + 421 , 8 @ @ public final class TreeWalker <nl> visitors = tokenToOrdinaryChecks . get ( tokenType ) ; <nl> } <nl> <nl> - for ( Check ch : visitors ) { <nl> - ch . leaveToken ( ast ) ; <nl> + for ( Check check : visitors ) { <nl> + check . leaveToken ( ast ) ; <nl> } <nl> } <nl> <nl> @ @ - 464 , 11 + 464 , 11 @ @ public final class TreeWalker <nl> <nl> @ Override <nl> public void destroy ( ) { <nl> - for ( Check c : ordinaryChecks ) { <nl> - c . destroy ( ) ; <nl> + for ( Check check : ordinaryChecks ) { <nl> + check . destroy ( ) ; <nl> } <nl> - for ( Check c : commentChecks ) { <nl> - c . destroy ( ) ; <nl> + for ( Check check : commentChecks ) { <nl> + check . destroy ( ) ; <nl> } <nl> if ( cache ! = null ) { <nl> try { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Utils . java b / src / main / java / com / puppycrawl / tools / checkstyle / Utils . java <nl> index 18f4450 . . 5ce2f9c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Utils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Utils . java <nl> @ @ - 56 , 14 + 56 , 14 @ @ public final class Utils { <nl> ImmutableMap . builder ( ) ; <nl> final Field [ ] fields = TokenTypes . class . getDeclaredFields ( ) ; <nl> String [ ] tempTokenValueToName = new String [ 0 ] ; <nl> - for ( final Field f : fields ) { <nl> + for ( final Field field : fields ) { <nl> / / Only process the int declarations . <nl> - if ( f . getType ( ) ! = Integer . TYPE ) { <nl> + if ( field . getType ( ) ! = Integer . TYPE ) { <nl> continue ; <nl> } <nl> <nl> - final String name = f . getName ( ) ; <nl> - final int tokenValue = getIntFromField ( f , name ) ; <nl> + final String name = field . getName ( ) ; <nl> + final int tokenValue = getIntFromField ( field , name ) ; <nl> builder . put ( name , tokenValue ) ; <nl> if ( tokenValue > tempTokenValueToName . length - 1 ) { <nl> final String [ ] temp = new String [ tokenValue + 1 ] ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> index 1309fd5 . . 90d1df5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> @ @ - 283 , 13 + 283 , 13 @ @ public class CheckstyleAntTask extends Task { <nl> } <nl> <nl> / / Create the checker <nl> - Checker c = null ; <nl> + Checker checker = null ; <nl> try { <nl> - c = createChecker ( ) ; <nl> + checker = createChecker ( ) ; <nl> <nl> final SeverityLevelCounter warningCounter = <nl> new SeverityLevelCounter ( SeverityLevel . WARNING ) ; <nl> - c . addListener ( warningCounter ) ; <nl> + checker . addListener ( warningCounter ) ; <nl> <nl> / / Process the files <nl> long startTime = System . currentTimeMillis ( ) ; <nl> @ @ - 303 , 7 + 303 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> log ( " Using configuration " + configLocation , Project . MSG _ VERBOSE ) ; <nl> <nl> startTime = System . currentTimeMillis ( ) ; <nl> - final int numErrs = c . process ( files ) ; <nl> + final int numErrs = checker . process ( files ) ; <nl> endTime = System . currentTimeMillis ( ) ; <nl> log ( " To process the files took " + ( endTime - startTime ) + " ms . " , <nl> Project . MSG _ VERBOSE ) ; <nl> @ @ - 326 , 8 + 326 , 8 @ @ public class CheckstyleAntTask extends Task { <nl> } <nl> } <nl> finally { <nl> - if ( c ! = null ) { <nl> - c . destroy ( ) ; <nl> + if ( checker ! = null ) { <nl> + checker . destroy ( ) ; <nl> } <nl> } <nl> } <nl> @ @ - 337 , 7 + 337 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> * @ return new instance of < code > Checker < / code > <nl> * / <nl> private Checker createChecker ( ) { <nl> - Checker c ; <nl> + Checker checker ; <nl> try { <nl> final Properties props = createOverridingProperties ( ) ; <nl> final Configuration config = <nl> @ @ - 355 , 15 + 355 , 15 @ @ public class CheckstyleAntTask extends Task { <nl> Checker . class . getClassLoader ( ) ; <nl> context . add ( " moduleClassLoader " , moduleClassLoader ) ; <nl> <nl> - c = new Checker ( ) ; <nl> + checker = new Checker ( ) ; <nl> <nl> - c . contextualize ( context ) ; <nl> - c . configure ( config ) ; <nl> + checker . contextualize ( context ) ; <nl> + checker . configure ( config ) ; <nl> <nl> / / setup the listeners <nl> final AuditListener [ ] listeners = getListeners ( ) ; <nl> for ( AuditListener element : listeners ) { <nl> - c . addListener ( element ) ; <nl> + checker . addListener ( element ) ; <nl> } <nl> } <nl> catch ( final Exception e ) { <nl> @ @ - 371 , 7 + 371 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> + e . getMessage ( ) , e ) ; <nl> } <nl> <nl> - return c ; <nl> + return checker ; <nl> } <nl> <nl> / * * <nl> @ @ - 437 , 8 + 437 , 8 @ @ public class CheckstyleAntTask extends Task { <nl> } <nl> else { <nl> for ( int i = 0 ; i < formatterCount ; i + + ) { <nl> - final Formatter f = formatters . get ( i ) ; <nl> - listeners [ i ] = f . createListener ( this ) ; <nl> + final Formatter formatter = formatters . get ( i ) ; <nl> + listeners [ i ] = formatter . createListener ( this ) ; <nl> } <nl> } <nl> return listeners ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java <nl> index c8ab139 . . 9ee7a0a 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java <nl> @ @ - 327 , 8 + 327 , 8 @ @ public final class DetailAST extends CommonASTWithHiddenTokens { <nl> * / <nl> public int getChildCount ( int type ) { <nl> int count = 0 ; <nl> - for ( AST i = getFirstChild ( ) ; i ! = null ; i = i . getNextSibling ( ) ) { <nl> - if ( i . getType ( ) = = type ) { <nl> + for ( AST ast = getFirstChild ( ) ; ast ! = null ; ast = ast . getNextSibling ( ) ) { <nl> + if ( ast . getType ( ) = = type ) { <nl> count + + ; <nl> } <nl> } <nl> @ @ - 350 , 9 + 350 , 9 @ @ public final class DetailAST extends CommonASTWithHiddenTokens { <nl> * / <nl> public DetailAST findFirstToken ( int type ) { <nl> DetailAST retVal = null ; <nl> - for ( DetailAST i = getFirstChild ( ) ; i ! = null ; i = i . getNextSibling ( ) ) { <nl> - if ( i . getType ( ) = = type ) { <nl> - retVal = i ; <nl> + for ( DetailAST ast = getFirstChild ( ) ; ast ! = null ; ast = ast . getNextSibling ( ) ) { <nl> + if ( ast . getType ( ) = = type ) { <nl> + retVal = ast ; <nl> break ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java <nl> index e980c97 . . 271c258 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java <nl> @ @ - 155 , 11 + 155 , 11 @ @ public final class FileText extends AbstractList < String > { <nl> final BufferedReader br = <nl> new BufferedReader ( new StringReader ( fullText ) ) ; <nl> while ( true ) { <nl> - final String l = br . readLine ( ) ; <nl> - if ( null = = l ) { <nl> + final String line = br . readLine ( ) ; <nl> + if ( null = = line ) { <nl> break ; <nl> } <nl> - lines . add ( l ) ; <nl> + lines . add ( line ) ; <nl> } <nl> this . lines = lines . toArray ( new String [ lines . size ( ) ] ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> index 985bf72 . . 580be43 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> @ @ - 160 , 8 + 160 , 8 @ @ public class TranslationCheck <nl> List < File > propFiles , String basenameSeparator ) { <nl> final Map < String , Set < File > > propFileMap = Maps . newHashMap ( ) ; <nl> <nl> - for ( final File f : propFiles ) { <nl> - final String identifier = extractPropertyIdentifier ( f , <nl> + for ( final File file : propFiles ) { <nl> + final String identifier = extractPropertyIdentifier ( file , <nl> basenameSeparator ) ; <nl> <nl> Set < File > fileSet = propFileMap . get ( identifier ) ; <nl> @ @ - 169 , 7 + 169 , 7 @ @ public class TranslationCheck <nl> fileSet = Sets . newHashSet ( ) ; <nl> propFileMap . put ( identifier , fileSet ) ; <nl> } <nl> - fileSet . add ( f ) ; <nl> + fileSet . add ( file ) ; <nl> } <nl> return propFileMap ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java <nl> index d384b1e . . b5783e3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java <nl> @ @ - 204 , 11 + 204 , 11 @ @ public abstract class AbstractHeaderCheck extends AbstractFileSetCheck { <nl> final LineNumberReader lnr = new LineNumberReader ( headerReader ) ; <nl> readerLines . clear ( ) ; <nl> while ( true ) { <nl> - final String l = lnr . readLine ( ) ; <nl> - if ( l = = null ) { <nl> + final String line = lnr . readLine ( ) ; <nl> + if ( line = = null ) { <nl> break ; <nl> } <nl> - readerLines . add ( l ) ; <nl> + readerLines . add ( line ) ; <nl> } <nl> postprocessHeaderLines ( ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java <nl> index b3f82d9 . . 3606618 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java <nl> @ @ - 53 , 17 + 53 , 17 @ @ public final class JavadocUtils { <nl> <nl> String [ ] tempTokenValueToName = new String [ 0 ] ; <nl> <nl> - for ( final Field f : fields ) { <nl> + for ( final Field field : fields ) { <nl> <nl> / / Only process public int fields . <nl> - if ( ! Modifier . isPublic ( f . getModifiers ( ) ) <nl> - | | f . getType ( ) ! = Integer . TYPE ) { <nl> + if ( ! Modifier . isPublic ( field . getModifiers ( ) ) <nl> + | | field . getType ( ) ! = Integer . TYPE ) { <nl> continue ; <nl> } <nl> <nl> - final String name = f . getName ( ) ; <nl> + final String name = field . getName ( ) ; <nl> <nl> - final int tokenValue = Utils . getIntFromField ( f , name ) ; <nl> + final int tokenValue = Utils . getIntFromField ( field , name ) ; <nl> builder . put ( name , tokenValue ) ; <nl> if ( tokenValue > tempTokenValueToName . length - 1 ) { <nl> final String [ ] temp = new String [ tokenValue + 1 ] ; <nl> @ @ - 231 , 19 + 231 , 21 @ @ public final class JavadocUtils { <nl> <nl> / * * <nl> * Returns the first child token that has a specified type . <nl> - * @ param node <nl> + * @ param detailNode <nl> * Javadoc AST node <nl> * @ param type <nl> * the token type to match <nl> * @ return the matching token , or null if no match <nl> * / <nl> - public static DetailNode findFirstToken ( DetailNode node , int type ) { <nl> + public static DetailNode findFirstToken ( DetailNode detailNode , int type ) { <nl> DetailNode retVal = null ; <nl> - for ( DetailNode i = getFirstChild ( node ) ; i ! = null ; i = getNextSibling ( i ) ) { <nl> - if ( i . getType ( ) = = type ) { <nl> - retVal = i ; <nl> + DetailNode node = getFirstChild ( detailNode ) ; <nl> + while ( node ! = null ) { <nl> + if ( node . getType ( ) = = type ) { <nl> + retVal = node ; <nl> break ; <nl> } <nl> + node = getNextSibling ( node ) ; <nl> } <nl> return retVal ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java <nl> index 95915ee . . b8f57c7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java <nl> @ @ - 205 , 8 + 205 , 8 @ @ public class JavaNCSSCheck extends Check { <nl> / / check if token is countable <nl> if ( isCountable ( ast ) ) { <nl> / / increment the stacked counters <nl> - for ( final Counter c : counters ) { <nl> - c . increment ( ) ; <nl> + for ( final Counter counter : counters ) { <nl> + counter . increment ( ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java <nl> index 655b34d . . 42422d2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java <nl> @ @ - 111 , 14 + 111 , 14 @ @ public class AbstractCellEditor implements CellEditor { <nl> <nl> / * * @ see CellEditor * / <nl> @ Override <nl> - public void addCellEditorListener ( CellEditorListener l ) { <nl> - listenerList . add ( CellEditorListener . class , l ) ; <nl> + public void addCellEditorListener ( CellEditorListener listener ) { <nl> + listenerList . add ( CellEditorListener . class , listener ) ; <nl> } <nl> <nl> / * * @ see CellEditor * / <nl> @ Override <nl> - public void removeCellEditorListener ( CellEditorListener l ) { <nl> - listenerList . remove ( CellEditorListener . class , l ) ; <nl> + public void removeCellEditorListener ( CellEditorListener listener ) { <nl> + listenerList . remove ( CellEditorListener . class , listener ) ; <nl> } <nl> <nl> / * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractTreeTableModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractTreeTableModel . java <nl> index 81b5474 . . 93041e8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractTreeTableModel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractTreeTableModel . java <nl> @ @ - 109 , 13 + 109 , 13 @ @ public abstract class AbstractTreeTableModel implements TreeTableModel { <nl> } <nl> <nl> @ Override <nl> - public void addTreeModelListener ( TreeModelListener l ) { <nl> - listenerList . add ( TreeModelListener . class , l ) ; <nl> + public void addTreeModelListener ( TreeModelListener listener ) { <nl> + listenerList . add ( TreeModelListener . class , listener ) ; <nl> } <nl> <nl> @ Override <nl> - public void removeTreeModelListener ( TreeModelListener l ) { <nl> - listenerList . remove ( TreeModelListener . class , l ) ; <nl> + public void removeTreeModelListener ( TreeModelListener listener ) { <nl> + listenerList . remove ( TreeModelListener . class , listener ) ; <nl> } <nl> <nl> / * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java <nl> index 85d75cf . . 423c4cc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java <nl> @ @ - 88 , 15 + 88 , 15 @ @ class FileDrop { <nl> * sets all elements contained within as drop targets , though only <nl> * the top level container will change borders . <nl> * <nl> - * @ param c Component on which files will be dropped . <nl> + * @ param component Component on which files will be dropped . <nl> * @ param listener Listens for < tt > filesDropped < / tt > . <nl> * @ since 1 . 0 <nl> * / <nl> FileDrop ( <nl> - final Component c , <nl> + final Component component , <nl> final Listener listener ) <nl> throws TooManyListenersException { <nl> - this ( c , / / Drop target <nl> + this ( component , / / Drop target <nl> BorderFactory . createMatteBorder ( 2 , 2 , 2 , 2 , DEFAULT _ BORDER _ COLOR ) , / / Drag border <nl> true , / / Recursive <nl> listener ) ; <nl> @ @ - 109 , 23 + 109 , 23 @ @ class FileDrop { <nl> * < tt > System . out < / tt > or < tt > System . err < / tt > . A < tt > null < / tt > value for <nl> * the parameter < tt > out < / tt > will result in no debugging output . <nl> * <nl> - * @ param c Component on which files will be dropped . <nl> + * @ param component Component on which files will be dropped . <nl> * @ param dragBorder Border to use on < tt > JComponent < / tt > when dragging occurs . <nl> * @ param recursive Recursively set children as drop targets . <nl> * @ param listener Listens for < tt > filesDropped < / tt > . <nl> * @ since 1 . 0 <nl> * / <nl> FileDrop ( <nl> - final Component c , <nl> + final Component component , <nl> final Border dragBorder , <nl> final boolean recursive , <nl> final Listener listener ) <nl> throws TooManyListenersException { <nl> - dropListener = new FileDropTargetListener ( c , dragBorder , listener ) ; <nl> - makeDropTarget ( c , recursive ) ; <nl> + dropListener = new FileDropTargetListener ( component , dragBorder , listener ) ; <nl> + makeDropTarget ( component , recursive ) ; <nl> } <nl> <nl> - private void makeDropTarget ( final Component c , boolean recursive ) <nl> + private void makeDropTarget ( final Component component , boolean recursive ) <nl> throws TooManyListenersException { <nl> / / Make drop target <nl> final DropTarget dt = new DropTarget ( ) ; <nl> @ @ - 133 , 25 + 133 , 25 @ @ class FileDrop { <nl> <nl> / / Listen for hierarchy changes and remove the <nl> / / drop target when the parent gets cleared out . <nl> - c . addHierarchyListener ( new HierarchyListener ( ) { <nl> + component . addHierarchyListener ( new HierarchyListener ( ) { <nl> @ Override <nl> public void hierarchyChanged ( HierarchyEvent evt ) { <nl> - final Component parent = c . getParent ( ) ; <nl> + final Component parent = component . getParent ( ) ; <nl> if ( parent = = null ) { <nl> - c . setDropTarget ( null ) ; <nl> + component . setDropTarget ( null ) ; <nl> } <nl> else { <nl> - new DropTarget ( c , dropListener ) ; <nl> + new DropTarget ( component , dropListener ) ; <nl> } <nl> } <nl> } ) ; <nl> <nl> - if ( c . getParent ( ) ! = null ) { <nl> - new DropTarget ( c , dropListener ) ; <nl> + if ( component . getParent ( ) ! = null ) { <nl> + new DropTarget ( component , dropListener ) ; <nl> } <nl> <nl> - if ( recursive & & c instanceof Container ) { <nl> - final Container cont = ( Container ) c ; <nl> + if ( recursive & & component instanceof Container ) { <nl> + final Container cont = ( Container ) component ; <nl> final Component [ ] comps = cont . getComponents ( ) ; <nl> for ( Component element : comps ) { <nl> makeDropTarget ( element , recursive ) ; <nl> @ @ - 183 , 11 + 183 , 11 @ @ class FileDrop { <nl> * This will recursively unregister all components contained within <nl> * < var > c < / var > if < var > c < / var > is a { @ link Container } . <nl> * <nl> - * @ param c The component to unregister as a drop target <nl> + * @ param component The component to unregister as a drop target <nl> * @ since 1 . 0 <nl> * / <nl> - static void remove ( Component c ) { <nl> - remove ( c , true ) ; <nl> + static void remove ( Component component ) { <nl> + remove ( component , true ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 195 , 14 + 195 , 14 @ @ class FileDrop { <nl> * from the all children . You should call this if you add and remove <nl> * components after you ' ve set up the drag - and - drop . <nl> * <nl> - * @ param c The component to unregister <nl> + * @ param component The component to unregister <nl> * @ param recursive Recursively unregister components within a container <nl> * @ since 1 . 0 <nl> * / <nl> - static void remove ( Component c , boolean recursive ) { <nl> - c . setDropTarget ( null ) ; <nl> - if ( recursive & & c instanceof Container ) { <nl> - final Component [ ] comps = ( ( Container ) c ) . getComponents ( ) ; <nl> + static void remove ( Component component , boolean recursive ) { <nl> + component . setDropTarget ( null ) ; <nl> + if ( recursive & & component instanceof Container ) { <nl> + final Component [ ] comps = ( ( Container ) component ) . getComponents ( ) ; <nl> for ( Component element : comps ) { <nl> remove ( element , recursive ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> index b979e9e . . 17b0614 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> @ @ - 320 , 7 + 320 , 7 @ @ public class JTreeTable extends JTable { <nl> public Component getTableCellEditorComponent ( JTable table , <nl> Object value , <nl> boolean isSelected , <nl> - int r , int c ) { <nl> + int row , int column ) { <nl> return tree ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> index 392e5ce . . 1680ce0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> @ @ - 43 , 8 + 43 , 8 @ @ public class Main { <nl> final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; <nl> frame . getContentPane ( ) . add ( panel ) ; <nl> if ( args . length > = 1 ) { <nl> - final File f = new File ( args [ 0 ] ) ; <nl> - panel . openFile ( f , frame ) ; <nl> + final File file = new File ( args [ 0 ] ) ; <nl> + panel . openFile ( file , frame ) ; <nl> } <nl> frame . setDefaultCloseOperation ( JFrame . EXIT _ ON _ CLOSE ) ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> index 8a11856 . . ca59301 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> @ @ - 68 , 11 + 68 , 11 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> <nl> private static class JavaFileFilter extends FileFilter { <nl> @ Override <nl> - public boolean accept ( File f ) { <nl> - if ( f = = null ) { <nl> + public boolean accept ( File file ) { <nl> + if ( file = = null ) { <nl> return false ; <nl> } <nl> - return f . isDirectory ( ) | | f . getName ( ) . endsWith ( " . java " ) ; <nl> + return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; <nl> } <nl> <nl> @ Override

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 index 2f0cf62 . . f37f12d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 @ @ - 335 , 20 + 335 , 7 @ @ public final class ConfigurationLoader { 
 fragments . add ( String . valueOf ( DOLLAR _ SIGN ) ) ; 
 prev = pos + 1 ; 
 } 
 - else if ( value . charAt ( pos + 1 ) ! = ' { ' ) { 
 - if ( value . charAt ( pos + 1 ) = = DOLLAR _ SIGN ) { 
 - / / backwards compatibility two $ map to one mode 
 - fragments . add ( String . valueOf ( DOLLAR _ SIGN ) ) ; 
 - prev = pos + 2 ; 
 - } 
 - else { 
 - / / new behaviour : $ X maps to $ X for all values of X ! = ' $ ' 
 - fragments . add ( value . substring ( pos , pos + 2 ) ) ; 
 - prev = pos + 2 ; 
 - } 
 - 
 - } 
 - else { 
 + else if ( value . charAt ( pos + 1 ) = = ' { ' ) { 
 / / property found , extract its name or bail on a typo 
 final int endName = value . indexOf ( ' } ' , pos ) ; 
 if ( endName < 0 ) { 
 @ @ - 360 , 6 + 347 , 18 @ @ public final class ConfigurationLoader { 
 propertyRefs . add ( propertyName ) ; 
 prev = endName + 1 ; 
 } 
 + else { 
 + if ( value . charAt ( pos + 1 ) = = DOLLAR _ SIGN ) { 
 + / / backwards compatibility two $ map to one mode 
 + fragments . add ( String . valueOf ( DOLLAR _ SIGN ) ) ; 
 + prev = pos + 2 ; 
 + } 
 + else { 
 + / / new behaviour : $ X maps to $ X for all values of X ! = ' $ ' 
 + fragments . add ( value . substring ( pos , pos + 2 ) ) ; 
 + prev = pos + 2 ; 
 + } 
 + } 
 
 / / search for the next instance of $ from the ' prev ' position 
 pos = value . indexOf ( DOLLAR _ SIGN , prev ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index 6750215 . . fa77ad1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 327 , 14 + 327 , 14 @ @ public final class Main { 
 / / setup the output stream 
 OutputStream out ; 
 boolean closeOutputStream ; 
 - if ( outputLocation ! = null ) { 
 - out = new FileOutputStream ( outputLocation ) ; 
 - closeOutputStream = true ; 
 - } 
 - else { 
 + if ( outputLocation = = null ) { 
 out = System . out ; 
 closeOutputStream = false ; 
 } 
 + else { 
 + out = new FileOutputStream ( outputLocation ) ; 
 + closeOutputStream = true ; 
 + } 
 
 / / setup a listener 
 AuditListener listener ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java 
 index 3bbeb73 . . e8ea3c7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java 
 @ @ - 213 , 11 + 213 , 11 @ @ public abstract class AbstractDeclarationCollector extends Check { 
 * @ return LexicalFrame containing declaration or null 
 * / 
 private LexicalFrame findFrame ( String name ) { 
 - if ( current ! = null ) { 
 - return current . getIfContains ( name ) ; 
 + if ( current = = null ) { 
 + return null ; 
 } 
 else { 
 - return null ; 
 + return current . getIfContains ( name ) ; 
 } 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 index 1da4985 . . 744afd6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 @ @ - 252 , 17 + 252 , 16 @ @ public class AvoidEscapedUnicodeCharactersCheck 
 final DetailAST variableDef = getVariableDef ( ast ) ; 
 DetailAST semi ; 
 
 - if ( variableDef ! = null ) { 
 - 
 + if ( variableDef = = null ) { 
 + semi = getSemi ( ast ) ; 
 + } 
 + else { 
 semi = variableDef . getNextSibling ( ) ; 
 
 if ( semi . getType ( ) ! = TokenTypes . SEMI ) { 
 semi = variableDef . getLastChild ( ) ; 
 } 
 } 
 - else { 
 - semi = getSemi ( ast ) ; 
 - } 
 
 boolean result = false ; 
 if ( semi ! = null ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 9210986 . . 1934186 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 214 , 14 + 214 , 14 @ @ public class SuppressWarningsHolder 
 final DetailAST nextAST = targetAST . getNextSibling ( ) ; 
 final int lastLine ; 
 final int lastColumn ; 
 - if ( nextAST ! = null ) { 
 - lastLine = nextAST . getLineNo ( ) ; 
 - lastColumn = nextAST . getColumnNo ( ) - 1 ; 
 - } 
 - else { 
 + if ( nextAST = = null ) { 
 lastLine = Integer . MAX _ VALUE ; 
 lastColumn = Integer . MAX _ VALUE ; 
 } 
 + else { 
 + lastLine = nextAST . getLineNo ( ) ; 
 + lastColumn = nextAST . getColumnNo ( ) - 1 ; 
 + } 
 
 / / add suppression entries for listed checks 
 final List < Entry > entries = ENTRIES . get ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 index d18934f . . 90ae3b5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 @ @ - 218 , 19 + 218 , 18 @ @ public final class MissingDeprecatedCheck extends Check { 
 if ( multilineCont . find ( ) ) { 
 reindex = lines . length ; 
 final String lFin = multilineCont . group ( 1 ) ; 
 - if ( ! lFin . equals ( NEXT _ TAG ) 
 - & & ! lFin . equals ( END _ JAVADOC ) ) { 
 + if ( lFin . equals ( NEXT _ TAG ) | | lFin . equals ( END _ JAVADOC ) ) { 
 + log ( currentLine , MSG _ KEY _ JAVADOC _ MISSING ) ; 
 if ( foundBefore ) { 
 log ( currentLine , MSG _ KEY _ JAVADOC _ DUPLICATE _ TAG , 
 - JavadocTagInfo . DEPRECATED . getText ( ) ) ; 
 + JavadocTagInfo . DEPRECATED . getText ( ) ) ; 
 } 
 found = true ; 
 } 
 else { 
 - log ( currentLine , MSG _ KEY _ JAVADOC _ MISSING ) ; 
 if ( foundBefore ) { 
 log ( currentLine , MSG _ KEY _ JAVADOC _ DUPLICATE _ TAG , 
 - JavadocTagInfo . DEPRECATED . getText ( ) ) ; 
 + JavadocTagInfo . DEPRECATED . getText ( ) ) ; 
 } 
 found = true ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java 
 index 4126db0 . . 9f54c75 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java 
 @ @ - 156 , 12 + 156 , 12 @ @ public class SuppressWarningsCheck extends AbstractFormatCheck { 
 warningHolder . findFirstToken ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) ; 
 DetailAST warning ; 
 
 - if ( token ! = null ) { 
 - / / case like ' @ SuppressWarnings ( value = UNUSED ) ' 
 - warning = token . findFirstToken ( TokenTypes . EXPR ) ; 
 + if ( token = = null ) { 
 + warning = warningHolder . findFirstToken ( TokenTypes . EXPR ) ; 
 } 
 else { 
 - warning = warningHolder . findFirstToken ( TokenTypes . EXPR ) ; 
 + / / case like ' @ SuppressWarnings ( value = UNUSED ) ' 
 + warning = token . findFirstToken ( TokenTypes . EXPR ) ; 
 } 
 
 / / rare case with empty array ex : @ SuppressWarnings ( { } ) 
 @ @ - 252 , 13 + 252 , 13 @ @ public class SuppressWarningsCheck extends AbstractFormatCheck { 
 annotation . findFirstToken ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) ; 
 final DetailAST annArrayInit ; 
 
 - if ( annValuePair ! = null ) { 
 + if ( annValuePair = = null ) { 
 annArrayInit = 
 - annValuePair . findFirstToken ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ; 
 + annotation . findFirstToken ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ; 
 } 
 else { 
 annArrayInit = 
 - annotation . findFirstToken ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ; 
 + annValuePair . findFirstToken ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ; 
 } 
 
 if ( annArrayInit ! = null ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 index f4ad906 . . 9a9b9c0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 @ @ - 193 , 16 + 193 , 14 @ @ public class EmptyBlockCheck 
 } 
 else { 
 / / check only whitespace of first & last lines 
 - if ( ! lines [ slistLineNo - 1 ] 
 - . substring ( slistColNo + 1 ) . trim ( ) . isEmpty ( ) 
 - | | ! lines [ rcurlyLineNo - 1 ] 
 - . substring ( 0 , rcurlyColNo ) . trim ( ) . isEmpty ( ) ) { 
 - retVal = true ; 
 - } 
 - else { 
 + if ( lines [ slistLineNo - 1 ] . substring ( slistColNo + 1 ) . trim ( ) . isEmpty ( ) 
 + & & lines [ rcurlyLineNo - 1 ] . substring ( 0 , rcurlyColNo ) . trim ( ) . isEmpty ( ) ) { 
 / / check if all lines are also only whitespace 
 retVal = ! checkIsAllLinesAreWhitespace ( lines , slistLineNo , rcurlyLineNo ) ; 
 } 
 + else { 
 + retVal = true ; 
 + } 
 } 
 return retVal ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 index 8ef7bc6 . . d9c8b97 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 @ @ - 297 , 11 + 297 , 11 @ @ public class NeedBracesCheck extends Check { 
 private static DetailAST findExpressionBlockInForLoop ( DetailAST literalFor ) { 
 final DetailAST forEachClause = literalFor . findFirstToken ( TokenTypes . FOR _ EACH _ CLAUSE ) ; 
 final DetailAST firstToken ; 
 - if ( forEachClause ! = null ) { 
 - firstToken = forEachClause . findFirstToken ( TokenTypes . EXPR ) ; 
 + if ( forEachClause = = null ) { 
 + firstToken = literalFor . findFirstToken ( TokenTypes . EXPR ) ; 
 } 
 else { 
 - firstToken = literalFor . findFirstToken ( TokenTypes . EXPR ) ; 
 + firstToken = forEachClause . findFirstToken ( TokenTypes . EXPR ) ; 
 } 
 return firstToken ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index ad1e66a . . 359a7c0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 325 , 16 + 325 , 16 @ @ public class RightCurlyCheck extends AbstractOptionCheck < RightCurlyOption > { 
 break ; 
 case TokenTypes . LITERAL _ IF : 
 nextToken = ast . findFirstToken ( TokenTypes . LITERAL _ ELSE ) ; 
 - if ( nextToken ! = null ) { 
 - lcurly = nextToken . getPreviousSibling ( ) ; 
 - rcurly = lcurly . getLastChild ( ) ; 
 - } 
 - else { 
 + if ( nextToken = = null ) { 
 shouldCheckLastRcurly = true ; 
 nextToken = getNextToken ( ast ) ; 
 lcurly = ast . getLastChild ( ) ; 
 rcurly = lcurly . getLastChild ( ) ; 
 } 
 + else { 
 + lcurly = nextToken . getPreviousSibling ( ) ; 
 + rcurly = lcurly . getLastChild ( ) ; 
 + } 
 break ; 
 case TokenTypes . LITERAL _ ELSE : 
 case TokenTypes . LITERAL _ FINALLY :

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 index c8f04fb . . 427bd3b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 @ @ - 247 , 18 + 247 , 18 @ @ public class Checker extends AutomaticBean implements MessageDispatcher { 
 } 
 
 / / Process each file 
 - for ( final File f : files ) { 
 - if ( ! Utils . fileExtensionMatches ( f , fileExtensions ) ) { 
 + for ( final File file : files ) { 
 + if ( ! Utils . fileExtensionMatches ( file , fileExtensions ) ) { 
 continue ; 
 } 
 - final String fileName = f . getAbsolutePath ( ) ; 
 + final String fileName = file . getAbsolutePath ( ) ; 
 fireFileStarted ( fileName ) ; 
 final SortedSet < LocalizedMessage > fileMessages = Sets . newTreeSet ( ) ; 
 try { 
 - final FileText theText = new FileText ( f . getAbsoluteFile ( ) , 
 + final FileText theText = new FileText ( file . getAbsoluteFile ( ) , 
 charset ) ; 
 for ( final FileSetCheck fsc : fileSetChecks ) { 
 - fileMessages . addAll ( fsc . process ( f , theText ) ) ; 
 + fileMessages . addAll ( fsc . process ( file , theText ) ) ; 
 } 
 } 
 catch ( final IOException ioe ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 index 2959416 . . 96fc724 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 @ @ - 437 , 12 + 437 , 12 @ @ public final class ConfigurationLoader { 
 parsePropertyString ( value , fragments , propertyRefs ) ; 
 
 final StringBuilder sb = new StringBuilder ( ) ; 
 - final Iterator < String > i = fragments . iterator ( ) ; 
 - final Iterator < String > j = propertyRefs . iterator ( ) ; 
 - while ( i . hasNext ( ) ) { 
 - String fragment = i . next ( ) ; 
 + final Iterator < String > fragmentsIterator = fragments . iterator ( ) ; 
 + final Iterator < String > propertyRefsIterator = propertyRefs . iterator ( ) ; 
 + while ( fragmentsIterator . hasNext ( ) ) { 
 + String fragment = fragmentsIterator . next ( ) ; 
 if ( fragment = = null ) { 
 - final String propertyName = j . next ( ) ; 
 + final String propertyName = propertyRefsIterator . next ( ) ; 
 fragment = props . resolve ( propertyName ) ; 
 if ( fragment = = null ) { 
 if ( defaultValue ! = null ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 index 8520eae . . cbe74ce 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 @ @ - 170 , 12 + 170 , 12 @ @ public final class TreeWalker 
 throw new CheckstyleException ( 
 " TreeWalker is not allowed as a parent of " + name ) ; 
 } 
 - final Check c = ( Check ) module ; 
 - c . contextualize ( childContext ) ; 
 - c . configure ( childConf ) ; 
 - c . init ( ) ; 
 + final Check check = ( Check ) module ; 
 + check . contextualize ( childContext ) ; 
 + check . configure ( childConf ) ; 
 + check . init ( ) ; 
 
 - registerCheck ( c ) ; 
 + registerCheck ( check ) ; 
 } 
 
 @ Override 
 @ @ - 345 , 9 + 345 , 9 @ @ public final class TreeWalker 
 checks = ordinaryChecks ; 
 } 
 
 - for ( Check ch : checks ) { 
 - ch . setFileContents ( contents ) ; 
 - ch . beginTree ( rootAST ) ; 
 + for ( Check check : checks ) { 
 + check . setFileContents ( contents ) ; 
 + check . beginTree ( rootAST ) ; 
 } 
 } 
 
 @ @ - 366 , 8 + 366 , 8 @ @ public final class TreeWalker 
 checks = ordinaryChecks ; 
 } 
 
 - for ( Check ch : checks ) { 
 - ch . finishTree ( rootAST ) ; 
 + for ( Check check : checks ) { 
 + check . finishTree ( rootAST ) ; 
 } 
 } 
 
 @ @ - 393 , 8 + 393 , 8 @ @ public final class TreeWalker 
 visitors = tokenToOrdinaryChecks . get ( tokenType ) ; 
 } 
 
 - for ( Check c : visitors ) { 
 - c . visitToken ( ast ) ; 
 + for ( Check check : visitors ) { 
 + check . visitToken ( ast ) ; 
 } 
 } 
 
 @ @ - 421 , 8 + 421 , 8 @ @ public final class TreeWalker 
 visitors = tokenToOrdinaryChecks . get ( tokenType ) ; 
 } 
 
 - for ( Check ch : visitors ) { 
 - ch . leaveToken ( ast ) ; 
 + for ( Check check : visitors ) { 
 + check . leaveToken ( ast ) ; 
 } 
 } 
 
 @ @ - 464 , 11 + 464 , 11 @ @ public final class TreeWalker 
 
 @ Override 
 public void destroy ( ) { 
 - for ( Check c : ordinaryChecks ) { 
 - c . destroy ( ) ; 
 + for ( Check check : ordinaryChecks ) { 
 + check . destroy ( ) ; 
 } 
 - for ( Check c : commentChecks ) { 
 - c . destroy ( ) ; 
 + for ( Check check : commentChecks ) { 
 + check . destroy ( ) ; 
 } 
 if ( cache ! = null ) { 
 try { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Utils . java b / src / main / java / com / puppycrawl / tools / checkstyle / Utils . java 
 index 18f4450 . . 5ce2f9c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Utils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Utils . java 
 @ @ - 56 , 14 + 56 , 14 @ @ public final class Utils { 
 ImmutableMap . builder ( ) ; 
 final Field [ ] fields = TokenTypes . class . getDeclaredFields ( ) ; 
 String [ ] tempTokenValueToName = new String [ 0 ] ; 
 - for ( final Field f : fields ) { 
 + for ( final Field field : fields ) { 
 / / Only process the int declarations . 
 - if ( f . getType ( ) ! = Integer . TYPE ) { 
 + if ( field . getType ( ) ! = Integer . TYPE ) { 
 continue ; 
 } 
 
 - final String name = f . getName ( ) ; 
 - final int tokenValue = getIntFromField ( f , name ) ; 
 + final String name = field . getName ( ) ; 
 + final int tokenValue = getIntFromField ( field , name ) ; 
 builder . put ( name , tokenValue ) ; 
 if ( tokenValue > tempTokenValueToName . length - 1 ) { 
 final String [ ] temp = new String [ tokenValue + 1 ] ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 index 1309fd5 . . 90d1df5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 @ @ - 283 , 13 + 283 , 13 @ @ public class CheckstyleAntTask extends Task { 
 } 
 
 / / Create the checker 
 - Checker c = null ; 
 + Checker checker = null ; 
 try { 
 - c = createChecker ( ) ; 
 + checker = createChecker ( ) ; 
 
 final SeverityLevelCounter warningCounter = 
 new SeverityLevelCounter ( SeverityLevel . WARNING ) ; 
 - c . addListener ( warningCounter ) ; 
 + checker . addListener ( warningCounter ) ; 
 
 / / Process the files 
 long startTime = System . currentTimeMillis ( ) ; 
 @ @ - 303 , 7 + 303 , 7 @ @ public class CheckstyleAntTask extends Task { 
 log ( " Using configuration " + configLocation , Project . MSG _ VERBOSE ) ; 
 
 startTime = System . currentTimeMillis ( ) ; 
 - final int numErrs = c . process ( files ) ; 
 + final int numErrs = checker . process ( files ) ; 
 endTime = System . currentTimeMillis ( ) ; 
 log ( " To process the files took " + ( endTime - startTime ) + " ms . " , 
 Project . MSG _ VERBOSE ) ; 
 @ @ - 326 , 8 + 326 , 8 @ @ public class CheckstyleAntTask extends Task { 
 } 
 } 
 finally { 
 - if ( c ! = null ) { 
 - c . destroy ( ) ; 
 + if ( checker ! = null ) { 
 + checker . destroy ( ) ; 
 } 
 } 
 } 
 @ @ - 337 , 7 + 337 , 7 @ @ public class CheckstyleAntTask extends Task { 
 * @ return new instance of < code > Checker < / code > 
 * / 
 private Checker createChecker ( ) { 
 - Checker c ; 
 + Checker checker ; 
 try { 
 final Properties props = createOverridingProperties ( ) ; 
 final Configuration config = 
 @ @ - 355 , 15 + 355 , 15 @ @ public class CheckstyleAntTask extends Task { 
 Checker . class . getClassLoader ( ) ; 
 context . add ( " moduleClassLoader " , moduleClassLoader ) ; 
 
 - c = new Checker ( ) ; 
 + checker = new Checker ( ) ; 
 
 - c . contextualize ( context ) ; 
 - c . configure ( config ) ; 
 + checker . contextualize ( context ) ; 
 + checker . configure ( config ) ; 
 
 / / setup the listeners 
 final AuditListener [ ] listeners = getListeners ( ) ; 
 for ( AuditListener element : listeners ) { 
 - c . addListener ( element ) ; 
 + checker . addListener ( element ) ; 
 } 
 } 
 catch ( final Exception e ) { 
 @ @ - 371 , 7 + 371 , 7 @ @ public class CheckstyleAntTask extends Task { 
 + e . getMessage ( ) , e ) ; 
 } 
 
 - return c ; 
 + return checker ; 
 } 
 
 / * * 
 @ @ - 437 , 8 + 437 , 8 @ @ public class CheckstyleAntTask extends Task { 
 } 
 else { 
 for ( int i = 0 ; i < formatterCount ; i + + ) { 
 - final Formatter f = formatters . get ( i ) ; 
 - listeners [ i ] = f . createListener ( this ) ; 
 + final Formatter formatter = formatters . get ( i ) ; 
 + listeners [ i ] = formatter . createListener ( this ) ; 
 } 
 } 
 return listeners ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java 
 index c8ab139 . . 9ee7a0a 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java 
 @ @ - 327 , 8 + 327 , 8 @ @ public final class DetailAST extends CommonASTWithHiddenTokens { 
 * / 
 public int getChildCount ( int type ) { 
 int count = 0 ; 
 - for ( AST i = getFirstChild ( ) ; i ! = null ; i = i . getNextSibling ( ) ) { 
 - if ( i . getType ( ) = = type ) { 
 + for ( AST ast = getFirstChild ( ) ; ast ! = null ; ast = ast . getNextSibling ( ) ) { 
 + if ( ast . getType ( ) = = type ) { 
 count + + ; 
 } 
 } 
 @ @ - 350 , 9 + 350 , 9 @ @ public final class DetailAST extends CommonASTWithHiddenTokens { 
 * / 
 public DetailAST findFirstToken ( int type ) { 
 DetailAST retVal = null ; 
 - for ( DetailAST i = getFirstChild ( ) ; i ! = null ; i = i . getNextSibling ( ) ) { 
 - if ( i . getType ( ) = = type ) { 
 - retVal = i ; 
 + for ( DetailAST ast = getFirstChild ( ) ; ast ! = null ; ast = ast . getNextSibling ( ) ) { 
 + if ( ast . getType ( ) = = type ) { 
 + retVal = ast ; 
 break ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java 
 index e980c97 . . 271c258 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java 
 @ @ - 155 , 11 + 155 , 11 @ @ public final class FileText extends AbstractList < String > { 
 final BufferedReader br = 
 new BufferedReader ( new StringReader ( fullText ) ) ; 
 while ( true ) { 
 - final String l = br . readLine ( ) ; 
 - if ( null = = l ) { 
 + final String line = br . readLine ( ) ; 
 + if ( null = = line ) { 
 break ; 
 } 
 - lines . add ( l ) ; 
 + lines . add ( line ) ; 
 } 
 this . lines = lines . toArray ( new String [ lines . size ( ) ] ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 index 985bf72 . . 580be43 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 @ @ - 160 , 8 + 160 , 8 @ @ public class TranslationCheck 
 List < File > propFiles , String basenameSeparator ) { 
 final Map < String , Set < File > > propFileMap = Maps . newHashMap ( ) ; 
 
 - for ( final File f : propFiles ) { 
 - final String identifier = extractPropertyIdentifier ( f , 
 + for ( final File file : propFiles ) { 
 + final String identifier = extractPropertyIdentifier ( file , 
 basenameSeparator ) ; 
 
 Set < File > fileSet = propFileMap . get ( identifier ) ; 
 @ @ - 169 , 7 + 169 , 7 @ @ public class TranslationCheck 
 fileSet = Sets . newHashSet ( ) ; 
 propFileMap . put ( identifier , fileSet ) ; 
 } 
 - fileSet . add ( f ) ; 
 + fileSet . add ( file ) ; 
 } 
 return propFileMap ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java 
 index d384b1e . . b5783e3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java 
 @ @ - 204 , 11 + 204 , 11 @ @ public abstract class AbstractHeaderCheck extends AbstractFileSetCheck { 
 final LineNumberReader lnr = new LineNumberReader ( headerReader ) ; 
 readerLines . clear ( ) ; 
 while ( true ) { 
 - final String l = lnr . readLine ( ) ; 
 - if ( l = = null ) { 
 + final String line = lnr . readLine ( ) ; 
 + if ( line = = null ) { 
 break ; 
 } 
 - readerLines . add ( l ) ; 
 + readerLines . add ( line ) ; 
 } 
 postprocessHeaderLines ( ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java 
 index b3f82d9 . . 3606618 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java 
 @ @ - 53 , 17 + 53 , 17 @ @ public final class JavadocUtils { 
 
 String [ ] tempTokenValueToName = new String [ 0 ] ; 
 
 - for ( final Field f : fields ) { 
 + for ( final Field field : fields ) { 
 
 / / Only process public int fields . 
 - if ( ! Modifier . isPublic ( f . getModifiers ( ) ) 
 - | | f . getType ( ) ! = Integer . TYPE ) { 
 + if ( ! Modifier . isPublic ( field . getModifiers ( ) ) 
 + | | field . getType ( ) ! = Integer . TYPE ) { 
 continue ; 
 } 
 
 - final String name = f . getName ( ) ; 
 + final String name = field . getName ( ) ; 
 
 - final int tokenValue = Utils . getIntFromField ( f , name ) ; 
 + final int tokenValue = Utils . getIntFromField ( field , name ) ; 
 builder . put ( name , tokenValue ) ; 
 if ( tokenValue > tempTokenValueToName . length - 1 ) { 
 final String [ ] temp = new String [ tokenValue + 1 ] ; 
 @ @ - 231 , 19 + 231 , 21 @ @ public final class JavadocUtils { 
 
 / * * 
 * Returns the first child token that has a specified type . 
 - * @ param node 
 + * @ param detailNode 
 * Javadoc AST node 
 * @ param type 
 * the token type to match 
 * @ return the matching token , or null if no match 
 * / 
 - public static DetailNode findFirstToken ( DetailNode node , int type ) { 
 + public static DetailNode findFirstToken ( DetailNode detailNode , int type ) { 
 DetailNode retVal = null ; 
 - for ( DetailNode i = getFirstChild ( node ) ; i ! = null ; i = getNextSibling ( i ) ) { 
 - if ( i . getType ( ) = = type ) { 
 - retVal = i ; 
 + DetailNode node = getFirstChild ( detailNode ) ; 
 + while ( node ! = null ) { 
 + if ( node . getType ( ) = = type ) { 
 + retVal = node ; 
 break ; 
 } 
 + node = getNextSibling ( node ) ; 
 } 
 return retVal ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java 
 index 95915ee . . b8f57c7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java 
 @ @ - 205 , 8 + 205 , 8 @ @ public class JavaNCSSCheck extends Check { 
 / / check if token is countable 
 if ( isCountable ( ast ) ) { 
 / / increment the stacked counters 
 - for ( final Counter c : counters ) { 
 - c . increment ( ) ; 
 + for ( final Counter counter : counters ) { 
 + counter . increment ( ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java 
 index 655b34d . . 42422d2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java 
 @ @ - 111 , 14 + 111 , 14 @ @ public class AbstractCellEditor implements CellEditor { 
 
 / * * @ see CellEditor * / 
 @ Override 
 - public void addCellEditorListener ( CellEditorListener l ) { 
 - listenerList . add ( CellEditorListener . class , l ) ; 
 + public void addCellEditorListener ( CellEditorListener listener ) { 
 + listenerList . add ( CellEditorListener . class , listener ) ; 
 } 
 
 / * * @ see CellEditor * / 
 @ Override 
 - public void removeCellEditorListener ( CellEditorListener l ) { 
 - listenerList . remove ( CellEditorListener . class , l ) ; 
 + public void removeCellEditorListener ( CellEditorListener listener ) { 
 + listenerList . remove ( CellEditorListener . class , listener ) ; 
 } 
 
 / * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractTreeTableModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractTreeTableModel . java 
 index 81b5474 . . 93041e8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractTreeTableModel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractTreeTableModel . java 
 @ @ - 109 , 13 + 109 , 13 @ @ public abstract class AbstractTreeTableModel implements TreeTableModel { 
 } 
 
 @ Override 
 - public void addTreeModelListener ( TreeModelListener l ) { 
 - listenerList . add ( TreeModelListener . class , l ) ; 
 + public void addTreeModelListener ( TreeModelListener listener ) { 
 + listenerList . add ( TreeModelListener . class , listener ) ; 
 } 
 
 @ Override 
 - public void removeTreeModelListener ( TreeModelListener l ) { 
 - listenerList . remove ( TreeModelListener . class , l ) ; 
 + public void removeTreeModelListener ( TreeModelListener listener ) { 
 + listenerList . remove ( TreeModelListener . class , listener ) ; 
 } 
 
 / * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java 
 index 85d75cf . . 423c4cc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java 
 @ @ - 88 , 15 + 88 , 15 @ @ class FileDrop { 
 * sets all elements contained within as drop targets , though only 
 * the top level container will change borders . 
 * 
 - * @ param c Component on which files will be dropped . 
 + * @ param component Component on which files will be dropped . 
 * @ param listener Listens for < tt > filesDropped < / tt > . 
 * @ since 1 . 0 
 * / 
 FileDrop ( 
 - final Component c , 
 + final Component component , 
 final Listener listener ) 
 throws TooManyListenersException { 
 - this ( c , / / Drop target 
 + this ( component , / / Drop target 
 BorderFactory . createMatteBorder ( 2 , 2 , 2 , 2 , DEFAULT _ BORDER _ COLOR ) , / / Drag border 
 true , / / Recursive 
 listener ) ; 
 @ @ - 109 , 23 + 109 , 23 @ @ class FileDrop { 
 * < tt > System . out < / tt > or < tt > System . err < / tt > . A < tt > null < / tt > value for 
 * the parameter < tt > out < / tt > will result in no debugging output . 
 * 
 - * @ param c Component on which files will be dropped . 
 + * @ param component Component on which files will be dropped . 
 * @ param dragBorder Border to use on < tt > JComponent < / tt > when dragging occurs . 
 * @ param recursive Recursively set children as drop targets . 
 * @ param listener Listens for < tt > filesDropped < / tt > . 
 * @ since 1 . 0 
 * / 
 FileDrop ( 
 - final Component c , 
 + final Component component , 
 final Border dragBorder , 
 final boolean recursive , 
 final Listener listener ) 
 throws TooManyListenersException { 
 - dropListener = new FileDropTargetListener ( c , dragBorder , listener ) ; 
 - makeDropTarget ( c , recursive ) ; 
 + dropListener = new FileDropTargetListener ( component , dragBorder , listener ) ; 
 + makeDropTarget ( component , recursive ) ; 
 } 
 
 - private void makeDropTarget ( final Component c , boolean recursive ) 
 + private void makeDropTarget ( final Component component , boolean recursive ) 
 throws TooManyListenersException { 
 / / Make drop target 
 final DropTarget dt = new DropTarget ( ) ; 
 @ @ - 133 , 25 + 133 , 25 @ @ class FileDrop { 
 
 / / Listen for hierarchy changes and remove the 
 / / drop target when the parent gets cleared out . 
 - c . addHierarchyListener ( new HierarchyListener ( ) { 
 + component . addHierarchyListener ( new HierarchyListener ( ) { 
 @ Override 
 public void hierarchyChanged ( HierarchyEvent evt ) { 
 - final Component parent = c . getParent ( ) ; 
 + final Component parent = component . getParent ( ) ; 
 if ( parent = = null ) { 
 - c . setDropTarget ( null ) ; 
 + component . setDropTarget ( null ) ; 
 } 
 else { 
 - new DropTarget ( c , dropListener ) ; 
 + new DropTarget ( component , dropListener ) ; 
 } 
 } 
 } ) ; 
 
 - if ( c . getParent ( ) ! = null ) { 
 - new DropTarget ( c , dropListener ) ; 
 + if ( component . getParent ( ) ! = null ) { 
 + new DropTarget ( component , dropListener ) ; 
 } 
 
 - if ( recursive & & c instanceof Container ) { 
 - final Container cont = ( Container ) c ; 
 + if ( recursive & & component instanceof Container ) { 
 + final Container cont = ( Container ) component ; 
 final Component [ ] comps = cont . getComponents ( ) ; 
 for ( Component element : comps ) { 
 makeDropTarget ( element , recursive ) ; 
 @ @ - 183 , 11 + 183 , 11 @ @ class FileDrop { 
 * This will recursively unregister all components contained within 
 * < var > c < / var > if < var > c < / var > is a { @ link Container } . 
 * 
 - * @ param c The component to unregister as a drop target 
 + * @ param component The component to unregister as a drop target 
 * @ since 1 . 0 
 * / 
 - static void remove ( Component c ) { 
 - remove ( c , true ) ; 
 + static void remove ( Component component ) { 
 + remove ( component , true ) ; 
 } 
 
 / * * 
 @ @ - 195 , 14 + 195 , 14 @ @ class FileDrop { 
 * from the all children . You should call this if you add and remove 
 * components after you ' ve set up the drag - and - drop . 
 * 
 - * @ param c The component to unregister 
 + * @ param component The component to unregister 
 * @ param recursive Recursively unregister components within a container 
 * @ since 1 . 0 
 * / 
 - static void remove ( Component c , boolean recursive ) { 
 - c . setDropTarget ( null ) ; 
 - if ( recursive & & c instanceof Container ) { 
 - final Component [ ] comps = ( ( Container ) c ) . getComponents ( ) ; 
 + static void remove ( Component component , boolean recursive ) { 
 + component . setDropTarget ( null ) ; 
 + if ( recursive & & component instanceof Container ) { 
 + final Component [ ] comps = ( ( Container ) component ) . getComponents ( ) ; 
 for ( Component element : comps ) { 
 remove ( element , recursive ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 index b979e9e . . 17b0614 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 @ @ - 320 , 7 + 320 , 7 @ @ public class JTreeTable extends JTable { 
 public Component getTableCellEditorComponent ( JTable table , 
 Object value , 
 boolean isSelected , 
 - int r , int c ) { 
 + int row , int column ) { 
 return tree ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 index 392e5ce . . 1680ce0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 @ @ - 43 , 8 + 43 , 8 @ @ public class Main { 
 final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; 
 frame . getContentPane ( ) . add ( panel ) ; 
 if ( args . length > = 1 ) { 
 - final File f = new File ( args [ 0 ] ) ; 
 - panel . openFile ( f , frame ) ; 
 + final File file = new File ( args [ 0 ] ) ; 
 + panel . openFile ( file , frame ) ; 
 } 
 frame . setDefaultCloseOperation ( JFrame . EXIT _ ON _ CLOSE ) ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 index 8a11856 . . ca59301 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 @ @ - 68 , 11 + 68 , 11 @ @ public class ParseTreeInfoPanel extends JPanel { 
 
 private static class JavaFileFilter extends FileFilter { 
 @ Override 
 - public boolean accept ( File f ) { 
 - if ( f = = null ) { 
 + public boolean accept ( File file ) { 
 + if ( file = = null ) { 
 return false ; 
 } 
 - return f . isDirectory ( ) | | f . getName ( ) . endsWith ( " . java " ) ; 
 + return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; 
 } 
 
 @ Override
