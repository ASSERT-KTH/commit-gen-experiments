BLEU SCORE: 0.041961149062965476

TEST MSG: config : circle . yml : openjdk renamed to openjdk7
GENERATED MSG: Issue # 2815 : improve cache in ' CircleCI '

TEST DIFF (one line): diff - - git a / circle . yml b / circle . yml <nl> index 6486881 . . 2e82786 100644 <nl> - - - a / circle . yml <nl> + + + b / circle . yml <nl> @ @ - 19 , 7 + 19 , 7 @ @ machine : <nl> CMD2 : " & & sed - i . ' ' ' s / ^ openjdk / # openjdk / ' projects - for - circle . properties " <nl> CMD3 : " & & sed - i . ' ' s / projects - to - test - on . properties / projects - for - circle . properties / launch . sh " <nl> CMD4 : " & & . / launch . sh - Dcheckstyle . config . location = checks - nonjavadoc - error . xml " <nl> - OPENJDK : " & & sed - i . ' ' ' s / # openjdk / openjdk / ' projects - for - circle . properties " <nl> + OPENJDK : " & & sed - i . ' ' ' s / # openjdk7 / openjdk7 / ' projects - for - circle . properties " <nl> INFINISPAN : " & & sed - i . ' ' ' s / # infinispan / infinispan / ' projects - for - circle . properties " <nl> PROTONPACK : " & & sed - i . ' ' ' s / # protonpack / protonpack / ' projects - for - circle . properties " <nl> JOOL : " & & sed - i . ' ' ' s / # jOOL / jOOL / ' projects - for - circle . properties "
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java <nl> index d613fef . . c1b9911 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java <nl> @ @ - 117 , 7 + 117 , 10 @ @ public final class OneStatementPerLineCheck extends Check { <nl> switch ( ast . getType ( ) ) { <nl> case TokenTypes . SEMI : <nl> DetailAST currentStatement = ast ; <nl> - if ( isMultilineStatement ( currentStatement ) ) { <nl> + final boolean hasResourcesPrevSibling = <nl> + currentStatement . getPreviousSibling ( ) ! = null <nl> + & & currentStatement . getPreviousSibling ( ) . getType ( ) = = TokenTypes . RESOURCES ; <nl> + if ( ! hasResourcesPrevSibling & & isMultilineStatement ( currentStatement ) ) { <nl> currentStatement = ast . getPreviousSibling ( ) ; <nl> } <nl> if ( isOnTheSameLine ( currentStatement , lastStatementEnd , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheckTest . java <nl> index 36919ea . . b742885 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheckTest . java <nl> @ @ - 79 , 6 + 79 , 8 @ @ public class OneStatementPerLineCheckTest extends BaseCheckTestSupport { <nl> " 81 : 10 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 90 : 28 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 135 : 39 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 168 : 110 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 179 : 107 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> <nl> verify ( checkConfig , <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOneStatementPerLine2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOneStatementPerLine2 . java <nl> index 9bbd91f . . 161dcdf 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOneStatementPerLine2 . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOneStatementPerLine2 . java <nl> @ @ - 134 , 4 + 134 , 50 @ @ public class InputOneStatementPerLine2 { <nl> ; <nl> n + + , k - - ) { var1 + + ; var2 + + ; } <nl> } <nl> + <nl> + / * * <nl> + * Multiple statements within try - with - resource on a separate line is legal . <nl> + * @ see < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2211 " > OneStatementPerLine : false match with try - with - resources < / a > <nl> + * / <nl> + private void issue2211pass ( ) { <nl> + try ( <nl> + AutoCloseable i = new java . io . StringReader ( " " ) ; <nl> + AutoCloseable k = new java . io . StringReader ( " " ) ; <nl> + ) { <nl> + } catch ( Exception e1 ) { <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Multiple statements within try - with - resource on a separate line is legal . Added per PR comment : <nl> + * @ see < a href = " https : / / github . com / checkstyle / checkstyle / pull / 2750 # issuecomment - 166032327 " > Please add UT cases < / a > <nl> + * / <nl> + private void issue2211pass2 ( ) { <nl> + try ( AutoCloseable i = new java . io . StringReader ( " " ) ; <nl> + AutoCloseable k = new java . io . StringReader ( " " ) ; ) { <nl> + } catch ( Exception e1 ) { <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Multiple statements within try - with - resource on next line after try is illegal . <nl> + * @ see < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2211 " > OneStatementPerLine : false match with try - with - resources < / a > <nl> + * / <nl> + private void issue2211fail ( ) { <nl> + try ( <nl> + AutoCloseable i = new java . io . StringReader ( " " ) ; AutoCloseable k = new java . io . StringReader ( " " ) ; <nl> + ) { <nl> + } catch ( Exception e1 ) { <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Multiple statements within try - with - resource on a same line as try is illegal . Added per PR comment : <nl> + * @ see < a href = " https : / / github . com / checkstyle / checkstyle / pull / 2750 # issuecomment - 166032327 " > Please add UT cases < / a > <nl> + * / <nl> + private void issue2211fail2 ( ) { <nl> + try ( AutoCloseable i = new java . io . StringReader ( " " ) ; AutoCloseable k = new java . io . StringReader ( " " ) ; ) { <nl> + } catch ( Exception e1 ) { <nl> + } <nl> + } <nl> }

TEST DIFF:
diff - - git a / circle . yml b / circle . yml 
 index 6486881 . . 2e82786 100644 
 - - - a / circle . yml 
 + + + b / circle . yml 
 @ @ - 19 , 7 + 19 , 7 @ @ machine : 
 CMD2 : " & & sed - i . ' ' ' s / ^ openjdk / # openjdk / ' projects - for - circle . properties " 
 CMD3 : " & & sed - i . ' ' s / projects - to - test - on . properties / projects - for - circle . properties / launch . sh " 
 CMD4 : " & & . / launch . sh - Dcheckstyle . config . location = checks - nonjavadoc - error . xml " 
 - OPENJDK : " & & sed - i . ' ' ' s / # openjdk / openjdk / ' projects - for - circle . properties " 
 + OPENJDK : " & & sed - i . ' ' ' s / # openjdk7 / openjdk7 / ' projects - for - circle . properties " 
 INFINISPAN : " & & sed - i . ' ' ' s / # infinispan / infinispan / ' projects - for - circle . properties " 
 PROTONPACK : " & & sed - i . ' ' ' s / # protonpack / protonpack / ' projects - for - circle . properties " 
 JOOL : " & & sed - i . ' ' ' s / # jOOL / jOOL / ' projects - for - circle . properties "

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java 
 index d613fef . . c1b9911 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java 
 @ @ - 117 , 7 + 117 , 10 @ @ public final class OneStatementPerLineCheck extends Check { 
 switch ( ast . getType ( ) ) { 
 case TokenTypes . SEMI : 
 DetailAST currentStatement = ast ; 
 - if ( isMultilineStatement ( currentStatement ) ) { 
 + final boolean hasResourcesPrevSibling = 
 + currentStatement . getPreviousSibling ( ) ! = null 
 + & & currentStatement . getPreviousSibling ( ) . getType ( ) = = TokenTypes . RESOURCES ; 
 + if ( ! hasResourcesPrevSibling & & isMultilineStatement ( currentStatement ) ) { 
 currentStatement = ast . getPreviousSibling ( ) ; 
 } 
 if ( isOnTheSameLine ( currentStatement , lastStatementEnd , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheckTest . java 
 index 36919ea . . b742885 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheckTest . java 
 @ @ - 79 , 6 + 79 , 8 @ @ public class OneStatementPerLineCheckTest extends BaseCheckTestSupport { 
 " 81 : 10 : " + getCheckMessage ( MSG _ KEY ) , 
 " 90 : 28 : " + getCheckMessage ( MSG _ KEY ) , 
 " 135 : 39 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 168 : 110 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 179 : 107 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 
 verify ( checkConfig , 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOneStatementPerLine2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOneStatementPerLine2 . java 
 index 9bbd91f . . 161dcdf 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOneStatementPerLine2 . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputOneStatementPerLine2 . java 
 @ @ - 134 , 4 + 134 , 50 @ @ public class InputOneStatementPerLine2 { 
 ; 
 n + + , k - - ) { var1 + + ; var2 + + ; } 
 } 
 + 
 + / * * 
 + * Multiple statements within try - with - resource on a separate line is legal . 
 + * @ see < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2211 " > OneStatementPerLine : false match with try - with - resources < / a > 
 + * / 
 + private void issue2211pass ( ) { 
 + try ( 
 + AutoCloseable i = new java . io . StringReader ( " " ) ; 
 + AutoCloseable k = new java . io . StringReader ( " " ) ; 
 + ) { 
 + } catch ( Exception e1 ) { 
 + } 
 + } 
 + 
 + / * * 
 + * Multiple statements within try - with - resource on a separate line is legal . Added per PR comment : 
 + * @ see < a href = " https : / / github . com / checkstyle / checkstyle / pull / 2750 # issuecomment - 166032327 " > Please add UT cases < / a > 
 + * / 
 + private void issue2211pass2 ( ) { 
 + try ( AutoCloseable i = new java . io . StringReader ( " " ) ; 
 + AutoCloseable k = new java . io . StringReader ( " " ) ; ) { 
 + } catch ( Exception e1 ) { 
 + } 
 + } 
 + 
 + / * * 
 + * Multiple statements within try - with - resource on next line after try is illegal . 
 + * @ see < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2211 " > OneStatementPerLine : false match with try - with - resources < / a > 
 + * / 
 + private void issue2211fail ( ) { 
 + try ( 
 + AutoCloseable i = new java . io . StringReader ( " " ) ; AutoCloseable k = new java . io . StringReader ( " " ) ; 
 + ) { 
 + } catch ( Exception e1 ) { 
 + } 
 + } 
 + 
 + / * * 
 + * Multiple statements within try - with - resource on a same line as try is illegal . Added per PR comment : 
 + * @ see < a href = " https : / / github . com / checkstyle / checkstyle / pull / 2750 # issuecomment - 166032327 " > Please add UT cases < / a > 
 + * / 
 + private void issue2211fail2 ( ) { 
 + try ( AutoCloseable i = new java . io . StringReader ( " " ) ; AutoCloseable k = new java . io . StringReader ( " " ) ; ) { 
 + } catch ( Exception e1 ) { 
 + } 
 + } 
 }
