BLEU SCORE: 0.01650404559570943

TEST MSG: Issue # 5338 : moved , renamed and removed abstact declaration from AbstractLoader . Also moved and renamed AbstractLoaderTest and fixed suppressions for intellij idea and checkstyle
GENERATED MSG: A refactoring to remove the circular dependency between the checkstyle and

TEST DIFF (one line): diff - - git a / config / import - control . xml b / config / import - control . xml <nl> index 126d2fc . . 20c5c01 100644 <nl> - - - a / config / import - control . xml <nl> + + + b / config / import - control . xml <nl> @ @ - 120 , 6 + 120 , 9 @ @ <nl> < allow class = " com . google . common . collect . Multiset . Entry " local - only = " true " / > <nl> < allow class = " com . google . common . collect . SetMultimap " local - only = " true " / > <nl> <nl> + < subpackage name = " imports " > <nl> + < allow class = " com . puppycrawl . tools . checkstyle . XmlLoader " local - only = " true " / > <nl> + < / subpackage > <nl> < subpackage name = " indentation " > <nl> < allow pkg = " java . lang . reflect " / > <nl> < / subpackage > <nl> @ @ - 154 , 6 + 157 , 7 @ @ <nl> < allow class = " java . lang . ref . WeakReference " local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent " local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerFilter " local - only = " true " / > <nl> + < allow class = " com . puppycrawl . tools . checkstyle . XmlLoader " local - only = " true " / > <nl> < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . checks \ . [ ^ . ] + " regex = " true " / > <nl> < allow pkg = " com . puppycrawl . tools . checkstyle . utils " / > <nl> < allow pkg = " com . puppycrawl . tools . checkstyle . xpath " / > <nl> diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index 7e038dc . . 33d284f 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 2148 , 8 + 2148 , 6 @ @ isolated classes and we cannot put them to separate package as it will affect us <nl> < option value = " ClassIndependentOfModule " / > <nl> < ! - - till # 4870 , used in MT check markers - - > <nl> < option value = " unused " / > <nl> - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 5338 - - > <nl> - < option value = " AbstractClassExtendsConcreteClass " / > <nl> < / list > <nl> < / option > <nl> < / inspection _ tool > <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 1aba40b . . c589879 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 21 , 7 + 21 , 7 @ @ <nl> files = " AbstractClassNameCheck . java " / > <nl> < ! - - test should be named as their main class - - > <nl> < suppress checks = " AbstractClassNameCheck " <nl> - files = " AbstractCheckTest . java | AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java | AbstractFileSetCheckTest . java | AbstractLoaderTest . java | AbstractNodeTest . java " / > <nl> + files = " AbstractCheckTest . java | AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java | AbstractFileSetCheckTest . java | AbstractNodeTest . java " / > <nl> <nl> < ! - - Tone down the checking for test code - - > <nl> < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XdocsPagesTest \ . java " / > <nl> diff - - git a / pom . xml b / pom . xml <nl> index 185aa59 . . 990df69 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 2300 , 7 + 2300 , 7 @ @ <nl> < / excludedMethods > <nl> < avoidCallsTo > <nl> < ! - - cause of https : / / github . com / checkstyle / checkstyle / issues / 3605 - - > <nl> - < avoidCallsTo > com . puppycrawl . tools . checkstyle . api . AbstractLoader $ FeaturesForVerySecureJavaInstallations < / avoidCallsTo > <nl> + < avoidCallsTo > com . puppycrawl . tools . checkstyle . XmlLoader $ FeaturesForVerySecureJavaInstallations < / avoidCallsTo > <nl> < / avoidCallsTo > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> index d77e3d6 . . d1c58d5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> @ @ - 40 , 7 + 40 , 6 @ @ import org . xml . sax . InputSource ; <nl> import org . xml . sax . SAXException ; <nl> import org . xml . sax . SAXParseException ; <nl> <nl> - import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; <nl> @ @ - 580 , 7 + 579 , 7 @ @ public final class ConfigurationLoader { <nl> * appear in the public API of the ConfigurationLoader . <nl> * / <nl> private final class InternalLoader <nl> - extends AbstractLoader { <nl> + extends XmlLoader { <nl> / * * Module elements . * / <nl> private static final String MODULE = " module " ; <nl> / * * Name attribute . * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java <nl> index 4c5cf4e . . 9b6b0cc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java <nl> @ @ - 37 , 7 + 37 , 6 @ @ import org . xml . sax . InputSource ; <nl> import org . xml . sax . SAXException ; <nl> <nl> import com . google . common . io . Closeables ; <nl> - import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> @ @ - 46 , 7 + 45 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * @ author Rick Giles <nl> * / <nl> public final class PackageNamesLoader <nl> - extends AbstractLoader { <nl> + extends XmlLoader { <nl> / * * The public ID for the configuration dtd . * / <nl> private static final String DTD _ PUBLIC _ ID = <nl> " - / / Puppy Crawl / / DTD Package Names 1 . 0 / / EN " ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XmlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / XmlLoader . java <nl> new file mode 100644 <nl> index 0000000 . . d2612a7 <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XmlLoader . java <nl> @ @ - 0 , 0 + 1 , 160 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2017 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + <nl> + import javax . xml . parsers . ParserConfigurationException ; <nl> + import javax . xml . parsers . SAXParserFactory ; <nl> + <nl> + import org . xml . sax . InputSource ; <nl> + import org . xml . sax . SAXException ; <nl> + import org . xml . sax . SAXParseException ; <nl> + import org . xml . sax . XMLReader ; <nl> + import org . xml . sax . helpers . DefaultHandler ; <nl> + <nl> + / * * <nl> + * Contains the common implementation of a loader , for loading a configuration <nl> + * from an XML file . <nl> + * < p > <nl> + * The error handling policy can be described as being austere , dead set , <nl> + * disciplinary , dour , draconian , exacting , firm , forbidding , grim , hard , hard - <nl> + * boiled , harsh , harsh , in line , iron - fisted , no - nonsense , oppressive , <nl> + * persnickety , picky , prudish , punctilious , puritanical , rigid , rigorous , <nl> + * scrupulous , set , severe , square , stern , stickler , straight , strait - laced , <nl> + * stringent , stuffy , stuffy , tough , unpermissive , unsparing and uptight . <nl> + * < / p > <nl> + * <nl> + * @ author Oliver Burn <nl> + * @ noinspection ThisEscapedInObjectConstruction <nl> + * / <nl> + public class XmlLoader <nl> + extends DefaultHandler { <nl> + / * * Maps public id to resolve to resource name for the DTD . * / <nl> + private final Map < String , String > publicIdToResourceNameMap ; <nl> + / * * Parser to read XML files . * * / <nl> + private final XMLReader parser ; <nl> + <nl> + / * * <nl> + * Creates a new instance . <nl> + * @ param publicId the public ID for the DTD to resolve <nl> + * @ param dtdResourceName the resource for the DTD <nl> + * @ throws SAXException if an error occurs <nl> + * @ throws ParserConfigurationException if an error occurs <nl> + * / <nl> + protected XmlLoader ( String publicId , String dtdResourceName ) <nl> + throws SAXException , ParserConfigurationException { <nl> + this ( new HashMap < > ( 1 ) ) ; <nl> + publicIdToResourceNameMap . put ( publicId , dtdResourceName ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Creates a new instance . <nl> + * @ param publicIdToResourceNameMap maps public IDs to DTD resource names <nl> + * @ throws SAXException if an error occurs <nl> + * @ throws ParserConfigurationException if an error occurs <nl> + * / <nl> + protected XmlLoader ( Map < String , String > publicIdToResourceNameMap ) <nl> + throws SAXException , ParserConfigurationException { <nl> + this . publicIdToResourceNameMap = new HashMap < > ( publicIdToResourceNameMap ) ; <nl> + final SAXParserFactory factory = SAXParserFactory . newInstance ( ) ; <nl> + FeaturesForVerySecureJavaInstallations . addFeaturesForVerySecureJavaInstallations ( factory ) ; <nl> + factory . setValidating ( true ) ; <nl> + factory . setNamespaceAware ( true ) ; <nl> + parser = factory . newSAXParser ( ) . getXMLReader ( ) ; <nl> + parser . setContentHandler ( this ) ; <nl> + parser . setEntityResolver ( this ) ; <nl> + parser . setErrorHandler ( this ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Parses the specified input source . <nl> + * @ param inputSource the input source to parse . <nl> + * @ throws IOException if an error occurs <nl> + * @ throws SAXException in an error occurs <nl> + * / <nl> + public void parseInputSource ( InputSource inputSource ) <nl> + throws IOException , SAXException { <nl> + parser . parse ( inputSource ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public InputSource resolveEntity ( String publicId , String systemId ) <nl> + throws SAXException , IOException { <nl> + final InputSource inputSource ; <nl> + if ( publicIdToResourceNameMap . keySet ( ) . contains ( publicId ) ) { <nl> + final String dtdResourceName = <nl> + publicIdToResourceNameMap . get ( publicId ) ; <nl> + final ClassLoader loader = <nl> + getClass ( ) . getClassLoader ( ) ; <nl> + final InputStream dtdIs = <nl> + loader . getResourceAsStream ( dtdResourceName ) ; <nl> + <nl> + inputSource = new InputSource ( dtdIs ) ; <nl> + } <nl> + else { <nl> + inputSource = super . resolveEntity ( publicId , systemId ) ; <nl> + } <nl> + return inputSource ; <nl> + } <nl> + <nl> + @ Override <nl> + public void error ( SAXParseException exception ) throws SAXException { <nl> + throw exception ; <nl> + } <nl> + <nl> + @ Override <nl> + public void fatalError ( SAXParseException exception ) throws SAXException { <nl> + throw exception ; <nl> + } <nl> + <nl> + / * * <nl> + * Used for setting specific for secure java installations features to SAXParserFactory . <nl> + * Pulled out as a separate class in order to suppress Pitest mutations . <nl> + * / <nl> + public static final class FeaturesForVerySecureJavaInstallations { <nl> + / * * Feature that enables loading external DTD when loading XML files . * / <nl> + private static final String LOAD _ EXTERNAL _ DTD = <nl> + " http : / / apache . org / xml / features / nonvalidating / load - external - dtd " ; <nl> + / * * Feature that enables including external general entities in XML files . * / <nl> + private static final String EXTERNAL _ GENERAL _ ENTITIES = <nl> + " http : / / xml . org / sax / features / external - general - entities " ; <nl> + <nl> + / * * Stop instances being created . * * / <nl> + private FeaturesForVerySecureJavaInstallations ( ) { <nl> + } <nl> + <nl> + / * * <nl> + * Configures SAXParserFactory with features requered <nl> + * for exectution on very secured environments . <nl> + * @ param factory factory to be configured with spectial features <nl> + * @ throws SAXException if an error occurs <nl> + * @ throws ParserConfigurationException if an error occurs <nl> + * / <nl> + public static void addFeaturesForVerySecureJavaInstallations ( SAXParserFactory factory ) <nl> + throws SAXException , ParserConfigurationException { <nl> + factory . setFeature ( LOAD _ EXTERNAL _ DTD , true ) ; <nl> + factory . setFeature ( EXTERNAL _ GENERAL _ ENTITIES , true ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java <nl> deleted file mode 100644 <nl> index 4c0acb7 . . 0000000 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java <nl> + + + / dev / null <nl> @ @ - 1 , 160 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> - / / Copyright ( C ) 2001 - 2017 the original author or authors . <nl> - / / <nl> - / / This library is free software ; you can redistribute it and / or <nl> - / / modify it under the terms of the GNU Lesser General Public <nl> - / / License as published by the Free Software Foundation ; either <nl> - / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> - / / <nl> - / / This library is distributed in the hope that it will be useful , <nl> - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - / / Lesser General Public License for more details . <nl> - / / <nl> - / / You should have received a copy of the GNU Lesser General Public <nl> - / / License along with this library ; if not , write to the Free Software <nl> - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . api ; <nl> - <nl> - import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - <nl> - import javax . xml . parsers . ParserConfigurationException ; <nl> - import javax . xml . parsers . SAXParserFactory ; <nl> - <nl> - import org . xml . sax . InputSource ; <nl> - import org . xml . sax . SAXException ; <nl> - import org . xml . sax . SAXParseException ; <nl> - import org . xml . sax . XMLReader ; <nl> - import org . xml . sax . helpers . DefaultHandler ; <nl> - <nl> - / * * <nl> - * Contains the common implementation of a loader , for loading a configuration <nl> - * from an XML file . <nl> - * < p > <nl> - * The error handling policy can be described as being austere , dead set , <nl> - * disciplinary , dour , draconian , exacting , firm , forbidding , grim , hard , hard - <nl> - * boiled , harsh , harsh , in line , iron - fisted , no - nonsense , oppressive , <nl> - * persnickety , picky , prudish , punctilious , puritanical , rigid , rigorous , <nl> - * scrupulous , set , severe , square , stern , stickler , straight , strait - laced , <nl> - * stringent , stuffy , stuffy , tough , unpermissive , unsparing and uptight . <nl> - * < / p > <nl> - * <nl> - * @ author Oliver Burn <nl> - * @ noinspection ThisEscapedInObjectConstruction , AbstractClassExtendsConcreteClass <nl> - * / <nl> - public abstract class AbstractLoader <nl> - extends DefaultHandler { <nl> - / * * Maps public id to resolve to resource name for the DTD . * / <nl> - private final Map < String , String > publicIdToResourceNameMap ; <nl> - / * * Parser to read XML files . * * / <nl> - private final XMLReader parser ; <nl> - <nl> - / * * <nl> - * Creates a new instance . <nl> - * @ param publicId the public ID for the DTD to resolve <nl> - * @ param dtdResourceName the resource for the DTD <nl> - * @ throws SAXException if an error occurs <nl> - * @ throws ParserConfigurationException if an error occurs <nl> - * / <nl> - protected AbstractLoader ( String publicId , String dtdResourceName ) <nl> - throws SAXException , ParserConfigurationException { <nl> - this ( new HashMap < > ( 1 ) ) ; <nl> - publicIdToResourceNameMap . put ( publicId , dtdResourceName ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Creates a new instance . <nl> - * @ param publicIdToResourceNameMap maps public IDs to DTD resource names <nl> - * @ throws SAXException if an error occurs <nl> - * @ throws ParserConfigurationException if an error occurs <nl> - * / <nl> - protected AbstractLoader ( Map < String , String > publicIdToResourceNameMap ) <nl> - throws SAXException , ParserConfigurationException { <nl> - this . publicIdToResourceNameMap = new HashMap < > ( publicIdToResourceNameMap ) ; <nl> - final SAXParserFactory factory = SAXParserFactory . newInstance ( ) ; <nl> - FeaturesForVerySecureJavaInstallations . addFeaturesForVerySecureJavaInstallations ( factory ) ; <nl> - factory . setValidating ( true ) ; <nl> - factory . setNamespaceAware ( true ) ; <nl> - parser = factory . newSAXParser ( ) . getXMLReader ( ) ; <nl> - parser . setContentHandler ( this ) ; <nl> - parser . setEntityResolver ( this ) ; <nl> - parser . setErrorHandler ( this ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Parses the specified input source . <nl> - * @ param inputSource the input source to parse . <nl> - * @ throws IOException if an error occurs <nl> - * @ throws SAXException in an error occurs <nl> - * / <nl> - public void parseInputSource ( InputSource inputSource ) <nl> - throws IOException , SAXException { <nl> - parser . parse ( inputSource ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public InputSource resolveEntity ( String publicId , String systemId ) <nl> - throws SAXException , IOException { <nl> - final InputSource inputSource ; <nl> - if ( publicIdToResourceNameMap . keySet ( ) . contains ( publicId ) ) { <nl> - final String dtdResourceName = <nl> - publicIdToResourceNameMap . get ( publicId ) ; <nl> - final ClassLoader loader = <nl> - getClass ( ) . getClassLoader ( ) ; <nl> - final InputStream dtdIs = <nl> - loader . getResourceAsStream ( dtdResourceName ) ; <nl> - <nl> - inputSource = new InputSource ( dtdIs ) ; <nl> - } <nl> - else { <nl> - inputSource = super . resolveEntity ( publicId , systemId ) ; <nl> - } <nl> - return inputSource ; <nl> - } <nl> - <nl> - @ Override <nl> - public void error ( SAXParseException exception ) throws SAXException { <nl> - throw exception ; <nl> - } <nl> - <nl> - @ Override <nl> - public void fatalError ( SAXParseException exception ) throws SAXException { <nl> - throw exception ; <nl> - } <nl> - <nl> - / * * <nl> - * Used for setting specific for secure java installations features to SAXParserFactory . <nl> - * Pulled out as a separate class in order to suppress Pitest mutations . <nl> - * / <nl> - public static final class FeaturesForVerySecureJavaInstallations { <nl> - / * * Feature that enables loading external DTD when loading XML files . * / <nl> - private static final String LOAD _ EXTERNAL _ DTD = <nl> - " http : / / apache . org / xml / features / nonvalidating / load - external - dtd " ; <nl> - / * * Feature that enables including external general entities in XML files . * / <nl> - private static final String EXTERNAL _ GENERAL _ ENTITIES = <nl> - " http : / / xml . org / sax / features / external - general - entities " ; <nl> - <nl> - / * * Stop instances being created . * * / <nl> - private FeaturesForVerySecureJavaInstallations ( ) { <nl> - } <nl> - <nl> - / * * <nl> - * Configures SAXParserFactory with features requered <nl> - * for exectution on very secured environments . <nl> - * @ param factory factory to be configured with spectial features <nl> - * @ throws SAXException if an error occurs <nl> - * @ throws ParserConfigurationException if an error occurs <nl> - * / <nl> - public static void addFeaturesForVerySecureJavaInstallations ( SAXParserFactory factory ) <nl> - throws SAXException , ParserConfigurationException { <nl> - factory . setFeature ( LOAD _ EXTERNAL _ DTD , true ) ; <nl> - factory . setFeature ( EXTERNAL _ GENERAL _ ENTITIES , true ) ; <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> index f6e7869 . . 93a442b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> @ @ - 34 , 14 + 34 , 14 @ @ import org . xml . sax . Attributes ; <nl> import org . xml . sax . InputSource ; <nl> import org . xml . sax . SAXException ; <nl> <nl> - import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; <nl> + import com . puppycrawl . tools . checkstyle . XmlLoader ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> <nl> / * * <nl> * Responsible for loading the contents of an import control configuration file . <nl> * @ author Oliver Burn <nl> * / <nl> - final class ImportControlLoader extends AbstractLoader { <nl> + final class ImportControlLoader extends XmlLoader { <nl> / * * The public ID for the configuration dtd . * / <nl> private static final String DTD _ PUBLIC _ ID _ 1 _ 0 = <nl> " - / / Puppy Crawl / / DTD Import Control 1 . 0 / / EN " ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoader . java <nl> index cf7d4eb . . ced67bc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoader . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import org . xml . sax . InputSource ; <nl> import org . xml . sax . SAXException ; <nl> <nl> import com . puppycrawl . tools . checkstyle . TreeWalkerFilter ; <nl> - import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; <nl> + import com . puppycrawl . tools . checkstyle . XmlLoader ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . FilterSet ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> @ @ - 46 , 7 + 46 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * @ author Rick Giles <nl> * / <nl> public final class SuppressionsLoader <nl> - extends AbstractLoader { <nl> + extends XmlLoader { <nl> / * * The public ID for the configuration dtd . * / <nl> private static final String DTD _ PUBLIC _ ID _ 1 _ 0 = <nl> " - / / Puppy Crawl / / DTD Suppressions 1 . 0 / / EN " ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XmlLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XmlLoaderTest . java <nl> new file mode 100644 <nl> index 0000000 . . 482d0ef <nl> - - - / dev / null <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XmlLoaderTest . java <nl> @ @ - 0 , 0 + 1 , 65 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2017 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + import static com . puppycrawl . tools . checkstyle . internal . utils . TestUtil . isUtilsClassHasPrivateConstructor ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + <nl> + import javax . xml . parsers . ParserConfigurationException ; <nl> + <nl> + import org . junit . Test ; <nl> + import org . powermock . reflect . Whitebox ; <nl> + import org . xml . sax . SAXException ; <nl> + import org . xml . sax . XMLReader ; <nl> + <nl> + import com . sun . org . apache . xerces . internal . impl . Constants ; <nl> + <nl> + public class XmlLoaderTest { <nl> + <nl> + private static final String NAMESPACES _ FEATURE = <nl> + Constants . SAX _ FEATURE _ PREFIX + Constants . NAMESPACES _ FEATURE ; <nl> + <nl> + @ Test <nl> + public void testParserConfiguratedSuccefully ( ) throws Exception { <nl> + final DummyLoader dummyLoader = new DummyLoader ( new HashMap < > ( 1 ) ) ; <nl> + final XMLReader parser = Whitebox . getInternalState ( dummyLoader , " parser " ) ; <nl> + assertTrue ( " Invalid feature state " , parser . getFeature ( NAMESPACES _ FEATURE ) ) ; <nl> + assertEquals ( " Invalid entity resoler " , dummyLoader , parser . getEntityResolver ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> + assertTrue ( " Constructor is not private " , isUtilsClassHasPrivateConstructor ( <nl> + XmlLoader . FeaturesForVerySecureJavaInstallations . class , true ) ) ; <nl> + } <nl> + <nl> + private static final class DummyLoader extends XmlLoader { <nl> + <nl> + DummyLoader ( Map < String , String > publicIdToResourceNameMap ) <nl> + throws SAXException , ParserConfigurationException { <nl> + super ( publicIdToResourceNameMap ) ; <nl> + } <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java <nl> deleted file mode 100644 <nl> index 80dd679 . . 0000000 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 65 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> - / / Copyright ( C ) 2001 - 2017 the original author or authors . <nl> - / / <nl> - / / This library is free software ; you can redistribute it and / or <nl> - / / modify it under the terms of the GNU Lesser General Public <nl> - / / License as published by the Free Software Foundation ; either <nl> - / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> - / / <nl> - / / This library is distributed in the hope that it will be useful , <nl> - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - / / Lesser General Public License for more details . <nl> - / / <nl> - / / You should have received a copy of the GNU Lesser General Public <nl> - / / License along with this library ; if not , write to the Free Software <nl> - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . api ; <nl> - <nl> - import static com . puppycrawl . tools . checkstyle . internal . utils . TestUtil . isUtilsClassHasPrivateConstructor ; <nl> - import static org . junit . Assert . assertEquals ; <nl> - import static org . junit . Assert . assertTrue ; <nl> - <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - <nl> - import javax . xml . parsers . ParserConfigurationException ; <nl> - <nl> - import org . junit . Test ; <nl> - import org . powermock . reflect . Whitebox ; <nl> - import org . xml . sax . SAXException ; <nl> - import org . xml . sax . XMLReader ; <nl> - <nl> - import com . sun . org . apache . xerces . internal . impl . Constants ; <nl> - <nl> - public class AbstractLoaderTest { <nl> - <nl> - private static final String NAMESPACES _ FEATURE = <nl> - Constants . SAX _ FEATURE _ PREFIX + Constants . NAMESPACES _ FEATURE ; <nl> - <nl> - @ Test <nl> - public void testParserConfiguratedSuccefully ( ) throws Exception { <nl> - final DummyLoader dummyLoader = new DummyLoader ( new HashMap < > ( 1 ) ) ; <nl> - final XMLReader parser = Whitebox . getInternalState ( dummyLoader , " parser " ) ; <nl> - assertTrue ( " Invalid feature state " , parser . getFeature ( NAMESPACES _ FEATURE ) ) ; <nl> - assertEquals ( " Invalid entity resoler " , dummyLoader , parser . getEntityResolver ( ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertTrue ( " Constructor is not private " , isUtilsClassHasPrivateConstructor ( <nl> - AbstractLoader . FeaturesForVerySecureJavaInstallations . class , true ) ) ; <nl> - } <nl> - <nl> - private static final class DummyLoader extends AbstractLoader { <nl> - <nl> - DummyLoader ( Map < String , String > publicIdToResourceNameMap ) <nl> - throws SAXException , ParserConfigurationException { <nl> - super ( publicIdToResourceNameMap ) ; <nl> - } <nl> - } <nl> - <nl> - }
NEAREST DIFF (one line): diff - - git a / docs / releasenotes . html b / docs / releasenotes . html <nl> index 01f5993 . . 822a1a1 100644 <nl> - - - a / docs / releasenotes . html <nl> + + + b / docs / releasenotes . html <nl> @ @ - 82 , 6 + 82 , 9 @ @ <nl> < li class = " body " > Added NPathComplexity check from Simon <nl> Harris ( request 750757 ) < / li > <nl> <nl> + < li class = " body " > Added several more log ( ) method to <nl> + AbtractViolationReporter . ( request 843551 ) < / li > <nl> + <nl> < / ul > <nl> <nl> < p class = " body " > <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java <nl> index fab27a9 . . aa0193f 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java <nl> @ @ - 119 , 6 + 119 , 18 @ @ public abstract class AbstractViolationReporter <nl> / * * <nl> * Helper method to log a LocalizedMessage . <nl> * <nl> + * @ param aAST a node to get line and column numbers associated <nl> + * with the message <nl> + * @ param aKey key to locale message format <nl> + * / <nl> + protected final void log ( DetailAST aAST , String aKey ) <nl> + { <nl> + log ( aAST . getLineNo ( ) , aAST . getColumnNo ( ) , aKey ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Helper method to log a LocalizedMessage . <nl> + * <nl> * @ param aLineNo line number to associate with the message <nl> * @ param aColNo column number to associate with the message <nl> * @ param aKey key to locale message format <nl> @ @ - 133 , 6 + 145 , 18 @ @ public abstract class AbstractViolationReporter <nl> / * * <nl> * Helper method to log a LocalizedMessage . <nl> * <nl> + * @ param aAST a node to get line and column numbers associated <nl> + * with the message <nl> + * @ param aKey key to locale message format <nl> + * @ param aArg0 an < code > Object < / code > value <nl> + * / <nl> + protected final void log ( DetailAST aAST , String aKey , Object aArg0 ) <nl> + { <nl> + log ( aAST . getLineNo ( ) , aAST . getColumnNo ( ) , aKey , aArg0 ) ; <nl> + } <nl> + / * * <nl> + * Helper method to log a LocalizedMessage . <nl> + * <nl> * @ param aLineNo line number to associate with the message <nl> * @ param aColNo column number to associate with the message <nl> * @ param aKey key to locale message format <nl> @ @ - 145 , 6 + 169 , 20 @ @ public abstract class AbstractViolationReporter <nl> log ( aLineNo , aColNo , aKey , new Object [ ] { aArg0 , aArg1 } ) ; <nl> } <nl> <nl> + / * * <nl> + * Helper method to log a LocalizedMessage . <nl> + * <nl> + * @ param aAST a node to get line and column numbers associated <nl> + * with the message <nl> + * @ param aKey key to locale message format <nl> + * @ param aArg0 an < code > Object < / code > value <nl> + * @ param aArg1 an < code > Object < / code > value <nl> + * / <nl> + protected final void log ( DetailAST aAST , String aKey , <nl> + Object aArg0 , Object aArg1 ) <nl> + { <nl> + log ( aAST . getLineNo ( ) , aAST . getColumnNo ( ) , aKey , aArg0 , aArg1 ) ; <nl> + } <nl> <nl> / * * <nl> * Returns the message bundle name resourcebundle that contains the messages <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java <nl> index 393e3dc . . 28ecea8 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java <nl> @ @ - 185 , 14 + 185 , 4 @ @ public class DeclarationOrderCheck extends Check <nl> default : <nl> } <nl> } <nl> - <nl> - / * * <nl> - * Our own logging method <nl> - * @ param aAST The AST to log <nl> - * @ param aError The type of error to log <nl> - * / <nl> - private void log ( DetailAST aAST , String aError ) <nl> - { <nl> - log ( aAST . getLineNo ( ) , aAST . getColumnNo ( ) , aError ) ; <nl> - } <nl> } <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java <nl> index d23dc98 . . cef9dba 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java <nl> @ @ - 194 , 9 + 194 , 7 @ @ public abstract class AbstractComplexityCheck <nl> private void leaveMethodDef ( DetailAST aAST ) <nl> { <nl> if ( mCurrentValue > mMax ) { <nl> - log ( aAST . getLineNo ( ) , <nl> - aAST . getColumnNo ( ) , <nl> - getMessageID ( ) , <nl> + log ( aAST , getMessageID ( ) , <nl> new Integer ( mCurrentValue ) , <nl> new Integer ( mMax ) ) ; <nl> }

TEST DIFF:
diff - - git a / config / import - control . xml b / config / import - control . xml 
 index 126d2fc . . 20c5c01 100644 
 - - - a / config / import - control . xml 
 + + + b / config / import - control . xml 
 @ @ - 120 , 6 + 120 , 9 @ @ 
 < allow class = " com . google . common . collect . Multiset . Entry " local - only = " true " / > 
 < allow class = " com . google . common . collect . SetMultimap " local - only = " true " / > 
 
 + < subpackage name = " imports " > 
 + < allow class = " com . puppycrawl . tools . checkstyle . XmlLoader " local - only = " true " / > 
 + < / subpackage > 
 < subpackage name = " indentation " > 
 < allow pkg = " java . lang . reflect " / > 
 < / subpackage > 
 @ @ - 154 , 6 + 157 , 7 @ @ 
 < allow class = " java . lang . ref . WeakReference " local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent " local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerFilter " local - only = " true " / > 
 + < allow class = " com . puppycrawl . tools . checkstyle . XmlLoader " local - only = " true " / > 
 < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . checks \ . [ ^ . ] + " regex = " true " / > 
 < allow pkg = " com . puppycrawl . tools . checkstyle . utils " / > 
 < allow pkg = " com . puppycrawl . tools . checkstyle . xpath " / > 
 diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index 7e038dc . . 33d284f 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 2148 , 8 + 2148 , 6 @ @ isolated classes and we cannot put them to separate package as it will affect us 
 < option value = " ClassIndependentOfModule " / > 
 < ! - - till # 4870 , used in MT check markers - - > 
 < option value = " unused " / > 
 - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 5338 - - > 
 - < option value = " AbstractClassExtendsConcreteClass " / > 
 < / list > 
 < / option > 
 < / inspection _ tool > 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 1aba40b . . c589879 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 21 , 7 + 21 , 7 @ @ 
 files = " AbstractClassNameCheck . java " / > 
 < ! - - test should be named as their main class - - > 
 < suppress checks = " AbstractClassNameCheck " 
 - files = " AbstractCheckTest . java | AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java | AbstractFileSetCheckTest . java | AbstractLoaderTest . java | AbstractNodeTest . java " / > 
 + files = " AbstractCheckTest . java | AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java | AbstractFileSetCheckTest . java | AbstractNodeTest . java " / > 
 
 < ! - - Tone down the checking for test code - - > 
 < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XdocsPagesTest \ . java " / > 
 diff - - git a / pom . xml b / pom . xml 
 index 185aa59 . . 990df69 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 2300 , 7 + 2300 , 7 @ @ 
 < / excludedMethods > 
 < avoidCallsTo > 
 < ! - - cause of https : / / github . com / checkstyle / checkstyle / issues / 3605 - - > 
 - < avoidCallsTo > com . puppycrawl . tools . checkstyle . api . AbstractLoader $ FeaturesForVerySecureJavaInstallations < / avoidCallsTo > 
 + < avoidCallsTo > com . puppycrawl . tools . checkstyle . XmlLoader $ FeaturesForVerySecureJavaInstallations < / avoidCallsTo > 
 < / avoidCallsTo > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 index d77e3d6 . . d1c58d5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 @ @ - 40 , 7 + 40 , 6 @ @ import org . xml . sax . InputSource ; 
 import org . xml . sax . SAXException ; 
 import org . xml . sax . SAXParseException ; 
 
 - import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; 
 @ @ - 580 , 7 + 579 , 7 @ @ public final class ConfigurationLoader { 
 * appear in the public API of the ConfigurationLoader . 
 * / 
 private final class InternalLoader 
 - extends AbstractLoader { 
 + extends XmlLoader { 
 / * * Module elements . * / 
 private static final String MODULE = " module " ; 
 / * * Name attribute . * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java 
 index 4c5cf4e . . 9b6b0cc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java 
 @ @ - 37 , 7 + 37 , 6 @ @ import org . xml . sax . InputSource ; 
 import org . xml . sax . SAXException ; 
 
 import com . google . common . io . Closeables ; 
 - import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 @ @ - 46 , 7 + 45 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * @ author Rick Giles 
 * / 
 public final class PackageNamesLoader 
 - extends AbstractLoader { 
 + extends XmlLoader { 
 / * * The public ID for the configuration dtd . * / 
 private static final String DTD _ PUBLIC _ ID = 
 " - / / Puppy Crawl / / DTD Package Names 1 . 0 / / EN " ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XmlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / XmlLoader . java 
 new file mode 100644 
 index 0000000 . . d2612a7 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XmlLoader . java 
 @ @ - 0 , 0 + 1 , 160 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2017 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + import java . io . IOException ; 
 + import java . io . InputStream ; 
 + import java . util . HashMap ; 
 + import java . util . Map ; 
 + 
 + import javax . xml . parsers . ParserConfigurationException ; 
 + import javax . xml . parsers . SAXParserFactory ; 
 + 
 + import org . xml . sax . InputSource ; 
 + import org . xml . sax . SAXException ; 
 + import org . xml . sax . SAXParseException ; 
 + import org . xml . sax . XMLReader ; 
 + import org . xml . sax . helpers . DefaultHandler ; 
 + 
 + / * * 
 + * Contains the common implementation of a loader , for loading a configuration 
 + * from an XML file . 
 + * < p > 
 + * The error handling policy can be described as being austere , dead set , 
 + * disciplinary , dour , draconian , exacting , firm , forbidding , grim , hard , hard - 
 + * boiled , harsh , harsh , in line , iron - fisted , no - nonsense , oppressive , 
 + * persnickety , picky , prudish , punctilious , puritanical , rigid , rigorous , 
 + * scrupulous , set , severe , square , stern , stickler , straight , strait - laced , 
 + * stringent , stuffy , stuffy , tough , unpermissive , unsparing and uptight . 
 + * < / p > 
 + * 
 + * @ author Oliver Burn 
 + * @ noinspection ThisEscapedInObjectConstruction 
 + * / 
 + public class XmlLoader 
 + extends DefaultHandler { 
 + / * * Maps public id to resolve to resource name for the DTD . * / 
 + private final Map < String , String > publicIdToResourceNameMap ; 
 + / * * Parser to read XML files . * * / 
 + private final XMLReader parser ; 
 + 
 + / * * 
 + * Creates a new instance . 
 + * @ param publicId the public ID for the DTD to resolve 
 + * @ param dtdResourceName the resource for the DTD 
 + * @ throws SAXException if an error occurs 
 + * @ throws ParserConfigurationException if an error occurs 
 + * / 
 + protected XmlLoader ( String publicId , String dtdResourceName ) 
 + throws SAXException , ParserConfigurationException { 
 + this ( new HashMap < > ( 1 ) ) ; 
 + publicIdToResourceNameMap . put ( publicId , dtdResourceName ) ; 
 + } 
 + 
 + / * * 
 + * Creates a new instance . 
 + * @ param publicIdToResourceNameMap maps public IDs to DTD resource names 
 + * @ throws SAXException if an error occurs 
 + * @ throws ParserConfigurationException if an error occurs 
 + * / 
 + protected XmlLoader ( Map < String , String > publicIdToResourceNameMap ) 
 + throws SAXException , ParserConfigurationException { 
 + this . publicIdToResourceNameMap = new HashMap < > ( publicIdToResourceNameMap ) ; 
 + final SAXParserFactory factory = SAXParserFactory . newInstance ( ) ; 
 + FeaturesForVerySecureJavaInstallations . addFeaturesForVerySecureJavaInstallations ( factory ) ; 
 + factory . setValidating ( true ) ; 
 + factory . setNamespaceAware ( true ) ; 
 + parser = factory . newSAXParser ( ) . getXMLReader ( ) ; 
 + parser . setContentHandler ( this ) ; 
 + parser . setEntityResolver ( this ) ; 
 + parser . setErrorHandler ( this ) ; 
 + } 
 + 
 + / * * 
 + * Parses the specified input source . 
 + * @ param inputSource the input source to parse . 
 + * @ throws IOException if an error occurs 
 + * @ throws SAXException in an error occurs 
 + * / 
 + public void parseInputSource ( InputSource inputSource ) 
 + throws IOException , SAXException { 
 + parser . parse ( inputSource ) ; 
 + } 
 + 
 + @ Override 
 + public InputSource resolveEntity ( String publicId , String systemId ) 
 + throws SAXException , IOException { 
 + final InputSource inputSource ; 
 + if ( publicIdToResourceNameMap . keySet ( ) . contains ( publicId ) ) { 
 + final String dtdResourceName = 
 + publicIdToResourceNameMap . get ( publicId ) ; 
 + final ClassLoader loader = 
 + getClass ( ) . getClassLoader ( ) ; 
 + final InputStream dtdIs = 
 + loader . getResourceAsStream ( dtdResourceName ) ; 
 + 
 + inputSource = new InputSource ( dtdIs ) ; 
 + } 
 + else { 
 + inputSource = super . resolveEntity ( publicId , systemId ) ; 
 + } 
 + return inputSource ; 
 + } 
 + 
 + @ Override 
 + public void error ( SAXParseException exception ) throws SAXException { 
 + throw exception ; 
 + } 
 + 
 + @ Override 
 + public void fatalError ( SAXParseException exception ) throws SAXException { 
 + throw exception ; 
 + } 
 + 
 + / * * 
 + * Used for setting specific for secure java installations features to SAXParserFactory . 
 + * Pulled out as a separate class in order to suppress Pitest mutations . 
 + * / 
 + public static final class FeaturesForVerySecureJavaInstallations { 
 + / * * Feature that enables loading external DTD when loading XML files . * / 
 + private static final String LOAD _ EXTERNAL _ DTD = 
 + " http : / / apache . org / xml / features / nonvalidating / load - external - dtd " ; 
 + / * * Feature that enables including external general entities in XML files . * / 
 + private static final String EXTERNAL _ GENERAL _ ENTITIES = 
 + " http : / / xml . org / sax / features / external - general - entities " ; 
 + 
 + / * * Stop instances being created . * * / 
 + private FeaturesForVerySecureJavaInstallations ( ) { 
 + } 
 + 
 + / * * 
 + * Configures SAXParserFactory with features requered 
 + * for exectution on very secured environments . 
 + * @ param factory factory to be configured with spectial features 
 + * @ throws SAXException if an error occurs 
 + * @ throws ParserConfigurationException if an error occurs 
 + * / 
 + public static void addFeaturesForVerySecureJavaInstallations ( SAXParserFactory factory ) 
 + throws SAXException , ParserConfigurationException { 
 + factory . setFeature ( LOAD _ EXTERNAL _ DTD , true ) ; 
 + factory . setFeature ( EXTERNAL _ GENERAL _ ENTITIES , true ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java 
 deleted file mode 100644 
 index 4c0acb7 . . 0000000 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java 
 + + + / dev / null 
 @ @ - 1 , 160 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / checkstyle : Checks Java source code for adherence to a set of rules . 
 - / / Copyright ( C ) 2001 - 2017 the original author or authors . 
 - / / 
 - / / This library is free software ; you can redistribute it and / or 
 - / / modify it under the terms of the GNU Lesser General Public 
 - / / License as published by the Free Software Foundation ; either 
 - / / version 2 . 1 of the License , or ( at your option ) any later version . 
 - / / 
 - / / This library is distributed in the hope that it will be useful , 
 - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - / / Lesser General Public License for more details . 
 - / / 
 - / / You should have received a copy of the GNU Lesser General Public 
 - / / License along with this library ; if not , write to the Free Software 
 - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - package com . puppycrawl . tools . checkstyle . api ; 
 - 
 - import java . io . IOException ; 
 - import java . io . InputStream ; 
 - import java . util . HashMap ; 
 - import java . util . Map ; 
 - 
 - import javax . xml . parsers . ParserConfigurationException ; 
 - import javax . xml . parsers . SAXParserFactory ; 
 - 
 - import org . xml . sax . InputSource ; 
 - import org . xml . sax . SAXException ; 
 - import org . xml . sax . SAXParseException ; 
 - import org . xml . sax . XMLReader ; 
 - import org . xml . sax . helpers . DefaultHandler ; 
 - 
 - / * * 
 - * Contains the common implementation of a loader , for loading a configuration 
 - * from an XML file . 
 - * < p > 
 - * The error handling policy can be described as being austere , dead set , 
 - * disciplinary , dour , draconian , exacting , firm , forbidding , grim , hard , hard - 
 - * boiled , harsh , harsh , in line , iron - fisted , no - nonsense , oppressive , 
 - * persnickety , picky , prudish , punctilious , puritanical , rigid , rigorous , 
 - * scrupulous , set , severe , square , stern , stickler , straight , strait - laced , 
 - * stringent , stuffy , stuffy , tough , unpermissive , unsparing and uptight . 
 - * < / p > 
 - * 
 - * @ author Oliver Burn 
 - * @ noinspection ThisEscapedInObjectConstruction , AbstractClassExtendsConcreteClass 
 - * / 
 - public abstract class AbstractLoader 
 - extends DefaultHandler { 
 - / * * Maps public id to resolve to resource name for the DTD . * / 
 - private final Map < String , String > publicIdToResourceNameMap ; 
 - / * * Parser to read XML files . * * / 
 - private final XMLReader parser ; 
 - 
 - / * * 
 - * Creates a new instance . 
 - * @ param publicId the public ID for the DTD to resolve 
 - * @ param dtdResourceName the resource for the DTD 
 - * @ throws SAXException if an error occurs 
 - * @ throws ParserConfigurationException if an error occurs 
 - * / 
 - protected AbstractLoader ( String publicId , String dtdResourceName ) 
 - throws SAXException , ParserConfigurationException { 
 - this ( new HashMap < > ( 1 ) ) ; 
 - publicIdToResourceNameMap . put ( publicId , dtdResourceName ) ; 
 - } 
 - 
 - / * * 
 - * Creates a new instance . 
 - * @ param publicIdToResourceNameMap maps public IDs to DTD resource names 
 - * @ throws SAXException if an error occurs 
 - * @ throws ParserConfigurationException if an error occurs 
 - * / 
 - protected AbstractLoader ( Map < String , String > publicIdToResourceNameMap ) 
 - throws SAXException , ParserConfigurationException { 
 - this . publicIdToResourceNameMap = new HashMap < > ( publicIdToResourceNameMap ) ; 
 - final SAXParserFactory factory = SAXParserFactory . newInstance ( ) ; 
 - FeaturesForVerySecureJavaInstallations . addFeaturesForVerySecureJavaInstallations ( factory ) ; 
 - factory . setValidating ( true ) ; 
 - factory . setNamespaceAware ( true ) ; 
 - parser = factory . newSAXParser ( ) . getXMLReader ( ) ; 
 - parser . setContentHandler ( this ) ; 
 - parser . setEntityResolver ( this ) ; 
 - parser . setErrorHandler ( this ) ; 
 - } 
 - 
 - / * * 
 - * Parses the specified input source . 
 - * @ param inputSource the input source to parse . 
 - * @ throws IOException if an error occurs 
 - * @ throws SAXException in an error occurs 
 - * / 
 - public void parseInputSource ( InputSource inputSource ) 
 - throws IOException , SAXException { 
 - parser . parse ( inputSource ) ; 
 - } 
 - 
 - @ Override 
 - public InputSource resolveEntity ( String publicId , String systemId ) 
 - throws SAXException , IOException { 
 - final InputSource inputSource ; 
 - if ( publicIdToResourceNameMap . keySet ( ) . contains ( publicId ) ) { 
 - final String dtdResourceName = 
 - publicIdToResourceNameMap . get ( publicId ) ; 
 - final ClassLoader loader = 
 - getClass ( ) . getClassLoader ( ) ; 
 - final InputStream dtdIs = 
 - loader . getResourceAsStream ( dtdResourceName ) ; 
 - 
 - inputSource = new InputSource ( dtdIs ) ; 
 - } 
 - else { 
 - inputSource = super . resolveEntity ( publicId , systemId ) ; 
 - } 
 - return inputSource ; 
 - } 
 - 
 - @ Override 
 - public void error ( SAXParseException exception ) throws SAXException { 
 - throw exception ; 
 - } 
 - 
 - @ Override 
 - public void fatalError ( SAXParseException exception ) throws SAXException { 
 - throw exception ; 
 - } 
 - 
 - / * * 
 - * Used for setting specific for secure java installations features to SAXParserFactory . 
 - * Pulled out as a separate class in order to suppress Pitest mutations . 
 - * / 
 - public static final class FeaturesForVerySecureJavaInstallations { 
 - / * * Feature that enables loading external DTD when loading XML files . * / 
 - private static final String LOAD _ EXTERNAL _ DTD = 
 - " http : / / apache . org / xml / features / nonvalidating / load - external - dtd " ; 
 - / * * Feature that enables including external general entities in XML files . * / 
 - private static final String EXTERNAL _ GENERAL _ ENTITIES = 
 - " http : / / xml . org / sax / features / external - general - entities " ; 
 - 
 - / * * Stop instances being created . * * / 
 - private FeaturesForVerySecureJavaInstallations ( ) { 
 - } 
 - 
 - / * * 
 - * Configures SAXParserFactory with features requered 
 - * for exectution on very secured environments . 
 - * @ param factory factory to be configured with spectial features 
 - * @ throws SAXException if an error occurs 
 - * @ throws ParserConfigurationException if an error occurs 
 - * / 
 - public static void addFeaturesForVerySecureJavaInstallations ( SAXParserFactory factory ) 
 - throws SAXException , ParserConfigurationException { 
 - factory . setFeature ( LOAD _ EXTERNAL _ DTD , true ) ; 
 - factory . setFeature ( EXTERNAL _ GENERAL _ ENTITIES , true ) ; 
 - } 
 - } 
 - } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 index f6e7869 . . 93a442b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 @ @ - 34 , 14 + 34 , 14 @ @ import org . xml . sax . Attributes ; 
 import org . xml . sax . InputSource ; 
 import org . xml . sax . SAXException ; 
 
 - import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; 
 + import com . puppycrawl . tools . checkstyle . XmlLoader ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 
 / * * 
 * Responsible for loading the contents of an import control configuration file . 
 * @ author Oliver Burn 
 * / 
 - final class ImportControlLoader extends AbstractLoader { 
 + final class ImportControlLoader extends XmlLoader { 
 / * * The public ID for the configuration dtd . * / 
 private static final String DTD _ PUBLIC _ ID _ 1 _ 0 = 
 " - / / Puppy Crawl / / DTD Import Control 1 . 0 / / EN " ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoader . java 
 index cf7d4eb . . ced67bc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoader . java 
 @ @ - 36 , 7 + 36 , 7 @ @ import org . xml . sax . InputSource ; 
 import org . xml . sax . SAXException ; 
 
 import com . puppycrawl . tools . checkstyle . TreeWalkerFilter ; 
 - import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; 
 + import com . puppycrawl . tools . checkstyle . XmlLoader ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . FilterSet ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 @ @ - 46 , 7 + 46 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * @ author Rick Giles 
 * / 
 public final class SuppressionsLoader 
 - extends AbstractLoader { 
 + extends XmlLoader { 
 / * * The public ID for the configuration dtd . * / 
 private static final String DTD _ PUBLIC _ ID _ 1 _ 0 = 
 " - / / Puppy Crawl / / DTD Suppressions 1 . 0 / / EN " ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XmlLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XmlLoaderTest . java 
 new file mode 100644 
 index 0000000 . . 482d0ef 
 - - - / dev / null 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XmlLoaderTest . java 
 @ @ - 0 , 0 + 1 , 65 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2017 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + import static com . puppycrawl . tools . checkstyle . internal . utils . TestUtil . isUtilsClassHasPrivateConstructor ; 
 + import static org . junit . Assert . assertEquals ; 
 + import static org . junit . Assert . assertTrue ; 
 + 
 + import java . util . HashMap ; 
 + import java . util . Map ; 
 + 
 + import javax . xml . parsers . ParserConfigurationException ; 
 + 
 + import org . junit . Test ; 
 + import org . powermock . reflect . Whitebox ; 
 + import org . xml . sax . SAXException ; 
 + import org . xml . sax . XMLReader ; 
 + 
 + import com . sun . org . apache . xerces . internal . impl . Constants ; 
 + 
 + public class XmlLoaderTest { 
 + 
 + private static final String NAMESPACES _ FEATURE = 
 + Constants . SAX _ FEATURE _ PREFIX + Constants . NAMESPACES _ FEATURE ; 
 + 
 + @ Test 
 + public void testParserConfiguratedSuccefully ( ) throws Exception { 
 + final DummyLoader dummyLoader = new DummyLoader ( new HashMap < > ( 1 ) ) ; 
 + final XMLReader parser = Whitebox . getInternalState ( dummyLoader , " parser " ) ; 
 + assertTrue ( " Invalid feature state " , parser . getFeature ( NAMESPACES _ FEATURE ) ) ; 
 + assertEquals ( " Invalid entity resoler " , dummyLoader , parser . getEntityResolver ( ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 + assertTrue ( " Constructor is not private " , isUtilsClassHasPrivateConstructor ( 
 + XmlLoader . FeaturesForVerySecureJavaInstallations . class , true ) ) ; 
 + } 
 + 
 + private static final class DummyLoader extends XmlLoader { 
 + 
 + DummyLoader ( Map < String , String > publicIdToResourceNameMap ) 
 + throws SAXException , ParserConfigurationException { 
 + super ( publicIdToResourceNameMap ) ; 
 + } 
 + } 
 + 
 + } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java 
 deleted file mode 100644 
 index 80dd679 . . 0000000 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java 
 + + + / dev / null 
 @ @ - 1 , 65 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / checkstyle : Checks Java source code for adherence to a set of rules . 
 - / / Copyright ( C ) 2001 - 2017 the original author or authors . 
 - / / 
 - / / This library is free software ; you can redistribute it and / or 
 - / / modify it under the terms of the GNU Lesser General Public 
 - / / License as published by the Free Software Foundation ; either 
 - / / version 2 . 1 of the License , or ( at your option ) any later version . 
 - / / 
 - / / This library is distributed in the hope that it will be useful , 
 - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - / / Lesser General Public License for more details . 
 - / / 
 - / / You should have received a copy of the GNU Lesser General Public 
 - / / License along with this library ; if not , write to the Free Software 
 - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - package com . puppycrawl . tools . checkstyle . api ; 
 - 
 - import static com . puppycrawl . tools . checkstyle . internal . utils . TestUtil . isUtilsClassHasPrivateConstructor ; 
 - import static org . junit . Assert . assertEquals ; 
 - import static org . junit . Assert . assertTrue ; 
 - 
 - import java . util . HashMap ; 
 - import java . util . Map ; 
 - 
 - import javax . xml . parsers . ParserConfigurationException ; 
 - 
 - import org . junit . Test ; 
 - import org . powermock . reflect . Whitebox ; 
 - import org . xml . sax . SAXException ; 
 - import org . xml . sax . XMLReader ; 
 - 
 - import com . sun . org . apache . xerces . internal . impl . Constants ; 
 - 
 - public class AbstractLoaderTest { 
 - 
 - private static final String NAMESPACES _ FEATURE = 
 - Constants . SAX _ FEATURE _ PREFIX + Constants . NAMESPACES _ FEATURE ; 
 - 
 - @ Test 
 - public void testParserConfiguratedSuccefully ( ) throws Exception { 
 - final DummyLoader dummyLoader = new DummyLoader ( new HashMap < > ( 1 ) ) ; 
 - final XMLReader parser = Whitebox . getInternalState ( dummyLoader , " parser " ) ; 
 - assertTrue ( " Invalid feature state " , parser . getFeature ( NAMESPACES _ FEATURE ) ) ; 
 - assertEquals ( " Invalid entity resoler " , dummyLoader , parser . getEntityResolver ( ) ) ; 
 - } 
 - 
 - @ Test 
 - public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertTrue ( " Constructor is not private " , isUtilsClassHasPrivateConstructor ( 
 - AbstractLoader . FeaturesForVerySecureJavaInstallations . class , true ) ) ; 
 - } 
 - 
 - private static final class DummyLoader extends AbstractLoader { 
 - 
 - DummyLoader ( Map < String , String > publicIdToResourceNameMap ) 
 - throws SAXException , ParserConfigurationException { 
 - super ( publicIdToResourceNameMap ) ; 
 - } 
 - } 
 - 
 - }

NEAREST DIFF:
diff - - git a / docs / releasenotes . html b / docs / releasenotes . html 
 index 01f5993 . . 822a1a1 100644 
 - - - a / docs / releasenotes . html 
 + + + b / docs / releasenotes . html 
 @ @ - 82 , 6 + 82 , 9 @ @ 
 < li class = " body " > Added NPathComplexity check from Simon 
 Harris ( request 750757 ) < / li > 
 
 + < li class = " body " > Added several more log ( ) method to 
 + AbtractViolationReporter . ( request 843551 ) < / li > 
 + 
 < / ul > 
 
 < p class = " body " > 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java 
 index fab27a9 . . aa0193f 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java 
 @ @ - 119 , 6 + 119 , 18 @ @ public abstract class AbstractViolationReporter 
 / * * 
 * Helper method to log a LocalizedMessage . 
 * 
 + * @ param aAST a node to get line and column numbers associated 
 + * with the message 
 + * @ param aKey key to locale message format 
 + * / 
 + protected final void log ( DetailAST aAST , String aKey ) 
 + { 
 + log ( aAST . getLineNo ( ) , aAST . getColumnNo ( ) , aKey ) ; 
 + } 
 + 
 + / * * 
 + * Helper method to log a LocalizedMessage . 
 + * 
 * @ param aLineNo line number to associate with the message 
 * @ param aColNo column number to associate with the message 
 * @ param aKey key to locale message format 
 @ @ - 133 , 6 + 145 , 18 @ @ public abstract class AbstractViolationReporter 
 / * * 
 * Helper method to log a LocalizedMessage . 
 * 
 + * @ param aAST a node to get line and column numbers associated 
 + * with the message 
 + * @ param aKey key to locale message format 
 + * @ param aArg0 an < code > Object < / code > value 
 + * / 
 + protected final void log ( DetailAST aAST , String aKey , Object aArg0 ) 
 + { 
 + log ( aAST . getLineNo ( ) , aAST . getColumnNo ( ) , aKey , aArg0 ) ; 
 + } 
 + / * * 
 + * Helper method to log a LocalizedMessage . 
 + * 
 * @ param aLineNo line number to associate with the message 
 * @ param aColNo column number to associate with the message 
 * @ param aKey key to locale message format 
 @ @ - 145 , 6 + 169 , 20 @ @ public abstract class AbstractViolationReporter 
 log ( aLineNo , aColNo , aKey , new Object [ ] { aArg0 , aArg1 } ) ; 
 } 
 
 + / * * 
 + * Helper method to log a LocalizedMessage . 
 + * 
 + * @ param aAST a node to get line and column numbers associated 
 + * with the message 
 + * @ param aKey key to locale message format 
 + * @ param aArg0 an < code > Object < / code > value 
 + * @ param aArg1 an < code > Object < / code > value 
 + * / 
 + protected final void log ( DetailAST aAST , String aKey , 
 + Object aArg0 , Object aArg1 ) 
 + { 
 + log ( aAST . getLineNo ( ) , aAST . getColumnNo ( ) , aKey , aArg0 , aArg1 ) ; 
 + } 
 
 / * * 
 * Returns the message bundle name resourcebundle that contains the messages 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java 
 index 393e3dc . . 28ecea8 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java 
 @ @ - 185 , 14 + 185 , 4 @ @ public class DeclarationOrderCheck extends Check 
 default : 
 } 
 } 
 - 
 - / * * 
 - * Our own logging method 
 - * @ param aAST The AST to log 
 - * @ param aError The type of error to log 
 - * / 
 - private void log ( DetailAST aAST , String aError ) 
 - { 
 - log ( aAST . getLineNo ( ) , aAST . getColumnNo ( ) , aError ) ; 
 - } 
 } 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java 
 index d23dc98 . . cef9dba 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java 
 @ @ - 194 , 9 + 194 , 7 @ @ public abstract class AbstractComplexityCheck 
 private void leaveMethodDef ( DetailAST aAST ) 
 { 
 if ( mCurrentValue > mMax ) { 
 - log ( aAST . getLineNo ( ) , 
 - aAST . getColumnNo ( ) , 
 - getMessageID ( ) , 
 + log ( aAST , getMessageID ( ) , 
 new Integer ( mCurrentValue ) , 
 new Integer ( mMax ) ) ; 
 }
