BLEU SCORE: 0.029083177105737566

TEST MSG: Issue # 3369 : Changed 2 tests to not make assumptions about the order of HashMap
GENERATED MSG: Added UT to show that case indent works correct . # 79

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> index 4473c36 . . 3e9d52e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> @ @ - 177 , 17 + 177 , 23 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void testGetRequiredTokens ( ) { <nl> final IndentationCheck checkObj = new IndentationCheck ( ) ; <nl> + final int [ ] requiredTokens = checkObj . getRequiredTokens ( ) ; <nl> final HandlerFactory handlerFactory = new HandlerFactory ( ) ; <nl> final int [ ] expected = handlerFactory . getHandledTypes ( ) ; <nl> - assertArrayEquals ( expected , checkObj . getRequiredTokens ( ) ) ; <nl> + Arrays . sort ( expected ) ; <nl> + Arrays . sort ( requiredTokens ) ; <nl> + assertArrayEquals ( expected , requiredTokens ) ; <nl> } <nl> <nl> @ Test <nl> public void testGetAcceptableTokens ( ) { <nl> final IndentationCheck checkObj = new IndentationCheck ( ) ; <nl> + final int [ ] acceptableTokens = checkObj . getAcceptableTokens ( ) ; <nl> final HandlerFactory handlerFactory = new HandlerFactory ( ) ; <nl> final int [ ] expected = handlerFactory . getHandledTypes ( ) ; <nl> - assertArrayEquals ( expected , checkObj . getAcceptableTokens ( ) ) ; <nl> + Arrays . sort ( expected ) ; <nl> + Arrays . sort ( acceptableTokens ) ; <nl> + assertArrayEquals ( expected , acceptableTokens ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java <nl> index 1eac7af . . f004e2f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java <nl> @ @ - 32 , 11 + 32 , 11 @ @ public class EmptyLineSeparatorCheckTest <nl> DefaultConfiguration checkConfig = createCheckConfig ( EmptyLineSeparatorCheck . class ) ; <nl> <nl> final String [ ] expected = { <nl> - " 20 : ' import ' should be separated from previous statement . " , <nl> - " 33 : ' CLASS _ DEF ' should be separated from previous statement . " , <nl> - " 36 : ' VARIABLE _ DEF ' should be separated from previous statement . " , <nl> - " 37 : ' STATIC _ INIT ' should be separated from previous statement . " , <nl> - " 75 : ' INTERFACE _ DEF ' should be separated from previous statement . " , <nl> + " 21 : ' import ' should be separated from previous statement . " , <nl> + " 35 : ' CLASS _ DEF ' should be separated from previous statement . " , <nl> + " 38 : ' VARIABLE _ DEF ' should be separated from previous statement . " , <nl> + " 39 : ' STATIC _ INIT ' should be separated from previous statement . " , <nl> + " 77 : ' INTERFACE _ DEF ' should be separated from previous statement . " , <nl> } ; <nl> verify ( checkConfig , getPath ( " whitespace / InputEmptyLineSeparatorCheck . java " ) , expected ) ; <nl> } <nl> @ @ - 49 , 10 + 49 , 10 @ @ public class EmptyLineSeparatorCheckTest <nl> checkConfig . addAttribute ( " allowNoEmptyLineBetweenFields " , " true " ) ; <nl> <nl> final String [ ] expected = { <nl> - " 20 : ' import ' should be separated from previous statement . " , <nl> - " 33 : ' CLASS _ DEF ' should be separated from previous statement . " , <nl> - " 37 : ' STATIC _ INIT ' should be separated from previous statement . " , <nl> - " 75 : ' INTERFACE _ DEF ' should be separated from previous statement . " , <nl> + " 21 : ' import ' should be separated from previous statement . " , <nl> + " 35 : ' CLASS _ DEF ' should be separated from previous statement . " , <nl> + " 39 : ' STATIC _ INIT ' should be separated from previous statement . " , <nl> + " 77 : ' INTERFACE _ DEF ' should be separated from previous statement . " , <nl> } ; <nl> verify ( checkConfig , getPath ( " whitespace / InputEmptyLineSeparatorCheck . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheck . java <nl> index b5101e5 . . 1e00920 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheck . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheck . java <nl> @ @ - 16 , 6 + 16 , 8 @ @ <nl> / / License along with this library ; if not , write to the Free Software <nl> / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . whitespace ; <nl> import java . io . Serializable ; <nl> import java . util . ArrayList ; <nl> import java . util . HashMap ; <nl> @ @ - 29 , 7 + 31 , 7 @ @ import com . google . common . io . CharSource ; <nl> import javax . swing . AbstractAction ; <nl> <nl> import org . apache . commons . beanutils . locale . converters . ByteLocaleConverter ; <nl> - import org . apache . commons . io . FilenameUtils ; <nl> + import org . apache . commons . beanutils . BasicDynaBean ; <nl> class InputEmptyLineSeparatorCheck <nl> { <nl> 	 public static final double FOO _ PI = 3 . 1415 ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheckHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheckHeader . java <nl> index 5321982 . . afbcac1 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheckHeader . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheckHeader . java <nl> @ @ - 18 , 4 + 18 , 4 @ @ <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> package com . puppycrawl . tools . checkstyle . whitespace ; <nl> <nl> - class InputEmptyLineSeparatorCheck { } <nl> + class InputEmptyLineSeparatorCheckHeader { }

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 index 4473c36 . . 3e9d52e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 @ @ - 177 , 17 + 177 , 23 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 @ Test 
 public void testGetRequiredTokens ( ) { 
 final IndentationCheck checkObj = new IndentationCheck ( ) ; 
 + final int [ ] requiredTokens = checkObj . getRequiredTokens ( ) ; 
 final HandlerFactory handlerFactory = new HandlerFactory ( ) ; 
 final int [ ] expected = handlerFactory . getHandledTypes ( ) ; 
 - assertArrayEquals ( expected , checkObj . getRequiredTokens ( ) ) ; 
 + Arrays . sort ( expected ) ; 
 + Arrays . sort ( requiredTokens ) ; 
 + assertArrayEquals ( expected , requiredTokens ) ; 
 } 
 
 @ Test 
 public void testGetAcceptableTokens ( ) { 
 final IndentationCheck checkObj = new IndentationCheck ( ) ; 
 + final int [ ] acceptableTokens = checkObj . getAcceptableTokens ( ) ; 
 final HandlerFactory handlerFactory = new HandlerFactory ( ) ; 
 final int [ ] expected = handlerFactory . getHandledTypes ( ) ; 
 - assertArrayEquals ( expected , checkObj . getAcceptableTokens ( ) ) ; 
 + Arrays . sort ( expected ) ; 
 + Arrays . sort ( acceptableTokens ) ; 
 + assertArrayEquals ( expected , acceptableTokens ) ; 
 } 
 
 @ Test

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java 
 index 1eac7af . . f004e2f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java 
 @ @ - 32 , 11 + 32 , 11 @ @ public class EmptyLineSeparatorCheckTest 
 DefaultConfiguration checkConfig = createCheckConfig ( EmptyLineSeparatorCheck . class ) ; 
 
 final String [ ] expected = { 
 - " 20 : ' import ' should be separated from previous statement . " , 
 - " 33 : ' CLASS _ DEF ' should be separated from previous statement . " , 
 - " 36 : ' VARIABLE _ DEF ' should be separated from previous statement . " , 
 - " 37 : ' STATIC _ INIT ' should be separated from previous statement . " , 
 - " 75 : ' INTERFACE _ DEF ' should be separated from previous statement . " , 
 + " 21 : ' import ' should be separated from previous statement . " , 
 + " 35 : ' CLASS _ DEF ' should be separated from previous statement . " , 
 + " 38 : ' VARIABLE _ DEF ' should be separated from previous statement . " , 
 + " 39 : ' STATIC _ INIT ' should be separated from previous statement . " , 
 + " 77 : ' INTERFACE _ DEF ' should be separated from previous statement . " , 
 } ; 
 verify ( checkConfig , getPath ( " whitespace / InputEmptyLineSeparatorCheck . java " ) , expected ) ; 
 } 
 @ @ - 49 , 10 + 49 , 10 @ @ public class EmptyLineSeparatorCheckTest 
 checkConfig . addAttribute ( " allowNoEmptyLineBetweenFields " , " true " ) ; 
 
 final String [ ] expected = { 
 - " 20 : ' import ' should be separated from previous statement . " , 
 - " 33 : ' CLASS _ DEF ' should be separated from previous statement . " , 
 - " 37 : ' STATIC _ INIT ' should be separated from previous statement . " , 
 - " 75 : ' INTERFACE _ DEF ' should be separated from previous statement . " , 
 + " 21 : ' import ' should be separated from previous statement . " , 
 + " 35 : ' CLASS _ DEF ' should be separated from previous statement . " , 
 + " 39 : ' STATIC _ INIT ' should be separated from previous statement . " , 
 + " 77 : ' INTERFACE _ DEF ' should be separated from previous statement . " , 
 } ; 
 verify ( checkConfig , getPath ( " whitespace / InputEmptyLineSeparatorCheck . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheck . java 
 index b5101e5 . . 1e00920 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheck . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheck . java 
 @ @ - 16 , 6 + 16 , 8 @ @ 
 / / License along with this library ; if not , write to the Free Software 
 / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . whitespace ; 
 import java . io . Serializable ; 
 import java . util . ArrayList ; 
 import java . util . HashMap ; 
 @ @ - 29 , 7 + 31 , 7 @ @ import com . google . common . io . CharSource ; 
 import javax . swing . AbstractAction ; 
 
 import org . apache . commons . beanutils . locale . converters . ByteLocaleConverter ; 
 - import org . apache . commons . io . FilenameUtils ; 
 + import org . apache . commons . beanutils . BasicDynaBean ; 
 class InputEmptyLineSeparatorCheck 
 { 
 	 public static final double FOO _ PI = 3 . 1415 ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheckHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheckHeader . java 
 index 5321982 . . afbcac1 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheckHeader . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / InputEmptyLineSeparatorCheckHeader . java 
 @ @ - 18 , 4 + 18 , 4 @ @ 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 package com . puppycrawl . tools . checkstyle . whitespace ; 
 
 - class InputEmptyLineSeparatorCheck { } 
 + class InputEmptyLineSeparatorCheckHeader { }
