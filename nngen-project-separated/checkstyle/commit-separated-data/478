BLEU SCORE: 0.028398387225677897

TEST MSG: Issue # 5208 : use maven version plugin to report new versions for update
GENERATED MSG: A near complete build system now . It generates the assemblies for distribution .

TEST DIFF (one line): diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh <nl> index 474703c . . 08a7dea 100755 <nl> - - - a / . ci / travis / travis . sh <nl> + + + b / . ci / travis / travis . sh <nl> @ @ - 13 , 6 + 13 , 23 @ @ nondex ) <nl> if [ [ $ RESULT ! = 0 ] ] ; then false ; fi <nl> ; ; <nl> <nl> + versions ) <nl> + if [ [ $ TRAVIS _ EVENT _ TYPE ! = " cron " ] ] ; then exit 0 ; fi <nl> + mvn clean versions : dependency - updates - report versions : plugin - updates - report <nl> + if [ $ ( grep " < nextVersion > " target / * - updates - report . xml | cat | wc - l ) - gt 0 ] ; then <nl> + echo " Version reports ( dependency - updates - report . xml ) : " <nl> + cat target / dependency - updates - report . xml <nl> + echo " Version reports ( plugin - updates - report . xml ) : " <nl> + cat target / plugin - updates - report . xml <nl> + echo " New versions : " <nl> + grep - B 7 " < nextVersion > " target / dependency - updates - report . xml <nl> + grep - B 4 " < nextVersion > " target / plugin - updates - report . xml <nl> + exit 1 <nl> + else <nl> + echo " No new versions found " <nl> + fi <nl> + ; ; <nl> + <nl> assembly - run - all - jar ) <nl> mvn clean package - Passembly <nl> CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> diff - - git a / . travis . yml b / . travis . yml <nl> index ee0a9c8 . . dfa63a1 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 175 , 6 + 175 , 12 @ @ matrix : <nl> - DESC = " no error test on simple - binary - encoding " <nl> - CMD = " . / . ci / travis / travis . sh no - error - test - sbe " <nl> <nl> + # versions to update <nl> + - jdk : oraclejdk8 <nl> + env : <nl> + - DESC = " print versions to update " <nl> + - CMD = " . / . ci / travis / travis . sh versions " <nl> + <nl> script : <nl> - SKIP _ FILES = " . github | appveyor . yml | circle . yml | distelli - manifest . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | shippable . yml | wercker . yml | intellij - idea - inspections . xml " <nl> - SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c | sed ' s / ^ * / / ' ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) <nl> diff - - git a / config / version - number - rules . xml b / config / version - number - rules . xml <nl> new file mode 100644 <nl> index 0000000 . . 101a3b8 <nl> - - - / dev / null <nl> + + + b / config / version - number - rules . xml <nl> @ @ - 0 , 0 + 1 , 21 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < ruleset xmlns = " http : / / mojo . codehaus . org / versions - maven - plugin / rule / 2 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " <nl> + comparisonMethod = " maven " xsi : schemaLocation = " http : / / mojo . codehaus . org / versions - maven - plugin / rule / 2 . 0 . 0 https : / / mojo . codehaus . org / versions - maven - plugin / xsd / rule - 2 . 0 . 0 . xsd " > <nl> + <nl> + < ignoreVersions > <nl> + < ignoreVersion type = " regex " > . * [ - _ \ . ] ( alpha | Alpha | ALPHA | beta | Beta | BETA | rc | RC | M | EA ) [ - _ \ . ] ? [ 0 - 9 ] ? . * < / ignoreVersion > <nl> + < / ignoreVersions > <nl> + < rules > <nl> + < rule groupId = " com . google . guava " > <nl> + < ignoreVersions > <nl> + < ignoreVersion type = " regex " > . * - android < / ignoreVersion > <nl> + < / ignoreVersions > <nl> + < / rule > <nl> + < rule groupId = " antlr " > <nl> + < ignoreVersions > <nl> + < ! - - this is really old version before versioning become semantic - - > <nl> + < ignoreVersion type = " regex " > 20030911 < / ignoreVersion > <nl> + < / ignoreVersions > <nl> + < / rule > <nl> + < / rules > <nl> + < / ruleset > <nl> diff - - git a / pom . xml b / pom . xml <nl> index e6d1936 . . 90a1207 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 680 , 6 + 680 , 11 @ @ <nl> < version > $ { maven . versions . plugin . version } < / version > <nl> < configuration > <nl> < generateBackupPoms > false < / generateBackupPoms > <nl> + < rulesUri > file : / / $ { basedir } / config / version - number - rules . xml < / rulesUri > <nl> + < formats > <nl> + < format > xml < / format > <nl> + < format > html < / format > <nl> + < / formats > <nl> < / configuration > <nl> < / plugin > <nl> < plugin >
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> index c71f8dd . . e91fb3d 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> @ @ - 135 , 7 + 135 , 7 @ @ public class LeftCurlyCheck <nl> case TokenTypes . ANNOTATION _ DEF : <nl> case TokenTypes . ENUM _ DEF : <nl> case TokenTypes . ENUM _ CONSTANT _ DEF : <nl> - startToken = ( DetailAST ) skipAnnotationOnlyLines ( aAST ) ; <nl> + startToken = skipAnnotationOnlyLines ( aAST ) ; <nl> final DetailAST objBlock = aAST . findFirstToken ( TokenTypes . OBJBLOCK ) ; <nl> brace = ( objBlock = = null ) <nl> ? null <nl> @ @ - 156 , 7 + 156 , 7 @ @ public class LeftCurlyCheck <nl> <nl> case TokenTypes . LITERAL _ ELSE : <nl> startToken = aAST ; <nl> - final DetailAST candidate = ( DetailAST ) aAST . getFirstChild ( ) ; <nl> + final DetailAST candidate = aAST . getFirstChild ( ) ; <nl> brace = <nl> ( candidate . getType ( ) = = TokenTypes . SLIST ) <nl> ? candidate <nl> @ @ - 205 , 16 + 205 , 14 @ @ public class LeftCurlyCheck <nl> if ( tokenAfterLast . getLineNo ( ) > lastAnnot . getLineNo ( ) ) { <nl> return tokenAfterLast ; <nl> } <nl> - else { <nl> - final int lastAnnotLineNumber = lastAnnot . getLineNo ( ) ; <nl> - while ( lastAnnot . getPreviousSibling ( ) ! = null <nl> - & & ( lastAnnot . getPreviousSibling ( ) . getLineNo ( ) <nl> - = = lastAnnotLineNumber ) ) <nl> - { <nl> - lastAnnot = lastAnnot . getPreviousSibling ( ) ; <nl> - } <nl> - return lastAnnot ; <nl> + final int lastAnnotLineNumber = lastAnnot . getLineNo ( ) ; <nl> + while ( lastAnnot . getPreviousSibling ( ) ! = null <nl> + & & ( lastAnnot . getPreviousSibling ( ) . getLineNo ( ) <nl> + = = lastAnnotLineNumber ) ) <nl> + { <nl> + lastAnnot = lastAnnot . getPreviousSibling ( ) ; <nl> } <nl> + return lastAnnot ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> index 658931e . . 8d0b514 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> @ @ - 85 , 7 + 85 , 7 @ @ public class SuppressWithNearbyCommentFilter <nl> public class Tag implements Comparable < Tag > <nl> { <nl> / * * The text of the tag . * / <nl> - private String mText ; <nl> + private final String mText ; <nl> <nl> / * * The first line where warnings may be suppressed . * / <nl> private int mFirstLine ; <nl> @ @ - 133 , 7 + 133 , 7 @ @ public class SuppressWithNearbyCommentFilter <nl> } <nl> influence = Integer . parseInt ( format ) ; <nl> } <nl> - catch ( NumberFormatException e ) { <nl> + catch ( final NumberFormatException e ) { <nl> throw new ConversionException ( <nl> " unable to parse influence from ' " + aText <nl> + " ' using " + mInfluenceFormat , e ) ; <nl> @ @ - 247 , 6 + 247 , 7 @ @ public class SuppressWithNearbyCommentFilter <nl> } <nl> <nl> / * * { @ inheritDoc } * / <nl> + @ Override <nl> public final String toString ( ) <nl> { <nl> return " Tag [ lines = [ " + getFirstLine ( ) + " to " + getLastLine ( ) <nl> @ @ - 343 , 7 + 344 , 7 @ @ public class SuppressWithNearbyCommentFilter <nl> / * * @ return the FileContents for this filter . * / <nl> public FileContents getFileContents ( ) <nl> { <nl> - return ( FileContents ) mFileContentsReference . get ( ) ; <nl> + return mFileContentsReference . get ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 447 , 7 + 448 , 7 @ @ public class SuppressWithNearbyCommentFilter <nl> tagSuppressions ( ) ; <nl> } <nl> for ( final Iterator < Tag > iter = mTags . iterator ( ) ; iter . hasNext ( ) ; ) { <nl> - final Tag tag = ( Tag ) iter . next ( ) ; <nl> + final Tag tag = iter . next ( ) ; <nl> if ( tag . isMatch ( aEvent ) ) { <nl> return false ; <nl> } <nl> @ @ - 469 , 7 + 470 , 7 @ @ public class SuppressWithNearbyCommentFilter <nl> if ( mCheckC ) { <nl> final Collection < List < TextBlock > > cComments = <nl> contents . getCComments ( ) . values ( ) ; <nl> - for ( List < TextBlock > element : cComments ) { <nl> + for ( final List < TextBlock > element : cComments ) { <nl> tagSuppressions ( element ) ; <nl> } <nl> } <nl> @ @ - 483 , 7 + 484 , 7 @ @ public class SuppressWithNearbyCommentFilter <nl> * / <nl> private void tagSuppressions ( Collection < TextBlock > aComments ) <nl> { <nl> - for ( TextBlock comment : aComments ) { <nl> + for ( final TextBlock comment : aComments ) { <nl> final int startLineNo = comment . getStartLineNo ( ) ; <nl> final String [ ] text = comment . getText ( ) ; <nl> tagCommentLine ( text [ 0 ] , startLineNo , comment . getStartColNo ( ) ) ;

TEST DIFF:
diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh 
 index 474703c . . 08a7dea 100755 
 - - - a / . ci / travis / travis . sh 
 + + + b / . ci / travis / travis . sh 
 @ @ - 13 , 6 + 13 , 23 @ @ nondex ) 
 if [ [ $ RESULT ! = 0 ] ] ; then false ; fi 
 ; ; 
 
 + versions ) 
 + if [ [ $ TRAVIS _ EVENT _ TYPE ! = " cron " ] ] ; then exit 0 ; fi 
 + mvn clean versions : dependency - updates - report versions : plugin - updates - report 
 + if [ $ ( grep " < nextVersion > " target / * - updates - report . xml | cat | wc - l ) - gt 0 ] ; then 
 + echo " Version reports ( dependency - updates - report . xml ) : " 
 + cat target / dependency - updates - report . xml 
 + echo " Version reports ( plugin - updates - report . xml ) : " 
 + cat target / plugin - updates - report . xml 
 + echo " New versions : " 
 + grep - B 7 " < nextVersion > " target / dependency - updates - report . xml 
 + grep - B 4 " < nextVersion > " target / plugin - updates - report . xml 
 + exit 1 
 + else 
 + echo " No new versions found " 
 + fi 
 + ; ; 
 + 
 assembly - run - all - jar ) 
 mvn clean package - Passembly 
 CS _ POM _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 diff - - git a / . travis . yml b / . travis . yml 
 index ee0a9c8 . . dfa63a1 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 175 , 6 + 175 , 12 @ @ matrix : 
 - DESC = " no error test on simple - binary - encoding " 
 - CMD = " . / . ci / travis / travis . sh no - error - test - sbe " 
 
 + # versions to update 
 + - jdk : oraclejdk8 
 + env : 
 + - DESC = " print versions to update " 
 + - CMD = " . / . ci / travis / travis . sh versions " 
 + 
 script : 
 - SKIP _ FILES = " . github | appveyor . yml | circle . yml | distelli - manifest . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | shippable . yml | wercker . yml | intellij - idea - inspections . xml " 
 - SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c | sed ' s / ^ * / / ' ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) 
 diff - - git a / config / version - number - rules . xml b / config / version - number - rules . xml 
 new file mode 100644 
 index 0000000 . . 101a3b8 
 - - - / dev / null 
 + + + b / config / version - number - rules . xml 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > 
 + < ruleset xmlns = " http : / / mojo . codehaus . org / versions - maven - plugin / rule / 2 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " 
 + comparisonMethod = " maven " xsi : schemaLocation = " http : / / mojo . codehaus . org / versions - maven - plugin / rule / 2 . 0 . 0 https : / / mojo . codehaus . org / versions - maven - plugin / xsd / rule - 2 . 0 . 0 . xsd " > 
 + 
 + < ignoreVersions > 
 + < ignoreVersion type = " regex " > . * [ - _ \ . ] ( alpha | Alpha | ALPHA | beta | Beta | BETA | rc | RC | M | EA ) [ - _ \ . ] ? [ 0 - 9 ] ? . * < / ignoreVersion > 
 + < / ignoreVersions > 
 + < rules > 
 + < rule groupId = " com . google . guava " > 
 + < ignoreVersions > 
 + < ignoreVersion type = " regex " > . * - android < / ignoreVersion > 
 + < / ignoreVersions > 
 + < / rule > 
 + < rule groupId = " antlr " > 
 + < ignoreVersions > 
 + < ! - - this is really old version before versioning become semantic - - > 
 + < ignoreVersion type = " regex " > 20030911 < / ignoreVersion > 
 + < / ignoreVersions > 
 + < / rule > 
 + < / rules > 
 + < / ruleset > 
 diff - - git a / pom . xml b / pom . xml 
 index e6d1936 . . 90a1207 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 680 , 6 + 680 , 11 @ @ 
 < version > $ { maven . versions . plugin . version } < / version > 
 < configuration > 
 < generateBackupPoms > false < / generateBackupPoms > 
 + < rulesUri > file : / / $ { basedir } / config / version - number - rules . xml < / rulesUri > 
 + < formats > 
 + < format > xml < / format > 
 + < format > html < / format > 
 + < / formats > 
 < / configuration > 
 < / plugin > 
 < plugin >

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 index c71f8dd . . e91fb3d 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 @ @ - 135 , 7 + 135 , 7 @ @ public class LeftCurlyCheck 
 case TokenTypes . ANNOTATION _ DEF : 
 case TokenTypes . ENUM _ DEF : 
 case TokenTypes . ENUM _ CONSTANT _ DEF : 
 - startToken = ( DetailAST ) skipAnnotationOnlyLines ( aAST ) ; 
 + startToken = skipAnnotationOnlyLines ( aAST ) ; 
 final DetailAST objBlock = aAST . findFirstToken ( TokenTypes . OBJBLOCK ) ; 
 brace = ( objBlock = = null ) 
 ? null 
 @ @ - 156 , 7 + 156 , 7 @ @ public class LeftCurlyCheck 
 
 case TokenTypes . LITERAL _ ELSE : 
 startToken = aAST ; 
 - final DetailAST candidate = ( DetailAST ) aAST . getFirstChild ( ) ; 
 + final DetailAST candidate = aAST . getFirstChild ( ) ; 
 brace = 
 ( candidate . getType ( ) = = TokenTypes . SLIST ) 
 ? candidate 
 @ @ - 205 , 16 + 205 , 14 @ @ public class LeftCurlyCheck 
 if ( tokenAfterLast . getLineNo ( ) > lastAnnot . getLineNo ( ) ) { 
 return tokenAfterLast ; 
 } 
 - else { 
 - final int lastAnnotLineNumber = lastAnnot . getLineNo ( ) ; 
 - while ( lastAnnot . getPreviousSibling ( ) ! = null 
 - & & ( lastAnnot . getPreviousSibling ( ) . getLineNo ( ) 
 - = = lastAnnotLineNumber ) ) 
 - { 
 - lastAnnot = lastAnnot . getPreviousSibling ( ) ; 
 - } 
 - return lastAnnot ; 
 + final int lastAnnotLineNumber = lastAnnot . getLineNo ( ) ; 
 + while ( lastAnnot . getPreviousSibling ( ) ! = null 
 + & & ( lastAnnot . getPreviousSibling ( ) . getLineNo ( ) 
 + = = lastAnnotLineNumber ) ) 
 + { 
 + lastAnnot = lastAnnot . getPreviousSibling ( ) ; 
 } 
 + return lastAnnot ; 
 } 
 
 / * * 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 index 658931e . . 8d0b514 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 @ @ - 85 , 7 + 85 , 7 @ @ public class SuppressWithNearbyCommentFilter 
 public class Tag implements Comparable < Tag > 
 { 
 / * * The text of the tag . * / 
 - private String mText ; 
 + private final String mText ; 
 
 / * * The first line where warnings may be suppressed . * / 
 private int mFirstLine ; 
 @ @ - 133 , 7 + 133 , 7 @ @ public class SuppressWithNearbyCommentFilter 
 } 
 influence = Integer . parseInt ( format ) ; 
 } 
 - catch ( NumberFormatException e ) { 
 + catch ( final NumberFormatException e ) { 
 throw new ConversionException ( 
 " unable to parse influence from ' " + aText 
 + " ' using " + mInfluenceFormat , e ) ; 
 @ @ - 247 , 6 + 247 , 7 @ @ public class SuppressWithNearbyCommentFilter 
 } 
 
 / * * { @ inheritDoc } * / 
 + @ Override 
 public final String toString ( ) 
 { 
 return " Tag [ lines = [ " + getFirstLine ( ) + " to " + getLastLine ( ) 
 @ @ - 343 , 7 + 344 , 7 @ @ public class SuppressWithNearbyCommentFilter 
 / * * @ return the FileContents for this filter . * / 
 public FileContents getFileContents ( ) 
 { 
 - return ( FileContents ) mFileContentsReference . get ( ) ; 
 + return mFileContentsReference . get ( ) ; 
 } 
 
 / * * 
 @ @ - 447 , 7 + 448 , 7 @ @ public class SuppressWithNearbyCommentFilter 
 tagSuppressions ( ) ; 
 } 
 for ( final Iterator < Tag > iter = mTags . iterator ( ) ; iter . hasNext ( ) ; ) { 
 - final Tag tag = ( Tag ) iter . next ( ) ; 
 + final Tag tag = iter . next ( ) ; 
 if ( tag . isMatch ( aEvent ) ) { 
 return false ; 
 } 
 @ @ - 469 , 7 + 470 , 7 @ @ public class SuppressWithNearbyCommentFilter 
 if ( mCheckC ) { 
 final Collection < List < TextBlock > > cComments = 
 contents . getCComments ( ) . values ( ) ; 
 - for ( List < TextBlock > element : cComments ) { 
 + for ( final List < TextBlock > element : cComments ) { 
 tagSuppressions ( element ) ; 
 } 
 } 
 @ @ - 483 , 7 + 484 , 7 @ @ public class SuppressWithNearbyCommentFilter 
 * / 
 private void tagSuppressions ( Collection < TextBlock > aComments ) 
 { 
 - for ( TextBlock comment : aComments ) { 
 + for ( final TextBlock comment : aComments ) { 
 final int startLineNo = comment . getStartLineNo ( ) ; 
 final String [ ] text = comment . getText ( ) ; 
 tagCommentLine ( text [ 0 ] , startLineNo , comment . getStartColNo ( ) ) ;
