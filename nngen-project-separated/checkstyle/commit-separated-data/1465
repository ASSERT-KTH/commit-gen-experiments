BLEU SCORE: 0.023020778935143822

TEST MSG: Issue # 2557 : added xdoc style validation
GENERATED MSG: Use use Java 7 instead of custom logic for relative paths , issue # 857

TEST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 70c2fff . . 490bdad 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 42 , 7 + 42 , 7 @ @ <nl> files = " AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java " / > <nl> <nl> < ! - - Tone down the checking for test code - - > <nl> - < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 317 " / > <nl> + < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 319 " / > <nl> < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> index 15453bc . . a7e7b16 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> @ @ - 28 , 9 + 28 , 11 @ @ import java . io . StringReader ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . HashSet ; <nl> + import java . util . Iterator ; <nl> import java . util . LinkedHashSet ; <nl> import java . util . List ; <nl> import java . util . Locale ; <nl> + import java . util . NoSuchElementException ; <nl> import java . util . Properties ; <nl> import java . util . Set ; <nl> import java . util . TreeSet ; <nl> @ @ - 660 , 4 + 662 , 108 @ @ public class XDocsPagesTest { <nl> return result . toString ( ) ; <nl> } <nl> } <nl> + <nl> + @ Test <nl> + public void testAllStyleRules ( ) throws Exception { <nl> + for ( File file : Files . fileTreeTraverser ( ) . preOrderTraversal ( XDOCS _ DIRECTORY ) ) { <nl> + final String fileName = file . getName ( ) ; <nl> + <nl> + if ( ! fileName . endsWith ( " _ style . xml " ) ) { <nl> + continue ; <nl> + } <nl> + <nl> + final String input = Files . toString ( file , UTF _ 8 ) ; <nl> + final Document document = getRawXml ( fileName , input , input ) ; <nl> + final NodeList sources = document . getElementsByTagName ( " tr " ) ; <nl> + String lastRuleName = null ; <nl> + <nl> + for ( int position = 0 ; position < sources . getLength ( ) ; position + + ) { <nl> + final Node row = sources . item ( position ) ; <nl> + final List < Node > columns = new ArrayList < > ( findChildElementsByTag ( row , " td " ) ) ; <nl> + <nl> + if ( columns . isEmpty ( ) ) { <nl> + continue ; <nl> + } <nl> + <nl> + final String ruleName = columns . get ( 1 ) . getTextContent ( ) . trim ( ) ; <nl> + <nl> + if ( lastRuleName ! = null ) { <nl> + Assert . assertTrue ( <nl> + fileName + " rule ' " + ruleName + " ' is out of order compared to ' " <nl> + + lastRuleName + " ' " , <nl> + ruleName . toLowerCase ( Locale . ENGLISH ) . compareTo ( <nl> + lastRuleName . toLowerCase ( Locale . ENGLISH ) ) > = 0 ) ; <nl> + } <nl> + <nl> + validateStyleChecks ( findChildElementsByTag ( columns . get ( 2 ) , " a " ) , <nl> + findChildElementsByTag ( columns . get ( 3 ) , " a " ) , fileName , ruleName ) ; <nl> + <nl> + lastRuleName = ruleName ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + private static void validateStyleChecks ( Set < Node > checks , Set < Node > configs , String fileName , <nl> + String ruleName ) { <nl> + final Iterator < Node > itrChecks = checks . iterator ( ) ; <nl> + final Iterator < Node > itrConfigs = configs . iterator ( ) ; <nl> + <nl> + while ( itrChecks . hasNext ( ) ) { <nl> + final Node check = itrChecks . next ( ) ; <nl> + final String checkName = check . getTextContent ( ) . trim ( ) ; <nl> + <nl> + if ( ! check . getAttributes ( ) . getNamedItem ( " href " ) . getTextContent ( ) <nl> + . startsWith ( " config _ " ) ) { <nl> + continue ; <nl> + } <nl> + <nl> + Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' check ' " + checkName <nl> + + " ' shouldn ' t end with ' Check ' " , ! checkName . endsWith ( " Check " ) ) ; <nl> + <nl> + for ( String configName : new String [ ] { " config " , " test " } ) { <nl> + Node config = null ; <nl> + <nl> + try { <nl> + config = itrConfigs . next ( ) ; <nl> + } <nl> + catch ( NoSuchElementException ignore ) { <nl> + Assert . fail ( fileName + " rule ' " + ruleName + " ' check ' " + checkName <nl> + + " ' is missing the config link : " + configName ) ; <nl> + } <nl> + <nl> + Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' check ' " + checkName <nl> + + " ' has mismatched config / test links " , configName , config . getTextContent ( ) <nl> + . trim ( ) ) ; <nl> + <nl> + final String configUrl = config . getAttributes ( ) . getNamedItem ( " href " ) <nl> + . getTextContent ( ) ; <nl> + <nl> + if ( " config " . equals ( configName ) ) { <nl> + final String expectedUrl = " https : / / github . com / search ? q = " <nl> + + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3Agoogle _ checks . xml + " <nl> + + " repo % 3Acheckstyle % 2Fcheckstyle + " + checkName ; <nl> + <nl> + Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' check ' " + checkName <nl> + + " ' should have matching " + configName + " url " , expectedUrl , <nl> + configUrl ) ; <nl> + } <nl> + else if ( " test " . equals ( configName ) ) { <nl> + Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' check ' " + checkName <nl> + + " ' should have matching " + configName + " url " , <nl> + configUrl . startsWith ( " https : / / github . com / checkstyle / checkstyle / " <nl> + + " blob / master / src / it / java / com / google / checkstyle / test / " ) ) ; <nl> + Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' check ' " + checkName <nl> + + " ' should have matching " + configName + " url " , <nl> + configUrl . endsWith ( " / " + checkName + " Test . java " ) ) ; <nl> + <nl> + Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' check ' " + checkName <nl> + + " ' should have a test that exists " , new File ( configUrl . substring ( 53 ) <nl> + . replace ( ' / ' , File . separatorChar ) ) . exists ( ) ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + Assert . assertFalse ( fileName + " rule ' " + ruleName + " ' has too many configs " , <nl> + itrConfigs . hasNext ( ) ) ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 614751f . . 8cf9d5f 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 282 , 6 + 282 , 19 @ @ <nl> < ignore / > <nl> < / action > <nl> < / pluginExecution > <nl> + < pluginExecution > <nl> + < pluginExecutionFilter > <nl> + < groupId > org . codehaus . mojo < / groupId > <nl> + < artifactId > tidy - maven - plugin < / artifactId > <nl> + < versionRange > 1 . 0 - beta - 1 < / versionRange > <nl> + < goals > <nl> + < goal > check < / goal > <nl> + < / goals > <nl> + < / pluginExecutionFilter > <nl> + < action > <nl> + < execute / > <nl> + < / action > <nl> + < / pluginExecution > <nl> < / pluginExecutions > <nl> < / lifecycleMappingMetadata > <nl> < / configuration >

TEST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 70c2fff . . 490bdad 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 42 , 7 + 42 , 7 @ @ 
 files = " AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java " / > 
 
 < ! - - Tone down the checking for test code - - > 
 - < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 317 " / > 
 + < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 319 " / > 
 < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 index 15453bc . . a7e7b16 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 @ @ - 28 , 9 + 28 , 11 @ @ import java . io . StringReader ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 import java . util . HashSet ; 
 + import java . util . Iterator ; 
 import java . util . LinkedHashSet ; 
 import java . util . List ; 
 import java . util . Locale ; 
 + import java . util . NoSuchElementException ; 
 import java . util . Properties ; 
 import java . util . Set ; 
 import java . util . TreeSet ; 
 @ @ - 660 , 4 + 662 , 108 @ @ public class XDocsPagesTest { 
 return result . toString ( ) ; 
 } 
 } 
 + 
 + @ Test 
 + public void testAllStyleRules ( ) throws Exception { 
 + for ( File file : Files . fileTreeTraverser ( ) . preOrderTraversal ( XDOCS _ DIRECTORY ) ) { 
 + final String fileName = file . getName ( ) ; 
 + 
 + if ( ! fileName . endsWith ( " _ style . xml " ) ) { 
 + continue ; 
 + } 
 + 
 + final String input = Files . toString ( file , UTF _ 8 ) ; 
 + final Document document = getRawXml ( fileName , input , input ) ; 
 + final NodeList sources = document . getElementsByTagName ( " tr " ) ; 
 + String lastRuleName = null ; 
 + 
 + for ( int position = 0 ; position < sources . getLength ( ) ; position + + ) { 
 + final Node row = sources . item ( position ) ; 
 + final List < Node > columns = new ArrayList < > ( findChildElementsByTag ( row , " td " ) ) ; 
 + 
 + if ( columns . isEmpty ( ) ) { 
 + continue ; 
 + } 
 + 
 + final String ruleName = columns . get ( 1 ) . getTextContent ( ) . trim ( ) ; 
 + 
 + if ( lastRuleName ! = null ) { 
 + Assert . assertTrue ( 
 + fileName + " rule ' " + ruleName + " ' is out of order compared to ' " 
 + + lastRuleName + " ' " , 
 + ruleName . toLowerCase ( Locale . ENGLISH ) . compareTo ( 
 + lastRuleName . toLowerCase ( Locale . ENGLISH ) ) > = 0 ) ; 
 + } 
 + 
 + validateStyleChecks ( findChildElementsByTag ( columns . get ( 2 ) , " a " ) , 
 + findChildElementsByTag ( columns . get ( 3 ) , " a " ) , fileName , ruleName ) ; 
 + 
 + lastRuleName = ruleName ; 
 + } 
 + } 
 + } 
 + 
 + private static void validateStyleChecks ( Set < Node > checks , Set < Node > configs , String fileName , 
 + String ruleName ) { 
 + final Iterator < Node > itrChecks = checks . iterator ( ) ; 
 + final Iterator < Node > itrConfigs = configs . iterator ( ) ; 
 + 
 + while ( itrChecks . hasNext ( ) ) { 
 + final Node check = itrChecks . next ( ) ; 
 + final String checkName = check . getTextContent ( ) . trim ( ) ; 
 + 
 + if ( ! check . getAttributes ( ) . getNamedItem ( " href " ) . getTextContent ( ) 
 + . startsWith ( " config _ " ) ) { 
 + continue ; 
 + } 
 + 
 + Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' check ' " + checkName 
 + + " ' shouldn ' t end with ' Check ' " , ! checkName . endsWith ( " Check " ) ) ; 
 + 
 + for ( String configName : new String [ ] { " config " , " test " } ) { 
 + Node config = null ; 
 + 
 + try { 
 + config = itrConfigs . next ( ) ; 
 + } 
 + catch ( NoSuchElementException ignore ) { 
 + Assert . fail ( fileName + " rule ' " + ruleName + " ' check ' " + checkName 
 + + " ' is missing the config link : " + configName ) ; 
 + } 
 + 
 + Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' check ' " + checkName 
 + + " ' has mismatched config / test links " , configName , config . getTextContent ( ) 
 + . trim ( ) ) ; 
 + 
 + final String configUrl = config . getAttributes ( ) . getNamedItem ( " href " ) 
 + . getTextContent ( ) ; 
 + 
 + if ( " config " . equals ( configName ) ) { 
 + final String expectedUrl = " https : / / github . com / search ? q = " 
 + + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3Agoogle _ checks . xml + " 
 + + " repo % 3Acheckstyle % 2Fcheckstyle + " + checkName ; 
 + 
 + Assert . assertEquals ( fileName + " rule ' " + ruleName + " ' check ' " + checkName 
 + + " ' should have matching " + configName + " url " , expectedUrl , 
 + configUrl ) ; 
 + } 
 + else if ( " test " . equals ( configName ) ) { 
 + Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' check ' " + checkName 
 + + " ' should have matching " + configName + " url " , 
 + configUrl . startsWith ( " https : / / github . com / checkstyle / checkstyle / " 
 + + " blob / master / src / it / java / com / google / checkstyle / test / " ) ) ; 
 + Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' check ' " + checkName 
 + + " ' should have matching " + configName + " url " , 
 + configUrl . endsWith ( " / " + checkName + " Test . java " ) ) ; 
 + 
 + Assert . assertTrue ( fileName + " rule ' " + ruleName + " ' check ' " + checkName 
 + + " ' should have a test that exists " , new File ( configUrl . substring ( 53 ) 
 + . replace ( ' / ' , File . separatorChar ) ) . exists ( ) ) ; 
 + } 
 + } 
 + } 
 + 
 + Assert . assertFalse ( fileName + " rule ' " + ruleName + " ' has too many configs " , 
 + itrConfigs . hasNext ( ) ) ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 614751f . . 8cf9d5f 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 282 , 6 + 282 , 19 @ @ 
 < ignore / > 
 < / action > 
 < / pluginExecution > 
 + < pluginExecution > 
 + < pluginExecutionFilter > 
 + < groupId > org . codehaus . mojo < / groupId > 
 + < artifactId > tidy - maven - plugin < / artifactId > 
 + < versionRange > 1 . 0 - beta - 1 < / versionRange > 
 + < goals > 
 + < goal > check < / goal > 
 + < / goals > 
 + < / pluginExecutionFilter > 
 + < action > 
 + < execute / > 
 + < / action > 
 + < / pluginExecution > 
 < / pluginExecutions > 
 < / lifecycleMappingMetadata > 
 < / configuration >
