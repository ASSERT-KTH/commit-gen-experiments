BLEU SCORE: 0.01763751180315069

TEST MSG: minor : typo in constant name
GENERATED MSG: Add tests to increase coverage after changes , issue # 871

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractTreeTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractTreeTestSupport . java <nl> index 6808f00 . . dd67666 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractTreeTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractTreeTestSupport . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { <nl> <nl> protected static final String LF _ REGEX = " \ \ \ \ n " ; <nl> <nl> - protected static final String CLRF _ REGEX = " \ \ \ \ r \ \ \ \ n " ; <nl> + protected static final String CRLF _ REGEX = " \ \ \ \ r \ \ \ \ n " ; <nl> <nl> / * * <nl> * Returns canonical path for the file with the given file name . <nl> @ @ - 60 , 7 + 60 , 7 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { <nl> final String expectedContents = readFile ( expectedTextPrintFileName ) ; <nl> <nl> final String actualContents = AstTreeStringPrinter . printFileAst ( <nl> - new File ( actualJavaFileName ) , withComments ) . replaceAll ( CLRF _ REGEX , LF _ REGEX ) ; <nl> + new File ( actualJavaFileName ) , withComments ) . replaceAll ( CRLF _ REGEX , LF _ REGEX ) ; <nl> <nl> assertEquals ( " Generated AST from Java file should match pre - defined AST " , expectedContents , <nl> actualContents ) ; <nl> @ @ - 94 , 7 + 94 , 7 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { <nl> final String expectedContents = readFile ( expectedTextPrintFilename ) ; <nl> <nl> final String actualContents = AstTreeStringPrinter . printJavaAndJavadocTree ( <nl> - new File ( actualJavaFilename ) ) . replaceAll ( CLRF _ REGEX , LF _ REGEX ) ; <nl> + new File ( actualJavaFilename ) ) . replaceAll ( CRLF _ REGEX , LF _ REGEX ) ; <nl> <nl> assertEquals ( " Generated AST from the java file should match the pre - defined AST " , <nl> expectedContents , actualContents ) ; <nl> @ @ - 113 , 7 + 113 , 7 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { <nl> final String expectedContents = readFile ( expectedTextPrintFilename ) ; <nl> <nl> final String actualContents = DetailNodeTreeStringPrinter . printFileAst ( <nl> - new File ( actualJavadocFilename ) ) . replaceAll ( CLRF _ REGEX , LF _ REGEX ) ; <nl> + new File ( actualJavadocFilename ) ) . replaceAll ( CRLF _ REGEX , LF _ REGEX ) ; <nl> <nl> assertEquals ( " Generated tree from the javadoc file should match the pre - defined tree " , <nl> expectedContents , actualContents ) ; <nl> @ @ - 127 , 6 + 127 , 6 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { <nl> protected static String readFile ( String filename ) throws IOException { <nl> return new String ( Files . readAllBytes ( <nl> Paths . get ( filename ) ) , StandardCharsets . UTF _ 8 ) <nl> - . replaceAll ( CLRF _ REGEX , LF _ REGEX ) ; <nl> + . replaceAll ( CRLF _ REGEX , LF _ REGEX ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> index bab1734 . . 2e1eb0c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> @ @ - 24 , 6 + 24 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; <nl> + import org . apache . commons . logging . Log ; <nl> + import org . apache . commons . logging . LogFactory ; <nl> import org . xml . sax . Attributes ; <nl> import org . xml . sax . InputSource ; <nl> import org . xml . sax . SAXException ; <nl> @ @ - 51 , 6 + 53 , 9 @ @ import java . util . Map ; <nl> * / <nl> public final class ConfigurationLoader <nl> { <nl> + / * * Logger for ConfigurationLoader . * / <nl> + private static final Log LOG = LogFactory . getLog ( ConfigurationLoader . class ) ; <nl> + <nl> / * * the public ID for version 1 _ 0 of the configuration dtd * / <nl> private static final String DTD _ PUBLIC _ ID _ 1 _ 0 = <nl> " - / / Puppy Crawl / / DTD Check Configuration 1 . 0 / / EN " ; <nl> @ @ - 193 , 7 + 198 , 7 @ @ public final class ConfigurationLoader <nl> level = SeverityLevel . getInstance ( severity ) ; <nl> } <nl> catch ( final CheckstyleException e ) { <nl> - / / severity not set - > ignore <nl> + LOG . debug ( " Severity not set , ignoring exception " , e ) ; <nl> } <nl> <nl> / / omit this module if these should be omitted and the module <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> index f4266ac . . ac58ab0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> @ @ - 20 , 6 + 20 , 9 @ @ package com . puppycrawl . tools . checkstyle ; <nl> <nl> import com . google . common . collect . Sets ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> + import org . apache . commons . logging . Log ; <nl> + import org . apache . commons . logging . LogFactory ; <nl> + <nl> import java . util . Set ; <nl> <nl> / * * <nl> @ @ - 29 , 6 + 32 , 9 @ @ import java . util . Set ; <nl> * / <nl> class PackageObjectFactory implements ModuleFactory <nl> { <nl> + / * * Logger for PackageObjectFactory . * / <nl> + private static final Log LOG = LogFactory . getLog ( PackageObjectFactory . class ) ; <nl> + <nl> / * * a list of package names to prepend to class names * / <nl> private final Set < String > packages ; <nl> <nl> @ @ - 80 , 7 + 86 , 7 @ @ class PackageObjectFactory implements ModuleFactory <nl> return createObject ( name ) ; <nl> } <nl> catch ( final CheckstyleException ex ) { <nl> - / / keep looking <nl> + LOG . debug ( " Keep looking , ignoring exception " , ex ) ; <nl> } <nl> <nl> / / now try packages <nl> @ @ - 91 , 7 + 97 , 7 @ @ class PackageObjectFactory implements ModuleFactory <nl> return createObject ( className ) ; <nl> } <nl> catch ( final CheckstyleException ex ) { <nl> - / / keep looking <nl> + LOG . debug ( " Keep looking , ignoring exception " , ex ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractTreeTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractTreeTestSupport . java 
 index 6808f00 . . dd67666 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractTreeTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractTreeTestSupport . java 
 @ @ - 31 , 7 + 31 , 7 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { 
 
 protected static final String LF _ REGEX = " \ \ \ \ n " ; 
 
 - protected static final String CLRF _ REGEX = " \ \ \ \ r \ \ \ \ n " ; 
 + protected static final String CRLF _ REGEX = " \ \ \ \ r \ \ \ \ n " ; 
 
 / * * 
 * Returns canonical path for the file with the given file name . 
 @ @ - 60 , 7 + 60 , 7 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { 
 final String expectedContents = readFile ( expectedTextPrintFileName ) ; 
 
 final String actualContents = AstTreeStringPrinter . printFileAst ( 
 - new File ( actualJavaFileName ) , withComments ) . replaceAll ( CLRF _ REGEX , LF _ REGEX ) ; 
 + new File ( actualJavaFileName ) , withComments ) . replaceAll ( CRLF _ REGEX , LF _ REGEX ) ; 
 
 assertEquals ( " Generated AST from Java file should match pre - defined AST " , expectedContents , 
 actualContents ) ; 
 @ @ - 94 , 7 + 94 , 7 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { 
 final String expectedContents = readFile ( expectedTextPrintFilename ) ; 
 
 final String actualContents = AstTreeStringPrinter . printJavaAndJavadocTree ( 
 - new File ( actualJavaFilename ) ) . replaceAll ( CLRF _ REGEX , LF _ REGEX ) ; 
 + new File ( actualJavaFilename ) ) . replaceAll ( CRLF _ REGEX , LF _ REGEX ) ; 
 
 assertEquals ( " Generated AST from the java file should match the pre - defined AST " , 
 expectedContents , actualContents ) ; 
 @ @ - 113 , 7 + 113 , 7 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { 
 final String expectedContents = readFile ( expectedTextPrintFilename ) ; 
 
 final String actualContents = DetailNodeTreeStringPrinter . printFileAst ( 
 - new File ( actualJavadocFilename ) ) . replaceAll ( CLRF _ REGEX , LF _ REGEX ) ; 
 + new File ( actualJavadocFilename ) ) . replaceAll ( CRLF _ REGEX , LF _ REGEX ) ; 
 
 assertEquals ( " Generated tree from the javadoc file should match the pre - defined tree " , 
 expectedContents , actualContents ) ; 
 @ @ - 127 , 6 + 127 , 6 @ @ public abstract class AbstractTreeTestSupport extends AbstractPathTestSupport { 
 protected static String readFile ( String filename ) throws IOException { 
 return new String ( Files . readAllBytes ( 
 Paths . get ( filename ) ) , StandardCharsets . UTF _ 8 ) 
 - . replaceAll ( CLRF _ REGEX , LF _ REGEX ) ; 
 + . replaceAll ( CRLF _ REGEX , LF _ REGEX ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 index bab1734 . . 2e1eb0c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 @ @ - 24 , 6 + 24 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . AbstractLoader ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; 
 + import org . apache . commons . logging . Log ; 
 + import org . apache . commons . logging . LogFactory ; 
 import org . xml . sax . Attributes ; 
 import org . xml . sax . InputSource ; 
 import org . xml . sax . SAXException ; 
 @ @ - 51 , 6 + 53 , 9 @ @ import java . util . Map ; 
 * / 
 public final class ConfigurationLoader 
 { 
 + / * * Logger for ConfigurationLoader . * / 
 + private static final Log LOG = LogFactory . getLog ( ConfigurationLoader . class ) ; 
 + 
 / * * the public ID for version 1 _ 0 of the configuration dtd * / 
 private static final String DTD _ PUBLIC _ ID _ 1 _ 0 = 
 " - / / Puppy Crawl / / DTD Check Configuration 1 . 0 / / EN " ; 
 @ @ - 193 , 7 + 198 , 7 @ @ public final class ConfigurationLoader 
 level = SeverityLevel . getInstance ( severity ) ; 
 } 
 catch ( final CheckstyleException e ) { 
 - / / severity not set - > ignore 
 + LOG . debug ( " Severity not set , ignoring exception " , e ) ; 
 } 
 
 / / omit this module if these should be omitted and the module 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 index f4266ac . . ac58ab0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 @ @ - 20 , 6 + 20 , 9 @ @ package com . puppycrawl . tools . checkstyle ; 
 
 import com . google . common . collect . Sets ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 + import org . apache . commons . logging . Log ; 
 + import org . apache . commons . logging . LogFactory ; 
 + 
 import java . util . Set ; 
 
 / * * 
 @ @ - 29 , 6 + 32 , 9 @ @ import java . util . Set ; 
 * / 
 class PackageObjectFactory implements ModuleFactory 
 { 
 + / * * Logger for PackageObjectFactory . * / 
 + private static final Log LOG = LogFactory . getLog ( PackageObjectFactory . class ) ; 
 + 
 / * * a list of package names to prepend to class names * / 
 private final Set < String > packages ; 
 
 @ @ - 80 , 7 + 86 , 7 @ @ class PackageObjectFactory implements ModuleFactory 
 return createObject ( name ) ; 
 } 
 catch ( final CheckstyleException ex ) { 
 - / / keep looking 
 + LOG . debug ( " Keep looking , ignoring exception " , ex ) ; 
 } 
 
 / / now try packages 
 @ @ - 91 , 7 + 97 , 7 @ @ class PackageObjectFactory implements ModuleFactory 
 return createObject ( className ) ; 
 } 
 catch ( final CheckstyleException ex ) { 
 - / / keep looking 
 + LOG . debug ( " Keep looking , ignoring exception " , ex ) ; 
 } 
 } 

