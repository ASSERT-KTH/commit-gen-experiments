BLEU SCORE: 0.03435488317233918

TEST MSG: Issue # 2425 : fixed invalid xml examples in xdocs
GENERATED MSG: Added file extensions property to Checker & TreeWalker , issue # 25

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> index 1d861a2 . . b741311 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> @ @ - 129 , 7 + 129 , 7 @ @ class PackageObjectFactory implements ModuleFactory { <nl> declaredConstructor . setAccessible ( true ) ; <nl> return declaredConstructor . newInstance ( ) ; <nl> } <nl> - catch ( final ReflectiveOperationException exception ) { <nl> + catch ( final ReflectiveOperationException | NoClassDefFoundError exception ) { <nl> throw new CheckstyleException ( " Unable to find class for " + className , exception ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> index 32dffcd . . 1a2ef8e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> @ @ - 155 , 10 + 155 , 10 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * < / p > <nl> * < pre > <nl> * & lt ; module name = " VariableDeclarationUsageDistance " & gt ; <nl> - * & lt ; property name = " allowedDistance " value = " 4 " & gt ; <nl> - * & lt ; property name = " ignoreVariablePattern " value = " ^ temp . * " & gt ; <nl> - * & lt ; property name = " validateBetweenScopes " value = " true " & gt ; <nl> - * & lt ; property name = " ignoreFinal " value = " false " & gt ; <nl> + * & lt ; property name = " allowedDistance " value = " 4 " / & gt ; <nl> + * & lt ; property name = " ignoreVariablePattern " value = " ^ temp . * " / & gt ; <nl> + * & lt ; property name = " validateBetweenScopes " value = " true " / & gt ; <nl> + * & lt ; property name = " ignoreFinal " value = " false " / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> index 70be638 . . 6d1857b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * <nl> * < pre > <nl> * { @ code <nl> - * & lt ; module name = & quot ; CommentsIndentation & quot ; / module & gt ; <nl> + * & lt ; module name = & quot ; CommentsIndentation & quot ; / & gt ; <nl> * } <nl> * { @ code <nl> * / * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / NonEmptyAtclauseDescriptionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / NonEmptyAtclauseDescriptionCheck . java <nl> index 7367271 . . bde57fb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / NonEmptyAtclauseDescriptionCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / NonEmptyAtclauseDescriptionCheck . java <nl> @ @ - 31 , 16 + 31 , 6 @ @ import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; <nl> * < pre > <nl> * & lt ; module name = & quot ; NonEmptyAtclauseDescription & quot ; / & gt ; <nl> * < / pre > <nl> - * < p > <nl> - * To check non - empty at - clause description for tags { @ code @ throws } , <nl> - * { @ code @ deprecated } , use following configuration : <nl> - * < / p > <nl> - * < pre > <nl> - * & lt ; module name = & quot ; NonEmptyAtclauseDescription & quot ; & gt ; <nl> - * & lt ; property name = & quot ; target & quot ; value = & quot ; JAVADOC _ TAG _ THROWS _ LITERAL , <nl> - * JAVADOC _ TAG _ DEPRECATED _ LITERAL & quot ; / & gt ; <nl> - * & lt ; / module & gt ; <nl> - * < / pre > <nl> * <nl> * @ author maxvetrenko <nl> * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoLineWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoLineWrapCheck . java <nl> index 71b7af1 . . 9d1b60b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoLineWrapCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoLineWrapCheck . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * < / p > <nl> * < pre class = " body " > <nl> * & lt ; module name = & quot ; NoLineWrap & quot ; & gt ; <nl> - * & lt ; property name = " tokens " value = " IMPORT " & gt ; <nl> + * & lt ; property name = " tokens " value = " IMPORT " / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksPresentOnAvailableChecksPageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksPresentOnAvailableChecksPageTest . java <nl> deleted file mode 100644 <nl> index 9b2d3af . . 0000000 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksPresentOnAvailableChecksPageTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 83 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> - / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> - / / <nl> - / / This library is free software ; you can redistribute it and / or <nl> - / / modify it under the terms of the GNU Lesser General Public <nl> - / / License as published by the Free Software Foundation ; either <nl> - / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> - / / <nl> - / / This library is distributed in the hope that it will be useful , <nl> - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - / / Lesser General Public License for more details . <nl> - / / <nl> - / / You should have received a copy of the GNU Lesser General Public <nl> - / / License along with this library ; if not , write to the Free Software <nl> - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - import static java . nio . charset . StandardCharsets . UTF _ 8 ; <nl> - <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> - import java . util . Arrays ; <nl> - import java . util . List ; <nl> - import java . util . Locale ; <nl> - <nl> - import org . junit . Assert ; <nl> - import org . junit . Test ; <nl> - <nl> - import com . google . common . io . Files ; <nl> - <nl> - public class AllChecksPresentOnAvailableChecksPageTest { <nl> - private static final File JAVA _ SOURCES _ DIRECTORY = new File ( " src / main / java " ) ; <nl> - private static final String AVAILABLE _ CHECKS _ PATH = " src / xdocs / checks . xml " ; <nl> - private static final File AVAILABLE _ CHECKS _ FILE = new File ( AVAILABLE _ CHECKS _ PATH ) ; <nl> - private static final String CHECK _ FILE _ NAME = " . + Check . java $ " ; <nl> - private static final String CHECK _ SUFFIX = " Check . java " ; <nl> - private static final String LINK _ TEMPLATE = <nl> - " ( ? s ) . * < a href = \ " config _ \ \ w + \ \ . html # % 1 $ s \ " > % 1 $ s < / a > . * " ; <nl> - <nl> - private static final List < String > IGNORE _ LIST = Arrays . asList ( <nl> - " AbstractAccessControlNameCheck . java " , <nl> - " AbstractClassCouplingCheck . java " , <nl> - " AbstractComplexityCheck . java " , <nl> - " AbstractFileSetCheck . java " , <nl> - " AbstractFormatCheck . java " , <nl> - " AbstractHeaderCheck . java " , <nl> - " AbstractIllegalCheck . java " , <nl> - " AbstractIllegalMethodCheck . java " , <nl> - " AbstractJavadocCheck . java " , <nl> - " AbstractNameCheck . java " , <nl> - " AbstractNestedDepthCheck . java " , <nl> - " AbstractOptionCheck . java " , <nl> - " AbstractParenPadCheck . java " , <nl> - " AbstractSuperCheck . java " , <nl> - " AbstractTypeAwareCheck . java " , <nl> - " AbstractTypeParameterNameCheck . java " , <nl> - " FileSetCheck . java " <nl> - ) ; <nl> - <nl> - @ Test <nl> - public void testAllChecksPresentOnAvailableChecksPage ( ) throws IOException { <nl> - final String availableChecks = Files . toString ( AVAILABLE _ CHECKS _ FILE , UTF _ 8 ) ; <nl> - for ( File file : Files . fileTreeTraverser ( ) . preOrderTraversal ( JAVA _ SOURCES _ DIRECTORY ) ) { <nl> - final String fileName = file . getName ( ) ; <nl> - if ( fileName . matches ( CHECK _ FILE _ NAME ) & & ! IGNORE _ LIST . contains ( fileName ) ) { <nl> - final String checkName = fileName . replace ( CHECK _ SUFFIX , " " ) ; <nl> - if ( ! isPresent ( availableChecks , checkName ) ) { <nl> - Assert . fail ( checkName + " is not correctly listed on Available Checks page " <nl> - + " - add it to " + AVAILABLE _ CHECKS _ PATH ) ; <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - private static boolean isPresent ( String availableChecks , String checkName ) { <nl> - final String linkPattern = String . format ( Locale . ROOT , LINK _ TEMPLATE , checkName ) ; <nl> - return availableChecks . matches ( linkPattern ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> new file mode 100644 <nl> index 0000000 . . efab736 <nl> - - - / dev / null <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> @ @ - 0 , 0 + 1 , 248 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + import static java . nio . charset . StandardCharsets . UTF _ 8 ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . io . StringReader ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + import java . util . Locale ; <nl> + import java . util . Properties ; <nl> + <nl> + import javax . xml . parsers . DocumentBuilder ; <nl> + import javax . xml . parsers . DocumentBuilderFactory ; <nl> + import javax . xml . parsers . ParserConfigurationException ; <nl> + <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import org . xml . sax . InputSource ; <nl> + import org . xml . sax . SAXException ; <nl> + <nl> + import com . google . common . io . Files ; <nl> + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> + import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> + <nl> + public class XDocsPagesTest { <nl> + private static final File JAVA _ SOURCES _ DIRECTORY = new File ( " src / main / java " ) ; <nl> + private static final File XDOCS _ DIRECTORY = new File ( " src / xdocs " ) ; <nl> + private static final String AVAILABLE _ CHECKS _ PATH = " src / xdocs / checks . xml " ; <nl> + private static final File AVAILABLE _ CHECKS _ FILE = new File ( AVAILABLE _ CHECKS _ PATH ) ; <nl> + private static final String CHECK _ FILE _ NAME = " . + Check . java $ " ; <nl> + private static final String CHECK _ SUFFIX = " Check . java " ; <nl> + private static final String LINK _ TEMPLATE = <nl> + " ( ? s ) . * < a href = \ " config _ \ \ w + \ \ . html # % 1 $ s \ " > % 1 $ s < / a > . * " ; <nl> + <nl> + private static final List < String > CHECKS _ ON _ PAGE _ IGNORE _ LIST = Arrays . asList ( <nl> + " AbstractAccessControlNameCheck . java " , <nl> + " AbstractClassCouplingCheck . java " , <nl> + " AbstractComplexityCheck . java " , <nl> + " AbstractFileSetCheck . java " , <nl> + " AbstractFormatCheck . java " , <nl> + " AbstractHeaderCheck . java " , <nl> + " AbstractIllegalCheck . java " , <nl> + " AbstractIllegalMethodCheck . java " , <nl> + " AbstractJavadocCheck . java " , <nl> + " AbstractNameCheck . java " , <nl> + " AbstractNestedDepthCheck . java " , <nl> + " AbstractOptionCheck . java " , <nl> + " AbstractParenPadCheck . java " , <nl> + " AbstractSuperCheck . java " , <nl> + " AbstractTypeAwareCheck . java " , <nl> + " AbstractTypeParameterNameCheck . java " , <nl> + " FileSetCheck . java " <nl> + ) ; <nl> + <nl> + private static final List < String > XML _ FILESET _ LIST = Arrays . asList ( <nl> + " TreeWalker " , <nl> + " name = \ " Checker \ " " , <nl> + " name = \ " Header \ " " , <nl> + " name = \ " Translation \ " " , <nl> + " name = \ " SeverityMatchFilter \ " " , <nl> + " name = \ " SuppressionFilter \ " " , <nl> + " name = \ " SuppressionCommentFilter \ " " , <nl> + " name = \ " SuppressWithNearbyCommentFilter \ " " , <nl> + " name = \ " SuppressWarningsFilter \ " " , <nl> + " name = \ " RegexpHeader \ " " , <nl> + " name = \ " RegexpMultiline \ " " , <nl> + " name = \ " JavadocPackage \ " " , <nl> + " name = \ " NewlineAtEndOfFile \ " " , <nl> + " name = \ " UniqueProperties \ " " , <nl> + " name = \ " FileLength \ " " , <nl> + " name = \ " FileTabCharacter \ " " <nl> + ) ; <nl> + <nl> + @ Test <nl> + public void testAllChecksPresentOnAvailableChecksPage ( ) throws IOException { <nl> + final String availableChecks = Files . toString ( AVAILABLE _ CHECKS _ FILE , UTF _ 8 ) ; <nl> + for ( File file : Files . fileTreeTraverser ( ) . preOrderTraversal ( JAVA _ SOURCES _ DIRECTORY ) ) { <nl> + final String fileName = file . getName ( ) ; <nl> + if ( fileName . matches ( CHECK _ FILE _ NAME ) & & ! CHECKS _ ON _ PAGE _ IGNORE _ LIST . contains ( fileName ) ) { <nl> + final String checkName = fileName . replace ( CHECK _ SUFFIX , " " ) ; <nl> + if ( ! isPresent ( availableChecks , checkName ) ) { <nl> + Assert . fail ( checkName + " is not correctly listed on Available Checks page " <nl> + + " - add it to " + AVAILABLE _ CHECKS _ PATH ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + private static boolean isPresent ( String availableChecks , String checkName ) { <nl> + final String linkPattern = String . format ( Locale . ROOT , LINK _ TEMPLATE , checkName ) ; <nl> + return availableChecks . matches ( linkPattern ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testAllXmlExamples ( ) throws Exception { <nl> + for ( File file : Files . fileTreeTraverser ( ) . preOrderTraversal ( XDOCS _ DIRECTORY ) ) { <nl> + if ( file . isDirectory ( ) ) { <nl> + continue ; <nl> + } <nl> + <nl> + final String source = Files . toString ( file , UTF _ 8 ) ; <nl> + int position = - 1 ; <nl> + <nl> + while ( true ) { <nl> + position = source . indexOf ( " < source > " , position + 1 ) ; <nl> + <nl> + if ( position = = - 1 ) { <nl> + break ; <nl> + } <nl> + <nl> + final int nextPosition = source . indexOf ( " < / source > " , position ) ; <nl> + final String unserializedSource = source . substring ( position + 8 , nextPosition ) <nl> + . trim ( ) . replace ( " & lt ; " , " < " ) . replace ( " & gt ; " , " > " ) . replace ( " & quot ; " , " \ " " ) <nl> + . replace ( " & amp ; " , " & " ) . replace ( " . . . " , " " ) ; <nl> + <nl> + position = nextPosition ; <nl> + <nl> + if ( unserializedSource . charAt ( 0 ) ! = ' < ' <nl> + | | unserializedSource . charAt ( unserializedSource . length ( ) - 1 ) ! = ' > ' ) { <nl> + continue ; <nl> + } <nl> + <nl> + / / no dtd testing yet <nl> + if ( unserializedSource . contains ( " < ! " ) ) { <nl> + continue ; <nl> + } <nl> + <nl> + buildAndTestXml ( file . getName ( ) , unserializedSource ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + private static void buildAndTestXml ( String fileName , String unserializedSource ) <nl> + throws IOException , ParserConfigurationException { <nl> + / / not all examples come with the full xml structure <nl> + String code = unserializedSource ; <nl> + <nl> + if ( ! hasFileSetClass ( code ) ) { <nl> + code = " < module name = \ " TreeWalker \ " > \ n " + code + " \ n < / module > " ; <nl> + } <nl> + if ( ! code . contains ( " name = \ " Checker \ " " ) ) { <nl> + code = " < module name = \ " Checker \ " > \ n " + code + " \ n < / module > " ; <nl> + } <nl> + if ( ! code . startsWith ( " < ? xml " ) ) { <nl> + final String dtdPath = new File ( <nl> + " src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd " ) <nl> + . getCanonicalPath ( ) ; <nl> + <nl> + code = " < ? xml version = \ " 1 . 0 \ " ? > \ n < ! DOCTYPE module PUBLIC " <nl> + + " \ " - / / Puppy Crawl / / DTD Check Configuration 1 . 3 / / EN \ " \ " " + dtdPath + " \ " > \ n " <nl> + + code ; <nl> + } <nl> + <nl> + testRawXml ( fileName , code , unserializedSource ) ; <nl> + <nl> + / / can ' t test ant structure , or old and outdated checks <nl> + if ( ! fileName . startsWith ( " anttask " ) & & ! fileName . startsWith ( " releasenotes " ) ) { <nl> + testCheckstyleXml ( fileName , code , unserializedSource ) ; <nl> + } <nl> + } <nl> + <nl> + private static boolean hasFileSetClass ( String xml ) { <nl> + boolean found = false ; <nl> + <nl> + for ( String find : XML _ FILESET _ LIST ) { <nl> + if ( xml . contains ( find ) ) { <nl> + found = true ; <nl> + break ; <nl> + } <nl> + } <nl> + <nl> + return found ; <nl> + } <nl> + <nl> + private static void testRawXml ( String fileName , String code , String unserializedSource ) <nl> + throws ParserConfigurationException { <nl> + try { <nl> + final DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance ( ) ; <nl> + factory . setValidating ( false ) ; <nl> + factory . setNamespaceAware ( true ) ; <nl> + <nl> + final DocumentBuilder builder = factory . newDocumentBuilder ( ) ; <nl> + <nl> + builder . parse ( new InputSource ( new StringReader ( code ) ) ) ; <nl> + } <nl> + catch ( IOException | SAXException e ) { <nl> + Assert . fail ( fileName + " has invalid xml ( " + e . getMessage ( ) + " ) : " <nl> + + unserializedSource ) ; <nl> + } <nl> + } <nl> + <nl> + private static void testCheckstyleXml ( String fileName , String code , String unserializedSource ) <nl> + throws IOException { <nl> + / / can ' t process non - existent examples , or out of context snippets <nl> + if ( code . contains ( " com . mycompany " ) | | code . contains ( " checkstyle - packages " ) <nl> + | | code . contains ( " MethodLimit " ) | | code . contains ( " < suppress " ) <nl> + | | code . contains ( " < import - control " ) | | unserializedSource . startsWith ( " < property " ) <nl> + | | unserializedSource . startsWith ( " < taskdef " ) ) { <nl> + return ; <nl> + } <nl> + <nl> + / / validate checkstyle structure and contents <nl> + try { <nl> + final Properties properties = new Properties ( ) ; <nl> + <nl> + properties . setProperty ( " checkstyle . header . file " , <nl> + new File ( " config / java . header " ) . getCanonicalPath ( ) ) ; <nl> + <nl> + final PropertiesExpander expander = new PropertiesExpander ( properties ) ; <nl> + final Configuration config = ConfigurationLoader . loadConfiguration ( new InputSource ( <nl> + new StringReader ( code ) ) , expander , false ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> + <nl> + try { <nl> + final ClassLoader moduleClassLoader = Checker . class . getClassLoader ( ) ; <nl> + checker . setModuleClassLoader ( moduleClassLoader ) ; <nl> + checker . configure ( config ) ; <nl> + } <nl> + finally { <nl> + checker . destroy ( ) ; <nl> + } <nl> + } <nl> + catch ( CheckstyleException e ) { <nl> + Assert . fail ( fileName + " has invalid Checkstyle xml ( " + e . getMessage ( ) + " ) : " <nl> + + unserializedSource ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / xdocs / config . xml b / src / xdocs / config . xml <nl> index 807a041 . . 400f936 100644 <nl> - - - a / src / xdocs / config . xml <nl> + + + b / src / xdocs / config . xml <nl> @ @ - 123 , 7 + 123 , 7 @ @ <nl> for element : <nl> <nl> < source > <nl> - & lt ; module name = & quot ; com . puppycrawl . tools . checkstyle . TreeWalker & quot ; & gt ; <nl> + & lt ; module name = & quot ; com . puppycrawl . tools . checkstyle . TreeWalker & quot ; / & gt ; <nl> < / source > <nl> <nl> This is useful for plugging third - party modules into a configuration . <nl> @ @ - 218 , 7 + 218 , 9 @ @ <nl> < / p > <nl> <nl> < source > <nl> - & lt ; property name = & quot ; headerFile & quot ; value = & quot ; $ { checkstyle . header . file } & quot ; / & gt ; <nl> + & lt ; module name = & quot ; Header & quot ; & gt ; <nl> + & lt ; property name = & quot ; headerFile & quot ; value = & quot ; $ { checkstyle . header . file } & quot ; / & gt ; <nl> + & lt ; / module & gt ; <nl> < / source > <nl> <nl> < p > <nl> @ @ - 236 , 7 + 238 , 7 @ @ <nl> < / p > <nl> <nl> < source > <nl> - & lt ; module name = & quot ; JavaDocMethod & quot ; & gt ; <nl> + & lt ; module name = & quot ; JavadocMethod & quot ; & gt ; <nl> & lt ; property name = & quot ; severity & quot ; <nl> value = & quot ; $ { checkstyle . javadoc . severity } & quot ; <nl> default = & quot ; error & quot ; / & gt ; <nl> @ @ - 375 , 9 + 377 , 9 @ @ <nl> & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; <nl> . . . <nl> & lt ; / module & gt ; <nl> - <nl> - OR <nl> - <nl> + < / source > <nl> + < p > OR < / p > <nl> + < source > <nl> & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; <nl> . . . <nl> @ @ - 479 , 9 + 481 , 9 @ @ OR <nl> & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; <nl> . . . <nl> & lt ; / module & gt ; <nl> - <nl> - OR <nl> - <nl> + < / source > <nl> + < p > OR < / p > <nl> + < source > <nl> & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; <nl> . . . <nl> @ @ - 550 , 7 + 552 , 7 @ @ OR <nl> & lt ; module name = & quot ; MethodLength & quot ; & gt ; <nl> & lt ; property name = & quot ; tokens & quot ; value = & quot ; METHOD _ DEF & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> - & lt ; module name = & quot ; MethodLength & quot ; & gt ; <nl> + & lt ; module name = & quot ; MethodLength & quot ; & gt ; <nl> & lt ; property name = & quot ; tokens & quot ; value = & quot ; CTOR _ DEF & quot ; / & gt ; <nl> & lt ; property name = & quot ; max & quot ; value = & quot ; 60 & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index b3b8d0c . . ee71296 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 430 , 7 + 430 , 7 @ @ String nullString = null ; <nl> < / p > <nl> < source > <nl> & lt ; module name = " FinalLocalVariable " & gt ; <nl> - & lt ; property name = " token " value = " VARIABLE _ DEF " / & gt ; <nl> + & lt ; property name = " tokens " value = " VARIABLE _ DEF " / & gt ; <nl> & lt ; property name = " validateEnhancedForLoopVariable " value = " true " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> @ @ - 2774 , 7 + 2774 , 7 @ @ case 5 : <nl> < source > <nl> & lt ; module name = & quot ; FallThrough & quot ; & gt ; <nl> & lt ; property name = & quot ; reliefPattern & quot ; value = & quot ; continue in next case & quot ; / & gt ; <nl> - & lt ; module name = & quot ; FallThrough & quot ; / & gt ; <nl> + & lt ; / module & gt ; <nl> < / source > <nl> < / subsection > <nl> <nl> @ @ - 3344 , 10 + 3344 , 10 @ @ cal . set ( Calendar . MINUTE , minutes ) ; <nl> < / p > <nl> < source > <nl> & lt ; module name = " VariableDeclarationUsageDistance " & gt ; <nl> - & lt ; property name = " allowedDistance " value = " 4 " & gt ; <nl> - & lt ; property name = " ignoreVariablePattern " value = " ^ temp . * " & gt ; <nl> - & lt ; property name = " validateBetweenScopes " value = " true " & gt ; <nl> - & lt ; property name = " mIgnoreFinal " value = " false " & gt ; <nl> + & lt ; property name = " allowedDistance " value = " 4 " / & gt ; <nl> + & lt ; property name = " ignoreVariablePattern " value = " ^ temp . * " / & gt ; <nl> + & lt ; property name = " validateBetweenScopes " value = " true " / & gt ; <nl> + & lt ; property name = " ignoreFinal " value = " false " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < / subsection > <nl> diff - - git a / src / xdocs / config _ filters . xml b / src / xdocs / config _ filters . xml <nl> index 096dcb8 . . 4a2f593 100644 <nl> - - - a / src / xdocs / config _ filters . xml <nl> + + + b / src / xdocs / config _ filters . xml <nl> @ @ - 123 , 11 + 123 , 11 @ @ <nl> For example , the following configuration fragment directs the <nl> Checker to use a < code > SuppressionFilter < / code > <nl> with suppressions <nl> - file < code > docs / suppressions . xml < / code > : <nl> + file < code > config / suppressions . xml < / code > : <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; SuppressionFilter & quot ; & gt ; <nl> - & lt ; property name = & quot ; file & quot ; value = & quot ; docs / suppressions . xml & quot ; / & gt ; <nl> + & lt ; property name = & quot ; file & quot ; value = & quot ; config / suppressions . xml & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < p > <nl> diff - - git a / src / xdocs / config _ header . xml b / src / xdocs / config _ header . xml <nl> index d54b192 . . 36ef847 100644 <nl> - - - a / src / xdocs / config _ header . xml <nl> + + + b / src / xdocs / config _ header . xml <nl> @ @ - 108 , 12 + 108 , 12 @ @ line 5 : / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> < / source > <nl> <nl> < p > <nl> - To configure the check to use header file < code > & quot ; java . header & quot ; < / code > and ignore lines < code > 2 < / code > , < code > 3 < / code > , and < code > 4 < / code > and only process Java files : <nl> + To configure the check to use header file < code > & quot ; config / java . header & quot ; < / code > and ignore lines < code > 2 < / code > , < code > 3 < / code > , and < code > 4 < / code > and only process Java files : <nl> < / p > <nl> <nl> < source > <nl> & lt ; module name = & quot ; Header & quot ; & gt ; <nl> - & lt ; property name = & quot ; headerFile & quot ; value = & quot ; java . header & quot ; / & gt ; <nl> + & lt ; property name = & quot ; headerFile & quot ; value = & quot ; config / java . header & quot ; / & gt ; <nl> & lt ; property name = & quot ; ignoreLines & quot ; value = & quot ; 2 , 3 , 4 & quot ; / & gt ; <nl> & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> @ @ - 289 , 11 + 289 , 11 @ @ line 6 : ^ \ W * $ <nl> < / source > <nl> <nl> < p > <nl> - To configure the check to use header file < code > & quot ; java . header & quot ; < / code > and < code > 10 < / code > and < code > 13 < / code > muli - lines : <nl> + To configure the check to use header file < code > & quot ; config / java . header & quot ; < / code > and < code > 10 < / code > and < code > 13 < / code > muli - lines : <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; RegexpHeader & quot ; & gt ; <nl> - & lt ; property name = & quot ; headerFile & quot ; value = & quot ; java . header & quot ; / & gt ; <nl> + & lt ; property name = & quot ; headerFile & quot ; value = & quot ; config / java . header & quot ; / & gt ; <nl> & lt ; property name = & quot ; multiLines & quot ; value = & quot ; 10 , 13 & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml <nl> index c3d0991 . . 9d184d9 100644 <nl> - - - a / src / xdocs / config _ imports . xml <nl> + + + b / src / xdocs / config _ imports . xml <nl> @ @ - 710 , 12 + 710 , 12 @ @ public class SomeClass { . . . } <nl> < subsection name = " Example " > <nl> < p > <nl> To configure the check using a import control file called <nl> - & quot ; import - control . xml & quot ; , then have the following : <nl> + & quot ; config / import - control . xml & quot ; , then have the following : <nl> < / p > <nl> <nl> < source > <nl> & lt ; module name = & quot ; ImportControl & quot ; & gt ; <nl> - & lt ; property name = & quot ; file & quot ; value = & quot ; import - control . xml & quot ; / & gt ; <nl> + & lt ; property name = & quot ; file & quot ; value = & quot ; config / import - control . xml & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> diff - - git a / src / xdocs / config _ javadoc . xml b / src / xdocs / config _ javadoc . xml <nl> index bd1ff41 . . b3dcd39 100644 <nl> - - - a / src / xdocs / config _ javadoc . xml <nl> + + + b / src / xdocs / config _ javadoc . xml <nl> @ @ - 221 , 7 + 221 , 7 @ @ <nl> < source > <nl> & lt ; module name = " JavadocType " & gt ; <nl> & lt ; property name = " scope " value = " private " / & gt ; <nl> - & lt ; property name = " excludescope " value = " package " / & gt ; <nl> + & lt ; property name = " excludeScope " value = " package " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < / subsection > <nl> @ @ - 970 , 14 + 970 , 6 @ @ public boolean isSomething ( ) <nl> < source > <nl> & lt ; module name = & quot ; NonEmptyAtclauseDescription & quot ; / & gt ; <nl> < / source > <nl> - < p > <nl> - To check non - empty at - clause description for tags < code > @ throws < / code > , < code > @ deprecated < / code > , use following config : <nl> - < / p > <nl> - < source > <nl> - & lt ; module name = & quot ; NonEmptyAtclauseDescription & quot ; & gt ; <nl> - & lt ; property name = & quot ; target & quot ; value = & quot ; JAVADOC _ TAG _ THROWS _ LITERAL , JAVADOC _ TAG _ DEPRECATED _ LITERAL & quot ; / & gt ; <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> < / subsection > <nl> <nl> < subsection name = " Example of Usage " > <nl> @ @ - 1036 , 7 + 1028 , 7 @ @ public boolean isSomething ( ) <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; JavadocTagContinuationIndentation & quot ; & gt ; <nl> - & lt ; property name = & quot ; tagContinuationIndentation & quot ; value = & quot ; 4 & quot ; / & gt ; <nl> + & lt ; property name = & quot ; offset & quot ; value = & quot ; 4 & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < / subsection > <nl> diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml <nl> index 59cdf12 . . 60e2060 100755 <nl> - - - a / src / xdocs / config _ misc . xml <nl> + + + b / src / xdocs / config _ misc . xml <nl> @ @ - 236 , 7 + 236 , 7 @ @ <nl> To configure the Check : <nl> < / p > <nl> < source > <nl> - & lt ; module name = & quot ; CommentsIndentation & quot ; / module & gt ; <nl> + & lt ; module name = & quot ; CommentsIndentation & quot ; / & gt ; <nl> < / source > <nl> < source > <nl> / * <nl> diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index 414b1f4 . . 510ee04 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 130 , 7 + 130 , 7 @ @ <nl> & lt ; property name = " tokens " value = " VARIABLE _ DEF , CLASS _ DEF " / & gt ; <nl> & lt ; property name = " ignoreStatic " value = " false " / & gt ; <nl> & lt ; property name = " allowedAbbreviationLength " value = " 1 " / & gt ; <nl> - & lt ; property name = " allowedAbbreviation " value = " XML , URL " / & gt ; <nl> + & lt ; property name = " allowedAbbreviations " value = " XML , URL " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < / subsection > <nl> diff - - git a / src / xdocs / config _ regexp . xml b / src / xdocs / config _ regexp . xml <nl> index 3f57601 . . 1152bc3 100644 <nl> - - - a / src / xdocs / config _ regexp . xml <nl> + + + b / src / xdocs / config _ regexp . xml <nl> @ @ - 385 , 26 + 385 , 26 @ @ <nl> value = & quot ; \ A / \ * \ n \ * ( \ w * ) \ . java \ n \ * \ n \ * Copyright \ ( c \ ) <nl> \ d \ d \ d \ d ACME \ n \ * 123 Some St \ . \ n \ * Somewhere \ . \ n \ * \ n <nl> \ * This software is the confidential and proprietary information <nl> - of ACME \ . \ n \ * \ ( & quot ; Confidential Information & quot ; \ ) \ . You <nl> + of ACME \ . \ n \ * \ ( & amp ; quot ; Confidential Information & amp ; quot ; \ ) \ . You <nl> shall not disclose such \ n \ * Confidential Information and shall <nl> use it only in accordance with \ n \ * the terms of the license <nl> agreement you entered into with ACME \ . \ n \ * \ n <nl> - \ * \ $ Log : config _ misc . xml , v $ <nl> - \ * \ Revision 1 . 7 2007 / 01 / 16 12 : 16 : 35 oburn <nl> - \ * \ Removing all reference to mailing lists <nl> + \ * \ $ Log : config _ misc \ . xml , v $ <nl> + \ * Revision 1 \ . 7 2007 / 01 / 16 12 : 16 : 35 oburn <nl> + \ * Removing all reference to mailing lists <nl> \ * \ <nl> - \ * \ Revision 1 . 6 2005 / 12 / 25 16 : 13 : 10 o _ sukhodolsky <nl> - \ * \ Fix for rfe 1248106 ( TYPECAST is now accepted by NoWhitespaceAfter ) <nl> + \ * Revision 1 . 6 2005 / 12 / 25 16 : 13 : 10 o _ sukhodolsky <nl> + \ * Fix for rfe 1248106 \ ( TYPECAST is now accepted by NoWhitespaceAfter \ ) <nl> \ * \ <nl> - \ * \ Fix for rfe 953266 ( thanks to Paul Guyot ( pguyot ) for submitting patch ) <nl> - \ * \ IllegalType can be configured to accept some abstract classes which <nl> - \ * \ matches to regexp of illegal type names ( property legalAbstractClassNames ) <nl> - \ * \ <nl> - \ * \ TrailingComment now can be configured to accept some trailing comments <nl> - \ * \ ( such as NOI18N ) ( property legalComment , rfe 1385344 ) . <nl> - \ * \ <nl> - \ * \ Revision 1 . 5 2005 / 11 / 06 11 : 54 : 12 oburn <nl> - \ * \ Incorporate excellent patch [ 1344344 ] Consolidation of regexp checks . <nl> + \ * Fix for rfe 953266 \ ( thanks to Paul Guyot \ ( pguyot \ ) for submitting patch \ ) <nl> + \ * IllegalType can be configured to accept some abstract classes which <nl> + \ * matches to regexp of illegal type names \ ( property legalAbstractClassNames \ ) <nl> + \ * <nl> + \ * TrailingComment now can be configured to accept some trailing comments <nl> + \ * \ ( such as NOI18N \ ) \ ( property legalComment , rfe 1385344 \ ) . <nl> + \ * <nl> + \ * Revision 1 . 5 2005 / 11 / 06 11 : 54 : 12 oburn <nl> + \ * Incorporate excellent patch \ [ 1344344 \ ] Consolidation of regexp checks . <nl> \ * \ \ n ( . * \ n ) * ( [ \ w | \ s ] * ( class | interface ) \ 1 ) & quot ; / & gt ; <nl> & lt ; property name = & quot ; message & quot ; value = & quot ; Correct header not found & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml <nl> index 7f89854 . . 88d7e2a 100644 <nl> - - - a / src / xdocs / config _ whitespace . xml <nl> + + + b / src / xdocs / config _ whitespace . xml <nl> @ @ - 1516 , 7 + 1516 , 7 @ @ import com . puppycrawl . tools . <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; NoLineWrap & quot ; & gt ; <nl> - & lt ; property name = " tokens " value = " IMPORT " & gt ; <nl> + & lt ; property name = " tokens " value = " IMPORT " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < p >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheck . java <nl> index a81ac42 . . 798a11f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheck . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . sizes ; <nl> <nl> + import com . puppycrawl . tools . checkstyle . api . AnnotationUtility ; <nl> import com . puppycrawl . tools . checkstyle . api . Check ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> @ @ - 28 , 6 + 29 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * Checks the number of parameters that a method or constructor has . <nl> * The default allowable number of parameters is 7 . <nl> * To change the number of allowable parameters , set property max . <nl> + * Allows to ignore number of parameters for methods with <nl> + * & # 064 ; { @ link java . lang . Override } annotation . <nl> * < / p > <nl> * < p > <nl> * An example of how to configure the check is : <nl> @ @ - 36 , 26 + 39 , 48 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * & lt ; module name = " ParameterNumber " / & gt ; <nl> * < / pre > <nl> * < p > <nl> - * An example of how to configure the check to allow 10 parameters is : <nl> + * An example of how to configure the check to allow 10 parameters <nl> + * and ignoring parameters for methods with & # 064 ; { @ link java . lang . Override } <nl> + * annotation is : <nl> * < / p > <nl> * < pre > <nl> * & lt ; module name = " ParameterNumber " & gt ; <nl> * & lt ; property name = " max " value = " 10 " / & gt ; <nl> + * & lt ; property name = " ignoreOverriddenMethods " value = " true " / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> - <nl> + * Java code that will be ignored : <nl> + * < pre > <nl> + * < code > <nl> + * <nl> + * & # 064 ; Override <nl> + * public void needsLotsOfParameters ( int a , <nl> + * int b , int c , int d , int e , int f , int g , int h ) { <nl> + * . . . <nl> + * } <nl> + * < / code > <nl> + * < / pre > <nl> * @ author Oliver Burn <nl> * @ version 1 . 0 <nl> * / <nl> public class ParameterNumberCheck <nl> extends Check <nl> { <nl> + / * * { @ link Override Override } annotation name * / <nl> + private static final String OVERRIDE = " Override " ; <nl> + <nl> + / * * fully - qualified { @ link Override Override } annotation name * / <nl> + private static final String FQ _ OVERRIDE = " java . lang . " + OVERRIDE ; <nl> + <nl> / * * default maximum number of allowed parameters * / <nl> private static final int DEFAULT _ MAX _ PARAMETERS = 7 ; <nl> <nl> / * * the maximum number of allowed parameters * / <nl> private int mMax = DEFAULT _ MAX _ PARAMETERS ; <nl> <nl> + / * * ignore overridden methods * / <nl> + private boolean mIgnoreOverriddenMethods ; <nl> + <nl> / * * <nl> * Sets the maximum number of allowed parameters . <nl> * @ param aMax the max allowed parameters <nl> @ @ - 65 , 6 + 90 , 16 @ @ public class ParameterNumberCheck <nl> mMax = aMax ; <nl> } <nl> <nl> + / * * <nl> + * Ignore number of parameters for methods with <nl> + * & # 064 ; { @ link java . lang . Override } annotation . <nl> + * @ param aIgnoreOverriddenMethods set ignore overridden methods <nl> + * / <nl> + public void setIgnoreOverriddenMethods ( boolean aIgnoreOverriddenMethods ) <nl> + { <nl> + mIgnoreOverriddenMethods = aIgnoreOverriddenMethods ; <nl> + } <nl> + <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) <nl> { <nl> @ @ - 76 , 9 + 111 , 23 @ @ public class ParameterNumberCheck <nl> { <nl> final DetailAST params = aAST . findFirstToken ( TokenTypes . PARAMETERS ) ; <nl> final int count = params . getChildCount ( TokenTypes . PARAMETER _ DEF ) ; <nl> - if ( count > mMax ) { <nl> + if ( count > mMax & & ! ignoreNumberOfParameters ( aAST ) ) { <nl> final DetailAST name = aAST . findFirstToken ( TokenTypes . IDENT ) ; <nl> log ( name . getLineNo ( ) , name . getColumnNo ( ) , " maxParam " , mMax , count ) ; <nl> } <nl> } <nl> + <nl> + / * * Determine whether to ignore number of parameters for the method . <nl> + * <nl> + * @ param aAST the token to process <nl> + * @ return true if this is overridden method and number of parameters should be ignored <nl> + * false otherwise <nl> + * / <nl> + private boolean ignoreNumberOfParameters ( DetailAST aAST ) <nl> + { <nl> + / / if you override a method , you have no power over the number of parameters <nl> + return mIgnoreOverriddenMethods <nl> + & & ( AnnotationUtility . containsAnnotation ( aAST , OVERRIDE ) <nl> + | | AnnotationUtility . containsAnnotation ( aAST , FQ _ OVERRIDE ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java <nl> index 7d293f2 . . 674b2b5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java <nl> @ @ - 63 , 4 + 63 , 17 @ @ public class ParameterNumberCheckTest <nl> } ; <nl> verify ( checkConfig , getPath ( " InputSimple . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void shouldIgnoreMethodsWithOverrideAnnotation ( ) <nl> + throws Exception <nl> + { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( ParameterNumberCheck . class ) ; <nl> + checkConfig . addAttribute ( " ignoreOverriddenMethods " , " true " ) ; <nl> + final String [ ] expected = { <nl> + " 6 : 10 : More than 7 parameters ( found 8 ) . " , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputParameterNumberCheck . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputParameterNumberCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputParameterNumberCheck . java <nl> new file mode 100644 <nl> index 0000000 . . e90969d <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputParameterNumberCheck . java <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + class InputParameterNumberCheckBase <nl> + { <nl> + / / method with many parameters <nl> + void myMethod ( int a , int b , int c , int d , int e , int f , int g , int h ) { <nl> + <nl> + } <nl> + } <nl> + <nl> + public class InputParameterNumberCheck extends InputParameterNumberCheckBase <nl> + { <nl> + @ Override <nl> + void myMethod ( int a , int b , int c , int d , int e , int f , int g , int h ) { <nl> + <nl> + } <nl> + } <nl> diff - - git a / src / xdocs / config _ sizes . xml b / src / xdocs / config _ sizes . xml <nl> index 5ece323 . . d75c39e 100644 <nl> - - - a / src / xdocs / config _ sizes . xml <nl> + + + b / src / xdocs / config _ sizes . xml <nl> @ @ - 411 , 6 + 411 , 12 @ @ <nl> < td > 7 < / td > <nl> < / tr > <nl> < tr > <nl> + < td > ignoreOverriddenMethods < / td > <nl> + < td > Ignore number of parameters for methods with @ Override annotation < / td > <nl> + < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > <nl> + < td > false < / td > <nl> + < / tr > <nl> + < tr > <nl> < td > tokens < / td > <nl> < td > declarations to check < / td > <nl> <nl> @ @ - 448 , 6 + 454 , 28 @ @ <nl> & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> + < p > <nl> + To configure the check to ignore number of parameters for methods with @ Override or @ java . lang . Override annotation . <nl> + < / p > <nl> + < p > <nl> + Rationale : developer may need to override method with many parameters from 3 - rd party library . <nl> + In this case developer has no control over number of parameters . <nl> + < / p > <nl> + < source > <nl> + & lt ; module name = " ParameterNumber " & gt ; <nl> + & lt ; property name = " ignoreOverriddenMethods " value = " true " / & gt ; <nl> + & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + < p > <nl> + Java code example <nl> + < / p > <nl> + < source > <nl> + @ Override <nl> + public void needsLotsOfParameters ( int a , int b , int c , int d , int e , int f , int g , int h ) { <nl> + . . . <nl> + } <nl> + < / source > <nl> < / subsection > <nl> <nl> < subsection name = " Package " >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 index 1d861a2 . . b741311 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 @ @ - 129 , 7 + 129 , 7 @ @ class PackageObjectFactory implements ModuleFactory { 
 declaredConstructor . setAccessible ( true ) ; 
 return declaredConstructor . newInstance ( ) ; 
 } 
 - catch ( final ReflectiveOperationException exception ) { 
 + catch ( final ReflectiveOperationException | NoClassDefFoundError exception ) { 
 throw new CheckstyleException ( " Unable to find class for " + className , exception ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 index 32dffcd . . 1a2ef8e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 @ @ - 155 , 10 + 155 , 10 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * < / p > 
 * < pre > 
 * & lt ; module name = " VariableDeclarationUsageDistance " & gt ; 
 - * & lt ; property name = " allowedDistance " value = " 4 " & gt ; 
 - * & lt ; property name = " ignoreVariablePattern " value = " ^ temp . * " & gt ; 
 - * & lt ; property name = " validateBetweenScopes " value = " true " & gt ; 
 - * & lt ; property name = " ignoreFinal " value = " false " & gt ; 
 + * & lt ; property name = " allowedDistance " value = " 4 " / & gt ; 
 + * & lt ; property name = " ignoreVariablePattern " value = " ^ temp . * " / & gt ; 
 + * & lt ; property name = " validateBetweenScopes " value = " true " / & gt ; 
 + * & lt ; property name = " ignoreFinal " value = " false " / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 index 70be638 . . 6d1857b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 @ @ - 42 , 7 + 42 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * 
 * < pre > 
 * { @ code 
 - * & lt ; module name = & quot ; CommentsIndentation & quot ; / module & gt ; 
 + * & lt ; module name = & quot ; CommentsIndentation & quot ; / & gt ; 
 * } 
 * { @ code 
 * / * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / NonEmptyAtclauseDescriptionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / NonEmptyAtclauseDescriptionCheck . java 
 index 7367271 . . bde57fb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / NonEmptyAtclauseDescriptionCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / NonEmptyAtclauseDescriptionCheck . java 
 @ @ - 31 , 16 + 31 , 6 @ @ import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; 
 * < pre > 
 * & lt ; module name = & quot ; NonEmptyAtclauseDescription & quot ; / & gt ; 
 * < / pre > 
 - * < p > 
 - * To check non - empty at - clause description for tags { @ code @ throws } , 
 - * { @ code @ deprecated } , use following configuration : 
 - * < / p > 
 - * < pre > 
 - * & lt ; module name = & quot ; NonEmptyAtclauseDescription & quot ; & gt ; 
 - * & lt ; property name = & quot ; target & quot ; value = & quot ; JAVADOC _ TAG _ THROWS _ LITERAL , 
 - * JAVADOC _ TAG _ DEPRECATED _ LITERAL & quot ; / & gt ; 
 - * & lt ; / module & gt ; 
 - * < / pre > 
 * 
 * @ author maxvetrenko 
 * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoLineWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoLineWrapCheck . java 
 index 71b7af1 . . 9d1b60b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoLineWrapCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoLineWrapCheck . java 
 @ @ - 53 , 7 + 53 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * < / p > 
 * < pre class = " body " > 
 * & lt ; module name = & quot ; NoLineWrap & quot ; & gt ; 
 - * & lt ; property name = " tokens " value = " IMPORT " & gt ; 
 + * & lt ; property name = " tokens " value = " IMPORT " / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksPresentOnAvailableChecksPageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksPresentOnAvailableChecksPageTest . java 
 deleted file mode 100644 
 index 9b2d3af . . 0000000 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksPresentOnAvailableChecksPageTest . java 
 + + + / dev / null 
 @ @ - 1 , 83 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / checkstyle : Checks Java source code for adherence to a set of rules . 
 - / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 - / / 
 - / / This library is free software ; you can redistribute it and / or 
 - / / modify it under the terms of the GNU Lesser General Public 
 - / / License as published by the Free Software Foundation ; either 
 - / / version 2 . 1 of the License , or ( at your option ) any later version . 
 - / / 
 - / / This library is distributed in the hope that it will be useful , 
 - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - / / Lesser General Public License for more details . 
 - / / 
 - / / You should have received a copy of the GNU Lesser General Public 
 - / / License along with this library ; if not , write to the Free Software 
 - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - import static java . nio . charset . StandardCharsets . UTF _ 8 ; 
 - 
 - import java . io . File ; 
 - import java . io . IOException ; 
 - import java . util . Arrays ; 
 - import java . util . List ; 
 - import java . util . Locale ; 
 - 
 - import org . junit . Assert ; 
 - import org . junit . Test ; 
 - 
 - import com . google . common . io . Files ; 
 - 
 - public class AllChecksPresentOnAvailableChecksPageTest { 
 - private static final File JAVA _ SOURCES _ DIRECTORY = new File ( " src / main / java " ) ; 
 - private static final String AVAILABLE _ CHECKS _ PATH = " src / xdocs / checks . xml " ; 
 - private static final File AVAILABLE _ CHECKS _ FILE = new File ( AVAILABLE _ CHECKS _ PATH ) ; 
 - private static final String CHECK _ FILE _ NAME = " . + Check . java $ " ; 
 - private static final String CHECK _ SUFFIX = " Check . java " ; 
 - private static final String LINK _ TEMPLATE = 
 - " ( ? s ) . * < a href = \ " config _ \ \ w + \ \ . html # % 1 $ s \ " > % 1 $ s < / a > . * " ; 
 - 
 - private static final List < String > IGNORE _ LIST = Arrays . asList ( 
 - " AbstractAccessControlNameCheck . java " , 
 - " AbstractClassCouplingCheck . java " , 
 - " AbstractComplexityCheck . java " , 
 - " AbstractFileSetCheck . java " , 
 - " AbstractFormatCheck . java " , 
 - " AbstractHeaderCheck . java " , 
 - " AbstractIllegalCheck . java " , 
 - " AbstractIllegalMethodCheck . java " , 
 - " AbstractJavadocCheck . java " , 
 - " AbstractNameCheck . java " , 
 - " AbstractNestedDepthCheck . java " , 
 - " AbstractOptionCheck . java " , 
 - " AbstractParenPadCheck . java " , 
 - " AbstractSuperCheck . java " , 
 - " AbstractTypeAwareCheck . java " , 
 - " AbstractTypeParameterNameCheck . java " , 
 - " FileSetCheck . java " 
 - ) ; 
 - 
 - @ Test 
 - public void testAllChecksPresentOnAvailableChecksPage ( ) throws IOException { 
 - final String availableChecks = Files . toString ( AVAILABLE _ CHECKS _ FILE , UTF _ 8 ) ; 
 - for ( File file : Files . fileTreeTraverser ( ) . preOrderTraversal ( JAVA _ SOURCES _ DIRECTORY ) ) { 
 - final String fileName = file . getName ( ) ; 
 - if ( fileName . matches ( CHECK _ FILE _ NAME ) & & ! IGNORE _ LIST . contains ( fileName ) ) { 
 - final String checkName = fileName . replace ( CHECK _ SUFFIX , " " ) ; 
 - if ( ! isPresent ( availableChecks , checkName ) ) { 
 - Assert . fail ( checkName + " is not correctly listed on Available Checks page " 
 - + " - add it to " + AVAILABLE _ CHECKS _ PATH ) ; 
 - } 
 - } 
 - } 
 - } 
 - 
 - private static boolean isPresent ( String availableChecks , String checkName ) { 
 - final String linkPattern = String . format ( Locale . ROOT , LINK _ TEMPLATE , checkName ) ; 
 - return availableChecks . matches ( linkPattern ) ; 
 - } 
 - } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 new file mode 100644 
 index 0000000 . . efab736 
 - - - / dev / null 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 @ @ - 0 , 0 + 1 , 248 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + import static java . nio . charset . StandardCharsets . UTF _ 8 ; 
 + 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + import java . io . StringReader ; 
 + import java . util . Arrays ; 
 + import java . util . List ; 
 + import java . util . Locale ; 
 + import java . util . Properties ; 
 + 
 + import javax . xml . parsers . DocumentBuilder ; 
 + import javax . xml . parsers . DocumentBuilderFactory ; 
 + import javax . xml . parsers . ParserConfigurationException ; 
 + 
 + import org . junit . Assert ; 
 + import org . junit . Test ; 
 + import org . xml . sax . InputSource ; 
 + import org . xml . sax . SAXException ; 
 + 
 + import com . google . common . io . Files ; 
 + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 + import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 + 
 + public class XDocsPagesTest { 
 + private static final File JAVA _ SOURCES _ DIRECTORY = new File ( " src / main / java " ) ; 
 + private static final File XDOCS _ DIRECTORY = new File ( " src / xdocs " ) ; 
 + private static final String AVAILABLE _ CHECKS _ PATH = " src / xdocs / checks . xml " ; 
 + private static final File AVAILABLE _ CHECKS _ FILE = new File ( AVAILABLE _ CHECKS _ PATH ) ; 
 + private static final String CHECK _ FILE _ NAME = " . + Check . java $ " ; 
 + private static final String CHECK _ SUFFIX = " Check . java " ; 
 + private static final String LINK _ TEMPLATE = 
 + " ( ? s ) . * < a href = \ " config _ \ \ w + \ \ . html # % 1 $ s \ " > % 1 $ s < / a > . * " ; 
 + 
 + private static final List < String > CHECKS _ ON _ PAGE _ IGNORE _ LIST = Arrays . asList ( 
 + " AbstractAccessControlNameCheck . java " , 
 + " AbstractClassCouplingCheck . java " , 
 + " AbstractComplexityCheck . java " , 
 + " AbstractFileSetCheck . java " , 
 + " AbstractFormatCheck . java " , 
 + " AbstractHeaderCheck . java " , 
 + " AbstractIllegalCheck . java " , 
 + " AbstractIllegalMethodCheck . java " , 
 + " AbstractJavadocCheck . java " , 
 + " AbstractNameCheck . java " , 
 + " AbstractNestedDepthCheck . java " , 
 + " AbstractOptionCheck . java " , 
 + " AbstractParenPadCheck . java " , 
 + " AbstractSuperCheck . java " , 
 + " AbstractTypeAwareCheck . java " , 
 + " AbstractTypeParameterNameCheck . java " , 
 + " FileSetCheck . java " 
 + ) ; 
 + 
 + private static final List < String > XML _ FILESET _ LIST = Arrays . asList ( 
 + " TreeWalker " , 
 + " name = \ " Checker \ " " , 
 + " name = \ " Header \ " " , 
 + " name = \ " Translation \ " " , 
 + " name = \ " SeverityMatchFilter \ " " , 
 + " name = \ " SuppressionFilter \ " " , 
 + " name = \ " SuppressionCommentFilter \ " " , 
 + " name = \ " SuppressWithNearbyCommentFilter \ " " , 
 + " name = \ " SuppressWarningsFilter \ " " , 
 + " name = \ " RegexpHeader \ " " , 
 + " name = \ " RegexpMultiline \ " " , 
 + " name = \ " JavadocPackage \ " " , 
 + " name = \ " NewlineAtEndOfFile \ " " , 
 + " name = \ " UniqueProperties \ " " , 
 + " name = \ " FileLength \ " " , 
 + " name = \ " FileTabCharacter \ " " 
 + ) ; 
 + 
 + @ Test 
 + public void testAllChecksPresentOnAvailableChecksPage ( ) throws IOException { 
 + final String availableChecks = Files . toString ( AVAILABLE _ CHECKS _ FILE , UTF _ 8 ) ; 
 + for ( File file : Files . fileTreeTraverser ( ) . preOrderTraversal ( JAVA _ SOURCES _ DIRECTORY ) ) { 
 + final String fileName = file . getName ( ) ; 
 + if ( fileName . matches ( CHECK _ FILE _ NAME ) & & ! CHECKS _ ON _ PAGE _ IGNORE _ LIST . contains ( fileName ) ) { 
 + final String checkName = fileName . replace ( CHECK _ SUFFIX , " " ) ; 
 + if ( ! isPresent ( availableChecks , checkName ) ) { 
 + Assert . fail ( checkName + " is not correctly listed on Available Checks page " 
 + + " - add it to " + AVAILABLE _ CHECKS _ PATH ) ; 
 + } 
 + } 
 + } 
 + } 
 + 
 + private static boolean isPresent ( String availableChecks , String checkName ) { 
 + final String linkPattern = String . format ( Locale . ROOT , LINK _ TEMPLATE , checkName ) ; 
 + return availableChecks . matches ( linkPattern ) ; 
 + } 
 + 
 + @ Test 
 + public void testAllXmlExamples ( ) throws Exception { 
 + for ( File file : Files . fileTreeTraverser ( ) . preOrderTraversal ( XDOCS _ DIRECTORY ) ) { 
 + if ( file . isDirectory ( ) ) { 
 + continue ; 
 + } 
 + 
 + final String source = Files . toString ( file , UTF _ 8 ) ; 
 + int position = - 1 ; 
 + 
 + while ( true ) { 
 + position = source . indexOf ( " < source > " , position + 1 ) ; 
 + 
 + if ( position = = - 1 ) { 
 + break ; 
 + } 
 + 
 + final int nextPosition = source . indexOf ( " < / source > " , position ) ; 
 + final String unserializedSource = source . substring ( position + 8 , nextPosition ) 
 + . trim ( ) . replace ( " & lt ; " , " < " ) . replace ( " & gt ; " , " > " ) . replace ( " & quot ; " , " \ " " ) 
 + . replace ( " & amp ; " , " & " ) . replace ( " . . . " , " " ) ; 
 + 
 + position = nextPosition ; 
 + 
 + if ( unserializedSource . charAt ( 0 ) ! = ' < ' 
 + | | unserializedSource . charAt ( unserializedSource . length ( ) - 1 ) ! = ' > ' ) { 
 + continue ; 
 + } 
 + 
 + / / no dtd testing yet 
 + if ( unserializedSource . contains ( " < ! " ) ) { 
 + continue ; 
 + } 
 + 
 + buildAndTestXml ( file . getName ( ) , unserializedSource ) ; 
 + } 
 + } 
 + } 
 + 
 + private static void buildAndTestXml ( String fileName , String unserializedSource ) 
 + throws IOException , ParserConfigurationException { 
 + / / not all examples come with the full xml structure 
 + String code = unserializedSource ; 
 + 
 + if ( ! hasFileSetClass ( code ) ) { 
 + code = " < module name = \ " TreeWalker \ " > \ n " + code + " \ n < / module > " ; 
 + } 
 + if ( ! code . contains ( " name = \ " Checker \ " " ) ) { 
 + code = " < module name = \ " Checker \ " > \ n " + code + " \ n < / module > " ; 
 + } 
 + if ( ! code . startsWith ( " < ? xml " ) ) { 
 + final String dtdPath = new File ( 
 + " src / main / resources / com / puppycrawl / tools / checkstyle / configuration _ 1 _ 3 . dtd " ) 
 + . getCanonicalPath ( ) ; 
 + 
 + code = " < ? xml version = \ " 1 . 0 \ " ? > \ n < ! DOCTYPE module PUBLIC " 
 + + " \ " - / / Puppy Crawl / / DTD Check Configuration 1 . 3 / / EN \ " \ " " + dtdPath + " \ " > \ n " 
 + + code ; 
 + } 
 + 
 + testRawXml ( fileName , code , unserializedSource ) ; 
 + 
 + / / can ' t test ant structure , or old and outdated checks 
 + if ( ! fileName . startsWith ( " anttask " ) & & ! fileName . startsWith ( " releasenotes " ) ) { 
 + testCheckstyleXml ( fileName , code , unserializedSource ) ; 
 + } 
 + } 
 + 
 + private static boolean hasFileSetClass ( String xml ) { 
 + boolean found = false ; 
 + 
 + for ( String find : XML _ FILESET _ LIST ) { 
 + if ( xml . contains ( find ) ) { 
 + found = true ; 
 + break ; 
 + } 
 + } 
 + 
 + return found ; 
 + } 
 + 
 + private static void testRawXml ( String fileName , String code , String unserializedSource ) 
 + throws ParserConfigurationException { 
 + try { 
 + final DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance ( ) ; 
 + factory . setValidating ( false ) ; 
 + factory . setNamespaceAware ( true ) ; 
 + 
 + final DocumentBuilder builder = factory . newDocumentBuilder ( ) ; 
 + 
 + builder . parse ( new InputSource ( new StringReader ( code ) ) ) ; 
 + } 
 + catch ( IOException | SAXException e ) { 
 + Assert . fail ( fileName + " has invalid xml ( " + e . getMessage ( ) + " ) : " 
 + + unserializedSource ) ; 
 + } 
 + } 
 + 
 + private static void testCheckstyleXml ( String fileName , String code , String unserializedSource ) 
 + throws IOException { 
 + / / can ' t process non - existent examples , or out of context snippets 
 + if ( code . contains ( " com . mycompany " ) | | code . contains ( " checkstyle - packages " ) 
 + | | code . contains ( " MethodLimit " ) | | code . contains ( " < suppress " ) 
 + | | code . contains ( " < import - control " ) | | unserializedSource . startsWith ( " < property " ) 
 + | | unserializedSource . startsWith ( " < taskdef " ) ) { 
 + return ; 
 + } 
 + 
 + / / validate checkstyle structure and contents 
 + try { 
 + final Properties properties = new Properties ( ) ; 
 + 
 + properties . setProperty ( " checkstyle . header . file " , 
 + new File ( " config / java . header " ) . getCanonicalPath ( ) ) ; 
 + 
 + final PropertiesExpander expander = new PropertiesExpander ( properties ) ; 
 + final Configuration config = ConfigurationLoader . loadConfiguration ( new InputSource ( 
 + new StringReader ( code ) ) , expander , false ) ; 
 + final Checker checker = new Checker ( ) ; 
 + 
 + try { 
 + final ClassLoader moduleClassLoader = Checker . class . getClassLoader ( ) ; 
 + checker . setModuleClassLoader ( moduleClassLoader ) ; 
 + checker . configure ( config ) ; 
 + } 
 + finally { 
 + checker . destroy ( ) ; 
 + } 
 + } 
 + catch ( CheckstyleException e ) { 
 + Assert . fail ( fileName + " has invalid Checkstyle xml ( " + e . getMessage ( ) + " ) : " 
 + + unserializedSource ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / xdocs / config . xml b / src / xdocs / config . xml 
 index 807a041 . . 400f936 100644 
 - - - a / src / xdocs / config . xml 
 + + + b / src / xdocs / config . xml 
 @ @ - 123 , 7 + 123 , 7 @ @ 
 for element : 
 
 < source > 
 - & lt ; module name = & quot ; com . puppycrawl . tools . checkstyle . TreeWalker & quot ; & gt ; 
 + & lt ; module name = & quot ; com . puppycrawl . tools . checkstyle . TreeWalker & quot ; / & gt ; 
 < / source > 
 
 This is useful for plugging third - party modules into a configuration . 
 @ @ - 218 , 7 + 218 , 9 @ @ 
 < / p > 
 
 < source > 
 - & lt ; property name = & quot ; headerFile & quot ; value = & quot ; $ { checkstyle . header . file } & quot ; / & gt ; 
 + & lt ; module name = & quot ; Header & quot ; & gt ; 
 + & lt ; property name = & quot ; headerFile & quot ; value = & quot ; $ { checkstyle . header . file } & quot ; / & gt ; 
 + & lt ; / module & gt ; 
 < / source > 
 
 < p > 
 @ @ - 236 , 7 + 238 , 7 @ @ 
 < / p > 
 
 < source > 
 - & lt ; module name = & quot ; JavaDocMethod & quot ; & gt ; 
 + & lt ; module name = & quot ; JavadocMethod & quot ; & gt ; 
 & lt ; property name = & quot ; severity & quot ; 
 value = & quot ; $ { checkstyle . javadoc . severity } & quot ; 
 default = & quot ; error & quot ; / & gt ; 
 @ @ - 375 , 9 + 377 , 9 @ @ 
 & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; 
 . . . 
 & lt ; / module & gt ; 
 - 
 - OR 
 - 
 + < / source > 
 + < p > OR < / p > 
 + < source > 
 & lt ; module name = & quot ; Checker & quot ; & gt ; 
 & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; 
 . . . 
 @ @ - 479 , 9 + 481 , 9 @ @ OR 
 & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; 
 . . . 
 & lt ; / module & gt ; 
 - 
 - OR 
 - 
 + < / source > 
 + < p > OR < / p > 
 + < source > 
 & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; 
 . . . 
 @ @ - 550 , 7 + 552 , 7 @ @ OR 
 & lt ; module name = & quot ; MethodLength & quot ; & gt ; 
 & lt ; property name = & quot ; tokens & quot ; value = & quot ; METHOD _ DEF & quot ; / & gt ; 
 & lt ; / module & gt ; 
 - & lt ; module name = & quot ; MethodLength & quot ; & gt ; 
 + & lt ; module name = & quot ; MethodLength & quot ; & gt ; 
 & lt ; property name = & quot ; tokens & quot ; value = & quot ; CTOR _ DEF & quot ; / & gt ; 
 & lt ; property name = & quot ; max & quot ; value = & quot ; 60 & quot ; / & gt ; 
 & lt ; / module & gt ; 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index b3b8d0c . . ee71296 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 430 , 7 + 430 , 7 @ @ String nullString = null ; 
 < / p > 
 < source > 
 & lt ; module name = " FinalLocalVariable " & gt ; 
 - & lt ; property name = " token " value = " VARIABLE _ DEF " / & gt ; 
 + & lt ; property name = " tokens " value = " VARIABLE _ DEF " / & gt ; 
 & lt ; property name = " validateEnhancedForLoopVariable " value = " true " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 @ @ - 2774 , 7 + 2774 , 7 @ @ case 5 : 
 < source > 
 & lt ; module name = & quot ; FallThrough & quot ; & gt ; 
 & lt ; property name = & quot ; reliefPattern & quot ; value = & quot ; continue in next case & quot ; / & gt ; 
 - & lt ; module name = & quot ; FallThrough & quot ; / & gt ; 
 + & lt ; / module & gt ; 
 < / source > 
 < / subsection > 
 
 @ @ - 3344 , 10 + 3344 , 10 @ @ cal . set ( Calendar . MINUTE , minutes ) ; 
 < / p > 
 < source > 
 & lt ; module name = " VariableDeclarationUsageDistance " & gt ; 
 - & lt ; property name = " allowedDistance " value = " 4 " & gt ; 
 - & lt ; property name = " ignoreVariablePattern " value = " ^ temp . * " & gt ; 
 - & lt ; property name = " validateBetweenScopes " value = " true " & gt ; 
 - & lt ; property name = " mIgnoreFinal " value = " false " & gt ; 
 + & lt ; property name = " allowedDistance " value = " 4 " / & gt ; 
 + & lt ; property name = " ignoreVariablePattern " value = " ^ temp . * " / & gt ; 
 + & lt ; property name = " validateBetweenScopes " value = " true " / & gt ; 
 + & lt ; property name = " ignoreFinal " value = " false " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < / subsection > 
 diff - - git a / src / xdocs / config _ filters . xml b / src / xdocs / config _ filters . xml 
 index 096dcb8 . . 4a2f593 100644 
 - - - a / src / xdocs / config _ filters . xml 
 + + + b / src / xdocs / config _ filters . xml 
 @ @ - 123 , 11 + 123 , 11 @ @ 
 For example , the following configuration fragment directs the 
 Checker to use a < code > SuppressionFilter < / code > 
 with suppressions 
 - file < code > docs / suppressions . xml < / code > : 
 + file < code > config / suppressions . xml < / code > : 
 < / p > 
 < source > 
 & lt ; module name = & quot ; SuppressionFilter & quot ; & gt ; 
 - & lt ; property name = & quot ; file & quot ; value = & quot ; docs / suppressions . xml & quot ; / & gt ; 
 + & lt ; property name = & quot ; file & quot ; value = & quot ; config / suppressions . xml & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < p > 
 diff - - git a / src / xdocs / config _ header . xml b / src / xdocs / config _ header . xml 
 index d54b192 . . 36ef847 100644 
 - - - a / src / xdocs / config _ header . xml 
 + + + b / src / xdocs / config _ header . xml 
 @ @ - 108 , 12 + 108 , 12 @ @ line 5 : / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 < / source > 
 
 < p > 
 - To configure the check to use header file < code > & quot ; java . header & quot ; < / code > and ignore lines < code > 2 < / code > , < code > 3 < / code > , and < code > 4 < / code > and only process Java files : 
 + To configure the check to use header file < code > & quot ; config / java . header & quot ; < / code > and ignore lines < code > 2 < / code > , < code > 3 < / code > , and < code > 4 < / code > and only process Java files : 
 < / p > 
 
 < source > 
 & lt ; module name = & quot ; Header & quot ; & gt ; 
 - & lt ; property name = & quot ; headerFile & quot ; value = & quot ; java . header & quot ; / & gt ; 
 + & lt ; property name = & quot ; headerFile & quot ; value = & quot ; config / java . header & quot ; / & gt ; 
 & lt ; property name = & quot ; ignoreLines & quot ; value = & quot ; 2 , 3 , 4 & quot ; / & gt ; 
 & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java & quot ; / & gt ; 
 & lt ; / module & gt ; 
 @ @ - 289 , 11 + 289 , 11 @ @ line 6 : ^ \ W * $ 
 < / source > 
 
 < p > 
 - To configure the check to use header file < code > & quot ; java . header & quot ; < / code > and < code > 10 < / code > and < code > 13 < / code > muli - lines : 
 + To configure the check to use header file < code > & quot ; config / java . header & quot ; < / code > and < code > 10 < / code > and < code > 13 < / code > muli - lines : 
 < / p > 
 < source > 
 & lt ; module name = & quot ; RegexpHeader & quot ; & gt ; 
 - & lt ; property name = & quot ; headerFile & quot ; value = & quot ; java . header & quot ; / & gt ; 
 + & lt ; property name = & quot ; headerFile & quot ; value = & quot ; config / java . header & quot ; / & gt ; 
 & lt ; property name = & quot ; multiLines & quot ; value = & quot ; 10 , 13 & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml 
 index c3d0991 . . 9d184d9 100644 
 - - - a / src / xdocs / config _ imports . xml 
 + + + b / src / xdocs / config _ imports . xml 
 @ @ - 710 , 12 + 710 , 12 @ @ public class SomeClass { . . . } 
 < subsection name = " Example " > 
 < p > 
 To configure the check using a import control file called 
 - & quot ; import - control . xml & quot ; , then have the following : 
 + & quot ; config / import - control . xml & quot ; , then have the following : 
 < / p > 
 
 < source > 
 & lt ; module name = & quot ; ImportControl & quot ; & gt ; 
 - & lt ; property name = & quot ; file & quot ; value = & quot ; import - control . xml & quot ; / & gt ; 
 + & lt ; property name = & quot ; file & quot ; value = & quot ; config / import - control . xml & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 
 diff - - git a / src / xdocs / config _ javadoc . xml b / src / xdocs / config _ javadoc . xml 
 index bd1ff41 . . b3dcd39 100644 
 - - - a / src / xdocs / config _ javadoc . xml 
 + + + b / src / xdocs / config _ javadoc . xml 
 @ @ - 221 , 7 + 221 , 7 @ @ 
 < source > 
 & lt ; module name = " JavadocType " & gt ; 
 & lt ; property name = " scope " value = " private " / & gt ; 
 - & lt ; property name = " excludescope " value = " package " / & gt ; 
 + & lt ; property name = " excludeScope " value = " package " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < / subsection > 
 @ @ - 970 , 14 + 970 , 6 @ @ public boolean isSomething ( ) 
 < source > 
 & lt ; module name = & quot ; NonEmptyAtclauseDescription & quot ; / & gt ; 
 < / source > 
 - < p > 
 - To check non - empty at - clause description for tags < code > @ throws < / code > , < code > @ deprecated < / code > , use following config : 
 - < / p > 
 - < source > 
 - & lt ; module name = & quot ; NonEmptyAtclauseDescription & quot ; & gt ; 
 - & lt ; property name = & quot ; target & quot ; value = & quot ; JAVADOC _ TAG _ THROWS _ LITERAL , JAVADOC _ TAG _ DEPRECATED _ LITERAL & quot ; / & gt ; 
 - & lt ; / module & gt ; 
 - < / source > 
 < / subsection > 
 
 < subsection name = " Example of Usage " > 
 @ @ - 1036 , 7 + 1028 , 7 @ @ public boolean isSomething ( ) 
 < / p > 
 < source > 
 & lt ; module name = & quot ; JavadocTagContinuationIndentation & quot ; & gt ; 
 - & lt ; property name = & quot ; tagContinuationIndentation & quot ; value = & quot ; 4 & quot ; / & gt ; 
 + & lt ; property name = & quot ; offset & quot ; value = & quot ; 4 & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < / subsection > 
 diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml 
 index 59cdf12 . . 60e2060 100755 
 - - - a / src / xdocs / config _ misc . xml 
 + + + b / src / xdocs / config _ misc . xml 
 @ @ - 236 , 7 + 236 , 7 @ @ 
 To configure the Check : 
 < / p > 
 < source > 
 - & lt ; module name = & quot ; CommentsIndentation & quot ; / module & gt ; 
 + & lt ; module name = & quot ; CommentsIndentation & quot ; / & gt ; 
 < / source > 
 < source > 
 / * 
 diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index 414b1f4 . . 510ee04 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 130 , 7 + 130 , 7 @ @ 
 & lt ; property name = " tokens " value = " VARIABLE _ DEF , CLASS _ DEF " / & gt ; 
 & lt ; property name = " ignoreStatic " value = " false " / & gt ; 
 & lt ; property name = " allowedAbbreviationLength " value = " 1 " / & gt ; 
 - & lt ; property name = " allowedAbbreviation " value = " XML , URL " / & gt ; 
 + & lt ; property name = " allowedAbbreviations " value = " XML , URL " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < / subsection > 
 diff - - git a / src / xdocs / config _ regexp . xml b / src / xdocs / config _ regexp . xml 
 index 3f57601 . . 1152bc3 100644 
 - - - a / src / xdocs / config _ regexp . xml 
 + + + b / src / xdocs / config _ regexp . xml 
 @ @ - 385 , 26 + 385 , 26 @ @ 
 value = & quot ; \ A / \ * \ n \ * ( \ w * ) \ . java \ n \ * \ n \ * Copyright \ ( c \ ) 
 \ d \ d \ d \ d ACME \ n \ * 123 Some St \ . \ n \ * Somewhere \ . \ n \ * \ n 
 \ * This software is the confidential and proprietary information 
 - of ACME \ . \ n \ * \ ( & quot ; Confidential Information & quot ; \ ) \ . You 
 + of ACME \ . \ n \ * \ ( & amp ; quot ; Confidential Information & amp ; quot ; \ ) \ . You 
 shall not disclose such \ n \ * Confidential Information and shall 
 use it only in accordance with \ n \ * the terms of the license 
 agreement you entered into with ACME \ . \ n \ * \ n 
 - \ * \ $ Log : config _ misc . xml , v $ 
 - \ * \ Revision 1 . 7 2007 / 01 / 16 12 : 16 : 35 oburn 
 - \ * \ Removing all reference to mailing lists 
 + \ * \ $ Log : config _ misc \ . xml , v $ 
 + \ * Revision 1 \ . 7 2007 / 01 / 16 12 : 16 : 35 oburn 
 + \ * Removing all reference to mailing lists 
 \ * \ 
 - \ * \ Revision 1 . 6 2005 / 12 / 25 16 : 13 : 10 o _ sukhodolsky 
 - \ * \ Fix for rfe 1248106 ( TYPECAST is now accepted by NoWhitespaceAfter ) 
 + \ * Revision 1 . 6 2005 / 12 / 25 16 : 13 : 10 o _ sukhodolsky 
 + \ * Fix for rfe 1248106 \ ( TYPECAST is now accepted by NoWhitespaceAfter \ ) 
 \ * \ 
 - \ * \ Fix for rfe 953266 ( thanks to Paul Guyot ( pguyot ) for submitting patch ) 
 - \ * \ IllegalType can be configured to accept some abstract classes which 
 - \ * \ matches to regexp of illegal type names ( property legalAbstractClassNames ) 
 - \ * \ 
 - \ * \ TrailingComment now can be configured to accept some trailing comments 
 - \ * \ ( such as NOI18N ) ( property legalComment , rfe 1385344 ) . 
 - \ * \ 
 - \ * \ Revision 1 . 5 2005 / 11 / 06 11 : 54 : 12 oburn 
 - \ * \ Incorporate excellent patch [ 1344344 ] Consolidation of regexp checks . 
 + \ * Fix for rfe 953266 \ ( thanks to Paul Guyot \ ( pguyot \ ) for submitting patch \ ) 
 + \ * IllegalType can be configured to accept some abstract classes which 
 + \ * matches to regexp of illegal type names \ ( property legalAbstractClassNames \ ) 
 + \ * 
 + \ * TrailingComment now can be configured to accept some trailing comments 
 + \ * \ ( such as NOI18N \ ) \ ( property legalComment , rfe 1385344 \ ) . 
 + \ * 
 + \ * Revision 1 . 5 2005 / 11 / 06 11 : 54 : 12 oburn 
 + \ * Incorporate excellent patch \ [ 1344344 \ ] Consolidation of regexp checks . 
 \ * \ \ n ( . * \ n ) * ( [ \ w | \ s ] * ( class | interface ) \ 1 ) & quot ; / & gt ; 
 & lt ; property name = & quot ; message & quot ; value = & quot ; Correct header not found & quot ; / & gt ; 
 & lt ; / module & gt ; 
 diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml 
 index 7f89854 . . 88d7e2a 100644 
 - - - a / src / xdocs / config _ whitespace . xml 
 + + + b / src / xdocs / config _ whitespace . xml 
 @ @ - 1516 , 7 + 1516 , 7 @ @ import com . puppycrawl . tools . 
 < / p > 
 < source > 
 & lt ; module name = & quot ; NoLineWrap & quot ; & gt ; 
 - & lt ; property name = " tokens " value = " IMPORT " & gt ; 
 + & lt ; property name = " tokens " value = " IMPORT " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < p >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheck . java 
 index a81ac42 . . 798a11f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheck . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . sizes ; 
 
 + import com . puppycrawl . tools . checkstyle . api . AnnotationUtility ; 
 import com . puppycrawl . tools . checkstyle . api . Check ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 @ @ - 28 , 6 + 29 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * Checks the number of parameters that a method or constructor has . 
 * The default allowable number of parameters is 7 . 
 * To change the number of allowable parameters , set property max . 
 + * Allows to ignore number of parameters for methods with 
 + * & # 064 ; { @ link java . lang . Override } annotation . 
 * < / p > 
 * < p > 
 * An example of how to configure the check is : 
 @ @ - 36 , 26 + 39 , 48 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * & lt ; module name = " ParameterNumber " / & gt ; 
 * < / pre > 
 * < p > 
 - * An example of how to configure the check to allow 10 parameters is : 
 + * An example of how to configure the check to allow 10 parameters 
 + * and ignoring parameters for methods with & # 064 ; { @ link java . lang . Override } 
 + * annotation is : 
 * < / p > 
 * < pre > 
 * & lt ; module name = " ParameterNumber " & gt ; 
 * & lt ; property name = " max " value = " 10 " / & gt ; 
 + * & lt ; property name = " ignoreOverriddenMethods " value = " true " / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 - 
 + * Java code that will be ignored : 
 + * < pre > 
 + * < code > 
 + * 
 + * & # 064 ; Override 
 + * public void needsLotsOfParameters ( int a , 
 + * int b , int c , int d , int e , int f , int g , int h ) { 
 + * . . . 
 + * } 
 + * < / code > 
 + * < / pre > 
 * @ author Oliver Burn 
 * @ version 1 . 0 
 * / 
 public class ParameterNumberCheck 
 extends Check 
 { 
 + / * * { @ link Override Override } annotation name * / 
 + private static final String OVERRIDE = " Override " ; 
 + 
 + / * * fully - qualified { @ link Override Override } annotation name * / 
 + private static final String FQ _ OVERRIDE = " java . lang . " + OVERRIDE ; 
 + 
 / * * default maximum number of allowed parameters * / 
 private static final int DEFAULT _ MAX _ PARAMETERS = 7 ; 
 
 / * * the maximum number of allowed parameters * / 
 private int mMax = DEFAULT _ MAX _ PARAMETERS ; 
 
 + / * * ignore overridden methods * / 
 + private boolean mIgnoreOverriddenMethods ; 
 + 
 / * * 
 * Sets the maximum number of allowed parameters . 
 * @ param aMax the max allowed parameters 
 @ @ - 65 , 6 + 90 , 16 @ @ public class ParameterNumberCheck 
 mMax = aMax ; 
 } 
 
 + / * * 
 + * Ignore number of parameters for methods with 
 + * & # 064 ; { @ link java . lang . Override } annotation . 
 + * @ param aIgnoreOverriddenMethods set ignore overridden methods 
 + * / 
 + public void setIgnoreOverriddenMethods ( boolean aIgnoreOverriddenMethods ) 
 + { 
 + mIgnoreOverriddenMethods = aIgnoreOverriddenMethods ; 
 + } 
 + 
 @ Override 
 public int [ ] getDefaultTokens ( ) 
 { 
 @ @ - 76 , 9 + 111 , 23 @ @ public class ParameterNumberCheck 
 { 
 final DetailAST params = aAST . findFirstToken ( TokenTypes . PARAMETERS ) ; 
 final int count = params . getChildCount ( TokenTypes . PARAMETER _ DEF ) ; 
 - if ( count > mMax ) { 
 + if ( count > mMax & & ! ignoreNumberOfParameters ( aAST ) ) { 
 final DetailAST name = aAST . findFirstToken ( TokenTypes . IDENT ) ; 
 log ( name . getLineNo ( ) , name . getColumnNo ( ) , " maxParam " , mMax , count ) ; 
 } 
 } 
 + 
 + / * * Determine whether to ignore number of parameters for the method . 
 + * 
 + * @ param aAST the token to process 
 + * @ return true if this is overridden method and number of parameters should be ignored 
 + * false otherwise 
 + * / 
 + private boolean ignoreNumberOfParameters ( DetailAST aAST ) 
 + { 
 + / / if you override a method , you have no power over the number of parameters 
 + return mIgnoreOverriddenMethods 
 + & & ( AnnotationUtility . containsAnnotation ( aAST , OVERRIDE ) 
 + | | AnnotationUtility . containsAnnotation ( aAST , FQ _ OVERRIDE ) ) ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java 
 index 7d293f2 . . 674b2b5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java 
 @ @ - 63 , 4 + 63 , 17 @ @ public class ParameterNumberCheckTest 
 } ; 
 verify ( checkConfig , getPath ( " InputSimple . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void shouldIgnoreMethodsWithOverrideAnnotation ( ) 
 + throws Exception 
 + { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( ParameterNumberCheck . class ) ; 
 + checkConfig . addAttribute ( " ignoreOverriddenMethods " , " true " ) ; 
 + final String [ ] expected = { 
 + " 6 : 10 : More than 7 parameters ( found 8 ) . " , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputParameterNumberCheck . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputParameterNumberCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputParameterNumberCheck . java 
 new file mode 100644 
 index 0000000 . . e90969d 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputParameterNumberCheck . java 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + class InputParameterNumberCheckBase 
 + { 
 + / / method with many parameters 
 + void myMethod ( int a , int b , int c , int d , int e , int f , int g , int h ) { 
 + 
 + } 
 + } 
 + 
 + public class InputParameterNumberCheck extends InputParameterNumberCheckBase 
 + { 
 + @ Override 
 + void myMethod ( int a , int b , int c , int d , int e , int f , int g , int h ) { 
 + 
 + } 
 + } 
 diff - - git a / src / xdocs / config _ sizes . xml b / src / xdocs / config _ sizes . xml 
 index 5ece323 . . d75c39e 100644 
 - - - a / src / xdocs / config _ sizes . xml 
 + + + b / src / xdocs / config _ sizes . xml 
 @ @ - 411 , 6 + 411 , 12 @ @ 
 < td > 7 < / td > 
 < / tr > 
 < tr > 
 + < td > ignoreOverriddenMethods < / td > 
 + < td > Ignore number of parameters for methods with @ Override annotation < / td > 
 + < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > 
 + < td > false < / td > 
 + < / tr > 
 + < tr > 
 < td > tokens < / td > 
 < td > declarations to check < / td > 
 
 @ @ - 448 , 6 + 454 , 28 @ @ 
 & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 + < p > 
 + To configure the check to ignore number of parameters for methods with @ Override or @ java . lang . Override annotation . 
 + < / p > 
 + < p > 
 + Rationale : developer may need to override method with many parameters from 3 - rd party library . 
 + In this case developer has no control over number of parameters . 
 + < / p > 
 + < source > 
 + & lt ; module name = " ParameterNumber " & gt ; 
 + & lt ; property name = " ignoreOverriddenMethods " value = " true " / & gt ; 
 + & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 + < p > 
 + Java code example 
 + < / p > 
 + < source > 
 + @ Override 
 + public void needsLotsOfParameters ( int a , int b , int c , int d , int e , int f , int g , int h ) { 
 + . . . 
 + } 
 + < / source > 
 < / subsection > 
 
 < subsection name = " Package " >
