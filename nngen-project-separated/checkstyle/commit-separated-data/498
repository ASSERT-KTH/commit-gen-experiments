BLEU SCORE: 0.04027248192421852

TEST MSG: Issue # 4284 : disallow junit . framework package in test code
GENERATED MSG: Run the checkstyle task in the correct phase .

TEST DIFF (one line): diff - - git a / config / ant - phase - verify . xml b / config / ant - phase - verify . xml <nl> index ff3fea0 . . b9a2331 100644 <nl> - - - a / config / ant - phase - verify . xml <nl> + + + b / config / ant - phase - verify . xml <nl> @ @ - 35 , 6 + 35 , 7 @ @ <nl> < property key = " checkstyle . header . file " file = " config / java . header " / > <nl> < property key = " checkstyle . regexp . header . file " file = " config / java _ regexp . header " / > <nl> < property key = " checkstyle . importcontrol . file " file = " config / import - control . xml " / > <nl> + < property key = " checkstyle . importcontroltest . file " file = " config / import - control - test . xml " / > <nl> < property key = " checkstyle . suppressions . file " <nl> file = " config / suppressions . xml " / > <nl> < / checkstyle > <nl> diff - - git a / config / build . xml b / config / build . xml <nl> index 18db86a . . 5c25075 100644 <nl> - - - a / config / build . xml <nl> + + + b / config / build . xml <nl> @ @ - 37 , 6 + 37 , 7 @ @ <nl> < property key = " checkstyle . header . file " file = " config / java . header " / > <nl> < property key = " checkstyle . regexp . header . file " file = " config / java _ regexp . header " / > <nl> < property key = " checkstyle . importcontrol . file " file = " config / import - control . xml " / > <nl> + < property key = " checkstyle . importcontroltest . file " file = " config / import - control - test . xml " / > <nl> < property key = " checkstyle . suppressions . file " <nl> file = " config / suppressions . xml " / > <nl> < / checkstyle > <nl> diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 5bf837f . . c94e8f5 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 329 , 9 + 329 , 15 @ @ <nl> < / module > <nl> < module name = " IllegalImport " / > <nl> < module name = " ImportControl " > <nl> + < property name = " id " value = " ImportControlMain " / > <nl> < property name = " file " value = " $ { checkstyle . importcontrol . file } " / > <nl> < property name = " path " value = " ^ . * [ \ \ / ] src [ \ \ / ] main [ \ \ / ] . * $ " / > <nl> < / module > <nl> + < module name = " ImportControl " > <nl> + < property name = " id " value = " ImportControlTest " / > <nl> + < property name = " file " value = " $ { checkstyle . importcontroltest . file } " / > <nl> + < property name = " path " value = " ^ . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] . * $ " / > <nl> + < / module > <nl> < module name = " ImportOrder " > <nl> < property name = " groups " value = " / ^ java \ . / , javax , org " / > <nl> < property name = " ordered " value = " true " / > <nl> diff - - git a / config / import - control - test . xml b / config / import - control - test . xml <nl> new file mode 100644 <nl> index 0000000 . . 7417c97 <nl> - - - / dev / null <nl> + + + b / config / import - control - test . xml <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + < ! DOCTYPE import - control PUBLIC <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " <nl> + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > <nl> + <nl> + < import - control pkg = " com . puppycrawl . tools . checkstyle " > <nl> + <nl> + < allow pkg = " . * " regex = " true " / > <nl> + <nl> + < disallow pkg = " junit . framework " / > <nl> + <nl> + < / import - control > <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 226c56c . . 1273406 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 28 , 7 + 28 , 6 @ @ <nl> < suppress checks = " NPathComplexity " files = " [ \ \ / ] XdocsPagesTest \ . java " / > <nl> < suppress checks = " IllegalCatch " files = " [ \ \ / ] internal [ \ \ / ] . * [ \ \ / ] \ w + Util \ . java " / > <nl> < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> - < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " MagicNumber " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " AvoidStaticImport " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / ConfigurationUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / ConfigurationUtil . java <nl> index 70d93ea . . 948a551 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / ConfigurationUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / ConfigurationUtil . java <nl> @ @ - 41 , 6 + 41 , 7 @ @ public final class ConfigurationUtil { <nl> props . setProperty ( " checkstyle . header . file " , " file " ) ; <nl> props . setProperty ( " checkstyle . regexp . header . file " , " file " ) ; <nl> props . setProperty ( " checkstyle . importcontrol . file " , " file " ) ; <nl> + props . setProperty ( " checkstyle . importcontroltest . file " , " file " ) ; <nl> <nl> return loadConfiguration ( path , props ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> index d121fce . . 272667f 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> @ @ - 23 , 6 + 23 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . FullIdent ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . checks . AbstractOptionCheck ; <nl> + import java . util . regex . Matcher ; <nl> + import java . util . regex . Pattern ; <nl> <nl> / * * <nl> * < ul > <nl> @ @ - 53 , 6 + 55 , 14 @ @ import com . puppycrawl . tools . checkstyle . checks . AbstractOptionCheck ; <nl> * < / pre > <nl> * <nl> * < p > <nl> + * Group descriptions enclosed in slashes are interpreted as regular <nl> + * expressions . If multiple groups match , the one matching a longer <nl> + * substring of the imported name will take precedence , with ties <nl> + * broken first in favor of earlier matches and finally in favor of <nl> + * the first matching group . <nl> + * < / p > <nl> + * <nl> + * < p > <nl> * There is always a wildcard group to which everything not in a named group <nl> * belongs . If an import does not match a named group , the group belongs to <nl> * this wildcard group . The wildcard group position can be specified using the <nl> @ @ - 87 , 9 + 97 , 7 @ @ public class ImportOrderCheck <nl> private static final String WILDCARD _ GROUP _ NAME = " * " ; <nl> <nl> / * * List of import groups specified by the user . * / <nl> - private String [ ] mGroups = new String [ 0 ] ; <nl> - / * * The position of the " everything else " group . * / <nl> - private int mWildcardGroupIndex ; <nl> + private Pattern [ ] mGroups = new Pattern [ 0 ] ; <nl> / * * Require imports in group be separated . * / <nl> private boolean mSeparated ; <nl> / * * Require imports in group . * / <nl> @ @ - 120 , 29 + 128 , 36 @ @ public class ImportOrderCheck <nl> * Sets the list of package groups and the order they should occur in the <nl> * file . <nl> * <nl> - * @ param aGroups <nl> - * a comma - separated list of package names / prefixes . <nl> + * @ param aGroups a comma - separated list of package names / prefixes . <nl> * / <nl> public void setGroups ( String [ ] aGroups ) <nl> { <nl> - / / set the default wildcard group to be after the last named group . <nl> - mWildcardGroupIndex = aGroups . length ; <nl> - <nl> - mGroups = new String [ aGroups . length ] ; <nl> + mGroups = new Pattern [ aGroups . length ] ; <nl> <nl> for ( int i = 0 ; i < aGroups . length ; i + + ) { <nl> String pkg = aGroups [ i ] ; <nl> + Pattern grp ; <nl> <nl> - / / if the pkg name is the wildcard , record the <nl> - / / position for later reference <nl> + / / if the pkg name is the wildcard , make it match zero chars <nl> + / / from any name , so it will always be used as last resort . <nl> if ( WILDCARD _ GROUP _ NAME . equals ( pkg ) ) { <nl> - mWildcardGroupIndex = i ; <nl> + grp = Pattern . compile ( " " ) ; / / matches any package <nl> + } <nl> + else if ( pkg . startsWith ( " / " ) ) { <nl> + if ( ! pkg . endsWith ( " / " ) ) { <nl> + throw new IllegalArgumentException ( " Invalid group " ) ; <nl> + } <nl> + pkg = pkg . substring ( 1 , pkg . length ( ) - 1 ) ; <nl> + grp = Pattern . compile ( pkg ) ; <nl> } <nl> - else if ( ! pkg . endsWith ( " . " ) ) { <nl> - pkg = pkg + " . " ; <nl> + else { <nl> + if ( ! pkg . endsWith ( " . " ) ) { <nl> + pkg = pkg + " . " ; <nl> + } <nl> + grp = Pattern . compile ( " ^ " + Pattern . quote ( pkg ) ) ; <nl> } <nl> <nl> - mGroups [ i ] = pkg ; <nl> + mGroups [ i ] = grp ; <nl> } <nl> } <nl> <nl> @ @ - 342 , 16 + 357 , 27 @ @ public class ImportOrderCheck <nl> * / <nl> private int getGroupNumber ( String aName ) <nl> { <nl> + int bestIndex = mGroups . length ; <nl> + int bestLength = - 1 ; <nl> + int bestPos = 0 ; <nl> + <nl> / / find out what group this belongs in <nl> / / loop over mGroups and get index <nl> for ( int i = 0 ; i < mGroups . length ; i + + ) { <nl> - if ( aName . startsWith ( mGroups [ i ] ) ) { <nl> - return i ; <nl> + final Matcher matcher = mGroups [ i ] . matcher ( aName ) ; <nl> + while ( matcher . find ( ) ) { <nl> + final int length = matcher . end ( ) - matcher . start ( ) ; <nl> + if ( ( length > bestLength ) <nl> + | | ( ( length = = bestLength ) & & ( matcher . start ( ) < bestPos ) ) ) <nl> + { <nl> + bestIndex = i ; <nl> + bestLength = length ; <nl> + bestPos = matcher . start ( ) ; <nl> + } <nl> } <nl> } <nl> <nl> - / / no match , so we return the wildcard group <nl> - return mWildcardGroupIndex ; <nl> + return bestIndex ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> index 127efa2 . . 74943f5 100644 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> @ @ - 37 , 6 + 37 , 19 @ @ public class ImportOrderCheckTest extends BaseCheckTestSupport <nl> } <nl> <nl> @ Test <nl> + public void testGroupsRegexp ( ) throws Exception <nl> + { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( ImportOrderCheck . class ) ; <nl> + checkConfig . addAttribute ( " groups " , " java , / ^ javax ? \ \ . ( awt | swing ) \ \ . / " ) ; <nl> + checkConfig . addAttribute ( " ordered " , " false " ) ; <nl> + final String [ ] expected = { <nl> + " 9 : Wrong order for ' java . io . File ' import . " , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " imports " + File . separator + " InputImportOrder . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testSeparated ( ) throws Exception <nl> { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( ImportOrderCheck . class ) ; <nl> diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml <nl> index 6c4470f . . 84f8179 100755 <nl> - - - a / src / xdocs / config _ imports . xml <nl> + + + b / src / xdocs / config _ imports . xml <nl> @ @ - 358 , 8 + 358 , 10 @ @ class FooBar { <nl> < tr > <nl> < td > groups < / td > <nl> < td > <nl> - list of imports groups ( every group identified by string it ' s <nl> - started ) <nl> + list of imports groups ( every group identified either by a <nl> + common prefix string , or by a regular expression enclosed <nl> + in forward slashes ( e . g . < span <nl> + class = " code " > / regexp / < / span > ) <nl> < / td > <nl> < td > < a href = " property _ types . html # stringSet " > list of strings < / a > < / td > <nl> < td > < span class = " default " > empty list < / span > < / td > <nl> @ @ - 392 , 16 + 394 , 16 @ @ class FooBar { <nl> < p > <nl> To configure the check so that it requires that : <nl> < ul > <nl> - < li > & quot ; java & quot ; packages first , then & quot ; javax & quot ; and then all other imports < / li > <nl> + < li > & quot ; java & quot ; and & quot ; javax & quot ; packages together first , then & quot ; org & quot ; and then all other imports < / li > <nl> < li > imports will be sorted in the groups < / li > <nl> - < li > groups are separated by , at least , on blank line < / li > <nl> + < li > groups are separated by , at least , one blank line < / li > <nl> < li > static imports are above each local groups < / li > <nl> < / ul > <nl> < / p > <nl> <nl> < source > <nl> & lt ; module name = & quot ; ImportOrder & quot ; > <nl> - & lt ; property name = & quot ; groups & quot ; value = & quot ; java , javax & quot ; / > <nl> + & lt ; property name = & quot ; groups & quot ; value = & quot ; / ^ javax ? \ . / , org & quot ; / > <nl> & lt ; property name = & quot ; ordered & quot ; value = & quot ; true & quot ; / > <nl> & lt ; property name = & quot ; separated & quot ; value = & quot ; true & quot ; / > <nl> & lt ; property name = & quot ; option & quot ; value = & quot ; above & quot ; / > <nl> diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index 53cb157 . . 85fc566 100755 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 29 , 6 + 29 , 11 @ @ <nl> bottom of the class after all method and field declarations . <nl> Thanks to Ruslan Dyachenko for patch # 3027391 . <nl> < / li > <nl> + < li > <nl> + Enhanced < a href = " config _ imports . html # ImportOrder " > ImportOrder < / a > <nl> + to support using regular expressions for defining groups . <nl> + Thanks to Martin von Gagern for patch # 2782118 . <nl> + < / li > <nl> < / ul > <nl> < p > Bug fixes : < / p > <nl> < ul >

TEST DIFF:
diff - - git a / config / ant - phase - verify . xml b / config / ant - phase - verify . xml 
 index ff3fea0 . . b9a2331 100644 
 - - - a / config / ant - phase - verify . xml 
 + + + b / config / ant - phase - verify . xml 
 @ @ - 35 , 6 + 35 , 7 @ @ 
 < property key = " checkstyle . header . file " file = " config / java . header " / > 
 < property key = " checkstyle . regexp . header . file " file = " config / java _ regexp . header " / > 
 < property key = " checkstyle . importcontrol . file " file = " config / import - control . xml " / > 
 + < property key = " checkstyle . importcontroltest . file " file = " config / import - control - test . xml " / > 
 < property key = " checkstyle . suppressions . file " 
 file = " config / suppressions . xml " / > 
 < / checkstyle > 
 diff - - git a / config / build . xml b / config / build . xml 
 index 18db86a . . 5c25075 100644 
 - - - a / config / build . xml 
 + + + b / config / build . xml 
 @ @ - 37 , 6 + 37 , 7 @ @ 
 < property key = " checkstyle . header . file " file = " config / java . header " / > 
 < property key = " checkstyle . regexp . header . file " file = " config / java _ regexp . header " / > 
 < property key = " checkstyle . importcontrol . file " file = " config / import - control . xml " / > 
 + < property key = " checkstyle . importcontroltest . file " file = " config / import - control - test . xml " / > 
 < property key = " checkstyle . suppressions . file " 
 file = " config / suppressions . xml " / > 
 < / checkstyle > 
 diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 5bf837f . . c94e8f5 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 329 , 9 + 329 , 15 @ @ 
 < / module > 
 < module name = " IllegalImport " / > 
 < module name = " ImportControl " > 
 + < property name = " id " value = " ImportControlMain " / > 
 < property name = " file " value = " $ { checkstyle . importcontrol . file } " / > 
 < property name = " path " value = " ^ . * [ \ \ / ] src [ \ \ / ] main [ \ \ / ] . * $ " / > 
 < / module > 
 + < module name = " ImportControl " > 
 + < property name = " id " value = " ImportControlTest " / > 
 + < property name = " file " value = " $ { checkstyle . importcontroltest . file } " / > 
 + < property name = " path " value = " ^ . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] . * $ " / > 
 + < / module > 
 < module name = " ImportOrder " > 
 < property name = " groups " value = " / ^ java \ . / , javax , org " / > 
 < property name = " ordered " value = " true " / > 
 diff - - git a / config / import - control - test . xml b / config / import - control - test . xml 
 new file mode 100644 
 index 0000000 . . 7417c97 
 - - - / dev / null 
 + + + b / config / import - control - test . xml 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + < ! DOCTYPE import - control PUBLIC 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " 
 + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > 
 + 
 + < import - control pkg = " com . puppycrawl . tools . checkstyle " > 
 + 
 + < allow pkg = " . * " regex = " true " / > 
 + 
 + < disallow pkg = " junit . framework " / > 
 + 
 + < / import - control > 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 226c56c . . 1273406 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 28 , 7 + 28 , 6 @ @ 
 < suppress checks = " NPathComplexity " files = " [ \ \ / ] XdocsPagesTest \ . java " / > 
 < suppress checks = " IllegalCatch " files = " [ \ \ / ] internal [ \ \ / ] . * [ \ \ / ] \ w + Util \ . java " / > 
 < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 - < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " MagicNumber " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " AvoidStaticImport " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / ConfigurationUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / ConfigurationUtil . java 
 index 70d93ea . . 948a551 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / ConfigurationUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / ConfigurationUtil . java 
 @ @ - 41 , 6 + 41 , 7 @ @ public final class ConfigurationUtil { 
 props . setProperty ( " checkstyle . header . file " , " file " ) ; 
 props . setProperty ( " checkstyle . regexp . header . file " , " file " ) ; 
 props . setProperty ( " checkstyle . importcontrol . file " , " file " ) ; 
 + props . setProperty ( " checkstyle . importcontroltest . file " , " file " ) ; 
 
 return loadConfiguration ( path , props ) ; 
 }

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 index d121fce . . 272667f 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 @ @ - 23 , 6 + 23 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . FullIdent ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . checks . AbstractOptionCheck ; 
 + import java . util . regex . Matcher ; 
 + import java . util . regex . Pattern ; 
 
 / * * 
 * < ul > 
 @ @ - 53 , 6 + 55 , 14 @ @ import com . puppycrawl . tools . checkstyle . checks . AbstractOptionCheck ; 
 * < / pre > 
 * 
 * < p > 
 + * Group descriptions enclosed in slashes are interpreted as regular 
 + * expressions . If multiple groups match , the one matching a longer 
 + * substring of the imported name will take precedence , with ties 
 + * broken first in favor of earlier matches and finally in favor of 
 + * the first matching group . 
 + * < / p > 
 + * 
 + * < p > 
 * There is always a wildcard group to which everything not in a named group 
 * belongs . If an import does not match a named group , the group belongs to 
 * this wildcard group . The wildcard group position can be specified using the 
 @ @ - 87 , 9 + 97 , 7 @ @ public class ImportOrderCheck 
 private static final String WILDCARD _ GROUP _ NAME = " * " ; 
 
 / * * List of import groups specified by the user . * / 
 - private String [ ] mGroups = new String [ 0 ] ; 
 - / * * The position of the " everything else " group . * / 
 - private int mWildcardGroupIndex ; 
 + private Pattern [ ] mGroups = new Pattern [ 0 ] ; 
 / * * Require imports in group be separated . * / 
 private boolean mSeparated ; 
 / * * Require imports in group . * / 
 @ @ - 120 , 29 + 128 , 36 @ @ public class ImportOrderCheck 
 * Sets the list of package groups and the order they should occur in the 
 * file . 
 * 
 - * @ param aGroups 
 - * a comma - separated list of package names / prefixes . 
 + * @ param aGroups a comma - separated list of package names / prefixes . 
 * / 
 public void setGroups ( String [ ] aGroups ) 
 { 
 - / / set the default wildcard group to be after the last named group . 
 - mWildcardGroupIndex = aGroups . length ; 
 - 
 - mGroups = new String [ aGroups . length ] ; 
 + mGroups = new Pattern [ aGroups . length ] ; 
 
 for ( int i = 0 ; i < aGroups . length ; i + + ) { 
 String pkg = aGroups [ i ] ; 
 + Pattern grp ; 
 
 - / / if the pkg name is the wildcard , record the 
 - / / position for later reference 
 + / / if the pkg name is the wildcard , make it match zero chars 
 + / / from any name , so it will always be used as last resort . 
 if ( WILDCARD _ GROUP _ NAME . equals ( pkg ) ) { 
 - mWildcardGroupIndex = i ; 
 + grp = Pattern . compile ( " " ) ; / / matches any package 
 + } 
 + else if ( pkg . startsWith ( " / " ) ) { 
 + if ( ! pkg . endsWith ( " / " ) ) { 
 + throw new IllegalArgumentException ( " Invalid group " ) ; 
 + } 
 + pkg = pkg . substring ( 1 , pkg . length ( ) - 1 ) ; 
 + grp = Pattern . compile ( pkg ) ; 
 } 
 - else if ( ! pkg . endsWith ( " . " ) ) { 
 - pkg = pkg + " . " ; 
 + else { 
 + if ( ! pkg . endsWith ( " . " ) ) { 
 + pkg = pkg + " . " ; 
 + } 
 + grp = Pattern . compile ( " ^ " + Pattern . quote ( pkg ) ) ; 
 } 
 
 - mGroups [ i ] = pkg ; 
 + mGroups [ i ] = grp ; 
 } 
 } 
 
 @ @ - 342 , 16 + 357 , 27 @ @ public class ImportOrderCheck 
 * / 
 private int getGroupNumber ( String aName ) 
 { 
 + int bestIndex = mGroups . length ; 
 + int bestLength = - 1 ; 
 + int bestPos = 0 ; 
 + 
 / / find out what group this belongs in 
 / / loop over mGroups and get index 
 for ( int i = 0 ; i < mGroups . length ; i + + ) { 
 - if ( aName . startsWith ( mGroups [ i ] ) ) { 
 - return i ; 
 + final Matcher matcher = mGroups [ i ] . matcher ( aName ) ; 
 + while ( matcher . find ( ) ) { 
 + final int length = matcher . end ( ) - matcher . start ( ) ; 
 + if ( ( length > bestLength ) 
 + | | ( ( length = = bestLength ) & & ( matcher . start ( ) < bestPos ) ) ) 
 + { 
 + bestIndex = i ; 
 + bestLength = length ; 
 + bestPos = matcher . start ( ) ; 
 + } 
 } 
 } 
 
 - / / no match , so we return the wildcard group 
 - return mWildcardGroupIndex ; 
 + return bestIndex ; 
 } 
 
 / * * 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 index 127efa2 . . 74943f5 100644 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 @ @ - 37 , 6 + 37 , 19 @ @ public class ImportOrderCheckTest extends BaseCheckTestSupport 
 } 
 
 @ Test 
 + public void testGroupsRegexp ( ) throws Exception 
 + { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( ImportOrderCheck . class ) ; 
 + checkConfig . addAttribute ( " groups " , " java , / ^ javax ? \ \ . ( awt | swing ) \ \ . / " ) ; 
 + checkConfig . addAttribute ( " ordered " , " false " ) ; 
 + final String [ ] expected = { 
 + " 9 : Wrong order for ' java . io . File ' import . " , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " imports " + File . separator + " InputImportOrder . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testSeparated ( ) throws Exception 
 { 
 final DefaultConfiguration checkConfig = createCheckConfig ( ImportOrderCheck . class ) ; 
 diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml 
 index 6c4470f . . 84f8179 100755 
 - - - a / src / xdocs / config _ imports . xml 
 + + + b / src / xdocs / config _ imports . xml 
 @ @ - 358 , 8 + 358 , 10 @ @ class FooBar { 
 < tr > 
 < td > groups < / td > 
 < td > 
 - list of imports groups ( every group identified by string it ' s 
 - started ) 
 + list of imports groups ( every group identified either by a 
 + common prefix string , or by a regular expression enclosed 
 + in forward slashes ( e . g . < span 
 + class = " code " > / regexp / < / span > ) 
 < / td > 
 < td > < a href = " property _ types . html # stringSet " > list of strings < / a > < / td > 
 < td > < span class = " default " > empty list < / span > < / td > 
 @ @ - 392 , 16 + 394 , 16 @ @ class FooBar { 
 < p > 
 To configure the check so that it requires that : 
 < ul > 
 - < li > & quot ; java & quot ; packages first , then & quot ; javax & quot ; and then all other imports < / li > 
 + < li > & quot ; java & quot ; and & quot ; javax & quot ; packages together first , then & quot ; org & quot ; and then all other imports < / li > 
 < li > imports will be sorted in the groups < / li > 
 - < li > groups are separated by , at least , on blank line < / li > 
 + < li > groups are separated by , at least , one blank line < / li > 
 < li > static imports are above each local groups < / li > 
 < / ul > 
 < / p > 
 
 < source > 
 & lt ; module name = & quot ; ImportOrder & quot ; > 
 - & lt ; property name = & quot ; groups & quot ; value = & quot ; java , javax & quot ; / > 
 + & lt ; property name = & quot ; groups & quot ; value = & quot ; / ^ javax ? \ . / , org & quot ; / > 
 & lt ; property name = & quot ; ordered & quot ; value = & quot ; true & quot ; / > 
 & lt ; property name = & quot ; separated & quot ; value = & quot ; true & quot ; / > 
 & lt ; property name = & quot ; option & quot ; value = & quot ; above & quot ; / > 
 diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index 53cb157 . . 85fc566 100755 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 29 , 6 + 29 , 11 @ @ 
 bottom of the class after all method and field declarations . 
 Thanks to Ruslan Dyachenko for patch # 3027391 . 
 < / li > 
 + < li > 
 + Enhanced < a href = " config _ imports . html # ImportOrder " > ImportOrder < / a > 
 + to support using regular expressions for defining groups . 
 + Thanks to Martin von Gagern for patch # 2782118 . 
 + < / li > 
 < / ul > 
 < p > Bug fixes : < / p > 
 < ul >
