BLEU SCORE: 0.021476912089159066

TEST MSG: Issue # 5489 : Fixed indentation in config _ filters . xml & config _ headers . xml
GENERATED MSG: version 3 . 0 documentation

TEST DIFF (one line): diff - - git a / . ci / shippable . sh b / . ci / shippable . sh <nl> new file mode 100755 <nl> index 0000000 . . b1fa40e <nl> - - - / dev / null <nl> + + + b / . ci / shippable . sh <nl> @ @ - 0 , 0 + 1 , 136 @ @ <nl> + # ! / bin / bash <nl> + # Attention , there is no " - x " to avoid problems on Wercker <nl> + set - e <nl> + <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + function checkPitestReport ( ) { <nl> + ignored = ( " $ @ " ) <nl> + fail = 0 <nl> + SEARCH _ REGEXP = " ( span class = ' survived ' | class = ' uncovered ' > < pre > ) " <nl> + actual = ( $ ( grep - irE " $ SEARCH _ REGEXP " target / pit - reports | sed - E ' s / . * \ / ( [ A - Za - z ] + . java . html ) / \ 1 / ' | sort ) ) <nl> + A = $ { actual [ @ ] } ; <nl> + B = $ { ignored [ @ ] } ; <nl> + if [ " $ ( diff - q - u - w < ( echo " $ A " ) < ( echo " $ B " ) ) " ! = " " ] ; then <nl> + fail = 1 <nl> + echo " Diff : " <nl> + diff - u - w < ( echo " $ A " ) < ( echo " $ B " ) | cat <nl> + echo " Actual : " ; <nl> + grep - irE " $ SEARCH _ REGEXP " target / pit - reports | sed - E ' s / . * \ / ( [ A - Za - z ] + . java . html ) / \ 1 / ' | sort <nl> + echo " Ignore : " ; <nl> + printf ' % s \ n ' " $ { ignored [ @ ] } " <nl> + fi ; <nl> + if [ " $ fail " - ne " 0 " ] ; then <nl> + echo " Survived items found in reports , build will be failed " <nl> + fi <nl> + sleep 5s <nl> + exit $ fail <nl> + } <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + case $ 1 in <nl> + <nl> + pitest - checkstyle - xpath | pitest - checkstyle - filters | pitest - checks - imports \ <nl> + | pitest - checks - metrics | pitest - checks - regexp | pitest - checks - sizes | pitest - checks - misc \ <nl> + | pitest - checks - design | pitest - checks - annotation | pitest - checks - header \ <nl> + | pitest - checks - modifier | pitest - checks - naming | pitest - checkstyle - tree - walker | pitest - checkstyle - main \ <nl> + | pitest - checks - whitespace ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + # Format of ignored items : < report _ name > : < survived line > <nl> + declare - a ignoredItems = ( ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - checks - blocks ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + # Format of ignored items : < report _ name > : < survived line > <nl> + declare - a ignoredItems = ( <nl> + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; annotation . getNextSibling ( ) . getType ( ) = = TokenTypes . ANNOTATION ) { < / span > < / pre > < / td > < / tr > " <nl> + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; previousAnnotation . getPreviousSibling ( ) . getLineNo ( ) < / span > < / pre > < / td > < / tr > " <nl> + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( tokenAfterLast . getLineNo ( ) & # 62 ; lastAnnotation . getLineNo ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return previousAnnotation ; < / span > < / pre > < / td > < / tr > " <nl> + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > while ( previousAnnotation . getPreviousSibling ( ) ! = null < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - checks - coding ) <nl> + # POST _ ACTION = check _ survived _ coding <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + # Format of ignored items : < report _ name > : < survived line > <nl> + declare - a ignoredItems = ( <nl> + " EqualsAvoidNullCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; field . getColumnNo ( ) + minimumSymbolsBetween & # 60 ; = objCalledOn . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " FallThroughCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > lineNo , matcher . end ( ) - 1 ) ; < / span > < / pre > < / td > < / tr > " <nl> + " HiddenFieldCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > processVariable ( ast ) ; < / span > < / pre > < / td > < / tr > " <nl> + " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > classNames . clear ( ) ; < / span > < / pre > < / td > < / tr > " <nl> + " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > imports . clear ( ) ; < / span > < / pre > < / td > < / tr > " <nl> + " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > instantiations . clear ( ) ; < / span > < / pre > < / td > < / tr > " <nl> + " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > processClassDef ( ast ) ; < / span > < / pre > < / td > < / tr > " <nl> + " IllegalTypeCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > while ( toVisit ! = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; newNode . getColumnNo ( ) & # 62 ; currentNode . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( newNode . getLineNo ( ) & # 62 ; currentNode . getLineNo ( ) < / span > < / pre > < / td > < / tr > " <nl> + " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | newNode . getLineNo ( ) = = currentNode . getLineNo ( ) < / span > < / pre > < / td > < / tr > " <nl> + " RequireThisCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ast1 . getColumnNo ( ) & # 60 ; ast2 . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " RequireThisCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > current . clear ( ) ; < / span > < / pre > < / td > < / tr > " <nl> + " RequireThisCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > final boolean methodNameInMethodCall = parentType = = TokenTypes . DOT < / span > < / pre > < / td > < / tr > " <nl> + " RequireThisCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return FrameType . CATCH _ FRAME ; < / span > < / pre > < / td > < / tr > " <nl> + " UnnecessaryParenthesesCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( type ! = TokenTypes . ASSIGN < / span > < / pre > < / td > < / tr > " <nl> + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; currentNode . getType ( ) = = TokenTypes . LITERAL _ CATCH ) { < / span > < / pre > < / td > < / tr > " <nl> + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( currentNode . getType ( ) = = TokenTypes . LITERAL _ IF ) { < / span > < / pre > < / td > < / tr > " <nl> + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( elseBlock . getType ( ) = = TokenTypes . LITERAL _ ELSE ) { < / span > < / pre > < / td > < / tr > " <nl> + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! isVarInOperatorDeclaration & # 38 ; & # 38 ; operator . getType ( ) = = TokenTypes . LITERAL _ IF ) { < / span > < / pre > < / td > < / tr > " <nl> + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > while ( currentNode ! = null < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - checkstyle - common ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + # Format of ignored items : < report _ name > : < survived line > <nl> + declare - a ignoredItems = ( <nl> + " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > + & # 34 ; - & # 34 ; + ex . getMessage ( ) , ex ) ; < / span > < / pre > < / td > < / tr > " <nl> + " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > catch ( final CheckstyleException ex ) { < / span > < / pre > < / td > < / tr > " <nl> + " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > throw ex ; < / span > < / pre > < / td > < / tr > " <nl> + " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > throw new CheckstyleException ( & # 34 ; cannot initialize module & # 34 ; + name < / span > < / pre > < / td > < / tr > " <nl> + " DefaultConfiguration . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > attributeMap . put ( attributeName , current + & # 34 ; , & # 34 ; + value ) ; < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - checkstyle - api ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + # Format of ignored items : < report _ name > : < survived line > <nl> + declare - a ignoredItems = ( <nl> + " BeforeExecutionFileFilterSet . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > beforeExecutionFileFilters . remove ( filter ) ; < / span > < / pre > < / td > < / tr > " <nl> + " BeforeExecutionFileFilterSet . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > } < / span > < / pre > < / td > < / tr > " <nl> + " FileText . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > lineBreakPositions [ lineNo ] = fullText . length ( ) ; < / span > < / pre > < / td > < / tr > " <nl> + " FilterSet . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > filters . remove ( filter ) ; < / span > < / pre > < / td > < / tr > " <nl> + " FilterSet . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > } < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - checkstyle - utils ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + # Format of ignored items : < report _ name > : < survived line > <nl> + declare - a ignoredItems = ( <nl> + " JavadocUtils . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > continue ; < / span > < / pre > < / td > < / tr > " <nl> + " TokenUtils . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > continue ; < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - checkstyle - gui | pitest - checks - indentation | pitest - checks - javadoc ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + # too much supprssions , post validation is skipped <nl> + ; ; <nl> + <nl> + * ) <nl> + echo " Unexpected argument : $ 1 " <nl> + sleep 5s <nl> + false <nl> + ; ; <nl> + <nl> + esac <nl> + <nl> + <nl> + <nl> diff - - git a / pom . xml b / pom . xml <nl> index 48b76bf . . 56fef8e 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 2563 , 7 + 2563 , 7 @ @ <nl> < ! - - cause of https : / / github . com / checkstyle / checkstyle / issues / 3605 - - > <nl> < avoidCallsTo > com . puppycrawl . tools . checkstyle . XmlLoader $ FeaturesForVerySecureJavaInstallations < / avoidCallsTo > <nl> < / avoidCallsTo > <nl> - < coverageThreshold > 100 < / coverageThreshold > <nl> + < coverageThreshold > 99 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> @ @ - 2650 , 8 + 2650 , 8 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . gui . * < / param > <nl> < / targetTests > <nl> - < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 30 < / mutationThreshold > <nl> + < coverageThreshold > 40 < / coverageThreshold > <nl> + < mutationThreshold > 29 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> diff - - git a / shippable . yml b / shippable . yml <nl> index a66229b . . 4249ab1 100644 <nl> - - - a / shippable . yml <nl> + + + b / shippable . yml <nl> @ @ - 6 , 29 + 6 , 29 @ @ jdk : <nl> <nl> env : <nl> matrix : <nl> - - PROFILE = " - Ppitest - checkstyle - xpath " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checkstyle - filters " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - javadoc " <nl> - - PROFILE = " - Ppitest - checks - imports " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - metrics " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - regexp " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - sizes " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - whitespace " ; POST _ ACTION = check _ survived <nl> - - PROFILE = " - Ppitest - checks - misc " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - blocks " ; POST _ ACTION = check _ survived _ blocks <nl> - - PROFILE = " - Ppitest - checks - coding " ; POST _ ACTION = check _ survived _ coding <nl> - - PROFILE = " - Ppitest - checks - design " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - annotation " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - header " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - modifier " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - naming " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - indentation " <nl> - - PROFILE = " - Ppitest - checkstyle - tree - walker " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checkstyle - common " ; POST _ ACTION = check _ survived <nl> - - PROFILE = " - Ppitest - checkstyle - main " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checkstyle - api " ; POST _ ACTION = check _ survived <nl> - - PROFILE = " - Ppitest - checkstyle - utils " ; POST _ ACTION = check _ survived <nl> - - PROFILE = " - Ppitest - checkstyle - gui " <nl> + - PROFILE = " pitest - checkstyle - xpath " <nl> + - PROFILE = " pitest - checkstyle - filters " <nl> + - PROFILE = " pitest - checks - javadoc " <nl> + - PROFILE = " pitest - checks - imports " <nl> + - PROFILE = " pitest - checks - metrics " <nl> + - PROFILE = " pitest - checks - regexp " <nl> + - PROFILE = " pitest - checks - sizes " <nl> + - PROFILE = " pitest - checks - whitespace " <nl> + - PROFILE = " pitest - checks - misc " <nl> + - PROFILE = " pitest - checks - blocks " <nl> + - PROFILE = " pitest - checks - coding " <nl> + - PROFILE = " pitest - checks - design " <nl> + - PROFILE = " pitest - checks - annotation " <nl> + - PROFILE = " pitest - checks - header " <nl> + - PROFILE = " pitest - checks - modifier " <nl> + - PROFILE = " pitest - checks - naming " <nl> + - PROFILE = " pitest - checks - indentation " <nl> + - PROFILE = " pitest - checkstyle - tree - walker " <nl> + - PROFILE = " pitest - checkstyle - common " <nl> + - PROFILE = " pitest - checkstyle - main " <nl> + - PROFILE = " pitest - checkstyle - api " <nl> + - PROFILE = " pitest - checkstyle - utils " <nl> + - PROFILE = " pitest - checkstyle - gui " <nl> <nl> branches : <nl> only : <nl> @ @ - 46 , 45 + 46 , 9 @ @ build : <nl> SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | wercker . yml | wercker . sh | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " <nl> SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) <nl> echo " SKIP _ CI = " $ SKIP _ CI <nl> - echo " POST _ ACTION = " $ POST _ ACTION <nl> if [ [ $ SKIP _ CI = = ' false ' ] ] ; <nl> then <nl> - mvn - e $ PROFILE clean test org . pitest : pitest - maven : mutationCoverage ; <nl> - <nl> - if [ [ $ POST _ ACTION = = ' check _ survived _ uncovered ' \ <nl> - & & ( $ ( grep - RE " class = ' survived ' " target / | cat | wc - l ) > 0 \ <nl> - | | $ ( grep - RE " class = ' uncovered ' " target / | cat | wc - l ) > 0 ) ] ] ; then <nl> - echo " Survived items : " $ ( grep - RE " class = ' survived ' " target / | cat ) <nl> - echo " Uncovered items : " $ ( grep - RE " class = ' uncovered ' " target / | cat ) <nl> - echo " Survived / Uncovered items found in reports , build will be failed " <nl> - exit 1 <nl> - fi <nl> - if [ [ $ POST _ ACTION = = ' check _ survived ' & & $ ( grep - RE " class = ' survived ' " target / | cat | wc - l ) > 0 ] ] ; then <nl> - echo " Survived items : " $ ( grep - RE " class = ' survived ' " target / | cat ) <nl> - echo " Survived items found in reports , build will be failed " <nl> - exit 1 <nl> - fi <nl> - if [ [ $ POST _ ACTION = = ' check _ survived _ blocks ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " LeftCurlyCheck . * " target / | cat | wc - l ) > 0 ] ] ; then <nl> - echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " LeftCurlyCheck . * " target / | cat ) <nl> - echo " Survived items found in reports , build will be failed " <nl> - exit 1 <nl> - fi <nl> - if [ [ $ POST _ ACTION = = ' check _ survived _ coding ' <nl> - & & $ ( grep - RE " class = ' survived ' " - - exclude = " EqualsAvoidNullCheck . * " \ <nl> - - - exclude = " FallThroughCheck . * " - - exclude = " HiddenFieldCheck . * " - - exclude = " IllegalInstantiationCheck . * " \ <nl> - - - exclude = " IllegalTypeCheck . * " \ <nl> - - - exclude = " MultipleVariableDeclarationsCheck . * " \ <nl> - - - exclude = " RequireThisCheck . * " \ <nl> - - - exclude = " UnnecessaryParenthesesCheck . * " - - exclude = " VariableDeclarationUsageDistanceCheck . * " target / | cat | wc - l ) > 0 ] ] ; then <nl> - echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " EqualsAvoidNullCheck . * " \ <nl> - - - exclude = " FallThroughCheck . * " - - exclude = " HiddenFieldCheck . * " - - exclude = " IllegalInstantiationCheck . * " \ <nl> - - - exclude = " IllegalTypeCheck . * " \ <nl> - - - exclude = " MultipleVariableDeclarationsCheck . * " \ <nl> - - - exclude = " RequireThisCheck . * " \ <nl> - - - exclude = " UnnecessaryParenthesesCheck . * " - - exclude = " VariableDeclarationUsageDistanceCheck . * " target / | cat ) <nl> - echo " Survived items found in reports , build will be failed " <nl> - exit 1 <nl> - fi <nl> + . / . ci / shippable . sh $ PROFILE <nl> else <nl> echo " Build is skipped , changed files : " <nl> git diff - - name - only HEAD HEAD ~ 1
NEAREST DIFF (one line): diff - - git a / docs / config _ sizes . html b / docs / config _ sizes . html <nl> index b7c3a7b . . 085c837 100644 <nl> - - - a / docs / config _ sizes . html <nl> + + + b / docs / config _ sizes . html <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < ! DOCTYPE html <nl> + < ! DOCTYPE html <nl> PUBLIC " - / / W3C / / DTD XHTML 1 . 0 Strict / / EN " <nl> " DTD / xhtml1 - strict . dtd " > <nl> < html xmlns = " http : / / www . w3 . org / 1999 / xhtml " xml : lang = " en " lang = " en " > <nl> @ @ - 8 , 234 + 8 , 277 @ @ <nl> < link rel = " stylesheet " type = " text / css " href = " mystyle . css " / > <nl> < / head > <nl> <nl> - < body > <nl> - < ! - - The header - - > <nl> - < table border = " 0 " width = " 100 % " summary = " header layout " > <nl> - < tr > <nl> - < td > < h1 > Checks for Size Violations < / h1 > < / td > <nl> - < td align = " right " > < img src = " logo . png " alt = " Checkstyle Logo " / > < / td > <nl> - < / tr > <nl> - < / table > <nl> - < ! - - content - - > <nl> - < table border = " 0 " width = " 100 % " cellpadding = " 5 " summary = " body layout " > <nl> - < tr > <nl> - < ! - - Left menu - - > <nl> - < td class = " menu " valign = " top " > <nl> - < ul > <nl> - < li > <nl> - < a href = " # LineLengthCheck " > LineLengthCheck < / a > <nl> - < / li > <nl> - < li > <nl> - < a href = " # MethodLengthCheck " > MethodLengthCheck < / a > <nl> - < / li > <nl> - < li > <nl> - < a href = " # ParameterNumberCheck " > ParameterNumberCheck < / a > <nl> - < / li > <nl> - < / ul > <nl> - < / td > <nl> - < ! - - Content - - > <nl> - < td class = " content " valign = " top " align = " left " > < a name = " LineLengthCheck " > < / a > < h2 > LineLengthCheck < / h2 > <nl> - < h4 > Description < / h4 > <nl> - < p class = " body " > <nl> - Checks for long lines . <nl> - < / p > <nl> - < p class = " body " > <nl> - Rationale : Long lines are hard to read in printouts or if developers have <nl> - limited screen space for the source code , e . g . if the IDE displays additional <nl> - information like project tree , class hierarchy , etc . <nl> - < / p > <nl> - <nl> - < h4 > Properties < / h4 > <nl> - <nl> - < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > <nl> - < tr > <nl> - < th > name < / th > <nl> - < th > description < / th > <nl> - < th > type < / th > <nl> - < th > default value < / th > <nl> - < / tr > <nl> - < tr > <nl> - < td > ignorePattern < / td > <nl> - < td > pattern for lines to ignore < / td > <nl> - < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > <nl> - < td > ^ $ < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > max < / td > <nl> - < td > maximum allowable line length < / td > <nl> - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> - < td > 80 < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > tabWidth < / td > <nl> - < td > number of characters to expand a tab character < / td > <nl> - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> - < td > 8 < / td > <nl> - < / tr > <nl> - < / table > <nl> - <nl> - < h4 > Examples < / h4 > <nl> - < p class = " body " > <nl> - To configure the check to accept lines up to 120 characters long : <nl> - < / p > <nl> - < pre class = " body " > <nl> - & lt ; config name = " LineLengthCheck " & gt ; <nl> + < body > <nl> + < ! - - The header - - > <nl> + < table border = " 0 " width = " 100 % " summary = " header layout " > <nl> + < tr > <nl> + < td > < h1 > Checks for Size Violations < / h1 > < / td > <nl> + < td align = " right " > < img src = " logo . png " alt = " Checkstyle Logo " / > < / td > <nl> + < / tr > <nl> + < / table > <nl> + < ! - - content - - > <nl> + < table border = " 0 " width = " 100 % " cellpadding = " 5 " summary = " body layout " > <nl> + < tr > <nl> + < ! - - Left menu - - > <nl> + < td class = " menu " valign = " top " > <nl> + < ul > <nl> + < li > <nl> + < a href = " # FileLengthCheck " > FileLengthCheck < / a > <nl> + < / li > <nl> + < li > <nl> + < a href = " # LineLengthCheck " > LineLengthCheck < / a > <nl> + < / li > <nl> + < li > <nl> + < a href = " # MethodLengthCheck " > MethodLengthCheck < / a > <nl> + < / li > <nl> + < li > <nl> + < a href = " # ParameterNumberCheck " > ParameterNumberCheck < / a > <nl> + < / li > <nl> + < / ul > <nl> + < / td > <nl> + < ! - - Content - - > <nl> + < td class = " content " valign = " top " align = " left " > <nl> + <nl> + < a name = " FileLengthCheck " > < / a > < h2 > FileLengthCheck < / h2 > < h4 > Description < / h4 > <nl> + < p class = " body " > <nl> + Checks for long source files . <nl> + < / p > <nl> + < p class = " body " > <nl> + Rationale : If a source file becomes very long it is hard to understand . <nl> + Therefore long classes should usually be refactored into several individual <nl> + classes that focus on a specific task . <nl> + < / p > <nl> + <nl> + < h4 > Properties < / h4 > <nl> + <nl> + < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > <nl> + < tr > <nl> + < th > name < / th > <nl> + < th > description < / th > <nl> + < th > type < / th > <nl> + < th > default value < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > max < / td > <nl> + < td > maximum allowable number of lines < / td > <nl> + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> + < td > 2000 < / td > <nl> + < / tr > <nl> + < / table > <nl> + <nl> + < h4 > Examples < / h4 > <nl> + < p class = " body " > <nl> + To configure the check to accept files with up to 1500 lines : <nl> + < / p > <nl> + < pre class = " body " > <nl> + & lt ; config name = " FileLength " & gt ; <nl> + & lt ; property name = " max " value = " 1500 " / & gt ; <nl> + & lt ; / config & gt ; <nl> + < / pre > <nl> + <nl> + < h4 > Package < / h4 > <nl> + < p class = " body " > <nl> + com . puppycrawl . tools . checkstyle . checks <nl> + < / p > <nl> + < h4 > Parent Module < / h4 > <nl> + < p class = " body " > <nl> + < a href = " TreeWalker " > TreeWalker < / a > <nl> + < / p > <nl> + <nl> + < a name = " LineLengthCheck " > < / a > < h2 > LineLengthCheck < / h2 > < h4 > Description < / h4 > <nl> + < p class = " body " > <nl> + Checks for long lines . <nl> + < / p > <nl> + < p class = " body " > <nl> + Rationale : Long lines are hard to read in printouts or if developers have <nl> + limited screen space for the source code , e . g . if the IDE displays additional <nl> + information like project tree , class hierarchy , etc . <nl> + < / p > <nl> + <nl> + < h4 > Properties < / h4 > <nl> + <nl> + < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > <nl> + < tr > <nl> + < th > name < / th > <nl> + < th > description < / th > <nl> + < th > type < / th > <nl> + < th > default value < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > ignorePattern < / td > <nl> + < td > pattern for lines to ignore < / td > <nl> + < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > <nl> + < td > ^ $ < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > max < / td > <nl> + < td > maximum allowable line length < / td > <nl> + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> + < td > 80 < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > tabWidth < / td > <nl> + < td > number of characters to expand a tab character < / td > <nl> + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> + < td > 8 < / td > <nl> + < / tr > <nl> + < / table > <nl> + <nl> + < h4 > Examples < / h4 > <nl> + < p class = " body " > <nl> + To configure the check to accept lines up to 120 characters long : <nl> + < / p > <nl> + < pre class = " body " > <nl> + & lt ; config name = " LineLength " & gt ; <nl> & lt ; property name = " max " value = " 120 " / & gt ; <nl> & lt ; / config & gt ; <nl> < / pre > <nl> - < p class = " body " > <nl> - To configure the check to ignore lines that begin with & quot ; * & quot ; , followed <nl> - by just one word , such as within a Javadoc comment : <nl> - < / p > <nl> - < pre class = " body " > <nl> - & lt ; config name = " LineLengthCheck " & gt ; <nl> + < p class = " body " > <nl> + To configure the check to ignore lines that begin with & quot ; * & quot ; , followed <nl> + by just one word , such as within a Javadoc comment : <nl> + < / p > <nl> + < pre class = " body " > <nl> + & lt ; config name = " LineLength " & gt ; <nl> & lt ; property name = " ignorePattern " value = " ^ * \ * * [ ^ ] + $ " / & gt ; <nl> & lt ; / config & gt ; <nl> < / pre > <nl> <nl> - < h4 > Notes < / h4 > <nl> - < p class = " body " > <nl> - Support for the special handling of imports in CheckStyle Version 2 has been <nl> - dropped as it is a special case of regexp : The user can set the ignorePattern to <nl> - " ^ import " and achieve the same effect . <nl> - < / p > <nl> - <nl> - < h4 > Package < / h4 > <nl> - < p class = " body " > <nl> - com . puppycrawl . tools . checkstyle . checks <nl> - < / p > <nl> - < h4 > Parent Module < / h4 > <nl> - < p class = " body " > <nl> - < a href = " TreeWalker " > TreeWalker < / a > <nl> - < / p > <nl> - <nl> - < a name = " MethodLengthCheck " > < / a > < h2 > MethodLengthCheck < / h2 > < h4 > Description < / h4 > <nl> - < p class = " body " > <nl> - Checks for long methods and constructors . <nl> - < / p > <nl> - < p class = " body " > <nl> - Rationale : If a method becomes very long it is hard to understand . Therefore <nl> - long methods should usually be refactored into several individual methods that <nl> - focus on a specific task . <nl> - < / p > <nl> - <nl> - < h4 > Properties < / h4 > <nl> - <nl> - < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > <nl> - < tr > <nl> - < th > name < / th > <nl> - < th > description < / th > <nl> - < th > type < / th > <nl> - < th > default value < / th > <nl> - < / tr > <nl> - < tr > <nl> - < td > ignorePattern < / td > <nl> - < td > pattern for lines to ignore < / td > <nl> - < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > <nl> - < td > ^ $ < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > max < / td > <nl> - < td > maximum allowable number of lines < / td > <nl> - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> - < td > 150 < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > tokens < / td > <nl> - < td > blocks to check < / td > <nl> - < td > METHOD _ DEF , CTOR _ DEF < / td > <nl> - < td > METHOD _ DEF , CTOR _ DEF < / td > <nl> - < / tr > <nl> - < / table > <nl> - <nl> - < h4 > Examples < / h4 > <nl> - < p class = " body " > <nl> - To configure the check : <nl> - < / p > <nl> - < pre class = " body " > <nl> - & lt ; config name = " MethodLengthCheck " / & gt ; <nl> + < h4 > Notes < / h4 > <nl> + < p class = " body " > <nl> + Support for the special handling of imports in CheckStyle Version 2 has been <nl> + dropped as it is a special case of regexp : The user can set the ignorePattern to <nl> + " ^ import " and achieve the same effect . <nl> + < / p > <nl> + <nl> + < h4 > Package < / h4 > <nl> + < p class = " body " > <nl> + com . puppycrawl . tools . checkstyle . checks <nl> + < / p > <nl> + < h4 > Parent Module < / h4 > <nl> + < p class = " body " > <nl> + < a href = " TreeWalker " > TreeWalker < / a > <nl> + < / p > <nl> + <nl> + < a name = " MethodLengthCheck " > < / a > < h2 > MethodLengthCheck < / h2 > < h4 > Description < / h4 > <nl> + < p class = " body " > <nl> + Checks for long methods and constructors . <nl> + < / p > <nl> + < p class = " body " > <nl> + Rationale : If a method becomes very long it is hard to understand . Therefore <nl> + long methods should usually be refactored into several individual methods that <nl> + focus on a specific task . <nl> + < / p > <nl> + <nl> + < h4 > Properties < / h4 > <nl> + <nl> + < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > <nl> + < tr > <nl> + < th > name < / th > <nl> + < th > description < / th > <nl> + < th > type < / th > <nl> + < th > default value < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > max < / td > <nl> + < td > maximum allowable number of lines < / td > <nl> + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> + < td > 150 < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > tokens < / td > <nl> + < td > blocks to check < / td > <nl> + < td > subset of acceptable tokens METHOD _ DEF , CTOR _ DEF < / td > <nl> + < td > METHOD _ DEF , CTOR _ DEF < / td > <nl> + < / tr > <nl> + < / table > <nl> + <nl> + < h4 > Examples < / h4 > <nl> + < p class = " body " > <nl> + To configure the check : <nl> + < / p > <nl> + < pre class = " body " > <nl> + & lt ; config name = " MethodLength " / & gt ; <nl> < / pre > <nl> - < p class = " body " > <nl> - To configure the check so that it accepts methods with at most 60 lines : <nl> - < / p > <nl> - < pre class = " body " > <nl> - & lt ; config name = " MethodLengthCheck " & gt ; <nl> + < p class = " body " > <nl> + To configure the check so that it accepts methods with at most 60 lines : <nl> + < / p > <nl> + < pre class = " body " > <nl> + & lt ; config name = " MethodLength " & gt ; <nl> & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; <nl> & lt ; property name = " max " value = " 60 " / & gt ; <nl> & lt ; / config & gt ; <nl> < / pre > <nl> <nl> - < h4 > Package < / h4 > <nl> - < p class = " body " > <nl> - com . puppycrawl . tools . checkstyle . checks <nl> - < / p > <nl> - < h4 > Parent Module < / h4 > <nl> - < p class = " body " > <nl> - < a href = " TreeWalker " > TreeWalker < / a > <nl> - < / p > <nl> - <nl> - <nl> - < a name = " ParameterNumberCheck " > < / a > <nl> - < h2 > ParameterNumberCheck < / h2 > < h4 > Description < / h4 > <nl> - < p class = " body " > <nl> - Checks the number of parameters of a method or constructor . <nl> - < / p > <nl> - <nl> - < h4 > Properties < / h4 > <nl> - <nl> - < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > <nl> - < tr > <nl> - < th > name < / th > <nl> - < th > description < / th > <nl> - < th > type < / th > <nl> - < th > default value < / th > <nl> - < / tr > <nl> - < tr > <nl> - < td > max < / td > <nl> - < td > maximum allowable number of parameters < / td > <nl> - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> - < td > 7 < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > tokens < / td > <nl> - < td > blocks to check < / td > <nl> - < td > METHOD _ DEF , CTOR _ DEF < / td > <nl> - < td > METHOD _ DEF , CTOR _ DEF < / td > <nl> - < / tr > <nl> - < / table > <nl> - <nl> - < h4 > Examples < / h4 > <nl> - < p class = " body " > <nl> - To configure the check : <nl> - < / p > <nl> - < pre class = " body " > <nl> - & lt ; config name = " ParameterNumberCheck " / & gt ; <nl> - < / pre > <nl> - < p class = " body " > <nl> - To configure the check to allow 10 parameters for a method : <nl> - < / p > <nl> - < pre class = " body " > <nl> - & lt ; config name = " ParameterNumberCheck " & gt ; <nl> + < h4 > Package < / h4 > <nl> + < p class = " body " > <nl> + com . puppycrawl . tools . checkstyle . checks <nl> + < / p > <nl> + < h4 > Parent Module < / h4 > <nl> + < p class = " body " > <nl> + < a href = " TreeWalker " > TreeWalker < / a > <nl> + < / p > <nl> + <nl> + <nl> + < a name = " ParameterNumberCheck " > < / a > < h2 > ParameterNumberCheck < / h2 > < h4 > Description < / h4 > <nl> + < p class = " body " > <nl> + Checks the number of parameters of a method or constructor . <nl> + < / p > <nl> + <nl> + < h4 > Properties < / h4 > <nl> + <nl> + < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > <nl> + < tr > <nl> + < th > name < / th > <nl> + < th > description < / th > <nl> + < th > type < / th > <nl> + < th > default value < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > max < / td > <nl> + < td > maximum allowable number of parameters < / td > <nl> + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> + < td > 7 < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > tokens < / td > <nl> + < td > declarations to check < / td > <nl> + < td > subset of acceptable tokens METHOD _ DEF , CTOR _ DEF < / td > <nl> + < td > METHOD _ DEF , CTOR _ DEF < / td > <nl> + < / tr > <nl> + < / table > <nl> + <nl> + < h4 > Examples < / h4 > <nl> + < p class = " body " > <nl> + To configure the check : <nl> + < / p > <nl> + < pre class = " body " > <nl> + & lt ; config name = " ParameterNumber " / & gt ; <nl> + < / pre > <nl> + < p class = " body " > <nl> + To configure the check to allow 10 parameters for a method : <nl> + < / p > <nl> + < pre class = " body " > <nl> + & lt ; config name = " ParameterNumber " & gt ; <nl> & lt ; property name = " max " value = " 10 " / & gt ; <nl> & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; <nl> & lt ; / config & gt ; <nl> - < / pre > <nl> - < h4 > Package < / h4 > <nl> - < p class = " body " > <nl> - com . puppycrawl . tools . checkstyle . checks <nl> - < / p > <nl> - < h4 > Parent Module < / h4 > <nl> - < p class = " body " > <nl> - < a href = " TreeWalker " > TreeWalker < / a > <nl> - < / p > <nl> - < / td > <nl> - < / tr > <nl> - < / table > <nl> - <nl> - < hr / > <nl> - < p > <nl> - Copyright & copy ; 2002 Oliver Burn . All rights Reserved . <nl> - < / p > <nl> - <nl> - < / body > <nl> + < / pre > <nl> + < h4 > Package < / h4 > <nl> + < p class = " body " > <nl> + com . puppycrawl . tools . checkstyle . checks <nl> + < / p > <nl> + < h4 > Parent Module < / h4 > <nl> + < p class = " body " > <nl> + < a href = " TreeWalker " > TreeWalker < / a > <nl> + < / p > <nl> + < / td > <nl> + < / tr > <nl> + < / table > <nl> + <nl> + < hr / > <nl> + < p > <nl> + Copyright & copy ; 2002 Oliver Burn . All rights Reserved . <nl> + < / p > <nl> + <nl> + < / body > <nl> < / html > <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / . ci / shippable . sh b / . ci / shippable . sh 
 new file mode 100755 
 index 0000000 . . b1fa40e 
 - - - / dev / null 
 + + + b / . ci / shippable . sh 
 @ @ - 0 , 0 + 1 , 136 @ @ 
 + # ! / bin / bash 
 + # Attention , there is no " - x " to avoid problems on Wercker 
 + set - e 
 + 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + function checkPitestReport ( ) { 
 + ignored = ( " $ @ " ) 
 + fail = 0 
 + SEARCH _ REGEXP = " ( span class = ' survived ' | class = ' uncovered ' > < pre > ) " 
 + actual = ( $ ( grep - irE " $ SEARCH _ REGEXP " target / pit - reports | sed - E ' s / . * \ / ( [ A - Za - z ] + . java . html ) / \ 1 / ' | sort ) ) 
 + A = $ { actual [ @ ] } ; 
 + B = $ { ignored [ @ ] } ; 
 + if [ " $ ( diff - q - u - w < ( echo " $ A " ) < ( echo " $ B " ) ) " ! = " " ] ; then 
 + fail = 1 
 + echo " Diff : " 
 + diff - u - w < ( echo " $ A " ) < ( echo " $ B " ) | cat 
 + echo " Actual : " ; 
 + grep - irE " $ SEARCH _ REGEXP " target / pit - reports | sed - E ' s / . * \ / ( [ A - Za - z ] + . java . html ) / \ 1 / ' | sort 
 + echo " Ignore : " ; 
 + printf ' % s \ n ' " $ { ignored [ @ ] } " 
 + fi ; 
 + if [ " $ fail " - ne " 0 " ] ; then 
 + echo " Survived items found in reports , build will be failed " 
 + fi 
 + sleep 5s 
 + exit $ fail 
 + } 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + case $ 1 in 
 + 
 + pitest - checkstyle - xpath | pitest - checkstyle - filters | pitest - checks - imports \ 
 + | pitest - checks - metrics | pitest - checks - regexp | pitest - checks - sizes | pitest - checks - misc \ 
 + | pitest - checks - design | pitest - checks - annotation | pitest - checks - header \ 
 + | pitest - checks - modifier | pitest - checks - naming | pitest - checkstyle - tree - walker | pitest - checkstyle - main \ 
 + | pitest - checks - whitespace ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + # Format of ignored items : < report _ name > : < survived line > 
 + declare - a ignoredItems = ( ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - checks - blocks ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + # Format of ignored items : < report _ name > : < survived line > 
 + declare - a ignoredItems = ( 
 + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; annotation . getNextSibling ( ) . getType ( ) = = TokenTypes . ANNOTATION ) { < / span > < / pre > < / td > < / tr > " 
 + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; previousAnnotation . getPreviousSibling ( ) . getLineNo ( ) < / span > < / pre > < / td > < / tr > " 
 + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( tokenAfterLast . getLineNo ( ) & # 62 ; lastAnnotation . getLineNo ( ) ) { < / span > < / pre > < / td > < / tr > " 
 + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return previousAnnotation ; < / span > < / pre > < / td > < / tr > " 
 + " LeftCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > while ( previousAnnotation . getPreviousSibling ( ) ! = null < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - checks - coding ) 
 + # POST _ ACTION = check _ survived _ coding 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + # Format of ignored items : < report _ name > : < survived line > 
 + declare - a ignoredItems = ( 
 + " EqualsAvoidNullCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; field . getColumnNo ( ) + minimumSymbolsBetween & # 60 ; = objCalledOn . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " 
 + " FallThroughCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > lineNo , matcher . end ( ) - 1 ) ; < / span > < / pre > < / td > < / tr > " 
 + " HiddenFieldCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > processVariable ( ast ) ; < / span > < / pre > < / td > < / tr > " 
 + " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > classNames . clear ( ) ; < / span > < / pre > < / td > < / tr > " 
 + " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > imports . clear ( ) ; < / span > < / pre > < / td > < / tr > " 
 + " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > instantiations . clear ( ) ; < / span > < / pre > < / td > < / tr > " 
 + " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > processClassDef ( ast ) ; < / span > < / pre > < / td > < / tr > " 
 + " IllegalTypeCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > while ( toVisit ! = null ) { < / span > < / pre > < / td > < / tr > " 
 + " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; newNode . getColumnNo ( ) & # 62 ; currentNode . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " 
 + " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( newNode . getLineNo ( ) & # 62 ; currentNode . getLineNo ( ) < / span > < / pre > < / td > < / tr > " 
 + " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | newNode . getLineNo ( ) = = currentNode . getLineNo ( ) < / span > < / pre > < / td > < / tr > " 
 + " RequireThisCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ast1 . getColumnNo ( ) & # 60 ; ast2 . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " 
 + " RequireThisCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > current . clear ( ) ; < / span > < / pre > < / td > < / tr > " 
 + " RequireThisCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > final boolean methodNameInMethodCall = parentType = = TokenTypes . DOT < / span > < / pre > < / td > < / tr > " 
 + " RequireThisCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return FrameType . CATCH _ FRAME ; < / span > < / pre > < / td > < / tr > " 
 + " UnnecessaryParenthesesCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( type ! = TokenTypes . ASSIGN < / span > < / pre > < / td > < / tr > " 
 + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; currentNode . getType ( ) = = TokenTypes . LITERAL _ CATCH ) { < / span > < / pre > < / td > < / tr > " 
 + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( currentNode . getType ( ) = = TokenTypes . LITERAL _ IF ) { < / span > < / pre > < / td > < / tr > " 
 + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( elseBlock . getType ( ) = = TokenTypes . LITERAL _ ELSE ) { < / span > < / pre > < / td > < / tr > " 
 + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! isVarInOperatorDeclaration & # 38 ; & # 38 ; operator . getType ( ) = = TokenTypes . LITERAL _ IF ) { < / span > < / pre > < / td > < / tr > " 
 + " VariableDeclarationUsageDistanceCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > while ( currentNode ! = null < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - checkstyle - common ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + # Format of ignored items : < report _ name > : < survived line > 
 + declare - a ignoredItems = ( 
 + " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > + & # 34 ; - & # 34 ; + ex . getMessage ( ) , ex ) ; < / span > < / pre > < / td > < / tr > " 
 + " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > catch ( final CheckstyleException ex ) { < / span > < / pre > < / td > < / tr > " 
 + " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > throw ex ; < / span > < / pre > < / td > < / tr > " 
 + " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > throw new CheckstyleException ( & # 34 ; cannot initialize module & # 34 ; + name < / span > < / pre > < / td > < / tr > " 
 + " DefaultConfiguration . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > attributeMap . put ( attributeName , current + & # 34 ; , & # 34 ; + value ) ; < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - checkstyle - api ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + # Format of ignored items : < report _ name > : < survived line > 
 + declare - a ignoredItems = ( 
 + " BeforeExecutionFileFilterSet . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > beforeExecutionFileFilters . remove ( filter ) ; < / span > < / pre > < / td > < / tr > " 
 + " BeforeExecutionFileFilterSet . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > } < / span > < / pre > < / td > < / tr > " 
 + " FileText . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > lineBreakPositions [ lineNo ] = fullText . length ( ) ; < / span > < / pre > < / td > < / tr > " 
 + " FilterSet . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > filters . remove ( filter ) ; < / span > < / pre > < / td > < / tr > " 
 + " FilterSet . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > } < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - checkstyle - utils ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + # Format of ignored items : < report _ name > : < survived line > 
 + declare - a ignoredItems = ( 
 + " JavadocUtils . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > continue ; < / span > < / pre > < / td > < / tr > " 
 + " TokenUtils . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > continue ; < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - checkstyle - gui | pitest - checks - indentation | pitest - checks - javadoc ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + # too much supprssions , post validation is skipped 
 + ; ; 
 + 
 + * ) 
 + echo " Unexpected argument : $ 1 " 
 + sleep 5s 
 + false 
 + ; ; 
 + 
 + esac 
 + 
 + 
 + 
 diff - - git a / pom . xml b / pom . xml 
 index 48b76bf . . 56fef8e 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 2563 , 7 + 2563 , 7 @ @ 
 < ! - - cause of https : / / github . com / checkstyle / checkstyle / issues / 3605 - - > 
 < avoidCallsTo > com . puppycrawl . tools . checkstyle . XmlLoader $ FeaturesForVerySecureJavaInstallations < / avoidCallsTo > 
 < / avoidCallsTo > 
 - < coverageThreshold > 100 < / coverageThreshold > 
 + < coverageThreshold > 99 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 @ @ - 2650 , 8 + 2650 , 8 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . gui . * < / param > 
 < / targetTests > 
 - < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 30 < / mutationThreshold > 
 + < coverageThreshold > 40 < / coverageThreshold > 
 + < mutationThreshold > 29 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 diff - - git a / shippable . yml b / shippable . yml 
 index a66229b . . 4249ab1 100644 
 - - - a / shippable . yml 
 + + + b / shippable . yml 
 @ @ - 6 , 29 + 6 , 29 @ @ jdk : 
 
 env : 
 matrix : 
 - - PROFILE = " - Ppitest - checkstyle - xpath " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checkstyle - filters " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - javadoc " 
 - - PROFILE = " - Ppitest - checks - imports " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - metrics " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - regexp " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - sizes " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - whitespace " ; POST _ ACTION = check _ survived 
 - - PROFILE = " - Ppitest - checks - misc " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - blocks " ; POST _ ACTION = check _ survived _ blocks 
 - - PROFILE = " - Ppitest - checks - coding " ; POST _ ACTION = check _ survived _ coding 
 - - PROFILE = " - Ppitest - checks - design " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - annotation " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - header " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - modifier " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - naming " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - indentation " 
 - - PROFILE = " - Ppitest - checkstyle - tree - walker " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checkstyle - common " ; POST _ ACTION = check _ survived 
 - - PROFILE = " - Ppitest - checkstyle - main " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checkstyle - api " ; POST _ ACTION = check _ survived 
 - - PROFILE = " - Ppitest - checkstyle - utils " ; POST _ ACTION = check _ survived 
 - - PROFILE = " - Ppitest - checkstyle - gui " 
 + - PROFILE = " pitest - checkstyle - xpath " 
 + - PROFILE = " pitest - checkstyle - filters " 
 + - PROFILE = " pitest - checks - javadoc " 
 + - PROFILE = " pitest - checks - imports " 
 + - PROFILE = " pitest - checks - metrics " 
 + - PROFILE = " pitest - checks - regexp " 
 + - PROFILE = " pitest - checks - sizes " 
 + - PROFILE = " pitest - checks - whitespace " 
 + - PROFILE = " pitest - checks - misc " 
 + - PROFILE = " pitest - checks - blocks " 
 + - PROFILE = " pitest - checks - coding " 
 + - PROFILE = " pitest - checks - design " 
 + - PROFILE = " pitest - checks - annotation " 
 + - PROFILE = " pitest - checks - header " 
 + - PROFILE = " pitest - checks - modifier " 
 + - PROFILE = " pitest - checks - naming " 
 + - PROFILE = " pitest - checks - indentation " 
 + - PROFILE = " pitest - checkstyle - tree - walker " 
 + - PROFILE = " pitest - checkstyle - common " 
 + - PROFILE = " pitest - checkstyle - main " 
 + - PROFILE = " pitest - checkstyle - api " 
 + - PROFILE = " pitest - checkstyle - utils " 
 + - PROFILE = " pitest - checkstyle - gui " 
 
 branches : 
 only : 
 @ @ - 46 , 45 + 46 , 9 @ @ build : 
 SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | wercker . yml | wercker . sh | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " 
 SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) 
 echo " SKIP _ CI = " $ SKIP _ CI 
 - echo " POST _ ACTION = " $ POST _ ACTION 
 if [ [ $ SKIP _ CI = = ' false ' ] ] ; 
 then 
 - mvn - e $ PROFILE clean test org . pitest : pitest - maven : mutationCoverage ; 
 - 
 - if [ [ $ POST _ ACTION = = ' check _ survived _ uncovered ' \ 
 - & & ( $ ( grep - RE " class = ' survived ' " target / | cat | wc - l ) > 0 \ 
 - | | $ ( grep - RE " class = ' uncovered ' " target / | cat | wc - l ) > 0 ) ] ] ; then 
 - echo " Survived items : " $ ( grep - RE " class = ' survived ' " target / | cat ) 
 - echo " Uncovered items : " $ ( grep - RE " class = ' uncovered ' " target / | cat ) 
 - echo " Survived / Uncovered items found in reports , build will be failed " 
 - exit 1 
 - fi 
 - if [ [ $ POST _ ACTION = = ' check _ survived ' & & $ ( grep - RE " class = ' survived ' " target / | cat | wc - l ) > 0 ] ] ; then 
 - echo " Survived items : " $ ( grep - RE " class = ' survived ' " target / | cat ) 
 - echo " Survived items found in reports , build will be failed " 
 - exit 1 
 - fi 
 - if [ [ $ POST _ ACTION = = ' check _ survived _ blocks ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " LeftCurlyCheck . * " target / | cat | wc - l ) > 0 ] ] ; then 
 - echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " LeftCurlyCheck . * " target / | cat ) 
 - echo " Survived items found in reports , build will be failed " 
 - exit 1 
 - fi 
 - if [ [ $ POST _ ACTION = = ' check _ survived _ coding ' 
 - & & $ ( grep - RE " class = ' survived ' " - - exclude = " EqualsAvoidNullCheck . * " \ 
 - - - exclude = " FallThroughCheck . * " - - exclude = " HiddenFieldCheck . * " - - exclude = " IllegalInstantiationCheck . * " \ 
 - - - exclude = " IllegalTypeCheck . * " \ 
 - - - exclude = " MultipleVariableDeclarationsCheck . * " \ 
 - - - exclude = " RequireThisCheck . * " \ 
 - - - exclude = " UnnecessaryParenthesesCheck . * " - - exclude = " VariableDeclarationUsageDistanceCheck . * " target / | cat | wc - l ) > 0 ] ] ; then 
 - echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " EqualsAvoidNullCheck . * " \ 
 - - - exclude = " FallThroughCheck . * " - - exclude = " HiddenFieldCheck . * " - - exclude = " IllegalInstantiationCheck . * " \ 
 - - - exclude = " IllegalTypeCheck . * " \ 
 - - - exclude = " MultipleVariableDeclarationsCheck . * " \ 
 - - - exclude = " RequireThisCheck . * " \ 
 - - - exclude = " UnnecessaryParenthesesCheck . * " - - exclude = " VariableDeclarationUsageDistanceCheck . * " target / | cat ) 
 - echo " Survived items found in reports , build will be failed " 
 - exit 1 
 - fi 
 + . / . ci / shippable . sh $ PROFILE 
 else 
 echo " Build is skipped , changed files : " 
 git diff - - name - only HEAD HEAD ~ 1

NEAREST DIFF:
diff - - git a / docs / config _ sizes . html b / docs / config _ sizes . html 
 index b7c3a7b . . 085c837 100644 
 - - - a / docs / config _ sizes . html 
 + + + b / docs / config _ sizes . html 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > 
 - < ! DOCTYPE html 
 + < ! DOCTYPE html 
 PUBLIC " - / / W3C / / DTD XHTML 1 . 0 Strict / / EN " 
 " DTD / xhtml1 - strict . dtd " > 
 < html xmlns = " http : / / www . w3 . org / 1999 / xhtml " xml : lang = " en " lang = " en " > 
 @ @ - 8 , 234 + 8 , 277 @ @ 
 < link rel = " stylesheet " type = " text / css " href = " mystyle . css " / > 
 < / head > 
 
 - < body > 
 - < ! - - The header - - > 
 - < table border = " 0 " width = " 100 % " summary = " header layout " > 
 - < tr > 
 - < td > < h1 > Checks for Size Violations < / h1 > < / td > 
 - < td align = " right " > < img src = " logo . png " alt = " Checkstyle Logo " / > < / td > 
 - < / tr > 
 - < / table > 
 - < ! - - content - - > 
 - < table border = " 0 " width = " 100 % " cellpadding = " 5 " summary = " body layout " > 
 - < tr > 
 - < ! - - Left menu - - > 
 - < td class = " menu " valign = " top " > 
 - < ul > 
 - < li > 
 - < a href = " # LineLengthCheck " > LineLengthCheck < / a > 
 - < / li > 
 - < li > 
 - < a href = " # MethodLengthCheck " > MethodLengthCheck < / a > 
 - < / li > 
 - < li > 
 - < a href = " # ParameterNumberCheck " > ParameterNumberCheck < / a > 
 - < / li > 
 - < / ul > 
 - < / td > 
 - < ! - - Content - - > 
 - < td class = " content " valign = " top " align = " left " > < a name = " LineLengthCheck " > < / a > < h2 > LineLengthCheck < / h2 > 
 - < h4 > Description < / h4 > 
 - < p class = " body " > 
 - Checks for long lines . 
 - < / p > 
 - < p class = " body " > 
 - Rationale : Long lines are hard to read in printouts or if developers have 
 - limited screen space for the source code , e . g . if the IDE displays additional 
 - information like project tree , class hierarchy , etc . 
 - < / p > 
 - 
 - < h4 > Properties < / h4 > 
 - 
 - < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > 
 - < tr > 
 - < th > name < / th > 
 - < th > description < / th > 
 - < th > type < / th > 
 - < th > default value < / th > 
 - < / tr > 
 - < tr > 
 - < td > ignorePattern < / td > 
 - < td > pattern for lines to ignore < / td > 
 - < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > 
 - < td > ^ $ < / td > 
 - < / tr > 
 - < tr > 
 - < td > max < / td > 
 - < td > maximum allowable line length < / td > 
 - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 - < td > 80 < / td > 
 - < / tr > 
 - < tr > 
 - < td > tabWidth < / td > 
 - < td > number of characters to expand a tab character < / td > 
 - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 - < td > 8 < / td > 
 - < / tr > 
 - < / table > 
 - 
 - < h4 > Examples < / h4 > 
 - < p class = " body " > 
 - To configure the check to accept lines up to 120 characters long : 
 - < / p > 
 - < pre class = " body " > 
 - & lt ; config name = " LineLengthCheck " & gt ; 
 + < body > 
 + < ! - - The header - - > 
 + < table border = " 0 " width = " 100 % " summary = " header layout " > 
 + < tr > 
 + < td > < h1 > Checks for Size Violations < / h1 > < / td > 
 + < td align = " right " > < img src = " logo . png " alt = " Checkstyle Logo " / > < / td > 
 + < / tr > 
 + < / table > 
 + < ! - - content - - > 
 + < table border = " 0 " width = " 100 % " cellpadding = " 5 " summary = " body layout " > 
 + < tr > 
 + < ! - - Left menu - - > 
 + < td class = " menu " valign = " top " > 
 + < ul > 
 + < li > 
 + < a href = " # FileLengthCheck " > FileLengthCheck < / a > 
 + < / li > 
 + < li > 
 + < a href = " # LineLengthCheck " > LineLengthCheck < / a > 
 + < / li > 
 + < li > 
 + < a href = " # MethodLengthCheck " > MethodLengthCheck < / a > 
 + < / li > 
 + < li > 
 + < a href = " # ParameterNumberCheck " > ParameterNumberCheck < / a > 
 + < / li > 
 + < / ul > 
 + < / td > 
 + < ! - - Content - - > 
 + < td class = " content " valign = " top " align = " left " > 
 + 
 + < a name = " FileLengthCheck " > < / a > < h2 > FileLengthCheck < / h2 > < h4 > Description < / h4 > 
 + < p class = " body " > 
 + Checks for long source files . 
 + < / p > 
 + < p class = " body " > 
 + Rationale : If a source file becomes very long it is hard to understand . 
 + Therefore long classes should usually be refactored into several individual 
 + classes that focus on a specific task . 
 + < / p > 
 + 
 + < h4 > Properties < / h4 > 
 + 
 + < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > 
 + < tr > 
 + < th > name < / th > 
 + < th > description < / th > 
 + < th > type < / th > 
 + < th > default value < / th > 
 + < / tr > 
 + < tr > 
 + < td > max < / td > 
 + < td > maximum allowable number of lines < / td > 
 + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 + < td > 2000 < / td > 
 + < / tr > 
 + < / table > 
 + 
 + < h4 > Examples < / h4 > 
 + < p class = " body " > 
 + To configure the check to accept files with up to 1500 lines : 
 + < / p > 
 + < pre class = " body " > 
 + & lt ; config name = " FileLength " & gt ; 
 + & lt ; property name = " max " value = " 1500 " / & gt ; 
 + & lt ; / config & gt ; 
 + < / pre > 
 + 
 + < h4 > Package < / h4 > 
 + < p class = " body " > 
 + com . puppycrawl . tools . checkstyle . checks 
 + < / p > 
 + < h4 > Parent Module < / h4 > 
 + < p class = " body " > 
 + < a href = " TreeWalker " > TreeWalker < / a > 
 + < / p > 
 + 
 + < a name = " LineLengthCheck " > < / a > < h2 > LineLengthCheck < / h2 > < h4 > Description < / h4 > 
 + < p class = " body " > 
 + Checks for long lines . 
 + < / p > 
 + < p class = " body " > 
 + Rationale : Long lines are hard to read in printouts or if developers have 
 + limited screen space for the source code , e . g . if the IDE displays additional 
 + information like project tree , class hierarchy , etc . 
 + < / p > 
 + 
 + < h4 > Properties < / h4 > 
 + 
 + < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > 
 + < tr > 
 + < th > name < / th > 
 + < th > description < / th > 
 + < th > type < / th > 
 + < th > default value < / th > 
 + < / tr > 
 + < tr > 
 + < td > ignorePattern < / td > 
 + < td > pattern for lines to ignore < / td > 
 + < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > 
 + < td > ^ $ < / td > 
 + < / tr > 
 + < tr > 
 + < td > max < / td > 
 + < td > maximum allowable line length < / td > 
 + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 + < td > 80 < / td > 
 + < / tr > 
 + < tr > 
 + < td > tabWidth < / td > 
 + < td > number of characters to expand a tab character < / td > 
 + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 + < td > 8 < / td > 
 + < / tr > 
 + < / table > 
 + 
 + < h4 > Examples < / h4 > 
 + < p class = " body " > 
 + To configure the check to accept lines up to 120 characters long : 
 + < / p > 
 + < pre class = " body " > 
 + & lt ; config name = " LineLength " & gt ; 
 & lt ; property name = " max " value = " 120 " / & gt ; 
 & lt ; / config & gt ; 
 < / pre > 
 - < p class = " body " > 
 - To configure the check to ignore lines that begin with & quot ; * & quot ; , followed 
 - by just one word , such as within a Javadoc comment : 
 - < / p > 
 - < pre class = " body " > 
 - & lt ; config name = " LineLengthCheck " & gt ; 
 + < p class = " body " > 
 + To configure the check to ignore lines that begin with & quot ; * & quot ; , followed 
 + by just one word , such as within a Javadoc comment : 
 + < / p > 
 + < pre class = " body " > 
 + & lt ; config name = " LineLength " & gt ; 
 & lt ; property name = " ignorePattern " value = " ^ * \ * * [ ^ ] + $ " / & gt ; 
 & lt ; / config & gt ; 
 < / pre > 
 
 - < h4 > Notes < / h4 > 
 - < p class = " body " > 
 - Support for the special handling of imports in CheckStyle Version 2 has been 
 - dropped as it is a special case of regexp : The user can set the ignorePattern to 
 - " ^ import " and achieve the same effect . 
 - < / p > 
 - 
 - < h4 > Package < / h4 > 
 - < p class = " body " > 
 - com . puppycrawl . tools . checkstyle . checks 
 - < / p > 
 - < h4 > Parent Module < / h4 > 
 - < p class = " body " > 
 - < a href = " TreeWalker " > TreeWalker < / a > 
 - < / p > 
 - 
 - < a name = " MethodLengthCheck " > < / a > < h2 > MethodLengthCheck < / h2 > < h4 > Description < / h4 > 
 - < p class = " body " > 
 - Checks for long methods and constructors . 
 - < / p > 
 - < p class = " body " > 
 - Rationale : If a method becomes very long it is hard to understand . Therefore 
 - long methods should usually be refactored into several individual methods that 
 - focus on a specific task . 
 - < / p > 
 - 
 - < h4 > Properties < / h4 > 
 - 
 - < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > 
 - < tr > 
 - < th > name < / th > 
 - < th > description < / th > 
 - < th > type < / th > 
 - < th > default value < / th > 
 - < / tr > 
 - < tr > 
 - < td > ignorePattern < / td > 
 - < td > pattern for lines to ignore < / td > 
 - < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > 
 - < td > ^ $ < / td > 
 - < / tr > 
 - < tr > 
 - < td > max < / td > 
 - < td > maximum allowable number of lines < / td > 
 - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 - < td > 150 < / td > 
 - < / tr > 
 - < tr > 
 - < td > tokens < / td > 
 - < td > blocks to check < / td > 
 - < td > METHOD _ DEF , CTOR _ DEF < / td > 
 - < td > METHOD _ DEF , CTOR _ DEF < / td > 
 - < / tr > 
 - < / table > 
 - 
 - < h4 > Examples < / h4 > 
 - < p class = " body " > 
 - To configure the check : 
 - < / p > 
 - < pre class = " body " > 
 - & lt ; config name = " MethodLengthCheck " / & gt ; 
 + < h4 > Notes < / h4 > 
 + < p class = " body " > 
 + Support for the special handling of imports in CheckStyle Version 2 has been 
 + dropped as it is a special case of regexp : The user can set the ignorePattern to 
 + " ^ import " and achieve the same effect . 
 + < / p > 
 + 
 + < h4 > Package < / h4 > 
 + < p class = " body " > 
 + com . puppycrawl . tools . checkstyle . checks 
 + < / p > 
 + < h4 > Parent Module < / h4 > 
 + < p class = " body " > 
 + < a href = " TreeWalker " > TreeWalker < / a > 
 + < / p > 
 + 
 + < a name = " MethodLengthCheck " > < / a > < h2 > MethodLengthCheck < / h2 > < h4 > Description < / h4 > 
 + < p class = " body " > 
 + Checks for long methods and constructors . 
 + < / p > 
 + < p class = " body " > 
 + Rationale : If a method becomes very long it is hard to understand . Therefore 
 + long methods should usually be refactored into several individual methods that 
 + focus on a specific task . 
 + < / p > 
 + 
 + < h4 > Properties < / h4 > 
 + 
 + < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > 
 + < tr > 
 + < th > name < / th > 
 + < th > description < / th > 
 + < th > type < / th > 
 + < th > default value < / th > 
 + < / tr > 
 + < tr > 
 + < td > max < / td > 
 + < td > maximum allowable number of lines < / td > 
 + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 + < td > 150 < / td > 
 + < / tr > 
 + < tr > 
 + < td > tokens < / td > 
 + < td > blocks to check < / td > 
 + < td > subset of acceptable tokens METHOD _ DEF , CTOR _ DEF < / td > 
 + < td > METHOD _ DEF , CTOR _ DEF < / td > 
 + < / tr > 
 + < / table > 
 + 
 + < h4 > Examples < / h4 > 
 + < p class = " body " > 
 + To configure the check : 
 + < / p > 
 + < pre class = " body " > 
 + & lt ; config name = " MethodLength " / & gt ; 
 < / pre > 
 - < p class = " body " > 
 - To configure the check so that it accepts methods with at most 60 lines : 
 - < / p > 
 - < pre class = " body " > 
 - & lt ; config name = " MethodLengthCheck " & gt ; 
 + < p class = " body " > 
 + To configure the check so that it accepts methods with at most 60 lines : 
 + < / p > 
 + < pre class = " body " > 
 + & lt ; config name = " MethodLength " & gt ; 
 & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; 
 & lt ; property name = " max " value = " 60 " / & gt ; 
 & lt ; / config & gt ; 
 < / pre > 
 
 - < h4 > Package < / h4 > 
 - < p class = " body " > 
 - com . puppycrawl . tools . checkstyle . checks 
 - < / p > 
 - < h4 > Parent Module < / h4 > 
 - < p class = " body " > 
 - < a href = " TreeWalker " > TreeWalker < / a > 
 - < / p > 
 - 
 - 
 - < a name = " ParameterNumberCheck " > < / a > 
 - < h2 > ParameterNumberCheck < / h2 > < h4 > Description < / h4 > 
 - < p class = " body " > 
 - Checks the number of parameters of a method or constructor . 
 - < / p > 
 - 
 - < h4 > Properties < / h4 > 
 - 
 - < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > 
 - < tr > 
 - < th > name < / th > 
 - < th > description < / th > 
 - < th > type < / th > 
 - < th > default value < / th > 
 - < / tr > 
 - < tr > 
 - < td > max < / td > 
 - < td > maximum allowable number of parameters < / td > 
 - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 - < td > 7 < / td > 
 - < / tr > 
 - < tr > 
 - < td > tokens < / td > 
 - < td > blocks to check < / td > 
 - < td > METHOD _ DEF , CTOR _ DEF < / td > 
 - < td > METHOD _ DEF , CTOR _ DEF < / td > 
 - < / tr > 
 - < / table > 
 - 
 - < h4 > Examples < / h4 > 
 - < p class = " body " > 
 - To configure the check : 
 - < / p > 
 - < pre class = " body " > 
 - & lt ; config name = " ParameterNumberCheck " / & gt ; 
 - < / pre > 
 - < p class = " body " > 
 - To configure the check to allow 10 parameters for a method : 
 - < / p > 
 - < pre class = " body " > 
 - & lt ; config name = " ParameterNumberCheck " & gt ; 
 + < h4 > Package < / h4 > 
 + < p class = " body " > 
 + com . puppycrawl . tools . checkstyle . checks 
 + < / p > 
 + < h4 > Parent Module < / h4 > 
 + < p class = " body " > 
 + < a href = " TreeWalker " > TreeWalker < / a > 
 + < / p > 
 + 
 + 
 + < a name = " ParameterNumberCheck " > < / a > < h2 > ParameterNumberCheck < / h2 > < h4 > Description < / h4 > 
 + < p class = " body " > 
 + Checks the number of parameters of a method or constructor . 
 + < / p > 
 + 
 + < h4 > Properties < / h4 > 
 + 
 + < table width = " 100 % " border = " 1 " cellpadding = " 5 " class = " body " > 
 + < tr > 
 + < th > name < / th > 
 + < th > description < / th > 
 + < th > type < / th > 
 + < th > default value < / th > 
 + < / tr > 
 + < tr > 
 + < td > max < / td > 
 + < td > maximum allowable number of parameters < / td > 
 + < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 + < td > 7 < / td > 
 + < / tr > 
 + < tr > 
 + < td > tokens < / td > 
 + < td > declarations to check < / td > 
 + < td > subset of acceptable tokens METHOD _ DEF , CTOR _ DEF < / td > 
 + < td > METHOD _ DEF , CTOR _ DEF < / td > 
 + < / tr > 
 + < / table > 
 + 
 + < h4 > Examples < / h4 > 
 + < p class = " body " > 
 + To configure the check : 
 + < / p > 
 + < pre class = " body " > 
 + & lt ; config name = " ParameterNumber " / & gt ; 
 + < / pre > 
 + < p class = " body " > 
 + To configure the check to allow 10 parameters for a method : 
 + < / p > 
 + < pre class = " body " > 
 + & lt ; config name = " ParameterNumber " & gt ; 
 & lt ; property name = " max " value = " 10 " / & gt ; 
 & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; 
 & lt ; / config & gt ; 
 - < / pre > 
 - < h4 > Package < / h4 > 
 - < p class = " body " > 
 - com . puppycrawl . tools . checkstyle . checks 
 - < / p > 
 - < h4 > Parent Module < / h4 > 
 - < p class = " body " > 
 - < a href = " TreeWalker " > TreeWalker < / a > 
 - < / p > 
 - < / td > 
 - < / tr > 
 - < / table > 
 - 
 - < hr / > 
 - < p > 
 - Copyright & copy ; 2002 Oliver Burn . All rights Reserved . 
 - < / p > 
 - 
 - < / body > 
 + < / pre > 
 + < h4 > Package < / h4 > 
 + < p class = " body " > 
 + com . puppycrawl . tools . checkstyle . checks 
 + < / p > 
 + < h4 > Parent Module < / h4 > 
 + < p class = " body " > 
 + < a href = " TreeWalker " > TreeWalker < / a > 
 + < / p > 
 + < / td > 
 + < / tr > 
 + < / table > 
 + 
 + < hr / > 
 + < p > 
 + Copyright & copy ; 2002 Oliver Burn . All rights Reserved . 
 + < / p > 
 + 
 + < / body > 
 < / html > 
 \ No newline at end of file
