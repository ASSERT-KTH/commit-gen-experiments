BLEU SCORE: 0.05428210647032972

TEST MSG: Issue # 4940 : add suppressions on the twelfth part of idea violations
GENERATED MSG: Issue # 3229 : update for IntelijIdea inspections to skip java8 validation till resolved separately .

TEST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index 279388b . . b0c8a74 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 280 , 6 + 280 , 8 @ @ <nl> < inspection _ tool class = " CheckedExceptionClass " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " ClashingGetters " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " ClashingTraitMethods " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> + < ! - - we use design model to keep all logic for class in one file . So , we have a lot of completely <nl> + isolated classes and we cannot put them to separate package as it will affect users configs - - > <nl> < inspection _ tool class = " ClassComplexity " enabled = " false " level = " ERROR " enabled _ by _ default = " false " > <nl> < option name = " m _ limit " value = " 80 " / > <nl> < / inspection _ tool > <nl> @ @ - 455 , 7 + 457 , 8 @ @ <nl> < inspection _ tool class = " Convert2Lambda " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < ! - - disabled till GSoC project completion - - > <nl> < inspection _ tool class = " Convert2MethodRef " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> - < ! - - disabled till GSoC project completion - - > <nl> + < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can <nl> + distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > <nl> < inspection _ tool class = " Convert2streamapi " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " ConvertAnnotations " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " ConvertJavadoc " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> @ @ - 568 , 7 + 571 , 7 @ @ <nl> < inspection _ tool class = " DoubleLiteralMayBeFloatLiteral " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " DoubleNegation " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " DriverManagerGetConnection " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> - < ! - - Disabled till GSoC completion - - > <nl> + < ! - - the only violation found is false - positive at AvoidEscapedUnicodeCharactersCheck - - > <nl> < inspection _ tool class = " DuplicateAlternationBranch " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " DuplicateBooleanBranch " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " DuplicateCaseLabelJS " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> @ @ - 1224 , 7 + 1227 , 8 @ @ <nl> < / inspection _ tool > <nl> < ! - - we need to stay on junit - - > <nl> < inspection _ tool class = " JUnitTestNG " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> - < ! - - Disabled till GSoC completion - - > <nl> + < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can <nl> + distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > <nl> < inspection _ tool class = " Java8MapApi " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> < ! - - Disabled till GSoC completion - - > <nl> < inspection _ tool class = " Java8MapForEach " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> @ @ - 1615 , 7 + 1619 , 8 @ @ <nl> < inspection _ tool class = " OctalLiteral " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " OnDemandImport " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " OneWayWebMethod " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> - < ! - - suppressed till GSoC project completion . . . . - - > <nl> + < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can <nl> + distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > <nl> < inspection _ tool class = " OptionalIsPresent " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " OverloadedMethodsWithSameNumberOfParameters " enabled = " true " level = " WARNING " enabled _ by _ default = " true " > <nl> < option name = " ignoreInconvertibleTypes " value = " true " / > <nl> @ @ - 1902 , 7 + 1907 , 7 @ @ <nl> < inspection _ tool class = " SimplifyNegatedBinaryExpression " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < ! - - suppressed till GSoC project completion . . . . - - > <nl> < inspection _ tool class = " SimplifyStreamApiCallChains " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> - < ! - - suppressed till GSoC project completion . . . . - - > <nl> + < ! - - the only violation found is false - positive at AvoidEscapedUnicodeCharactersCheck - - > <nl> < inspection _ tool class = " SingleCharAlternation " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " SingleCharacterStartsWith " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < ! - - we like single import for single class - - >
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 4b50baa . . 7a49e95 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 232 , 6 + 232 , 21 @ @ <nl> < groupId > commons - beanutils < / groupId > <nl> < artifactId > commons - beanutils < / artifactId > <nl> < version > 1 . 9 . 2 < / version > <nl> + < ! - - Upgrading to commons - collections 3 . 2 . 2 to fix security vulnerability CVE - 2015 - 6420 . <nl> + This change can be reverted when upgrading to commons - beanutils 1 . 9 . 3 <nl> + https : / / issues . apache . org / jira / browse / BEANUTILS - 482 - - > <nl> + < exclusions > <nl> + < exclusion > <nl> + < groupId > commons - collections < / groupId > <nl> + < artifactId > commons - collections < / artifactId > <nl> + < / exclusion > <nl> + < / exclusions > <nl> + < / dependency > <nl> + < ! - - remove commons - collections dependency after commons - beanutils 1 . 9 . 3 - - > <nl> + < dependency > <nl> + < groupId > commons - collections < / groupId > <nl> + < artifactId > commons - collections < / artifactId > <nl> + < version > 3 . 2 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupId > commons - cli < / groupId >

TEST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index 279388b . . b0c8a74 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 280 , 6 + 280 , 8 @ @ 
 < inspection _ tool class = " CheckedExceptionClass " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " ClashingGetters " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " ClashingTraitMethods " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 + < ! - - we use design model to keep all logic for class in one file . So , we have a lot of completely 
 + isolated classes and we cannot put them to separate package as it will affect users configs - - > 
 < inspection _ tool class = " ClassComplexity " enabled = " false " level = " ERROR " enabled _ by _ default = " false " > 
 < option name = " m _ limit " value = " 80 " / > 
 < / inspection _ tool > 
 @ @ - 455 , 7 + 457 , 8 @ @ 
 < inspection _ tool class = " Convert2Lambda " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < ! - - disabled till GSoC project completion - - > 
 < inspection _ tool class = " Convert2MethodRef " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 - < ! - - disabled till GSoC project completion - - > 
 + < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can 
 + distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > 
 < inspection _ tool class = " Convert2streamapi " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 < inspection _ tool class = " ConvertAnnotations " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " ConvertJavadoc " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 @ @ - 568 , 7 + 571 , 7 @ @ 
 < inspection _ tool class = " DoubleLiteralMayBeFloatLiteral " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " DoubleNegation " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " DriverManagerGetConnection " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 - < ! - - Disabled till GSoC completion - - > 
 + < ! - - the only violation found is false - positive at AvoidEscapedUnicodeCharactersCheck - - > 
 < inspection _ tool class = " DuplicateAlternationBranch " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 < inspection _ tool class = " DuplicateBooleanBranch " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " DuplicateCaseLabelJS " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 @ @ - 1224 , 7 + 1227 , 8 @ @ 
 < / inspection _ tool > 
 < ! - - we need to stay on junit - - > 
 < inspection _ tool class = " JUnitTestNG " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 - < ! - - Disabled till GSoC completion - - > 
 + < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can 
 + distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > 
 < inspection _ tool class = " Java8MapApi " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 < ! - - Disabled till GSoC completion - - > 
 < inspection _ tool class = " Java8MapForEach " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 @ @ - 1615 , 7 + 1619 , 8 @ @ 
 < inspection _ tool class = " OctalLiteral " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " OnDemandImport " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " OneWayWebMethod " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 - < ! - - suppressed till GSoC project completion . . . . - - > 
 + < ! - - on the moment of review we were not a big fans of functional style , none of code coverage tools can 
 + distinguish that body of lambda is executed . When this problem is resolved we could reconsider disablement . - - > 
 < inspection _ tool class = " OptionalIsPresent " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 < inspection _ tool class = " OverloadedMethodsWithSameNumberOfParameters " enabled = " true " level = " WARNING " enabled _ by _ default = " true " > 
 < option name = " ignoreInconvertibleTypes " value = " true " / > 
 @ @ - 1902 , 7 + 1907 , 7 @ @ 
 < inspection _ tool class = " SimplifyNegatedBinaryExpression " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < ! - - suppressed till GSoC project completion . . . . - - > 
 < inspection _ tool class = " SimplifyStreamApiCallChains " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 - < ! - - suppressed till GSoC project completion . . . . - - > 
 + < ! - - the only violation found is false - positive at AvoidEscapedUnicodeCharactersCheck - - > 
 < inspection _ tool class = " SingleCharAlternation " enabled = " false " level = " WARNING " enabled _ by _ default = " false " / > 
 < inspection _ tool class = " SingleCharacterStartsWith " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < ! - - we like single import for single class - - >

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 4b50baa . . 7a49e95 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 232 , 6 + 232 , 21 @ @ 
 < groupId > commons - beanutils < / groupId > 
 < artifactId > commons - beanutils < / artifactId > 
 < version > 1 . 9 . 2 < / version > 
 + < ! - - Upgrading to commons - collections 3 . 2 . 2 to fix security vulnerability CVE - 2015 - 6420 . 
 + This change can be reverted when upgrading to commons - beanutils 1 . 9 . 3 
 + https : / / issues . apache . org / jira / browse / BEANUTILS - 482 - - > 
 + < exclusions > 
 + < exclusion > 
 + < groupId > commons - collections < / groupId > 
 + < artifactId > commons - collections < / artifactId > 
 + < / exclusion > 
 + < / exclusions > 
 + < / dependency > 
 + < ! - - remove commons - collections dependency after commons - beanutils 1 . 9 . 3 - - > 
 + < dependency > 
 + < groupId > commons - collections < / groupId > 
 + < artifactId > commons - collections < / artifactId > 
 + < version > 3 . 2 . 2 < / version > 
 < / dependency > 
 < dependency > 
 < groupId > commons - cli < / groupId >
