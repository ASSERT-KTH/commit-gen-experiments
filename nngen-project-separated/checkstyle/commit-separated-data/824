BLEU SCORE: 0.5859059370151705

TEST MSG: Issue # 3951 : SeparatorWrap : add support for method reference operator
GENERATED MSG: Issue # 3949 : NoWhitespaceBefore : add support for method reference operator

TEST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 85d9cfb . . 9ce7605 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 527 , 6 + 527 , 7 @ @ <nl> < module name = " SeparatorWrap " > <nl> < property name = " tokens " value = " DOT " / > <nl> < property name = " tokens " value = " AT " / > <nl> + < property name = " tokens " value = " METHOD _ REF " / > <nl> < property name = " option " value = " nl " / > <nl> < / module > <nl> < module name = " SeparatorWrap " > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> index d344721 . . 7d21d3a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> @ @ - 1462 , 7 + 1462 , 7 @ @ public final class TokenTypes { <nl> public static final int COLON = GeneratedJavaTokenTypes . COLON ; <nl> <nl> / * * <nl> - * The < code > : : < / code > ( double colon ) operator . <nl> + * The < code > : : < / code > ( double colon ) separator . <nl> * It is part of Java 8 syntax that is used for method reference . <nl> * The token does not appear in tree , { @ link # METHOD _ REF } should be used instead . <nl> * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java <nl> index 7a8db0d . . bdfd31b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java <nl> @ @ - 132 , 6 + 132 , 7 @ @ public class SeparatorWrapCheck <nl> TokenTypes . RPAREN , <nl> TokenTypes . ARRAY _ DECLARATOR , <nl> TokenTypes . RBRACK , <nl> + TokenTypes . METHOD _ REF , <nl> } ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java <nl> index abb929a . . 425372d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java <nl> @ @ - 74 , 6 + 74 , 16 @ @ public class SeparatorWrapCheckTest <nl> } <nl> <nl> @ Test <nl> + public void testMethodRef ( ) throws Exception { <nl> + checkConfig . addAttribute ( " option " , " NL " ) ; <nl> + checkConfig . addAttribute ( " tokens " , " METHOD _ REF " ) ; <nl> + final String [ ] expected = { <nl> + " 17 : 56 : " + getCheckMessage ( MSG _ LINE _ NEW , " : : " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputSeparatorWrapForTestMethodRef . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testGetDefaultTokens ( ) { <nl> final SeparatorWrapCheck separatorWrapCheckObj = new SeparatorWrapCheck ( ) ; <nl> final int [ ] actual = separatorWrapCheckObj . getDefaultTokens ( ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForTestMethodRef . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForTestMethodRef . java <nl> new file mode 100644 <nl> index 0000000 . . fb1b869 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForTestMethodRef . java <nl> @ @ - 0 , 0 + 1 , 20 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . separatorwrap ; <nl> + <nl> + import java . util . Arrays ; <nl> + <nl> + public class InputSeparatorWrapForTestMethodRef { <nl> + <nl> + void goodCase ( ) { <nl> + String [ ] stringArray = { " Barbara " , " James " , " Mary " , " John " , <nl> + " Patricia " , " Robert " , " Michael " , " Linda " } ; <nl> + Arrays . sort ( stringArray , String <nl> + : : compareToIgnoreCase ) ; <nl> + } <nl> + <nl> + void badCase ( ) { <nl> + String [ ] stringArray = { " Barbara " , " James " , " Mary " , " John " , <nl> + " Patricia " , " Robert " , " Michael " , " Linda " } ; <nl> + / * violation * / Arrays . sort ( stringArray , String : : <nl> + compareToIgnoreCase ) ; <nl> + } <nl> + } <nl> diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml <nl> index 7aa3ea2 . . bac2b11 100644 <nl> - - - a / src / xdocs / config _ whitespace . xml <nl> + + + b / src / xdocs / config _ whitespace . xml <nl> @ @ - 1596 , 7 + 1596 , 9 @ @ import static java . math . BigInteger . ZERO ; <nl> < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ARRAY _ DECLARATOR " > ARRAY _ DECLARATOR < / a > , <nl> < a <nl> - href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # RBRACK " > RBRACK < / a > . <nl> + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # RBRACK " > RBRACK < / a > , <nl> + < a <nl> + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ REF " > METHOD _ REF < / a > . <nl> < / td > <nl> <nl> < td > <nl> @ @ - 1635 , 6 + 1637 , 25 @ @ foo ( i , <nl> s ) ; <nl> < / source > <nl> < p > <nl> + Example for checking method reference at new line ( good case and bad case ) : <nl> + < / p > <nl> + < source > <nl> + Arrays . sort ( stringArray , String : : / / violation <nl> + compareToIgnoreCase ) ; <nl> + Arrays . sort ( stringArray , String <nl> + : : compareToIgnoreCase ) ; / / good <nl> + < / source > <nl> + < p > <nl> + An example of how to configure the check for < a <nl> + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ REF " > METHOD _ REF < / a > at new line : <nl> + < / p > <nl> + < source > <nl> + & lt ; module name = " SeparatorWrap " & gt ; <nl> + & lt ; property name = " tokens " value = " METHOD _ REF " / & gt ; <nl> + & lt ; property name = " option " value = " nl " / & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + < p > <nl> An example of how to configure the check for comma at the new line is : <nl> < / p > <nl> < source >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> index 4073e07 . . 4f5264a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> @ @ - 723 , 7 + 723 , 7 @ @ public final class TokenTypes { <nl> public static final int METHOD _ CALL = GeneratedJavaTokenTypes . METHOD _ CALL ; <nl> <nl> / * * <nl> - * Part of Java 8 syntax . A reference to a method or constructor without arguments . <nl> + * A reference to a method or constructor without arguments . Part of Java 8 syntax . <nl> * The token should be used for subscribing for double colon literal . <nl> * { @ link # DOUBLE _ COLON } token does not appear in the tree . <nl> *

TEST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 85d9cfb . . 9ce7605 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 527 , 6 + 527 , 7 @ @ 
 < module name = " SeparatorWrap " > 
 < property name = " tokens " value = " DOT " / > 
 < property name = " tokens " value = " AT " / > 
 + < property name = " tokens " value = " METHOD _ REF " / > 
 < property name = " option " value = " nl " / > 
 < / module > 
 < module name = " SeparatorWrap " > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 index d344721 . . 7d21d3a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 @ @ - 1462 , 7 + 1462 , 7 @ @ public final class TokenTypes { 
 public static final int COLON = GeneratedJavaTokenTypes . COLON ; 
 
 / * * 
 - * The < code > : : < / code > ( double colon ) operator . 
 + * The < code > : : < / code > ( double colon ) separator . 
 * It is part of Java 8 syntax that is used for method reference . 
 * The token does not appear in tree , { @ link # METHOD _ REF } should be used instead . 
 * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java 
 index 7a8db0d . . bdfd31b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java 
 @ @ - 132 , 6 + 132 , 7 @ @ public class SeparatorWrapCheck 
 TokenTypes . RPAREN , 
 TokenTypes . ARRAY _ DECLARATOR , 
 TokenTypes . RBRACK , 
 + TokenTypes . METHOD _ REF , 
 } ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java 
 index abb929a . . 425372d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java 
 @ @ - 74 , 6 + 74 , 16 @ @ public class SeparatorWrapCheckTest 
 } 
 
 @ Test 
 + public void testMethodRef ( ) throws Exception { 
 + checkConfig . addAttribute ( " option " , " NL " ) ; 
 + checkConfig . addAttribute ( " tokens " , " METHOD _ REF " ) ; 
 + final String [ ] expected = { 
 + " 17 : 56 : " + getCheckMessage ( MSG _ LINE _ NEW , " : : " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputSeparatorWrapForTestMethodRef . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testGetDefaultTokens ( ) { 
 final SeparatorWrapCheck separatorWrapCheckObj = new SeparatorWrapCheck ( ) ; 
 final int [ ] actual = separatorWrapCheckObj . getDefaultTokens ( ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForTestMethodRef . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForTestMethodRef . java 
 new file mode 100644 
 index 0000000 . . fb1b869 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForTestMethodRef . java 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . separatorwrap ; 
 + 
 + import java . util . Arrays ; 
 + 
 + public class InputSeparatorWrapForTestMethodRef { 
 + 
 + void goodCase ( ) { 
 + String [ ] stringArray = { " Barbara " , " James " , " Mary " , " John " , 
 + " Patricia " , " Robert " , " Michael " , " Linda " } ; 
 + Arrays . sort ( stringArray , String 
 + : : compareToIgnoreCase ) ; 
 + } 
 + 
 + void badCase ( ) { 
 + String [ ] stringArray = { " Barbara " , " James " , " Mary " , " John " , 
 + " Patricia " , " Robert " , " Michael " , " Linda " } ; 
 + / * violation * / Arrays . sort ( stringArray , String : : 
 + compareToIgnoreCase ) ; 
 + } 
 + } 
 diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml 
 index 7aa3ea2 . . bac2b11 100644 
 - - - a / src / xdocs / config _ whitespace . xml 
 + + + b / src / xdocs / config _ whitespace . xml 
 @ @ - 1596 , 7 + 1596 , 9 @ @ import static java . math . BigInteger . ZERO ; 
 < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ARRAY _ DECLARATOR " > ARRAY _ DECLARATOR < / a > , 
 < a 
 - href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # RBRACK " > RBRACK < / a > . 
 + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # RBRACK " > RBRACK < / a > , 
 + < a 
 + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ REF " > METHOD _ REF < / a > . 
 < / td > 
 
 < td > 
 @ @ - 1635 , 6 + 1637 , 25 @ @ foo ( i , 
 s ) ; 
 < / source > 
 < p > 
 + Example for checking method reference at new line ( good case and bad case ) : 
 + < / p > 
 + < source > 
 + Arrays . sort ( stringArray , String : : / / violation 
 + compareToIgnoreCase ) ; 
 + Arrays . sort ( stringArray , String 
 + : : compareToIgnoreCase ) ; / / good 
 + < / source > 
 + < p > 
 + An example of how to configure the check for < a 
 + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ REF " > METHOD _ REF < / a > at new line : 
 + < / p > 
 + < source > 
 + & lt ; module name = " SeparatorWrap " & gt ; 
 + & lt ; property name = " tokens " value = " METHOD _ REF " / & gt ; 
 + & lt ; property name = " option " value = " nl " / & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 + < p > 
 An example of how to configure the check for comma at the new line is : 
 < / p > 
 < source >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 index 4073e07 . . 4f5264a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 @ @ - 723 , 7 + 723 , 7 @ @ public final class TokenTypes { 
 public static final int METHOD _ CALL = GeneratedJavaTokenTypes . METHOD _ CALL ; 
 
 / * * 
 - * Part of Java 8 syntax . A reference to a method or constructor without arguments . 
 + * A reference to a method or constructor without arguments . Part of Java 8 syntax . 
 * The token should be used for subscribing for double colon literal . 
 * { @ link # DOUBLE _ COLON } token does not appear in the tree . 
 *
