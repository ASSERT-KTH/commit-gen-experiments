BLEU SCORE: 0.03916449665002249

TEST MSG: Issue # 3839 : One new method to optimise design and detect empty LITERAL _ CASE . Added corresponding UTs . Updated documentation
GENERATED MSG: Coverage has been increased to 100 % in NeedBracesCheck . Issue # 1291

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> index cbd9cf3 . . 7858e6c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> @ @ - 27 , 7 + 27 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> / * * <nl> - * Checks for empty blocks . The policy to verify is specified using the { @ link <nl> + * Checks for empty blocks . This check does not validate sequential blocks . <nl> + * The policy to verify is specified using the { @ link <nl> * BlockOption } class and defaults to { @ link BlockOption # STMT } . <nl> * <nl> * < p > By default the check will check the following blocks : <nl> @ @ - 138 , 16 + 139 , 7 @ @ public class EmptyBlockCheck <nl> <nl> @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> - final DetailAST slistToken = ast . findFirstToken ( TokenTypes . SLIST ) ; <nl> - final DetailAST leftCurly ; <nl> - <nl> - if ( slistToken = = null ) { <nl> - leftCurly = ast . findFirstToken ( TokenTypes . LCURLY ) ; <nl> - } <nl> - else { <nl> - leftCurly = slistToken ; <nl> - } <nl> - <nl> + final DetailAST leftCurly = findLeftCurly ( ast ) ; <nl> if ( leftCurly ! = null ) { <nl> if ( option = = BlockOption . STMT ) { <nl> final boolean emptyBlock ; <nl> @ @ - 236 , 4 + 228 , 27 @ @ public class EmptyBlockCheck <nl> } <nl> return result ; <nl> } <nl> + <nl> + / * * <nl> + * Calculates the left curly corresponding to the block to be checked . <nl> + * <nl> + * @ param ast a { @ code DetailAST } value <nl> + * @ return the left curly corresponding to the block to be checked <nl> + * / <nl> + private static DetailAST findLeftCurly ( DetailAST ast ) { <nl> + final DetailAST leftCurly ; <nl> + final DetailAST slistAST = ast . findFirstToken ( TokenTypes . SLIST ) ; <nl> + if ( ast . getType ( ) = = TokenTypes . LITERAL _ CASE <nl> + & & ast . getNextSibling ( ) ! = null <nl> + & & ast . getNextSibling ( ) . getFirstChild ( ) . getType ( ) = = TokenTypes . SLIST ) { <nl> + leftCurly = ast . getNextSibling ( ) . getFirstChild ( ) ; <nl> + } <nl> + else if ( slistAST = = null ) { <nl> + leftCurly = ast . findFirstToken ( TokenTypes . LCURLY ) ; <nl> + } <nl> + else { <nl> + leftCurly = slistAST ; <nl> + } <nl> + return leftCurly ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java <nl> index deb792a . . e9616d4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java <nl> @ @ - 157 , 4 + 157 , 36 @ @ public class EmptyBlockCheckTest <nl> + " Cannot set property ' option ' to ' invalid _ option ' in module " ) ) ; <nl> } <nl> } <nl> + <nl> + @ Test <nl> + public void testAllowEmptyCaseWithText ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( EmptyBlockCheck . class ) ; <nl> + checkConfig . addAttribute ( " option " , BlockOption . TEXT . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " tokens " , " LITERAL _ CASE " ) ; <nl> + final String [ ] expected = { <nl> + " 12 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , <nl> + " 18 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , <nl> + " 29 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , <nl> + " 31 : 37 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , <nl> + " 32 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputEmptyCase . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testForbidCaseWithoutStmt ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( EmptyBlockCheck . class ) ; <nl> + checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " tokens " , " LITERAL _ CASE " ) ; <nl> + final String [ ] expected = { <nl> + " 12 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> + " 18 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> + " 22 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> + " 29 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> + " 31 : 37 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> + " 32 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> + " 32 : 40 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputEmptyCase . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputEmptyCase . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputEmptyCase . java <nl> new file mode 100644 <nl> index 0000000 . . b8c1df3 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputEmptyCase . java <nl> @ @ - 0 , 0 + 1 , 36 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Input test file for testing empty LITERAL _ CASE . <nl> + / / Created : 2017 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . blocks ; <nl> + <nl> + class InputEmptyCase <nl> + { <nl> + void method1 ( int a ) { <nl> + switch ( a ) { } <nl> + switch ( a ) { case 1 : ; } / / no violation <nl> + switch ( a ) { case 1 : { } } / / 1 violation <nl> + switch ( a ) { <nl> + case 1 : <nl> + } <nl> + switch ( a ) { <nl> + case 1 : / / 1 violation <nl> + { } <nl> + } <nl> + switch ( a ) { <nl> + case 1 : / / 1 violation if checking statements <nl> + { / / none if checking text <nl> + } <nl> + } <nl> + } <nl> + <nl> + public void method2 ( char c ) { <nl> + switch ( c ) { case 0 : } / / no violation <nl> + switch ( c ) { case 0 : { } method1 ( 1 ) ; } / / 1 violation <nl> + switch ( c ) { case 0 : method1 ( 0 ) ; { } } / / no violation <nl> + switch ( c ) { case 0 : case 1 : { } } / / 1 violation <nl> + switch ( c ) { case 0 : { } case 1 : { / / 2 violations if checking statements <nl> + } <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / xdocs / checks . xml b / src / xdocs / checks . xml <nl> index 6570ebf . . dca67fa 100644 <nl> - - - a / src / xdocs / checks . xml <nl> + + + b / src / xdocs / checks . xml <nl> @ @ - 165 , 7 + 165 , 7 @ @ <nl> < / tr > <nl> < tr > <nl> < td > < a href = " config _ blocks . html # EmptyBlock " > EmptyBlock < / a > < / td > <nl> - < td > Checks for empty blocks . < / td > <nl> + < td > Checks for empty blocks but does not validate sequential blocks . < / td > <nl> < / tr > <nl> < tr > <nl> < td > < a href = " config _ blocks . html # EmptyCatchBlock " > EmptyCatchBlock < / a > < / td > <nl> diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml <nl> index 65a4327 . . 4f157e5 100644 <nl> - - - a / src / xdocs / config _ blocks . xml <nl> + + + b / src / xdocs / config _ blocks . xml <nl> @ @ - 149 , 7 + 149 , 7 @ @ switch ( a ) <nl> <nl> < section name = " EmptyBlock " > <nl> < subsection name = " Description " > <nl> - < p > Checks for empty blocks . < / p > <nl> + < p > Checks for empty blocks . This check does not validate sequential blocks . < / p > <nl> < / subsection > <nl> <nl> < subsection name = " Properties " >
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index e387638 . . c990b55 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1149 , 7 + 1149 , 7 @ @ <nl> <nl> < regex > < pattern > . * . checks . imports . CustomImportOrderCheck < / pattern > < branchRate > 98 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . MethodCallLineWrapHandler < / pattern > < branchRate > 0 < / branchRate > < lineRate > 0 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . indentation . ObjectBlockHandler < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> + < regex > < pattern > . * . checks . indentation . MethodDefHandler < / pattern > < branchRate > 87 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . SynchronizedHandler < / pattern > < branchRate > 100 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> <nl> < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java <nl> index 54e479a . . 73c577d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java <nl> @ @ - 89 , 21 + 89 , 13 @ @ public class ObjectBlockHandler extends BlockParentHandler { <nl> } <nl> <nl> @ Override <nl> - protected boolean rcurlyMustStart ( ) { <nl> - return false ; <nl> - } <nl> - <nl> - @ Override <nl> protected void checkRCurly ( ) { <nl> - final DetailAST lcurly = getLCurly ( ) ; <nl> final DetailAST rcurly = getRCurly ( ) ; <nl> final int rcurlyPos = expandedTabsColumnNo ( rcurly ) ; <nl> final IndentLevel level = curlyLevel ( ) ; <nl> level . addAcceptedIndent ( level . getFirstIndentLevel ( ) + getLineWrappingIndent ( ) ) ; <nl> <nl> - if ( ! level . accept ( rcurlyPos ) <nl> - & & ( rcurlyMustStart ( ) | | startsLine ( rcurly ) ) <nl> - & & ! areOnSameLine ( rcurly , lcurly ) ) { <nl> + if ( ! level . accept ( rcurlyPos ) & & startsLine ( rcurly ) ) { <nl> logError ( rcurly , " rcurly " , rcurlyPos , curlyLevel ( ) ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 index cbd9cf3 . . 7858e6c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 @ @ - 27 , 7 + 27 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 / * * 
 - * Checks for empty blocks . The policy to verify is specified using the { @ link 
 + * Checks for empty blocks . This check does not validate sequential blocks . 
 + * The policy to verify is specified using the { @ link 
 * BlockOption } class and defaults to { @ link BlockOption # STMT } . 
 * 
 * < p > By default the check will check the following blocks : 
 @ @ - 138 , 16 + 139 , 7 @ @ public class EmptyBlockCheck 
 
 @ Override 
 public void visitToken ( DetailAST ast ) { 
 - final DetailAST slistToken = ast . findFirstToken ( TokenTypes . SLIST ) ; 
 - final DetailAST leftCurly ; 
 - 
 - if ( slistToken = = null ) { 
 - leftCurly = ast . findFirstToken ( TokenTypes . LCURLY ) ; 
 - } 
 - else { 
 - leftCurly = slistToken ; 
 - } 
 - 
 + final DetailAST leftCurly = findLeftCurly ( ast ) ; 
 if ( leftCurly ! = null ) { 
 if ( option = = BlockOption . STMT ) { 
 final boolean emptyBlock ; 
 @ @ - 236 , 4 + 228 , 27 @ @ public class EmptyBlockCheck 
 } 
 return result ; 
 } 
 + 
 + / * * 
 + * Calculates the left curly corresponding to the block to be checked . 
 + * 
 + * @ param ast a { @ code DetailAST } value 
 + * @ return the left curly corresponding to the block to be checked 
 + * / 
 + private static DetailAST findLeftCurly ( DetailAST ast ) { 
 + final DetailAST leftCurly ; 
 + final DetailAST slistAST = ast . findFirstToken ( TokenTypes . SLIST ) ; 
 + if ( ast . getType ( ) = = TokenTypes . LITERAL _ CASE 
 + & & ast . getNextSibling ( ) ! = null 
 + & & ast . getNextSibling ( ) . getFirstChild ( ) . getType ( ) = = TokenTypes . SLIST ) { 
 + leftCurly = ast . getNextSibling ( ) . getFirstChild ( ) ; 
 + } 
 + else if ( slistAST = = null ) { 
 + leftCurly = ast . findFirstToken ( TokenTypes . LCURLY ) ; 
 + } 
 + else { 
 + leftCurly = slistAST ; 
 + } 
 + return leftCurly ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java 
 index deb792a . . e9616d4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheckTest . java 
 @ @ - 157 , 4 + 157 , 36 @ @ public class EmptyBlockCheckTest 
 + " Cannot set property ' option ' to ' invalid _ option ' in module " ) ) ; 
 } 
 } 
 + 
 + @ Test 
 + public void testAllowEmptyCaseWithText ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( EmptyBlockCheck . class ) ; 
 + checkConfig . addAttribute ( " option " , BlockOption . TEXT . toString ( ) ) ; 
 + checkConfig . addAttribute ( " tokens " , " LITERAL _ CASE " ) ; 
 + final String [ ] expected = { 
 + " 12 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , 
 + " 18 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , 
 + " 29 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , 
 + " 31 : 37 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , 
 + " 32 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ EMPTY , " case " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputEmptyCase . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testForbidCaseWithoutStmt ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( EmptyBlockCheck . class ) ; 
 + checkConfig . addAttribute ( " option " , BlockOption . STMT . toString ( ) ) ; 
 + checkConfig . addAttribute ( " tokens " , " LITERAL _ CASE " ) ; 
 + final String [ ] expected = { 
 + " 12 : 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 + " 18 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 + " 22 : 13 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 + " 29 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 + " 31 : 37 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 + " 32 : 29 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 + " 32 : 40 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NO _ STMT , " case " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputEmptyCase . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputEmptyCase . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputEmptyCase . java 
 new file mode 100644 
 index 0000000 . . b8c1df3 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputEmptyCase . java 
 @ @ - 0 , 0 + 1 , 36 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Input test file for testing empty LITERAL _ CASE . 
 + / / Created : 2017 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . blocks ; 
 + 
 + class InputEmptyCase 
 + { 
 + void method1 ( int a ) { 
 + switch ( a ) { } 
 + switch ( a ) { case 1 : ; } / / no violation 
 + switch ( a ) { case 1 : { } } / / 1 violation 
 + switch ( a ) { 
 + case 1 : 
 + } 
 + switch ( a ) { 
 + case 1 : / / 1 violation 
 + { } 
 + } 
 + switch ( a ) { 
 + case 1 : / / 1 violation if checking statements 
 + { / / none if checking text 
 + } 
 + } 
 + } 
 + 
 + public void method2 ( char c ) { 
 + switch ( c ) { case 0 : } / / no violation 
 + switch ( c ) { case 0 : { } method1 ( 1 ) ; } / / 1 violation 
 + switch ( c ) { case 0 : method1 ( 0 ) ; { } } / / no violation 
 + switch ( c ) { case 0 : case 1 : { } } / / 1 violation 
 + switch ( c ) { case 0 : { } case 1 : { / / 2 violations if checking statements 
 + } 
 + } 
 + } 
 + } 
 diff - - git a / src / xdocs / checks . xml b / src / xdocs / checks . xml 
 index 6570ebf . . dca67fa 100644 
 - - - a / src / xdocs / checks . xml 
 + + + b / src / xdocs / checks . xml 
 @ @ - 165 , 7 + 165 , 7 @ @ 
 < / tr > 
 < tr > 
 < td > < a href = " config _ blocks . html # EmptyBlock " > EmptyBlock < / a > < / td > 
 - < td > Checks for empty blocks . < / td > 
 + < td > Checks for empty blocks but does not validate sequential blocks . < / td > 
 < / tr > 
 < tr > 
 < td > < a href = " config _ blocks . html # EmptyCatchBlock " > EmptyCatchBlock < / a > < / td > 
 diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml 
 index 65a4327 . . 4f157e5 100644 
 - - - a / src / xdocs / config _ blocks . xml 
 + + + b / src / xdocs / config _ blocks . xml 
 @ @ - 149 , 7 + 149 , 7 @ @ switch ( a ) 
 
 < section name = " EmptyBlock " > 
 < subsection name = " Description " > 
 - < p > Checks for empty blocks . < / p > 
 + < p > Checks for empty blocks . This check does not validate sequential blocks . < / p > 
 < / subsection > 
 
 < subsection name = " Properties " >

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index e387638 . . c990b55 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1149 , 7 + 1149 , 7 @ @ 
 
 < regex > < pattern > . * . checks . imports . CustomImportOrderCheck < / pattern > < branchRate > 98 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . MethodCallLineWrapHandler < / pattern > < branchRate > 0 < / branchRate > < lineRate > 0 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . indentation . ObjectBlockHandler < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 + < regex > < pattern > . * . checks . indentation . MethodDefHandler < / pattern > < branchRate > 87 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . SynchronizedHandler < / pattern > < branchRate > 100 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 
 < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java 
 index 54e479a . . 73c577d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java 
 @ @ - 89 , 21 + 89 , 13 @ @ public class ObjectBlockHandler extends BlockParentHandler { 
 } 
 
 @ Override 
 - protected boolean rcurlyMustStart ( ) { 
 - return false ; 
 - } 
 - 
 - @ Override 
 protected void checkRCurly ( ) { 
 - final DetailAST lcurly = getLCurly ( ) ; 
 final DetailAST rcurly = getRCurly ( ) ; 
 final int rcurlyPos = expandedTabsColumnNo ( rcurly ) ; 
 final IndentLevel level = curlyLevel ( ) ; 
 level . addAcceptedIndent ( level . getFirstIndentLevel ( ) + getLineWrappingIndent ( ) ) ; 
 
 - if ( ! level . accept ( rcurlyPos ) 
 - & & ( rcurlyMustStart ( ) | | startsLine ( rcurly ) ) 
 - & & ! areOnSameLine ( rcurly , lcurly ) ) { 
 + if ( ! level . accept ( rcurlyPos ) & & startsLine ( rcurly ) ) { 
 logError ( rcurly , " rcurly " , rcurlyPos , curlyLevel ( ) ) ; 
 } 
 }
