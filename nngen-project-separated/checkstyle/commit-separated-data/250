BLEU SCORE: 0.9193227152249185

TEST MSG: config : bump maven - javadoc - plugin to 3 . 0 . 1
GENERATED MSG: config : bump maven - javadoc - plugin to 3 . 0 . 0

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index a9de769 . . 8f3daed 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 380 , 7 + 380 , 7 @ @ <nl> < plugin > <nl> < groupId > org . apache . maven . plugins < / groupId > <nl> < artifactId > maven - javadoc - plugin < / artifactId > <nl> - < version > 3 . 0 . 0 < / version > <nl> + < version > 3 . 0 . 1 < / version > <nl> < configuration > <nl> < source > $ { java . version } < / source > <nl> < failOnError > true < / failOnError >
NEAREST DIFF (one line): diff - - git a / shippable . yml b / shippable . yml <nl> index 5cd48b1 . . 15243fb 100644 <nl> - - - a / shippable . yml <nl> + + + b / shippable . yml <nl> @ @ - 61 , 7 + 61 , 7 @ @ build : <nl> echo " Survived items found in reports , build will be failed " <nl> exit 1 <nl> fi <nl> - if [ [ $ POST _ ACTION = = ' check _ survived _ imports ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " - - exclude = " ImportOrderCheck . * " target / | cat | wc - l ) > 0 ] ] ; then <nl> + if [ [ $ POST _ ACTION = = ' check _ survived _ imports ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " target / | cat | wc - l ) > 0 ] ] ; then <nl> echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " - - exclude = " ImportOrderCheck . * " target / | cat ) <nl> echo " Survived items found in reports , build will be failed " <nl> exit 1 <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> index f121e5f . . a6f08bf 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> @ @ - 638 , 21 + 638 , 23 @ @ public class ImportOrderCheck <nl> * / <nl> private int getGroupNumber ( String name ) { <nl> int bestIndex = groups . length ; <nl> - int bestLength = - 1 ; <nl> - int bestPos = 0 ; <nl> + int bestEnd = - 1 ; <nl> + int bestPos = Integer . MAX _ VALUE ; <nl> <nl> / / find out what group this belongs in <nl> / / loop over groups and get index <nl> for ( int i = 0 ; i < groups . length ; i + + ) { <nl> final Matcher matcher = groups [ i ] . matcher ( name ) ; <nl> - while ( matcher . find ( ) ) { <nl> - final int length = matcher . end ( ) - matcher . start ( ) ; <nl> - if ( length > bestLength <nl> - | | length = = bestLength & & matcher . start ( ) < bestPos ) { <nl> + if ( matcher . find ( ) ) { <nl> + if ( matcher . start ( ) < bestPos ) { <nl> bestIndex = i ; <nl> - bestLength = length ; <nl> + bestEnd = matcher . end ( ) ; <nl> bestPos = matcher . start ( ) ; <nl> } <nl> + else if ( matcher . start ( ) = = bestPos & & matcher . end ( ) > bestEnd ) { <nl> + bestIndex = i ; <nl> + bestEnd = matcher . end ( ) ; <nl> + } <nl> } <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> index 249f237 . . df5ab75 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> @ @ - 191 , 6 + 191 , 18 @ @ public class ImportOrderCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testContainerCaseInsensitive ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( ImportOrderCheck . class ) ; <nl> + checkConfig . addAttribute ( " option " , " top " ) ; <nl> + checkConfig . addAttribute ( " caseSensitive " , " false " ) ; <nl> + checkConfig . addAttribute ( " useContainerOrderingForStatic " , " true " ) ; <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + <nl> + verify ( checkConfig , getNonCompilablePath ( " InputImportOrderEclipseStaticCaseSensitive . java " ) , <nl> + expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testInvalidOption ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createModuleConfig ( ImportOrderCheck . class ) ; <nl> @ @ - 299 , 6 + 311 , 17 @ @ public class ImportOrderCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testGetGroupNumber ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createModuleConfig ( ImportOrderCheck . class ) ; <nl> + checkConfig . addAttribute ( " groups " , " / javax / , sun , / ^ java / , org , / java / " ) ; <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + <nl> + verify ( checkConfig , <nl> + getNonCompilablePath ( " InputImportOrderGetGroupNumber . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testHonorsTokenProperty ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createModuleConfig ( ImportOrderCheck . class ) ; <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderEclipseStaticCaseSensitive . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderEclipseStaticCaseSensitive . java <nl> new file mode 100644 <nl> index 0000000 . . e47f52f <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderEclipseStaticCaseSensitive . java <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . imports ; <nl> + <nl> + import static io . netty . handler . codec . http . HttpConstants . COLON ; <nl> + import static io . netty . handler . codec . http . HttpHeaders . addHeader ; <nl> + import static io . netty . handler . codec . http . HttpHeaders . setHeader ; <nl> + import static io . netty . handler . codec . http . HttpHeaders . Names . addDate ; <nl> + import static io . netty . handler . codec . http . HttpHeaders . NAMES . DATE ; <nl> + <nl> + public class InputImportOrderEclipseStaticCaseSensitive { <nl> + } <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderGetGroupNumber . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderGetGroupNumber . java <nl> new file mode 100644 <nl> index 0000000 . . 3f632f5 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderGetGroupNumber . java <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . imports ; <nl> + <nl> + import javax . io . File ; <nl> + import sun . tools . util . ModifierFilter . ALL _ ACCESS ; <nl> + import java . test . javax ; <nl> + import org . junit . Test ; <nl> + <nl> + public class InputImportOrderGetGroupNumber { <nl> + } <nl> + <nl> diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml <nl> index d1f43b4 . . dc64d2f 100644 <nl> - - - a / src / xdocs / config _ imports . xml <nl> + + + b / src / xdocs / config _ imports . xml <nl> @ @ - 1292 , 7 + 1292 , 7 @ @ import java . util . stream . IntStream ; <nl> < tr > <nl> < td > ordered < / td > <nl> < td > whether imports within group should be sorted <nl> - ( It don ' t affect soring for static imports . ) < / td > <nl> + ( It doesn ' t affect sorting for static imports . ) < / td > <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> < td > true < / td > <nl> < td > 3 . 2 < / td > <nl> @ @ - 1321 , 7 + 1321 , 7 @ @ import java . util . stream . IntStream ; <nl> < td > sortStaticImportsAlphabetically < / td > <nl> < td > whether < b > static imports < / b > grouped by < b > top < / b > or < b > bottom < / b > option <nl> are sorted alphabetically or not . <nl> - Attention : it is applied for all static imports as one group . < / td > <nl> + Attention : It is applied to all static imports as one group . < / td > > <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> < td > false < / td > <nl> < td > 6 . 5 < / td >

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index a9de769 . . 8f3daed 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 380 , 7 + 380 , 7 @ @ 
 < plugin > 
 < groupId > org . apache . maven . plugins < / groupId > 
 < artifactId > maven - javadoc - plugin < / artifactId > 
 - < version > 3 . 0 . 0 < / version > 
 + < version > 3 . 0 . 1 < / version > 
 < configuration > 
 < source > $ { java . version } < / source > 
 < failOnError > true < / failOnError >

NEAREST DIFF:
diff - - git a / shippable . yml b / shippable . yml 
 index 5cd48b1 . . 15243fb 100644 
 - - - a / shippable . yml 
 + + + b / shippable . yml 
 @ @ - 61 , 7 + 61 , 7 @ @ build : 
 echo " Survived items found in reports , build will be failed " 
 exit 1 
 fi 
 - if [ [ $ POST _ ACTION = = ' check _ survived _ imports ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " - - exclude = " ImportOrderCheck . * " target / | cat | wc - l ) > 0 ] ] ; then 
 + if [ [ $ POST _ ACTION = = ' check _ survived _ imports ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " target / | cat | wc - l ) > 0 ] ] ; then 
 echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " - - exclude = " ImportOrderCheck . * " target / | cat ) 
 echo " Survived items found in reports , build will be failed " 
 exit 1 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 index f121e5f . . a6f08bf 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 @ @ - 638 , 21 + 638 , 23 @ @ public class ImportOrderCheck 
 * / 
 private int getGroupNumber ( String name ) { 
 int bestIndex = groups . length ; 
 - int bestLength = - 1 ; 
 - int bestPos = 0 ; 
 + int bestEnd = - 1 ; 
 + int bestPos = Integer . MAX _ VALUE ; 
 
 / / find out what group this belongs in 
 / / loop over groups and get index 
 for ( int i = 0 ; i < groups . length ; i + + ) { 
 final Matcher matcher = groups [ i ] . matcher ( name ) ; 
 - while ( matcher . find ( ) ) { 
 - final int length = matcher . end ( ) - matcher . start ( ) ; 
 - if ( length > bestLength 
 - | | length = = bestLength & & matcher . start ( ) < bestPos ) { 
 + if ( matcher . find ( ) ) { 
 + if ( matcher . start ( ) < bestPos ) { 
 bestIndex = i ; 
 - bestLength = length ; 
 + bestEnd = matcher . end ( ) ; 
 bestPos = matcher . start ( ) ; 
 } 
 + else if ( matcher . start ( ) = = bestPos & & matcher . end ( ) > bestEnd ) { 
 + bestIndex = i ; 
 + bestEnd = matcher . end ( ) ; 
 + } 
 } 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 index 249f237 . . df5ab75 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 @ @ - 191 , 6 + 191 , 18 @ @ public class ImportOrderCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testContainerCaseInsensitive ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( ImportOrderCheck . class ) ; 
 + checkConfig . addAttribute ( " option " , " top " ) ; 
 + checkConfig . addAttribute ( " caseSensitive " , " false " ) ; 
 + checkConfig . addAttribute ( " useContainerOrderingForStatic " , " true " ) ; 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + 
 + verify ( checkConfig , getNonCompilablePath ( " InputImportOrderEclipseStaticCaseSensitive . java " ) , 
 + expected ) ; 
 + } 
 + 
 + @ Test 
 public void testInvalidOption ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createModuleConfig ( ImportOrderCheck . class ) ; 
 @ @ - 299 , 6 + 311 , 17 @ @ public class ImportOrderCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testGetGroupNumber ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createModuleConfig ( ImportOrderCheck . class ) ; 
 + checkConfig . addAttribute ( " groups " , " / javax / , sun , / ^ java / , org , / java / " ) ; 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + 
 + verify ( checkConfig , 
 + getNonCompilablePath ( " InputImportOrderGetGroupNumber . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testHonorsTokenProperty ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createModuleConfig ( ImportOrderCheck . class ) ; 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderEclipseStaticCaseSensitive . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderEclipseStaticCaseSensitive . java 
 new file mode 100644 
 index 0000000 . . e47f52f 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderEclipseStaticCaseSensitive . java 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . imports ; 
 + 
 + import static io . netty . handler . codec . http . HttpConstants . COLON ; 
 + import static io . netty . handler . codec . http . HttpHeaders . addHeader ; 
 + import static io . netty . handler . codec . http . HttpHeaders . setHeader ; 
 + import static io . netty . handler . codec . http . HttpHeaders . Names . addDate ; 
 + import static io . netty . handler . codec . http . HttpHeaders . NAMES . DATE ; 
 + 
 + public class InputImportOrderEclipseStaticCaseSensitive { 
 + } 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderGetGroupNumber . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderGetGroupNumber . java 
 new file mode 100644 
 index 0000000 . . 3f632f5 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / imports / importorder / InputImportOrderGetGroupNumber . java 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . imports ; 
 + 
 + import javax . io . File ; 
 + import sun . tools . util . ModifierFilter . ALL _ ACCESS ; 
 + import java . test . javax ; 
 + import org . junit . Test ; 
 + 
 + public class InputImportOrderGetGroupNumber { 
 + } 
 + 
 diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml 
 index d1f43b4 . . dc64d2f 100644 
 - - - a / src / xdocs / config _ imports . xml 
 + + + b / src / xdocs / config _ imports . xml 
 @ @ - 1292 , 7 + 1292 , 7 @ @ import java . util . stream . IntStream ; 
 < tr > 
 < td > ordered < / td > 
 < td > whether imports within group should be sorted 
 - ( It don ' t affect soring for static imports . ) < / td > 
 + ( It doesn ' t affect sorting for static imports . ) < / td > 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 < td > true < / td > 
 < td > 3 . 2 < / td > 
 @ @ - 1321 , 7 + 1321 , 7 @ @ import java . util . stream . IntStream ; 
 < td > sortStaticImportsAlphabetically < / td > 
 < td > whether < b > static imports < / b > grouped by < b > top < / b > or < b > bottom < / b > option 
 are sorted alphabetically or not . 
 - Attention : it is applied for all static imports as one group . < / td > 
 + Attention : It is applied to all static imports as one group . < / td > > 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 < td > false < / td > 
 < td > 6 . 5 < / td >
