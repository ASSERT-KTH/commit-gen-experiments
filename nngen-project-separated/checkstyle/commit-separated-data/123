BLEU SCORE: 0.3549481056010053

TEST MSG: Issue # 6272 : added FALSE _ RETURNS pitest mutator
GENERATED MSG: Issue # 6264 : added TRUE _ RETURNS pitest mutator

TEST DIFF (one line): diff - - git a / . ci / pitest . sh b / . ci / pitest . sh <nl> index 1a2475a . . 108e67c 100755 <nl> - - - a / . ci / pitest . sh <nl> + + + b / . ci / pitest . sh <nl> @ @ - 50 , 7 + 50 , 6 @ @ pitest - coding ) <nl> " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > classNames . clear ( ) ; < / span > < / pre > < / td > < / tr > " <nl> " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > imports . clear ( ) ; < / span > < / pre > < / td > < / tr > " <nl> " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > instantiations . clear ( ) ; < / span > < / pre > < / td > < / tr > " <nl> - " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > processClassDef ( ast ) ; < / span > < / pre > < / td > < / tr > " <nl> " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; newNode . getColumnNo ( ) & # 62 ; currentNode . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( newNode . getLineNo ( ) & # 62 ; currentNode . getLineNo ( ) < / span > < / pre > < / td > < / tr > " <nl> " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | newNode . getLineNo ( ) = = currentNode . getLineNo ( ) < / span > < / pre > < / td > < / tr > " <nl> @ @ - 133 , 8 + 132 , 6 @ @ pitest - javadoc ) <nl> " JavadocPackageCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > directoriesChecked . clear ( ) ; < / span > < / pre > < / td > < / tr > " <nl> " JavadocPackageCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > setFileExtensions ( & # 34 ; java & # 34 ; ) ; < / span > < / pre > < / td > < / tr > " <nl> " JavadocPackageCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > super . beginProcessing ( charset ) ; < / span > < / pre > < / td > < / tr > " <nl> - " JavadocParagraphCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( nextNode . getType ( ) = = JavadocTokenTypes . TEXT < / span > < / pre > < / td > < / tr > " <nl> - " JavadocParagraphCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | nextNode . getType ( ) = = JavadocTokenTypes . HTML _ ELEMENT ) { < / span > < / pre > < / td > < / tr > " <nl> " JavadocStyleCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; builder . charAt ( index - 1 ) = = & # 39 ; * & # 39 ; ) { < / span > < / pre > < / td > < / tr > " <nl> " JavadocStyleCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( index & # 62 ; 0 & # 38 ; & # 38 ; builder . charAt ( index ) = = & # 39 ; / & # 39 ; < / span > < / pre > < / td > < / tr > " <nl> " JavadocStyleCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > trimTail ( builder ) ; < / span > < / pre > < / td > < / tr > " <nl> diff - - git a / pom . xml b / pom . xml <nl> index 0902ee8 . . 653de07 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1779 , 6 + 1779 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 1850 , 6 + 1851 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 1893 , 6 + 1895 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 1936 , 6 + 1939 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 1979 , 6 + 1983 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2022 , 6 + 2027 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2065 , 6 + 2071 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2108 , 6 + 2115 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2151 , 6 + 2159 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2194 , 6 + 2203 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2237 , 6 + 2247 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2280 , 6 + 2291 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2329 , 6 + 2341 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2372 , 6 + 2385 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2415 , 6 + 2429 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2459 , 6 + 2474 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2502 , 6 + 2518 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2542 , 6 + 2559 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2614 , 6 + 2632 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2671 , 6 + 2690 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2711 , 6 + 2731 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2800 , 6 + 2821 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2856 , 6 + 2878 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2901 , 6 + 2924 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2962 , 6 + 2986 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 3030 , 6 + 3055 , 7 @ @ <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> + < mutator > FALSE _ RETURNS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java <nl> index 8e43b5f . . 6c7ec4f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java <nl> @ @ - 233 , 8 + 233 , 8 @ @ public class IllegalInstantiationCheck <nl> } <nl> <nl> for ( String illegal : classes ) { <nl> - if ( isStandardClass ( className , illegal ) <nl> - | | isSamePackage ( className , pkgNameLen , illegal ) ) { <nl> + if ( isSamePackage ( className , pkgNameLen , illegal ) <nl> + | | isStandardClass ( className , illegal ) ) { <nl> fullClassName = illegal ; <nl> } <nl> else { <nl> @ @ - 295 , 29 + 295 , 6 @ @ public class IllegalInstantiationCheck <nl> } <nl> <nl> / * * <nl> - * Is class of the same package . <nl> - * @ param className class name <nl> - * @ return true if same package class <nl> - * / <nl> - private boolean isSamePackage ( String className ) { <nl> - boolean isSamePackage = false ; <nl> - try { <nl> - final ClassLoader classLoader = getClassLoader ( ) ; <nl> - if ( classLoader ! = null ) { <nl> - final String fqName = pkgName + " . " + className ; <nl> - classLoader . loadClass ( fqName ) ; <nl> - / / no ClassNotFoundException , fqName is a known class <nl> - isSamePackage = true ; <nl> - } <nl> - } <nl> - catch ( final ClassNotFoundException ignored ) { <nl> - / / not a class from the same package <nl> - isSamePackage = false ; <nl> - } <nl> - return isSamePackage ; <nl> - } <nl> - <nl> - / * * <nl> * Is Standard Class . <nl> * @ param className class name <nl> * @ param illegal illegal value <nl> @ @ - 336 , 9 + 313 , 8 @ @ public class IllegalInstantiationCheck <nl> / / not to java . lang . Boolean <nl> <nl> final boolean isSameFile = classNames . contains ( className ) ; <nl> - final boolean isSamePackage = isSamePackage ( className ) ; <nl> <nl> - if ( ! isSameFile & & ! isSamePackage ) { <nl> + if ( ! isSameFile ) { <nl> isStandardClass = true ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java <nl> index 7ed7c9a . . ddb6bde 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java <nl> @ @ - 140 , 7 + 140 , 7 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { <nl> * / <nl> private void checkEmptyLine ( DetailNode newline ) { <nl> final DetailNode nearestToken = getNearestNode ( newline ) ; <nl> - if ( ! isLastEmptyLine ( newline ) & & nearestToken . getType ( ) = = JavadocTokenTypes . TEXT <nl> + if ( nearestToken . getType ( ) = = JavadocTokenTypes . TEXT <nl> & & ! CommonUtil . isBlank ( nearestToken . getText ( ) ) ) { <nl> log ( newline . getLineNumber ( ) , MSG _ TAG _ AFTER ) ; <nl> } <nl> @ @ - 237 , 26 + 237 , 6 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { <nl> } <nl> <nl> / * * <nl> - * Tests if NEWLINE node is a last node in javadoc . <nl> - * @ param newLine NEWLINE node . <nl> - * @ return true , if NEWLINE node is a last node in javadoc . <nl> - * / <nl> - private static boolean isLastEmptyLine ( DetailNode newLine ) { <nl> - boolean result = true ; <nl> - DetailNode nextNode = JavadocUtil . getNextSibling ( newLine ) ; <nl> - while ( nextNode ! = null & & nextNode . getType ( ) ! = JavadocTokenTypes . JAVADOC _ TAG ) { <nl> - if ( nextNode . getType ( ) = = JavadocTokenTypes . TEXT <nl> - & & ! CommonUtil . isBlank ( nextNode . getText ( ) ) <nl> - | | nextNode . getType ( ) = = JavadocTokenTypes . HTML _ ELEMENT ) { <nl> - result = false ; <nl> - break ; <nl> - } <nl> - nextNode = JavadocUtil . getNextSibling ( nextNode ) ; <nl> - } <nl> - return result ; <nl> - } <nl> - <nl> - / * * <nl> * Tests whether the paragraph tag is immediately followed by the text . <nl> * @ param tag html tag . <nl> * @ return true , if the paragraph tag is immediately followed by the text . <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java <nl> index e8ccd63 . . 78809d4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java <nl> @ @ - 21 , 19 + 21 , 12 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . IllegalInstantiationCheck . MSG _ KEY ; <nl> <nl> - import java . io . File ; <nl> - import java . nio . charset . StandardCharsets ; <nl> - import java . util . SortedSet ; <nl> - <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> - import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> - import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> <nl> @ @ - 78 , 6 + 71 , 18 @ @ public class IllegalInstantiationCheckTest <nl> } <nl> <nl> @ Test <nl> + public void testSameClassNameAsJavaLang ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createModuleConfig ( IllegalInstantiationCheck . class ) ; <nl> + checkConfig . addAttribute ( <nl> + " classes " , <nl> + " java . lang . InputTest " ) ; <nl> + final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , getPath ( " InputIllegalInstantiationSameClassNameJavaLang . java " ) , <nl> + expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testJava8 ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createModuleConfig ( IllegalInstantiationCheck . class ) ; <nl> @ @ - 132 , 59 + 137 , 6 @ @ public class IllegalInstantiationCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testNullClassLoader ( ) throws Exception { <nl> - final DetailAST exprAst = new DetailAST ( ) ; <nl> - exprAst . setType ( TokenTypes . EXPR ) ; <nl> - <nl> - final DetailAST newAst = new DetailAST ( ) ; <nl> - newAst . setType ( TokenTypes . LITERAL _ NEW ) ; <nl> - newAst . setLineNo ( 1 ) ; <nl> - newAst . setColumnNo ( 1 ) ; <nl> - <nl> - final DetailAST identAst = new DetailAST ( ) ; <nl> - identAst . setType ( TokenTypes . IDENT ) ; <nl> - identAst . setText ( " Boolean " ) ; <nl> - <nl> - final DetailAST lparenAst = new DetailAST ( ) ; <nl> - lparenAst . setType ( TokenTypes . LPAREN ) ; <nl> - <nl> - final DetailAST elistAst = new DetailAST ( ) ; <nl> - elistAst . setType ( TokenTypes . ELIST ) ; <nl> - <nl> - final DetailAST rparenAst = new DetailAST ( ) ; <nl> - rparenAst . setType ( TokenTypes . RPAREN ) ; <nl> - <nl> - exprAst . addChild ( newAst ) ; <nl> - newAst . addChild ( identAst ) ; <nl> - identAst . setNextSibling ( lparenAst ) ; <nl> - lparenAst . setNextSibling ( elistAst ) ; <nl> - elistAst . setNextSibling ( rparenAst ) ; <nl> - <nl> - final IllegalInstantiationCheck check = new IllegalInstantiationCheck ( ) ; <nl> - final File inputFile = new File ( getNonCompilablePath ( " InputIllegalInstantiationLang . java " ) ) ; <nl> - check . setFileContents ( new FileContents ( new FileText ( inputFile , <nl> - StandardCharsets . UTF _ 8 . name ( ) ) ) ) ; <nl> - check . configure ( createModuleConfig ( IllegalInstantiationCheck . class ) ) ; <nl> - check . setClasses ( " java . lang . Boolean " ) ; <nl> - <nl> - check . visitToken ( newAst ) ; <nl> - final SortedSet < LocalizedMessage > messages1 = check . getMessages ( ) ; <nl> - <nl> - Assert . assertEquals ( " No exception messages expected " , 0 , messages1 . size ( ) ) ; <nl> - <nl> - check . finishTree ( newAst ) ; <nl> - final SortedSet < LocalizedMessage > messages2 = check . getMessages ( ) ; <nl> - <nl> - final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 1 , <nl> - " com . puppycrawl . tools . checkstyle . checks . coding . messages " , " instantiation . avoid " , <nl> - new String [ ] { " java . lang . Boolean " } , null , <nl> - getClass ( ) , null ) ; <nl> - Assert . assertEquals ( " Invalid exception message " , <nl> - addExceptionMessage . getMessage ( ) , <nl> - messages2 . first ( ) . getMessage ( ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> public void testTokensNotNull ( ) { <nl> final IllegalInstantiationCheck check = new IllegalInstantiationCheck ( ) ; <nl> Assert . assertNotNull ( " Acceptable tokens should not be null " , check . getAcceptableTokens ( ) ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegalinstantiation / InputIllegalInstantiationSameClassNameJavaLang . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegalinstantiation / InputIllegalInstantiationSameClassNameJavaLang . java <nl> new file mode 100644 <nl> index 0000000 . . 0a79dcb <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegalinstantiation / InputIllegalInstantiationSameClassNameJavaLang . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding . illegalinstantiation ; <nl> + <nl> + public class InputIllegalInstantiationSameClassNameJavaLang <nl> + { <nl> + InputTest obj = new InputTest ( ) ; <nl> + } <nl> + class InputTest { <nl> + }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> index b058a21 . . aaddaf2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> @ @ - 297 , 7 + 297 , 8 @ @ public final class IllegalTypeCheck extends AbstractCheck { <nl> final DetailAST grandParentAST = parameterDef . getParent ( ) . getParent ( ) ; <nl> <nl> if ( grandParentAST . getType ( ) = = TokenTypes . METHOD _ DEF <nl> - & & isCheckedMethod ( grandParentAST ) ) { <nl> + & & isCheckedMethod ( grandParentAST ) <nl> + & & isVerifiable ( grandParentAST ) ) { <nl> checkClassName ( parameterDef ) ; <nl> } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java <nl> index 35d0a8f . . 6330579 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java <nl> @ @ - 32 , 4 + 32 , 7 @ @ public class InputIllegalTypeMemberModifiers { <nl> / / WARNING if memberModifiers is set and contains TokenTypes . LITERAL _ PROTECTED <nl> protected AbstractClass a1 = null ; <nl> public AbstractClass a2 = null ; <nl> + <nl> + / / NO WARNING if memberModifiers is set and does not contain TokenTypes . LITERAL _ PUBLIC <nl> + public void table5 ( java . util . TreeSet < Object > arg ) { } <nl> }

TEST DIFF:
diff - - git a / . ci / pitest . sh b / . ci / pitest . sh 
 index 1a2475a . . 108e67c 100755 
 - - - a / . ci / pitest . sh 
 + + + b / . ci / pitest . sh 
 @ @ - 50 , 7 + 50 , 6 @ @ pitest - coding ) 
 " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > classNames . clear ( ) ; < / span > < / pre > < / td > < / tr > " 
 " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > imports . clear ( ) ; < / span > < / pre > < / td > < / tr > " 
 " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > instantiations . clear ( ) ; < / span > < / pre > < / td > < / tr > " 
 - " IllegalInstantiationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > processClassDef ( ast ) ; < / span > < / pre > < / td > < / tr > " 
 " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; newNode . getColumnNo ( ) & # 62 ; currentNode . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " 
 " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( newNode . getLineNo ( ) & # 62 ; currentNode . getLineNo ( ) < / span > < / pre > < / td > < / tr > " 
 " MultipleVariableDeclarationsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | newNode . getLineNo ( ) = = currentNode . getLineNo ( ) < / span > < / pre > < / td > < / tr > " 
 @ @ - 133 , 8 + 132 , 6 @ @ pitest - javadoc ) 
 " JavadocPackageCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > directoriesChecked . clear ( ) ; < / span > < / pre > < / td > < / tr > " 
 " JavadocPackageCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > setFileExtensions ( & # 34 ; java & # 34 ; ) ; < / span > < / pre > < / td > < / tr > " 
 " JavadocPackageCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > super . beginProcessing ( charset ) ; < / span > < / pre > < / td > < / tr > " 
 - " JavadocParagraphCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( nextNode . getType ( ) = = JavadocTokenTypes . TEXT < / span > < / pre > < / td > < / tr > " 
 - " JavadocParagraphCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | nextNode . getType ( ) = = JavadocTokenTypes . HTML _ ELEMENT ) { < / span > < / pre > < / td > < / tr > " 
 " JavadocStyleCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; builder . charAt ( index - 1 ) = = & # 39 ; * & # 39 ; ) { < / span > < / pre > < / td > < / tr > " 
 " JavadocStyleCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( index & # 62 ; 0 & # 38 ; & # 38 ; builder . charAt ( index ) = = & # 39 ; / & # 39 ; < / span > < / pre > < / td > < / tr > " 
 " JavadocStyleCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > trimTail ( builder ) ; < / span > < / pre > < / td > < / tr > " 
 diff - - git a / pom . xml b / pom . xml 
 index 0902ee8 . . 653de07 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1779 , 6 + 1779 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 1850 , 6 + 1851 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 1893 , 6 + 1895 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 1936 , 6 + 1939 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 1979 , 6 + 1983 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2022 , 6 + 2027 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2065 , 6 + 2071 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2108 , 6 + 2115 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2151 , 6 + 2159 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2194 , 6 + 2203 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2237 , 6 + 2247 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2280 , 6 + 2291 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2329 , 6 + 2341 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2372 , 6 + 2385 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2415 , 6 + 2429 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2459 , 6 + 2474 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2502 , 6 + 2518 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2542 , 6 + 2559 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2614 , 6 + 2632 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2671 , 6 + 2690 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2711 , 6 + 2731 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2800 , 6 + 2821 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2856 , 6 + 2878 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2901 , 6 + 2924 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2962 , 6 + 2986 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 3030 , 6 + 3055 , 7 @ @ 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 + < mutator > FALSE _ RETURNS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java 
 index 8e43b5f . . 6c7ec4f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java 
 @ @ - 233 , 8 + 233 , 8 @ @ public class IllegalInstantiationCheck 
 } 
 
 for ( String illegal : classes ) { 
 - if ( isStandardClass ( className , illegal ) 
 - | | isSamePackage ( className , pkgNameLen , illegal ) ) { 
 + if ( isSamePackage ( className , pkgNameLen , illegal ) 
 + | | isStandardClass ( className , illegal ) ) { 
 fullClassName = illegal ; 
 } 
 else { 
 @ @ - 295 , 29 + 295 , 6 @ @ public class IllegalInstantiationCheck 
 } 
 
 / * * 
 - * Is class of the same package . 
 - * @ param className class name 
 - * @ return true if same package class 
 - * / 
 - private boolean isSamePackage ( String className ) { 
 - boolean isSamePackage = false ; 
 - try { 
 - final ClassLoader classLoader = getClassLoader ( ) ; 
 - if ( classLoader ! = null ) { 
 - final String fqName = pkgName + " . " + className ; 
 - classLoader . loadClass ( fqName ) ; 
 - / / no ClassNotFoundException , fqName is a known class 
 - isSamePackage = true ; 
 - } 
 - } 
 - catch ( final ClassNotFoundException ignored ) { 
 - / / not a class from the same package 
 - isSamePackage = false ; 
 - } 
 - return isSamePackage ; 
 - } 
 - 
 - / * * 
 * Is Standard Class . 
 * @ param className class name 
 * @ param illegal illegal value 
 @ @ - 336 , 9 + 313 , 8 @ @ public class IllegalInstantiationCheck 
 / / not to java . lang . Boolean 
 
 final boolean isSameFile = classNames . contains ( className ) ; 
 - final boolean isSamePackage = isSamePackage ( className ) ; 
 
 - if ( ! isSameFile & & ! isSamePackage ) { 
 + if ( ! isSameFile ) { 
 isStandardClass = true ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java 
 index 7ed7c9a . . ddb6bde 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java 
 @ @ - 140 , 7 + 140 , 7 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { 
 * / 
 private void checkEmptyLine ( DetailNode newline ) { 
 final DetailNode nearestToken = getNearestNode ( newline ) ; 
 - if ( ! isLastEmptyLine ( newline ) & & nearestToken . getType ( ) = = JavadocTokenTypes . TEXT 
 + if ( nearestToken . getType ( ) = = JavadocTokenTypes . TEXT 
 & & ! CommonUtil . isBlank ( nearestToken . getText ( ) ) ) { 
 log ( newline . getLineNumber ( ) , MSG _ TAG _ AFTER ) ; 
 } 
 @ @ - 237 , 26 + 237 , 6 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { 
 } 
 
 / * * 
 - * Tests if NEWLINE node is a last node in javadoc . 
 - * @ param newLine NEWLINE node . 
 - * @ return true , if NEWLINE node is a last node in javadoc . 
 - * / 
 - private static boolean isLastEmptyLine ( DetailNode newLine ) { 
 - boolean result = true ; 
 - DetailNode nextNode = JavadocUtil . getNextSibling ( newLine ) ; 
 - while ( nextNode ! = null & & nextNode . getType ( ) ! = JavadocTokenTypes . JAVADOC _ TAG ) { 
 - if ( nextNode . getType ( ) = = JavadocTokenTypes . TEXT 
 - & & ! CommonUtil . isBlank ( nextNode . getText ( ) ) 
 - | | nextNode . getType ( ) = = JavadocTokenTypes . HTML _ ELEMENT ) { 
 - result = false ; 
 - break ; 
 - } 
 - nextNode = JavadocUtil . getNextSibling ( nextNode ) ; 
 - } 
 - return result ; 
 - } 
 - 
 - / * * 
 * Tests whether the paragraph tag is immediately followed by the text . 
 * @ param tag html tag . 
 * @ return true , if the paragraph tag is immediately followed by the text . 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java 
 index e8ccd63 . . 78809d4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java 
 @ @ - 21 , 19 + 21 , 12 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . coding . IllegalInstantiationCheck . MSG _ KEY ; 
 
 - import java . io . File ; 
 - import java . nio . charset . StandardCharsets ; 
 - import java . util . SortedSet ; 
 - 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 - import com . puppycrawl . tools . checkstyle . api . FileText ; 
 - import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 
 @ @ - 78 , 6 + 71 , 18 @ @ public class IllegalInstantiationCheckTest 
 } 
 
 @ Test 
 + public void testSameClassNameAsJavaLang ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createModuleConfig ( IllegalInstantiationCheck . class ) ; 
 + checkConfig . addAttribute ( 
 + " classes " , 
 + " java . lang . InputTest " ) ; 
 + final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , getPath ( " InputIllegalInstantiationSameClassNameJavaLang . java " ) , 
 + expected ) ; 
 + } 
 + 
 + @ Test 
 public void testJava8 ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createModuleConfig ( IllegalInstantiationCheck . class ) ; 
 @ @ - 132 , 59 + 137 , 6 @ @ public class IllegalInstantiationCheckTest 
 } 
 
 @ Test 
 - public void testNullClassLoader ( ) throws Exception { 
 - final DetailAST exprAst = new DetailAST ( ) ; 
 - exprAst . setType ( TokenTypes . EXPR ) ; 
 - 
 - final DetailAST newAst = new DetailAST ( ) ; 
 - newAst . setType ( TokenTypes . LITERAL _ NEW ) ; 
 - newAst . setLineNo ( 1 ) ; 
 - newAst . setColumnNo ( 1 ) ; 
 - 
 - final DetailAST identAst = new DetailAST ( ) ; 
 - identAst . setType ( TokenTypes . IDENT ) ; 
 - identAst . setText ( " Boolean " ) ; 
 - 
 - final DetailAST lparenAst = new DetailAST ( ) ; 
 - lparenAst . setType ( TokenTypes . LPAREN ) ; 
 - 
 - final DetailAST elistAst = new DetailAST ( ) ; 
 - elistAst . setType ( TokenTypes . ELIST ) ; 
 - 
 - final DetailAST rparenAst = new DetailAST ( ) ; 
 - rparenAst . setType ( TokenTypes . RPAREN ) ; 
 - 
 - exprAst . addChild ( newAst ) ; 
 - newAst . addChild ( identAst ) ; 
 - identAst . setNextSibling ( lparenAst ) ; 
 - lparenAst . setNextSibling ( elistAst ) ; 
 - elistAst . setNextSibling ( rparenAst ) ; 
 - 
 - final IllegalInstantiationCheck check = new IllegalInstantiationCheck ( ) ; 
 - final File inputFile = new File ( getNonCompilablePath ( " InputIllegalInstantiationLang . java " ) ) ; 
 - check . setFileContents ( new FileContents ( new FileText ( inputFile , 
 - StandardCharsets . UTF _ 8 . name ( ) ) ) ) ; 
 - check . configure ( createModuleConfig ( IllegalInstantiationCheck . class ) ) ; 
 - check . setClasses ( " java . lang . Boolean " ) ; 
 - 
 - check . visitToken ( newAst ) ; 
 - final SortedSet < LocalizedMessage > messages1 = check . getMessages ( ) ; 
 - 
 - Assert . assertEquals ( " No exception messages expected " , 0 , messages1 . size ( ) ) ; 
 - 
 - check . finishTree ( newAst ) ; 
 - final SortedSet < LocalizedMessage > messages2 = check . getMessages ( ) ; 
 - 
 - final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 1 , 
 - " com . puppycrawl . tools . checkstyle . checks . coding . messages " , " instantiation . avoid " , 
 - new String [ ] { " java . lang . Boolean " } , null , 
 - getClass ( ) , null ) ; 
 - Assert . assertEquals ( " Invalid exception message " , 
 - addExceptionMessage . getMessage ( ) , 
 - messages2 . first ( ) . getMessage ( ) ) ; 
 - } 
 - 
 - @ Test 
 public void testTokensNotNull ( ) { 
 final IllegalInstantiationCheck check = new IllegalInstantiationCheck ( ) ; 
 Assert . assertNotNull ( " Acceptable tokens should not be null " , check . getAcceptableTokens ( ) ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegalinstantiation / InputIllegalInstantiationSameClassNameJavaLang . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegalinstantiation / InputIllegalInstantiationSameClassNameJavaLang . java 
 new file mode 100644 
 index 0000000 . . 0a79dcb 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegalinstantiation / InputIllegalInstantiationSameClassNameJavaLang . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding . illegalinstantiation ; 
 + 
 + public class InputIllegalInstantiationSameClassNameJavaLang 
 + { 
 + InputTest obj = new InputTest ( ) ; 
 + } 
 + class InputTest { 
 + }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 index b058a21 . . aaddaf2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 @ @ - 297 , 7 + 297 , 8 @ @ public final class IllegalTypeCheck extends AbstractCheck { 
 final DetailAST grandParentAST = parameterDef . getParent ( ) . getParent ( ) ; 
 
 if ( grandParentAST . getType ( ) = = TokenTypes . METHOD _ DEF 
 - & & isCheckedMethod ( grandParentAST ) ) { 
 + & & isCheckedMethod ( grandParentAST ) 
 + & & isVerifiable ( grandParentAST ) ) { 
 checkClassName ( parameterDef ) ; 
 } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java 
 index 35d0a8f . . 6330579 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java 
 @ @ - 32 , 4 + 32 , 7 @ @ public class InputIllegalTypeMemberModifiers { 
 / / WARNING if memberModifiers is set and contains TokenTypes . LITERAL _ PROTECTED 
 protected AbstractClass a1 = null ; 
 public AbstractClass a2 = null ; 
 + 
 + / / NO WARNING if memberModifiers is set and does not contain TokenTypes . LITERAL _ PUBLIC 
 + public void table5 ( java . util . TreeSet < Object > arg ) { } 
 }
