BLEU SCORE: 0.0734705312597788

TEST MSG: Issue # 4080 : Split and Organize Checkstyle inputs by Test for SingleSpaceSeparator
GENERATED MSG: Issue # 3976 : EmptyForIteratorPad input test organise and split

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java <nl> index 90e3116 . . 4ca83d0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java <nl> @ @ - 34 , 13 + 34 , 15 @ @ public class SingleSpaceSeparatorCheckTest extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " whitespace " + File . separator + filename ) ; <nl> + + " whitespace " + File . separator <nl> + + " singlespaceseparator " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> public void testNoSpaceErrors ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( SingleSpaceSeparatorCheck . class ) ; <nl> - verify ( checkConfig , getPath ( " InputSingleSpaceNoErrors . java " ) , <nl> + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorNoErrors . java " ) , <nl> CommonUtils . EMPTY _ STRING _ ARRAY ) ; <nl> } <nl> <nl> @ @ - 99 , 7 + 101 , 7 @ @ public class SingleSpaceSeparatorCheckTest extends BaseCheckTestSupport { <nl> " 14 : 7 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " InputSingleSpaceComments . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorComments . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 109 , 6 + 111 , 6 @ @ public class SingleSpaceSeparatorCheckTest extends BaseCheckTestSupport { <nl> " 13 : 13 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " InputSingleSpaceComments . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorComments . java " ) , expected ) ; <nl> } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceComments . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceComments . java <nl> deleted file mode 100644 <nl> index db09fca . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceComments . java <nl> + + + / dev / null <nl> @ @ - 1 , 15 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> - <nl> - public class InputSingleSpaceComments { <nl> - / * always correct * / int i = 0 ; <nl> - int / * wrong if X is enabled * / j = 0 ; <nl> - int k ; / / Multiple whitespaces before comment <nl> - <nl> - / * * <nl> - * Always correct <nl> - * / <nl> - void foo ( ) { <nl> - / * Always correct * / <nl> - int a = 0 ; 	 / / < - a tab <nl> - } / / Wrong if X is enabled <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceErrors . java <nl> deleted file mode 100644 <nl> index 28e6604 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceErrors . java <nl> + + + / dev / null <nl> @ @ - 1 , 31 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> - <nl> - import java . util . List ; <nl> - import java . util . Vector ; <nl> - <nl> - public class InputSingleSpaceErrors { <nl> - int number ; / / violation <nl> - int i = 99 ; <nl> - { <nl> - i = 1 ; <nl> - i = 2 ; <nl> - i = 3 ; <nl> - i = 4 ; <nl> - i = 	 5 ; / / A tab between = and 5 . <nl> - } <nl> - <nl> - private void foo ( int i ) { <nl> - if ( i > 10 ) { <nl> - if ( bar ( ) ) { <nl> - i + + ; <nl> - foo ( i ) ; <nl> - } <nl> - } <nl> - } <nl> - <nl> - private boolean bar ( ) { <nl> - List < Double > list = new Vector < > ( ) ; <nl> - int a 	 = 0 ; / / Multiple whitespaces before comment <nl> - 	 	 int b = 1 ; / / Multiple tabs as indentation are ok . <nl> - return Math . random ( ) < 0 . 5 ; <nl> - } } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceNoErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceNoErrors . java <nl> deleted file mode 100644 <nl> index d408dca . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceNoErrors . java <nl> + + + / dev / null <nl> @ @ - 1 , 24 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> - <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - <nl> - public class InputSingleSpaceNoErrors { <nl> - <nl> - int count ; / / long indentation - OK <nl> - String text = " " ; / / OK <nl> - <nl> - private void foo ( int i ) { <nl> - if ( i > 10 ) { <nl> - if ( bar ( ) ) { <nl> - i + + ; <nl> - foo ( i ) ; <nl> - } <nl> - } <nl> - } <nl> - <nl> - private boolean bar ( ) { <nl> - List < Double > list = new ArrayList < > ( ) ; <nl> - return Math . random ( ) < 0 . 5 ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceErrors . java <nl> new file mode 100644 <nl> index 0000000 . . b789b51 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceErrors . java <nl> @ @ - 0 , 0 + 1 , 31 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; <nl> + <nl> + import java . util . List ; <nl> + import java . util . Vector ; <nl> + <nl> + public class InputSingleSpaceErrors { <nl> + int number ; / / violation <nl> + int i = 99 ; <nl> + { <nl> + i = 1 ; <nl> + i = 2 ; <nl> + i = 3 ; <nl> + i = 4 ; <nl> + i = 	 5 ; / / A tab between = and 5 . <nl> + } <nl> + <nl> + private void foo ( int i ) { <nl> + if ( i > 10 ) { <nl> + if ( bar ( ) ) { <nl> + i + + ; <nl> + foo ( i ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + private boolean bar ( ) { <nl> + List < Double > list = new Vector < > ( ) ; <nl> + int a 	 = 0 ; / / Multiple whitespaces before comment <nl> + 	 	 int b = 1 ; / / Multiple tabs as indentation are ok . <nl> + return Math . random ( ) < 0 . 5 ; <nl> + } } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorComments . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorComments . java <nl> new file mode 100644 <nl> index 0000000 . . 094dca9 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorComments . java <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; <nl> + <nl> + public class InputSingleSpaceSeparatorComments { <nl> + / * always correct * / int i = 0 ; <nl> + int / * wrong if X is enabled * / j = 0 ; <nl> + int k ; / / Multiple whitespaces before comment <nl> + <nl> + / * * <nl> + * Always correct <nl> + * / <nl> + void foo ( ) { <nl> + / * Always correct * / <nl> + int a = 0 ; 	 / / < - a tab <nl> + } / / Wrong if X is enabled <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorNoErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorNoErrors . java <nl> new file mode 100644 <nl> index 0000000 . . a79dced <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorNoErrors . java <nl> @ @ - 0 , 0 + 1 , 24 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; <nl> + <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + <nl> + public class InputSingleSpaceSeparatorNoErrors { <nl> + <nl> + int count ; / / long indentation - OK <nl> + String text = " " ; / / OK <nl> + <nl> + private void foo ( int i ) { <nl> + if ( i > 10 ) { <nl> + if ( bar ( ) ) { <nl> + i + + ; <nl> + foo ( i ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + private boolean bar ( ) { <nl> + List < Double > list = new ArrayList < > ( ) ; <nl> + return Math . random ( ) < 0 . 5 ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index d092e9d . . 4ab188b 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 170 , 7 + 170 , 8 @ @ script : <nl> fi <nl> <nl> after _ success : <nl> - - > - <nl> + - | <nl> + set - e <nl> if [ [ - n $ CMD _ AFTER _ SUCCESS <nl> & & $ SKIP _ CI = = ' false ' <nl> ] ] ; <nl> @ @ - 178 , 7 + 179 , 8 @ @ after _ success : <nl> eval $ CMD _ AFTER _ SUCCESS ; <nl> echo " CMD _ AFTER _ SUCCESS is finished " ; <nl> fi <nl> - - > - <nl> + - | <nl> + set - e <nl> if [ [ $ TRAVIS _ REPO _ SLUG = = ' checkstyle / checkstyle ' <nl> & & $ TRAVIS _ BRANCH = = ' master ' <nl> & & $ TRAVIS _ PULL _ REQUEST = = ' false '

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java 
 index 90e3116 . . 4ca83d0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java 
 @ @ - 34 , 13 + 34 , 15 @ @ public class SingleSpaceSeparatorCheckTest extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " whitespace " + File . separator + filename ) ; 
 + + " whitespace " + File . separator 
 + + " singlespaceseparator " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 public void testNoSpaceErrors ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( SingleSpaceSeparatorCheck . class ) ; 
 - verify ( checkConfig , getPath ( " InputSingleSpaceNoErrors . java " ) , 
 + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorNoErrors . java " ) , 
 CommonUtils . EMPTY _ STRING _ ARRAY ) ; 
 } 
 
 @ @ - 99 , 7 + 101 , 7 @ @ public class SingleSpaceSeparatorCheckTest extends BaseCheckTestSupport { 
 " 14 : 7 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " InputSingleSpaceComments . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorComments . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 109 , 6 + 111 , 6 @ @ public class SingleSpaceSeparatorCheckTest extends BaseCheckTestSupport { 
 " 13 : 13 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " InputSingleSpaceComments . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorComments . java " ) , expected ) ; 
 } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceComments . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceComments . java 
 deleted file mode 100644 
 index db09fca . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceComments . java 
 + + + / dev / null 
 @ @ - 1 , 15 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 - 
 - public class InputSingleSpaceComments { 
 - / * always correct * / int i = 0 ; 
 - int / * wrong if X is enabled * / j = 0 ; 
 - int k ; / / Multiple whitespaces before comment 
 - 
 - / * * 
 - * Always correct 
 - * / 
 - void foo ( ) { 
 - / * Always correct * / 
 - int a = 0 ; 	 / / < - a tab 
 - } / / Wrong if X is enabled 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceErrors . java 
 deleted file mode 100644 
 index 28e6604 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceErrors . java 
 + + + / dev / null 
 @ @ - 1 , 31 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 - 
 - import java . util . List ; 
 - import java . util . Vector ; 
 - 
 - public class InputSingleSpaceErrors { 
 - int number ; / / violation 
 - int i = 99 ; 
 - { 
 - i = 1 ; 
 - i = 2 ; 
 - i = 3 ; 
 - i = 4 ; 
 - i = 	 5 ; / / A tab between = and 5 . 
 - } 
 - 
 - private void foo ( int i ) { 
 - if ( i > 10 ) { 
 - if ( bar ( ) ) { 
 - i + + ; 
 - foo ( i ) ; 
 - } 
 - } 
 - } 
 - 
 - private boolean bar ( ) { 
 - List < Double > list = new Vector < > ( ) ; 
 - int a 	 = 0 ; / / Multiple whitespaces before comment 
 - 	 	 int b = 1 ; / / Multiple tabs as indentation are ok . 
 - return Math . random ( ) < 0 . 5 ; 
 - } } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceNoErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceNoErrors . java 
 deleted file mode 100644 
 index d408dca . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputSingleSpaceNoErrors . java 
 + + + / dev / null 
 @ @ - 1 , 24 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 - 
 - import java . util . ArrayList ; 
 - import java . util . List ; 
 - 
 - public class InputSingleSpaceNoErrors { 
 - 
 - int count ; / / long indentation - OK 
 - String text = " " ; / / OK 
 - 
 - private void foo ( int i ) { 
 - if ( i > 10 ) { 
 - if ( bar ( ) ) { 
 - i + + ; 
 - foo ( i ) ; 
 - } 
 - } 
 - } 
 - 
 - private boolean bar ( ) { 
 - List < Double > list = new ArrayList < > ( ) ; 
 - return Math . random ( ) < 0 . 5 ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceErrors . java 
 new file mode 100644 
 index 0000000 . . b789b51 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceErrors . java 
 @ @ - 0 , 0 + 1 , 31 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; 
 + 
 + import java . util . List ; 
 + import java . util . Vector ; 
 + 
 + public class InputSingleSpaceErrors { 
 + int number ; / / violation 
 + int i = 99 ; 
 + { 
 + i = 1 ; 
 + i = 2 ; 
 + i = 3 ; 
 + i = 4 ; 
 + i = 	 5 ; / / A tab between = and 5 . 
 + } 
 + 
 + private void foo ( int i ) { 
 + if ( i > 10 ) { 
 + if ( bar ( ) ) { 
 + i + + ; 
 + foo ( i ) ; 
 + } 
 + } 
 + } 
 + 
 + private boolean bar ( ) { 
 + List < Double > list = new Vector < > ( ) ; 
 + int a 	 = 0 ; / / Multiple whitespaces before comment 
 + 	 	 int b = 1 ; / / Multiple tabs as indentation are ok . 
 + return Math . random ( ) < 0 . 5 ; 
 + } } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorComments . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorComments . java 
 new file mode 100644 
 index 0000000 . . 094dca9 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorComments . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; 
 + 
 + public class InputSingleSpaceSeparatorComments { 
 + / * always correct * / int i = 0 ; 
 + int / * wrong if X is enabled * / j = 0 ; 
 + int k ; / / Multiple whitespaces before comment 
 + 
 + / * * 
 + * Always correct 
 + * / 
 + void foo ( ) { 
 + / * Always correct * / 
 + int a = 0 ; 	 / / < - a tab 
 + } / / Wrong if X is enabled 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorNoErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorNoErrors . java 
 new file mode 100644 
 index 0000000 . . a79dced 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorNoErrors . java 
 @ @ - 0 , 0 + 1 , 24 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; 
 + 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 + 
 + public class InputSingleSpaceSeparatorNoErrors { 
 + 
 + int count ; / / long indentation - OK 
 + String text = " " ; / / OK 
 + 
 + private void foo ( int i ) { 
 + if ( i > 10 ) { 
 + if ( bar ( ) ) { 
 + i + + ; 
 + foo ( i ) ; 
 + } 
 + } 
 + } 
 + 
 + private boolean bar ( ) { 
 + List < Double > list = new ArrayList < > ( ) ; 
 + return Math . random ( ) < 0 . 5 ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index d092e9d . . 4ab188b 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 170 , 7 + 170 , 8 @ @ script : 
 fi 
 
 after _ success : 
 - - > - 
 + - | 
 + set - e 
 if [ [ - n $ CMD _ AFTER _ SUCCESS 
 & & $ SKIP _ CI = = ' false ' 
 ] ] ; 
 @ @ - 178 , 7 + 179 , 8 @ @ after _ success : 
 eval $ CMD _ AFTER _ SUCCESS ; 
 echo " CMD _ AFTER _ SUCCESS is finished " ; 
 fi 
 - - > - 
 + - | 
 + set - e 
 if [ [ $ TRAVIS _ REPO _ SLUG = = ' checkstyle / checkstyle ' 
 & & $ TRAVIS _ BRANCH = = ' master ' 
 & & $ TRAVIS _ PULL _ REQUEST = = ' false '
