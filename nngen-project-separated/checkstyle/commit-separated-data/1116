BLEU SCORE: 0.07160476144948855

TEST MSG: minor : fix for comment
GENERATED MSG: Issue # 1566 : HideUtilityClassConstructor violations fixed

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index a440e87 . . 47f3233 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 96 , 7 + 96 , 7 @ @ public final class Main { <nl> / * * Name for the option ' - j ' . * / <nl> private static final String OPTION _ J _ NAME = " j " ; <nl> <nl> - / * * NAme for the option ' - - javadocTree ' . * / <nl> + / * * Name for the option ' - - javadocTree ' . * / <nl> private static final String OPTION _ JAVADOC _ TREE _ NAME = " javadocTree " ; <nl> <nl> / * * Name for the option ' - J ' . * /
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index 068a467 . . 7437405 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 82 , 20 + 82 , 20 @ @ public final class Main { <nl> / / return error is smth is wrong in arguments <nl> final List < String > messages = validateCli ( commandLine ) ; <nl> cliViolations = ! messages . isEmpty ( ) ; <nl> - if ( ! cliViolations ) { <nl> - / / create config helper object <nl> - final CliOptions config = convertCliToPojo ( commandLine ) ; <nl> - / / run Checker <nl> - errorCounter = runCheckstyle ( config ) ; <nl> - exitStatus = errorCounter ; <nl> - } <nl> - else { <nl> + if ( cliViolations ) { <nl> exitStatus = exitWithCliViolation ; <nl> errorCounter = 1 ; <nl> for ( String message : messages ) { <nl> System . out . println ( message ) ; <nl> } <nl> } <nl> + else { <nl> + / / create config helper object <nl> + final CliOptions config = convertCliToPojo ( commandLine ) ; <nl> + / / run Checker <nl> + errorCounter = runCheckstyle ( config ) ; <nl> + exitStatus = errorCounter ; <nl> + } <nl> } <nl> } <nl> catch ( ParseException pex ) { <nl> @ @ - 147 , 10 + 147 , 7 @ @ public final class Main { <nl> private static List < String > validateCli ( CommandLine cmdLine ) { <nl> final List < String > result = new ArrayList < > ( ) ; <nl> / / ensure a configuration file is specified <nl> - if ( ! cmdLine . hasOption ( " c " ) ) { <nl> - result . add ( " Must specify a config XML file . " ) ; <nl> - } <nl> - else { <nl> + if ( cmdLine . hasOption ( " c " ) ) { <nl> / / validate optional parameters <nl> if ( cmdLine . hasOption ( " f " ) ) { <nl> final String format = cmdLine . getOptionValue ( " f " ) ; <nl> @ @ - 178 , 6 + 175 , 9 @ @ public final class Main { <nl> result . add ( " Must specify files to process , found 0 . " ) ; <nl> } <nl> } <nl> + else { <nl> + result . add ( " Must specify a config XML file . " ) ; <nl> + } <nl> <nl> return result ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> index f4e3ac8 . . abe02f9 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> @ @ - 250 , 7 + 250 , 10 @ @ public final class TreeWalker <nl> throws CheckstyleException { <nl> final int [ ] tokens ; <nl> final Set < String > checkTokens = check . getTokenNames ( ) ; <nl> - if ( ! checkTokens . isEmpty ( ) ) { <nl> + if ( checkTokens . isEmpty ( ) ) { <nl> + tokens = check . getDefaultTokens ( ) ; <nl> + } <nl> + else { <nl> tokens = check . getRequiredTokens ( ) ; <nl> <nl> / / register configured tokens <nl> @ @ - 268 , 9 + 271 , 6 @ @ public final class TreeWalker <nl> } <nl> } <nl> } <nl> - else { <nl> - tokens = check . getDefaultTokens ( ) ; <nl> - } <nl> for ( int element : tokens ) { <nl> registerCheck ( element , check ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java <nl> index 8e9ad80 . . 0a1a99b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java <nl> @ @ - 74 , 7 + 74 , 14 @ @ public class OuterTypeFilenameCheck extends Check { <nl> @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> final String outerTypeName = ast . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; <nl> - if ( ! seenFirstToken ) { <nl> + if ( seenFirstToken ) { <nl> + final DetailAST modifiers = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> + if ( modifiers . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ! = null <nl> + & & ast . getParent ( ) = = null ) { <nl> + hasPublic = true ; <nl> + } <nl> + } <nl> + else { <nl> <nl> if ( fileName . equals ( outerTypeName ) ) { <nl> validFirst = true ; <nl> @ @ - 83 , 13 + 90 , 6 @ @ public class OuterTypeFilenameCheck extends Check { <nl> wrongType = ast ; <nl> } <nl> } <nl> - else { <nl> - final DetailAST modifiers = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - if ( modifiers . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ! = null <nl> - & & ast . getParent ( ) = = null ) { <nl> - hasPublic = true ; <nl> - } <nl> - } <nl> seenFirstToken = true ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> index 30f4189 . . f64dad1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> @ @ - 142 , 11 + 142 , 11 @ @ public class FallThroughCheck extends Check { <nl> <nl> if ( slist ! = null & & ! isTerminated ( slist , true , true ) <nl> & & ! hasFallTruComment ( ast , nextGroup ) ) { <nl> - if ( ! isLastGroup ) { <nl> - log ( nextGroup , MSG _ FALL _ THROUGH ) ; <nl> + if ( isLastGroup ) { <nl> + log ( ast , MSG _ FALL _ THROUGH _ LAST ) ; <nl> } <nl> else { <nl> - log ( ast , MSG _ FALL _ THROUGH _ LAST ) ; <nl> + log ( nextGroup , MSG _ FALL _ THROUGH ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java <nl> index 873cb6c . . 5fc9658 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java <nl> @ @ - 243 , 12 + 243 , 12 @ @ public class InnerAssignmentCheck <nl> for ( int anElement : element ) { <nl> current = current . getParent ( ) ; <nl> final int expectedType = anElement ; <nl> - if ( current . getType ( ) ! = expectedType ) { <nl> - found = false ; <nl> - break ; <nl> + if ( current . getType ( ) = = expectedType ) { <nl> + found = true ; <nl> } <nl> else { <nl> - found = true ; <nl> + found = false ; <nl> + break ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> index 61a7156 . . 2e4608e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> @ @ - 342 , 11 + 342 , 11 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { <nl> } <nl> / / differs from previous instance <nl> else if ( ! instanceName . equals ( initInstanceName ) ) { <nl> - if ( ! initInstanceName . isEmpty ( ) ) { <nl> - result = false ; <nl> + if ( initInstanceName . isEmpty ( ) ) { <nl> + initInstanceName = instanceName ; <nl> } <nl> else { <nl> - initInstanceName = instanceName ; <nl> + result = false ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java <nl> index 83e5940 . . 43af812 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java <nl> @ @ - 44 , 11 + 44 , 11 @ @ public class MemberDefHandler extends AbstractExpressionHandler { <nl> @ Override <nl> public void checkIndentation ( ) { <nl> final DetailAST modifiersNode = getMainAst ( ) . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - if ( modifiersNode . getChildCount ( ) ! = 0 ) { <nl> - checkModifiers ( ) ; <nl> + if ( modifiersNode . getChildCount ( ) = = 0 ) { <nl> + checkType ( ) ; <nl> } <nl> else { <nl> - checkType ( ) ; <nl> + checkModifiers ( ) ; <nl> } <nl> final LineWrappingHandler lineWrap = <nl> new LineWrappingHandler ( getIndentCheck ( ) , getMainAst ( ) , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> index 0bd4b5d . . 89e70d5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> @ @ - 365 , 13 + 365 , 7 @ @ public class JavadocStyleCheck <nl> / / do nothing <nl> continue ; <nl> } <nl> - if ( ! tag . isCloseTag ( ) ) { <nl> - / / We only push html tags that are allowed <nl> - if ( isAllowedTag ( tag ) ) { <nl> - htmlStack . push ( tag ) ; <nl> - } <nl> - } <nl> - else { <nl> + if ( tag . isCloseTag ( ) ) { <nl> / / We have found a close tag . <nl> if ( isExtraHtml ( tag . getId ( ) , htmlStack ) ) { <nl> / / No corresponding open tag was found on the stack . <nl> @ @ - 386 , 6 + 380 , 12 @ @ public class JavadocStyleCheck <nl> checkUnclosedTags ( htmlStack , tag . getId ( ) ) ; <nl> } <nl> } <nl> + else { <nl> + / / We only push html tags that are allowed <nl> + if ( isAllowedTag ( tag ) ) { <nl> + htmlStack . push ( tag ) ; <nl> + } <nl> + } <nl> } <nl> <nl> / / Identify any tags left on the stack . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java <nl> index 3606618 . . 40ba100 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java <nl> @ @ - 130 , 14 + 130 , 14 @ @ public final class JavadocUtils { <nl> final Matcher commentMatcher = commentPattern . matcher ( s ) ; <nl> final String commentContents ; <nl> final int commentOffset ; / / offset including comment characters <nl> - if ( ! commentMatcher . find ( ) ) { <nl> - commentContents = s ; / / No leading asterisks , still valid <nl> - commentOffset = 0 ; <nl> - } <nl> - else { <nl> + if ( commentMatcher . find ( ) ) { <nl> commentContents = commentMatcher . group ( 1 ) ; <nl> commentOffset = commentMatcher . start ( 1 ) - 1 ; <nl> } <nl> + else { <nl> + commentContents = s ; / / No leading asterisks , still valid <nl> + commentOffset = 0 ; <nl> + } <nl> final Pattern tagPattern = Pattern . compile ( " . * ? \ \ { @ ( \ \ p { Alpha } + ) \ \ s + ( . * ? ) \ \ } " ) ; <nl> final Matcher tagMatcher = tagPattern . matcher ( commentContents ) ; <nl> while ( tagMatcher . find ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / MultilineDetector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / MultilineDetector . java <nl> index f21476e . . 75a5a51 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / MultilineDetector . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / MultilineDetector . java <nl> @ @ - 79 , 14 + 79 , 14 @ @ class MultilineDetector { <nl> this . text = new FileText ( text ) ; <nl> resetState ( ) ; <nl> <nl> - if ( ! Strings . isNullOrEmpty ( options . getFormat ( ) ) ) { <nl> + if ( Strings . isNullOrEmpty ( options . getFormat ( ) ) ) { <nl> + options . getReporter ( ) . log ( 0 , EMPTY ) ; <nl> + } <nl> + else { <nl> matcher = options . getPattern ( ) . matcher ( text . getFullText ( ) ) ; <nl> findMatch ( ) ; <nl> finish ( ) ; <nl> } <nl> - else { <nl> - options . getReporter ( ) . log ( 0 , EMPTY ) ; <nl> - } <nl> } <nl> <nl> / * * Method that finds the matches . * /

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index a440e87 . . 47f3233 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 96 , 7 + 96 , 7 @ @ public final class Main { 
 / * * Name for the option ' - j ' . * / 
 private static final String OPTION _ J _ NAME = " j " ; 
 
 - / * * NAme for the option ' - - javadocTree ' . * / 
 + / * * Name for the option ' - - javadocTree ' . * / 
 private static final String OPTION _ JAVADOC _ TREE _ NAME = " javadocTree " ; 
 
 / * * Name for the option ' - J ' . * /

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index 068a467 . . 7437405 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 82 , 20 + 82 , 20 @ @ public final class Main { 
 / / return error is smth is wrong in arguments 
 final List < String > messages = validateCli ( commandLine ) ; 
 cliViolations = ! messages . isEmpty ( ) ; 
 - if ( ! cliViolations ) { 
 - / / create config helper object 
 - final CliOptions config = convertCliToPojo ( commandLine ) ; 
 - / / run Checker 
 - errorCounter = runCheckstyle ( config ) ; 
 - exitStatus = errorCounter ; 
 - } 
 - else { 
 + if ( cliViolations ) { 
 exitStatus = exitWithCliViolation ; 
 errorCounter = 1 ; 
 for ( String message : messages ) { 
 System . out . println ( message ) ; 
 } 
 } 
 + else { 
 + / / create config helper object 
 + final CliOptions config = convertCliToPojo ( commandLine ) ; 
 + / / run Checker 
 + errorCounter = runCheckstyle ( config ) ; 
 + exitStatus = errorCounter ; 
 + } 
 } 
 } 
 catch ( ParseException pex ) { 
 @ @ - 147 , 10 + 147 , 7 @ @ public final class Main { 
 private static List < String > validateCli ( CommandLine cmdLine ) { 
 final List < String > result = new ArrayList < > ( ) ; 
 / / ensure a configuration file is specified 
 - if ( ! cmdLine . hasOption ( " c " ) ) { 
 - result . add ( " Must specify a config XML file . " ) ; 
 - } 
 - else { 
 + if ( cmdLine . hasOption ( " c " ) ) { 
 / / validate optional parameters 
 if ( cmdLine . hasOption ( " f " ) ) { 
 final String format = cmdLine . getOptionValue ( " f " ) ; 
 @ @ - 178 , 6 + 175 , 9 @ @ public final class Main { 
 result . add ( " Must specify files to process , found 0 . " ) ; 
 } 
 } 
 + else { 
 + result . add ( " Must specify a config XML file . " ) ; 
 + } 
 
 return result ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 index f4e3ac8 . . abe02f9 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 @ @ - 250 , 7 + 250 , 10 @ @ public final class TreeWalker 
 throws CheckstyleException { 
 final int [ ] tokens ; 
 final Set < String > checkTokens = check . getTokenNames ( ) ; 
 - if ( ! checkTokens . isEmpty ( ) ) { 
 + if ( checkTokens . isEmpty ( ) ) { 
 + tokens = check . getDefaultTokens ( ) ; 
 + } 
 + else { 
 tokens = check . getRequiredTokens ( ) ; 
 
 / / register configured tokens 
 @ @ - 268 , 9 + 271 , 6 @ @ public final class TreeWalker 
 } 
 } 
 } 
 - else { 
 - tokens = check . getDefaultTokens ( ) ; 
 - } 
 for ( int element : tokens ) { 
 registerCheck ( element , check ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java 
 index 8e9ad80 . . 0a1a99b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java 
 @ @ - 74 , 7 + 74 , 14 @ @ public class OuterTypeFilenameCheck extends Check { 
 @ Override 
 public void visitToken ( DetailAST ast ) { 
 final String outerTypeName = ast . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; 
 - if ( ! seenFirstToken ) { 
 + if ( seenFirstToken ) { 
 + final DetailAST modifiers = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 + if ( modifiers . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ! = null 
 + & & ast . getParent ( ) = = null ) { 
 + hasPublic = true ; 
 + } 
 + } 
 + else { 
 
 if ( fileName . equals ( outerTypeName ) ) { 
 validFirst = true ; 
 @ @ - 83 , 13 + 90 , 6 @ @ public class OuterTypeFilenameCheck extends Check { 
 wrongType = ast ; 
 } 
 } 
 - else { 
 - final DetailAST modifiers = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - if ( modifiers . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ! = null 
 - & & ast . getParent ( ) = = null ) { 
 - hasPublic = true ; 
 - } 
 - } 
 seenFirstToken = true ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 index 30f4189 . . f64dad1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 @ @ - 142 , 11 + 142 , 11 @ @ public class FallThroughCheck extends Check { 
 
 if ( slist ! = null & & ! isTerminated ( slist , true , true ) 
 & & ! hasFallTruComment ( ast , nextGroup ) ) { 
 - if ( ! isLastGroup ) { 
 - log ( nextGroup , MSG _ FALL _ THROUGH ) ; 
 + if ( isLastGroup ) { 
 + log ( ast , MSG _ FALL _ THROUGH _ LAST ) ; 
 } 
 else { 
 - log ( ast , MSG _ FALL _ THROUGH _ LAST ) ; 
 + log ( nextGroup , MSG _ FALL _ THROUGH ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java 
 index 873cb6c . . 5fc9658 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java 
 @ @ - 243 , 12 + 243 , 12 @ @ public class InnerAssignmentCheck 
 for ( int anElement : element ) { 
 current = current . getParent ( ) ; 
 final int expectedType = anElement ; 
 - if ( current . getType ( ) ! = expectedType ) { 
 - found = false ; 
 - break ; 
 + if ( current . getType ( ) = = expectedType ) { 
 + found = true ; 
 } 
 else { 
 - found = true ; 
 + found = false ; 
 + break ; 
 } 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 index 61a7156 . . 2e4608e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 @ @ - 342 , 11 + 342 , 11 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { 
 } 
 / / differs from previous instance 
 else if ( ! instanceName . equals ( initInstanceName ) ) { 
 - if ( ! initInstanceName . isEmpty ( ) ) { 
 - result = false ; 
 + if ( initInstanceName . isEmpty ( ) ) { 
 + initInstanceName = instanceName ; 
 } 
 else { 
 - initInstanceName = instanceName ; 
 + result = false ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java 
 index 83e5940 . . 43af812 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java 
 @ @ - 44 , 11 + 44 , 11 @ @ public class MemberDefHandler extends AbstractExpressionHandler { 
 @ Override 
 public void checkIndentation ( ) { 
 final DetailAST modifiersNode = getMainAst ( ) . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - if ( modifiersNode . getChildCount ( ) ! = 0 ) { 
 - checkModifiers ( ) ; 
 + if ( modifiersNode . getChildCount ( ) = = 0 ) { 
 + checkType ( ) ; 
 } 
 else { 
 - checkType ( ) ; 
 + checkModifiers ( ) ; 
 } 
 final LineWrappingHandler lineWrap = 
 new LineWrappingHandler ( getIndentCheck ( ) , getMainAst ( ) , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 index 0bd4b5d . . 89e70d5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 @ @ - 365 , 13 + 365 , 7 @ @ public class JavadocStyleCheck 
 / / do nothing 
 continue ; 
 } 
 - if ( ! tag . isCloseTag ( ) ) { 
 - / / We only push html tags that are allowed 
 - if ( isAllowedTag ( tag ) ) { 
 - htmlStack . push ( tag ) ; 
 - } 
 - } 
 - else { 
 + if ( tag . isCloseTag ( ) ) { 
 / / We have found a close tag . 
 if ( isExtraHtml ( tag . getId ( ) , htmlStack ) ) { 
 / / No corresponding open tag was found on the stack . 
 @ @ - 386 , 6 + 380 , 12 @ @ public class JavadocStyleCheck 
 checkUnclosedTags ( htmlStack , tag . getId ( ) ) ; 
 } 
 } 
 + else { 
 + / / We only push html tags that are allowed 
 + if ( isAllowedTag ( tag ) ) { 
 + htmlStack . push ( tag ) ; 
 + } 
 + } 
 } 
 
 / / Identify any tags left on the stack . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java 
 index 3606618 . . 40ba100 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocUtils . java 
 @ @ - 130 , 14 + 130 , 14 @ @ public final class JavadocUtils { 
 final Matcher commentMatcher = commentPattern . matcher ( s ) ; 
 final String commentContents ; 
 final int commentOffset ; / / offset including comment characters 
 - if ( ! commentMatcher . find ( ) ) { 
 - commentContents = s ; / / No leading asterisks , still valid 
 - commentOffset = 0 ; 
 - } 
 - else { 
 + if ( commentMatcher . find ( ) ) { 
 commentContents = commentMatcher . group ( 1 ) ; 
 commentOffset = commentMatcher . start ( 1 ) - 1 ; 
 } 
 + else { 
 + commentContents = s ; / / No leading asterisks , still valid 
 + commentOffset = 0 ; 
 + } 
 final Pattern tagPattern = Pattern . compile ( " . * ? \ \ { @ ( \ \ p { Alpha } + ) \ \ s + ( . * ? ) \ \ } " ) ; 
 final Matcher tagMatcher = tagPattern . matcher ( commentContents ) ; 
 while ( tagMatcher . find ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / MultilineDetector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / MultilineDetector . java 
 index f21476e . . 75a5a51 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / MultilineDetector . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / MultilineDetector . java 
 @ @ - 79 , 14 + 79 , 14 @ @ class MultilineDetector { 
 this . text = new FileText ( text ) ; 
 resetState ( ) ; 
 
 - if ( ! Strings . isNullOrEmpty ( options . getFormat ( ) ) ) { 
 + if ( Strings . isNullOrEmpty ( options . getFormat ( ) ) ) { 
 + options . getReporter ( ) . log ( 0 , EMPTY ) ; 
 + } 
 + else { 
 matcher = options . getPattern ( ) . matcher ( text . getFullText ( ) ) ; 
 findMatch ( ) ; 
 finish ( ) ; 
 } 
 - else { 
 - options . getReporter ( ) . log ( 0 , EMPTY ) ; 
 - } 
 } 
 
 / * * Method that finds the matches . * /
