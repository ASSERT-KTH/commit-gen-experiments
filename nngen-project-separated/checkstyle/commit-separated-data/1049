BLEU SCORE: 0.19433094436376075

TEST MSG: doc : releasenotes 7 . 3
GENERATED MSG: doc : release notes 7 . 2

TEST DIFF (one line): diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index 3753081 . . fad53e6 100644 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 17 , 6 + 17 , 69 @ @ <nl> <nl> < ! - - placeholder for a new section - - > <nl> <nl> + < section name = " Release 7 . 3 " > <nl> + < p > Breaking backward compatibility : < / p > <nl> + < ul > <nl> + < li > <nl> + Javadoc grammar : Delete child nodes in Javadoc TEXT node . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3170 " > # 3170 < / a > <nl> + < / li > <nl> + < / ul > <nl> + < p > New : < / p > <nl> + < ul > <nl> + < li > <nl> + Update Google style coverage to state of 12 July 2016 . Author : alberto . cuda < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3381 " > # 3381 < / a > <nl> + < / li > <nl> + < li > <nl> + Modules and XDocs : changed setter methods to recieve similar types with field type for easier xdoc validation . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3255 " > # 3255 < / a > <nl> + < / li > <nl> + < li > <nl> + CLI : Cannot override default Checker . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3515 " > # 3515 < / a > <nl> + < / li > <nl> + < li > <nl> + ParameterNameCheck : new scope and excludeScope properties . Author : alberto . cuda < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3473 " > # 3473 < / a > <nl> + < / li > <nl> + < li > <nl> + google _ checks . xml CustomImportOrder problem . Author : Andrei Selkin < a href = " https : / / github . com / checkstyle / checkstyle / issues / 941 " > # 941 < / a > <nl> + < / li > <nl> + < / ul > <nl> + < p > Bug fixes : < / p > <nl> + < ul > <nl> + < li > <nl> + GUI : Add support of DetailNode objects in CodeSelector . Author : kazachka < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3432 " > # 3432 < / a > <nl> + < / li > <nl> + < li > <nl> + GUI : Inconsistency in AST structure for block - comments . Author : kazachka < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3445 " > # 3445 < / a > <nl> + < / li > <nl> + < li > <nl> + Checker Cache not saving files that have suppressed violations . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3488 " > # 3488 < / a > <nl> + < / li > <nl> + < / ul > <nl> + < p > Notes : < / p > <nl> + < ul > <nl> + < li > <nl> + ImportOrder : checkstyle _ checks . xml does not have separate & quot ; java & quot ; group . Author : linelect < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3577 " > # 3577 < / a > <nl> + < / li > <nl> + < li > <nl> + doc : fix broken link to file filters page . Author : Ken Geis <nl> + < / li > <nl> + < li > <nl> + use ForbidAnnotationElementValueCheck from sevntu . checkstyle . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3567 " > # 3567 < / a > <nl> + < / li > <nl> + < li > <nl> + Turn on Config Cache File Locally for Developers . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3487 " > # 3487 < / a > <nl> + < / li > <nl> + < li > <nl> + document isCommentNodesRequired method in xdoc . Author : Roman Ivanov < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3561 " > # 3561 < / a > <nl> + < / li > <nl> + < li > <nl> + Checkstyle tests should not require internet . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3536 " > # 3536 < / a > <nl> + < / li > <nl> + < li > <nl> + doc : note was placed to TranslationCheck that it has problems with Checker cache . Author : Roman Ivanov <nl> + < / li > <nl> + < / ul > <nl> + < / section > <nl> + <nl> < section name = " Release 7 . 2 " > <nl> < p > New : < / p > <nl> < ul >
NEAREST DIFF (one line): diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 9f8ee6c . . 9c49590 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 210 , 6 + 210 , 10 @ @ <nl> < / rule > <nl> <nl> < rule ref = " rulesets / java / migrating . xml " / > <nl> + < rule ref = " rulesets / java / migrating . xml / JUnit4TestShouldUseTestAnnotation " > <nl> + < ! - - False positive of PMD . Non - test methods can be named as ' test ' - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' PackageObjectFactory ' ] " / > <nl> + < / rule > <nl> <nl> < rule ref = " rulesets / java / naming . xml " > <nl> < ! - - we use CheckstyleCustomShortVariable , to control lenght ( will be fixed in PMD 5 . 4 ) and skip Override methods - - > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> index 8f2b42f . . c3418e6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> @ @ - 22 , 11 + 22 , 12 @ @ package com . puppycrawl . tools . checkstyle ; <nl> import java . lang . reflect . Constructor ; <nl> import java . util . Iterator ; <nl> import java . util . Set ; <nl> + import java . util . function . Predicate ; <nl> + import java . util . stream . Collectors ; <nl> <nl> import org . apache . commons . logging . Log ; <nl> import org . apache . commons . logging . LogFactory ; <nl> <nl> - import com . google . common . base . Joiner ; <nl> import com . google . common . collect . Sets ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> @ @ - 90 , 9 + 91 , 9 @ @ public class PackageObjectFactory implements ModuleFactory { <nl> instance = createObjectWithIgnoringProblems ( nameCheck , getAllPossibleNames ( nameCheck ) ) ; <nl> if ( instance = = null ) { <nl> <nl> - final String attemptedNames = joinPackageNamesWithClassName ( name ) <nl> + final String attemptedNames = joinPackageNamesWithClassName ( name , packages ) <nl> + STRING _ SEPARATOR + nameCheck + STRING _ SEPARATOR <nl> - + joinPackageNamesWithClassName ( nameCheck ) ; <nl> + + joinPackageNamesWithClassName ( nameCheck , packages ) ; <nl> final LocalizedMessage exceptionMessage = new LocalizedMessage ( 0 , <nl> Definitions . CHECKSTYLE _ BUNDLE , UNABLE _ TO _ INSTANTIATE _ EXCEPTION _ MESSAGE , <nl> new String [ ] { name , attemptedNames } , null , getClass ( ) , null ) ; <nl> @ @ - 137 , 11 + 138 , 16 @ @ public class PackageObjectFactory implements ModuleFactory { <nl> / * * <nl> * Creates a string by joining package names with a class name . <nl> * @ param className name of the class for joining . <nl> + * @ param packages packages names . <nl> * @ return a string which is obtained by joining package names with a class name . <nl> * / <nl> - private String joinPackageNamesWithClassName ( String className ) { <nl> - final Joiner joiner = Joiner . on ( className + STRING _ SEPARATOR ) . skipNulls ( ) ; <nl> - return joiner . join ( packages ) + className ; <nl> + private static String joinPackageNamesWithClassName ( String className , Set < String > packages ) { <nl> + return packages . stream ( ) . filter ( new Predicate < String > ( ) { <nl> + @ Override <nl> + public boolean test ( String name ) { <nl> + return name ! = null ; <nl> + } <nl> + } ) . collect ( Collectors . joining ( className + STRING _ SEPARATOR , " " , className ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FullIdent . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FullIdent . java <nl> index 5dbda49 . . a61085b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FullIdent . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FullIdent . java <nl> @ @ - 22 , 8 + 22 , 6 @ @ package com . puppycrawl . tools . checkstyle . api ; <nl> import java . util . ArrayList ; <nl> import java . util . List ; <nl> <nl> - import com . google . common . base . Joiner ; <nl> - <nl> / * * <nl> * Represents a full identifier , including dots , with associated <nl> * position information . <nl> @ @ - 76 , 7 + 74 , 7 @ @ public final class FullIdent { <nl> * @ return the text <nl> * / <nl> public String getText ( ) { <nl> - return Joiner . on ( " " ) . join ( elements ) ; <nl> + return String . join ( " " , elements ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java <nl> index 002c507 . . a09ae70 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java <nl> @ @ - 24 , 8 + 24 , 6 @ @ import java . util . Deque ; <nl> import java . util . LinkedList ; <nl> import java . util . List ; <nl> <nl> - import com . google . common . base . Joiner ; <nl> - <nl> import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> @ @ - 159 , 7 + 157 , 7 @ @ public class FinalClassCheck <nl> qualifiedNameParts . add ( 0 , traverse . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ) ; <nl> traverse = traverse . findFirstToken ( TokenTypes . DOT ) ; <nl> } <nl> - className = Joiner . on ( PACKAGE _ SEPARATOR ) . join ( qualifiedNameParts ) ; <nl> + className = String . join ( PACKAGE _ SEPARATOR , qualifiedNameParts ) ; <nl> } <nl> else { <nl> className = classExtend . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java <nl> index 9251a0c . . eb45953 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java <nl> @ @ - 19 , 9 + 19 , 13 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> + import static junit . framework . TestCase . assertEquals ; <nl> import static org . junit . Assert . assertNotNull ; <nl> <nl> + import java . lang . reflect . Method ; <nl> + import java . util . Collections ; <nl> import java . util . HashSet ; <nl> + import java . util . Set ; <nl> <nl> import org . junit . Test ; <nl> <nl> @ @ - 59 , 4 + 63 , 17 @ @ public class PackageObjectFactoryTest { <nl> " com . puppycrawl . tools . checkstyle . checks . naming . ConstantName " ) ; <nl> assertNotNull ( check ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testJoinPackageNamesWhichContainNullWithClassName ( ) throws Exception { <nl> + final Class < PackageObjectFactory > clazz = PackageObjectFactory . class ; <nl> + final Method method = <nl> + clazz . getDeclaredMethod ( " joinPackageNamesWithClassName " , String . class , Set . class ) ; <nl> + method . setAccessible ( true ) ; <nl> + final Set < String > packages = Collections . singleton ( null ) ; <nl> + final String className = " SomeClass " ; <nl> + final String actual = <nl> + String . valueOf ( method . invoke ( PackageObjectFactory . class , className , packages ) ) ; <nl> + assertEquals ( className , actual ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index 3753081 . . fad53e6 100644 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 17 , 6 + 17 , 69 @ @ 
 
 < ! - - placeholder for a new section - - > 
 
 + < section name = " Release 7 . 3 " > 
 + < p > Breaking backward compatibility : < / p > 
 + < ul > 
 + < li > 
 + Javadoc grammar : Delete child nodes in Javadoc TEXT node . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3170 " > # 3170 < / a > 
 + < / li > 
 + < / ul > 
 + < p > New : < / p > 
 + < ul > 
 + < li > 
 + Update Google style coverage to state of 12 July 2016 . Author : alberto . cuda < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3381 " > # 3381 < / a > 
 + < / li > 
 + < li > 
 + Modules and XDocs : changed setter methods to recieve similar types with field type for easier xdoc validation . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3255 " > # 3255 < / a > 
 + < / li > 
 + < li > 
 + CLI : Cannot override default Checker . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3515 " > # 3515 < / a > 
 + < / li > 
 + < li > 
 + ParameterNameCheck : new scope and excludeScope properties . Author : alberto . cuda < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3473 " > # 3473 < / a > 
 + < / li > 
 + < li > 
 + google _ checks . xml CustomImportOrder problem . Author : Andrei Selkin < a href = " https : / / github . com / checkstyle / checkstyle / issues / 941 " > # 941 < / a > 
 + < / li > 
 + < / ul > 
 + < p > Bug fixes : < / p > 
 + < ul > 
 + < li > 
 + GUI : Add support of DetailNode objects in CodeSelector . Author : kazachka < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3432 " > # 3432 < / a > 
 + < / li > 
 + < li > 
 + GUI : Inconsistency in AST structure for block - comments . Author : kazachka < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3445 " > # 3445 < / a > 
 + < / li > 
 + < li > 
 + Checker Cache not saving files that have suppressed violations . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3488 " > # 3488 < / a > 
 + < / li > 
 + < / ul > 
 + < p > Notes : < / p > 
 + < ul > 
 + < li > 
 + ImportOrder : checkstyle _ checks . xml does not have separate & quot ; java & quot ; group . Author : linelect < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3577 " > # 3577 < / a > 
 + < / li > 
 + < li > 
 + doc : fix broken link to file filters page . Author : Ken Geis 
 + < / li > 
 + < li > 
 + use ForbidAnnotationElementValueCheck from sevntu . checkstyle . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3567 " > # 3567 < / a > 
 + < / li > 
 + < li > 
 + Turn on Config Cache File Locally for Developers . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3487 " > # 3487 < / a > 
 + < / li > 
 + < li > 
 + document isCommentNodesRequired method in xdoc . Author : Roman Ivanov < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3561 " > # 3561 < / a > 
 + < / li > 
 + < li > 
 + Checkstyle tests should not require internet . Author : rnveach < a href = " https : / / github . com / checkstyle / checkstyle / issues / 3536 " > # 3536 < / a > 
 + < / li > 
 + < li > 
 + doc : note was placed to TranslationCheck that it has problems with Checker cache . Author : Roman Ivanov 
 + < / li > 
 + < / ul > 
 + < / section > 
 + 
 < section name = " Release 7 . 2 " > 
 < p > New : < / p > 
 < ul >

NEAREST DIFF:
diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 9f8ee6c . . 9c49590 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 210 , 6 + 210 , 10 @ @ 
 < / rule > 
 
 < rule ref = " rulesets / java / migrating . xml " / > 
 + < rule ref = " rulesets / java / migrating . xml / JUnit4TestShouldUseTestAnnotation " > 
 + < ! - - False positive of PMD . Non - test methods can be named as ' test ' - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' PackageObjectFactory ' ] " / > 
 + < / rule > 
 
 < rule ref = " rulesets / java / naming . xml " > 
 < ! - - we use CheckstyleCustomShortVariable , to control lenght ( will be fixed in PMD 5 . 4 ) and skip Override methods - - > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 index 8f2b42f . . c3418e6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 @ @ - 22 , 11 + 22 , 12 @ @ package com . puppycrawl . tools . checkstyle ; 
 import java . lang . reflect . Constructor ; 
 import java . util . Iterator ; 
 import java . util . Set ; 
 + import java . util . function . Predicate ; 
 + import java . util . stream . Collectors ; 
 
 import org . apache . commons . logging . Log ; 
 import org . apache . commons . logging . LogFactory ; 
 
 - import com . google . common . base . Joiner ; 
 import com . google . common . collect . Sets ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 @ @ - 90 , 9 + 91 , 9 @ @ public class PackageObjectFactory implements ModuleFactory { 
 instance = createObjectWithIgnoringProblems ( nameCheck , getAllPossibleNames ( nameCheck ) ) ; 
 if ( instance = = null ) { 
 
 - final String attemptedNames = joinPackageNamesWithClassName ( name ) 
 + final String attemptedNames = joinPackageNamesWithClassName ( name , packages ) 
 + STRING _ SEPARATOR + nameCheck + STRING _ SEPARATOR 
 - + joinPackageNamesWithClassName ( nameCheck ) ; 
 + + joinPackageNamesWithClassName ( nameCheck , packages ) ; 
 final LocalizedMessage exceptionMessage = new LocalizedMessage ( 0 , 
 Definitions . CHECKSTYLE _ BUNDLE , UNABLE _ TO _ INSTANTIATE _ EXCEPTION _ MESSAGE , 
 new String [ ] { name , attemptedNames } , null , getClass ( ) , null ) ; 
 @ @ - 137 , 11 + 138 , 16 @ @ public class PackageObjectFactory implements ModuleFactory { 
 / * * 
 * Creates a string by joining package names with a class name . 
 * @ param className name of the class for joining . 
 + * @ param packages packages names . 
 * @ return a string which is obtained by joining package names with a class name . 
 * / 
 - private String joinPackageNamesWithClassName ( String className ) { 
 - final Joiner joiner = Joiner . on ( className + STRING _ SEPARATOR ) . skipNulls ( ) ; 
 - return joiner . join ( packages ) + className ; 
 + private static String joinPackageNamesWithClassName ( String className , Set < String > packages ) { 
 + return packages . stream ( ) . filter ( new Predicate < String > ( ) { 
 + @ Override 
 + public boolean test ( String name ) { 
 + return name ! = null ; 
 + } 
 + } ) . collect ( Collectors . joining ( className + STRING _ SEPARATOR , " " , className ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FullIdent . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FullIdent . java 
 index 5dbda49 . . a61085b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FullIdent . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FullIdent . java 
 @ @ - 22 , 8 + 22 , 6 @ @ package com . puppycrawl . tools . checkstyle . api ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 
 - import com . google . common . base . Joiner ; 
 - 
 / * * 
 * Represents a full identifier , including dots , with associated 
 * position information . 
 @ @ - 76 , 7 + 74 , 7 @ @ public final class FullIdent { 
 * @ return the text 
 * / 
 public String getText ( ) { 
 - return Joiner . on ( " " ) . join ( elements ) ; 
 + return String . join ( " " , elements ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java 
 index 002c507 . . a09ae70 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java 
 @ @ - 24 , 8 + 24 , 6 @ @ import java . util . Deque ; 
 import java . util . LinkedList ; 
 import java . util . List ; 
 
 - import com . google . common . base . Joiner ; 
 - 
 import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 @ @ - 159 , 7 + 157 , 7 @ @ public class FinalClassCheck 
 qualifiedNameParts . add ( 0 , traverse . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ) ; 
 traverse = traverse . findFirstToken ( TokenTypes . DOT ) ; 
 } 
 - className = Joiner . on ( PACKAGE _ SEPARATOR ) . join ( qualifiedNameParts ) ; 
 + className = String . join ( PACKAGE _ SEPARATOR , qualifiedNameParts ) ; 
 } 
 else { 
 className = classExtend . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java 
 index 9251a0c . . eb45953 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageObjectFactoryTest . java 
 @ @ - 19 , 9 + 19 , 13 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 + import static junit . framework . TestCase . assertEquals ; 
 import static org . junit . Assert . assertNotNull ; 
 
 + import java . lang . reflect . Method ; 
 + import java . util . Collections ; 
 import java . util . HashSet ; 
 + import java . util . Set ; 
 
 import org . junit . Test ; 
 
 @ @ - 59 , 4 + 63 , 17 @ @ public class PackageObjectFactoryTest { 
 " com . puppycrawl . tools . checkstyle . checks . naming . ConstantName " ) ; 
 assertNotNull ( check ) ; 
 } 
 + 
 + @ Test 
 + public void testJoinPackageNamesWhichContainNullWithClassName ( ) throws Exception { 
 + final Class < PackageObjectFactory > clazz = PackageObjectFactory . class ; 
 + final Method method = 
 + clazz . getDeclaredMethod ( " joinPackageNamesWithClassName " , String . class , Set . class ) ; 
 + method . setAccessible ( true ) ; 
 + final Set < String > packages = Collections . singleton ( null ) ; 
 + final String className = " SomeClass " ; 
 + final String actual = 
 + String . valueOf ( method . invoke ( PackageObjectFactory . class , className , packages ) ) ; 
 + assertEquals ( className , actual ) ; 
 + } 
 }
