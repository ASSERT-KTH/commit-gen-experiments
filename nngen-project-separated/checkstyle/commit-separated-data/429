BLEU SCORE: 0.17098323692758396

TEST MSG: config : bump version for maven - site - plugin to 3 . 7 version
GENERATED MSG: config : bump spotbugs version to 3 . 0 . 6

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index b498661 . . 12305a8 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 212 , 7 + 212 , 7 @ @ <nl> < project . reporting . outputEncoding > UTF - 8 < / project . reporting . outputEncoding > <nl> < projectVersion > $ { project . version } < / projectVersion > <nl> < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > <nl> - < maven . site . plugin . version > 3 . 6 < / maven . site . plugin . version > <nl> + < maven . site . plugin . version > 3 . 7 < / maven . site . plugin . version > <nl> < maven . findbugs . plugin . version > 3 . 0 . 5 < / maven . findbugs . plugin . version > <nl> < maven . spotbugs . plugin . version > 3 . 0 . 6 < / maven . spotbugs . plugin . version > <nl> < maven . pmd . plugin . version > 3 . 8 < / maven . pmd . plugin . version >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> index 4fb87fe . . 0f0665c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> @ @ - 24 , 7 + 24 , 6 @ @ import java . io . FileInputStream ; <nl> import java . io . FileOutputStream ; <nl> import java . io . IOException ; <nl> import java . io . OutputStream ; <nl> - import java . net . URL ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . List ; <nl> @ @ - 93 , 7 + 92 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> private String fileName ; <nl> <nl> / * * Config file containing configuration . * / <nl> - private String configLocation ; <nl> + private String config ; <nl> <nl> / * * Whether to fail build on violations . * / <nl> private boolean failOnViolation = true ; <nl> @ @ - 230 , 42 + 229 , 13 @ @ public class CheckstyleAntTask extends Task { <nl> <nl> / * * <nl> * Sets configuration file . <nl> - * @ param file the configuration file to use <nl> + * @ param configuration the configuration file , URL , or resource to use <nl> * / <nl> - public void setConfig ( File file ) { <nl> - setConfigLocation ( file . getAbsolutePath ( ) ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Sets URL to the configuration . <nl> - * @ param url the URL of the configuration to use <nl> - * @ deprecated please use setConfigUrl instead <nl> - * / <nl> - / / - @ cs [ AbbreviationAsWordInName ] Should be removed at 7 . 0 version , <nl> - / / we keep for some time to avoid braking compatibility . <nl> - @ Deprecated <nl> - public void setConfigURL ( URL url ) { <nl> - setConfigUrl ( url ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Sets URL to the configuration . <nl> - * @ param url the URL of the configuration to use <nl> - * / <nl> - public void setConfigUrl ( URL url ) { <nl> - setConfigLocation ( url . toExternalForm ( ) ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Sets the location of the configuration . <nl> - * @ param location the location , which is either a <nl> - * / <nl> - private void setConfigLocation ( String location ) { <nl> - if ( configLocation ! = null ) { <nl> - throw new BuildException ( " Attributes ' config ' and ' configURL ' " <nl> - + " must not be set at the same time " ) ; <nl> + public void setConfig ( String configuration ) { <nl> + if ( config ! = null ) { <nl> + throw new BuildException ( " Attribute ' config ' has already been set " ) ; <nl> } <nl> - configLocation = location ; <nl> + config = configuration ; <nl> } <nl> <nl> / * * <nl> @ @ - 316 , 7 + 286 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> " Must specify at least one of ' file ' or nested ' fileset ' or ' path ' . " , <nl> getLocation ( ) ) ; <nl> } <nl> - if ( configLocation = = null ) { <nl> + if ( config = = null ) { <nl> throw new BuildException ( " Must specify ' config ' . " , getLocation ( ) ) ; <nl> } <nl> realExecute ( version ) ; <nl> @ @ - 381 , 7 + 351 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> <nl> log ( " Running Checkstyle " + checkstyleVersion + " on " + files . size ( ) <nl> + " files " , Project . MSG _ INFO ) ; <nl> - log ( " Using configuration " + configLocation , Project . MSG _ VERBOSE ) ; <nl> + log ( " Using configuration " + config , Project . MSG _ VERBOSE ) ; <nl> <nl> final int numErrs ; <nl> <nl> @ @ - 421 , 9 + 391 , 9 @ @ public class CheckstyleAntTask extends Task { <nl> final RootModule rootModule ; <nl> try { <nl> final Properties props = createOverridingProperties ( ) ; <nl> - final Configuration config = <nl> + final Configuration configuration = <nl> ConfigurationLoader . loadConfiguration ( <nl> - configLocation , <nl> + config , <nl> new PropertiesExpander ( props ) , <nl> ! executeIgnoredModules ) ; <nl> <nl> @ @ - 433 , 7 + 403 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> final ModuleFactory factory = new PackageObjectFactory ( <nl> Checker . class . getPackage ( ) . getName ( ) + " . " , moduleClassLoader ) ; <nl> <nl> - rootModule = ( RootModule ) factory . createModule ( config . getName ( ) ) ; <nl> + rootModule = ( RootModule ) factory . createModule ( configuration . getName ( ) ) ; <nl> rootModule . setModuleClassLoader ( moduleClassLoader ) ; <nl> <nl> if ( rootModule instanceof Checker ) { <nl> @ @ - 443 , 11 + 413 , 11 @ @ public class CheckstyleAntTask extends Task { <nl> ( ( Checker ) rootModule ) . setClassLoader ( loader ) ; <nl> } <nl> <nl> - rootModule . configure ( config ) ; <nl> + rootModule . configure ( configuration ) ; <nl> } <nl> catch ( final CheckstyleException ex ) { <nl> throw new BuildException ( String . format ( Locale . ROOT , " Unable to create Root Module : " <nl> - + " configLocation { % s } , classpath { % s } . " , configLocation , classpath ) , ex ) ; <nl> + + " config { % s } , classpath { % s } . " , config , classpath ) , ex ) ; <nl> } <nl> return rootModule ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> index 4211573 . . 4fa9be5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> @ @ - 73 , 6 + 73 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> private static final String WARNING _ INPUT = <nl> " ant / checkstyleanttask / InputCheckstyleAntTaskWarning . java " ; <nl> private static final String CONFIG _ FILE = " ant / ant _ task _ test _ checks . xml " ; <nl> + private static final String CONFIG _ RESOURCE = " / com / puppycrawl / tools / checkstyle / " + CONFIG _ FILE ; <nl> private static final String CUSTOM _ ROOT _ CONFIG _ FILE = " config - custom - root - module . xml " ; <nl> private static final String NOT _ EXISTING _ FILE = " target / not _ existing . xml " ; <nl> private static final String FAILURE _ PROPERTY _ VALUE = " myValue " ; <nl> @ @ - 83 , 7 + 84 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> <nl> private CheckstyleAntTask getCheckstyleAntTask ( String configFile ) throws IOException { <nl> final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; <nl> - antTask . setConfig ( new File ( getPath ( configFile ) ) ) ; <nl> + antTask . setConfig ( getPath ( configFile ) ) ; <nl> antTask . setProject ( new Project ( ) ) ; <nl> return antTask ; <nl> } <nl> @ @ - 184 , 7 + 185 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> @ Test <nl> public final void testNonExistingConfig ( ) throws IOException { <nl> final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; <nl> - antTask . setConfig ( new File ( getPath ( NOT _ EXISTING _ FILE ) ) ) ; <nl> + antTask . setConfig ( getPath ( NOT _ EXISTING _ FILE ) ) ; <nl> antTask . setProject ( new Project ( ) ) ; <nl> antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> try { <nl> @ @ - 193 , 14 + 194 , 14 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> } <nl> catch ( BuildException ex ) { <nl> assertTrue ( " Error message is unexpected " , <nl> - ex . getMessage ( ) . startsWith ( " Unable to create Root Module : configLocation " ) ) ; <nl> + ex . getMessage ( ) . startsWith ( " Unable to create Root Module : config " ) ) ; <nl> } <nl> } <nl> <nl> @ Test <nl> public final void testEmptyConfigFile ( ) throws IOException { <nl> final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; <nl> - antTask . setConfig ( new File ( getPath ( " ant / empty _ config . xml " ) ) ) ; <nl> + antTask . setConfig ( getPath ( " ant / empty _ config . xml " ) ) ; <nl> antTask . setProject ( new Project ( ) ) ; <nl> antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> try { <nl> @ @ - 209 , 7 + 210 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> } <nl> catch ( BuildException ex ) { <nl> assertTrue ( " Error message is unexpected " , <nl> - ex . getMessage ( ) . startsWith ( " Unable to create Root Module : configLocation " ) ) ; <nl> + ex . getMessage ( ) . startsWith ( " Unable to create Root Module : config " ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 253 , 7 + 254 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> @ Test <nl> public final void testFailureProperty ( ) throws IOException { <nl> final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; <nl> - antTask . setConfig ( new File ( getPath ( CONFIG _ FILE ) ) ) ; <nl> + antTask . setConfig ( getPath ( CONFIG _ FILE ) ) ; <nl> antTask . setFile ( new File ( getPath ( VIOLATED _ INPUT ) ) ) ; <nl> <nl> final Project project = new Project ( ) ; <nl> @ @ - 323 , 32 + 324 , 29 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; <nl> antTask . setProject ( new Project ( ) ) ; <nl> final URL url = new File ( getPath ( CONFIG _ FILE ) ) . toURI ( ) . toURL ( ) ; <nl> - antTask . setConfigURL ( url ) ; <nl> + antTask . setConfig ( url . toString ( ) ) ; <nl> + antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> + antTask . execute ( ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public final void testConfigurationByResource ( ) throws IOException { <nl> + final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; <nl> + antTask . setProject ( new Project ( ) ) ; <nl> + antTask . setConfig ( CONFIG _ RESOURCE ) ; <nl> antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> antTask . execute ( ) ; <nl> } <nl> <nl> @ Test <nl> public final void testSimultaneousConfiguration ( ) throws IOException { <nl> - CheckstyleAntTask antTask ; <nl> final File file = new File ( getPath ( CONFIG _ FILE ) ) ; <nl> final URL url = file . toURI ( ) . toURL ( ) ; <nl> - final String expected = <nl> - " Attributes ' config ' and ' configURL ' must not be set at the same time " ; <nl> - try { <nl> - antTask = new CheckstyleAntTask ( ) ; <nl> - antTask . setConfigUrl ( url ) ; <nl> - antTask . setConfig ( file ) ; <nl> - fail ( " Exception is expected " ) ; <nl> - } <nl> - catch ( BuildException ex ) { <nl> - assertEquals ( " Error message is unexpected " , <nl> - expected , ex . getMessage ( ) ) ; <nl> - } <nl> + final String expected = " Attribute ' config ' has already been set " ; <nl> try { <nl> - antTask = new CheckstyleAntTask ( ) ; <nl> - antTask . setConfig ( file ) ; <nl> - antTask . setConfigUrl ( url ) ; <nl> + final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; <nl> + antTask . setConfig ( url . toString ( ) ) ; <nl> + antTask . setConfig ( file . toString ( ) ) ; <nl> fail ( " Exception is expected " ) ; <nl> } <nl> catch ( BuildException ex ) { <nl> @ @ - 515 , 7 + 513 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void testCheckerException ( ) throws IOException { <nl> final CheckstyleAntTask antTask = new CheckstyleAntTaskStub ( ) ; <nl> - antTask . setConfig ( new File ( getPath ( CONFIG _ FILE ) ) ) ; <nl> + antTask . setConfig ( getPath ( CONFIG _ FILE ) ) ; <nl> antTask . setProject ( new Project ( ) ) ; <nl> antTask . setFile ( new File ( " " ) ) ; <nl> try { <nl> @ @ - 533 , 7 + 531 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> final CheckstyleAntTaskLogStub antTask = new CheckstyleAntTaskLogStub ( ) ; <nl> final URL url = new File ( getPath ( CONFIG _ FILE ) ) . toURI ( ) . toURL ( ) ; <nl> antTask . setProject ( new Project ( ) ) ; <nl> - antTask . setConfigURL ( url ) ; <nl> + antTask . setConfig ( url . toString ( ) ) ; <nl> antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> <nl> mockStatic ( System . class ) ; <nl> diff - - git a / src / xdocs / anttask . xml . vm b / src / xdocs / anttask . xml . vm <nl> index 879fe13 . . 98233a6 100644 <nl> - - - a / src / xdocs / anttask . xml . vm <nl> + + + b / src / xdocs / anttask . xml . vm <nl> @ @ - 135 , 23 + 135 , 13 @ @ <nl> < tr > <nl> < td > config < / td > <nl> < td > <nl> - Specifies the location of the file that defines the configuration <nl> + Specifies the location of the file , URL , or Java resource that defines the configuration <nl> modules . <nl> < br / > <nl> < a href = " config . html " > See here < / a > for a description of how to <nl> define a configuration . <nl> < / td > <nl> - < td > Exactly one config file < / td > <nl> - < / tr > <nl> - <nl> - < tr > <nl> - < td > configURL < / td > <nl> - < td > <nl> - Specifies a URL or name passed to the ClassLoader . getResource ( ) method that defines the configuration modules . < a <nl> - href = " config . html " > See here < / a > for a description of how to define <nl> - a configuration . <nl> - < / td > <nl> - < td > Exactly one of config or configURL < / td > <nl> + < td > Exactly one config location < / td > <nl> < / tr > <nl> <nl> < tr >

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index b498661 . . 12305a8 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 212 , 7 + 212 , 7 @ @ 
 < project . reporting . outputEncoding > UTF - 8 < / project . reporting . outputEncoding > 
 < projectVersion > $ { project . version } < / projectVersion > 
 < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > 
 - < maven . site . plugin . version > 3 . 6 < / maven . site . plugin . version > 
 + < maven . site . plugin . version > 3 . 7 < / maven . site . plugin . version > 
 < maven . findbugs . plugin . version > 3 . 0 . 5 < / maven . findbugs . plugin . version > 
 < maven . spotbugs . plugin . version > 3 . 0 . 6 < / maven . spotbugs . plugin . version > 
 < maven . pmd . plugin . version > 3 . 8 < / maven . pmd . plugin . version >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 index 4fb87fe . . 0f0665c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 @ @ - 24 , 7 + 24 , 6 @ @ import java . io . FileInputStream ; 
 import java . io . FileOutputStream ; 
 import java . io . IOException ; 
 import java . io . OutputStream ; 
 - import java . net . URL ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 import java . util . List ; 
 @ @ - 93 , 7 + 92 , 7 @ @ public class CheckstyleAntTask extends Task { 
 private String fileName ; 
 
 / * * Config file containing configuration . * / 
 - private String configLocation ; 
 + private String config ; 
 
 / * * Whether to fail build on violations . * / 
 private boolean failOnViolation = true ; 
 @ @ - 230 , 42 + 229 , 13 @ @ public class CheckstyleAntTask extends Task { 
 
 / * * 
 * Sets configuration file . 
 - * @ param file the configuration file to use 
 + * @ param configuration the configuration file , URL , or resource to use 
 * / 
 - public void setConfig ( File file ) { 
 - setConfigLocation ( file . getAbsolutePath ( ) ) ; 
 - } 
 - 
 - / * * 
 - * Sets URL to the configuration . 
 - * @ param url the URL of the configuration to use 
 - * @ deprecated please use setConfigUrl instead 
 - * / 
 - / / - @ cs [ AbbreviationAsWordInName ] Should be removed at 7 . 0 version , 
 - / / we keep for some time to avoid braking compatibility . 
 - @ Deprecated 
 - public void setConfigURL ( URL url ) { 
 - setConfigUrl ( url ) ; 
 - } 
 - 
 - / * * 
 - * Sets URL to the configuration . 
 - * @ param url the URL of the configuration to use 
 - * / 
 - public void setConfigUrl ( URL url ) { 
 - setConfigLocation ( url . toExternalForm ( ) ) ; 
 - } 
 - 
 - / * * 
 - * Sets the location of the configuration . 
 - * @ param location the location , which is either a 
 - * / 
 - private void setConfigLocation ( String location ) { 
 - if ( configLocation ! = null ) { 
 - throw new BuildException ( " Attributes ' config ' and ' configURL ' " 
 - + " must not be set at the same time " ) ; 
 + public void setConfig ( String configuration ) { 
 + if ( config ! = null ) { 
 + throw new BuildException ( " Attribute ' config ' has already been set " ) ; 
 } 
 - configLocation = location ; 
 + config = configuration ; 
 } 
 
 / * * 
 @ @ - 316 , 7 + 286 , 7 @ @ public class CheckstyleAntTask extends Task { 
 " Must specify at least one of ' file ' or nested ' fileset ' or ' path ' . " , 
 getLocation ( ) ) ; 
 } 
 - if ( configLocation = = null ) { 
 + if ( config = = null ) { 
 throw new BuildException ( " Must specify ' config ' . " , getLocation ( ) ) ; 
 } 
 realExecute ( version ) ; 
 @ @ - 381 , 7 + 351 , 7 @ @ public class CheckstyleAntTask extends Task { 
 
 log ( " Running Checkstyle " + checkstyleVersion + " on " + files . size ( ) 
 + " files " , Project . MSG _ INFO ) ; 
 - log ( " Using configuration " + configLocation , Project . MSG _ VERBOSE ) ; 
 + log ( " Using configuration " + config , Project . MSG _ VERBOSE ) ; 
 
 final int numErrs ; 
 
 @ @ - 421 , 9 + 391 , 9 @ @ public class CheckstyleAntTask extends Task { 
 final RootModule rootModule ; 
 try { 
 final Properties props = createOverridingProperties ( ) ; 
 - final Configuration config = 
 + final Configuration configuration = 
 ConfigurationLoader . loadConfiguration ( 
 - configLocation , 
 + config , 
 new PropertiesExpander ( props ) , 
 ! executeIgnoredModules ) ; 
 
 @ @ - 433 , 7 + 403 , 7 @ @ public class CheckstyleAntTask extends Task { 
 final ModuleFactory factory = new PackageObjectFactory ( 
 Checker . class . getPackage ( ) . getName ( ) + " . " , moduleClassLoader ) ; 
 
 - rootModule = ( RootModule ) factory . createModule ( config . getName ( ) ) ; 
 + rootModule = ( RootModule ) factory . createModule ( configuration . getName ( ) ) ; 
 rootModule . setModuleClassLoader ( moduleClassLoader ) ; 
 
 if ( rootModule instanceof Checker ) { 
 @ @ - 443 , 11 + 413 , 11 @ @ public class CheckstyleAntTask extends Task { 
 ( ( Checker ) rootModule ) . setClassLoader ( loader ) ; 
 } 
 
 - rootModule . configure ( config ) ; 
 + rootModule . configure ( configuration ) ; 
 } 
 catch ( final CheckstyleException ex ) { 
 throw new BuildException ( String . format ( Locale . ROOT , " Unable to create Root Module : " 
 - + " configLocation { % s } , classpath { % s } . " , configLocation , classpath ) , ex ) ; 
 + + " config { % s } , classpath { % s } . " , config , classpath ) , ex ) ; 
 } 
 return rootModule ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 index 4211573 . . 4fa9be5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 @ @ - 73 , 6 + 73 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 private static final String WARNING _ INPUT = 
 " ant / checkstyleanttask / InputCheckstyleAntTaskWarning . java " ; 
 private static final String CONFIG _ FILE = " ant / ant _ task _ test _ checks . xml " ; 
 + private static final String CONFIG _ RESOURCE = " / com / puppycrawl / tools / checkstyle / " + CONFIG _ FILE ; 
 private static final String CUSTOM _ ROOT _ CONFIG _ FILE = " config - custom - root - module . xml " ; 
 private static final String NOT _ EXISTING _ FILE = " target / not _ existing . xml " ; 
 private static final String FAILURE _ PROPERTY _ VALUE = " myValue " ; 
 @ @ - 83 , 7 + 84 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 
 private CheckstyleAntTask getCheckstyleAntTask ( String configFile ) throws IOException { 
 final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; 
 - antTask . setConfig ( new File ( getPath ( configFile ) ) ) ; 
 + antTask . setConfig ( getPath ( configFile ) ) ; 
 antTask . setProject ( new Project ( ) ) ; 
 return antTask ; 
 } 
 @ @ - 184 , 7 + 185 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 @ Test 
 public final void testNonExistingConfig ( ) throws IOException { 
 final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; 
 - antTask . setConfig ( new File ( getPath ( NOT _ EXISTING _ FILE ) ) ) ; 
 + antTask . setConfig ( getPath ( NOT _ EXISTING _ FILE ) ) ; 
 antTask . setProject ( new Project ( ) ) ; 
 antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 try { 
 @ @ - 193 , 14 + 194 , 14 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 } 
 catch ( BuildException ex ) { 
 assertTrue ( " Error message is unexpected " , 
 - ex . getMessage ( ) . startsWith ( " Unable to create Root Module : configLocation " ) ) ; 
 + ex . getMessage ( ) . startsWith ( " Unable to create Root Module : config " ) ) ; 
 } 
 } 
 
 @ Test 
 public final void testEmptyConfigFile ( ) throws IOException { 
 final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; 
 - antTask . setConfig ( new File ( getPath ( " ant / empty _ config . xml " ) ) ) ; 
 + antTask . setConfig ( getPath ( " ant / empty _ config . xml " ) ) ; 
 antTask . setProject ( new Project ( ) ) ; 
 antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 try { 
 @ @ - 209 , 7 + 210 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 } 
 catch ( BuildException ex ) { 
 assertTrue ( " Error message is unexpected " , 
 - ex . getMessage ( ) . startsWith ( " Unable to create Root Module : configLocation " ) ) ; 
 + ex . getMessage ( ) . startsWith ( " Unable to create Root Module : config " ) ) ; 
 } 
 } 
 
 @ @ - 253 , 7 + 254 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 @ Test 
 public final void testFailureProperty ( ) throws IOException { 
 final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; 
 - antTask . setConfig ( new File ( getPath ( CONFIG _ FILE ) ) ) ; 
 + antTask . setConfig ( getPath ( CONFIG _ FILE ) ) ; 
 antTask . setFile ( new File ( getPath ( VIOLATED _ INPUT ) ) ) ; 
 
 final Project project = new Project ( ) ; 
 @ @ - 323 , 32 + 324 , 29 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; 
 antTask . setProject ( new Project ( ) ) ; 
 final URL url = new File ( getPath ( CONFIG _ FILE ) ) . toURI ( ) . toURL ( ) ; 
 - antTask . setConfigURL ( url ) ; 
 + antTask . setConfig ( url . toString ( ) ) ; 
 + antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 + antTask . execute ( ) ; 
 + } 
 + 
 + @ Test 
 + public final void testConfigurationByResource ( ) throws IOException { 
 + final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; 
 + antTask . setProject ( new Project ( ) ) ; 
 + antTask . setConfig ( CONFIG _ RESOURCE ) ; 
 antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 antTask . execute ( ) ; 
 } 
 
 @ Test 
 public final void testSimultaneousConfiguration ( ) throws IOException { 
 - CheckstyleAntTask antTask ; 
 final File file = new File ( getPath ( CONFIG _ FILE ) ) ; 
 final URL url = file . toURI ( ) . toURL ( ) ; 
 - final String expected = 
 - " Attributes ' config ' and ' configURL ' must not be set at the same time " ; 
 - try { 
 - antTask = new CheckstyleAntTask ( ) ; 
 - antTask . setConfigUrl ( url ) ; 
 - antTask . setConfig ( file ) ; 
 - fail ( " Exception is expected " ) ; 
 - } 
 - catch ( BuildException ex ) { 
 - assertEquals ( " Error message is unexpected " , 
 - expected , ex . getMessage ( ) ) ; 
 - } 
 + final String expected = " Attribute ' config ' has already been set " ; 
 try { 
 - antTask = new CheckstyleAntTask ( ) ; 
 - antTask . setConfig ( file ) ; 
 - antTask . setConfigUrl ( url ) ; 
 + final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; 
 + antTask . setConfig ( url . toString ( ) ) ; 
 + antTask . setConfig ( file . toString ( ) ) ; 
 fail ( " Exception is expected " ) ; 
 } 
 catch ( BuildException ex ) { 
 @ @ - 515 , 7 + 513 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 @ Test 
 public void testCheckerException ( ) throws IOException { 
 final CheckstyleAntTask antTask = new CheckstyleAntTaskStub ( ) ; 
 - antTask . setConfig ( new File ( getPath ( CONFIG _ FILE ) ) ) ; 
 + antTask . setConfig ( getPath ( CONFIG _ FILE ) ) ; 
 antTask . setProject ( new Project ( ) ) ; 
 antTask . setFile ( new File ( " " ) ) ; 
 try { 
 @ @ - 533 , 7 + 531 , 7 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 final CheckstyleAntTaskLogStub antTask = new CheckstyleAntTaskLogStub ( ) ; 
 final URL url = new File ( getPath ( CONFIG _ FILE ) ) . toURI ( ) . toURL ( ) ; 
 antTask . setProject ( new Project ( ) ) ; 
 - antTask . setConfigURL ( url ) ; 
 + antTask . setConfig ( url . toString ( ) ) ; 
 antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 
 mockStatic ( System . class ) ; 
 diff - - git a / src / xdocs / anttask . xml . vm b / src / xdocs / anttask . xml . vm 
 index 879fe13 . . 98233a6 100644 
 - - - a / src / xdocs / anttask . xml . vm 
 + + + b / src / xdocs / anttask . xml . vm 
 @ @ - 135 , 23 + 135 , 13 @ @ 
 < tr > 
 < td > config < / td > 
 < td > 
 - Specifies the location of the file that defines the configuration 
 + Specifies the location of the file , URL , or Java resource that defines the configuration 
 modules . 
 < br / > 
 < a href = " config . html " > See here < / a > for a description of how to 
 define a configuration . 
 < / td > 
 - < td > Exactly one config file < / td > 
 - < / tr > 
 - 
 - < tr > 
 - < td > configURL < / td > 
 - < td > 
 - Specifies a URL or name passed to the ClassLoader . getResource ( ) method that defines the configuration modules . < a 
 - href = " config . html " > See here < / a > for a description of how to define 
 - a configuration . 
 - < / td > 
 - < td > Exactly one of config or configURL < / td > 
 + < td > Exactly one config location < / td > 
 < / tr > 
 
 < tr >
