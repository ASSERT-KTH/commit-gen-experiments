BLEU SCORE: 0.07495553473355841

TEST MSG: Issue # 6496 : made and documented all filter elements are immutable
GENERATED MSG: Issue # 4734 : remove equals / hashcode from SuppressionFilter

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElement . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElement . java <nl> index 54a26a6 . . e6bc9e4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElement . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElement . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ import java . util . StringTokenizer ; <nl> <nl> / * * <nl> * < p > <nl> - * This filter accepts an integer that matches a CSV value , where <nl> + * This filter element is immutable and accepts an integer that matches a CSV value , where <nl> * each value is an integer or a range of integers . <nl> * < / p > <nl> * / <nl> @ @ - 68 , 7 + 68 , 7 @ @ class CsvFilterElement implements IntFilterElement { <nl> * Adds a IntFilterElement to the set . <nl> * @ param filter the IntFilterElement to add . <nl> * / <nl> - public final void addFilter ( IntFilterElement filter ) { <nl> + private void addFilter ( IntFilterElement filter ) { <nl> filters . add ( filter ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterElement . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterElement . java <nl> index f59e442 . . 11ee0e1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterElement . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterElement . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> package com . puppycrawl . tools . checkstyle . filters ; <nl> <nl> / * * <nl> - * This filter accepts a matching Integer . <nl> + * This filter element is immutable and accepts a matching Integer . <nl> * / <nl> class IntMatchFilterElement implements IntFilterElement { <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterElement . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterElement . java <nl> index 4c3d3c5 . . e25264c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterElement . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterElement . java <nl> @ @ - 22 , 7 + 22 , 7 @ @ package com . puppycrawl . tools . checkstyle . filters ; <nl> import java . util . Objects ; <nl> <nl> / * * <nl> - * This filter accepts an Integer in a range . <nl> + * This filter element is immutable and accepts an Integer in a range . <nl> * / <nl> class IntRangeFilterElement implements IntFilterElement { <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterElement . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterElement . java <nl> index 6b528c9 . . c96f236 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterElement . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterElement . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import net . sf . saxon . sxpath . XPathExpression ; <nl> import net . sf . saxon . trans . XPathException ; <nl> <nl> / * * <nl> - * This filter processes { @ link TreeWalkerAuditEvent } <nl> + * This filter element is immutable and processes { @ link TreeWalkerAuditEvent } <nl> * objects based on the criteria of file , check , module id , xpathQuery . <nl> * <nl> * / <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElementTest . java <nl> index b12049a . . 59e6189 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElementTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElementTest . java <nl> @ @ - 85 , 32 + 85 , 6 @ @ public class CsvFilterElementTest { <nl> } <nl> <nl> @ Test <nl> - public void testOneFilter ( ) { <nl> - final CsvFilterElement filter = new CsvFilterElement ( " " ) ; <nl> - filter . addFilter ( new IntMatchFilterElement ( 0 ) ) ; <nl> - assertTrue ( " 0 " , filter . accept ( 0 ) ) ; <nl> - assertFalse ( " 1 " , filter . accept ( 1 ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testMultipleFilter ( ) { <nl> - final CsvFilterElement filter = new CsvFilterElement ( " " ) ; <nl> - filter . addFilter ( new IntMatchFilterElement ( 0 ) ) ; <nl> - filter . addFilter ( new IntRangeFilterElement ( 0 , 2 ) ) ; <nl> - assertTrue ( " 0 " , filter . accept ( 0 ) ) ; <nl> - assertTrue ( " 1 " , filter . accept ( 1 ) ) ; <nl> - filter . addFilter ( new IntRangeFilterElement ( 3 , 4 ) ) ; <nl> - assertTrue ( " 0 is in [ 3 , 4 ] " , filter . accept ( 0 ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testGetFilters ( ) { <nl> - final CsvFilterElement filter = new CsvFilterElement ( " " ) ; <nl> - filter . addFilter ( new IntMatchFilterElement ( 0 ) ) ; <nl> - assertEquals ( " size is the same " , 1 , filter . getFilters ( ) . size ( ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> final EqualsVerifierReport ev = EqualsVerifier . forClass ( CsvFilterElement . class ) <nl> . usingGetClass ( ) . report ( ) ;
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> index eea5b2b . . f4477cc 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> @ @ - 128 , 9 + 128 , 12 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( RightCurlyCheck . class ) ; <nl> checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE _ OR _ SINGLELINE . toString ( ) ) ; <nl> checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , METHOD _ DEF " ) ; <nl> - checkConfig . addAttribute ( " shouldStartLine " , " false " ) ; <nl> final String [ ] expected = { <nl> + " 111 : 6 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 6 ) , <nl> " 122 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , <nl> + " 122 : 6 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 6 ) , <nl> + " 136 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , <nl> + " 136 : 6 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 6 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputRightCurlyLeft . java " ) , expected ) ; <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElement . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElement . java 
 index 54a26a6 . . e6bc9e4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElement . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElement . java 
 @ @ - 27 , 7 + 27 , 7 @ @ import java . util . StringTokenizer ; 
 
 / * * 
 * < p > 
 - * This filter accepts an integer that matches a CSV value , where 
 + * This filter element is immutable and accepts an integer that matches a CSV value , where 
 * each value is an integer or a range of integers . 
 * < / p > 
 * / 
 @ @ - 68 , 7 + 68 , 7 @ @ class CsvFilterElement implements IntFilterElement { 
 * Adds a IntFilterElement to the set . 
 * @ param filter the IntFilterElement to add . 
 * / 
 - public final void addFilter ( IntFilterElement filter ) { 
 + private void addFilter ( IntFilterElement filter ) { 
 filters . add ( filter ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterElement . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterElement . java 
 index f59e442 . . 11ee0e1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterElement . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterElement . java 
 @ @ - 20 , 7 + 20 , 7 @ @ 
 package com . puppycrawl . tools . checkstyle . filters ; 
 
 / * * 
 - * This filter accepts a matching Integer . 
 + * This filter element is immutable and accepts a matching Integer . 
 * / 
 class IntMatchFilterElement implements IntFilterElement { 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterElement . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterElement . java 
 index 4c3d3c5 . . e25264c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterElement . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterElement . java 
 @ @ - 22 , 7 + 22 , 7 @ @ package com . puppycrawl . tools . checkstyle . filters ; 
 import java . util . Objects ; 
 
 / * * 
 - * This filter accepts an Integer in a range . 
 + * This filter element is immutable and accepts an Integer in a range . 
 * / 
 class IntRangeFilterElement implements IntFilterElement { 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterElement . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterElement . java 
 index 6b528c9 . . c96f236 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterElement . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterElement . java 
 @ @ - 36 , 7 + 36 , 7 @ @ import net . sf . saxon . sxpath . XPathExpression ; 
 import net . sf . saxon . trans . XPathException ; 
 
 / * * 
 - * This filter processes { @ link TreeWalkerAuditEvent } 
 + * This filter element is immutable and processes { @ link TreeWalkerAuditEvent } 
 * objects based on the criteria of file , check , module id , xpathQuery . 
 * 
 * / 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElementTest . java 
 index b12049a . . 59e6189 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElementTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterElementTest . java 
 @ @ - 85 , 32 + 85 , 6 @ @ public class CsvFilterElementTest { 
 } 
 
 @ Test 
 - public void testOneFilter ( ) { 
 - final CsvFilterElement filter = new CsvFilterElement ( " " ) ; 
 - filter . addFilter ( new IntMatchFilterElement ( 0 ) ) ; 
 - assertTrue ( " 0 " , filter . accept ( 0 ) ) ; 
 - assertFalse ( " 1 " , filter . accept ( 1 ) ) ; 
 - } 
 - 
 - @ Test 
 - public void testMultipleFilter ( ) { 
 - final CsvFilterElement filter = new CsvFilterElement ( " " ) ; 
 - filter . addFilter ( new IntMatchFilterElement ( 0 ) ) ; 
 - filter . addFilter ( new IntRangeFilterElement ( 0 , 2 ) ) ; 
 - assertTrue ( " 0 " , filter . accept ( 0 ) ) ; 
 - assertTrue ( " 1 " , filter . accept ( 1 ) ) ; 
 - filter . addFilter ( new IntRangeFilterElement ( 3 , 4 ) ) ; 
 - assertTrue ( " 0 is in [ 3 , 4 ] " , filter . accept ( 0 ) ) ; 
 - } 
 - 
 - @ Test 
 - public void testGetFilters ( ) { 
 - final CsvFilterElement filter = new CsvFilterElement ( " " ) ; 
 - filter . addFilter ( new IntMatchFilterElement ( 0 ) ) ; 
 - assertEquals ( " size is the same " , 1 , filter . getFilters ( ) . size ( ) ) ; 
 - } 
 - 
 - @ Test 
 public void testEqualsAndHashCode ( ) { 
 final EqualsVerifierReport ev = EqualsVerifier . forClass ( CsvFilterElement . class ) 
 . usingGetClass ( ) . report ( ) ;

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 index eea5b2b . . f4477cc 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 @ @ - 128 , 9 + 128 , 12 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { 
 final DefaultConfiguration checkConfig = createModuleConfig ( RightCurlyCheck . class ) ; 
 checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE _ OR _ SINGLELINE . toString ( ) ) ; 
 checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , METHOD _ DEF " ) ; 
 - checkConfig . addAttribute ( " shouldStartLine " , " false " ) ; 
 final String [ ] expected = { 
 + " 111 : 6 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 6 ) , 
 " 122 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , 
 + " 122 : 6 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 6 ) , 
 + " 136 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , 
 + " 136 : 6 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 6 ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputRightCurlyLeft . java " ) , expected ) ; 
 }
