BLEU SCORE: 0.8931539818068694

TEST MSG: Issue # 6320 : added REMOVE _ CONDITIONALS mutator for misc
GENERATED MSG: Issue # 6320 : added REMOVE _ CONDITIONALS mutator for design

TEST DIFF (one line): diff - - git a / config / checkstyle _ resources _ suppressions . xml b / config / checkstyle _ resources _ suppressions . xml <nl> index 675bc87 . . 3aef04c 100644 <nl> - - - a / config / checkstyle _ resources _ suppressions . xml <nl> + + + b / config / checkstyle _ resources _ suppressions . xml <nl> @ @ - 48 , 6 + 48 , 10 @ @ <nl> <nl> < ! - - intentional problem for testing - - > <nl> < suppress checks = " OuterTypeFilename " <nl> + files = " outertypefilename [ \ \ / ] InputOuterTypeFilename1a \ . java " / > <nl> + < suppress checks = " OuterTypeFilename " <nl> files = " outertypefilename [ \ \ / ] InputOuterTypeFilename5 \ . java " / > <nl> + < suppress checks = " OuterTypeFilename " <nl> + files = " outertypefilename [ \ \ / ] InputOuterTypeFilenameNoPublic \ . java " / > <nl> <nl> < / suppressions > <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index da9ec92 . . 5ac8143 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 88 , 7 + 88 , 8 @ @ <nl> < suppress checks = " ClassDataAbstractionCoupling " <nl> files = " ( Checker | Main | CheckstyleAntTask | JavadocDetailNodeParser ) \ . java " / > <nl> < suppress checks = " ClassDataAbstractionCoupling " <nl> - files = " ( CheckerTest | AbstractModuleTestSupport | CheckstyleAntTaskTest ) \ . java " / > <nl> + files = " ( CheckerTest | AbstractModuleTestSupport | CheckstyleAntTaskTest | <nl> + | TranslationCheckTest ) \ . java " / > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " PropertyCacheFileTest \ . java " / > <nl> < suppress checks = " ClassDataAbstractionCoupling " <nl> files = " XpathFileGeneratorAuditListenerTest \ . java " / > <nl> diff - - git a / pom . xml b / pom . xml <nl> index a01b4ed . . 1fd1a87 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1784 , 6 + 1784 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheck . java <nl> index b91ba51 . . dc527ff 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheck . java <nl> @ @ - 137 , 14 + 137 , 10 @ @ public class FinalParametersCheck extends AbstractCheck { <nl> private void visitMethod ( final DetailAST method ) { <nl> final DetailAST modifiers = <nl> method . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - / / exit on fast lane if there is nothing to check here <nl> <nl> - if ( method . findFirstToken ( TokenTypes . PARAMETERS ) <nl> - . findFirstToken ( TokenTypes . PARAMETER _ DEF ) ! = null <nl> - / / ignore abstract and native methods <nl> - & & modifiers . findFirstToken ( TokenTypes . ABSTRACT ) = = null <nl> + / / ignore abstract and native methods <nl> + if ( modifiers . findFirstToken ( TokenTypes . ABSTRACT ) = = null <nl> & & modifiers . findFirstToken ( TokenTypes . LITERAL _ NATIVE ) = = null ) { <nl> - / / we can now be sure that there is at least one parameter <nl> final DetailAST parameters = <nl> method . findFirstToken ( TokenTypes . PARAMETERS ) ; <nl> DetailAST child = parameters . getFirstChild ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java <nl> index 2ac371c . . 3cf0175 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java <nl> @ @ - 67 , 10 + 67 , 9 @ @ public enum LineSeparatorOption { <nl> public boolean matches ( byte . . . bytes ) { <nl> final boolean result ; <nl> if ( this = = LF _ CR _ CRLF ) { <nl> - / / this silently assumes CRLF and ANY have the same length <nl> - / / and LF and CR are of length 1 <nl> - result = CRLF . matches ( bytes ) <nl> - | | LF . matches ( Arrays . copyOfRange ( bytes , 1 , 2 ) ) <nl> + / / this silently assumes LF and CR are of length 1 <nl> + / / CRLF always matches LF , so CRLF isn ' t tested <nl> + result = LF . matches ( Arrays . copyOfRange ( bytes , 1 , 2 ) ) <nl> | | CR . matches ( Arrays . copyOfRange ( bytes , 1 , 2 ) ) ; <nl> } <nl> else { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java <nl> index 939398d . . e6faece 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java <nl> @ @ - 51 , 9 + 51 , 6 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { <nl> / * * If file has public type . * / <nl> private boolean hasPublic ; <nl> <nl> - / * * If first type has has same name as file . * / <nl> - private boolean validFirst ; <nl> - <nl> / * * Outer type with mismatched file name . * / <nl> private DetailAST wrongType ; <nl> <nl> @ @ - 81 , 7 + 78 , 6 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { <nl> public void beginTree ( DetailAST rootAST ) { <nl> fileName = getFileName ( ) ; <nl> seenFirstToken = false ; <nl> - validFirst = false ; <nl> hasPublic = false ; <nl> wrongType = null ; <nl> } <nl> @ @ - 98 , 10 + 94 , 7 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { <nl> else { <nl> final String outerTypeName = ast . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; <nl> <nl> - if ( fileName . equals ( outerTypeName ) ) { <nl> - validFirst = true ; <nl> - } <nl> - else { <nl> + if ( ! fileName . equals ( outerTypeName ) ) { <nl> wrongType = ast ; <nl> } <nl> } <nl> @ @ - 110 , 7 + 103 , 7 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public void finishTree ( DetailAST rootAST ) { <nl> - if ( ! validFirst & & ! hasPublic & & wrongType ! = null ) { <nl> + if ( ! hasPublic & & wrongType ! = null ) { <nl> log ( wrongType . getLineNo ( ) , MSG _ KEY ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> index d3c1a2a . . f4ae067 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> @ @ - 435 , 17 + 435 , 15 @ @ public class TranslationCheck extends AbstractFileSetCheck { <nl> * / <nl> private void checkTranslationKeys ( ResourceBundle bundle ) { <nl> final Set < File > filesInBundle = bundle . getFiles ( ) ; <nl> - if ( filesInBundle . size ( ) > = 2 ) { <nl> - / / build a map from files to the keys they contain <nl> - final Set < String > allTranslationKeys = new HashSet < > ( ) ; <nl> - final Map < File , Set < String > > filesAssociatedWithKeys = new HashMap < > ( ) ; <nl> - for ( File currentFile : filesInBundle ) { <nl> - final Set < String > keysInCurrentFile = getTranslationKeys ( currentFile ) ; <nl> - allTranslationKeys . addAll ( keysInCurrentFile ) ; <nl> - filesAssociatedWithKeys . put ( currentFile , keysInCurrentFile ) ; <nl> - } <nl> - checkFilesForConsistencyRegardingTheirKeys ( filesAssociatedWithKeys , allTranslationKeys ) ; <nl> + / / build a map from files to the keys they contain <nl> + final Set < String > allTranslationKeys = new HashSet < > ( ) ; <nl> + final Map < File , Set < String > > filesAssociatedWithKeys = new HashMap < > ( ) ; <nl> + for ( File currentFile : filesInBundle ) { <nl> + final Set < String > keysInCurrentFile = getTranslationKeys ( currentFile ) ; <nl> + allTranslationKeys . addAll ( keysInCurrentFile ) ; <nl> + filesAssociatedWithKeys . put ( currentFile , keysInCurrentFile ) ; <nl> } <nl> + checkFilesForConsistencyRegardingTheirKeys ( filesAssociatedWithKeys , allTranslationKeys ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 463 , 10 + 461 , 8 @ @ public class TranslationCheck extends AbstractFileSetCheck { <nl> final Set < String > currentFileKeys = fileKey . getValue ( ) ; <nl> final Set < String > missingKeys = keysThatMustExist . stream ( ) <nl> . filter ( key - > ! currentFileKeys . contains ( key ) ) . collect ( Collectors . toSet ( ) ) ; <nl> - if ( ! missingKeys . isEmpty ( ) ) { <nl> - for ( Object key : missingKeys ) { <nl> - log ( 1 , MSG _ KEY , key ) ; <nl> - } <nl> + for ( Object key : missingKeys ) { <nl> + log ( 1 , MSG _ KEY , key ) ; <nl> } <nl> fireErrors ( path ) ; <nl> dispatcher . fireFileFinished ( path ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java <nl> index 554fbb0 . . 2bd2e4f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java <nl> @ @ - 128 , 6 + 128 , 29 @ @ public class FinalParametersCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testPrimitiveTypesParameters ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createModuleConfig ( FinalParametersCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 5 : 14 : " + getCheckMessage ( MSG _ KEY , " i " ) , <nl> + " 6 : 15 : " + getCheckMessage ( MSG _ KEY , " i " ) , <nl> + " 6 : 22 : " + getCheckMessage ( MSG _ KEY , " k " ) , <nl> + " 6 : 32 : " + getCheckMessage ( MSG _ KEY , " s " ) , <nl> + " 7 : 15 : " + getCheckMessage ( MSG _ KEY , " s " ) , <nl> + " 7 : 25 : " + getCheckMessage ( MSG _ KEY , " o " ) , <nl> + " 7 : 35 : " + getCheckMessage ( MSG _ KEY , " l " ) , <nl> + " 8 : 15 : " + getCheckMessage ( MSG _ KEY , " array " ) , <nl> + " 9 : 15 : " + getCheckMessage ( MSG _ KEY , " i " ) , <nl> + " 9 : 22 : " + getCheckMessage ( MSG _ KEY , " x " ) , <nl> + " 9 : 31 : " + getCheckMessage ( MSG _ KEY , " s " ) , <nl> + " 10 : 15 : " + getCheckMessage ( MSG _ KEY , " x " ) , <nl> + " 10 : 22 : " + getCheckMessage ( MSG _ KEY , " l " ) , <nl> + " 10 : 32 : " + getCheckMessage ( MSG _ KEY , " s " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputFinalParametersPrimitiveTypes . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testReceiverParameters ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createModuleConfig ( FinalParametersCheck . class ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java <nl> index 964248b . . f499201 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java <nl> @ @ - 87 , 6 + 87 , 15 @ @ public class OuterTypeFilenameCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testNestedClass2 ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( OuterTypeFilenameCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 3 : " + getCheckMessage ( MSG _ KEY ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputOuterTypeFilename1a . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testFinePublic ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( OuterTypeFilenameCheck . class ) ; <nl> final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; <nl> @ @ - 101 , 6 + 110 , 15 @ @ public class OuterTypeFilenameCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testNoPublicClasses ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( OuterTypeFilenameCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 3 : " + getCheckMessage ( MSG _ KEY ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputOuterTypeFilenameNoPublic . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testFineDefault ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( OuterTypeFilenameCheck . class ) ; <nl> final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java <nl> index e5e8c4f . . 68cb0ea9 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java <nl> @ @ - 200 , 6 + 200 , 14 @ @ public class SuppressWarningsHolderTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testIsSuppressedAfterEventEnd2 ( ) throws Exception { <nl> + createHolder ( " check " , 100 , 100 , 350 , 350 ) ; <nl> + final AuditEvent event = createAuditEvent ( " check " , 400 , 10 ) ; <nl> + <nl> + assertFalse ( " Event is not suppressed " , SuppressWarningsHolder . isSuppressed ( event ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testIsSuppressedAfterEventStart ( ) throws Exception { <nl> createHolder ( " check " , 100 , 100 , 350 , 350 ) ; <nl> final AuditEvent event = createAuditEvent ( " check " , 100 , 100 ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java <nl> index a455355 . . 109739d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java <nl> @ @ - 62 , 6 + 62 , 8 @ @ public class TrailingCommentCheckTest extends AbstractModuleTestSupport { <nl> " 18 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 19 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 29 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 31 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputTrailingComment . java " ) , expected ) ; <nl> } <nl> @ @ - 76 , 6 + 78 , 7 @ @ public class TrailingCommentCheckTest extends AbstractModuleTestSupport { <nl> " 8 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 18 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 19 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 31 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputTrailingComment . java " ) , expected ) ; <nl> } <nl> @ @ - 97 , 6 + 100 , 8 @ @ public class TrailingCommentCheckTest extends AbstractModuleTestSupport { <nl> " 19 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 26 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 29 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 31 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputTrailingComment . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> index be02286 . . baac8e1 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> @ @ - 34 , 15 + 34 , 19 @ @ import static org . mockito . Mockito . times ; <nl> import java . io . ByteArrayOutputStream ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> + import java . io . Writer ; <nl> import java . lang . reflect . Field ; <nl> import java . lang . reflect . Method ; <nl> import java . nio . charset . StandardCharsets ; <nl> + import java . nio . file . Files ; <nl> import java . util . Collection ; <nl> import java . util . Collections ; <nl> import java . util . Set ; <nl> import java . util . SortedSet ; <nl> <nl> + import org . junit . Rule ; <nl> import org . junit . Test ; <nl> + import org . junit . rules . TemporaryFolder ; <nl> import org . junit . runner . RunWith ; <nl> import org . mockito . ArgumentCaptor ; <nl> import org . mockito . Captor ; <nl> @ @ - 53 , 20 + 57 , 22 @ @ import com . google . common . collect . ImmutableMap ; <nl> import com . puppycrawl . tools . checkstyle . AbstractXmlTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . Checker ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + import com . puppycrawl . tools . checkstyle . Definitions ; <nl> import com . puppycrawl . tools . checkstyle . XMLLogger ; <nl> import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . api . MessageDispatcher ; <nl> - import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; <nl> - import com . puppycrawl . tools . checkstyle . api . SeverityLevelCounter ; <nl> import com . puppycrawl . tools . checkstyle . internal . utils . XmlUtil ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> <nl> @ RunWith ( PowerMockRunner . class ) <nl> public class TranslationCheckTest extends AbstractXmlTestSupport { <nl> <nl> + @ Rule <nl> + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> + <nl> @ Captor <nl> private ArgumentCaptor < SortedSet < LocalizedMessage > > captor ; <nl> <nl> @ @ - 92 , 6 + 98 , 48 @ @ public class TranslationCheckTest extends AbstractXmlTestSupport { <nl> expected ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testDifferentBases ( ) throws Exception { <nl> + final Configuration checkConfig = createModuleConfig ( TranslationCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 1 : " + getCheckMessage ( MSG _ KEY , " only . english " ) , <nl> + } ; <nl> + final File [ ] propertyFiles = { <nl> + new File ( getPath ( " messages _ test _ de . properties " ) ) , <nl> + new File ( getPath ( " messages _ test . properties " ) ) , <nl> + new File ( getPath ( " messages _ translation . properties " ) ) , <nl> + new File ( getPath ( " messages _ translation _ de . properties " ) ) , <nl> + } ; <nl> + verify ( <nl> + createChecker ( checkConfig ) , <nl> + propertyFiles , <nl> + getPath ( " messages _ test _ de . properties " ) , <nl> + expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testDifferentPaths ( ) throws Exception { <nl> + final File file = temporaryFolder . newFile ( " messages _ test _ de . properties " ) ; <nl> + try ( Writer writer = Files . newBufferedWriter ( file . toPath ( ) , StandardCharsets . UTF _ 8 ) ) { <nl> + final String content = " hello = Hello \ ncancel = Cancel " ; <nl> + writer . write ( content ) ; <nl> + } <nl> + final Configuration checkConfig = createModuleConfig ( TranslationCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " messages _ test . properties " ) , <nl> + } ; <nl> + final File [ ] propertyFiles = { <nl> + file , <nl> + new File ( getPath ( " messages _ test . properties " ) ) , <nl> + } ; <nl> + verify ( <nl> + createChecker ( checkConfig ) , <nl> + propertyFiles , <nl> + file . getParent ( ) , <nl> + expected ) ; <nl> + } <nl> + <nl> / * * <nl> * Even when we pass several files to AbstractModuleTestSupport # verify , <nl> * the check processes it during one run , so we cannot reproduce situation <nl> @ @ - 196 , 18 + 244 , 22 @ @ public class TranslationCheckTest extends AbstractXmlTestSupport { <nl> / / in checks running part . So I had to do it with reflection to improve coverage . <nl> final TranslationCheck check = new TranslationCheck ( ) ; <nl> final DefaultConfiguration checkConfig = createModuleConfig ( TranslationCheck . class ) ; <nl> + final MessageDispatcher dispatcher = mock ( MessageDispatcher . class ) ; <nl> check . configure ( checkConfig ) ; <nl> - final Checker checker = createChecker ( checkConfig ) ; <nl> - final SeverityLevelCounter counter = new SeverityLevelCounter ( SeverityLevel . ERROR ) ; <nl> - checker . addListener ( counter ) ; <nl> - check . setMessageDispatcher ( checker ) ; <nl> + check . setMessageDispatcher ( dispatcher ) ; <nl> <nl> final Method loadKeys = <nl> check . getClass ( ) . getDeclaredMethod ( " getTranslationKeys " , File . class ) ; <nl> loadKeys . setAccessible ( true ) ; <nl> final Set < String > keys = ( Set < String > ) loadKeys . invoke ( check , new File ( " . no . such . file " ) ) ; <nl> assertTrue ( " Translation keys should be empty when File is not found " , keys . isEmpty ( ) ) ; <nl> - assertEquals ( " Invalid error count " , 1 , counter . getCount ( ) ) ; <nl> + <nl> + Mockito . verify ( dispatcher , times ( 1 ) ) . fireErrors ( any ( String . class ) , captor . capture ( ) ) ; <nl> + final String actual = captor . getValue ( ) . first ( ) . getMessage ( ) ; <nl> + final LocalizedMessage localizedMessage = new LocalizedMessage ( 1 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , " general . fileNotFound " , <nl> + null , null , getClass ( ) , null ) ; <nl> + assertEquals ( " Invalid message " , localizedMessage . getMessage ( ) , actual ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 465 , 6 + 517 , 36 @ @ public class TranslationCheckTest extends AbstractXmlTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testEqualBaseNamesButDifferentExtensions2 ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( TranslationCheck . class ) ; <nl> + checkConfig . addAttribute ( " requiredTranslations " , " de , es " ) ; <nl> + checkConfig . addAttribute ( " fileExtensions " , " properties , translations " ) ; <nl> + checkConfig . addAttribute ( " baseName " , " ^ . * Labels $ " ) ; <nl> + <nl> + final File [ ] propertyFiles = { <nl> + new File ( getPath ( " ButtonLabels . properties " ) ) , <nl> + new File ( getPath ( " ButtonLabels _ de . properties " ) ) , <nl> + new File ( getPath ( " ButtonLabels _ es . properties " ) ) , <nl> + new File ( getPath ( " ButtonLabels _ ja . translations " ) ) , <nl> + } ; <nl> + <nl> + final String [ ] expected = { <nl> + " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " ButtonLabels . translations " ) , <nl> + " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " ButtonLabels _ de . translations " ) , <nl> + " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " ButtonLabels _ es . translations " ) , <nl> + } ; <nl> + <nl> + verify ( <nl> + createChecker ( checkConfig ) , <nl> + propertyFiles , <nl> + getPath ( " " ) , <nl> + expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testRegexpToMatchPartOfBaseName ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( TranslationCheck . class ) ; <nl> checkConfig . addAttribute ( " requiredTranslations " , " de , es , fr , ja " ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / arraytypestyle / InputArrayTypeStyle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / arraytypestyle / InputArrayTypeStyle . java <nl> index 6dd83fb . . df738b2 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / arraytypestyle / InputArrayTypeStyle . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / arraytypestyle / InputArrayTypeStyle . java <nl> @ @ - 42 , 4 + 42 , 5 @ @ public class InputArrayTypeStyle <nl> return null ; <nl> } <nl> } <nl> + public static void foo ( java . util . Collection < ? extends InputArrayTypeStyle [ ] > collection ) { } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilename1a . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilename1a . java <nl> new file mode 100644 <nl> index 0000000 . . 52bc378 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilename1a . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . outertypefilename ; <nl> + <nl> + class Class1 { <nl> + public interface NestedInterface { } <nl> + public enum NestedEnum { } <nl> + class NestedClass { } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilenameNoPublic . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilenameNoPublic . java <nl> new file mode 100644 <nl> index 0000000 . . 9dd7e67 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilenameNoPublic . java <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . outertypefilename ; <nl> + <nl> + class Foo { } <nl> + enum FooEnum { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / suppresswarningsholder / InputSuppressWarningsHolder2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / suppresswarningsholder / InputSuppressWarningsHolder2 . java <nl> index 023c76f . . 558d101 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / suppresswarningsholder / InputSuppressWarningsHolder2 . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / suppresswarningsholder / InputSuppressWarningsHolder2 . java <nl> @ @ - 9 , 5 + 9 , 9 @ @ public class InputSuppressWarningsHolder2 <nl> <nl> public static void main ( String [ ] args ) throws Exception { <nl> try ( @ SuppressWarnings ( " all " ) final MyResource resource = new MyResource ( ) ) { } <nl> + try ( @ MyAnnotation ( " all " ) final MyResource resource = new MyResource ( ) ) { } <nl> } <nl> } <nl> + @ interface MyAnnotation { <nl> + String [ ] value ( ) ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / trailingcomment / InputTrailingComment . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / trailingcomment / InputTrailingComment . java <nl> index a7882db . . 251c8f2 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / trailingcomment / InputTrailingComment . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / trailingcomment / InputTrailingComment . java <nl> @ @ - 27 , 4 + 27 , 7 @ @ public class InputTrailingComment { <nl> * comment with trailing space <nl> * / <nl> final static public String NAME = " Some Name " ; / / NOI18N <nl> + final static public String NAME2 = " Some Name " ; / * NOI18N * / <nl> + String NAME3 = " Some Name " ; / * NOI18N <nl> + * / <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / uncommentedmain / InputUncommentedMain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / uncommentedmain / InputUncommentedMain . java <nl> index a142225 . . 1682da2 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / uncommentedmain / InputUncommentedMain . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / uncommentedmain / InputUncommentedMain . java <nl> @ @ - 98 , 3 + 98 , 12 @ @ class UncommentedMainTest8 <nl> System . identityHashCode ( " test8 . main ( ) " ) ; <nl> } <nl> } <nl> + <nl> + class UncommentedMainTest9 <nl> + { <nl> + <nl> + public static void main ( String args ) <nl> + { <nl> + System . identityHashCode ( " test9 . main ( ) " ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index acc14d4 . . 83ebc30 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1844 , 51 + 1844 , 14 @ @ <nl> < version > $ { pitest . plugin . version } < / version > <nl> < configuration > <nl> < targetClasses > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationLocationCheck <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationOnSameLineCheck <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationUseStyleCheck <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . MissingDeprecatedCheck <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . MissingOverrideCheck <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . PackageAnnotationCheck <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . SuppressWarningsCheck <nl> - < / param > <nl> + < param > com . puppycrawl . tools . checkstyle . checks . annotation . * < / param > <nl> < / targetClasses > <nl> < targetTests > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationLocationCheckTest <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationOnSameLineCheckTest <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationUseStyleCheckTest <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . MissingDeprecatedCheckTest <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . MissingOverrideCheckTest <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . PackageAnnotationCheckTest <nl> - < / param > <nl> - < param > <nl> - com . puppycrawl . tools . checkstyle . checks . annotation . SuppressWarningsCheckTest <nl> - < / param > <nl> + < param > com . puppycrawl . tools . checkstyle . checks . annotation . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 1918 , 6 + 1881 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . blocks . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 97 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 1947 , 6 + 1913 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . coding . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 98 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 1976 , 6 + 1945 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . design . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2005 , 6 + 1977 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . header . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2034 , 6 + 2009 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . imports . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 96 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2063 , 6 + 2041 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . indentation . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 94 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2092 , 6 + 2073 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . javadoc . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 95 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2121 , 6 + 2105 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . metrics . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2150 , 6 + 2137 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . modifier . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2179 , 6 + 2169 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . naming . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < excludedClasses > <nl> < ! - - This class is in deprecation phase - - > <nl> < param > <nl> @ @ - 2214 , 6 + 2207 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . regexp . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2243 , 6 + 2239 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . sizes . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2272 , 6 + 2271 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . whitespace . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2302 , 6 + 2304 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . ant . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2468 , 6 + 2473 , 9 @ @ <nl> com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheckTest <nl> < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < excludedMethods > <nl> < ! - - destroy in TreeWalker was added in case module had to free up resources <nl> before ending , but currently it does nothing , so we cannot check it . <nl> @ @ - 2517 , 6 + 2525 , 9 @ @ <nl> < param > com . puppycrawl . tools . checkstyle . CheckerTest < / param > <nl> < param > com . puppycrawl . tools . checkstyle . checks . TranslationCheckTest < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < excludedMethods > <nl> < ! - - cause of https : / / github . com / checkstyle / checkstyle / issues / 3605 - - > <nl> < param > addFeaturesForVerySecureJavaInstallations < / param > <nl> @ @ - 2558 , 6 + 2569 , 9 @ @ <nl> < param > com . puppycrawl . tools . checkstyle . filefilters . * < / param > <nl> < param > com . puppycrawl . tools . checkstyle . filters . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2605 , 6 + 2619 , 9 @ @ <nl> com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocVariableCheckTest <nl> < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2634 , 6 + 2651 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . gui . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 40 < / coverageThreshold > <nl> < mutationThreshold > 29 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> @ @ - 2688 , 6 + 2708 , 9 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . xpath . * < / param > <nl> < / targetTests > <nl> + < excludedTestClasses > <nl> + < param > * . Input * < / param > <nl> + < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor >

TEST DIFF:
diff - - git a / config / checkstyle _ resources _ suppressions . xml b / config / checkstyle _ resources _ suppressions . xml 
 index 675bc87 . . 3aef04c 100644 
 - - - a / config / checkstyle _ resources _ suppressions . xml 
 + + + b / config / checkstyle _ resources _ suppressions . xml 
 @ @ - 48 , 6 + 48 , 10 @ @ 
 
 < ! - - intentional problem for testing - - > 
 < suppress checks = " OuterTypeFilename " 
 + files = " outertypefilename [ \ \ / ] InputOuterTypeFilename1a \ . java " / > 
 + < suppress checks = " OuterTypeFilename " 
 files = " outertypefilename [ \ \ / ] InputOuterTypeFilename5 \ . java " / > 
 + < suppress checks = " OuterTypeFilename " 
 + files = " outertypefilename [ \ \ / ] InputOuterTypeFilenameNoPublic \ . java " / > 
 
 < / suppressions > 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index da9ec92 . . 5ac8143 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 88 , 7 + 88 , 8 @ @ 
 < suppress checks = " ClassDataAbstractionCoupling " 
 files = " ( Checker | Main | CheckstyleAntTask | JavadocDetailNodeParser ) \ . java " / > 
 < suppress checks = " ClassDataAbstractionCoupling " 
 - files = " ( CheckerTest | AbstractModuleTestSupport | CheckstyleAntTaskTest ) \ . java " / > 
 + files = " ( CheckerTest | AbstractModuleTestSupport | CheckstyleAntTaskTest | 
 + | TranslationCheckTest ) \ . java " / > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " PropertyCacheFileTest \ . java " / > 
 < suppress checks = " ClassDataAbstractionCoupling " 
 files = " XpathFileGeneratorAuditListenerTest \ . java " / > 
 diff - - git a / pom . xml b / pom . xml 
 index a01b4ed . . 1fd1a87 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1784 , 6 + 1784 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheck . java 
 index b91ba51 . . dc527ff 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheck . java 
 @ @ - 137 , 14 + 137 , 10 @ @ public class FinalParametersCheck extends AbstractCheck { 
 private void visitMethod ( final DetailAST method ) { 
 final DetailAST modifiers = 
 method . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - / / exit on fast lane if there is nothing to check here 
 
 - if ( method . findFirstToken ( TokenTypes . PARAMETERS ) 
 - . findFirstToken ( TokenTypes . PARAMETER _ DEF ) ! = null 
 - / / ignore abstract and native methods 
 - & & modifiers . findFirstToken ( TokenTypes . ABSTRACT ) = = null 
 + / / ignore abstract and native methods 
 + if ( modifiers . findFirstToken ( TokenTypes . ABSTRACT ) = = null 
 & & modifiers . findFirstToken ( TokenTypes . LITERAL _ NATIVE ) = = null ) { 
 - / / we can now be sure that there is at least one parameter 
 final DetailAST parameters = 
 method . findFirstToken ( TokenTypes . PARAMETERS ) ; 
 DetailAST child = parameters . getFirstChild ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java 
 index 2ac371c . . 3cf0175 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java 
 @ @ - 67 , 10 + 67 , 9 @ @ public enum LineSeparatorOption { 
 public boolean matches ( byte . . . bytes ) { 
 final boolean result ; 
 if ( this = = LF _ CR _ CRLF ) { 
 - / / this silently assumes CRLF and ANY have the same length 
 - / / and LF and CR are of length 1 
 - result = CRLF . matches ( bytes ) 
 - | | LF . matches ( Arrays . copyOfRange ( bytes , 1 , 2 ) ) 
 + / / this silently assumes LF and CR are of length 1 
 + / / CRLF always matches LF , so CRLF isn ' t tested 
 + result = LF . matches ( Arrays . copyOfRange ( bytes , 1 , 2 ) ) 
 | | CR . matches ( Arrays . copyOfRange ( bytes , 1 , 2 ) ) ; 
 } 
 else { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java 
 index 939398d . . e6faece 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java 
 @ @ - 51 , 9 + 51 , 6 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { 
 / * * If file has public type . * / 
 private boolean hasPublic ; 
 
 - / * * If first type has has same name as file . * / 
 - private boolean validFirst ; 
 - 
 / * * Outer type with mismatched file name . * / 
 private DetailAST wrongType ; 
 
 @ @ - 81 , 7 + 78 , 6 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { 
 public void beginTree ( DetailAST rootAST ) { 
 fileName = getFileName ( ) ; 
 seenFirstToken = false ; 
 - validFirst = false ; 
 hasPublic = false ; 
 wrongType = null ; 
 } 
 @ @ - 98 , 10 + 94 , 7 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { 
 else { 
 final String outerTypeName = ast . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; 
 
 - if ( fileName . equals ( outerTypeName ) ) { 
 - validFirst = true ; 
 - } 
 - else { 
 + if ( ! fileName . equals ( outerTypeName ) ) { 
 wrongType = ast ; 
 } 
 } 
 @ @ - 110 , 7 + 103 , 7 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { 
 
 @ Override 
 public void finishTree ( DetailAST rootAST ) { 
 - if ( ! validFirst & & ! hasPublic & & wrongType ! = null ) { 
 + if ( ! hasPublic & & wrongType ! = null ) { 
 log ( wrongType . getLineNo ( ) , MSG _ KEY ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 index d3c1a2a . . f4ae067 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 @ @ - 435 , 17 + 435 , 15 @ @ public class TranslationCheck extends AbstractFileSetCheck { 
 * / 
 private void checkTranslationKeys ( ResourceBundle bundle ) { 
 final Set < File > filesInBundle = bundle . getFiles ( ) ; 
 - if ( filesInBundle . size ( ) > = 2 ) { 
 - / / build a map from files to the keys they contain 
 - final Set < String > allTranslationKeys = new HashSet < > ( ) ; 
 - final Map < File , Set < String > > filesAssociatedWithKeys = new HashMap < > ( ) ; 
 - for ( File currentFile : filesInBundle ) { 
 - final Set < String > keysInCurrentFile = getTranslationKeys ( currentFile ) ; 
 - allTranslationKeys . addAll ( keysInCurrentFile ) ; 
 - filesAssociatedWithKeys . put ( currentFile , keysInCurrentFile ) ; 
 - } 
 - checkFilesForConsistencyRegardingTheirKeys ( filesAssociatedWithKeys , allTranslationKeys ) ; 
 + / / build a map from files to the keys they contain 
 + final Set < String > allTranslationKeys = new HashSet < > ( ) ; 
 + final Map < File , Set < String > > filesAssociatedWithKeys = new HashMap < > ( ) ; 
 + for ( File currentFile : filesInBundle ) { 
 + final Set < String > keysInCurrentFile = getTranslationKeys ( currentFile ) ; 
 + allTranslationKeys . addAll ( keysInCurrentFile ) ; 
 + filesAssociatedWithKeys . put ( currentFile , keysInCurrentFile ) ; 
 } 
 + checkFilesForConsistencyRegardingTheirKeys ( filesAssociatedWithKeys , allTranslationKeys ) ; 
 } 
 
 / * * 
 @ @ - 463 , 10 + 461 , 8 @ @ public class TranslationCheck extends AbstractFileSetCheck { 
 final Set < String > currentFileKeys = fileKey . getValue ( ) ; 
 final Set < String > missingKeys = keysThatMustExist . stream ( ) 
 . filter ( key - > ! currentFileKeys . contains ( key ) ) . collect ( Collectors . toSet ( ) ) ; 
 - if ( ! missingKeys . isEmpty ( ) ) { 
 - for ( Object key : missingKeys ) { 
 - log ( 1 , MSG _ KEY , key ) ; 
 - } 
 + for ( Object key : missingKeys ) { 
 + log ( 1 , MSG _ KEY , key ) ; 
 } 
 fireErrors ( path ) ; 
 dispatcher . fireFileFinished ( path ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java 
 index 554fbb0 . . 2bd2e4f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / FinalParametersCheckTest . java 
 @ @ - 128 , 6 + 128 , 29 @ @ public class FinalParametersCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testPrimitiveTypesParameters ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createModuleConfig ( FinalParametersCheck . class ) ; 
 + final String [ ] expected = { 
 + " 5 : 14 : " + getCheckMessage ( MSG _ KEY , " i " ) , 
 + " 6 : 15 : " + getCheckMessage ( MSG _ KEY , " i " ) , 
 + " 6 : 22 : " + getCheckMessage ( MSG _ KEY , " k " ) , 
 + " 6 : 32 : " + getCheckMessage ( MSG _ KEY , " s " ) , 
 + " 7 : 15 : " + getCheckMessage ( MSG _ KEY , " s " ) , 
 + " 7 : 25 : " + getCheckMessage ( MSG _ KEY , " o " ) , 
 + " 7 : 35 : " + getCheckMessage ( MSG _ KEY , " l " ) , 
 + " 8 : 15 : " + getCheckMessage ( MSG _ KEY , " array " ) , 
 + " 9 : 15 : " + getCheckMessage ( MSG _ KEY , " i " ) , 
 + " 9 : 22 : " + getCheckMessage ( MSG _ KEY , " x " ) , 
 + " 9 : 31 : " + getCheckMessage ( MSG _ KEY , " s " ) , 
 + " 10 : 15 : " + getCheckMessage ( MSG _ KEY , " x " ) , 
 + " 10 : 22 : " + getCheckMessage ( MSG _ KEY , " l " ) , 
 + " 10 : 32 : " + getCheckMessage ( MSG _ KEY , " s " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputFinalParametersPrimitiveTypes . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testReceiverParameters ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createModuleConfig ( FinalParametersCheck . class ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java 
 index 964248b . . f499201 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheckTest . java 
 @ @ - 87 , 6 + 87 , 15 @ @ public class OuterTypeFilenameCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testNestedClass2 ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( OuterTypeFilenameCheck . class ) ; 
 + final String [ ] expected = { 
 + " 3 : " + getCheckMessage ( MSG _ KEY ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputOuterTypeFilename1a . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testFinePublic ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( OuterTypeFilenameCheck . class ) ; 
 final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; 
 @ @ - 101 , 6 + 110 , 15 @ @ public class OuterTypeFilenameCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testNoPublicClasses ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( OuterTypeFilenameCheck . class ) ; 
 + final String [ ] expected = { 
 + " 3 : " + getCheckMessage ( MSG _ KEY ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputOuterTypeFilenameNoPublic . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testFineDefault ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( OuterTypeFilenameCheck . class ) ; 
 final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java 
 index e5e8c4f . . 68cb0ea9 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java 
 @ @ - 200 , 6 + 200 , 14 @ @ public class SuppressWarningsHolderTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testIsSuppressedAfterEventEnd2 ( ) throws Exception { 
 + createHolder ( " check " , 100 , 100 , 350 , 350 ) ; 
 + final AuditEvent event = createAuditEvent ( " check " , 400 , 10 ) ; 
 + 
 + assertFalse ( " Event is not suppressed " , SuppressWarningsHolder . isSuppressed ( event ) ) ; 
 + } 
 + 
 + @ Test 
 public void testIsSuppressedAfterEventStart ( ) throws Exception { 
 createHolder ( " check " , 100 , 100 , 350 , 350 ) ; 
 final AuditEvent event = createAuditEvent ( " check " , 100 , 100 ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java 
 index a455355 . . 109739d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheckTest . java 
 @ @ - 62 , 6 + 62 , 8 @ @ public class TrailingCommentCheckTest extends AbstractModuleTestSupport { 
 " 18 : " + getCheckMessage ( MSG _ KEY ) , 
 " 19 : " + getCheckMessage ( MSG _ KEY ) , 
 " 29 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 31 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputTrailingComment . java " ) , expected ) ; 
 } 
 @ @ - 76 , 6 + 78 , 7 @ @ public class TrailingCommentCheckTest extends AbstractModuleTestSupport { 
 " 8 : " + getCheckMessage ( MSG _ KEY ) , 
 " 18 : " + getCheckMessage ( MSG _ KEY ) , 
 " 19 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 31 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputTrailingComment . java " ) , expected ) ; 
 } 
 @ @ - 97 , 6 + 100 , 8 @ @ public class TrailingCommentCheckTest extends AbstractModuleTestSupport { 
 " 19 : " + getCheckMessage ( MSG _ KEY ) , 
 " 26 : " + getCheckMessage ( MSG _ KEY ) , 
 " 29 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 31 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputTrailingComment . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 index be02286 . . baac8e1 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 @ @ - 34 , 15 + 34 , 19 @ @ import static org . mockito . Mockito . times ; 
 import java . io . ByteArrayOutputStream ; 
 import java . io . File ; 
 import java . io . IOException ; 
 + import java . io . Writer ; 
 import java . lang . reflect . Field ; 
 import java . lang . reflect . Method ; 
 import java . nio . charset . StandardCharsets ; 
 + import java . nio . file . Files ; 
 import java . util . Collection ; 
 import java . util . Collections ; 
 import java . util . Set ; 
 import java . util . SortedSet ; 
 
 + import org . junit . Rule ; 
 import org . junit . Test ; 
 + import org . junit . rules . TemporaryFolder ; 
 import org . junit . runner . RunWith ; 
 import org . mockito . ArgumentCaptor ; 
 import org . mockito . Captor ; 
 @ @ - 53 , 20 + 57 , 22 @ @ import com . google . common . collect . ImmutableMap ; 
 import com . puppycrawl . tools . checkstyle . AbstractXmlTestSupport ; 
 import com . puppycrawl . tools . checkstyle . Checker ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + import com . puppycrawl . tools . checkstyle . Definitions ; 
 import com . puppycrawl . tools . checkstyle . XMLLogger ; 
 import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . FileText ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . api . MessageDispatcher ; 
 - import com . puppycrawl . tools . checkstyle . api . SeverityLevel ; 
 - import com . puppycrawl . tools . checkstyle . api . SeverityLevelCounter ; 
 import com . puppycrawl . tools . checkstyle . internal . utils . XmlUtil ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 
 @ RunWith ( PowerMockRunner . class ) 
 public class TranslationCheckTest extends AbstractXmlTestSupport { 
 
 + @ Rule 
 + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 + 
 @ Captor 
 private ArgumentCaptor < SortedSet < LocalizedMessage > > captor ; 
 
 @ @ - 92 , 6 + 98 , 48 @ @ public class TranslationCheckTest extends AbstractXmlTestSupport { 
 expected ) ; 
 } 
 
 + @ Test 
 + public void testDifferentBases ( ) throws Exception { 
 + final Configuration checkConfig = createModuleConfig ( TranslationCheck . class ) ; 
 + final String [ ] expected = { 
 + " 1 : " + getCheckMessage ( MSG _ KEY , " only . english " ) , 
 + } ; 
 + final File [ ] propertyFiles = { 
 + new File ( getPath ( " messages _ test _ de . properties " ) ) , 
 + new File ( getPath ( " messages _ test . properties " ) ) , 
 + new File ( getPath ( " messages _ translation . properties " ) ) , 
 + new File ( getPath ( " messages _ translation _ de . properties " ) ) , 
 + } ; 
 + verify ( 
 + createChecker ( checkConfig ) , 
 + propertyFiles , 
 + getPath ( " messages _ test _ de . properties " ) , 
 + expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testDifferentPaths ( ) throws Exception { 
 + final File file = temporaryFolder . newFile ( " messages _ test _ de . properties " ) ; 
 + try ( Writer writer = Files . newBufferedWriter ( file . toPath ( ) , StandardCharsets . UTF _ 8 ) ) { 
 + final String content = " hello = Hello \ ncancel = Cancel " ; 
 + writer . write ( content ) ; 
 + } 
 + final Configuration checkConfig = createModuleConfig ( TranslationCheck . class ) ; 
 + final String [ ] expected = { 
 + " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " messages _ test . properties " ) , 
 + } ; 
 + final File [ ] propertyFiles = { 
 + file , 
 + new File ( getPath ( " messages _ test . properties " ) ) , 
 + } ; 
 + verify ( 
 + createChecker ( checkConfig ) , 
 + propertyFiles , 
 + file . getParent ( ) , 
 + expected ) ; 
 + } 
 + 
 / * * 
 * Even when we pass several files to AbstractModuleTestSupport # verify , 
 * the check processes it during one run , so we cannot reproduce situation 
 @ @ - 196 , 18 + 244 , 22 @ @ public class TranslationCheckTest extends AbstractXmlTestSupport { 
 / / in checks running part . So I had to do it with reflection to improve coverage . 
 final TranslationCheck check = new TranslationCheck ( ) ; 
 final DefaultConfiguration checkConfig = createModuleConfig ( TranslationCheck . class ) ; 
 + final MessageDispatcher dispatcher = mock ( MessageDispatcher . class ) ; 
 check . configure ( checkConfig ) ; 
 - final Checker checker = createChecker ( checkConfig ) ; 
 - final SeverityLevelCounter counter = new SeverityLevelCounter ( SeverityLevel . ERROR ) ; 
 - checker . addListener ( counter ) ; 
 - check . setMessageDispatcher ( checker ) ; 
 + check . setMessageDispatcher ( dispatcher ) ; 
 
 final Method loadKeys = 
 check . getClass ( ) . getDeclaredMethod ( " getTranslationKeys " , File . class ) ; 
 loadKeys . setAccessible ( true ) ; 
 final Set < String > keys = ( Set < String > ) loadKeys . invoke ( check , new File ( " . no . such . file " ) ) ; 
 assertTrue ( " Translation keys should be empty when File is not found " , keys . isEmpty ( ) ) ; 
 - assertEquals ( " Invalid error count " , 1 , counter . getCount ( ) ) ; 
 + 
 + Mockito . verify ( dispatcher , times ( 1 ) ) . fireErrors ( any ( String . class ) , captor . capture ( ) ) ; 
 + final String actual = captor . getValue ( ) . first ( ) . getMessage ( ) ; 
 + final LocalizedMessage localizedMessage = new LocalizedMessage ( 1 , 
 + Definitions . CHECKSTYLE _ BUNDLE , " general . fileNotFound " , 
 + null , null , getClass ( ) , null ) ; 
 + assertEquals ( " Invalid message " , localizedMessage . getMessage ( ) , actual ) ; 
 } 
 
 @ Test 
 @ @ - 465 , 6 + 517 , 36 @ @ public class TranslationCheckTest extends AbstractXmlTestSupport { 
 } 
 
 @ Test 
 + public void testEqualBaseNamesButDifferentExtensions2 ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( TranslationCheck . class ) ; 
 + checkConfig . addAttribute ( " requiredTranslations " , " de , es " ) ; 
 + checkConfig . addAttribute ( " fileExtensions " , " properties , translations " ) ; 
 + checkConfig . addAttribute ( " baseName " , " ^ . * Labels $ " ) ; 
 + 
 + final File [ ] propertyFiles = { 
 + new File ( getPath ( " ButtonLabels . properties " ) ) , 
 + new File ( getPath ( " ButtonLabels _ de . properties " ) ) , 
 + new File ( getPath ( " ButtonLabels _ es . properties " ) ) , 
 + new File ( getPath ( " ButtonLabels _ ja . translations " ) ) , 
 + } ; 
 + 
 + final String [ ] expected = { 
 + " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " ButtonLabels . translations " ) , 
 + " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " ButtonLabels _ de . translations " ) , 
 + " 1 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " ButtonLabels _ es . translations " ) , 
 + } ; 
 + 
 + verify ( 
 + createChecker ( checkConfig ) , 
 + propertyFiles , 
 + getPath ( " " ) , 
 + expected ) ; 
 + } 
 + 
 + @ Test 
 public void testRegexpToMatchPartOfBaseName ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( TranslationCheck . class ) ; 
 checkConfig . addAttribute ( " requiredTranslations " , " de , es , fr , ja " ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / arraytypestyle / InputArrayTypeStyle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / arraytypestyle / InputArrayTypeStyle . java 
 index 6dd83fb . . df738b2 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / arraytypestyle / InputArrayTypeStyle . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / arraytypestyle / InputArrayTypeStyle . java 
 @ @ - 42 , 4 + 42 , 5 @ @ public class InputArrayTypeStyle 
 return null ; 
 } 
 } 
 + public static void foo ( java . util . Collection < ? extends InputArrayTypeStyle [ ] > collection ) { } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilename1a . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilename1a . java 
 new file mode 100644 
 index 0000000 . . 52bc378 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilename1a . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . outertypefilename ; 
 + 
 + class Class1 { 
 + public interface NestedInterface { } 
 + public enum NestedEnum { } 
 + class NestedClass { } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilenameNoPublic . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilenameNoPublic . java 
 new file mode 100644 
 index 0000000 . . 9dd7e67 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / outertypefilename / InputOuterTypeFilenameNoPublic . java 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . outertypefilename ; 
 + 
 + class Foo { } 
 + enum FooEnum { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / suppresswarningsholder / InputSuppressWarningsHolder2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / suppresswarningsholder / InputSuppressWarningsHolder2 . java 
 index 023c76f . . 558d101 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / suppresswarningsholder / InputSuppressWarningsHolder2 . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / suppresswarningsholder / InputSuppressWarningsHolder2 . java 
 @ @ - 9 , 5 + 9 , 9 @ @ public class InputSuppressWarningsHolder2 
 
 public static void main ( String [ ] args ) throws Exception { 
 try ( @ SuppressWarnings ( " all " ) final MyResource resource = new MyResource ( ) ) { } 
 + try ( @ MyAnnotation ( " all " ) final MyResource resource = new MyResource ( ) ) { } 
 } 
 } 
 + @ interface MyAnnotation { 
 + String [ ] value ( ) ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / trailingcomment / InputTrailingComment . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / trailingcomment / InputTrailingComment . java 
 index a7882db . . 251c8f2 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / trailingcomment / InputTrailingComment . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / trailingcomment / InputTrailingComment . java 
 @ @ - 27 , 4 + 27 , 7 @ @ public class InputTrailingComment { 
 * comment with trailing space 
 * / 
 final static public String NAME = " Some Name " ; / / NOI18N 
 + final static public String NAME2 = " Some Name " ; / * NOI18N * / 
 + String NAME3 = " Some Name " ; / * NOI18N 
 + * / 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / uncommentedmain / InputUncommentedMain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / uncommentedmain / InputUncommentedMain . java 
 index a142225 . . 1682da2 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / uncommentedmain / InputUncommentedMain . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / uncommentedmain / InputUncommentedMain . java 
 @ @ - 98 , 3 + 98 , 12 @ @ class UncommentedMainTest8 
 System . identityHashCode ( " test8 . main ( ) " ) ; 
 } 
 } 
 + 
 + class UncommentedMainTest9 
 + { 
 + 
 + public static void main ( String args ) 
 + { 
 + System . identityHashCode ( " test9 . main ( ) " ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index acc14d4 . . 83ebc30 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1844 , 51 + 1844 , 14 @ @ 
 < version > $ { pitest . plugin . version } < / version > 
 < configuration > 
 < targetClasses > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationLocationCheck 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationOnSameLineCheck 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationUseStyleCheck 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . MissingDeprecatedCheck 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . MissingOverrideCheck 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . PackageAnnotationCheck 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . SuppressWarningsCheck 
 - < / param > 
 + < param > com . puppycrawl . tools . checkstyle . checks . annotation . * < / param > 
 < / targetClasses > 
 < targetTests > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationLocationCheckTest 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationOnSameLineCheckTest 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationUseStyleCheckTest 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . MissingDeprecatedCheckTest 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . MissingOverrideCheckTest 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . PackageAnnotationCheckTest 
 - < / param > 
 - < param > 
 - com . puppycrawl . tools . checkstyle . checks . annotation . SuppressWarningsCheckTest 
 - < / param > 
 + < param > com . puppycrawl . tools . checkstyle . checks . annotation . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 1918 , 6 + 1881 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . blocks . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 97 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 1947 , 6 + 1913 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . coding . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 98 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 1976 , 6 + 1945 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . design . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2005 , 6 + 1977 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . header . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2034 , 6 + 2009 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . imports . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 96 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2063 , 6 + 2041 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . indentation . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 94 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2092 , 6 + 2073 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . javadoc . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 95 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2121 , 6 + 2105 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . metrics . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2150 , 6 + 2137 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . modifier . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2179 , 6 + 2169 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . naming . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < excludedClasses > 
 < ! - - This class is in deprecation phase - - > 
 < param > 
 @ @ - 2214 , 6 + 2207 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . regexp . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2243 , 6 + 2239 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . sizes . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2272 , 6 + 2271 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . whitespace . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2302 , 6 + 2304 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . ant . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2468 , 6 + 2473 , 9 @ @ 
 com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheckTest 
 < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < excludedMethods > 
 < ! - - destroy in TreeWalker was added in case module had to free up resources 
 before ending , but currently it does nothing , so we cannot check it . 
 @ @ - 2517 , 6 + 2525 , 9 @ @ 
 < param > com . puppycrawl . tools . checkstyle . CheckerTest < / param > 
 < param > com . puppycrawl . tools . checkstyle . checks . TranslationCheckTest < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < excludedMethods > 
 < ! - - cause of https : / / github . com / checkstyle / checkstyle / issues / 3605 - - > 
 < param > addFeaturesForVerySecureJavaInstallations < / param > 
 @ @ - 2558 , 6 + 2569 , 9 @ @ 
 < param > com . puppycrawl . tools . checkstyle . filefilters . * < / param > 
 < param > com . puppycrawl . tools . checkstyle . filters . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2605 , 6 + 2619 , 9 @ @ 
 com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocVariableCheckTest 
 < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2634 , 6 + 2651 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . gui . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 40 < / coverageThreshold > 
 < mutationThreshold > 29 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 @ @ - 2688 , 6 + 2708 , 9 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . xpath . * < / param > 
 < / targetTests > 
 + < excludedTestClasses > 
 + < param > * . Input * < / param > 
 + < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor >
