BLEU SCORE: 0.007665231032171737

TEST MSG: config : minor update for descriptions
GENERATED MSG: reorganization of build sequence to speedup build failure , as verify stage is most common mistakes

TEST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index 696e0c8 . . 87b399c 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 241 , 25 + 241 , 25 @ @ matrix : <nl> - COVERAGE _ CMD = " " <nl> # unit tests in German locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = de - Duser . country = DE - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> + env : DESC = " tests de " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = de - Duser . country = DE - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> # unit tests in Spanish locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = es - Duser . country = ES - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> + env : DESC = " tests es " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = es - Duser . country = ES - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> # unit tests in Finnish locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = fi - Duser . country = FI - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> + env : DESC = " tests fi " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = fi - Duser . country = FI - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> # unit tests in French locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = fr - Duser . country = FR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> + env : DESC = " tests fr " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = fr - Duser . country = FR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> # unit tests in Japanese locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = ja - Duser . country = JP - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> + env : DESC = " tests ja " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = ja - Duser . country = JP - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> # unit tests in Portuguese locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = pt - Duser . country = PT - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> + env : DESC = " tests pt " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = pt - Duser . country = PT - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> # unit tests in Turkish locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = tr - Duser . country = TR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> + env : DESC = " tests tr " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = tr - Duser . country = TR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> # unit tests ( openjdk7 , oraclejdk7 ) <nl> - jdk : openjdk7 <nl> env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " <nl> @ @ - 304 , 7 + 304 , 7 @ @ matrix : <nl> # java 8 compile ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - - DESC = " java 8 compile " <nl> + - DESC = " compile inputs by java 8 " <nl> - CMD = " javac \ $ ( grep - rl - - include = ' * . java ' ' / / Compilable with Java8 ' src / test / resources - noncompilable ) " <nl> - COVERAGE _ CMD = " " <nl> # testing of PR format
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> index 4fa2cfe . . 2a58105 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> @ @ - 229 , 7 + 229 , 9 @ @ public abstract class AbstractSuperCheck <nl> } <nl> final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; <nl> final String name = nameAST . getText ( ) ; <nl> - if ( ! getMethodName ( ) . equals ( name ) ) { <nl> + final DetailAST modifiersAST = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> + if ( ! getMethodName ( ) . equals ( name ) <nl> + | | modifiersAST . branchContains ( TokenTypes . LITERAL _ NATIVE ) ) { <nl> return false ; <nl> } <nl> final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java <nl> index 1c74215 . . 023c369 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> / * * <nl> * < p > <nl> * Checks that an overriding clone ( ) method invokes super . clone ( ) . <nl> + * Does not check native methods , as they have no possible java defined implementation . <nl> * < / p > <nl> * < p > <nl> * Reference : < a <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java <nl> index 893f265 . . 2301bde 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> / * * <nl> * < p > <nl> * Checks that an overriding finalize ( ) method invokes super . finalize ( ) . <nl> + * Does not check native methods , as they have no possible java defined implementation . <nl> * < / p > <nl> * < p > <nl> * Reference : < a <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java <nl> index e8812ba . . cfcf311 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java <nl> @ @ - 43 , 6 + 43 , 7 @ @ public class NoCloneCheckTest <nl> " 39 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 52 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 60 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 98 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> index b7a24a7 . . 0da4711 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> @ @ - 106 , 6 + 106 , 7 @ @ public class OneTopLevelClassCheckTest extends BaseCheckTestSupport { <nl> " 58 : " + getCheckMessage ( MSG _ KEY , " CloneWithTypeArgumentsAndNoSuper " ) , <nl> " 67 : " + getCheckMessage ( MSG _ KEY , " MyClassWithGenericSuperMethod " ) , <nl> " 84 : " + getCheckMessage ( MSG _ KEY , " AnotherClass " ) , <nl> + " 97 : " + getCheckMessage ( MSG _ KEY , " NativeTest " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java <nl> index 707669f . . ca858c5 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java <nl> @ @ - 93 , 3 + 93 , 7 @ @ class AnotherClass { <nl> 	 return null ; <nl> } <nl> } <nl> + <nl> + class NativeTest { <nl> + public native Object clone ( ) ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java <nl> index a7ed92b . . cd734dd 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java <nl> @ @ - 51 , 3 + 51 , 7 @ @ class MyClassWithGenericSuperMethod1 <nl> <nl> } <nl> } <nl> + <nl> + class TestNative { <nl> + public native void finalize ( ) ; <nl> + } <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index 454589a . . 23d6bdd 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 1564 , 8 + 1564 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) <nl> < section name = " SuperClone " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks that an overriding < code > clone ( ) < / code > method <nl> - invokes < code > super . clone ( ) < / code > . <nl> + Checks that an overriding < code > clone ( ) < / code > method invokes <nl> + < code > super . clone ( ) < / code > . Does not check native methods , as <nl> + they have no possible java defined implementation . <nl> < / p > <nl> <nl> < p > <nl> @ @ - 1599 , 8 + 1600 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) <nl> < section name = " SuperFinalize " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks that an overriding < code > finalize ( ) < / code > <nl> - method invokes < code > super . finalize ( ) < / code > . <nl> + Checks that an overriding < code > finalize ( ) < / code > method invokes <nl> + < code > super . finalize ( ) < / code > . Does not check native methods , as <nl> + they have no possible java defined implementation . <nl> < / p > <nl> <nl> < p >

TEST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index 696e0c8 . . 87b399c 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 241 , 25 + 241 , 25 @ @ matrix : 
 - COVERAGE _ CMD = " " 
 # unit tests in German locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = de - Duser . country = DE - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 + env : DESC = " tests de " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = de - Duser . country = DE - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 # unit tests in Spanish locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = es - Duser . country = ES - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 + env : DESC = " tests es " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = es - Duser . country = ES - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 # unit tests in Finnish locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = fi - Duser . country = FI - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 + env : DESC = " tests fi " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = fi - Duser . country = FI - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 # unit tests in French locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = fr - Duser . country = FR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 + env : DESC = " tests fr " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = fr - Duser . country = FR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 # unit tests in Japanese locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = ja - Duser . country = JP - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 + env : DESC = " tests ja " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = ja - Duser . country = JP - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 # unit tests in Portuguese locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = pt - Duser . country = PT - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 + env : DESC = " tests pt " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = pt - Duser . country = PT - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 # unit tests in Turkish locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = tr - Duser . country = TR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 + env : DESC = " tests tr " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = tr - Duser . country = TR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 # unit tests ( openjdk7 , oraclejdk7 ) 
 - jdk : openjdk7 
 env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " 
 @ @ - 304 , 7 + 304 , 7 @ @ matrix : 
 # java 8 compile ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - - DESC = " java 8 compile " 
 + - DESC = " compile inputs by java 8 " 
 - CMD = " javac \ $ ( grep - rl - - include = ' * . java ' ' / / Compilable with Java8 ' src / test / resources - noncompilable ) " 
 - COVERAGE _ CMD = " " 
 # testing of PR format

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 index 4fa2cfe . . 2a58105 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 @ @ - 229 , 7 + 229 , 9 @ @ public abstract class AbstractSuperCheck 
 } 
 final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; 
 final String name = nameAST . getText ( ) ; 
 - if ( ! getMethodName ( ) . equals ( name ) ) { 
 + final DetailAST modifiersAST = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 + if ( ! getMethodName ( ) . equals ( name ) 
 + | | modifiersAST . branchContains ( TokenTypes . LITERAL _ NATIVE ) ) { 
 return false ; 
 } 
 final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java 
 index 1c74215 . . 023c369 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java 
 @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 / * * 
 * < p > 
 * Checks that an overriding clone ( ) method invokes super . clone ( ) . 
 + * Does not check native methods , as they have no possible java defined implementation . 
 * < / p > 
 * < p > 
 * Reference : < a 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java 
 index 893f265 . . 2301bde 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java 
 @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 / * * 
 * < p > 
 * Checks that an overriding finalize ( ) method invokes super . finalize ( ) . 
 + * Does not check native methods , as they have no possible java defined implementation . 
 * < / p > 
 * < p > 
 * Reference : < a 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java 
 index e8812ba . . cfcf311 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java 
 @ @ - 43 , 6 + 43 , 7 @ @ public class NoCloneCheckTest 
 " 39 : " + getCheckMessage ( MSG _ KEY ) , 
 " 52 : " + getCheckMessage ( MSG _ KEY ) , 
 " 60 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 98 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 index b7a24a7 . . 0da4711 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 @ @ - 106 , 6 + 106 , 7 @ @ public class OneTopLevelClassCheckTest extends BaseCheckTestSupport { 
 " 58 : " + getCheckMessage ( MSG _ KEY , " CloneWithTypeArgumentsAndNoSuper " ) , 
 " 67 : " + getCheckMessage ( MSG _ KEY , " MyClassWithGenericSuperMethod " ) , 
 " 84 : " + getCheckMessage ( MSG _ KEY , " AnotherClass " ) , 
 + " 97 : " + getCheckMessage ( MSG _ KEY , " NativeTest " ) , 
 } ; 
 verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java 
 index 707669f . . ca858c5 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java 
 @ @ - 93 , 3 + 93 , 7 @ @ class AnotherClass { 
 	 return null ; 
 } 
 } 
 + 
 + class NativeTest { 
 + public native Object clone ( ) ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java 
 index a7ed92b . . cd734dd 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java 
 @ @ - 51 , 3 + 51 , 7 @ @ class MyClassWithGenericSuperMethod1 
 
 } 
 } 
 + 
 + class TestNative { 
 + public native void finalize ( ) ; 
 + } 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index 454589a . . 23d6bdd 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 1564 , 8 + 1564 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) 
 < section name = " SuperClone " > 
 < subsection name = " Description " > 
 < p > 
 - Checks that an overriding < code > clone ( ) < / code > method 
 - invokes < code > super . clone ( ) < / code > . 
 + Checks that an overriding < code > clone ( ) < / code > method invokes 
 + < code > super . clone ( ) < / code > . Does not check native methods , as 
 + they have no possible java defined implementation . 
 < / p > 
 
 < p > 
 @ @ - 1599 , 8 + 1600 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) 
 < section name = " SuperFinalize " > 
 < subsection name = " Description " > 
 < p > 
 - Checks that an overriding < code > finalize ( ) < / code > 
 - method invokes < code > super . finalize ( ) < / code > . 
 + Checks that an overriding < code > finalize ( ) < / code > method invokes 
 + < code > super . finalize ( ) < / code > . Does not check native methods , as 
 + they have no possible java defined implementation . 
 < / p > 
 
 < p >
