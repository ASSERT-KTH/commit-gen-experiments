BLEU SCORE: 0.037477767366779206

TEST MSG: Issue # 4702 : suppress NewlineAtEndOfFile on all internal javadoc files
GENERATED MSG: Restricted suppression for gui - package , issue # 1555

TEST DIFF (one line): diff - - git a / config / checkstyle _ non _ main _ files _ suppressions . xml b / config / checkstyle _ non _ main _ files _ suppressions . xml <nl> index f41906b . . 3de0c47 100644 <nl> - - - a / config / checkstyle _ non _ main _ files _ suppressions . xml <nl> + + + b / config / checkstyle _ non _ main _ files _ suppressions . xml <nl> @ @ - 16 , 9 + 16 , 7 @ @ <nl> < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] InputEmbeddedNullChar \ . java " / > <nl> <nl> < ! - - Javadoc files should not have new line by design ( on purpose ) . - - > <nl> - < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] javadoc [ \ \ / ] . * \ . javadoc " / > <nl> - < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] astprinter [ \ \ / ] . * \ . javadoc " / > <nl> - < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] main [ \ \ / ] . * \ . javadoc " / > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * \ . javadoc " / > <nl> <nl> < ! - - Empty file cannot have any new line at the end . - - > <nl> < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] checks [ \ \ / ] misc [ \ \ / ] newlineatendoffile [ \ \ / ] InputEmptyFile \ . txt " / >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> index c8530e7 . . d3f8f49 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> @ @ - 173 , 7 + 173 , 7 @ @ public class ExplicitInitializationCheck extends Check { <nl> case TokenTypes . NUM _ INT : <nl> case TokenTypes . NUM _ LONG : <nl> final String text = expr . getText ( ) ; <nl> - return 0 = = CheckUtils . parseFloat ( text , type ) ; <nl> + return 0 . 0 = = CheckUtils . parseFloat ( text , type ) ; <nl> default : <nl> return false ; <nl> }

TEST DIFF:
diff - - git a / config / checkstyle _ non _ main _ files _ suppressions . xml b / config / checkstyle _ non _ main _ files _ suppressions . xml 
 index f41906b . . 3de0c47 100644 
 - - - a / config / checkstyle _ non _ main _ files _ suppressions . xml 
 + + + b / config / checkstyle _ non _ main _ files _ suppressions . xml 
 @ @ - 16 , 9 + 16 , 7 @ @ 
 < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] InputEmbeddedNullChar \ . java " / > 
 
 < ! - - Javadoc files should not have new line by design ( on purpose ) . - - > 
 - < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] javadoc [ \ \ / ] . * \ . javadoc " / > 
 - < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] astprinter [ \ \ / ] . * \ . javadoc " / > 
 - < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] main [ \ \ / ] . * \ . javadoc " / > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * \ . javadoc " / > 
 
 < ! - - Empty file cannot have any new line at the end . - - > 
 < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] checks [ \ \ / ] misc [ \ \ / ] newlineatendoffile [ \ \ / ] InputEmptyFile \ . txt " / >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 index c8530e7 . . d3f8f49 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 @ @ - 173 , 7 + 173 , 7 @ @ public class ExplicitInitializationCheck extends Check { 
 case TokenTypes . NUM _ INT : 
 case TokenTypes . NUM _ LONG : 
 final String text = expr . getText ( ) ; 
 - return 0 = = CheckUtils . parseFloat ( text , type ) ; 
 + return 0 . 0 = = CheckUtils . parseFloat ( text , type ) ; 
 default : 
 return false ; 
 }
