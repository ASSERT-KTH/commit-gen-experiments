BLEU SCORE: 0.08295193507109855

TEST MSG: Issue # 6606 : catch all exceptions during reflection in AbstractTypeAware
GENERATED MSG: Issue # 996 : PMD violations PreserveStackTrace

TEST DIFF (one line): diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 5739f8e . . 0259ddc 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 206 , 12 + 206 , 15 @ @ <nl> < ! - - Checker : There is no other way to deliver the filename that was under processing . <nl> See https : / / github . com / checkstyle / checkstyle / issues / 2285 <nl> TranslationCheck : It is better to catch all exceptions since it can throw <nl> - a runtime exception . - - > <nl> + a runtime exception . <nl> + AbstractTypeAwareCheck : Exception type is not predictable . - - > <nl> < property name = " violationSuppressXPath " <nl> value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] <nl> / / MethodDeclaration [ @ Name = ' processFiles ' ] <nl> | / / ClassOrInterfaceDeclaration [ @ Image = ' TranslationCheck ' ] <nl> - / / MethodDeclaration [ @ Name = ' getTranslationKeys ' ] " / > <nl> + / / MethodDeclaration [ @ Name = ' getTranslationKeys ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' AbstractTypeAwareCheck ' ] <nl> + / / MethodDeclaration [ @ Name = ' resolveClass ' ] " / > <nl> < / properties > <nl> < / rule > <nl> < rule ref = " category / java / design . xml / AvoidDeeplyNestedIfStmts " > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java <nl> index 73d83a3 . . a3a883f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java <nl> @ @ - 240 , 7 + 240 , 8 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { <nl> try { <nl> clazz = getClassResolver ( ) . resolve ( resolvableClassName , className ) ; <nl> } <nl> - catch ( final ClassNotFoundException ignored ) { <nl> + / / - @ cs [ IllegalCatch ] Exception type is not predictable . <nl> + catch ( final Exception ignored ) { <nl> clazz = null ; <nl> } <nl> return clazz ;
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index ced36e4 . . 73e77e8 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 479 , 7 + 479 , 7 @ @ <nl> < dependency > <nl> < groupId > org . codehaus . plexus < / groupId > <nl> < artifactId > plexus - compiler - javac - errorprone < / artifactId > <nl> - < version > 2 . 5 < / version > <nl> + < version > 2 . 6 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupId > com . google . errorprone < / groupId >

TEST DIFF:
diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 5739f8e . . 0259ddc 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 206 , 12 + 206 , 15 @ @ 
 < ! - - Checker : There is no other way to deliver the filename that was under processing . 
 See https : / / github . com / checkstyle / checkstyle / issues / 2285 
 TranslationCheck : It is better to catch all exceptions since it can throw 
 - a runtime exception . - - > 
 + a runtime exception . 
 + AbstractTypeAwareCheck : Exception type is not predictable . - - > 
 < property name = " violationSuppressXPath " 
 value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] 
 / / MethodDeclaration [ @ Name = ' processFiles ' ] 
 | / / ClassOrInterfaceDeclaration [ @ Image = ' TranslationCheck ' ] 
 - / / MethodDeclaration [ @ Name = ' getTranslationKeys ' ] " / > 
 + / / MethodDeclaration [ @ Name = ' getTranslationKeys ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' AbstractTypeAwareCheck ' ] 
 + / / MethodDeclaration [ @ Name = ' resolveClass ' ] " / > 
 < / properties > 
 < / rule > 
 < rule ref = " category / java / design . xml / AvoidDeeplyNestedIfStmts " > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java 
 index 73d83a3 . . a3a883f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java 
 @ @ - 240 , 7 + 240 , 8 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { 
 try { 
 clazz = getClassResolver ( ) . resolve ( resolvableClassName , className ) ; 
 } 
 - catch ( final ClassNotFoundException ignored ) { 
 + / / - @ cs [ IllegalCatch ] Exception type is not predictable . 
 + catch ( final Exception ignored ) { 
 clazz = null ; 
 } 
 return clazz ;

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index ced36e4 . . 73e77e8 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 479 , 7 + 479 , 7 @ @ 
 < dependency > 
 < groupId > org . codehaus . plexus < / groupId > 
 < artifactId > plexus - compiler - javac - errorprone < / artifactId > 
 - < version > 2 . 5 < / version > 
 + < version > 2 . 6 < / version > 
 < / dependency > 
 < dependency > 
 < groupId > com . google . errorprone < / groupId >
