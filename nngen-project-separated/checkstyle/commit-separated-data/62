BLEU SCORE: 0.08295193507109855

TEST MSG: Issue # 6458 : Correct typo in Lcruly property type description
GENERATED MSG: Issue # 5188 : fix left curly nlow documentation

TEST DIFF (one line): diff - - git a / src / xdocs / property _ types . xml b / src / xdocs / property _ types . xml <nl> index e8a4e65 . . 4c45298 100644 <nl> - - - a / src / xdocs / property _ types . xml <nl> + + + b / src / xdocs / property _ types . xml <nl> @ @ - 290 , 7 + 290 , 7 @ @ <nl> < td > < code > nlow < / code > < / td > <nl> < td > <nl> If the statement / expression / declaration connected to the brace spans multiple lines , <nl> - than apply < code > nl < / code > rule . Otherwise apply the < code > eol < / code > rule . <nl> + then apply < code > nl < / code > rule . Otherwise apply the < code > eol < / code > rule . <nl> < code > nlow < / code > is a mnemonic for " new line on wrap " . <nl> For the example above Checkstyle will enforce : <nl> < pre >
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 927c858 . . 6c0d565 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 485 , 6 + 485 , 7 @ @ <nl> < module name = " NoLineWrap " / > <nl> < module name = " NoWhitespaceAfter " > <nl> < property name = " tokens " value = " ARRAY _ INIT " / > <nl> + < property name = " tokens " value = " AT " / > <nl> < property name = " tokens " value = " BNOT " / > <nl> < property name = " tokens " value = " DEC " / > <nl> < property name = " tokens " value = " DOT " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> index 2b4d2b6 . . fee232a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> @ @ - 34 , 6 + 34 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * < / p > <nl> * < p > By default the check will check the following operators : <nl> * { @ link TokenTypes # ARRAY _ INIT ARRAY _ INIT } , <nl> + * { @ link TokenTypes # AT AT } , <nl> * { @ link TokenTypes # BNOT BNOT } , <nl> * { @ link TokenTypes # DEC DEC } , <nl> * { @ link TokenTypes # DOT DOT } , <nl> @ @ - 96 , 6 + 97 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { <nl> public int [ ] getDefaultTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . ARRAY _ INIT , <nl> + TokenTypes . AT , <nl> TokenTypes . INC , <nl> TokenTypes . DEC , <nl> TokenTypes . UNARY _ MINUS , <nl> @ @ - 112 , 6 + 114 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { <nl> public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . ARRAY _ INIT , <nl> + TokenTypes . AT , <nl> TokenTypes . INC , <nl> TokenTypes . DEC , <nl> TokenTypes . UNARY _ MINUS , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java <nl> index ffb7cab . . 45f79d3 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java <nl> @ @ - 62 , 6 + 62 , 9 @ @ public class NoWhitespaceAfterCheckTest <nl> " 132 : 11 : " + getCheckMessage ( MSG _ KEY , " . " ) , <nl> " 136 : 12 : " + getCheckMessage ( MSG _ KEY , " . " ) , <nl> " 264 : 2 : " + getCheckMessage ( MSG _ KEY , " . " ) , <nl> + " 289 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , <nl> + " 290 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , <nl> + " 291 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputNoWhitespaceAfter . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java <nl> index ac31e2e . . 4cdd506 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java <nl> @ @ - 286 , 4 + 286 , 9 @ @ class SpecialCasesInForLoop <nl> <nl> public static void testNoWhitespaceBeforeEllipses ( String . . . args ) { <nl> } <nl> + @ interface BAD { } <nl> + @ interface BAD2 { } <nl> + @ <nl> + interface BAD3 { } <nl> + @ interface Ok { } <nl> } <nl> diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml <nl> index c40160f . . fbffb74 100644 <nl> - - - a / src / xdocs / config _ whitespace . xml <nl> + + + b / src / xdocs / config _ whitespace . xml <nl> @ @ - 1000 , 6 + 1000 , 8 @ @ import static java . math . BigInteger . ZERO ; <nl> subset of tokens < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ARRAY _ INIT " > ARRAY _ INIT < / a > , <nl> < a <nl> + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # AT " > AT < / a > , <nl> + < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INC " > INC < / a > , <nl> < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # DEC " > DEC < / a > , <nl> @ @ - 1029 , 6 + 1031 , 8 @ @ import static java . math . BigInteger . ZERO ; <nl> < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ARRAY _ INIT " > ARRAY _ INIT < / a > , <nl> < a <nl> + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # AT " > AT < / a > , <nl> + < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INC " > INC < / a > , <nl> < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # DEC " > DEC < / a > ,

TEST DIFF:
diff - - git a / src / xdocs / property _ types . xml b / src / xdocs / property _ types . xml 
 index e8a4e65 . . 4c45298 100644 
 - - - a / src / xdocs / property _ types . xml 
 + + + b / src / xdocs / property _ types . xml 
 @ @ - 290 , 7 + 290 , 7 @ @ 
 < td > < code > nlow < / code > < / td > 
 < td > 
 If the statement / expression / declaration connected to the brace spans multiple lines , 
 - than apply < code > nl < / code > rule . Otherwise apply the < code > eol < / code > rule . 
 + then apply < code > nl < / code > rule . Otherwise apply the < code > eol < / code > rule . 
 < code > nlow < / code > is a mnemonic for " new line on wrap " . 
 For the example above Checkstyle will enforce : 
 < pre >

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 927c858 . . 6c0d565 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 485 , 6 + 485 , 7 @ @ 
 < module name = " NoLineWrap " / > 
 < module name = " NoWhitespaceAfter " > 
 < property name = " tokens " value = " ARRAY _ INIT " / > 
 + < property name = " tokens " value = " AT " / > 
 < property name = " tokens " value = " BNOT " / > 
 < property name = " tokens " value = " DEC " / > 
 < property name = " tokens " value = " DOT " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 index 2b4d2b6 . . fee232a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 @ @ - 34 , 6 + 34 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * < / p > 
 * < p > By default the check will check the following operators : 
 * { @ link TokenTypes # ARRAY _ INIT ARRAY _ INIT } , 
 + * { @ link TokenTypes # AT AT } , 
 * { @ link TokenTypes # BNOT BNOT } , 
 * { @ link TokenTypes # DEC DEC } , 
 * { @ link TokenTypes # DOT DOT } , 
 @ @ - 96 , 6 + 97 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { 
 public int [ ] getDefaultTokens ( ) { 
 return new int [ ] { 
 TokenTypes . ARRAY _ INIT , 
 + TokenTypes . AT , 
 TokenTypes . INC , 
 TokenTypes . DEC , 
 TokenTypes . UNARY _ MINUS , 
 @ @ - 112 , 6 + 114 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { 
 public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { 
 TokenTypes . ARRAY _ INIT , 
 + TokenTypes . AT , 
 TokenTypes . INC , 
 TokenTypes . DEC , 
 TokenTypes . UNARY _ MINUS , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java 
 index ffb7cab . . 45f79d3 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java 
 @ @ - 62 , 6 + 62 , 9 @ @ public class NoWhitespaceAfterCheckTest 
 " 132 : 11 : " + getCheckMessage ( MSG _ KEY , " . " ) , 
 " 136 : 12 : " + getCheckMessage ( MSG _ KEY , " . " ) , 
 " 264 : 2 : " + getCheckMessage ( MSG _ KEY , " . " ) , 
 + " 289 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , 
 + " 290 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , 
 + " 291 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputNoWhitespaceAfter . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java 
 index ac31e2e . . 4cdd506 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java 
 @ @ - 286 , 4 + 286 , 9 @ @ class SpecialCasesInForLoop 
 
 public static void testNoWhitespaceBeforeEllipses ( String . . . args ) { 
 } 
 + @ interface BAD { } 
 + @ interface BAD2 { } 
 + @ 
 + interface BAD3 { } 
 + @ interface Ok { } 
 } 
 diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml 
 index c40160f . . fbffb74 100644 
 - - - a / src / xdocs / config _ whitespace . xml 
 + + + b / src / xdocs / config _ whitespace . xml 
 @ @ - 1000 , 6 + 1000 , 8 @ @ import static java . math . BigInteger . ZERO ; 
 subset of tokens < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ARRAY _ INIT " > ARRAY _ INIT < / a > , 
 < a 
 + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # AT " > AT < / a > , 
 + < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INC " > INC < / a > , 
 < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # DEC " > DEC < / a > , 
 @ @ - 1029 , 6 + 1031 , 8 @ @ import static java . math . BigInteger . ZERO ; 
 < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ARRAY _ INIT " > ARRAY _ INIT < / a > , 
 < a 
 + href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # AT " > AT < / a > , 
 + < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INC " > INC < / a > , 
 < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # DEC " > DEC < / a > ,
