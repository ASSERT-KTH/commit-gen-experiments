BLEU SCORE: 0.4393983107600289

TEST MSG: [ maven - release - plugin ] prepare for next development iteration
GENERATED MSG: [ maven - release - plugin ] prepare release checkstyle - 7 . 8 . 1

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 2d2b29e . . 2373891 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 22 , 7 + 22 , 7 @ @ <nl> <nl> < groupId > com . puppycrawl . tools < / groupId > <nl> < artifactId > checkstyle < / artifactId > <nl> - < version > 7 . 8 . 1 < / version > <nl> + < version > 7 . 8 . 2 - SNAPSHOT < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > checkstyle < / name >
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheckTest . java <nl> index 43017c9 . . 9244d9f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheckTest . java <nl> @ @ - 37 , 7 + 37 , 9 @ @ public class HideUtilityClassConstructorCheckTest <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " design " + File . separator + filename ) ; <nl> + + " design " + File . separator <nl> + + " hideutilityclassconstructor " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 55 , 7 + 57 , 8 @ @ public class HideUtilityClassConstructorCheckTest <nl> final String [ ] expected = { <nl> " 3 : 1 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputUtilityClassConstructor . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorInnerStaticClasses . java " ) , <nl> + expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 65 , 7 + 68 , 7 @ @ public class HideUtilityClassConstructorCheckTest <nl> final String [ ] expected = { <nl> " 3 : 1 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputUtilityClassConstructorPublic . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorPublic . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 73 , 7 + 76 , 7 @ @ public class HideUtilityClassConstructorCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputUtilityClassConstructorPrivate . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorPrivate . java " ) , expected ) ; <nl> } <nl> <nl> / * * Non - static methods - always OK . * / <nl> @ @ - 82 , 7 + 85 , 8 @ @ public class HideUtilityClassConstructorCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputDesignForExtension . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorDesignForExtension . java " ) , <nl> + expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 90 , 7 + 94 , 8 @ @ public class HideUtilityClassConstructorCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputNonUtilityClass . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorNonUtilityClass . java " ) , <nl> + expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 98 , 7 + 103 , 8 @ @ public class HideUtilityClassConstructorCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputRegression1762702 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorRegression . java " ) , <nl> + expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 106 , 7 + 112 , 8 @ @ public class HideUtilityClassConstructorCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputHideUtilityClassConstructor3041574 _ 1 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorAbstractSerializable . java " ) , <nl> + expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 114 , 7 + 121 , 8 @ @ public class HideUtilityClassConstructorCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputHideUtilityClassConstructor3041574 _ 2 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorSerializable . java " ) , <nl> + expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 122 , 7 + 130 , 9 @ @ public class HideUtilityClassConstructorCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputHideUtilityClassConstructor3041574 _ 3 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( <nl> + " InputHideUtilityClassConstructorSerializableInnerStatic . java " ) , <nl> + expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor . java <nl> deleted file mode 100644 <nl> index ea677b3 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - public class InputHideUtilityClassConstructor { <nl> - <nl> - protected InputHideUtilityClassConstructor ( ) { <nl> - / / does nothing <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 1 . java <nl> deleted file mode 100644 <nl> index a85565b . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 1 . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - import java . io . Serializable ; <nl> - / * input file * / <nl> - public abstract class InputHideUtilityClassConstructor3041574 _ 1 implements Serializable { <nl> - private static final long serialVersionUID = 1L ; <nl> - <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 2 . java <nl> deleted file mode 100644 <nl> index 15c67eb . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - import java . io . Serializable ; <nl> - / * input file * / <nl> - public class InputHideUtilityClassConstructor3041574 _ 2 implements Serializable { <nl> - private static final long serialVersionUID = 1L ; <nl> - <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 3 . java <nl> deleted file mode 100644 <nl> index c65e3b0 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 3 . java <nl> + + + / dev / null <nl> @ @ - 1 , 48 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - import java . io . Serializable ; <nl> - <nl> - public class InputHideUtilityClassConstructor3041574 _ 3 implements Serializable { <nl> - private static final long serialVersionUID = 1L ; <nl> - <nl> - public InputHideUtilityClassConstructor3041574 _ 3 ( int i ) { <nl> - / / no code <nl> - } <nl> - <nl> - public String getValue ( ) { <nl> - return " " ; <nl> - } <nl> - <nl> - / / It is NOT Utility Inner class <nl> - @ SuppressWarnings ( " unused " ) <nl> - public static class Event { <nl> - / / Top level class have access to fields - no need in public getters <nl> - private String ind ; <nl> - private String ind1 ; <nl> - <nl> - public Event ( String value ) { <nl> - / / do a lot of calculations <nl> - } <nl> - <nl> - / / static because this method is utility <nl> - public static String getEmptyString ( ) { <nl> - return " " ; <nl> - } <nl> - } <nl> - <nl> - / / It is Utility Inner class <nl> - @ SuppressWarnings ( " unused " ) <nl> - public static class Event1 { <nl> - private String ind ; <nl> - private String ind1 ; <nl> - <nl> - private Event1 ( ) { <nl> - / / do a lot of calculations <nl> - } <nl> - <nl> - / / static because this method is utility <nl> - public static String getEmptyString ( ) { <nl> - return " " ; <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputNonUtilityClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputNonUtilityClass . java <nl> deleted file mode 100644 <nl> index 68c3307 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputNonUtilityClass . java <nl> + + + / dev / null <nl> @ @ - 1 , 21 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - import java . awt . Dimension ; <nl> - import javax . swing . JPanel ; <nl> - <nl> - / * * <nl> - * Not a util class because it ' s not directly derived from java . lang . Object . <nl> - * / <nl> - public class InputNonUtilityClass extends JPanel <nl> - { <nl> - / * * HideUtilityClassConstructorCheck should not report this * / <nl> - public InputNonUtilityClass ( ) <nl> - { <nl> - 	 this . setPreferredSize ( new Dimension ( 100 , 100 ) ) ; <nl> - } <nl> - <nl> - public static void utilMethod ( ) <nl> - { <nl> - 	 System . identityHashCode ( " I ' m a utility method " ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputRegression1762702 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputRegression1762702 . java <nl> deleted file mode 100644 <nl> index a853541 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputRegression1762702 . java <nl> + + + / dev / null <nl> @ @ - 1 , 16 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - / * * <nl> - * Input for HideUtilityClassConstructorCheck , a non utility class that has <nl> - * <nl> - * @ author lkuehne <nl> - * / <nl> - public class InputRegression1762702 <nl> - { <nl> - public long constructionTime = System . currentTimeMillis ( ) ; <nl> - <nl> - public static InputRegression1762702 create ( ) <nl> - { <nl> - return new InputRegression1762702 ( ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructor . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructor . java <nl> deleted file mode 100644 <nl> index 98c03f2 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructor . java <nl> + + + / dev / null <nl> @ @ - 1 , 14 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - public class InputUtilityClassConstructor { <nl> - private static int value = 0 ; <nl> - public static void foo ( int val ) { value = val ; } <nl> - <nl> - public static class Inner { <nl> - public int foo ; <nl> - } <nl> - <nl> - public static class Inner2 { <nl> - public static int foo ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPrivate . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPrivate . java <nl> deleted file mode 100644 <nl> index f1affa2 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPrivate . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - public class InputUtilityClassConstructorPrivate { <nl> - private InputUtilityClassConstructorPrivate ( ) { } <nl> - <nl> - private static int value = 0 ; <nl> - public static void foo ( int val ) { value = val ; } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPublic . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPublic . java <nl> deleted file mode 100644 <nl> index 19659b3 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPublic . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - public class InputUtilityClassConstructorPublic { <nl> - public InputUtilityClassConstructorPublic ( ) { } <nl> - <nl> - private static int value = 0 ; <nl> - public static void foo ( int val ) { value = val ; } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructor . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructor . java <nl> new file mode 100644 <nl> index 0000000 . . 92c4e7c <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructor . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + public class InputHideUtilityClassConstructor { <nl> + <nl> + protected InputHideUtilityClassConstructor ( ) { <nl> + / / does nothing <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorAbstractSerializable . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorAbstractSerializable . java <nl> new file mode 100644 <nl> index 0000000 . . c0cbeea <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorAbstractSerializable . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + import java . io . Serializable ; <nl> + / * input file * / <nl> + public abstract class InputHideUtilityClassConstructorAbstractSerializable implements Serializable { <nl> + private static final long serialVersionUID = 1L ; <nl> + <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorDesignForExtension . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorDesignForExtension . java <nl> new file mode 100644 <nl> index 0000000 . . 3219949 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorDesignForExtension . java <nl> @ @ - 0 , 0 + 1 , 117 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + / * * <nl> + * Test case for the " design for inheritance " check . <nl> + * @ author Lars K ü hne <nl> + * * / <nl> + public abstract class InputHideUtilityClassConstructorDesignForExtension <nl> + { <nl> + / / some methods that are OK <nl> + <nl> + public interface InterfaceOK <nl> + { <nl> + void implicitlyAbstract ( ) ; <nl> + } <nl> + <nl> + final class ClassOK <nl> + { <nl> + protected void finalThroughClassDef ( ) <nl> + { <nl> + System . identityHashCode ( " no way to override " ) ; <nl> + } <nl> + } <nl> + <nl> + protected void nonFinalButEmpty ( ) <nl> + { <nl> + } <nl> + <nl> + public void nonFinalButEmpty2 ( ) <nl> + { <nl> + / / comments don ' t count as content . . . <nl> + } <nl> + <nl> + private void aPrivateMethod ( ) <nl> + { <nl> + System . identityHashCode ( " no way to override " ) ; <nl> + } <nl> + <nl> + protected abstract void nonFinalButAbstract ( ) ; <nl> + <nl> + / / this one is bad : neither abstract , final , or empty <nl> + <nl> + protected void doh ( ) <nl> + { <nl> + System . identityHashCode ( " nonempty and overriding possible " ) ; <nl> + } <nl> + <nl> + public final void aFinalMethod ( ) <nl> + { <nl> + 	 System . identityHashCode ( " no way to override " ) ; <nl> + } <nl> + <nl> + public static void aStaticMethod ( ) <nl> + { <nl> + 	 System . identityHashCode ( " no way to override " ) ; <nl> + } <nl> + <nl> + / / tries to trigger bug # 884035 <nl> + / / MyComparator is a private class , so there cannot be subclasses <nl> + / / and it should not be neccessary to declare compare ( ) as final <nl> + private class MyComparator implements java . util . Comparator <nl> + { <nl> + public int compare ( Object o1 , Object o2 ) <nl> + { <nl> + / / some complex stuff that would normally trigger an error report <nl> + if ( o1 . hashCode ( ) > o2 . hashCode ( ) ) { <nl> + return - 1 ; <nl> + } <nl> + else { <nl> + return 1 ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + public final class aFinalClass <nl> + { <nl> + public void someMethod ( ) <nl> + { <nl> + 	 System . identityHashCode ( " nonempty and overriding is possible " ) ; <nl> + } <nl> + } <nl> + <nl> + public class nonFinalClass <nl> + { <nl> + 	 / / private ctor <nl> + 	 private nonFinalClass ( ) { } 	 <nl> + public void someMethod ( ) <nl> + { <nl> + 	 System . identityHashCode ( " nonempty and overriding is possible " ) ; <nl> + } <nl> + } <nl> + <nl> + public class anotherNonFinalClass <nl> + { <nl> + 	 / / nonPrivate ctor <nl> + 	 public anotherNonFinalClass ( ) { } 	 <nl> + public void someMethod ( ) <nl> + { <nl> + 	 System . identityHashCode ( " nonempty and overriding is possible " ) ; <nl> + } <nl> + } <nl> + <nl> + / / enums should be skipped <nl> + public enum TEnum <nl> + { <nl> + FIRST , <nl> + SECOND ; <nl> + <nl> + public int value ( ) <nl> + { <nl> + return 3 ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorInnerStaticClasses . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorInnerStaticClasses . java <nl> new file mode 100644 <nl> index 0000000 . . 19f2b08 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorInnerStaticClasses . java <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + public class InputHideUtilityClassConstructorInnerStaticClasses { <nl> + private static int value = 0 ; <nl> + public static void foo ( int val ) { value = val ; } <nl> + <nl> + public static class Inner { <nl> + public int foo ; <nl> + } <nl> + <nl> + public static class Inner2 { <nl> + public static int foo ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorNonUtilityClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorNonUtilityClass . java <nl> new file mode 100644 <nl> index 0000000 . . 56fdc48 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorNonUtilityClass . java <nl> @ @ - 0 , 0 + 1 , 21 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + import java . awt . Dimension ; <nl> + import javax . swing . JPanel ; <nl> + <nl> + / * * <nl> + * Not a util class because it ' s not directly derived from java . lang . Object . <nl> + * / <nl> + public class InputHideUtilityClassConstructorNonUtilityClass extends JPanel <nl> + { <nl> + / * * HideUtilityClassConstructorCheck should not report this * / <nl> + public InputHideUtilityClassConstructorNonUtilityClass ( ) <nl> + { <nl> + 	 this . setPreferredSize ( new Dimension ( 100 , 100 ) ) ; <nl> + } <nl> + <nl> + public static void utilMethod ( ) <nl> + { <nl> + 	 System . identityHashCode ( " I ' m a utility method " ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPrivate . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPrivate . java <nl> new file mode 100644 <nl> index 0000000 . . 3ba4469 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPrivate . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + public class InputHideUtilityClassConstructorPrivate { <nl> + private InputHideUtilityClassConstructorPrivate ( ) { } <nl> + <nl> + private static int value = 0 ; <nl> + public static void foo ( int val ) { value = val ; } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPublic . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPublic . java <nl> new file mode 100644 <nl> index 0000000 . . 664c3b9 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPublic . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + public class InputHideUtilityClassConstructorPublic { <nl> + public InputHideUtilityClassConstructorPublic ( ) { } <nl> + <nl> + private static int value = 0 ; <nl> + public static void foo ( int val ) { value = val ; } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorRegression . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorRegression . java <nl> new file mode 100644 <nl> index 0000000 . . 865aa7c <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorRegression . java <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + / * * <nl> + * Input for HideUtilityClassConstructorCheck , a non utility class that has <nl> + * <nl> + * @ author lkuehne <nl> + * / <nl> + public class InputHideUtilityClassConstructorRegression <nl> + { <nl> + public long constructionTime = System . currentTimeMillis ( ) ; <nl> + <nl> + public static InputHideUtilityClassConstructorRegression create ( ) <nl> + { <nl> + return new InputHideUtilityClassConstructorRegression ( ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializable . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializable . java <nl> new file mode 100644 <nl> index 0000000 . . 2e9ade9 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializable . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + import java . io . Serializable ; <nl> + / * input file * / <nl> + public class InputHideUtilityClassConstructorSerializable implements Serializable { <nl> + private static final long serialVersionUID = 1L ; <nl> + <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializableInnerStatic . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializableInnerStatic . java <nl> new file mode 100644 <nl> index 0000000 . . f936bbd <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializableInnerStatic . java <nl> @ @ - 0 , 0 + 1 , 48 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; <nl> + <nl> + import java . io . Serializable ; <nl> + <nl> + public class InputHideUtilityClassConstructorSerializableInnerStatic implements Serializable { <nl> + private static final long serialVersionUID = 1L ; <nl> + <nl> + public InputHideUtilityClassConstructorSerializableInnerStatic ( int i ) { <nl> + / / no code <nl> + } <nl> + <nl> + public String getValue ( ) { <nl> + return " " ; <nl> + } <nl> + <nl> + / / It is NOT Utility Inner class <nl> + @ SuppressWarnings ( " unused " ) <nl> + public static class Event { <nl> + / / Top level class have access to fields - no need in public getters <nl> + private String ind ; <nl> + private String ind1 ; <nl> + <nl> + public Event ( String value ) { <nl> + / / do a lot of calculations <nl> + } <nl> + <nl> + / / static because this method is utility <nl> + public static String getEmptyString ( ) { <nl> + return " " ; <nl> + } <nl> + } <nl> + <nl> + / / It is Utility Inner class <nl> + @ SuppressWarnings ( " unused " ) <nl> + public static class Event1 { <nl> + private String ind ; <nl> + private String ind1 ; <nl> + <nl> + private Event1 ( ) { <nl> + / / do a lot of calculations <nl> + } <nl> + <nl> + / / static because this method is utility <nl> + public static String getEmptyString ( ) { <nl> + return " " ; <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 2d2b29e . . 2373891 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 22 , 7 + 22 , 7 @ @ 
 
 < groupId > com . puppycrawl . tools < / groupId > 
 < artifactId > checkstyle < / artifactId > 
 - < version > 7 . 8 . 1 < / version > 
 + < version > 7 . 8 . 2 - SNAPSHOT < / version > 
 < packaging > jar < / packaging > 
 
 < name > checkstyle < / name >

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheckTest . java 
 index 43017c9 . . 9244d9f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheckTest . java 
 @ @ - 37 , 7 + 37 , 9 @ @ public class HideUtilityClassConstructorCheckTest 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " design " + File . separator + filename ) ; 
 + + " design " + File . separator 
 + + " hideutilityclassconstructor " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 @ @ - 55 , 7 + 57 , 8 @ @ public class HideUtilityClassConstructorCheckTest 
 final String [ ] expected = { 
 " 3 : 1 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputUtilityClassConstructor . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorInnerStaticClasses . java " ) , 
 + expected ) ; 
 } 
 
 @ Test 
 @ @ - 65 , 7 + 68 , 7 @ @ public class HideUtilityClassConstructorCheckTest 
 final String [ ] expected = { 
 " 3 : 1 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputUtilityClassConstructorPublic . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorPublic . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 73 , 7 + 76 , 7 @ @ public class HideUtilityClassConstructorCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputUtilityClassConstructorPrivate . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorPrivate . java " ) , expected ) ; 
 } 
 
 / * * Non - static methods - always OK . * / 
 @ @ - 82 , 7 + 85 , 8 @ @ public class HideUtilityClassConstructorCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputDesignForExtension . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorDesignForExtension . java " ) , 
 + expected ) ; 
 } 
 
 @ Test 
 @ @ - 90 , 7 + 94 , 8 @ @ public class HideUtilityClassConstructorCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputNonUtilityClass . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorNonUtilityClass . java " ) , 
 + expected ) ; 
 } 
 
 @ Test 
 @ @ - 98 , 7 + 103 , 8 @ @ public class HideUtilityClassConstructorCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputRegression1762702 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorRegression . java " ) , 
 + expected ) ; 
 } 
 
 @ Test 
 @ @ - 106 , 7 + 112 , 8 @ @ public class HideUtilityClassConstructorCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputHideUtilityClassConstructor3041574 _ 1 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorAbstractSerializable . java " ) , 
 + expected ) ; 
 } 
 
 @ Test 
 @ @ - 114 , 7 + 121 , 8 @ @ public class HideUtilityClassConstructorCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputHideUtilityClassConstructor3041574 _ 2 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputHideUtilityClassConstructorSerializable . java " ) , 
 + expected ) ; 
 } 
 
 @ Test 
 @ @ - 122 , 7 + 130 , 9 @ @ public class HideUtilityClassConstructorCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( HideUtilityClassConstructorCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputHideUtilityClassConstructor3041574 _ 3 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( 
 + " InputHideUtilityClassConstructorSerializableInnerStatic . java " ) , 
 + expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor . java 
 deleted file mode 100644 
 index ea677b3 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - public class InputHideUtilityClassConstructor { 
 - 
 - protected InputHideUtilityClassConstructor ( ) { 
 - / / does nothing 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 1 . java 
 deleted file mode 100644 
 index a85565b . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 1 . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - import java . io . Serializable ; 
 - / * input file * / 
 - public abstract class InputHideUtilityClassConstructor3041574 _ 1 implements Serializable { 
 - private static final long serialVersionUID = 1L ; 
 - 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 2 . java 
 deleted file mode 100644 
 index 15c67eb . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 2 . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - import java . io . Serializable ; 
 - / * input file * / 
 - public class InputHideUtilityClassConstructor3041574 _ 2 implements Serializable { 
 - private static final long serialVersionUID = 1L ; 
 - 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 3 . java 
 deleted file mode 100644 
 index c65e3b0 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputHideUtilityClassConstructor3041574 _ 3 . java 
 + + + / dev / null 
 @ @ - 1 , 48 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - import java . io . Serializable ; 
 - 
 - public class InputHideUtilityClassConstructor3041574 _ 3 implements Serializable { 
 - private static final long serialVersionUID = 1L ; 
 - 
 - public InputHideUtilityClassConstructor3041574 _ 3 ( int i ) { 
 - / / no code 
 - } 
 - 
 - public String getValue ( ) { 
 - return " " ; 
 - } 
 - 
 - / / It is NOT Utility Inner class 
 - @ SuppressWarnings ( " unused " ) 
 - public static class Event { 
 - / / Top level class have access to fields - no need in public getters 
 - private String ind ; 
 - private String ind1 ; 
 - 
 - public Event ( String value ) { 
 - / / do a lot of calculations 
 - } 
 - 
 - / / static because this method is utility 
 - public static String getEmptyString ( ) { 
 - return " " ; 
 - } 
 - } 
 - 
 - / / It is Utility Inner class 
 - @ SuppressWarnings ( " unused " ) 
 - public static class Event1 { 
 - private String ind ; 
 - private String ind1 ; 
 - 
 - private Event1 ( ) { 
 - / / do a lot of calculations 
 - } 
 - 
 - / / static because this method is utility 
 - public static String getEmptyString ( ) { 
 - return " " ; 
 - } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputNonUtilityClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputNonUtilityClass . java 
 deleted file mode 100644 
 index 68c3307 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputNonUtilityClass . java 
 + + + / dev / null 
 @ @ - 1 , 21 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - import java . awt . Dimension ; 
 - import javax . swing . JPanel ; 
 - 
 - / * * 
 - * Not a util class because it ' s not directly derived from java . lang . Object . 
 - * / 
 - public class InputNonUtilityClass extends JPanel 
 - { 
 - / * * HideUtilityClassConstructorCheck should not report this * / 
 - public InputNonUtilityClass ( ) 
 - { 
 - 	 this . setPreferredSize ( new Dimension ( 100 , 100 ) ) ; 
 - } 
 - 
 - public static void utilMethod ( ) 
 - { 
 - 	 System . identityHashCode ( " I ' m a utility method " ) ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputRegression1762702 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputRegression1762702 . java 
 deleted file mode 100644 
 index a853541 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputRegression1762702 . java 
 + + + / dev / null 
 @ @ - 1 , 16 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - / * * 
 - * Input for HideUtilityClassConstructorCheck , a non utility class that has 
 - * 
 - * @ author lkuehne 
 - * / 
 - public class InputRegression1762702 
 - { 
 - public long constructionTime = System . currentTimeMillis ( ) ; 
 - 
 - public static InputRegression1762702 create ( ) 
 - { 
 - return new InputRegression1762702 ( ) ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructor . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructor . java 
 deleted file mode 100644 
 index 98c03f2 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructor . java 
 + + + / dev / null 
 @ @ - 1 , 14 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - public class InputUtilityClassConstructor { 
 - private static int value = 0 ; 
 - public static void foo ( int val ) { value = val ; } 
 - 
 - public static class Inner { 
 - public int foo ; 
 - } 
 - 
 - public static class Inner2 { 
 - public static int foo ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPrivate . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPrivate . java 
 deleted file mode 100644 
 index f1affa2 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPrivate . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - public class InputUtilityClassConstructorPrivate { 
 - private InputUtilityClassConstructorPrivate ( ) { } 
 - 
 - private static int value = 0 ; 
 - public static void foo ( int val ) { value = val ; } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPublic . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPublic . java 
 deleted file mode 100644 
 index 19659b3 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputUtilityClassConstructorPublic . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - public class InputUtilityClassConstructorPublic { 
 - public InputUtilityClassConstructorPublic ( ) { } 
 - 
 - private static int value = 0 ; 
 - public static void foo ( int val ) { value = val ; } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructor . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructor . java 
 new file mode 100644 
 index 0000000 . . 92c4e7c 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructor . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + public class InputHideUtilityClassConstructor { 
 + 
 + protected InputHideUtilityClassConstructor ( ) { 
 + / / does nothing 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorAbstractSerializable . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorAbstractSerializable . java 
 new file mode 100644 
 index 0000000 . . c0cbeea 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorAbstractSerializable . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + import java . io . Serializable ; 
 + / * input file * / 
 + public abstract class InputHideUtilityClassConstructorAbstractSerializable implements Serializable { 
 + private static final long serialVersionUID = 1L ; 
 + 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorDesignForExtension . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorDesignForExtension . java 
 new file mode 100644 
 index 0000000 . . 3219949 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorDesignForExtension . java 
 @ @ - 0 , 0 + 1 , 117 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + / * * 
 + * Test case for the " design for inheritance " check . 
 + * @ author Lars K ü hne 
 + * * / 
 + public abstract class InputHideUtilityClassConstructorDesignForExtension 
 + { 
 + / / some methods that are OK 
 + 
 + public interface InterfaceOK 
 + { 
 + void implicitlyAbstract ( ) ; 
 + } 
 + 
 + final class ClassOK 
 + { 
 + protected void finalThroughClassDef ( ) 
 + { 
 + System . identityHashCode ( " no way to override " ) ; 
 + } 
 + } 
 + 
 + protected void nonFinalButEmpty ( ) 
 + { 
 + } 
 + 
 + public void nonFinalButEmpty2 ( ) 
 + { 
 + / / comments don ' t count as content . . . 
 + } 
 + 
 + private void aPrivateMethod ( ) 
 + { 
 + System . identityHashCode ( " no way to override " ) ; 
 + } 
 + 
 + protected abstract void nonFinalButAbstract ( ) ; 
 + 
 + / / this one is bad : neither abstract , final , or empty 
 + 
 + protected void doh ( ) 
 + { 
 + System . identityHashCode ( " nonempty and overriding possible " ) ; 
 + } 
 + 
 + public final void aFinalMethod ( ) 
 + { 
 + 	 System . identityHashCode ( " no way to override " ) ; 
 + } 
 + 
 + public static void aStaticMethod ( ) 
 + { 
 + 	 System . identityHashCode ( " no way to override " ) ; 
 + } 
 + 
 + / / tries to trigger bug # 884035 
 + / / MyComparator is a private class , so there cannot be subclasses 
 + / / and it should not be neccessary to declare compare ( ) as final 
 + private class MyComparator implements java . util . Comparator 
 + { 
 + public int compare ( Object o1 , Object o2 ) 
 + { 
 + / / some complex stuff that would normally trigger an error report 
 + if ( o1 . hashCode ( ) > o2 . hashCode ( ) ) { 
 + return - 1 ; 
 + } 
 + else { 
 + return 1 ; 
 + } 
 + } 
 + } 
 + 
 + public final class aFinalClass 
 + { 
 + public void someMethod ( ) 
 + { 
 + 	 System . identityHashCode ( " nonempty and overriding is possible " ) ; 
 + } 
 + } 
 + 
 + public class nonFinalClass 
 + { 
 + 	 / / private ctor 
 + 	 private nonFinalClass ( ) { } 	 
 + public void someMethod ( ) 
 + { 
 + 	 System . identityHashCode ( " nonempty and overriding is possible " ) ; 
 + } 
 + } 
 + 
 + public class anotherNonFinalClass 
 + { 
 + 	 / / nonPrivate ctor 
 + 	 public anotherNonFinalClass ( ) { } 	 
 + public void someMethod ( ) 
 + { 
 + 	 System . identityHashCode ( " nonempty and overriding is possible " ) ; 
 + } 
 + } 
 + 
 + / / enums should be skipped 
 + public enum TEnum 
 + { 
 + FIRST , 
 + SECOND ; 
 + 
 + public int value ( ) 
 + { 
 + return 3 ; 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorInnerStaticClasses . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorInnerStaticClasses . java 
 new file mode 100644 
 index 0000000 . . 19f2b08 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorInnerStaticClasses . java 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + public class InputHideUtilityClassConstructorInnerStaticClasses { 
 + private static int value = 0 ; 
 + public static void foo ( int val ) { value = val ; } 
 + 
 + public static class Inner { 
 + public int foo ; 
 + } 
 + 
 + public static class Inner2 { 
 + public static int foo ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorNonUtilityClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorNonUtilityClass . java 
 new file mode 100644 
 index 0000000 . . 56fdc48 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorNonUtilityClass . java 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + import java . awt . Dimension ; 
 + import javax . swing . JPanel ; 
 + 
 + / * * 
 + * Not a util class because it ' s not directly derived from java . lang . Object . 
 + * / 
 + public class InputHideUtilityClassConstructorNonUtilityClass extends JPanel 
 + { 
 + / * * HideUtilityClassConstructorCheck should not report this * / 
 + public InputHideUtilityClassConstructorNonUtilityClass ( ) 
 + { 
 + 	 this . setPreferredSize ( new Dimension ( 100 , 100 ) ) ; 
 + } 
 + 
 + public static void utilMethod ( ) 
 + { 
 + 	 System . identityHashCode ( " I ' m a utility method " ) ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPrivate . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPrivate . java 
 new file mode 100644 
 index 0000000 . . 3ba4469 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPrivate . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + public class InputHideUtilityClassConstructorPrivate { 
 + private InputHideUtilityClassConstructorPrivate ( ) { } 
 + 
 + private static int value = 0 ; 
 + public static void foo ( int val ) { value = val ; } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPublic . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPublic . java 
 new file mode 100644 
 index 0000000 . . 664c3b9 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorPublic . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + public class InputHideUtilityClassConstructorPublic { 
 + public InputHideUtilityClassConstructorPublic ( ) { } 
 + 
 + private static int value = 0 ; 
 + public static void foo ( int val ) { value = val ; } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorRegression . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorRegression . java 
 new file mode 100644 
 index 0000000 . . 865aa7c 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorRegression . java 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + / * * 
 + * Input for HideUtilityClassConstructorCheck , a non utility class that has 
 + * 
 + * @ author lkuehne 
 + * / 
 + public class InputHideUtilityClassConstructorRegression 
 + { 
 + public long constructionTime = System . currentTimeMillis ( ) ; 
 + 
 + public static InputHideUtilityClassConstructorRegression create ( ) 
 + { 
 + return new InputHideUtilityClassConstructorRegression ( ) ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializable . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializable . java 
 new file mode 100644 
 index 0000000 . . 2e9ade9 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializable . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + import java . io . Serializable ; 
 + / * input file * / 
 + public class InputHideUtilityClassConstructorSerializable implements Serializable { 
 + private static final long serialVersionUID = 1L ; 
 + 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializableInnerStatic . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializableInnerStatic . java 
 new file mode 100644 
 index 0000000 . . f936bbd 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / hideutilityclassconstructor / InputHideUtilityClassConstructorSerializableInnerStatic . java 
 @ @ - 0 , 0 + 1 , 48 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . hideutilityclassconstructor ; 
 + 
 + import java . io . Serializable ; 
 + 
 + public class InputHideUtilityClassConstructorSerializableInnerStatic implements Serializable { 
 + private static final long serialVersionUID = 1L ; 
 + 
 + public InputHideUtilityClassConstructorSerializableInnerStatic ( int i ) { 
 + / / no code 
 + } 
 + 
 + public String getValue ( ) { 
 + return " " ; 
 + } 
 + 
 + / / It is NOT Utility Inner class 
 + @ SuppressWarnings ( " unused " ) 
 + public static class Event { 
 + / / Top level class have access to fields - no need in public getters 
 + private String ind ; 
 + private String ind1 ; 
 + 
 + public Event ( String value ) { 
 + / / do a lot of calculations 
 + } 
 + 
 + / / static because this method is utility 
 + public static String getEmptyString ( ) { 
 + return " " ; 
 + } 
 + } 
 + 
 + / / It is Utility Inner class 
 + @ SuppressWarnings ( " unused " ) 
 + public static class Event1 { 
 + private String ind ; 
 + private String ind1 ; 
 + 
 + private Event1 ( ) { 
 + / / do a lot of calculations 
 + } 
 + 
 + / / static because this method is utility 
 + public static String getEmptyString ( ) { 
 + return " " ; 
 + } 
 + } 
 + }
