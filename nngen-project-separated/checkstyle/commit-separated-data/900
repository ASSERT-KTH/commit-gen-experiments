BLEU SCORE: 0.044568827606990644

TEST MSG: minor : extend CustomMessages documentation with link in config . xml
GENERATED MSG: Fix for typos in documentation

TEST DIFF (one line): diff - - git a / src / xdocs / config . xml b / src / xdocs / config . xml <nl> index bb50420 . . 5dcd8b4 100644 <nl> - - - a / src / xdocs / config . xml <nl> + + + b / src / xdocs / config . xml <nl> @ @ - 665 , 7 + 665 , 8 @ @ <nl> custom message pattern , as shown in the example above . <nl> Placeholders used in the default message can also be used in the <nl> custom message . Note that the message pattern must be a valid <nl> - < code > java . text . MessageFormat < / code > style pattern , <nl> + < a href = " https : / / docs . oracle . com / javase / 8 / docs / api / java / text / MessageFormat . html " > java . text . MessageFormat < / a > <nl> + style pattern , <nl> so be careful about curly braces outside a placeholder <nl> definition . <nl> < / p >
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / AnnotationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / AnnotationTest . java <nl> index a685377 . . ec10441 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / AnnotationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / AnnotationTest . java <nl> @ @ - 18 , 6 + 18 , 8 @ @ <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> <nl> + import java . io . File ; <nl> + <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> @ @ - 47 , 7 + 49 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = { } ; <nl> verify ( checkConfig , <nl> - getPath ( " grammars / java8 / InputAnnotationsTest2 . java " ) , expected ) ; <nl> + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " <nl> + + " checkstyle / grammars / java8 / " <nl> + + " InputAnnotationsTest2 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> <nl> } <nl> <nl> @ @ - 59 , 7 + 63 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = { } ; <nl> verify ( checkConfig , <nl> - getPath ( " grammars / java8 / InputAnnotationsTest3 . java " ) , expected ) ; <nl> + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " <nl> + + " checkstyle / grammars / java8 / " <nl> + + " InputAnnotationsTest3 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> <nl> } <nl> <nl> @ @ - 71 , 7 + 77 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = { } ; <nl> verify ( checkConfig , <nl> - getPath ( " grammars / java8 / InputAnnotationsTest4 . java " ) , expected ) ; <nl> + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " <nl> + + " checkstyle / grammars / java8 / " <nl> + + " InputAnnotationsTest4 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> <nl> } <nl> <nl> @ @ - 83 , 7 + 91 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = { } ; <nl> verify ( checkConfig , <nl> - getPath ( " grammars / java8 / InputAnnotationsTest5 . java " ) , expected ) ; <nl> + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " <nl> + + " checkstyle / grammars / java8 / " <nl> + + " InputAnnotationsTest5 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> <nl> } <nl> <nl> @ @ - 95 , 7 + 105 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = { } ; <nl> verify ( checkConfig , <nl> - getPath ( " grammars / java8 / InputAnnotationsTest6 . java " ) , expected ) ; <nl> + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " <nl> + + " checkstyle / grammars / java8 / " <nl> + + " InputAnnotationsTest6 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> <nl> } <nl> <nl> @ @ - 107 , 7 + 119 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = { } ; <nl> verify ( checkConfig , <nl> - getPath ( " grammars / java8 / InputAnnotationsTest7 . java " ) , expected ) ; <nl> + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " <nl> + + " checkstyle / grammars / java8 / " <nl> + + " InputAnnotationsTest7 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> <nl> } <nl> <nl> @ @ - 119 , 7 + 133 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = { } ; <nl> verify ( checkConfig , <nl> - getPath ( " grammars / java8 / InputAnnotationsTest8 . java " ) , expected ) ; <nl> + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " <nl> + + " checkstyle / grammars / java8 / " <nl> + + " InputAnnotationsTest8 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> <nl> } <nl> <nl> @ @ - 131 , 7 + 147 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = { } ; <nl> verify ( checkConfig , <nl> - getPath ( " grammars / java8 / InputAnnotationsTest9 . java " ) , expected ) ; <nl> + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " <nl> + + " checkstyle / grammars / java8 / " <nl> + + " InputAnnotationsTest9 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> <nl> } <nl> <nl> @ @ - 143 , 7 + 161 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> final String [ ] expected = { } ; <nl> verify ( checkConfig , <nl> - getPath ( " grammars / java8 / InputAnnotationsTest10 . java " ) , expected ) ; <nl> + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " <nl> + + " checkstyle / grammars / java8 / " <nl> + + " InputAnnotationsTest10 . java " ) . getCanonicalPath ( ) , expected ) ; <nl> <nl> } <nl> <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java <nl> new file mode 100644 <nl> index 0000000 . . 0783b13 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java <nl> @ @ - 0 , 0 + 1 , 23 @ @ <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + <nl> + public class InputAnnotationsTest10 { <nl> + 	 public static Object methodName ( Object str ) { <nl> + 	 	 try { <nl> + return null ; <nl> + <nl> + } catch ( @ MyAnnotation1 ( name = " ABC " , version = 1 ) Exception ex ) { <nl> + return " " ; <nl> + } <nl> + 	 } <nl> + 	 <nl> + 	 @ Target ( ElementType . TYPE _ USE ) <nl> + 	 @ interface MyAnnotation1 { <nl> + 	 	 <nl> + 	 String name ( ) ; <nl> + 	 int version ( ) ; <nl> + 	 } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java <nl> new file mode 100644 <nl> index 0000000 . . 672f0f1 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + <nl> + @ Schedule <nl> + public class InputAnnotationsTest2 { <nl> + 	 <nl> + 	 <nl> + } <nl> + <nl> + @ Target ( { ElementType . TYPE _ USE , ElementType . TYPE _ PARAMETER } ) <nl> + @ interface Schedule { <nl> + <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java <nl> new file mode 100644 <nl> index 0000000 . . fbd9e8b <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + <nl> + <nl> + <nl> + public class InputAnnotationsTest3 { <nl> + 	 <nl> + 	 public static void methodName ( Object str ) { <nl> + 	 	 String myString = ( @ NonNull String ) str ; <nl> + 	 } <nl> + 	 <nl> + 	 @ Target ( ElementType . TYPE _ USE ) <nl> + 	 @ interface NonNull { <nl> + 	 } <nl> + 	 <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java <nl> new file mode 100644 <nl> index 0000000 . . fab0f7b <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + <nl> + <nl> + public class InputAnnotationsTest4 { <nl> + 	 <nl> + 	 public static void methodName ( @ NotNull String args ) { <nl> + 	 	 <nl> + 	 } <nl> + 	 <nl> + 	 @ Target ( ElementType . TYPE _ USE ) <nl> + 	 @ interface NotNull { <nl> + <nl> + 	 } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java <nl> new file mode 100644 <nl> index 0000000 . . fc03931 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + <nl> + <nl> + public class InputAnnotationsTest5 { <nl> + 	 <nl> + 	 <nl> + 	 void monitorTemperature ( ) throws @ Critical Exception { } <nl> + <nl> + 	 @ Target ( ElementType . TYPE _ USE ) <nl> + 	 @ interface Critical { <nl> + <nl> + 	 } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java <nl> new file mode 100644 <nl> index 0000000 . . 30f3e24 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + import java . util . List ; <nl> + <nl> + public class InputAnnotationsTest6 { <nl> + <nl> + 	 abstract class UnmodifiableList < T > implements @ Readonly List < @ Readonly T > { <nl> + 	 } <nl> + <nl> + 	 @ Target ( ElementType . TYPE _ USE ) <nl> + 	 @ interface Readonly { <nl> + <nl> + 	 } 	 <nl> + } <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java <nl> new file mode 100644 <nl> index 0000000 . . 6c26e93 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java <nl> @ @ - 0 , 0 + 1 , 19 @ @ <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + import java . util . List ; <nl> + <nl> + public class InputAnnotationsTest7 { <nl> + 	 <nl> + 	 public static void main ( String [ ] args ) { <nl> + 	 	 Object object = new @ Interned Object ( ) ; <nl> + 	 	 <nl> + 	 } <nl> + 	 <nl> + 	 @ Target ( ElementType . TYPE _ USE ) <nl> + 	 @ interface Interned { <nl> + <nl> + 	 } 	 <nl> + 	 <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java <nl> new file mode 100644 <nl> index 0000000 . . c882d14 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java <nl> @ @ - 0 , 0 + 1 , 34 @ @ <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + import java . util . Map ; <nl> + <nl> + public class InputAnnotationsTest8 { <nl> + 	 <nl> + 	 public void main ( String [ ] args ) { <nl> + 	 	 Map . @ NotNull Entry entry ; <nl> + 	 	 MyObject myObject = new MyObject ( ) ; <nl> + 	 	 myObject . < @ NotBlank String > myMethod ( ) ; <nl> + 	 	 myObject . new @ NotNull MyObject2 ( ) ; <nl> + 	 	 <nl> + 	 } <nl> + 	 <nl> + 	 @ Target ( ElementType . TYPE _ USE ) <nl> + 	 @ interface NotNull { <nl> + <nl> + 	 } <nl> + 	 <nl> + 	 @ Target ( ElementType . TYPE _ USE ) <nl> + 	 @ interface NotBlank { <nl> + <nl> + 	 } <nl> + 	 <nl> + 	 class MyObject { <nl> + 	 	 <nl> + 	 	 public void myMethod ( ) { } ; <nl> + 	 	 <nl> + 	 	 class MyObject2 { } <nl> + 	 } <nl> + 	 <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java <nl> new file mode 100644 <nl> index 0000000 . . f91a553 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + import java . util . List ; <nl> + <nl> + public class InputAnnotationsTest9 { <nl> + 	 public static < T > void methodName ( Object str ) { <nl> + 	 	 List < @ Immutable ? extends Comparable < T > > unchangeable ; <nl> + 	 } <nl> + 	 <nl> + 	 @ Target ( ElementType . TYPE _ USE ) <nl> + 	 @ interface Immutable { <nl> + 	 } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java <nl> deleted file mode 100644 <nl> index 0783b13 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java <nl> + + + / dev / null <nl> @ @ - 1 , 23 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> - <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - <nl> - public class InputAnnotationsTest10 { <nl> - 	 public static Object methodName ( Object str ) { <nl> - 	 	 try { <nl> - return null ; <nl> - <nl> - } catch ( @ MyAnnotation1 ( name = " ABC " , version = 1 ) Exception ex ) { <nl> - return " " ; <nl> - } <nl> - 	 } <nl> - 	 <nl> - 	 @ Target ( ElementType . TYPE _ USE ) <nl> - 	 @ interface MyAnnotation1 { <nl> - 	 	 <nl> - 	 String name ( ) ; <nl> - 	 int version ( ) ; <nl> - 	 } <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java <nl> deleted file mode 100644 <nl> index 672f0f1 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 15 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - <nl> - @ Schedule <nl> - public class InputAnnotationsTest2 { <nl> - 	 <nl> - 	 <nl> - } <nl> - <nl> - @ Target ( { ElementType . TYPE _ USE , ElementType . TYPE _ PARAMETER } ) <nl> - @ interface Schedule { <nl> - <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java <nl> deleted file mode 100644 <nl> index fbd9e8b . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java <nl> + + + / dev / null <nl> @ @ - 1 , 18 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - <nl> - <nl> - <nl> - public class InputAnnotationsTest3 { <nl> - 	 <nl> - 	 public static void methodName ( Object str ) { <nl> - 	 	 String myString = ( @ NonNull String ) str ; <nl> - 	 } <nl> - 	 <nl> - 	 @ Target ( ElementType . TYPE _ USE ) <nl> - 	 @ interface NonNull { <nl> - 	 } <nl> - 	 <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java <nl> deleted file mode 100644 <nl> index fab0f7b . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java <nl> + + + / dev / null <nl> @ @ - 1 , 17 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - <nl> - <nl> - public class InputAnnotationsTest4 { <nl> - 	 <nl> - 	 public static void methodName ( @ NotNull String args ) { <nl> - 	 	 <nl> - 	 } <nl> - 	 <nl> - 	 @ Target ( ElementType . TYPE _ USE ) <nl> - 	 @ interface NotNull { <nl> - <nl> - 	 } <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java <nl> deleted file mode 100644 <nl> index fc03931 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java <nl> + + + / dev / null <nl> @ @ - 1 , 16 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - <nl> - <nl> - public class InputAnnotationsTest5 { <nl> - 	 <nl> - 	 <nl> - 	 void monitorTemperature ( ) throws @ Critical Exception { } <nl> - <nl> - 	 @ Target ( ElementType . TYPE _ USE ) <nl> - 	 @ interface Critical { <nl> - <nl> - 	 } <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java <nl> deleted file mode 100644 <nl> index 30f3e24 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java <nl> + + + / dev / null <nl> @ @ - 1 , 17 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> - <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - import java . util . List ; <nl> - <nl> - public class InputAnnotationsTest6 { <nl> - <nl> - 	 abstract class UnmodifiableList < T > implements @ Readonly List < @ Readonly T > { <nl> - 	 } <nl> - <nl> - 	 @ Target ( ElementType . TYPE _ USE ) <nl> - 	 @ interface Readonly { <nl> - <nl> - 	 } 	 <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java <nl> deleted file mode 100644 <nl> index 6c26e93 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java <nl> + + + / dev / null <nl> @ @ - 1 , 19 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - import java . util . List ; <nl> - <nl> - public class InputAnnotationsTest7 { <nl> - 	 <nl> - 	 public static void main ( String [ ] args ) { <nl> - 	 	 Object object = new @ Interned Object ( ) ; <nl> - 	 	 <nl> - 	 } <nl> - 	 <nl> - 	 @ Target ( ElementType . TYPE _ USE ) <nl> - 	 @ interface Interned { <nl> - <nl> - 	 } 	 <nl> - 	 <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java <nl> deleted file mode 100644 <nl> index c882d14 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java <nl> + + + / dev / null <nl> @ @ - 1 , 34 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - import java . util . Map ; <nl> - <nl> - public class InputAnnotationsTest8 { <nl> - 	 <nl> - 	 public void main ( String [ ] args ) { <nl> - 	 	 Map . @ NotNull Entry entry ; <nl> - 	 	 MyObject myObject = new MyObject ( ) ; <nl> - 	 	 myObject . < @ NotBlank String > myMethod ( ) ; <nl> - 	 	 myObject . new @ NotNull MyObject2 ( ) ; <nl> - 	 	 <nl> - 	 } <nl> - 	 <nl> - 	 @ Target ( ElementType . TYPE _ USE ) <nl> - 	 @ interface NotNull { <nl> - <nl> - 	 } <nl> - 	 <nl> - 	 @ Target ( ElementType . TYPE _ USE ) <nl> - 	 @ interface NotBlank { <nl> - <nl> - 	 } <nl> - 	 <nl> - 	 class MyObject { <nl> - 	 	 <nl> - 	 	 public void myMethod ( ) { } ; <nl> - 	 	 <nl> - 	 	 class MyObject2 { } <nl> - 	 } <nl> - 	 <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java <nl> deleted file mode 100644 <nl> index f91a553 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java <nl> + + + / dev / null <nl> @ @ - 1 , 15 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - import java . util . List ; <nl> - <nl> - public class InputAnnotationsTest9 { <nl> - 	 public static < T > void methodName ( Object str ) { <nl> - 	 	 List < @ Immutable ? extends Comparable < T > > unchangeable ; <nl> - 	 } <nl> - 	 <nl> - 	 @ Target ( ElementType . TYPE _ USE ) <nl> - 	 @ interface Immutable { <nl> - 	 } <nl> - } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / src / xdocs / config . xml b / src / xdocs / config . xml 
 index bb50420 . . 5dcd8b4 100644 
 - - - a / src / xdocs / config . xml 
 + + + b / src / xdocs / config . xml 
 @ @ - 665 , 7 + 665 , 8 @ @ 
 custom message pattern , as shown in the example above . 
 Placeholders used in the default message can also be used in the 
 custom message . Note that the message pattern must be a valid 
 - < code > java . text . MessageFormat < / code > style pattern , 
 + < a href = " https : / / docs . oracle . com / javase / 8 / docs / api / java / text / MessageFormat . html " > java . text . MessageFormat < / a > 
 + style pattern , 
 so be careful about curly braces outside a placeholder 
 definition . 
 < / p >

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / AnnotationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / AnnotationTest . java 
 index a685377 . . ec10441 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / AnnotationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / AnnotationTest . java 
 @ @ - 18 , 6 + 18 , 8 @ @ 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 
 + import java . io . File ; 
 + 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 @ @ - 47 , 7 + 49 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport 
 createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = { } ; 
 verify ( checkConfig , 
 - getPath ( " grammars / java8 / InputAnnotationsTest2 . java " ) , expected ) ; 
 + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " 
 + + " checkstyle / grammars / java8 / " 
 + + " InputAnnotationsTest2 . java " ) . getCanonicalPath ( ) , expected ) ; 
 
 } 
 
 @ @ - 59 , 7 + 63 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport 
 createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = { } ; 
 verify ( checkConfig , 
 - getPath ( " grammars / java8 / InputAnnotationsTest3 . java " ) , expected ) ; 
 + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " 
 + + " checkstyle / grammars / java8 / " 
 + + " InputAnnotationsTest3 . java " ) . getCanonicalPath ( ) , expected ) ; 
 
 } 
 
 @ @ - 71 , 7 + 77 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport 
 createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = { } ; 
 verify ( checkConfig , 
 - getPath ( " grammars / java8 / InputAnnotationsTest4 . java " ) , expected ) ; 
 + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " 
 + + " checkstyle / grammars / java8 / " 
 + + " InputAnnotationsTest4 . java " ) . getCanonicalPath ( ) , expected ) ; 
 
 } 
 
 @ @ - 83 , 7 + 91 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport 
 createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = { } ; 
 verify ( checkConfig , 
 - getPath ( " grammars / java8 / InputAnnotationsTest5 . java " ) , expected ) ; 
 + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " 
 + + " checkstyle / grammars / java8 / " 
 + + " InputAnnotationsTest5 . java " ) . getCanonicalPath ( ) , expected ) ; 
 
 } 
 
 @ @ - 95 , 7 + 105 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport 
 createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = { } ; 
 verify ( checkConfig , 
 - getPath ( " grammars / java8 / InputAnnotationsTest6 . java " ) , expected ) ; 
 + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " 
 + + " checkstyle / grammars / java8 / " 
 + + " InputAnnotationsTest6 . java " ) . getCanonicalPath ( ) , expected ) ; 
 
 } 
 
 @ @ - 107 , 7 + 119 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport 
 createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = { } ; 
 verify ( checkConfig , 
 - getPath ( " grammars / java8 / InputAnnotationsTest7 . java " ) , expected ) ; 
 + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " 
 + + " checkstyle / grammars / java8 / " 
 + + " InputAnnotationsTest7 . java " ) . getCanonicalPath ( ) , expected ) ; 
 
 } 
 
 @ @ - 119 , 7 + 133 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport 
 createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = { } ; 
 verify ( checkConfig , 
 - getPath ( " grammars / java8 / InputAnnotationsTest8 . java " ) , expected ) ; 
 + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " 
 + + " checkstyle / grammars / java8 / " 
 + + " InputAnnotationsTest8 . java " ) . getCanonicalPath ( ) , expected ) ; 
 
 } 
 
 @ @ - 131 , 7 + 147 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport 
 createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = { } ; 
 verify ( checkConfig , 
 - getPath ( " grammars / java8 / InputAnnotationsTest9 . java " ) , expected ) ; 
 + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " 
 + + " checkstyle / grammars / java8 / " 
 + + " InputAnnotationsTest9 . java " ) . getCanonicalPath ( ) , expected ) ; 
 
 } 
 
 @ @ - 143 , 7 + 161 , 9 @ @ public class AnnotationTest extends BaseCheckTestSupport 
 createCheckConfig ( MemberNameCheck . class ) ; 
 final String [ ] expected = { } ; 
 verify ( checkConfig , 
 - getPath ( " grammars / java8 / InputAnnotationsTest10 . java " ) , expected ) ; 
 + new File ( " src / test / resources - noncompilable / com / puppycrawl / tools / " 
 + + " checkstyle / grammars / java8 / " 
 + + " InputAnnotationsTest10 . java " ) . getCanonicalPath ( ) , expected ) ; 
 
 } 
 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java 
 new file mode 100644 
 index 0000000 . . 0783b13 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + 
 + public class InputAnnotationsTest10 { 
 + 	 public static Object methodName ( Object str ) { 
 + 	 	 try { 
 + return null ; 
 + 
 + } catch ( @ MyAnnotation1 ( name = " ABC " , version = 1 ) Exception ex ) { 
 + return " " ; 
 + } 
 + 	 } 
 + 	 
 + 	 @ Target ( ElementType . TYPE _ USE ) 
 + 	 @ interface MyAnnotation1 { 
 + 	 	 
 + 	 String name ( ) ; 
 + 	 int version ( ) ; 
 + 	 } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java 
 new file mode 100644 
 index 0000000 . . 672f0f1 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + 
 + @ Schedule 
 + public class InputAnnotationsTest2 { 
 + 	 
 + 	 
 + } 
 + 
 + @ Target ( { ElementType . TYPE _ USE , ElementType . TYPE _ PARAMETER } ) 
 + @ interface Schedule { 
 + 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java 
 new file mode 100644 
 index 0000000 . . fbd9e8b 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + 
 + 
 + 
 + public class InputAnnotationsTest3 { 
 + 	 
 + 	 public static void methodName ( Object str ) { 
 + 	 	 String myString = ( @ NonNull String ) str ; 
 + 	 } 
 + 	 
 + 	 @ Target ( ElementType . TYPE _ USE ) 
 + 	 @ interface NonNull { 
 + 	 } 
 + 	 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java 
 new file mode 100644 
 index 0000000 . . fab0f7b 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + 
 + 
 + public class InputAnnotationsTest4 { 
 + 	 
 + 	 public static void methodName ( @ NotNull String args ) { 
 + 	 	 
 + 	 } 
 + 	 
 + 	 @ Target ( ElementType . TYPE _ USE ) 
 + 	 @ interface NotNull { 
 + 
 + 	 } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java 
 new file mode 100644 
 index 0000000 . . fc03931 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + 
 + 
 + public class InputAnnotationsTest5 { 
 + 	 
 + 	 
 + 	 void monitorTemperature ( ) throws @ Critical Exception { } 
 + 
 + 	 @ Target ( ElementType . TYPE _ USE ) 
 + 	 @ interface Critical { 
 + 
 + 	 } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java 
 new file mode 100644 
 index 0000000 . . 30f3e24 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + import java . util . List ; 
 + 
 + public class InputAnnotationsTest6 { 
 + 
 + 	 abstract class UnmodifiableList < T > implements @ Readonly List < @ Readonly T > { 
 + 	 } 
 + 
 + 	 @ Target ( ElementType . TYPE _ USE ) 
 + 	 @ interface Readonly { 
 + 
 + 	 } 	 
 + } 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java 
 new file mode 100644 
 index 0000000 . . 6c26e93 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + import java . util . List ; 
 + 
 + public class InputAnnotationsTest7 { 
 + 	 
 + 	 public static void main ( String [ ] args ) { 
 + 	 	 Object object = new @ Interned Object ( ) ; 
 + 	 	 
 + 	 } 
 + 	 
 + 	 @ Target ( ElementType . TYPE _ USE ) 
 + 	 @ interface Interned { 
 + 
 + 	 } 	 
 + 	 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java 
 new file mode 100644 
 index 0000000 . . c882d14 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java 
 @ @ - 0 , 0 + 1 , 34 @ @ 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + import java . util . Map ; 
 + 
 + public class InputAnnotationsTest8 { 
 + 	 
 + 	 public void main ( String [ ] args ) { 
 + 	 	 Map . @ NotNull Entry entry ; 
 + 	 	 MyObject myObject = new MyObject ( ) ; 
 + 	 	 myObject . < @ NotBlank String > myMethod ( ) ; 
 + 	 	 myObject . new @ NotNull MyObject2 ( ) ; 
 + 	 	 
 + 	 } 
 + 	 
 + 	 @ Target ( ElementType . TYPE _ USE ) 
 + 	 @ interface NotNull { 
 + 
 + 	 } 
 + 	 
 + 	 @ Target ( ElementType . TYPE _ USE ) 
 + 	 @ interface NotBlank { 
 + 
 + 	 } 
 + 	 
 + 	 class MyObject { 
 + 	 	 
 + 	 	 public void myMethod ( ) { } ; 
 + 	 	 
 + 	 	 class MyObject2 { } 
 + 	 } 
 + 	 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java 
 new file mode 100644 
 index 0000000 . . f91a553 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + import java . util . List ; 
 + 
 + public class InputAnnotationsTest9 { 
 + 	 public static < T > void methodName ( Object str ) { 
 + 	 	 List < @ Immutable ? extends Comparable < T > > unchangeable ; 
 + 	 } 
 + 	 
 + 	 @ Target ( ElementType . TYPE _ USE ) 
 + 	 @ interface Immutable { 
 + 	 } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java 
 deleted file mode 100644 
 index 0783b13 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest10 . java 
 + + + / dev / null 
 @ @ - 1 , 23 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 - 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - 
 - public class InputAnnotationsTest10 { 
 - 	 public static Object methodName ( Object str ) { 
 - 	 	 try { 
 - return null ; 
 - 
 - } catch ( @ MyAnnotation1 ( name = " ABC " , version = 1 ) Exception ex ) { 
 - return " " ; 
 - } 
 - 	 } 
 - 	 
 - 	 @ Target ( ElementType . TYPE _ USE ) 
 - 	 @ interface MyAnnotation1 { 
 - 	 	 
 - 	 String name ( ) ; 
 - 	 int version ( ) ; 
 - 	 } 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java 
 deleted file mode 100644 
 index 672f0f1 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest2 . java 
 + + + / dev / null 
 @ @ - 1 , 15 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - 
 - @ Schedule 
 - public class InputAnnotationsTest2 { 
 - 	 
 - 	 
 - } 
 - 
 - @ Target ( { ElementType . TYPE _ USE , ElementType . TYPE _ PARAMETER } ) 
 - @ interface Schedule { 
 - 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java 
 deleted file mode 100644 
 index fbd9e8b . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest3 . java 
 + + + / dev / null 
 @ @ - 1 , 18 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - 
 - 
 - 
 - public class InputAnnotationsTest3 { 
 - 	 
 - 	 public static void methodName ( Object str ) { 
 - 	 	 String myString = ( @ NonNull String ) str ; 
 - 	 } 
 - 	 
 - 	 @ Target ( ElementType . TYPE _ USE ) 
 - 	 @ interface NonNull { 
 - 	 } 
 - 	 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java 
 deleted file mode 100644 
 index fab0f7b . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest4 . java 
 + + + / dev / null 
 @ @ - 1 , 17 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - 
 - 
 - public class InputAnnotationsTest4 { 
 - 	 
 - 	 public static void methodName ( @ NotNull String args ) { 
 - 	 	 
 - 	 } 
 - 	 
 - 	 @ Target ( ElementType . TYPE _ USE ) 
 - 	 @ interface NotNull { 
 - 
 - 	 } 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java 
 deleted file mode 100644 
 index fc03931 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest5 . java 
 + + + / dev / null 
 @ @ - 1 , 16 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - 
 - 
 - public class InputAnnotationsTest5 { 
 - 	 
 - 	 
 - 	 void monitorTemperature ( ) throws @ Critical Exception { } 
 - 
 - 	 @ Target ( ElementType . TYPE _ USE ) 
 - 	 @ interface Critical { 
 - 
 - 	 } 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java 
 deleted file mode 100644 
 index 30f3e24 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest6 . java 
 + + + / dev / null 
 @ @ - 1 , 17 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 - 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - import java . util . List ; 
 - 
 - public class InputAnnotationsTest6 { 
 - 
 - 	 abstract class UnmodifiableList < T > implements @ Readonly List < @ Readonly T > { 
 - 	 } 
 - 
 - 	 @ Target ( ElementType . TYPE _ USE ) 
 - 	 @ interface Readonly { 
 - 
 - 	 } 	 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java 
 deleted file mode 100644 
 index 6c26e93 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest7 . java 
 + + + / dev / null 
 @ @ - 1 , 19 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - import java . util . List ; 
 - 
 - public class InputAnnotationsTest7 { 
 - 	 
 - 	 public static void main ( String [ ] args ) { 
 - 	 	 Object object = new @ Interned Object ( ) ; 
 - 	 	 
 - 	 } 
 - 	 
 - 	 @ Target ( ElementType . TYPE _ USE ) 
 - 	 @ interface Interned { 
 - 
 - 	 } 	 
 - 	 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java 
 deleted file mode 100644 
 index c882d14 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest8 . java 
 + + + / dev / null 
 @ @ - 1 , 34 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - import java . util . Map ; 
 - 
 - public class InputAnnotationsTest8 { 
 - 	 
 - 	 public void main ( String [ ] args ) { 
 - 	 	 Map . @ NotNull Entry entry ; 
 - 	 	 MyObject myObject = new MyObject ( ) ; 
 - 	 	 myObject . < @ NotBlank String > myMethod ( ) ; 
 - 	 	 myObject . new @ NotNull MyObject2 ( ) ; 
 - 	 	 
 - 	 } 
 - 	 
 - 	 @ Target ( ElementType . TYPE _ USE ) 
 - 	 @ interface NotNull { 
 - 
 - 	 } 
 - 	 
 - 	 @ Target ( ElementType . TYPE _ USE ) 
 - 	 @ interface NotBlank { 
 - 
 - 	 } 
 - 	 
 - 	 class MyObject { 
 - 	 	 
 - 	 	 public void myMethod ( ) { } ; 
 - 	 	 
 - 	 	 class MyObject2 { } 
 - 	 } 
 - 	 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java 
 deleted file mode 100644 
 index f91a553 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / java8 / InputAnnotationsTest9 . java 
 + + + / dev / null 
 @ @ - 1 , 15 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - import java . util . List ; 
 - 
 - public class InputAnnotationsTest9 { 
 - 	 public static < T > void methodName ( Object str ) { 
 - 	 	 List < @ Immutable ? extends Comparable < T > > unchangeable ; 
 - 	 } 
 - 	 
 - 	 @ Target ( ElementType . TYPE _ USE ) 
 - 	 @ interface Immutable { 
 - 	 } 
 - } 
 \ No newline at end of file
