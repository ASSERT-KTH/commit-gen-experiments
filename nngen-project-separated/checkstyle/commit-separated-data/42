BLEU SCORE: 0.037477767366779206

TEST MSG: Pull # 6557 : reset the test stream for each test
GENERATED MSG: Remove duplicates in throws lists . # 1555

TEST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java b / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java <nl> index 00550d8 . . c4dd17b 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java <nl> @ @ - 259 , 6 + 259 , 7 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport <nl> Integer . . . warnsExpected ) <nl> throws Exception { <nl> stream . flush ( ) ; <nl> + stream . reset ( ) ; <nl> final List < File > theFiles = new ArrayList < > ( ) ; <nl> Collections . addAll ( theFiles , processedFiles ) ; <nl> final List < Integer > theWarnings = new ArrayList < > ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java <nl> index 7fdc447 . . f884632 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java <nl> @ @ - 273 , 6 + 273 , 7 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport <nl> String . . . expected ) <nl> throws Exception { <nl> stream . flush ( ) ; <nl> + stream . reset ( ) ; <nl> final List < File > theFiles = new ArrayList < > ( ) ; <nl> Collections . addAll ( theFiles , processedFiles ) ; <nl> final int errs = checker . process ( theFiles ) ; <nl> @ @ - 310 , 6 + 311 , 7 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport <nl> Map < String , List < String > > expectedViolations ) <nl> throws Exception { <nl> stream . flush ( ) ; <nl> + stream . reset ( ) ; <nl> final List < File > theFiles = new ArrayList < > ( ) ; <nl> Collections . addAll ( theFiles , processedFiles ) ; <nl> final int errs = checker . process ( theFiles ) ;
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> index c67d9aa . . f1c1b3f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> @ @ - 178 , 7 + 178 , 7 @ @ public class CheckerTest { <nl> final String [ ] fileExtensions = { " java " , " xml " , " properties " } ; <nl> c . setFileExtensions ( fileExtensions ) ; <nl> final int counter = c . process ( files ) ; <nl> - assertEquals ( counter , 1 ) ; / / comparing to 1 as there is only one legal file in input <nl> + assertEquals ( 1 , counter ) ; / / comparing to 1 as there is only one legal file in input <nl> } <nl> <nl> @ SuppressWarnings ( " deprecation " ) <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTagInfoTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTagInfoTest . java <nl> index 7f23234 . . 240dc6c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTagInfoTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTagInfoTest . java <nl> @ @ - 303 , 7 + 303 , 7 @ @ public class JavadocTagInfoTest { <nl> <nl> @ Test <nl> public void testCoverage ( ) { <nl> - assertEquals ( JavadocTagInfo . VERSION . getType ( ) , JavadocTagInfo . Type . BLOCK ) ; <nl> + assertEquals ( JavadocTagInfo . Type . BLOCK , JavadocTagInfo . VERSION . getType ( ) ) ; <nl> <nl> assertEquals ( " text [ @ version ] name [ version ] type [ BLOCK ] " , JavadocTagInfo . VERSION . toString ( ) ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> index c5ba375 . . 89230f6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> @ @ - 81 , 7 + 81 , 7 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { <nl> final int stringNumber = <nl> UniquePropertiesCheck . getLineNumber ( testStrings , <nl> " some key " ) ; <nl> - Assert . assertEquals ( stringNumber , 0 ) ; <nl> + Assert . assertEquals ( 0 , stringNumber ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 97 , 12 + 97 , 12 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { <nl> final SortedSet < LocalizedMessage > messages = <nl> check . process ( file , Collections . < String > emptyList ( ) ) ; <nl> Assert . assertEquals ( " Wrong messages count : " + messages . size ( ) , <nl> - messages . size ( ) , 1 ) ; <nl> + 1 , messages . size ( ) ) ; <nl> final LocalizedMessage message = messages . iterator ( ) . next ( ) ; <nl> final String retrievedMessage = messages . iterator ( ) . next ( ) . getKey ( ) ; <nl> Assert . assertEquals ( " Message key ' " + retrievedMessage <nl> - + " ' is not valid " , retrievedMessage , <nl> - " unable . open . cause " ) ; <nl> + + " ' is not valid " , " unable . open . cause " , <nl> + retrievedMessage ) ; <nl> Assert . assertEquals ( " Message ' " + message . getMessage ( ) <nl> + " ' is not valid " , message . getMessage ( ) , <nl> getCheckMessage ( IO _ EXCEPTION _ KEY , fileName , getFileNotFoundDetail ( file ) ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java <nl> index 22421ff . . cb2c118 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java <nl> @ @ - 90 , 7 + 90 , 7 @ @ public class CommentsIndentationCheckTest extends BaseCheckTestSupport { <nl> } <nl> catch ( IllegalArgumentException e ) { <nl> final String msg = e . getMessage ( ) ; <nl> - Assert . assertEquals ( msg , " Unexpected token type : methodStub " ) ; <nl> + Assert . assertEquals ( " Unexpected token type : methodStub " , msg ) ; <nl> } <nl> } <nl> }

TEST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java b / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java 
 index 00550d8 . . c4dd17b 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / AbstractModuleTestSupport . java 
 @ @ - 259 , 6 + 259 , 7 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport 
 Integer . . . warnsExpected ) 
 throws Exception { 
 stream . flush ( ) ; 
 + stream . reset ( ) ; 
 final List < File > theFiles = new ArrayList < > ( ) ; 
 Collections . addAll ( theFiles , processedFiles ) ; 
 final List < Integer > theWarnings = new ArrayList < > ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java 
 index 7fdc447 . . f884632 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java 
 @ @ - 273 , 6 + 273 , 7 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport 
 String . . . expected ) 
 throws Exception { 
 stream . flush ( ) ; 
 + stream . reset ( ) ; 
 final List < File > theFiles = new ArrayList < > ( ) ; 
 Collections . addAll ( theFiles , processedFiles ) ; 
 final int errs = checker . process ( theFiles ) ; 
 @ @ - 310 , 6 + 311 , 7 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport 
 Map < String , List < String > > expectedViolations ) 
 throws Exception { 
 stream . flush ( ) ; 
 + stream . reset ( ) ; 
 final List < File > theFiles = new ArrayList < > ( ) ; 
 Collections . addAll ( theFiles , processedFiles ) ; 
 final int errs = checker . process ( theFiles ) ;

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 index c67d9aa . . f1c1b3f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 @ @ - 178 , 7 + 178 , 7 @ @ public class CheckerTest { 
 final String [ ] fileExtensions = { " java " , " xml " , " properties " } ; 
 c . setFileExtensions ( fileExtensions ) ; 
 final int counter = c . process ( files ) ; 
 - assertEquals ( counter , 1 ) ; / / comparing to 1 as there is only one legal file in input 
 + assertEquals ( 1 , counter ) ; / / comparing to 1 as there is only one legal file in input 
 } 
 
 @ SuppressWarnings ( " deprecation " ) 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTagInfoTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTagInfoTest . java 
 index 7f23234 . . 240dc6c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTagInfoTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTagInfoTest . java 
 @ @ - 303 , 7 + 303 , 7 @ @ public class JavadocTagInfoTest { 
 
 @ Test 
 public void testCoverage ( ) { 
 - assertEquals ( JavadocTagInfo . VERSION . getType ( ) , JavadocTagInfo . Type . BLOCK ) ; 
 + assertEquals ( JavadocTagInfo . Type . BLOCK , JavadocTagInfo . VERSION . getType ( ) ) ; 
 
 assertEquals ( " text [ @ version ] name [ version ] type [ BLOCK ] " , JavadocTagInfo . VERSION . toString ( ) ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 index c5ba375 . . 89230f6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 @ @ - 81 , 7 + 81 , 7 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { 
 final int stringNumber = 
 UniquePropertiesCheck . getLineNumber ( testStrings , 
 " some key " ) ; 
 - Assert . assertEquals ( stringNumber , 0 ) ; 
 + Assert . assertEquals ( 0 , stringNumber ) ; 
 } 
 
 / * * 
 @ @ - 97 , 12 + 97 , 12 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { 
 final SortedSet < LocalizedMessage > messages = 
 check . process ( file , Collections . < String > emptyList ( ) ) ; 
 Assert . assertEquals ( " Wrong messages count : " + messages . size ( ) , 
 - messages . size ( ) , 1 ) ; 
 + 1 , messages . size ( ) ) ; 
 final LocalizedMessage message = messages . iterator ( ) . next ( ) ; 
 final String retrievedMessage = messages . iterator ( ) . next ( ) . getKey ( ) ; 
 Assert . assertEquals ( " Message key ' " + retrievedMessage 
 - + " ' is not valid " , retrievedMessage , 
 - " unable . open . cause " ) ; 
 + + " ' is not valid " , " unable . open . cause " , 
 + retrievedMessage ) ; 
 Assert . assertEquals ( " Message ' " + message . getMessage ( ) 
 + " ' is not valid " , message . getMessage ( ) , 
 getCheckMessage ( IO _ EXCEPTION _ KEY , fileName , getFileNotFoundDetail ( file ) ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java 
 index 22421ff . . cb2c118 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java 
 @ @ - 90 , 7 + 90 , 7 @ @ public class CommentsIndentationCheckTest extends BaseCheckTestSupport { 
 } 
 catch ( IllegalArgumentException e ) { 
 final String msg = e . getMessage ( ) ; 
 - Assert . assertEquals ( msg , " Unexpected token type : methodStub " ) ; 
 + Assert . assertEquals ( " Unexpected token type : methodStub " , msg ) ; 
 } 
 } 
 }
