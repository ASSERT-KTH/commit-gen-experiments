BLEU SCORE: 0.06285596338261261

TEST MSG: Issue # 4842 : make test for creating listener with location clean temp file
GENERATED MSG: Issue # 1243 : Output stream has to be closed

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index d0bb71a . . e96438e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 60 , 6 + 60 , 7 @ @ import org . junit . contrib . java . lang . system . SystemErrRule ; <nl> import org . junit . contrib . java . lang . system . SystemOutRule ; <nl> import org . junit . rules . TemporaryFolder ; <nl> import org . junit . runner . RunWith ; <nl> + import org . mockito . ArgumentCaptor ; <nl> import org . powermock . core . classloader . annotations . PrepareForTest ; <nl> import org . powermock . modules . junit4 . PowerMockRunner ; <nl> <nl> @ @ - 573 , 12 + 574 , 14 @ @ public class MainTest { <nl> ex . getCause ( ) instanceof IllegalStateException ) ; <nl> } <nl> finally { <nl> + verifyStatic ( times ( 1 ) ) ; <nl> + final ArgumentCaptor < OutputStream > out = <nl> + ArgumentCaptor . forClass ( OutputStream . class ) ; <nl> + CommonUtils . close ( out . capture ( ) ) ; <nl> + out . getValue ( ) . close ( ) ; <nl> / / method creates output folder <nl> FileUtils . deleteQuietly ( new File ( outDir ) ) ; <nl> } <nl> - <nl> - verifyStatic ( times ( 1 ) ) ; <nl> - CommonUtils . close ( any ( OutputStream . class ) ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java <nl> index f12c401 . . 6a98cc4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java <nl> @ @ - 103 , 7 + 103 , 7 @ @ public abstract class Check extends AbstractViolationReporter { <nl> * @ return the set of token names <nl> * / <nl> public final Set < String > getTokenNames ( ) { <nl> - return tokens ; <nl> + return Collections . unmodifiableSet ( tokens ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> index 812f1de . . 5ea239a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> @ @ - 230 , 7 + 230 , 7 @ @ public final class FileContents implements CommentListener { <nl> * @ return an object containing the full text of the file <nl> * / <nl> public FileText getText ( ) { <nl> - return text ; <nl> + return new FileText ( text ) ; <nl> } <nl> <nl> / * * @ return the lines in the file * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java <nl> index 16a39b9 . . 682073d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> + import java . util . Collections ; <nl> import java . util . Objects ; <nl> import java . util . Set ; <nl> <nl> @ @ - 56 , 7 + 57 , 7 @ @ public class FilterSet <nl> * @ return the Filters of the filter set . <nl> * / <nl> public Set < Filter > getFilters ( ) { <nl> - return filters ; <nl> + return Collections . unmodifiableSet ( filters ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java <nl> index e5d6eb8 . . 5cbab3f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> <nl> import com . google . common . collect . HashMultiset ; <nl> + import com . google . common . collect . ImmutableMultiset ; <nl> import com . google . common . collect . Multiset ; <nl> import com . google . common . collect . Multiset . Entry ; <nl> import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; <nl> @ @ - 148 , 7 + 149 , 7 @ @ public class UniquePropertiesCheck extends AbstractFileSetCheck { <nl> } <nl> <nl> public Multiset < String > getDuplicatedStrings ( ) { <nl> - return duplicatedStrings ; <nl> + return ImmutableMultiset . copyOf ( duplicatedStrings ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java <nl> index e05eeae . . eef176c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> <nl> + import java . util . Collections ; <nl> import java . util . List ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> @ @ - 50 , 7 + 51 , 7 @ @ public final class JavadocTags { <nl> * @ return validTags field <nl> * / <nl> public List < JavadocTag > getValidTags ( ) { <nl> - return validTags ; <nl> + return Collections . unmodifiableList ( validTags ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 58 , 6 + 59 , 6 @ @ public final class JavadocTags { <nl> * @ return invalidTags field <nl> * / <nl> public List < InvalidJavadocTag > getInvalidTags ( ) { <nl> - return invalidTags ; <nl> + return Collections . unmodifiableList ( invalidTags ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java <nl> index 84e74db . . c6c99df 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . filters ; <nl> <nl> + import java . util . Collections ; <nl> import java . util . Objects ; <nl> import java . util . Set ; <nl> import java . util . StringTokenizer ; <nl> @ @ - 78 , 7 + 79 , 7 @ @ class CSVFilter implements IntFilter { <nl> * @ return the IntFilters of the filter set . <nl> * / <nl> protected Set < IntFilter > getFilters ( ) { <nl> - return filters ; <nl> + return Collections . unmodifiableSet ( filters ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> index b027761 . . e983923 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import java . awt . event . KeyEvent ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> import java . util . List ; <nl> import java . util . TooManyListenersException ; <nl> <nl> @ @ - 213 , 7 + 214 , 7 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> <nl> public List < Integer > getLines2position ( ) { <nl> - return lines2position ; <nl> + return Collections . unmodifiableList ( lines2position ) ; <nl> } <nl> <nl> / * *

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index d0bb71a . . e96438e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 60 , 6 + 60 , 7 @ @ import org . junit . contrib . java . lang . system . SystemErrRule ; 
 import org . junit . contrib . java . lang . system . SystemOutRule ; 
 import org . junit . rules . TemporaryFolder ; 
 import org . junit . runner . RunWith ; 
 + import org . mockito . ArgumentCaptor ; 
 import org . powermock . core . classloader . annotations . PrepareForTest ; 
 import org . powermock . modules . junit4 . PowerMockRunner ; 
 
 @ @ - 573 , 12 + 574 , 14 @ @ public class MainTest { 
 ex . getCause ( ) instanceof IllegalStateException ) ; 
 } 
 finally { 
 + verifyStatic ( times ( 1 ) ) ; 
 + final ArgumentCaptor < OutputStream > out = 
 + ArgumentCaptor . forClass ( OutputStream . class ) ; 
 + CommonUtils . close ( out . capture ( ) ) ; 
 + out . getValue ( ) . close ( ) ; 
 / / method creates output folder 
 FileUtils . deleteQuietly ( new File ( outDir ) ) ; 
 } 
 - 
 - verifyStatic ( times ( 1 ) ) ; 
 - CommonUtils . close ( any ( OutputStream . class ) ) ; 
 } 
 
 @ Test

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java 
 index f12c401 . . 6a98cc4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java 
 @ @ - 103 , 7 + 103 , 7 @ @ public abstract class Check extends AbstractViolationReporter { 
 * @ return the set of token names 
 * / 
 public final Set < String > getTokenNames ( ) { 
 - return tokens ; 
 + return Collections . unmodifiableSet ( tokens ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 index 812f1de . . 5ea239a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 @ @ - 230 , 7 + 230 , 7 @ @ public final class FileContents implements CommentListener { 
 * @ return an object containing the full text of the file 
 * / 
 public FileText getText ( ) { 
 - return text ; 
 + return new FileText ( text ) ; 
 } 
 
 / * * @ return the lines in the file * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java 
 index 16a39b9 . . 682073d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 + import java . util . Collections ; 
 import java . util . Objects ; 
 import java . util . Set ; 
 
 @ @ - 56 , 7 + 57 , 7 @ @ public class FilterSet 
 * @ return the Filters of the filter set . 
 * / 
 public Set < Filter > getFilters ( ) { 
 - return filters ; 
 + return Collections . unmodifiableSet ( filters ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java 
 index e5d6eb8 . . 5cbab3f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 
 import com . google . common . collect . HashMultiset ; 
 + import com . google . common . collect . ImmutableMultiset ; 
 import com . google . common . collect . Multiset ; 
 import com . google . common . collect . Multiset . Entry ; 
 import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; 
 @ @ - 148 , 7 + 149 , 7 @ @ public class UniquePropertiesCheck extends AbstractFileSetCheck { 
 } 
 
 public Multiset < String > getDuplicatedStrings ( ) { 
 - return duplicatedStrings ; 
 + return ImmutableMultiset . copyOf ( duplicatedStrings ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java 
 index e05eeae . . eef176c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 
 + import java . util . Collections ; 
 import java . util . List ; 
 
 import com . google . common . collect . ImmutableList ; 
 @ @ - 50 , 7 + 51 , 7 @ @ public final class JavadocTags { 
 * @ return validTags field 
 * / 
 public List < JavadocTag > getValidTags ( ) { 
 - return validTags ; 
 + return Collections . unmodifiableList ( validTags ) ; 
 } 
 
 / * * 
 @ @ - 58 , 6 + 59 , 6 @ @ public final class JavadocTags { 
 * @ return invalidTags field 
 * / 
 public List < InvalidJavadocTag > getInvalidTags ( ) { 
 - return invalidTags ; 
 + return Collections . unmodifiableList ( invalidTags ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java 
 index 84e74db . . c6c99df 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . filters ; 
 
 + import java . util . Collections ; 
 import java . util . Objects ; 
 import java . util . Set ; 
 import java . util . StringTokenizer ; 
 @ @ - 78 , 7 + 79 , 7 @ @ class CSVFilter implements IntFilter { 
 * @ return the IntFilters of the filter set . 
 * / 
 protected Set < IntFilter > getFilters ( ) { 
 - return filters ; 
 + return Collections . unmodifiableSet ( filters ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 index b027761 . . e983923 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import java . awt . event . KeyEvent ; 
 import java . io . File ; 
 import java . io . IOException ; 
 import java . util . ArrayList ; 
 + import java . util . Collections ; 
 import java . util . List ; 
 import java . util . TooManyListenersException ; 
 
 @ @ - 213 , 7 + 214 , 7 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 
 public List < Integer > getLines2position ( ) { 
 - return lines2position ; 
 + return Collections . unmodifiableList ( lines2position ) ; 
 } 
 
 / * *
