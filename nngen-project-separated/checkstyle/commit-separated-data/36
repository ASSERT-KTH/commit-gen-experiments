BLEU SCORE: 0.5814307369682193

TEST MSG: Issue # 6586 : aligned javadoc / xdoc for EqualsHashCode
GENERATED MSG: Issue # 5750 : aligned javadoc / xdoc for MethodTypeParameterNameCheck

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java <nl> index 4fd5053 . . a32cd78 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java <nl> @ @ - 34 , 22 + 34 , 24 @ @ import com . puppycrawl . tools . checkstyle . utils . CheckUtil ; <nl> * < p > <nl> * Checks that classes that either override { @ code equals ( ) } or { @ code hashCode ( ) } also <nl> * overrides the other . <nl> - * This checks only verifies that the method declarations match { @ link Object # equals ( Object ) } and <nl> - * { @ link Object # hashCode ( ) } exactly to be considered an override . This check does not verify <nl> + * This check only verifies that the method declarations match { @ code Object . equals ( Object ) } and <nl> + * { @ code Object . hashCode ( ) } exactly to be considered an override . This check does not verify <nl> * invalid method names , parameters other than { @ code Object } , or anything else . <nl> * < / p > <nl> * < p > <nl> - * Rationale : The contract of equals ( ) and hashCode ( ) requires that <nl> - * equal objects have the same hashCode . Hence , whenever you override <nl> - * equals ( ) you must override hashCode ( ) to ensure that your class can <nl> - * be used in collections that are hash based . <nl> + * Rationale : The contract of { @ code equals ( ) } and { @ code hashCode ( ) } requires that <nl> + * equal objects have the same hashCode . Therefore , whenever you override <nl> + * { @ code equals ( ) } you must override { @ code hashCode ( ) } to ensure that your class can <nl> + * be used in hash - based collections . <nl> * < / p > <nl> * < p > <nl> - * An example of how to configure the check is : <nl> + * To configure the check : <nl> * < / p > <nl> * < pre > <nl> - * & lt ; module name = " EqualsHashCode " / & gt ; <nl> + * & lt ; module name = & quot ; EqualsHashCode & quot ; / & gt ; <nl> * < / pre > <nl> + * <nl> + * @ since 3 . 0 <nl> * / <nl> @ FileStatefulCheck <nl> public class EqualsHashCodeCheck <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> index f333316 . . 437066d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> @ @ - 87 , 6 + 87 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { <nl> " EmptyBlock " , <nl> " EmptyCatchBlock " , <nl> " EqualsAvoidNull " , <nl> + " EqualsHashCode " , <nl> " ImportOrder " , <nl> " InterfaceMemberImpliedModifier " , <nl> " InterfaceTypeParameterName " , <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index c191f9f . . 8dfe831 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 792 , 13 + 792 , 13 @ @ String nullString = null ; <nl> < / section > <nl> <nl> < section name = " EqualsHashCode " > <nl> + < p > Since Checkstyle 3 . 0 < / p > <nl> < subsection name = " Description " id = " EqualsHashCode _ Description " > <nl> - < p > Since Checkstyle 3 . 0 < / p > <nl> < p > <nl> Checks that classes that either override < code > equals ( ) < / code > <nl> or < code > hashCode ( ) < / code > also overrides the other . <nl> - This checks only verifies that the method declarations match <nl> - < code > Object . equals ( Object ) } < / code > and < code > Object . hashCode ( ) < / code > exactly to be <nl> + This check only verifies that the method declarations match <nl> + < code > Object . equals ( Object ) < / code > and < code > Object . hashCode ( ) < / code > exactly to be <nl> considered an override . This check does not verify invalid method names , parameters <nl> other than < code > Object < / code > , or anything else . <nl> < / p >
NEAREST DIFF (one line): diff - - git a / buddy . yml b / buddy . yml <nl> index afef64d . . 288efea 100644 <nl> - - - a / buddy . yml <nl> + + + b / buddy . yml <nl> @ @ - 2 , 7 + 2 , 6 @ @ <nl> trigger _ mode : " ON _ EVERY _ PUSH " <nl> ref _ name : " master " <nl> ref _ type : " BRANCH " <nl> - clone _ depth : 1 <nl> actions : <nl> - action : " Execute : . / . ci / travis / travis . sh versions " <nl> type : " BUILD " <nl> @ @ - 21 , 7 + 20 , 6 @ @ <nl> trigger _ mode : " ON _ EVERY _ PUSH " <nl> ref _ name : " master " <nl> ref _ type : " BRANCH " <nl> - clone _ depth : 1 <nl> actions : <nl> - action : " Execute : . / . ci / travis / travis . sh releasenotes - gen " <nl> type : " BUILD " <nl> @ @ - 41 , 7 + 39 , 6 @ @ <nl> # trigger _ mode : " ON _ EVERY _ PUSH " <nl> # ref _ name : " master " <nl> # ref _ type : " BRANCH " <nl> - # clone _ depth : 1 <nl> # actions : <nl> # - action : " Execute : . / . ci / travis / travis . sh check - chmod " <nl> # type : " BUILD " <nl> @ @ - 62 , 7 + 59 , 6 @ @ <nl> # trigger _ mode : " ON _ EVERY _ PUSH " <nl> # ref _ name : " master " <nl> # ref _ type : " BRANCH " <nl> - # clone _ depth : 1 <nl> # actions : <nl> # - action : " Execute : . / . ci / test - spelling - unknown - words . sh " <nl> # type : " BUILD "

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java 
 index 4fd5053 . . a32cd78 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java 
 @ @ - 34 , 22 + 34 , 24 @ @ import com . puppycrawl . tools . checkstyle . utils . CheckUtil ; 
 * < p > 
 * Checks that classes that either override { @ code equals ( ) } or { @ code hashCode ( ) } also 
 * overrides the other . 
 - * This checks only verifies that the method declarations match { @ link Object # equals ( Object ) } and 
 - * { @ link Object # hashCode ( ) } exactly to be considered an override . This check does not verify 
 + * This check only verifies that the method declarations match { @ code Object . equals ( Object ) } and 
 + * { @ code Object . hashCode ( ) } exactly to be considered an override . This check does not verify 
 * invalid method names , parameters other than { @ code Object } , or anything else . 
 * < / p > 
 * < p > 
 - * Rationale : The contract of equals ( ) and hashCode ( ) requires that 
 - * equal objects have the same hashCode . Hence , whenever you override 
 - * equals ( ) you must override hashCode ( ) to ensure that your class can 
 - * be used in collections that are hash based . 
 + * Rationale : The contract of { @ code equals ( ) } and { @ code hashCode ( ) } requires that 
 + * equal objects have the same hashCode . Therefore , whenever you override 
 + * { @ code equals ( ) } you must override { @ code hashCode ( ) } to ensure that your class can 
 + * be used in hash - based collections . 
 * < / p > 
 * < p > 
 - * An example of how to configure the check is : 
 + * To configure the check : 
 * < / p > 
 * < pre > 
 - * & lt ; module name = " EqualsHashCode " / & gt ; 
 + * & lt ; module name = & quot ; EqualsHashCode & quot ; / & gt ; 
 * < / pre > 
 + * 
 + * @ since 3 . 0 
 * / 
 @ FileStatefulCheck 
 public class EqualsHashCodeCheck 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 index f333316 . . 437066d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 @ @ - 87 , 6 + 87 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { 
 " EmptyBlock " , 
 " EmptyCatchBlock " , 
 " EqualsAvoidNull " , 
 + " EqualsHashCode " , 
 " ImportOrder " , 
 " InterfaceMemberImpliedModifier " , 
 " InterfaceTypeParameterName " , 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index c191f9f . . 8dfe831 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 792 , 13 + 792 , 13 @ @ String nullString = null ; 
 < / section > 
 
 < section name = " EqualsHashCode " > 
 + < p > Since Checkstyle 3 . 0 < / p > 
 < subsection name = " Description " id = " EqualsHashCode _ Description " > 
 - < p > Since Checkstyle 3 . 0 < / p > 
 < p > 
 Checks that classes that either override < code > equals ( ) < / code > 
 or < code > hashCode ( ) < / code > also overrides the other . 
 - This checks only verifies that the method declarations match 
 - < code > Object . equals ( Object ) } < / code > and < code > Object . hashCode ( ) < / code > exactly to be 
 + This check only verifies that the method declarations match 
 + < code > Object . equals ( Object ) < / code > and < code > Object . hashCode ( ) < / code > exactly to be 
 considered an override . This check does not verify invalid method names , parameters 
 other than < code > Object < / code > , or anything else . 
 < / p >

NEAREST DIFF:
diff - - git a / buddy . yml b / buddy . yml 
 index afef64d . . 288efea 100644 
 - - - a / buddy . yml 
 + + + b / buddy . yml 
 @ @ - 2 , 7 + 2 , 6 @ @ 
 trigger _ mode : " ON _ EVERY _ PUSH " 
 ref _ name : " master " 
 ref _ type : " BRANCH " 
 - clone _ depth : 1 
 actions : 
 - action : " Execute : . / . ci / travis / travis . sh versions " 
 type : " BUILD " 
 @ @ - 21 , 7 + 20 , 6 @ @ 
 trigger _ mode : " ON _ EVERY _ PUSH " 
 ref _ name : " master " 
 ref _ type : " BRANCH " 
 - clone _ depth : 1 
 actions : 
 - action : " Execute : . / . ci / travis / travis . sh releasenotes - gen " 
 type : " BUILD " 
 @ @ - 41 , 7 + 39 , 6 @ @ 
 # trigger _ mode : " ON _ EVERY _ PUSH " 
 # ref _ name : " master " 
 # ref _ type : " BRANCH " 
 - # clone _ depth : 1 
 # actions : 
 # - action : " Execute : . / . ci / travis / travis . sh check - chmod " 
 # type : " BUILD " 
 @ @ - 62 , 7 + 59 , 6 @ @ 
 # trigger _ mode : " ON _ EVERY _ PUSH " 
 # ref _ name : " master " 
 # ref _ type : " BRANCH " 
 - # clone _ depth : 1 
 # actions : 
 # - action : " Execute : . / . ci / test - spelling - unknown - words . sh " 
 # type : " BUILD "
