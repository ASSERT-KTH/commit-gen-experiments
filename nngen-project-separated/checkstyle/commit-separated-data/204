BLEU SCORE: 0.016932492841722675

TEST MSG: Issue # 5979 : XpathFileGeneratorAstFilter : EVENTS and QUERIES as single map
GENERATED MSG: Patch from David Schneider to add Severity to logged messages .

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java <nl> index da1281e . . 68dfb87 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java <nl> @ @ - 19 , 17 + 19 , 20 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> - import java . util . ArrayList ; <nl> + import java . util . HashMap ; <nl> import java . util . List ; <nl> + import java . util . Map ; <nl> import java . util . stream . Collectors ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . xpath . XpathQueryGenerator ; <nl> <nl> / * * <nl> * Catches { @ code TreeWalkerAuditEvent } and generates corresponding xpath query . <nl> - * Stores event and query inside static variables for { @ code XpathFileGeneratorAuditListener } . <nl> + * Stores localized messages and xpath queries map inside static variable <nl> + * for { @ code XpathFileGeneratorAuditListener } . <nl> * See issue # 102 https : / / github . com / checkstyle / checkstyle / issues / 102 <nl> * / <nl> public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWalkerFilter { <nl> @ @ - 37 , 11 + 40 , 8 @ @ public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWa <nl> / * * The delimiter between xpath queries . * / <nl> private static final String DELIMITER = " | \ n " ; <nl> <nl> - / * * List of the { @ code TreeWalkerAuditEvent } objects , which supports xpath suppressions . * / <nl> - private static final List < TreeWalkerAuditEvent > EVENTS = new ArrayList < > ( ) ; <nl> - <nl> - / * * List of xpath queries for corresponding { @ code TreeWalkerAuditEvent } objects . * / <nl> - private static final List < String > QUERIES = new ArrayList < > ( ) ; <nl> + / * * Map from { @ code LocalizedMessage } objects to xpath queries . * / <nl> + private static final Map < LocalizedMessage , String > MESSAGE _ QUERY _ MAP = new HashMap < > ( ) ; <nl> <nl> / * * The distance between tab stop position . * / <nl> private int tabWidth ; <nl> @ @ - 55 , 38 + 55 , 19 @ @ public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWa <nl> } <nl> <nl> / * * <nl> - * Returns xpath query corresponding to { @ code TreeWalkerAuditEvent } object which points to <nl> - * the same AST element as specified { @ code AuditEvent } object . <nl> + * Returns xpath query corresponding to localized message of the <nl> + * { @ code TreeWalkerAuditEvent } object which points to the same AST element as specified <nl> + * { @ code AuditEvent } object . <nl> * @ param event the { @ code AuditEvent } object . <nl> * @ return returns corresponding xpath query <nl> * / <nl> public static String findCorrespondingXpathQuery ( AuditEvent event ) { <nl> - String result = null ; <nl> - for ( int i = 0 ; i < EVENTS . size ( ) ; i + + ) { <nl> - final TreeWalkerAuditEvent treeWalkerAuditEvent = <nl> - EVENTS . get ( i ) ; <nl> - if ( event . getSourceName ( ) . equals ( treeWalkerAuditEvent . getSourceName ( ) ) <nl> - & & event . getLine ( ) = = treeWalkerAuditEvent . getLine ( ) <nl> - & & event . getColumn ( ) = = treeWalkerAuditEvent . getColumn ( ) <nl> - & & event . getFileName ( ) . endsWith ( treeWalkerAuditEvent . getFileName ( ) ) ) { <nl> - result = QUERIES . get ( i ) ; <nl> - break ; <nl> - } <nl> - } <nl> - return result ; <nl> + return MESSAGE _ QUERY _ MAP . get ( event . getLocalizedMessage ( ) ) ; <nl> } <nl> <nl> @ Override <nl> protected void finishLocalSetup ( ) { <nl> - cleanup ( ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Makes { @ code EVENTS } and { @ code QUERIES } lists empty . <nl> - * / <nl> - private static void cleanup ( ) { <nl> - QUERIES . clear ( ) ; <nl> - EVENTS . clear ( ) ; <nl> + MESSAGE _ QUERY _ MAP . clear ( ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 97 , 8 + 78 , 7 @ @ public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWa <nl> final List < String > xpathQueries = xpathQueryGenerator . generate ( ) ; <nl> if ( ! xpathQueries . isEmpty ( ) ) { <nl> final String query = xpathQueries . stream ( ) . collect ( Collectors . joining ( DELIMITER ) ) ; <nl> - EVENTS . add ( event ) ; <nl> - QUERIES . add ( query ) ; <nl> + MESSAGE _ QUERY _ MAP . put ( event . getLocalizedMessage ( ) , query ) ; <nl> } <nl> } <nl> return true ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAuditListenerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAuditListenerTest . java <nl> index 90807a8 . . 86f3527 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAuditListenerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAuditListenerTest . java <nl> @ @ - 28 , 7 + 28 , 7 @ @ import java . io . File ; <nl> import java . io . OutputStream ; <nl> import java . nio . charset . StandardCharsets ; <nl> <nl> - import org . junit . Before ; <nl> + import org . junit . BeforeClass ; <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> @ @ - 49 , 23 + 49 , 31 @ @ public class XpathFileGeneratorAuditListenerTest { <nl> / * * OS specific line separator . * / <nl> private static final String EOL = System . getProperty ( " line . separator " ) ; <nl> <nl> - @ Before <nl> - public void setUp ( ) throws Exception { <nl> + private static final LocalizedMessage FIRST _ MESSAGE = createLocalizedMessage ( 3 , 51 , <nl> + TokenTypes . LCURLY , LeftCurlyCheck . class ) ; <nl> + <nl> + private static final LocalizedMessage SECOND _ MESSAGE = createLocalizedMessage ( 15 , 5 , <nl> + TokenTypes . METHOD _ DEF , MethodParamPadCheck . class ) ; <nl> + <nl> + private static final LocalizedMessage THIRD _ MESSAGE = createLocalizedMessage ( 17 , 13 , <nl> + TokenTypes . LITERAL _ FOR , NestedForDepthCheck . class ) ; <nl> + <nl> + private static final LocalizedMessage FOURTH _ MESSAGE = createLocalizedMessage ( 5 , 5 , <nl> + TokenTypes . VARIABLE _ DEF , JavadocVariableCheck . class ) ; <nl> + <nl> + @ BeforeClass <nl> + public static void constructEvents ( ) throws Exception { <nl> final TreeWalkerAuditEvent event1 = createTreeWalkerAuditEvent ( <nl> - " InputXpathFileGeneratorAuditListener . java " , 3 , 51 , TokenTypes . LCURLY , <nl> - LeftCurlyCheck . class ) ; <nl> + " InputXpathFileGeneratorAuditListener . java " , FIRST _ MESSAGE ) ; <nl> <nl> final TreeWalkerAuditEvent event2 = createTreeWalkerAuditEvent ( <nl> - " InputXpathFileGeneratorAuditListener . java " , 15 , 5 , TokenTypes . METHOD _ DEF , <nl> - MethodParamPadCheck . class ) ; <nl> + " InputXpathFileGeneratorAuditListener . java " , SECOND _ MESSAGE ) ; <nl> <nl> final TreeWalkerAuditEvent event3 = createTreeWalkerAuditEvent ( <nl> - " InputXpathFileGeneratorAuditListener . java " , 17 , 13 , TokenTypes . LITERAL _ FOR , <nl> - NestedForDepthCheck . class ) ; <nl> + " InputXpathFileGeneratorAuditListener . java " , THIRD _ MESSAGE ) ; <nl> <nl> final TreeWalkerAuditEvent event4 = createTreeWalkerAuditEvent ( <nl> - " InputXpathFileGeneratorAuditListener . java " , 5 , 5 , TokenTypes . VARIABLE _ DEF , <nl> - JavadocVariableCheck . class ) ; <nl> + " InputXpathFileGeneratorAuditListener . java " , FOURTH _ MESSAGE ) ; <nl> <nl> final XpathFileGeneratorAstFilter astFilter = new XpathFileGeneratorAstFilter ( ) ; <nl> astFilter . accept ( event1 ) ; <nl> @ @ - 136 , 7 + 144 , 7 @ @ public class XpathFileGeneratorAuditListenerTest { <nl> @ Test <nl> public void testCorrectOne ( ) { <nl> final AuditEvent event = createAuditEvent ( " InputXpathFileGeneratorAuditListener . java " , <nl> - 3 , 51 , LeftCurlyCheck . class ) ; <nl> + FIRST _ MESSAGE ) ; <nl> <nl> final String expected = " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > " + EOL <nl> + " < ! DOCTYPE suppressions PUBLIC " + EOL <nl> @ @ - 159 , 10 + 167 , 10 @ @ public class XpathFileGeneratorAuditListenerTest { <nl> @ Test <nl> public void testCorrectTwo ( ) { <nl> final AuditEvent event1 = createAuditEvent ( " InputXpathFileGeneratorAuditListener . java " , <nl> - 15 , 5 , MethodParamPadCheck . class ) ; <nl> + SECOND _ MESSAGE ) ; <nl> <nl> final AuditEvent event2 = createAuditEvent ( " InputXpathFileGeneratorAuditListener . java " , <nl> - 17 , 13 , NestedForDepthCheck . class ) ; <nl> + THIRD _ MESSAGE ) ; <nl> <nl> final String expected = " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > " + EOL <nl> + " < ! DOCTYPE suppressions PUBLIC " + EOL <nl> @ @ - 195 , 7 + 203 , 7 @ @ public class XpathFileGeneratorAuditListenerTest { <nl> 5 , 5 , JavadocVariableCheck . class ) ; <nl> <nl> final AuditEvent event3 = createAuditEvent ( " InputXpathFileGeneratorAuditListener . java " , <nl> - 17 , 13 , JavadocVariableCheck . class ) ; <nl> + FOURTH _ MESSAGE ) ; <nl> <nl> final String expected = " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > " + EOL <nl> + " < ! DOCTYPE suppressions PUBLIC " + EOL <nl> @ @ - 214 , 36 + 222 , 6 @ @ public class XpathFileGeneratorAuditListenerTest { <nl> verifyOutput ( expected , event1 , event2 , event3 ) ; <nl> } <nl> <nl> - @ Test <nl> - public void testOnlySourceNameMatching ( ) { <nl> - final AuditEvent event = createAuditEvent ( " InputWrong . java " , <nl> - 30 , 510 , LeftCurlyCheck . class ) ; <nl> - <nl> - final String expected = " " ; <nl> - <nl> - verifyOutput ( expected , event ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testOnlySourceNameAndLineMatching ( ) { <nl> - final AuditEvent event = createAuditEvent ( " InputWrong . java " , <nl> - 3 , 510 , LeftCurlyCheck . class ) ; <nl> - <nl> - final String expected = " " ; <nl> - <nl> - verifyOutput ( expected , event ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testOnlySourceNameAndLineAndColumnMatching ( ) { <nl> - final AuditEvent event = createAuditEvent ( " InputWrong . java " , <nl> - 3 , 51 , LeftCurlyCheck . class ) ; <nl> - <nl> - final String expected = " " ; <nl> - <nl> - verifyOutput ( expected , event ) ; <nl> - } <nl> - <nl> private AuditEvent createAuditEvent ( String fileName , int lineNumber , int columnNumber , <nl> Class < ? > sourceClass ) { <nl> final LocalizedMessage message = <nl> @ @ - 254 , 18 + 232 , 27 @ @ public class XpathFileGeneratorAuditListenerTest { <nl> getPath ( fileName ) , message ) ; <nl> } <nl> <nl> - private static TreeWalkerAuditEvent createTreeWalkerAuditEvent ( String fileName , int lineNumber , <nl> + private AuditEvent createAuditEvent ( String fileName , LocalizedMessage message ) { <nl> + return new AuditEvent ( this , <nl> + getPath ( fileName ) , message ) ; <nl> + } <nl> + <nl> + private static LocalizedMessage createLocalizedMessage ( int lineNumber , <nl> int columnNumber , int tokenType , <nl> - Class < ? > sourceClass ) <nl> + Class < ? > sourceClass ) { <nl> + return new LocalizedMessage ( lineNumber , columnNumber , tokenType , <nl> + " messages . properties " , null , null , <nl> + SeverityLevel . ERROR , null , sourceClass , null ) ; <nl> + } <nl> + <nl> + private static TreeWalkerAuditEvent createTreeWalkerAuditEvent ( String fileName , <nl> + LocalizedMessage message ) <nl> throws Exception { <nl> final File file = new File ( getPath ( fileName ) ) ; <nl> final FileText fileText = new FileText ( <nl> file . getAbsoluteFile ( ) , <nl> System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; <nl> final FileContents fileContents = new FileContents ( fileText ) ; <nl> - final LocalizedMessage message = new LocalizedMessage ( lineNumber , columnNumber , tokenType , <nl> - " messages . properties " , null , null , <nl> - SeverityLevel . ERROR , null , sourceClass , null ) ; <nl> final DetailAST rootAst = JavaParser . parseFile ( file , JavaParser . Options . WITHOUT _ COMMENTS ) ; <nl> <nl> return new TreeWalkerAuditEvent ( fileContents , fileName ,
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index e08c15e . . 61997cc 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 480 , 7 + 480 , 8 @ @ <nl> < javadoc sourcepath = " src / checkstyle " destdir = " docs / api " <nl> packagenames = " com . puppycrawl . tools . checkstyle . * " <nl> Windowtitle = " Checkstyle API " <nl> - classpathref = " javadoc . classpath " / > <nl> + classpathref = " javadoc . classpath " <nl> + Use = " true " / > <nl> < move toDir = " src / checkstyle " > <nl> < fileset dir = " src / checkstyle " includes = " * * / * . HIDING " / > <nl> < mapper type = " glob " from = " * . HIDING " to = " * " / >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java 
 index da1281e . . 68dfb87 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java 
 @ @ - 19 , 17 + 19 , 20 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 - import java . util . ArrayList ; 
 + import java . util . HashMap ; 
 import java . util . List ; 
 + import java . util . Map ; 
 import java . util . stream . Collectors ; 
 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . xpath . XpathQueryGenerator ; 
 
 / * * 
 * Catches { @ code TreeWalkerAuditEvent } and generates corresponding xpath query . 
 - * Stores event and query inside static variables for { @ code XpathFileGeneratorAuditListener } . 
 + * Stores localized messages and xpath queries map inside static variable 
 + * for { @ code XpathFileGeneratorAuditListener } . 
 * See issue # 102 https : / / github . com / checkstyle / checkstyle / issues / 102 
 * / 
 public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWalkerFilter { 
 @ @ - 37 , 11 + 40 , 8 @ @ public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWa 
 / * * The delimiter between xpath queries . * / 
 private static final String DELIMITER = " | \ n " ; 
 
 - / * * List of the { @ code TreeWalkerAuditEvent } objects , which supports xpath suppressions . * / 
 - private static final List < TreeWalkerAuditEvent > EVENTS = new ArrayList < > ( ) ; 
 - 
 - / * * List of xpath queries for corresponding { @ code TreeWalkerAuditEvent } objects . * / 
 - private static final List < String > QUERIES = new ArrayList < > ( ) ; 
 + / * * Map from { @ code LocalizedMessage } objects to xpath queries . * / 
 + private static final Map < LocalizedMessage , String > MESSAGE _ QUERY _ MAP = new HashMap < > ( ) ; 
 
 / * * The distance between tab stop position . * / 
 private int tabWidth ; 
 @ @ - 55 , 38 + 55 , 19 @ @ public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWa 
 } 
 
 / * * 
 - * Returns xpath query corresponding to { @ code TreeWalkerAuditEvent } object which points to 
 - * the same AST element as specified { @ code AuditEvent } object . 
 + * Returns xpath query corresponding to localized message of the 
 + * { @ code TreeWalkerAuditEvent } object which points to the same AST element as specified 
 + * { @ code AuditEvent } object . 
 * @ param event the { @ code AuditEvent } object . 
 * @ return returns corresponding xpath query 
 * / 
 public static String findCorrespondingXpathQuery ( AuditEvent event ) { 
 - String result = null ; 
 - for ( int i = 0 ; i < EVENTS . size ( ) ; i + + ) { 
 - final TreeWalkerAuditEvent treeWalkerAuditEvent = 
 - EVENTS . get ( i ) ; 
 - if ( event . getSourceName ( ) . equals ( treeWalkerAuditEvent . getSourceName ( ) ) 
 - & & event . getLine ( ) = = treeWalkerAuditEvent . getLine ( ) 
 - & & event . getColumn ( ) = = treeWalkerAuditEvent . getColumn ( ) 
 - & & event . getFileName ( ) . endsWith ( treeWalkerAuditEvent . getFileName ( ) ) ) { 
 - result = QUERIES . get ( i ) ; 
 - break ; 
 - } 
 - } 
 - return result ; 
 + return MESSAGE _ QUERY _ MAP . get ( event . getLocalizedMessage ( ) ) ; 
 } 
 
 @ Override 
 protected void finishLocalSetup ( ) { 
 - cleanup ( ) ; 
 - } 
 - 
 - / * * 
 - * Makes { @ code EVENTS } and { @ code QUERIES } lists empty . 
 - * / 
 - private static void cleanup ( ) { 
 - QUERIES . clear ( ) ; 
 - EVENTS . clear ( ) ; 
 + MESSAGE _ QUERY _ MAP . clear ( ) ; 
 } 
 
 @ Override 
 @ @ - 97 , 8 + 78 , 7 @ @ public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWa 
 final List < String > xpathQueries = xpathQueryGenerator . generate ( ) ; 
 if ( ! xpathQueries . isEmpty ( ) ) { 
 final String query = xpathQueries . stream ( ) . collect ( Collectors . joining ( DELIMITER ) ) ; 
 - EVENTS . add ( event ) ; 
 - QUERIES . add ( query ) ; 
 + MESSAGE _ QUERY _ MAP . put ( event . getLocalizedMessage ( ) , query ) ; 
 } 
 } 
 return true ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAuditListenerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAuditListenerTest . java 
 index 90807a8 . . 86f3527 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAuditListenerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAuditListenerTest . java 
 @ @ - 28 , 7 + 28 , 7 @ @ import java . io . File ; 
 import java . io . OutputStream ; 
 import java . nio . charset . StandardCharsets ; 
 
 - import org . junit . Before ; 
 + import org . junit . BeforeClass ; 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 @ @ - 49 , 23 + 49 , 31 @ @ public class XpathFileGeneratorAuditListenerTest { 
 / * * OS specific line separator . * / 
 private static final String EOL = System . getProperty ( " line . separator " ) ; 
 
 - @ Before 
 - public void setUp ( ) throws Exception { 
 + private static final LocalizedMessage FIRST _ MESSAGE = createLocalizedMessage ( 3 , 51 , 
 + TokenTypes . LCURLY , LeftCurlyCheck . class ) ; 
 + 
 + private static final LocalizedMessage SECOND _ MESSAGE = createLocalizedMessage ( 15 , 5 , 
 + TokenTypes . METHOD _ DEF , MethodParamPadCheck . class ) ; 
 + 
 + private static final LocalizedMessage THIRD _ MESSAGE = createLocalizedMessage ( 17 , 13 , 
 + TokenTypes . LITERAL _ FOR , NestedForDepthCheck . class ) ; 
 + 
 + private static final LocalizedMessage FOURTH _ MESSAGE = createLocalizedMessage ( 5 , 5 , 
 + TokenTypes . VARIABLE _ DEF , JavadocVariableCheck . class ) ; 
 + 
 + @ BeforeClass 
 + public static void constructEvents ( ) throws Exception { 
 final TreeWalkerAuditEvent event1 = createTreeWalkerAuditEvent ( 
 - " InputXpathFileGeneratorAuditListener . java " , 3 , 51 , TokenTypes . LCURLY , 
 - LeftCurlyCheck . class ) ; 
 + " InputXpathFileGeneratorAuditListener . java " , FIRST _ MESSAGE ) ; 
 
 final TreeWalkerAuditEvent event2 = createTreeWalkerAuditEvent ( 
 - " InputXpathFileGeneratorAuditListener . java " , 15 , 5 , TokenTypes . METHOD _ DEF , 
 - MethodParamPadCheck . class ) ; 
 + " InputXpathFileGeneratorAuditListener . java " , SECOND _ MESSAGE ) ; 
 
 final TreeWalkerAuditEvent event3 = createTreeWalkerAuditEvent ( 
 - " InputXpathFileGeneratorAuditListener . java " , 17 , 13 , TokenTypes . LITERAL _ FOR , 
 - NestedForDepthCheck . class ) ; 
 + " InputXpathFileGeneratorAuditListener . java " , THIRD _ MESSAGE ) ; 
 
 final TreeWalkerAuditEvent event4 = createTreeWalkerAuditEvent ( 
 - " InputXpathFileGeneratorAuditListener . java " , 5 , 5 , TokenTypes . VARIABLE _ DEF , 
 - JavadocVariableCheck . class ) ; 
 + " InputXpathFileGeneratorAuditListener . java " , FOURTH _ MESSAGE ) ; 
 
 final XpathFileGeneratorAstFilter astFilter = new XpathFileGeneratorAstFilter ( ) ; 
 astFilter . accept ( event1 ) ; 
 @ @ - 136 , 7 + 144 , 7 @ @ public class XpathFileGeneratorAuditListenerTest { 
 @ Test 
 public void testCorrectOne ( ) { 
 final AuditEvent event = createAuditEvent ( " InputXpathFileGeneratorAuditListener . java " , 
 - 3 , 51 , LeftCurlyCheck . class ) ; 
 + FIRST _ MESSAGE ) ; 
 
 final String expected = " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > " + EOL 
 + " < ! DOCTYPE suppressions PUBLIC " + EOL 
 @ @ - 159 , 10 + 167 , 10 @ @ public class XpathFileGeneratorAuditListenerTest { 
 @ Test 
 public void testCorrectTwo ( ) { 
 final AuditEvent event1 = createAuditEvent ( " InputXpathFileGeneratorAuditListener . java " , 
 - 15 , 5 , MethodParamPadCheck . class ) ; 
 + SECOND _ MESSAGE ) ; 
 
 final AuditEvent event2 = createAuditEvent ( " InputXpathFileGeneratorAuditListener . java " , 
 - 17 , 13 , NestedForDepthCheck . class ) ; 
 + THIRD _ MESSAGE ) ; 
 
 final String expected = " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > " + EOL 
 + " < ! DOCTYPE suppressions PUBLIC " + EOL 
 @ @ - 195 , 7 + 203 , 7 @ @ public class XpathFileGeneratorAuditListenerTest { 
 5 , 5 , JavadocVariableCheck . class ) ; 
 
 final AuditEvent event3 = createAuditEvent ( " InputXpathFileGeneratorAuditListener . java " , 
 - 17 , 13 , JavadocVariableCheck . class ) ; 
 + FOURTH _ MESSAGE ) ; 
 
 final String expected = " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > " + EOL 
 + " < ! DOCTYPE suppressions PUBLIC " + EOL 
 @ @ - 214 , 36 + 222 , 6 @ @ public class XpathFileGeneratorAuditListenerTest { 
 verifyOutput ( expected , event1 , event2 , event3 ) ; 
 } 
 
 - @ Test 
 - public void testOnlySourceNameMatching ( ) { 
 - final AuditEvent event = createAuditEvent ( " InputWrong . java " , 
 - 30 , 510 , LeftCurlyCheck . class ) ; 
 - 
 - final String expected = " " ; 
 - 
 - verifyOutput ( expected , event ) ; 
 - } 
 - 
 - @ Test 
 - public void testOnlySourceNameAndLineMatching ( ) { 
 - final AuditEvent event = createAuditEvent ( " InputWrong . java " , 
 - 3 , 510 , LeftCurlyCheck . class ) ; 
 - 
 - final String expected = " " ; 
 - 
 - verifyOutput ( expected , event ) ; 
 - } 
 - 
 - @ Test 
 - public void testOnlySourceNameAndLineAndColumnMatching ( ) { 
 - final AuditEvent event = createAuditEvent ( " InputWrong . java " , 
 - 3 , 51 , LeftCurlyCheck . class ) ; 
 - 
 - final String expected = " " ; 
 - 
 - verifyOutput ( expected , event ) ; 
 - } 
 - 
 private AuditEvent createAuditEvent ( String fileName , int lineNumber , int columnNumber , 
 Class < ? > sourceClass ) { 
 final LocalizedMessage message = 
 @ @ - 254 , 18 + 232 , 27 @ @ public class XpathFileGeneratorAuditListenerTest { 
 getPath ( fileName ) , message ) ; 
 } 
 
 - private static TreeWalkerAuditEvent createTreeWalkerAuditEvent ( String fileName , int lineNumber , 
 + private AuditEvent createAuditEvent ( String fileName , LocalizedMessage message ) { 
 + return new AuditEvent ( this , 
 + getPath ( fileName ) , message ) ; 
 + } 
 + 
 + private static LocalizedMessage createLocalizedMessage ( int lineNumber , 
 int columnNumber , int tokenType , 
 - Class < ? > sourceClass ) 
 + Class < ? > sourceClass ) { 
 + return new LocalizedMessage ( lineNumber , columnNumber , tokenType , 
 + " messages . properties " , null , null , 
 + SeverityLevel . ERROR , null , sourceClass , null ) ; 
 + } 
 + 
 + private static TreeWalkerAuditEvent createTreeWalkerAuditEvent ( String fileName , 
 + LocalizedMessage message ) 
 throws Exception { 
 final File file = new File ( getPath ( fileName ) ) ; 
 final FileText fileText = new FileText ( 
 file . getAbsoluteFile ( ) , 
 System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; 
 final FileContents fileContents = new FileContents ( fileText ) ; 
 - final LocalizedMessage message = new LocalizedMessage ( lineNumber , columnNumber , tokenType , 
 - " messages . properties " , null , null , 
 - SeverityLevel . ERROR , null , sourceClass , null ) ; 
 final DetailAST rootAst = JavaParser . parseFile ( file , JavaParser . Options . WITHOUT _ COMMENTS ) ; 
 
 return new TreeWalkerAuditEvent ( fileContents , fileName ,

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index e08c15e . . 61997cc 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 480 , 7 + 480 , 8 @ @ 
 < javadoc sourcepath = " src / checkstyle " destdir = " docs / api " 
 packagenames = " com . puppycrawl . tools . checkstyle . * " 
 Windowtitle = " Checkstyle API " 
 - classpathref = " javadoc . classpath " / > 
 + classpathref = " javadoc . classpath " 
 + Use = " true " / > 
 < move toDir = " src / checkstyle " > 
 < fileset dir = " src / checkstyle " includes = " * * / * . HIDING " / > 
 < mapper type = " glob " from = " * . HIDING " to = " * " / >
