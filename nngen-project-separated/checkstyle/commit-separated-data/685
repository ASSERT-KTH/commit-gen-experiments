BLEU SCORE: 0.0743187801450362

TEST MSG: Issue # 3578 : Removed ' url ' property from ImportControl
GENERATED MSG: Issue # 3450 : Support loading import control configuration from URLs and classpath

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java <nl> index beee079 . . 9ae7dcd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java <nl> @ @ - 24 , 8 + 24 , 6 @ @ import java . util . Collections ; <nl> import java . util . Set ; <nl> import java . util . regex . Pattern ; <nl> <nl> - import org . apache . commons . beanutils . ConversionException ; <nl> - <nl> import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> @ @ - 198 , 16 + 196 , 4 @ @ public class ImportControlCheck extends AbstractCheck implements ExternalResourc <nl> public void setPath ( Pattern pattern ) { <nl> path = pattern ; <nl> } <nl> - <nl> - / * * <nl> - * Set the parameter for the url containing the import control <nl> - * configuration . It will cause the url to be loaded . <nl> - * @ param uri the uri of the file to load . <nl> - * @ throws ConversionException on error loading the file . <nl> - * @ deprecated use { @ link # setFile ( URI uri ) } to load URLs instead <nl> - * / <nl> - @ Deprecated <nl> - public void setUrl ( URI uri ) { <nl> - setFile ( uri ) ; <nl> - } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> index 93704c3 . . e46b915 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> @ @ - 287 , 71 + 287 , 6 @ @ public class ImportControlCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testUrl ( ) throws Exception { <nl> - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> - checkConfig . addAttribute ( " url " , getUriString ( " InputImportControlOne . xml " ) ) ; <nl> - final String [ ] expected = { " 5 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . io . File " ) } ; <nl> - <nl> - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testUrlBlank ( ) throws Exception { <nl> - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> - checkConfig . addAttribute ( " url " , " " ) ; <nl> - final String [ ] expected = { " 1 : 1 : " + getCheckMessage ( MSG _ MISSING _ FILE ) } ; <nl> - <nl> - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testUrlNull ( ) throws Exception { <nl> - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> - checkConfig . addAttribute ( " url " , null ) ; <nl> - final String [ ] expected = { " 1 : 1 : " + getCheckMessage ( MSG _ MISSING _ FILE ) } ; <nl> - <nl> - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testUrlUnableToLoad ( ) throws Exception { <nl> - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> - checkConfig . addAttribute ( " url " , " https : / / UnableToLoadThisURL " ) ; <nl> - <nl> - try { <nl> - final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> - fail ( " Test should fail if exception was not thrown " ) ; <nl> - } <nl> - catch ( CheckstyleException ex ) { <nl> - final String message = getCheckstyleExceptionMessage ( ex ) ; <nl> - final String messageStart = " Unable to load " ; <nl> - <nl> - assertTrue ( " Invalid message , should start with : " + messageStart , <nl> - message . startsWith ( message ) ) ; <nl> - } <nl> - } <nl> - <nl> - @ Test <nl> - public void testUrlIncorrectUrl ( ) throws Exception { <nl> - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> - checkConfig . addAttribute ( " url " , " https : / / { WrongCharsInURL } " ) ; <nl> - <nl> - try { <nl> - final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> - fail ( " Test should fail if exception was not thrown " ) ; <nl> - } <nl> - catch ( CheckstyleException ex ) { <nl> - final String message = getCheckstyleExceptionMessage ( ex ) ; <nl> - final String messageStart = " Unable to find : " ; <nl> - <nl> - assertTrue ( " Invalid message , should start with : " + messageStart , <nl> - message . startsWith ( message ) ) ; <nl> - } <nl> - } <nl> - <nl> - @ Test <nl> public void testResource ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> checkConfig . addAttribute ( " file " , getResourcePath ( " InputImportControlOne . xml " ) ) ; <nl> @ @ - 423 , 21 + 358 , 6 @ @ public class ImportControlCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testCacheWhenUrlExternalResourceContentDoesNotChange ( ) throws Exception { <nl> - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> - checkConfig . addAttribute ( " url " , getUriString ( " InputImportControlOne . xml " ) ) ; <nl> - <nl> - final Checker checker = createMockCheckerWithCache ( checkConfig ) ; <nl> - <nl> - final String pathToEmptyFile = temporaryFolder . newFile ( " TestFile . java " ) . getPath ( ) ; <nl> - final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - <nl> - verify ( checker , pathToEmptyFile , pathToEmptyFile , expected ) ; <nl> - / / One more time to use cache . <nl> - verify ( checker , pathToEmptyFile , pathToEmptyFile , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> public void testPathRegexMatches ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> checkConfig . addAttribute ( " file " , getResourcePath ( " InputImportControlOne . xml " ) ) ; <nl> diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml <nl> index 25eb7ec . . f0d9b5e 100644 <nl> - - - a / src / xdocs / config _ imports . xml <nl> + + + b / src / xdocs / config _ imports . xml <nl> @ @ - 919 , 17 + 919 , 6 @ @ public class InputIllegalImport { } <nl> < td > 4 . 0 < / td > <nl> < / tr > <nl> < tr > <nl> - < td > url < / td > <nl> - < td > <nl> - URL of the file containing the import control configuration . <nl> - This property is deprecated . Please use the file property to load configurations <nl> - from URLs . <nl> - < / td > <nl> - < td > < a href = " property _ types . html # uri " > URI < / a > < / td > <nl> - < td > < code > null < / code > < / td > <nl> - < td > 4 . 4 < / td > <nl> - < / tr > <nl> - < tr > <nl> < td > path < / td > <nl> < td > <nl> Regular expression of file paths to which this check should apply . Files that
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java <nl> index dc3c88c . . ab83f8b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java <nl> @ @ - 92 , 16 + 92 , 16 @ @ public final class AstTreeStringPrinter { <nl> final StringBuilder messageBuilder = new StringBuilder ( ) ; <nl> DetailAST node = ast ; <nl> while ( node ! = null ) { <nl> - if ( node . getType ( ) = = TokenTypes . BLOCK _ COMMENT _ BEGIN <nl> - & & JavadocUtils . isJavadocComment ( node ) ) { <nl> + messageBuilder . append ( getIndentation ( node ) ) <nl> + . append ( getNodeInfo ( node ) ) <nl> + . append ( LINE _ SEPARATOR ) ; <nl> + if ( node . getType ( ) = = TokenTypes . COMMENT _ CONTENT <nl> + & & JavadocUtils . isJavadocComment ( node . getParent ( ) ) ) { <nl> final String javadocTree = parseAndPrintJavadocTree ( node ) ; <nl> messageBuilder . append ( javadocTree ) ; <nl> } <nl> else { <nl> - messageBuilder . append ( getIndentation ( node ) ) <nl> - . append ( getNodeInfo ( node ) ) <nl> - . append ( LINE _ SEPARATOR ) <nl> - . append ( printJavaAndJavadocTree ( node . getFirstChild ( ) ) ) ; <nl> + messageBuilder . append ( printJavaAndJavadocTree ( node . getFirstChild ( ) ) ) ; <nl> } <nl> node = node . getNextSibling ( ) ; <nl> } <nl> @ @ - 114 , 10 + 114 , 13 @ @ public final class AstTreeStringPrinter { <nl> * @ return string javadoc tree <nl> * / <nl> private static String parseAndPrintJavadocTree ( DetailAST node ) { <nl> - final DetailNode tree = DetailNodeTreeStringPrinter . parseJavadocAsDetailNode ( node ) ; <nl> + final DetailAST javadocBlock = node . getParent ( ) ; <nl> + final DetailNode tree = DetailNodeTreeStringPrinter . parseJavadocAsDetailNode ( javadocBlock ) ; <nl> <nl> - final String rootPrefix = getIndentation ( node ) ; <nl> - final String prefix = rootPrefix . substring ( 0 , rootPrefix . length ( ) - 2 ) + " " ; <nl> + String baseIdentation = getIndentation ( node ) ; <nl> + baseIdentation = baseIdentation . substring ( 0 , baseIdentation . length ( ) - 2 ) ; <nl> + final String rootPrefix = baseIdentation + " ` - - " ; <nl> + final String prefix = baseIdentation + " " ; <nl> return DetailNodeTreeStringPrinter . printTree ( tree , rootPrefix , prefix ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> index c9e3aa7 . . c518011 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> @ @ - 73 , 13 + 73 , 39 @ @ public class AstTreeStringPrinterTest { <nl> } <nl> <nl> @ Test <nl> - public void testParseFileWithJavadoc ( ) throws Exception { <nl> + public void testParseFileWithJavadoc1 ( ) throws Exception { <nl> final String actual = AstTreeStringPrinter . printJavaAndJavadocTree ( <nl> new File ( getPath ( " InputAstTreeStringPrinterJavadoc . java " ) ) ) <nl> . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> final String expected = new String ( Files . readAllBytes ( Paths . get ( <nl> - getPath ( " expectedInputAstTreeStringPrinterJavadoc . txt " ) ) ) , StandardCharsets . UTF _ 8 ) <nl> + getPath ( " expectedInputAstTreeStringPrinterJavadoc . txt " ) ) ) , <nl> + StandardCharsets . UTF _ 8 ) <nl> . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> Assert . assertEquals ( expected , actual ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testParseFileWithJavadoc2 ( ) throws Exception { <nl> + final String actual = AstTreeStringPrinter . printJavaAndJavadocTree ( <nl> + new File ( getPath ( " InputAstTreeStringPrinterJavaAndJavadoc . java " ) ) ) <nl> + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> + final String expected = new String ( Files . readAllBytes ( Paths . get ( <nl> + getPath ( " expectedInputAstTreeStringPrinterJavaAndJavadoc . txt " ) ) ) , <nl> + StandardCharsets . UTF _ 8 ) <nl> + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> + Assert . assertEquals ( expected , actual ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testParseFileWithJavadoc3 ( ) throws Exception { <nl> + final String actual = AstTreeStringPrinter . printJavaAndJavadocTree ( <nl> + new File ( getPath ( " InputAstTreeStringPrinterAttributesAndMethodsJavadoc . java " ) ) ) <nl> + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> + final String expected = new String ( Files . readAllBytes ( Paths . get ( <nl> + getPath ( " expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt " ) ) ) , <nl> + StandardCharsets . UTF _ 8 ) <nl> + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> + Assert . assertEquals ( expected , actual ) ; <nl> + } <nl> + <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterAttributesAndMethodsJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterAttributesAndMethodsJavadoc . java <nl> new file mode 100644 <nl> index 0000000 . . d9176ba <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterAttributesAndMethodsJavadoc . java <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + / * * <nl> + * class javadoc <nl> + * / <nl> + class InputAstTreeStringPrinterJavaAndMethodsJavadoc { <nl> + <nl> + / * * attribute javadoc * / <nl> + int attribute ; <nl> + <nl> + / * * <nl> + * method javadoc <nl> + * / <nl> + public void method ( ) { } <nl> + <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavaAndJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavaAndJavadoc . java <nl> new file mode 100644 <nl> index 0000000 . . 28c6e65 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavaAndJavadoc . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + / * * <nl> + * some text <nl> + * / <nl> + public class InputAstTreeStringPrinterJavaAndJavadoc { <nl> + <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt <nl> new file mode 100644 <nl> index 0000000 . . 8e34583 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt <nl> @ @ - 0 , 0 + 1 , 97 @ @ <nl> + CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] <nl> + | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] <nl> + | - - BLOCK _ COMMENT _ BEGIN - > / * [ 1 : 0 ] <nl> + | | - - COMMENT _ CONTENT - > * \ n * class javadoc \ n [ 1 : 2 ] <nl> + | | ` - - JAVADOC - > \ n * class javadoc \ n < EOF > [ 1 : 0 ] <nl> + | | | - - NEWLINE - > \ n [ 1 : 0 ] <nl> + | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] <nl> + | | | - - TEXT - > class javadoc [ 2 : 1 ] <nl> + | | | | - - WS - > [ 2 : 1 ] <nl> + | | | | - - CHAR - > c [ 2 : 2 ] <nl> + | | | | - - CHAR - > l [ 2 : 3 ] <nl> + | | | | - - CHAR - > a [ 2 : 4 ] <nl> + | | | | - - CHAR - > s [ 2 : 5 ] <nl> + | | | | - - CHAR - > s [ 2 : 6 ] <nl> + | | | | - - WS - > [ 2 : 7 ] <nl> + | | | | - - CHAR - > j [ 2 : 8 ] <nl> + | | | | - - CHAR - > a [ 2 : 9 ] <nl> + | | | | - - CHAR - > v [ 2 : 10 ] <nl> + | | | | - - CHAR - > a [ 2 : 11 ] <nl> + | | | | - - CHAR - > d [ 2 : 12 ] <nl> + | | | | - - CHAR - > o [ 2 : 13 ] <nl> + | | | ` - - CHAR - > c [ 2 : 14 ] <nl> + | | | - - NEWLINE - > \ n [ 2 : 15 ] <nl> + | | ` - - EOF - > < EOF > [ 3 : 0 ] <nl> + | ` - - BLOCK _ COMMENT _ END - > * / [ 3 : 0 ] <nl> + | - - LITERAL _ CLASS - > class [ 4 : 0 ] <nl> + | - - IDENT - > InputAstTreeStringPrinterJavaAndMethodsJavadoc [ 4 : 6 ] <nl> + ` - - OBJBLOCK - > OBJBLOCK [ 4 : 53 ] <nl> + | - - LCURLY - > { [ 4 : 53 ] <nl> + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 7 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 7 : 4 ] <nl> + | | - - TYPE - > TYPE [ 7 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 6 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * attribute javadoc [ 6 : 6 ] <nl> + | | | | ` - - JAVADOC - > attribute javadoc < EOF > [ 6 : 0 ] <nl> + | | | | | - - TEXT - > attribute javadoc [ 6 : 0 ] <nl> + | | | | | | - - WS - > [ 6 : 0 ] <nl> + | | | | | | - - CHAR - > a [ 6 : 1 ] <nl> + | | | | | | - - CHAR - > t [ 6 : 2 ] <nl> + | | | | | | - - CHAR - > t [ 6 : 3 ] <nl> + | | | | | | - - CHAR - > r [ 6 : 4 ] <nl> + | | | | | | - - CHAR - > i [ 6 : 5 ] <nl> + | | | | | | - - CHAR - > b [ 6 : 6 ] <nl> + | | | | | | - - CHAR - > u [ 6 : 7 ] <nl> + | | | | | | - - CHAR - > t [ 6 : 8 ] <nl> + | | | | | | - - CHAR - > e [ 6 : 9 ] <nl> + | | | | | | - - WS - > [ 6 : 10 ] <nl> + | | | | | | - - CHAR - > j [ 6 : 11 ] <nl> + | | | | | | - - CHAR - > a [ 6 : 12 ] <nl> + | | | | | | - - CHAR - > v [ 6 : 13 ] <nl> + | | | | | | - - CHAR - > a [ 6 : 14 ] <nl> + | | | | | | - - CHAR - > d [ 6 : 15 ] <nl> + | | | | | | - - CHAR - > o [ 6 : 16 ] <nl> + | | | | | ` - - CHAR - > c [ 6 : 17 ] <nl> + | | | | ` - - EOF - > < EOF > [ 6 : 18 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 6 : 24 ] <nl> + | | ` - - LITERAL _ INT - > int [ 7 : 4 ] <nl> + | | - - IDENT - > attribute [ 7 : 8 ] <nl> + | ` - - SEMI - > ; [ 7 : 17 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 12 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 12 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 9 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * \ n * method javadoc \ n [ 9 : 6 ] <nl> + | | | | ` - - JAVADOC - > \ n * method javadoc \ n < EOF > [ 9 : 0 ] <nl> + | | | | | - - NEWLINE - > \ n [ 9 : 0 ] <nl> + | | | | | - - LEADING _ ASTERISK - > * [ 10 : 0 ] <nl> + | | | | | - - TEXT - > method javadoc [ 10 : 5 ] <nl> + | | | | | | - - WS - > [ 10 : 5 ] <nl> + | | | | | | - - CHAR - > m [ 10 : 6 ] <nl> + | | | | | | - - CHAR - > e [ 10 : 7 ] <nl> + | | | | | | - - CHAR - > t [ 10 : 8 ] <nl> + | | | | | | - - CHAR - > h [ 10 : 9 ] <nl> + | | | | | | - - CHAR - > o [ 10 : 10 ] <nl> + | | | | | | - - CHAR - > d [ 10 : 11 ] <nl> + | | | | | | - - WS - > [ 10 : 12 ] <nl> + | | | | | | - - CHAR - > j [ 10 : 13 ] <nl> + | | | | | | - - CHAR - > a [ 10 : 14 ] <nl> + | | | | | | - - CHAR - > v [ 10 : 15 ] <nl> + | | | | | | - - CHAR - > a [ 10 : 16 ] <nl> + | | | | | | - - CHAR - > d [ 10 : 17 ] <nl> + | | | | | | - - CHAR - > o [ 10 : 18 ] <nl> + | | | | | ` - - CHAR - > c [ 10 : 19 ] <nl> + | | | | | - - NEWLINE - > \ n [ 10 : 20 ] <nl> + | | | | | - - TEXT - > [ 11 : 0 ] <nl> + | | | | | ` - - WS - > [ 11 : 0 ] <nl> + | | | | ` - - EOF - > < EOF > [ 11 : 4 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 11 : 4 ] <nl> + | | ` - - LITERAL _ PUBLIC - > public [ 12 : 4 ] <nl> + | | - - TYPE - > TYPE [ 12 : 11 ] <nl> + | | ` - - LITERAL _ VOID - > void [ 12 : 11 ] <nl> + | | - - IDENT - > method [ 12 : 16 ] <nl> + | | - - LPAREN - > ( [ 12 : 22 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 12 : 23 ] <nl> + | | - - RPAREN - > ) [ 12 : 23 ] <nl> + | ` - - SLIST - > { [ 12 : 25 ] <nl> + | ` - - RCURLY - > } [ 12 : 27 ] <nl> + ` - - RCURLY - > } [ 14 : 0 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt <nl> new file mode 100644 <nl> index 0000000 . . 5fd21db <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt <nl> @ @ - 0 , 0 + 1 , 27 @ @ <nl> + CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] <nl> + | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] <nl> + | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 1 : 0 ] <nl> + | | | - - COMMENT _ CONTENT - > * \ n * some text \ n [ 1 : 2 ] <nl> + | | | ` - - JAVADOC - > \ n * some text \ n < EOF > [ 1 : 0 ] <nl> + | | | | - - NEWLINE - > \ n [ 1 : 0 ] <nl> + | | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] <nl> + | | | | - - TEXT - > some text [ 2 : 1 ] <nl> + | | | | | - - WS - > [ 2 : 1 ] <nl> + | | | | | - - CHAR - > s [ 2 : 2 ] <nl> + | | | | | - - CHAR - > o [ 2 : 3 ] <nl> + | | | | | - - CHAR - > m [ 2 : 4 ] <nl> + | | | | | - - CHAR - > e [ 2 : 5 ] <nl> + | | | | | - - WS - > [ 2 : 6 ] <nl> + | | | | | - - CHAR - > t [ 2 : 7 ] <nl> + | | | | | - - CHAR - > e [ 2 : 8 ] <nl> + | | | | | - - CHAR - > x [ 2 : 9 ] <nl> + | | | | ` - - CHAR - > t [ 2 : 10 ] <nl> + | | | | - - NEWLINE - > \ n [ 2 : 11 ] <nl> + | | | ` - - EOF - > < EOF > [ 3 : 0 ] <nl> + | | ` - - BLOCK _ COMMENT _ END - > * / [ 3 : 0 ] <nl> + | ` - - LITERAL _ PUBLIC - > public [ 4 : 0 ] <nl> + | - - LITERAL _ CLASS - > class [ 4 : 7 ] <nl> + | - - IDENT - > InputAstTreeStringPrinterJavaAndJavadoc [ 4 : 13 ] <nl> + ` - - OBJBLOCK - > OBJBLOCK [ 4 : 53 ] <nl> + | - - LCURLY - > { [ 4 : 53 ] <nl> + ` - - RCURLY - > } [ 6 : 0 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt <nl> index 3a4bf64 . . 066053e 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt <nl> @ @ - 10 , 16 + 10 , 19 @ @ PACKAGE _ DEF - > package [ 1 : 0 ] <nl> ` - - SEMI - > ; [ 1 : 39 ] <nl> CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] <nl> | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] <nl> - | - - JAVADOC - > javadoc < EOF > [ 3 : 0 ] <nl> - | | - - TEXT - > javadoc [ 3 : 0 ] <nl> - | | | - - CHAR - > j [ 3 : 0 ] <nl> - | | | - - CHAR - > a [ 3 : 1 ] <nl> - | | | - - CHAR - > v [ 3 : 2 ] <nl> - | | | - - CHAR - > a [ 3 : 3 ] <nl> - | | | - - CHAR - > d [ 3 : 4 ] <nl> - | | | - - CHAR - > o [ 3 : 5 ] <nl> - | | ` - - CHAR - > c [ 3 : 6 ] <nl> - | ` - - EOF - > < EOF > [ 3 : 7 ] <nl> + | - - BLOCK _ COMMENT _ BEGIN - > / * [ 3 : 0 ] <nl> + | | - - COMMENT _ CONTENT - > * javadoc [ 3 : 2 ] <nl> + | | ` - - JAVADOC - > javadoc < EOF > [ 3 : 0 ] <nl> + | | | - - TEXT - > javadoc [ 3 : 0 ] <nl> + | | | | - - CHAR - > j [ 3 : 0 ] <nl> + | | | | - - CHAR - > a [ 3 : 1 ] <nl> + | | | | - - CHAR - > v [ 3 : 2 ] <nl> + | | | | - - CHAR - > a [ 3 : 3 ] <nl> + | | | | - - CHAR - > d [ 3 : 4 ] <nl> + | | | | - - CHAR - > o [ 3 : 5 ] <nl> + | | | ` - - CHAR - > c [ 3 : 6 ] <nl> + | | ` - - EOF - > < EOF > [ 3 : 7 ] <nl> + | ` - - BLOCK _ COMMENT _ END - > * / [ 3 : 9 ] <nl> | - - LITERAL _ CLASS - > class [ 4 : 0 ] <nl> | - - IDENT - > InputAstTreeStringPrinterJavadoc [ 4 : 6 ] <nl> ` - - OBJBLOCK - > OBJBLOCK [ 4 : 39 ] <nl> diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm <nl> index f77f405 . . 8d8ae14 100644 <nl> - - - a / src / xdocs / cmdline . xml . vm <nl> + + + b / src / xdocs / cmdline . xml . vm <nl> @ @ - 83 , 7 + 83 , 9 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ <nl> < / li > <nl> < li > <nl> < code > - J , - - treeWithJavadoc < / code > - print Abstract Syntax Tree ( AST ) with Javadoc nodes and comment nodes <nl> - of the checked file . The option cannot be used other options and requires exactly one file to run on to be specified . <nl> + of the checked file . Attention that line number and columns will not be the same as it is a file due to the fact <nl> + that each javadoc comment is parsed separately from java file . The option cannot be used other options and requires <nl> + exactly one file to run on to be specified . <nl> < / li > <nl> < li > <nl> < code > - j , - - javadocTree < / code > - print Parse Tree of the Javadoc comment .

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java 
 index beee079 . . 9ae7dcd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java 
 @ @ - 24 , 8 + 24 , 6 @ @ import java . util . Collections ; 
 import java . util . Set ; 
 import java . util . regex . Pattern ; 
 
 - import org . apache . commons . beanutils . ConversionException ; 
 - 
 import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 @ @ - 198 , 16 + 196 , 4 @ @ public class ImportControlCheck extends AbstractCheck implements ExternalResourc 
 public void setPath ( Pattern pattern ) { 
 path = pattern ; 
 } 
 - 
 - / * * 
 - * Set the parameter for the url containing the import control 
 - * configuration . It will cause the url to be loaded . 
 - * @ param uri the uri of the file to load . 
 - * @ throws ConversionException on error loading the file . 
 - * @ deprecated use { @ link # setFile ( URI uri ) } to load URLs instead 
 - * / 
 - @ Deprecated 
 - public void setUrl ( URI uri ) { 
 - setFile ( uri ) ; 
 - } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 index 93704c3 . . e46b915 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 @ @ - 287 , 71 + 287 , 6 @ @ public class ImportControlCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testUrl ( ) throws Exception { 
 - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 - checkConfig . addAttribute ( " url " , getUriString ( " InputImportControlOne . xml " ) ) ; 
 - final String [ ] expected = { " 5 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . io . File " ) } ; 
 - 
 - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 - } 
 - 
 - @ Test 
 - public void testUrlBlank ( ) throws Exception { 
 - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 - checkConfig . addAttribute ( " url " , " " ) ; 
 - final String [ ] expected = { " 1 : 1 : " + getCheckMessage ( MSG _ MISSING _ FILE ) } ; 
 - 
 - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 - } 
 - 
 - @ Test 
 - public void testUrlNull ( ) throws Exception { 
 - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 - checkConfig . addAttribute ( " url " , null ) ; 
 - final String [ ] expected = { " 1 : 1 : " + getCheckMessage ( MSG _ MISSING _ FILE ) } ; 
 - 
 - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 - } 
 - 
 - @ Test 
 - public void testUrlUnableToLoad ( ) throws Exception { 
 - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 - checkConfig . addAttribute ( " url " , " https : / / UnableToLoadThisURL " ) ; 
 - 
 - try { 
 - final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 - fail ( " Test should fail if exception was not thrown " ) ; 
 - } 
 - catch ( CheckstyleException ex ) { 
 - final String message = getCheckstyleExceptionMessage ( ex ) ; 
 - final String messageStart = " Unable to load " ; 
 - 
 - assertTrue ( " Invalid message , should start with : " + messageStart , 
 - message . startsWith ( message ) ) ; 
 - } 
 - } 
 - 
 - @ Test 
 - public void testUrlIncorrectUrl ( ) throws Exception { 
 - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 - checkConfig . addAttribute ( " url " , " https : / / { WrongCharsInURL } " ) ; 
 - 
 - try { 
 - final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 - fail ( " Test should fail if exception was not thrown " ) ; 
 - } 
 - catch ( CheckstyleException ex ) { 
 - final String message = getCheckstyleExceptionMessage ( ex ) ; 
 - final String messageStart = " Unable to find : " ; 
 - 
 - assertTrue ( " Invalid message , should start with : " + messageStart , 
 - message . startsWith ( message ) ) ; 
 - } 
 - } 
 - 
 - @ Test 
 public void testResource ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 checkConfig . addAttribute ( " file " , getResourcePath ( " InputImportControlOne . xml " ) ) ; 
 @ @ - 423 , 21 + 358 , 6 @ @ public class ImportControlCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testCacheWhenUrlExternalResourceContentDoesNotChange ( ) throws Exception { 
 - final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 - checkConfig . addAttribute ( " url " , getUriString ( " InputImportControlOne . xml " ) ) ; 
 - 
 - final Checker checker = createMockCheckerWithCache ( checkConfig ) ; 
 - 
 - final String pathToEmptyFile = temporaryFolder . newFile ( " TestFile . java " ) . getPath ( ) ; 
 - final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - 
 - verify ( checker , pathToEmptyFile , pathToEmptyFile , expected ) ; 
 - / / One more time to use cache . 
 - verify ( checker , pathToEmptyFile , pathToEmptyFile , expected ) ; 
 - } 
 - 
 - @ Test 
 public void testPathRegexMatches ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 checkConfig . addAttribute ( " file " , getResourcePath ( " InputImportControlOne . xml " ) ) ; 
 diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml 
 index 25eb7ec . . f0d9b5e 100644 
 - - - a / src / xdocs / config _ imports . xml 
 + + + b / src / xdocs / config _ imports . xml 
 @ @ - 919 , 17 + 919 , 6 @ @ public class InputIllegalImport { } 
 < td > 4 . 0 < / td > 
 < / tr > 
 < tr > 
 - < td > url < / td > 
 - < td > 
 - URL of the file containing the import control configuration . 
 - This property is deprecated . Please use the file property to load configurations 
 - from URLs . 
 - < / td > 
 - < td > < a href = " property _ types . html # uri " > URI < / a > < / td > 
 - < td > < code > null < / code > < / td > 
 - < td > 4 . 4 < / td > 
 - < / tr > 
 - < tr > 
 < td > path < / td > 
 < td > 
 Regular expression of file paths to which this check should apply . Files that

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java 
 index dc3c88c . . ab83f8b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java 
 @ @ - 92 , 16 + 92 , 16 @ @ public final class AstTreeStringPrinter { 
 final StringBuilder messageBuilder = new StringBuilder ( ) ; 
 DetailAST node = ast ; 
 while ( node ! = null ) { 
 - if ( node . getType ( ) = = TokenTypes . BLOCK _ COMMENT _ BEGIN 
 - & & JavadocUtils . isJavadocComment ( node ) ) { 
 + messageBuilder . append ( getIndentation ( node ) ) 
 + . append ( getNodeInfo ( node ) ) 
 + . append ( LINE _ SEPARATOR ) ; 
 + if ( node . getType ( ) = = TokenTypes . COMMENT _ CONTENT 
 + & & JavadocUtils . isJavadocComment ( node . getParent ( ) ) ) { 
 final String javadocTree = parseAndPrintJavadocTree ( node ) ; 
 messageBuilder . append ( javadocTree ) ; 
 } 
 else { 
 - messageBuilder . append ( getIndentation ( node ) ) 
 - . append ( getNodeInfo ( node ) ) 
 - . append ( LINE _ SEPARATOR ) 
 - . append ( printJavaAndJavadocTree ( node . getFirstChild ( ) ) ) ; 
 + messageBuilder . append ( printJavaAndJavadocTree ( node . getFirstChild ( ) ) ) ; 
 } 
 node = node . getNextSibling ( ) ; 
 } 
 @ @ - 114 , 10 + 114 , 13 @ @ public final class AstTreeStringPrinter { 
 * @ return string javadoc tree 
 * / 
 private static String parseAndPrintJavadocTree ( DetailAST node ) { 
 - final DetailNode tree = DetailNodeTreeStringPrinter . parseJavadocAsDetailNode ( node ) ; 
 + final DetailAST javadocBlock = node . getParent ( ) ; 
 + final DetailNode tree = DetailNodeTreeStringPrinter . parseJavadocAsDetailNode ( javadocBlock ) ; 
 
 - final String rootPrefix = getIndentation ( node ) ; 
 - final String prefix = rootPrefix . substring ( 0 , rootPrefix . length ( ) - 2 ) + " " ; 
 + String baseIdentation = getIndentation ( node ) ; 
 + baseIdentation = baseIdentation . substring ( 0 , baseIdentation . length ( ) - 2 ) ; 
 + final String rootPrefix = baseIdentation + " ` - - " ; 
 + final String prefix = baseIdentation + " " ; 
 return DetailNodeTreeStringPrinter . printTree ( tree , rootPrefix , prefix ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 index c9e3aa7 . . c518011 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 @ @ - 73 , 13 + 73 , 39 @ @ public class AstTreeStringPrinterTest { 
 } 
 
 @ Test 
 - public void testParseFileWithJavadoc ( ) throws Exception { 
 + public void testParseFileWithJavadoc1 ( ) throws Exception { 
 final String actual = AstTreeStringPrinter . printJavaAndJavadocTree ( 
 new File ( getPath ( " InputAstTreeStringPrinterJavadoc . java " ) ) ) 
 . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 final String expected = new String ( Files . readAllBytes ( Paths . get ( 
 - getPath ( " expectedInputAstTreeStringPrinterJavadoc . txt " ) ) ) , StandardCharsets . UTF _ 8 ) 
 + getPath ( " expectedInputAstTreeStringPrinterJavadoc . txt " ) ) ) , 
 + StandardCharsets . UTF _ 8 ) 
 . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 Assert . assertEquals ( expected , actual ) ; 
 } 
 + 
 + @ Test 
 + public void testParseFileWithJavadoc2 ( ) throws Exception { 
 + final String actual = AstTreeStringPrinter . printJavaAndJavadocTree ( 
 + new File ( getPath ( " InputAstTreeStringPrinterJavaAndJavadoc . java " ) ) ) 
 + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 + final String expected = new String ( Files . readAllBytes ( Paths . get ( 
 + getPath ( " expectedInputAstTreeStringPrinterJavaAndJavadoc . txt " ) ) ) , 
 + StandardCharsets . UTF _ 8 ) 
 + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 + Assert . assertEquals ( expected , actual ) ; 
 + } 
 + 
 + @ Test 
 + public void testParseFileWithJavadoc3 ( ) throws Exception { 
 + final String actual = AstTreeStringPrinter . printJavaAndJavadocTree ( 
 + new File ( getPath ( " InputAstTreeStringPrinterAttributesAndMethodsJavadoc . java " ) ) ) 
 + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 + final String expected = new String ( Files . readAllBytes ( Paths . get ( 
 + getPath ( " expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt " ) ) ) , 
 + StandardCharsets . UTF _ 8 ) 
 + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 + Assert . assertEquals ( expected , actual ) ; 
 + } 
 + 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterAttributesAndMethodsJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterAttributesAndMethodsJavadoc . java 
 new file mode 100644 
 index 0000000 . . d9176ba 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterAttributesAndMethodsJavadoc . java 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + / * * 
 + * class javadoc 
 + * / 
 + class InputAstTreeStringPrinterJavaAndMethodsJavadoc { 
 + 
 + / * * attribute javadoc * / 
 + int attribute ; 
 + 
 + / * * 
 + * method javadoc 
 + * / 
 + public void method ( ) { } 
 + 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavaAndJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavaAndJavadoc . java 
 new file mode 100644 
 index 0000000 . . 28c6e65 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavaAndJavadoc . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + / * * 
 + * some text 
 + * / 
 + public class InputAstTreeStringPrinterJavaAndJavadoc { 
 + 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt 
 new file mode 100644 
 index 0000000 . . 8e34583 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt 
 @ @ - 0 , 0 + 1 , 97 @ @ 
 + CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] 
 + | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] 
 + | - - BLOCK _ COMMENT _ BEGIN - > / * [ 1 : 0 ] 
 + | | - - COMMENT _ CONTENT - > * \ n * class javadoc \ n [ 1 : 2 ] 
 + | | ` - - JAVADOC - > \ n * class javadoc \ n < EOF > [ 1 : 0 ] 
 + | | | - - NEWLINE - > \ n [ 1 : 0 ] 
 + | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] 
 + | | | - - TEXT - > class javadoc [ 2 : 1 ] 
 + | | | | - - WS - > [ 2 : 1 ] 
 + | | | | - - CHAR - > c [ 2 : 2 ] 
 + | | | | - - CHAR - > l [ 2 : 3 ] 
 + | | | | - - CHAR - > a [ 2 : 4 ] 
 + | | | | - - CHAR - > s [ 2 : 5 ] 
 + | | | | - - CHAR - > s [ 2 : 6 ] 
 + | | | | - - WS - > [ 2 : 7 ] 
 + | | | | - - CHAR - > j [ 2 : 8 ] 
 + | | | | - - CHAR - > a [ 2 : 9 ] 
 + | | | | - - CHAR - > v [ 2 : 10 ] 
 + | | | | - - CHAR - > a [ 2 : 11 ] 
 + | | | | - - CHAR - > d [ 2 : 12 ] 
 + | | | | - - CHAR - > o [ 2 : 13 ] 
 + | | | ` - - CHAR - > c [ 2 : 14 ] 
 + | | | - - NEWLINE - > \ n [ 2 : 15 ] 
 + | | ` - - EOF - > < EOF > [ 3 : 0 ] 
 + | ` - - BLOCK _ COMMENT _ END - > * / [ 3 : 0 ] 
 + | - - LITERAL _ CLASS - > class [ 4 : 0 ] 
 + | - - IDENT - > InputAstTreeStringPrinterJavaAndMethodsJavadoc [ 4 : 6 ] 
 + ` - - OBJBLOCK - > OBJBLOCK [ 4 : 53 ] 
 + | - - LCURLY - > { [ 4 : 53 ] 
 + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 7 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 7 : 4 ] 
 + | | - - TYPE - > TYPE [ 7 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 6 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * attribute javadoc [ 6 : 6 ] 
 + | | | | ` - - JAVADOC - > attribute javadoc < EOF > [ 6 : 0 ] 
 + | | | | | - - TEXT - > attribute javadoc [ 6 : 0 ] 
 + | | | | | | - - WS - > [ 6 : 0 ] 
 + | | | | | | - - CHAR - > a [ 6 : 1 ] 
 + | | | | | | - - CHAR - > t [ 6 : 2 ] 
 + | | | | | | - - CHAR - > t [ 6 : 3 ] 
 + | | | | | | - - CHAR - > r [ 6 : 4 ] 
 + | | | | | | - - CHAR - > i [ 6 : 5 ] 
 + | | | | | | - - CHAR - > b [ 6 : 6 ] 
 + | | | | | | - - CHAR - > u [ 6 : 7 ] 
 + | | | | | | - - CHAR - > t [ 6 : 8 ] 
 + | | | | | | - - CHAR - > e [ 6 : 9 ] 
 + | | | | | | - - WS - > [ 6 : 10 ] 
 + | | | | | | - - CHAR - > j [ 6 : 11 ] 
 + | | | | | | - - CHAR - > a [ 6 : 12 ] 
 + | | | | | | - - CHAR - > v [ 6 : 13 ] 
 + | | | | | | - - CHAR - > a [ 6 : 14 ] 
 + | | | | | | - - CHAR - > d [ 6 : 15 ] 
 + | | | | | | - - CHAR - > o [ 6 : 16 ] 
 + | | | | | ` - - CHAR - > c [ 6 : 17 ] 
 + | | | | ` - - EOF - > < EOF > [ 6 : 18 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 6 : 24 ] 
 + | | ` - - LITERAL _ INT - > int [ 7 : 4 ] 
 + | | - - IDENT - > attribute [ 7 : 8 ] 
 + | ` - - SEMI - > ; [ 7 : 17 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 12 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 12 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 9 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * \ n * method javadoc \ n [ 9 : 6 ] 
 + | | | | ` - - JAVADOC - > \ n * method javadoc \ n < EOF > [ 9 : 0 ] 
 + | | | | | - - NEWLINE - > \ n [ 9 : 0 ] 
 + | | | | | - - LEADING _ ASTERISK - > * [ 10 : 0 ] 
 + | | | | | - - TEXT - > method javadoc [ 10 : 5 ] 
 + | | | | | | - - WS - > [ 10 : 5 ] 
 + | | | | | | - - CHAR - > m [ 10 : 6 ] 
 + | | | | | | - - CHAR - > e [ 10 : 7 ] 
 + | | | | | | - - CHAR - > t [ 10 : 8 ] 
 + | | | | | | - - CHAR - > h [ 10 : 9 ] 
 + | | | | | | - - CHAR - > o [ 10 : 10 ] 
 + | | | | | | - - CHAR - > d [ 10 : 11 ] 
 + | | | | | | - - WS - > [ 10 : 12 ] 
 + | | | | | | - - CHAR - > j [ 10 : 13 ] 
 + | | | | | | - - CHAR - > a [ 10 : 14 ] 
 + | | | | | | - - CHAR - > v [ 10 : 15 ] 
 + | | | | | | - - CHAR - > a [ 10 : 16 ] 
 + | | | | | | - - CHAR - > d [ 10 : 17 ] 
 + | | | | | | - - CHAR - > o [ 10 : 18 ] 
 + | | | | | ` - - CHAR - > c [ 10 : 19 ] 
 + | | | | | - - NEWLINE - > \ n [ 10 : 20 ] 
 + | | | | | - - TEXT - > [ 11 : 0 ] 
 + | | | | | ` - - WS - > [ 11 : 0 ] 
 + | | | | ` - - EOF - > < EOF > [ 11 : 4 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 11 : 4 ] 
 + | | ` - - LITERAL _ PUBLIC - > public [ 12 : 4 ] 
 + | | - - TYPE - > TYPE [ 12 : 11 ] 
 + | | ` - - LITERAL _ VOID - > void [ 12 : 11 ] 
 + | | - - IDENT - > method [ 12 : 16 ] 
 + | | - - LPAREN - > ( [ 12 : 22 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 12 : 23 ] 
 + | | - - RPAREN - > ) [ 12 : 23 ] 
 + | ` - - SLIST - > { [ 12 : 25 ] 
 + | ` - - RCURLY - > } [ 12 : 27 ] 
 + ` - - RCURLY - > } [ 14 : 0 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt 
 new file mode 100644 
 index 0000000 . . 5fd21db 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] 
 + | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] 
 + | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 1 : 0 ] 
 + | | | - - COMMENT _ CONTENT - > * \ n * some text \ n [ 1 : 2 ] 
 + | | | ` - - JAVADOC - > \ n * some text \ n < EOF > [ 1 : 0 ] 
 + | | | | - - NEWLINE - > \ n [ 1 : 0 ] 
 + | | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] 
 + | | | | - - TEXT - > some text [ 2 : 1 ] 
 + | | | | | - - WS - > [ 2 : 1 ] 
 + | | | | | - - CHAR - > s [ 2 : 2 ] 
 + | | | | | - - CHAR - > o [ 2 : 3 ] 
 + | | | | | - - CHAR - > m [ 2 : 4 ] 
 + | | | | | - - CHAR - > e [ 2 : 5 ] 
 + | | | | | - - WS - > [ 2 : 6 ] 
 + | | | | | - - CHAR - > t [ 2 : 7 ] 
 + | | | | | - - CHAR - > e [ 2 : 8 ] 
 + | | | | | - - CHAR - > x [ 2 : 9 ] 
 + | | | | ` - - CHAR - > t [ 2 : 10 ] 
 + | | | | - - NEWLINE - > \ n [ 2 : 11 ] 
 + | | | ` - - EOF - > < EOF > [ 3 : 0 ] 
 + | | ` - - BLOCK _ COMMENT _ END - > * / [ 3 : 0 ] 
 + | ` - - LITERAL _ PUBLIC - > public [ 4 : 0 ] 
 + | - - LITERAL _ CLASS - > class [ 4 : 7 ] 
 + | - - IDENT - > InputAstTreeStringPrinterJavaAndJavadoc [ 4 : 13 ] 
 + ` - - OBJBLOCK - > OBJBLOCK [ 4 : 53 ] 
 + | - - LCURLY - > { [ 4 : 53 ] 
 + ` - - RCURLY - > } [ 6 : 0 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt 
 index 3a4bf64 . . 066053e 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt 
 @ @ - 10 , 16 + 10 , 19 @ @ PACKAGE _ DEF - > package [ 1 : 0 ] 
 ` - - SEMI - > ; [ 1 : 39 ] 
 CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] 
 | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] 
 - | - - JAVADOC - > javadoc < EOF > [ 3 : 0 ] 
 - | | - - TEXT - > javadoc [ 3 : 0 ] 
 - | | | - - CHAR - > j [ 3 : 0 ] 
 - | | | - - CHAR - > a [ 3 : 1 ] 
 - | | | - - CHAR - > v [ 3 : 2 ] 
 - | | | - - CHAR - > a [ 3 : 3 ] 
 - | | | - - CHAR - > d [ 3 : 4 ] 
 - | | | - - CHAR - > o [ 3 : 5 ] 
 - | | ` - - CHAR - > c [ 3 : 6 ] 
 - | ` - - EOF - > < EOF > [ 3 : 7 ] 
 + | - - BLOCK _ COMMENT _ BEGIN - > / * [ 3 : 0 ] 
 + | | - - COMMENT _ CONTENT - > * javadoc [ 3 : 2 ] 
 + | | ` - - JAVADOC - > javadoc < EOF > [ 3 : 0 ] 
 + | | | - - TEXT - > javadoc [ 3 : 0 ] 
 + | | | | - - CHAR - > j [ 3 : 0 ] 
 + | | | | - - CHAR - > a [ 3 : 1 ] 
 + | | | | - - CHAR - > v [ 3 : 2 ] 
 + | | | | - - CHAR - > a [ 3 : 3 ] 
 + | | | | - - CHAR - > d [ 3 : 4 ] 
 + | | | | - - CHAR - > o [ 3 : 5 ] 
 + | | | ` - - CHAR - > c [ 3 : 6 ] 
 + | | ` - - EOF - > < EOF > [ 3 : 7 ] 
 + | ` - - BLOCK _ COMMENT _ END - > * / [ 3 : 9 ] 
 | - - LITERAL _ CLASS - > class [ 4 : 0 ] 
 | - - IDENT - > InputAstTreeStringPrinterJavadoc [ 4 : 6 ] 
 ` - - OBJBLOCK - > OBJBLOCK [ 4 : 39 ] 
 diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm 
 index f77f405 . . 8d8ae14 100644 
 - - - a / src / xdocs / cmdline . xml . vm 
 + + + b / src / xdocs / cmdline . xml . vm 
 @ @ - 83 , 7 + 83 , 9 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ 
 < / li > 
 < li > 
 < code > - J , - - treeWithJavadoc < / code > - print Abstract Syntax Tree ( AST ) with Javadoc nodes and comment nodes 
 - of the checked file . The option cannot be used other options and requires exactly one file to run on to be specified . 
 + of the checked file . Attention that line number and columns will not be the same as it is a file due to the fact 
 + that each javadoc comment is parsed separately from java file . The option cannot be used other options and requires 
 + exactly one file to run on to be specified . 
 < / li > 
 < li > 
 < code > - j , - - javadocTree < / code > - print Parse Tree of the Javadoc comment .
