BLEU SCORE: 0.015542791893293221

TEST MSG: Issue # 5489 : Fixed indentation in writingjavadocchecks & writinglisteners
GENERATED MSG: fixed bug 561616 ( ant task should log errors , not infos )

TEST DIFF (one line): diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm <nl> index ec882b2 . . f68b6fa 100644 <nl> - - - a / src / xdocs / writingjavadocchecks . xml . vm <nl> + + + b / src / xdocs / writingjavadocchecks . xml . vm <nl> @ @ - 621 , 11 + 621 , 11 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> " - / / Puppy Crawl / / DTD Check Configuration 1 . 3 / / EN " <nl> " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 3 . dtd " > <nl> < module name = " Checker " > <nl> - < module name = " TreeWalker " > <nl> - < module name = " JavadocParagraph " > <nl> - < property name = " violateExecutionOnNonTightHtml " value = " false " / > <nl> - < / module > <nl> + < module name = " TreeWalker " > <nl> + < module name = " JavadocParagraph " > <nl> + < property name = " violateExecutionOnNonTightHtml " value = " false " / > <nl> < / module > <nl> + < / module > <nl> < / module > <nl> ] ] > < / source > <nl> < / td > <nl> @ @ - 653 , 11 + 653 , 11 @ @ Checkstyle ends with 1 errors . <nl> " - / / Puppy Crawl / / DTD Check Configuration 1 . 3 / / EN " <nl> " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 3 . dtd " > <nl> < module name = " Checker " > <nl> - < module name = " TreeWalker " > <nl> - < module name = " JavadocParagraph " > <nl> - < property name = " violateExecutionOnNonTightHtml " value = " true " / > <nl> - < / module > <nl> + < module name = " TreeWalker " > <nl> + < module name = " JavadocParagraph " > <nl> + < property name = " violateExecutionOnNonTightHtml " value = " true " / > <nl> < / module > <nl> + < / module > <nl> < / module > <nl> ] ] > < / source > <nl> < / td > <nl> diff - - git a / src / xdocs / writinglisteners . xml . vm b / src / xdocs / writinglisteners . xml . vm <nl> index 214f3c3 . . b260b08 100644 <nl> - - - a / src / xdocs / writinglisteners . xml . vm <nl> + + + b / src / xdocs / writinglisteners . xml . vm <nl> @ @ - 111 , 74 + 111 , 74 @ @ public class VerboseListener <nl> extends AutomaticBean <nl> implements AuditListener <nl> { <nl> - private PrintWriter mWriter = new PrintWriter ( System . out ) ; <nl> - private boolean mCloseOut = false ; <nl> - private int mTotalErrors ; <nl> - private int mErrors ; <nl> - <nl> - public void setFile ( String aFileName ) <nl> - throws FileNotFoundException <nl> - { <nl> - final OutputStream out = new FileOutputStream ( aFileName ) ; <nl> - mWriter = new PrintWriter ( out ) ; <nl> - mCloseOut = true ; <nl> + private PrintWriter mWriter = new PrintWriter ( System . out ) ; <nl> + private boolean mCloseOut = false ; <nl> + private int mTotalErrors ; <nl> + private int mErrors ; <nl> + <nl> + public void setFile ( String aFileName ) <nl> + throws FileNotFoundException <nl> + { <nl> + final OutputStream out = new FileOutputStream ( aFileName ) ; <nl> + mWriter = new PrintWriter ( out ) ; <nl> + mCloseOut = true ; <nl> + } <nl> + <nl> + public void auditStarted ( AuditEvent aEvt ) <nl> + { <nl> + mTotalErrors = 0 ; <nl> + mWriter . println ( " Audit started . " ) ; <nl> + } <nl> + <nl> + public void auditFinished ( AuditEvent aEvt ) <nl> + { <nl> + mWriter . println ( " Audit finished . Total errors : " + mTotalErrors ) ; <nl> + mWriter . flush ( ) ; <nl> + if ( mCloseOut ) { <nl> + mWriter . close ( ) ; <nl> } <nl> - <nl> - public void auditStarted ( AuditEvent aEvt ) <nl> - { <nl> - mTotalErrors = 0 ; <nl> - mWriter . println ( " Audit started . " ) ; <nl> - } <nl> - <nl> - public void auditFinished ( AuditEvent aEvt ) <nl> - { <nl> - mWriter . println ( " Audit finished . Total errors : " + mTotalErrors ) ; <nl> - mWriter . flush ( ) ; <nl> - if ( mCloseOut ) { <nl> - mWriter . close ( ) ; <nl> - } <nl> - } <nl> - <nl> - public void fileStarted ( AuditEvent aEvt ) <nl> - { <nl> - mErrors = 0 ; <nl> - mWriter . println ( <nl> - " Started checking file ' " + aEvt . getFileName ( ) + " ' . " ) ; <nl> - } <nl> - <nl> - public void fileFinished ( AuditEvent aEvt ) <nl> - { <nl> - mWriter . println ( " Finished checking file ' " + aEvt . getFileName ( ) <nl> - + " ' . Errors : " + mErrors ) ; <nl> - } <nl> - <nl> - public void addError ( AuditEvent aEvt ) <nl> - { <nl> - printEvent ( aEvt ) ; <nl> - if ( SeverityLevel . ERROR . equals ( aEvt . getSeverityLevel ( ) ) ) { <nl> - mErrors + + ; <nl> - mTotalErrors + + ; <nl> - } <nl> - } <nl> - <nl> - public void addException ( AuditEvent aEvt , Throwable aThrowable ) <nl> - { <nl> - printEvent ( aEvt ) ; <nl> - aThrowable . printStackTrace ( System . out ) ; <nl> - mErrors + + ; <nl> - mTotalErrors + + ; <nl> - } <nl> - <nl> - private void printEvent ( AuditEvent aEvt ) <nl> - { <nl> - mWriter . println ( " Logging error - " <nl> - + " file : ' " + aEvt . getFileName ( ) + " ' " <nl> - + " line : " + aEvt . getLine ( ) <nl> - + " column : " + aEvt . getColumn ( ) <nl> - + " severity : " + aEvt . getSeverityLevel ( ) <nl> - + " message : " + aEvt . getMessage ( ) <nl> - + " source : " + aEvt . getSourceName ( ) ) ; <nl> + } <nl> + <nl> + public void fileStarted ( AuditEvent aEvt ) <nl> + { <nl> + mErrors = 0 ; <nl> + mWriter . println ( <nl> + " Started checking file ' " + aEvt . getFileName ( ) + " ' . " ) ; <nl> + } <nl> + <nl> + public void fileFinished ( AuditEvent aEvt ) <nl> + { <nl> + mWriter . println ( " Finished checking file ' " + aEvt . getFileName ( ) <nl> + + " ' . Errors : " + mErrors ) ; <nl> + } <nl> + <nl> + public void addError ( AuditEvent aEvt ) <nl> + { <nl> + printEvent ( aEvt ) ; <nl> + if ( SeverityLevel . ERROR . equals ( aEvt . getSeverityLevel ( ) ) ) { <nl> + mErrors + + ; <nl> + mTotalErrors + + ; <nl> } <nl> + } <nl> + <nl> + public void addException ( AuditEvent aEvt , Throwable aThrowable ) <nl> + { <nl> + printEvent ( aEvt ) ; <nl> + aThrowable . printStackTrace ( System . out ) ; <nl> + mErrors + + ; <nl> + mTotalErrors + + ; <nl> + } <nl> + <nl> + private void printEvent ( AuditEvent aEvt ) <nl> + { <nl> + mWriter . println ( " Logging error - " <nl> + + " file : ' " + aEvt . getFileName ( ) + " ' " <nl> + + " line : " + aEvt . getLine ( ) <nl> + + " column : " + aEvt . getColumn ( ) <nl> + + " severity : " + aEvt . getSeverityLevel ( ) <nl> + + " message : " + aEvt . getMessage ( ) <nl> + + " source : " + aEvt . getSourceName ( ) ) ; <nl> + } <nl> } <nl> < / source > <nl> <nl> @ @ - 209 , 7 + 209 , 7 @ @ public class VerboseListener <nl> <nl> < source > <nl> & lt ; module name = & quot ; com . mycompany . listeners . VerboseListener & quot ; & gt ; <nl> - & lt ; property name = & quot ; file & quot ; value = & quot ; audit . txt & quot ; / & gt ; <nl> + & lt ; property name = & quot ; file & quot ; value = & quot ; audit . txt & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl>
NEAREST DIFF (one line): diff - - git a / docs / engine . html b / docs / engine . html <nl> index a4c4ba8 . . ef52a96 100644 <nl> - - - a / docs / engine . html <nl> + + + b / docs / engine . html <nl> @ @ - 281 , 7 + 281 , 7 @ @ <nl> < h3 > Modifiers < / h3 > <nl> < p > Checks that the order of modifiers conforms to the suggestions in the < a href = " http : / / java . sun . com / docs / books / jls / second _ edition / html / classes . doc . html " > Java Language specification , sections 8 . 1 . 1 , 8 . 3 . 1 and 8 . 4 . 3 < / a > . The correct order is < span class = " code " > public protected private abstract static final transient volatile synchronized native strictfp < / span > . < / p > <nl> <nl> - < p > Checks that method declarations in interfaces do not include the < span class = " code " > public < / span > modifier , see the < a href = " http : / / java . sun . com / docs / books / jls / second _ edition / html / interfaces . doc . html " > Java Language specification , section 9 . 4 < / a > . < / p > <nl> + < p > Checks that method declarations in interfaces do not include the < span class = " code " > public < / span > or < span class = " code " > abstract < / span > modifiers , see the < a href = " http : / / java . sun . com / docs / books / jls / second _ edition / html / interfaces . doc . html " > Java Language specification , section 9 . 4 < / a > . < / p > <nl> <nl> < h3 > Visibility Modifiers < / h3 > <nl> < p > Checks for data members that are not declared < span class = " code " > private < / span > . Also finds < span class = " code " > static < / span > non - < span class = " code " > final < / span > data members that are not declared as < code > private < / code > . < / p > <nl> diff - - git a / docs / releasenotes . html b / docs / releasenotes . html <nl> index d0e0753 . . 92fd389 100644 <nl> - - - a / docs / releasenotes . html <nl> + + + b / docs / releasenotes . html <nl> @ @ - 53 , 6 + 53 , 7 @ @ <nl> < li class = " body " > Added ability to specify a properties file on the command line ( request 557544 ) . < / li > <nl> 	 < li class = " body " > Check for whitespace around " { " and " } " ( request 557544 ) . < / li > <nl> 	 < li class = " body " > Fix Javadoc errors under JDK 1 . 4 ( request 568553 ) . < / li > <nl> + 	 < li class = " body " > Detect redundant < span class = " code " > abstract < / span > modifier in interfaces ( request 573485 ) . < / li > <nl> < / ul > <nl> < / p > <nl>

TEST DIFF:
diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm 
 index ec882b2 . . f68b6fa 100644 
 - - - a / src / xdocs / writingjavadocchecks . xml . vm 
 + + + b / src / xdocs / writingjavadocchecks . xml . vm 
 @ @ - 621 , 11 + 621 , 11 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 " - / / Puppy Crawl / / DTD Check Configuration 1 . 3 / / EN " 
 " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 3 . dtd " > 
 < module name = " Checker " > 
 - < module name = " TreeWalker " > 
 - < module name = " JavadocParagraph " > 
 - < property name = " violateExecutionOnNonTightHtml " value = " false " / > 
 - < / module > 
 + < module name = " TreeWalker " > 
 + < module name = " JavadocParagraph " > 
 + < property name = " violateExecutionOnNonTightHtml " value = " false " / > 
 < / module > 
 + < / module > 
 < / module > 
 ] ] > < / source > 
 < / td > 
 @ @ - 653 , 11 + 653 , 11 @ @ Checkstyle ends with 1 errors . 
 " - / / Puppy Crawl / / DTD Check Configuration 1 . 3 / / EN " 
 " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 3 . dtd " > 
 < module name = " Checker " > 
 - < module name = " TreeWalker " > 
 - < module name = " JavadocParagraph " > 
 - < property name = " violateExecutionOnNonTightHtml " value = " true " / > 
 - < / module > 
 + < module name = " TreeWalker " > 
 + < module name = " JavadocParagraph " > 
 + < property name = " violateExecutionOnNonTightHtml " value = " true " / > 
 < / module > 
 + < / module > 
 < / module > 
 ] ] > < / source > 
 < / td > 
 diff - - git a / src / xdocs / writinglisteners . xml . vm b / src / xdocs / writinglisteners . xml . vm 
 index 214f3c3 . . b260b08 100644 
 - - - a / src / xdocs / writinglisteners . xml . vm 
 + + + b / src / xdocs / writinglisteners . xml . vm 
 @ @ - 111 , 74 + 111 , 74 @ @ public class VerboseListener 
 extends AutomaticBean 
 implements AuditListener 
 { 
 - private PrintWriter mWriter = new PrintWriter ( System . out ) ; 
 - private boolean mCloseOut = false ; 
 - private int mTotalErrors ; 
 - private int mErrors ; 
 - 
 - public void setFile ( String aFileName ) 
 - throws FileNotFoundException 
 - { 
 - final OutputStream out = new FileOutputStream ( aFileName ) ; 
 - mWriter = new PrintWriter ( out ) ; 
 - mCloseOut = true ; 
 + private PrintWriter mWriter = new PrintWriter ( System . out ) ; 
 + private boolean mCloseOut = false ; 
 + private int mTotalErrors ; 
 + private int mErrors ; 
 + 
 + public void setFile ( String aFileName ) 
 + throws FileNotFoundException 
 + { 
 + final OutputStream out = new FileOutputStream ( aFileName ) ; 
 + mWriter = new PrintWriter ( out ) ; 
 + mCloseOut = true ; 
 + } 
 + 
 + public void auditStarted ( AuditEvent aEvt ) 
 + { 
 + mTotalErrors = 0 ; 
 + mWriter . println ( " Audit started . " ) ; 
 + } 
 + 
 + public void auditFinished ( AuditEvent aEvt ) 
 + { 
 + mWriter . println ( " Audit finished . Total errors : " + mTotalErrors ) ; 
 + mWriter . flush ( ) ; 
 + if ( mCloseOut ) { 
 + mWriter . close ( ) ; 
 } 
 - 
 - public void auditStarted ( AuditEvent aEvt ) 
 - { 
 - mTotalErrors = 0 ; 
 - mWriter . println ( " Audit started . " ) ; 
 - } 
 - 
 - public void auditFinished ( AuditEvent aEvt ) 
 - { 
 - mWriter . println ( " Audit finished . Total errors : " + mTotalErrors ) ; 
 - mWriter . flush ( ) ; 
 - if ( mCloseOut ) { 
 - mWriter . close ( ) ; 
 - } 
 - } 
 - 
 - public void fileStarted ( AuditEvent aEvt ) 
 - { 
 - mErrors = 0 ; 
 - mWriter . println ( 
 - " Started checking file ' " + aEvt . getFileName ( ) + " ' . " ) ; 
 - } 
 - 
 - public void fileFinished ( AuditEvent aEvt ) 
 - { 
 - mWriter . println ( " Finished checking file ' " + aEvt . getFileName ( ) 
 - + " ' . Errors : " + mErrors ) ; 
 - } 
 - 
 - public void addError ( AuditEvent aEvt ) 
 - { 
 - printEvent ( aEvt ) ; 
 - if ( SeverityLevel . ERROR . equals ( aEvt . getSeverityLevel ( ) ) ) { 
 - mErrors + + ; 
 - mTotalErrors + + ; 
 - } 
 - } 
 - 
 - public void addException ( AuditEvent aEvt , Throwable aThrowable ) 
 - { 
 - printEvent ( aEvt ) ; 
 - aThrowable . printStackTrace ( System . out ) ; 
 - mErrors + + ; 
 - mTotalErrors + + ; 
 - } 
 - 
 - private void printEvent ( AuditEvent aEvt ) 
 - { 
 - mWriter . println ( " Logging error - " 
 - + " file : ' " + aEvt . getFileName ( ) + " ' " 
 - + " line : " + aEvt . getLine ( ) 
 - + " column : " + aEvt . getColumn ( ) 
 - + " severity : " + aEvt . getSeverityLevel ( ) 
 - + " message : " + aEvt . getMessage ( ) 
 - + " source : " + aEvt . getSourceName ( ) ) ; 
 + } 
 + 
 + public void fileStarted ( AuditEvent aEvt ) 
 + { 
 + mErrors = 0 ; 
 + mWriter . println ( 
 + " Started checking file ' " + aEvt . getFileName ( ) + " ' . " ) ; 
 + } 
 + 
 + public void fileFinished ( AuditEvent aEvt ) 
 + { 
 + mWriter . println ( " Finished checking file ' " + aEvt . getFileName ( ) 
 + + " ' . Errors : " + mErrors ) ; 
 + } 
 + 
 + public void addError ( AuditEvent aEvt ) 
 + { 
 + printEvent ( aEvt ) ; 
 + if ( SeverityLevel . ERROR . equals ( aEvt . getSeverityLevel ( ) ) ) { 
 + mErrors + + ; 
 + mTotalErrors + + ; 
 } 
 + } 
 + 
 + public void addException ( AuditEvent aEvt , Throwable aThrowable ) 
 + { 
 + printEvent ( aEvt ) ; 
 + aThrowable . printStackTrace ( System . out ) ; 
 + mErrors + + ; 
 + mTotalErrors + + ; 
 + } 
 + 
 + private void printEvent ( AuditEvent aEvt ) 
 + { 
 + mWriter . println ( " Logging error - " 
 + + " file : ' " + aEvt . getFileName ( ) + " ' " 
 + + " line : " + aEvt . getLine ( ) 
 + + " column : " + aEvt . getColumn ( ) 
 + + " severity : " + aEvt . getSeverityLevel ( ) 
 + + " message : " + aEvt . getMessage ( ) 
 + + " source : " + aEvt . getSourceName ( ) ) ; 
 + } 
 } 
 < / source > 
 
 @ @ - 209 , 7 + 209 , 7 @ @ public class VerboseListener 
 
 < source > 
 & lt ; module name = & quot ; com . mycompany . listeners . VerboseListener & quot ; & gt ; 
 - & lt ; property name = & quot ; file & quot ; value = & quot ; audit . txt & quot ; / & gt ; 
 + & lt ; property name = & quot ; file & quot ; value = & quot ; audit . txt & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 


NEAREST DIFF:
diff - - git a / docs / engine . html b / docs / engine . html 
 index a4c4ba8 . . ef52a96 100644 
 - - - a / docs / engine . html 
 + + + b / docs / engine . html 
 @ @ - 281 , 7 + 281 , 7 @ @ 
 < h3 > Modifiers < / h3 > 
 < p > Checks that the order of modifiers conforms to the suggestions in the < a href = " http : / / java . sun . com / docs / books / jls / second _ edition / html / classes . doc . html " > Java Language specification , sections 8 . 1 . 1 , 8 . 3 . 1 and 8 . 4 . 3 < / a > . The correct order is < span class = " code " > public protected private abstract static final transient volatile synchronized native strictfp < / span > . < / p > 
 
 - < p > Checks that method declarations in interfaces do not include the < span class = " code " > public < / span > modifier , see the < a href = " http : / / java . sun . com / docs / books / jls / second _ edition / html / interfaces . doc . html " > Java Language specification , section 9 . 4 < / a > . < / p > 
 + < p > Checks that method declarations in interfaces do not include the < span class = " code " > public < / span > or < span class = " code " > abstract < / span > modifiers , see the < a href = " http : / / java . sun . com / docs / books / jls / second _ edition / html / interfaces . doc . html " > Java Language specification , section 9 . 4 < / a > . < / p > 
 
 < h3 > Visibility Modifiers < / h3 > 
 < p > Checks for data members that are not declared < span class = " code " > private < / span > . Also finds < span class = " code " > static < / span > non - < span class = " code " > final < / span > data members that are not declared as < code > private < / code > . < / p > 
 diff - - git a / docs / releasenotes . html b / docs / releasenotes . html 
 index d0e0753 . . 92fd389 100644 
 - - - a / docs / releasenotes . html 
 + + + b / docs / releasenotes . html 
 @ @ - 53 , 6 + 53 , 7 @ @ 
 < li class = " body " > Added ability to specify a properties file on the command line ( request 557544 ) . < / li > 
 	 < li class = " body " > Check for whitespace around " { " and " } " ( request 557544 ) . < / li > 
 	 < li class = " body " > Fix Javadoc errors under JDK 1 . 4 ( request 568553 ) . < / li > 
 + 	 < li class = " body " > Detect redundant < span class = " code " > abstract < / span > modifier in interfaces ( request 573485 ) . < / li > 
 < / ul > 
 < / p > 

