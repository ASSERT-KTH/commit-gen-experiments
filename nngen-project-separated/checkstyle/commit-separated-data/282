BLEU SCORE: 0.06837203339116285

TEST MSG: Issue # 5757 : switched simple log line / column to log ast
GENERATED MSG: Issue # 5508 : Store IDENT token type in the xpath tree

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> index c573236 . . 142a807 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> @ @ - 466 , 13 + 466 , 11 @ @ public final class AnnotationUseStyleCheck extends AbstractCheck { <nl> <nl> if ( trailingArrayComma = = TrailingArrayComma . ALWAYS <nl> & & ( comma = = null | | comma . getType ( ) ! = TokenTypes . COMMA ) ) { <nl> - log ( rCurly . getLineNo ( ) , <nl> - rCurly . getColumnNo ( ) , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; <nl> + log ( rCurly , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; <nl> } <nl> else if ( trailingArrayComma = = TrailingArrayComma . NEVER <nl> & & comma ! = null & & comma . getType ( ) = = TokenTypes . COMMA ) { <nl> - log ( comma . getLineNo ( ) , <nl> - comma . getColumnNo ( ) , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) ; <nl> + log ( comma , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> index 62fc988 . . e8fd08b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> @ @ - 152 , 15 + 152 , 13 @ @ public class EmptyBlockCheck <nl> emptyBlock = leftCurly . getChildCount ( ) < = 1 ; <nl> } <nl> if ( emptyBlock ) { <nl> - log ( leftCurly . getLineNo ( ) , <nl> - leftCurly . getColumnNo ( ) , <nl> + log ( leftCurly , <nl> MSG _ KEY _ BLOCK _ NO _ STATEMENT , <nl> ast . getText ( ) ) ; <nl> } <nl> } <nl> else if ( ! hasText ( leftCurly ) ) { <nl> - log ( leftCurly . getLineNo ( ) , <nl> - leftCurly . getColumnNo ( ) , <nl> + log ( leftCurly , <nl> MSG _ KEY _ BLOCK _ EMPTY , <nl> ast . getText ( ) ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java <nl> index a354dc1 . . dba6b69 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java <nl> @ @ - 205 , 9 + 205 , 7 @ @ public class IllegalInstantiationCheck <nl> final String typeName = typeIdent . getText ( ) ; <nl> final String fqClassName = getIllegalInstantiation ( typeName ) ; <nl> if ( fqClassName ! = null ) { <nl> - final int lineNo = newTokenAst . getLineNo ( ) ; <nl> - final int colNo = newTokenAst . getColumnNo ( ) ; <nl> - log ( lineNo , colNo , MSG _ KEY , fqClassName ) ; <nl> + log ( newTokenAst , MSG _ KEY , fqClassName ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheck . java <nl> index 68bb86d . . de589a9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheck . java <nl> @ @ - 87 , 8 + 87 , 7 @ @ public class IllegalTokenCheck <nl> @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> log ( <nl> - ast . getLineNo ( ) , <nl> - ast . getColumnNo ( ) , <nl> + ast , <nl> MSG _ KEY , <nl> convertToString ( ast ) <nl> ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenTextCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenTextCheck . java <nl> index 75e885e . . 72612ae 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenTextCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenTextCheck . java <nl> @ @ - 114 , 8 + 114 , 7 @ @ public class IllegalTokenTextCheck <nl> customMessage = MSG _ KEY ; <nl> } <nl> log ( <nl> - ast . getLineNo ( ) , <nl> - ast . getColumnNo ( ) , <nl> + ast , <nl> customMessage , <nl> formatString ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java <nl> index 2b92ab7 . . 374acbd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java <nl> @ @ - 294 , 8 + 294 , 7 @ @ public class MagicNumberCheck extends AbstractCheck { <nl> reportAST = parent ; <nl> text = " + " + text ; <nl> } <nl> - log ( reportAST . getLineNo ( ) , <nl> - reportAST . getColumnNo ( ) , <nl> + log ( reportAST , <nl> MSG _ KEY , <nl> text ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java <nl> index e971c90 . . 1afcd38 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java <nl> @ @ - 155 , 8 + 155 , 7 @ @ public class IllegalImportCheck <nl> ast . getFirstChild ( ) . getNextSibling ( ) ) ; <nl> } <nl> if ( isIllegalImport ( imp . getText ( ) ) ) { <nl> - log ( ast . getLineNo ( ) , <nl> - ast . getColumnNo ( ) , <nl> + log ( ast , <nl> MSG _ KEY , <nl> imp . getText ( ) ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractNameCheck . java <nl> index 8b4336c . . 9afc76b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractNameCheck . java <nl> @ @ - 73 , 8 + 73 , 7 @ @ public abstract class AbstractNameCheck <nl> if ( mustCheckName ( ast ) ) { <nl> final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; <nl> if ( ! format . matcher ( nameAST . getText ( ) ) . find ( ) ) { <nl> - log ( nameAST . getLineNo ( ) , <nl> - nameAST . getColumnNo ( ) , <nl> + log ( nameAST , <nl> MSG _ INVALID _ PATTERN , <nl> nameAST . getText ( ) , <nl> format . pattern ( ) ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java <nl> index 968f2e7 . . 9bd8cad 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java <nl> @ @ - 217 , 11 + 217 , 11 @ @ public class OperatorWrapCheck <nl> if ( option = = WrapOption . NL <nl> & & ! text . equals ( currentLine . trim ( ) ) <nl> & & CommonUtils . isBlank ( currentLine . substring ( colNo + text . length ( ) ) ) ) { <nl> - log ( lineNo , colNo , MSG _ LINE _ NEW , text ) ; <nl> + log ( ast , MSG _ LINE _ NEW , text ) ; <nl> } <nl> else if ( option = = WrapOption . EOL <nl> & & CommonUtils . hasWhitespaceBefore ( colNo - 1 , currentLine ) ) { <nl> - log ( lineNo , colNo , MSG _ LINE _ PREVIOUS , text ) ; <nl> + log ( ast , MSG _ LINE _ PREVIOUS , text ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java <nl> index 51406f3 . . 1240ce9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java <nl> @ @ - 155 , 11 + 155 , 11 @ @ public class SeparatorWrapCheck <nl> <nl> if ( option = = WrapOption . EOL <nl> & & substringBeforeToken . isEmpty ( ) ) { <nl> - log ( lineNo , colNo , MSG _ LINE _ PREVIOUS , text ) ; <nl> + log ( ast , MSG _ LINE _ PREVIOUS , text ) ; <nl> } <nl> else if ( option = = WrapOption . NL <nl> & & substringAfterToken . isEmpty ( ) ) { <nl> - log ( lineNo , colNo , MSG _ LINE _ NEW , text ) ; <nl> + log ( ast , MSG _ LINE _ NEW , text ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / xdocs / config _ filters . xml b / src / xdocs / config _ filters . xml <nl> index 3d7c639 . . e462e3b 100644 <nl> - - - a / src / xdocs / config _ filters . xml <nl> + + + b / src / xdocs / config _ filters . xml <nl> @ @ - 683 , 12 + 683 , 16 @ @ public class UserService { <nl> < li > AvoidInlineConditionalsCheck < / li > <nl> < li > AvoidNestedBlocksCheck < / li > <nl> < li > BooleanExpressionComplexityCheck < / li > <nl> + < li > CatchParameterNameCheck < / li > <nl> + < li > ClassTypeParameterNameCheck < / li > <nl> + < li > ConstantNameCheck < / li > <nl> < li > CovariantEqualsCheck < / li > <nl> < li > CyclomaticComplexityCheck < / li > <nl> < li > DeclarationOrderCheck < / li > <nl> < li > DefaultComesLastCheck < / li > <nl> < li > DescendantTokenCheck < / li > <nl> < li > DesignForExtensionCheck < / li > <nl> + < li > EmptyBlockCheck < / li > <nl> < li > EmptyStatementCheck < / li > <nl> < li > EqualsAvoidNullCheck < / li > <nl> < li > EqualsHashCodeCheck < / li > <nl> @ @ - 699 , 16 + 703 , 26 @ @ public class UserService { <nl> < li > FinalParametersCheck < / li > <nl> < li > HiddenFieldCheck < / li > <nl> < li > HideUtilityClassConstructorCheck < / li > <nl> + < li > IllegalInstantiationCheck < / li > <nl> + < li > IllegalTokenCheck < / li > <nl> + < li > IllegalTokenTextCheck < / li > <nl> < li > InnerAssignmentCheck < / li > <nl> < li > InnerTypeLastCheck < / li > <nl> + < li > InterfaceTypeParameterNameCheck < / li > <nl> < li > JavadocVariableCheck < / li > <nl> < li > JavaNCSSCheck < / li > <nl> + < li > IllegalImportCheck < / li > <nl> < li > IllegalThrowsCheck < / li > <nl> < li > ImportControlCheck < / li > <nl> < li > LeftCurlyCheck < / li > <nl> + < li > LocalFinalVariableNameCheck < / li > <nl> + < li > LocalVariableNameCheck < / li > <nl> + < li > MagicNumberCheck < / li > <nl> + < li > MemberNameCheck < / li > <nl> < li > MethodLengthCheck < / li > <nl> < li > MethodNameCheck < / li > <nl> < li > MethodParamPadCheck < / li > <nl> + < li > MethodTypeParameterNameCheck < / li > <nl> < li > ModifiedControlVariableCheck < / li > <nl> < li > ModifierOrderCheck < / li > <nl> < li > MultipleVariableDeclarationsCheck < / li > <nl> @ @ - 718 , 21 + 732 , 26 @ @ public class UserService { <nl> < li > NestedTryDepthCheck < / li > <nl> < li > NPathComplexityCheck < / li > <nl> < li > OneStatementPerLineCheck < / li > <nl> + < li > OperatorWrapCheck < / li > <nl> < li > OuterTypeNumberCheck < / li > <nl> < li > ParameterAssignmentCheck < / li > <nl> + < li > ParameterNameCheck < / li > <nl> < li > ParameterNumberCheck < / li > <nl> < li > RedundantImportCheck < / li > <nl> < li > RedundantModifierCheck < / li > <nl> < li > RequireThisCheck < / li > <nl> < li > ReturnCountCheck < / li > <nl> < li > RightCurlyCheck < / li > <nl> + < li > SeparatorWrapCheck < / li > <nl> < li > SimplifyBooleanExpressionCheck < / li > <nl> < li > SimplifyBooleanReturnCheck < / li > <nl> + < li > StaticVariableNameCheck < / li > <nl> < li > StringLiteralEqualityCheck < / li > <nl> < li > SuperCloneCheck < / li > <nl> < li > SuperFinalizeCheck < / li > <nl> < li > SuppressWarningsCheck < / li > <nl> < li > ThrowsCountCheck < / li > <nl> + < li > TypeNameCheck < / li > <nl> < li > VisibilityModifierCheck < / li > <nl> < / ul > <nl> < p >
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlTest . java <nl> index 7137a6c . . 77bc1eb 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlTest . java <nl> @ @ - 37 , 8 + 37 , 8 @ @ public class ImportControlTest { <nl> <nl> private final ImportControl icRootRegexpParent = new ImportControl ( " com \ \ . [ ^ . ] + \ \ . courtlink " , <nl> true ) ; <nl> - private final ImportControl icCommonRegexpParen = new ImportControl ( icRootRegexpParent , <nl> - " com + on " , true ) ; <nl> + private final ImportControl icBootRegexpParen = new ImportControl ( icRootRegexpParent , <nl> + " bo + t " , true ) ; <nl> <nl> @ Before <nl> public void setUp ( ) { <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class ImportControlTest { <nl> icCommonRegexpChild . addImportRule ( <nl> new PkgImportRule ( true , false , " org \ \ . h . * " , false , true ) ) ; <nl> <nl> - icRootRegexpParent . addChild ( icCommonRegexpParen ) ; <nl> + icRootRegexpParent . addChild ( icBootRegexpParen ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 172 , 10 + 172 , 10 @ @ public class ImportControlTest { <nl> <nl> @ Test <nl> public void testRegExpParentInSubpackageIsConsidered ( ) { <nl> - assertEquals ( " Invalid package " , icCommonRegexpParen , icRootRegexpParent <nl> - . locateFinest ( " com . kazgroup . courtlink . common . api " ) ) ; <nl> - assertEquals ( " Invalid package " , icCommonRegexpParen , icRootRegexpParent <nl> - . locateFinest ( " com . kazgroup . courtlink . comon . api " ) ) ; <nl> + assertEquals ( " Invalid package " , icBootRegexpParen , icRootRegexpParent <nl> + . locateFinest ( " com . kazgroup . courtlink . boot . api " ) ) ; <nl> + assertEquals ( " Invalid package " , icBootRegexpParen , icRootRegexpParent <nl> + . locateFinest ( " com . kazgroup . courtlink . bot . api " ) ) ; <nl> } <nl> <nl> @ Test

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 index c573236 . . 142a807 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 @ @ - 466 , 13 + 466 , 11 @ @ public final class AnnotationUseStyleCheck extends AbstractCheck { 
 
 if ( trailingArrayComma = = TrailingArrayComma . ALWAYS 
 & & ( comma = = null | | comma . getType ( ) ! = TokenTypes . COMMA ) ) { 
 - log ( rCurly . getLineNo ( ) , 
 - rCurly . getColumnNo ( ) , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; 
 + log ( rCurly , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; 
 } 
 else if ( trailingArrayComma = = TrailingArrayComma . NEVER 
 & & comma ! = null & & comma . getType ( ) = = TokenTypes . COMMA ) { 
 - log ( comma . getLineNo ( ) , 
 - comma . getColumnNo ( ) , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) ; 
 + log ( comma , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) ; 
 } 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 index 62fc988 . . e8fd08b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 @ @ - 152 , 15 + 152 , 13 @ @ public class EmptyBlockCheck 
 emptyBlock = leftCurly . getChildCount ( ) < = 1 ; 
 } 
 if ( emptyBlock ) { 
 - log ( leftCurly . getLineNo ( ) , 
 - leftCurly . getColumnNo ( ) , 
 + log ( leftCurly , 
 MSG _ KEY _ BLOCK _ NO _ STATEMENT , 
 ast . getText ( ) ) ; 
 } 
 } 
 else if ( ! hasText ( leftCurly ) ) { 
 - log ( leftCurly . getLineNo ( ) , 
 - leftCurly . getColumnNo ( ) , 
 + log ( leftCurly , 
 MSG _ KEY _ BLOCK _ EMPTY , 
 ast . getText ( ) ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java 
 index a354dc1 . . dba6b69 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java 
 @ @ - 205 , 9 + 205 , 7 @ @ public class IllegalInstantiationCheck 
 final String typeName = typeIdent . getText ( ) ; 
 final String fqClassName = getIllegalInstantiation ( typeName ) ; 
 if ( fqClassName ! = null ) { 
 - final int lineNo = newTokenAst . getLineNo ( ) ; 
 - final int colNo = newTokenAst . getColumnNo ( ) ; 
 - log ( lineNo , colNo , MSG _ KEY , fqClassName ) ; 
 + log ( newTokenAst , MSG _ KEY , fqClassName ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheck . java 
 index 68bb86d . . de589a9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheck . java 
 @ @ - 87 , 8 + 87 , 7 @ @ public class IllegalTokenCheck 
 @ Override 
 public void visitToken ( DetailAST ast ) { 
 log ( 
 - ast . getLineNo ( ) , 
 - ast . getColumnNo ( ) , 
 + ast , 
 MSG _ KEY , 
 convertToString ( ast ) 
 ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenTextCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenTextCheck . java 
 index 75e885e . . 72612ae 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenTextCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenTextCheck . java 
 @ @ - 114 , 8 + 114 , 7 @ @ public class IllegalTokenTextCheck 
 customMessage = MSG _ KEY ; 
 } 
 log ( 
 - ast . getLineNo ( ) , 
 - ast . getColumnNo ( ) , 
 + ast , 
 customMessage , 
 formatString ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java 
 index 2b92ab7 . . 374acbd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java 
 @ @ - 294 , 8 + 294 , 7 @ @ public class MagicNumberCheck extends AbstractCheck { 
 reportAST = parent ; 
 text = " + " + text ; 
 } 
 - log ( reportAST . getLineNo ( ) , 
 - reportAST . getColumnNo ( ) , 
 + log ( reportAST , 
 MSG _ KEY , 
 text ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java 
 index e971c90 . . 1afcd38 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java 
 @ @ - 155 , 8 + 155 , 7 @ @ public class IllegalImportCheck 
 ast . getFirstChild ( ) . getNextSibling ( ) ) ; 
 } 
 if ( isIllegalImport ( imp . getText ( ) ) ) { 
 - log ( ast . getLineNo ( ) , 
 - ast . getColumnNo ( ) , 
 + log ( ast , 
 MSG _ KEY , 
 imp . getText ( ) ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractNameCheck . java 
 index 8b4336c . . 9afc76b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractNameCheck . java 
 @ @ - 73 , 8 + 73 , 7 @ @ public abstract class AbstractNameCheck 
 if ( mustCheckName ( ast ) ) { 
 final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; 
 if ( ! format . matcher ( nameAST . getText ( ) ) . find ( ) ) { 
 - log ( nameAST . getLineNo ( ) , 
 - nameAST . getColumnNo ( ) , 
 + log ( nameAST , 
 MSG _ INVALID _ PATTERN , 
 nameAST . getText ( ) , 
 format . pattern ( ) ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java 
 index 968f2e7 . . 9bd8cad 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java 
 @ @ - 217 , 11 + 217 , 11 @ @ public class OperatorWrapCheck 
 if ( option = = WrapOption . NL 
 & & ! text . equals ( currentLine . trim ( ) ) 
 & & CommonUtils . isBlank ( currentLine . substring ( colNo + text . length ( ) ) ) ) { 
 - log ( lineNo , colNo , MSG _ LINE _ NEW , text ) ; 
 + log ( ast , MSG _ LINE _ NEW , text ) ; 
 } 
 else if ( option = = WrapOption . EOL 
 & & CommonUtils . hasWhitespaceBefore ( colNo - 1 , currentLine ) ) { 
 - log ( lineNo , colNo , MSG _ LINE _ PREVIOUS , text ) ; 
 + log ( ast , MSG _ LINE _ PREVIOUS , text ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java 
 index 51406f3 . . 1240ce9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java 
 @ @ - 155 , 11 + 155 , 11 @ @ public class SeparatorWrapCheck 
 
 if ( option = = WrapOption . EOL 
 & & substringBeforeToken . isEmpty ( ) ) { 
 - log ( lineNo , colNo , MSG _ LINE _ PREVIOUS , text ) ; 
 + log ( ast , MSG _ LINE _ PREVIOUS , text ) ; 
 } 
 else if ( option = = WrapOption . NL 
 & & substringAfterToken . isEmpty ( ) ) { 
 - log ( lineNo , colNo , MSG _ LINE _ NEW , text ) ; 
 + log ( ast , MSG _ LINE _ NEW , text ) ; 
 } 
 } 
 
 diff - - git a / src / xdocs / config _ filters . xml b / src / xdocs / config _ filters . xml 
 index 3d7c639 . . e462e3b 100644 
 - - - a / src / xdocs / config _ filters . xml 
 + + + b / src / xdocs / config _ filters . xml 
 @ @ - 683 , 12 + 683 , 16 @ @ public class UserService { 
 < li > AvoidInlineConditionalsCheck < / li > 
 < li > AvoidNestedBlocksCheck < / li > 
 < li > BooleanExpressionComplexityCheck < / li > 
 + < li > CatchParameterNameCheck < / li > 
 + < li > ClassTypeParameterNameCheck < / li > 
 + < li > ConstantNameCheck < / li > 
 < li > CovariantEqualsCheck < / li > 
 < li > CyclomaticComplexityCheck < / li > 
 < li > DeclarationOrderCheck < / li > 
 < li > DefaultComesLastCheck < / li > 
 < li > DescendantTokenCheck < / li > 
 < li > DesignForExtensionCheck < / li > 
 + < li > EmptyBlockCheck < / li > 
 < li > EmptyStatementCheck < / li > 
 < li > EqualsAvoidNullCheck < / li > 
 < li > EqualsHashCodeCheck < / li > 
 @ @ - 699 , 16 + 703 , 26 @ @ public class UserService { 
 < li > FinalParametersCheck < / li > 
 < li > HiddenFieldCheck < / li > 
 < li > HideUtilityClassConstructorCheck < / li > 
 + < li > IllegalInstantiationCheck < / li > 
 + < li > IllegalTokenCheck < / li > 
 + < li > IllegalTokenTextCheck < / li > 
 < li > InnerAssignmentCheck < / li > 
 < li > InnerTypeLastCheck < / li > 
 + < li > InterfaceTypeParameterNameCheck < / li > 
 < li > JavadocVariableCheck < / li > 
 < li > JavaNCSSCheck < / li > 
 + < li > IllegalImportCheck < / li > 
 < li > IllegalThrowsCheck < / li > 
 < li > ImportControlCheck < / li > 
 < li > LeftCurlyCheck < / li > 
 + < li > LocalFinalVariableNameCheck < / li > 
 + < li > LocalVariableNameCheck < / li > 
 + < li > MagicNumberCheck < / li > 
 + < li > MemberNameCheck < / li > 
 < li > MethodLengthCheck < / li > 
 < li > MethodNameCheck < / li > 
 < li > MethodParamPadCheck < / li > 
 + < li > MethodTypeParameterNameCheck < / li > 
 < li > ModifiedControlVariableCheck < / li > 
 < li > ModifierOrderCheck < / li > 
 < li > MultipleVariableDeclarationsCheck < / li > 
 @ @ - 718 , 21 + 732 , 26 @ @ public class UserService { 
 < li > NestedTryDepthCheck < / li > 
 < li > NPathComplexityCheck < / li > 
 < li > OneStatementPerLineCheck < / li > 
 + < li > OperatorWrapCheck < / li > 
 < li > OuterTypeNumberCheck < / li > 
 < li > ParameterAssignmentCheck < / li > 
 + < li > ParameterNameCheck < / li > 
 < li > ParameterNumberCheck < / li > 
 < li > RedundantImportCheck < / li > 
 < li > RedundantModifierCheck < / li > 
 < li > RequireThisCheck < / li > 
 < li > ReturnCountCheck < / li > 
 < li > RightCurlyCheck < / li > 
 + < li > SeparatorWrapCheck < / li > 
 < li > SimplifyBooleanExpressionCheck < / li > 
 < li > SimplifyBooleanReturnCheck < / li > 
 + < li > StaticVariableNameCheck < / li > 
 < li > StringLiteralEqualityCheck < / li > 
 < li > SuperCloneCheck < / li > 
 < li > SuperFinalizeCheck < / li > 
 < li > SuppressWarningsCheck < / li > 
 < li > ThrowsCountCheck < / li > 
 + < li > TypeNameCheck < / li > 
 < li > VisibilityModifierCheck < / li > 
 < / ul > 
 < p >

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlTest . java 
 index 7137a6c . . 77bc1eb 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlTest . java 
 @ @ - 37 , 8 + 37 , 8 @ @ public class ImportControlTest { 
 
 private final ImportControl icRootRegexpParent = new ImportControl ( " com \ \ . [ ^ . ] + \ \ . courtlink " , 
 true ) ; 
 - private final ImportControl icCommonRegexpParen = new ImportControl ( icRootRegexpParent , 
 - " com + on " , true ) ; 
 + private final ImportControl icBootRegexpParen = new ImportControl ( icRootRegexpParent , 
 + " bo + t " , true ) ; 
 
 @ Before 
 public void setUp ( ) { 
 @ @ - 64 , 7 + 64 , 7 @ @ public class ImportControlTest { 
 icCommonRegexpChild . addImportRule ( 
 new PkgImportRule ( true , false , " org \ \ . h . * " , false , true ) ) ; 
 
 - icRootRegexpParent . addChild ( icCommonRegexpParen ) ; 
 + icRootRegexpParent . addChild ( icBootRegexpParen ) ; 
 } 
 
 @ Test 
 @ @ - 172 , 10 + 172 , 10 @ @ public class ImportControlTest { 
 
 @ Test 
 public void testRegExpParentInSubpackageIsConsidered ( ) { 
 - assertEquals ( " Invalid package " , icCommonRegexpParen , icRootRegexpParent 
 - . locateFinest ( " com . kazgroup . courtlink . common . api " ) ) ; 
 - assertEquals ( " Invalid package " , icCommonRegexpParen , icRootRegexpParent 
 - . locateFinest ( " com . kazgroup . courtlink . comon . api " ) ) ; 
 + assertEquals ( " Invalid package " , icBootRegexpParen , icRootRegexpParent 
 + . locateFinest ( " com . kazgroup . courtlink . boot . api " ) ) ; 
 + assertEquals ( " Invalid package " , icBootRegexpParen , icRootRegexpParent 
 + . locateFinest ( " com . kazgroup . courtlink . bot . api " ) ) ; 
 } 
 
 @ Test
