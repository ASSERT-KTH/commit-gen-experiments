BLEU SCORE: 0.7691605673134586

TEST MSG: Issue # 5489 : Fixed indentation in config _ blocks . xml
GENERATED MSG: Issue # 5489 : Fixed indentation in config _ annotation . xml

TEST DIFF (one line): diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml <nl> index 52c55b4 . . cb20e72 100644 <nl> - - - a / src / xdocs / config _ blocks . xml <nl> + + + b / src / xdocs / config _ blocks . xml <nl> @ @ - 39 , 11 + 39 , 11 @ @ <nl> < source > <nl> public void guessTheOutput ( ) <nl> { <nl> - int whichIsWhich = 0 ; <nl> - { <nl> - int whichIsWhich = 2 ; <nl> - } <nl> - System . out . println ( " value = " + whichIsWhich ) ; <nl> + int whichIsWhich = 0 ; <nl> + { <nl> + int whichIsWhich = 2 ; <nl> + } <nl> + System . out . println ( " value = " + whichIsWhich ) ; <nl> } <nl> < / source > <nl> <nl> @ @ - 51 , 7 + 51 , 7 @ @ public void guessTheOutput ( ) <nl> < source > <nl> / / if ( conditionThatIsNotUsedAnyLonger ) <nl> { <nl> - System . out . println ( " unconditional " ) ; <nl> + System . out . println ( " unconditional " ) ; <nl> } <nl> < / source > <nl> <nl> @ @ - 65 , 26 + 65 , 26 @ @ public void guessTheOutput ( ) <nl> < source > <nl> switch ( a ) <nl> { <nl> - case 0 : <nl> - / / Never OK , break outside block <nl> - { <nl> - x = 1 ; <nl> - } <nl> - break ; <nl> - case 1 : <nl> - / / Never OK , statement outside block <nl> - System . out . println ( " Hello " ) ; <nl> - { <nl> - x = 2 ; <nl> - break ; <nl> - } <nl> - case 1 : <nl> - / / OK if allowInSwitchCase is true <nl> - { <nl> - System . out . println ( " Hello " ) ; <nl> - x = 2 ; <nl> - break ; <nl> - } <nl> + case 0 : <nl> + / / Never OK , break outside block <nl> + { <nl> + x = 1 ; <nl> + } <nl> + break ; <nl> + case 1 : <nl> + / / Never OK , statement outside block <nl> + System . out . println ( " Hello " ) ; <nl> + { <nl> + x = 2 ; <nl> + break ; <nl> + } <nl> + case 1 : <nl> + / / OK if allowInSwitchCase is true <nl> + { <nl> + System . out . println ( " Hello " ) ; <nl> + x = 2 ; <nl> + break ; <nl> + } <nl> } <nl> < / source > <nl> < / subsection > <nl> @ @ - 157 , 12 + 157 , 12 @ @ switch ( a ) <nl> <nl> < p > Sequential blocks won ' t be checked . Also , no violations for fallthrough : < / p > <nl> < source > <nl> - switch ( a ) { <nl> - case 1 : / / no violation <nl> - case 2 : / / no violation <nl> - case 3 : someMethod ( ) ; { } / / no violation <nl> - default : break ; <nl> - } <nl> + switch ( a ) { <nl> + case 1 : / / no violation <nl> + case 2 : / / no violation <nl> + case 3 : someMethod ( ) ; { } / / no violation <nl> + default : break ; <nl> + } <nl> < / source > <nl> <nl> < p > <nl> @ @ - 173 , 15 + 173 , 15 @ @ switch ( a ) <nl> < p > Configuration : < / p > <nl> < source > <nl> & lt ; module name = & quot ; EmptyBlock & quot ; & gt ; <nl> - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ DEFAULT & quot ; / & gt ; <nl> + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ DEFAULT & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < p > Result : < / p > <nl> < source > <nl> - switch ( a ) { <nl> - default : / / no violation for " default : " as empty block belong to " case 1 : " <nl> - case 1 : { } <nl> - } <nl> + switch ( a ) { <nl> + default : / / no violation for " default : " as empty block belong to " case 1 : " <nl> + case 1 : { } <nl> + } <nl> < / source > <nl> < / subsection > <nl> <nl> @ @ - 253 , 8 + 253 , 8 @ @ switch ( a ) <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; EmptyBlock & quot ; & gt ; <nl> - & lt ; property name = & quot ; option & quot ; value = & quot ; text & quot ; / & gt ; <nl> - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ TRY & quot ; / & gt ; <nl> + & lt ; property name = & quot ; option & quot ; value = & quot ; text & quot ; / & gt ; <nl> + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ TRY & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < / subsection > <nl> @ @ - 344 , 7 + 344 , 7 @ @ switch ( a ) <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; EmptyCatchBlock & quot ; & gt ; <nl> - & lt ; property name = & quot ; exceptionVariableName & quot ; value = & quot ; expected | ignore & quot ; / & gt ; <nl> + & lt ; property name = & quot ; exceptionVariableName & quot ; value = & quot ; expected | ignore & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < p > <nl> @ @ - 353 , 7 + 353 , 7 @ @ switch ( a ) <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; EmptyCatchBlock & quot ; & gt ; <nl> - & lt ; property name = & quot ; commentFormat & quot ; value = & quot ; This is expected & quot ; / & gt ; <nl> + & lt ; property name = & quot ; commentFormat & quot ; value = & quot ; This is expected & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < p > <nl> @ @ - 363 , 8 + 363 , 8 @ @ switch ( a ) <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; EmptyCatchBlock & quot ; & gt ; <nl> - & lt ; property name = & quot ; commentFormat & quot ; value = & quot ; This is expected & quot ; / & gt ; <nl> - & lt ; property name = & quot ; exceptionVariableName & quot ; value = & quot ; myException & quot ; / & gt ; <nl> + & lt ; property name = & quot ; commentFormat & quot ; value = & quot ; This is expected & quot ; / & gt ; <nl> + & lt ; property name = & quot ; exceptionVariableName & quot ; value = & quot ; myException & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < p > <nl> @ @ - 372 , 42 + 372 , 42 @ @ switch ( a ) <nl> < / p > <nl> < source > <nl> try { <nl> - throw new RuntimeException ( ) ; <nl> + throw new RuntimeException ( ) ; <nl> } catch ( RuntimeException e ) { <nl> - / / This is expected <nl> + / / This is expected <nl> } <nl> . . . <nl> try { <nl> - throw new RuntimeException ( ) ; <nl> + throw new RuntimeException ( ) ; <nl> } catch ( RuntimeException e ) { <nl> - / / This is expected <nl> + / / This is expected <nl> } <nl> . . . <nl> try { <nl> - throw new RuntimeException ( ) ; <nl> + throw new RuntimeException ( ) ; <nl> } catch ( RuntimeException e ) { <nl> - / / This is expected <nl> - / / some another comment <nl> + / / This is expected <nl> + / / some another comment <nl> } <nl> . . . <nl> try { <nl> - throw new RuntimeException ( ) ; <nl> + throw new RuntimeException ( ) ; <nl> } catch ( RuntimeException e ) { <nl> - / * This is expected * / <nl> + / * This is expected * / <nl> } <nl> . . . <nl> try { <nl> - throw new RuntimeException ( ) ; <nl> + throw new RuntimeException ( ) ; <nl> } catch ( RuntimeException e ) { <nl> - / * <nl> - * <nl> - * This is expected <nl> - * some another comment <nl> - * / <nl> + / * <nl> + * <nl> + * This is expected <nl> + * some another comment <nl> + * / <nl> } <nl> . . . <nl> try { <nl> - throw new RuntimeException ( ) ; <nl> + throw new RuntimeException ( ) ; <nl> } catch ( RuntimeException myException ) { <nl> <nl> } <nl> @ @ - 547 , 8 + 547 , 8 @ @ try { <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; LeftCurly & quot ; & gt ; <nl> - & lt ; property name = & quot ; option & quot ; value = & quot ; nl & quot ; / & gt ; <nl> - & lt ; property name = & quot ; tokens & quot ; value = & quot ; CLASS _ DEF , INTERFACE _ DEF & quot ; / & gt ; <nl> + & lt ; property name = & quot ; option & quot ; value = & quot ; nl & quot ; / & gt ; <nl> + & lt ; property name = & quot ; tokens & quot ; value = & quot ; CLASS _ DEF , INTERFACE _ DEF & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < p > <nl> @ @ - 556 , 7 + 556 , 7 @ @ try { <nl> < / p > <nl> < source > <nl> & lt ; module name = " LeftCurly " & gt ; <nl> - & lt ; property name = " ignoreEnums " value = " false " / & gt ; <nl> + & lt ; property name = " ignoreEnums " value = " false " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < / subsection > <nl> @ @ - 676 , 7 + 676 , 7 @ @ try { <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; NeedBraces & quot ; & gt ; <nl> - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ IF , LITERAL _ ELSE & quot ; / & gt ; <nl> + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ IF , LITERAL _ ELSE & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> @ @ - 686 , 7 + 686 , 7 @ @ try { <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; NeedBraces & quot ; & gt ; <nl> - & lt ; property name = & quot ; allowSingleLineStatement & quot ; value = & quot ; true & quot ; / & gt ; <nl> + & lt ; property name = & quot ; allowSingleLineStatement & quot ; value = & quot ; true & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> @ @ - 706 , 8 + 706 , 8 @ @ for ( int i = 0 ; ; ) this . notify ( ) ; / / OK <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; NeedBraces & quot ; & gt ; <nl> - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ CASE , LITERAL _ DEFAULT & quot ; / & gt ; <nl> - & lt ; property name = & quot ; allowSingleLineStatement & quot ; value = & quot ; true & quot ; / & gt ; <nl> + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ CASE , LITERAL _ DEFAULT & quot ; / & gt ; <nl> + & lt ; property name = & quot ; allowSingleLineStatement & quot ; value = & quot ; true & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> @ @ - 716 , 9 + 716 , 9 @ @ for ( int i = 0 ; ; ) this . notify ( ) ; / / OK <nl> < / p > <nl> < source > <nl> switch ( num ) { <nl> - case 1 : counter + + ; break ; / / OK <nl> - case 6 : counter + = 10 ; break ; / / OK <nl> - default : counter = 100 ; break ; / / OK <nl> + case 1 : counter + + ; break ; / / OK <nl> + case 6 : counter + = 10 ; break ; / / OK <nl> + default : counter = 100 ; break ; / / OK <nl> } <nl> < / source > <nl> < p > <nl> @ @ - 726 , 7 + 726 , 7 @ @ switch ( num ) { <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; NeedBraces & quot ; & gt ; <nl> - & lt ; property name = & quot ; allowEmptyLoopBody & quot ; value = & quot ; true & quot ; / & gt ; <nl> + & lt ; property name = & quot ; allowEmptyLoopBody & quot ; value = & quot ; true & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> @ @ - 875 , 8 + 875 , 8 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; RightCurly & quot ; & gt ; <nl> - & lt ; property name = & quot ; option & quot ; value = & quot ; alone & quot ; / & gt ; <nl> - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ ELSE , METHOD _ DEF & quot ; / & gt ; <nl> + & lt ; property name = & quot ; option & quot ; value = & quot ; alone & quot ; / & gt ; <nl> + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ ELSE , METHOD _ DEF & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < / subsection >
NEAREST DIFF (one line): diff - - git a / wercker . yml b / wercker . yml <nl> index 2bb6f13 . . f17c486 100644 <nl> - - - a / wercker . yml <nl> + + + b / wercker . yml <nl> @ @ - 99 , 14 + 99 , 14 @ @ build : <nl> echo " build is skipped . . . " <nl> fi <nl> <nl> - - script : <nl> - name : NoErrorTest - sevntu - checks <nl> - code : | <nl> - if [ [ $ SKIP _ CI = = ' false ' ] ] ; then <nl> - . / . ci / wercker . sh no - error - sevntu - checks <nl> - else <nl> - echo " build is skipped . . . " <nl> - fi <nl> + # - script : <nl> + # name : NoErrorTest - sevntu - checks <nl> + # code : | <nl> + # if [ [ $ SKIP _ CI = = ' false ' ] ] ; then <nl> + # . / . ci / wercker . sh no - error - sevntu - checks <nl> + # else <nl> + # echo " build is skipped . . . " <nl> + # fi <nl> <nl> - script : <nl> name : NoExceptiontest - Apache Struts

TEST DIFF:
diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml 
 index 52c55b4 . . cb20e72 100644 
 - - - a / src / xdocs / config _ blocks . xml 
 + + + b / src / xdocs / config _ blocks . xml 
 @ @ - 39 , 11 + 39 , 11 @ @ 
 < source > 
 public void guessTheOutput ( ) 
 { 
 - int whichIsWhich = 0 ; 
 - { 
 - int whichIsWhich = 2 ; 
 - } 
 - System . out . println ( " value = " + whichIsWhich ) ; 
 + int whichIsWhich = 0 ; 
 + { 
 + int whichIsWhich = 2 ; 
 + } 
 + System . out . println ( " value = " + whichIsWhich ) ; 
 } 
 < / source > 
 
 @ @ - 51 , 7 + 51 , 7 @ @ public void guessTheOutput ( ) 
 < source > 
 / / if ( conditionThatIsNotUsedAnyLonger ) 
 { 
 - System . out . println ( " unconditional " ) ; 
 + System . out . println ( " unconditional " ) ; 
 } 
 < / source > 
 
 @ @ - 65 , 26 + 65 , 26 @ @ public void guessTheOutput ( ) 
 < source > 
 switch ( a ) 
 { 
 - case 0 : 
 - / / Never OK , break outside block 
 - { 
 - x = 1 ; 
 - } 
 - break ; 
 - case 1 : 
 - / / Never OK , statement outside block 
 - System . out . println ( " Hello " ) ; 
 - { 
 - x = 2 ; 
 - break ; 
 - } 
 - case 1 : 
 - / / OK if allowInSwitchCase is true 
 - { 
 - System . out . println ( " Hello " ) ; 
 - x = 2 ; 
 - break ; 
 - } 
 + case 0 : 
 + / / Never OK , break outside block 
 + { 
 + x = 1 ; 
 + } 
 + break ; 
 + case 1 : 
 + / / Never OK , statement outside block 
 + System . out . println ( " Hello " ) ; 
 + { 
 + x = 2 ; 
 + break ; 
 + } 
 + case 1 : 
 + / / OK if allowInSwitchCase is true 
 + { 
 + System . out . println ( " Hello " ) ; 
 + x = 2 ; 
 + break ; 
 + } 
 } 
 < / source > 
 < / subsection > 
 @ @ - 157 , 12 + 157 , 12 @ @ switch ( a ) 
 
 < p > Sequential blocks won ' t be checked . Also , no violations for fallthrough : < / p > 
 < source > 
 - switch ( a ) { 
 - case 1 : / / no violation 
 - case 2 : / / no violation 
 - case 3 : someMethod ( ) ; { } / / no violation 
 - default : break ; 
 - } 
 + switch ( a ) { 
 + case 1 : / / no violation 
 + case 2 : / / no violation 
 + case 3 : someMethod ( ) ; { } / / no violation 
 + default : break ; 
 + } 
 < / source > 
 
 < p > 
 @ @ - 173 , 15 + 173 , 15 @ @ switch ( a ) 
 < p > Configuration : < / p > 
 < source > 
 & lt ; module name = & quot ; EmptyBlock & quot ; & gt ; 
 - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ DEFAULT & quot ; / & gt ; 
 + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ DEFAULT & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < p > Result : < / p > 
 < source > 
 - switch ( a ) { 
 - default : / / no violation for " default : " as empty block belong to " case 1 : " 
 - case 1 : { } 
 - } 
 + switch ( a ) { 
 + default : / / no violation for " default : " as empty block belong to " case 1 : " 
 + case 1 : { } 
 + } 
 < / source > 
 < / subsection > 
 
 @ @ - 253 , 8 + 253 , 8 @ @ switch ( a ) 
 < / p > 
 < source > 
 & lt ; module name = & quot ; EmptyBlock & quot ; & gt ; 
 - & lt ; property name = & quot ; option & quot ; value = & quot ; text & quot ; / & gt ; 
 - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ TRY & quot ; / & gt ; 
 + & lt ; property name = & quot ; option & quot ; value = & quot ; text & quot ; / & gt ; 
 + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ TRY & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < / subsection > 
 @ @ - 344 , 7 + 344 , 7 @ @ switch ( a ) 
 < / p > 
 < source > 
 & lt ; module name = & quot ; EmptyCatchBlock & quot ; & gt ; 
 - & lt ; property name = & quot ; exceptionVariableName & quot ; value = & quot ; expected | ignore & quot ; / & gt ; 
 + & lt ; property name = & quot ; exceptionVariableName & quot ; value = & quot ; expected | ignore & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < p > 
 @ @ - 353 , 7 + 353 , 7 @ @ switch ( a ) 
 < / p > 
 < source > 
 & lt ; module name = & quot ; EmptyCatchBlock & quot ; & gt ; 
 - & lt ; property name = & quot ; commentFormat & quot ; value = & quot ; This is expected & quot ; / & gt ; 
 + & lt ; property name = & quot ; commentFormat & quot ; value = & quot ; This is expected & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < p > 
 @ @ - 363 , 8 + 363 , 8 @ @ switch ( a ) 
 < / p > 
 < source > 
 & lt ; module name = & quot ; EmptyCatchBlock & quot ; & gt ; 
 - & lt ; property name = & quot ; commentFormat & quot ; value = & quot ; This is expected & quot ; / & gt ; 
 - & lt ; property name = & quot ; exceptionVariableName & quot ; value = & quot ; myException & quot ; / & gt ; 
 + & lt ; property name = & quot ; commentFormat & quot ; value = & quot ; This is expected & quot ; / & gt ; 
 + & lt ; property name = & quot ; exceptionVariableName & quot ; value = & quot ; myException & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < p > 
 @ @ - 372 , 42 + 372 , 42 @ @ switch ( a ) 
 < / p > 
 < source > 
 try { 
 - throw new RuntimeException ( ) ; 
 + throw new RuntimeException ( ) ; 
 } catch ( RuntimeException e ) { 
 - / / This is expected 
 + / / This is expected 
 } 
 . . . 
 try { 
 - throw new RuntimeException ( ) ; 
 + throw new RuntimeException ( ) ; 
 } catch ( RuntimeException e ) { 
 - / / This is expected 
 + / / This is expected 
 } 
 . . . 
 try { 
 - throw new RuntimeException ( ) ; 
 + throw new RuntimeException ( ) ; 
 } catch ( RuntimeException e ) { 
 - / / This is expected 
 - / / some another comment 
 + / / This is expected 
 + / / some another comment 
 } 
 . . . 
 try { 
 - throw new RuntimeException ( ) ; 
 + throw new RuntimeException ( ) ; 
 } catch ( RuntimeException e ) { 
 - / * This is expected * / 
 + / * This is expected * / 
 } 
 . . . 
 try { 
 - throw new RuntimeException ( ) ; 
 + throw new RuntimeException ( ) ; 
 } catch ( RuntimeException e ) { 
 - / * 
 - * 
 - * This is expected 
 - * some another comment 
 - * / 
 + / * 
 + * 
 + * This is expected 
 + * some another comment 
 + * / 
 } 
 . . . 
 try { 
 - throw new RuntimeException ( ) ; 
 + throw new RuntimeException ( ) ; 
 } catch ( RuntimeException myException ) { 
 
 } 
 @ @ - 547 , 8 + 547 , 8 @ @ try { 
 < / p > 
 < source > 
 & lt ; module name = & quot ; LeftCurly & quot ; & gt ; 
 - & lt ; property name = & quot ; option & quot ; value = & quot ; nl & quot ; / & gt ; 
 - & lt ; property name = & quot ; tokens & quot ; value = & quot ; CLASS _ DEF , INTERFACE _ DEF & quot ; / & gt ; 
 + & lt ; property name = & quot ; option & quot ; value = & quot ; nl & quot ; / & gt ; 
 + & lt ; property name = & quot ; tokens & quot ; value = & quot ; CLASS _ DEF , INTERFACE _ DEF & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < p > 
 @ @ - 556 , 7 + 556 , 7 @ @ try { 
 < / p > 
 < source > 
 & lt ; module name = " LeftCurly " & gt ; 
 - & lt ; property name = " ignoreEnums " value = " false " / & gt ; 
 + & lt ; property name = " ignoreEnums " value = " false " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < / subsection > 
 @ @ - 676 , 7 + 676 , 7 @ @ try { 
 < / p > 
 < source > 
 & lt ; module name = & quot ; NeedBraces & quot ; & gt ; 
 - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ IF , LITERAL _ ELSE & quot ; / & gt ; 
 + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ IF , LITERAL _ ELSE & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 
 @ @ - 686 , 7 + 686 , 7 @ @ try { 
 < / p > 
 < source > 
 & lt ; module name = & quot ; NeedBraces & quot ; & gt ; 
 - & lt ; property name = & quot ; allowSingleLineStatement & quot ; value = & quot ; true & quot ; / & gt ; 
 + & lt ; property name = & quot ; allowSingleLineStatement & quot ; value = & quot ; true & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 
 @ @ - 706 , 8 + 706 , 8 @ @ for ( int i = 0 ; ; ) this . notify ( ) ; / / OK 
 < / p > 
 < source > 
 & lt ; module name = & quot ; NeedBraces & quot ; & gt ; 
 - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ CASE , LITERAL _ DEFAULT & quot ; / & gt ; 
 - & lt ; property name = & quot ; allowSingleLineStatement & quot ; value = & quot ; true & quot ; / & gt ; 
 + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ CASE , LITERAL _ DEFAULT & quot ; / & gt ; 
 + & lt ; property name = & quot ; allowSingleLineStatement & quot ; value = & quot ; true & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 
 @ @ - 716 , 9 + 716 , 9 @ @ for ( int i = 0 ; ; ) this . notify ( ) ; / / OK 
 < / p > 
 < source > 
 switch ( num ) { 
 - case 1 : counter + + ; break ; / / OK 
 - case 6 : counter + = 10 ; break ; / / OK 
 - default : counter = 100 ; break ; / / OK 
 + case 1 : counter + + ; break ; / / OK 
 + case 6 : counter + = 10 ; break ; / / OK 
 + default : counter = 100 ; break ; / / OK 
 } 
 < / source > 
 < p > 
 @ @ - 726 , 7 + 726 , 7 @ @ switch ( num ) { 
 < / p > 
 < source > 
 & lt ; module name = & quot ; NeedBraces & quot ; & gt ; 
 - & lt ; property name = & quot ; allowEmptyLoopBody & quot ; value = & quot ; true & quot ; / & gt ; 
 + & lt ; property name = & quot ; allowEmptyLoopBody & quot ; value = & quot ; true & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 
 @ @ - 875 , 8 + 875 , 8 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK 
 < / p > 
 < source > 
 & lt ; module name = & quot ; RightCurly & quot ; & gt ; 
 - & lt ; property name = & quot ; option & quot ; value = & quot ; alone & quot ; / & gt ; 
 - & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ ELSE , METHOD _ DEF & quot ; / & gt ; 
 + & lt ; property name = & quot ; option & quot ; value = & quot ; alone & quot ; / & gt ; 
 + & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ ELSE , METHOD _ DEF & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < / subsection >

NEAREST DIFF:
diff - - git a / wercker . yml b / wercker . yml 
 index 2bb6f13 . . f17c486 100644 
 - - - a / wercker . yml 
 + + + b / wercker . yml 
 @ @ - 99 , 14 + 99 , 14 @ @ build : 
 echo " build is skipped . . . " 
 fi 
 
 - - script : 
 - name : NoErrorTest - sevntu - checks 
 - code : | 
 - if [ [ $ SKIP _ CI = = ' false ' ] ] ; then 
 - . / . ci / wercker . sh no - error - sevntu - checks 
 - else 
 - echo " build is skipped . . . " 
 - fi 
 + # - script : 
 + # name : NoErrorTest - sevntu - checks 
 + # code : | 
 + # if [ [ $ SKIP _ CI = = ' false ' ] ] ; then 
 + # . / . ci / wercker . sh no - error - sevntu - checks 
 + # else 
 + # echo " build is skipped . . . " 
 + # fi 
 
 - script : 
 name : NoExceptiontest - Apache Struts
