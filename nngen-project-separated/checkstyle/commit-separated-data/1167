BLEU SCORE: 0.027196652721749117

TEST MSG: Issue # 3090 : Fix wrong enforcement of same brace policy for LITERAL _ DO in RightCurlyCheck
GENERATED MSG: RightCurly . Force line break before ' } ' in case SAME option . # 250

TEST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / RightCurlyTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / RightCurlyTest . java <nl> index 861ecc9 . . 8f1cddd 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / RightCurlyTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / RightCurlyTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . google . checkstyle . test . chapter4formatting . rule412nonemptyblocks ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . blocks . RightCurlyCheck . MSG _ KEY _ LINE _ ALONE ; <nl> import static com . puppycrawl . tools . checkstyle . checks . blocks . RightCurlyCheck . MSG _ KEY _ LINE _ NEW ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . blocks . RightCurlyCheck . MSG _ KEY _ LINE _ SAME ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> @ @ - 71 , 4 + 72 , 19 @ @ public class RightCurlyTest extends BaseCheckTestSupport { <nl> final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; <nl> verify ( newCheckConfig , filePath , expected , warnList ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testRightCurlySameAndLiteralDo ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( RightCurlyCheck . class ) ; <nl> + checkConfig . addAttribute ( " option " , RightCurlyOption . SAME . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " tokens " , " LITERAL _ DO " ) ; <nl> + final String [ ] expected = { <nl> + " 62 : 9 : " + getCheckMessage ( RightCurlyCheck . class , MSG _ KEY _ LINE _ SAME , " } " , 9 ) , <nl> + " 67 : 13 : " + getCheckMessage ( RightCurlyCheck . class , MSG _ KEY _ LINE _ SAME , " } " , 13 ) , <nl> + " 83 : 9 : " + getCheckMessage ( RightCurlyCheck . class , MSG _ KEY _ LINE _ SAME , " } " , 9 ) , <nl> + } ; <nl> + final String filePath = getPath ( " InputRightCurlyDoWhile . java " ) ; <nl> + final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; <nl> + verify ( checkConfig , filePath , expected , warnList ) ; <nl> + } <nl> } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / InputRightCurlyDoWhile . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / InputRightCurlyDoWhile . java <nl> new file mode 100644 <nl> index 0000000 . . abca4a1 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / InputRightCurlyDoWhile . java <nl> @ @ - 0 , 0 + 1 , 93 @ @ <nl> + package com . google . checkstyle . test . chapter4formatting . rule412nonemptyblocks ; <nl> + <nl> + import java . util . Scanner ; <nl> + <nl> + / * * <nl> + * Test input for GitHub issue # 3090 . <nl> + * https : / / github . com / checkstyle / checkstyle / issues / 3090 <nl> + * / <nl> + public class InputRightCurlyDoWhile { <nl> + <nl> + public void foo1 ( ) { <nl> + do { <nl> + } while ( true ) ; <nl> + } <nl> + <nl> + public void foo2 ( ) { <nl> + int i = 1 ; <nl> + while ( i < 5 ) { <nl> + System . out . print ( i + " " ) ; <nl> + i + + ; <nl> + } <nl> + } <nl> + <nl> + public void foo3 ( ) { <nl> + int i = 1 ; <nl> + do { <nl> + i + + ; <nl> + System . out . print ( i + " " ) ; <nl> + } while ( i < 5 ) ; <nl> + } <nl> + <nl> + public void foo4 ( ) { <nl> + int prog , user ; <nl> + prog = ( int ) ( Math . random ( ) * 10 ) + 1 ; <nl> + Scanner input = new Scanner ( System . in ) ; <nl> + if ( input . hasNextInt ( ) ) { <nl> + do { <nl> + user = input . nextInt ( ) ; <nl> + if ( user = = prog ) { <nl> + System . out . println ( " Good ! " ) ; <nl> + } else { <nl> + if ( user > 0 & & user < = 10 ) { <nl> + System . out . print ( " Bad ! " ) ; <nl> + if ( prog < user ) { <nl> + System . out . println ( " My number is less than yours . " ) ; <nl> + } else { <nl> + System . out . println ( " My number is greater than yours . " ) ; <nl> + } <nl> + } else { <nl> + System . out . println ( " Error ! " ) ; <nl> + } <nl> + } <nl> + } while ( user ! = prog ) ; <nl> + } else { <nl> + System . out . println ( " Error ! " ) ; <nl> + } <nl> + System . out . println ( " Goodbye ! " ) ; <nl> + } <nl> + <nl> + public void foo5 ( ) { <nl> + do { <nl> + } / / warn <nl> + while ( true ) ; <nl> + } <nl> + <nl> + public void foo6 ( ) { <nl> + do { } / / warn <nl> + while ( true ) ; <nl> + } <nl> + <nl> + public void foo7 ( ) { <nl> + do <nl> + { <nl> + <nl> + } while ( true ) ; <nl> + } <nl> + <nl> + public void foo8 ( ) { <nl> + do <nl> + <nl> + { <nl> + <nl> + } / / warn <nl> + <nl> + while <nl> + <nl> + ( true ) ; <nl> + } <nl> + <nl> + public void foo9 ( ) { <nl> + do { } while ( true ) ; <nl> + } <nl> + } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index e620742 . . bd5fdbd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 365 , 9 + 365 , 14 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> rcurly = lcurly . getLastChild ( ) ; <nl> nextToken = getNextToken ( ast ) ; <nl> break ; <nl> + case TokenTypes . LITERAL _ DO : <nl> + nextToken = ast . findFirstToken ( TokenTypes . DO _ WHILE ) ; <nl> + lcurly = ast . findFirstToken ( TokenTypes . SLIST ) ; <nl> + rcurly = lcurly . getLastChild ( ) ; <nl> + break ; <nl> default : <nl> / / ATTENTION ! We have default here , but we expect case TokenTypes . METHOD _ DEF , <nl> - / / TokenTypes . LITERAL _ FOR , TokenTypes . LITERAL _ WHILE , TokenTypes . LITERAL _ DO only . <nl> + / / TokenTypes . LITERAL _ FOR , TokenTypes . LITERAL _ WHILE , only . <nl> / / It has been done to improve coverage to 100 % . I couldn ' t replace it with <nl> / / if - else - if block because code was ugly and didn ' t pass pmd check . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties <nl> index 67602fc . . 2389f1b 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties <nl> @ @ - 9 , 7 + 9 , 7 @ @ line . new = ' ' { 0 } ' ' at column { 1 } should be on a new line . <nl> line . previous = ' ' { 0 } ' ' at column { 1 } should be on the previous line . <nl> line . same = ' ' { 0 } ' ' at column { 1 } should be on the same line as the next part of \ <nl> a multi - block statement ( one that directly contains multiple blocks : \ <nl> - if / else - if / else or try / catch / finally ) . <nl> + if / else - if / else , do / while or try / catch / finally ) . <nl> <nl> needBraces = ' ' { 0 } ' ' construct must use ' ' ' { } ' ' ' s . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties <nl> index 1b7d645 . . b5643b4 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties <nl> @ @ - 8 , 8 + 8 , 8 @ @ line . alone = ' ' { 0 } ' ' in Spalten { 1 } sollte allein in der Zeile stehen . <nl> line . new = ' ' { 0 } ' ' in Spalten { 1 } sollte in einer neuen Zeile stehen . <nl> line . previous = ' ' { 0 } ' ' in Spalten { 1 } sollte in der vorhergehenden Zeile stehen . <nl> line . same = ' ' { 0 } ' ' in Spalte { 1 } auf der gleichen Linie wie der n ä chste Teil einer \ <nl> - Multi - Block - Anweisung ( eine , die direkt mehrere Bl ö cke enth ä lt : if / else - if / else oder \ <nl> - try / catch / finally ) sein sollte . <nl> + Multi - Block - Anweisung ( eine , die direkt mehrere Bl ö cke enth ä lt : if / else - if / else , \ <nl> + do / while oder try / catch / finally ) sein sollte . <nl> <nl> needBraces = Das ' ' { 0 } ' ' - Konstrukt muss ' ' ' { } ' ' ' benutzen . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties <nl> index c0228c3 . . c53cf8a 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties <nl> @ @ - 9 , 7 + 9 , 7 @ @ line . new = ' ' { 0 } ' ' en la columna { 1 } deber í a estar en una nueva l í nea . <nl> line . previous = ' ' { 0 } ' ' en la columna { 1 } deber í a estar en la l í nea anterior . <nl> line . same = ' ' { 0 } ' ' en la columna { 1 } debe estar en la misma l í nea que la siguiente parte \ <nl> de una declaraci ó n de bloques m ú ltiples ( uno que contiene directamente varios bloques : \ <nl> - if / else - if / else o try / catch / finally ) . <nl> + if / else - if / else , do / while o try / catch / finally ) . <nl> <nl> needBraces = La construcci ó n ' ' { 0 } ' ' debe usar ' ' ' { } ' ' ( llaves ) . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties <nl> index 60cb24e . . 1167353 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties <nl> @ @ - 8 , 8 + 8 , 8 @ @ line . alone = ' ' { 0 } ' ' sarakkeen { 1 } pit ä ä olla yksin ä ä n rivill ä . <nl> line . new = ' ' { 0 } ' ' sarakkeen { 1 } pit ä ä olla uudella rivill ä . <nl> line . previous = ' ' { 0 } ' ' sarakkeen { 1 } pit ä ä olla edellisell ä rivill ä . <nl> line . same = ' ' { 0 } ' ' sarakkeessa { 1 } pit ä isi olla samalla rivill ä kuin seuraava osa monen \ <nl> - lohkon toteamus ( joka v ä litt ö m ä sti sis ä lt ä ä useita lohkoja : if / else - if / else tai \ <nl> - try / catch / finally ) . <nl> + lohkon toteamus ( joka v ä litt ö m ä sti sis ä lt ä ä useita lohkoja : if / else - if / else , \ <nl> + do / while tai try / catch / finally ) . <nl> <nl> needBraces = ' ' { 0 } ' ' - rakenteen pit ä ä k ä ytt ä ä ' ' ' { } ' ' : a . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties <nl> index defb123 . . be47d0d 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties <nl> @ @ - 9 , 7 + 9 , 7 @ @ line . new = ' ' { 0 } ' ' à la colonne { 1 } devrait ê tre sur une nouvelle ligne . <nl> line . previous = ' ' { 0 } ' ' à la colonne { 1 } devrait ê tre sur la ligne pr é c é dente . <nl> line . same = ' ' { 0 } ' ' dans la colonne { 1 } devrait ê tre sur la m ê me ligne que la prochaine partie \ <nl> d ' une instruction multi - bloc ( celui qui contient directement plusieurs blocs : \ <nl> - if / else - if / else ou try / catch / finally ) . <nl> + if / else - if / else , do / while ou try / catch / finally ) . <nl> <nl> needBraces = L ' ' instruction ' ' { 0 } ' ' devrait utiliser des accolades ( ' ' ' { ' ' ' et ' ' ' } ' ' ' ) . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties <nl> index a6d433b . . 34f9f96 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties <nl> @ @ - 8 , 7 + 8 , 7 @ @ line . alone = ' ' { 0 } ' ' 列 { 1 } に は 、 行 の 一 人 で あ る べ き で す 。 <nl> line . new = ' ' { 0 } ' ' 列 に { 1 } 新 し い 行 に す る 必 要 が あ り ま す 。 <nl> line . previous = ' ' { 0 } ' ' 列 に { 1 } 前 の 行 に す る 必 要 が あ り ま す 。 <nl> line . same = ' ' { 0 } ' ' 欄 で { 1 } は マ ル チ ブ ロ ッ ク 文 を 直 接 複 数 の ブ ロ ッ ク が 含 ま れ て い ま す \ <nl> - ( の 次 の 部 分 と 同 じ 行 に あ る べ き 欄 で ： if / else - if / else ま た は try / catch / finally ) . <nl> + ( の 次 の 部 分 と 同 じ 行 に あ る べ き 欄 で ： if / else - if / else , do / while ま た は try / catch / finally ) . <nl> <nl> needBraces = ' ' { 0 } ' ' 文 で は ' ' ' { } ' ' ' を 使 用 し な け れ ば な り ま せ ん 。 <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties <nl> index f600d87 . . 520a005 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties <nl> @ @ - 8 , 8 + 8 , 8 @ @ line . alone = ' ' { 0 } ' ' na coluna { 1 } deve estar sozinho numa linha . <nl> line . new = ' ' { 0 } ' ' na coluna { 1 } deve estar numa nova linha . <nl> line . previous = ' ' { 0 } ' ' na coluna { 1 } deve estar na linha anterior . <nl> line . same = ' ' { 0 } ' ' na coluna { 1 } deve estar na mesma linha que a pr ó xima parte de uma \ <nl> - instru ç ã o multi - bloco ( aquele que cont é m directamente v á rios blocos : if / else - if / else ou \ <nl> - try / catch / finally ) . <nl> + instru ç ã o multi - bloco ( aquele que cont é m directamente v á rios blocos : if / else - if / else \ <nl> + do / while ou try / catch / finally ) . <nl> <nl> needBraces = A estrutura sint á ctica ' ' { 0 } ' ' deve utilizar ' ' ' { } ' ' ' s . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties <nl> index 5a331b7 . . 5ba5c29 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties <nl> @ @ - 10 , 8 + 10 , 8 @ @ line . alone = ' ' { 0 } ' ' s ü tun { 1 } bir ç izgi ü zerinde yaln ı z olmal ı d ı r . <nl> line . new = ' ' { 0 } ' ' s ü tun { 1 } yeni bir sat ı rda olmal ı d ı r . <nl> line . previous = ' ' { 0 } ' ' s ü tun { 1 } ö nceki sat ı rda olmal ı d ı r . <nl> line . same = ' ' { 0 } ' ' { 1 } multi - blok deyiminin sonraki par ç as ı olarak ayn ı sat ı rda olmal ı d ı r \ <nl> - s ü tunda ( do ğ rudan ç oklu bloklar ı i ç eren tek bir : if / else - if / else veya ba ş ka bir \ <nl> - try / catch / finally ) . <nl> + s ü tunda ( do ğ rudan ç oklu bloklar ı i ç eren tek bir : if / else - if / else , do / while \ <nl> + veya ba ş ka bir try / catch / finally ) . <nl> <nl> needBraces = ' ' { 0 } ' ' yap ı s ı s ü sl ü parantezler ( ' ' ' { } ' ' ' ) kullanmal ı . <nl> <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties <nl> index 4ed7700 . . b439211 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties <nl> @ @ - 8 , 7 + 8 , 7 @ @ line . alone = 第 { 1 } 个 字 符 ' ' { 0 } ' ' 应 独 占 一 行 。 <nl> line . new = 第 { 1 } 个 字 符 ' ' { 0 } ' ' 应 位 于 新 行 。 <nl> line . previous = 第 { 1 } 个 字 符 ' ' { 0 } ' ' 应 位 于 前 一 行 。 <nl> line . same = 第 { 1 } 个 字 符 ' ' { 0 } ' ' 应 该 与 当 前 多 代 码 块 的 下 一 部 分 \ <nl> - （ if / else - if / else 或 try / catch / finally ） 位 于 同 一 行 。 <nl> + （ if / else - if / else , do / while 或 try / catch / finally ） 位 于 同 一 行 。 <nl> <nl> needBraces = ' ' { 0 } ' ' 结 构 必 须 使 用 大 括 号 ' ' ' { } ' ' ' 。 <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> index 3267325 . . 07b61d0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> @ @ - 282 , 4 + 282 , 16 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { <nl> <nl> verify ( checkConfig , getPath ( " InputRightCurly . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testRightCurlySameAndLiteralDo ( ) throws Exception { <nl> + checkConfig . addAttribute ( " option " , RightCurlyOption . SAME . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " tokens " , " LITERAL _ DO " ) ; <nl> + final String [ ] expected = { <nl> + " 62 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ SAME , " } " , 9 ) , <nl> + " 67 : 13 : " + getCheckMessage ( MSG _ KEY _ LINE _ SAME , " } " , 13 ) , <nl> + " 83 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ SAME , " } " , 9 ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputRightCurlyDoWhile . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlyDoWhile . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlyDoWhile . java <nl> new file mode 100644 <nl> index 0000000 . . b9019a7 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlyDoWhile . java <nl> @ @ - 0 , 0 + 1 , 94 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . blocks ; <nl> + <nl> + import java . util . Scanner ; <nl> + <nl> + / * * <nl> + * Test input for GitHub issue # 3090 . <nl> + * https : / / github . com / checkstyle / checkstyle / issues / 3090 <nl> + * / <nl> + public class InputRightCurlyDoWhile { <nl> + <nl> + public void foo1 ( ) { <nl> + do { <nl> + } while ( true ) ; <nl> + } <nl> + <nl> + public void foo2 ( ) { <nl> + int i = 1 ; <nl> + while ( i < 5 ) { <nl> + System . out . print ( i + " " ) ; <nl> + i + + ; <nl> + } <nl> + } <nl> + <nl> + public void foo3 ( ) { <nl> + int i = 1 ; <nl> + do { <nl> + i + + ; <nl> + System . out . print ( i + " " ) ; <nl> + } while ( i < 5 ) ; <nl> + } <nl> + <nl> + public void foo4 ( ) { <nl> + int prog , user ; <nl> + prog = ( int ) ( Math . random ( ) * 10 ) + 1 ; <nl> + Scanner input = new Scanner ( System . in ) ; <nl> + if ( input . hasNextInt ( ) ) { <nl> + do { <nl> + user = input . nextInt ( ) ; <nl> + if ( user = = prog ) { <nl> + System . out . println ( " Good ! " ) ; <nl> + } else { <nl> + if ( user > 0 & & user < = 10 ) { <nl> + System . out . print ( " Bad ! " ) ; <nl> + if ( prog < user ) { <nl> + System . out . println ( " My number is less than yours . " ) ; <nl> + } else { <nl> + System . out . println ( " My number is greater than yours . " ) ; <nl> + } <nl> + } else { <nl> + System . out . println ( " Error ! " ) ; <nl> + } <nl> + } <nl> + } while ( user ! = prog ) ; <nl> + } else { <nl> + System . out . println ( " Error ! " ) ; <nl> + } <nl> + System . out . println ( " Goodbye ! " ) ; <nl> + } <nl> + <nl> + public void foo5 ( ) { <nl> + do { <nl> + } / / violation <nl> + while ( true ) ; <nl> + } <nl> + <nl> + public void foo6 ( ) { <nl> + do { } / / violation <nl> + while ( true ) ; <nl> + } <nl> + <nl> + public void foo7 ( ) { <nl> + do <nl> + { <nl> + <nl> + } while ( true ) ; <nl> + } <nl> + <nl> + public void foo8 ( ) { <nl> + do <nl> + <nl> + { <nl> + <nl> + } / / violation <nl> + <nl> + while <nl> + <nl> + ( true ) ; <nl> + } <nl> + <nl> + public void foo9 ( ) { <nl> + do { } while ( true ) ; <nl> + } <nl> + } <nl> +
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> index 757eb6c . . 3210410 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> @ @ - 110 , 6 + 110 , 7 @ @ public abstract class AbstractTypeAwareCheck extends Check <nl> TokenTypes . PACKAGE _ DEF , <nl> TokenTypes . IMPORT , <nl> TokenTypes . CLASS _ DEF , <nl> + TokenTypes . INTERFACE _ DEF , <nl> TokenTypes . ENUM _ DEF , <nl> } ; <nl> } <nl> @ @ - 136 , 6 + 137 , 7 @ @ public abstract class AbstractTypeAwareCheck extends Check <nl> processImport ( aAST ) ; <nl> } <nl> else if ( ( aAST . getType ( ) = = TokenTypes . CLASS _ DEF ) <nl> + | | ( aAST . getType ( ) = = TokenTypes . INTERFACE _ DEF ) <nl> | | ( aAST . getType ( ) = = TokenTypes . ENUM _ DEF ) ) <nl> { <nl> processClass ( aAST ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RedundantThrowsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RedundantThrowsCheck . java <nl> index c3a1a58 . . 119f72c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RedundantThrowsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RedundantThrowsCheck . java <nl> @ @ - 83 , 6 + 83 , 7 @ @ public class RedundantThrowsCheck extends AbstractTypeAwareCheck <nl> TokenTypes . PACKAGE _ DEF , <nl> TokenTypes . IMPORT , <nl> TokenTypes . CLASS _ DEF , <nl> + TokenTypes . INTERFACE _ DEF , <nl> TokenTypes . ENUM _ DEF , <nl> TokenTypes . METHOD _ DEF , <nl> TokenTypes . CTOR _ DEF , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 1c2693e . . 1191359 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 233 , 6 + 233 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck <nl> { <nl> return new int [ ] { TokenTypes . PACKAGE _ DEF , TokenTypes . IMPORT , <nl> TokenTypes . CLASS _ DEF , TokenTypes . ENUM _ DEF , <nl> + TokenTypes . INTERFACE _ DEF , <nl> TokenTypes . METHOD _ DEF , TokenTypes . CTOR _ DEF , <nl> TokenTypes . ANNOTATION _ FIELD _ DEF , <nl> } ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java <nl> index 79ed647 . . 28ae00f 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java <nl> @ @ - 45 , 4 + 45 , 19 @ @ public class TestGenerics < E extends java . lang . Exception , <nl> { <nl> } <nl> } <nl> + <nl> + / * * <nl> + * @ param < T > some parameter <nl> + * @ param < E2 > some exception parameter <nl> + * / <nl> + public interface InnerInterface < T , E2 extends Throwable > { <nl> + / * * <nl> + * Some javadoc . <nl> + * @ param t a parameter <nl> + * @ throws E2 in some case . <nl> + * @ return some string <nl> + * / <nl> + public abstract String doStuff ( T t ) throws E2 ; <nl> + } <nl> } <nl> +

TEST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / RightCurlyTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / RightCurlyTest . java 
 index 861ecc9 . . 8f1cddd 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / RightCurlyTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / RightCurlyTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . google . checkstyle . test . chapter4formatting . rule412nonemptyblocks ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . blocks . RightCurlyCheck . MSG _ KEY _ LINE _ ALONE ; 
 import static com . puppycrawl . tools . checkstyle . checks . blocks . RightCurlyCheck . MSG _ KEY _ LINE _ NEW ; 
 + import static com . puppycrawl . tools . checkstyle . checks . blocks . RightCurlyCheck . MSG _ KEY _ LINE _ SAME ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 @ @ - 71 , 4 + 72 , 19 @ @ public class RightCurlyTest extends BaseCheckTestSupport { 
 final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; 
 verify ( newCheckConfig , filePath , expected , warnList ) ; 
 } 
 + 
 + @ Test 
 + public void testRightCurlySameAndLiteralDo ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( RightCurlyCheck . class ) ; 
 + checkConfig . addAttribute ( " option " , RightCurlyOption . SAME . toString ( ) ) ; 
 + checkConfig . addAttribute ( " tokens " , " LITERAL _ DO " ) ; 
 + final String [ ] expected = { 
 + " 62 : 9 : " + getCheckMessage ( RightCurlyCheck . class , MSG _ KEY _ LINE _ SAME , " } " , 9 ) , 
 + " 67 : 13 : " + getCheckMessage ( RightCurlyCheck . class , MSG _ KEY _ LINE _ SAME , " } " , 13 ) , 
 + " 83 : 9 : " + getCheckMessage ( RightCurlyCheck . class , MSG _ KEY _ LINE _ SAME , " } " , 9 ) , 
 + } ; 
 + final String filePath = getPath ( " InputRightCurlyDoWhile . java " ) ; 
 + final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; 
 + verify ( checkConfig , filePath , expected , warnList ) ; 
 + } 
 } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / InputRightCurlyDoWhile . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / InputRightCurlyDoWhile . java 
 new file mode 100644 
 index 0000000 . . abca4a1 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule412nonemptyblocks / InputRightCurlyDoWhile . java 
 @ @ - 0 , 0 + 1 , 93 @ @ 
 + package com . google . checkstyle . test . chapter4formatting . rule412nonemptyblocks ; 
 + 
 + import java . util . Scanner ; 
 + 
 + / * * 
 + * Test input for GitHub issue # 3090 . 
 + * https : / / github . com / checkstyle / checkstyle / issues / 3090 
 + * / 
 + public class InputRightCurlyDoWhile { 
 + 
 + public void foo1 ( ) { 
 + do { 
 + } while ( true ) ; 
 + } 
 + 
 + public void foo2 ( ) { 
 + int i = 1 ; 
 + while ( i < 5 ) { 
 + System . out . print ( i + " " ) ; 
 + i + + ; 
 + } 
 + } 
 + 
 + public void foo3 ( ) { 
 + int i = 1 ; 
 + do { 
 + i + + ; 
 + System . out . print ( i + " " ) ; 
 + } while ( i < 5 ) ; 
 + } 
 + 
 + public void foo4 ( ) { 
 + int prog , user ; 
 + prog = ( int ) ( Math . random ( ) * 10 ) + 1 ; 
 + Scanner input = new Scanner ( System . in ) ; 
 + if ( input . hasNextInt ( ) ) { 
 + do { 
 + user = input . nextInt ( ) ; 
 + if ( user = = prog ) { 
 + System . out . println ( " Good ! " ) ; 
 + } else { 
 + if ( user > 0 & & user < = 10 ) { 
 + System . out . print ( " Bad ! " ) ; 
 + if ( prog < user ) { 
 + System . out . println ( " My number is less than yours . " ) ; 
 + } else { 
 + System . out . println ( " My number is greater than yours . " ) ; 
 + } 
 + } else { 
 + System . out . println ( " Error ! " ) ; 
 + } 
 + } 
 + } while ( user ! = prog ) ; 
 + } else { 
 + System . out . println ( " Error ! " ) ; 
 + } 
 + System . out . println ( " Goodbye ! " ) ; 
 + } 
 + 
 + public void foo5 ( ) { 
 + do { 
 + } / / warn 
 + while ( true ) ; 
 + } 
 + 
 + public void foo6 ( ) { 
 + do { } / / warn 
 + while ( true ) ; 
 + } 
 + 
 + public void foo7 ( ) { 
 + do 
 + { 
 + 
 + } while ( true ) ; 
 + } 
 + 
 + public void foo8 ( ) { 
 + do 
 + 
 + { 
 + 
 + } / / warn 
 + 
 + while 
 + 
 + ( true ) ; 
 + } 
 + 
 + public void foo9 ( ) { 
 + do { } while ( true ) ; 
 + } 
 + } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index e620742 . . bd5fdbd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 365 , 9 + 365 , 14 @ @ public class RightCurlyCheck extends AbstractCheck { 
 rcurly = lcurly . getLastChild ( ) ; 
 nextToken = getNextToken ( ast ) ; 
 break ; 
 + case TokenTypes . LITERAL _ DO : 
 + nextToken = ast . findFirstToken ( TokenTypes . DO _ WHILE ) ; 
 + lcurly = ast . findFirstToken ( TokenTypes . SLIST ) ; 
 + rcurly = lcurly . getLastChild ( ) ; 
 + break ; 
 default : 
 / / ATTENTION ! We have default here , but we expect case TokenTypes . METHOD _ DEF , 
 - / / TokenTypes . LITERAL _ FOR , TokenTypes . LITERAL _ WHILE , TokenTypes . LITERAL _ DO only . 
 + / / TokenTypes . LITERAL _ FOR , TokenTypes . LITERAL _ WHILE , only . 
 / / It has been done to improve coverage to 100 % . I couldn ' t replace it with 
 / / if - else - if block because code was ugly and didn ' t pass pmd check . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties 
 index 67602fc . . 2389f1b 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages . properties 
 @ @ - 9 , 7 + 9 , 7 @ @ line . new = ' ' { 0 } ' ' at column { 1 } should be on a new line . 
 line . previous = ' ' { 0 } ' ' at column { 1 } should be on the previous line . 
 line . same = ' ' { 0 } ' ' at column { 1 } should be on the same line as the next part of \ 
 a multi - block statement ( one that directly contains multiple blocks : \ 
 - if / else - if / else or try / catch / finally ) . 
 + if / else - if / else , do / while or try / catch / finally ) . 
 
 needBraces = ' ' { 0 } ' ' construct must use ' ' ' { } ' ' ' s . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties 
 index 1b7d645 . . b5643b4 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ de . properties 
 @ @ - 8 , 8 + 8 , 8 @ @ line . alone = ' ' { 0 } ' ' in Spalten { 1 } sollte allein in der Zeile stehen . 
 line . new = ' ' { 0 } ' ' in Spalten { 1 } sollte in einer neuen Zeile stehen . 
 line . previous = ' ' { 0 } ' ' in Spalten { 1 } sollte in der vorhergehenden Zeile stehen . 
 line . same = ' ' { 0 } ' ' in Spalte { 1 } auf der gleichen Linie wie der n ä chste Teil einer \ 
 - Multi - Block - Anweisung ( eine , die direkt mehrere Bl ö cke enth ä lt : if / else - if / else oder \ 
 - try / catch / finally ) sein sollte . 
 + Multi - Block - Anweisung ( eine , die direkt mehrere Bl ö cke enth ä lt : if / else - if / else , \ 
 + do / while oder try / catch / finally ) sein sollte . 
 
 needBraces = Das ' ' { 0 } ' ' - Konstrukt muss ' ' ' { } ' ' ' benutzen . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties 
 index c0228c3 . . c53cf8a 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ es . properties 
 @ @ - 9 , 7 + 9 , 7 @ @ line . new = ' ' { 0 } ' ' en la columna { 1 } deber í a estar en una nueva l í nea . 
 line . previous = ' ' { 0 } ' ' en la columna { 1 } deber í a estar en la l í nea anterior . 
 line . same = ' ' { 0 } ' ' en la columna { 1 } debe estar en la misma l í nea que la siguiente parte \ 
 de una declaraci ó n de bloques m ú ltiples ( uno que contiene directamente varios bloques : \ 
 - if / else - if / else o try / catch / finally ) . 
 + if / else - if / else , do / while o try / catch / finally ) . 
 
 needBraces = La construcci ó n ' ' { 0 } ' ' debe usar ' ' ' { } ' ' ( llaves ) . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties 
 index 60cb24e . . 1167353 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fi . properties 
 @ @ - 8 , 8 + 8 , 8 @ @ line . alone = ' ' { 0 } ' ' sarakkeen { 1 } pit ä ä olla yksin ä ä n rivill ä . 
 line . new = ' ' { 0 } ' ' sarakkeen { 1 } pit ä ä olla uudella rivill ä . 
 line . previous = ' ' { 0 } ' ' sarakkeen { 1 } pit ä ä olla edellisell ä rivill ä . 
 line . same = ' ' { 0 } ' ' sarakkeessa { 1 } pit ä isi olla samalla rivill ä kuin seuraava osa monen \ 
 - lohkon toteamus ( joka v ä litt ö m ä sti sis ä lt ä ä useita lohkoja : if / else - if / else tai \ 
 - try / catch / finally ) . 
 + lohkon toteamus ( joka v ä litt ö m ä sti sis ä lt ä ä useita lohkoja : if / else - if / else , \ 
 + do / while tai try / catch / finally ) . 
 
 needBraces = ' ' { 0 } ' ' - rakenteen pit ä ä k ä ytt ä ä ' ' ' { } ' ' : a . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties 
 index defb123 . . be47d0d 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ fr . properties 
 @ @ - 9 , 7 + 9 , 7 @ @ line . new = ' ' { 0 } ' ' à la colonne { 1 } devrait ê tre sur une nouvelle ligne . 
 line . previous = ' ' { 0 } ' ' à la colonne { 1 } devrait ê tre sur la ligne pr é c é dente . 
 line . same = ' ' { 0 } ' ' dans la colonne { 1 } devrait ê tre sur la m ê me ligne que la prochaine partie \ 
 d ' une instruction multi - bloc ( celui qui contient directement plusieurs blocs : \ 
 - if / else - if / else ou try / catch / finally ) . 
 + if / else - if / else , do / while ou try / catch / finally ) . 
 
 needBraces = L ' ' instruction ' ' { 0 } ' ' devrait utiliser des accolades ( ' ' ' { ' ' ' et ' ' ' } ' ' ' ) . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties 
 index a6d433b . . 34f9f96 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ ja . properties 
 @ @ - 8 , 7 + 8 , 7 @ @ line . alone = ' ' { 0 } ' ' 列 { 1 } に は 、 行 の 一 人 で あ る べ き で す 。 
 line . new = ' ' { 0 } ' ' 列 に { 1 } 新 し い 行 に す る 必 要 が あ り ま す 。 
 line . previous = ' ' { 0 } ' ' 列 に { 1 } 前 の 行 に す る 必 要 が あ り ま す 。 
 line . same = ' ' { 0 } ' ' 欄 で { 1 } は マ ル チ ブ ロ ッ ク 文 を 直 接 複 数 の ブ ロ ッ ク が 含 ま れ て い ま す \ 
 - ( の 次 の 部 分 と 同 じ 行 に あ る べ き 欄 で ： if / else - if / else ま た は try / catch / finally ) . 
 + ( の 次 の 部 分 と 同 じ 行 に あ る べ き 欄 で ： if / else - if / else , do / while ま た は try / catch / finally ) . 
 
 needBraces = ' ' { 0 } ' ' 文 で は ' ' ' { } ' ' ' を 使 用 し な け れ ば な り ま せ ん 。 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties 
 index f600d87 . . 520a005 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ pt . properties 
 @ @ - 8 , 8 + 8 , 8 @ @ line . alone = ' ' { 0 } ' ' na coluna { 1 } deve estar sozinho numa linha . 
 line . new = ' ' { 0 } ' ' na coluna { 1 } deve estar numa nova linha . 
 line . previous = ' ' { 0 } ' ' na coluna { 1 } deve estar na linha anterior . 
 line . same = ' ' { 0 } ' ' na coluna { 1 } deve estar na mesma linha que a pr ó xima parte de uma \ 
 - instru ç ã o multi - bloco ( aquele que cont é m directamente v á rios blocos : if / else - if / else ou \ 
 - try / catch / finally ) . 
 + instru ç ã o multi - bloco ( aquele que cont é m directamente v á rios blocos : if / else - if / else \ 
 + do / while ou try / catch / finally ) . 
 
 needBraces = A estrutura sint á ctica ' ' { 0 } ' ' deve utilizar ' ' ' { } ' ' ' s . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties 
 index 5a331b7 . . 5ba5c29 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ tr . properties 
 @ @ - 10 , 8 + 10 , 8 @ @ line . alone = ' ' { 0 } ' ' s ü tun { 1 } bir ç izgi ü zerinde yaln ı z olmal ı d ı r . 
 line . new = ' ' { 0 } ' ' s ü tun { 1 } yeni bir sat ı rda olmal ı d ı r . 
 line . previous = ' ' { 0 } ' ' s ü tun { 1 } ö nceki sat ı rda olmal ı d ı r . 
 line . same = ' ' { 0 } ' ' { 1 } multi - blok deyiminin sonraki par ç as ı olarak ayn ı sat ı rda olmal ı d ı r \ 
 - s ü tunda ( do ğ rudan ç oklu bloklar ı i ç eren tek bir : if / else - if / else veya ba ş ka bir \ 
 - try / catch / finally ) . 
 + s ü tunda ( do ğ rudan ç oklu bloklar ı i ç eren tek bir : if / else - if / else , do / while \ 
 + veya ba ş ka bir try / catch / finally ) . 
 
 needBraces = ' ' { 0 } ' ' yap ı s ı s ü sl ü parantezler ( ' ' ' { } ' ' ' ) kullanmal ı . 
 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties 
 index 4ed7700 . . b439211 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / blocks / messages _ zh . properties 
 @ @ - 8 , 7 + 8 , 7 @ @ line . alone = 第 { 1 } 个 字 符 ' ' { 0 } ' ' 应 独 占 一 行 。 
 line . new = 第 { 1 } 个 字 符 ' ' { 0 } ' ' 应 位 于 新 行 。 
 line . previous = 第 { 1 } 个 字 符 ' ' { 0 } ' ' 应 位 于 前 一 行 。 
 line . same = 第 { 1 } 个 字 符 ' ' { 0 } ' ' 应 该 与 当 前 多 代 码 块 的 下 一 部 分 \ 
 - （ if / else - if / else 或 try / catch / finally ） 位 于 同 一 行 。 
 + （ if / else - if / else , do / while 或 try / catch / finally ） 位 于 同 一 行 。 
 
 needBraces = ' ' { 0 } ' ' 结 构 必 须 使 用 大 括 号 ' ' ' { } ' ' ' 。 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 index 3267325 . . 07b61d0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 @ @ - 282 , 4 + 282 , 16 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { 
 
 verify ( checkConfig , getPath ( " InputRightCurly . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testRightCurlySameAndLiteralDo ( ) throws Exception { 
 + checkConfig . addAttribute ( " option " , RightCurlyOption . SAME . toString ( ) ) ; 
 + checkConfig . addAttribute ( " tokens " , " LITERAL _ DO " ) ; 
 + final String [ ] expected = { 
 + " 62 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ SAME , " } " , 9 ) , 
 + " 67 : 13 : " + getCheckMessage ( MSG _ KEY _ LINE _ SAME , " } " , 13 ) , 
 + " 83 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ SAME , " } " , 9 ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputRightCurlyDoWhile . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlyDoWhile . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlyDoWhile . java 
 new file mode 100644 
 index 0000000 . . b9019a7 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlyDoWhile . java 
 @ @ - 0 , 0 + 1 , 94 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . blocks ; 
 + 
 + import java . util . Scanner ; 
 + 
 + / * * 
 + * Test input for GitHub issue # 3090 . 
 + * https : / / github . com / checkstyle / checkstyle / issues / 3090 
 + * / 
 + public class InputRightCurlyDoWhile { 
 + 
 + public void foo1 ( ) { 
 + do { 
 + } while ( true ) ; 
 + } 
 + 
 + public void foo2 ( ) { 
 + int i = 1 ; 
 + while ( i < 5 ) { 
 + System . out . print ( i + " " ) ; 
 + i + + ; 
 + } 
 + } 
 + 
 + public void foo3 ( ) { 
 + int i = 1 ; 
 + do { 
 + i + + ; 
 + System . out . print ( i + " " ) ; 
 + } while ( i < 5 ) ; 
 + } 
 + 
 + public void foo4 ( ) { 
 + int prog , user ; 
 + prog = ( int ) ( Math . random ( ) * 10 ) + 1 ; 
 + Scanner input = new Scanner ( System . in ) ; 
 + if ( input . hasNextInt ( ) ) { 
 + do { 
 + user = input . nextInt ( ) ; 
 + if ( user = = prog ) { 
 + System . out . println ( " Good ! " ) ; 
 + } else { 
 + if ( user > 0 & & user < = 10 ) { 
 + System . out . print ( " Bad ! " ) ; 
 + if ( prog < user ) { 
 + System . out . println ( " My number is less than yours . " ) ; 
 + } else { 
 + System . out . println ( " My number is greater than yours . " ) ; 
 + } 
 + } else { 
 + System . out . println ( " Error ! " ) ; 
 + } 
 + } 
 + } while ( user ! = prog ) ; 
 + } else { 
 + System . out . println ( " Error ! " ) ; 
 + } 
 + System . out . println ( " Goodbye ! " ) ; 
 + } 
 + 
 + public void foo5 ( ) { 
 + do { 
 + } / / violation 
 + while ( true ) ; 
 + } 
 + 
 + public void foo6 ( ) { 
 + do { } / / violation 
 + while ( true ) ; 
 + } 
 + 
 + public void foo7 ( ) { 
 + do 
 + { 
 + 
 + } while ( true ) ; 
 + } 
 + 
 + public void foo8 ( ) { 
 + do 
 + 
 + { 
 + 
 + } / / violation 
 + 
 + while 
 + 
 + ( true ) ; 
 + } 
 + 
 + public void foo9 ( ) { 
 + do { } while ( true ) ; 
 + } 
 + } 
 +

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 index 757eb6c . . 3210410 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 @ @ - 110 , 6 + 110 , 7 @ @ public abstract class AbstractTypeAwareCheck extends Check 
 TokenTypes . PACKAGE _ DEF , 
 TokenTypes . IMPORT , 
 TokenTypes . CLASS _ DEF , 
 + TokenTypes . INTERFACE _ DEF , 
 TokenTypes . ENUM _ DEF , 
 } ; 
 } 
 @ @ - 136 , 6 + 137 , 7 @ @ public abstract class AbstractTypeAwareCheck extends Check 
 processImport ( aAST ) ; 
 } 
 else if ( ( aAST . getType ( ) = = TokenTypes . CLASS _ DEF ) 
 + | | ( aAST . getType ( ) = = TokenTypes . INTERFACE _ DEF ) 
 | | ( aAST . getType ( ) = = TokenTypes . ENUM _ DEF ) ) 
 { 
 processClass ( aAST ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RedundantThrowsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RedundantThrowsCheck . java 
 index c3a1a58 . . 119f72c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RedundantThrowsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RedundantThrowsCheck . java 
 @ @ - 83 , 6 + 83 , 7 @ @ public class RedundantThrowsCheck extends AbstractTypeAwareCheck 
 TokenTypes . PACKAGE _ DEF , 
 TokenTypes . IMPORT , 
 TokenTypes . CLASS _ DEF , 
 + TokenTypes . INTERFACE _ DEF , 
 TokenTypes . ENUM _ DEF , 
 TokenTypes . METHOD _ DEF , 
 TokenTypes . CTOR _ DEF , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 1c2693e . . 1191359 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 233 , 6 + 233 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck 
 { 
 return new int [ ] { TokenTypes . PACKAGE _ DEF , TokenTypes . IMPORT , 
 TokenTypes . CLASS _ DEF , TokenTypes . ENUM _ DEF , 
 + TokenTypes . INTERFACE _ DEF , 
 TokenTypes . METHOD _ DEF , TokenTypes . CTOR _ DEF , 
 TokenTypes . ANNOTATION _ FIELD _ DEF , 
 } ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java 
 index 79ed647 . . 28ae00f 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java 
 @ @ - 45 , 4 + 45 , 19 @ @ public class TestGenerics < E extends java . lang . Exception , 
 { 
 } 
 } 
 + 
 + / * * 
 + * @ param < T > some parameter 
 + * @ param < E2 > some exception parameter 
 + * / 
 + public interface InnerInterface < T , E2 extends Throwable > { 
 + / * * 
 + * Some javadoc . 
 + * @ param t a parameter 
 + * @ throws E2 in some case . 
 + * @ return some string 
 + * / 
 + public abstract String doStuff ( T t ) throws E2 ; 
 + } 
 } 
 +
