BLEU SCORE: 1.0

TEST MSG: Issue # 2161 : unify test input locations
GENERATED MSG: Issue # 2161 : unify test input locations

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheckTest . java <nl> index 1d3b37f . . 0f2183e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheckTest . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import static com . puppycrawl . tools . checkstyle . checks . coding . MultipleVariableDecl <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . MultipleVariableDeclarationsCheck . MSG _ MULTIPLE _ COMMA ; <nl> <nl> import java . io . File ; <nl> + import java . io . IOException ; <nl> <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> @ @ - 31 , 6 + 32 , 12 @ @ import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> <nl> public class MultipleVariableDeclarationsCheckTest extends BaseCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " coding " + File . separator + filename ) ; <nl> + } <nl> + <nl> @ Test <nl> public void testIt ( ) throws Exception { <nl> DefaultConfiguration checkConfig = <nl> @ @ - 46 , 7 + 53 , 7 @ @ public class MultipleVariableDeclarationsCheckTest extends BaseCheckTestSupport <nl> } ; <nl> <nl> verify ( checkConfig , <nl> - getPath ( " coding " + File . separator + " InputMultipleVariableDeclarations . java " ) , <nl> + getPath ( " InputMultipleVariableDeclarations . java " ) , <nl> expected ) ; <nl> } <nl> <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMultipleVariableDeclarations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMultipleVariableDeclarations . java <nl> new file mode 100644 <nl> index 0000000 . . 2f73757 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMultipleVariableDeclarations . java <nl> @ @ - 0 , 0 + 1 , 33 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> + public class InputMultipleVariableDeclarations <nl> + { <nl> + int i , j ; <nl> + int i1 ; int j1 ; <nl> + <nl> + void method1 ( ) { <nl> + String str , str1 ; <nl> + java . lang . Object obj ; Object obj1 ; <nl> + } <nl> + / / second definition is wrapped <nl> + / / line of VARIABLE _ DEF is not the same as first line of the definition <nl> + java . lang . String string ; java . lang . String <nl> + strings [ ] ; <nl> + / / both definitions is wrapped <nl> + java . lang . <nl> + String string1 ; java . lang . String <nl> + strings1 [ ] ; <nl> + <nl> + void method2 ( ) { <nl> + for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { <nl> + } <nl> + <nl> + for ( int i = 0 ; i < 4 ; i + + ) { <nl> + <nl> + } <nl> + <nl> + switch ( " " ) { <nl> + case " 6 " : <nl> + int k = 7 ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputMultipleVariableDeclarations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputMultipleVariableDeclarations . java <nl> deleted file mode 100644 <nl> index 7c87e30 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputMultipleVariableDeclarations . java <nl> + + + / dev / null <nl> @ @ - 1 , 33 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . coding ; <nl> - public class InputMultipleVariableDeclarations <nl> - { <nl> - int i , j ; <nl> - int i1 ; int j1 ; <nl> - <nl> - void method1 ( ) { <nl> - String str , str1 ; <nl> - java . lang . Object obj ; Object obj1 ; <nl> - } <nl> - / / second definition is wrapped <nl> - / / line of VARIABLE _ DEF is not the same as first line of the definition <nl> - java . lang . String string ; java . lang . String <nl> - strings [ ] ; <nl> - / / both definitions is wrapped <nl> - java . lang . <nl> - String string1 ; java . lang . String <nl> - strings1 [ ] ; <nl> - <nl> - void method2 ( ) { <nl> - for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { <nl> - } <nl> - <nl> - for ( int i = 0 ; i < 4 ; i + + ) { <nl> - <nl> - } <nl> - <nl> - switch ( " " ) { <nl> - case " 6 " : <nl> - int k = 7 ; <nl> - } <nl> - } <nl> - }
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java <nl> index 9af22a9 . . 2cdac81 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java <nl> @ @ - 137 , 17 + 137 , 17 @ @ public class CommitValidationTest { <nl> } <nl> <nl> private static List < RevCommit > getCommitsToCheck ( ) throws Exception { <nl> - Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ; <nl> - <nl> - RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; <nl> List < RevCommit > commits ; <nl> - if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { <nl> - commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; <nl> - commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; <nl> - } <nl> - else { <nl> - commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; <nl> - commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; <nl> + try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { <nl> + RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; <nl> + if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { <nl> + commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; <nl> + commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; <nl> + } <nl> + else { <nl> + commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; <nl> + commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; <nl> + } <nl> } <nl> return commits ; <nl> } <nl> @ @ - 165 , 12 + 165 , 10 @ @ public class CommitValidationTest { <nl> <nl> private static RevCommitsPair resolveRevCommitsPair ( Repository repo ) { <nl> RevCommitsPair revCommitIteratorPair ; <nl> - try { <nl> + <nl> + try ( RevWalk revWalk = new RevWalk ( repo ) ) { <nl> Iterator < RevCommit > first ; <nl> Iterator < RevCommit > second ; <nl> - <nl> - RevWalk revWalk = new RevWalk ( repo ) ; <nl> - <nl> ObjectId headId = repo . resolve ( Constants . HEAD ) ; <nl> RevCommit headCommit = revWalk . parseCommit ( headId ) ; <nl> <nl> @ @ - 178 , 11 + 176 , 15 @ @ public class CommitValidationTest { <nl> RevCommit firstParent = headCommit . getParent ( 0 ) ; <nl> RevCommit secondParent = headCommit . getParent ( 1 ) ; <nl> <nl> - first = new Git ( repo ) . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; <nl> - second = new Git ( repo ) . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; <nl> + try ( Git git = new Git ( repo ) ) { <nl> + first = git . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; <nl> + second = git . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; <nl> + } <nl> } <nl> else { <nl> - first = new Git ( repo ) . log ( ) . call ( ) . iterator ( ) ; <nl> + try ( Git git = new Git ( repo ) ) { <nl> + first = git . log ( ) . call ( ) . iterator ( ) ; <nl> + } <nl> second = Collections . emptyIterator ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheckTest . java 
 index 1d3b37f . . 0f2183e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheckTest . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import static com . puppycrawl . tools . checkstyle . checks . coding . MultipleVariableDecl 
 import static com . puppycrawl . tools . checkstyle . checks . coding . MultipleVariableDeclarationsCheck . MSG _ MULTIPLE _ COMMA ; 
 
 import java . io . File ; 
 + import java . io . IOException ; 
 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 @ @ - 31 , 6 + 32 , 12 @ @ import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 
 public class MultipleVariableDeclarationsCheckTest extends BaseCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " coding " + File . separator + filename ) ; 
 + } 
 + 
 @ Test 
 public void testIt ( ) throws Exception { 
 DefaultConfiguration checkConfig = 
 @ @ - 46 , 7 + 53 , 7 @ @ public class MultipleVariableDeclarationsCheckTest extends BaseCheckTestSupport 
 } ; 
 
 verify ( checkConfig , 
 - getPath ( " coding " + File . separator + " InputMultipleVariableDeclarations . java " ) , 
 + getPath ( " InputMultipleVariableDeclarations . java " ) , 
 expected ) ; 
 } 
 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMultipleVariableDeclarations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMultipleVariableDeclarations . java 
 new file mode 100644 
 index 0000000 . . 2f73757 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMultipleVariableDeclarations . java 
 @ @ - 0 , 0 + 1 , 33 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding ; 
 + public class InputMultipleVariableDeclarations 
 + { 
 + int i , j ; 
 + int i1 ; int j1 ; 
 + 
 + void method1 ( ) { 
 + String str , str1 ; 
 + java . lang . Object obj ; Object obj1 ; 
 + } 
 + / / second definition is wrapped 
 + / / line of VARIABLE _ DEF is not the same as first line of the definition 
 + java . lang . String string ; java . lang . String 
 + strings [ ] ; 
 + / / both definitions is wrapped 
 + java . lang . 
 + String string1 ; java . lang . String 
 + strings1 [ ] ; 
 + 
 + void method2 ( ) { 
 + for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { 
 + } 
 + 
 + for ( int i = 0 ; i < 4 ; i + + ) { 
 + 
 + } 
 + 
 + switch ( " " ) { 
 + case " 6 " : 
 + int k = 7 ; 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputMultipleVariableDeclarations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputMultipleVariableDeclarations . java 
 deleted file mode 100644 
 index 7c87e30 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputMultipleVariableDeclarations . java 
 + + + / dev / null 
 @ @ - 1 , 33 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . coding ; 
 - public class InputMultipleVariableDeclarations 
 - { 
 - int i , j ; 
 - int i1 ; int j1 ; 
 - 
 - void method1 ( ) { 
 - String str , str1 ; 
 - java . lang . Object obj ; Object obj1 ; 
 - } 
 - / / second definition is wrapped 
 - / / line of VARIABLE _ DEF is not the same as first line of the definition 
 - java . lang . String string ; java . lang . String 
 - strings [ ] ; 
 - / / both definitions is wrapped 
 - java . lang . 
 - String string1 ; java . lang . String 
 - strings1 [ ] ; 
 - 
 - void method2 ( ) { 
 - for ( int i = 0 , j = 0 ; i < 10 ; i + + , j - - ) { 
 - } 
 - 
 - for ( int i = 0 ; i < 4 ; i + + ) { 
 - 
 - } 
 - 
 - switch ( " " ) { 
 - case " 6 " : 
 - int k = 7 ; 
 - } 
 - } 
 - }

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java 
 index 9af22a9 . . 2cdac81 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CommitValidationTest . java 
 @ @ - 137 , 17 + 137 , 17 @ @ public class CommitValidationTest { 
 } 
 
 private static List < RevCommit > getCommitsToCheck ( ) throws Exception { 
 - Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ; 
 - 
 - RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; 
 List < RevCommit > commits ; 
 - if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { 
 - commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; 
 - commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; 
 - } 
 - else { 
 - commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; 
 - commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; 
 + try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { 
 + RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; 
 + if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { 
 + commits = getCommitsByCounter ( revCommitsPair . getFirst ( ) ) ; 
 + commits . addAll ( getCommitsByCounter ( revCommitsPair . getSecond ( ) ) ) ; 
 + } 
 + else { 
 + commits = getCommitsByLastCommitAuthor ( revCommitsPair . getFirst ( ) ) ; 
 + commits . addAll ( getCommitsByLastCommitAuthor ( revCommitsPair . getSecond ( ) ) ) ; 
 + } 
 } 
 return commits ; 
 } 
 @ @ - 165 , 12 + 165 , 10 @ @ public class CommitValidationTest { 
 
 private static RevCommitsPair resolveRevCommitsPair ( Repository repo ) { 
 RevCommitsPair revCommitIteratorPair ; 
 - try { 
 + 
 + try ( RevWalk revWalk = new RevWalk ( repo ) ) { 
 Iterator < RevCommit > first ; 
 Iterator < RevCommit > second ; 
 - 
 - RevWalk revWalk = new RevWalk ( repo ) ; 
 - 
 ObjectId headId = repo . resolve ( Constants . HEAD ) ; 
 RevCommit headCommit = revWalk . parseCommit ( headId ) ; 
 
 @ @ - 178 , 11 + 176 , 15 @ @ public class CommitValidationTest { 
 RevCommit firstParent = headCommit . getParent ( 0 ) ; 
 RevCommit secondParent = headCommit . getParent ( 1 ) ; 
 
 - first = new Git ( repo ) . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; 
 - second = new Git ( repo ) . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; 
 + try ( Git git = new Git ( repo ) ) { 
 + first = git . log ( ) . add ( firstParent ) . call ( ) . iterator ( ) ; 
 + second = git . log ( ) . add ( secondParent ) . call ( ) . iterator ( ) ; 
 + } 
 } 
 else { 
 - first = new Git ( repo ) . log ( ) . call ( ) . iterator ( ) ; 
 + try ( Git git = new Git ( repo ) ) { 
 + first = git . log ( ) . call ( ) . iterator ( ) ; 
 + } 
 second = Collections . emptyIterator ( ) ; 
 } 

