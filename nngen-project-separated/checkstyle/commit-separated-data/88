BLEU SCORE: 0.030098043843528283

TEST MSG: Issue # 6320 : enable REMOVE _ CONDITIONALS for all with moving all survived to known list
GENERATED MSG: config : add suppressions for indetation and javadoc to avoid asking pitest sharing from cntributors

TEST DIFF (one line): diff - - git a / . ci / pitest . sh b / . ci / pitest . sh <nl> index 290d9f8 . . f782f3b 100755 <nl> - - - a / . ci / pitest . sh <nl> + + + b / . ci / pitest . sh <nl> @ @ - 31 , 10 + 31 , 9 @ @ function checkPitestReport ( ) { <nl> <nl> case $ 1 in <nl> <nl> - pitest - annotation | pitest - design | pitest - header | pitest - imports \ <nl> + pitest - annotation | pitest - design \ <nl> | pitest - metrics | pitest - modifier | pitest - naming \ <nl> - | pitest - regexp | pitest - sizes | pitest - whitespace | pitest - ant \ <nl> - | pitest - api | pitest - common | pitest - filters | pitest - main \ <nl> + | pitest - sizes | pitest - whitespace \ <nl> | pitest - packagenamesloader | pitest - tree - walker | pitest - utils \ <nl> | pitest - xpath | pitest - common - 2 | pitest - misc ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> @ @ - 42 , 6 + 41 , 148 @ @ pitest - annotation | pitest - design | pitest - header | pitest - imports \ <nl> checkPitestReport " $ { ignoredItems [ @ ] } " <nl> ; ; <nl> <nl> + pitest - regexp ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + declare - a ignoredItems = ( <nl> + " DetectorOptions . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( pattern = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " RegexpCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( message = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " RegexpCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return errorCount & # 60 ; = errorLimit - 1 < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - header ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + declare - a ignoredItems = ( <nl> + " AbstractHeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( headerFile = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " HeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( list . length = = 0 ) { < / span > < / pre > < / td > < / tr > " <nl> + " RegexpHeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( list . length = = 0 ) { < / span > < / pre > < / td > < / tr > " <nl> + " RegexpHeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > isMatch = headerLineNo = = headerSize < / span > < / pre > < / td > < / tr > " <nl> + " RegexpHeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | isMatch ( line , headerLineNo ) ; < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - filters ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + declare - a ignoredItems = ( <nl> + " SuppressionCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( event . getLocalizedMessage ( ) ! = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressionCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( filter . messageFormat = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressionCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( getFileContents ( ) ! = currentContents ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressionCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( line = = object . line ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressionXpathSingleFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( checks = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressionXpathSingleFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( files = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( tagMessageRegexp = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( CommonUtil . startsWithChar ( format , & # 39 ; + & # 39 ; ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( event . getLocalizedMessage ( ) ! = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( filter . messageFormat = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( getFileContents ( ) ! = currentContents ) { < / span > < / pre > < / td > < / tr > " <nl> + " SuppressWithPlainTextCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( filter . messageFormat = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ( checkRegexp = = null | | checkRegexp . matcher ( event . getSourceName ( ) ) . find ( ) ) ; < / span > < / pre > < / td > < / tr > " <nl> + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; event . getLocalizedMessage ( ) ! = null < / span > < / pre > < / td > < / tr > " <nl> + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ( fileRegexp = = null | | fileRegexp . matcher ( event . getFileName ( ) ) . find ( ) ) < / span > < / pre > < / td > < / tr > " <nl> + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ( moduleId = = null | | moduleId . equals ( event . getModuleId ( ) ) ) < / span > < / pre > < / td > < / tr > " <nl> + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( checks = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( checks = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( files = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > isMatching = abstractNode . getTokenType ( ) = = event . getTokenType ( ) < / span > < / pre > < / td > < / tr > " <nl> + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return event . getFileName ( ) ! = null < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - api ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + declare - a ignoredItems = ( <nl> + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( parent ! = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ast ! = null & # 38 ; & # 38 ; parent ! = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( branchTokenTypes = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( childCount = = NOT _ INITIALIZED ) { < / span > < / pre > < / td > < / tr > " <nl> + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( nextSibling ! = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( TokenUtil . isCommentType ( node . getType ( ) ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " FileContents . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( firstLine . contains ( & # 34 ; / * * & # 34 ; ) & # 38 ; & # 38 ; ! firstLine . contains ( & # 34 ; / * * / & # 34 ; ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " FileContents . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( hasIntersection ) { < / span > < / pre > < / td > < / tr > " <nl> + " FileText . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( fileText . lineBreaks = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " FileText . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( lineBreaks = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " FileText . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( lineNo & # 60 ; lineBreakPositions . length ) { < / span > < / pre > < / td > < / tr > " <nl> + " LocalizedMessage . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > connection . setUseCaches ( ! reload ) ; < / span > < / pre > < / td > < / tr > " <nl> + " LocalizedMessage . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( columnNo = = other . columnNo ) { < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - main ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + declare - a ignoredItems = ( <nl> + " Main . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( node . canRead ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " Main . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( options . executeIgnoredModules ) { < / span > < / pre > < / td > < / tr > " <nl> + " Main . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( outputPath = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - imports ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + declare - a ignoredItems = ( <nl> + " AvoidStarImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ast . getType ( ) = = TokenTypes . STATIC _ IMPORT ) { < / span > < / pre > < / td > < / tr > " <nl> + " AvoidStarImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( exclude . endsWith ( STAR _ IMPORT _ SUFFIX ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " AvoidStaticImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( exclude . endsWith ( & # 34 ; . * & # 34 ; ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; matcher . start ( ) & # 60 ; betterMatchCandidate . matchPosition ) { < / span > < / pre > < / td > < / tr > " <nl> + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( customImportOrderRules . contains ( SAME _ PACKAGE _ RULE _ GROUP ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( bestMatch . group . equals ( NON _ GROUP _ RULE _ GROUP ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( customImportOrderRules . contains ( SAME _ PACKAGE _ RULE _ GROUP ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | length = = betterMatchCandidate . matchLength < / span > < / pre > < / td > < / tr > " <nl> + " IllegalImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( regexp ) { < / span > < / pre > < / td > < / tr > " <nl> + " IllegalImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! result & # 38 ; & # 38 ; illegalClasses ! = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " IllegalImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! result ) { < / span > < / pre > < / td > < / tr > " <nl> + " ImportControlLoader . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( ALLOW _ ELEMENT _ NAME . equals ( qName ) | | & # 34 ; disallow & # 34 ; . equals ( qName ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( matcher . start ( ) = = bestPos & # 38 ; & # 38 ; matcher . end ( ) & # 62 ; bestEnd ) { < / span > < / pre > < / td > < / tr > " <nl> + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > final boolean separatorBetween = isStatic ! = lastImportStatic < / span > < / pre > < / td > < / tr > " <nl> + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( caseSensitive ) { < / span > < / pre > < / td > < / tr > " <nl> + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! CommonUtil . endsWithChar ( pkg , & # 39 ; . & # 39 ; ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( isStatic ) { < / span > < / pre > < / td > < / tr > " <nl> + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return ! beforeFirstImport & # 38 ; & # 38 ; line - lastImportLine & # 62 ; 1 ; < / span > < / pre > < / td > < / tr > " <nl> + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > staticImportSeparator = isStatic & # 38 ; & # 38 ; separated ; < / span > < / pre > < / td > < / tr > " <nl> + " PkgImportControl . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( alreadyRegex ) { < / span > < / pre > < / td > < / tr > " <nl> + " PkgImportControl . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( regex | | parent . regex ) { < / span > < / pre > < / td > < / tr > " <nl> + " PkgImportControl . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( regex ) { < / span > < / pre > < / td > < / tr > " <nl> + " PkgImportRule . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( isRegExp ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " RedundantImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( pkgName ! = null & # 38 ; & # 38 ; isFromPackage ( imp . getText ( ) , pkgName ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " UnusedImportsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( collect ) { < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + pitest - common ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + declare - a ignoredItems = ( <nl> + " AuditEventDefaultFormatter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( lastDotIndex = = - 1 ) { < / span > < / pre > < / td > < / tr > " <nl> + " Checker . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( cacheFile ! = null & # 38 ; & # 38 ; cacheFile . isInCache ( fileName , timestamp ) < / span > < / pre > < / td > < / tr > " <nl> + " ConfigurationLoader . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > final boolean omitIgnoreModules = ignoredModulesOptions = = IgnoredModulesOptions . OMIT ; < / span > < / pre > < / td > < / tr > " <nl> + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > closeError = errorStreamOptions = = OutputStreamOptions . CLOSE ; < / span > < / pre > < / td > < / tr > " <nl> + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > closeInfo = infoStreamOptions = = OutputStreamOptions . CLOSE ; < / span > < / pre > < / td > < / tr > " <nl> + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( closeError ) { < / span > < / pre > < / td > < / tr > " <nl> + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( closeInfo ) { < / span > < / pre > < / td > < / tr > " <nl> + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( infoStream = = errorStream ) { < / span > < / pre > < / td > < / tr > " <nl> + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( severityLevel ! = SeverityLevel . IGNORE ) { < / span > < / pre > < / td > < / tr > " <nl> + " PackageObjectFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( instance = = null < / span > < / pre > < / td > < / tr > " <nl> + " PackageObjectFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! name . contains ( PACKAGE _ SEPARATOR ) ) { < / span > < / pre > < / td > < / tr > " <nl> + " PackageObjectFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( thirdPartyNameToFullModuleNames = = null ) { < / span > < / pre > < / td > < / tr > " <nl> + " XMLLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ent . charAt ( 0 ) ! = & # 39 ; & # 38 ; & # 39 ; | | ! CommonUtil . endsWithChar ( ent , & # 39 ; ; & # 39 ; ) ) { < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> + <nl> + pitest - ant ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + declare - a ignoredItems = ( <nl> + " CheckstyleAntTask . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( toFile = = null | | ! useFile ) { < / span > < / pre > < / td > < / tr > " <nl> + " CheckstyleAntTask . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( toFile = = null | | ! useFile ) { < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> pitest - blocks ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> declare - a ignoredItems = ( <nl> diff - - git a / pom . xml b / pom . xml <nl> index 1322c01 . . 2e48f96 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1947 , 6 + 1947 , 8 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < ! - - result in 115 extra survived items , too much to keep in ignore list - - > <nl> + < ! - - < mutator > REMOVE _ CONDITIONALS < / mutator > - - > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2036 , 6 + 2038 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2050 , 7 + 2053 , 7 @ @ <nl> < param > * . Input * < / param > <nl> < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 100 < / mutationThreshold > <nl> + < mutationThreshold > 97 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> @ @ - 2080 , 6 + 2083 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2124 , 6 + 2128 , 8 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < ! - - result in 53 extra survived items , too much to keep in ignore list - - > <nl> + < ! - - < mutator > REMOVE _ CONDITIONALS < / mutator > - - > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2168 , 6 + 2174 , 8 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < ! - - result in 64 extra survived items , too much to keep in ignore list - - > <nl> + < ! - - < mutator > REMOVE _ CONDITIONALS < / mutator > - - > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2353 , 6 + 2361 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2367 , 7 + 2376 , 7 @ @ <nl> < param > * . Input * < / param > <nl> < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 100 < / mutationThreshold > <nl> + < mutationThreshold > 98 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> @ @ - 2488 , 6 + 2497 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2502 , 7 + 2512 , 7 @ @ <nl> < param > * . Input * < / param > <nl> < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 100 < / mutationThreshold > <nl> + < mutationThreshold > 99 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> @ @ - 2574 , 6 + 2584 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2617 , 7 + 2628 , 7 @ @ <nl> < param > com . puppycrawl . tools . checkstyle . filefilters . BeforeExecutionExclusionFileFilterTest < / param > <nl> < / targetTests > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 100 < / mutationThreshold > <nl> + < mutationThreshold > 98 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> @ @ - 2706 , 6 + 2717 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2717 , 7 + 2729 , 7 @ @ <nl> < param > com . puppycrawl . tools . checkstyle . MainTest < / param > <nl> < / targetTests > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 100 < / mutationThreshold > <nl> + < mutationThreshold > 99 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> @ @ - 2838 , 6 + 2850 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2865 , 7 + 2878 , 7 @ @ <nl> < param > * . Input * < / param > <nl> < / excludedTestClasses > <nl> < coverageThreshold > 99 < / coverageThreshold > <nl> - < mutationThreshold > 100 < / mutationThreshold > <nl> + < mutationThreshold > 98 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> @ @ - 2895 , 6 + 2908 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 2911 , 7 + 2925 , 7 @ @ <nl> < param > * . Input * < / param > <nl> < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 100 < / mutationThreshold > <nl> + < mutationThreshold > 97 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> @ @ - 2941 , 6 + 2955 , 8 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < ! - - result in 58 extra survived items , too much to keep in ignore list - - > <nl> + < ! - - < mutator > REMOVE _ CONDITIONALS < / mutator > - - > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator > <nl> @ @ - 3003 , 6 + 3019 , 7 @ @ <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> < mutator > NEGATE _ CONDITIONALS < / mutator > <nl> + < mutator > REMOVE _ CONDITIONALS < / mutator > <nl> < mutator > RETURN _ VALS < / mutator > <nl> < mutator > TRUE _ RETURNS < / mutator > <nl> < mutator > VOID _ METHOD _ CALLS < / mutator >
NEAREST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index dd10f2b . . 5d17610 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 2500 , 7 + 2500 , 8 @ @ isolated classes and we cannot put them to separate package as it will affect us <nl> < inspection _ tool class = " WaitOrAwaitWithoutTimeout " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " WaitWhileHoldingTwoLocks " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " WaitWithoutCorrespondingNotify " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> - < inspection _ tool class = " WeakerAccess " enabled = " true " level = " WARNING " enabled _ by _ default = " false " > <nl> + < ! - - till - - > <nl> + < inspection _ tool class = " WeakerAccess " enabled = " false " level = " WARNING " enabled _ by _ default = " false " > <nl> < scope name = " Production " level = " WARNING " enabled = " true " > <nl> < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ MEMBERS " value = " false " / > <nl> < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ TOP _ CLASSES " value = " false " / >

TEST DIFF:
diff - - git a / . ci / pitest . sh b / . ci / pitest . sh 
 index 290d9f8 . . f782f3b 100755 
 - - - a / . ci / pitest . sh 
 + + + b / . ci / pitest . sh 
 @ @ - 31 , 10 + 31 , 9 @ @ function checkPitestReport ( ) { 
 
 case $ 1 in 
 
 - pitest - annotation | pitest - design | pitest - header | pitest - imports \ 
 + pitest - annotation | pitest - design \ 
 | pitest - metrics | pitest - modifier | pitest - naming \ 
 - | pitest - regexp | pitest - sizes | pitest - whitespace | pitest - ant \ 
 - | pitest - api | pitest - common | pitest - filters | pitest - main \ 
 + | pitest - sizes | pitest - whitespace \ 
 | pitest - packagenamesloader | pitest - tree - walker | pitest - utils \ 
 | pitest - xpath | pitest - common - 2 | pitest - misc ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 @ @ - 42 , 6 + 41 , 148 @ @ pitest - annotation | pitest - design | pitest - header | pitest - imports \ 
 checkPitestReport " $ { ignoredItems [ @ ] } " 
 ; ; 
 
 + pitest - regexp ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + declare - a ignoredItems = ( 
 + " DetectorOptions . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( pattern = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " RegexpCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( message = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " RegexpCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return errorCount & # 60 ; = errorLimit - 1 < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - header ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + declare - a ignoredItems = ( 
 + " AbstractHeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( headerFile = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " HeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( list . length = = 0 ) { < / span > < / pre > < / td > < / tr > " 
 + " RegexpHeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( list . length = = 0 ) { < / span > < / pre > < / td > < / tr > " 
 + " RegexpHeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > isMatch = headerLineNo = = headerSize < / span > < / pre > < / td > < / tr > " 
 + " RegexpHeaderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | isMatch ( line , headerLineNo ) ; < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - filters ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + declare - a ignoredItems = ( 
 + " SuppressionCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( event . getLocalizedMessage ( ) ! = null ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressionCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( filter . messageFormat = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressionCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( getFileContents ( ) ! = currentContents ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressionCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( line = = object . line ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressionXpathSingleFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( checks = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressionXpathSingleFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( files = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( tagMessageRegexp = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( CommonUtil . startsWithChar ( format , & # 39 ; + & # 39 ; ) ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( event . getLocalizedMessage ( ) ! = null ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( filter . messageFormat = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressWithNearbyCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( getFileContents ( ) ! = currentContents ) { < / span > < / pre > < / td > < / tr > " 
 + " SuppressWithPlainTextCommentFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( filter . messageFormat = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ( checkRegexp = = null | | checkRegexp . matcher ( event . getSourceName ( ) ) . find ( ) ) ; < / span > < / pre > < / td > < / tr > " 
 + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; event . getLocalizedMessage ( ) ! = null < / span > < / pre > < / td > < / tr > " 
 + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ( fileRegexp = = null | | fileRegexp . matcher ( event . getFileName ( ) ) . find ( ) ) < / span > < / pre > < / td > < / tr > " 
 + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ( moduleId = = null | | moduleId . equals ( event . getModuleId ( ) ) ) < / span > < / pre > < / td > < / tr > " 
 + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( checks = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( checks = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( files = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > isMatching = abstractNode . getTokenType ( ) = = event . getTokenType ( ) < / span > < / pre > < / td > < / tr > " 
 + " XpathFilter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return event . getFileName ( ) ! = null < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - api ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + declare - a ignoredItems = ( 
 + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( parent ! = null ) { < / span > < / pre > < / td > < / tr > " 
 + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ast ! = null & # 38 ; & # 38 ; parent ! = null ) { < / span > < / pre > < / td > < / tr > " 
 + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( branchTokenTypes = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( childCount = = NOT _ INITIALIZED ) { < / span > < / pre > < / td > < / tr > " 
 + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( nextSibling ! = null ) { < / span > < / pre > < / td > < / tr > " 
 + " DetailAST . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( TokenUtil . isCommentType ( node . getType ( ) ) ) { < / span > < / pre > < / td > < / tr > " 
 + " FileContents . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( firstLine . contains ( & # 34 ; / * * & # 34 ; ) & # 38 ; & # 38 ; ! firstLine . contains ( & # 34 ; / * * / & # 34 ; ) ) { < / span > < / pre > < / td > < / tr > " 
 + " FileContents . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( hasIntersection ) { < / span > < / pre > < / td > < / tr > " 
 + " FileText . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( fileText . lineBreaks = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " FileText . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( lineBreaks = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " FileText . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( lineNo & # 60 ; lineBreakPositions . length ) { < / span > < / pre > < / td > < / tr > " 
 + " LocalizedMessage . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > connection . setUseCaches ( ! reload ) ; < / span > < / pre > < / td > < / tr > " 
 + " LocalizedMessage . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( columnNo = = other . columnNo ) { < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - main ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + declare - a ignoredItems = ( 
 + " Main . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( node . canRead ( ) ) { < / span > < / pre > < / td > < / tr > " 
 + " Main . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( options . executeIgnoredModules ) { < / span > < / pre > < / td > < / tr > " 
 + " Main . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( outputPath = = null ) { < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - imports ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + declare - a ignoredItems = ( 
 + " AvoidStarImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; ast . getType ( ) = = TokenTypes . STATIC _ IMPORT ) { < / span > < / pre > < / td > < / tr > " 
 + " AvoidStarImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( exclude . endsWith ( STAR _ IMPORT _ SUFFIX ) ) { < / span > < / pre > < / td > < / tr > " 
 + " AvoidStaticImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( exclude . endsWith ( & # 34 ; . * & # 34 ; ) ) { < / span > < / pre > < / td > < / tr > " 
 + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; matcher . start ( ) & # 60 ; betterMatchCandidate . matchPosition ) { < / span > < / pre > < / td > < / tr > " 
 + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( customImportOrderRules . contains ( SAME _ PACKAGE _ RULE _ GROUP ) ) { < / span > < / pre > < / td > < / tr > " 
 + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( bestMatch . group . equals ( NON _ GROUP _ RULE _ GROUP ) ) { < / span > < / pre > < / td > < / tr > " 
 + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( customImportOrderRules . contains ( SAME _ PACKAGE _ RULE _ GROUP ) ) { < / span > < / pre > < / td > < / tr > " 
 + " CustomImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > | | length = = betterMatchCandidate . matchLength < / span > < / pre > < / td > < / tr > " 
 + " IllegalImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( regexp ) { < / span > < / pre > < / td > < / tr > " 
 + " IllegalImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! result & # 38 ; & # 38 ; illegalClasses ! = null ) { < / span > < / pre > < / td > < / tr > " 
 + " IllegalImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! result ) { < / span > < / pre > < / td > < / tr > " 
 + " ImportControlLoader . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( ALLOW _ ELEMENT _ NAME . equals ( qName ) | | & # 34 ; disallow & # 34 ; . equals ( qName ) ) { < / span > < / pre > < / td > < / tr > " 
 + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( matcher . start ( ) = = bestPos & # 38 ; & # 38 ; matcher . end ( ) & # 62 ; bestEnd ) { < / span > < / pre > < / td > < / tr > " 
 + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > final boolean separatorBetween = isStatic ! = lastImportStatic < / span > < / pre > < / td > < / tr > " 
 + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( caseSensitive ) { < / span > < / pre > < / td > < / tr > " 
 + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! CommonUtil . endsWithChar ( pkg , & # 39 ; . & # 39 ; ) ) { < / span > < / pre > < / td > < / tr > " 
 + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( isStatic ) { < / span > < / pre > < / td > < / tr > " 
 + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return ! beforeFirstImport & # 38 ; & # 38 ; line - lastImportLine & # 62 ; 1 ; < / span > < / pre > < / td > < / tr > " 
 + " ImportOrderCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > staticImportSeparator = isStatic & # 38 ; & # 38 ; separated ; < / span > < / pre > < / td > < / tr > " 
 + " PkgImportControl . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( alreadyRegex ) { < / span > < / pre > < / td > < / tr > " 
 + " PkgImportControl . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( regex | | parent . regex ) { < / span > < / pre > < / td > < / tr > " 
 + " PkgImportControl . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( regex ) { < / span > < / pre > < / td > < / tr > " 
 + " PkgImportRule . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( isRegExp ( ) ) { < / span > < / pre > < / td > < / tr > " 
 + " RedundantImportCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( pkgName ! = null & # 38 ; & # 38 ; isFromPackage ( imp . getText ( ) , pkgName ) ) { < / span > < / pre > < / td > < / tr > " 
 + " UnusedImportsCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( collect ) { < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + pitest - common ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + declare - a ignoredItems = ( 
 + " AuditEventDefaultFormatter . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( lastDotIndex = = - 1 ) { < / span > < / pre > < / td > < / tr > " 
 + " Checker . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( cacheFile ! = null & # 38 ; & # 38 ; cacheFile . isInCache ( fileName , timestamp ) < / span > < / pre > < / td > < / tr > " 
 + " ConfigurationLoader . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > final boolean omitIgnoreModules = ignoredModulesOptions = = IgnoredModulesOptions . OMIT ; < / span > < / pre > < / td > < / tr > " 
 + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > closeError = errorStreamOptions = = OutputStreamOptions . CLOSE ; < / span > < / pre > < / td > < / tr > " 
 + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > closeInfo = infoStreamOptions = = OutputStreamOptions . CLOSE ; < / span > < / pre > < / td > < / tr > " 
 + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( closeError ) { < / span > < / pre > < / td > < / tr > " 
 + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( closeInfo ) { < / span > < / pre > < / td > < / tr > " 
 + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( infoStream = = errorStream ) { < / span > < / pre > < / td > < / tr > " 
 + " DefaultLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( severityLevel ! = SeverityLevel . IGNORE ) { < / span > < / pre > < / td > < / tr > " 
 + " PackageObjectFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( instance = = null < / span > < / pre > < / td > < / tr > " 
 + " PackageObjectFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ! name . contains ( PACKAGE _ SEPARATOR ) ) { < / span > < / pre > < / td > < / tr > " 
 + " PackageObjectFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( thirdPartyNameToFullModuleNames = = null ) { < / span > < / pre > < / td > < / tr > " 
 + " XMLLogger . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( ent . charAt ( 0 ) ! = & # 39 ; & # 38 ; & # 39 ; | | ! CommonUtil . endsWithChar ( ent , & # 39 ; ; & # 39 ; ) ) { < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 + 
 + pitest - ant ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + declare - a ignoredItems = ( 
 + " CheckstyleAntTask . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( toFile = = null | | ! useFile ) { < / span > < / pre > < / td > < / tr > " 
 + " CheckstyleAntTask . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( toFile = = null | | ! useFile ) { < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 pitest - blocks ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 declare - a ignoredItems = ( 
 diff - - git a / pom . xml b / pom . xml 
 index 1322c01 . . 2e48f96 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1947 , 6 + 1947 , 8 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < ! - - result in 115 extra survived items , too much to keep in ignore list - - > 
 + < ! - - < mutator > REMOVE _ CONDITIONALS < / mutator > - - > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2036 , 6 + 2038 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2050 , 7 + 2053 , 7 @ @ 
 < param > * . Input * < / param > 
 < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 100 < / mutationThreshold > 
 + < mutationThreshold > 97 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 @ @ - 2080 , 6 + 2083 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2124 , 6 + 2128 , 8 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < ! - - result in 53 extra survived items , too much to keep in ignore list - - > 
 + < ! - - < mutator > REMOVE _ CONDITIONALS < / mutator > - - > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2168 , 6 + 2174 , 8 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < ! - - result in 64 extra survived items , too much to keep in ignore list - - > 
 + < ! - - < mutator > REMOVE _ CONDITIONALS < / mutator > - - > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2353 , 6 + 2361 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2367 , 7 + 2376 , 7 @ @ 
 < param > * . Input * < / param > 
 < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 100 < / mutationThreshold > 
 + < mutationThreshold > 98 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 @ @ - 2488 , 6 + 2497 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2502 , 7 + 2512 , 7 @ @ 
 < param > * . Input * < / param > 
 < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 100 < / mutationThreshold > 
 + < mutationThreshold > 99 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 @ @ - 2574 , 6 + 2584 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2617 , 7 + 2628 , 7 @ @ 
 < param > com . puppycrawl . tools . checkstyle . filefilters . BeforeExecutionExclusionFileFilterTest < / param > 
 < / targetTests > 
 < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 100 < / mutationThreshold > 
 + < mutationThreshold > 98 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 @ @ - 2706 , 6 + 2717 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2717 , 7 + 2729 , 7 @ @ 
 < param > com . puppycrawl . tools . checkstyle . MainTest < / param > 
 < / targetTests > 
 < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 100 < / mutationThreshold > 
 + < mutationThreshold > 99 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 @ @ - 2838 , 6 + 2850 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2865 , 7 + 2878 , 7 @ @ 
 < param > * . Input * < / param > 
 < / excludedTestClasses > 
 < coverageThreshold > 99 < / coverageThreshold > 
 - < mutationThreshold > 100 < / mutationThreshold > 
 + < mutationThreshold > 98 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 @ @ - 2895 , 6 + 2908 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 2911 , 7 + 2925 , 7 @ @ 
 < param > * . Input * < / param > 
 < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 100 < / mutationThreshold > 
 + < mutationThreshold > 97 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 @ @ - 2941 , 6 + 2955 , 8 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < ! - - result in 58 extra survived items , too much to keep in ignore list - - > 
 + < ! - - < mutator > REMOVE _ CONDITIONALS < / mutator > - - > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator > 
 @ @ - 3003 , 6 + 3019 , 7 @ @ 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 < mutator > NEGATE _ CONDITIONALS < / mutator > 
 + < mutator > REMOVE _ CONDITIONALS < / mutator > 
 < mutator > RETURN _ VALS < / mutator > 
 < mutator > TRUE _ RETURNS < / mutator > 
 < mutator > VOID _ METHOD _ CALLS < / mutator >

NEAREST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index dd10f2b . . 5d17610 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 2500 , 7 + 2500 , 8 @ @ isolated classes and we cannot put them to separate package as it will affect us 
 < inspection _ tool class = " WaitOrAwaitWithoutTimeout " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " WaitWhileHoldingTwoLocks " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " WaitWithoutCorrespondingNotify " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 - < inspection _ tool class = " WeakerAccess " enabled = " true " level = " WARNING " enabled _ by _ default = " false " > 
 + < ! - - till - - > 
 + < inspection _ tool class = " WeakerAccess " enabled = " false " level = " WARNING " enabled _ by _ default = " false " > 
 < scope name = " Production " level = " WARNING " enabled = " true " > 
 < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ MEMBERS " value = " false " / > 
 < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ TOP _ CLASSES " value = " false " / >
