BLEU SCORE: 0.043008477182523305

TEST MSG: doc : Correct xdoc / javadoc for ParameterNameCheck
GENERATED MSG: fix for 1223290 ( LocalFinalVariableNameCheck fail on catch variable )

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> index aa22c60 . . 20527fa 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> @ @ - 24 , 7 + 24 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> / * * <nl> * < p > <nl> - * Checks that parameter names conform to a format specified <nl> + * Checks that method and < code > catch < / code > parameter names conform to a format specified <nl> * by the format property . The format is a <nl> * { @ link java . util . regex . Pattern regular expression } <nl> * and defaults to <nl> diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index f417cb8 . . f84615a 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 915 , 7 + 915 , 8 @ @ class MyClass { <nl> < section name = " ParameterName " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Validates identifiers for parameters . <nl> + Checks that method and < code > catch < / code > parameter names conform to a format specified <nl> + by the format property . <nl> < / p > <nl> < / subsection > <nl>
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java <nl> index fea4958 . . f3d4972 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java <nl> @ @ - 90 , 10 + 90 , 13 @ @ public class ObjectBlockHandler extends BlockParentHandler <nl> public IndentLevel getLevelImpl ( ) <nl> { <nl> DetailAST parentAST = getMainAst ( ) . getParent ( ) ; <nl> - final IndentLevel indent = getParent ( ) . getLevel ( ) ; <nl> + IndentLevel indent = getParent ( ) . getLevel ( ) ; <nl> if ( parentAST . getType ( ) = = TokenTypes . LITERAL _ NEW ) { <nl> indent . addAcceptedIndent ( super . getLevelImpl ( ) ) ; <nl> } <nl> + else if ( parentAST . getType ( ) = = TokenTypes . ENUM _ CONSTANT _ DEF ) { <nl> + indent = super . getLevelImpl ( ) ; <nl> + } <nl> return indent ; <nl> } <nl> <nl> diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / indentation / InputValidBlockIndent . java b / src / testinputs / com / puppycrawl / tools / checkstyle / indentation / InputValidBlockIndent . java <nl> index 2c02563 . . bb3dd68 100644 <nl> - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / indentation / InputValidBlockIndent . java <nl> + + + b / src / testinputs / com / puppycrawl / tools / checkstyle / indentation / InputValidBlockIndent . java <nl> @ @ - 69 , 3 + 69 , 61 @ @ public class InputValidBlockIndent { <nl> <nl> <nl> } <nl> + <nl> + public enum EquivalenceTester { <nl> + / * * <nl> + * An equivalence tester that decides based on { @ link Object # equals ( Object ) equals } . <nl> + * / <nl> + OBJECT _ ATTRIBUTES { <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + public boolean areEqual ( final Object first , final Object second ) { <nl> + return Objects . areEqual ( first , second ) ; <nl> + } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + public int hashCode ( final Object target ) { <nl> + return Objects . nullSafeHashCode ( target ) ; <nl> + } <nl> + } , <nl> + <nl> + / * * <nl> + * An equivalence tester that decides based on { @ code = = } . <nl> + * / <nl> + OBJECT _ IDENTITIES <nl> + { <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + public boolean areEqual ( final Object first , final Object second ) { <nl> + return first = = second ; <nl> + } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + public int hashCode ( final Object target ) { <nl> + return System . identityHashCode ( target ) ; <nl> + } <nl> + } ; <nl> + <nl> + / * * <nl> + * Tells whether the two given objects are considered equivalent . <nl> + * <nl> + * @ param first first comparand <nl> + * @ param second second comparand <nl> + * @ return whether { @ code first } and { @ code second } are considered equivalent <nl> + * / <nl> + public abstract boolean areEqual ( Object first , Object second ) ; <nl> + <nl> + / * * <nl> + * Computes a hash code for the given object . <nl> + * <nl> + * @ param target object to compute a hash for <nl> + * @ return the computed hash <nl> + * / <nl> + public abstract int hashCode ( Object target ) ; <nl> + } <nl> diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index 0c6d99a . . b579815 100755 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 17 , 6 + 17 , 9 @ @ <nl> < li > DesignForExtension check skips enums now ( they are final <nl> : ) . ( bug # 1194470 ) < / li > <nl> <nl> + < li > One more fix for Indentation check and enums ( bug <nl> + 1193850 ) < / li > <nl> + <nl> < / ul > <nl> <nl> < / section >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 index aa22c60 . . 20527fa 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 @ @ - 24 , 7 + 24 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 / * * 
 * < p > 
 - * Checks that parameter names conform to a format specified 
 + * Checks that method and < code > catch < / code > parameter names conform to a format specified 
 * by the format property . The format is a 
 * { @ link java . util . regex . Pattern regular expression } 
 * and defaults to 
 diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index f417cb8 . . f84615a 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 915 , 7 + 915 , 8 @ @ class MyClass { 
 < section name = " ParameterName " > 
 < subsection name = " Description " > 
 < p > 
 - Validates identifiers for parameters . 
 + Checks that method and < code > catch < / code > parameter names conform to a format specified 
 + by the format property . 
 < / p > 
 < / subsection > 


NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java 
 index fea4958 . . f3d4972 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ObjectBlockHandler . java 
 @ @ - 90 , 10 + 90 , 13 @ @ public class ObjectBlockHandler extends BlockParentHandler 
 public IndentLevel getLevelImpl ( ) 
 { 
 DetailAST parentAST = getMainAst ( ) . getParent ( ) ; 
 - final IndentLevel indent = getParent ( ) . getLevel ( ) ; 
 + IndentLevel indent = getParent ( ) . getLevel ( ) ; 
 if ( parentAST . getType ( ) = = TokenTypes . LITERAL _ NEW ) { 
 indent . addAcceptedIndent ( super . getLevelImpl ( ) ) ; 
 } 
 + else if ( parentAST . getType ( ) = = TokenTypes . ENUM _ CONSTANT _ DEF ) { 
 + indent = super . getLevelImpl ( ) ; 
 + } 
 return indent ; 
 } 
 
 diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / indentation / InputValidBlockIndent . java b / src / testinputs / com / puppycrawl / tools / checkstyle / indentation / InputValidBlockIndent . java 
 index 2c02563 . . bb3dd68 100644 
 - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / indentation / InputValidBlockIndent . java 
 + + + b / src / testinputs / com / puppycrawl / tools / checkstyle / indentation / InputValidBlockIndent . java 
 @ @ - 69 , 3 + 69 , 61 @ @ public class InputValidBlockIndent { 
 
 
 } 
 + 
 + public enum EquivalenceTester { 
 + / * * 
 + * An equivalence tester that decides based on { @ link Object # equals ( Object ) equals } . 
 + * / 
 + OBJECT _ ATTRIBUTES { 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + public boolean areEqual ( final Object first , final Object second ) { 
 + return Objects . areEqual ( first , second ) ; 
 + } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + public int hashCode ( final Object target ) { 
 + return Objects . nullSafeHashCode ( target ) ; 
 + } 
 + } , 
 + 
 + / * * 
 + * An equivalence tester that decides based on { @ code = = } . 
 + * / 
 + OBJECT _ IDENTITIES 
 + { 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + public boolean areEqual ( final Object first , final Object second ) { 
 + return first = = second ; 
 + } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + public int hashCode ( final Object target ) { 
 + return System . identityHashCode ( target ) ; 
 + } 
 + } ; 
 + 
 + / * * 
 + * Tells whether the two given objects are considered equivalent . 
 + * 
 + * @ param first first comparand 
 + * @ param second second comparand 
 + * @ return whether { @ code first } and { @ code second } are considered equivalent 
 + * / 
 + public abstract boolean areEqual ( Object first , Object second ) ; 
 + 
 + / * * 
 + * Computes a hash code for the given object . 
 + * 
 + * @ param target object to compute a hash for 
 + * @ return the computed hash 
 + * / 
 + public abstract int hashCode ( Object target ) ; 
 + } 
 diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index 0c6d99a . . b579815 100755 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 17 , 6 + 17 , 9 @ @ 
 < li > DesignForExtension check skips enums now ( they are final 
 : ) . ( bug # 1194470 ) < / li > 
 
 + < li > One more fix for Indentation check and enums ( bug 
 + 1193850 ) < / li > 
 + 
 < / ul > 
 
 < / section >
