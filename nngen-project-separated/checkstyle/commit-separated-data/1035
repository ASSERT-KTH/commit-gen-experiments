BLEU SCORE: 0.020315766105349124

TEST MSG: minor : formatting fix just to trigger PR
GENERATED MSG: adding travis config file - additionally it is needed to activate travis on this github repo

TEST DIFF (one line): diff - - git a / wercker . yml b / wercker . yml <nl> index 2fa9bac . . 5030771 100644 <nl> - - - a / wercker . yml <nl> + + + b / wercker . yml <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> box : maven : 3 . 3 . 9 - jdk - 8 <nl> + <nl> build : <nl> steps : <nl> - script :
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> index a856f33 . . 061647e 100755 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . ScopeUtils ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . api . Utils ; <nl> + <nl> import java . util . Set ; <nl> import java . util . regex . Pattern ; <nl> import java . util . regex . PatternSyntaxException ; <nl> @ @ - 249 , 7 + 250 , 7 @ @ public class HiddenFieldCheck <nl> * / <nl> private boolean isIgnoredSetterParam ( DetailAST aAST , String aName ) <nl> { <nl> - if ( ! ( aAST . getType ( ) = = TokenTypes . PARAMETER _ DEF ) <nl> + if ( aAST . getType ( ) ! = TokenTypes . PARAMETER _ DEF <nl> | | ! mIgnoreSetter ) <nl> { <nl> return false ; <nl> @ @ - 264 , 18 + 265 , 37 @ @ public class HiddenFieldCheck <nl> if ( methodAST . getType ( ) ! = TokenTypes . METHOD _ DEF ) { <nl> return false ; <nl> } <nl> - / / property setter name ? <nl> - final String expectedName = <nl> - " set " + aName . substring ( 0 , 1 ) . toUpperCase ( ) + aName . substring ( 1 ) ; <nl> - final DetailAST methodNameAST = <nl> - methodAST . findFirstToken ( TokenTypes . IDENT ) ; <nl> - final String methodName = methodNameAST . getText ( ) ; <nl> - if ( ! methodName . equals ( expectedName ) ) { <nl> - return false ; <nl> - } <nl> / / void ? <nl> final DetailAST typeAST = methodAST . findFirstToken ( TokenTypes . TYPE ) ; <nl> - return typeAST . branchContains ( TokenTypes . LITERAL _ VOID ) ; <nl> + if ( ! typeAST . branchContains ( TokenTypes . LITERAL _ VOID ) ) { <nl> + return false ; <nl> + } <nl> + <nl> + / / property setter name ? <nl> + final String methodName = <nl> + methodAST . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; <nl> + final String expectedName = " set " + capitalize ( aName ) ; <nl> + return methodName . equals ( expectedName ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Capitalizes a given property name the way we expect to see it in <nl> + * a setter name . <nl> + * @ param aName a property name <nl> + * @ return capitalized property name <nl> + * / <nl> + private static String capitalize ( final String aName ) <nl> + { <nl> + if ( aName = = null | | aName . length ( ) = = 0 ) { <nl> + return aName ; <nl> + } <nl> + / / we should not capitalize the first character if the second <nl> + / / one is a capital one , since according to JavaBeans spec <nl> + / / setXYzz ( ) is a setter for XYzz property , not for xYzz one . <nl> + if ( aName . length ( ) > 1 & & Character . isUpperCase ( aName . charAt ( 1 ) ) ) { <nl> + return aName ; <nl> + } <nl> + return aName . substring ( 0 , 1 ) . toUpperCase ( ) + aName . substring ( 1 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 438 , 14 + 458 , 11 @ @ public class HiddenFieldCheck <nl> * / <nl> public boolean containsInstanceField ( String aField ) <nl> { <nl> - if ( mInstanceFields . contains ( aField ) ) { <nl> - return true ; <nl> - } <nl> - if ( isStaticType ( ) ) { <nl> - return false ; <nl> - } <nl> + return mInstanceFields . contains ( aField ) <nl> + | | ! isStaticType ( ) <nl> + & & ( mParent ! = null ) <nl> + & & mParent . containsInstanceField ( aField ) ; <nl> <nl> - return ( mParent ! = null ) & & mParent . containsInstanceField ( aField ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 455 , 11 + 472 , 10 @ @ public class HiddenFieldCheck <nl> * / <nl> public boolean containsStaticField ( String aField ) <nl> { <nl> - if ( mStaticFields . contains ( aField ) ) { <nl> - return true ; <nl> - } <nl> + return mStaticFields . contains ( aField ) <nl> + | | ( mParent ! = null ) <nl> + & & mParent . containsStaticField ( aField ) ; <nl> <nl> - return ( mParent ! = null ) & & mParent . containsStaticField ( aField ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / InputHiddenField . java b / src / testinputs / com / puppycrawl / tools / checkstyle / InputHiddenField . java <nl> index 77610be . . 9d16bfd 100755 <nl> - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / InputHiddenField . java <nl> + + + b / src / testinputs / com / puppycrawl / tools / checkstyle / InputHiddenField . java <nl> @ @ - 101 , 13 + 101 , 13 @ @ class PropertySetter <nl> { <nl> this . prop = prop ; <nl> } <nl> - <nl> + <nl> / * * error - incorrect method name * / <nl> public void setprop ( int prop ) <nl> { <nl> this . prop = prop ; <nl> } <nl> - <nl> + <nl> / * * error - more than one parameter * / <nl> public void setProp ( int prop , int extra ) <nl> { <nl> @ @ - 229 , 3 + 229 , 11 @ @ abstract class InputHiddenFieldBug1084512 { <nl> String x ; <nl> public abstract void methodA ( String x ) ; <nl> } <nl> + <nl> + class Bug3370946 { <nl> + private int xAxis ; <nl> + <nl> + public void setxAxis ( int xAxis ) { <nl> + this . xAxis = xAxis ; <nl> + } <nl> + } <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java <nl> index 4fdfa1a . . 654d6a0 100755 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java <nl> @ @ - 92 , 6 + 92 , 7 @ @ public class HiddenFieldCheckTest <nl> " 217 : 13 : ' hidden ' hides a field . " , <nl> " 223 : 13 : ' hiddenStatic ' hides a field . " , <nl> " 230 : 41 : ' x ' hides a field . " , <nl> + " 236 : 30 : ' xAxis ' hides a field . " , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputHiddenField . java " ) , expected ) ; <nl> } <nl> @ @ - 129 , 6 + 130 , 7 @ @ public class HiddenFieldCheckTest <nl> " 217 : 13 : ' hidden ' hides a field . " , <nl> " 223 : 13 : ' hiddenStatic ' hides a field . " , <nl> " 230 : 41 : ' x ' hides a field . " , <nl> + " 236 : 30 : ' xAxis ' hides a field . " , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputHiddenField . java " ) , expected ) ; <nl> } <nl> @ @ - 211 , 6 + 213 , 7 @ @ public class HiddenFieldCheckTest <nl> " 217 : 13 : ' hidden ' hides a field . " , <nl> " 223 : 13 : ' hiddenStatic ' hides a field . " , <nl> " 230 : 41 : ' x ' hides a field . " , <nl> + " 236 : 30 : ' xAxis ' hides a field . " , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputHiddenField . java " ) , expected ) ; <nl> } <nl> @ @ - 284 , 6 + 287 , 7 @ @ public class HiddenFieldCheckTest <nl> " 210 : 20 : ' hidden ' hides a field . " , <nl> " 217 : 13 : ' hidden ' hides a field . " , <nl> " 223 : 13 : ' hiddenStatic ' hides a field . " , <nl> + " 236 : 30 : ' xAxis ' hides a field . " , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputHiddenField . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index ca4e47e . . 1518c70 100755 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 34 , 6 + 34 , 11 @ @ <nl> < a href = " config _ conding . html # RequireThis " > RequireThis < / a > now <nl> ignores static members ( bug # 1155921 ) . <nl> < / li > <nl> + < li > <nl> + < a href = " config _ conding . html # HiddenField " > HiddenField < / a > now <nl> + treats setxYz ( ) as a setter for xYz , and setXYz ( ) as a setter for <nl> + XYz property to comply JavaBeans specification ( bug # 3370946 ) . <nl> + < / li > <nl> < / ul > <nl> < p > Notes : < / p > <nl> < ul >

TEST DIFF:
diff - - git a / wercker . yml b / wercker . yml 
 index 2fa9bac . . 5030771 100644 
 - - - a / wercker . yml 
 + + + b / wercker . yml 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 box : maven : 3 . 3 . 9 - jdk - 8 
 + 
 build : 
 steps : 
 - script :

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 index a856f33 . . 061647e 100755 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 @ @ - 24 , 6 + 24 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . ScopeUtils ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . api . Utils ; 
 + 
 import java . util . Set ; 
 import java . util . regex . Pattern ; 
 import java . util . regex . PatternSyntaxException ; 
 @ @ - 249 , 7 + 250 , 7 @ @ public class HiddenFieldCheck 
 * / 
 private boolean isIgnoredSetterParam ( DetailAST aAST , String aName ) 
 { 
 - if ( ! ( aAST . getType ( ) = = TokenTypes . PARAMETER _ DEF ) 
 + if ( aAST . getType ( ) ! = TokenTypes . PARAMETER _ DEF 
 | | ! mIgnoreSetter ) 
 { 
 return false ; 
 @ @ - 264 , 18 + 265 , 37 @ @ public class HiddenFieldCheck 
 if ( methodAST . getType ( ) ! = TokenTypes . METHOD _ DEF ) { 
 return false ; 
 } 
 - / / property setter name ? 
 - final String expectedName = 
 - " set " + aName . substring ( 0 , 1 ) . toUpperCase ( ) + aName . substring ( 1 ) ; 
 - final DetailAST methodNameAST = 
 - methodAST . findFirstToken ( TokenTypes . IDENT ) ; 
 - final String methodName = methodNameAST . getText ( ) ; 
 - if ( ! methodName . equals ( expectedName ) ) { 
 - return false ; 
 - } 
 / / void ? 
 final DetailAST typeAST = methodAST . findFirstToken ( TokenTypes . TYPE ) ; 
 - return typeAST . branchContains ( TokenTypes . LITERAL _ VOID ) ; 
 + if ( ! typeAST . branchContains ( TokenTypes . LITERAL _ VOID ) ) { 
 + return false ; 
 + } 
 + 
 + / / property setter name ? 
 + final String methodName = 
 + methodAST . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; 
 + final String expectedName = " set " + capitalize ( aName ) ; 
 + return methodName . equals ( expectedName ) ; 
 + } 
 + 
 + / * * 
 + * Capitalizes a given property name the way we expect to see it in 
 + * a setter name . 
 + * @ param aName a property name 
 + * @ return capitalized property name 
 + * / 
 + private static String capitalize ( final String aName ) 
 + { 
 + if ( aName = = null | | aName . length ( ) = = 0 ) { 
 + return aName ; 
 + } 
 + / / we should not capitalize the first character if the second 
 + / / one is a capital one , since according to JavaBeans spec 
 + / / setXYzz ( ) is a setter for XYzz property , not for xYzz one . 
 + if ( aName . length ( ) > 1 & & Character . isUpperCase ( aName . charAt ( 1 ) ) ) { 
 + return aName ; 
 + } 
 + return aName . substring ( 0 , 1 ) . toUpperCase ( ) + aName . substring ( 1 ) ; 
 } 
 
 / * * 
 @ @ - 438 , 14 + 458 , 11 @ @ public class HiddenFieldCheck 
 * / 
 public boolean containsInstanceField ( String aField ) 
 { 
 - if ( mInstanceFields . contains ( aField ) ) { 
 - return true ; 
 - } 
 - if ( isStaticType ( ) ) { 
 - return false ; 
 - } 
 + return mInstanceFields . contains ( aField ) 
 + | | ! isStaticType ( ) 
 + & & ( mParent ! = null ) 
 + & & mParent . containsInstanceField ( aField ) ; 
 
 - return ( mParent ! = null ) & & mParent . containsInstanceField ( aField ) ; 
 } 
 
 / * * 
 @ @ - 455 , 11 + 472 , 10 @ @ public class HiddenFieldCheck 
 * / 
 public boolean containsStaticField ( String aField ) 
 { 
 - if ( mStaticFields . contains ( aField ) ) { 
 - return true ; 
 - } 
 + return mStaticFields . contains ( aField ) 
 + | | ( mParent ! = null ) 
 + & & mParent . containsStaticField ( aField ) ; 
 
 - return ( mParent ! = null ) & & mParent . containsStaticField ( aField ) ; 
 } 
 
 / * * 
 diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / InputHiddenField . java b / src / testinputs / com / puppycrawl / tools / checkstyle / InputHiddenField . java 
 index 77610be . . 9d16bfd 100755 
 - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / InputHiddenField . java 
 + + + b / src / testinputs / com / puppycrawl / tools / checkstyle / InputHiddenField . java 
 @ @ - 101 , 13 + 101 , 13 @ @ class PropertySetter 
 { 
 this . prop = prop ; 
 } 
 - 
 + 
 / * * error - incorrect method name * / 
 public void setprop ( int prop ) 
 { 
 this . prop = prop ; 
 } 
 - 
 + 
 / * * error - more than one parameter * / 
 public void setProp ( int prop , int extra ) 
 { 
 @ @ - 229 , 3 + 229 , 11 @ @ abstract class InputHiddenFieldBug1084512 { 
 String x ; 
 public abstract void methodA ( String x ) ; 
 } 
 + 
 + class Bug3370946 { 
 + private int xAxis ; 
 + 
 + public void setxAxis ( int xAxis ) { 
 + this . xAxis = xAxis ; 
 + } 
 + } 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java 
 index 4fdfa1a . . 654d6a0 100755 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java 
 @ @ - 92 , 6 + 92 , 7 @ @ public class HiddenFieldCheckTest 
 " 217 : 13 : ' hidden ' hides a field . " , 
 " 223 : 13 : ' hiddenStatic ' hides a field . " , 
 " 230 : 41 : ' x ' hides a field . " , 
 + " 236 : 30 : ' xAxis ' hides a field . " , 
 } ; 
 verify ( checkConfig , getPath ( " InputHiddenField . java " ) , expected ) ; 
 } 
 @ @ - 129 , 6 + 130 , 7 @ @ public class HiddenFieldCheckTest 
 " 217 : 13 : ' hidden ' hides a field . " , 
 " 223 : 13 : ' hiddenStatic ' hides a field . " , 
 " 230 : 41 : ' x ' hides a field . " , 
 + " 236 : 30 : ' xAxis ' hides a field . " , 
 } ; 
 verify ( checkConfig , getPath ( " InputHiddenField . java " ) , expected ) ; 
 } 
 @ @ - 211 , 6 + 213 , 7 @ @ public class HiddenFieldCheckTest 
 " 217 : 13 : ' hidden ' hides a field . " , 
 " 223 : 13 : ' hiddenStatic ' hides a field . " , 
 " 230 : 41 : ' x ' hides a field . " , 
 + " 236 : 30 : ' xAxis ' hides a field . " , 
 } ; 
 verify ( checkConfig , getPath ( " InputHiddenField . java " ) , expected ) ; 
 } 
 @ @ - 284 , 6 + 287 , 7 @ @ public class HiddenFieldCheckTest 
 " 210 : 20 : ' hidden ' hides a field . " , 
 " 217 : 13 : ' hidden ' hides a field . " , 
 " 223 : 13 : ' hiddenStatic ' hides a field . " , 
 + " 236 : 30 : ' xAxis ' hides a field . " , 
 } ; 
 verify ( checkConfig , getPath ( " InputHiddenField . java " ) , expected ) ; 
 } 
 diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index ca4e47e . . 1518c70 100755 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 34 , 6 + 34 , 11 @ @ 
 < a href = " config _ conding . html # RequireThis " > RequireThis < / a > now 
 ignores static members ( bug # 1155921 ) . 
 < / li > 
 + < li > 
 + < a href = " config _ conding . html # HiddenField " > HiddenField < / a > now 
 + treats setxYz ( ) as a setter for xYz , and setXYz ( ) as a setter for 
 + XYz property to comply JavaBeans specification ( bug # 3370946 ) . 
 + < / li > 
 < / ul > 
 < p > Notes : < / p > 
 < ul >
