BLEU SCORE: 0.8801117367933934

TEST MSG: Issue # 6532 : aligned javadoc / xdoc for RightCurly
GENERATED MSG: Issue # 6532 : aligned javadoc / xdoc for LeftCurly

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index bac981b . . 8a1c438 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 30 , 44 + 30 , 55 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> <nl> / * * <nl> * < p > <nl> - * Checks the placement of right curly braces . <nl> - * The policy to verify is specified using the { @ link RightCurlyOption } class <nl> - * and defaults to { @ link RightCurlyOption # SAME } . <nl> - * < / p > <nl> - * < p > By default the check will check the following tokens : <nl> - * { @ link TokenTypes # LITERAL _ TRY LITERAL _ TRY } , <nl> - * { @ link TokenTypes # LITERAL _ CATCH LITERAL _ CATCH } , <nl> - * { @ link TokenTypes # LITERAL _ FINALLY LITERAL _ FINALLY } , <nl> - * { @ link TokenTypes # LITERAL _ IF LITERAL _ IF } , <nl> - * { @ link TokenTypes # LITERAL _ ELSE LITERAL _ ELSE } . <nl> - * Other acceptable tokens are : <nl> - * { @ link TokenTypes # CLASS _ DEF CLASS _ DEF } , <nl> - * { @ link TokenTypes # METHOD _ DEF METHOD _ DEF } , <nl> - * { @ link TokenTypes # CTOR _ DEF CTOR _ DEF } . <nl> - * { @ link TokenTypes # LITERAL _ FOR LITERAL _ FOR } . <nl> - * { @ link TokenTypes # LITERAL _ WHILE LITERAL _ WHILE } . <nl> - * { @ link TokenTypes # LITERAL _ DO LITERAL _ DO } . <nl> - * { @ link TokenTypes # STATIC _ INIT STATIC _ INIT } . <nl> - * { @ link TokenTypes # INSTANCE _ INIT INSTANCE _ INIT } . <nl> + * Checks the placement of right curly braces ( < code > ' } ' < / code > ) <nl> + * for if - else , try - catch - finally blocks , while - loops , for - loops , <nl> + * method definitions , class definitions , constructor definitions , <nl> + * instance and static initialization blocks . <nl> + * For right curly brace of expression blocks please follow issue <nl> + * < a href = " https : / / github . com / checkstyle / checkstyle / issues / 5945 " > # 5945 < / a > . <nl> * < / p > <nl> + * < ul > <nl> + * < li > <nl> + * Property { @ code option } - Specify the policy on placement of a right curly brace <nl> + * ( < code > ' } ' < / code > ) . <nl> + * Default value is { @ code same } . <nl> + * < / li > <nl> + * < li > <nl> + * Property { @ code tokens } - tokens to check <nl> + * Default value is : <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ TRY " > <nl> + * LITERAL _ TRY < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ CATCH " > <nl> + * LITERAL _ CATCH < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ FINALLY " > <nl> + * LITERAL _ FINALLY < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ IF " > <nl> + * LITERAL _ IF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ ELSE " > <nl> + * LITERAL _ ELSE < / a > . <nl> + * < / li > <nl> + * < / ul > <nl> * < p > <nl> - * An example of how to configure the check is : <nl> + * To configure the check : <nl> * < / p > <nl> * < pre > <nl> * & lt ; module name = " RightCurly " / & gt ; <nl> * < / pre > <nl> * < p > <nl> - * An example of how to configure the check with policy <nl> - * { @ link RightCurlyOption # ALONE } for { @ code else } and <nl> - * { @ code { @ link TokenTypes # METHOD _ DEF METHOD _ DEF } } tokens is : <nl> + * To configure the check with policy { @ code alone } for { @ code else } and <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > <nl> + * METHOD _ DEF < / a > tokens : <nl> * < / p > <nl> * < pre > <nl> - * & lt ; module name = " RightCurly " & gt ; <nl> - * & lt ; property name = " tokens " value = " LITERAL _ ELSE " / & gt ; <nl> - * & lt ; property name = " option " value = " alone " / & gt ; <nl> + * & lt ; module name = & quot ; RightCurly & quot ; & gt ; <nl> + * & lt ; property name = & quot ; option & quot ; value = & quot ; alone & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ ELSE , METHOD _ DEF & quot ; / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> * <nl> + * @ since 3 . 0 <nl> + * @ noinspection HtmlTagCanBeJavadocTag <nl> + * <nl> * / <nl> @ StatelessCheck <nl> public class RightCurlyCheck extends AbstractCheck { <nl> @ @ - 90 , 13 + 101 , 17 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> * / <nl> public static final String MSG _ KEY _ LINE _ SAME = " line . same " ; <nl> <nl> - / * * The policy to enforce . * / <nl> + / * * <nl> + * Specify the policy on placement of a right curly brace ( < code > ' } ' < / code > ) . <nl> + * @ noinspection HtmlTagCanBeJavadocTag <nl> + * / <nl> private RightCurlyOption option = RightCurlyOption . SAME ; <nl> <nl> / * * <nl> - * Sets the option to enforce . <nl> + * Setter to specify the policy on placement of a right curly brace ( < code > ' } ' < / code > ) . <nl> * @ param optionStr string to decode option from <nl> * @ throws IllegalArgumentException if unable to decode <nl> + * @ noinspection HtmlTagCanBeJavadocTag <nl> * / <nl> public void setOption ( String optionStr ) { <nl> option = RightCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> index b434a89 . . 3d4680f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> @ @ - 97 , 6 + 97 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { <nl> " NeedBraces " , <nl> " PackageName " , <nl> " ParameterName " , <nl> + " RightCurly " , <nl> " StaticVariableName " , <nl> " SuppressWarnings " , <nl> " SuppressWarningsHolder " , <nl> diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml <nl> index b92b953 . . 4133fc4 100644 <nl> - - - a / src / xdocs / config _ blocks . xml <nl> + + + b / src / xdocs / config _ blocks . xml <nl> @ @ - 901 , 14 + 901 , 13 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK <nl> < / section > <nl> <nl> < section name = " RightCurly " > <nl> + < p > Since Checkstyle 3 . 0 < / p > <nl> < subsection name = " Description " id = " RightCurly _ Description " > <nl> - < p > Since Checkstyle 3 . 0 < / p > <nl> < p > <nl> Checks the placement of right curly braces ( < code > ' } ' < / code > ) <nl> for if - else , try - catch - finally blocks , while - loops , for - loops , <nl> method definitions , class definitions , constructor definitions , <nl> instance and static initialization blocks . <nl> - The policy to verify is specified using the property < code > option < / code > . <nl> For right curly brace of expression blocks please follow issue <nl> < a href = " https : / / github . com / checkstyle / checkstyle / issues / 5945 " > # 5945 < / a > . <nl> < / p > <nl> @ @ - 925 , 7 + 924 , 7 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK <nl> < / tr > <nl> < tr > <nl> < td > option < / td > <nl> - < td > policy on placement of a right curly brace ( < code > ' } ' < / code > ) < / td > <nl> + < td > Specify the policy on placement of a right curly brace ( < code > ' } ' < / code > ) . < / td > <nl> < td > < a href = " property _ types . html # rcurly " > Right Curly Brace Policy < / a > < / td > <nl> < td > < code > same < / code > < / td > <nl> < td > 3 . 0 < / td > <nl> @ @ - 933 , 7 + 932 , 6 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK <nl> < tr > <nl> < td > tokens < / td > <nl> < td > tokens to check < / td > <nl> - <nl> < td > subset of tokens < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ TRY " > <nl> LITERAL _ TRY < / a > ,
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> index 4cf4670 . . e51a652 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> @ @ - 245 , 12 + 245 , 6 @ @ public class AnnotationLocationCheck extends AbstractCheck { <nl> TokenTypes . VARIABLE _ DEF , <nl> TokenTypes . PARAMETER _ DEF , <nl> TokenTypes . ANNOTATION _ DEF , <nl> - TokenTypes . TYPECAST , <nl> - TokenTypes . LITERAL _ THROWS , <nl> - TokenTypes . IMPLEMENTS _ CLAUSE , <nl> - TokenTypes . TYPE _ ARGUMENT , <nl> - TokenTypes . LITERAL _ NEW , <nl> - TokenTypes . DOT , <nl> TokenTypes . ANNOTATION _ FIELD _ DEF , <nl> } ; <nl> } <nl> @ @ - 263 , 10 + 257 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { <nl> @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> final DetailAST modifiersNode = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - <nl> - if ( modifiersNode ! = null ) { <nl> - checkAnnotations ( modifiersNode , getExpectedAnnotationIndentation ( modifiersNode ) ) ; <nl> - } <nl> + checkAnnotations ( modifiersNode , getExpectedAnnotationIndentation ( modifiersNode ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> index defccdf . . 116a5e1 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> @ @ - 84 , 9 + 84 , 7 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { <nl> public void testIncorrectAllTokens ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationLocationCheck . class ) ; <nl> checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " <nl> - + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , " <nl> - + " LITERAL _ THROWS , IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , " <nl> - + " ANNOTATION _ FIELD _ DEF " ) ; <nl> + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF " ) ; <nl> final String [ ] expected = { <nl> " 6 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnn " ) , <nl> " 11 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , <nl> @ @ - 125 , 12 + 123 , 6 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { <nl> TokenTypes . VARIABLE _ DEF , <nl> TokenTypes . PARAMETER _ DEF , <nl> TokenTypes . ANNOTATION _ DEF , <nl> - TokenTypes . TYPECAST , <nl> - TokenTypes . LITERAL _ THROWS , <nl> - TokenTypes . IMPLEMENTS _ CLAUSE , <nl> - TokenTypes . TYPE _ ARGUMENT , <nl> - TokenTypes . LITERAL _ NEW , <nl> - TokenTypes . DOT , <nl> TokenTypes . ANNOTATION _ FIELD _ DEF , <nl> } ; <nl> assertArrayEquals ( " Default acceptable tokens are invalid " , expected , actual ) ; <nl> @ @ - 184 , 9 + 176 , 7 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { <nl> public void testAllTokens ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationLocationCheck . class ) ; <nl> checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " <nl> - + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , " <nl> - + " LITERAL _ THROWS , IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , " <nl> - + " ANNOTATION _ FIELD _ DEF " ) ; <nl> + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF " ) ; <nl> final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , getPath ( " InputAnnotationLocationWithoutAnnotations . java " ) , expected ) ; <nl> } <nl> @ @ - 195 , 9 + 185 , 7 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { <nl> public void testAnnotationInForEachLoopParameterAndVariableDef ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationLocationCheck . class ) ; <nl> checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " <nl> - + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , LITERAL _ THROWS , " <nl> - + " IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , ANNOTATION _ FIELD _ DEF , " <nl> - + " TYPE _ ARGUMENT " ) ; <nl> + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF " ) ; <nl> checkConfig . addAttribute ( " allowSamelineMultipleAnnotations " , " false " ) ; <nl> checkConfig . addAttribute ( " allowSamelineSingleParameterlessAnnotation " , " false " ) ; <nl> checkConfig . addAttribute ( " allowSamelineParameterizedAnnotation " , " false " ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> index 0e7e245 . . 53899bb 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> @ @ - 138 , 8 + 138 , 7 @ @ public class AllChecksTest extends AbstractModuleTestSupport { <nl> / / state of the configuration when test was made until reason found in <nl> / / https : / / github . com / checkstyle / checkstyle / issues / 3730 <nl> CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " AnnotationLocation " , <nl> - Stream . of ( " TYPECAST " , " DOT " , " TYPE _ ARGUMENT " , " LITERAL _ NEW " , " LITERAL _ THROWS " , <nl> - " IMPLEMENTS _ CLAUSE " , " CLASS _ DEF " , " CTOR _ DEF " , " ENUM _ DEF " , " INTERFACE _ DEF " , <nl> + Stream . of ( " CLASS _ DEF " , " CTOR _ DEF " , " ENUM _ DEF " , " INTERFACE _ DEF " , <nl> " METHOD _ DEF " , " VARIABLE _ DEF " ) . collect ( Collectors . toSet ( ) ) ) ; <nl> CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " NoLineWrap " , Stream . of ( <nl> / / method declaration could be long due to " parameters / exceptions " , it is ok to <nl> @ @ - 174 , 8 + 173 , 7 @ @ public class AllChecksTest extends AbstractModuleTestSupport { <nl> GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " AnnotationLocation " , Stream . of ( <nl> / / state of the configuration when test was made until reason found in <nl> / / https : / / github . com / checkstyle / checkstyle / issues / 3730 <nl> - " TYPECAST " , " DOT " , " TYPE _ ARGUMENT " , " ANNOTATION _ DEF " , " LITERAL _ NEW " , <nl> - " LITERAL _ THROWS " , " PARAMETER _ DEF " , " IMPLEMENTS _ CLAUSE " , " ANNOTATION _ FIELD _ DEF " ) <nl> + " ANNOTATION _ DEF " , " PARAMETER _ DEF " , " ANNOTATION _ FIELD _ DEF " ) <nl> . collect ( Collectors . toSet ( ) ) ) ; <nl> GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " AbbreviationAsWordInName " , Stream . of ( <nl> / / enum values should be uppercase <nl> diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml <nl> index ae34ca3 . . 87e9703 100644 <nl> - - - a / src / xdocs / config _ annotation . xml <nl> + + + b / src / xdocs / config _ annotation . xml <nl> @ @ - 100 , 17 + 100 , 6 @ @ public String getNameIfPresent ( ) { . . . } <nl> PARAMETER _ DEF < / a > , <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ DEF " > <nl> ANNOTATION _ DEF < / a > , <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # TYPECAST " > <nl> - TYPECAST < / a > , <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ THROWS " > <nl> - LITERAL _ THROWS < / a > , <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # IMPLEMENTS _ CLAUSE " > <nl> - IMPLEMENTS _ CLAUSE < / a > , <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # TYPE _ ARGUMENT " > <nl> - TYPE _ ARGUMENT < / a > , <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ NEW " > <nl> - LITERAL _ NEW < / a > , <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # DOT " > DOT < / a > , <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ FIELD _ DEF " > <nl> ANNOTATION _ FIELD _ DEF < / a > . <nl> < / td >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index bac981b . . 8a1c438 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 30 , 44 + 30 , 55 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 
 / * * 
 * < p > 
 - * Checks the placement of right curly braces . 
 - * The policy to verify is specified using the { @ link RightCurlyOption } class 
 - * and defaults to { @ link RightCurlyOption # SAME } . 
 - * < / p > 
 - * < p > By default the check will check the following tokens : 
 - * { @ link TokenTypes # LITERAL _ TRY LITERAL _ TRY } , 
 - * { @ link TokenTypes # LITERAL _ CATCH LITERAL _ CATCH } , 
 - * { @ link TokenTypes # LITERAL _ FINALLY LITERAL _ FINALLY } , 
 - * { @ link TokenTypes # LITERAL _ IF LITERAL _ IF } , 
 - * { @ link TokenTypes # LITERAL _ ELSE LITERAL _ ELSE } . 
 - * Other acceptable tokens are : 
 - * { @ link TokenTypes # CLASS _ DEF CLASS _ DEF } , 
 - * { @ link TokenTypes # METHOD _ DEF METHOD _ DEF } , 
 - * { @ link TokenTypes # CTOR _ DEF CTOR _ DEF } . 
 - * { @ link TokenTypes # LITERAL _ FOR LITERAL _ FOR } . 
 - * { @ link TokenTypes # LITERAL _ WHILE LITERAL _ WHILE } . 
 - * { @ link TokenTypes # LITERAL _ DO LITERAL _ DO } . 
 - * { @ link TokenTypes # STATIC _ INIT STATIC _ INIT } . 
 - * { @ link TokenTypes # INSTANCE _ INIT INSTANCE _ INIT } . 
 + * Checks the placement of right curly braces ( < code > ' } ' < / code > ) 
 + * for if - else , try - catch - finally blocks , while - loops , for - loops , 
 + * method definitions , class definitions , constructor definitions , 
 + * instance and static initialization blocks . 
 + * For right curly brace of expression blocks please follow issue 
 + * < a href = " https : / / github . com / checkstyle / checkstyle / issues / 5945 " > # 5945 < / a > . 
 * < / p > 
 + * < ul > 
 + * < li > 
 + * Property { @ code option } - Specify the policy on placement of a right curly brace 
 + * ( < code > ' } ' < / code > ) . 
 + * Default value is { @ code same } . 
 + * < / li > 
 + * < li > 
 + * Property { @ code tokens } - tokens to check 
 + * Default value is : 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ TRY " > 
 + * LITERAL _ TRY < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ CATCH " > 
 + * LITERAL _ CATCH < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ FINALLY " > 
 + * LITERAL _ FINALLY < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ IF " > 
 + * LITERAL _ IF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ ELSE " > 
 + * LITERAL _ ELSE < / a > . 
 + * < / li > 
 + * < / ul > 
 * < p > 
 - * An example of how to configure the check is : 
 + * To configure the check : 
 * < / p > 
 * < pre > 
 * & lt ; module name = " RightCurly " / & gt ; 
 * < / pre > 
 * < p > 
 - * An example of how to configure the check with policy 
 - * { @ link RightCurlyOption # ALONE } for { @ code else } and 
 - * { @ code { @ link TokenTypes # METHOD _ DEF METHOD _ DEF } } tokens is : 
 + * To configure the check with policy { @ code alone } for { @ code else } and 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > 
 + * METHOD _ DEF < / a > tokens : 
 * < / p > 
 * < pre > 
 - * & lt ; module name = " RightCurly " & gt ; 
 - * & lt ; property name = " tokens " value = " LITERAL _ ELSE " / & gt ; 
 - * & lt ; property name = " option " value = " alone " / & gt ; 
 + * & lt ; module name = & quot ; RightCurly & quot ; & gt ; 
 + * & lt ; property name = & quot ; option & quot ; value = & quot ; alone & quot ; / & gt ; 
 + * & lt ; property name = & quot ; tokens & quot ; value = & quot ; LITERAL _ ELSE , METHOD _ DEF & quot ; / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 * 
 + * @ since 3 . 0 
 + * @ noinspection HtmlTagCanBeJavadocTag 
 + * 
 * / 
 @ StatelessCheck 
 public class RightCurlyCheck extends AbstractCheck { 
 @ @ - 90 , 13 + 101 , 17 @ @ public class RightCurlyCheck extends AbstractCheck { 
 * / 
 public static final String MSG _ KEY _ LINE _ SAME = " line . same " ; 
 
 - / * * The policy to enforce . * / 
 + / * * 
 + * Specify the policy on placement of a right curly brace ( < code > ' } ' < / code > ) . 
 + * @ noinspection HtmlTagCanBeJavadocTag 
 + * / 
 private RightCurlyOption option = RightCurlyOption . SAME ; 
 
 / * * 
 - * Sets the option to enforce . 
 + * Setter to specify the policy on placement of a right curly brace ( < code > ' } ' < / code > ) . 
 * @ param optionStr string to decode option from 
 * @ throws IllegalArgumentException if unable to decode 
 + * @ noinspection HtmlTagCanBeJavadocTag 
 * / 
 public void setOption ( String optionStr ) { 
 option = RightCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 index b434a89 . . 3d4680f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 @ @ - 97 , 6 + 97 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { 
 " NeedBraces " , 
 " PackageName " , 
 " ParameterName " , 
 + " RightCurly " , 
 " StaticVariableName " , 
 " SuppressWarnings " , 
 " SuppressWarningsHolder " , 
 diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml 
 index b92b953 . . 4133fc4 100644 
 - - - a / src / xdocs / config _ blocks . xml 
 + + + b / src / xdocs / config _ blocks . xml 
 @ @ - 901 , 14 + 901 , 13 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK 
 < / section > 
 
 < section name = " RightCurly " > 
 + < p > Since Checkstyle 3 . 0 < / p > 
 < subsection name = " Description " id = " RightCurly _ Description " > 
 - < p > Since Checkstyle 3 . 0 < / p > 
 < p > 
 Checks the placement of right curly braces ( < code > ' } ' < / code > ) 
 for if - else , try - catch - finally blocks , while - loops , for - loops , 
 method definitions , class definitions , constructor definitions , 
 instance and static initialization blocks . 
 - The policy to verify is specified using the property < code > option < / code > . 
 For right curly brace of expression blocks please follow issue 
 < a href = " https : / / github . com / checkstyle / checkstyle / issues / 5945 " > # 5945 < / a > . 
 < / p > 
 @ @ - 925 , 7 + 924 , 7 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK 
 < / tr > 
 < tr > 
 < td > option < / td > 
 - < td > policy on placement of a right curly brace ( < code > ' } ' < / code > ) < / td > 
 + < td > Specify the policy on placement of a right curly brace ( < code > ' } ' < / code > ) . < / td > 
 < td > < a href = " property _ types . html # rcurly " > Right Curly Brace Policy < / a > < / td > 
 < td > < code > same < / code > < / td > 
 < td > 3 . 0 < / td > 
 @ @ - 933 , 7 + 932 , 6 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK 
 < tr > 
 < td > tokens < / td > 
 < td > tokens to check < / td > 
 - 
 < td > subset of tokens < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ TRY " > 
 LITERAL _ TRY < / a > ,

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 index 4cf4670 . . e51a652 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 @ @ - 245 , 12 + 245 , 6 @ @ public class AnnotationLocationCheck extends AbstractCheck { 
 TokenTypes . VARIABLE _ DEF , 
 TokenTypes . PARAMETER _ DEF , 
 TokenTypes . ANNOTATION _ DEF , 
 - TokenTypes . TYPECAST , 
 - TokenTypes . LITERAL _ THROWS , 
 - TokenTypes . IMPLEMENTS _ CLAUSE , 
 - TokenTypes . TYPE _ ARGUMENT , 
 - TokenTypes . LITERAL _ NEW , 
 - TokenTypes . DOT , 
 TokenTypes . ANNOTATION _ FIELD _ DEF , 
 } ; 
 } 
 @ @ - 263 , 10 + 257 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { 
 @ Override 
 public void visitToken ( DetailAST ast ) { 
 final DetailAST modifiersNode = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - 
 - if ( modifiersNode ! = null ) { 
 - checkAnnotations ( modifiersNode , getExpectedAnnotationIndentation ( modifiersNode ) ) ; 
 - } 
 + checkAnnotations ( modifiersNode , getExpectedAnnotationIndentation ( modifiersNode ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 index defccdf . . 116a5e1 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 @ @ - 84 , 9 + 84 , 7 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { 
 public void testIncorrectAllTokens ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationLocationCheck . class ) ; 
 checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " 
 - + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , " 
 - + " LITERAL _ THROWS , IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , " 
 - + " ANNOTATION _ FIELD _ DEF " ) ; 
 + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF " ) ; 
 final String [ ] expected = { 
 " 6 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnn " ) , 
 " 11 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation1 " ) , 
 @ @ - 125 , 12 + 123 , 6 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { 
 TokenTypes . VARIABLE _ DEF , 
 TokenTypes . PARAMETER _ DEF , 
 TokenTypes . ANNOTATION _ DEF , 
 - TokenTypes . TYPECAST , 
 - TokenTypes . LITERAL _ THROWS , 
 - TokenTypes . IMPLEMENTS _ CLAUSE , 
 - TokenTypes . TYPE _ ARGUMENT , 
 - TokenTypes . LITERAL _ NEW , 
 - TokenTypes . DOT , 
 TokenTypes . ANNOTATION _ FIELD _ DEF , 
 } ; 
 assertArrayEquals ( " Default acceptable tokens are invalid " , expected , actual ) ; 
 @ @ - 184 , 9 + 176 , 7 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { 
 public void testAllTokens ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationLocationCheck . class ) ; 
 checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " 
 - + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , " 
 - + " LITERAL _ THROWS , IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , " 
 - + " ANNOTATION _ FIELD _ DEF " ) ; 
 + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF " ) ; 
 final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , getPath ( " InputAnnotationLocationWithoutAnnotations . java " ) , expected ) ; 
 } 
 @ @ - 195 , 9 + 185 , 7 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { 
 public void testAnnotationInForEachLoopParameterAndVariableDef ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationLocationCheck . class ) ; 
 checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " 
 - + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , LITERAL _ THROWS , " 
 - + " IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , ANNOTATION _ FIELD _ DEF , " 
 - + " TYPE _ ARGUMENT " ) ; 
 + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF " ) ; 
 checkConfig . addAttribute ( " allowSamelineMultipleAnnotations " , " false " ) ; 
 checkConfig . addAttribute ( " allowSamelineSingleParameterlessAnnotation " , " false " ) ; 
 checkConfig . addAttribute ( " allowSamelineParameterizedAnnotation " , " false " ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 index 0e7e245 . . 53899bb 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 @ @ - 138 , 8 + 138 , 7 @ @ public class AllChecksTest extends AbstractModuleTestSupport { 
 / / state of the configuration when test was made until reason found in 
 / / https : / / github . com / checkstyle / checkstyle / issues / 3730 
 CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " AnnotationLocation " , 
 - Stream . of ( " TYPECAST " , " DOT " , " TYPE _ ARGUMENT " , " LITERAL _ NEW " , " LITERAL _ THROWS " , 
 - " IMPLEMENTS _ CLAUSE " , " CLASS _ DEF " , " CTOR _ DEF " , " ENUM _ DEF " , " INTERFACE _ DEF " , 
 + Stream . of ( " CLASS _ DEF " , " CTOR _ DEF " , " ENUM _ DEF " , " INTERFACE _ DEF " , 
 " METHOD _ DEF " , " VARIABLE _ DEF " ) . collect ( Collectors . toSet ( ) ) ) ; 
 CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " NoLineWrap " , Stream . of ( 
 / / method declaration could be long due to " parameters / exceptions " , it is ok to 
 @ @ - 174 , 8 + 173 , 7 @ @ public class AllChecksTest extends AbstractModuleTestSupport { 
 GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " AnnotationLocation " , Stream . of ( 
 / / state of the configuration when test was made until reason found in 
 / / https : / / github . com / checkstyle / checkstyle / issues / 3730 
 - " TYPECAST " , " DOT " , " TYPE _ ARGUMENT " , " ANNOTATION _ DEF " , " LITERAL _ NEW " , 
 - " LITERAL _ THROWS " , " PARAMETER _ DEF " , " IMPLEMENTS _ CLAUSE " , " ANNOTATION _ FIELD _ DEF " ) 
 + " ANNOTATION _ DEF " , " PARAMETER _ DEF " , " ANNOTATION _ FIELD _ DEF " ) 
 . collect ( Collectors . toSet ( ) ) ) ; 
 GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " AbbreviationAsWordInName " , Stream . of ( 
 / / enum values should be uppercase 
 diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml 
 index ae34ca3 . . 87e9703 100644 
 - - - a / src / xdocs / config _ annotation . xml 
 + + + b / src / xdocs / config _ annotation . xml 
 @ @ - 100 , 17 + 100 , 6 @ @ public String getNameIfPresent ( ) { . . . } 
 PARAMETER _ DEF < / a > , 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ DEF " > 
 ANNOTATION _ DEF < / a > , 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # TYPECAST " > 
 - TYPECAST < / a > , 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ THROWS " > 
 - LITERAL _ THROWS < / a > , 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # IMPLEMENTS _ CLAUSE " > 
 - IMPLEMENTS _ CLAUSE < / a > , 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # TYPE _ ARGUMENT " > 
 - TYPE _ ARGUMENT < / a > , 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ NEW " > 
 - LITERAL _ NEW < / a > , 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # DOT " > DOT < / a > , 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ FIELD _ DEF " > 
 ANNOTATION _ FIELD _ DEF < / a > . 
 < / td >
