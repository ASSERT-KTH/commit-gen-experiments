BLEU SCORE: 0.037477767366779206

TEST MSG: Issue # 5157 : fixed tests that relied on root locale
GENERATED MSG: Update for MemberNameCheck # 244

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWarningsFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWarningsFilterTest . java <nl> index 958c49d . . 79cb4fe 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWarningsFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWarningsFilterTest . java <nl> @ @ - 19 , 6 + 19 , 9 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . filters ; <nl> <nl> + import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTypeCheck . MSG _ JAVADOC _ MISSING ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; <nl> + <nl> import java . util . Arrays ; <nl> import java . util . Collection ; <nl> import java . util . stream . Collectors ; <nl> @ @ - 33 , 6 + 36 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . SuppressWarningsHolder ; <nl> import com . puppycrawl . tools . checkstyle . checks . UncommentedMainCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . coding . IllegalCatchCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTypeCheck ; <nl> + import com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . sizes . ParameterNumberCheck ; <nl> @ @ - 41 , 28 + 45 , 45 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> public class SuppressWarningsFilterTest <nl> extends AbstractModuleTestSupport { <nl> private static final String [ ] ALL _ MESSAGES = { <nl> - " 16 : Missing a Javadoc comment . " , <nl> - " 17 : Missing a Javadoc comment . " , <nl> - " 19 : Missing a Javadoc comment . " , <nl> - " 22 : 45 : Name ' I ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 24 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 25 : 17 : Name ' K ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 29 : 17 : Name ' L ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 29 : 32 : Name ' X ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 33 : 30 : Name ' m ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 34 : 30 : Name ' n ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 39 : 17 : More than 7 parameters ( found 8 ) . " , <nl> - " 45 : 9 : Catching ' Exception ' is not allowed . " , <nl> - " 56 : 9 : Catching ' Exception ' is not allowed . " , <nl> - " 61 : Missing a Javadoc comment . " , <nl> - " 71 : Uncommented main method found . " , <nl> - " 76 : Missing a Javadoc comment . " , <nl> - " 77 : Uncommented main method found . " , <nl> - " 83 : Missing a Javadoc comment . " , <nl> - " 84 : Uncommented main method found . " , <nl> - " 90 : Missing a Javadoc comment . " , <nl> - " 91 : Uncommented main method found . " , <nl> - " 97 : Missing a Javadoc comment . " , <nl> + " 16 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> + " 17 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> + " 19 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> + " 22 : 45 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " I " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 24 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 25 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " K " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 29 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " L " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 29 : 32 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " X " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 33 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " m " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 34 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " n " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 39 : 17 : " <nl> + + getCheckMessage ( ParameterNumberCheck . class , ParameterNumberCheck . MSG _ KEY , 7 , 8 ) , <nl> + " 45 : 9 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 56 : 9 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 61 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> + " 71 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> + " 76 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> + " 77 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> + " 83 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> + " 84 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> + " 90 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> + " 91 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> + " 97 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> } ; <nl> <nl> @ Override <nl> @ @ - 82 , 16 + 103 , 24 @ @ public class SuppressWarningsFilterTest <nl> final DefaultConfiguration filterConfig = <nl> createModuleConfig ( SuppressWarningsFilter . class ) ; <nl> final String [ ] suppressed = { <nl> - " 24 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 29 : 17 : Name ' L ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 33 : 30 : Name ' m ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 39 : 17 : More than 7 parameters ( found 8 ) . " , <nl> - " 56 : 9 : Catching ' Exception ' is not allowed . " , <nl> - " 71 : Uncommented main method found . " , <nl> - " 77 : Uncommented main method found . " , <nl> - " 84 : Uncommented main method found . " , <nl> - " 91 : Uncommented main method found . " , <nl> - " 97 : Missing a Javadoc comment . " , <nl> + " 24 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 29 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " L " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 33 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " m " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 39 : 17 : " <nl> + + getCheckMessage ( ParameterNumberCheck . class , ParameterNumberCheck . MSG _ KEY , 7 , 8 ) , <nl> + " 56 : 9 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 71 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> + " 77 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> + " 84 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> + " 91 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> + " 97 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 155 , 13 + 184 , 19 @ @ public class SuppressWarningsFilterTest <nl> final DefaultConfiguration filterConfig = <nl> createModuleConfig ( SuppressWarningsFilter . class ) ; <nl> final String [ ] suppressedViolationMessages = { <nl> - " 6 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 8 : Uncommented main method found . " , <nl> + " 6 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 8 : " <nl> + + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> } ; <nl> final String [ ] expectedViolationMessages = { <nl> - " 3 : Missing a Javadoc comment . " , <nl> - " 6 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 8 : Uncommented main method found . " , <nl> + " 3 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , <nl> + " 6 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 8 : " <nl> + + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , <nl> } ; <nl> <nl> verifySuppressed ( filterConfig , getPath ( " InputSuppressWarningsFilterById . java " ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java <nl> index 4b393a5 . . 41c3ea5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . filters ; <nl> <nl> + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> @ @ - 40 , 6 + 41 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . checks . coding . IllegalCatchCheck ; <nl> + import com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> @ @ - 48 , 32 + 50 , 81 @ @ import nl . jqno . equalsverifier . EqualsVerifier ; <nl> public class SuppressWithNearbyCommentFilterTest <nl> extends AbstractModuleTestSupport { <nl> private static final String [ ] ALL _ MESSAGES = { <nl> - " 14 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 15 : 17 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 16 : 59 : Name ' A3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 18 : 17 : Name ' B1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 19 : 17 : Name ' B2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 20 : 59 : Name ' B3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 22 : 17 : Name ' C1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 24 : 17 : Name ' C2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 25 : 17 : Name ' C3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 27 : 17 : Name ' D1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 28 : 17 : Name ' D2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 30 : 17 : Name ' D3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 32 : 30 : Name ' e1 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 33 : 17 : Name ' E2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 34 : 17 : Name ' E3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 35 : 30 : Name ' e4 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 36 : 17 : Name ' E5 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 37 : 30 : Name ' e6 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 38 : 17 : Name ' E7 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 39 : 17 : Name ' E8 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 40 : 30 : Name ' e9 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 64 : 23 : Catching ' Exception ' is not allowed . " , <nl> - " 66 : 23 : Catching ' Throwable ' is not allowed . " , <nl> - " 73 : 11 : Catching ' Exception ' is not allowed . " , <nl> - " 80 : 59 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 81 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 14 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 15 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 16 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 18 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 19 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 20 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 22 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " C1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 24 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " C2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 25 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " C3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 27 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " D1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 28 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " D2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 30 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " D3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 32 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " e1 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 33 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " E2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 34 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " E3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 35 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " e4 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 36 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " E5 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 37 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " e6 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 38 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " E7 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 39 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " E8 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 40 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " e9 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 64 : 23 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 66 : 23 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Throwable " ) , <nl> + " 73 : 11 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 80 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 81 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> <nl> @ Override <nl> @ @ - 93 , 13 + 144 , 27 @ @ public class SuppressWithNearbyCommentFilterTest <nl> final DefaultConfiguration filterConfig = <nl> createModuleConfig ( SuppressWithNearbyCommentFilter . class ) ; <nl> final String [ ] suppressed = { <nl> - " 14 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 15 : 17 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 16 : 59 : Name ' A3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 18 : 17 : Name ' B1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 19 : 17 : Name ' B2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 20 : 59 : Name ' B3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 80 : 59 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 14 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 15 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 16 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 18 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 19 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 20 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 80 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 110 , 8 + 175 , 12 @ @ public class SuppressWithNearbyCommentFilterTest <nl> createModuleConfig ( SuppressWithNearbyCommentFilter . class ) ; <nl> filterConfig . addAttribute ( " checkC " , " false " ) ; <nl> final String [ ] suppressed = { <nl> - " 14 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 18 : 17 : Name ' B1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 14 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 18 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 122 , 11 + 191 , 21 @ @ public class SuppressWithNearbyCommentFilterTest <nl> createModuleConfig ( SuppressWithNearbyCommentFilter . class ) ; <nl> filterConfig . addAttribute ( " checkCPP " , " false " ) ; <nl> final String [ ] suppressed = { <nl> - " 15 : 17 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 16 : 59 : Name ' A3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 19 : 17 : Name ' B2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 20 : 59 : Name ' B3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 80 : 59 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 15 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 16 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 19 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 20 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 80 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 140 , 8 + 219 , 12 @ @ public class SuppressWithNearbyCommentFilterTest <nl> filterConfig . addAttribute ( " messageFormat " , " $ 1 " ) ; <nl> filterConfig . addAttribute ( " influenceFormat " , " - 1 " ) ; <nl> final String [ ] suppressed = { <nl> - " 66 : 23 : Catching ' Throwable ' is not allowed . " , <nl> - " 73 : 11 : Catching ' Exception ' is not allowed . " , <nl> + " 66 : 23 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , <nl> + IllegalCatchCheck . MSG _ KEY , " Throwable " ) , <nl> + " 73 : 11 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , <nl> + IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 154 , 7 + 237 , 9 @ @ public class SuppressWithNearbyCommentFilterTest <nl> filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; <nl> filterConfig . addAttribute ( " influenceFormat " , " 1 " ) ; <nl> final String [ ] suppressed = { <nl> - " 24 : 17 : Name ' C2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 24 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " C2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 167 , 7 + 252 , 9 @ @ public class SuppressWithNearbyCommentFilterTest <nl> filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; <nl> filterConfig . addAttribute ( " influenceFormat " , " - 1 " ) ; <nl> final String [ ] suppressed = { <nl> - " 28 : 17 : Name ' D2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 28 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " D2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 180 , 10 + 267 , 18 @ @ public class SuppressWithNearbyCommentFilterTest <nl> filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; <nl> filterConfig . addAttribute ( " influenceFormat " , " $ 2 " ) ; <nl> final String [ ] suppressed = { <nl> - " 35 : 30 : Name ' e4 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 36 : 17 : Name ' E5 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 38 : 17 : Name ' E7 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 39 : 17 : Name ' E8 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 35 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " e4 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 36 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " E5 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 38 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " E7 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 39 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " E8 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 257 , 14 + 352 , 30 @ @ public class SuppressWithNearbyCommentFilterTest <nl> filterConfig . addAttribute ( " influenceFormat " , " 1 " ) ; <nl> <nl> final String [ ] suppressed = { <nl> - " 14 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 15 : 17 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 16 : 59 : Name ' A3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 18 : 17 : Name ' B1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 19 : 17 : Name ' B2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 20 : 59 : Name ' B3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 80 : 59 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 81 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 14 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 15 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 16 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 18 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 19 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 20 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " B3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 80 : 59 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 81 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 323 , 14 + 434 , 26 @ @ public class SuppressWithNearbyCommentFilterTest <nl> filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; <nl> filterConfig . addAttribute ( " influenceFormat " , " 0 " ) ; <nl> final String [ ] suppressedViolationMessages = { <nl> - " 5 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 9 : 9 : Name ' line _ length ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 5 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 9 : 9 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " line _ length " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> final String [ ] expectedViolationMessages = { <nl> - " 5 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 7 : 30 : Name ' abc ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 9 : 9 : Name ' line _ length ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 11 : 18 : Name ' ID ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 5 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 7 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " abc " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 9 : 9 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " line _ length " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 11 : 18 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " ID " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> <nl> verifySuppressed ( filterConfig , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java <nl> index b79d2d0 . . b399b15 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . filters ; <nl> <nl> + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . fail ; <nl> @ @ - 41 , 6 + 42 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . checks . coding . IllegalCatchCheck ; <nl> + import com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> @ @ - 49 , 23 + 51 , 53 @ @ import nl . jqno . equalsverifier . EqualsVerifier ; <nl> public class SuppressionCommentFilterTest <nl> extends AbstractModuleTestSupport { <nl> private static final String [ ] ALL _ MESSAGES = { <nl> - " 13 : 17 : Name ' I ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 16 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 19 : 17 : Name ' K ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 22 : 17 : Name ' L ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 23 : 30 : Name ' m ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 27 : 17 : Name ' M2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 28 : 30 : Name ' n ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 32 : 17 : Name ' P ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 35 : 17 : Name ' Q ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 38 : 17 : Name ' R ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 39 : 30 : Name ' s ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 43 : 17 : Name ' T ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 64 : 23 : Catching ' Exception ' is not allowed . " , <nl> - " 71 : 11 : Catching ' Exception ' is not allowed . " , <nl> - " 77 : 11 : Catching ' RuntimeException ' is not allowed . " , <nl> - " 78 : 11 : Catching ' Exception ' is not allowed . " , <nl> - " 86 : 31 : Catching ' Exception ' is not allowed . " , <nl> + " 13 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " I " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 16 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 19 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " K " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 22 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " L " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 23 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " m " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 27 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " M2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 28 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " n " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 32 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " P " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 35 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " Q " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 38 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " R " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 39 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " s " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 43 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " T " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 64 : 23 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 71 : 11 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 77 : 11 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , <nl> + IllegalCatchCheck . MSG _ KEY , " RuntimeException " ) , <nl> + " 78 : 11 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 86 : 31 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> } ; <nl> <nl> @ Override <nl> @ @ - 86 , 11 + 118 , 18 @ @ public class SuppressionCommentFilterTest <nl> final DefaultConfiguration filterConfig = <nl> createModuleConfig ( SuppressionCommentFilter . class ) ; <nl> final String [ ] suppressed = { <nl> - " 16 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 43 : 17 : Name ' T ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 64 : 23 : Catching ' Exception ' is not allowed . " , <nl> - " 71 : 11 : Catching ' Exception ' is not allowed . " , <nl> - " 86 : 31 : Catching ' Exception ' is not allowed . " , <nl> + " 16 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 43 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " T " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 64 : 23 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 71 : 11 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 86 : 31 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 101 , 9 + 140 , 13 @ @ public class SuppressionCommentFilterTest <nl> createModuleConfig ( SuppressionCommentFilter . class ) ; <nl> filterConfig . addAttribute ( " checkC " , " false " ) ; <nl> final String [ ] suppressed = { <nl> - " 43 : 17 : Name ' T ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 64 : 23 : Catching ' Exception ' is not allowed . " , <nl> - " 71 : 11 : Catching ' Exception ' is not allowed . " , <nl> + " 43 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " T " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 64 : 23 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> + " 71 : 11 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 114 , 8 + 157 , 11 @ @ public class SuppressionCommentFilterTest <nl> createModuleConfig ( SuppressionCommentFilter . class ) ; <nl> filterConfig . addAttribute ( " checkCPP " , " false " ) ; <nl> final String [ ] suppressed = { <nl> - " 16 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 86 : 31 : Catching ' Exception ' is not allowed . " , <nl> + " 16 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 86 : 31 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 128 , 10 + 174 , 18 @ @ public class SuppressionCommentFilterTest <nl> filterConfig . addAttribute ( " offCommentFormat " , " CS _ OFF " ) ; <nl> filterConfig . addAttribute ( " onCommentFormat " , " CS _ ON " ) ; <nl> final String [ ] suppressed = { <nl> - " 32 : 17 : Name ' P ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 38 : 17 : Name ' R ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 39 : 30 : Name ' s ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 42 : 17 : Name ' T ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 32 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " P " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 38 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " R " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 39 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " s " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 42 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " T " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 146 , 7 + 200 , 9 @ @ public class SuppressionCommentFilterTest <nl> filterConfig . addAttribute ( " onCommentFormat " , " CS _ ON " ) ; <nl> filterConfig . addAttribute ( " checkFormat " , " ConstantNameCheck " ) ; <nl> final String [ ] suppressed = { <nl> - " 39 : 30 : Name ' s ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> + " 39 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " s " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 158 , 9 + 214 , 12 @ @ public class SuppressionCommentFilterTest <nl> filterConfig . addAttribute ( " offCommentFormat " , " IllegalCatchCheck OFF \ \ : ( \ \ w + ) " ) ; <nl> filterConfig . addAttribute ( " onCommentFormat " , " IllegalCatchCheck ON \ \ : ( \ \ w + ) " ) ; <nl> filterConfig . addAttribute ( " checkFormat " , " IllegalCatchCheck " ) ; <nl> - filterConfig . addAttribute ( " messageFormat " , " ^ Catching ' $ 1 ' is not allowed . * $ " ) ; <nl> + filterConfig . addAttribute ( " messageFormat " , <nl> + " ^ " + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " $ 1 " ) <nl> + + " * $ " ) ; <nl> final String [ ] suppressed = { <nl> - " 78 : 11 : Catching ' Exception ' is not allowed . " , <nl> + " 78 : 11 : " <nl> + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 173 , 9 + 232 , 15 @ @ public class SuppressionCommentFilterTest <nl> filterConfig . addAttribute ( " onCommentFormat " , " CSON \ \ : ( [ \ \ w \ \ | ] + ) " ) ; <nl> filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; <nl> final String [ ] suppressed = { <nl> - " 22 : 17 : Name ' L ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 23 : 30 : Name ' m ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 28 : 30 : Name ' n ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> + " 22 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " L " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 23 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " m " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 28 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " n " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> } ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> @ @ - 188 , 9 + 253 , 7 @ @ public class SuppressionCommentFilterTest <nl> filterConfig . addAttribute ( " offCommentFormat " , " UNUSED OFF \ \ : ( \ \ w + ) " ) ; <nl> filterConfig . addAttribute ( " checkFormat " , " Unused " ) ; <nl> filterConfig . addAttribute ( " messageFormat " , " ^ Unused \ \ w + ' $ 1 ' . $ " ) ; <nl> - final String [ ] suppressed = { <nl> - " 47 : 34 : Unused parameter ' aInt ' . " , <nl> - } ; <nl> + final String [ ] suppressed = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> verifySuppressed ( filterConfig , suppressed ) ; <nl> } <nl> <nl> @ @ - 302 , 14 + 365 , 26 @ @ public class SuppressionCommentFilterTest <nl> filterConfig . addAttribute ( " onCommentFormat " , " CSON ( \ \ w + ) " ) ; <nl> filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; <nl> final String [ ] suppressedViolationMessages = { <nl> - " 6 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 12 : 9 : Name ' line _ length ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 6 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 12 : 9 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " line _ length " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> final String [ ] expectedViolationMessages = { <nl> - " 6 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 9 : 30 : Name ' abc ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> - " 12 : 9 : Name ' line _ length ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> - " 15 : 18 : Name ' ID ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 6 : 17 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 9 : 30 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " abc " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> + " 12 : 9 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " line _ length " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> + " 15 : 18 : " <nl> + + getCheckMessage ( AbstractNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " ID " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> <nl> verifySuppressed ( filterConfig , getPath ( " InputSuppressionCommentFilterSuppressById . java " ) ,
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheck . java <nl> new file mode 100644 <nl> index 0000000 . . be76b2d <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheck . java <nl> @ @ - 0 , 0 + 1 , 151 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2014 Oliver Burn <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . design ; <nl> + <nl> + import java . util . Map ; <nl> + import java . util . TreeMap ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . Check ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> + <nl> + / * * <nl> + * <nl> + * Checks that each top - level class , interface <nl> + * or enum resides in a source file of its own . <nl> + * < p > <nl> + * Official description of a ' top - level ' term : < a <nl> + * href = " http : / / docs . oracle . com / javase / specs / jls / se7 / html / jls - 7 . html # jls - 7 . 6 " > <nl> + * 7 . 6 . Top Level Type Declarations < / a > . If file doesn ' t contains <nl> + * public class , enum or interface , top - level type is the first type in file . <nl> + * < / p > <nl> + * < p > <nl> + * An example of code with violations : <nl> + * < / p > <nl> + * < pre > < code > <nl> + * public class Foo { <nl> + * / / methods <nl> + * } <nl> + * <nl> + * class Foo2 { <nl> + * / / methods <nl> + * } <nl> + * < / code > < / pre > <nl> + * < p > <nl> + * An example of code without top - level public type : <nl> + * < / p > <nl> + * < pre > < code > <nl> + * class Foo { / / top - level class <nl> + * / / methods <nl> + * } <nl> + * <nl> + * class Foo2 { <nl> + * / / methods <nl> + * } <nl> + * < / code > < / pre > <nl> + * < p > <nl> + * An example of check ' s configuration : <nl> + * < / p > <nl> + * < pre > <nl> + * & lt ; module name = " OneTopLevelClass " / & gt ; <nl> + * < / pre > <nl> + * <nl> + * < p > <nl> + * An example of code without violations : <nl> + * < / p > <nl> + * < pre > < code > <nl> + * public class Foo { <nl> + * / / methods <nl> + * } <nl> + * < / code > < / pre > <nl> + * <nl> + * @ author maxvetrenko <nl> + * / <nl> + public class OneTopLevelClassCheck extends Check <nl> + { <nl> + <nl> + / * * <nl> + * True if a java source file contains a type <nl> + * with a public access level modifier . <nl> + * / <nl> + private boolean mPublicTypeFound ; <nl> + <nl> + / * * Mapping between type names and line numbers of the type declarations . * / <nl> + private TreeMap < Integer , String > mLineNumberTypeMap = <nl> + new TreeMap < Integer , String > ( ) ; <nl> + <nl> + @ Override <nl> + public int [ ] getDefaultTokens ( ) <nl> + { <nl> + return new int [ ] { } ; <nl> + } <nl> + <nl> + @ Override <nl> + public void beginTree ( DetailAST aRootAST ) <nl> + { <nl> + DetailAST currentNode = aRootAST ; <nl> + while ( currentNode ! = null ) { <nl> + if ( currentNode . getType ( ) = = TokenTypes . CLASS _ DEF <nl> + | | currentNode . getType ( ) = = TokenTypes . ENUM _ DEF <nl> + | | currentNode . getType ( ) = = TokenTypes . INTERFACE _ DEF ) <nl> + { <nl> + if ( isPublic ( currentNode ) ) { <nl> + mPublicTypeFound = true ; <nl> + } <nl> + <nl> + else { <nl> + final String typeName = currentNode . <nl> + findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; <nl> + mLineNumberTypeMap . put ( currentNode . getLineNo ( ) , typeName ) ; <nl> + } <nl> + } <nl> + currentNode = currentNode . getNextSibling ( ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public void finishTree ( DetailAST aRootAST ) <nl> + { <nl> + if ( ! mPublicTypeFound & & ! mLineNumberTypeMap . isEmpty ( ) ) { <nl> + / / skip first top - level type . <nl> + mLineNumberTypeMap . remove ( mLineNumberTypeMap . firstKey ( ) ) ; <nl> + } <nl> + <nl> + for ( Map . Entry < Integer , String > entry <nl> + : mLineNumberTypeMap . entrySet ( ) ) <nl> + { <nl> + log ( entry . getKey ( ) , " one . top . level . class " , entry . getValue ( ) ) ; <nl> + } <nl> + <nl> + mLineNumberTypeMap . clear ( ) ; <nl> + mPublicTypeFound = false ; <nl> + } <nl> + <nl> + / * * <nl> + * Checks if a type is public . <nl> + * @ param aTypeDef type definition node . <nl> + * @ return true if a type has a public access level modifier . <nl> + * / <nl> + private boolean isPublic ( DetailAST aTypeDef ) <nl> + { <nl> + final DetailAST modifiers = <nl> + aTypeDef . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> + return modifiers . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ! = null ; <nl> + } <nl> + } <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / design / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / design / messages . properties <nl> index 0d26835 . . df4b6d8 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / design / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / design / messages . properties <nl> @ @ - 6 , 3 + 6 , 4 @ @ variable . notPrivate = Variable ' ' { 0 } ' ' must be private and have accessor methods . <nl> mutable . exception = The field ' ' { 0 } ' ' must be declared final . <nl> throws . count = Throws count is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . <nl> hide . utility . class = Utility classes should not have a public or default constructor . <nl> + one . top . level . class = Top - level class { 0 } has to reside in its own source file . <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> new file mode 100644 <nl> index 0000000 . . f017440 <nl> - - - / dev / null <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> @ @ - 0 , 0 + 1 , 64 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2014 Oliver Burn <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . design ; <nl> + <nl> + import java . io . File ; <nl> + <nl> + import org . junit . Test ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + <nl> + public class OneTopLevelClassCheckTest extends BaseCheckTestSupport <nl> + { <nl> + <nl> + @ Test <nl> + public void testFileWithOneTopLevelClass ( ) throws Exception <nl> + { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( OneTopLevelClassCheck . class ) ; <nl> + final String [ ] expected = { } ; <nl> + verify ( checkConfig , getPath ( " design " + File . separator + " InputOneTopLevelClass . java " ) , expected ) ; <nl> + } <nl> + @ Test <nl> + public void testFileWithFewTopLevelClasses ( ) throws Exception <nl> + { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( OneTopLevelClassCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 25 : Top - level class NoSuperClone has to reside in its own source file . " , <nl> + " 33 : Top - level class InnerClone has to reside in its own source file . " , <nl> + " 50 : Top - level class CloneWithTypeArguments has to reside in its own source file . " , <nl> + " 58 : Top - level class CloneWithTypeArgumentsAndNoSuper has to reside in its own source file . " , <nl> + " 67 : Top - level class MyClassWithGenericSuperMethod has to reside in its own source file . " , <nl> + " 84 : Top - level class AnotherClass has to reside in its own source file . " , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; <nl> + } <nl> + @ Test <nl> + public void testFileWithSecondEnumTopLevelClass ( ) throws Exception <nl> + { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( OneTopLevelClassCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 83 : Top - level class InputDeclarationOrderEnum has to reside in its own source file . " , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " coding " + File . separator + " InputDeclarationOrder . java " ) , expected ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputIllegalTokens . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputIllegalTokens . java <nl> index 2eb5e4f . . f1a01ff 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputIllegalTokens . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputIllegalTokens . java <nl> @ @ - 24 , 4 + 24 , 4 @ @ public class InputIllegalTokens <nl> final String ref = " < a href = \ " " ; <nl> final String refCase = " < A hReF = \ " " ; <nl> } <nl> - } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / design / InputOneTopLevelClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / design / InputOneTopLevelClass . java <nl> new file mode 100644 <nl> index 0000000 . . bd68fb9 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / design / InputOneTopLevelClass . java <nl> @ @ - 0 , 0 + 1 , 81 @ @ <nl> + package net . ubiquity . tools . checkstyle . tests ; <nl> + <nl> + public class InputOneTopLevelClass <nl> + { <nl> + static final int FOO2 = 3 ; <nl> + <nl> + / / error public before package <nl> + public static final int FOO = 3 ; <nl> + <nl> + private static final int FOO3 = 3 ; <nl> + <nl> + / / eror public before package and private <nl> + public static final int FOO4 = 3 ; <nl> + <nl> + private static final String ERROR = " error " ; <nl> + <nl> + / / error protected before private <nl> + protected static final String ERROR1 = " error " ; <nl> + <nl> + / / error public before private <nl> + public static final String WARNING = " warning " ; <nl> + <nl> + private int mMaxInitVars = 3 ; <nl> + <nl> + / / error statics should be before instance members <nl> + / / error publics before private <nl> + public static final int MAX _ ITER _ VARS = 3 ; <nl> + <nl> + private class InnerClass <nl> + { <nl> + private static final int INNER _ FOO = 2 ; <nl> + <nl> + / / error public before private <nl> + public static final int INNER _ FOO2 = 2 ; <nl> + <nl> + public InnerClass ( ) <nl> + { <nl> + int foo = INNER _ FOO ; <nl> + foo + = INNER _ FOO2 ; <nl> + foo + = INNER _ FOO3 ; <nl> + } <nl> + <nl> + / / error member variables should be before methods or ctors <nl> + / / error public before private <nl> + public static final int INNER _ FOO3 = 2 ; <nl> + } <nl> + <nl> + public int getFoo1 ( ) <nl> + { <nl> + return mFoo ; <nl> + } <nl> + <nl> + / / error ctors before methods <nl> + public InputDeclarationOrder ( ) <nl> + { <nl> + String foo = ERROR ; <nl> + foo + = ERROR1 ; <nl> + foo + = WARNING ; <nl> + int fooInt = mMaxInitVars ; <nl> + fooInt + = MAX _ ITER _ VARS ; <nl> + fooInt + = mFoo ; <nl> + } <nl> + <nl> + public static int getFoo2 ( ) <nl> + { <nl> + return 13 ; <nl> + } <nl> + <nl> + public int getFoo ( ) <nl> + { <nl> + return mFoo ; <nl> + } <nl> + <nl> + private static int getFoo21 ( ) <nl> + { <nl> + return 14 ; <nl> + } <nl> + <nl> + / / error member variables should be before methods or ctors <nl> + private int mFoo = 0 ; <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / xdocs / availablechecks . xml b / src / xdocs / availablechecks . xml <nl> index f75d267 . . 77beaf2 100644 <nl> - - - a / src / xdocs / availablechecks . xml <nl> + + + b / src / xdocs / availablechecks . xml <nl> @ @ - 481 , 6 + 481 , 10 @ @ <nl> < td > Checks there is only one statement per line . < / td > <nl> < / tr > <nl> < tr > <nl> + < td > < a href = " config _ design . html # OneTopLevelClass " > OneTopLevelClass < / a > < / td > <nl> + < td > Checks that each top - level class , interfaces or enum resides in a source file of its own . < / td > <nl> + < / tr > <nl> + < tr > <nl> < td > < a href = " config _ whitespace . html # OperatorWrap " > OperatorWrap < / a > < / td > <nl> < td > <nl> Checks line wrapping for operators . < / td > <nl> diff - - git a / src / xdocs / config _ design . xml b / src / xdocs / config _ design . xml <nl> index dee5ddc . . b9812b1 100644 <nl> - - - a / src / xdocs / config _ design . xml <nl> + + + b / src / xdocs / config _ design . xml <nl> @ @ - 461 , 5 + 461 , 79 @ @ public class StringUtils / / not final to allow subclassing <nl> < / p > <nl> < / subsection > <nl> < / section > <nl> + <nl> + < section name = " OneTopLevelClass " > <nl> + < subsection name = " Description " > <nl> + < p > <nl> + Checks that each top - level class , interface or <nl> + enum resides in a source file of its own . <nl> + Official description of a ' top - level ' term : < a <nl> + href = " http : / / docs . oracle . com / javase / specs / jls / se7 / html / jls - 7 . html # jls - 7 . 6 " > 7 . 6 . Top Level Type Declarations < / a > . <nl> + If file doesn ' t contains public class , enum or interface , <nl> + top - level type is the first type in file . <nl> + < / p > <nl> + < / subsection > <nl> + <nl> + < subsection name = " Examples " > <nl> + < p > <nl> + An example of check ' s configuration : <nl> + < / p > <nl> + < source > <nl> + & lt ; module name = " OneTopLevelClass " / & gt ; <nl> + < / source > <nl> + < p > <nl> + An example of check ' s configuration applied only to classes : <nl> + < / p > <nl> + < source > <nl> + & lt ; module name = " OneTopLevelClass " & gt ; <nl> + & lt ; property name = " tokens " value = " CLASS _ DEF " & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + < p > <nl> + An example of code with violations : <nl> + < / p > <nl> + < source > <nl> + public class Foo { <nl> + / / methods <nl> + } <nl> + <nl> + class Foo2 { <nl> + / / methods <nl> + } <nl> + < / source > <nl> + < p > <nl> + An example of code without public top - level type : <nl> + < / p > <nl> + < source > <nl> + class Foo { / / top - level class <nl> + / / methods <nl> + } <nl> + <nl> + class Foo2 { <nl> + / / methods <nl> + } <nl> + < / source > <nl> + < p > <nl> + An example of code without violations : <nl> + < / p > <nl> + < source > <nl> + public class Foo { <nl> + / / methods <nl> + } <nl> + < / source > <nl> + < / subsection > <nl> + <nl> + < subsection name = " Package " > <nl> + < p > <nl> + com . puppycrawl . tools . checkstyle . checks . design <nl> + < / p > <nl> + < / subsection > <nl> + <nl> + < subsection name = " Parent Module " > <nl> + < p > <nl> + < a href = " config . html # TreeWalker " > TreeWalker < / a > <nl> + < / p > <nl> + < / subsection > <nl> + < / section > <nl> < / body > <nl> < / document >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWarningsFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWarningsFilterTest . java 
 index 958c49d . . 79cb4fe 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWarningsFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWarningsFilterTest . java 
 @ @ - 19 , 6 + 19 , 9 @ @ 
 
 package com . puppycrawl . tools . checkstyle . filters ; 
 
 + import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTypeCheck . MSG _ JAVADOC _ MISSING ; 
 + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; 
 + 
 import java . util . Arrays ; 
 import java . util . Collection ; 
 import java . util . stream . Collectors ; 
 @ @ - 33 , 6 + 36 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . SuppressWarningsHolder ; 
 import com . puppycrawl . tools . checkstyle . checks . UncommentedMainCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . coding . IllegalCatchCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTypeCheck ; 
 + import com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . sizes . ParameterNumberCheck ; 
 @ @ - 41 , 28 + 45 , 45 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 public class SuppressWarningsFilterTest 
 extends AbstractModuleTestSupport { 
 private static final String [ ] ALL _ MESSAGES = { 
 - " 16 : Missing a Javadoc comment . " , 
 - " 17 : Missing a Javadoc comment . " , 
 - " 19 : Missing a Javadoc comment . " , 
 - " 22 : 45 : Name ' I ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 24 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 25 : 17 : Name ' K ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 29 : 17 : Name ' L ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 29 : 32 : Name ' X ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 33 : 30 : Name ' m ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 34 : 30 : Name ' n ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 39 : 17 : More than 7 parameters ( found 8 ) . " , 
 - " 45 : 9 : Catching ' Exception ' is not allowed . " , 
 - " 56 : 9 : Catching ' Exception ' is not allowed . " , 
 - " 61 : Missing a Javadoc comment . " , 
 - " 71 : Uncommented main method found . " , 
 - " 76 : Missing a Javadoc comment . " , 
 - " 77 : Uncommented main method found . " , 
 - " 83 : Missing a Javadoc comment . " , 
 - " 84 : Uncommented main method found . " , 
 - " 90 : Missing a Javadoc comment . " , 
 - " 91 : Uncommented main method found . " , 
 - " 97 : Missing a Javadoc comment . " , 
 + " 16 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 + " 17 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 + " 19 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 + " 22 : 45 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " I " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 24 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 25 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " K " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 29 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " L " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 29 : 32 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " X " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 33 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " m " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 34 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " n " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 39 : 17 : " 
 + + getCheckMessage ( ParameterNumberCheck . class , ParameterNumberCheck . MSG _ KEY , 7 , 8 ) , 
 + " 45 : 9 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 56 : 9 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 61 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 + " 71 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 + " 76 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 + " 77 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 + " 83 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 + " 84 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 + " 90 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 + " 91 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 + " 97 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 } ; 
 
 @ Override 
 @ @ - 82 , 16 + 103 , 24 @ @ public class SuppressWarningsFilterTest 
 final DefaultConfiguration filterConfig = 
 createModuleConfig ( SuppressWarningsFilter . class ) ; 
 final String [ ] suppressed = { 
 - " 24 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 29 : 17 : Name ' L ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 33 : 30 : Name ' m ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 39 : 17 : More than 7 parameters ( found 8 ) . " , 
 - " 56 : 9 : Catching ' Exception ' is not allowed . " , 
 - " 71 : Uncommented main method found . " , 
 - " 77 : Uncommented main method found . " , 
 - " 84 : Uncommented main method found . " , 
 - " 91 : Uncommented main method found . " , 
 - " 97 : Missing a Javadoc comment . " , 
 + " 24 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 29 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " L " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 33 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " m " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 39 : 17 : " 
 + + getCheckMessage ( ParameterNumberCheck . class , ParameterNumberCheck . MSG _ KEY , 7 , 8 ) , 
 + " 56 : 9 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 71 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 + " 77 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 + " 84 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 + " 91 : " + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 + " 97 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 155 , 13 + 184 , 19 @ @ public class SuppressWarningsFilterTest 
 final DefaultConfiguration filterConfig = 
 createModuleConfig ( SuppressWarningsFilter . class ) ; 
 final String [ ] suppressedViolationMessages = { 
 - " 6 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 8 : Uncommented main method found . " , 
 + " 6 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 8 : " 
 + + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 } ; 
 final String [ ] expectedViolationMessages = { 
 - " 3 : Missing a Javadoc comment . " , 
 - " 6 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 8 : Uncommented main method found . " , 
 + " 3 : " + getCheckMessage ( JavadocTypeCheck . class , MSG _ JAVADOC _ MISSING ) , 
 + " 6 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 8 : " 
 + + getCheckMessage ( UncommentedMainCheck . class , UncommentedMainCheck . MSG _ KEY ) , 
 } ; 
 
 verifySuppressed ( filterConfig , getPath ( " InputSuppressWarningsFilterById . java " ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java 
 index 4b393a5 . . 41c3ea5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . filters ; 
 
 + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 @ @ - 40 , 6 + 41 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . checks . coding . IllegalCatchCheck ; 
 + import com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 @ @ - 48 , 32 + 50 , 81 @ @ import nl . jqno . equalsverifier . EqualsVerifier ; 
 public class SuppressWithNearbyCommentFilterTest 
 extends AbstractModuleTestSupport { 
 private static final String [ ] ALL _ MESSAGES = { 
 - " 14 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 15 : 17 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 16 : 59 : Name ' A3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 18 : 17 : Name ' B1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 19 : 17 : Name ' B2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 20 : 59 : Name ' B3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 22 : 17 : Name ' C1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 24 : 17 : Name ' C2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 25 : 17 : Name ' C3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 27 : 17 : Name ' D1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 28 : 17 : Name ' D2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 30 : 17 : Name ' D3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 32 : 30 : Name ' e1 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 33 : 17 : Name ' E2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 34 : 17 : Name ' E3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 35 : 30 : Name ' e4 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 36 : 17 : Name ' E5 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 37 : 30 : Name ' e6 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 38 : 17 : Name ' E7 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 39 : 17 : Name ' E8 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 40 : 30 : Name ' e9 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 64 : 23 : Catching ' Exception ' is not allowed . " , 
 - " 66 : 23 : Catching ' Throwable ' is not allowed . " , 
 - " 73 : 11 : Catching ' Exception ' is not allowed . " , 
 - " 80 : 59 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 81 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 14 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 15 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 16 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 18 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 19 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 20 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 22 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " C1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 24 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " C2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 25 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " C3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 27 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " D1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 28 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " D2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 30 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " D3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 32 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " e1 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 33 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " E2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 34 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " E3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 35 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " e4 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 36 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " E5 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 37 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " e6 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 38 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " E7 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 39 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " E8 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 40 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " e9 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 64 : 23 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 66 : 23 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Throwable " ) , 
 + " 73 : 11 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 80 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 81 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 
 @ Override 
 @ @ - 93 , 13 + 144 , 27 @ @ public class SuppressWithNearbyCommentFilterTest 
 final DefaultConfiguration filterConfig = 
 createModuleConfig ( SuppressWithNearbyCommentFilter . class ) ; 
 final String [ ] suppressed = { 
 - " 14 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 15 : 17 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 16 : 59 : Name ' A3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 18 : 17 : Name ' B1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 19 : 17 : Name ' B2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 20 : 59 : Name ' B3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 80 : 59 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 14 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 15 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 16 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 18 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 19 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 20 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 80 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 110 , 8 + 175 , 12 @ @ public class SuppressWithNearbyCommentFilterTest 
 createModuleConfig ( SuppressWithNearbyCommentFilter . class ) ; 
 filterConfig . addAttribute ( " checkC " , " false " ) ; 
 final String [ ] suppressed = { 
 - " 14 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 18 : 17 : Name ' B1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 14 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 18 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 122 , 11 + 191 , 21 @ @ public class SuppressWithNearbyCommentFilterTest 
 createModuleConfig ( SuppressWithNearbyCommentFilter . class ) ; 
 filterConfig . addAttribute ( " checkCPP " , " false " ) ; 
 final String [ ] suppressed = { 
 - " 15 : 17 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 16 : 59 : Name ' A3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 19 : 17 : Name ' B2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 20 : 59 : Name ' B3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 80 : 59 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 15 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 16 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 19 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 20 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 80 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 140 , 8 + 219 , 12 @ @ public class SuppressWithNearbyCommentFilterTest 
 filterConfig . addAttribute ( " messageFormat " , " $ 1 " ) ; 
 filterConfig . addAttribute ( " influenceFormat " , " - 1 " ) ; 
 final String [ ] suppressed = { 
 - " 66 : 23 : Catching ' Throwable ' is not allowed . " , 
 - " 73 : 11 : Catching ' Exception ' is not allowed . " , 
 + " 66 : 23 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , 
 + IllegalCatchCheck . MSG _ KEY , " Throwable " ) , 
 + " 73 : 11 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , 
 + IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 154 , 7 + 237 , 9 @ @ public class SuppressWithNearbyCommentFilterTest 
 filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; 
 filterConfig . addAttribute ( " influenceFormat " , " 1 " ) ; 
 final String [ ] suppressed = { 
 - " 24 : 17 : Name ' C2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 24 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " C2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 167 , 7 + 252 , 9 @ @ public class SuppressWithNearbyCommentFilterTest 
 filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; 
 filterConfig . addAttribute ( " influenceFormat " , " - 1 " ) ; 
 final String [ ] suppressed = { 
 - " 28 : 17 : Name ' D2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 28 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " D2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 180 , 10 + 267 , 18 @ @ public class SuppressWithNearbyCommentFilterTest 
 filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; 
 filterConfig . addAttribute ( " influenceFormat " , " $ 2 " ) ; 
 final String [ ] suppressed = { 
 - " 35 : 30 : Name ' e4 ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 36 : 17 : Name ' E5 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 38 : 17 : Name ' E7 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 39 : 17 : Name ' E8 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 35 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " e4 " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 36 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " E5 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 38 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " E7 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 39 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " E8 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 257 , 14 + 352 , 30 @ @ public class SuppressWithNearbyCommentFilterTest 
 filterConfig . addAttribute ( " influenceFormat " , " 1 " ) ; 
 
 final String [ ] suppressed = { 
 - " 14 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 15 : 17 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 16 : 59 : Name ' A3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 18 : 17 : Name ' B1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 19 : 17 : Name ' B2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 20 : 59 : Name ' B3 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 80 : 59 : Name ' A2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 81 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 14 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 15 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 16 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 18 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 19 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 20 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " B3 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 80 : 59 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 81 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 323 , 14 + 434 , 26 @ @ public class SuppressWithNearbyCommentFilterTest 
 filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; 
 filterConfig . addAttribute ( " influenceFormat " , " 0 " ) ; 
 final String [ ] suppressedViolationMessages = { 
 - " 5 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 9 : 9 : Name ' line _ length ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 5 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 9 : 9 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " line _ length " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 final String [ ] expectedViolationMessages = { 
 - " 5 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 7 : 30 : Name ' abc ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 9 : 9 : Name ' line _ length ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 11 : 18 : Name ' ID ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 5 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 7 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " abc " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 9 : 9 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " line _ length " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 11 : 18 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " ID " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 
 verifySuppressed ( filterConfig , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java 
 index b79d2d0 . . b399b15 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . filters ; 
 
 + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . fail ; 
 @ @ - 41 , 6 + 42 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . checks . coding . IllegalCatchCheck ; 
 + import com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 @ @ - 49 , 23 + 51 , 53 @ @ import nl . jqno . equalsverifier . EqualsVerifier ; 
 public class SuppressionCommentFilterTest 
 extends AbstractModuleTestSupport { 
 private static final String [ ] ALL _ MESSAGES = { 
 - " 13 : 17 : Name ' I ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 16 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 19 : 17 : Name ' K ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 22 : 17 : Name ' L ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 23 : 30 : Name ' m ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 27 : 17 : Name ' M2 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 28 : 30 : Name ' n ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 32 : 17 : Name ' P ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 35 : 17 : Name ' Q ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 38 : 17 : Name ' R ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 39 : 30 : Name ' s ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 43 : 17 : Name ' T ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 64 : 23 : Catching ' Exception ' is not allowed . " , 
 - " 71 : 11 : Catching ' Exception ' is not allowed . " , 
 - " 77 : 11 : Catching ' RuntimeException ' is not allowed . " , 
 - " 78 : 11 : Catching ' Exception ' is not allowed . " , 
 - " 86 : 31 : Catching ' Exception ' is not allowed . " , 
 + " 13 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " I " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 16 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 19 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " K " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 22 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " L " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 23 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " m " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 27 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " M2 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 28 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " n " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 32 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " P " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 35 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " Q " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 38 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " R " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 39 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " s " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 43 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " T " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 64 : 23 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 71 : 11 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 77 : 11 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , 
 + IllegalCatchCheck . MSG _ KEY , " RuntimeException " ) , 
 + " 78 : 11 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 86 : 31 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 } ; 
 
 @ Override 
 @ @ - 86 , 11 + 118 , 18 @ @ public class SuppressionCommentFilterTest 
 final DefaultConfiguration filterConfig = 
 createModuleConfig ( SuppressionCommentFilter . class ) ; 
 final String [ ] suppressed = { 
 - " 16 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 43 : 17 : Name ' T ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 64 : 23 : Catching ' Exception ' is not allowed . " , 
 - " 71 : 11 : Catching ' Exception ' is not allowed . " , 
 - " 86 : 31 : Catching ' Exception ' is not allowed . " , 
 + " 16 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 43 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " T " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 64 : 23 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 71 : 11 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 86 : 31 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 101 , 9 + 140 , 13 @ @ public class SuppressionCommentFilterTest 
 createModuleConfig ( SuppressionCommentFilter . class ) ; 
 filterConfig . addAttribute ( " checkC " , " false " ) ; 
 final String [ ] suppressed = { 
 - " 43 : 17 : Name ' T ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 64 : 23 : Catching ' Exception ' is not allowed . " , 
 - " 71 : 11 : Catching ' Exception ' is not allowed . " , 
 + " 43 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " T " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 64 : 23 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 + " 71 : 11 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 114 , 8 + 157 , 11 @ @ public class SuppressionCommentFilterTest 
 createModuleConfig ( SuppressionCommentFilter . class ) ; 
 filterConfig . addAttribute ( " checkCPP " , " false " ) ; 
 final String [ ] suppressed = { 
 - " 16 : 17 : Name ' J ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 86 : 31 : Catching ' Exception ' is not allowed . " , 
 + " 16 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " J " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 86 : 31 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 128 , 10 + 174 , 18 @ @ public class SuppressionCommentFilterTest 
 filterConfig . addAttribute ( " offCommentFormat " , " CS _ OFF " ) ; 
 filterConfig . addAttribute ( " onCommentFormat " , " CS _ ON " ) ; 
 final String [ ] suppressed = { 
 - " 32 : 17 : Name ' P ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 38 : 17 : Name ' R ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 39 : 30 : Name ' s ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 42 : 17 : Name ' T ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 32 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " P " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 38 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " R " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 39 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " s " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 42 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " T " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 146 , 7 + 200 , 9 @ @ public class SuppressionCommentFilterTest 
 filterConfig . addAttribute ( " onCommentFormat " , " CS _ ON " ) ; 
 filterConfig . addAttribute ( " checkFormat " , " ConstantNameCheck " ) ; 
 final String [ ] suppressed = { 
 - " 39 : 30 : Name ' s ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 + " 39 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " s " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 158 , 9 + 214 , 12 @ @ public class SuppressionCommentFilterTest 
 filterConfig . addAttribute ( " offCommentFormat " , " IllegalCatchCheck OFF \ \ : ( \ \ w + ) " ) ; 
 filterConfig . addAttribute ( " onCommentFormat " , " IllegalCatchCheck ON \ \ : ( \ \ w + ) " ) ; 
 filterConfig . addAttribute ( " checkFormat " , " IllegalCatchCheck " ) ; 
 - filterConfig . addAttribute ( " messageFormat " , " ^ Catching ' $ 1 ' is not allowed . * $ " ) ; 
 + filterConfig . addAttribute ( " messageFormat " , 
 + " ^ " + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " $ 1 " ) 
 + + " * $ " ) ; 
 final String [ ] suppressed = { 
 - " 78 : 11 : Catching ' Exception ' is not allowed . " , 
 + " 78 : 11 : " 
 + + getCheckMessage ( IllegalCatchCheck . class , IllegalCatchCheck . MSG _ KEY , " Exception " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 173 , 9 + 232 , 15 @ @ public class SuppressionCommentFilterTest 
 filterConfig . addAttribute ( " onCommentFormat " , " CSON \ \ : ( [ \ \ w \ \ | ] + ) " ) ; 
 filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; 
 final String [ ] suppressed = { 
 - " 22 : 17 : Name ' L ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 23 : 30 : Name ' m ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 28 : 30 : Name ' n ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 + " 22 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " L " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 23 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " m " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 28 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " n " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 } ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 @ @ - 188 , 9 + 253 , 7 @ @ public class SuppressionCommentFilterTest 
 filterConfig . addAttribute ( " offCommentFormat " , " UNUSED OFF \ \ : ( \ \ w + ) " ) ; 
 filterConfig . addAttribute ( " checkFormat " , " Unused " ) ; 
 filterConfig . addAttribute ( " messageFormat " , " ^ Unused \ \ w + ' $ 1 ' . $ " ) ; 
 - final String [ ] suppressed = { 
 - " 47 : 34 : Unused parameter ' aInt ' . " , 
 - } ; 
 + final String [ ] suppressed = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 verifySuppressed ( filterConfig , suppressed ) ; 
 } 
 
 @ @ - 302 , 14 + 365 , 26 @ @ public class SuppressionCommentFilterTest 
 filterConfig . addAttribute ( " onCommentFormat " , " CSON ( \ \ w + ) " ) ; 
 filterConfig . addAttribute ( " checkFormat " , " $ 1 " ) ; 
 final String [ ] suppressedViolationMessages = { 
 - " 6 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 12 : 9 : Name ' line _ length ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 6 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 12 : 9 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " line _ length " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 final String [ ] expectedViolationMessages = { 
 - " 6 : 17 : Name ' A1 ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 9 : 30 : Name ' abc ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 - " 12 : 9 : Name ' line _ length ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 - " 15 : 18 : Name ' ID ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 6 : 17 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " A1 " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 9 : 30 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " abc " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 + " 12 : 9 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " line _ length " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 + " 15 : 18 : " 
 + + getCheckMessage ( AbstractNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " ID " , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 
 verifySuppressed ( filterConfig , getPath ( " InputSuppressionCommentFilterSuppressById . java " ) ,

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheck . java 
 new file mode 100644 
 index 0000000 . . be76b2d 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheck . java 
 @ @ - 0 , 0 + 1 , 151 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2014 Oliver Burn 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . design ; 
 + 
 + import java . util . Map ; 
 + import java . util . TreeMap ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . Check ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 + 
 + / * * 
 + * 
 + * Checks that each top - level class , interface 
 + * or enum resides in a source file of its own . 
 + * < p > 
 + * Official description of a ' top - level ' term : < a 
 + * href = " http : / / docs . oracle . com / javase / specs / jls / se7 / html / jls - 7 . html # jls - 7 . 6 " > 
 + * 7 . 6 . Top Level Type Declarations < / a > . If file doesn ' t contains 
 + * public class , enum or interface , top - level type is the first type in file . 
 + * < / p > 
 + * < p > 
 + * An example of code with violations : 
 + * < / p > 
 + * < pre > < code > 
 + * public class Foo { 
 + * / / methods 
 + * } 
 + * 
 + * class Foo2 { 
 + * / / methods 
 + * } 
 + * < / code > < / pre > 
 + * < p > 
 + * An example of code without top - level public type : 
 + * < / p > 
 + * < pre > < code > 
 + * class Foo { / / top - level class 
 + * / / methods 
 + * } 
 + * 
 + * class Foo2 { 
 + * / / methods 
 + * } 
 + * < / code > < / pre > 
 + * < p > 
 + * An example of check ' s configuration : 
 + * < / p > 
 + * < pre > 
 + * & lt ; module name = " OneTopLevelClass " / & gt ; 
 + * < / pre > 
 + * 
 + * < p > 
 + * An example of code without violations : 
 + * < / p > 
 + * < pre > < code > 
 + * public class Foo { 
 + * / / methods 
 + * } 
 + * < / code > < / pre > 
 + * 
 + * @ author maxvetrenko 
 + * / 
 + public class OneTopLevelClassCheck extends Check 
 + { 
 + 
 + / * * 
 + * True if a java source file contains a type 
 + * with a public access level modifier . 
 + * / 
 + private boolean mPublicTypeFound ; 
 + 
 + / * * Mapping between type names and line numbers of the type declarations . * / 
 + private TreeMap < Integer , String > mLineNumberTypeMap = 
 + new TreeMap < Integer , String > ( ) ; 
 + 
 + @ Override 
 + public int [ ] getDefaultTokens ( ) 
 + { 
 + return new int [ ] { } ; 
 + } 
 + 
 + @ Override 
 + public void beginTree ( DetailAST aRootAST ) 
 + { 
 + DetailAST currentNode = aRootAST ; 
 + while ( currentNode ! = null ) { 
 + if ( currentNode . getType ( ) = = TokenTypes . CLASS _ DEF 
 + | | currentNode . getType ( ) = = TokenTypes . ENUM _ DEF 
 + | | currentNode . getType ( ) = = TokenTypes . INTERFACE _ DEF ) 
 + { 
 + if ( isPublic ( currentNode ) ) { 
 + mPublicTypeFound = true ; 
 + } 
 + 
 + else { 
 + final String typeName = currentNode . 
 + findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; 
 + mLineNumberTypeMap . put ( currentNode . getLineNo ( ) , typeName ) ; 
 + } 
 + } 
 + currentNode = currentNode . getNextSibling ( ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void finishTree ( DetailAST aRootAST ) 
 + { 
 + if ( ! mPublicTypeFound & & ! mLineNumberTypeMap . isEmpty ( ) ) { 
 + / / skip first top - level type . 
 + mLineNumberTypeMap . remove ( mLineNumberTypeMap . firstKey ( ) ) ; 
 + } 
 + 
 + for ( Map . Entry < Integer , String > entry 
 + : mLineNumberTypeMap . entrySet ( ) ) 
 + { 
 + log ( entry . getKey ( ) , " one . top . level . class " , entry . getValue ( ) ) ; 
 + } 
 + 
 + mLineNumberTypeMap . clear ( ) ; 
 + mPublicTypeFound = false ; 
 + } 
 + 
 + / * * 
 + * Checks if a type is public . 
 + * @ param aTypeDef type definition node . 
 + * @ return true if a type has a public access level modifier . 
 + * / 
 + private boolean isPublic ( DetailAST aTypeDef ) 
 + { 
 + final DetailAST modifiers = 
 + aTypeDef . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 + return modifiers . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ! = null ; 
 + } 
 + } 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / design / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / design / messages . properties 
 index 0d26835 . . df4b6d8 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / design / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / design / messages . properties 
 @ @ - 6 , 3 + 6 , 4 @ @ variable . notPrivate = Variable ' ' { 0 } ' ' must be private and have accessor methods . 
 mutable . exception = The field ' ' { 0 } ' ' must be declared final . 
 throws . count = Throws count is { 0 , number , integer } ( max allowed is { 1 , number , integer } ) . 
 hide . utility . class = Utility classes should not have a public or default constructor . 
 + one . top . level . class = Top - level class { 0 } has to reside in its own source file . 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 new file mode 100644 
 index 0000000 . . f017440 
 - - - / dev / null 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 @ @ - 0 , 0 + 1 , 64 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2014 Oliver Burn 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . design ; 
 + 
 + import java . io . File ; 
 + 
 + import org . junit . Test ; 
 + 
 + import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + 
 + public class OneTopLevelClassCheckTest extends BaseCheckTestSupport 
 + { 
 + 
 + @ Test 
 + public void testFileWithOneTopLevelClass ( ) throws Exception 
 + { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( OneTopLevelClassCheck . class ) ; 
 + final String [ ] expected = { } ; 
 + verify ( checkConfig , getPath ( " design " + File . separator + " InputOneTopLevelClass . java " ) , expected ) ; 
 + } 
 + @ Test 
 + public void testFileWithFewTopLevelClasses ( ) throws Exception 
 + { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( OneTopLevelClassCheck . class ) ; 
 + final String [ ] expected = { 
 + " 25 : Top - level class NoSuperClone has to reside in its own source file . " , 
 + " 33 : Top - level class InnerClone has to reside in its own source file . " , 
 + " 50 : Top - level class CloneWithTypeArguments has to reside in its own source file . " , 
 + " 58 : Top - level class CloneWithTypeArgumentsAndNoSuper has to reside in its own source file . " , 
 + " 67 : Top - level class MyClassWithGenericSuperMethod has to reside in its own source file . " , 
 + " 84 : Top - level class AnotherClass has to reside in its own source file . " , 
 + } ; 
 + verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; 
 + } 
 + @ Test 
 + public void testFileWithSecondEnumTopLevelClass ( ) throws Exception 
 + { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( OneTopLevelClassCheck . class ) ; 
 + final String [ ] expected = { 
 + " 83 : Top - level class InputDeclarationOrderEnum has to reside in its own source file . " , 
 + } ; 
 + verify ( checkConfig , getPath ( " coding " + File . separator + " InputDeclarationOrder . java " ) , expected ) ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputIllegalTokens . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputIllegalTokens . java 
 index 2eb5e4f . . f1a01ff 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputIllegalTokens . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputIllegalTokens . java 
 @ @ - 24 , 4 + 24 , 4 @ @ public class InputIllegalTokens 
 final String ref = " < a href = \ " " ; 
 final String refCase = " < A hReF = \ " " ; 
 } 
 - } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / design / InputOneTopLevelClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / design / InputOneTopLevelClass . java 
 new file mode 100644 
 index 0000000 . . bd68fb9 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / design / InputOneTopLevelClass . java 
 @ @ - 0 , 0 + 1 , 81 @ @ 
 + package net . ubiquity . tools . checkstyle . tests ; 
 + 
 + public class InputOneTopLevelClass 
 + { 
 + static final int FOO2 = 3 ; 
 + 
 + / / error public before package 
 + public static final int FOO = 3 ; 
 + 
 + private static final int FOO3 = 3 ; 
 + 
 + / / eror public before package and private 
 + public static final int FOO4 = 3 ; 
 + 
 + private static final String ERROR = " error " ; 
 + 
 + / / error protected before private 
 + protected static final String ERROR1 = " error " ; 
 + 
 + / / error public before private 
 + public static final String WARNING = " warning " ; 
 + 
 + private int mMaxInitVars = 3 ; 
 + 
 + / / error statics should be before instance members 
 + / / error publics before private 
 + public static final int MAX _ ITER _ VARS = 3 ; 
 + 
 + private class InnerClass 
 + { 
 + private static final int INNER _ FOO = 2 ; 
 + 
 + / / error public before private 
 + public static final int INNER _ FOO2 = 2 ; 
 + 
 + public InnerClass ( ) 
 + { 
 + int foo = INNER _ FOO ; 
 + foo + = INNER _ FOO2 ; 
 + foo + = INNER _ FOO3 ; 
 + } 
 + 
 + / / error member variables should be before methods or ctors 
 + / / error public before private 
 + public static final int INNER _ FOO3 = 2 ; 
 + } 
 + 
 + public int getFoo1 ( ) 
 + { 
 + return mFoo ; 
 + } 
 + 
 + / / error ctors before methods 
 + public InputDeclarationOrder ( ) 
 + { 
 + String foo = ERROR ; 
 + foo + = ERROR1 ; 
 + foo + = WARNING ; 
 + int fooInt = mMaxInitVars ; 
 + fooInt + = MAX _ ITER _ VARS ; 
 + fooInt + = mFoo ; 
 + } 
 + 
 + public static int getFoo2 ( ) 
 + { 
 + return 13 ; 
 + } 
 + 
 + public int getFoo ( ) 
 + { 
 + return mFoo ; 
 + } 
 + 
 + private static int getFoo21 ( ) 
 + { 
 + return 14 ; 
 + } 
 + 
 + / / error member variables should be before methods or ctors 
 + private int mFoo = 0 ; 
 + } 
 \ No newline at end of file 
 diff - - git a / src / xdocs / availablechecks . xml b / src / xdocs / availablechecks . xml 
 index f75d267 . . 77beaf2 100644 
 - - - a / src / xdocs / availablechecks . xml 
 + + + b / src / xdocs / availablechecks . xml 
 @ @ - 481 , 6 + 481 , 10 @ @ 
 < td > Checks there is only one statement per line . < / td > 
 < / tr > 
 < tr > 
 + < td > < a href = " config _ design . html # OneTopLevelClass " > OneTopLevelClass < / a > < / td > 
 + < td > Checks that each top - level class , interfaces or enum resides in a source file of its own . < / td > 
 + < / tr > 
 + < tr > 
 < td > < a href = " config _ whitespace . html # OperatorWrap " > OperatorWrap < / a > < / td > 
 < td > 
 Checks line wrapping for operators . < / td > 
 diff - - git a / src / xdocs / config _ design . xml b / src / xdocs / config _ design . xml 
 index dee5ddc . . b9812b1 100644 
 - - - a / src / xdocs / config _ design . xml 
 + + + b / src / xdocs / config _ design . xml 
 @ @ - 461 , 5 + 461 , 79 @ @ public class StringUtils / / not final to allow subclassing 
 < / p > 
 < / subsection > 
 < / section > 
 + 
 + < section name = " OneTopLevelClass " > 
 + < subsection name = " Description " > 
 + < p > 
 + Checks that each top - level class , interface or 
 + enum resides in a source file of its own . 
 + Official description of a ' top - level ' term : < a 
 + href = " http : / / docs . oracle . com / javase / specs / jls / se7 / html / jls - 7 . html # jls - 7 . 6 " > 7 . 6 . Top Level Type Declarations < / a > . 
 + If file doesn ' t contains public class , enum or interface , 
 + top - level type is the first type in file . 
 + < / p > 
 + < / subsection > 
 + 
 + < subsection name = " Examples " > 
 + < p > 
 + An example of check ' s configuration : 
 + < / p > 
 + < source > 
 + & lt ; module name = " OneTopLevelClass " / & gt ; 
 + < / source > 
 + < p > 
 + An example of check ' s configuration applied only to classes : 
 + < / p > 
 + < source > 
 + & lt ; module name = " OneTopLevelClass " & gt ; 
 + & lt ; property name = " tokens " value = " CLASS _ DEF " & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 + < p > 
 + An example of code with violations : 
 + < / p > 
 + < source > 
 + public class Foo { 
 + / / methods 
 + } 
 + 
 + class Foo2 { 
 + / / methods 
 + } 
 + < / source > 
 + < p > 
 + An example of code without public top - level type : 
 + < / p > 
 + < source > 
 + class Foo { / / top - level class 
 + / / methods 
 + } 
 + 
 + class Foo2 { 
 + / / methods 
 + } 
 + < / source > 
 + < p > 
 + An example of code without violations : 
 + < / p > 
 + < source > 
 + public class Foo { 
 + / / methods 
 + } 
 + < / source > 
 + < / subsection > 
 + 
 + < subsection name = " Package " > 
 + < p > 
 + com . puppycrawl . tools . checkstyle . checks . design 
 + < / p > 
 + < / subsection > 
 + 
 + < subsection name = " Parent Module " > 
 + < p > 
 + < a href = " config . html # TreeWalker " > TreeWalker < / a > 
 + < / p > 
 + < / subsection > 
 + < / section > 
 < / body > 
 < / document >
