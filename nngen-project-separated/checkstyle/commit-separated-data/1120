BLEU SCORE: 0.03737437943747671

TEST MSG: Issue # 3369 : Fixed XDocsPagesTest to not make assumptions about order of HashMap
GENERATED MSG: Minor : refactoring of TreeWalker to increase readability

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> index e22208b . . 6a5d5ce 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> @ @ - 417 , 8 + 417 , 15 @ @ public class XDocsPagesTest { <nl> if ( AbstractCheck . class . isAssignableFrom ( clss ) ) { <nl> final AbstractCheck check = ( AbstractCheck ) instance ; <nl> <nl> - if ( ! Arrays . equals ( check . getAcceptableTokens ( ) , check . getDefaultTokens ( ) ) <nl> - | | ! Arrays . equals ( check . getAcceptableTokens ( ) , check . getRequiredTokens ( ) ) ) { <nl> + final int [ ] acceptableTokens = check . getAcceptableTokens ( ) ; <nl> + Arrays . sort ( acceptableTokens ) ; <nl> + final int [ ] defaultTokens = check . getDefaultTokens ( ) ; <nl> + Arrays . sort ( defaultTokens ) ; <nl> + final int [ ] requiredTokens = check . getRequiredTokens ( ) ; <nl> + Arrays . sort ( requiredTokens ) ; <nl> + <nl> + if ( ! Arrays . equals ( acceptableTokens , defaultTokens ) <nl> + | | ! Arrays . equals ( acceptableTokens , requiredTokens ) ) { <nl> properties . add ( " tokens " ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> index 33e1cc7 . . 2cde7df 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> @ @ - 205 , 9 + 205 , 7 @ @ public class ClassResolver { <nl> if ( dot ! = - 1 ) { <nl> final String innerName = <nl> name . substring ( 0 , dot ) + DOLLAR _ SIGN + name . substring ( dot + 1 ) ; <nl> - if ( isLoadable ( innerName ) ) { <nl> - classObj = safeLoad ( innerName ) ; <nl> - } <nl> + classObj = resolveQualifiedName ( innerName ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> index 033966d . . 2ffe9db 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> @ @ - 237 , 7 + 237 , 7 @ @ public class LeftCurlyCheck <nl> final DetailAST modifiers = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> <nl> if ( modifiers ! = null ) { <nl> - DetailAST lastAnnotation = findLastAnnotation ( modifiers ) ; <nl> + final DetailAST lastAnnotation = findLastAnnotation ( modifiers ) ; <nl> <nl> if ( lastAnnotation ! = null ) { <nl> final DetailAST tokenAfterLast ; <nl> @ @ - 253 , 14 + 253 , 7 @ @ public class LeftCurlyCheck <nl> resultNode = tokenAfterLast ; <nl> } <nl> else { <nl> - final int lastAnnotationLineNumber = lastAnnotation . getLineNo ( ) ; <nl> - while ( lastAnnotation . getPreviousSibling ( ) ! = null <nl> - & & lastAnnotation . getPreviousSibling ( ) . getLineNo ( ) <nl> - = = lastAnnotationLineNumber ) { <nl> - <nl> - lastAnnotation = lastAnnotation . getPreviousSibling ( ) ; <nl> - } <nl> - resultNode = lastAnnotation ; <nl> + resultNode = getFirstAnnotationOnSameLine ( lastAnnotation ) ; <nl> } <nl> } <nl> } <nl> @ @ - 268 , 6 + 261 , 24 @ @ public class LeftCurlyCheck <nl> } <nl> <nl> / * * <nl> + * Returns first annotation on same line . <nl> + * @ param annotation <nl> + * last annotation on the line <nl> + * @ return first annotation on same line . <nl> + * / <nl> + private static DetailAST getFirstAnnotationOnSameLine ( DetailAST annotation ) { <nl> + DetailAST previousAnnotation = annotation ; <nl> + final int lastAnnotationLineNumber = previousAnnotation . getLineNo ( ) ; <nl> + while ( previousAnnotation . getPreviousSibling ( ) ! = null <nl> + & & previousAnnotation . getPreviousSibling ( ) . getLineNo ( ) <nl> + = = lastAnnotationLineNumber ) { <nl> + <nl> + previousAnnotation = previousAnnotation . getPreviousSibling ( ) ; <nl> + } <nl> + return previousAnnotation ; <nl> + } <nl> + <nl> + / * * <nl> * Find the last token of type { @ code TokenTypes . ANNOTATION } <nl> * under the given set of modifiers . <nl> * @ param modifiers { @ code DetailAST } .

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 index e22208b . . 6a5d5ce 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 @ @ - 417 , 8 + 417 , 15 @ @ public class XDocsPagesTest { 
 if ( AbstractCheck . class . isAssignableFrom ( clss ) ) { 
 final AbstractCheck check = ( AbstractCheck ) instance ; 
 
 - if ( ! Arrays . equals ( check . getAcceptableTokens ( ) , check . getDefaultTokens ( ) ) 
 - | | ! Arrays . equals ( check . getAcceptableTokens ( ) , check . getRequiredTokens ( ) ) ) { 
 + final int [ ] acceptableTokens = check . getAcceptableTokens ( ) ; 
 + Arrays . sort ( acceptableTokens ) ; 
 + final int [ ] defaultTokens = check . getDefaultTokens ( ) ; 
 + Arrays . sort ( defaultTokens ) ; 
 + final int [ ] requiredTokens = check . getRequiredTokens ( ) ; 
 + Arrays . sort ( requiredTokens ) ; 
 + 
 + if ( ! Arrays . equals ( acceptableTokens , defaultTokens ) 
 + | | ! Arrays . equals ( acceptableTokens , requiredTokens ) ) { 
 properties . add ( " tokens " ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 index 33e1cc7 . . 2cde7df 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 @ @ - 205 , 9 + 205 , 7 @ @ public class ClassResolver { 
 if ( dot ! = - 1 ) { 
 final String innerName = 
 name . substring ( 0 , dot ) + DOLLAR _ SIGN + name . substring ( dot + 1 ) ; 
 - if ( isLoadable ( innerName ) ) { 
 - classObj = safeLoad ( innerName ) ; 
 - } 
 + classObj = resolveQualifiedName ( innerName ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 index 033966d . . 2ffe9db 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 @ @ - 237 , 7 + 237 , 7 @ @ public class LeftCurlyCheck 
 final DetailAST modifiers = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 
 if ( modifiers ! = null ) { 
 - DetailAST lastAnnotation = findLastAnnotation ( modifiers ) ; 
 + final DetailAST lastAnnotation = findLastAnnotation ( modifiers ) ; 
 
 if ( lastAnnotation ! = null ) { 
 final DetailAST tokenAfterLast ; 
 @ @ - 253 , 14 + 253 , 7 @ @ public class LeftCurlyCheck 
 resultNode = tokenAfterLast ; 
 } 
 else { 
 - final int lastAnnotationLineNumber = lastAnnotation . getLineNo ( ) ; 
 - while ( lastAnnotation . getPreviousSibling ( ) ! = null 
 - & & lastAnnotation . getPreviousSibling ( ) . getLineNo ( ) 
 - = = lastAnnotationLineNumber ) { 
 - 
 - lastAnnotation = lastAnnotation . getPreviousSibling ( ) ; 
 - } 
 - resultNode = lastAnnotation ; 
 + resultNode = getFirstAnnotationOnSameLine ( lastAnnotation ) ; 
 } 
 } 
 } 
 @ @ - 268 , 6 + 261 , 24 @ @ public class LeftCurlyCheck 
 } 
 
 / * * 
 + * Returns first annotation on same line . 
 + * @ param annotation 
 + * last annotation on the line 
 + * @ return first annotation on same line . 
 + * / 
 + private static DetailAST getFirstAnnotationOnSameLine ( DetailAST annotation ) { 
 + DetailAST previousAnnotation = annotation ; 
 + final int lastAnnotationLineNumber = previousAnnotation . getLineNo ( ) ; 
 + while ( previousAnnotation . getPreviousSibling ( ) ! = null 
 + & & previousAnnotation . getPreviousSibling ( ) . getLineNo ( ) 
 + = = lastAnnotationLineNumber ) { 
 + 
 + previousAnnotation = previousAnnotation . getPreviousSibling ( ) ; 
 + } 
 + return previousAnnotation ; 
 + } 
 + 
 + / * * 
 * Find the last token of type { @ code TokenTypes . ANNOTATION } 
 * under the given set of modifiers . 
 * @ param modifiers { @ code DetailAST } .
