BLEU SCORE: 0.6668954865619205

TEST MSG: [ maven - release - plugin ] prepare release checkstyle - 8 . 10 . 1
GENERATED MSG: [ maven - release - plugin ] prepare release checkstyle - 6 . 9

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 357d042 . . cb3f18f 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1 , 9 + 1 , 6 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> <nl> - < project xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " <nl> - xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " <nl> - xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 <nl> - http : / / maven . apache . org / xsd / maven - 4 . 0 . 0 . xsd " > <nl> + < project xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 http : / / maven . apache . org / xsd / maven - 4 . 0 . 0 . xsd " > <nl> <nl> < modelVersion > 4 . 0 . 0 < / modelVersion > <nl> <nl> @ @ - 16 , 7 + 13 , 7 @ @ <nl> <nl> < groupId > com . puppycrawl . tools < / groupId > <nl> < artifactId > checkstyle < / artifactId > <nl> - < version > 8 . 10 . 1 - SNAPSHOT < / version > <nl> + < version > 8 . 10 . 1 < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > checkstyle < / name > <nl> @ @ - 1181 , 8 + 1178 , 7 @ @ <nl> < / goals > <nl> < configuration > <nl> < target > <nl> - < property name = " mvn . project . build . outputDirectory " <nl> - value = " $ { project . build . outputDirectory } " / > <nl> + < property name = " mvn . project . build . outputDirectory " value = " $ { project . build . outputDirectory } " / > <nl> < property name = " mvn . project . version " value = " $ { project . version } " / > <nl> < property name = " mvn . compile _ classpath " refid = " maven . compile . classpath " / > <nl> < ant antfile = " config / ant - phase - compile . xml " / > <nl> @ @ - 1739 , 9 + 1735 , 7 @ @ <nl> < shadedArtifactAttached > true < / shadedArtifactAttached > <nl> < shadedClassifierName > all < / shadedClassifierName > <nl> < transformers > <nl> - < transformer <nl> - implementation = <nl> - " org . apache . maven . plugins . shade . resource . ManifestResourceTransformer " > <nl> + < transformer implementation = " org . apache . maven . plugins . shade . resource . ManifestResourceTransformer " > <nl> < mainClass > com . puppycrawl . tools . checkstyle . Main < / mainClass > <nl> < / transformer > <nl> < / transformers >
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index a3aebaa . . b6e4552 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1111 , 7 + 1111 , 6 @ @ <nl> < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck \ $ . * < / pattern > < branchRate > 50 < / branchRate > < lineRate > 68 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . javadoc . AtclauseOrderCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 88 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . javadoc . JavadocMethodCheck < / pattern > < branchRate > 91 < / branchRate > < lineRate > 98 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . javadoc . WriteTagCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 91 < / lineRate > < / regex > <nl> <nl> < regex > < pattern > . * . checks . header . AbstractHeaderCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 87 < / lineRate > < / regex > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 0a4e9f6 . . bb5fac4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 631 , 10 + 631 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> } <nl> else if ( noargMultilineStart . find ( ) ) { <nl> final String p1 = noargMultilineStart . group ( 1 ) ; <nl> - int col = noargMultilineStart . start ( 1 ) - 1 ; <nl> - if ( i = = 0 ) { <nl> - col + = comment . getStartColNo ( ) ; <nl> - } <nl> + final int col = noargMultilineStart . start ( 1 ) - 1 ; <nl> <nl> / / Look for the rest of the comment if all we saw was <nl> / / the tag and the name . Stop when we see ' * / ' ( end of <nl> @ @ - 644 , 13 + 641 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> while ( remIndex < lines . length ) { <nl> final Matcher multilineCont = MATCH _ JAVADOC _ MULTILINE _ CONT <nl> . matcher ( lines [ remIndex ] ) ; <nl> - if ( multilineCont . find ( ) ) { <nl> - remIndex = lines . length ; <nl> - final String lFin = multilineCont . group ( 1 ) ; <nl> - if ( ! lFin . equals ( NEXT _ TAG ) <nl> - & & ! lFin . equals ( END _ JAVADOC ) ) { <nl> - tags . add ( new JavadocTag ( currentLine , col , p1 ) ) ; <nl> - } <nl> + multilineCont . find ( ) ; <nl> + remIndex = lines . length ; <nl> + final String lFin = multilineCont . group ( 1 ) ; <nl> + if ( ! lFin . equals ( NEXT _ TAG ) <nl> + & & ! lFin . equals ( END _ JAVADOC ) ) { <nl> + tags . add ( new JavadocTag ( currentLine , col , p1 ) ) ; <nl> } <nl> remIndex + + ; <nl> } <nl> @ @ - 796 , 8 + 792 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> boolean retVal = false ; <nl> if ( ast . getType ( ) = = TokenTypes . METHOD _ DEF ) { <nl> final DetailAST typeAST = ast . findFirstToken ( TokenTypes . TYPE ) ; <nl> - if ( typeAST ! = null <nl> - & & typeAST . findFirstToken ( TokenTypes . LITERAL _ VOID ) = = null ) { <nl> + if ( typeAST . findFirstToken ( TokenTypes . LITERAL _ VOID ) = = null ) { <nl> retVal = true ; <nl> } <nl> } <nl> @ @ - 958 , 8 + 953 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> <nl> / / Check that is had only one parameter <nl> final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; <nl> - if ( params = = null <nl> - | | params . getChildCount ( TokenTypes . PARAMETER _ DEF ) ! = 1 ) { <nl> + if ( params . getChildCount ( TokenTypes . PARAMETER _ DEF ) ! = 1 ) { <nl> return false ; <nl> } <nl> <nl> @ @ - 973 , 8 + 967 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> } <nl> <nl> final AST expr = slist . getFirstChild ( ) ; <nl> - return expr . getType ( ) = = TokenTypes . EXPR <nl> - & & expr . getFirstChild ( ) . getType ( ) = = TokenTypes . ASSIGN ; <nl> + return expr . getFirstChild ( ) . getType ( ) = = TokenTypes . ASSIGN ; <nl> } <nl> <nl> / * * <nl> @ @ - 1006 , 8 + 999 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> <nl> / / Check that is had only one parameter <nl> final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; <nl> - if ( params = = null <nl> - | | params . getChildCount ( TokenTypes . PARAMETER _ DEF ) > 0 ) { <nl> + if ( params . getChildCount ( TokenTypes . PARAMETER _ DEF ) > 0 ) { <nl> return false ; <nl> } <nl> <nl> @ @ - 1020 , 8 + 1012 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> } <nl> <nl> final AST expr = slist . getFirstChild ( ) ; <nl> - return expr . getType ( ) = = TokenTypes . LITERAL _ RETURN <nl> - & & expr . getFirstChild ( ) . getType ( ) = = TokenTypes . EXPR ; <nl> + return expr . getType ( ) = = TokenTypes . LITERAL _ RETURN ; <nl> <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> index 836b309 . . 38b8be4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> <nl> + import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocMethodCheck . MSG _ CLASS _ INFO ; <nl> import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocMethodCheck . MSG _ DUPLICATE _ TAG ; <nl> import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocMethodCheck . MSG _ EXCPECTED _ TAG ; <nl> import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocMethodCheck . MSG _ INVALID _ INHERIT _ DOC ; <nl> @ @ - 44 , 7 + 45 , 6 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> @ Before <nl> public void setUp ( ) { <nl> checkConfig = createCheckConfig ( JavadocMethodCheck . class ) ; <nl> - checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 62 , 6 + 62 , 17 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testLogLoadErrors ( ) throws Exception { <nl> + DefaultConfiguration config = createCheckConfig ( JavadocMethodCheck . class ) ; <nl> + config . addAttribute ( " logLoadErrors " , " true " ) ; <nl> + config . addAttribute ( " allowUndeclaredRTE " , " true " ) ; <nl> + final String [ ] expected = { <nl> + " 7 : 8 : " + getCheckMessage ( MSG _ CLASS _ INFO , " @ throws " , " InvalidExceptionName " ) , <nl> + } ; <nl> + verify ( config , getPath ( " javadoc / InputLoadErrors . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void extendAnnotationTest ( ) throws Exception { <nl> DefaultConfiguration config = createCheckConfig ( JavadocMethodCheck . class ) ; <nl> config . addAttribute ( " allowedAnnotations " , " MyAnnotation , Override " ) ; <nl> @ @ - 94 , 6 + 105 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testTags ( ) throws Exception { <nl> + checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> final String [ ] expected = { <nl> " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> " 18 : 9 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " unused " ) , <nl> @ @ - 132 , 6 + 144 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void testTagsWithResolver ( ) throws Exception { <nl> checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; <nl> + checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> final String [ ] expected = { <nl> " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> " 18 : 9 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " unused " ) , <nl> @ @ - 239 , 6 + 252 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void testTagsWithSubclassesAllowed ( ) throws Exception { <nl> checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; <nl> + checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> final String [ ] expected = { <nl> " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> " 18 : 9 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " unused " ) , <nl> @ @ - 389 , 6 + 403 , 8 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> " 10 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , <nl> " 20 : 26 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " number " ) , <nl> " 30 : 42 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ throws " , " ThreadDeath " ) , <nl> + " 51 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , <nl> + " 61 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " javadoc " + File . separator <nl> + " InputMissingJavadocTags . java " ) , expected ) ; <nl> @ @ - 406 , 7 + 422 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> " 37 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> " 43 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> " 48 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> - " 53 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , } ; <nl> + " 53 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 55 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 59 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 63 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 67 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 69 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 74 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 76 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + } ; <nl> verify ( checkConfig , getPath ( " javadoc " + File . separator <nl> + " InputSetterGetter . java " ) , expected ) ; <nl> } <nl> @ @ - 421 , 7 + 445 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> " 32 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> " 37 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> " 43 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> - " 53 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , } ; <nl> + " 53 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 55 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 59 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 63 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 67 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 69 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 74 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 76 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + } ; <nl> verify ( checkConfig , getPath ( " javadoc " + File . separator <nl> + " InputSetterGetter . java " ) , expected ) ; <nl> } <nl> @ @ - 430 , 7 + 462 , 10 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> public void testTypeParamsTags ( ) throws Exception { <nl> final String [ ] expected = { <nl> " 26 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " < BB > " ) , <nl> - " 28 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < Z > " ) , } ; <nl> + " 28 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < Z > " ) , <nl> + " 53 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " < Z " ) , <nl> + " 55 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < Z > " ) , <nl> + } ; <nl> verify ( checkConfig , getPath ( " InputTypeParamsTags . java " ) , expected ) ; <nl> } <nl> <nl> @ @ - 458 , 6 + 493 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> public void test _ generics _ 1 ( ) throws Exception { <nl> checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; <nl> checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; <nl> + checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> final String [ ] expected = { <nl> " 17 : 34 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ throws " , " RE " ) , <nl> " 33 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < NPE > " ) , <nl> @ @ - 471 , 6 + 507 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void test _ generics _ 2 ( ) throws Exception { <nl> checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; <nl> + checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> final String [ ] expected = { <nl> " 17 : 34 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ throws " , " RE " ) , <nl> " 33 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < NPE > " ) , <nl> @ @ - 483 , 6 + 520 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void test _ generics _ 3 ( ) throws Exception { <nl> + checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> final String [ ] expected = { <nl> " 8 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ throws " , " RE " ) , <nl> " 17 : 34 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ throws " , " RE " ) , <nl> @ @ - 523 , 4 + 561 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> verify ( checkConfig , getPath ( " javadoc / InputJavadocMethodIgnoreNameRegex . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testNotSkipAnythingWhenSkipRegexDoesNotMatch ( ) throws Exception { <nl> + checkConfig . addAttribute ( " ignoreMethodNamesRegex " , " regexThatDoesNotMatch " ) ; <nl> + String [ ] expected = { <nl> + " 5 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 9 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + " 13 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " javadoc / InputJavadocMethodIgnoreNameRegex . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java <nl> index e552b9c . . d9afbed 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java <nl> @ @ - 47 , 4 + 47 , 12 @ @ public class InputTypeParamsTags < A , B1 , C456 extends Comparable > <nl> public static class InnerClass < A , B > <nl> { <nl> } <nl> + <nl> + / * * <nl> + * Some explanation . <nl> + * @ param < Z The wrong type param <nl> + * / <nl> + public < Z > void unclosedGenericParam ( ) <nl> + { <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputLoadErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputLoadErrors . java <nl> new file mode 100644 <nl> index 0000000 . . 0a16501 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputLoadErrors . java <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + package com . puppycrawl . tools . checkstyle . javadoc ; <nl> + <nl> + public class InputLoadErrors <nl> + { <nl> + / * * <nl> + * aasdf <nl> + * @ throws InvalidExceptionName exception that cannot be loaded <nl> + * / <nl> + void method ( ) { } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputMissingJavadocTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputMissingJavadocTags . java <nl> index 7859e33 . . 879ea90 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputMissingJavadocTags . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputMissingJavadocTags . java <nl> @ @ - 30 , 4 + 30 , 35 @ @ public class InputMissingJavadocTags { <nl> int missingThrows ( int number ) throws ThreadDeath { <nl> return number ; <nl> } <nl> + <nl> + / * * <nl> + * Missing return , but { @ inheritDoc } is present . <nl> + * <nl> + * @ param number to return <nl> + * @ throws java . util . NoSuchElementException sometimes <nl> + * / <nl> + int missingReturnButInheritDocPresent ( int number ) throws java . util . NoSuchElementException { <nl> + return number ; <nl> + } <nl> + <nl> + / * * <nl> + * Missing return in the middle . <nl> + * <nl> + * @ param number to return <nl> + * @ return <nl> + * @ throws java . util . NoSuchElementException sometimes <nl> + * / <nl> + private int missingReturnInTheMiddle ( int number ) { <nl> + return number ; <nl> + } <nl> + <nl> + / * * <nl> + * Missing return at the end . <nl> + * <nl> + * @ param number to return <nl> + * @ return <nl> + * / <nl> + private int missingReturnAtTheEnd ( int number ) { <nl> + return number ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputSetterGetter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputSetterGetter . java <nl> index 996c795 . . 9f54252 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputSetterGetter . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputSetterGetter . java <nl> @ @ - 51 , 4 + 51 , 28 @ @ public class InputSetterGetter <nl> } <nl> <nl> private void firePropertyChanged ( ) { } <nl> + <nl> + Object setObject ( Object object ) { <nl> + return new Object ( ) ; <nl> + } <nl> + <nl> + Object getNext ( ) { <nl> + throw new UnsupportedOperationException ( ) ; <nl> + } <nl> + <nl> + public void setWithoutAssignment ( Object object ) { <nl> + object . notify ( ) ; <nl> + } <nl> + <nl> + InputSetterGetter ( ) { } <nl> + <nl> + public InputSetterGetter ( Object object ) throws Exception { } <nl> + <nl> + } <nl> + <nl> + interface TestInterface { <nl> + void setObject ( Object object ) ; <nl> + <nl> + Object getObject ( ) ; <nl> } <nl> + <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java <nl> index 28ae00f . . 44ccb6e 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java <nl> @ @ - 59 , 5 + 59 , 10 @ @ public class TestGenerics < E extends java . lang . Exception , <nl> * / <nl> public abstract String doStuff ( T t ) throws E2 ; <nl> } <nl> + <nl> + / * * <nl> + * @ param < P > some parameter <nl> + * / <nl> + public interface InvalidParameterInJavadoc < T > { } <nl> } <nl>

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 357d042 . . cb3f18f 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1 , 9 + 1 , 6 @ @ 
 < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > 
 
 - < project xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " 
 - xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " 
 - xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 
 - http : / / maven . apache . org / xsd / maven - 4 . 0 . 0 . xsd " > 
 + < project xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 http : / / maven . apache . org / xsd / maven - 4 . 0 . 0 . xsd " > 
 
 < modelVersion > 4 . 0 . 0 < / modelVersion > 
 
 @ @ - 16 , 7 + 13 , 7 @ @ 
 
 < groupId > com . puppycrawl . tools < / groupId > 
 < artifactId > checkstyle < / artifactId > 
 - < version > 8 . 10 . 1 - SNAPSHOT < / version > 
 + < version > 8 . 10 . 1 < / version > 
 < packaging > jar < / packaging > 
 
 < name > checkstyle < / name > 
 @ @ - 1181 , 8 + 1178 , 7 @ @ 
 < / goals > 
 < configuration > 
 < target > 
 - < property name = " mvn . project . build . outputDirectory " 
 - value = " $ { project . build . outputDirectory } " / > 
 + < property name = " mvn . project . build . outputDirectory " value = " $ { project . build . outputDirectory } " / > 
 < property name = " mvn . project . version " value = " $ { project . version } " / > 
 < property name = " mvn . compile _ classpath " refid = " maven . compile . classpath " / > 
 < ant antfile = " config / ant - phase - compile . xml " / > 
 @ @ - 1739 , 9 + 1735 , 7 @ @ 
 < shadedArtifactAttached > true < / shadedArtifactAttached > 
 < shadedClassifierName > all < / shadedClassifierName > 
 < transformers > 
 - < transformer 
 - implementation = 
 - " org . apache . maven . plugins . shade . resource . ManifestResourceTransformer " > 
 + < transformer implementation = " org . apache . maven . plugins . shade . resource . ManifestResourceTransformer " > 
 < mainClass > com . puppycrawl . tools . checkstyle . Main < / mainClass > 
 < / transformer > 
 < / transformers >

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index a3aebaa . . b6e4552 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1111 , 7 + 1111 , 6 @ @ 
 < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck \ $ . * < / pattern > < branchRate > 50 < / branchRate > < lineRate > 68 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . javadoc . AtclauseOrderCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 88 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . javadoc . JavadocMethodCheck < / pattern > < branchRate > 91 < / branchRate > < lineRate > 98 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . javadoc . WriteTagCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 91 < / lineRate > < / regex > 
 
 < regex > < pattern > . * . checks . header . AbstractHeaderCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 87 < / lineRate > < / regex > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 0a4e9f6 . . bb5fac4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 631 , 10 + 631 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 } 
 else if ( noargMultilineStart . find ( ) ) { 
 final String p1 = noargMultilineStart . group ( 1 ) ; 
 - int col = noargMultilineStart . start ( 1 ) - 1 ; 
 - if ( i = = 0 ) { 
 - col + = comment . getStartColNo ( ) ; 
 - } 
 + final int col = noargMultilineStart . start ( 1 ) - 1 ; 
 
 / / Look for the rest of the comment if all we saw was 
 / / the tag and the name . Stop when we see ' * / ' ( end of 
 @ @ - 644 , 13 + 641 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 while ( remIndex < lines . length ) { 
 final Matcher multilineCont = MATCH _ JAVADOC _ MULTILINE _ CONT 
 . matcher ( lines [ remIndex ] ) ; 
 - if ( multilineCont . find ( ) ) { 
 - remIndex = lines . length ; 
 - final String lFin = multilineCont . group ( 1 ) ; 
 - if ( ! lFin . equals ( NEXT _ TAG ) 
 - & & ! lFin . equals ( END _ JAVADOC ) ) { 
 - tags . add ( new JavadocTag ( currentLine , col , p1 ) ) ; 
 - } 
 + multilineCont . find ( ) ; 
 + remIndex = lines . length ; 
 + final String lFin = multilineCont . group ( 1 ) ; 
 + if ( ! lFin . equals ( NEXT _ TAG ) 
 + & & ! lFin . equals ( END _ JAVADOC ) ) { 
 + tags . add ( new JavadocTag ( currentLine , col , p1 ) ) ; 
 } 
 remIndex + + ; 
 } 
 @ @ - 796 , 8 + 792 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 boolean retVal = false ; 
 if ( ast . getType ( ) = = TokenTypes . METHOD _ DEF ) { 
 final DetailAST typeAST = ast . findFirstToken ( TokenTypes . TYPE ) ; 
 - if ( typeAST ! = null 
 - & & typeAST . findFirstToken ( TokenTypes . LITERAL _ VOID ) = = null ) { 
 + if ( typeAST . findFirstToken ( TokenTypes . LITERAL _ VOID ) = = null ) { 
 retVal = true ; 
 } 
 } 
 @ @ - 958 , 8 + 953 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 
 / / Check that is had only one parameter 
 final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; 
 - if ( params = = null 
 - | | params . getChildCount ( TokenTypes . PARAMETER _ DEF ) ! = 1 ) { 
 + if ( params . getChildCount ( TokenTypes . PARAMETER _ DEF ) ! = 1 ) { 
 return false ; 
 } 
 
 @ @ - 973 , 8 + 967 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 } 
 
 final AST expr = slist . getFirstChild ( ) ; 
 - return expr . getType ( ) = = TokenTypes . EXPR 
 - & & expr . getFirstChild ( ) . getType ( ) = = TokenTypes . ASSIGN ; 
 + return expr . getFirstChild ( ) . getType ( ) = = TokenTypes . ASSIGN ; 
 } 
 
 / * * 
 @ @ - 1006 , 8 + 999 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 
 / / Check that is had only one parameter 
 final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; 
 - if ( params = = null 
 - | | params . getChildCount ( TokenTypes . PARAMETER _ DEF ) > 0 ) { 
 + if ( params . getChildCount ( TokenTypes . PARAMETER _ DEF ) > 0 ) { 
 return false ; 
 } 
 
 @ @ - 1020 , 8 + 1012 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 } 
 
 final AST expr = slist . getFirstChild ( ) ; 
 - return expr . getType ( ) = = TokenTypes . LITERAL _ RETURN 
 - & & expr . getFirstChild ( ) . getType ( ) = = TokenTypes . EXPR ; 
 + return expr . getType ( ) = = TokenTypes . LITERAL _ RETURN ; 
 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 index 836b309 . . 38b8be4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 
 + import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocMethodCheck . MSG _ CLASS _ INFO ; 
 import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocMethodCheck . MSG _ DUPLICATE _ TAG ; 
 import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocMethodCheck . MSG _ EXCPECTED _ TAG ; 
 import static com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocMethodCheck . MSG _ INVALID _ INHERIT _ DOC ; 
 @ @ - 44 , 7 + 45 , 6 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 @ Before 
 public void setUp ( ) { 
 checkConfig = createCheckConfig ( JavadocMethodCheck . class ) ; 
 - checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 } 
 
 @ Test 
 @ @ - 62 , 6 + 62 , 17 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void testLogLoadErrors ( ) throws Exception { 
 + DefaultConfiguration config = createCheckConfig ( JavadocMethodCheck . class ) ; 
 + config . addAttribute ( " logLoadErrors " , " true " ) ; 
 + config . addAttribute ( " allowUndeclaredRTE " , " true " ) ; 
 + final String [ ] expected = { 
 + " 7 : 8 : " + getCheckMessage ( MSG _ CLASS _ INFO , " @ throws " , " InvalidExceptionName " ) , 
 + } ; 
 + verify ( config , getPath ( " javadoc / InputLoadErrors . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void extendAnnotationTest ( ) throws Exception { 
 DefaultConfiguration config = createCheckConfig ( JavadocMethodCheck . class ) ; 
 config . addAttribute ( " allowedAnnotations " , " MyAnnotation , Override " ) ; 
 @ @ - 94 , 6 + 105 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testTags ( ) throws Exception { 
 + checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 final String [ ] expected = { 
 " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 " 18 : 9 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " unused " ) , 
 @ @ - 132 , 6 + 144 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 @ Test 
 public void testTagsWithResolver ( ) throws Exception { 
 checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; 
 + checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 final String [ ] expected = { 
 " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 " 18 : 9 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " unused " ) , 
 @ @ - 239 , 6 + 252 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 @ Test 
 public void testTagsWithSubclassesAllowed ( ) throws Exception { 
 checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; 
 + checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 final String [ ] expected = { 
 " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 " 18 : 9 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " unused " ) , 
 @ @ - 389 , 6 + 403 , 8 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 " 10 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , 
 " 20 : 26 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " number " ) , 
 " 30 : 42 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ throws " , " ThreadDeath " ) , 
 + " 51 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , 
 + " 61 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , 
 } ; 
 verify ( checkConfig , getPath ( " javadoc " + File . separator 
 + " InputMissingJavadocTags . java " ) , expected ) ; 
 @ @ - 406 , 7 + 422 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 " 37 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 " 43 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 " 48 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 - " 53 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , } ; 
 + " 53 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 55 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 59 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 63 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 67 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 69 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 74 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 76 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + } ; 
 verify ( checkConfig , getPath ( " javadoc " + File . separator 
 + " InputSetterGetter . java " ) , expected ) ; 
 } 
 @ @ - 421 , 7 + 445 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 " 32 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 " 37 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 " 43 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 - " 53 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , } ; 
 + " 53 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 55 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 59 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 63 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 67 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 69 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 74 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 76 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + } ; 
 verify ( checkConfig , getPath ( " javadoc " + File . separator 
 + " InputSetterGetter . java " ) , expected ) ; 
 } 
 @ @ - 430 , 7 + 462 , 10 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 public void testTypeParamsTags ( ) throws Exception { 
 final String [ ] expected = { 
 " 26 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " < BB > " ) , 
 - " 28 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < Z > " ) , } ; 
 + " 28 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < Z > " ) , 
 + " 53 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ param " , " < Z " ) , 
 + " 55 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < Z > " ) , 
 + } ; 
 verify ( checkConfig , getPath ( " InputTypeParamsTags . java " ) , expected ) ; 
 } 
 
 @ @ - 458 , 6 + 493 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 public void test _ generics _ 1 ( ) throws Exception { 
 checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; 
 checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; 
 + checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 final String [ ] expected = { 
 " 17 : 34 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ throws " , " RE " ) , 
 " 33 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < NPE > " ) , 
 @ @ - 471 , 6 + 507 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 @ Test 
 public void test _ generics _ 2 ( ) throws Exception { 
 checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; 
 + checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 final String [ ] expected = { 
 " 17 : 34 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ throws " , " RE " ) , 
 " 33 : 13 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ param " , " < NPE > " ) , 
 @ @ - 483 , 6 + 520 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void test _ generics _ 3 ( ) throws Exception { 
 + checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 final String [ ] expected = { 
 " 8 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ throws " , " RE " ) , 
 " 17 : 34 : " + getCheckMessage ( MSG _ EXCPECTED _ TAG , " @ throws " , " RE " ) , 
 @ @ - 523 , 4 + 561 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } ; 
 verify ( checkConfig , getPath ( " javadoc / InputJavadocMethodIgnoreNameRegex . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testNotSkipAnythingWhenSkipRegexDoesNotMatch ( ) throws Exception { 
 + checkConfig . addAttribute ( " ignoreMethodNamesRegex " , " regexThatDoesNotMatch " ) ; 
 + String [ ] expected = { 
 + " 5 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 9 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + " 13 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " javadoc / InputJavadocMethodIgnoreNameRegex . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java 
 index e552b9c . . d9afbed 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputTypeParamsTags . java 
 @ @ - 47 , 4 + 47 , 12 @ @ public class InputTypeParamsTags < A , B1 , C456 extends Comparable > 
 public static class InnerClass < A , B > 
 { 
 } 
 + 
 + / * * 
 + * Some explanation . 
 + * @ param < Z The wrong type param 
 + * / 
 + public < Z > void unclosedGenericParam ( ) 
 + { 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputLoadErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputLoadErrors . java 
 new file mode 100644 
 index 0000000 . . 0a16501 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputLoadErrors . java 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + package com . puppycrawl . tools . checkstyle . javadoc ; 
 + 
 + public class InputLoadErrors 
 + { 
 + / * * 
 + * aasdf 
 + * @ throws InvalidExceptionName exception that cannot be loaded 
 + * / 
 + void method ( ) { } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputMissingJavadocTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputMissingJavadocTags . java 
 index 7859e33 . . 879ea90 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputMissingJavadocTags . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputMissingJavadocTags . java 
 @ @ - 30 , 4 + 30 , 35 @ @ public class InputMissingJavadocTags { 
 int missingThrows ( int number ) throws ThreadDeath { 
 return number ; 
 } 
 + 
 + / * * 
 + * Missing return , but { @ inheritDoc } is present . 
 + * 
 + * @ param number to return 
 + * @ throws java . util . NoSuchElementException sometimes 
 + * / 
 + int missingReturnButInheritDocPresent ( int number ) throws java . util . NoSuchElementException { 
 + return number ; 
 + } 
 + 
 + / * * 
 + * Missing return in the middle . 
 + * 
 + * @ param number to return 
 + * @ return 
 + * @ throws java . util . NoSuchElementException sometimes 
 + * / 
 + private int missingReturnInTheMiddle ( int number ) { 
 + return number ; 
 + } 
 + 
 + / * * 
 + * Missing return at the end . 
 + * 
 + * @ param number to return 
 + * @ return 
 + * / 
 + private int missingReturnAtTheEnd ( int number ) { 
 + return number ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputSetterGetter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputSetterGetter . java 
 index 996c795 . . 9f54252 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputSetterGetter . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputSetterGetter . java 
 @ @ - 51 , 4 + 51 , 28 @ @ public class InputSetterGetter 
 } 
 
 private void firePropertyChanged ( ) { } 
 + 
 + Object setObject ( Object object ) { 
 + return new Object ( ) ; 
 + } 
 + 
 + Object getNext ( ) { 
 + throw new UnsupportedOperationException ( ) ; 
 + } 
 + 
 + public void setWithoutAssignment ( Object object ) { 
 + object . notify ( ) ; 
 + } 
 + 
 + InputSetterGetter ( ) { } 
 + 
 + public InputSetterGetter ( Object object ) throws Exception { } 
 + 
 + } 
 + 
 + interface TestInterface { 
 + void setObject ( Object object ) ; 
 + 
 + Object getObject ( ) ; 
 } 
 + 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java 
 index 28ae00f . . 44ccb6e 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / TestGenerics . java 
 @ @ - 59 , 5 + 59 , 10 @ @ public class TestGenerics < E extends java . lang . Exception , 
 * / 
 public abstract String doStuff ( T t ) throws E2 ; 
 } 
 + 
 + / * * 
 + * @ param < P > some parameter 
 + * / 
 + public interface InvalidParameterInJavadoc < T > { } 
 } 

