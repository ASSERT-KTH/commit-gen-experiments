BLEU SCORE: 0.0379680177759557

TEST MSG: Issue # 2526 : reorganized checkstyle _ checks . xml
GENERATED MSG: Added google and sun configs to jar , issue # 305

TEST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 1b4abbb . . 405f100 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 7 , 7 + 7 , 7 @ @ <nl> < ! - - <nl> If you set the basedir property below , then all reported file <nl> names will be relative to the specified directory . See <nl> - http : / / checkstyle . sourceforge . net / 5 . x / config . html # Checker <nl> + http : / / checkstyle . sourceforge . net / config . html # Checker <nl> <nl> < property name = " basedir " value = " $ { basedir } " / > <nl> - - > <nl> @ @ - 18 , 74 + 18 , 217 @ @ <nl> <nl> < property name = " fileExtensions " value = " java , properties , xml " / > <nl> <nl> - < module name = " SuppressionFilter " > <nl> - < property name = " file " value = " $ { checkstyle . suppressions . file } " / > <nl> + < ! - - Filters - - > <nl> + < module name = " SeverityMatchFilter " > <nl> + < ! - - report all violations except ignore - - > <nl> + < property name = " severity " value = " ignore " / > <nl> + < property name = " acceptOnMatch " value = " false " / > <nl> < / module > <nl> - <nl> - < module name = " JavadocPackage " > <nl> - < property name = " allowLegacy " value = " false " / > <nl> + < module name = " SuppressionCommentFilter " > <nl> + < ! - - <nl> + Use suppressions . xml for suppressions , this is only example . <nl> + checkFormat will prevent suppression comments from being valid . <nl> + - - > <nl> + < property name = " checkFormat " value = " IGNORETHIS " / > <nl> + < property name = " offCommentFormat " value = " CSOFF \ : . * " / > <nl> + < property name = " onCommentFormat " value = " CSON \ : . * " / > <nl> < / module > <nl> - <nl> - < module name = " FileTabCharacter " > <nl> - < property name = " eachLine " value = " false " / > <nl> + < module name = " SuppressionFilter " > <nl> + < property name = " file " value = " $ { checkstyle . suppressions . file } " / > <nl> < / module > <nl> - <nl> - < module name = " FileLength " > <nl> - < property name = " fileExtensions " value = " java " / > <nl> + < module name = " SuppressWarningsFilter " / > <nl> + < module name = " SuppressWithNearbyCommentFilter " > <nl> + < ! - - <nl> + Use suppressions . xml for suppressions , this is only example . <nl> + checkFormat will prevent suppression comments from being valid . <nl> + - - > <nl> + < property name = " checkFormat " value = " IGNORETHIS " / > <nl> + < property name = " commentFormat " value = " SUPPRESS CHECKSTYLE , ( \ w + ) " / > <nl> + < property name = " messageFormat " value = " $ 1 " / > <nl> + < property name = " influenceFormat " value = " - 1 " / > <nl> < / module > <nl> <nl> - < module name = " NewlineAtEndOfFile " / > <nl> - <nl> + < ! - - Headers - - > <nl> < module name = " Header " > <nl> < property name = " headerFile " value = " $ { checkstyle . header . file } " / > <nl> < property name = " fileExtensions " value = " java " / > <nl> < property name = " id " value = " header " / > <nl> < / module > <nl> + < module name = " RegexpHeader " > <nl> + < property name = " headerFile " value = " $ { checkstyle . regexp . header . file } " / > <nl> + < property name = " fileExtensions " value = " java " / > <nl> + < / module > <nl> <nl> - < module name = " RegexpSingleline " > <nl> - < property name = " format " value = " \ s + $ " / > <nl> - < property name = " minimum " value = " 0 " / > <nl> - < property name = " maximum " value = " 0 " / > <nl> + < ! - - Javadoc Comments - - > <nl> + < module name = " JavadocPackage " > <nl> + < property name = " allowLegacy " value = " false " / > <nl> + < / module > <nl> + <nl> + < ! - - Miscellaneous - - > <nl> + < module name = " NewlineAtEndOfFile " / > <nl> + < module name = " Translation " > <nl> + < property name = " requiredTranslations " value = " de , fr , fi , es , pt , ja , tr " / > <nl> < / module > <nl> + < module name = " UniqueProperties " / > <nl> <nl> + < ! - - Regexp - - > <nl> < module name = " RegexpMultiline " / > <nl> < module name = " RegexpMultiline " > <nl> < property name = " format " value = " \ r ? \ n [ \ t ] * \ r ? \ n [ \ t ] * \ r ? \ n " / > <nl> < property name = " fileExtensions " value = " java , xml , properties " / > <nl> < property name = " message " value = " Unnecessary consecutive lines " / > <nl> < / module > <nl> - <nl> - < module name = " RegexpSingleline " > <nl> - < property name = " format " value = " / \ * \ * + \ p { javaLowerCase } " / > <nl> + < module name = " RegexpMultiline " > <nl> + < property name = " format " value = " / \ * \ * \ W + \ * + \ p { javaLowerCase } " / > <nl> < property name = " fileExtensions " value = " java " / > <nl> < property name = " message " value = " First sentence in a comment should start with a capital letter " / > <nl> < / module > <nl> - < module name = " RegexpMultiline " > <nl> - < property name = " format " value = " / \ * \ * \ W + \ * + \ p { javaLowerCase } " / > <nl> + < module name = " RegexpSingleline " > <nl> + < property name = " format " value = " \ s + $ " / > <nl> + < property name = " minimum " value = " 0 " / > <nl> + < property name = " maximum " value = " 0 " / > <nl> + < / module > <nl> + < module name = " RegexpSingleline " > <nl> + < property name = " format " value = " / \ * \ * + \ p { javaLowerCase } " / > <nl> < property name = " fileExtensions " value = " java " / > <nl> < property name = " message " value = " First sentence in a comment should start with a capital letter " / > <nl> < / module > <nl> <nl> - < module name = " RegexpHeader " > <nl> - < property name = " headerFile " value = " $ { checkstyle . regexp . header . file } " / > <nl> + < ! - - Size Violations - - > <nl> + < module name = " FileLength " > <nl> < property name = " fileExtensions " value = " java " / > <nl> < / module > <nl> <nl> - < module name = " UniqueProperties " / > <nl> + < ! - - Whitespace - - > <nl> + < module name = " FileTabCharacter " > <nl> + < property name = " eachLine " value = " false " / > <nl> + < / module > <nl> <nl> < module name = " TreeWalker " > <nl> < property name = " tabWidth " value = " 4 " / > <nl> <nl> - < module name = " AvoidStarImport " / > <nl> - < module name = " ConstantName " / > <nl> + < ! - - Annotations - - > <nl> + < module name = " AnnotationLocation " / > <nl> + < module name = " AnnotationUseStyle " / > <nl> + < module name = " MissingDeprecated " / > <nl> + < module name = " MissingOverride " > <nl> + < property name = " javaFiveCompatibility " value = " true " / > <nl> + < / module > <nl> + < module name = " PackageAnnotation " / > <nl> + < module name = " SuppressWarnings " / > <nl> + < module name = " SuppressWarningsHolder " / > <nl> + <nl> + < ! - - Block Checks - - > <nl> + < module name = " AvoidNestedBlocks " > <nl> + < property name = " allowInSwitchCase " value = " true " / > <nl> + < / module > <nl> < module name = " EmptyBlock " > <nl> < property name = " option " value = " text " / > <nl> < / module > <nl> - < module name = " EmptyForIteratorPad " / > <nl> + < module name = " EmptyCatchBlock " / > <nl> + < module name = " LeftCurly " > <nl> + < property name = " maxLineLength " value = " 100 " / > <nl> + < / module > <nl> + < module name = " NeedBraces " / > <nl> + < module name = " RightCurly " > <nl> + < property name = " option " value = " alone " / > <nl> + < / module > <nl> + <nl> + < ! - - Class Design - - > <nl> + < module name = " DesignForExtension " > <nl> + < ! - - <nl> + We should postpone DesignForExtension Check enforcement till next major release <nl> + as it will seriously brake backward compatibility with existing usage of our library <nl> + - - > <nl> + < property name = " severity " value = " ignore " / > <nl> + < / module > <nl> + < module name = " FinalClass " / > <nl> + < module name = " HideUtilityClassConstructor " / > <nl> + < module name = " InnerTypeLast " / > <nl> + < module name = " InterfaceIsType " / > <nl> + < module name = " MutableException " / > <nl> + < module name = " OneTopLevelClass " / > <nl> + < module name = " ThrowsCount " > <nl> + < property name = " max " value = " 2 " / > <nl> + < / module > <nl> + < module name = " VisibilityModifier " / > <nl> + <nl> + < ! - - Coding - - > <nl> + < module name = " ArrayTrailingComma " / > <nl> + < module name = " AvoidInlineConditionals " / > <nl> + < module name = " CovariantEquals " / > <nl> + < module name = " DeclarationOrder " / > <nl> + < module name = " DefaultComesLast " / > <nl> + < module name = " EmptyStatement " / > <nl> + < module name = " EqualsAvoidNull " / > <nl> < module name = " EqualsHashCode " / > <nl> + < module name = " ExplicitInitialization " / > <nl> + < module name = " FallThrough " / > <nl> + < module name = " FinalLocalVariable " / > <nl> + < module name = " HiddenField " > <nl> + < property name = " ignoreConstructorParameter " value = " true " / > <nl> + < property name = " ignoreSetter " value = " true " / > <nl> + < property name = " setterCanReturnItsClass " value = " true " / > <nl> + < / module > <nl> + < module name = " IllegalCatch " / > <nl> + < module name = " IllegalInstantiation " / > <nl> + < module name = " IllegalThrows " / > <nl> + < module name = " IllegalToken " / > <nl> + < module name = " IllegalTokenText " / > <nl> + < module name = " IllegalType " / > <nl> + < module name = " InnerAssignment " / > <nl> + < module name = " MagicNumber " / > <nl> + < module name = " MissingCtor " > <nl> + < ! - - <nl> + we will not use that fanatic validation , extra code is not good <nl> + But this Check will exists as it was created by community demand . <nl> + - - > <nl> + < property name = " severity " value = " ignore " / > <nl> + < / module > <nl> + < module name = " MissingSwitchDefault " / > <nl> + < module name = " ModifiedControlVariable " / > <nl> + < module name = " MultipleStringLiterals " / > <nl> + < module name = " MultipleVariableDeclarations " / > <nl> + < module name = " NestedForDepth " > <nl> + < property name = " max " value = " 2 " / > <nl> + < / module > <nl> + < module name = " NestedIfDepth " > <nl> + < property name = " max " value = " 3 " / > <nl> + < / module > <nl> + < module name = " NestedTryDepth " / > <nl> + < module name = " NoClone " / > <nl> + < module name = " NoFinalizer " / > <nl> < module name = " OneStatementPerLine " / > <nl> + < module name = " OverloadMethodsDeclarationOrder " / > <nl> + < module name = " PackageDeclaration " / > <nl> + < module name = " ParameterAssignment " / > <nl> + < module name = " RequireThis " > <nl> + < module name = " ReturnCount " / > <nl> + < module name = " SimplifyBooleanExpression " / > <nl> + < module name = " SimplifyBooleanReturn " / > <nl> + < module name = " StringLiteralEquality " / > <nl> + < module name = " SuperClone " / > <nl> + < module name = " SuperFinalize " / > <nl> + < ! - - <nl> + we will not use that fanatic validation , extra modifiers pollute a code <nl> + it is better to use different names for arguments , or expect IDE to highlight field . <nl> + But this Check will exists as it was created by community demand . <nl> + - - > <nl> + < property name = " severity " value = " ignore " / > <nl> + < / module > <nl> + < module name = " UnnecessaryParentheses " / > <nl> + < module name = " VariableDeclarationUsageDistance " / > <nl> <nl> - < module name = " IllegalCatch " / > <nl> + < ! - - Imports - - > <nl> + < module name = " AvoidStarImport " / > <nl> + < module name = " AvoidStaticImport " / > <nl> + < module name = " CustomImportOrder " > <nl> + < property name = " customImportOrderRules " value = " STATIC # # # STANDARD _ JAVA _ PACKAGE # # # SPECIAL _ IMPORTS " / > <nl> + < property name = " specialImportsRegExp " value = " org " / > <nl> + < property name = " sortImportsInGroupAlphabetically " value = " true " / > <nl> + < property name = " separateLineBetweenGroups " value = " true " / > <nl> + < / module > <nl> + < module name = " IllegalImport " / > <nl> < module name = " ImportControl " > <nl> < property name = " file " value = " $ { checkstyle . importcontrol . file } " / > <nl> < / module > <nl> @ @ - 96 , 184 + 239 , 169 @ @ <nl> < property name = " option " value = " top " / > <nl> < property name = " sortStaticImportsAlphabetically " value = " true " / > <nl> < / module > <nl> - < module name = " CustomImportOrder " > <nl> - < property name = " customImportOrderRules " value = " STATIC # # # STANDARD _ JAVA _ PACKAGE # # # SPECIAL _ IMPORTS " / > <nl> - < property name = " specialImportsRegExp " value = " org " / > <nl> - < property name = " sortImportsInGroupAlphabetically " value = " true " / > <nl> - < property name = " separateLineBetweenGroups " value = " true " / > <nl> - < / module > <nl> + < module name = " RedundantImport " / > <nl> + < module name = " UnusedImports " / > <nl> <nl> - < module name = " IllegalImport " / > <nl> - < module name = " IllegalInstantiation " / > <nl> - < module name = " IllegalThrows " / > <nl> - < module name = " InnerAssignment " / > <nl> - < module name = " JavadocType " > <nl> - < property name = " authorFormat " value = " \ S " / > <nl> - < ! - - avoid errors on tag ' @ noinspection ' - - > <nl> - < property name = " allowUnknownTags " value = " true " / > <nl> - < / module > <nl> + < ! - - Javadoc Comments - - > <nl> + < module name = " AtclauseOrder " / > <nl> < module name = " JavadocMethod " > <nl> < property name = " allowUndeclaredRTE " value = " true " / > <nl> < property name = " allowThrowsTagsForSubclasses " value = " true " / > <nl> < property name = " allowMissingPropertyJavadoc " value = " true " / > <nl> < / module > <nl> - < module name = " JavadocVariable " / > <nl> + < module name = " JavadocParagraph " / > <nl> < module name = " JavadocStyle " > <nl> < property name = " scope " value = " public " / > <nl> < / module > <nl> - < module name = " LeftCurly " > <nl> - < property name = " maxLineLength " value = " 100 " / > <nl> - < / module > <nl> - < module name = " OuterTypeNumber " / > <nl> - < module name = " LineLength " > <nl> - < property name = " max " value = " 100 " / > <nl> - < property name = " ignorePattern " value = " ^ * \ * * [ ^ ] + $ " / > <nl> - < / module > <nl> - < module name = " MethodCount " > <nl> - < property name = " maxTotal " value = " 35 " / > <nl> + < module name = " JavadocTagContinuationIndentation " / > <nl> + < module name = " JavadocType " > <nl> + < property name = " authorFormat " value = " \ S " / > <nl> + < ! - - avoid errors on tag ' @ noinspection ' - - > <nl> + < property name = " allowUnknownTags " value = " true " / > <nl> < / module > <nl> + < module name = " JavadocVariable " / > <nl> + < module name = " NonEmptyAtclauseDescription " / > <nl> + < module name = " SingleLineJavadoc " / > <nl> + < module name = " WriteTag " / > <nl> + < module name = " SummaryJavadoc " / > <nl> <nl> - < module name = " LocalFinalVariableName " / > <nl> - < module name = " LocalVariableName " / > <nl> - < module name = " MemberName " > <nl> - < property name = " format " value = " ^ [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] * $ " / > <nl> + < ! - - Metrics - - > <nl> + < module name = " BooleanExpressionComplexity " > <nl> + < property name = " max " value = " 7 " / > <nl> < / module > <nl> - < module name = " MethodLength " / > <nl> - < module name = " MethodName " / > <nl> - < module name = " MethodParamPad " / > <nl> - < module name = " ModifierOrder " / > <nl> - < module name = " NeedBraces " / > <nl> - < module name = " NoWhitespaceAfter " > <nl> - < property name = " tokens " value = " ARRAY _ INIT " / > <nl> - < property name = " tokens " value = " BNOT " / > <nl> - < property name = " tokens " value = " DEC " / > <nl> - < property name = " tokens " value = " DOT " / > <nl> - < property name = " tokens " value = " INC " / > <nl> - < property name = " tokens " value = " LNOT " / > <nl> - < property name = " tokens " value = " UNARY _ MINUS " / > <nl> - < property name = " tokens " value = " UNARY _ PLUS " / > <nl> - < property name = " tokens " value = " ARRAY _ DECLARATOR " / > <nl> + < module name = " ClassDataAbstractionCoupling " > <nl> + < ! - - Default classes are also listed - - > <nl> + < property name = " excludedClasses " value = " boolean , byte , char , double , float , int , long , short , void , Boolean , Byte , Character , Double , Float , Integer , Long , Short , Void , Object , Class , String , StringBuffer , StringBuilder , ArrayIndexOutOfBoundsException , Exception , RuntimeException , IllegalArgumentException , IllegalStateException , IndexOutOfBoundsException , NullPointerException , Throwable , SecurityException , UnsupportedOperationException , List , ArrayList , Deque , Queue , LinkedList , Set , HashSet , SortedSet , TreeSet , Map , HashMap , SortedMap , TreeMap , <nl> + DetailsAST , CheckstyleException , UnsupportedEncodingException , BuildException , ConversionException , FileNotFoundException , TestException " / > <nl> < / module > <nl> - <nl> - < module name = " NoWhitespaceBefore " / > <nl> - < module name = " NoWhitespaceBefore " > <nl> - < property name = " tokens " value = " DOT " / > <nl> - < property name = " allowLineBreaks " value = " true " / > <nl> + < module name = " ClassFanOutComplexity " > <nl> + < property name = " max " value = " 25 " / > <nl> + < ! - - Default classes are also listed - - > <nl> + < property name = " excludedClasses " value = " boolean , byte , char , double , float , int , long , short , void , Boolean , Byte , Character , Double , Float , Integer , Long , Short , Void , Object , Class , String , StringBuffer , StringBuilder , ArrayIndexOutOfBoundsException , Exception , RuntimeException , IllegalArgumentException , IllegalStateException , IndexOutOfBoundsException , NullPointerException , Throwable , SecurityException , UnsupportedOperationException , List , ArrayList , Deque , Queue , LinkedList , Set , HashSet , SortedSet , TreeSet , Map , HashMap , SortedMap , TreeMap , DetailsAST , CheckstyleException , UnsupportedEncodingException , BuildException , ConversionException , FileNotFoundException , TestException , Log , Sets , Multimap , TokenStreamRecognitionException , RecognitionException , TokenStreamException , IOException " / > <nl> < / module > <nl> + < module name = " CyclomaticComplexity " / > <nl> + < module name = " JavaNCSS " / > <nl> + < module name = " NPathComplexity " / > <nl> <nl> - < module name = " OperatorWrap " / > <nl> - < module name = " OperatorWrap " > <nl> - < property name = " tokens " value = " ASSIGN " / > <nl> - < property name = " tokens " value = " DIV _ ASSIGN " / > <nl> - < property name = " tokens " value = " PLUS _ ASSIGN " / > <nl> - < property name = " tokens " value = " MINUS _ ASSIGN " / > <nl> - < property name = " tokens " value = " STAR _ ASSIGN " / > <nl> - < property name = " tokens " value = " MOD _ ASSIGN " / > <nl> - < property name = " tokens " value = " SR _ ASSIGN " / > <nl> - < property name = " tokens " value = " BSR _ ASSIGN " / > <nl> - < property name = " tokens " value = " SL _ ASSIGN " / > <nl> - < property name = " tokens " value = " BXOR _ ASSIGN " / > <nl> - < property name = " tokens " value = " BOR _ ASSIGN " / > <nl> - < property name = " tokens " value = " BAND _ ASSIGN " / > <nl> - < property name = " option " value = " eol " / > <nl> + < ! - - Misc - - > <nl> + < module name = " ArrayTypeStyle " / > <nl> + < module name = " AvoidEscapedUnicodeCharacters " / > <nl> + < module name = " CommentsIndentation " / > <nl> + < module name = " DescendantToken " / > <nl> + < module name = " FileContentsHolder " / > <nl> + < module name = " FinalParameters " > <nl> + < ! - - <nl> + we will not use that fanatic validation , extra modifiers pollute a code <nl> + it is better to use extra validation ( Check ) that argument is reassigned <nl> + But this Check will exists as it was created by community demand . <nl> + - - > <nl> + < property name = " severity " value = " ignore " / > <nl> < / module > <nl> - < module name = " PackageName " / > <nl> - < module name = " ParameterName " > <nl> - < property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " / > <nl> + < module name = " Indentation " > <nl> + < property name = " basicOffset " value = " 4 " / > <nl> + < property name = " braceAdjustment " value = " 0 " / > <nl> + < property name = " caseIndent " value = " 4 " / > <nl> < / module > <nl> - < module name = " ParameterNumber " / > <nl> - <nl> - <nl> + < module name = " OuterTypeFilename " / > <nl> + < module name = " TodoComment " > <nl> + < property name = " format " value = " ( TODO ) | ( FIXME ) " / > <nl> + < / module > <nl> + < module name = " TrailingComment " / > <nl> + < module name = " UncommentedMain " / > <nl> + < module name = " UpperEll " / > <nl> <nl> - < module name = " ParenPad " / > <nl> - < module name = " TypecastParenPad " / > <nl> - < module name = " RedundantImport " / > <nl> + < ! - - Modifiers - - > <nl> + < module name = " ModifierOrder " / > <nl> < module name = " RedundantModifier " / > <nl> - < module name = " RightCurly " > <nl> - < property name = " option " value = " alone " / > <nl> + <nl> + < ! - - Naming Conventions - - > <nl> + < module name = " AbbreviationAsWordInName " / > <nl> + < module name = " AbstractClassName " / > <nl> + < module name = " ClassTypeParameterName " / > <nl> + < module name = " ConstantName " / > <nl> + < module name = " InterfaceTypeParameterName " / > <nl> + < module name = " LocalFinalVariableName " / > <nl> + < module name = " LocalVariableName " / > <nl> + < module name = " MemberName " > <nl> + < property name = " format " value = " ^ [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] * $ " / > <nl> + < / module > <nl> + < module name = " MethodName " / > <nl> + < module name = " MethodTypeParameterName " / > <nl> + < module name = " PackageName " / > <nl> + < module name = " ParameterName " > <nl> + < property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " / > <nl> < / module > <nl> - < module name = " SimplifyBooleanExpression " / > <nl> - < module name = " SimplifyBooleanReturn " / > <nl> < module name = " StaticVariableName " > <nl> < property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " / > <nl> < / module > <nl> < module name = " TypeName " / > <nl> - < module name = " UnusedImports " / > <nl> - <nl> <nl> - < module name = " UpperEll " / > <nl> - < module name = " VisibilityModifier " / > <nl> - < module name = " WhitespaceAfter " / > <nl> - < module name = " WhitespaceAround " / > <nl> - < module name = " GenericWhitespace " / > <nl> - < module name = " FinalClass " / > <nl> - < module name = " MissingSwitchDefault " / > <nl> - < module name = " MagicNumber " / > <nl> - < module name = " Indentation " > <nl> - < property name = " basicOffset " value = " 4 " / > <nl> - < property name = " braceAdjustment " value = " 0 " / > <nl> - < property name = " caseIndent " value = " 4 " / > <nl> + < ! - - Regexp - - > <nl> + < module name = " Regexp " / > <nl> + < module name = " RegexpSinglelineJava " / > <nl> + < module name = " RegexpSinglelineJava " > <nl> + < property name = " format " value = " [ ^ \ p { ASCII } ] " / > <nl> + < property name = " ignoreComments " value = " true " / > <nl> < / module > <nl> - < module name = " ArrayTrailingComma " / > <nl> - < module name = " FinalLocalVariable " / > <nl> - < module name = " EqualsAvoidNull " / > <nl> - < module name = " ParameterAssignment " / > <nl> - <nl> - < module name = " CyclomaticComplexity " / > <nl> <nl> - < module name = " NestedForDepth " > <nl> - < property name = " max " value = " 2 " / > <nl> - < / module > <nl> - < module name = " NestedIfDepth " > <nl> - < property name = " max " value = " 3 " / > <nl> + < ! - - Size Violations - - > <nl> + < module name = " AnonInnerLength " / > <nl> + < module name = " ExecutableStatementCount " > <nl> + < property name = " max " value = " 30 " / > <nl> < / module > <nl> - < module name = " NestedTryDepth " / > <nl> - < module name = " ExplicitInitialization " / > <nl> - < module name = " AnnotationUseStyle " / > <nl> - < module name = " MissingDeprecated " / > <nl> - < module name = " MissingOverride " > <nl> - < property name = " javaFiveCompatibility " value = " true " / > <nl> + < module name = " LineLength " > <nl> + < property name = " max " value = " 100 " / > <nl> + < property name = " ignorePattern " value = " ^ * \ * * [ ^ ] + $ " / > <nl> < / module > <nl> - < module name = " PackageAnnotation " / > <nl> - < module name = " SuppressWarnings " / > <nl> - < module name = " OuterTypeFilename " / > <nl> - < module name = " HideUtilityClassConstructor " / > <nl> - < module name = " AnnotationLocation " / > <nl> - < module name = " AnonInnerLength " / > <nl> - < module name = " ArrayTypeStyle " / > <nl> - < module name = " AtclauseOrder " / > <nl> - < module name = " AvoidNestedBlocks " > <nl> - < property name = " allowInSwitchCase " value = " true " / > <nl> + < module name = " MethodCount " > <nl> + < property name = " maxTotal " value = " 35 " / > <nl> < / module > <nl> - < module name = " AvoidStaticImport " / > <nl> - < module name = " ClassTypeParameterName " / > <nl> - < module name = " CovariantEquals " / > <nl> - < module name = " DeclarationOrder " / > <nl> - < module name = " DefaultComesLast " / > <nl> - < module name = " DescendantToken " / > <nl> - < module name = " EmptyCatchBlock " / > <nl> + < module name = " MethodLength " / > <nl> + < module name = " OuterTypeNumber " / > <nl> + < module name = " ParameterNumber " / > <nl> + <nl> + < ! - - Whitespace - - > <nl> < module name = " EmptyForInitializerPad " / > <nl> + < module name = " EmptyForIteratorPad " / > <nl> < module name = " EmptyLineSeparator " > <nl> < property name = " allowNoEmptyLineBetweenFields " value = " true " / > <nl> < / module > <nl> - < module name = " EmptyStatement " / > <nl> - < module name = " FallThrough " / > <nl> - < module name = " IllegalTokenText " / > <nl> - < module name = " InterfaceIsType " / > <nl> - < module name = " InterfaceTypeParameterName " / > <nl> - < module name = " MethodTypeParameterName " / > <nl> - < module name = " MultipleVariableDeclarations " / > <nl> - < module name = " MutableException " / > <nl> - < module name = " NoClone " / > <nl> - < module name = " NoFinalizer " / > <nl> + < module name = " GenericWhitespace " / > <nl> + < module name = " MethodParamPad " / > <nl> < module name = " NoLineWrap " / > <nl> - < module name = " NonEmptyAtclauseDescription " / > <nl> - < module name = " Regexp " / > <nl> - < module name = " RegexpSinglelineJava " / > <nl> - < module name = " RegexpSinglelineJava " > <nl> - < property name = " format " value = " [ ^ \ p { ASCII } ] " / > <nl> - < property name = " ignoreComments " value = " true " / > <nl> + < module name = " NoWhitespaceAfter " > <nl> + < property name = " tokens " value = " ARRAY _ INIT " / > <nl> + < property name = " tokens " value = " BNOT " / > <nl> + < property name = " tokens " value = " DEC " / > <nl> + < property name = " tokens " value = " DOT " / > <nl> + < property name = " tokens " value = " INC " / > <nl> + < property name = " tokens " value = " LNOT " / > <nl> + < property name = " tokens " value = " UNARY _ MINUS " / > <nl> + < property name = " tokens " value = " UNARY _ PLUS " / > <nl> + < property name = " tokens " value = " ARRAY _ DECLARATOR " / > <nl> + < / module > <nl> + < module name = " NoWhitespaceBefore " / > <nl> + < module name = " NoWhitespaceBefore " > <nl> + < property name = " tokens " value = " DOT " / > <nl> + < property name = " allowLineBreaks " value = " true " / > <nl> + < / module > <nl> + < module name = " OperatorWrap " / > <nl> + < module name = " OperatorWrap " > <nl> + < property name = " tokens " value = " ASSIGN " / > <nl> + < property name = " tokens " value = " DIV _ ASSIGN " / > <nl> + < property name = " tokens " value = " PLUS _ ASSIGN " / > <nl> + < property name = " tokens " value = " MINUS _ ASSIGN " / > <nl> + < property name = " tokens " value = " STAR _ ASSIGN " / > <nl> + < property name = " tokens " value = " MOD _ ASSIGN " / > <nl> + < property name = " tokens " value = " SR _ ASSIGN " / > <nl> + < property name = " tokens " value = " BSR _ ASSIGN " / > <nl> + < property name = " tokens " value = " SL _ ASSIGN " / > <nl> + < property name = " tokens " value = " BXOR _ ASSIGN " / > <nl> + < property name = " tokens " value = " BOR _ ASSIGN " / > <nl> + < property name = " tokens " value = " BAND _ ASSIGN " / > <nl> + < property name = " option " value = " eol " / > <nl> < / module > <nl> + < module name = " ParenPad " / > <nl> < module name = " SeparatorWrap " > <nl> < property name = " tokens " value = " DOT " / > <nl> < property name = " option " value = " nl " / > <nl> @ @ - 282 , 131 + 410 , 10 @ @ <nl> < property name = " tokens " value = " COMMA " / > <nl> < property name = " option " value = " EOL " / > <nl> < / module > <nl> - < module name = " StringLiteralEquality " / > <nl> - < module name = " SuperClone " / > <nl> - < module name = " SuperFinalize " / > <nl> - < module name = " SuppressWarningsHolder " / > <nl> - < module name = " ThrowsCount " > <nl> - < property name = " max " value = " 2 " / > <nl> - < / module > <nl> - < module name = " TodoComment " > <nl> - < property name = " format " value = " ( TODO ) | ( FIXME ) " / > <nl> - < / module > <nl> - < module name = " UncommentedMain " / > <nl> - < module name = " UnnecessaryParentheses " / > <nl> - < module name = " AbbreviationAsWordInName " / > <nl> - < module name = " AvoidEscapedUnicodeCharacters " / > <nl> - < module name = " AbstractClassName " / > <nl> - <nl> - < module name = " BooleanExpressionComplexity " > <nl> - < property name = " max " value = " 7 " / > <nl> - < / module > <nl> - <nl> - < module name = " CommentsIndentation " / > <nl> - < module name = " HiddenField " > <nl> - < property name = " ignoreConstructorParameter " value = " true " / > <nl> - < property name = " ignoreSetter " value = " true " / > <nl> - < property name = " setterCanReturnItsClass " value = " true " / > <nl> - < / module > <nl> - < module name = " InnerTypeLast " / > <nl> - <nl> - < module name = " ModifiedControlVariable " / > <nl> - < module name = " AvoidInlineConditionals " / > <nl> - < module name = " IllegalType " / > <nl> - < module name = " TrailingComment " / > <nl> - < module name = " MultipleStringLiterals " / > <nl> - <nl> - < module name = " ExecutableStatementCount " > <nl> - < property name = " max " value = " 30 " / > <nl> - < / module > <nl> - <nl> - < module name = " NPathComplexity " / > <nl> - < module name = " JavaNCSS " / > <nl> - <nl> - < module name = " ClassDataAbstractionCoupling " > <nl> - < ! - - Default classes are also listed - - > <nl> - < property name = " excludedClasses " value = " boolean , byte , char , double , float , int , long , short , void , Boolean , Byte , Character , Double , Float , Integer , Long , Short , Void , Object , Class , String , StringBuffer , StringBuilder , ArrayIndexOutOfBoundsException , Exception , RuntimeException , IllegalArgumentException , IllegalStateException , IndexOutOfBoundsException , NullPointerException , Throwable , SecurityException , UnsupportedOperationException , List , ArrayList , Deque , Queue , LinkedList , Set , HashSet , SortedSet , TreeSet , Map , HashMap , SortedMap , TreeMap , <nl> - DetailsAST , CheckstyleException , UnsupportedEncodingException , BuildException , ConversionException , FileNotFoundException , TestException " / > <nl> - < / module > <nl> - <nl> - < module name = " ReturnCount " / > <nl> - < module name = " OneTopLevelClass " / > <nl> - < module name = " IllegalToken " / > <nl> - < module name = " PackageDeclaration " / > <nl> - < module name = " VariableDeclarationUsageDistance " / > <nl> - < module name = " OverloadMethodsDeclarationOrder " / > <nl> - < module name = " ClassFanOutComplexity " > <nl> - < property name = " max " value = " 25 " / > <nl> - < ! - - Default classes are also listed - - > <nl> - < property name = " excludedClasses " value = " boolean , byte , char , double , float , int , long , short , void , Boolean , Byte , Character , Double , Float , Integer , Long , Short , Void , Object , Class , String , StringBuffer , StringBuilder , ArrayIndexOutOfBoundsException , Exception , RuntimeException , IllegalArgumentException , IllegalStateException , IndexOutOfBoundsException , NullPointerException , Throwable , SecurityException , UnsupportedOperationException , List , ArrayList , Deque , Queue , LinkedList , Set , HashSet , SortedSet , TreeSet , Map , HashMap , SortedMap , TreeMap , DetailsAST , CheckstyleException , UnsupportedEncodingException , BuildException , ConversionException , FileNotFoundException , TestException , Log , Sets , Multimap , TokenStreamRecognitionException , RecognitionException , TokenStreamException , IOException " / > <nl> - < / module > <nl> - <nl> - < module name = " SingleLineJavadoc " / > <nl> - < module name = " JavadocTagContinuationIndentation " / > <nl> - < module name = " JavadocParagraph " / > <nl> - < module name = " WriteTag " / > <nl> - < module name = " SummaryJavadoc " / > <nl> + < module name = " TypecastParenPad " / > <nl> + < module name = " WhitespaceAfter " / > <nl> + < module name = " WhitespaceAround " / > <nl> <nl> - < module name = " MissingCtor " > <nl> - < ! - - <nl> - we will not use that fanatic validation , extra code is not good <nl> - But this Check will exists as it was created by community demand . <nl> - - - > <nl> - < property name = " severity " value = " ignore " / > <nl> - < / module > <nl> - < module name = " RequireThis " > <nl> - < ! - - <nl> - we will not use that fanatic validation , extra modifiers pollute a code <nl> - it is better to use different names for arguments , or expect IDE to highlight field . <nl> - But this Check will exists as it was created by community demand . <nl> - - - > <nl> - < property name = " severity " value = " ignore " / > <nl> - < / module > <nl> - < module name = " FinalParameters " > <nl> - < ! - - <nl> - we will not use that fanatic validation , extra modifiers pollute a code <nl> - it is better to use extra validation ( Check ) that argument is reassigned <nl> - But this Check will exists as it was created by community demand . <nl> - - - > <nl> - < property name = " severity " value = " ignore " / > <nl> - < / module > <nl> - < module name = " DesignForExtension " > <nl> - < ! - - <nl> - We should postpone DesignForExtension Check enforcement till next major release <nl> - as it will seriously brake backward compatibility with existing usage of our library <nl> - - - > <nl> - < property name = " severity " value = " ignore " / > <nl> - < / module > <nl> - < module name = " FileContentsHolder " / > <nl> - < / module > <nl> - < module name = " Translation " > <nl> - < property name = " requiredTranslations " value = " de , fr , fi , es , pt , ja , tr " / > <nl> - < / module > <nl> - < module name = " SuppressWarningsFilter " / > <nl> - < module name = " SeverityMatchFilter " > <nl> - < ! - - <nl> - report all violations except ignore <nl> - - - > <nl> - < property name = " severity " value = " ignore " / > <nl> - < property name = " acceptOnMatch " value = " false " / > <nl> - < / module > <nl> - < module name = " SuppressWithNearbyCommentFilter " > <nl> - < ! - - <nl> - Use suppressions . xml for suppressions , this is only example . <nl> - checkFormat will prevent suppression comments from being valid . <nl> - - - > <nl> - < property name = " checkFormat " value = " IGNORETHIS " / > <nl> - < property name = " commentFormat " value = " SUPPRESS CHECKSTYLE , ( \ w + ) " / > <nl> - < property name = " messageFormat " value = " $ 1 " / > <nl> - < property name = " influenceFormat " value = " - 1 " / > <nl> - < / module > <nl> - < module name = " SuppressionCommentFilter " > <nl> - < ! - - <nl> - Use suppressions . xml for suppressions , this is only example . <nl> - checkFormat will prevent suppression comments from being valid . <nl> - - - > <nl> - < property name = " checkFormat " value = " IGNORETHIS " / > <nl> - < property name = " offCommentFormat " value = " CSOFF \ : . * " / > <nl> - < property name = " onCommentFormat " value = " CSON \ : . * " / > <nl> < / module > <nl> + <nl> < / module >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / JUnitTestCaseCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / JUnitTestCaseCheck . java <nl> deleted file mode 100644 <nl> index cd90a90 . . 0000000 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / JUnitTestCaseCheck . java <nl> + + + / dev / null <nl> @ @ - 1 , 224 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> - / / Copyright ( C ) 2001 - 2014 Oliver Burn <nl> - / / <nl> - / / This library is free software ; you can redistribute it and / or <nl> - / / modify it under the terms of the GNU Lesser General Public <nl> - / / License as published by the Free Software Foundation ; either <nl> - / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> - / / <nl> - / / This library is distributed in the hope that it will be useful , <nl> - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - / / Lesser General Public License for more details . <nl> - / / <nl> - / / You should have received a copy of the GNU Lesser General Public <nl> - / / License along with this library ; if not , write to the Free Software <nl> - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> - <nl> - import com . puppycrawl . tools . checkstyle . api . Check ; <nl> - import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> - <nl> - import com . puppycrawl . tools . checkstyle . checks . CheckUtils ; <nl> - <nl> - / * * <nl> - * Ensures that the setUp ( ) , tearDown ( ) methods are named correctly , <nl> - * have no arguments , return void and are either public or protected . <nl> - * Also ensures that suite ( ) is named correctly , has no arguments , returns <nl> - * junit . framework . Test , and is public and static . <nl> - * <nl> - * Rationale : Developers will often misname one or more of these <nl> - * methods and not realise that the method is not being called . <nl> - * <nl> - * @ author < a href = " mailto : simon @ redhillconsulting . com . au " > Simon Harris < / a > <nl> - * / <nl> - public final class JUnitTestCaseCheck extends Check <nl> - { <nl> - / * * < code > setUp ( ) < / code > method name . * / <nl> - private static final String SET _ UP _ METHOD _ NAME = " setUp " ; <nl> - / * * < code > tearDown ( ) < / code > method name . * / <nl> - private static final String TEAR _ DOWN _ METHOD _ NAME = " tearDown " ; <nl> - / * * < code > suite ( ) < / code > method name . * / <nl> - private static final String SUITE _ METHOD _ NAME = " suite " ; <nl> - <nl> - @ Override <nl> - public int [ ] getDefaultTokens ( ) <nl> - { <nl> - return new int [ ] { TokenTypes . METHOD _ DEF } ; <nl> - } <nl> - <nl> - @ Override <nl> - public int [ ] getRequiredTokens ( ) <nl> - { <nl> - return getDefaultTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void visitToken ( DetailAST aAST ) <nl> - { <nl> - switch ( aAST . getType ( ) ) { <nl> - case TokenTypes . METHOD _ DEF : <nl> - visitMethodDef ( aAST ) ; <nl> - break ; <nl> - default : <nl> - throw new IllegalStateException ( aAST . toString ( ) ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Checks given method definition . <nl> - * @ param aAST a method def node for check <nl> - * / <nl> - private void visitMethodDef ( DetailAST aAST ) <nl> - { <nl> - final String name = aAST . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; <nl> - <nl> - if ( name . equalsIgnoreCase ( SET _ UP _ METHOD _ NAME ) ) { <nl> - checkSetUpTearDownMethod ( aAST , name , SET _ UP _ METHOD _ NAME ) ; <nl> - } <nl> - else if ( name . equalsIgnoreCase ( TEAR _ DOWN _ METHOD _ NAME ) ) { <nl> - checkSetUpTearDownMethod ( aAST , name , TEAR _ DOWN _ METHOD _ NAME ) ; <nl> - } <nl> - else if ( name . equalsIgnoreCase ( SUITE _ METHOD _ NAME ) ) { <nl> - checkSuiteMethod ( aAST , name ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Checks signature / name of < code > suite ( ) < / code > . <nl> - * @ param aAST method definition node <nl> - * @ param aActualName method name <nl> - * / <nl> - private void checkSuiteMethod ( DetailAST aAST , String aActualName ) <nl> - { <nl> - if ( ! aActualName . equals ( SUITE _ METHOD _ NAME ) ) { <nl> - log ( aAST , " junit . method . name " , SUITE _ METHOD _ NAME ) ; <nl> - } <nl> - <nl> - if ( ! isPublicAndStatic ( aAST ) ) { <nl> - log ( aAST , " junit . method . public . and . static " , SUITE _ METHOD _ NAME ) ; <nl> - } <nl> - <nl> - / / let ' s check return type <nl> - final DetailAST typeAST = aAST . findFirstToken ( TokenTypes . TYPE ) ; <nl> - final boolean isArray = <nl> - ( typeAST . findFirstToken ( TokenTypes . ARRAY _ DECLARATOR ) ! = null ) ; <nl> - final String type = CheckUtils . createFullType ( typeAST ) . getText ( ) ; <nl> - if ( isArray <nl> - | | ( ! " Test " . equals ( type ) <nl> - & & ! " junit . framework . Test " . equals ( type ) ) ) <nl> - { <nl> - log ( aAST , " junit . method . return . type " , <nl> - SUITE _ METHOD _ NAME , " junit . framework . Test " ) ; <nl> - } <nl> - checkParameters ( aAST , SUITE _ METHOD _ NAME ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Checks signature / name of < code > setUp ( ) < / code > / < code > tearDown < / code > . <nl> - * @ param aAST method definition node <nl> - * @ param aActualName actual method name <nl> - * @ param aExpectedName expected method name <nl> - * / <nl> - private void checkSetUpTearDownMethod ( DetailAST aAST , String aActualName , <nl> - String aExpectedName ) <nl> - { <nl> - if ( ! aActualName . equals ( aExpectedName ) ) { <nl> - log ( aAST , " junit . method . name " , aActualName , aExpectedName ) ; <nl> - } <nl> - <nl> - if ( ! isPublicOrProtected ( aAST ) ) { <nl> - log ( aAST , " junit . method . protected . or . public " , aExpectedName ) ; <nl> - } <nl> - <nl> - if ( isStatic ( aAST ) ) { <nl> - log ( aAST , " junit . method . static " , aExpectedName ) ; <nl> - } <nl> - <nl> - checkReturnValue ( aAST , aActualName ) ; <nl> - checkParameters ( aAST , aActualName ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Checks that given method returns < code > void < / code > . <nl> - * @ param aAST method definition node <nl> - * @ param aName method name <nl> - * / <nl> - private void checkReturnValue ( DetailAST aAST , String aName ) <nl> - { <nl> - final DetailAST returnValueAST = aAST . findFirstToken ( TokenTypes . TYPE ) ; <nl> - <nl> - if ( returnValueAST . findFirstToken ( TokenTypes . LITERAL _ VOID ) = = null ) { <nl> - log ( aAST , " junit . method . return . type " , aName , " void " ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Checks return value of given method . <nl> - * @ param aAST method definition node <nl> - * @ param aName method name <nl> - * / <nl> - private void checkParameters ( DetailAST aAST , String aName ) <nl> - { <nl> - final DetailAST parametersAST = <nl> - aAST . findFirstToken ( TokenTypes . PARAMETERS ) ; <nl> - <nl> - if ( parametersAST . getChildCount ( ) ! = 0 ) { <nl> - log ( aAST , " junit . method . parameters " , aName ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Checks if given method declared as public or <nl> - * protected and non - static . <nl> - * @ param aAST method definition node <nl> - * @ return true if given method is declared as public or protected <nl> - * / <nl> - private boolean isPublicOrProtected ( DetailAST aAST ) <nl> - { <nl> - final DetailAST modifiersAST = <nl> - aAST . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - final DetailAST publicAST = <nl> - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ; <nl> - final DetailAST protectedAST = <nl> - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ PROTECTED ) ; <nl> - <nl> - return ( publicAST ! = null ) | | ( protectedAST ! = null ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Checks if given method declared as < code > public < / code > and <nl> - * < code > static < / code > . <nl> - * @ param aAST method definition node <nl> - * @ return true if given method is declared as public and static <nl> - * / <nl> - private boolean isPublicAndStatic ( DetailAST aAST ) <nl> - { <nl> - final DetailAST modifiersAST = <nl> - aAST . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - final DetailAST publicAST = <nl> - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ; <nl> - final DetailAST staticAST = <nl> - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ STATIC ) ; <nl> - <nl> - return ( publicAST ! = null ) & & ( staticAST ! = null ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Checks if given method declared as static . <nl> - * @ param aAST method definition node <nl> - * @ return true if given method is declared as static <nl> - * / <nl> - private boolean isStatic ( DetailAST aAST ) <nl> - { <nl> - final DetailAST modifiersAST = <nl> - aAST . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - final DetailAST staticAST = <nl> - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ STATIC ) ; <nl> - <nl> - return ( staticAST ! = null ) ; <nl> - } <nl> - } <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties <nl> index b9047f1 . . d656bdc 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties <nl> @ @ - 25 , 12 + 25 , 6 @ @ illegal . token . text = Token text matches the illegal pattern ' ' { 0 } ' ' . <nl> illegal . type = Declaring variables , return values or parameters of type ' ' { 0 } ' ' is not allowed . <nl> inline . conditional . avoid = Avoid inline conditionals . <nl> instantiation . avoid = Instantiation of { 0 } should be avoided . <nl> - junit . method . name = The method ' ' { 0 } ' ' should be named ' ' { 1 } ' ' . <nl> - junit . method . return . type = The method ' ' { 0 } ' ' must be declared with a { 1 } return type . <nl> - junit . method . parameters = The method ' ' { 0 } ' ' must be declared with no parameters . <nl> - junit . method . public . and . static = The method ' ' { 0 } ' ' must be declared static . <nl> - junit . method . protected . or . public = The method ' ' { 0 } ' ' must be public or protected . <nl> - junit . method . static = The method ' ' { 0 } ' ' shouldn ' ' t be static . <nl> magic . number = ' ' { 0 } ' ' is a magic number . <nl> missing . ctor = Class should define a constructor . <nl> missing . package . declaration = Missing package declaration . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages _ de . properties <nl> index ba7cb89 . . 5b1ddf3 100

TEST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 1b4abbb . . 405f100 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 7 , 7 + 7 , 7 @ @ 
 < ! - - 
 If you set the basedir property below , then all reported file 
 names will be relative to the specified directory . See 
 - http : / / checkstyle . sourceforge . net / 5 . x / config . html # Checker 
 + http : / / checkstyle . sourceforge . net / config . html # Checker 
 
 < property name = " basedir " value = " $ { basedir } " / > 
 - - > 
 @ @ - 18 , 74 + 18 , 217 @ @ 
 
 < property name = " fileExtensions " value = " java , properties , xml " / > 
 
 - < module name = " SuppressionFilter " > 
 - < property name = " file " value = " $ { checkstyle . suppressions . file } " / > 
 + < ! - - Filters - - > 
 + < module name = " SeverityMatchFilter " > 
 + < ! - - report all violations except ignore - - > 
 + < property name = " severity " value = " ignore " / > 
 + < property name = " acceptOnMatch " value = " false " / > 
 < / module > 
 - 
 - < module name = " JavadocPackage " > 
 - < property name = " allowLegacy " value = " false " / > 
 + < module name = " SuppressionCommentFilter " > 
 + < ! - - 
 + Use suppressions . xml for suppressions , this is only example . 
 + checkFormat will prevent suppression comments from being valid . 
 + - - > 
 + < property name = " checkFormat " value = " IGNORETHIS " / > 
 + < property name = " offCommentFormat " value = " CSOFF \ : . * " / > 
 + < property name = " onCommentFormat " value = " CSON \ : . * " / > 
 < / module > 
 - 
 - < module name = " FileTabCharacter " > 
 - < property name = " eachLine " value = " false " / > 
 + < module name = " SuppressionFilter " > 
 + < property name = " file " value = " $ { checkstyle . suppressions . file } " / > 
 < / module > 
 - 
 - < module name = " FileLength " > 
 - < property name = " fileExtensions " value = " java " / > 
 + < module name = " SuppressWarningsFilter " / > 
 + < module name = " SuppressWithNearbyCommentFilter " > 
 + < ! - - 
 + Use suppressions . xml for suppressions , this is only example . 
 + checkFormat will prevent suppression comments from being valid . 
 + - - > 
 + < property name = " checkFormat " value = " IGNORETHIS " / > 
 + < property name = " commentFormat " value = " SUPPRESS CHECKSTYLE , ( \ w + ) " / > 
 + < property name = " messageFormat " value = " $ 1 " / > 
 + < property name = " influenceFormat " value = " - 1 " / > 
 < / module > 
 
 - < module name = " NewlineAtEndOfFile " / > 
 - 
 + < ! - - Headers - - > 
 < module name = " Header " > 
 < property name = " headerFile " value = " $ { checkstyle . header . file } " / > 
 < property name = " fileExtensions " value = " java " / > 
 < property name = " id " value = " header " / > 
 < / module > 
 + < module name = " RegexpHeader " > 
 + < property name = " headerFile " value = " $ { checkstyle . regexp . header . file } " / > 
 + < property name = " fileExtensions " value = " java " / > 
 + < / module > 
 
 - < module name = " RegexpSingleline " > 
 - < property name = " format " value = " \ s + $ " / > 
 - < property name = " minimum " value = " 0 " / > 
 - < property name = " maximum " value = " 0 " / > 
 + < ! - - Javadoc Comments - - > 
 + < module name = " JavadocPackage " > 
 + < property name = " allowLegacy " value = " false " / > 
 + < / module > 
 + 
 + < ! - - Miscellaneous - - > 
 + < module name = " NewlineAtEndOfFile " / > 
 + < module name = " Translation " > 
 + < property name = " requiredTranslations " value = " de , fr , fi , es , pt , ja , tr " / > 
 < / module > 
 + < module name = " UniqueProperties " / > 
 
 + < ! - - Regexp - - > 
 < module name = " RegexpMultiline " / > 
 < module name = " RegexpMultiline " > 
 < property name = " format " value = " \ r ? \ n [ \ t ] * \ r ? \ n [ \ t ] * \ r ? \ n " / > 
 < property name = " fileExtensions " value = " java , xml , properties " / > 
 < property name = " message " value = " Unnecessary consecutive lines " / > 
 < / module > 
 - 
 - < module name = " RegexpSingleline " > 
 - < property name = " format " value = " / \ * \ * + \ p { javaLowerCase } " / > 
 + < module name = " RegexpMultiline " > 
 + < property name = " format " value = " / \ * \ * \ W + \ * + \ p { javaLowerCase } " / > 
 < property name = " fileExtensions " value = " java " / > 
 < property name = " message " value = " First sentence in a comment should start with a capital letter " / > 
 < / module > 
 - < module name = " RegexpMultiline " > 
 - < property name = " format " value = " / \ * \ * \ W + \ * + \ p { javaLowerCase } " / > 
 + < module name = " RegexpSingleline " > 
 + < property name = " format " value = " \ s + $ " / > 
 + < property name = " minimum " value = " 0 " / > 
 + < property name = " maximum " value = " 0 " / > 
 + < / module > 
 + < module name = " RegexpSingleline " > 
 + < property name = " format " value = " / \ * \ * + \ p { javaLowerCase } " / > 
 < property name = " fileExtensions " value = " java " / > 
 < property name = " message " value = " First sentence in a comment should start with a capital letter " / > 
 < / module > 
 
 - < module name = " RegexpHeader " > 
 - < property name = " headerFile " value = " $ { checkstyle . regexp . header . file } " / > 
 + < ! - - Size Violations - - > 
 + < module name = " FileLength " > 
 < property name = " fileExtensions " value = " java " / > 
 < / module > 
 
 - < module name = " UniqueProperties " / > 
 + < ! - - Whitespace - - > 
 + < module name = " FileTabCharacter " > 
 + < property name = " eachLine " value = " false " / > 
 + < / module > 
 
 < module name = " TreeWalker " > 
 < property name = " tabWidth " value = " 4 " / > 
 
 - < module name = " AvoidStarImport " / > 
 - < module name = " ConstantName " / > 
 + < ! - - Annotations - - > 
 + < module name = " AnnotationLocation " / > 
 + < module name = " AnnotationUseStyle " / > 
 + < module name = " MissingDeprecated " / > 
 + < module name = " MissingOverride " > 
 + < property name = " javaFiveCompatibility " value = " true " / > 
 + < / module > 
 + < module name = " PackageAnnotation " / > 
 + < module name = " SuppressWarnings " / > 
 + < module name = " SuppressWarningsHolder " / > 
 + 
 + < ! - - Block Checks - - > 
 + < module name = " AvoidNestedBlocks " > 
 + < property name = " allowInSwitchCase " value = " true " / > 
 + < / module > 
 < module name = " EmptyBlock " > 
 < property name = " option " value = " text " / > 
 < / module > 
 - < module name = " EmptyForIteratorPad " / > 
 + < module name = " EmptyCatchBlock " / > 
 + < module name = " LeftCurly " > 
 + < property name = " maxLineLength " value = " 100 " / > 
 + < / module > 
 + < module name = " NeedBraces " / > 
 + < module name = " RightCurly " > 
 + < property name = " option " value = " alone " / > 
 + < / module > 
 + 
 + < ! - - Class Design - - > 
 + < module name = " DesignForExtension " > 
 + < ! - - 
 + We should postpone DesignForExtension Check enforcement till next major release 
 + as it will seriously brake backward compatibility with existing usage of our library 
 + - - > 
 + < property name = " severity " value = " ignore " / > 
 + < / module > 
 + < module name = " FinalClass " / > 
 + < module name = " HideUtilityClassConstructor " / > 
 + < module name = " InnerTypeLast " / > 
 + < module name = " InterfaceIsType " / > 
 + < module name = " MutableException " / > 
 + < module name = " OneTopLevelClass " / > 
 + < module name = " ThrowsCount " > 
 + < property name = " max " value = " 2 " / > 
 + < / module > 
 + < module name = " VisibilityModifier " / > 
 + 
 + < ! - - Coding - - > 
 + < module name = " ArrayTrailingComma " / > 
 + < module name = " AvoidInlineConditionals " / > 
 + < module name = " CovariantEquals " / > 
 + < module name = " DeclarationOrder " / > 
 + < module name = " DefaultComesLast " / > 
 + < module name = " EmptyStatement " / > 
 + < module name = " EqualsAvoidNull " / > 
 < module name = " EqualsHashCode " / > 
 + < module name = " ExplicitInitialization " / > 
 + < module name = " FallThrough " / > 
 + < module name = " FinalLocalVariable " / > 
 + < module name = " HiddenField " > 
 + < property name = " ignoreConstructorParameter " value = " true " / > 
 + < property name = " ignoreSetter " value = " true " / > 
 + < property name = " setterCanReturnItsClass " value = " true " / > 
 + < / module > 
 + < module name = " IllegalCatch " / > 
 + < module name = " IllegalInstantiation " / > 
 + < module name = " IllegalThrows " / > 
 + < module name = " IllegalToken " / > 
 + < module name = " IllegalTokenText " / > 
 + < module name = " IllegalType " / > 
 + < module name = " InnerAssignment " / > 
 + < module name = " MagicNumber " / > 
 + < module name = " MissingCtor " > 
 + < ! - - 
 + we will not use that fanatic validation , extra code is not good 
 + But this Check will exists as it was created by community demand . 
 + - - > 
 + < property name = " severity " value = " ignore " / > 
 + < / module > 
 + < module name = " MissingSwitchDefault " / > 
 + < module name = " ModifiedControlVariable " / > 
 + < module name = " MultipleStringLiterals " / > 
 + < module name = " MultipleVariableDeclarations " / > 
 + < module name = " NestedForDepth " > 
 + < property name = " max " value = " 2 " / > 
 + < / module > 
 + < module name = " NestedIfDepth " > 
 + < property name = " max " value = " 3 " / > 
 + < / module > 
 + < module name = " NestedTryDepth " / > 
 + < module name = " NoClone " / > 
 + < module name = " NoFinalizer " / > 
 < module name = " OneStatementPerLine " / > 
 + < module name = " OverloadMethodsDeclarationOrder " / > 
 + < module name = " PackageDeclaration " / > 
 + < module name = " ParameterAssignment " / > 
 + < module name = " RequireThis " > 
 + < module name = " ReturnCount " / > 
 + < module name = " SimplifyBooleanExpression " / > 
 + < module name = " SimplifyBooleanReturn " / > 
 + < module name = " StringLiteralEquality " / > 
 + < module name = " SuperClone " / > 
 + < module name = " SuperFinalize " / > 
 + < ! - - 
 + we will not use that fanatic validation , extra modifiers pollute a code 
 + it is better to use different names for arguments , or expect IDE to highlight field . 
 + But this Check will exists as it was created by community demand . 
 + - - > 
 + < property name = " severity " value = " ignore " / > 
 + < / module > 
 + < module name = " UnnecessaryParentheses " / > 
 + < module name = " VariableDeclarationUsageDistance " / > 
 
 - < module name = " IllegalCatch " / > 
 + < ! - - Imports - - > 
 + < module name = " AvoidStarImport " / > 
 + < module name = " AvoidStaticImport " / > 
 + < module name = " CustomImportOrder " > 
 + < property name = " customImportOrderRules " value = " STATIC # # # STANDARD _ JAVA _ PACKAGE # # # SPECIAL _ IMPORTS " / > 
 + < property name = " specialImportsRegExp " value = " org " / > 
 + < property name = " sortImportsInGroupAlphabetically " value = " true " / > 
 + < property name = " separateLineBetweenGroups " value = " true " / > 
 + < / module > 
 + < module name = " IllegalImport " / > 
 < module name = " ImportControl " > 
 < property name = " file " value = " $ { checkstyle . importcontrol . file } " / > 
 < / module > 
 @ @ - 96 , 184 + 239 , 169 @ @ 
 < property name = " option " value = " top " / > 
 < property name = " sortStaticImportsAlphabetically " value = " true " / > 
 < / module > 
 - < module name = " CustomImportOrder " > 
 - < property name = " customImportOrderRules " value = " STATIC # # # STANDARD _ JAVA _ PACKAGE # # # SPECIAL _ IMPORTS " / > 
 - < property name = " specialImportsRegExp " value = " org " / > 
 - < property name = " sortImportsInGroupAlphabetically " value = " true " / > 
 - < property name = " separateLineBetweenGroups " value = " true " / > 
 - < / module > 
 + < module name = " RedundantImport " / > 
 + < module name = " UnusedImports " / > 
 
 - < module name = " IllegalImport " / > 
 - < module name = " IllegalInstantiation " / > 
 - < module name = " IllegalThrows " / > 
 - < module name = " InnerAssignment " / > 
 - < module name = " JavadocType " > 
 - < property name = " authorFormat " value = " \ S " / > 
 - < ! - - avoid errors on tag ' @ noinspection ' - - > 
 - < property name = " allowUnknownTags " value = " true " / > 
 - < / module > 
 + < ! - - Javadoc Comments - - > 
 + < module name = " AtclauseOrder " / > 
 < module name = " JavadocMethod " > 
 < property name = " allowUndeclaredRTE " value = " true " / > 
 < property name = " allowThrowsTagsForSubclasses " value = " true " / > 
 < property name = " allowMissingPropertyJavadoc " value = " true " / > 
 < / module > 
 - < module name = " JavadocVariable " / > 
 + < module name = " JavadocParagraph " / > 
 < module name = " JavadocStyle " > 
 < property name = " scope " value = " public " / > 
 < / module > 
 - < module name = " LeftCurly " > 
 - < property name = " maxLineLength " value = " 100 " / > 
 - < / module > 
 - < module name = " OuterTypeNumber " / > 
 - < module name = " LineLength " > 
 - < property name = " max " value = " 100 " / > 
 - < property name = " ignorePattern " value = " ^ * \ * * [ ^ ] + $ " / > 
 - < / module > 
 - < module name = " MethodCount " > 
 - < property name = " maxTotal " value = " 35 " / > 
 + < module name = " JavadocTagContinuationIndentation " / > 
 + < module name = " JavadocType " > 
 + < property name = " authorFormat " value = " \ S " / > 
 + < ! - - avoid errors on tag ' @ noinspection ' - - > 
 + < property name = " allowUnknownTags " value = " true " / > 
 < / module > 
 + < module name = " JavadocVariable " / > 
 + < module name = " NonEmptyAtclauseDescription " / > 
 + < module name = " SingleLineJavadoc " / > 
 + < module name = " WriteTag " / > 
 + < module name = " SummaryJavadoc " / > 
 
 - < module name = " LocalFinalVariableName " / > 
 - < module name = " LocalVariableName " / > 
 - < module name = " MemberName " > 
 - < property name = " format " value = " ^ [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] * $ " / > 
 + < ! - - Metrics - - > 
 + < module name = " BooleanExpressionComplexity " > 
 + < property name = " max " value = " 7 " / > 
 < / module > 
 - < module name = " MethodLength " / > 
 - < module name = " MethodName " / > 
 - < module name = " MethodParamPad " / > 
 - < module name = " ModifierOrder " / > 
 - < module name = " NeedBraces " / > 
 - < module name = " NoWhitespaceAfter " > 
 - < property name = " tokens " value = " ARRAY _ INIT " / > 
 - < property name = " tokens " value = " BNOT " / > 
 - < property name = " tokens " value = " DEC " / > 
 - < property name = " tokens " value = " DOT " / > 
 - < property name = " tokens " value = " INC " / > 
 - < property name = " tokens " value = " LNOT " / > 
 - < property name = " tokens " value = " UNARY _ MINUS " / > 
 - < property name = " tokens " value = " UNARY _ PLUS " / > 
 - < property name = " tokens " value = " ARRAY _ DECLARATOR " / > 
 + < module name = " ClassDataAbstractionCoupling " > 
 + < ! - - Default classes are also listed - - > 
 + < property name = " excludedClasses " value = " boolean , byte , char , double , float , int , long , short , void , Boolean , Byte , Character , Double , Float , Integer , Long , Short , Void , Object , Class , String , StringBuffer , StringBuilder , ArrayIndexOutOfBoundsException , Exception , RuntimeException , IllegalArgumentException , IllegalStateException , IndexOutOfBoundsException , NullPointerException , Throwable , SecurityException , UnsupportedOperationException , List , ArrayList , Deque , Queue , LinkedList , Set , HashSet , SortedSet , TreeSet , Map , HashMap , SortedMap , TreeMap , 
 + DetailsAST , CheckstyleException , UnsupportedEncodingException , BuildException , ConversionException , FileNotFoundException , TestException " / > 
 < / module > 
 - 
 - < module name = " NoWhitespaceBefore " / > 
 - < module name = " NoWhitespaceBefore " > 
 - < property name = " tokens " value = " DOT " / > 
 - < property name = " allowLineBreaks " value = " true " / > 
 + < module name = " ClassFanOutComplexity " > 
 + < property name = " max " value = " 25 " / > 
 + < ! - - Default classes are also listed - - > 
 + < property name = " excludedClasses " value = " boolean , byte , char , double , float , int , long , short , void , Boolean , Byte , Character , Double , Float , Integer , Long , Short , Void , Object , Class , String , StringBuffer , StringBuilder , ArrayIndexOutOfBoundsException , Exception , RuntimeException , IllegalArgumentException , IllegalStateException , IndexOutOfBoundsException , NullPointerException , Throwable , SecurityException , UnsupportedOperationException , List , ArrayList , Deque , Queue , LinkedList , Set , HashSet , SortedSet , TreeSet , Map , HashMap , SortedMap , TreeMap , DetailsAST , CheckstyleException , UnsupportedEncodingException , BuildException , ConversionException , FileNotFoundException , TestException , Log , Sets , Multimap , TokenStreamRecognitionException , RecognitionException , TokenStreamException , IOException " / > 
 < / module > 
 + < module name = " CyclomaticComplexity " / > 
 + < module name = " JavaNCSS " / > 
 + < module name = " NPathComplexity " / > 
 
 - < module name = " OperatorWrap " / > 
 - < module name = " OperatorWrap " > 
 - < property name = " tokens " value = " ASSIGN " / > 
 - < property name = " tokens " value = " DIV _ ASSIGN " / > 
 - < property name = " tokens " value = " PLUS _ ASSIGN " / > 
 - < property name = " tokens " value = " MINUS _ ASSIGN " / > 
 - < property name = " tokens " value = " STAR _ ASSIGN " / > 
 - < property name = " tokens " value = " MOD _ ASSIGN " / > 
 - < property name = " tokens " value = " SR _ ASSIGN " / > 
 - < property name = " tokens " value = " BSR _ ASSIGN " / > 
 - < property name = " tokens " value = " SL _ ASSIGN " / > 
 - < property name = " tokens " value = " BXOR _ ASSIGN " / > 
 - < property name = " tokens " value = " BOR _ ASSIGN " / > 
 - < property name = " tokens " value = " BAND _ ASSIGN " / > 
 - < property name = " option " value = " eol " / > 
 + < ! - - Misc - - > 
 + < module name = " ArrayTypeStyle " / > 
 + < module name = " AvoidEscapedUnicodeCharacters " / > 
 + < module name = " CommentsIndentation " / > 
 + < module name = " DescendantToken " / > 
 + < module name = " FileContentsHolder " / > 
 + < module name = " FinalParameters " > 
 + < ! - - 
 + we will not use that fanatic validation , extra modifiers pollute a code 
 + it is better to use extra validation ( Check ) that argument is reassigned 
 + But this Check will exists as it was created by community demand . 
 + - - > 
 + < property name = " severity " value = " ignore " / > 
 < / module > 
 - < module name = " PackageName " / > 
 - < module name = " ParameterName " > 
 - < property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " / > 
 + < module name = " Indentation " > 
 + < property name = " basicOffset " value = " 4 " / > 
 + < property name = " braceAdjustment " value = " 0 " / > 
 + < property name = " caseIndent " value = " 4 " / > 
 < / module > 
 - < module name = " ParameterNumber " / > 
 - 
 - 
 + < module name = " OuterTypeFilename " / > 
 + < module name = " TodoComment " > 
 + < property name = " format " value = " ( TODO ) | ( FIXME ) " / > 
 + < / module > 
 + < module name = " TrailingComment " / > 
 + < module name = " UncommentedMain " / > 
 + < module name = " UpperEll " / > 
 
 - < module name = " ParenPad " / > 
 - < module name = " TypecastParenPad " / > 
 - < module name = " RedundantImport " / > 
 + < ! - - Modifiers - - > 
 + < module name = " ModifierOrder " / > 
 < module name = " RedundantModifier " / > 
 - < module name = " RightCurly " > 
 - < property name = " option " value = " alone " / > 
 + 
 + < ! - - Naming Conventions - - > 
 + < module name = " AbbreviationAsWordInName " / > 
 + < module name = " AbstractClassName " / > 
 + < module name = " ClassTypeParameterName " / > 
 + < module name = " ConstantName " / > 
 + < module name = " InterfaceTypeParameterName " / > 
 + < module name = " LocalFinalVariableName " / > 
 + < module name = " LocalVariableName " / > 
 + < module name = " MemberName " > 
 + < property name = " format " value = " ^ [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] * $ " / > 
 + < / module > 
 + < module name = " MethodName " / > 
 + < module name = " MethodTypeParameterName " / > 
 + < module name = " PackageName " / > 
 + < module name = " ParameterName " > 
 + < property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " / > 
 < / module > 
 - < module name = " SimplifyBooleanExpression " / > 
 - < module name = " SimplifyBooleanReturn " / > 
 < module name = " StaticVariableName " > 
 < property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " / > 
 < / module > 
 < module name = " TypeName " / > 
 - < module name = " UnusedImports " / > 
 - 
 
 - < module name = " UpperEll " / > 
 - < module name = " VisibilityModifier " / > 
 - < module name = " WhitespaceAfter " / > 
 - < module name = " WhitespaceAround " / > 
 - < module name = " GenericWhitespace " / > 
 - < module name = " FinalClass " / > 
 - < module name = " MissingSwitchDefault " / > 
 - < module name = " MagicNumber " / > 
 - < module name = " Indentation " > 
 - < property name = " basicOffset " value = " 4 " / > 
 - < property name = " braceAdjustment " value = " 0 " / > 
 - < property name = " caseIndent " value = " 4 " / > 
 + < ! - - Regexp - - > 
 + < module name = " Regexp " / > 
 + < module name = " RegexpSinglelineJava " / > 
 + < module name = " RegexpSinglelineJava " > 
 + < property name = " format " value = " [ ^ \ p { ASCII } ] " / > 
 + < property name = " ignoreComments " value = " true " / > 
 < / module > 
 - < module name = " ArrayTrailingComma " / > 
 - < module name = " FinalLocalVariable " / > 
 - < module name = " EqualsAvoidNull " / > 
 - < module name = " ParameterAssignment " / > 
 - 
 - < module name = " CyclomaticComplexity " / > 
 
 - < module name = " NestedForDepth " > 
 - < property name = " max " value = " 2 " / > 
 - < / module > 
 - < module name = " NestedIfDepth " > 
 - < property name = " max " value = " 3 " / > 
 + < ! - - Size Violations - - > 
 + < module name = " AnonInnerLength " / > 
 + < module name = " ExecutableStatementCount " > 
 + < property name = " max " value = " 30 " / > 
 < / module > 
 - < module name = " NestedTryDepth " / > 
 - < module name = " ExplicitInitialization " / > 
 - < module name = " AnnotationUseStyle " / > 
 - < module name = " MissingDeprecated " / > 
 - < module name = " MissingOverride " > 
 - < property name = " javaFiveCompatibility " value = " true " / > 
 + < module name = " LineLength " > 
 + < property name = " max " value = " 100 " / > 
 + < property name = " ignorePattern " value = " ^ * \ * * [ ^ ] + $ " / > 
 < / module > 
 - < module name = " PackageAnnotation " / > 
 - < module name = " SuppressWarnings " / > 
 - < module name = " OuterTypeFilename " / > 
 - < module name = " HideUtilityClassConstructor " / > 
 - < module name = " AnnotationLocation " / > 
 - < module name = " AnonInnerLength " / > 
 - < module name = " ArrayTypeStyle " / > 
 - < module name = " AtclauseOrder " / > 
 - < module name = " AvoidNestedBlocks " > 
 - < property name = " allowInSwitchCase " value = " true " / > 
 + < module name = " MethodCount " > 
 + < property name = " maxTotal " value = " 35 " / > 
 < / module > 
 - < module name = " AvoidStaticImport " / > 
 - < module name = " ClassTypeParameterName " / > 
 - < module name = " CovariantEquals " / > 
 - < module name = " DeclarationOrder " / > 
 - < module name = " DefaultComesLast " / > 
 - < module name = " DescendantToken " / > 
 - < module name = " EmptyCatchBlock " / > 
 + < module name = " MethodLength " / > 
 + < module name = " OuterTypeNumber " / > 
 + < module name = " ParameterNumber " / > 
 + 
 + < ! - - Whitespace - - > 
 < module name = " EmptyForInitializerPad " / > 
 + < module name = " EmptyForIteratorPad " / > 
 < module name = " EmptyLineSeparator " > 
 < property name = " allowNoEmptyLineBetweenFields " value = " true " / > 
 < / module > 
 - < module name = " EmptyStatement " / > 
 - < module name = " FallThrough " / > 
 - < module name = " IllegalTokenText " / > 
 - < module name = " InterfaceIsType " / > 
 - < module name = " InterfaceTypeParameterName " / > 
 - < module name = " MethodTypeParameterName " / > 
 - < module name = " MultipleVariableDeclarations " / > 
 - < module name = " MutableException " / > 
 - < module name = " NoClone " / > 
 - < module name = " NoFinalizer " / > 
 + < module name = " GenericWhitespace " / > 
 + < module name = " MethodParamPad " / > 
 < module name = " NoLineWrap " / > 
 - < module name = " NonEmptyAtclauseDescription " / > 
 - < module name = " Regexp " / > 
 - < module name = " RegexpSinglelineJava " / > 
 - < module name = " RegexpSinglelineJava " > 
 - < property name = " format " value = " [ ^ \ p { ASCII } ] " / > 
 - < property name = " ignoreComments " value = " true " / > 
 + < module name = " NoWhitespaceAfter " > 
 + < property name = " tokens " value = " ARRAY _ INIT " / > 
 + < property name = " tokens " value = " BNOT " / > 
 + < property name = " tokens " value = " DEC " / > 
 + < property name = " tokens " value = " DOT " / > 
 + < property name = " tokens " value = " INC " / > 
 + < property name = " tokens " value = " LNOT " / > 
 + < property name = " tokens " value = " UNARY _ MINUS " / > 
 + < property name = " tokens " value = " UNARY _ PLUS " / > 
 + < property name = " tokens " value = " ARRAY _ DECLARATOR " / > 
 + < / module > 
 + < module name = " NoWhitespaceBefore " / > 
 + < module name = " NoWhitespaceBefore " > 
 + < property name = " tokens " value = " DOT " / > 
 + < property name = " allowLineBreaks " value = " true " / > 
 + < / module > 
 + < module name = " OperatorWrap " / > 
 + < module name = " OperatorWrap " > 
 + < property name = " tokens " value = " ASSIGN " / > 
 + < property name = " tokens " value = " DIV _ ASSIGN " / > 
 + < property name = " tokens " value = " PLUS _ ASSIGN " / > 
 + < property name = " tokens " value = " MINUS _ ASSIGN " / > 
 + < property name = " tokens " value = " STAR _ ASSIGN " / > 
 + < property name = " tokens " value = " MOD _ ASSIGN " / > 
 + < property name = " tokens " value = " SR _ ASSIGN " / > 
 + < property name = " tokens " value = " BSR _ ASSIGN " / > 
 + < property name = " tokens " value = " SL _ ASSIGN " / > 
 + < property name = " tokens " value = " BXOR _ ASSIGN " / > 
 + < property name = " tokens " value = " BOR _ ASSIGN " / > 
 + < property name = " tokens " value = " BAND _ ASSIGN " / > 
 + < property name = " option " value = " eol " / > 
 < / module > 
 + < module name = " ParenPad " / > 
 < module name = " SeparatorWrap " > 
 < property name = " tokens " value = " DOT " / > 
 < property name = " option " value = " nl " / > 
 @ @ - 282 , 131 + 410 , 10 @ @ 
 < property name = " tokens " value = " COMMA " / > 
 < property name = " option " value = " EOL " / > 
 < / module > 
 - < module name = " StringLiteralEquality " / > 
 - < module name = " SuperClone " / > 
 - < module name = " SuperFinalize " / > 
 - < module name = " SuppressWarningsHolder " / > 
 - < module name = " ThrowsCount " > 
 - < property name = " max " value = " 2 " / > 
 - < / module > 
 - < module name = " TodoComment " > 
 - < property name = " format " value = " ( TODO ) | ( FIXME ) " / > 
 - < / module > 
 - < module name = " UncommentedMain " / > 
 - < module name = " UnnecessaryParentheses " / > 
 - < module name = " AbbreviationAsWordInName " / > 
 - < module name = " AvoidEscapedUnicodeCharacters " / > 
 - < module name = " AbstractClassName " / > 
 - 
 - < module name = " BooleanExpressionComplexity " > 
 - < property name = " max " value = " 7 " / > 
 - < / module > 
 - 
 - < module name = " CommentsIndentation " / > 
 - < module name = " HiddenField " > 
 - < property name = " ignoreConstructorParameter " value = " true " / > 
 - < property name = " ignoreSetter " value = " true " / > 
 - < property name = " setterCanReturnItsClass " value = " true " / > 
 - < / module > 
 - < module name = " InnerTypeLast " / > 
 - 
 - < module name = " ModifiedControlVariable " / > 
 - < module name = " AvoidInlineConditionals " / > 
 - < module name = " IllegalType " / > 
 - < module name = " TrailingComment " / > 
 - < module name = " MultipleStringLiterals " / > 
 - 
 - < module name = " ExecutableStatementCount " > 
 - < property name = " max " value = " 30 " / > 
 - < / module > 
 - 
 - < module name = " NPathComplexity " / > 
 - < module name = " JavaNCSS " / > 
 - 
 - < module name = " ClassDataAbstractionCoupling " > 
 - < ! - - Default classes are also listed - - > 
 - < property name = " excludedClasses " value = " boolean , byte , char , double , float , int , long , short , void , Boolean , Byte , Character , Double , Float , Integer , Long , Short , Void , Object , Class , String , StringBuffer , StringBuilder , ArrayIndexOutOfBoundsException , Exception , RuntimeException , IllegalArgumentException , IllegalStateException , IndexOutOfBoundsException , NullPointerException , Throwable , SecurityException , UnsupportedOperationException , List , ArrayList , Deque , Queue , LinkedList , Set , HashSet , SortedSet , TreeSet , Map , HashMap , SortedMap , TreeMap , 
 - DetailsAST , CheckstyleException , UnsupportedEncodingException , BuildException , ConversionException , FileNotFoundException , TestException " / > 
 - < / module > 
 - 
 - < module name = " ReturnCount " / > 
 - < module name = " OneTopLevelClass " / > 
 - < module name = " IllegalToken " / > 
 - < module name = " PackageDeclaration " / > 
 - < module name = " VariableDeclarationUsageDistance " / > 
 - < module name = " OverloadMethodsDeclarationOrder " / > 
 - < module name = " ClassFanOutComplexity " > 
 - < property name = " max " value = " 25 " / > 
 - < ! - - Default classes are also listed - - > 
 - < property name = " excludedClasses " value = " boolean , byte , char , double , float , int , long , short , void , Boolean , Byte , Character , Double , Float , Integer , Long , Short , Void , Object , Class , String , StringBuffer , StringBuilder , ArrayIndexOutOfBoundsException , Exception , RuntimeException , IllegalArgumentException , IllegalStateException , IndexOutOfBoundsException , NullPointerException , Throwable , SecurityException , UnsupportedOperationException , List , ArrayList , Deque , Queue , LinkedList , Set , HashSet , SortedSet , TreeSet , Map , HashMap , SortedMap , TreeMap , DetailsAST , CheckstyleException , UnsupportedEncodingException , BuildException , ConversionException , FileNotFoundException , TestException , Log , Sets , Multimap , TokenStreamRecognitionException , RecognitionException , TokenStreamException , IOException " / > 
 - < / module > 
 - 
 - < module name = " SingleLineJavadoc " / > 
 - < module name = " JavadocTagContinuationIndentation " / > 
 - < module name = " JavadocParagraph " / > 
 - < module name = " WriteTag " / > 
 - < module name = " SummaryJavadoc " / > 
 + < module name = " TypecastParenPad " / > 
 + < module name = " WhitespaceAfter " / > 
 + < module name = " WhitespaceAround " / > 
 
 - < module name = " MissingCtor " > 
 - < ! - - 
 - we will not use that fanatic validation , extra code is not good 
 - But this Check will exists as it was created by community demand . 
 - - - > 
 - < property name = " severity " value = " ignore " / > 
 - < / module > 
 - < module name = " RequireThis " > 
 - < ! - - 
 - we will not use that fanatic validation , extra modifiers pollute a code 
 - it is better to use different names for arguments , or expect IDE to highlight field . 
 - But this Check will exists as it was created by community demand . 
 - - - > 
 - < property name = " severity " value = " ignore " / > 
 - < / module > 
 - < module name = " FinalParameters " > 
 - < ! - - 
 - we will not use that fanatic validation , extra modifiers pollute a code 
 - it is better to use extra validation ( Check ) that argument is reassigned 
 - But this Check will exists as it was created by community demand . 
 - - - > 
 - < property name = " severity " value = " ignore " / > 
 - < / module > 
 - < module name = " DesignForExtension " > 
 - < ! - - 
 - We should postpone DesignForExtension Check enforcement till next major release 
 - as it will seriously brake backward compatibility with existing usage of our library 
 - - - > 
 - < property name = " severity " value = " ignore " / > 
 - < / module > 
 - < module name = " FileContentsHolder " / > 
 - < / module > 
 - < module name = " Translation " > 
 - < property name = " requiredTranslations " value = " de , fr , fi , es , pt , ja , tr " / > 
 - < / module > 
 - < module name = " SuppressWarningsFilter " / > 
 - < module name = " SeverityMatchFilter " > 
 - < ! - - 
 - report all violations except ignore 
 - - - > 
 - < property name = " severity " value = " ignore " / > 
 - < property name = " acceptOnMatch " value = " false " / > 
 - < / module > 
 - < module name = " SuppressWithNearbyCommentFilter " > 
 - < ! - - 
 - Use suppressions . xml for suppressions , this is only example . 
 - checkFormat will prevent suppression comments from being valid . 
 - - - > 
 - < property name = " checkFormat " value = " IGNORETHIS " / > 
 - < property name = " commentFormat " value = " SUPPRESS CHECKSTYLE , ( \ w + ) " / > 
 - < property name = " messageFormat " value = " $ 1 " / > 
 - < property name = " influenceFormat " value = " - 1 " / > 
 - < / module > 
 - < module name = " SuppressionCommentFilter " > 
 - < ! - - 
 - Use suppressions . xml for suppressions , this is only example . 
 - checkFormat will prevent suppression comments from being valid . 
 - - - > 
 - < property name = " checkFormat " value = " IGNORETHIS " / > 
 - < property name = " offCommentFormat " value = " CSOFF \ : . * " / > 
 - < property name = " onCommentFormat " value = " CSON \ : . * " / > 
 < / module > 
 + 
 < / module >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / JUnitTestCaseCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / JUnitTestCaseCheck . java 
 deleted file mode 100644 
 index cd90a90 . . 0000000 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / JUnitTestCaseCheck . java 
 + + + / dev / null 
 @ @ - 1 , 224 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / checkstyle : Checks Java source code for adherence to a set of rules . 
 - / / Copyright ( C ) 2001 - 2014 Oliver Burn 
 - / / 
 - / / This library is free software ; you can redistribute it and / or 
 - / / modify it under the terms of the GNU Lesser General Public 
 - / / License as published by the Free Software Foundation ; either 
 - / / version 2 . 1 of the License , or ( at your option ) any later version . 
 - / / 
 - / / This library is distributed in the hope that it will be useful , 
 - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - / / Lesser General Public License for more details . 
 - / / 
 - / / You should have received a copy of the GNU Lesser General Public 
 - / / License along with this library ; if not , write to the Free Software 
 - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks . coding ; 
 - 
 - import com . puppycrawl . tools . checkstyle . api . Check ; 
 - import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 - 
 - import com . puppycrawl . tools . checkstyle . checks . CheckUtils ; 
 - 
 - / * * 
 - * Ensures that the setUp ( ) , tearDown ( ) methods are named correctly , 
 - * have no arguments , return void and are either public or protected . 
 - * Also ensures that suite ( ) is named correctly , has no arguments , returns 
 - * junit . framework . Test , and is public and static . 
 - * 
 - * Rationale : Developers will often misname one or more of these 
 - * methods and not realise that the method is not being called . 
 - * 
 - * @ author < a href = " mailto : simon @ redhillconsulting . com . au " > Simon Harris < / a > 
 - * / 
 - public final class JUnitTestCaseCheck extends Check 
 - { 
 - / * * < code > setUp ( ) < / code > method name . * / 
 - private static final String SET _ UP _ METHOD _ NAME = " setUp " ; 
 - / * * < code > tearDown ( ) < / code > method name . * / 
 - private static final String TEAR _ DOWN _ METHOD _ NAME = " tearDown " ; 
 - / * * < code > suite ( ) < / code > method name . * / 
 - private static final String SUITE _ METHOD _ NAME = " suite " ; 
 - 
 - @ Override 
 - public int [ ] getDefaultTokens ( ) 
 - { 
 - return new int [ ] { TokenTypes . METHOD _ DEF } ; 
 - } 
 - 
 - @ Override 
 - public int [ ] getRequiredTokens ( ) 
 - { 
 - return getDefaultTokens ( ) ; 
 - } 
 - 
 - @ Override 
 - public void visitToken ( DetailAST aAST ) 
 - { 
 - switch ( aAST . getType ( ) ) { 
 - case TokenTypes . METHOD _ DEF : 
 - visitMethodDef ( aAST ) ; 
 - break ; 
 - default : 
 - throw new IllegalStateException ( aAST . toString ( ) ) ; 
 - } 
 - } 
 - 
 - / * * 
 - * Checks given method definition . 
 - * @ param aAST a method def node for check 
 - * / 
 - private void visitMethodDef ( DetailAST aAST ) 
 - { 
 - final String name = aAST . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; 
 - 
 - if ( name . equalsIgnoreCase ( SET _ UP _ METHOD _ NAME ) ) { 
 - checkSetUpTearDownMethod ( aAST , name , SET _ UP _ METHOD _ NAME ) ; 
 - } 
 - else if ( name . equalsIgnoreCase ( TEAR _ DOWN _ METHOD _ NAME ) ) { 
 - checkSetUpTearDownMethod ( aAST , name , TEAR _ DOWN _ METHOD _ NAME ) ; 
 - } 
 - else if ( name . equalsIgnoreCase ( SUITE _ METHOD _ NAME ) ) { 
 - checkSuiteMethod ( aAST , name ) ; 
 - } 
 - } 
 - 
 - / * * 
 - * Checks signature / name of < code > suite ( ) < / code > . 
 - * @ param aAST method definition node 
 - * @ param aActualName method name 
 - * / 
 - private void checkSuiteMethod ( DetailAST aAST , String aActualName ) 
 - { 
 - if ( ! aActualName . equals ( SUITE _ METHOD _ NAME ) ) { 
 - log ( aAST , " junit . method . name " , SUITE _ METHOD _ NAME ) ; 
 - } 
 - 
 - if ( ! isPublicAndStatic ( aAST ) ) { 
 - log ( aAST , " junit . method . public . and . static " , SUITE _ METHOD _ NAME ) ; 
 - } 
 - 
 - / / let ' s check return type 
 - final DetailAST typeAST = aAST . findFirstToken ( TokenTypes . TYPE ) ; 
 - final boolean isArray = 
 - ( typeAST . findFirstToken ( TokenTypes . ARRAY _ DECLARATOR ) ! = null ) ; 
 - final String type = CheckUtils . createFullType ( typeAST ) . getText ( ) ; 
 - if ( isArray 
 - | | ( ! " Test " . equals ( type ) 
 - & & ! " junit . framework . Test " . equals ( type ) ) ) 
 - { 
 - log ( aAST , " junit . method . return . type " , 
 - SUITE _ METHOD _ NAME , " junit . framework . Test " ) ; 
 - } 
 - checkParameters ( aAST , SUITE _ METHOD _ NAME ) ; 
 - } 
 - 
 - / * * 
 - * Checks signature / name of < code > setUp ( ) < / code > / < code > tearDown < / code > . 
 - * @ param aAST method definition node 
 - * @ param aActualName actual method name 
 - * @ param aExpectedName expected method name 
 - * / 
 - private void checkSetUpTearDownMethod ( DetailAST aAST , String aActualName , 
 - String aExpectedName ) 
 - { 
 - if ( ! aActualName . equals ( aExpectedName ) ) { 
 - log ( aAST , " junit . method . name " , aActualName , aExpectedName ) ; 
 - } 
 - 
 - if ( ! isPublicOrProtected ( aAST ) ) { 
 - log ( aAST , " junit . method . protected . or . public " , aExpectedName ) ; 
 - } 
 - 
 - if ( isStatic ( aAST ) ) { 
 - log ( aAST , " junit . method . static " , aExpectedName ) ; 
 - } 
 - 
 - checkReturnValue ( aAST , aActualName ) ; 
 - checkParameters ( aAST , aActualName ) ; 
 - } 
 - 
 - / * * 
 - * Checks that given method returns < code > void < / code > . 
 - * @ param aAST method definition node 
 - * @ param aName method name 
 - * / 
 - private void checkReturnValue ( DetailAST aAST , String aName ) 
 - { 
 - final DetailAST returnValueAST = aAST . findFirstToken ( TokenTypes . TYPE ) ; 
 - 
 - if ( returnValueAST . findFirstToken ( TokenTypes . LITERAL _ VOID ) = = null ) { 
 - log ( aAST , " junit . method . return . type " , aName , " void " ) ; 
 - } 
 - } 
 - 
 - / * * 
 - * Checks return value of given method . 
 - * @ param aAST method definition node 
 - * @ param aName method name 
 - * / 
 - private void checkParameters ( DetailAST aAST , String aName ) 
 - { 
 - final DetailAST parametersAST = 
 - aAST . findFirstToken ( TokenTypes . PARAMETERS ) ; 
 - 
 - if ( parametersAST . getChildCount ( ) ! = 0 ) { 
 - log ( aAST , " junit . method . parameters " , aName ) ; 
 - } 
 - } 
 - 
 - / * * 
 - * Checks if given method declared as public or 
 - * protected and non - static . 
 - * @ param aAST method definition node 
 - * @ return true if given method is declared as public or protected 
 - * / 
 - private boolean isPublicOrProtected ( DetailAST aAST ) 
 - { 
 - final DetailAST modifiersAST = 
 - aAST . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - final DetailAST publicAST = 
 - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ; 
 - final DetailAST protectedAST = 
 - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ PROTECTED ) ; 
 - 
 - return ( publicAST ! = null ) | | ( protectedAST ! = null ) ; 
 - } 
 - 
 - / * * 
 - * Checks if given method declared as < code > public < / code > and 
 - * < code > static < / code > . 
 - * @ param aAST method definition node 
 - * @ return true if given method is declared as public and static 
 - * / 
 - private boolean isPublicAndStatic ( DetailAST aAST ) 
 - { 
 - final DetailAST modifiersAST = 
 - aAST . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - final DetailAST publicAST = 
 - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ PUBLIC ) ; 
 - final DetailAST staticAST = 
 - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ STATIC ) ; 
 - 
 - return ( publicAST ! = null ) & & ( staticAST ! = null ) ; 
 - } 
 - 
 - / * * 
 - * Checks if given method declared as static . 
 - * @ param aAST method definition node 
 - * @ return true if given method is declared as static 
 - * / 
 - private boolean isStatic ( DetailAST aAST ) 
 - { 
 - final DetailAST modifiersAST = 
 - aAST . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - final DetailAST staticAST = 
 - modifiersAST . findFirstToken ( TokenTypes . LITERAL _ STATIC ) ; 
 - 
 - return ( staticAST ! = null ) ; 
 - } 
 - } 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties 
 index b9047f1 . . d656bdc 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties 
 @ @ - 25 , 12 + 25 , 6 @ @ illegal . token . text = Token text matches the illegal pattern ' ' { 0 } ' ' . 
 illegal . type = Declaring variables , return values or parameters of type ' ' { 0 } ' ' is not allowed . 
 inline . conditional . avoid = Avoid inline conditionals . 
 instantiation . avoid = Instantiation of { 0 } should be avoided . 
 - junit . method . name = The method ' ' { 0 } ' ' should be named ' ' { 1 } ' ' . 
 - junit . method . return . type = The method ' ' { 0 } ' ' must be declared with a { 1 } return type . 
 - junit . method . parameters = The method ' ' { 0 } ' ' must be declared with no parameters . 
 - junit . method . public . and . static = The method ' ' { 0 } ' ' must be declared static . 
 - junit . method . protected . or . public = The method ' ' { 0 } ' ' must be public or protected . 
 - junit . method . static = The method ' ' { 0 } ' ' shouldn ' ' t be static . 
 magic . number = ' ' { 0 } ' ' is a magic number . 
 missing . ctor = Class should define a constructor . 
 missing . package . declaration = Missing package declaration . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages _ de . properties 
 index ba7cb89 . . 5b1ddf3 100
