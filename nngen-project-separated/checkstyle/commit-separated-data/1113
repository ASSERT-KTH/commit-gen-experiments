BLEU SCORE: 0.012079826799606154

TEST MSG: minor : fix hardcoded messages in UTs
GENERATED MSG: Fix HiddenField ignoreSetter propery not working for one letter fields , issue # 730

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyCatchBlockCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyCatchBlockCheckTest . java <nl> index 6ee10c2 . . 84e160c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyCatchBlockCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyCatchBlockCheckTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . blocks ; <nl> <nl> + import static com . puppycrawl . tools . checkstyle . checks . blocks . EmptyCatchBlockCheck . MSG _ KEY _ CATCH _ BLOCK _ EMPTY ; <nl> import static org . junit . Assert . assertArrayEquals ; <nl> <nl> import java . io . File ; <nl> @ @ - 54 , 8 + 55 , 8 @ @ public class EmptyCatchBlockCheckTest extends BaseCheckTestSupport { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( EmptyCatchBlockCheck . class ) ; <nl> final String [ ] expected = { <nl> - " 35 : Empty catch block . " , <nl> - " 42 : Empty catch block . " , <nl> + " 35 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> + " 42 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputEmptyCatchBlock . java " ) , expected ) ; <nl> } <nl> @ @ - 67 , 14 + 68 , 14 @ @ public class EmptyCatchBlockCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " exceptionVariableName " , " expected | ignore | myException " ) ; <nl> checkConfig . addAttribute ( " commentFormat " , " This is expected " ) ; <nl> final String [ ] expected = { <nl> - " 35 : Empty catch block . " , <nl> - " 63 : Empty catch block . " , <nl> - " 97 : Empty catch block . " , <nl> - " 186 : Empty catch block . " , <nl> - " 195 : Empty catch block . " , <nl> - " 214 : Empty catch block . " , <nl> - " 230 : Empty catch block . " , <nl> - " 239 : Empty catch block . " , <nl> + " 35 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> + " 63 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> + " 97 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> + " 186 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> + " 195 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> + " 214 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> + " 230 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> + " 239 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputEmptyCatchBlock . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java <nl> index 643ff07 . . e894519 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java <nl> @ @ - 170 , 14 + 170 , 10 @ @ public class VariableDeclarationUsageDistanceCheckTest extends <nl> " 471 : " + getCheckMessage ( MSG _ KEY , " l1 " , 3 , 1 ) , <nl> " 471 : " + getCheckMessage ( MSG _ KEY , " l2 " , 2 , 1 ) , <nl> " 479 : " + getCheckMessage ( MSG _ KEY , " myOption " , 7 , 1 ) , <nl> - " 491 : Distance between variable ' myOption ' declaration and its first usage is 6 , " <nl> - + " but allowed 1 . " , <nl> - " 505 : Distance between variable ' files ' declaration and its first usage is 2 , " <nl> - + " but allowed 1 . " , <nl> - " 540 : Distance between variable ' id ' declaration and its first usage is 2 , " <nl> - + " but allowed 1 . " , <nl> - " 542 : Distance between variable ' parentId ' declaration and its first usage is 4 , " <nl> - + " but allowed 1 . " , <nl> + " 491 : " + getCheckMessage ( MSG _ KEY , " myOption " , 6 , 1 ) , <nl> + " 505 : " + getCheckMessage ( MSG _ KEY , " files " , 2 , 1 ) , <nl> + " 540 : " + getCheckMessage ( MSG _ KEY , " id " , 2 , 1 ) , <nl> + " 542 : " + getCheckMessage ( MSG _ KEY , " parentId " , 4 , 1 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputVariableDeclarationUsageDistance . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> index 0f66b01 . . d59a680 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> @ @ - 194 , 7 + 194 , 7 @ @ public class ImportOrderCheckTest extends BaseCheckTestSupport { <nl> createCheckConfig ( ImportOrderCheck . class ) ; <nl> checkConfig . addAttribute ( " option " , " under " ) ; <nl> final String [ ] expected = { <nl> - " 5 : Wrong order for ' java . awt . Dialog ' import . " , <nl> + " 5 : " + getCheckMessage ( MSG _ ORDERING , " java . awt . Dialog " ) , <nl> " 11 : " + getCheckMessage ( MSG _ ORDERING , " java . awt . Button . ABORT " ) , <nl> " 14 : " + getCheckMessage ( MSG _ ORDERING , " java . io . File " ) , <nl> } ;
NEAREST DIFF (one line): diff - - git a / src / xdocs / availablechecks . xml b / src / xdocs / availablechecks . xml <nl> index 5f91280 . . 800a602 100644 <nl> - - - a / src / xdocs / availablechecks . xml <nl> + + + b / src / xdocs / availablechecks . xml <nl> @ @ - 147 , 6 + 147 , 10 @ @ <nl> < td > Checks for empty blocks . < / td > <nl> < / tr > <nl> < tr > <nl> + < td > < a href = " config _ blocks . html # EmptyCatchBlock " > EmptyCatchBlock < / a > < / td > <nl> + < td > Checks for empty catch blocks with few options to skip violation . < / td > <nl> + < / tr > <nl> + < tr > <nl> < td > < a href = " config _ whitespace . html # EmptyForInitializerPad " > EmptyForInitializerPad < / a > < / td > <nl> < td > Checks the padding of an empty for initializer ; that is whether a <nl> space is required at an empty for initializer , or such spaces are

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyCatchBlockCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyCatchBlockCheckTest . java 
 index 6ee10c2 . . 84e160c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyCatchBlockCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyCatchBlockCheckTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . blocks ; 
 
 + import static com . puppycrawl . tools . checkstyle . checks . blocks . EmptyCatchBlockCheck . MSG _ KEY _ CATCH _ BLOCK _ EMPTY ; 
 import static org . junit . Assert . assertArrayEquals ; 
 
 import java . io . File ; 
 @ @ - 54 , 8 + 55 , 8 @ @ public class EmptyCatchBlockCheckTest extends BaseCheckTestSupport { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( EmptyCatchBlockCheck . class ) ; 
 final String [ ] expected = { 
 - " 35 : Empty catch block . " , 
 - " 42 : Empty catch block . " , 
 + " 35 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 + " 42 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputEmptyCatchBlock . java " ) , expected ) ; 
 } 
 @ @ - 67 , 14 + 68 , 14 @ @ public class EmptyCatchBlockCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " exceptionVariableName " , " expected | ignore | myException " ) ; 
 checkConfig . addAttribute ( " commentFormat " , " This is expected " ) ; 
 final String [ ] expected = { 
 - " 35 : Empty catch block . " , 
 - " 63 : Empty catch block . " , 
 - " 97 : Empty catch block . " , 
 - " 186 : Empty catch block . " , 
 - " 195 : Empty catch block . " , 
 - " 214 : Empty catch block . " , 
 - " 230 : Empty catch block . " , 
 - " 239 : Empty catch block . " , 
 + " 35 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 + " 63 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 + " 97 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 + " 186 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 + " 195 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 + " 214 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 + " 230 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 + " 239 : " + getCheckMessage ( MSG _ KEY _ CATCH _ BLOCK _ EMPTY ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputEmptyCatchBlock . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java 
 index 643ff07 . . e894519 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java 
 @ @ - 170 , 14 + 170 , 10 @ @ public class VariableDeclarationUsageDistanceCheckTest extends 
 " 471 : " + getCheckMessage ( MSG _ KEY , " l1 " , 3 , 1 ) , 
 " 471 : " + getCheckMessage ( MSG _ KEY , " l2 " , 2 , 1 ) , 
 " 479 : " + getCheckMessage ( MSG _ KEY , " myOption " , 7 , 1 ) , 
 - " 491 : Distance between variable ' myOption ' declaration and its first usage is 6 , " 
 - + " but allowed 1 . " , 
 - " 505 : Distance between variable ' files ' declaration and its first usage is 2 , " 
 - + " but allowed 1 . " , 
 - " 540 : Distance between variable ' id ' declaration and its first usage is 2 , " 
 - + " but allowed 1 . " , 
 - " 542 : Distance between variable ' parentId ' declaration and its first usage is 4 , " 
 - + " but allowed 1 . " , 
 + " 491 : " + getCheckMessage ( MSG _ KEY , " myOption " , 6 , 1 ) , 
 + " 505 : " + getCheckMessage ( MSG _ KEY , " files " , 2 , 1 ) , 
 + " 540 : " + getCheckMessage ( MSG _ KEY , " id " , 2 , 1 ) , 
 + " 542 : " + getCheckMessage ( MSG _ KEY , " parentId " , 4 , 1 ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputVariableDeclarationUsageDistance . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 index 0f66b01 . . d59a680 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 @ @ - 194 , 7 + 194 , 7 @ @ public class ImportOrderCheckTest extends BaseCheckTestSupport { 
 createCheckConfig ( ImportOrderCheck . class ) ; 
 checkConfig . addAttribute ( " option " , " under " ) ; 
 final String [ ] expected = { 
 - " 5 : Wrong order for ' java . awt . Dialog ' import . " , 
 + " 5 : " + getCheckMessage ( MSG _ ORDERING , " java . awt . Dialog " ) , 
 " 11 : " + getCheckMessage ( MSG _ ORDERING , " java . awt . Button . ABORT " ) , 
 " 14 : " + getCheckMessage ( MSG _ ORDERING , " java . io . File " ) , 
 } ;

NEAREST DIFF:
diff - - git a / src / xdocs / availablechecks . xml b / src / xdocs / availablechecks . xml 
 index 5f91280 . . 800a602 100644 
 - - - a / src / xdocs / availablechecks . xml 
 + + + b / src / xdocs / availablechecks . xml 
 @ @ - 147 , 6 + 147 , 10 @ @ 
 < td > Checks for empty blocks . < / td > 
 < / tr > 
 < tr > 
 + < td > < a href = " config _ blocks . html # EmptyCatchBlock " > EmptyCatchBlock < / a > < / td > 
 + < td > Checks for empty catch blocks with few options to skip violation . < / td > 
 + < / tr > 
 + < tr > 
 < td > < a href = " config _ whitespace . html # EmptyForInitializerPad " > EmptyForInitializerPad < / a > < / td > 
 < td > Checks the padding of an empty for initializer ; that is whether a 
 space is required at an empty for initializer , or such spaces are
