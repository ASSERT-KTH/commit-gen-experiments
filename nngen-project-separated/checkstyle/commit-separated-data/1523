BLEU SCORE: 0.018160849415439315

TEST MSG: Issue # 2398 : Fix for error where an exception is thrown if empty return tag is followed by blank line
GENERATED MSG: Fix parsing of allowedAnnotations property in JavadocMethod

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index a3fc7e2 . . 1a4b9be 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 664 , 12 + 664 , 13 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> while ( remIndex < lines . length ) { <nl> final Matcher multilineCont = MATCH _ JAVADOC _ MULTILINE _ CONT <nl> . matcher ( lines [ remIndex ] ) ; <nl> - multilineCont . find ( ) ; <nl> - remIndex = lines . length ; <nl> - final String lFin = multilineCont . group ( 1 ) ; <nl> - if ( ! lFin . equals ( NEXT _ TAG ) <nl> - & & ! lFin . equals ( END _ JAVADOC ) ) { <nl> - tags . add ( new JavadocTag ( tagLine , col , param1 ) ) ; <nl> + if ( multilineCont . find ( ) ) { <nl> + remIndex = lines . length ; <nl> + final String lFin = multilineCont . group ( 1 ) ; <nl> + if ( ! lFin . equals ( NEXT _ TAG ) <nl> + & & ! lFin . equals ( END _ JAVADOC ) ) { <nl> + tags . add ( new JavadocTag ( tagLine , col , param1 ) ) ; <nl> + } <nl> } <nl> remIndex + + ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> index 8048372 . . 9473229 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> @ @ - 404 , 6 + 404 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> " 30 : 42 : " + getCheckMessage ( MSG _ EXPECTED _ TAG , " @ throws " , " ThreadDeath " ) , <nl> " 51 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , <nl> " 61 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , <nl> + " 72 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputMissingJavadocTags . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMissingJavadocTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMissingJavadocTags . java <nl> index 0392d02 . . cc2580f 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMissingJavadocTags . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMissingJavadocTags . java <nl> @ @ - 61 , 4 + 61 , 15 @ @ public class InputMissingJavadocTags { <nl> private int missingReturnAtTheEnd ( int number ) { <nl> return number ; <nl> } <nl> + <nl> + / * * <nl> + * Missing return at the end followed by empty line . <nl> + * <nl> + * @ param number to return <nl> + * @ return <nl> + * <nl> + * / <nl> + private int missingReturnAtTheEndFollowedByEmptyLine ( int number ) { <nl> + return number ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / config / findbugs - exclude . xml b / config / findbugs - exclude . xml <nl> index ed130d7 . . fdda9e0 100644 <nl> - - - a / config / findbugs - exclude . xml <nl> + + + b / config / findbugs - exclude . xml <nl> @ @ - 28 , 11 + 28 , 6 @ @ <nl> < Bug pattern = " REC _ CATCH _ EXCEPTION " / > <nl> < / Match > <nl> < Match > <nl> - < ! - - till # 911 - - > <nl> - < Package name = " ~ com \ . puppycrawl \ . tools \ . checkstyle . * " / > <nl> - < Bug pattern = " EQ _ COMPARETO _ USE _ OBJECT _ EQUALS " / > <nl> - < / Match > <nl> - < Match > <nl> < ! - - see a reason of suppression at # 910 - - > <nl> < Class name = " com . puppycrawl . tools . checkstyle . checks . UniquePropertiesCheck $ UniqueProperties " / > <nl> < Bug pattern = " EQ _ DOESNT _ OVERRIDE _ EQUALS " / > <nl> diff - - git a / pom . xml b / pom . xml <nl> index 95ea05d . . a1e2103 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 664 , 7 + 664 , 7 @ @ <nl> < regex > < pattern > . * . api . JavadocTagInfo < / pattern > < branchRate > 25 < / branchRate > < lineRate > 77 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . JavadocTagInfo \ $ . * < / pattern > < branchRate > 0 < / branchRate > < lineRate > 8 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . JavadocTokenTypes < / pattern > < branchRate > 100 < / branchRate > < lineRate > 0 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . api . LineColumn < / pattern > < branchRate > 0 < / branchRate > < lineRate > 60 < / lineRate > < / regex > <nl> + < regex > < pattern > . * . api . LineColumn < / pattern > < branchRate > 0 < / branchRate > < lineRate > 33 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . LocalizedMessage < / pattern > < branchRate > 53 < / branchRate > < lineRate > 67 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . LocalizedMessage \ $ . * < / pattern > < branchRate > 41 < / branchRate > < lineRate > 66 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . ScopeUtils < / pattern > < branchRate > 0 < / branchRate > < lineRate > 0 < / lineRate > < / regex > <nl> @ @ - 889 , 11 + 889 , 11 @ @ <nl> < regex > < pattern > . * . filters . IntRangeFilter < / pattern > < branchRate > 100 < / branchRate > < lineRate > 90 < / lineRate > < / regex > <nl> < regex > < pattern > . * . filters . SuppressElement < / pattern > < branchRate > 69 < / branchRate > < lineRate > 78 < / lineRate > < / regex > <nl> < regex > < pattern > . * . filters . SuppressionCommentFilter < / pattern > < branchRate > 83 < / branchRate > < lineRate > 87 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . filters . SuppressionCommentFilter \ $ . * < / pattern > < branchRate > 87 < / branchRate > < lineRate > 84 < / lineRate > < / regex > <nl> + < regex > < pattern > . * . filters . SuppressionCommentFilter \ $ . * < / pattern > < branchRate > 41 < / branchRate > < lineRate > 69 < / lineRate > < / regex > <nl> < regex > < pattern > . * . filters . SuppressionFilter < / pattern > < branchRate > 0 < / branchRate > < lineRate > 0 < / lineRate > < / regex > <nl> < regex > < pattern > . * . filters . SuppressionsLoader < / pattern > < branchRate > 68 < / branchRate > < lineRate > 77 < / lineRate > < / regex > <nl> < regex > < pattern > . * . filters . SuppressWithNearbyCommentFilter < / pattern > < branchRate > 76 < / branchRate > < lineRate > 89 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . filters . SuppressWithNearbyCommentFilter \ $ . * < / pattern > < branchRate > 81 < / branchRate > < lineRate > 75 < / lineRate > < / regex > <nl> + < regex > < pattern > . * . filters . SuppressWithNearbyCommentFilter \ $ . * < / pattern > < branchRate > 47 < / branchRate > < lineRate > 63 < / lineRate > < / regex > <nl> <nl> < / regexes > <nl> < / check > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java <nl> index 8a57f97 . . 429d3da 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> + import java . util . Objects ; <nl> + <nl> / * * <nl> * Immutable line and column numbers . <nl> * <nl> @ @ - 64 , 4 + 66 , 26 @ @ public class LineColumn implements Comparable < LineColumn > <nl> ? this . getLine ( ) - lineColumn . getLine ( ) <nl> : this . getColumn ( ) - lineColumn . getColumn ( ) ; <nl> } <nl> + <nl> + / * * { @ inheritDoc } * / <nl> + @ Override <nl> + public boolean equals ( Object o ) <nl> + { <nl> + if ( this = = o ) { <nl> + return true ; <nl> + } <nl> + if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { <nl> + return false ; <nl> + } <nl> + final LineColumn that = ( LineColumn ) o ; <nl> + return Objects . equals ( line , that . line ) <nl> + & & Objects . equals ( col , that . col ) ; <nl> + } <nl> + <nl> + / * * { @ inheritDoc } * / <nl> + @ Override <nl> + public int hashCode ( ) <nl> + { <nl> + return Objects . hash ( line , col ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> index 0c1c333 . . f3502b5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import java . util . Collection ; <nl> import java . util . Collections ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> + import java . util . Objects ; <nl> import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> import java . util . regex . PatternSyntaxException ; <nl> @ @ - 191 , 6 + 192 , 31 @ @ public class SuppressWithNearbyCommentFilter <nl> return firstLine - other . firstLine ; <nl> } <nl> <nl> + / * * { @ inheritDoc } * / <nl> + @ Override <nl> + public boolean equals ( Object o ) <nl> + { <nl> + if ( this = = o ) { <nl> + return true ; <nl> + } <nl> + if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { <nl> + return false ; <nl> + } <nl> + final Tag tag = ( Tag ) o ; <nl> + return Objects . equals ( firstLine , tag . firstLine ) <nl> + & & Objects . equals ( lastLine , tag . lastLine ) <nl> + & & Objects . equals ( text , tag . text ) <nl> + & & Objects . equals ( tagCheckRegexp , tag . tagCheckRegexp ) <nl> + & & Objects . equals ( tagMessageRegexp , tag . tagMessageRegexp ) ; <nl> + } <nl> + <nl> + / * * { @ inheritDoc } * / <nl> + @ Override <nl> + public int hashCode ( ) <nl> + { <nl> + return Objects . hash ( text , firstLine , lastLine , tagCheckRegexp , tagMessageRegexp ) ; <nl> + } <nl> + <nl> / * * <nl> * Determines whether the source of an audit event <nl> * matches the text of this tag . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> index 0e6ba25 . . da9fdf7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> @ @ - 31 , 6 + 31 , 7 @ @ import java . lang . ref . WeakReference ; <nl> import java . util . Collection ; <nl> import java . util . Collections ; <nl> import java . util . List ; <nl> + import java . util . Objects ; <nl> import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> import java . util . regex . PatternSyntaxException ; <nl> @ @ - 195 , 6 + 196 , 32 @ @ public class SuppressionCommentFilter <nl> return line - object . line ; <nl> } <nl> <nl> + / * * { @ inheritDoc } * / <nl> + @ Override <nl> + public boolean equals ( Object o ) <nl> + { <nl> + if ( this = = o ) { <nl> + return true ; <nl> + } <nl> + if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { <nl> + return false ; <nl> + } <nl> + final Tag tag = ( Tag ) o ; <nl> + return Objects . equals ( line , tag . line ) <nl> + & & Objects . equals ( column , tag . column ) <nl> + & & Objects . equals ( on , tag . on ) <nl> + & & Objects . equals ( text , tag . text ) <nl> + & & Objects . equals ( tagCheckRegexp , tag . tagCheckRegexp ) <nl> + & & Objects . equals ( tagMessageRegexp , tag . tagMessageRegexp ) ; <nl> + } <nl> + <nl> + / * * { @ inheritDoc } * / <nl> + @ Override <nl> + public int hashCode ( ) <nl> + { <nl> + return Objects . hash ( text , line , column , on , tagCheckRegexp , tagMessageRegexp ) ; <nl> + } <nl> + <nl> / * * <nl> * Determines whether the source of an audit event <nl> * matches the text of this tag .

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index a3fc7e2 . . 1a4b9be 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 664 , 12 + 664 , 13 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 while ( remIndex < lines . length ) { 
 final Matcher multilineCont = MATCH _ JAVADOC _ MULTILINE _ CONT 
 . matcher ( lines [ remIndex ] ) ; 
 - multilineCont . find ( ) ; 
 - remIndex = lines . length ; 
 - final String lFin = multilineCont . group ( 1 ) ; 
 - if ( ! lFin . equals ( NEXT _ TAG ) 
 - & & ! lFin . equals ( END _ JAVADOC ) ) { 
 - tags . add ( new JavadocTag ( tagLine , col , param1 ) ) ; 
 + if ( multilineCont . find ( ) ) { 
 + remIndex = lines . length ; 
 + final String lFin = multilineCont . group ( 1 ) ; 
 + if ( ! lFin . equals ( NEXT _ TAG ) 
 + & & ! lFin . equals ( END _ JAVADOC ) ) { 
 + tags . add ( new JavadocTag ( tagLine , col , param1 ) ) ; 
 + } 
 } 
 remIndex + + ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 index 8048372 . . 9473229 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 @ @ - 404 , 6 + 404 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 " 30 : 42 : " + getCheckMessage ( MSG _ EXPECTED _ TAG , " @ throws " , " ThreadDeath " ) , 
 " 51 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , 
 " 61 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , 
 + " 72 : " + getCheckMessage ( MSG _ RETURN _ EXPECTED ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputMissingJavadocTags . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMissingJavadocTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMissingJavadocTags . java 
 index 0392d02 . . cc2580f 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMissingJavadocTags . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMissingJavadocTags . java 
 @ @ - 61 , 4 + 61 , 15 @ @ public class InputMissingJavadocTags { 
 private int missingReturnAtTheEnd ( int number ) { 
 return number ; 
 } 
 + 
 + / * * 
 + * Missing return at the end followed by empty line . 
 + * 
 + * @ param number to return 
 + * @ return 
 + * 
 + * / 
 + private int missingReturnAtTheEndFollowedByEmptyLine ( int number ) { 
 + return number ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / config / findbugs - exclude . xml b / config / findbugs - exclude . xml 
 index ed130d7 . . fdda9e0 100644 
 - - - a / config / findbugs - exclude . xml 
 + + + b / config / findbugs - exclude . xml 
 @ @ - 28 , 11 + 28 , 6 @ @ 
 < Bug pattern = " REC _ CATCH _ EXCEPTION " / > 
 < / Match > 
 < Match > 
 - < ! - - till # 911 - - > 
 - < Package name = " ~ com \ . puppycrawl \ . tools \ . checkstyle . * " / > 
 - < Bug pattern = " EQ _ COMPARETO _ USE _ OBJECT _ EQUALS " / > 
 - < / Match > 
 - < Match > 
 < ! - - see a reason of suppression at # 910 - - > 
 < Class name = " com . puppycrawl . tools . checkstyle . checks . UniquePropertiesCheck $ UniqueProperties " / > 
 < Bug pattern = " EQ _ DOESNT _ OVERRIDE _ EQUALS " / > 
 diff - - git a / pom . xml b / pom . xml 
 index 95ea05d . . a1e2103 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 664 , 7 + 664 , 7 @ @ 
 < regex > < pattern > . * . api . JavadocTagInfo < / pattern > < branchRate > 25 < / branchRate > < lineRate > 77 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . JavadocTagInfo \ $ . * < / pattern > < branchRate > 0 < / branchRate > < lineRate > 8 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . JavadocTokenTypes < / pattern > < branchRate > 100 < / branchRate > < lineRate > 0 < / lineRate > < / regex > 
 - < regex > < pattern > . * . api . LineColumn < / pattern > < branchRate > 0 < / branchRate > < lineRate > 60 < / lineRate > < / regex > 
 + < regex > < pattern > . * . api . LineColumn < / pattern > < branchRate > 0 < / branchRate > < lineRate > 33 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . LocalizedMessage < / pattern > < branchRate > 53 < / branchRate > < lineRate > 67 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . LocalizedMessage \ $ . * < / pattern > < branchRate > 41 < / branchRate > < lineRate > 66 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . ScopeUtils < / pattern > < branchRate > 0 < / branchRate > < lineRate > 0 < / lineRate > < / regex > 
 @ @ - 889 , 11 + 889 , 11 @ @ 
 < regex > < pattern > . * . filters . IntRangeFilter < / pattern > < branchRate > 100 < / branchRate > < lineRate > 90 < / lineRate > < / regex > 
 < regex > < pattern > . * . filters . SuppressElement < / pattern > < branchRate > 69 < / branchRate > < lineRate > 78 < / lineRate > < / regex > 
 < regex > < pattern > . * . filters . SuppressionCommentFilter < / pattern > < branchRate > 83 < / branchRate > < lineRate > 87 < / lineRate > < / regex > 
 - < regex > < pattern > . * . filters . SuppressionCommentFilter \ $ . * < / pattern > < branchRate > 87 < / branchRate > < lineRate > 84 < / lineRate > < / regex > 
 + < regex > < pattern > . * . filters . SuppressionCommentFilter \ $ . * < / pattern > < branchRate > 41 < / branchRate > < lineRate > 69 < / lineRate > < / regex > 
 < regex > < pattern > . * . filters . SuppressionFilter < / pattern > < branchRate > 0 < / branchRate > < lineRate > 0 < / lineRate > < / regex > 
 < regex > < pattern > . * . filters . SuppressionsLoader < / pattern > < branchRate > 68 < / branchRate > < lineRate > 77 < / lineRate > < / regex > 
 < regex > < pattern > . * . filters . SuppressWithNearbyCommentFilter < / pattern > < branchRate > 76 < / branchRate > < lineRate > 89 < / lineRate > < / regex > 
 - < regex > < pattern > . * . filters . SuppressWithNearbyCommentFilter \ $ . * < / pattern > < branchRate > 81 < / branchRate > < lineRate > 75 < / lineRate > < / regex > 
 + < regex > < pattern > . * . filters . SuppressWithNearbyCommentFilter \ $ . * < / pattern > < branchRate > 47 < / branchRate > < lineRate > 63 < / lineRate > < / regex > 
 
 < / regexes > 
 < / check > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java 
 index 8a57f97 . . 429d3da 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 + import java . util . Objects ; 
 + 
 / * * 
 * Immutable line and column numbers . 
 * 
 @ @ - 64 , 4 + 66 , 26 @ @ public class LineColumn implements Comparable < LineColumn > 
 ? this . getLine ( ) - lineColumn . getLine ( ) 
 : this . getColumn ( ) - lineColumn . getColumn ( ) ; 
 } 
 + 
 + / * * { @ inheritDoc } * / 
 + @ Override 
 + public boolean equals ( Object o ) 
 + { 
 + if ( this = = o ) { 
 + return true ; 
 + } 
 + if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { 
 + return false ; 
 + } 
 + final LineColumn that = ( LineColumn ) o ; 
 + return Objects . equals ( line , that . line ) 
 + & & Objects . equals ( col , that . col ) ; 
 + } 
 + 
 + / * * { @ inheritDoc } * / 
 + @ Override 
 + public int hashCode ( ) 
 + { 
 + return Objects . hash ( line , col ) ; 
 + } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 index 0c1c333 . . f3502b5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import java . util . Collection ; 
 import java . util . Collections ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 + import java . util . Objects ; 
 import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 import java . util . regex . PatternSyntaxException ; 
 @ @ - 191 , 6 + 192 , 31 @ @ public class SuppressWithNearbyCommentFilter 
 return firstLine - other . firstLine ; 
 } 
 
 + / * * { @ inheritDoc } * / 
 + @ Override 
 + public boolean equals ( Object o ) 
 + { 
 + if ( this = = o ) { 
 + return true ; 
 + } 
 + if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { 
 + return false ; 
 + } 
 + final Tag tag = ( Tag ) o ; 
 + return Objects . equals ( firstLine , tag . firstLine ) 
 + & & Objects . equals ( lastLine , tag . lastLine ) 
 + & & Objects . equals ( text , tag . text ) 
 + & & Objects . equals ( tagCheckRegexp , tag . tagCheckRegexp ) 
 + & & Objects . equals ( tagMessageRegexp , tag . tagMessageRegexp ) ; 
 + } 
 + 
 + / * * { @ inheritDoc } * / 
 + @ Override 
 + public int hashCode ( ) 
 + { 
 + return Objects . hash ( text , firstLine , lastLine , tagCheckRegexp , tagMessageRegexp ) ; 
 + } 
 + 
 / * * 
 * Determines whether the source of an audit event 
 * matches the text of this tag . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 index 0e6ba25 . . da9fdf7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 @ @ - 31 , 6 + 31 , 7 @ @ import java . lang . ref . WeakReference ; 
 import java . util . Collection ; 
 import java . util . Collections ; 
 import java . util . List ; 
 + import java . util . Objects ; 
 import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 import java . util . regex . PatternSyntaxException ; 
 @ @ - 195 , 6 + 196 , 32 @ @ public class SuppressionCommentFilter 
 return line - object . line ; 
 } 
 
 + / * * { @ inheritDoc } * / 
 + @ Override 
 + public boolean equals ( Object o ) 
 + { 
 + if ( this = = o ) { 
 + return true ; 
 + } 
 + if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { 
 + return false ; 
 + } 
 + final Tag tag = ( Tag ) o ; 
 + return Objects . equals ( line , tag . line ) 
 + & & Objects . equals ( column , tag . column ) 
 + & & Objects . equals ( on , tag . on ) 
 + & & Objects . equals ( text , tag . text ) 
 + & & Objects . equals ( tagCheckRegexp , tag . tagCheckRegexp ) 
 + & & Objects . equals ( tagMessageRegexp , tag . tagMessageRegexp ) ; 
 + } 
 + 
 + / * * { @ inheritDoc } * / 
 + @ Override 
 + public int hashCode ( ) 
 + { 
 + return Objects . hash ( text , line , column , on , tagCheckRegexp , tagMessageRegexp ) ; 
 + } 
 + 
 / * * 
 * Determines whether the source of an audit event 
 * matches the text of this tag .
