BLEU SCORE: 0.06285596338261261

TEST MSG: Issue # 4581 : Reorganize token methods in whitespace , sizes , naming folders
GENERATED MSG: Issue # 2661 : Enforce WhitespaceBeforeArrayInitializer of sevntu - checkstyle over Checkstyle source code

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> index dcf88a3 . . b6e40cc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> @ @ - 92 , 7 + 92 , 7 @ @ public final class AbstractClassNameCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . CLASS _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 102 , 7 + 102 , 7 @ @ public final class AbstractClassNameCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . CLASS _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java <nl> index 3204019 . . c96ae0f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java <nl> @ @ - 71 , 17 + 71 , 17 @ @ public class CatchParameterNameCheck extends AbstractNameCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . PARAMETER _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . PARAMETER _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ClassTypeParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ClassTypeParameterNameCheck . java <nl> index 9ae2fb3 . . 91172d5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ClassTypeParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ClassTypeParameterNameCheck . java <nl> @ @ - 56 , 19 + 56 , 19 @ @ public class ClassTypeParameterNameCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public final int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . TYPE _ PARAMETER , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . TYPE _ PARAMETER , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java <nl> index 2feef3d . . 520dec8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java <nl> @ @ - 62 , 17 + 62 , 17 @ @ public class ConstantNameCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MemberNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MemberNameCheck . java <nl> index 024e22a . . e1abaab 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MemberNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MemberNameCheck . java <nl> @ @ - 58 , 17 + 58 , 17 @ @ public class MemberNameCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodNameCheck . java <nl> index 9d79bf6 . . 6cb0dc6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodNameCheck . java <nl> @ @ - 99 , 17 + 99 , 17 @ @ public class MethodNameCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . METHOD _ DEF , } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . METHOD _ DEF , } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java <nl> index 6ce11b6 . . 6598b75 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java <nl> @ @ - 88 , 17 + 88 , 17 @ @ public class PackageNameCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . PACKAGE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . PACKAGE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> index 931e9c5 . . 0b6bc61 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> @ @ - 107 , 17 + 107 , 17 @ @ public class ParameterNameCheck extends AbstractNameCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . PARAMETER _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . PARAMETER _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / StaticVariableNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / StaticVariableNameCheck . java <nl> index e90c1e6 . . bf36a02 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / StaticVariableNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / StaticVariableNameCheck . java <nl> @ @ - 56 , 17 + 56 , 17 @ @ public class StaticVariableNameCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java <nl> index 0dbb09b . . 6f5ff98 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java <nl> @ @ - 74 , 17 + 74 , 17 @ @ public class AnonInnerLengthCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ NEW } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . LITERAL _ NEW } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheck . java <nl> index 8e56c70 . . ede3569 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheck . java <nl> @ @ - 96 , 12 + 96 , 12 @ @ public class LineLengthCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / OuterTypeNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / OuterTypeNumberCheck . java <nl> index 4889c3b . . 4fa104c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / OuterTypeNumberCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / OuterTypeNumberCheck . java <nl> @ @ - 46 , 18 + 46 , 18 @ @ public class OuterTypeNumberCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . INTERFACE _ DEF , <nl> - TokenTypes . ENUM _ DEF , TokenTypes . ANNOTATION _ DEF , } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . INTERFACE _ DEF , <nl> + TokenTypes . ENUM _ DEF , TokenTypes . ANNOTATION _ DEF , } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java <nl> index a2bfb59 . . 67f68dc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java <nl> @ @ - 87 , 17 + 87 , 17 @ @ public class EmptyForInitializerPadCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . FOR _ INIT } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . FOR _ INIT } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java <nl> index 49494d2 . . d03bc1b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java <nl> @ @ - 87 , 17 + 87 , 17 @ @ public class EmptyForIteratorPadCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . FOR _ ITERATOR } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . FOR _ ITERATOR } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java <nl> index ebafad3 . . 18564a6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java <nl> @ @ - 106 , 17 + 106 , 17 @ @ public class SingleSpaceSeparatorCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> } <nl> <nl> / / - @ cs [ SimpleAccessorNameNotation ] Overrides method from base class . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / TypecastParenPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / TypecastParenPadCheck . java <nl> index 87a9e2a . . a65fb2d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / TypecastParenPadCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / TypecastParenPadCheck . java <nl> @ @ - 61 , 7 + 61 , 7 @ @ public class TypecastParenPadCheck extends AbstractParenPadCheck { <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . RPAREN , TokenTypes . TYPECAST } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override
NEAREST DIFF (one line): diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index 0dbda1e . . 9651d4f 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 1034 , 6 + 1034 , 15 @ @ public boolean equals ( Object o ) { <nl> & lt ; property name = " ignoreOverridden " value = " true " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> + < p > <nl> + An example of how to configure the check for names that begin with <nl> + a lower case letter , followed by letters and digits is : <nl> + < / p > <nl> + < source > <nl> + & lt ; module name = " ParameterName " & gt ; <nl> + & lt ; property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> < / subsection > <nl> <nl> < subsection name = " Example of Usage " >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 index dcf88a3 . . b6e40cc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 @ @ - 92 , 7 + 92 , 7 @ @ public final class AbstractClassNameCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . CLASS _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 @ @ - 102 , 7 + 102 , 7 @ @ public final class AbstractClassNameCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . CLASS _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java 
 index 3204019 . . c96ae0f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java 
 @ @ - 71 , 17 + 71 , 17 @ @ public class CatchParameterNameCheck extends AbstractNameCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . PARAMETER _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . PARAMETER _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ClassTypeParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ClassTypeParameterNameCheck . java 
 index 9ae2fb3 . . 91172d5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ClassTypeParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ClassTypeParameterNameCheck . java 
 @ @ - 56 , 19 + 56 , 19 @ @ public class ClassTypeParameterNameCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public final int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . TYPE _ PARAMETER , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . TYPE _ PARAMETER , 
 + } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java 
 index 2feef3d . . 520dec8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java 
 @ @ - 62 , 17 + 62 , 17 @ @ public class ConstantNameCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MemberNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MemberNameCheck . java 
 index 024e22a . . e1abaab 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MemberNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MemberNameCheck . java 
 @ @ - 58 , 17 + 58 , 17 @ @ public class MemberNameCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodNameCheck . java 
 index 9d79bf6 . . 6cb0dc6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodNameCheck . java 
 @ @ - 99 , 17 + 99 , 17 @ @ public class MethodNameCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . METHOD _ DEF , } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . METHOD _ DEF , } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java 
 index 6ce11b6 . . 6598b75 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java 
 @ @ - 88 , 17 + 88 , 17 @ @ public class PackageNameCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . PACKAGE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . PACKAGE _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 index 931e9c5 . . 0b6bc61 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 @ @ - 107 , 17 + 107 , 17 @ @ public class ParameterNameCheck extends AbstractNameCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . PARAMETER _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . PARAMETER _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / StaticVariableNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / StaticVariableNameCheck . java 
 index e90c1e6 . . bf36a02 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / StaticVariableNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / StaticVariableNameCheck . java 
 @ @ - 56 , 17 + 56 , 17 @ @ public class StaticVariableNameCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java 
 index 0dbb09b . . 6f5ff98 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java 
 @ @ - 74 , 17 + 74 , 17 @ @ public class AnonInnerLengthCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ NEW } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . LITERAL _ NEW } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheck . java 
 index 8e56c70 . . ede3569 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheck . java 
 @ @ - 96 , 12 + 96 , 12 @ @ public class LineLengthCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / OuterTypeNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / OuterTypeNumberCheck . java 
 index 4889c3b . . 4fa104c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / OuterTypeNumberCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / OuterTypeNumberCheck . java 
 @ @ - 46 , 18 + 46 , 18 @ @ public class OuterTypeNumberCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . INTERFACE _ DEF , 
 - TokenTypes . ENUM _ DEF , TokenTypes . ANNOTATION _ DEF , } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . INTERFACE _ DEF , 
 + TokenTypes . ENUM _ DEF , TokenTypes . ANNOTATION _ DEF , } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java 
 index a2bfb59 . . 67f68dc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java 
 @ @ - 87 , 17 + 87 , 17 @ @ public class EmptyForInitializerPadCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . FOR _ INIT } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . FOR _ INIT } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java 
 index 49494d2 . . d03bc1b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java 
 @ @ - 87 , 17 + 87 , 17 @ @ public class EmptyForIteratorPadCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . FOR _ ITERATOR } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . FOR _ ITERATOR } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java 
 index ebafad3 . . 18564a6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java 
 @ @ - 106 , 17 + 106 , 17 @ @ public class SingleSpaceSeparatorCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return CommonUtils . EMPTY _ INT _ ARRAY ; 
 } 
 
 / / - @ cs [ SimpleAccessorNameNotation ] Overrides method from base class . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / TypecastParenPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / TypecastParenPadCheck . java 
 index 87a9e2a . . a65fb2d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / TypecastParenPadCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / TypecastParenPadCheck . java 
 @ @ - 61 , 7 + 61 , 7 @ @ public class TypecastParenPadCheck extends AbstractParenPadCheck { 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . RPAREN , TokenTypes . TYPECAST } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override

NEAREST DIFF:
diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index 0dbda1e . . 9651d4f 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 1034 , 6 + 1034 , 15 @ @ public boolean equals ( Object o ) { 
 & lt ; property name = " ignoreOverridden " value = " true " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 + < p > 
 + An example of how to configure the check for names that begin with 
 + a lower case letter , followed by letters and digits is : 
 + < / p > 
 + < source > 
 + & lt ; module name = " ParameterName " & gt ; 
 + & lt ; property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 < / subsection > 
 
 < subsection name = " Example of Usage " >
