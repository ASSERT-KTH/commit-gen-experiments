BLEU SCORE: 0.01960062953647315

TEST MSG: Issue # 6021 : improve error and variable handling
GENERATED MSG: minor : print patch ready to apply for test - spelling - unknown - words . sh

TEST DIFF (one line): diff - - git a / . ci / test - spelling - unknown - words . sh b / . ci / test - spelling - unknown - words . sh <nl> index 7f6e279 . . 6cc9131 100755 <nl> - - - a / . ci / test - spelling - unknown - words . sh <nl> + + + b / . ci / test - spelling - unknown - words . sh <nl> @ @ - 1 , 49 + 1 , 73 @ @ <nl> # ! / bin / bash <nl> # This CI acceptance test is based on : <nl> - # https : / / github . com / jsoref / spelling / blob / 04648bdc63723e5cdf5cbeaff2225a462807abc8 <nl> + # https : / / github . com / jsoref / spelling / tree / 04648bdc63723e5cdf5cbeaff2225a462807abc8 <nl> # It is conceptually ` f ` which runs ` w ` ( spelling - unknown - word - splitter ) <nl> # plus ` fchurn ` which uses ` dn ` mostly rolled together . <nl> set - e <nl> <nl> - spellchecker = . ci / jsoref - spellchecker <nl> - temp = . ci - temp <nl> - whitelist _ path = $ spellchecker / whitelist . words <nl> - dict = $ temp / english . words <nl> - word _ splitter = $ spellchecker / spelling - unknown - word - splitter . pl <nl> - run _ output = $ spellchecker / unknown . words <nl> - if [ ! - e $ dict ] ; then <nl> - mkdir - p $ temp <nl> + spellchecker = ' . ci / jsoref - spellchecker ' <nl> + temp = ' . ci - temp ' <nl> + whitelist _ path = " $ spellchecker / whitelist . words " <nl> + dict = " $ temp / english . words " <nl> + word _ splitter = " $ spellchecker / spelling - unknown - word - splitter . pl " <nl> + run _ output = " $ spellchecker / unknown . words " <nl> + if [ ! - e " $ dict " ] ; then <nl> + mkdir - p " $ temp " <nl> echo " Retrieve . / usr / share / dict / linux . words " <nl> - words _ rpm = $ temp / words . rpm <nl> + words _ rpm = " $ temp / words . rpm " <nl> mirror = " https : / / rpmfind . net " <nl> file _ path = " / linux / fedora / linux / development / rawhide / Everything / aarch64 / os / Packages / w / " <nl> - file _ name = $ ( curl - s " $ { mirror } $ { file _ path } " | grep - o " words - . * . noarch . rpm " ) <nl> - curl " $ { mirror } $ { file _ path } $ { file _ name } " - o $ words _ rpm <nl> - $ spellchecker / rpm2cpio . sh $ words _ rpm | \ <nl> + location = " $ { mirror } $ { file _ path } " <nl> + file _ name = " $ ( curl - s " $ location " | grep - o " words - . * . noarch . rpm " | | echo " " ) " <nl> + if [ - z " $ file _ name " ] ; then <nl> + echo " $ 0 failed to retrieve url for words package from $ location " <nl> + exit 3 <nl> + fi <nl> + location = " $ { mirror } $ { file _ path } $ { file _ name } " <nl> + curl " $ location " - o " $ words _ rpm " <nl> + if ! " $ spellchecker / rpm2cpio . sh " " $ words _ rpm " | \ <nl> perl - e ' $ / = " \ 0 " ; while ( < > ) { if ( / ^ 0707 / ) { $ state = ( m ! \ . / usr / share / dict / linux . words ! ) } <nl> elsif ( $ state = = 1 ) { print } } ' \ <nl> - > $ dict <nl> - rm $ words _ rpm <nl> + > " $ dict " ; then <nl> + rpm _ extract _ status = " $ { PIPESTATUS [ 0 ] } $ { PIPESTATUS [ 1 ] } " <nl> + rm - f " $ words _ rpm " " $ dict " <nl> + echo " $ 0 failed to extract words ( $ location as $ words _ rpm ) ( $ rpm _ extract _ status ) " <nl> + exit 4 <nl> + fi <nl> + rpm _ extract _ status = " $ { PIPESTATUS [ 0 ] } $ { PIPESTATUS [ 1 ] } " <nl> + if [ " $ rpm _ extract _ status " ! = ' 0 0 ' ] ; then <nl> + echo " $ 0 failed to extract words ( $ location as $ words _ rpm ) ( $ rpm _ extract _ status ) " <nl> + rm - f " $ words _ rpm " " $ dict " <nl> + exit 5 <nl> + fi <nl> + rm " $ words _ rpm " <nl> fi <nl> <nl> - if [ ! - e $ word _ splitter ] ; then <nl> + if [ ! - e " $ word _ splitter " ] ; then <nl> echo " Retrieve w " <nl> - curl - s https : / / raw . githubusercontent . com / jsoref / spelling / master / w | \ <nl> - perl - p - n - e " s < / usr / share / dict / words > < $ dict > " > $ word _ splitter <nl> - chmod u + x $ word _ splitter <nl> + w _ location = ' https : / / raw . githubusercontent . com / jsoref / spelling / master / w ' <nl> + curl - s " $ w _ location " | \ <nl> + perl - p - n - e " s < / usr / share / dict / words > < $ dict > " > " $ word _ splitter " <nl> + get _ word _ splitter _ status = " $ { PIPESTATUS [ 0 ] } $ { PIPESTATUS [ 1 ] } " <nl> + if [ " $ get _ word _ splitter _ status " ! = ' 0 0 ' ] ; then <nl> + echo " $ 0 failed to retrieve / adapt word splitter ( $ w _ location ) ( $ get _ word _ splitter _ status ) " <nl> + rm - f " $ word _ splitter " <nl> + exit 6 <nl> + fi <nl> + chmod u + x " $ word _ splitter " <nl> echo " Retrieved . " <nl> - ls - la $ word _ splitter <nl> + ls - la " $ word _ splitter " <nl> fi <nl> <nl> echo " Clean up from previous run " <nl> - rm - f $ run _ output <nl> + rm - f " $ run _ output " <nl> <nl> echo " Run w " <nl> ( git ' ls - files ' - z 2 > / dev / null | | hg locate - 0 ) | \ <nl> - $ spellchecker / exclude . pl | \ <nl> - xargs - 0 $ word _ splitter | \ <nl> - $ word _ splitter | \ <nl> - perl - p - n - e ' s / \ ( . * / / ' > $ run _ output <nl> + " $ spellchecker / exclude . pl " | \ <nl> + xargs - 0 " $ word _ splitter " | \ <nl> + " $ word _ splitter " | \ <nl> + perl - p - n - e ' s / \ ( . * / / ' > " $ run _ output " <nl> word _ splitter _ status = " $ { PIPESTATUS [ 2 ] } $ { PIPESTATUS [ 3 ] } " <nl> if [ " $ word _ splitter _ status " ! = ' 0 0 ' ] ; then <nl> echo " $ word _ splitter failed ( $ word _ splitter _ status ) " <nl> @ @ - 56 , 29 + 80 , 29 @ @ printDetails ( ) { <nl> } <nl> <nl> echo " Review results " <nl> - if [ ! - e $ whitelist _ path ] ; then <nl> + if [ ! - e " $ whitelist _ path " ] ; then <nl> echo " No preexisting $ whitelist _ path file . " <nl> printDetails <nl> - echo " cat > $ whitelist _ path < < EOF = EOF " <nl> - cat $ run _ output <nl> + echo ' cat > ' " $ whitelist _ path " ' < < EOF = EOF ' <nl> + cat " $ run _ output " <nl> echo EOF = EOF <nl> exit 2 <nl> fi <nl> <nl> - diff _ output = ` diff - U1 $ whitelist _ path $ run _ output | grep - v " $ spellchecker " | | true ` <nl> + diff _ output = $ ( diff - U1 " $ whitelist _ path " " $ run _ output " | grep - v " $ spellchecker " | | true ) <nl> <nl> if [ - z " $ diff _ output " ] ; then <nl> echo " No new words and misspellings found . " <nl> exit 0 <nl> fi <nl> <nl> - new _ output = ` diff - i - U0 $ whitelist _ path $ run _ output | grep - v " $ spellchecker " | \ <nl> - perl - n - w - e ' next unless / ^ \ + / ; next if / ^ \ + { 3 } / ; s / ^ . / / ; print ; ' ` <nl> + new _ output = $ ( diff - i - U0 " $ whitelist _ path " " $ run _ output " | grep - v " $ spellchecker " | \ <nl> + perl - n - w - e ' next unless / ^ \ + / ; next if / ^ \ + { 3 } / ; s / ^ . / / ; print ; ' ) <nl> if [ - z " $ new _ output " ] ; then <nl> echo " There are now fewer misspellings than before . " <nl> echo " $ whitelist _ path could be updated : " <nl> echo ' ' <nl> - echo " patch $ whitelist _ path < < EOF " <nl> + echo " patch ' $ whitelist _ path ' < < EOF " <nl> echo " $ diff _ output " <nl> echo " EOF " <nl> sleep 5
NEAREST DIFF (one line): diff - - git a / config / import - control . xml b / config / import - control . xml <nl> index c4ccac8 . . 032fab3 100644 <nl> - - - a / config / import - control . xml <nl> + + + b / config / import - control . xml <nl> @ @ - 5 , 17 + 5 , 6 @ @ <nl> <nl> < import - control pkg = " com . puppycrawl . tools . checkstyle " > <nl> <nl> - < allow pkg = " antlr " / > <nl> - < allow pkg = " com . puppycrawl . tools . checkstyle . api " / > <nl> - < allow pkg = " com . puppycrawl . tools . checkstyle . checks " / > <nl> - < allow pkg = " java . io " / > <nl> - < allow pkg = " java . net " / > <nl> - < allow pkg = " java . util " / > <nl> - < allow pkg = " javax . xml . parsers " / > <nl> - < allow pkg = " org . apache . commons . beanutils " / > <nl> - < allow pkg = " org . apache . commons . logging " / > <nl> - < allow pkg = " org . xml . sax " / > <nl> - <nl> < ! - - Disallowed till https : / / github . com / mojohaus / cobertura - maven - plugin / issues / 29 - - > <nl> < disallow class = " java . util . stream . Stream " / > <nl> < disallow class = " java . util . stream . Stream . Builder " / > <nl> @ @ - 29 , 6 + 18 , 17 @ @ <nl> < disallow class = " java . util . stream . Collector " / > <nl> < disallow class = " java . util . Comparator " / > <nl> <nl> + < allow pkg = " antlr " / > <nl> + < allow pkg = " com . puppycrawl . tools . checkstyle . api " / > <nl> + < allow pkg = " com . puppycrawl . tools . checkstyle . checks " / > <nl> + < allow pkg = " java . io " / > <nl> + < allow pkg = " java . net " / > <nl> + < allow pkg = " java . util " / > <nl> + < allow pkg = " javax . xml . parsers " / > <nl> + < allow pkg = " org . apache . commons . beanutils " / > <nl> + < allow pkg = " org . apache . commons . logging " / > <nl> + < allow pkg = " org . xml . sax " / > <nl> + <nl> < ! - - The local ones - - > <nl> < allow pkg = " java . lang . reflect " local - only = " true " / > <nl> < allow pkg = " java . nio " local - only = " true " / > <nl> @ @ - 70 , 12 + 70 , 13 @ @ <nl> < / subpackage > <nl> <nl> < subpackage name = " ant " > <nl> - < allow pkg = " org . apache . tools . ant " local - only = " true " / > <nl> - < allow pkg = " com . puppycrawl . tools . checkstyle " / > <nl> < disallow pkg = " com . puppycrawl . tools . checkstyle . checks " / > <nl> < disallow pkg = " com . puppycrawl . tools . checkstyle . filters " / > <nl> < disallow pkg = " com . puppycrawl . tools . checkstyle . gui " / > <nl> <nl> + < allow pkg = " org . apache . tools . ant " local - only = " true " / > <nl> + < allow pkg = " com . puppycrawl . tools . checkstyle " / > <nl> + <nl> < ! - - allowed till https : / / github . com / checkstyle / checkstyle / issues / 3455 - - > <nl> < allow class = " com . google . common . io . Closeables " local - only = " true " / > <nl> < / subpackage > <nl> @ @ - 140 , 12 + 141 , 13 @ @ <nl> < / subpackage > <nl> <nl> < subpackage name = " filters " > <nl> + < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . checks \ . [ ^ . ] + " regex = " true " / > <nl> + <nl> < allow pkg = " net . sf . saxon " / > <nl> < allow class = " java . lang . ref . WeakReference " local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent " local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerFilter " local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . XmlLoader " local - only = " true " / > <nl> - < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . checks \ . [ ^ . ] + " regex = " true " / > <nl> < allow pkg = " com . puppycrawl . tools . checkstyle . utils " / > <nl> < allow pkg = " com . puppycrawl . tools . checkstyle . xpath " / > <nl> < allow class = " java . nio . charset . StandardCharsets " local - only = " true " / >

TEST DIFF:
diff - - git a / . ci / test - spelling - unknown - words . sh b / . ci / test - spelling - unknown - words . sh 
 index 7f6e279 . . 6cc9131 100755 
 - - - a / . ci / test - spelling - unknown - words . sh 
 + + + b / . ci / test - spelling - unknown - words . sh 
 @ @ - 1 , 49 + 1 , 73 @ @ 
 # ! / bin / bash 
 # This CI acceptance test is based on : 
 - # https : / / github . com / jsoref / spelling / blob / 04648bdc63723e5cdf5cbeaff2225a462807abc8 
 + # https : / / github . com / jsoref / spelling / tree / 04648bdc63723e5cdf5cbeaff2225a462807abc8 
 # It is conceptually ` f ` which runs ` w ` ( spelling - unknown - word - splitter ) 
 # plus ` fchurn ` which uses ` dn ` mostly rolled together . 
 set - e 
 
 - spellchecker = . ci / jsoref - spellchecker 
 - temp = . ci - temp 
 - whitelist _ path = $ spellchecker / whitelist . words 
 - dict = $ temp / english . words 
 - word _ splitter = $ spellchecker / spelling - unknown - word - splitter . pl 
 - run _ output = $ spellchecker / unknown . words 
 - if [ ! - e $ dict ] ; then 
 - mkdir - p $ temp 
 + spellchecker = ' . ci / jsoref - spellchecker ' 
 + temp = ' . ci - temp ' 
 + whitelist _ path = " $ spellchecker / whitelist . words " 
 + dict = " $ temp / english . words " 
 + word _ splitter = " $ spellchecker / spelling - unknown - word - splitter . pl " 
 + run _ output = " $ spellchecker / unknown . words " 
 + if [ ! - e " $ dict " ] ; then 
 + mkdir - p " $ temp " 
 echo " Retrieve . / usr / share / dict / linux . words " 
 - words _ rpm = $ temp / words . rpm 
 + words _ rpm = " $ temp / words . rpm " 
 mirror = " https : / / rpmfind . net " 
 file _ path = " / linux / fedora / linux / development / rawhide / Everything / aarch64 / os / Packages / w / " 
 - file _ name = $ ( curl - s " $ { mirror } $ { file _ path } " | grep - o " words - . * . noarch . rpm " ) 
 - curl " $ { mirror } $ { file _ path } $ { file _ name } " - o $ words _ rpm 
 - $ spellchecker / rpm2cpio . sh $ words _ rpm | \ 
 + location = " $ { mirror } $ { file _ path } " 
 + file _ name = " $ ( curl - s " $ location " | grep - o " words - . * . noarch . rpm " | | echo " " ) " 
 + if [ - z " $ file _ name " ] ; then 
 + echo " $ 0 failed to retrieve url for words package from $ location " 
 + exit 3 
 + fi 
 + location = " $ { mirror } $ { file _ path } $ { file _ name } " 
 + curl " $ location " - o " $ words _ rpm " 
 + if ! " $ spellchecker / rpm2cpio . sh " " $ words _ rpm " | \ 
 perl - e ' $ / = " \ 0 " ; while ( < > ) { if ( / ^ 0707 / ) { $ state = ( m ! \ . / usr / share / dict / linux . words ! ) } 
 elsif ( $ state = = 1 ) { print } } ' \ 
 - > $ dict 
 - rm $ words _ rpm 
 + > " $ dict " ; then 
 + rpm _ extract _ status = " $ { PIPESTATUS [ 0 ] } $ { PIPESTATUS [ 1 ] } " 
 + rm - f " $ words _ rpm " " $ dict " 
 + echo " $ 0 failed to extract words ( $ location as $ words _ rpm ) ( $ rpm _ extract _ status ) " 
 + exit 4 
 + fi 
 + rpm _ extract _ status = " $ { PIPESTATUS [ 0 ] } $ { PIPESTATUS [ 1 ] } " 
 + if [ " $ rpm _ extract _ status " ! = ' 0 0 ' ] ; then 
 + echo " $ 0 failed to extract words ( $ location as $ words _ rpm ) ( $ rpm _ extract _ status ) " 
 + rm - f " $ words _ rpm " " $ dict " 
 + exit 5 
 + fi 
 + rm " $ words _ rpm " 
 fi 
 
 - if [ ! - e $ word _ splitter ] ; then 
 + if [ ! - e " $ word _ splitter " ] ; then 
 echo " Retrieve w " 
 - curl - s https : / / raw . githubusercontent . com / jsoref / spelling / master / w | \ 
 - perl - p - n - e " s < / usr / share / dict / words > < $ dict > " > $ word _ splitter 
 - chmod u + x $ word _ splitter 
 + w _ location = ' https : / / raw . githubusercontent . com / jsoref / spelling / master / w ' 
 + curl - s " $ w _ location " | \ 
 + perl - p - n - e " s < / usr / share / dict / words > < $ dict > " > " $ word _ splitter " 
 + get _ word _ splitter _ status = " $ { PIPESTATUS [ 0 ] } $ { PIPESTATUS [ 1 ] } " 
 + if [ " $ get _ word _ splitter _ status " ! = ' 0 0 ' ] ; then 
 + echo " $ 0 failed to retrieve / adapt word splitter ( $ w _ location ) ( $ get _ word _ splitter _ status ) " 
 + rm - f " $ word _ splitter " 
 + exit 6 
 + fi 
 + chmod u + x " $ word _ splitter " 
 echo " Retrieved . " 
 - ls - la $ word _ splitter 
 + ls - la " $ word _ splitter " 
 fi 
 
 echo " Clean up from previous run " 
 - rm - f $ run _ output 
 + rm - f " $ run _ output " 
 
 echo " Run w " 
 ( git ' ls - files ' - z 2 > / dev / null | | hg locate - 0 ) | \ 
 - $ spellchecker / exclude . pl | \ 
 - xargs - 0 $ word _ splitter | \ 
 - $ word _ splitter | \ 
 - perl - p - n - e ' s / \ ( . * / / ' > $ run _ output 
 + " $ spellchecker / exclude . pl " | \ 
 + xargs - 0 " $ word _ splitter " | \ 
 + " $ word _ splitter " | \ 
 + perl - p - n - e ' s / \ ( . * / / ' > " $ run _ output " 
 word _ splitter _ status = " $ { PIPESTATUS [ 2 ] } $ { PIPESTATUS [ 3 ] } " 
 if [ " $ word _ splitter _ status " ! = ' 0 0 ' ] ; then 
 echo " $ word _ splitter failed ( $ word _ splitter _ status ) " 
 @ @ - 56 , 29 + 80 , 29 @ @ printDetails ( ) { 
 } 
 
 echo " Review results " 
 - if [ ! - e $ whitelist _ path ] ; then 
 + if [ ! - e " $ whitelist _ path " ] ; then 
 echo " No preexisting $ whitelist _ path file . " 
 printDetails 
 - echo " cat > $ whitelist _ path < < EOF = EOF " 
 - cat $ run _ output 
 + echo ' cat > ' " $ whitelist _ path " ' < < EOF = EOF ' 
 + cat " $ run _ output " 
 echo EOF = EOF 
 exit 2 
 fi 
 
 - diff _ output = ` diff - U1 $ whitelist _ path $ run _ output | grep - v " $ spellchecker " | | true ` 
 + diff _ output = $ ( diff - U1 " $ whitelist _ path " " $ run _ output " | grep - v " $ spellchecker " | | true ) 
 
 if [ - z " $ diff _ output " ] ; then 
 echo " No new words and misspellings found . " 
 exit 0 
 fi 
 
 - new _ output = ` diff - i - U0 $ whitelist _ path $ run _ output | grep - v " $ spellchecker " | \ 
 - perl - n - w - e ' next unless / ^ \ + / ; next if / ^ \ + { 3 } / ; s / ^ . / / ; print ; ' ` 
 + new _ output = $ ( diff - i - U0 " $ whitelist _ path " " $ run _ output " | grep - v " $ spellchecker " | \ 
 + perl - n - w - e ' next unless / ^ \ + / ; next if / ^ \ + { 3 } / ; s / ^ . / / ; print ; ' ) 
 if [ - z " $ new _ output " ] ; then 
 echo " There are now fewer misspellings than before . " 
 echo " $ whitelist _ path could be updated : " 
 echo ' ' 
 - echo " patch $ whitelist _ path < < EOF " 
 + echo " patch ' $ whitelist _ path ' < < EOF " 
 echo " $ diff _ output " 
 echo " EOF " 
 sleep 5

NEAREST DIFF:
diff - - git a / config / import - control . xml b / config / import - control . xml 
 index c4ccac8 . . 032fab3 100644 
 - - - a / config / import - control . xml 
 + + + b / config / import - control . xml 
 @ @ - 5 , 17 + 5 , 6 @ @ 
 
 < import - control pkg = " com . puppycrawl . tools . checkstyle " > 
 
 - < allow pkg = " antlr " / > 
 - < allow pkg = " com . puppycrawl . tools . checkstyle . api " / > 
 - < allow pkg = " com . puppycrawl . tools . checkstyle . checks " / > 
 - < allow pkg = " java . io " / > 
 - < allow pkg = " java . net " / > 
 - < allow pkg = " java . util " / > 
 - < allow pkg = " javax . xml . parsers " / > 
 - < allow pkg = " org . apache . commons . beanutils " / > 
 - < allow pkg = " org . apache . commons . logging " / > 
 - < allow pkg = " org . xml . sax " / > 
 - 
 < ! - - Disallowed till https : / / github . com / mojohaus / cobertura - maven - plugin / issues / 29 - - > 
 < disallow class = " java . util . stream . Stream " / > 
 < disallow class = " java . util . stream . Stream . Builder " / > 
 @ @ - 29 , 6 + 18 , 17 @ @ 
 < disallow class = " java . util . stream . Collector " / > 
 < disallow class = " java . util . Comparator " / > 
 
 + < allow pkg = " antlr " / > 
 + < allow pkg = " com . puppycrawl . tools . checkstyle . api " / > 
 + < allow pkg = " com . puppycrawl . tools . checkstyle . checks " / > 
 + < allow pkg = " java . io " / > 
 + < allow pkg = " java . net " / > 
 + < allow pkg = " java . util " / > 
 + < allow pkg = " javax . xml . parsers " / > 
 + < allow pkg = " org . apache . commons . beanutils " / > 
 + < allow pkg = " org . apache . commons . logging " / > 
 + < allow pkg = " org . xml . sax " / > 
 + 
 < ! - - The local ones - - > 
 < allow pkg = " java . lang . reflect " local - only = " true " / > 
 < allow pkg = " java . nio " local - only = " true " / > 
 @ @ - 70 , 12 + 70 , 13 @ @ 
 < / subpackage > 
 
 < subpackage name = " ant " > 
 - < allow pkg = " org . apache . tools . ant " local - only = " true " / > 
 - < allow pkg = " com . puppycrawl . tools . checkstyle " / > 
 < disallow pkg = " com . puppycrawl . tools . checkstyle . checks " / > 
 < disallow pkg = " com . puppycrawl . tools . checkstyle . filters " / > 
 < disallow pkg = " com . puppycrawl . tools . checkstyle . gui " / > 
 
 + < allow pkg = " org . apache . tools . ant " local - only = " true " / > 
 + < allow pkg = " com . puppycrawl . tools . checkstyle " / > 
 + 
 < ! - - allowed till https : / / github . com / checkstyle / checkstyle / issues / 3455 - - > 
 < allow class = " com . google . common . io . Closeables " local - only = " true " / > 
 < / subpackage > 
 @ @ - 140 , 12 + 141 , 13 @ @ 
 < / subpackage > 
 
 < subpackage name = " filters " > 
 + < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . checks \ . [ ^ . ] + " regex = " true " / > 
 + 
 < allow pkg = " net . sf . saxon " / > 
 < allow class = " java . lang . ref . WeakReference " local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent " local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . TreeWalkerFilter " local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . XmlLoader " local - only = " true " / > 
 - < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . checks \ . [ ^ . ] + " regex = " true " / > 
 < allow pkg = " com . puppycrawl . tools . checkstyle . utils " / > 
 < allow pkg = " com . puppycrawl . tools . checkstyle . xpath " / > 
 < allow class = " java . nio . charset . StandardCharsets " local - only = " true " / >
