BLEU SCORE: 0.05265261421119587

TEST MSG: Issue # 6516 : recognized javadocs on method with type parameter
GENERATED MSG: Issue # 2387 : Do not recognize ' / * * / ' as valid Javadoc

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java <nl> index 0152353 . . a949fdd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java <nl> @ @ - 231 , 7 + 231 , 8 @ @ public final class BlockCommentPosition { <nl> parent = parent . getParent ( ) ; <nl> } <nl> return parent ! = null <nl> - & & parent . getType ( ) = = TokenTypes . TYPE <nl> + & & ( parent . getType ( ) = = TokenTypes . TYPE <nl> + | | parent . getType ( ) = = TokenTypes . TYPE _ PARAMETERS ) <nl> & & parent . getParent ( ) . getType ( ) = = memberType <nl> / / previous parent sibling is always TokenTypes . MODIFIERS <nl> & & parent . getPreviousSibling ( ) . getChildCount ( ) = = 0 ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java <nl> index 9a92439 . . b80cc1b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java <nl> @ @ - 75 , 6 + 75 , 7 @ @ public class SummaryJavadocCheckTest extends AbstractModuleTestSupport { <nl> " 121 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> " 126 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> " 132 : " + getCheckMessage ( MSG _ SUMMARY _ FIRST _ SENTENCE ) , <nl> + " 137 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputSummaryJavadocIncorrect . java " ) , expected ) ; <nl> } <nl> @ @ - 115 , 6 + 116 , 7 @ @ public class SummaryJavadocCheckTest extends AbstractModuleTestSupport { <nl> " 121 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> " 126 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> " 132 : " + getCheckMessage ( MSG _ SUMMARY _ FIRST _ SENTENCE ) , <nl> + " 137 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , <nl> } ; <nl> <nl> createChecker ( checkConfig ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java <nl> index 83c2964 . . 0d76d4a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class BlockCommentPositionTest extends AbstractPathTestSupport { <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnClass . java " , <nl> BlockCommentPosition : : isOnClass , 3 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnMethod . java " , <nl> - BlockCommentPosition : : isOnMethod , 4 ) , <nl> + BlockCommentPosition : : isOnMethod , 5 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnField . java " , <nl> BlockCommentPosition : : isOnField , 3 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnEnum . java " , <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java <nl> index 84f8b9a . . 937862a 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java <nl> @ @ - 133 , 4 + 133 , 7 @ @ class InputSummaryJavadocIncorrect { <nl> * M m m m { @ inheritDoc } <nl> * / <nl> void foo7 ( ) { } <nl> + <nl> + / * * * / <nl> + < T > T foo8 ( T t ) { return null ; } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java <nl> index 06e4f4d . . ef496d6 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java <nl> @ @ - 29 , 4 + 29 , 11 @ @ public class InputBlockCommentPositionOnMethod { <nl> java . lang . String method3 ( ) { <nl> return null ; <nl> } <nl> + <nl> + / * * <nl> + * I ' m a javadoc <nl> + * / <nl> + < T > T method4 ( T t ) { <nl> + return null ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / IndentationCorrectWhileDoWhileAndParameterInput . java b / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / IndentationCorrectWhileDoWhileAndParameterInput . java <nl> deleted file mode 100644 <nl> index e454c5e . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / IndentationCorrectWhileDoWhileAndParameterInput . java <nl> + + + / dev / null <nl> @ @ - 1 , 220 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . indentation ; / / indent : 0 ; exp : 0 ; ok <nl> - <nl> - class FooWhileClass { / / indent : 0 ; exp : 0 ; ok <nl> - <nl> - String getString ( int someInt , String someString ) { / / indent : 2 ; exp : 2 ; ok <nl> - return " String " ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - void fooMethodWithIf ( ) { / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 4 ; exp : 4 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 8 ; exp : 8 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 11 ; exp : > 8 ; ok <nl> - new InnerClassFoo ( ) ) ) { } / / indent : 10 ; exp : > 8 ; ok <nl> - <nl> - do { / / indent : 4 ; exp : 4 ; ok <nl> - 	 <nl> - } while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 4 ; exp : 4 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 9 ; exp : > 8 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 15 ; exp : > 8 ; ok <nl> - new InnerClassFoo ( ) ) ) ; / / indent : 10 ; exp : > 8 ; ok <nl> - <nl> - while ( conditionSecond ( 10000000000 . 0 , new / / indent : 4 ; exp : 4 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 9 ; exp : > 8 ; ok <nl> - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 8 ; exp : 8 ; ok <nl> - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 11 ; exp : > 8 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 8 ; exp : 8 ; ok <nl> - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 14 ; exp : > 8 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 8 ; exp : 8 ; ok <nl> - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 8 ; exp : 8 ; ok <nl> - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( / / indent : 12 ; exp : > 8 ; ok <nl> - getString ( 2048 , " Looo " / / indent : 12 ; exp : > 8 ; ok <nl> - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 8 ; exp : 8 ; ok <nl> - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 8 ; exp : 8 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 11 ; exp : > 8 ; ok <nl> - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 8 ; exp : 8 ; ok <nl> - | | conditionNoArg ( ) | | / / indent : 10 ; exp : > 8 ; ok <nl> - conditionNoArg ( ) | | conditionNoArg ( ) ) { } / / indent : 8 ; exp : 8 ; ok <nl> - <nl> - do { / / indent : 4 ; exp : 4 ; ok <nl> - 	 <nl> - } while ( conditionSecond ( 10000000000 . 0 , new / / indent : 4 ; exp : 4 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 10 ; exp : > 8 ; ok <nl> - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 10 ; exp : > 8 ; ok <nl> - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 8 ; exp : 8 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 13 ; exp : > 8 ; ok <nl> - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 8 ; exp : 8 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 11 ; exp : > 8 ; ok <nl> - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 8 ; exp : 8 ; ok <nl> - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 8 ; exp : 8 ; ok <nl> - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 8 ; exp : 8 ; ok <nl> - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 8 ; exp : 8 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 11 ; exp : > 8 ; ok <nl> - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 8 ; exp : 8 ; ok <nl> - | | conditionNoArg ( ) | | / / indent : 13 ; exp : > 8 ; ok <nl> - conditionNoArg ( ) | | conditionNoArg ( ) ) ; / / indent : 8 ; exp : 8 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - private boolean conditionFirst ( String longString , int / / indent : 2 ; exp : 2 ; ok <nl> - integer , InnerClassFoo someInstance ) { / / indent : 6 ; exp : 6 ; ok <nl> - return false ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - private boolean conditionSecond ( double longLongLongDoubleValue , / / indent : 2 ; exp : 2 ; ok <nl> - String longLongLongString , String secondLongLongString ) { / / indent : 6 ; exp : 6 ; ok <nl> - return false ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - private boolean conditionThird ( long veryLongValue ) { / / indent : 2 ; exp : 2 ; ok <nl> - return false ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - private boolean conditionFourth ( boolean flag ) { / / indent : 2 ; exp : 2 ; ok <nl> - return false ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - private boolean conditionFifth ( boolean flag1 , boolean flag2 ) { / / indent : 2 ; exp : 2 ; ok <nl> - return false ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - private boolean conditionSixth ( boolean flag , / / indent : 2 ; exp : 2 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName instance ) { / / indent : 6 ; exp : 6 ; ok <nl> - return false ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - private boolean conditionNoArg ( ) { / / indent : 2 ; exp : 2 ; ok <nl> - return false ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - class InnerClassFoo { / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - void fooMethodWithIf ( ) { / / indent : 4 ; exp : 4 ; ok <nl> - while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 6 ; exp : 6 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 10 ; exp : 10 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 14 ; exp : > 10 ; ok <nl> - new InnerClassFoo ( ) ) ) { } / / indent : 14 ; exp : > 10 ; ok <nl> - <nl> - do { / / indent : 6 ; exp : 6 ; ok <nl> - / * Do somethig * / <nl> - } while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 6 ; exp : 6 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 10 ; exp : 10 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 14 ; exp : > 10 ; ok <nl> - new InnerClassFoo ( ) ) ) ; / / indent : 14 ; exp : > 10 ; ok <nl> - <nl> - while ( conditionSecond ( 10000000000 . 0 , new / / indent : 6 ; exp : 6 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 10 ; exp : 10 ; ok <nl> - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 10 ; exp : 10 ; ok <nl> - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 10 ; exp : 10 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 10 ; exp : 10 ; ok <nl> - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 10 ; exp : 10 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 10 ; exp : 10 ; ok <nl> - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 12 ; exp : > 10 ; ok <nl> - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 12 ; exp : > 10 ; ok <nl> - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 12 ; exp : > 10 ; ok <nl> - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 12 ; exp : > 10 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 14 ; exp : > 10 ; ok <nl> - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 14 ; exp : > 10 ; ok <nl> - | | conditionNoArg ( ) | | / / indent : 14 ; exp : > 10 ; ok <nl> - conditionNoArg ( ) | | conditionNoArg ( ) ) { } / / indent : 14 ; exp : > 10 ; ok <nl> - <nl> - do { <nl> - 	 / * Do smth * / <nl> - } while ( conditionSecond ( 10000000000 . 0 , new / / indent : 6 ; exp : 6 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 10 ; exp : 10 ; ok <nl> - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 10 ; exp : 10 ; ok <nl> - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 10 ; exp : 10 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 10 ; exp : 10 ; ok <nl> - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 10 ; exp : 10 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 10 ; exp : 10 ; ok <nl> - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 12 ; exp : > 10 ; ok <nl> - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 12 ; exp : > 10 ; ok <nl> - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 12 ; exp : > 10 ; ok <nl> - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 12 ; exp : > 10 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 14 ; exp : > 10 ; ok <nl> - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 14 ; exp : > 10 ; ok <nl> - | | conditionNoArg ( ) | | / / indent : 14 ; exp : > 10 ; ok <nl> - conditionNoArg ( ) | | conditionNoArg ( ) ) ; / / indent : 14 ; exp : > 10 ; ok <nl> - } / / indent : 4 ; exp : 4 ; ok <nl> - <nl> - FooWhileClass anonymousClass = new FooWhileClass ( ) { / / indent : 4 ; exp : 4 ; ok <nl> - <nl> - void fooMethodWithIf ( String stringStringStringStringLooooongString , / / indent : 6 ; exp : 6 ; ok <nl> - int intIntIntVeryLongNameForIntVariable , boolean / / indent : 10 ; exp : 10 ; ok <nl> - fooooooooobooleanBooleanVeryLongName ) { / / indent : 14 ; exp : > 10 ; ok <nl> - <nl> - while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 8 ; exp : 8 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 12 ; exp : 12 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 16 ; exp : > 12 ; ok <nl> - new InnerClassFoo ( ) ) ) { } / / indent : 19 ; exp : > 12 ; ok <nl> - <nl> - do { / / indent : 8 ; exp : 8 ; ok <nl> - / * Do smth * / <nl> - } while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 8 ; exp : 8 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 12 ; exp : 12 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 16 ; exp : > 12 ; ok <nl> - new InnerClassFoo ( ) ) ) ; / / indent : 19 ; exp : > 12 ; ok <nl> - <nl> - while ( conditionSecond ( 10000000000 . 0 , new / / indent : 8 ; exp : 8 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 12 ; exp : 12 ; ok <nl> - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 12 ; exp : 12 ; ok <nl> - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 12 ; exp : 12 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 12 ; exp : 12 ; ok <nl> - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 12 ; exp : 12 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 12 ; exp : 12 ; ok <nl> - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 14 ; exp : > 12 ; ok <nl> - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 14 ; exp : > 12 ; ok <nl> - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 14 ; exp : > 12 ; ok <nl> - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 14 ; exp : > 12 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 16 ; exp : > 12 ; ok <nl> - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 16 ; exp : > 12 ; ok <nl> - | | conditionNoArg ( ) | | / / indent : 16 ; exp : > 12 ; ok <nl> - conditionNoArg ( ) | | conditionNoArg ( ) / / indent : 18 ; exp : > 12 ; ok <nl> - & & fooooooooobooleanBooleanVeryLongName ) { } / / indent : 21 ; exp : > 12 ; ok <nl> - <nl> - do { / / indent : 8 ; exp : 8 ; ok <nl> - / * Do smth * / <nl> - } while ( conditionSecond ( 10000000000 . 0 , new / / indent : 8 ; exp : 8 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 12 ; exp : 12 ; ok <nl> - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 12 ; exp : 12 ; ok <nl> - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 12 ; exp : 12 ; ok <nl> - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 12 ; exp : 12 ; ok <nl> - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 12 ; exp : 12 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 12 ; exp : 12 ; ok <nl> - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 14 ; exp : > 12 ; ok <nl> - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 14 ; exp : > 12 ; ok <nl> - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 14 ; exp : > 12 ; ok <nl> - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 14 ; exp : > 12 ; ok <nl> - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 16 ; exp : > 12 ; ok <nl> - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 16 ; exp : > 12 ; ok <nl> - | | conditionNoArg ( ) | | / / indent : 16 ; exp : > 12 ; ok <nl> - conditionNoArg ( ) | | conditionNoArg ( ) / / indent : 18 ; exp : > 12 ; ok <nl> - & & fooooooooobooleanBooleanVeryLongName ) ; / / indent : 21 ; exp : > 12 ; ok <nl> - } / / indent : 6 ; exp : 6 ; ok <nl> - } ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - } <nl> - <nl> - class SecondWhileClassWithVeryVeryVeryLongName { / / indent : 0 ; exp : 0 ; ok <nl> - <nl> - public SecondWhileClassWithVeryVeryVeryLongName ( String string ) { / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - String getString ( FooWhileClass instance , int integer ) { / / indent : 2 ; exp : 2 ; ok <nl> - return " String " ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - int getInteger ( FooWhileClass instance , String string ) { / / indent : 2 ; exp : 2 ; ok <nl> - return - 1 ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - boolean getBoolean ( FooWhileClass instance , boolean flag ) { / / indent : 2 ; exp : 2 ; ok <nl> - return false ; / / indent : 4 ; exp : 4 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - <nl> - SecondWhileClassWithVeryVeryVeryLongName getInstanse ( ) { / / indent : 2 ; exp : 2 ; ok <nl> - return new SecondWhileClassWithVeryVeryVeryLongName ( " VeryLoooooooooo " / / indent : 4 ; exp : 4 ; ok <nl> - + " oongString " ) ; / / indent : 8 ; exp : 8 ; ok <nl> - } / / indent : 2 ; exp : 2 ; ok <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / InputValidBinaryOpIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / InputValidBinaryOpIndent . java <nl> deleted file mode 100644 <nl> index 979c160 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / InputValidBinaryOpIndent . java <nl> + + + / dev / null <nl> @ @ - 1 , 83 + 0 , 0 @ @ <nl> - / * <nl> - * InputValidBinaryOpIndent . java <nl> - * <nl> - * Created on December 2 , 2002 , 10 : 24 PM <nl> - * / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . indentation ; / / indent : 0 exp : 0 <nl> - <nl> - / * * <nl> - * <nl> - * @ author jrichard <nl> - * / <nl> - public class InputValidBinaryOpIndent { / / indent : 0 exp : 0 <nl> - <nl> - / * * Creates a new instance of InputValidBinaryOpIndent * / <nl> - public InputValidBinaryOpIndent ( ) { <nl> - } <nl> - <nl> - private void method1 ( ) { <nl> - boolean test = true ; <nl> - int i , j , k = 4 ; <nl> - int x = 4 ; <nl> - int y = 7 ; <nl> - <nl> - i = x + k ; <nl> - <nl> - j = y + x <nl> - + k ; <nl> - <nl> - int one = 1 , two = 2 , three = 3 , four = 4 ; <nl> - int answer ; <nl> - <nl> - answer = ( one + one ) / 2 ; <nl> - <nl> - answer = ( one <nl> - + one ) / 2 ; <nl> - <nl> - answer = ( one + one ) <nl> - / 2 ; <nl> - <nl> - answer = <nl> - ( one + one ) <nl> - / 2 ; <nl> - <nl> - answer = <nl> - ( ( one + one ) <nl> - / 2 ) + 4 ; <nl> - <nl> - <nl> - if ( one + one = = two ) { <nl> - System . out . println ( " true " ) ; <nl> - } <nl> - <nl> - if ( one + one <nl> - = = two ) { <nl> - } <nl> - <nl> - if ( one + one = = two & & 1 + 1 = = two ) { <nl> - } <nl> - <nl> - if ( one + one = = two <nl> - & & 1 + 1 = = two ) { <nl> - } <nl> - <nl> - if ( ( one <nl> - + one ) = = two & & ( 1 + 1 ) = = two ) { <nl> - } <nl> - <nl> - if ( ( one + one ) <nl> - = = two <nl> - & & ( 1 + 1 ) = = two ) { <nl> - } <nl> - <nl> - if ( ( one + one ) <nl> - = = two <nl> - & & <nl> - ( 1 + 1 ) = = two ) { <nl> - } <nl> - <nl> - <nl> - } <nl> - <nl> - }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java 
 index 0152353 . . a949fdd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java 
 @ @ - 231 , 7 + 231 , 8 @ @ public final class BlockCommentPosition { 
 parent = parent . getParent ( ) ; 
 } 
 return parent ! = null 
 - & & parent . getType ( ) = = TokenTypes . TYPE 
 + & & ( parent . getType ( ) = = TokenTypes . TYPE 
 + | | parent . getType ( ) = = TokenTypes . TYPE _ PARAMETERS ) 
 & & parent . getParent ( ) . getType ( ) = = memberType 
 / / previous parent sibling is always TokenTypes . MODIFIERS 
 & & parent . getPreviousSibling ( ) . getChildCount ( ) = = 0 ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java 
 index 9a92439 . . b80cc1b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheckTest . java 
 @ @ - 75 , 6 + 75 , 7 @ @ public class SummaryJavadocCheckTest extends AbstractModuleTestSupport { 
 " 121 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 " 126 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 " 132 : " + getCheckMessage ( MSG _ SUMMARY _ FIRST _ SENTENCE ) , 
 + " 137 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputSummaryJavadocIncorrect . java " ) , expected ) ; 
 } 
 @ @ - 115 , 6 + 116 , 7 @ @ public class SummaryJavadocCheckTest extends AbstractModuleTestSupport { 
 " 121 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 " 126 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 " 132 : " + getCheckMessage ( MSG _ SUMMARY _ FIRST _ SENTENCE ) , 
 + " 137 : " + getCheckMessage ( MSG _ SUMMARY _ JAVADOC _ MISSING ) , 
 } ; 
 
 createChecker ( checkConfig ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java 
 index 83c2964 . . 0d76d4a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class BlockCommentPositionTest extends AbstractPathTestSupport { 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnClass . java " , 
 BlockCommentPosition : : isOnClass , 3 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnMethod . java " , 
 - BlockCommentPosition : : isOnMethod , 4 ) , 
 + BlockCommentPosition : : isOnMethod , 5 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnField . java " , 
 BlockCommentPosition : : isOnField , 3 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnEnum . java " , 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java 
 index 84f8b9a . . 937862a 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / summaryjavadoc / InputSummaryJavadocIncorrect . java 
 @ @ - 133 , 4 + 133 , 7 @ @ class InputSummaryJavadocIncorrect { 
 * M m m m { @ inheritDoc } 
 * / 
 void foo7 ( ) { } 
 + 
 + / * * * / 
 + < T > T foo8 ( T t ) { return null ; } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java 
 index 06e4f4d . . ef496d6 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java 
 @ @ - 29 , 4 + 29 , 11 @ @ public class InputBlockCommentPositionOnMethod { 
 java . lang . String method3 ( ) { 
 return null ; 
 } 
 + 
 + / * * 
 + * I ' m a javadoc 
 + * / 
 + < T > T method4 ( T t ) { 
 + return null ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / IndentationCorrectWhileDoWhileAndParameterInput . java b / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / IndentationCorrectWhileDoWhileAndParameterInput . java 
 deleted file mode 100644 
 index e454c5e . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / IndentationCorrectWhileDoWhileAndParameterInput . java 
 + + + / dev / null 
 @ @ - 1 , 220 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . indentation ; / / indent : 0 ; exp : 0 ; ok 
 - 
 - class FooWhileClass { / / indent : 0 ; exp : 0 ; ok 
 - 
 - String getString ( int someInt , String someString ) { / / indent : 2 ; exp : 2 ; ok 
 - return " String " ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - void fooMethodWithIf ( ) { / / indent : 2 ; exp : 2 ; ok 
 - 
 - while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 4 ; exp : 4 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 8 ; exp : 8 ; ok 
 - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 11 ; exp : > 8 ; ok 
 - new InnerClassFoo ( ) ) ) { } / / indent : 10 ; exp : > 8 ; ok 
 - 
 - do { / / indent : 4 ; exp : 4 ; ok 
 - 	 
 - } while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 4 ; exp : 4 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 9 ; exp : > 8 ; ok 
 - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 15 ; exp : > 8 ; ok 
 - new InnerClassFoo ( ) ) ) ; / / indent : 10 ; exp : > 8 ; ok 
 - 
 - while ( conditionSecond ( 10000000000 . 0 , new / / indent : 4 ; exp : 4 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 9 ; exp : > 8 ; ok 
 - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 8 ; exp : 8 ; ok 
 - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 11 ; exp : > 8 ; ok 
 - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 8 ; exp : 8 ; ok 
 - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 14 ; exp : > 8 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 8 ; exp : 8 ; ok 
 - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 8 ; exp : 8 ; ok 
 - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( / / indent : 12 ; exp : > 8 ; ok 
 - getString ( 2048 , " Looo " / / indent : 12 ; exp : > 8 ; ok 
 - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 8 ; exp : 8 ; ok 
 - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 8 ; exp : 8 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 11 ; exp : > 8 ; ok 
 - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 8 ; exp : 8 ; ok 
 - | | conditionNoArg ( ) | | / / indent : 10 ; exp : > 8 ; ok 
 - conditionNoArg ( ) | | conditionNoArg ( ) ) { } / / indent : 8 ; exp : 8 ; ok 
 - 
 - do { / / indent : 4 ; exp : 4 ; ok 
 - 	 
 - } while ( conditionSecond ( 10000000000 . 0 , new / / indent : 4 ; exp : 4 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 10 ; exp : > 8 ; ok 
 - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 10 ; exp : > 8 ; ok 
 - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 8 ; exp : 8 ; ok 
 - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 13 ; exp : > 8 ; ok 
 - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 8 ; exp : 8 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 11 ; exp : > 8 ; ok 
 - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 8 ; exp : 8 ; ok 
 - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 8 ; exp : 8 ; ok 
 - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 8 ; exp : 8 ; ok 
 - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 8 ; exp : 8 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 11 ; exp : > 8 ; ok 
 - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 8 ; exp : 8 ; ok 
 - | | conditionNoArg ( ) | | / / indent : 13 ; exp : > 8 ; ok 
 - conditionNoArg ( ) | | conditionNoArg ( ) ) ; / / indent : 8 ; exp : 8 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - private boolean conditionFirst ( String longString , int / / indent : 2 ; exp : 2 ; ok 
 - integer , InnerClassFoo someInstance ) { / / indent : 6 ; exp : 6 ; ok 
 - return false ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - private boolean conditionSecond ( double longLongLongDoubleValue , / / indent : 2 ; exp : 2 ; ok 
 - String longLongLongString , String secondLongLongString ) { / / indent : 6 ; exp : 6 ; ok 
 - return false ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - private boolean conditionThird ( long veryLongValue ) { / / indent : 2 ; exp : 2 ; ok 
 - return false ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - private boolean conditionFourth ( boolean flag ) { / / indent : 2 ; exp : 2 ; ok 
 - return false ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - private boolean conditionFifth ( boolean flag1 , boolean flag2 ) { / / indent : 2 ; exp : 2 ; ok 
 - return false ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - private boolean conditionSixth ( boolean flag , / / indent : 2 ; exp : 2 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName instance ) { / / indent : 6 ; exp : 6 ; ok 
 - return false ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - private boolean conditionNoArg ( ) { / / indent : 2 ; exp : 2 ; ok 
 - return false ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - class InnerClassFoo { / / indent : 2 ; exp : 2 ; ok 
 - 
 - void fooMethodWithIf ( ) { / / indent : 4 ; exp : 4 ; ok 
 - while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 6 ; exp : 6 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 10 ; exp : 10 ; ok 
 - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 14 ; exp : > 10 ; ok 
 - new InnerClassFoo ( ) ) ) { } / / indent : 14 ; exp : > 10 ; ok 
 - 
 - do { / / indent : 6 ; exp : 6 ; ok 
 - / * Do somethig * / 
 - } while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 6 ; exp : 6 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 10 ; exp : 10 ; ok 
 - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 14 ; exp : > 10 ; ok 
 - new InnerClassFoo ( ) ) ) ; / / indent : 14 ; exp : > 10 ; ok 
 - 
 - while ( conditionSecond ( 10000000000 . 0 , new / / indent : 6 ; exp : 6 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 10 ; exp : 10 ; ok 
 - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 10 ; exp : 10 ; ok 
 - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 10 ; exp : 10 ; ok 
 - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 10 ; exp : 10 ; ok 
 - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 10 ; exp : 10 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 10 ; exp : 10 ; ok 
 - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 12 ; exp : > 10 ; ok 
 - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 12 ; exp : > 10 ; ok 
 - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 12 ; exp : > 10 ; ok 
 - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 12 ; exp : > 10 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 14 ; exp : > 10 ; ok 
 - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 14 ; exp : > 10 ; ok 
 - | | conditionNoArg ( ) | | / / indent : 14 ; exp : > 10 ; ok 
 - conditionNoArg ( ) | | conditionNoArg ( ) ) { } / / indent : 14 ; exp : > 10 ; ok 
 - 
 - do { 
 - 	 / * Do smth * / 
 - } while ( conditionSecond ( 10000000000 . 0 , new / / indent : 6 ; exp : 6 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 10 ; exp : 10 ; ok 
 - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 10 ; exp : 10 ; ok 
 - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 10 ; exp : 10 ; ok 
 - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 10 ; exp : 10 ; ok 
 - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 10 ; exp : 10 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 10 ; exp : 10 ; ok 
 - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 12 ; exp : > 10 ; ok 
 - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 12 ; exp : > 10 ; ok 
 - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 12 ; exp : > 10 ; ok 
 - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 12 ; exp : > 10 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 14 ; exp : > 10 ; ok 
 - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 14 ; exp : > 10 ; ok 
 - | | conditionNoArg ( ) | | / / indent : 14 ; exp : > 10 ; ok 
 - conditionNoArg ( ) | | conditionNoArg ( ) ) ; / / indent : 14 ; exp : > 10 ; ok 
 - } / / indent : 4 ; exp : 4 ; ok 
 - 
 - FooWhileClass anonymousClass = new FooWhileClass ( ) { / / indent : 4 ; exp : 4 ; ok 
 - 
 - void fooMethodWithIf ( String stringStringStringStringLooooongString , / / indent : 6 ; exp : 6 ; ok 
 - int intIntIntVeryLongNameForIntVariable , boolean / / indent : 10 ; exp : 10 ; ok 
 - fooooooooobooleanBooleanVeryLongName ) { / / indent : 14 ; exp : > 10 ; ok 
 - 
 - while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 8 ; exp : 8 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 12 ; exp : 12 ; ok 
 - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 16 ; exp : > 12 ; ok 
 - new InnerClassFoo ( ) ) ) { } / / indent : 19 ; exp : > 12 ; ok 
 - 
 - do { / / indent : 8 ; exp : 8 ; ok 
 - / * Do smth * / 
 - } while ( conditionFirst ( " Loooooooooooooooooong " , new / / indent : 8 ; exp : 8 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Loooooooooooooooooog " ) . / / indent : 12 ; exp : 12 ; ok 
 - getInteger ( new FooWhileClass ( ) , " Loooooooooooooooooog " ) , / / indent : 16 ; exp : > 12 ; ok 
 - new InnerClassFoo ( ) ) ) ; / / indent : 19 ; exp : > 12 ; ok 
 - 
 - while ( conditionSecond ( 10000000000 . 0 , new / / indent : 8 ; exp : 8 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 12 ; exp : 12 ; ok 
 - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 12 ; exp : 12 ; ok 
 - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 12 ; exp : 12 ; ok 
 - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 12 ; exp : 12 ; ok 
 - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 12 ; exp : 12 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 12 ; exp : 12 ; ok 
 - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 14 ; exp : > 12 ; ok 
 - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 14 ; exp : > 12 ; ok 
 - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 14 ; exp : > 12 ; ok 
 - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 14 ; exp : > 12 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 16 ; exp : > 12 ; ok 
 - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 16 ; exp : > 12 ; ok 
 - | | conditionNoArg ( ) | | / / indent : 16 ; exp : > 12 ; ok 
 - conditionNoArg ( ) | | conditionNoArg ( ) / / indent : 18 ; exp : > 12 ; ok 
 - & & fooooooooobooleanBooleanVeryLongName ) { } / / indent : 21 ; exp : > 12 ; ok 
 - 
 - do { / / indent : 8 ; exp : 8 ; ok 
 - / * Do smth * / 
 - } while ( conditionSecond ( 10000000000 . 0 , new / / indent : 8 ; exp : 8 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooo " / / indent : 12 ; exp : 12 ; ok 
 - + " oooooooooooong " ) . getString ( new FooWhileClass ( ) , / / indent : 12 ; exp : 12 ; ok 
 - new SecondWhileClassWithVeryVeryVeryLongName ( " loooooooooong " ) . / / indent : 12 ; exp : 12 ; ok 
 - getInteger ( new FooWhileClass ( ) , " loooooooooooooong " ) ) , " loooooooooooong " ) / / indent : 12 ; exp : 12 ; ok 
 - | | conditionThird ( 2048 ) | | conditionFourth ( new / / indent : 12 ; exp : 12 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( " Looooooooooooooo " / / indent : 12 ; exp : 12 ; ok 
 - + " ooooooooooooong " ) . getBoolean ( new FooWhileClass ( ) , false ) ) | | / / indent : 14 ; exp : > 12 ; ok 
 - conditionFifth ( true , new SecondWhileClassWithVeryVeryVeryLongName ( getString ( 2048 , " Looo " / / indent : 14 ; exp : > 12 ; ok 
 - + " ooooooooooooooooooooooooooooooooooooooooooong " ) ) . getBoolean ( / / indent : 14 ; exp : > 12 ; ok 
 - new FooWhileClass ( ) , true ) ) | | conditionSixth ( false , new / / indent : 14 ; exp : > 12 ; ok 
 - SecondWhileClassWithVeryVeryVeryLongName ( getString ( 100000 , " Loooooong " / / indent : 16 ; exp : > 12 ; ok 
 - + " Fooooooo > < " ) ) ) | | conditionNoArg ( ) / / indent : 16 ; exp : > 12 ; ok 
 - | | conditionNoArg ( ) | | / / indent : 16 ; exp : > 12 ; ok 
 - conditionNoArg ( ) | | conditionNoArg ( ) / / indent : 18 ; exp : > 12 ; ok 
 - & & fooooooooobooleanBooleanVeryLongName ) ; / / indent : 21 ; exp : > 12 ; ok 
 - } / / indent : 6 ; exp : 6 ; ok 
 - } ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - } 
 - 
 - class SecondWhileClassWithVeryVeryVeryLongName { / / indent : 0 ; exp : 0 ; ok 
 - 
 - public SecondWhileClassWithVeryVeryVeryLongName ( String string ) { / / indent : 2 ; exp : 2 ; ok 
 - 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - String getString ( FooWhileClass instance , int integer ) { / / indent : 2 ; exp : 2 ; ok 
 - return " String " ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - int getInteger ( FooWhileClass instance , String string ) { / / indent : 2 ; exp : 2 ; ok 
 - return - 1 ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - boolean getBoolean ( FooWhileClass instance , boolean flag ) { / / indent : 2 ; exp : 2 ; ok 
 - return false ; / / indent : 4 ; exp : 4 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - 
 - SecondWhileClassWithVeryVeryVeryLongName getInstanse ( ) { / / indent : 2 ; exp : 2 ; ok 
 - return new SecondWhileClassWithVeryVeryVeryLongName ( " VeryLoooooooooo " / / indent : 4 ; exp : 4 ; ok 
 - + " oongString " ) ; / / indent : 8 ; exp : 8 ; ok 
 - } / / indent : 2 ; exp : 2 ; ok 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / InputValidBinaryOpIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / InputValidBinaryOpIndent . java 
 deleted file mode 100644 
 index 979c160 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / indentation / InputValidBinaryOpIndent . java 
 + + + / dev / null 
 @ @ - 1 , 83 + 0 , 0 @ @ 
 - / * 
 - * InputValidBinaryOpIndent . java 
 - * 
 - * Created on December 2 , 2002 , 10 : 24 PM 
 - * / 
 - 
 - package com . puppycrawl . tools . checkstyle . indentation ; / / indent : 0 exp : 0 
 - 
 - / * * 
 - * 
 - * @ author jrichard 
 - * / 
 - public class InputValidBinaryOpIndent { / / indent : 0 exp : 0 
 - 
 - / * * Creates a new instance of InputValidBinaryOpIndent * / 
 - public InputValidBinaryOpIndent ( ) { 
 - } 
 - 
 - private void method1 ( ) { 
 - boolean test = true ; 
 - int i , j , k = 4 ; 
 - int x = 4 ; 
 - int y = 7 ; 
 - 
 - i = x + k ; 
 - 
 - j = y + x 
 - + k ; 
 - 
 - int one = 1 , two = 2 , three = 3 , four = 4 ; 
 - int answer ; 
 - 
 - answer = ( one + one ) / 2 ; 
 - 
 - answer = ( one 
 - + one ) / 2 ; 
 - 
 - answer = ( one + one ) 
 - / 2 ; 
 - 
 - answer = 
 - ( one + one ) 
 - / 2 ; 
 - 
 - answer = 
 - ( ( one + one ) 
 - / 2 ) + 4 ; 
 - 
 - 
 - if ( one + one = = two ) { 
 - System . out . println ( " true " ) ; 
 - } 
 - 
 - if ( one + one 
 - = = two ) { 
 - } 
 - 
 - if ( one + one = = two & & 1 + 1 = = two ) { 
 - } 
 - 
 - if ( one + one = = two 
 - & & 1 + 1 = = two ) { 
 - } 
 - 
 - if ( ( one 
 - + one ) = = two & & ( 1 + 1 ) = = two ) { 
 - } 
 - 
 - if ( ( one + one ) 
 - = = two 
 - & & ( 1 + 1 ) = = two ) { 
 - } 
 - 
 - if ( ( one + one ) 
 - = = two 
 - & & 
 - ( 1 + 1 ) = = two ) { 
 - } 
 - 
 - 
 - } 
 - 
 - }
