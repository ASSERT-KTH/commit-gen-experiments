BLEU SCORE: 0.04767707020457096

TEST MSG: minor : checks should have all their styles listed
GENERATED MSG: Issue # 2517 : added xdoc example url validation

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> index 4270634 . . 4d9de04 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> @ @ - 773 , 17 + 773 , 23 @ @ public class XDocsPagesTest { <nl> Assert . assertTrue ( fileName + " section ' " + sectionName <nl> + " ' has unknown text in ' Example of Usage ' : " + text , text . isEmpty ( ) ) ; <nl> <nl> + boolean hasCheckstyle = false ; <nl> + boolean hasGoogle = false ; <nl> + boolean hasSun = false ; <nl> + <nl> for ( Node node : XmlUtil . findChildElementsByTag ( subSection , " a " ) ) { <nl> final String url = node . getAttributes ( ) . getNamedItem ( " href " ) . getTextContent ( ) ; <nl> final String linkText = node . getTextContent ( ) . trim ( ) ; <nl> String expectedUrl = null ; <nl> <nl> if ( " Checkstyle Style " . equals ( linkText ) ) { <nl> + hasCheckstyle = true ; <nl> expectedUrl = " https : / / github . com / search ? q = " <nl> + " path % 3Aconfig + filename % 3Acheckstyle _ checks . xml + " <nl> + " repo % 3Acheckstyle % 2Fcheckstyle + " + sectionName ; <nl> } <nl> else if ( " Google Style " . equals ( linkText ) ) { <nl> + hasGoogle = true ; <nl> expectedUrl = " https : / / github . com / search ? q = " <nl> + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3Agoogle _ checks . xml + " <nl> + " repo % 3Acheckstyle % 2Fcheckstyle + " <nl> @ @ - 794 , 6 + 800 , 7 @ @ public class XDocsPagesTest { <nl> GOOGLE _ CHECKS . contains ( sectionName ) ) ; <nl> } <nl> else if ( " Sun Style " . equals ( linkText ) ) { <nl> + hasSun = true ; <nl> expectedUrl = " https : / / github . com / search ? q = " <nl> + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3Asun _ checks . xml + " <nl> + " repo % 3Acheckstyle % 2Fcheckstyle + " <nl> @ @ - 807 , 6 + 814 , 15 @ @ public class XDocsPagesTest { <nl> Assert . assertEquals ( fileName + " section ' " + sectionName <nl> + " ' should have matching url " , expectedUrl , url ) ; <nl> } <nl> + <nl> + Assert . assertTrue ( fileName + " section ' " + sectionName <nl> + + " ' should have a checkstyle section " , hasCheckstyle ) ; <nl> + Assert . assertTrue ( fileName + " section ' " + sectionName <nl> + + " ' should have a google section since it is in it ' s config " , hasGoogle <nl> + | | ! GOOGLE _ CHECKS . contains ( sectionName ) ) ; <nl> + Assert . assertTrue ( fileName + " section ' " + sectionName <nl> + + " ' should have a sun section since it is in it ' s config " , <nl> + hasSun | | ! SUN _ CHECKS . contains ( sectionName ) ) ; <nl> } <nl> <nl> private static void validatePackageSection ( String fileName , String sectionName , <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index 45b8493 . . 8c2e2a3 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 121 , 6 + 121 , 10 @ @ String b = ( a = = null | | a . length & lt ; 1 ) ? null : a . substring ( 1 ) ; <nl> < subsection name = " Example of Usage " > <nl> < ul > <nl> < li > <nl> + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources + filename % 3Asun _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + AvoidInlineConditionals " > <nl> + Sun Style < / a > <nl> + < / li > <nl> + < li > <nl> < a href = " https : / / github . com / search ? q = path % 3Aconfig + filename % 3Acheckstyle _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + AvoidInlineConditionals " > <nl> Checkstyle Style < / a > <nl> < / li > <nl> diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index dbc0a9f . . ed85f1a 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 561 , 6 + 561 , 10 @ @ <nl> < subsection name = " Example of Usage " > <nl> < ul > <nl> < li > <nl> + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources + filename % 3Agoogle _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + InterfaceTypeParameterName " > <nl> + Google Style < / a > <nl> + < / li > <nl> + < li > <nl> < a href = " https : / / github . com / search ? q = path % 3Aconfig + filename % 3Acheckstyle _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + InterfaceTypeParameterName " > <nl> Checkstyle Style < / a > <nl> < / li >
NEAREST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 04f87fd . . 3112ef7 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 52 , 22 + 52 , 16 @ @ <nl> <nl> < ! - - Suppressions to remove over time for sure - - > <nl> < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> - < suppress checks = " Regexp " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> < suppress checks = " LineLength " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> < suppress checks = " NoWhitespaceBefore " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> < suppress checks = " WhitespaceAfter " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> < suppress checks = " WhitespaceAround " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> - < suppress checks = " DeclarationOrder " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> - < suppress checks = " RightCurly " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> < suppress checks = " AbbreviationAsWordInName " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> - < suppress checks = " AbstractClassName " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> - < suppress checks = " EmptyLineSeparator " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> < suppress checks = " ReturnCount " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> < suppress checks = " SeparatorWrap " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> <nl> < ! - - quesionable suppressions , should be permanent ? - - > <nl> < suppress checks = " CyclomaticComplexity " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> - < suppress checks = " VisibilityModifier " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> <nl> < ! - - <nl> Turn off all checks for Generated and Test code . Fixes issues with using <nl> diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> index 00612ad . . 76322ab 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> @ @ - 43 , 9 + 43 , 9 @ @ import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> import com . puppycrawl . tools . checkstyle . api . AbstractViolationReporter ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> <nl> - public abstract class BaseCheckTestSupport { <nl> - final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; <nl> + public class BaseCheckTestSupport { <nl> protected final Properties props = new Properties ( ) ; <nl> + final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; <nl> <nl> protected static DefaultConfiguration createCheckConfig ( Class < ? > aClazz ) { <nl> return new DefaultConfiguration ( aClazz . getName ( ) ) ; <nl> diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> index 493a398 . . c64cfa8 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> @ @ - 60 , 7 + 60 , 8 @ @ public class ConfigurationBuilder extends BaseCheckTestSupport { <nl> try { <nl> return ConfigurationLoader . loadConfiguration ( aConfigName , <nl> new PropertiesExpander ( aProps ) ) ; <nl> - } catch ( final CheckstyleException e ) { <nl> + } <nl> + catch ( final CheckstyleException e ) { <nl> System . out . println ( " Error loading configuration file " ) ; <nl> e . printStackTrace ( System . out ) ; <nl> System . exit ( 1 ) ; <nl> @ @ - 80 , 7 + 81 , 8 @ @ public class ConfigurationBuilder extends BaseCheckTestSupport { <nl> return checkConfig ; <nl> } <nl> } <nl> - } else if ( aCheckName . equals ( currentConfig . getName ( ) ) ) { <nl> + } <nl> + else if ( aCheckName . equals ( currentConfig . getName ( ) ) ) { <nl> return currentConfig ; <nl> } <nl> } <nl> @ @ - 106 , 7 + 108 , 8 @ @ public class ConfigurationBuilder extends BaseCheckTestSupport { <nl> for ( final File file : folder . listFiles ( ) ) { <nl> listFiles ( files , file , extension ) ; <nl> } <nl> - } else if ( folder . toString ( ) . endsWith ( " . " + extension ) ) { <nl> + } <nl> + else if ( folder . toString ( ) . endsWith ( " . " + extension ) ) { <nl> files . add ( folder ) ; <nl> } <nl> } <nl> diff - - git a / src / it / java / com / google / checkstyle / test / base / IndentationConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / IndentationConfigurationBuilder . java <nl> index 162d0ad . . c6d982c 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / IndentationConfigurationBuilder . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / IndentationConfigurationBuilder . java <nl> @ @ - 37 , 32 + 37 , 32 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> public class IndentationConfigurationBuilder extends ConfigurationBuilder { <nl> private static final int TAB _ WIDTH = 4 ; <nl> <nl> - public IndentationConfigurationBuilder ( File aROOT ) { <nl> - super ( aROOT ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Integer [ ] getLinesWithWarn ( String aFileName ) throws IOException { <nl> - return getLinesWithWarnAndCheckComments ( aFileName , TAB _ WIDTH ) ; <nl> - } <nl> - <nl> private static final Pattern NONEMPTY _ LINE _ REGEX = <nl> - Pattern . compile ( " . * ? \ \ S + . * ? " ) ; <nl> + Pattern . compile ( " . * ? \ \ S + . * ? " ) ; <nl> <nl> private static final Pattern LINE _ WITH _ COMMENT _ REGEX = <nl> - Pattern . compile ( " . * ? \ \ S + . * ? ( / / indent : ( \ \ d + ) exp : ( ( > = \ \ d + ) | ( \ \ d + ( , \ \ d + ) * ? ) ) ( warn ) ? ) " ) ; <nl> + Pattern . compile ( " . * ? \ \ S + . * ? ( / / indent : ( \ \ d + ) exp : ( ( > = \ \ d + ) | ( \ \ d + ( , \ \ d + ) * ? ) ) ( warn ) ? ) " ) ; <nl> <nl> private static final Pattern GET _ INDENT _ FROM _ COMMENT _ REGEX = <nl> - Pattern . compile ( " / / indent : ( \ \ d + ) . * ? " ) ; <nl> + Pattern . compile ( " / / indent : ( \ \ d + ) . * ? " ) ; <nl> <nl> private static final Pattern MULTILEVEL _ COMMENT _ REGEX = <nl> - Pattern . compile ( " / / indent : \ \ d + exp : ( \ \ d + ( , \ \ d + ) + ? ) ( warn ) ? " ) ; <nl> + Pattern . compile ( " / / indent : \ \ d + exp : ( \ \ d + ( , \ \ d + ) + ? ) ( warn ) ? " ) ; <nl> <nl> private static final Pattern SINGLE _ LEVEL _ COMMENT _ REGEX = <nl> - Pattern . compile ( " / / indent : \ \ d + exp : ( \ \ d + ) ( warn ) ? " ) ; <nl> + Pattern . compile ( " / / indent : \ \ d + exp : ( \ \ d + ) ( warn ) ? " ) ; <nl> <nl> private static final Pattern NON _ STRICT _ LEVEL _ COMMENT _ REGEX = <nl> - Pattern . compile ( " / / indent : \ \ d + exp : > = ( \ \ d + ) ( warn ) ? " ) ; <nl> + Pattern . compile ( " / / indent : \ \ d + exp : > = ( \ \ d + ) ( warn ) ? " ) ; <nl> + <nl> + public IndentationConfigurationBuilder ( File aROOT ) { <nl> + super ( aROOT ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public Integer [ ] getLinesWithWarn ( String aFileName ) throws IOException { <nl> + return getLinesWithWarnAndCheckComments ( aFileName , TAB _ WIDTH ) ; <nl> + } <nl> <nl> private static Integer [ ] getLinesWithWarnAndCheckComments ( String aFileName , <nl> final int tabWidth ) <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule333orderingandsoacing / CustomImportOrderTest . java b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule333orderingandsoacing / CustomImportOrderTest . java <nl> index 998963b . . bad6b8f 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule333orderingandsoacing / CustomImportOrderTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule333orderingandsoacing / CustomImportOrderTest . java <nl> @ @ - 35 , 14 + 35 , 14 @ @ public class CustomImportOrderTest extends BaseCheckTestSupport { <nl> private static final String MSG _ SEPARATOR = " custom . import . order . line . separator " ; <nl> private static final String MSG _ LEX = " custom . import . order . lex " ; <nl> private static final String MSG _ ORDER = " custom . import . order " ; <nl> - private static ConfigurationBuilder builder ; <nl> - private final Class < CustomImportOrderCheck > clazz = CustomImportOrderCheck . class ; <nl> - String msgNonGroup = " custom . import . order . nonGroup . import " ; <nl> <nl> / * * Shortcuts to make code more compact . * / <nl> private static final String STD = CustomImportOrderCheck . STANDARD _ JAVA _ PACKAGE _ RULE _ GROUP ; <nl> private static final String SPECIAL = CustomImportOrderCheck . SPECIAL _ IMPORTS _ RULE _ GROUP ; <nl> <nl> + private static ConfigurationBuilder builder ; <nl> + private final Class < CustomImportOrderCheck > clazz = CustomImportOrderCheck . class ; <nl> + <nl> @ BeforeClass <nl> public static void setConfigurationBuilder ( ) { <nl> builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> @ @ - 112 , 6 + 112 , 7 @ @ public class CustomImportOrderTest extends BaseCheckTestSupport { <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> + <nl> @ Test <nl> public void validTest ( ) throws Exception { <nl> <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java <nl> index 4393401 . . 410424c 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java <nl> @ @ - 105 , 6 + 105 , 7 @ @ public class WhitespaceAroundTest extends BaseCheckTestSupport { <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> + <nl> @ Test <nl> public void whitespaceAroundEmptyTypesCyclesTest ( ) throws Exception { <nl> <nl> @ @ - 125 , 7 + 126 , 6 @ @ public class WhitespaceAroundTest extends BaseCheckTestSupport { <nl> String msgIllegalFollow = " ws . illegalFollow " ; <nl> Configuration checkConfig = builder . getCheckConfig ( " GenericWhitespace " ) ; <nl> <nl> - <nl> final String [ ] expected = { <nl> " 16 : 13 : " + getCheckMessage ( checkConfig . getMessages ( ) , msgPreceded , " < " ) , <nl> " 16 : 15 : " + getCheckMessage ( checkConfig . getMessages ( ) , msgFollowed , " < " ) , <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java <nl> index 4ef46b6 . . a7fea95 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java <nl> @ @ - 47 , 7 + 47 , 6 @ @ public class PackageNameTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void goodPackageNameTest ( ) throws Exception { <nl> <nl> - <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> String filePath = builder . getFilePath ( " PackageNameInputGood " ) ; <nl> @ @ - 76 , 7 + 75 , 6 @ @ public class PackageNameTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void badPackageName2Test ( ) throws Exception { <nl> <nl> - <nl> String packagePath = " com . google . checkstyle . test . chapter5naming . rule521 _ packagenames " ; <nl> String msg = getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , packagePath , format ) ; <nl> <nl> @ @ - 93 , 7 + 91 , 6 @ @ public class PackageNameTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void badPackageName3Test ( ) throws Exception { <nl> <nl> - <nl> String packagePath = " com . google . checkstyle . test . chapter5naming . rule521 $ packagenames " ; <nl> String msg = getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , packagePath , format ) ; <nl> <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassMethodTypeParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassMethodTypeParameterNameTest . java <nl> index 467e08c . . 183a3a1 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassMethodTypeParameterNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassMethodTypeParameterNameTest . java <nl> @ @ - 72 , 7 + 72 , 6 @ @ public class ClassMethodTypeParameterNameTest extends BaseCheckTestSupport { <nl> " 42 : 14 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " EE " , format ) , <nl> } ; <nl> <nl> - <nl> String filePath = builder . getFilePath ( " MethodTypeParameterNameInput " ) ; <nl> <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ;

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 index 4270634 . . 4d9de04 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 @ @ - 773 , 17 + 773 , 23 @ @ public class XDocsPagesTest { 
 Assert . assertTrue ( fileName + " section ' " + sectionName 
 + " ' has unknown text in ' Example of Usage ' : " + text , text . isEmpty ( ) ) ; 
 
 + boolean hasCheckstyle = false ; 
 + boolean hasGoogle = false ; 
 + boolean hasSun = false ; 
 + 
 for ( Node node : XmlUtil . findChildElementsByTag ( subSection , " a " ) ) { 
 final String url = node . getAttributes ( ) . getNamedItem ( " href " ) . getTextContent ( ) ; 
 final String linkText = node . getTextContent ( ) . trim ( ) ; 
 String expectedUrl = null ; 
 
 if ( " Checkstyle Style " . equals ( linkText ) ) { 
 + hasCheckstyle = true ; 
 expectedUrl = " https : / / github . com / search ? q = " 
 + " path % 3Aconfig + filename % 3Acheckstyle _ checks . xml + " 
 + " repo % 3Acheckstyle % 2Fcheckstyle + " + sectionName ; 
 } 
 else if ( " Google Style " . equals ( linkText ) ) { 
 + hasGoogle = true ; 
 expectedUrl = " https : / / github . com / search ? q = " 
 + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3Agoogle _ checks . xml + " 
 + " repo % 3Acheckstyle % 2Fcheckstyle + " 
 @ @ - 794 , 6 + 800 , 7 @ @ public class XDocsPagesTest { 
 GOOGLE _ CHECKS . contains ( sectionName ) ) ; 
 } 
 else if ( " Sun Style " . equals ( linkText ) ) { 
 + hasSun = true ; 
 expectedUrl = " https : / / github . com / search ? q = " 
 + " path % 3Asrc % 2Fmain % 2Fresources + filename % 3Asun _ checks . xml + " 
 + " repo % 3Acheckstyle % 2Fcheckstyle + " 
 @ @ - 807 , 6 + 814 , 15 @ @ public class XDocsPagesTest { 
 Assert . assertEquals ( fileName + " section ' " + sectionName 
 + " ' should have matching url " , expectedUrl , url ) ; 
 } 
 + 
 + Assert . assertTrue ( fileName + " section ' " + sectionName 
 + + " ' should have a checkstyle section " , hasCheckstyle ) ; 
 + Assert . assertTrue ( fileName + " section ' " + sectionName 
 + + " ' should have a google section since it is in it ' s config " , hasGoogle 
 + | | ! GOOGLE _ CHECKS . contains ( sectionName ) ) ; 
 + Assert . assertTrue ( fileName + " section ' " + sectionName 
 + + " ' should have a sun section since it is in it ' s config " , 
 + hasSun | | ! SUN _ CHECKS . contains ( sectionName ) ) ; 
 } 
 
 private static void validatePackageSection ( String fileName , String sectionName , 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index 45b8493 . . 8c2e2a3 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 121 , 6 + 121 , 10 @ @ String b = ( a = = null | | a . length & lt ; 1 ) ? null : a . substring ( 1 ) ; 
 < subsection name = " Example of Usage " > 
 < ul > 
 < li > 
 + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources + filename % 3Asun _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + AvoidInlineConditionals " > 
 + Sun Style < / a > 
 + < / li > 
 + < li > 
 < a href = " https : / / github . com / search ? q = path % 3Aconfig + filename % 3Acheckstyle _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + AvoidInlineConditionals " > 
 Checkstyle Style < / a > 
 < / li > 
 diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index dbc0a9f . . ed85f1a 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 561 , 6 + 561 , 10 @ @ 
 < subsection name = " Example of Usage " > 
 < ul > 
 < li > 
 + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources + filename % 3Agoogle _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + InterfaceTypeParameterName " > 
 + Google Style < / a > 
 + < / li > 
 + < li > 
 < a href = " https : / / github . com / search ? q = path % 3Aconfig + filename % 3Acheckstyle _ checks . xml + repo % 3Acheckstyle % 2Fcheckstyle + InterfaceTypeParameterName " > 
 Checkstyle Style < / a > 
 < / li >

NEAREST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 04f87fd . . 3112ef7 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 52 , 22 + 52 , 16 @ @ 
 
 < ! - - Suppressions to remove over time for sure - - > 
 < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 - < suppress checks = " Regexp " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 < suppress checks = " LineLength " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 < suppress checks = " NoWhitespaceBefore " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 < suppress checks = " WhitespaceAfter " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 < suppress checks = " WhitespaceAround " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 - < suppress checks = " DeclarationOrder " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 - < suppress checks = " RightCurly " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 < suppress checks = " AbbreviationAsWordInName " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 - < suppress checks = " AbstractClassName " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 - < suppress checks = " EmptyLineSeparator " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 < suppress checks = " ReturnCount " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 < suppress checks = " SeparatorWrap " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 
 < ! - - quesionable suppressions , should be permanent ? - - > 
 < suppress checks = " CyclomaticComplexity " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 - < suppress checks = " VisibilityModifier " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 
 < ! - - 
 Turn off all checks for Generated and Test code . Fixes issues with using 
 diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 index 00612ad . . 76322ab 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 @ @ - 43 , 9 + 43 , 9 @ @ import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 import com . puppycrawl . tools . checkstyle . api . AbstractViolationReporter ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 
 - public abstract class BaseCheckTestSupport { 
 - final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; 
 + public class BaseCheckTestSupport { 
 protected final Properties props = new Properties ( ) ; 
 + final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; 
 
 protected static DefaultConfiguration createCheckConfig ( Class < ? > aClazz ) { 
 return new DefaultConfiguration ( aClazz . getName ( ) ) ; 
 diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 index 493a398 . . c64cfa8 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 @ @ - 60 , 7 + 60 , 8 @ @ public class ConfigurationBuilder extends BaseCheckTestSupport { 
 try { 
 return ConfigurationLoader . loadConfiguration ( aConfigName , 
 new PropertiesExpander ( aProps ) ) ; 
 - } catch ( final CheckstyleException e ) { 
 + } 
 + catch ( final CheckstyleException e ) { 
 System . out . println ( " Error loading configuration file " ) ; 
 e . printStackTrace ( System . out ) ; 
 System . exit ( 1 ) ; 
 @ @ - 80 , 7 + 81 , 8 @ @ public class ConfigurationBuilder extends BaseCheckTestSupport { 
 return checkConfig ; 
 } 
 } 
 - } else if ( aCheckName . equals ( currentConfig . getName ( ) ) ) { 
 + } 
 + else if ( aCheckName . equals ( currentConfig . getName ( ) ) ) { 
 return currentConfig ; 
 } 
 } 
 @ @ - 106 , 7 + 108 , 8 @ @ public class ConfigurationBuilder extends BaseCheckTestSupport { 
 for ( final File file : folder . listFiles ( ) ) { 
 listFiles ( files , file , extension ) ; 
 } 
 - } else if ( folder . toString ( ) . endsWith ( " . " + extension ) ) { 
 + } 
 + else if ( folder . toString ( ) . endsWith ( " . " + extension ) ) { 
 files . add ( folder ) ; 
 } 
 } 
 diff - - git a / src / it / java / com / google / checkstyle / test / base / IndentationConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / IndentationConfigurationBuilder . java 
 index 162d0ad . . c6d982c 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / IndentationConfigurationBuilder . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / IndentationConfigurationBuilder . java 
 @ @ - 37 , 32 + 37 , 32 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 public class IndentationConfigurationBuilder extends ConfigurationBuilder { 
 private static final int TAB _ WIDTH = 4 ; 
 
 - public IndentationConfigurationBuilder ( File aROOT ) { 
 - super ( aROOT ) ; 
 - } 
 - 
 - @ Override 
 - public Integer [ ] getLinesWithWarn ( String aFileName ) throws IOException { 
 - return getLinesWithWarnAndCheckComments ( aFileName , TAB _ WIDTH ) ; 
 - } 
 - 
 private static final Pattern NONEMPTY _ LINE _ REGEX = 
 - Pattern . compile ( " . * ? \ \ S + . * ? " ) ; 
 + Pattern . compile ( " . * ? \ \ S + . * ? " ) ; 
 
 private static final Pattern LINE _ WITH _ COMMENT _ REGEX = 
 - Pattern . compile ( " . * ? \ \ S + . * ? ( / / indent : ( \ \ d + ) exp : ( ( > = \ \ d + ) | ( \ \ d + ( , \ \ d + ) * ? ) ) ( warn ) ? ) " ) ; 
 + Pattern . compile ( " . * ? \ \ S + . * ? ( / / indent : ( \ \ d + ) exp : ( ( > = \ \ d + ) | ( \ \ d + ( , \ \ d + ) * ? ) ) ( warn ) ? ) " ) ; 
 
 private static final Pattern GET _ INDENT _ FROM _ COMMENT _ REGEX = 
 - Pattern . compile ( " / / indent : ( \ \ d + ) . * ? " ) ; 
 + Pattern . compile ( " / / indent : ( \ \ d + ) . * ? " ) ; 
 
 private static final Pattern MULTILEVEL _ COMMENT _ REGEX = 
 - Pattern . compile ( " / / indent : \ \ d + exp : ( \ \ d + ( , \ \ d + ) + ? ) ( warn ) ? " ) ; 
 + Pattern . compile ( " / / indent : \ \ d + exp : ( \ \ d + ( , \ \ d + ) + ? ) ( warn ) ? " ) ; 
 
 private static final Pattern SINGLE _ LEVEL _ COMMENT _ REGEX = 
 - Pattern . compile ( " / / indent : \ \ d + exp : ( \ \ d + ) ( warn ) ? " ) ; 
 + Pattern . compile ( " / / indent : \ \ d + exp : ( \ \ d + ) ( warn ) ? " ) ; 
 
 private static final Pattern NON _ STRICT _ LEVEL _ COMMENT _ REGEX = 
 - Pattern . compile ( " / / indent : \ \ d + exp : > = ( \ \ d + ) ( warn ) ? " ) ; 
 + Pattern . compile ( " / / indent : \ \ d + exp : > = ( \ \ d + ) ( warn ) ? " ) ; 
 + 
 + public IndentationConfigurationBuilder ( File aROOT ) { 
 + super ( aROOT ) ; 
 + } 
 + 
 + @ Override 
 + public Integer [ ] getLinesWithWarn ( String aFileName ) throws IOException { 
 + return getLinesWithWarnAndCheckComments ( aFileName , TAB _ WIDTH ) ; 
 + } 
 
 private static Integer [ ] getLinesWithWarnAndCheckComments ( String aFileName , 
 final int tabWidth ) 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule333orderingandsoacing / CustomImportOrderTest . java b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule333orderingandsoacing / CustomImportOrderTest . java 
 index 998963b . . bad6b8f 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule333orderingandsoacing / CustomImportOrderTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule333orderingandsoacing / CustomImportOrderTest . java 
 @ @ - 35 , 14 + 35 , 14 @ @ public class CustomImportOrderTest extends BaseCheckTestSupport { 
 private static final String MSG _ SEPARATOR = " custom . import . order . line . separator " ; 
 private static final String MSG _ LEX = " custom . import . order . lex " ; 
 private static final String MSG _ ORDER = " custom . import . order " ; 
 - private static ConfigurationBuilder builder ; 
 - private final Class < CustomImportOrderCheck > clazz = CustomImportOrderCheck . class ; 
 - String msgNonGroup = " custom . import . order . nonGroup . import " ; 
 
 / * * Shortcuts to make code more compact . * / 
 private static final String STD = CustomImportOrderCheck . STANDARD _ JAVA _ PACKAGE _ RULE _ GROUP ; 
 private static final String SPECIAL = CustomImportOrderCheck . SPECIAL _ IMPORTS _ RULE _ GROUP ; 
 
 + private static ConfigurationBuilder builder ; 
 + private final Class < CustomImportOrderCheck > clazz = CustomImportOrderCheck . class ; 
 + 
 @ BeforeClass 
 public static void setConfigurationBuilder ( ) { 
 builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 @ @ - 112 , 6 + 112 , 7 @ @ public class CustomImportOrderTest extends BaseCheckTestSupport { 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 + 
 @ Test 
 public void validTest ( ) throws Exception { 
 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java 
 index 4393401 . . 410424c 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java 
 @ @ - 105 , 6 + 105 , 7 @ @ public class WhitespaceAroundTest extends BaseCheckTestSupport { 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 + 
 @ Test 
 public void whitespaceAroundEmptyTypesCyclesTest ( ) throws Exception { 
 
 @ @ - 125 , 7 + 126 , 6 @ @ public class WhitespaceAroundTest extends BaseCheckTestSupport { 
 String msgIllegalFollow = " ws . illegalFollow " ; 
 Configuration checkConfig = builder . getCheckConfig ( " GenericWhitespace " ) ; 
 
 - 
 final String [ ] expected = { 
 " 16 : 13 : " + getCheckMessage ( checkConfig . getMessages ( ) , msgPreceded , " < " ) , 
 " 16 : 15 : " + getCheckMessage ( checkConfig . getMessages ( ) , msgFollowed , " < " ) , 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java 
 index 4ef46b6 . . a7fea95 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java 
 @ @ - 47 , 7 + 47 , 6 @ @ public class PackageNameTest extends BaseCheckTestSupport { 
 @ Test 
 public void goodPackageNameTest ( ) throws Exception { 
 
 - 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 String filePath = builder . getFilePath ( " PackageNameInputGood " ) ; 
 @ @ - 76 , 7 + 75 , 6 @ @ public class PackageNameTest extends BaseCheckTestSupport { 
 @ Test 
 public void badPackageName2Test ( ) throws Exception { 
 
 - 
 String packagePath = " com . google . checkstyle . test . chapter5naming . rule521 _ packagenames " ; 
 String msg = getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , packagePath , format ) ; 
 
 @ @ - 93 , 7 + 91 , 6 @ @ public class PackageNameTest extends BaseCheckTestSupport { 
 @ Test 
 public void badPackageName3Test ( ) throws Exception { 
 
 - 
 String packagePath = " com . google . checkstyle . test . chapter5naming . rule521 $ packagenames " ; 
 String msg = getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , packagePath , format ) ; 
 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassMethodTypeParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassMethodTypeParameterNameTest . java 
 index 467e08c . . 183a3a1 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassMethodTypeParameterNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassMethodTypeParameterNameTest . java 
 @ @ - 72 , 7 + 72 , 6 @ @ public class ClassMethodTypeParameterNameTest extends BaseCheckTestSupport { 
 " 42 : 14 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " EE " , format ) , 
 } ; 
 
 - 
 String filePath = builder . getFilePath ( " MethodTypeParameterNameInput " ) ; 
 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ;
