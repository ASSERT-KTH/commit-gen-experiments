BLEU SCORE: 0.06506124089578338

TEST MSG: Issue # 2904 : fixed bad code in InputFinalLocalVariableNameLambda
GENERATED MSG: Issue # 1290 : Coverage has been increased to 100 % in AbstractDeclarationCollector .

TEST DIFF (one line): diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputFinalLocalVariableNameLambda . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputFinalLocalVariableNameLambda . java <nl> index 21fa435 . . 8b7ec0e 100644 <nl> - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputFinalLocalVariableNameLambda . java <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputFinalLocalVariableNameLambda . java <nl> @ @ - 1 , 18 + 1 , 27 @ @ <nl> + / / Compilable with Java8 <nl> package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import java . math . BigDecimal ; <nl> <nl> public class InputFinalLocalVariableNameLambda { <nl> + private interface Lambda { <nl> + public Object op ( AugmentedOrder a , AugmentedOrder b ) ; <nl> + } <nl> private static class AugmentedOrder { <nl> - public void setTotalValueOfOrder ( final String plainString ) { <nl> + public BigDecimal reduce ( final BigDecimal zero , final Lambda l ) { <nl> + return null ; <nl> + } <nl> + public Object add ( final Object amount ) { <nl> + return null ; <nl> + } <nl> + public Object getAmount ( ) { <nl> + return null ; <nl> } <nl> } <nl> <nl> private void addTotalValueOfOrder ( final AugmentedOrder order ) { <nl> - final BigDecimal totalValueOfOrder = order . getTransactions ( ) . stream ( ) <nl> + final BigDecimal totalValueOfOrder = order <nl> . reduce ( BigDecimal . ZERO , <nl> - ( t , u ) - > t . add ( u . getAmount ( ) ) , <nl> - BigDecimal : : add ) ; <nl> - order . setTotalValueOfOrder ( totalValueOfOrder . toPlainString ( ) ) ; <nl> + ( t , u ) - > t . add ( u . getAmount ( ) ) ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index b24670c . . d06fcf3 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 18 , 10 + 18 , 10 @ @ matrix : <nl> - CMD = " mvn clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " <nl> - COVERAGE _ CMD = " " <nl> <nl> - # cobertura and coveralls ( oraclejdk8 ) <nl> + # cobertura and codecov ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - - DESC = " cobertura and coveralls " <nl> + - DESC = " cobertura and codecov " <nl> - CMD = " mvn clean cobertura : check cobertura : cobertura " <nl> - COVERAGE _ CMD = " bash < ( curl - s https : / / codecov . io / bash ) " <nl> # findbugs and pmd ( oraclejdk8 )

TEST DIFF:
diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputFinalLocalVariableNameLambda . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputFinalLocalVariableNameLambda . java 
 index 21fa435 . . 8b7ec0e 100644 
 - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputFinalLocalVariableNameLambda . java 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / coding / InputFinalLocalVariableNameLambda . java 
 @ @ - 1 , 18 + 1 , 27 @ @ 
 + / / Compilable with Java8 
 package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import java . math . BigDecimal ; 
 
 public class InputFinalLocalVariableNameLambda { 
 + private interface Lambda { 
 + public Object op ( AugmentedOrder a , AugmentedOrder b ) ; 
 + } 
 private static class AugmentedOrder { 
 - public void setTotalValueOfOrder ( final String plainString ) { 
 + public BigDecimal reduce ( final BigDecimal zero , final Lambda l ) { 
 + return null ; 
 + } 
 + public Object add ( final Object amount ) { 
 + return null ; 
 + } 
 + public Object getAmount ( ) { 
 + return null ; 
 } 
 } 
 
 private void addTotalValueOfOrder ( final AugmentedOrder order ) { 
 - final BigDecimal totalValueOfOrder = order . getTransactions ( ) . stream ( ) 
 + final BigDecimal totalValueOfOrder = order 
 . reduce ( BigDecimal . ZERO , 
 - ( t , u ) - > t . add ( u . getAmount ( ) ) , 
 - BigDecimal : : add ) ; 
 - order . setTotalValueOfOrder ( totalValueOfOrder . toPlainString ( ) ) ; 
 + ( t , u ) - > t . add ( u . getAmount ( ) ) ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index b24670c . . d06fcf3 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 18 , 10 + 18 , 10 @ @ matrix : 
 - CMD = " mvn clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " 
 - COVERAGE _ CMD = " " 
 
 - # cobertura and coveralls ( oraclejdk8 ) 
 + # cobertura and codecov ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - - DESC = " cobertura and coveralls " 
 + - DESC = " cobertura and codecov " 
 - CMD = " mvn clean cobertura : check cobertura : cobertura " 
 - COVERAGE _ CMD = " bash < ( curl - s https : / / codecov . io / bash ) " 
 # findbugs and pmd ( oraclejdk8 )
