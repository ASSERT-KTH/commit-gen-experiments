BLEU SCORE: 0.6264058957410447

TEST MSG: Issue # 4400 : increase coverage of pitest - checkstyle - common profile to 100 %
GENERATED MSG: Issue # 4400 : increase coverage of pitest - checkstyle - tree - walker profile to 98 %

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 11f75a9 . . 1f5d75c 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 2008 , 11 + 2008 , 7 @ @ <nl> < param > com . puppycrawl . tools . checkstyle . doclets . * < / param > <nl> < param > com . puppycrawl . tools . checkstyle . ThreadModeSettingsTest < / param > <nl> < / targetTests > <nl> - < excludedMethods > <nl> - < ! - - till https : / / github . com / hcoles / pitest / issues / 353 - - > <nl> - < param > fillShortToFullModuleNamesMap < / param > <nl> - < / excludedMethods > <nl> - < mutationThreshold > 98 < / mutationThreshold > <nl> + < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> index feebb1e . . c0fbf2f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> @ @ - 410 , 7 + 410 , 7 @ @ public final class ConfigurationLoader { <nl> else if ( value . charAt ( pos + 1 ) = = ' { ' ) { <nl> / / property found , extract its name or bail on a typo <nl> final int endName = value . indexOf ( ' } ' , pos ) ; <nl> - if ( endName < 0 ) { <nl> + if ( endName = = - 1 ) { <nl> throw new CheckstyleException ( " Syntax error in property : " <nl> + value ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> index d5f66bb . . f3316f2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> @ @ - 143 , 7 + 143 , 6 @ @ public class XMLLogger <nl> throwable . printStackTrace ( printer ) ; <nl> printer . println ( " ] ] > " ) ; <nl> printer . println ( " < / exception > " ) ; <nl> - printer . flush ( ) ; <nl> writer . println ( encode ( stringWriter . toString ( ) ) ) ; <nl> } <nl> <nl> @ @ - 235 , 7 + 234 , 7 @ @ public class XMLLogger <nl> private static String encodeAmpersand ( String value , int ampPosition ) { <nl> final int nextSemi = value . indexOf ( ' ; ' , ampPosition ) ; <nl> final String result ; <nl> - if ( nextSemi < 0 <nl> + if ( nextSemi = = - 1 <nl> | | ! isReference ( value . substring ( ampPosition , nextSemi + 1 ) ) ) { <nl> result = " & amp ; " ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> index 63cc685 . . 5df05bf 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> @ @ - 577 , 8 + 577 , 6 @ @ public class CheckstyleAntTask extends Task { <nl> for ( int i = 0 ; i < fileSets . size ( ) ; i + + ) { <nl> final FileSet fileSet = fileSets . get ( i ) ; <nl> final DirectoryScanner scanner = fileSet . getDirectoryScanner ( getProject ( ) ) ; <nl> - scanner . scan ( ) ; <nl> - <nl> final List < File > scannedFiles = retrieveAllScannedFiles ( scanner , i ) ; <nl> allFiles . addAll ( scannedFiles ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> index cb3cdc8 . . 5d435d8 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> @ @ - 67 , 6 + 67 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . ExternalResourceHolder ; <nl> import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> import com . puppycrawl . tools . checkstyle . api . Filter ; <nl> + import com . puppycrawl . tools . checkstyle . api . FilterSet ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . api . MessageDispatcher ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> @ @ - 277 , 12 + 278 , 16 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> <nl> / / comparing to 1 as there is only one legal file in input <nl> final int numLegalFiles = 1 ; <nl> + final PropertyCacheFile cache = <nl> + ( PropertyCacheFile ) Whitebox . getInternalState ( checker , " cache " ) ; <nl> assertEquals ( " There were more legal files than expected " , <nl> numLegalFiles , counter ) ; <nl> assertEquals ( " Audit was started on larger amount of files than expected " , <nl> numLegalFiles , auditAdapter . getNumFilesStarted ( ) ) ; <nl> assertEquals ( " Audit was finished on larger amount of files than expected " , <nl> numLegalFiles , auditAdapter . getNumFilesFinished ( ) ) ; <nl> + assertNull ( " Cache shout not contain any file " , <nl> + cache . get ( new File ( " file . java " ) . getCanonicalPath ( ) ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 738 , 6 + 743 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> final Checker checker = new Checker ( ) ; <nl> checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> checker . addFileSetCheck ( check ) ; <nl> + checker . addFilter ( new DummyFilterSet ( ) ) ; <nl> checker . configure ( checkerConfig ) ; <nl> checker . addListener ( new BriefUtLogger ( stream ) ) ; <nl> <nl> @ @ - 748 , 7 + 754 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> final Properties cacheAfterFirstRun = new Properties ( ) ; <nl> cacheAfterFirstRun . load ( Files . newBufferedReader ( cacheFile . toPath ( ) ) ) ; <nl> <nl> - final int expectedNumberOfObjectsInCacheAfterFirstRun = 3 ; <nl> + final int expectedNumberOfObjectsInCacheAfterFirstRun = 4 ; <nl> assertEquals ( " Number of items in cache differs from expected " , <nl> expectedNumberOfObjectsInCacheAfterFirstRun , cacheAfterFirstRun . size ( ) ) ; <nl> <nl> @ @ - 1023 , 6 + 1029 , 16 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> } <nl> } <nl> <nl> + private static class DummyFilterSet extends FilterSet implements ExternalResourceHolder { <nl> + <nl> + @ Override <nl> + public Set < String > getExternalResourceLocations ( ) { <nl> + final Set < String > strings = new HashSet < > ( ) ; <nl> + strings . add ( " test " ) ; <nl> + return strings ; <nl> + } <nl> + } <nl> + <nl> private static class DynamicalResourceHolderCheck extends AbstractFileSetCheck <nl> implements ExternalResourceHolder { <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> index 75e46e0 . . aec07f9 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> @ @ - 31 , 6 + 31 , 8 @ @ import java . lang . reflect . Constructor ; <nl> import java . lang . reflect . Field ; <nl> import java . lang . reflect . InvocationTargetException ; <nl> import java . lang . reflect . Method ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> import java . util . Properties ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 38 , 6 + 40 , 7 @ @ import org . junit . runner . RunWith ; <nl> import org . powermock . api . mockito . PowerMockito ; <nl> import org . powermock . core . classloader . annotations . PrepareForTest ; <nl> import org . powermock . modules . junit4 . PowerMockRunner ; <nl> + import org . powermock . reflect . Whitebox ; <nl> import org . xml . sax . Attributes ; <nl> import org . xml . sax . InputSource ; <nl> <nl> @ @ - 617 , 4 + 620 , 15 @ @ public class ConfigurationLoaderTest { <nl> } <nl> } <nl> <nl> + @ Test <nl> + public void testParsePropertyString ( ) throws Exception { <nl> + final List < String > propertyRefs = new ArrayList < > ( ) ; <nl> + final List < String > fragments = new ArrayList < > ( ) ; <nl> + <nl> + Whitebox . invokeMethod ( ConfigurationLoader . class , <nl> + " parsePropertyString " , " $ " , <nl> + fragments , propertyRefs ) ; <nl> + assertEquals ( " Fragments list has unexpected amount of items " , <nl> + 1 , fragments . size ( ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> index 7c455a3 . . 557a3ad 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java <nl> @ @ - 175 , 7 + 175 , 10 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> / / given <nl> TestRootModuleChecker . reset ( ) ; <nl> <nl> - final CheckstyleAntTask antTask = getCheckstyleAntTask ( CUSTOM _ ROOT _ CONFIG _ FILE ) ; <nl> + final CheckstyleAntTaskLogStub antTask = new CheckstyleAntTaskLogStub ( ) ; <nl> + antTask . setConfig ( getPath ( CUSTOM _ ROOT _ CONFIG _ FILE ) ) ; <nl> + antTask . setProject ( new Project ( ) ) ; <nl> + <nl> final FileResource fileResource = new FileResource ( <nl> antTask . getProject ( ) , getPath ( FLAWLESS _ INPUT _ DIR ) ) ; <nl> final Path sourcePath = new Path ( antTask . getProject ( ) ) ; <nl> @ @ - 193 , 6 + 196 , 8 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> filesToCheck . size ( ) , is ( 1 ) ) ; <nl> assertThat ( " The path of file differs from expected " , <nl> filesToCheck . get ( 0 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> + assertEquals ( " Amount of logged messages in unxexpected " , <nl> + 9 , antTask . getLoggedMessages ( ) . size ( ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 540 , 6 + 545 , 27 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public final void testCreateListenerExceptionWithXmlLogger ( ) throws IOException { <nl> + final CheckstyleAntTask antTask = getCheckstyleAntTask ( ) ; <nl> + antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; <nl> + final CheckstyleAntTask . Formatter formatter = new CheckstyleAntTask . Formatter ( ) ; <nl> + final File outputFile = new File ( " target / " ) ; <nl> + formatter . setTofile ( outputFile ) ; <nl> + final CheckstyleAntTask . FormatterType formatterType = new CheckstyleAntTask . FormatterType ( ) ; <nl> + formatterType . setValue ( " xml " ) ; <nl> + formatter . setType ( formatterType ) ; <nl> + antTask . addFormatter ( formatter ) ; <nl> + try { <nl> + antTask . execute ( ) ; <nl> + fail ( " Exception is expected " ) ; <nl> + } <nl> + catch ( BuildException ex ) { <nl> + assertTrue ( " Error message is unexpected " , <nl> + ex . getMessage ( ) . startsWith ( " Unable to create listeners : formatters " ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> public void testSetInvalidType ( ) { <nl> final CheckstyleAntTask . FormatterType formatterType = new CheckstyleAntTask . FormatterType ( ) ; <nl> try { <nl> @ @ - 635 , 6 + 661 , 27 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { <nl> Whitebox . getInternalState ( antTask , " classpath " ) ) ; <nl> } <nl> <nl> + / * * This test is created to satisfy pitest , it is hard to emulate Referece by Id * / <nl> + @ Test <nl> + public void testSetClasspathRef1 ( ) { <nl> + final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; <nl> + final Project project = new Project ( ) ; <nl> + antTask . setClasspath ( new Path ( project , " firstPath " ) ) ; <nl> + antTask . setClasspathRef ( new Reference ( project , " idXX " ) ) ; <nl> + <nl> + try { <nl> + assertNotNull ( " Classpath should not be null " , <nl> + Whitebox . getInternalState ( antTask , " classpath " ) ) ; <nl> + final Path classpath = ( Path ) Whitebox . getInternalState ( antTask , " classpath " ) ; <nl> + classpath . list ( ) ; <nl> + fail ( " Exception is expected " ) ; <nl> + } <nl> + catch ( BuildException ex ) { <nl> + assertEquals ( " unexpected exception message " , <nl> + " Reference idXX not found . " , ex . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> @ Test <nl> public void testCreateClasspath ( ) { <nl> final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ;
NEAREST DIFF (one line): diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm <nl> index 131e8e6 . . e89ad09 100644 <nl> - - - a / src / xdocs / index . xml . vm <nl> + + + b / src / xdocs / index . xml . vm <nl> @ @ - 213 , 9 + 213 , 9 @ @ <nl> < td / > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in < / a > < / td > <nl> + < td > < a href = " https : / / wiki . jenkins . io / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in < / a > < / td > <nl> < td / > <nl> - < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in Home Page < / a > < / td > <nl> + < td > < a href = " https : / / wiki . jenkins . io / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in Home Page < / a > < / td > <nl> < td > This plug - in is supported by the Static Analysis Collector plug - in that collects different analysis results and shows the results in aggregated trend graphs . < / td > <nl> < / tr > <nl> < tr >

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 11f75a9 . . 1f5d75c 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 2008 , 11 + 2008 , 7 @ @ 
 < param > com . puppycrawl . tools . checkstyle . doclets . * < / param > 
 < param > com . puppycrawl . tools . checkstyle . ThreadModeSettingsTest < / param > 
 < / targetTests > 
 - < excludedMethods > 
 - < ! - - till https : / / github . com / hcoles / pitest / issues / 353 - - > 
 - < param > fillShortToFullModuleNamesMap < / param > 
 - < / excludedMethods > 
 - < mutationThreshold > 98 < / mutationThreshold > 
 + < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 index feebb1e . . c0fbf2f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 @ @ - 410 , 7 + 410 , 7 @ @ public final class ConfigurationLoader { 
 else if ( value . charAt ( pos + 1 ) = = ' { ' ) { 
 / / property found , extract its name or bail on a typo 
 final int endName = value . indexOf ( ' } ' , pos ) ; 
 - if ( endName < 0 ) { 
 + if ( endName = = - 1 ) { 
 throw new CheckstyleException ( " Syntax error in property : " 
 + value ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 index d5f66bb . . f3316f2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 @ @ - 143 , 7 + 143 , 6 @ @ public class XMLLogger 
 throwable . printStackTrace ( printer ) ; 
 printer . println ( " ] ] > " ) ; 
 printer . println ( " < / exception > " ) ; 
 - printer . flush ( ) ; 
 writer . println ( encode ( stringWriter . toString ( ) ) ) ; 
 } 
 
 @ @ - 235 , 7 + 234 , 7 @ @ public class XMLLogger 
 private static String encodeAmpersand ( String value , int ampPosition ) { 
 final int nextSemi = value . indexOf ( ' ; ' , ampPosition ) ; 
 final String result ; 
 - if ( nextSemi < 0 
 + if ( nextSemi = = - 1 
 | | ! isReference ( value . substring ( ampPosition , nextSemi + 1 ) ) ) { 
 result = " & amp ; " ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 index 63cc685 . . 5df05bf 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 @ @ - 577 , 8 + 577 , 6 @ @ public class CheckstyleAntTask extends Task { 
 for ( int i = 0 ; i < fileSets . size ( ) ; i + + ) { 
 final FileSet fileSet = fileSets . get ( i ) ; 
 final DirectoryScanner scanner = fileSet . getDirectoryScanner ( getProject ( ) ) ; 
 - scanner . scan ( ) ; 
 - 
 final List < File > scannedFiles = retrieveAllScannedFiles ( scanner , i ) ; 
 allFiles . addAll ( scannedFiles ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 index cb3cdc8 . . 5d435d8 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 @ @ - 67 , 6 + 67 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . ExternalResourceHolder ; 
 import com . puppycrawl . tools . checkstyle . api . FileText ; 
 import com . puppycrawl . tools . checkstyle . api . Filter ; 
 + import com . puppycrawl . tools . checkstyle . api . FilterSet ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . api . MessageDispatcher ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 @ @ - 277 , 12 + 278 , 16 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 
 / / comparing to 1 as there is only one legal file in input 
 final int numLegalFiles = 1 ; 
 + final PropertyCacheFile cache = 
 + ( PropertyCacheFile ) Whitebox . getInternalState ( checker , " cache " ) ; 
 assertEquals ( " There were more legal files than expected " , 
 numLegalFiles , counter ) ; 
 assertEquals ( " Audit was started on larger amount of files than expected " , 
 numLegalFiles , auditAdapter . getNumFilesStarted ( ) ) ; 
 assertEquals ( " Audit was finished on larger amount of files than expected " , 
 numLegalFiles , auditAdapter . getNumFilesFinished ( ) ) ; 
 + assertNull ( " Cache shout not contain any file " , 
 + cache . get ( new File ( " file . java " ) . getCanonicalPath ( ) ) ) ; 
 } 
 
 @ Test 
 @ @ - 738 , 6 + 743 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 final Checker checker = new Checker ( ) ; 
 checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 checker . addFileSetCheck ( check ) ; 
 + checker . addFilter ( new DummyFilterSet ( ) ) ; 
 checker . configure ( checkerConfig ) ; 
 checker . addListener ( new BriefUtLogger ( stream ) ) ; 
 
 @ @ - 748 , 7 + 754 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 final Properties cacheAfterFirstRun = new Properties ( ) ; 
 cacheAfterFirstRun . load ( Files . newBufferedReader ( cacheFile . toPath ( ) ) ) ; 
 
 - final int expectedNumberOfObjectsInCacheAfterFirstRun = 3 ; 
 + final int expectedNumberOfObjectsInCacheAfterFirstRun = 4 ; 
 assertEquals ( " Number of items in cache differs from expected " , 
 expectedNumberOfObjectsInCacheAfterFirstRun , cacheAfterFirstRun . size ( ) ) ; 
 
 @ @ - 1023 , 6 + 1029 , 16 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 } 
 } 
 
 + private static class DummyFilterSet extends FilterSet implements ExternalResourceHolder { 
 + 
 + @ Override 
 + public Set < String > getExternalResourceLocations ( ) { 
 + final Set < String > strings = new HashSet < > ( ) ; 
 + strings . add ( " test " ) ; 
 + return strings ; 
 + } 
 + } 
 + 
 private static class DynamicalResourceHolderCheck extends AbstractFileSetCheck 
 implements ExternalResourceHolder { 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 index 75e46e0 . . aec07f9 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 @ @ - 31 , 6 + 31 , 8 @ @ import java . lang . reflect . Constructor ; 
 import java . lang . reflect . Field ; 
 import java . lang . reflect . InvocationTargetException ; 
 import java . lang . reflect . Method ; 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 import java . util . Properties ; 
 
 import org . junit . Test ; 
 @ @ - 38 , 6 + 40 , 7 @ @ import org . junit . runner . RunWith ; 
 import org . powermock . api . mockito . PowerMockito ; 
 import org . powermock . core . classloader . annotations . PrepareForTest ; 
 import org . powermock . modules . junit4 . PowerMockRunner ; 
 + import org . powermock . reflect . Whitebox ; 
 import org . xml . sax . Attributes ; 
 import org . xml . sax . InputSource ; 
 
 @ @ - 617 , 4 + 620 , 15 @ @ public class ConfigurationLoaderTest { 
 } 
 } 
 
 + @ Test 
 + public void testParsePropertyString ( ) throws Exception { 
 + final List < String > propertyRefs = new ArrayList < > ( ) ; 
 + final List < String > fragments = new ArrayList < > ( ) ; 
 + 
 + Whitebox . invokeMethod ( ConfigurationLoader . class , 
 + " parsePropertyString " , " $ " , 
 + fragments , propertyRefs ) ; 
 + assertEquals ( " Fragments list has unexpected amount of items " , 
 + 1 , fragments . size ( ) ) ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 index 7c455a3 . . 557a3ad 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTaskTest . java 
 @ @ - 175 , 7 + 175 , 10 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 / / given 
 TestRootModuleChecker . reset ( ) ; 
 
 - final CheckstyleAntTask antTask = getCheckstyleAntTask ( CUSTOM _ ROOT _ CONFIG _ FILE ) ; 
 + final CheckstyleAntTaskLogStub antTask = new CheckstyleAntTaskLogStub ( ) ; 
 + antTask . setConfig ( getPath ( CUSTOM _ ROOT _ CONFIG _ FILE ) ) ; 
 + antTask . setProject ( new Project ( ) ) ; 
 + 
 final FileResource fileResource = new FileResource ( 
 antTask . getProject ( ) , getPath ( FLAWLESS _ INPUT _ DIR ) ) ; 
 final Path sourcePath = new Path ( antTask . getProject ( ) ) ; 
 @ @ - 193 , 6 + 196 , 8 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 filesToCheck . size ( ) , is ( 1 ) ) ; 
 assertThat ( " The path of file differs from expected " , 
 filesToCheck . get ( 0 ) . getAbsolutePath ( ) , is ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 + assertEquals ( " Amount of logged messages in unxexpected " , 
 + 9 , antTask . getLoggedMessages ( ) . size ( ) ) ; 
 } 
 
 @ Test 
 @ @ - 540 , 6 + 545 , 27 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public final void testCreateListenerExceptionWithXmlLogger ( ) throws IOException { 
 + final CheckstyleAntTask antTask = getCheckstyleAntTask ( ) ; 
 + antTask . setFile ( new File ( getPath ( FLAWLESS _ INPUT ) ) ) ; 
 + final CheckstyleAntTask . Formatter formatter = new CheckstyleAntTask . Formatter ( ) ; 
 + final File outputFile = new File ( " target / " ) ; 
 + formatter . setTofile ( outputFile ) ; 
 + final CheckstyleAntTask . FormatterType formatterType = new CheckstyleAntTask . FormatterType ( ) ; 
 + formatterType . setValue ( " xml " ) ; 
 + formatter . setType ( formatterType ) ; 
 + antTask . addFormatter ( formatter ) ; 
 + try { 
 + antTask . execute ( ) ; 
 + fail ( " Exception is expected " ) ; 
 + } 
 + catch ( BuildException ex ) { 
 + assertTrue ( " Error message is unexpected " , 
 + ex . getMessage ( ) . startsWith ( " Unable to create listeners : formatters " ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 public void testSetInvalidType ( ) { 
 final CheckstyleAntTask . FormatterType formatterType = new CheckstyleAntTask . FormatterType ( ) ; 
 try { 
 @ @ - 635 , 6 + 661 , 27 @ @ public class CheckstyleAntTaskTest extends BaseCheckTestSupport { 
 Whitebox . getInternalState ( antTask , " classpath " ) ) ; 
 } 
 
 + / * * This test is created to satisfy pitest , it is hard to emulate Referece by Id * / 
 + @ Test 
 + public void testSetClasspathRef1 ( ) { 
 + final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ; 
 + final Project project = new Project ( ) ; 
 + antTask . setClasspath ( new Path ( project , " firstPath " ) ) ; 
 + antTask . setClasspathRef ( new Reference ( project , " idXX " ) ) ; 
 + 
 + try { 
 + assertNotNull ( " Classpath should not be null " , 
 + Whitebox . getInternalState ( antTask , " classpath " ) ) ; 
 + final Path classpath = ( Path ) Whitebox . getInternalState ( antTask , " classpath " ) ; 
 + classpath . list ( ) ; 
 + fail ( " Exception is expected " ) ; 
 + } 
 + catch ( BuildException ex ) { 
 + assertEquals ( " unexpected exception message " , 
 + " Reference idXX not found . " , ex . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 @ Test 
 public void testCreateClasspath ( ) { 
 final CheckstyleAntTask antTask = new CheckstyleAntTask ( ) ;

NEAREST DIFF:
diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm 
 index 131e8e6 . . e89ad09 100644 
 - - - a / src / xdocs / index . xml . vm 
 + + + b / src / xdocs / index . xml . vm 
 @ @ - 213 , 9 + 213 , 9 @ @ 
 < td / > 
 < / tr > 
 < tr > 
 - < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in < / a > < / td > 
 + < td > < a href = " https : / / wiki . jenkins . io / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in < / a > < / td > 
 < td / > 
 - < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in Home Page < / a > < / td > 
 + < td > < a href = " https : / / wiki . jenkins . io / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in Home Page < / a > < / td > 
 < td > This plug - in is supported by the Static Analysis Collector plug - in that collects different analysis results and shows the results in aggregated trend graphs . < / td > 
 < / tr > 
 < tr >
