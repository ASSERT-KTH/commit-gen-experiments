BLEU SCORE: 0.02955926526467443

TEST MSG: Issue # 2161 : unify test input locations
GENERATED MSG: Issue 10 . Support of default methods in interface has been added .

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> index 7e514aa . . d472f92 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> @ @ - 23 , 6 + 23 , 9 @ @ import static com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationLocati <nl> import static com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationLocationCheck . MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE ; <nl> import static org . junit . Assert . assertArrayEquals ; <nl> <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + <nl> import org . apache . commons . lang3 . ArrayUtils ; <nl> import org . junit . Test ; <nl> <nl> @ @ - 31 , 6 + 34 , 11 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> public class AnnotationLocationCheckTest extends BaseCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " annotation " + File . separator + filename ) ; <nl> + } <nl> <nl> @ Test <nl> public void testGetRequiredTokens ( ) { <nl> @ @ - 43 , 7 + 51 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { <nl> DefaultConfiguration checkConfig = createCheckConfig ( AnnotationLocationCheck . class ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation / InputCorrectAnnotationLocation . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputCorrectAnnotationLocation . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 70 , 7 + 78 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { <nl> " 88 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 10 , 8 ) , <nl> " 98 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 0 , 3 ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " annotation / InputIncorrectAnnotationLocation . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputIncorrectAnnotationLocation . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 101 , 7 + 109 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { <nl> public void testWithoutAnnotations ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( AnnotationLocationCheck . class ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " annotation / InputAnnotationLocationCheckTest1 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputAnnotationLocationCheckTest1 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 125 , 7 + 133 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { <nl> " 88 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 10 , 8 ) , <nl> " 98 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 0 , 3 ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " annotation / InputIncorrectAnnotationLocation . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputIncorrectAnnotationLocation . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 137 , 7 + 145 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { <nl> " 3 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation12 " ) , <nl> " 3 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation13 " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " annotation / InputAnnotationLocationCheckTest2 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputAnnotationLocationCheckTest2 . java " ) , expected ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleTest . java <nl> index 1b683d0 . . 3f8fa65 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleTest . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> import java . io . File ; <nl> + import java . io . IOException ; <nl> <nl> import org . apache . commons . beanutils . ConversionException ; <nl> import org . apache . commons . lang3 . ArrayUtils ; <nl> @ @ - 39 , 6 + 40 , 11 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " annotation " + File . separator + filename ) ; <nl> + } <nl> <nl> / * Additional test for jacoco , since valueOf ( ) <nl> * is generated by javac and jacoco reports that <nl> @ @ - 88 , 7 + 94 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> " 23 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 106 , 7 + 112 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> " 33 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 125 , 7 + 131 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> " 58 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " EXPANDED " ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 139 , 7 + 145 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 156 , 7 + 162 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 181 , 7 + 187 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> " 32 : 56 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationUseNoTrailingComma . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " AnnotationUseNoTrailingComma . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 192 , 7 + 198 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " trailingArrayComma " , " ALWAYS " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationUseWithTrailingComma . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " AnnotationUseWithTrailingComma . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 212 , 7 + 218 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> " 33 : 50 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) , <nl> } ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationUseWithTrailingComma . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " AnnotationUseWithTrailingComma . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 223 , 7 + 229 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " trailingArrayComma " , " NEVER " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationUseNoTrailingComma . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " AnnotationUseNoTrailingComma . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 234 , 7 + 240 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " trailingArrayComma " , " ignore " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 243 , 7 + 249 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " closingParens " , " NEVER " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationsUseStyleParams . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " AnnotationsUseStyleParams . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 276 , 7 + 282 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " trailingArrayComma " , " ignore " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " annotation " + File . separator + " InputAnnotationUseStyleCheckTest . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputAnnotationUseStyleCheckTest . java " ) , expected ) ; <nl> <nl> } <nl> <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseNoTrailingComma . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseNoTrailingComma . java <nl> deleted file mode 100644 <nl> index e2508eb . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseNoTrailingComma . java <nl> + + + / dev / null <nl> @ @ - 1 , 47 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . annotation ; <nl> - / / suppress <nl> - @ SuppressWarnings ( { } ) <nl> - public class AnnotationUseNoTrailingComma <nl> - { <nl> - @ SuppressWarnings ( { " common " } ) <nl> - public void foo ( ) { <nl> - <nl> - / * * Suppress warnings * / <nl> - @ SuppressWarnings ( { " common " , " foo " } ) <nl> - Object o = new Object ( ) { <nl> - <nl> - @ SuppressWarnings ( value = { " common " } ) <nl> - public String toString ( ) { <nl> - <nl> - @ SuppressWarnings ( value = { " leo " , " herbie " } ) <nl> - final String pooches = " leo . herbie " ; <nl> - <nl> - return pooches ; <nl> - } <nl> - } ; <nl> - } <nl> - <nl> - @ Test2 ( value = { ( false ) ? " " : " foo " } , more = { ( true ) ? " " : " bar " } ) <nl> - <nl> - @ Pooches2 ( tokens = { } , other = { } ) <nl> - enum P { <nl> - <nl> - @ Pooches2 ( tokens = { Pooches2 . class } , other = { 1 } ) <nl> - L , / / annotation in enum <nl> - <nl> - @ Test2 ( value = { } , more = { ( false ) ? " " : " unchecked " } ) <nl> - Y ; <nl> - } <nl> - <nl> - } <nl> - <nl> - @ interface Test2 { <nl> - String [ ] value ( ) ; <nl> - String [ ] more ( ) default { } ; <nl> - } <nl> - <nl> - @ interface Pooches2 { <nl> - <nl> - Class < ? > [ ] tokens ( ) ; <nl> - int [ ] other ( ) ; <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseWithTrailingComma . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseWithTrailingComma . java <nl> deleted file mode 100644 <nl> index bef6940 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseWithTrailingComma . java <nl> + + + / dev / null <nl> @ @ - 1 , 56 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . annotation ; <nl> - / / this file compiles in eclipse 3 . 4 but not with Sun ' s JDK 1 . 6 . 0 . 11 <nl> - <nl> - / * * <nl> - <nl> - * / <nl> - public class AnnotationUseWithTrailingComma <nl> - { <nl> - @ SuppressWarnings ( { " common " , } ) <nl> - public void foo ( ) { <nl> - <nl> - <nl> - @ SuppressWarnings ( { " common " , " foo " , } ) <nl> - Object o = new Object ( ) { <nl> - <nl> - @ SuppressWarnings ( value = { " common " , } ) <nl> - public String toString ( ) { <nl> - <nl> - @ SuppressWarnings ( value = { " leo " , " herbie " , } ) <nl> - final String pooches = " leo . herbie " ; <nl> - <nl> - return pooches ; <nl> - } <nl> - } ; <nl> - } <nl> - <nl> - @ Test ( value = { ( false ) ? " " : " foo " , } , more = { ( true ) ? " " : " bar " , } ) <nl> - / * * <nl> - <nl> - * / <nl> - enum P { <nl> - <nl> - @ Pooches ( tokens = { Pooches . class , } , other = { 1 , } ) <nl> - L , <nl> - <nl> - / * * <nl> - <nl> - * / <nl> - Y ; <nl> - } <nl> - <nl> - } <nl> - <nl> - @ interface Test { <nl> - String [ ] value ( ) ; <nl> - String [ ] more ( ) default { } ; <nl> - / * * <nl> - <nl> - * / <nl> - } <nl> - <nl> - @ interface Pooches { <nl> - <nl> - Class < ? > [ ] tokens ( ) ; <nl> - int [ ] other ( ) ; <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationsUseStyleParams . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationsUseStyleParams . java <nl> deleted file mode 100644 <nl> index dde9837 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationsUseStyleParams . java <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . annotation ; <nl> - <nl> - import java . lang . annotation . Retention ; <nl> - import java . lang . annotation . Target ; <nl> - <nl> - public class AnnotationsUseStyleParams <nl> - { <nl> - @ Target ( { } ) <nl> - public @ interface myAnn { <nl> - <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / DifferentUseStyles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / DifferentUseStyles . java <nl> deleted file mode 100644 <nl> index 53746c4 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / DifferentUseStyles . java <nl> + + + / dev / null <nl> @ @ - 1 , 65 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . annotation ; <nl> - <nl> - @ Deprecated <nl> - @ SomeArrays ( pooches = { DOGS . LEO } ) <nl> - @ SuppressWarnings ( { " " } ) <nl> - public class DifferentUseStyles <nl> - { <nl> - <nl> - } <nl> - <nl> - @ SomeArrays ( pooches = { DOGS . LEO } , um = { } , duh = { " bleh " } ) <nl> - @ SuppressWarnings ( " " ) / / compact _ no _ array <nl> - @ Deprecated ( ) <nl> - class Dep { <nl> - <nl> - } <nl> - <nl> - @ Deprecated <nl> - @ SomeArrays ( pooches = { DOGS . LEO } ) <nl> - @ SuppressWarnings ( { " " } ) <nl> - enum SON { <nl> - <nl> - @ Deprecated <nl> - @ SomeArrays ( pooches = { DOGS . LEO } , um = { " " } , duh = { " bleh " } ) <nl> - @ APooch ( dog = DOGS . HERBIE ) <nl> - @ Another ( " " ) / / compact _ no _ array <nl> - ETHAN <nl> - } <nl> - <nl> - @ MyAnnotation13 ( ) <nl> - enum DOGS { <nl> - <nl> - @ Deprecated ( ) <nl> - LEO , <nl> - HERBIE <nl> - } <nl> - <nl> - @ interface SomeArrays { <nl> - @ Another ( " " ) / / compact <nl> - String [ ] um ( ) default { } ; <nl> - @ Another ( { " " } ) / / compact <nl> - String [ ] duh ( ) default { } ; <nl> - @ Another ( value = { " " } ) / / expanded <nl> - DOGS [ ] pooches ( ) ; <nl> - } <nl> - <nl> - @ Another ( value = { " " } ) / / expanded <nl> - enum E { <nl> - <nl> - } <nl> - <nl> - @ interface APooch { <nl> - DOGS dog ( ) ; <nl> - } <nl> - <nl> - @ interface Another { <nl> - String [ ] value ( ) ; <nl> - @ Another ( { " foo " , " bar " } ) / / compact style <nl> - String value1 ( ) default " " ; <nl> - } <nl> - <nl> - @ SomeArrays ( pooches = { } ) <nl> - @ Another ( { } ) <nl> - class Closing { <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest1 . java <nl> deleted file mode 100644 <nl> index 385656a . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest1 . java <nl> + + + / dev / null <nl> @ @ - 1 , 5 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . annotation ; <nl> - <nl> - public class InputAnnotationLocationCheckTest1 { <nl> - 	 <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest2 . java <nl> deleted file mode 100644 <nl> index 844721f . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 26 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . annotation ; <nl> - <nl> - @ MyAnnotation11 @ MyAnnotation12 @ MyAnnotation13 <nl> - public class InputAnnotationLocationCheckTest2 { <nl> - <nl> - @ MyAnnotation13 <nl> - void method ( ) { <nl> - <nl> - } <nl> - <nl> - @ MyAnnotation13 <nl> - @ MyAnnotation12 <nl> - void method2 ( ) { <nl> - <nl> - } <nl> - 	 <nl> - } <nl> - <nl> - @ interface MyAnnotation11 { <nl> - } <nl> - <nl> - @ interface MyAnnotation12 { <nl> - } <nl> - <nl> - @ interface MyAnnotation13 { <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationUseStyleCheckTest . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationUseStyleCheckTest . java <nl> deleted file mode 100644 <nl> index ccf3076 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationUseStyleCheckTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . annotation ; <nl> - <nl> - <nl> - @ interface SomeArrays32 { <nl> - @ Another32 ( value = { " foo " , " bar " } ) / / expanded <nl> - DOGS [ ] pooches ( ) ; <nl> - } <nl> - <nl> - <nl> - @ interface Another32 { <nl> - String [ ] value ( ) ; <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputCorrectAnnotationLocation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputCorrectAnnotationLocation . java <nl> deleted file mode 100644 <nl> index deaa0be . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputCorrectAnnotationLocation . java <nl> + + + / dev / null <nl> @ @ - 1 , 105 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . annotation ; <nl> - <nl> - <nl> - <nl> - <nl> - @ MyAnnotation6 <nl> - @ MyAnnotation5 <nl> - class InputCorrectAnnotationLocation <nl> - { <nl> - <nl> - @ MyAnnotation6 <nl> - @ MyAnnotation5 <nl> - public int a ; <nl> - <nl> - @ MyAnnotation5 <nl> - public int b ; <nl> - <nl> - @ MyAnnotation6 <nl> - @ MyAnnotation5 <nl> - public int c ; <nl> - <nl> - @ MyAnnotation5 <nl> - public int d ; <nl> - <nl> - @ MyAnnotation6 <nl> - @ MyAnnotation5 <nl> - public InputCorrectAnnotationLocation ( ) <nl> - { <nl> - / / comment <nl> - } <nl> - @ MyAnnotation5 <nl> - @ MyAnnotation6 <nl> - void foo1 ( ) { } <nl> - <nl> - @ MyAnnotation5 <nl> - @ MyAnnotation6 <nl> - void foo2 ( ) { } <nl> - <nl> - @ MyAnnotation5 <nl> - @ MyAnnotation6 <nl> - @ MyAnnotation3 <nl> - @ MyAnnotation4 <nl> - class InnerClass <nl> - { <nl> - @ MyAnnotation6 <nl> - @ MyAnnotation5 <nl> - public int a ; <nl> - <nl> - @ MyAnnotation5 <nl> - public int b ; <nl> - <nl> - @ MyAnnotation6 <nl> - @ MyAnnotation5 <nl> - public int c ; <nl> - <nl> - @ MyAnnotation5 <nl> - public int d ; <nl> - <nl> - @ MyAnnotation6 <nl> - public InnerClass ( ) <nl> - { <nl> - / / comment <nl> - } <nl> - @ MyAnnotation5 <nl> - @ MyAnnotation6 void foo1 ( int a ) { } <nl> - <nl> - @ MyAnnotation5 <nl> - @ MyAnnotation6 <nl> - void foo2 ( ) { } <nl> - } <nl> - <nl> - @ MyAnnotation5 <nl> - @ MyAnnotation6 <nl> - InnerClass anon = new InnerClass ( ) <nl> - { <nl> - @ MyAnnotation6 <nl> - @ MyAnnotation5 <nl> - public int a ; <nl> - <nl> - @ MyAnnotation5 public int b ; <nl> - <nl> - @ MyAnnotation6 <nl> - @ MyAnnotation5 <nl> - public int c ; <nl> - <nl> - @ MyAnnotation5 <nl> - public int d ; <nl> - <nl> - @ MyAnnotation5 <nl> - @ MyAnnotation6 void foo1 ( ) { } <nl> - <nl> - @ MyAnnotation5 <nl> - @ MyAnnotation6 <nl> - void foo2 ( ) { } <nl> - } ; <nl> - <nl> - } <nl> - <nl> - @ MyAnnotation5 <nl> - @ MyAnnotation6 <nl> - class _ Foo { } <nl> - <nl> - @ interface MyAnnotation5 { } <nl> - <nl> - @ interface MyAnnotation6 { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputIncorrectAnnotationLocation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputIncorrectAnnotationLocation . java <nl> deleted file mode 100644 <nl> index e88f0e0 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputIncorrectAnnotationLocation . java <nl> + + + / dev / null <nl> @ @ - 1 , 109 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . annotation ; <nl> - <nl> - <nl> - <nl> - <nl> - @ MyAnnotation2 @ com . puppycrawl . tools . checkstyle . annotation . MyAnnotation1 / / warn <nl> - ( value = " " ) <nl> - class InputIncorrectAnnotationLocation <nl> - { <nl> - <nl> - @ MyAnnotation2 @ MyAnnotation1 ( value = " " ) <nl> - public int a ; <nl> - <nl> - @ MyAnnotation1 ( value = " " ) public int b ; <nl> - <nl> - @ MyAnnotation2 <nl> - @ MyAnnotation1 / / warn <nl> - ( value = " " ) <nl> - public int c ; <nl> - <nl> - @ MyAnnotation1 ( value = " " ) <nl> - public int d ; <nl> - <nl> - @ MyAnnotation2 <nl> - @ MyAnnotation1 / / warn <nl> - ( value = " " ) <nl> - public InputIncorrectAnnotationLocation ( ) { } <nl> - <nl> - @ MyAnnotation1 ( " foo " ) @ MyAnnotation2 void foo1 ( ) { } / / warn <nl> - <nl> - @ MyAnnotation1 ( value = " " ) <nl> - @ MyAnnotation2 / / warn <nl> - void foo2 ( ) { } <nl> - <nl> - @ MyAnnotation1 ( value = " " ) <nl> - @ MyAnnotation2 / / warn <nl> - @ MyAnnotation3 / / warn <nl> - @ MyAnnotation4 / / warn <nl> - class InnerClass <nl> - { <nl> - @ MyAnnotation2 @ MyAnnotation1 / / warn <nl> - ( value = " " ) <nl> - public int a ; <nl> - <nl> - @ MyAnnotation1 ( value = " " ) public int b ; <nl> - <nl> - @ MyAnnotation2 <nl> - @ MyAnnotation1 / / warn <nl> - ( value = " " ) <nl> - public int c ; <nl> - <nl> - @ MyAnnotation1 ( value = " " ) <nl> - public int d ; <nl> - <nl> - @ MyAnnotation2 <nl> - @ MyAnnotation1 ( value = " " ) public InnerClass ( ) <nl> - { <nl> - / / comment <nl> - } <nl> - @ MyAnnotation1 ( value = " " ) <nl> - @ MyAnnotation2 / / warn <nl> - void foo1 ( ) { } <nl> - <nl> - @ MyAnnotation1 ( value = " " ) <nl> - @ MyAnnotation2 / / warn <nl> - void foo2 ( ) { } <nl> - } <nl> - <nl> - @ MyAnnotation1 ( value = " " ) <nl> - @ MyAnnotation2 / / warn <nl> - InnerClass anon = new InnerClass ( ) <nl> - { <nl> - @ MyAnnotation2 @ MyAnnotation1 ( value = " " ) public int a ; <nl> - <nl> - @ MyAnnotation1 ( value = " " ) public int b ; <nl> - <nl> - @ MyAnnotation2 <nl> - @ MyAnnotation1 ( value = " " ) <nl> - public int c ; <nl> - <nl> - @ MyAnnotation1 ( value = " " ) <nl> - public int d ; <nl> - <nl> - @ MyAnnotation1 ( value = " " ) <nl> - @ MyAnnotation2 void foo1 ( ) { } / / warn <nl> - <nl> - @ MyAnnotation1 ( value = " " ) <nl> - @ MyAnnotation2 / / warn <nl> - void foo2 ( ) { } <nl> - <nl> - @ MyAnnotation1 ( value = " " ) void foo42 ( ) { } <nl> - } ; <nl> - <nl> - } <nl> - <nl> - @ MyAnnotation1 / / warn <nl> - ( value = " " ) <nl> - @ MyAnnotation2 <nl> - class Foo { } <nl> - <nl> - @ interface MyAnnotation1 { <nl> - <nl> - 	 String value ( ) ; } <nl> - <nl> - @ interface MyAnnotation2 { } <nl> - <nl> - @ interface MyAnnotation3 { } <nl> - <nl> - @ interface MyAnnotation4 { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseNoTrailingComma . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseNoTrailingComma . java <nl> new file mode 100644 <nl> index 0000000 . . 3a6e831 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseNoTrailingComma . java <nl> @ @ - 0 , 0 + 1 , 47 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + / / suppress <nl> + @ SuppressWarnings ( { } ) <nl> + public class AnnotationUseNoTrailingComma <nl> + { <nl> + @ SuppressWarnings ( { " common " } ) <nl> + public void foo ( ) { <nl> + <nl> + / * * Suppress warnings * / <nl> + @ SuppressWarnings ( { " common " , " foo " } ) <nl> + Object o = new Object ( ) { <nl> + <nl> + @ SuppressWarnings ( value = { " common " } ) <nl> + public String toString ( ) { <nl> + <nl> + @ SuppressWarnings ( value = { " leo " , " herbie " } ) <nl> + final String pooches = " leo . herbie " ; <nl> + <nl> + return pooches ; <nl> + } <nl> + } ; <nl> + } <nl> + <nl> + @ Test2 ( value = { ( false ) ? " " : " foo " } , more = { ( true ) ? " " : " bar " } ) <nl> + <nl> + @ Pooches2 ( tokens = { } , other = { } ) <nl> + enum P { <nl> + <nl> + @ Pooches2 ( tokens = { Pooches2 . class } , other = { 1 } ) <nl> + L , / / annotation in enum <nl> + <nl> + @ Test2 ( value = { } , more = { ( false ) ? " " : " unchecked " } ) <nl> + Y ; <nl> + } <nl> + <nl> + } <nl> + <nl> + @ interface Test2 { <nl> + String [ ] value ( ) ; <nl> + String [ ] more ( ) default { } ; <nl> + } <nl> + <nl> + @ interface Pooches2 { <nl> + <nl> + Class < ? > [ ] tokens ( ) ; <nl> + int [ ] other ( ) ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseWithTrailingComma . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseWithTrailingComma . java <nl> new file mode 100644 <nl> index 0000000 . . 13ba489 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseWithTrailingComma . java <nl> @ @ - 0 , 0 + 1 , 56 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + / / this file compiles in eclipse 3 . 4 but not with Sun ' s JDK 1 . 6 . 0 . 11 <nl> + <nl> + / * * <nl> + <nl> + * / <nl> + public class AnnotationUseWithTrailingComma <nl> + { <nl> + @ SuppressWarnings ( { " common " , } ) <nl> + public void foo ( ) { <nl> + <nl> + <nl> + @ SuppressWarnings ( { " common " , " foo " , } ) <nl> + Object o = new Object ( ) { <nl> + <nl> + @ SuppressWarnings ( value = { " common " , } ) <nl> + public String toString ( ) { <nl> + <nl> + @ SuppressWarnings ( value = { " leo " , " herbie " , } ) <nl> + final String pooches = " leo . herbie " ; <nl> + <nl> + return pooches ; <nl> + } <nl> + } ; <nl> + } <nl> + <nl> + @ Test ( value = { ( false ) ? " " : " foo " , } , more = { ( true ) ? " " : " bar " , } ) <nl> + / * * <nl> + <nl> + * / <nl> + enum P { <nl> + <nl> + @ Pooches ( tokens = { Pooches . class , } , other = { 1 , } ) <nl> + L , <nl> + <nl> + / * * <nl> + <nl> + * / <nl> + Y ; <nl> + } <nl> + <nl> + } <nl> + <nl> + @ interface Test { <nl> + String [ ] value ( ) ; <nl> + String [ ] more ( ) default { } ; <nl> + / * * <nl> + <nl> + * / <nl> + } <nl> + <nl> + @ interface Pooches { <nl> + <nl> + Class < ? > [ ] tokens ( ) ; <nl> + int [ ] other ( ) ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationsUseStyleParams . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationsUseStyleParams . java <nl> new file mode 100644 <nl> index 0000000 . . 87c01ed <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationsUseStyleParams . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . Target ; <nl> + <nl> + public class AnnotationsUseStyleParams <nl> + { <nl> + @ Target ( { } ) <nl> + public @ interface myAnn { <nl> + <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / DifferentUseStyles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / DifferentUseStyles . java <nl> new file mode 100644 <nl> index 0000000 . . 2d4b143 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / DifferentUseStyles . java <nl> @ @ - 0 , 0 + 1 , 65 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + <nl> + @ Deprecated <nl> + @ SomeArrays ( pooches = { DOGS . LEO } ) <nl> + @ SuppressWarnings ( { " " } ) <nl> + public class DifferentUseStyles <nl> + { <nl> + <nl> + } <nl> + <nl> + @ SomeArrays ( pooches = { DOGS . LEO } , um = { } , duh = { " bleh " } ) <nl> + @ SuppressWarnings ( " " ) / / compact _ no _ array <nl> + @ Deprecated ( ) <nl> + class Dep { <nl> + <nl> + } <nl> + <nl> + @ Deprecated <nl> + @ SomeArrays ( pooches = { DOGS . LEO } ) <nl> + @ SuppressWarnings ( { " " } ) <nl> + enum SON { <nl> + <nl> + @ Deprecated <nl> + @ SomeArrays ( pooches = { DOGS . LEO } , um = { " " } , duh = { " bleh " } ) <nl> + @ APooch ( dog = DOGS . HERBIE ) <nl> + @ Another ( " " ) / / compact _ no _ array <nl> + ETHAN <nl> + } <nl> + <nl> + @ MyAnnotation13 ( ) <nl> + enum DOGS { <nl> + <nl> + @ Deprecated ( ) <nl> + LEO , <nl> + HERBIE <nl> + } <nl> + <nl> + @ interface SomeArrays { <nl> + @ Another ( " " ) / / compact <nl> + String [ ] um ( ) default { } ; <nl> + @ Another ( { " " } ) / / compact <nl> + String [ ] duh ( ) default { } ; <nl> + @ Another ( value = { " " } ) / / expanded <nl> + DOGS [ ] pooches ( ) ; <nl> + } <nl> + <nl> + @ Another ( value = { " " } ) / / expanded <nl> + enum E { <nl> + <nl> + } <nl> + <nl> + @ interface APooch { <nl> + DOGS dog ( ) ; <nl> + } <nl> + <nl> + @ interface Another { <nl> + String [ ] value ( ) ; <nl> + @ Another ( { " foo " , " bar " } ) / / compact style <nl> + String value1 ( ) default " " ; <nl> + } <nl> + <nl> + @ SomeArrays ( pooches = { } ) <nl> + @ Another ( { } ) <nl> + class Closing { <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest1 . java <nl> new file mode 100644 <nl> index 0000000 . . ee72b54 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest1 . java <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + <nl> + public class InputAnnotationLocationCheckTest1 { <nl> + 	 <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest2 . java <nl> new file mode 100644 <nl> index 0000000 . . 299ff5b <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest2 . java <nl> @ @ - 0 , 0 + 1 , 26 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + <nl> + @ MyAnnotation11 @ MyAnnotation12 @ MyAnnotation13 <nl> + public class InputAnnotationLocationCheckTest2 { <nl> + <nl> + @ MyAnnotation13 <nl> + void method ( ) { <nl> + <nl> + } <nl> + <nl> + @ MyAnnotation13 <nl> + @ MyAnnotation12 <nl> + void method2 ( ) { <nl> + <nl> + } <nl> + 	 <nl> + } <nl> + <nl> + @ interface MyAnnotation11 { <nl> + } <nl> + <nl> + @ interface MyAnnotation12 { <nl> + } <nl> + <nl> + @ interface MyAnnotation13 { <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationUseStyleCheckTest . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationUseStyleCheckTest . java <nl> new file mode 100644 <nl> index 0000000 . . 9ea5b24 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationUseStyleCheckTest . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + <nl> + <nl> + @ interface SomeArrays32 { <nl> + @ Another32 ( value = { " foo " , " bar " } ) / / expanded <nl> + DOGS [ ] pooches ( ) ; <nl> + } <nl> + <nl> + <nl> + @ interface Another32 { <nl> + String [ ] value ( ) ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputCorrectAnnotationLocation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputCorrectAnnotationLocation . java <nl> new file mode 100644 <nl> index 0000000 . . f3d8fe4 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputCorrectAnnotationLocation . java <nl> @ @ - 0 , 0 + 1 , 105 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + <nl> + <nl> + <nl> + <nl> + @ MyAnnotation6 <nl> + @ MyAnnotation5 <nl> + class InputCorrectAnnotationLocation <nl> + { <nl> + <nl> + @ MyAnnotation6 <nl> + @ MyAnnotation5 <nl> + public int a ; <nl> + <nl> + @ MyAnnotation5 <nl> + public int b ; <nl> + <nl> + @ MyAnnotation6 <nl> + @ MyAnnotation5 <nl> + public int c ; <nl> + <nl> + @ MyAnnotation5 <nl> + public int d ; <nl> + <nl> + @ MyAnnotation6 <nl> + @ MyAnnotation5 <nl> + public InputCorrectAnnotationLocation ( ) <nl> + { <nl> + / / comment <nl> + } <nl> + @ MyAnnotation5 <nl> + @ MyAnnotation6 <nl> + void foo1 ( ) { } <nl> + <nl> + @ MyAnnotation5 <nl> + @ MyAnnotation6 <nl> + void foo2 ( ) { } <nl> + <nl> + @ MyAnnotation5 <nl> + @ MyAnnotation6 <nl> + @ MyAnnotation3 <nl> + @ MyAnnotation4 <nl> + class InnerClass <nl> + { <nl> + @ MyAnnotation6 <nl> + @ MyAnnotation5 <nl> + public int a ; <nl> + <nl> + @ MyAnnotation5 <nl> + public int b ; <nl> + <nl> + @ MyAnnotation6 <nl> + @ MyAnnotation5 <nl> + public int c ; <nl> + <nl> + @ MyAnnotation5 <nl> + public int d ; <nl> + <nl> + @ MyAnnotation6 <nl> + public InnerClass ( ) <nl> + { <nl> + / / comment <nl> + } <nl> + @ MyAnnotation5 <nl> + @ MyAnnotation6 void foo1 ( int a ) { } <nl> + <nl> + @ MyAnnotation5 <nl> + @ MyAnnotation6 <nl> + void foo2 ( ) { } <nl> + } <nl> + <nl> + @ MyAnnotation5 <nl> + @ MyAnnotation6 <nl> + InnerClass anon = new InnerClass ( ) <nl> + { <nl> + @ MyAnnotation6 <nl> + @ MyAnnotation5 <nl> + public int a ; <nl> + <nl> + @ MyAnnotation5 public int b ; <nl> + <nl> + @ MyAnnotation6 <nl> + @ MyAnnotation5 <nl> + public int c ; <nl> + <nl> + @ MyAnnotation5 <nl> + public int d ; <nl> + <nl> + @ MyAnnotation5 <nl> + @ MyAnnotation6 void foo1 ( ) { } <nl> + <nl> + @ MyAnnotation5 <nl> + @ MyAnnotation6 <nl> + void foo2 ( ) { } <nl> + } ; <nl> + <nl> + } <nl> + <nl> + @ MyAnnotation5 <nl> + @ MyAnnotation6 <nl> + class _ Foo { } <nl> + <nl> + @ interface MyAnnotation5 { } <nl> + <nl> + @ interface MyAnnotation6 { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputIncorrectAnnotationLocation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputIncorrectAnnotationLocation . java <nl> new file mode 100644 <nl> index 0000000 . . abb2f51 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputIncorrectAnnotationLocation . java <nl> @ @ - 0 , 0 + 1 , 109 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + <nl> + <nl> + <nl> + <nl> + @ MyAnnotation2 @ com . puppycrawl . tools . checkstyle . checks . annotation . MyAnnotation1 / / warn <nl> + ( value = " " ) <nl> + class InputIncorrectAnnotationLocation <nl> + { <nl> + <nl> + @ MyAnnotation2 @ MyAnnotation1 ( value = " " ) <nl> + public int a ; <nl> + <nl> + @ MyAnnotation1 ( value = " " ) public int b ; <nl> + <nl> + @ MyAnnotation2 <nl> + @ MyAnnotation1 / / warn <nl> + ( value = " " ) <nl> + public int c ; <nl> + <nl> + @ MyAnnotation1 ( value = " " ) <nl> + public int d ; <nl> + <nl> + @ MyAnnotation2 <nl> + @ MyAnnotation1 / / warn <nl> + ( value = " " ) <nl> + public InputIncorrectAnnotationLocation ( ) { } <nl> + <nl> + @ MyAnnotation1 ( " foo " ) @ MyAnnotation2 void foo1 ( ) { } / / warn <nl> + <nl> + @ MyAnnotation1 ( value = " " ) <nl> + @ MyAnnotation2 / / warn <nl> + void foo2 ( ) { } <nl> + <nl> + @ MyAnnotation1 ( value = " " ) <nl> + @ MyAnnotation2 / / warn <nl> + @ MyAnnotation3 / / warn <nl> + @ MyAnnotation4 / / warn <nl> + class InnerClass <nl> + { <nl> + @ MyAnnotation2 @ MyAnnotation1 / / warn <nl> + ( value = " " ) <nl> + public int a ; <nl> + <nl> + @ MyAnnotation1 ( value = " " ) public int b ; <nl> + <nl> + @ MyAnnotation2 <nl> + @ MyAnnotation1 / / warn <nl> + ( value = " " ) <nl> + public int c ; <nl> + <nl> + @ MyAnnotation1 ( value = " " ) <nl> + public int d ; <nl> + <nl> + @ MyAnnotation2 <nl> + @ MyAnnotation1 ( value = " " ) public InnerClass ( ) <nl> + { <nl> + / / comment <nl> + } <nl> + @ MyAnnotation1 ( value = " " ) <nl> + @ MyAnnotation2 / / warn <nl> + void foo1 ( ) { } <nl> + <nl> + @ MyAnnotation1 ( value = " " ) <nl> + @ MyAnnotation2 / / warn <nl> + void foo2 ( ) { } <nl> + } <nl> + <nl> + @ MyAnnotation1 ( value = " " ) <nl> + @ MyAnnotation2 / / warn <nl> + InnerClass anon = new InnerClass ( ) <nl> + { <nl> + @ MyAnnotation2 @ MyAnnotation1 ( value = " " ) public int a ; <nl> + <nl> + @ MyAnnotation1 ( value = " " ) public int b ; <nl> + <nl> + @ MyAnnotation2 <nl> + @ MyAnnotation1 ( value = " " ) <nl> + public int c ; <nl> + <nl> + @ MyAnnotation1 ( value = " " ) <nl> + public int d ; <nl> + <nl> + @ MyAnnotation1 ( value = " " ) <nl> + @ MyAnnotation2 void foo1 ( ) { } / / warn <nl> + <nl> + @ MyAnnotation1 ( value = " " ) <nl> + @ MyAnnotation2 / / warn <nl> + void foo2 ( ) { } <nl> + <nl> + @ MyAnnotation1 ( value = " " ) void foo42 ( ) { } <nl> + } ; <nl> + <nl> + } <nl> + <nl> + @ MyAnnotation1 / / warn <nl> + ( value = " " ) <nl> + @ MyAnnotation2 <nl> + class Foo { } <nl> + <nl> + @ interface MyAnnotation1 { <nl> + <nl> + 	 String value ( ) ; } <nl> + <nl> + @ interface MyAnnotation2 { } <nl> + <nl> + @ interface MyAnnotation3 { } <nl> + <nl> + @ interface MyAnnotation4 { }
NEAREST DIFF (one line): 

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 index 7e514aa . . d472f92 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 @ @ - 23 , 6 + 23 , 9 @ @ import static com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationLocati 
 import static com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationLocationCheck . MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE ; 
 import static org . junit . Assert . assertArrayEquals ; 
 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + 
 import org . apache . commons . lang3 . ArrayUtils ; 
 import org . junit . Test ; 
 
 @ @ - 31 , 6 + 34 , 11 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 public class AnnotationLocationCheckTest extends BaseCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " annotation " + File . separator + filename ) ; 
 + } 
 
 @ Test 
 public void testGetRequiredTokens ( ) { 
 @ @ - 43 , 7 + 51 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { 
 DefaultConfiguration checkConfig = createCheckConfig ( AnnotationLocationCheck . class ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " annotation / InputCorrectAnnotationLocation . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputCorrectAnnotationLocation . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 70 , 7 + 78 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { 
 " 88 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 10 , 8 ) , 
 " 98 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 0 , 3 ) , 
 } ; 
 - verify ( checkConfig , getPath ( " annotation / InputIncorrectAnnotationLocation . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputIncorrectAnnotationLocation . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 101 , 7 + 109 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { 
 public void testWithoutAnnotations ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( AnnotationLocationCheck . class ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " annotation / InputAnnotationLocationCheckTest1 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputAnnotationLocationCheckTest1 . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 125 , 7 + 133 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { 
 " 88 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 10 , 8 ) , 
 " 98 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION , " MyAnnotation2 " , 0 , 3 ) , 
 } ; 
 - verify ( checkConfig , getPath ( " annotation / InputIncorrectAnnotationLocation . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputIncorrectAnnotationLocation . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 137 , 7 + 145 , 7 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { 
 " 3 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation12 " ) , 
 " 3 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ LOCATION _ ALONE , " MyAnnotation13 " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " annotation / InputAnnotationLocationCheckTest2 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputAnnotationLocationCheckTest2 . java " ) , expected ) ; 
 } 
 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleTest . java 
 index 1b683d0 . . 3f8fa65 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleTest . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 
 import java . io . File ; 
 + import java . io . IOException ; 
 
 import org . apache . commons . beanutils . ConversionException ; 
 import org . apache . commons . lang3 . ArrayUtils ; 
 @ @ - 39 , 6 + 40 , 11 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " annotation " + File . separator + filename ) ; 
 + } 
 
 / * Additional test for jacoco , since valueOf ( ) 
 * is generated by javac and jacoco reports that 
 @ @ - 88 , 7 + 94 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 " 23 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; 
 } 
 
 / * * 
 @ @ - 106 , 7 + 112 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 " 33 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 125 , 7 + 131 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 " 58 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " EXPANDED " ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 139 , 7 + 145 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 156 , 7 + 162 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 181 , 7 + 187 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 " 32 : 56 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationUseNoTrailingComma . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " AnnotationUseNoTrailingComma . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 192 , 7 + 198 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " trailingArrayComma " , " ALWAYS " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationUseWithTrailingComma . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " AnnotationUseWithTrailingComma . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 212 , 7 + 218 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 " 33 : 50 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) , 
 } ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationUseWithTrailingComma . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " AnnotationUseWithTrailingComma . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 223 , 7 + 229 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " trailingArrayComma " , " NEVER " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationUseNoTrailingComma . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " AnnotationUseNoTrailingComma . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 234 , 7 + 240 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " trailingArrayComma " , " ignore " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " DifferentUseStyles . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " DifferentUseStyles . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 243 , 7 + 249 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " closingParens " , " NEVER " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " AnnotationsUseStyleParams . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " AnnotationsUseStyleParams . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 276 , 7 + 282 , 7 @ @ public class AnnotationUseStyleTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " trailingArrayComma " , " ignore " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " annotation " + File . separator + " InputAnnotationUseStyleCheckTest . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputAnnotationUseStyleCheckTest . java " ) , expected ) ; 
 
 } 
 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseNoTrailingComma . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseNoTrailingComma . java 
 deleted file mode 100644 
 index e2508eb . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseNoTrailingComma . java 
 + + + / dev / null 
 @ @ - 1 , 47 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . annotation ; 
 - / / suppress 
 - @ SuppressWarnings ( { } ) 
 - public class AnnotationUseNoTrailingComma 
 - { 
 - @ SuppressWarnings ( { " common " } ) 
 - public void foo ( ) { 
 - 
 - / * * Suppress warnings * / 
 - @ SuppressWarnings ( { " common " , " foo " } ) 
 - Object o = new Object ( ) { 
 - 
 - @ SuppressWarnings ( value = { " common " } ) 
 - public String toString ( ) { 
 - 
 - @ SuppressWarnings ( value = { " leo " , " herbie " } ) 
 - final String pooches = " leo . herbie " ; 
 - 
 - return pooches ; 
 - } 
 - } ; 
 - } 
 - 
 - @ Test2 ( value = { ( false ) ? " " : " foo " } , more = { ( true ) ? " " : " bar " } ) 
 - 
 - @ Pooches2 ( tokens = { } , other = { } ) 
 - enum P { 
 - 
 - @ Pooches2 ( tokens = { Pooches2 . class } , other = { 1 } ) 
 - L , / / annotation in enum 
 - 
 - @ Test2 ( value = { } , more = { ( false ) ? " " : " unchecked " } ) 
 - Y ; 
 - } 
 - 
 - } 
 - 
 - @ interface Test2 { 
 - String [ ] value ( ) ; 
 - String [ ] more ( ) default { } ; 
 - } 
 - 
 - @ interface Pooches2 { 
 - 
 - Class < ? > [ ] tokens ( ) ; 
 - int [ ] other ( ) ; 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseWithTrailingComma . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseWithTrailingComma . java 
 deleted file mode 100644 
 index bef6940 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationUseWithTrailingComma . java 
 + + + / dev / null 
 @ @ - 1 , 56 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . annotation ; 
 - / / this file compiles in eclipse 3 . 4 but not with Sun ' s JDK 1 . 6 . 0 . 11 
 - 
 - / * * 
 - 
 - * / 
 - public class AnnotationUseWithTrailingComma 
 - { 
 - @ SuppressWarnings ( { " common " , } ) 
 - public void foo ( ) { 
 - 
 - 
 - @ SuppressWarnings ( { " common " , " foo " , } ) 
 - Object o = new Object ( ) { 
 - 
 - @ SuppressWarnings ( value = { " common " , } ) 
 - public String toString ( ) { 
 - 
 - @ SuppressWarnings ( value = { " leo " , " herbie " , } ) 
 - final String pooches = " leo . herbie " ; 
 - 
 - return pooches ; 
 - } 
 - } ; 
 - } 
 - 
 - @ Test ( value = { ( false ) ? " " : " foo " , } , more = { ( true ) ? " " : " bar " , } ) 
 - / * * 
 - 
 - * / 
 - enum P { 
 - 
 - @ Pooches ( tokens = { Pooches . class , } , other = { 1 , } ) 
 - L , 
 - 
 - / * * 
 - 
 - * / 
 - Y ; 
 - } 
 - 
 - } 
 - 
 - @ interface Test { 
 - String [ ] value ( ) ; 
 - String [ ] more ( ) default { } ; 
 - / * * 
 - 
 - * / 
 - } 
 - 
 - @ interface Pooches { 
 - 
 - Class < ? > [ ] tokens ( ) ; 
 - int [ ] other ( ) ; 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationsUseStyleParams . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationsUseStyleParams . java 
 deleted file mode 100644 
 index dde9837 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / AnnotationsUseStyleParams . java 
 + + + / dev / null 
 @ @ - 1 , 12 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . annotation ; 
 - 
 - import java . lang . annotation . Retention ; 
 - import java . lang . annotation . Target ; 
 - 
 - public class AnnotationsUseStyleParams 
 - { 
 - @ Target ( { } ) 
 - public @ interface myAnn { 
 - 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / DifferentUseStyles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / DifferentUseStyles . java 
 deleted file mode 100644 
 index 53746c4 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / DifferentUseStyles . java 
 + + + / dev / null 
 @ @ - 1 , 65 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . annotation ; 
 - 
 - @ Deprecated 
 - @ SomeArrays ( pooches = { DOGS . LEO } ) 
 - @ SuppressWarnings ( { " " } ) 
 - public class DifferentUseStyles 
 - { 
 - 
 - } 
 - 
 - @ SomeArrays ( pooches = { DOGS . LEO } , um = { } , duh = { " bleh " } ) 
 - @ SuppressWarnings ( " " ) / / compact _ no _ array 
 - @ Deprecated ( ) 
 - class Dep { 
 - 
 - } 
 - 
 - @ Deprecated 
 - @ SomeArrays ( pooches = { DOGS . LEO } ) 
 - @ SuppressWarnings ( { " " } ) 
 - enum SON { 
 - 
 - @ Deprecated 
 - @ SomeArrays ( pooches = { DOGS . LEO } , um = { " " } , duh = { " bleh " } ) 
 - @ APooch ( dog = DOGS . HERBIE ) 
 - @ Another ( " " ) / / compact _ no _ array 
 - ETHAN 
 - } 
 - 
 - @ MyAnnotation13 ( ) 
 - enum DOGS { 
 - 
 - @ Deprecated ( ) 
 - LEO , 
 - HERBIE 
 - } 
 - 
 - @ interface SomeArrays { 
 - @ Another ( " " ) / / compact 
 - String [ ] um ( ) default { } ; 
 - @ Another ( { " " } ) / / compact 
 - String [ ] duh ( ) default { } ; 
 - @ Another ( value = { " " } ) / / expanded 
 - DOGS [ ] pooches ( ) ; 
 - } 
 - 
 - @ Another ( value = { " " } ) / / expanded 
 - enum E { 
 - 
 - } 
 - 
 - @ interface APooch { 
 - DOGS dog ( ) ; 
 - } 
 - 
 - @ interface Another { 
 - String [ ] value ( ) ; 
 - @ Another ( { " foo " , " bar " } ) / / compact style 
 - String value1 ( ) default " " ; 
 - } 
 - 
 - @ SomeArrays ( pooches = { } ) 
 - @ Another ( { } ) 
 - class Closing { 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest1 . java 
 deleted file mode 100644 
 index 385656a . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest1 . java 
 + + + / dev / null 
 @ @ - 1 , 5 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . annotation ; 
 - 
 - public class InputAnnotationLocationCheckTest1 { 
 - 	 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest2 . java 
 deleted file mode 100644 
 index 844721f . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationLocationCheckTest2 . java 
 + + + / dev / null 
 @ @ - 1 , 26 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . annotation ; 
 - 
 - @ MyAnnotation11 @ MyAnnotation12 @ MyAnnotation13 
 - public class InputAnnotationLocationCheckTest2 { 
 - 
 - @ MyAnnotation13 
 - void method ( ) { 
 - 
 - } 
 - 
 - @ MyAnnotation13 
 - @ MyAnnotation12 
 - void method2 ( ) { 
 - 
 - } 
 - 	 
 - } 
 - 
 - @ interface MyAnnotation11 { 
 - } 
 - 
 - @ interface MyAnnotation12 { 
 - } 
 - 
 - @ interface MyAnnotation13 { 
 - } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationUseStyleCheckTest . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationUseStyleCheckTest . java 
 deleted file mode 100644 
 index ccf3076 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputAnnotationUseStyleCheckTest . java 
 + + + / dev / null 
 @ @ - 1 , 12 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . annotation ; 
 - 
 - 
 - @ interface SomeArrays32 { 
 - @ Another32 ( value = { " foo " , " bar " } ) / / expanded 
 - DOGS [ ] pooches ( ) ; 
 - } 
 - 
 - 
 - @ interface Another32 { 
 - String [ ] value ( ) ; 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputCorrectAnnotationLocation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputCorrectAnnotationLocation . java 
 deleted file mode 100644 
 index deaa0be . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputCorrectAnnotationLocation . java 
 + + + / dev / null 
 @ @ - 1 , 105 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . annotation ; 
 - 
 - 
 - 
 - 
 - @ MyAnnotation6 
 - @ MyAnnotation5 
 - class InputCorrectAnnotationLocation 
 - { 
 - 
 - @ MyAnnotation6 
 - @ MyAnnotation5 
 - public int a ; 
 - 
 - @ MyAnnotation5 
 - public int b ; 
 - 
 - @ MyAnnotation6 
 - @ MyAnnotation5 
 - public int c ; 
 - 
 - @ MyAnnotation5 
 - public int d ; 
 - 
 - @ MyAnnotation6 
 - @ MyAnnotation5 
 - public InputCorrectAnnotationLocation ( ) 
 - { 
 - / / comment 
 - } 
 - @ MyAnnotation5 
 - @ MyAnnotation6 
 - void foo1 ( ) { } 
 - 
 - @ MyAnnotation5 
 - @ MyAnnotation6 
 - void foo2 ( ) { } 
 - 
 - @ MyAnnotation5 
 - @ MyAnnotation6 
 - @ MyAnnotation3 
 - @ MyAnnotation4 
 - class InnerClass 
 - { 
 - @ MyAnnotation6 
 - @ MyAnnotation5 
 - public int a ; 
 - 
 - @ MyAnnotation5 
 - public int b ; 
 - 
 - @ MyAnnotation6 
 - @ MyAnnotation5 
 - public int c ; 
 - 
 - @ MyAnnotation5 
 - public int d ; 
 - 
 - @ MyAnnotation6 
 - public InnerClass ( ) 
 - { 
 - / / comment 
 - } 
 - @ MyAnnotation5 
 - @ MyAnnotation6 void foo1 ( int a ) { } 
 - 
 - @ MyAnnotation5 
 - @ MyAnnotation6 
 - void foo2 ( ) { } 
 - } 
 - 
 - @ MyAnnotation5 
 - @ MyAnnotation6 
 - InnerClass anon = new InnerClass ( ) 
 - { 
 - @ MyAnnotation6 
 - @ MyAnnotation5 
 - public int a ; 
 - 
 - @ MyAnnotation5 public int b ; 
 - 
 - @ MyAnnotation6 
 - @ MyAnnotation5 
 - public int c ; 
 - 
 - @ MyAnnotation5 
 - public int d ; 
 - 
 - @ MyAnnotation5 
 - @ MyAnnotation6 void foo1 ( ) { } 
 - 
 - @ MyAnnotation5 
 - @ MyAnnotation6 
 - void foo2 ( ) { } 
 - } ; 
 - 
 - } 
 - 
 - @ MyAnnotation5 
 - @ MyAnnotation6 
 - class _ Foo { } 
 - 
 - @ interface MyAnnotation5 { } 
 - 
 - @ interface MyAnnotation6 { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputIncorrectAnnotationLocation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputIncorrectAnnotationLocation . java 
 deleted file mode 100644 
 index e88f0e0 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / InputIncorrectAnnotationLocation . java 
 + + + / dev / null 
 @ @ - 1 , 109 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . annotation ; 
 - 
 - 
 - 
 - 
 - @ MyAnnotation2 @ com . puppycrawl . tools . checkstyle . annotation . MyAnnotation1 / / warn 
 - ( value = " " ) 
 - class InputIncorrectAnnotationLocation 
 - { 
 - 
 - @ MyAnnotation2 @ MyAnnotation1 ( value = " " ) 
 - public int a ; 
 - 
 - @ MyAnnotation1 ( value = " " ) public int b ; 
 - 
 - @ MyAnnotation2 
 - @ MyAnnotation1 / / warn 
 - ( value = " " ) 
 - public int c ; 
 - 
 - @ MyAnnotation1 ( value = " " ) 
 - public int d ; 
 - 
 - @ MyAnnotation2 
 - @ MyAnnotation1 / / warn 
 - ( value = " " ) 
 - public InputIncorrectAnnotationLocation ( ) { } 
 - 
 - @ MyAnnotation1 ( " foo " ) @ MyAnnotation2 void foo1 ( ) { } / / warn 
 - 
 - @ MyAnnotation1 ( value = " " ) 
 - @ MyAnnotation2 / / warn 
 - void foo2 ( ) { } 
 - 
 - @ MyAnnotation1 ( value = " " ) 
 - @ MyAnnotation2 / / warn 
 - @ MyAnnotation3 / / warn 
 - @ MyAnnotation4 / / warn 
 - class InnerClass 
 - { 
 - @ MyAnnotation2 @ MyAnnotation1 / / warn 
 - ( value = " " ) 
 - public int a ; 
 - 
 - @ MyAnnotation1 ( value = " " ) public int b ; 
 - 
 - @ MyAnnotation2 
 - @ MyAnnotation1 / / warn 
 - ( value = " " ) 
 - public int c ; 
 - 
 - @ MyAnnotation1 ( value = " " ) 
 - public int d ; 
 - 
 - @ MyAnnotation2 
 - @ MyAnnotation1 ( value = " " ) public InnerClass ( ) 
 - { 
 - / / comment 
 - } 
 - @ MyAnnotation1 ( value = " " ) 
 - @ MyAnnotation2 / / warn 
 - void foo1 ( ) { } 
 - 
 - @ MyAnnotation1 ( value = " " ) 
 - @ MyAnnotation2 / / warn 
 - void foo2 ( ) { } 
 - } 
 - 
 - @ MyAnnotation1 ( value = " " ) 
 - @ MyAnnotation2 / / warn 
 - InnerClass anon = new InnerClass ( ) 
 - { 
 - @ MyAnnotation2 @ MyAnnotation1 ( value = " " ) public int a ; 
 - 
 - @ MyAnnotation1 ( value = " " ) public int b ; 
 - 
 - @ MyAnnotation2 
 - @ MyAnnotation1 ( value = " " ) 
 - public int c ; 
 - 
 - @ MyAnnotation1 ( value = " " ) 
 - public int d ; 
 - 
 - @ MyAnnotation1 ( value = " " ) 
 - @ MyAnnotation2 void foo1 ( ) { } / / warn 
 - 
 - @ MyAnnotation1 ( value = " " ) 
 - @ MyAnnotation2 / / warn 
 - void foo2 ( ) { } 
 - 
 - @ MyAnnotation1 ( value = " " ) void foo42 ( ) { } 
 - } ; 
 - 
 - } 
 - 
 - @ MyAnnotation1 / / warn 
 - ( value = " " ) 
 - @ MyAnnotation2 
 - class Foo { } 
 - 
 - @ interface MyAnnotation1 { 
 - 
 - 	 String value ( ) ; } 
 - 
 - @ interface MyAnnotation2 { } 
 - 
 - @ interface MyAnnotation3 { } 
 - 
 - @ interface MyAnnotation4 { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseNoTrailingComma . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseNoTrailingComma . java 
 new file mode 100644 
 index 0000000 . . 3a6e831 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseNoTrailingComma . java 
 @ @ - 0 , 0 + 1 , 47 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + / / suppress 
 + @ SuppressWarnings ( { } ) 
 + public class AnnotationUseNoTrailingComma 
 + { 
 + @ SuppressWarnings ( { " common " } ) 
 + public void foo ( ) { 
 + 
 + / * * Suppress warnings * / 
 + @ SuppressWarnings ( { " common " , " foo " } ) 
 + Object o = new Object ( ) { 
 + 
 + @ SuppressWarnings ( value = { " common " } ) 
 + public String toString ( ) { 
 + 
 + @ SuppressWarnings ( value = { " leo " , " herbie " } ) 
 + final String pooches = " leo . herbie " ; 
 + 
 + return pooches ; 
 + } 
 + } ; 
 + } 
 + 
 + @ Test2 ( value = { ( false ) ? " " : " foo " } , more = { ( true ) ? " " : " bar " } ) 
 + 
 + @ Pooches2 ( tokens = { } , other = { } ) 
 + enum P { 
 + 
 + @ Pooches2 ( tokens = { Pooches2 . class } , other = { 1 } ) 
 + L , / / annotation in enum 
 + 
 + @ Test2 ( value = { } , more = { ( false ) ? " " : " unchecked " } ) 
 + Y ; 
 + } 
 + 
 + } 
 + 
 + @ interface Test2 { 
 + String [ ] value ( ) ; 
 + String [ ] more ( ) default { } ; 
 + } 
 + 
 + @ interface Pooches2 { 
 + 
 + Class < ? > [ ] tokens ( ) ; 
 + int [ ] other ( ) ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseWithTrailingComma . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseWithTrailingComma . java 
 new file mode 100644 
 index 0000000 . . 13ba489 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseWithTrailingComma . java 
 @ @ - 0 , 0 + 1 , 56 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + / / this file compiles in eclipse 3 . 4 but not with Sun ' s JDK 1 . 6 . 0 . 11 
 + 
 + / * * 
 + 
 + * / 
 + public class AnnotationUseWithTrailingComma 
 + { 
 + @ SuppressWarnings ( { " common " , } ) 
 + public void foo ( ) { 
 + 
 + 
 + @ SuppressWarnings ( { " common " , " foo " , } ) 
 + Object o = new Object ( ) { 
 + 
 + @ SuppressWarnings ( value = { " common " , } ) 
 + public String toString ( ) { 
 + 
 + @ SuppressWarnings ( value = { " leo " , " herbie " , } ) 
 + final String pooches = " leo . herbie " ; 
 + 
 + return pooches ; 
 + } 
 + } ; 
 + } 
 + 
 + @ Test ( value = { ( false ) ? " " : " foo " , } , more = { ( true ) ? " " : " bar " , } ) 
 + / * * 
 + 
 + * / 
 + enum P { 
 + 
 + @ Pooches ( tokens = { Pooches . class , } , other = { 1 , } ) 
 + L , 
 + 
 + / * * 
 + 
 + * / 
 + Y ; 
 + } 
 + 
 + } 
 + 
 + @ interface Test { 
 + String [ ] value ( ) ; 
 + String [ ] more ( ) default { } ; 
 + / * * 
 + 
 + * / 
 + } 
 + 
 + @ interface Pooches { 
 + 
 + Class < ? > [ ] tokens ( ) ; 
 + int [ ] other ( ) ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationsUseStyleParams . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationsUseStyleParams . java 
 new file mode 100644 
 index 0000000 . . 87c01ed 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationsUseStyleParams . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + 
 + import java . lang . annotation . Retention ; 
 + import java . lang . annotation . Target ; 
 + 
 + public class AnnotationsUseStyleParams 
 + { 
 + @ Target ( { } ) 
 + public @ interface myAnn { 
 + 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / DifferentUseStyles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / DifferentUseStyles . java 
 new file mode 100644 
 index 0000000 . . 2d4b143 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / DifferentUseStyles . java 
 @ @ - 0 , 0 + 1 , 65 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + 
 + @ Deprecated 
 + @ SomeArrays ( pooches = { DOGS . LEO } ) 
 + @ SuppressWarnings ( { " " } ) 
 + public class DifferentUseStyles 
 + { 
 + 
 + } 
 + 
 + @ SomeArrays ( pooches = { DOGS . LEO } , um = { } , duh = { " bleh " } ) 
 + @ SuppressWarnings ( " " ) / / compact _ no _ array 
 + @ Deprecated ( ) 
 + class Dep { 
 + 
 + } 
 + 
 + @ Deprecated 
 + @ SomeArrays ( pooches = { DOGS . LEO } ) 
 + @ SuppressWarnings ( { " " } ) 
 + enum SON { 
 + 
 + @ Deprecated 
 + @ SomeArrays ( pooches = { DOGS . LEO } , um = { " " } , duh = { " bleh " } ) 
 + @ APooch ( dog = DOGS . HERBIE ) 
 + @ Another ( " " ) / / compact _ no _ array 
 + ETHAN 
 + } 
 + 
 + @ MyAnnotation13 ( ) 
 + enum DOGS { 
 + 
 + @ Deprecated ( ) 
 + LEO , 
 + HERBIE 
 + } 
 + 
 + @ interface SomeArrays { 
 + @ Another ( " " ) / / compact 
 + String [ ] um ( ) default { } ; 
 + @ Another ( { " " } ) / / compact 
 + String [ ] duh ( ) default { } ; 
 + @ Another ( value = { " " } ) / / expanded 
 + DOGS [ ] pooches ( ) ; 
 + } 
 + 
 + @ Another ( value = { " " } ) / / expanded 
 + enum E { 
 + 
 + } 
 + 
 + @ interface APooch { 
 + DOGS dog ( ) ; 
 + } 
 + 
 + @ interface Another { 
 + String [ ] value ( ) ; 
 + @ Another ( { " foo " , " bar " } ) / / compact style 
 + String value1 ( ) default " " ; 
 + } 
 + 
 + @ SomeArrays ( pooches = { } ) 
 + @ Another ( { } ) 
 + class Closing { 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest1 . java 
 new file mode 100644 
 index 0000000 . . ee72b54 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest1 . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + 
 + public class InputAnnotationLocationCheckTest1 { 
 + 	 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest2 . java 
 new file mode 100644 
 index 0000000 . . 299ff5b 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocationCheckTest2 . java 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + 
 + @ MyAnnotation11 @ MyAnnotation12 @ MyAnnotation13 
 + public class InputAnnotationLocationCheckTest2 { 
 + 
 + @ MyAnnotation13 
 + void method ( ) { 
 + 
 + } 
 + 
 + @ MyAnnotation13 
 + @ MyAnnotation12 
 + void method2 ( ) { 
 + 
 + } 
 + 	 
 + } 
 + 
 + @ interface MyAnnotation11 { 
 + } 
 + 
 + @ interface MyAnnotation12 { 
 + } 
 + 
 + @ interface MyAnnotation13 { 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationUseStyleCheckTest . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationUseStyleCheckTest . java 
 new file mode 100644 
 index 0000000 . . 9ea5b24 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationUseStyleCheckTest . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + 
 + 
 + @ interface SomeArrays32 { 
 + @ Another32 ( value = { " foo " , " bar " } ) / / expanded 
 + DOGS [ ] pooches ( ) ; 
 + } 
 + 
 + 
 + @ interface Another32 { 
 + String [ ] value ( ) ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputCorrectAnnotationLocation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputCorrectAnnotationLocation . java 
 new file mode 100644 
 index 0000000 . . f3d8fe4 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputCorrectAnnotationLocation . java 
 @ @ - 0 , 0 + 1 , 105 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + 
 + 
 + 
 + 
 + @ MyAnnotation6 
 + @ MyAnnotation5 
 + class InputCorrectAnnotationLocation 
 + { 
 + 
 + @ MyAnnotation6 
 + @ MyAnnotation5 
 + public int a ; 
 + 
 + @ MyAnnotation5 
 + public int b ; 
 + 
 + @ MyAnnotation6 
 + @ MyAnnotation5 
 + public int c ; 
 + 
 + @ MyAnnotation5 
 + public int d ; 
 + 
 + @ MyAnnotation6 
 + @ MyAnnotation5 
 + public InputCorrectAnnotationLocation ( ) 
 + { 
 + / / comment 
 + } 
 + @ MyAnnotation5 
 + @ MyAnnotation6 
 + void foo1 ( ) { } 
 + 
 + @ MyAnnotation5 
 + @ MyAnnotation6 
 + void foo2 ( ) { } 
 + 
 + @ MyAnnotation5 
 + @ MyAnnotation6 
 + @ MyAnnotation3 
 + @ MyAnnotation4 
 + class InnerClass 
 + { 
 + @ MyAnnotation6 
 + @ MyAnnotation5 
 + public int a ; 
 + 
 + @ MyAnnotation5 
 + public int b ; 
 + 
 + @ MyAnnotation6 
 + @ MyAnnotation5 
 + public int c ; 
 + 
 + @ MyAnnotation5 
 + public int d ; 
 + 
 + @ MyAnnotation6 
 + public InnerClass ( ) 
 + { 
 + / / comment 
 + } 
 + @ MyAnnotation5 
 + @ MyAnnotation6 void foo1 ( int a ) { } 
 + 
 + @ MyAnnotation5 
 + @ MyAnnotation6 
 + void foo2 ( ) { } 
 + } 
 + 
 + @ MyAnnotation5 
 + @ MyAnnotation6 
 + InnerClass anon = new InnerClass ( ) 
 + { 
 + @ MyAnnotation6 
 + @ MyAnnotation5 
 + public int a ; 
 + 
 + @ MyAnnotation5 public int b ; 
 + 
 + @ MyAnnotation6 
 + @ MyAnnotation5 
 + public int c ; 
 + 
 + @ MyAnnotation5 
 + public int d ; 
 + 
 + @ MyAnnotation5 
 + @ MyAnnotation6 void foo1 ( ) { } 
 + 
 + @ MyAnnotation5 
 + @ MyAnnotation6 
 + void foo2 ( ) { } 
 + } ; 
 + 
 + } 
 + 
 + @ MyAnnotation5 
 + @ MyAnnotation6 
 + class _ Foo { } 
 + 
 + @ interface MyAnnotation5 { } 
 + 
 + @ interface MyAnnotation6 { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputIncorrectAnnotationLocation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputIncorrectAnnotationLocation . java 
 new file mode 100644 
 index 0000000 . . abb2f51 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputIncorrectAnnotationLocation . java 
 @ @ - 0 , 0 + 1 , 109 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + 
 + 
 + 
 + 
 + @ MyAnnotation2 @ com . puppycrawl . tools . checkstyle . checks . annotation . MyAnnotation1 / / warn 
 + ( value = " " ) 
 + class InputIncorrectAnnotationLocation 
 + { 
 + 
 + @ MyAnnotation2 @ MyAnnotation1 ( value = " " ) 
 + public int a ; 
 + 
 + @ MyAnnotation1 ( value = " " ) public int b ; 
 + 
 + @ MyAnnotation2 
 + @ MyAnnotation1 / / warn 
 + ( value = " " ) 
 + public int c ; 
 + 
 + @ MyAnnotation1 ( value = " " ) 
 + public int d ; 
 + 
 + @ MyAnnotation2 
 + @ MyAnnotation1 / / warn 
 + ( value = " " ) 
 + public InputIncorrectAnnotationLocation ( ) { } 
 + 
 + @ MyAnnotation1 ( " foo " ) @ MyAnnotation2 void foo1 ( ) { } / / warn 
 + 
 + @ MyAnnotation1 ( value = " " ) 
 + @ MyAnnotation2 / / warn 
 + void foo2 ( ) { } 
 + 
 + @ MyAnnotation1 ( value = " " ) 
 + @ MyAnnotation2 / / warn 
 + @ MyAnnotation3 / / warn 
 + @ MyAnnotation4 / / warn 
 + class InnerClass 
 + { 
 + @ MyAnnotation2 @ MyAnnotation1 / / warn 
 + ( value = " " ) 
 + public int a ; 
 + 
 + @ MyAnnotation1 ( value = " " ) public int b ; 
 + 
 + @ MyAnnotation2 
 + @ MyAnnotation1 / / warn 
 + ( value = " " ) 
 + public int c ; 
 + 
 + @ MyAnnotation1 ( value = " " ) 
 + public int d ; 
 + 
 + @ MyAnnotation2 
 + @ MyAnnotation1 ( value = " " ) public InnerClass ( ) 
 + { 
 + / / comment 
 + } 
 + @ MyAnnotation1 ( value = " " ) 
 + @ MyAnnotation2 / / warn 
 + void foo1 ( ) { } 
 + 
 + @ MyAnnotation1 ( value = " " ) 
 + @ MyAnnotation2 / / warn 
 + void foo2 ( ) { } 
 + } 
 + 
 + @ MyAnnotation1 ( value = " " ) 
 + @ MyAnnotation2 / / warn 
 + InnerClass anon = new InnerClass ( ) 
 + { 
 + @ MyAnnotation2 @ MyAnnotation1 ( value = " " ) public int a ; 
 + 
 + @ MyAnnotation1 ( value = " " ) public int b ; 
 + 
 + @ MyAnnotation2 
 + @ MyAnnotation1 ( value = " " ) 
 + public int c ; 
 + 
 + @ MyAnnotation1 ( value = " " ) 
 + public int d ; 
 + 
 + @ MyAnnotation1 ( value = " " ) 
 + @ MyAnnotation2 void foo1 ( ) { } / / warn 
 + 
 + @ MyAnnotation1 ( value = " " ) 
 + @ MyAnnotation2 / / warn 
 + void foo2 ( ) { } 
 + 
 + @ MyAnnotation1 ( value = " " ) void foo42 ( ) { } 
 + } ; 
 + 
 + } 
 + 
 + @ MyAnnotation1 / / warn 
 + ( value = " " ) 
 + @ MyAnnotation2 
 + class Foo { } 
 + 
 + @ interface MyAnnotation1 { 
 + 
 + 	 String value ( ) ; } 
 + 
 + @ interface MyAnnotation2 { } 
 + 
 + @ interface MyAnnotation3 { } 
 + 
 + @ interface MyAnnotation4 { }

NEAREST DIFF:

