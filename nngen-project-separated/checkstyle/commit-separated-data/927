BLEU SCORE: 0.15727800941615358

TEST MSG: config : bump slf4j - simple version to 1 . 7 . 23
GENERATED MSG: config : version bump for slf4j - simple

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 62bbcbd . . fbccbf7 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 307 , 7 + 307 , 7 @ @ <nl> < dependency > <nl> < groupId > org . slf4j < / groupId > <nl> < artifactId > slf4j - simple < / artifactId > <nl> - < version > 1 . 7 . 22 < / version > <nl> + < version > 1 . 7 . 23 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> index a231cee . . dd1f510 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> @ @ - 169 , 7 + 169 , 7 @ @ public class ClassResolver { <nl> safeLoad ( name ) ; <nl> return true ; <nl> } <nl> - catch ( final ClassNotFoundException ignored ) { <nl> + catch ( final ClassNotFoundException | NoClassDefFoundError ignored ) { <nl> return false ; <nl> } <nl> } <nl> @ @ - 180 , 8 + 180 , 9 @ @ public class ClassResolver { <nl> * @ param name name of the class to load <nl> * @ return the { @ code Class } for the specified class <nl> * @ throws ClassNotFoundException if an error occurs <nl> + * @ throws NoClassDefFoundError if an error occurs <nl> * / <nl> - public Class < ? > safeLoad ( String name ) throws ClassNotFoundException { <nl> + private Class < ? > safeLoad ( String name ) throws ClassNotFoundException , NoClassDefFoundError { <nl> / / The next line will load the class using the specified class <nl> / / loader . The magic is having the " false " parameter . This means the <nl> / / class will not be initialised . Very , very important . <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java <nl> index 7a3061f . . bf1c2a4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertNotNull ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> @ @ - 150 , 4 + 151 , 32 @ @ public class ClassResolverTest { <nl> assertTrue ( ex . getMessage ( ) . endsWith ( " expected exception " ) ) ; <nl> } <nl> } <nl> + <nl> + / * * <nl> + * This test exists to prevent any possible regression and let of <nl> + * https : / / github . com / checkstyle / checkstyle / issues / 1192 to be persistent <nl> + * event is not very obvious <nl> + * <nl> + * @ throws Exception when smth is not expected <nl> + * / <nl> + @ Test <nl> + public void testIsLoadableWithNoClassDefFoundError ( ) throws Exception { <nl> + final Set < String > imports = Sets . newHashSet ( ) ; <nl> + imports . add ( " java . applet . someClass " ) ; <nl> + <nl> + final ClassResolver classResolver = PowerMockito . spy ( new ClassResolver ( Thread <nl> + . currentThread ( ) . getContextClassLoader ( ) , " " , imports ) ) ; <nl> + <nl> + PowerMockito . doThrow ( new NoClassDefFoundError ( " expected exception " ) ) <nl> + . when ( classResolver , " safeLoad " , anyObject ( ) ) ; <nl> + <nl> + try { <nl> + final boolean result = classResolver . isLoadable ( " someClass " ) ; <nl> + assertFalse ( " result should be false " , result ) ; <nl> + } <nl> + catch ( NoClassDefFoundError ex ) { <nl> + fail ( " NoClassDefFoundError is not expected " ) ; <nl> + assertTrue ( ex . getMessage ( ) . endsWith ( " expected exception " ) ) ; <nl> + } <nl> + } <nl> }

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 62bbcbd . . fbccbf7 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 307 , 7 + 307 , 7 @ @ 
 < dependency > 
 < groupId > org . slf4j < / groupId > 
 < artifactId > slf4j - simple < / artifactId > 
 - < version > 1 . 7 . 22 < / version > 
 + < version > 1 . 7 . 23 < / version > 
 < scope > test < / scope > 
 < / dependency > 
 < dependency >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 index a231cee . . dd1f510 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 @ @ - 169 , 7 + 169 , 7 @ @ public class ClassResolver { 
 safeLoad ( name ) ; 
 return true ; 
 } 
 - catch ( final ClassNotFoundException ignored ) { 
 + catch ( final ClassNotFoundException | NoClassDefFoundError ignored ) { 
 return false ; 
 } 
 } 
 @ @ - 180 , 8 + 180 , 9 @ @ public class ClassResolver { 
 * @ param name name of the class to load 
 * @ return the { @ code Class } for the specified class 
 * @ throws ClassNotFoundException if an error occurs 
 + * @ throws NoClassDefFoundError if an error occurs 
 * / 
 - public Class < ? > safeLoad ( String name ) throws ClassNotFoundException { 
 + private Class < ? > safeLoad ( String name ) throws ClassNotFoundException , NoClassDefFoundError { 
 / / The next line will load the class using the specified class 
 / / loader . The magic is having the " false " parameter . This means the 
 / / class will not be initialised . Very , very important . 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java 
 index 7a3061f . . bf1c2a4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 package com . puppycrawl . tools . checkstyle . checks ; 
 
 import static org . junit . Assert . assertEquals ; 
 + import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertNotNull ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 @ @ - 150 , 4 + 151 , 32 @ @ public class ClassResolverTest { 
 assertTrue ( ex . getMessage ( ) . endsWith ( " expected exception " ) ) ; 
 } 
 } 
 + 
 + / * * 
 + * This test exists to prevent any possible regression and let of 
 + * https : / / github . com / checkstyle / checkstyle / issues / 1192 to be persistent 
 + * event is not very obvious 
 + * 
 + * @ throws Exception when smth is not expected 
 + * / 
 + @ Test 
 + public void testIsLoadableWithNoClassDefFoundError ( ) throws Exception { 
 + final Set < String > imports = Sets . newHashSet ( ) ; 
 + imports . add ( " java . applet . someClass " ) ; 
 + 
 + final ClassResolver classResolver = PowerMockito . spy ( new ClassResolver ( Thread 
 + . currentThread ( ) . getContextClassLoader ( ) , " " , imports ) ) ; 
 + 
 + PowerMockito . doThrow ( new NoClassDefFoundError ( " expected exception " ) ) 
 + . when ( classResolver , " safeLoad " , anyObject ( ) ) ; 
 + 
 + try { 
 + final boolean result = classResolver . isLoadable ( " someClass " ) ; 
 + assertFalse ( " result should be false " , result ) ; 
 + } 
 + catch ( NoClassDefFoundError ex ) { 
 + fail ( " NoClassDefFoundError is not expected " ) ; 
 + assertTrue ( ex . getMessage ( ) . endsWith ( " expected exception " ) ) ; 
 + } 
 + } 
 }
