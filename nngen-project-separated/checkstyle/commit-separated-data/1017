BLEU SCORE: 0.033864985683445356

TEST MSG: Issue # 3622 : expanded and fixed documentation for checker and treewalker
GENERATED MSG: Documentation for suppressions .

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java <nl> index 5acd40a . . 2905b0b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java <nl> @ @ - 38 , 7 + 38 , 7 @ @ import org . w3c . dom . NodeList ; <nl> import org . xml . sax . SAXException ; <nl> <nl> public final class XDocUtil { <nl> - private static final String DIRECTORY _ PATH = " src / xdocs " ; <nl> + public static final String DIRECTORY _ PATH = " src / xdocs " ; <nl> <nl> private XDocUtil ( ) { <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> index d93ae3a . . 2495f0a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> @ @ - 122 , 6 + 122 , 14 @ @ public class XDocsPagesTest { <nl> private static final Set < String > FILESET _ PROPERTIES = getProperties ( AbstractFileSetCheck . class ) ; <nl> <nl> private static final List < String > UNDOCUMENTED _ PROPERTIES = Arrays . asList ( <nl> + " Checker . classLoader " , <nl> + " Checker . classloader " , <nl> + " Checker . moduleClassLoader " , <nl> + " Checker . moduleFactory " , <nl> + " TreeWalker . classLoader " , <nl> + " TreeWalker . moduleFactory " , <nl> + " TreeWalker . cacheFile " , <nl> + " TreeWalker . upChild " , <nl> " SuppressWithNearbyCommentFilter . fileContents " , <nl> " SuppressionCommentFilter . fileContents " <nl> ) ; <nl> @ @ - 302 , 6 + 310 , 30 @ @ public class XDocsPagesTest { <nl> } <nl> } <nl> <nl> + @ Test <nl> + public void testAllCheckSectionsEx ( ) throws Exception { <nl> + final ModuleFactory moduleFactory = TestUtils . getPackageObjectFactory ( ) ; <nl> + <nl> + final Path path = Paths . get ( XDocUtil . DIRECTORY _ PATH + " / config . xml " ) ; <nl> + final String fileName = path . getFileName ( ) . toString ( ) ; <nl> + <nl> + final String input = new String ( Files . readAllBytes ( path ) , UTF _ 8 ) ; <nl> + final Document document = XmlUtil . getRawXml ( fileName , input , input ) ; <nl> + final NodeList sources = document . getElementsByTagName ( " section " ) ; <nl> + <nl> + for ( int position = 0 ; position < sources . getLength ( ) ; position + + ) { <nl> + final Node section = sources . item ( position ) ; <nl> + final String sectionName = section . getAttributes ( ) . getNamedItem ( " name " ) <nl> + . getNodeValue ( ) ; <nl> + <nl> + if ( ! " Checker " . equals ( sectionName ) & & ! " TreeWalker " . equals ( sectionName ) ) { <nl> + continue ; <nl> + } <nl> + <nl> + validateCheckSection ( moduleFactory , fileName , sectionName , section ) ; <nl> + } <nl> + } <nl> + <nl> private static void validateCheckSection ( ModuleFactory moduleFactory , String fileName , <nl> String sectionName , Node section ) throws Exception { <nl> final Object instance ; <nl> @ @ - 429 , 7 + 461 , 7 @ @ public class XDocsPagesTest { <nl> properties . removeAll ( CHECK _ PROPERTIES ) ; <nl> } <nl> } <nl> - else if ( AbstractFileSetCheck . class . isAssignableFrom ( clss ) ) { <nl> + if ( AbstractFileSetCheck . class . isAssignableFrom ( clss ) ) { <nl> properties . removeAll ( FILESET _ PROPERTIES ) ; <nl> <nl> / / override <nl> diff - - git a / src / xdocs / config . xml b / src / xdocs / config . xml <nl> index eb51fca . . 73f0cad 100644 <nl> - - - a / src / xdocs / config . xml <nl> + + + b / src / xdocs / config . xml <nl> @ @ - 263 , 254 + 263 , 268 @ @ <nl> < / section > <nl> <nl> < section name = " Checker " > <nl> + < subsection name = " Description " > <nl> + < p > <nl> + All configurations have root module < code > Checker < / code > . < code > Checker < / code > <nl> + contains : <nl> + < / p > <nl> <nl> - < p > <nl> - All configurations have root module < code > Checker < / code > . < code > Checker < / code > <nl> - contains : <nl> - < / p > <nl> - <nl> - < ul > <nl> - < li > < em > FileSetCheck < / em > children : modules that check sets of <nl> - files . < / li > <nl> - < li > < em > Filter < / em > children : modules that filter audit <nl> - events . < / li > <nl> - < li > < em > AuditListener < / em > children : modules that report <nl> - filtered events . < / li > <nl> - < / ul > <nl> - <nl> - < p > <nl> - < code > Checker < / code > also defines properties that are <nl> - inherited by all other modules of a configuration . <nl> - < / p > <nl> - <nl> - < h4 > Properties < / h4 > <nl> - < table > <nl> - < tr > <nl> - < th > name < / th > <nl> - < th > description < / th > <nl> - < th > type < / th > <nl> - < th > default value < / th > <nl> - < / tr > <nl> - < tr > <nl> - < td > basedir < / td > <nl> - < td > base directory name ; stripped off in messages about files < / td > <nl> - < td > < a href = " property _ types . html # string " > string < / a > < / td > <nl> - < td > < code > null < / code > < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > cacheFile < / td > <nl> - < td > caches information about files that have checked OK ; used <nl> - to avoid repeated checks of the same files < / td > <nl> - < td > < a href = " property _ types . html # string " > string < / a > < / td > <nl> - < td > < code > null < / code > ( no cache file ) < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > localeCountry < / td > <nl> - < td > locale country for messages < / td > <nl> - < td > < a href = " property _ types . html # string " > string < / a > : either <nl> - the empty string or an uppercase ISO 3166 2 - letter code < / td > <nl> - < td > default locale country for the Java Virtual Machine < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > localeLanguage < / td > <nl> - < td > locale language for messages < / td > <nl> - < td > < a href = " property _ types . html # string " > string < / a > : either <nl> - the empty string or a lowercase ISO 639 code < / td > <nl> - < td > default locale language for the Java Virtual Machine < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > charset < / td > <nl> - < td > name of the file charset < / td > <nl> - < td > < a href = " property _ types . html # string " > String < / a > < / td > <nl> - < td > System property & quot ; file . encoding & quot ; < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > fileExtensions < / td > <nl> - < td > file extensions that are accepted < / td > <nl> - < td > < a href = " property _ types . html # string " > String < / a > array < / td > <nl> - < td > < code > null < / code > < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > haltOnException < / td > <nl> - < td > whether to stop execution of Checkstyle if a single file produces any kind of <nl> - exception during verification < / td > <nl> - < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> - < td > < code > true < / code > < / td > <nl> - < / tr > <nl> - < / table > <nl> - <nl> - < p > <nl> - For example , the following configuration fragment specifies base <nl> - directory < code > src / checkstyle < / code > , cache file < code > target / cachefile < / code > and German <nl> - locale for all modules : <nl> - < / p > <nl> + < ul > <nl> + < li > < em > FileSetCheck < / em > children : modules that check sets of <nl> + files . < / li > <nl> + < li > < em > Filter < / em > children : modules that filter audit <nl> + events . < / li > <nl> + < li > < em > AuditListener < / em > children : modules that report <nl> + filtered events . < / li > <nl> + < / ul > <nl> <nl> - < source > <nl> - & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> - & lt ; property name = & quot ; basedir & quot ; value = & quot ; src / checkstyle & quot ; / & gt ; <nl> - & lt ; property name = & quot ; cacheFile & quot ; value = & quot ; target / cachefile & quot ; / & gt ; <nl> - & lt ; property name = & quot ; localeCountry & quot ; value = & quot ; DE & quot ; / & gt ; <nl> - & lt ; property name = & quot ; localeLanguage & quot ; value = & quot ; de & quot ; / & gt ; <nl> - & lt ; module name = & quot ; JavadocPackage & quot ; / & gt ; <nl> - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> + < p > <nl> + < code > Checker < / code > also defines properties that are <nl> + inherited by all other modules of a configuration . <nl> + < / p > <nl> + < / subsection > <nl> + <nl> + < subsection name = " Properties " > <nl> + < table > <nl> + < tr > <nl> + < th > name < / th > <nl> + < th > description < / th > <nl> + < th > type < / th > <nl> + < th > default value < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > basedir < / td > <nl> + < td > base directory name ; stripped off in messages about files < / td > <nl> + < td > < a href = " property _ types . html # string " > string < / a > < / td > <nl> + < td > < code > null < / code > < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > cacheFile < / td > <nl> + < td > caches information about files that have checked OK ; used <nl> + to avoid repeated checks of the same files < / td > <nl> + < td > < a href = " property _ types . html # string " > string < / a > < / td > <nl> + < td > < code > null < / code > ( no cache file ) < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > localeCountry < / td > <nl> + < td > locale country for messages < / td > <nl> + < td > < a href = " property _ types . html # string " > string < / a > : either <nl> + the empty string or an uppercase ISO 3166 2 - letter code < / td > <nl> + < td > default locale country for the Java Virtual Machine < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > localeLanguage < / td > <nl> + < td > locale language for messages < / td > <nl> + < td > < a href = " property _ types . html # string " > string < / a > : either <nl> + the empty string or a lowercase ISO 639 code < / td > <nl> + < td > default locale language for the Java Virtual Machine < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > charset < / td > <nl> + < td > name of the file charset < / td > <nl> + < td > < a href = " property _ types . html # string " > String < / a > < / td > <nl> + < td > System property & quot ; file . encoding & quot ; < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > fileExtensions < / td > <nl> + < td > file extensions that are accepted < / td > <nl> + < td > < a href = " property _ types . html # stringSet " > String Set < / a > < / td > <nl> + < td > < code > null < / code > < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > severity < / td > <nl> + < td > the default severity level of all violations < / td > <nl> + < td > < a href = " property _ types . html # severity " > Severity < / a > < / td > <nl> + < td > < code > error < / code > < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > haltOnException < / td > <nl> + < td > whether to stop execution of Checkstyle if a single file produces any kind of <nl> + exception during verification < / td > <nl> + < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> + < td > < code > true < / code > < / td > <nl> + < / tr > <nl> + < / table > <nl> + < / subsection > <nl> + <nl> + < subsection name = " Examples " > <nl> + < p > <nl> + For example , the following configuration fragment specifies base <nl> + directory < code > src / checkstyle < / code > , cache file < code > target / cachefile < / code > and German <nl> + locale for all modules : <nl> + < / p > <nl> <nl> - < p > <nl> - To configure a < code > Checker < / code > so that it <nl> - handles files with the < code > UTF - 8 < / code > charset : <nl> - < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> + & lt ; property name = & quot ; basedir & quot ; value = & quot ; src / checkstyle & quot ; / & gt ; <nl> + & lt ; property name = & quot ; cacheFile & quot ; value = & quot ; target / cachefile & quot ; / & gt ; <nl> + & lt ; property name = & quot ; localeCountry & quot ; value = & quot ; DE & quot ; / & gt ; <nl> + & lt ; property name = & quot ; localeLanguage & quot ; value = & quot ; de & quot ; / & gt ; <nl> + & lt ; module name = & quot ; JavadocPackage & quot ; / & gt ; <nl> + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> <nl> - < source > <nl> - & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> - & lt ; property name = & quot ; charset & quot ; value = & quot ; UTF - 8 & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> + < p > <nl> + To configure a < code > Checker < / code > so that it <nl> + handles files with the < code > UTF - 8 < / code > charset : <nl> + < / p > <nl> <nl> - < p > <nl> - To configure a < code > Checker < / code > so that it <nl> - handles files with the < code > java , xml , properties < / code > extensions : <nl> - < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> + & lt ; property name = & quot ; charset & quot ; value = & quot ; UTF - 8 & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> <nl> - < source > <nl> - & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java , xml , properties & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> + < p > <nl> + To configure a < code > Checker < / code > so that it <nl> + handles files with the < code > java , xml , properties < / code > extensions : <nl> + < / p > <nl> <nl> - < p > <nl> - To configure a < code > Checker < / code > so that it doesn ' t stop execution on an <nl> - < code > Exception < / code > and instead prints it as a violation : <nl> - < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java , xml , properties & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> <nl> - < source > <nl> - & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> - & lt ; property name = & quot ; haltOnException & quot ; value = & quot ; false & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> + < p > <nl> + To configure a < code > Checker < / code > so that it doesn ' t stop execution on an <nl> + < code > Exception < / code > and instead prints it as a violation : <nl> + < / p > <nl> <nl> - < p > <nl> - To configure a < code > Checker < / code > so that it <nl> - handles files with any extension : <nl> - < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> + & lt ; property name = & quot ; haltOnException & quot ; value = & quot ; false & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> <nl> - < source > <nl> - & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> - < p > OR < / p > <nl> - < source > <nl> - & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> + < p > <nl> + To configure a < code > Checker < / code > so that it <nl> + handles files with any extension : <nl> + < / p > <nl> <nl> + < source > <nl> + & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + < p > OR < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + <nl> + < / subsection > <nl> < / section > <nl> <nl> < section name = " TreeWalker " > <nl> - < p > <nl> - FileSetCheck < code > TreeWalker < / code > checks <nl> - individual Java source files and defines properties that are <nl> - applicable to checking such files . <nl> - < / p > <nl> - <nl> - < h4 > Properties < / h4 > <nl> - < table > <nl> - < tr > <nl> - < th > name < / th > <nl> - < th > description < / th > <nl> - < th > type < / th > <nl> - < th > default value < / th > <nl> - < / tr > <nl> - < tr > <nl> - < td > tabWidth < / td > <nl> - < td > number of expanded spaces for a tab character ( < code > ' \ t ' < / code > ) ; used in messages and Checks that <nl> - require a tab width , such as < a <nl> - href = " config _ sizes . html # LineLength " > < code > LineLength < / code > < / a > < / td > <nl> - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > <nl> - < td > < code > 8 < / code > < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > fileExtensions < / td > <nl> - < td > file type extension to identify Java files . Setting this <nl> - property is typically only required if your Java source code <nl> - is preprocessed before compilation and the original files do <nl> - not have the extension < code > . java < / code > < / td > <nl> - < td > < a href = " property _ types . html # stringSet " > String Set < / a > < / td > <nl> - < td > < code > java < / code > < / td > <nl> - < / tr > <nl> - < / table > <nl> - <nl> - < p > <nl> - For example , the following configuration fragment specifies <nl> - < code > TreeWalker < / code > a < code > tabWidth < / code > of < code > 4 < / code > : <nl> - < / p > <nl> - <nl> - < source > <nl> - & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> - & lt ; property name = & quot ; tabWidth & quot ; value = & quot ; 4 & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> + < subsection name = " Description " > <nl> + < p > <nl> + FileSetCheck < code > TreeWalker < / code > checks <nl> + individual Java source files and defines properties that are <nl> + applicable to checking such files . <nl> + < / p > <nl> + < / subsection > <nl> + <nl> + < subsection name = " Properties " > <nl> + < table > <nl> + < tr > <nl> + < th > name < / th > <nl> + < th > description < / th > <nl> + < th > type < / th > <nl> + < th > default value < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > tabWidth < / td > <nl> + < td > number of expanded spaces for a tab character ( < code > ' \ t ' < / code > ) ; used in messages and Checks that <nl> + require a tab width , such as < a <nl> + href = " config _ sizes . html # LineLength " > < code > LineLength < / code > < / a > < / td > <nl> + < td > < a href = " property _ types . html # integer " > Integer < / a > < / td > <nl> + < td > < code > 8 < / code > < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > fileExtensions < / td > <nl> + < td > file type extension to identify Java files . Setting this <nl> + property is typically only required if your Java source code <nl> + is preprocessed before compilation and the original files do <nl> + not have the extension < code > . java < / code > < / td > <nl> + < td > < a href = " property _ types . html # stringSet " > String Set < / a > < / td > <nl> + < td > < code > java < / code > < / td > <nl> + < / tr > <nl> + < / table > <nl> + < / subsection > <nl> + <nl> + < subsection name = " Examples " > <nl> + < p > <nl> + For example , the following configuration fragment specifies <nl> + < code > TreeWalker < / code > a < code > tabWidth < / code > of < code > 4 < / code > : <nl> + < / p > <nl> <nl> - < p > <nl> - < ! - - <nl> - thanks to Paul King for this example , see <nl> - https : / / sourceforge . net / tracker / ? func = detail & aid = 865610 & group _ id = 29721 & atid = 397078 <nl> - - - > <nl> - To integrate Checkstyle with BEA Weblogic Workshop 8 . 1 : <nl> - < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> + & lt ; property name = & quot ; tabWidth & quot ; value = & quot ; 4 & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> <nl> - < source > <nl> - & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java , ejb , jpf & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> + < p > <nl> + < ! - - <nl> + thanks to Paul King for this example , see <nl> + https : / / sourceforge . net / tracker / ? func = detail & aid = 865610 & group _ id = 29721 & atid = 397078 <nl> + - - > <nl> + To integrate Checkstyle with BEA Weblogic Workshop 8 . 1 : <nl> + < / p > <nl> <nl> - < p > <nl> - To configure < code > TreeWalker < / code > so that it <nl> - handles files with the < code > java < / code > extension : <nl> - < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; Checker & quot ; & gt ; <nl> + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java , ejb , jpf & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> <nl> - < source > <nl> - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> + < p > <nl> + To configure < code > TreeWalker < / code > so that it <nl> + handles files with the < code > java < / code > extension : <nl> + < / p > <nl> <nl> - < p > <nl> - To configure < code > TreeWalker < / code > so that it <nl> - handles files with any extension : <nl> - < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> <nl> - < source > <nl> - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> - < p > OR < / p > <nl> - < source > <nl> - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; <nl> - . . . <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> + < p > <nl> + To configure < code > TreeWalker < / code > so that it <nl> + handles files with any extension : <nl> + < / p > <nl> <nl> + < source > <nl> + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + < p > OR < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; <nl> + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; <nl> + . . . <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + < / subsection > <nl> < / section > <nl> <nl> < section name = " TreeWalker Checks " >
NEAREST DIFF (one line): diff - - git a / src / xdocs / config _ modifier . xml b / src / xdocs / config _ modifier . xml <nl> index 72e524a . . 96c944b 100755 <nl> - - - a / src / xdocs / config _ modifier . xml <nl> + + + b / src / xdocs / config _ modifier . xml <nl> @ @ - 63 , 7 + 63 , 7 @ @ <nl> < / subsection > <nl> <nl> < subsection name = " Package " > <nl> - < p > com . puppycrawl . tools . checkstyle . checks < / p > <nl> + < p > com . puppycrawl . tools . checkstyle . checks . modifier < / p > <nl> < / subsection > <nl> <nl> < subsection name = " Parent Module " > <nl> @ @ - 154 , 7 + 154 , 7 @ @ <nl> < / subsection > <nl> <nl> < subsection name = " Package " > <nl> - < p > com . puppycrawl . tools . checkstyle . checks < / p > <nl> + < p > com . puppycrawl . tools . checkstyle . checks . modifier < / p > <nl> < / subsection > <nl> <nl> < subsection name = " Parent Module " > <nl> diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index c527789 . . c4aa47a 100755 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 25 , 6 + 25 , 9 @ @ <nl> <nl> < li > RequireThis now handles inner enums better ( bug 1257599 ) < / li > <nl> <nl> + < li > Fixed package name for modifiers checks in documentation <nl> + ( bug 1275988 ) < / li > <nl> + <nl> < / ul > <nl> <nl> < p > Other improvements : < / p >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java 
 index 5acd40a . . 2905b0b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java 
 @ @ - 38 , 7 + 38 , 7 @ @ import org . w3c . dom . NodeList ; 
 import org . xml . sax . SAXException ; 
 
 public final class XDocUtil { 
 - private static final String DIRECTORY _ PATH = " src / xdocs " ; 
 + public static final String DIRECTORY _ PATH = " src / xdocs " ; 
 
 private XDocUtil ( ) { 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 index d93ae3a . . 2495f0a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 @ @ - 122 , 6 + 122 , 14 @ @ public class XDocsPagesTest { 
 private static final Set < String > FILESET _ PROPERTIES = getProperties ( AbstractFileSetCheck . class ) ; 
 
 private static final List < String > UNDOCUMENTED _ PROPERTIES = Arrays . asList ( 
 + " Checker . classLoader " , 
 + " Checker . classloader " , 
 + " Checker . moduleClassLoader " , 
 + " Checker . moduleFactory " , 
 + " TreeWalker . classLoader " , 
 + " TreeWalker . moduleFactory " , 
 + " TreeWalker . cacheFile " , 
 + " TreeWalker . upChild " , 
 " SuppressWithNearbyCommentFilter . fileContents " , 
 " SuppressionCommentFilter . fileContents " 
 ) ; 
 @ @ - 302 , 6 + 310 , 30 @ @ public class XDocsPagesTest { 
 } 
 } 
 
 + @ Test 
 + public void testAllCheckSectionsEx ( ) throws Exception { 
 + final ModuleFactory moduleFactory = TestUtils . getPackageObjectFactory ( ) ; 
 + 
 + final Path path = Paths . get ( XDocUtil . DIRECTORY _ PATH + " / config . xml " ) ; 
 + final String fileName = path . getFileName ( ) . toString ( ) ; 
 + 
 + final String input = new String ( Files . readAllBytes ( path ) , UTF _ 8 ) ; 
 + final Document document = XmlUtil . getRawXml ( fileName , input , input ) ; 
 + final NodeList sources = document . getElementsByTagName ( " section " ) ; 
 + 
 + for ( int position = 0 ; position < sources . getLength ( ) ; position + + ) { 
 + final Node section = sources . item ( position ) ; 
 + final String sectionName = section . getAttributes ( ) . getNamedItem ( " name " ) 
 + . getNodeValue ( ) ; 
 + 
 + if ( ! " Checker " . equals ( sectionName ) & & ! " TreeWalker " . equals ( sectionName ) ) { 
 + continue ; 
 + } 
 + 
 + validateCheckSection ( moduleFactory , fileName , sectionName , section ) ; 
 + } 
 + } 
 + 
 private static void validateCheckSection ( ModuleFactory moduleFactory , String fileName , 
 String sectionName , Node section ) throws Exception { 
 final Object instance ; 
 @ @ - 429 , 7 + 461 , 7 @ @ public class XDocsPagesTest { 
 properties . removeAll ( CHECK _ PROPERTIES ) ; 
 } 
 } 
 - else if ( AbstractFileSetCheck . class . isAssignableFrom ( clss ) ) { 
 + if ( AbstractFileSetCheck . class . isAssignableFrom ( clss ) ) { 
 properties . removeAll ( FILESET _ PROPERTIES ) ; 
 
 / / override 
 diff - - git a / src / xdocs / config . xml b / src / xdocs / config . xml 
 index eb51fca . . 73f0cad 100644 
 - - - a / src / xdocs / config . xml 
 + + + b / src / xdocs / config . xml 
 @ @ - 263 , 254 + 263 , 268 @ @ 
 < / section > 
 
 < section name = " Checker " > 
 + < subsection name = " Description " > 
 + < p > 
 + All configurations have root module < code > Checker < / code > . < code > Checker < / code > 
 + contains : 
 + < / p > 
 
 - < p > 
 - All configurations have root module < code > Checker < / code > . < code > Checker < / code > 
 - contains : 
 - < / p > 
 - 
 - < ul > 
 - < li > < em > FileSetCheck < / em > children : modules that check sets of 
 - files . < / li > 
 - < li > < em > Filter < / em > children : modules that filter audit 
 - events . < / li > 
 - < li > < em > AuditListener < / em > children : modules that report 
 - filtered events . < / li > 
 - < / ul > 
 - 
 - < p > 
 - < code > Checker < / code > also defines properties that are 
 - inherited by all other modules of a configuration . 
 - < / p > 
 - 
 - < h4 > Properties < / h4 > 
 - < table > 
 - < tr > 
 - < th > name < / th > 
 - < th > description < / th > 
 - < th > type < / th > 
 - < th > default value < / th > 
 - < / tr > 
 - < tr > 
 - < td > basedir < / td > 
 - < td > base directory name ; stripped off in messages about files < / td > 
 - < td > < a href = " property _ types . html # string " > string < / a > < / td > 
 - < td > < code > null < / code > < / td > 
 - < / tr > 
 - < tr > 
 - < td > cacheFile < / td > 
 - < td > caches information about files that have checked OK ; used 
 - to avoid repeated checks of the same files < / td > 
 - < td > < a href = " property _ types . html # string " > string < / a > < / td > 
 - < td > < code > null < / code > ( no cache file ) < / td > 
 - < / tr > 
 - < tr > 
 - < td > localeCountry < / td > 
 - < td > locale country for messages < / td > 
 - < td > < a href = " property _ types . html # string " > string < / a > : either 
 - the empty string or an uppercase ISO 3166 2 - letter code < / td > 
 - < td > default locale country for the Java Virtual Machine < / td > 
 - < / tr > 
 - < tr > 
 - < td > localeLanguage < / td > 
 - < td > locale language for messages < / td > 
 - < td > < a href = " property _ types . html # string " > string < / a > : either 
 - the empty string or a lowercase ISO 639 code < / td > 
 - < td > default locale language for the Java Virtual Machine < / td > 
 - < / tr > 
 - < tr > 
 - < td > charset < / td > 
 - < td > name of the file charset < / td > 
 - < td > < a href = " property _ types . html # string " > String < / a > < / td > 
 - < td > System property & quot ; file . encoding & quot ; < / td > 
 - < / tr > 
 - < tr > 
 - < td > fileExtensions < / td > 
 - < td > file extensions that are accepted < / td > 
 - < td > < a href = " property _ types . html # string " > String < / a > array < / td > 
 - < td > < code > null < / code > < / td > 
 - < / tr > 
 - < tr > 
 - < td > haltOnException < / td > 
 - < td > whether to stop execution of Checkstyle if a single file produces any kind of 
 - exception during verification < / td > 
 - < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 - < td > < code > true < / code > < / td > 
 - < / tr > 
 - < / table > 
 - 
 - < p > 
 - For example , the following configuration fragment specifies base 
 - directory < code > src / checkstyle < / code > , cache file < code > target / cachefile < / code > and German 
 - locale for all modules : 
 - < / p > 
 + < ul > 
 + < li > < em > FileSetCheck < / em > children : modules that check sets of 
 + files . < / li > 
 + < li > < em > Filter < / em > children : modules that filter audit 
 + events . < / li > 
 + < li > < em > AuditListener < / em > children : modules that report 
 + filtered events . < / li > 
 + < / ul > 
 
 - < source > 
 - & lt ; module name = & quot ; Checker & quot ; & gt ; 
 - & lt ; property name = & quot ; basedir & quot ; value = & quot ; src / checkstyle & quot ; / & gt ; 
 - & lt ; property name = & quot ; cacheFile & quot ; value = & quot ; target / cachefile & quot ; / & gt ; 
 - & lt ; property name = & quot ; localeCountry & quot ; value = & quot ; DE & quot ; / & gt ; 
 - & lt ; property name = & quot ; localeLanguage & quot ; value = & quot ; de & quot ; / & gt ; 
 - & lt ; module name = & quot ; JavadocPackage & quot ; / & gt ; 
 - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - & lt ; / module & gt ; 
 - < / source > 
 + < p > 
 + < code > Checker < / code > also defines properties that are 
 + inherited by all other modules of a configuration . 
 + < / p > 
 + < / subsection > 
 + 
 + < subsection name = " Properties " > 
 + < table > 
 + < tr > 
 + < th > name < / th > 
 + < th > description < / th > 
 + < th > type < / th > 
 + < th > default value < / th > 
 + < / tr > 
 + < tr > 
 + < td > basedir < / td > 
 + < td > base directory name ; stripped off in messages about files < / td > 
 + < td > < a href = " property _ types . html # string " > string < / a > < / td > 
 + < td > < code > null < / code > < / td > 
 + < / tr > 
 + < tr > 
 + < td > cacheFile < / td > 
 + < td > caches information about files that have checked OK ; used 
 + to avoid repeated checks of the same files < / td > 
 + < td > < a href = " property _ types . html # string " > string < / a > < / td > 
 + < td > < code > null < / code > ( no cache file ) < / td > 
 + < / tr > 
 + < tr > 
 + < td > localeCountry < / td > 
 + < td > locale country for messages < / td > 
 + < td > < a href = " property _ types . html # string " > string < / a > : either 
 + the empty string or an uppercase ISO 3166 2 - letter code < / td > 
 + < td > default locale country for the Java Virtual Machine < / td > 
 + < / tr > 
 + < tr > 
 + < td > localeLanguage < / td > 
 + < td > locale language for messages < / td > 
 + < td > < a href = " property _ types . html # string " > string < / a > : either 
 + the empty string or a lowercase ISO 639 code < / td > 
 + < td > default locale language for the Java Virtual Machine < / td > 
 + < / tr > 
 + < tr > 
 + < td > charset < / td > 
 + < td > name of the file charset < / td > 
 + < td > < a href = " property _ types . html # string " > String < / a > < / td > 
 + < td > System property & quot ; file . encoding & quot ; < / td > 
 + < / tr > 
 + < tr > 
 + < td > fileExtensions < / td > 
 + < td > file extensions that are accepted < / td > 
 + < td > < a href = " property _ types . html # stringSet " > String Set < / a > < / td > 
 + < td > < code > null < / code > < / td > 
 + < / tr > 
 + < tr > 
 + < td > severity < / td > 
 + < td > the default severity level of all violations < / td > 
 + < td > < a href = " property _ types . html # severity " > Severity < / a > < / td > 
 + < td > < code > error < / code > < / td > 
 + < / tr > 
 + < tr > 
 + < td > haltOnException < / td > 
 + < td > whether to stop execution of Checkstyle if a single file produces any kind of 
 + exception during verification < / td > 
 + < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 + < td > < code > true < / code > < / td > 
 + < / tr > 
 + < / table > 
 + < / subsection > 
 + 
 + < subsection name = " Examples " > 
 + < p > 
 + For example , the following configuration fragment specifies base 
 + directory < code > src / checkstyle < / code > , cache file < code > target / cachefile < / code > and German 
 + locale for all modules : 
 + < / p > 
 
 - < p > 
 - To configure a < code > Checker < / code > so that it 
 - handles files with the < code > UTF - 8 < / code > charset : 
 - < / p > 
 + < source > 
 + & lt ; module name = & quot ; Checker & quot ; & gt ; 
 + & lt ; property name = & quot ; basedir & quot ; value = & quot ; src / checkstyle & quot ; / & gt ; 
 + & lt ; property name = & quot ; cacheFile & quot ; value = & quot ; target / cachefile & quot ; / & gt ; 
 + & lt ; property name = & quot ; localeCountry & quot ; value = & quot ; DE & quot ; / & gt ; 
 + & lt ; property name = & quot ; localeLanguage & quot ; value = & quot ; de & quot ; / & gt ; 
 + & lt ; module name = & quot ; JavadocPackage & quot ; / & gt ; 
 + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 
 - < source > 
 - & lt ; module name = & quot ; Checker & quot ; & gt ; 
 - & lt ; property name = & quot ; charset & quot ; value = & quot ; UTF - 8 & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 + < p > 
 + To configure a < code > Checker < / code > so that it 
 + handles files with the < code > UTF - 8 < / code > charset : 
 + < / p > 
 
 - < p > 
 - To configure a < code > Checker < / code > so that it 
 - handles files with the < code > java , xml , properties < / code > extensions : 
 - < / p > 
 + < source > 
 + & lt ; module name = & quot ; Checker & quot ; & gt ; 
 + & lt ; property name = & quot ; charset & quot ; value = & quot ; UTF - 8 & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + < / source > 
 
 - < source > 
 - & lt ; module name = & quot ; Checker & quot ; & gt ; 
 - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java , xml , properties & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 + < p > 
 + To configure a < code > Checker < / code > so that it 
 + handles files with the < code > java , xml , properties < / code > extensions : 
 + < / p > 
 
 - < p > 
 - To configure a < code > Checker < / code > so that it doesn ' t stop execution on an 
 - < code > Exception < / code > and instead prints it as a violation : 
 - < / p > 
 + < source > 
 + & lt ; module name = & quot ; Checker & quot ; & gt ; 
 + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java , xml , properties & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + < / source > 
 
 - < source > 
 - & lt ; module name = & quot ; Checker & quot ; & gt ; 
 - & lt ; property name = & quot ; haltOnException & quot ; value = & quot ; false & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 + < p > 
 + To configure a < code > Checker < / code > so that it doesn ' t stop execution on an 
 + < code > Exception < / code > and instead prints it as a violation : 
 + < / p > 
 
 - < p > 
 - To configure a < code > Checker < / code > so that it 
 - handles files with any extension : 
 - < / p > 
 + < source > 
 + & lt ; module name = & quot ; Checker & quot ; & gt ; 
 + & lt ; property name = & quot ; haltOnException & quot ; value = & quot ; false & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + < / source > 
 
 - < source > 
 - & lt ; module name = & quot ; Checker & quot ; & gt ; 
 - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 - < p > OR < / p > 
 - < source > 
 - & lt ; module name = & quot ; Checker & quot ; & gt ; 
 - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 + < p > 
 + To configure a < code > Checker < / code > so that it 
 + handles files with any extension : 
 + < / p > 
 
 + < source > 
 + & lt ; module name = & quot ; Checker & quot ; & gt ; 
 + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + < / source > 
 + < p > OR < / p > 
 + < source > 
 + & lt ; module name = & quot ; Checker & quot ; & gt ; 
 + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + < / source > 
 + 
 + < / subsection > 
 < / section > 
 
 < section name = " TreeWalker " > 
 - < p > 
 - FileSetCheck < code > TreeWalker < / code > checks 
 - individual Java source files and defines properties that are 
 - applicable to checking such files . 
 - < / p > 
 - 
 - < h4 > Properties < / h4 > 
 - < table > 
 - < tr > 
 - < th > name < / th > 
 - < th > description < / th > 
 - < th > type < / th > 
 - < th > default value < / th > 
 - < / tr > 
 - < tr > 
 - < td > tabWidth < / td > 
 - < td > number of expanded spaces for a tab character ( < code > ' \ t ' < / code > ) ; used in messages and Checks that 
 - require a tab width , such as < a 
 - href = " config _ sizes . html # LineLength " > < code > LineLength < / code > < / a > < / td > 
 - < td > < a href = " property _ types . html # integer " > integer < / a > < / td > 
 - < td > < code > 8 < / code > < / td > 
 - < / tr > 
 - < tr > 
 - < td > fileExtensions < / td > 
 - < td > file type extension to identify Java files . Setting this 
 - property is typically only required if your Java source code 
 - is preprocessed before compilation and the original files do 
 - not have the extension < code > . java < / code > < / td > 
 - < td > < a href = " property _ types . html # stringSet " > String Set < / a > < / td > 
 - < td > < code > java < / code > < / td > 
 - < / tr > 
 - < / table > 
 - 
 - < p > 
 - For example , the following configuration fragment specifies 
 - < code > TreeWalker < / code > a < code > tabWidth < / code > of < code > 4 < / code > : 
 - < / p > 
 - 
 - < source > 
 - & lt ; module name = & quot ; Checker & quot ; & gt ; 
 - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 - & lt ; property name = & quot ; tabWidth & quot ; value = & quot ; 4 & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - & lt ; / module & gt ; 
 - < / source > 
 + < subsection name = " Description " > 
 + < p > 
 + FileSetCheck < code > TreeWalker < / code > checks 
 + individual Java source files and defines properties that are 
 + applicable to checking such files . 
 + < / p > 
 + < / subsection > 
 + 
 + < subsection name = " Properties " > 
 + < table > 
 + < tr > 
 + < th > name < / th > 
 + < th > description < / th > 
 + < th > type < / th > 
 + < th > default value < / th > 
 + < / tr > 
 + < tr > 
 + < td > tabWidth < / td > 
 + < td > number of expanded spaces for a tab character ( < code > ' \ t ' < / code > ) ; used in messages and Checks that 
 + require a tab width , such as < a 
 + href = " config _ sizes . html # LineLength " > < code > LineLength < / code > < / a > < / td > 
 + < td > < a href = " property _ types . html # integer " > Integer < / a > < / td > 
 + < td > < code > 8 < / code > < / td > 
 + < / tr > 
 + < tr > 
 + < td > fileExtensions < / td > 
 + < td > file type extension to identify Java files . Setting this 
 + property is typically only required if your Java source code 
 + is preprocessed before compilation and the original files do 
 + not have the extension < code > . java < / code > < / td > 
 + < td > < a href = " property _ types . html # stringSet " > String Set < / a > < / td > 
 + < td > < code > java < / code > < / td > 
 + < / tr > 
 + < / table > 
 + < / subsection > 
 + 
 + < subsection name = " Examples " > 
 + < p > 
 + For example , the following configuration fragment specifies 
 + < code > TreeWalker < / code > a < code > tabWidth < / code > of < code > 4 < / code > : 
 + < / p > 
 
 - < p > 
 - < ! - - 
 - thanks to Paul King for this example , see 
 - https : / / sourceforge . net / tracker / ? func = detail & aid = 865610 & group _ id = 29721 & atid = 397078 
 - - - > 
 - To integrate Checkstyle with BEA Weblogic Workshop 8 . 1 : 
 - < / p > 
 + < source > 
 + & lt ; module name = & quot ; Checker & quot ; & gt ; 
 + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 + & lt ; property name = & quot ; tabWidth & quot ; value = & quot ; 4 & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 
 - < source > 
 - & lt ; module name = & quot ; Checker & quot ; & gt ; 
 - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java , ejb , jpf & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - & lt ; / module & gt ; 
 - < / source > 
 + < p > 
 + < ! - - 
 + thanks to Paul King for this example , see 
 + https : / / sourceforge . net / tracker / ? func = detail & aid = 865610 & group _ id = 29721 & atid = 397078 
 + - - > 
 + To integrate Checkstyle with BEA Weblogic Workshop 8 . 1 : 
 + < / p > 
 
 - < p > 
 - To configure < code > TreeWalker < / code > so that it 
 - handles files with the < code > java < / code > extension : 
 - < / p > 
 + < source > 
 + & lt ; module name = & quot ; Checker & quot ; & gt ; 
 + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java , ejb , jpf & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 
 - < source > 
 - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 + < p > 
 + To configure < code > TreeWalker < / code > so that it 
 + handles files with the < code > java < / code > extension : 
 + < / p > 
 
 - < p > 
 - To configure < code > TreeWalker < / code > so that it 
 - handles files with any extension : 
 - < / p > 
 + < source > 
 + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; java & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + < / source > 
 
 - < source > 
 - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 - < p > OR < / p > 
 - < source > 
 - & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 - & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; 
 - . . . 
 - & lt ; / module & gt ; 
 - < / source > 
 + < p > 
 + To configure < code > TreeWalker < / code > so that it 
 + handles files with any extension : 
 + < / p > 
 
 + < source > 
 + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; null & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + < / source > 
 + < p > OR < / p > 
 + < source > 
 + & lt ; module name = & quot ; TreeWalker & quot ; & gt ; 
 + & lt ; property name = & quot ; fileExtensions & quot ; value = & quot ; & quot ; / & gt ; 
 + . . . 
 + & lt ; / module & gt ; 
 + < / source > 
 + < / subsection > 
 < / section > 
 
 < section name = " TreeWalker Checks " >

NEAREST DIFF:
diff - - git a / src / xdocs / config _ modifier . xml b / src / xdocs / config _ modifier . xml 
 index 72e524a . . 96c944b 100755 
 - - - a / src / xdocs / config _ modifier . xml 
 + + + b / src / xdocs / config _ modifier . xml 
 @ @ - 63 , 7 + 63 , 7 @ @ 
 < / subsection > 
 
 < subsection name = " Package " > 
 - < p > com . puppycrawl . tools . checkstyle . checks < / p > 
 + < p > com . puppycrawl . tools . checkstyle . checks . modifier < / p > 
 < / subsection > 
 
 < subsection name = " Parent Module " > 
 @ @ - 154 , 7 + 154 , 7 @ @ 
 < / subsection > 
 
 < subsection name = " Package " > 
 - < p > com . puppycrawl . tools . checkstyle . checks < / p > 
 + < p > com . puppycrawl . tools . checkstyle . checks . modifier < / p > 
 < / subsection > 
 
 < subsection name = " Parent Module " > 
 diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index c527789 . . c4aa47a 100755 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 25 , 6 + 25 , 9 @ @ 
 
 < li > RequireThis now handles inner enums better ( bug 1257599 ) < / li > 
 
 + < li > Fixed package name for modifiers checks in documentation 
 + ( bug 1275988 ) < / li > 
 + 
 < / ul > 
 
 < p > Other improvements : < / p >
