BLEU SCORE: 0.04932351569489709

TEST MSG: Issue # 4586 : Moved resources for the JavadocStyle check test
GENERATED MSG: Move test input files to resources , issue # 1040

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheckTest . java <nl> index dd8ddd4 . . ddfd074 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheckTest . java <nl> @ @ - 42 , 7 + 42 , 8 @ @ public class JavadocStyleCheckTest <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " javadoc " + File . separator + filename ) ; <nl> + + " javadoc " + File . separator <nl> + + " javadocstyle " + File . separator + filename ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 198 , 7 + 199 , 7 @ @ public class JavadocStyleCheckTest <nl> final DefaultConfiguration checkConfig = createCheckConfig ( JavadocStyleCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " InputNoJavadoc . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputJavadocStyleNoJavadoc . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java <nl> deleted file mode 100644 <nl> index 33c603d . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java <nl> + + + / dev / null <nl> @ @ - 1 , 426 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2003 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> - <nl> - / * * <nl> - * Test input for the JavadocStyleCheck . This check is used to perform <nl> - * some additional Javadoc validations . <nl> - * <nl> - * @ author Chris Stillwell <nl> - * @ version 1 . 0 <nl> - * / <nl> - public class InputJavadocStyle <nl> - { <nl> - / / This is OK . We don ' t flag missing javadoc . That ' s left for other checks . <nl> - private String first ; <nl> - <nl> - / * * This Javadoc is missing an ending period * / <nl> - private String second ; <nl> - <nl> - / * * <nl> - * We don ' t want { @ link com . puppycrawl . tools . checkstyle . checks . JavadocStyleCheck } <nl> - * tags to stop the scan for the end of sentence . <nl> - * @ see Somthing <nl> - * / <nl> - public InputJavadocStyle ( ) <nl> - { <nl> - } <nl> - <nl> - / * * <nl> - * This is ok ! <nl> - * / <nl> - private void method1 ( ) <nl> - { <nl> - } <nl> - <nl> - / * * <nl> - * This is ok ? <nl> - * / <nl> - private void method2 ( ) <nl> - { <nl> - } <nl> - <nl> - / * * <nl> - * And This is ok . < br > <nl> - * / <nl> - private void method3 ( ) <nl> - { <nl> - } <nl> - <nl> - / * * <nl> - * This should fail even . though . there are embedded periods <nl> - * / <nl> - private void method4 ( ) <nl> - { <nl> - } <nl> - <nl> - / * * <nl> - * Test HTML in Javadoc comment <nl> - * < dl > <nl> - * < dt > < b > This guy is missing end of bold tag <nl> - * < dd > The dt and dd don ' t require end tags . <nl> - * < / dl > <nl> - * < / td > Extra tag shouldn ' t be here <nl> - * <nl> - * @ param arg1 < code > dummy . <nl> - * / <nl> - private void method5 ( int arg1 ) <nl> - { <nl> - } <nl> - <nl> - / * * <nl> - * Protected check < b > should fail <nl> - * / <nl> - protected void method6 ( ) <nl> - { <nl> - } <nl> - <nl> - / * * <nl> - * Package protected check < b > should fail <nl> - * / <nl> - void method7 ( ) <nl> - { <nl> - } <nl> - <nl> - / * * <nl> - * Public check should fail < / code > <nl> - * should fail < <nl> - * / <nl> - public void method8 ( ) <nl> - { <nl> - } <nl> - <nl> - / * * { @ inheritDoc } * * / <nl> - public void method9 ( ) <nl> - { <nl> - } <nl> - <nl> - <nl> - / / Testcases to excercize the Tag parser ( bug 843887 ) <nl> - <nl> - / * * <nl> - * Real men don ' t use XHTML . <nl> - * < br / > <nl> - * < hr / > <nl> - * < br / > <nl> - * < img src = " schattenparker . jpg " / > < / img > <nl> - * / <nl> - private void method10 ( ) <nl> - { / / < / img > should be the only error <nl> - } <nl> - <nl> - / * * <nl> - * Tag content can be really mean . <nl> - * < p > <nl> - * Sometimes a p tag is closed . <nl> - * < / p > <nl> - * < p > <nl> - * Sometimes it ' s not . <nl> - * <nl> - * < span style = " font - family : ' Times New Roman ' , Times , serif ; font - size : 200 % " > <nl> - * Attributes can contain spaces and nested quotes . <nl> - * < / span > <nl> - * < img src = " slashesCanOccurWithin / attributes . jpg " / > <nl> - * < img src = " slashesCanOccurWithin / attributes . jpg " > <nl> - * < ! - - comments < div > should not be checked . - - > <nl> - * / <nl> - private void method11 ( ) <nl> - { / / JavadocStyle should not report any error for this method <nl> - } <nl> - <nl> - / * * <nl> - * Tags for two lines . <nl> - * < a href = " some _ link " <nl> - * > Link Text < / a > <nl> - * / <nl> - private void method12 ( ) <nl> - { / / JavadocStyle should not report any error for this method <nl> - } <nl> - <nl> - / * * <nl> - * First sentence . <nl> - * < pre > <nl> - * + - - LITERAL _ DO ( do ) <nl> - * | <nl> - * + - - SLIST ( { ) <nl> - * | <nl> - * + - - EXPR <nl> - * | <nl> - * + - - ASSIGN ( = ) <nl> - * | <nl> - * + - - IDENT ( x ) <nl> - * + - - METHOD _ CALL ( ( ) <nl> - * | <nl> - * + - - DOT ( . ) <nl> - * | <nl> - * + - - IDENT ( rand ) <nl> - * + - - IDENT ( nextInt ) <nl> - * + - - ELIST <nl> - * | <nl> - * + - - EXPR <nl> - * | <nl> - * + - - NUM _ INT ( 10 ) <nl> - * + - - RPAREN ( ) ) <nl> - * + - - SEMI ( ; ) <nl> - * + - - RCURLY ( } ) <nl> - * + - - LPAREN ( ( ) <nl> - * + - - EXPR <nl> - * | <nl> - * + - - LT ( < ) <nl> - * | <nl> - * + - - IDENT ( x ) <nl> - * + - - NUM _ INT ( 5 ) <nl> - * + - - RPAREN ( ) ) <nl> - * + - - SEMI ( ; ) <nl> - * < / pre > <nl> - * / <nl> - private void method13 ( ) <nl> - { / / JavadocStyle should not report any error for this method <nl> - } <nl> - <nl> - / * * <nl> - * Some problematic javadoc . Sample usage : <nl> - * < blockquote > <nl> - * / <nl> - <nl> - private void method14 ( ) <nl> - { / / empty line between javadoc and method is critical ( bug 841942 ) <nl> - } <nl> - <nl> - / * * <nl> - * Empty line between javadoc and method declaration cause wrong <nl> - * line number for reporting error ( bug 841942 ) <nl> - * / <nl> - <nl> - private void method15 ( ) <nl> - { / / should report unended first sentance ( check line number of the error ) <nl> - } <nl> - <nl> - / * * Description of field : { @ value } . * / <nl> - public static final int dummy = 4911 ; <nl> - <nl> - / * * <nl> - * / <nl> - public void method16 ( ) <nl> - { / / should report empty javadoc <nl> - } <nl> - <nl> - / * * <nl> - * @ param a A parameter <nl> - * / <nl> - protected void method17 ( String a ) <nl> - { / / should report empty javadoc ( no text before parameter ) <nl> - } <nl> - <nl> - / * * <nl> - * @ exception RuntimeException shoul be thrown <nl> - * / <nl> - void method18 ( String a ) <nl> - { / / should report empty javadoc ( no text before exception ) <nl> - } <nl> - <nl> - / * * <nl> - * / <nl> - private static int ASDF = 0 ; <nl> - / / should report empty javadoc <nl> - <nl> - / * * @ see java . lang . Object * / <nl> - public void method19 ( ) <nl> - { / / should report empty javadoc ( no text before see tag ) <nl> - } <nl> - <nl> - public enum Test <nl> - / / Should complain about no javadoc <nl> - { <nl> - / * * <nl> - * Value 1 without a period <nl> - * / <nl> - value1 , <nl> - <nl> - / * * <nl> - * Value 2 with a period . <nl> - * / <nl> - value2 , <nl> - } <nl> - <nl> - / * * <nl> - * A test class . <nl> - * @ param < T1 > this is NOT an unclosed T1 tag <nl> - * @ param < KEY _ T > for bug 1649020 . <nl> - * @ author < a href = " mailto : foo @ nomail . com " > Foo Bar < / a > <nl> - * / <nl> - public class TestClass < T1 , KEY _ T > <nl> - { <nl> - / * * <nl> - * Retrieves X . <nl> - * @ return a value <nl> - * / <nl> - public T1 getX ( ) <nl> - { <nl> - return null ; <nl> - } <nl> - <nl> - / * * <nl> - * Retrieves Y . <nl> - * @ param < V > this is not an unclosed V tag <nl> - * @ return a value <nl> - * / <nl> - public < V > V getY ( ) <nl> - { <nl> - return null ; <nl> - } <nl> - <nl> - / * * <nl> - * Retrieves Z . <nl> - * <nl> - * @ param < KEY _ T1 > this is not an unclosed KEY _ T tag <nl> - * @ return a value <nl> - * / <nl> - public < KEY _ T1 > KEY _ T getZ _ 1649020 _ 1 ( ) <nl> - { <nl> - return null ; <nl> - } <nl> - <nl> - / * * <nl> - * Retrieves something . <nl> - * <nl> - * @ param < KEY _ T _ $ _ 1 _ t > strange type <nl> - * @ return a value <nl> - * / <nl> - public < KEY _ T _ $ _ 1 _ t > KEY _ T _ $ _ 1 _ t getEh _ 1649020 _ 2 ( ) { <nl> - return null ; <nl> - } <nl> - <nl> - / * * <nl> - * Retrieves more something . <nl> - * <nl> - * @ param < $ _ 12 _ xY _ z > strange type <nl> - * @ return a value <nl> - * / <nl> - public < $ _ 12 _ xY _ z > $ _ 12 _ xY _ z getUmmm _ 1649020 _ 3 ( ) { <nl> - return null ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Checks if the specified IClass needs to be <nl> - * annotated with the @ Type annotation . <nl> - * / <nl> - public void foo _ 1291847 _ 1 ( ) { <nl> - } <nl> - <nl> - / * * <nl> - * Returns the string containing the properties of <nl> - * < code > @ Type < / code > annotation . <nl> - * / <nl> - public void foo _ 1291847 _ 2 ( ) { <nl> - } <nl> - <nl> - 	 	 / * * <nl> - 	 	 * Checks generics javadoc . <nl> - 	 	 * <nl> - 	 	 * @ param strings this is a List < String > <nl> - 	 	 * @ param test Map < String , List < String > > a map indexed on String of Lists of Strings . <nl> - 	 	 * / <nl> - 	 	 public void method20 ( ) { <nl> - 	 	 } <nl> - <nl> - 	 	 / * * <nl> - 	 	 * Checks HTML tags in javadoc . <nl> - 	 	 * <nl> - 	 	 * HTML no good tag <nl> - 	 	 * < string > Tests < / string > <nl> - 	 	 * <nl> - 	 	 * / <nl> - 	 	 public void method21 ( ) { <nl> - 	 	 } <nl> - <nl> - / * * <nl> - * First sentence . <nl> - * < <nl> - * / a > <nl> - * / <nl> - void tagClosedInNextLine ( ) { <nl> - <nl> - } <nl> - <nl> - / * * <nl> - * Link to some page in two lines . <nl> - * < a <nl> - * href = " someLink " / > <nl> - * / <nl> - void tagInTwoLines ( ) { <nl> - <nl> - } <nl> - <nl> - / * * <nl> - * This Javadoc contains unclosed tag . <nl> - * < code > unclosed ' code ' tag < code > <nl> - * / <nl> - private void unclosedTag ( ) { } <nl> - <nl> - void javadocLikeCommentInMethod ( ) { <nl> - / * * <nl> - * It pretends to be Javadoc without dot , but it ' s just comment in method <nl> - * / <nl> - final int i = 0 ; <nl> - } <nl> - <nl> - / * * <nl> - * { @ inheritDoc } <nl> - * / <nl> - private void inheritDoc ( ) { } <nl> - <nl> - / * * <nl> - * < p > < b > Note : < b > it ' s unterminated tag . < / p > <nl> - * / <nl> - private void unterminatedTag ( ) { } <nl> - <nl> - / * * <nl> - * Javadoc without dot <nl> - * / <nl> - public interface TestInterface { <nl> - / * * <nl> - * Javadoc without dot <nl> - * / <nl> - void method ( ) ; <nl> - } <nl> - <nl> - static class TestStaticClass { <nl> - / * * <nl> - * Javadoc without dot <nl> - * / <nl> - public int field ; <nl> - } <nl> - <nl> - / * * <nl> - * . <nl> - * @ throws Exception if an error occurs <nl> - * / <nl> - void foo ( ) throws Exception { } <nl> - <nl> - / * * <nl> - * text / <nl> - * @ throws Exception if an error occurs <nl> - * / <nl> - void bar ( ) throws Exception { } <nl> - <nl> - / * * <nl> - * { @ inheritDoc } <nl> - * < p > <nl> - * @ throws IllegalArgumentException with errMsg as its message <nl> - * / <nl> - void inheritDocWithThrows ( ) { } <nl> - <nl> - / * * <nl> - * / <nl> - * <nl> - * * <nl> - * @ param s <nl> - * @ return Return <nl> - * / <nl> - public int test ( String s ) { return 0 ; } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyleHtmlComment . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyleHtmlComment . java <nl> deleted file mode 100644 <nl> index 581e1dd . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyleHtmlComment . java <nl> + + + / dev / null <nl> @ @ - 1 , 82 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2014 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> - <nl> - / * * <nl> - * Test input for the JavadocStyleCheck . This check is used to perform <nl> - * some additional Javadoc validations . <nl> - * <nl> - * @ author Tobias Geyer <nl> - * @ version 1 . 0 <nl> - * / <nl> - public class InputJavadocStyleHtmlComment <nl> - { <nl> - / * * <nl> - * sometimes a tag starts <nl> - * < pre > <nl> - * somewhere and has a comment in the middle <nl> - * < ! - - ignore this - - > <nl> - * and ends afterwards <nl> - * < / pre > <nl> - * / <nl> - private void method1 ( ) <nl> - { / / JavadocStyle should not report any error for this method <nl> - } <nl> - <nl> - / * * <nl> - * sometimes a tag starts <nl> - * < pre > <nl> - * somewhere and has a multiline comment in the middle <nl> - * < ! - - ignore this <nl> - * spanning <nl> - * multiple lines - - > <nl> - * and ends afterwards <nl> - * < / pre > <nl> - * / <nl> - private void method2 ( ) <nl> - { / / JavadocStyle should not report any error for this method <nl> - } <nl> - <nl> - / * * <nl> - * sometimes a tag starts <nl> - * < pre > <nl> - * somewhere and has a multiline comment in the middle <nl> - * < ! - - ignore this <nl> - * spanning <nl> - * multiple lines - - > < / pre > <nl> - * and ends on the same line <nl> - * / <nl> - private void method3 ( ) <nl> - { / / JavadocStyle should not report any error for this method <nl> - } <nl> - <nl> - / * * <nl> - * sometimes a tag starts <nl> - * < pre > <nl> - * somewhere and has a comment in the middle <nl> - * < ! - - ignore this - - > with text following <nl> - * and ends afterwards <nl> - * < / pre > <nl> - * / <nl> - private void method4 ( ) <nl> - { / / JavadocStyle should not report any error for this method <nl> - } <nl> - <nl> - / * * <nl> - * sometimes a tag starts <nl> - * < pre > < ! - - ignore this - - > < / pre > <nl> - * and ends with a comment in the middle <nl> - * / <nl> - private void method5 ( ) <nl> - { / / JavadocStyle should not report any error for this method <nl> - } <nl> - <nl> - / * * <nl> - * Parameterized interface . <nl> - * @ param < I > <nl> - * / <nl> - interface Interface < I > { } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / InputIgnored . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / InputIgnored . java <nl> deleted file mode 100644 <nl> index 08b51f9 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / InputIgnored . java <nl> + + + / dev / null <nl> @ @ - 1 , 5 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc . bothfiles ; <nl> - <nl> - class InputIgnored <nl> - { <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package - info . java <nl> deleted file mode 100644 <nl> index c8a2290 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package - info . java <nl> + + + / dev / null <nl> @ @ - 1 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc . bothfiles ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package . html b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package . html <nl> deleted file mode 100644 <nl> index 739cd58 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package . html <nl> + + + / dev / null <nl> @ @ - 1 + 0 , 0 @ @ <nl> - Ignored <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyle . java <nl> new file mode 100644 <nl> index 0000000 . . b02fbd1 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyle . java <nl> @ @ - 0 , 0 + 1 , 426 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2003 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle ; <nl> + <nl> + / * * <nl> + * Test input for the JavadocStyleCheck . This check is used to perform <nl> + * some additional Javadoc validations . <nl> + * <nl> + * @ author Chris Stillwell <nl> + * @ version 1 . 0 <nl> + * / <nl> + public class InputJavadocStyle <nl> + { <nl> + / / This is OK . We don ' t flag missing javadoc . That ' s left for other checks . <nl> + private String first ; <nl> + <nl> + / * * This Javadoc is missing an ending period * / <nl> + private String second ; <nl> + <nl> + / * * <nl> + * We don ' t want { @ link com . puppycrawl . tools . checkstyle . checks . JavadocStyleCheck } <nl> + * tags to stop the scan for the end of sentence . <nl> + * @ see Somthing <nl> + * / <nl> + public InputJavadocStyle ( ) <nl> + { <nl> + } <nl> + <nl> + / * * <nl> + * This is ok ! <nl> + * / <nl> + private void method1 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * <nl> + * This is ok ? <nl> + * / <nl> + private void method2 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * <nl> + * And This is ok . < br > <nl> + * / <nl> + private void method3 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * <nl> + * This should fail even . though . there are embedded periods <nl> + * / <nl> + private void method4 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * <nl> + * Test HTML in Javadoc comment <nl> + * < dl > <nl> + * < dt > < b > This guy is missing end of bold tag <nl> + * < dd > The dt and dd don ' t require end tags . <nl> + * < / dl > <nl> + * < / td > Extra tag shouldn ' t be here <nl> + * <nl> + * @ param arg1 < code > dummy . <nl> + * / <nl> + private void method5 ( int arg1 ) <nl> + { <nl> + } <nl> + <nl> + / * * <nl> + * Protected check < b > should fail <nl> + * / <nl> + protected void method6 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * <nl> + * Package protected check < b > should fail <nl> + * / <nl> + void method7 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * <nl> + * Public check should fail < / code > <nl> + * should fail < <nl> + * / <nl> + public void method8 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * { @ inheritDoc } * * / <nl> + public void method9 ( ) <nl> + { <nl> + } <nl> + <nl> + <nl> + / / Testcases to excercize the Tag parser ( bug 843887 ) <nl> + <nl> + / * * <nl> + * Real men don ' t use XHTML . <nl> + * < br / > <nl> + * < hr / > <nl> + * < br / > <nl> + * < img src = " schattenparker . jpg " / > < / img > <nl> + * / <nl> + private void method10 ( ) <nl> + { / / < / img > should be the only error <nl> + } <nl> + <nl> + / * * <nl> + * Tag content can be really mean . <nl> + * < p > <nl> + * Sometimes a p tag is closed . <nl> + * < / p > <nl> + * < p > <nl> + * Sometimes it ' s not . <nl> + * <nl> + * < span style = " font - family : ' Times New Roman ' , Times , serif ; font - size : 200 % " > <nl> + * Attributes can contain spaces and nested quotes . <nl> + * < / span > <nl> + * < img src = " slashesCanOccurWithin / attributes . jpg " / > <nl> + * < img src = " slashesCanOccurWithin / attributes . jpg " > <nl> + * < ! - - comments < div > should not be checked . - - > <nl> + * / <nl> + private void method11 ( ) <nl> + { / / JavadocStyle should not report any error for this method <nl> + } <nl> + <nl> + / * * <nl> + * Tags for two lines . <nl> + * < a href = " some _ link " <nl> + * > Link Text < / a > <nl> + * / <nl> + private void method12 ( ) <nl> + { / / JavadocStyle should not report any error for this method <nl> + } <nl> + <nl> + / * * <nl> + * First sentence . <nl> + * < pre > <nl> + * + - - LITERAL _ DO ( do ) <nl> + * | <nl> + * + - - SLIST ( { ) <nl> + * | <nl> + * + - - EXPR <nl> + * | <nl> + * + - - ASSIGN ( = ) <nl> + * | <nl> + * + - - IDENT ( x ) <nl> + * + - - METHOD _ CALL ( ( ) <nl> + * | <nl> + * + - - DOT ( . ) <nl> + * | <nl> + * + - - IDENT ( rand ) <nl> + * + - - IDENT ( nextInt ) <nl> + * + - - ELIST <nl> + * | <nl> + * + - - EXPR <nl> + * | <nl> + * + - - NUM _ INT ( 10 ) <nl> + * + - - RPAREN ( ) ) <nl> + * + - - SEMI ( ; ) <nl> + * + - - RCURLY ( } ) <nl> + * + - - LPAREN ( ( ) <nl> + * + - - EXPR <nl> + * | <nl> + * + - - LT ( < ) <nl> + * | <nl> + * + - - IDENT ( x ) <nl> + * + - - NUM _ INT ( 5 ) <nl> + * + - - RPAREN ( ) ) <nl> + * + - - SEMI ( ; ) <nl> + * < / pre > <nl> + * / <nl> + private void method13 ( ) <nl> + { / / JavadocStyle should not report any error for this method <nl> + } <nl> + <nl> + / * * <nl> + * Some problematic javadoc . Sample usage : <nl> + * < blockquote > <nl> + * / <nl> + <nl> + private void method14 ( ) <nl> + { / / empty line between javadoc and method is critical ( bug 841942 ) <nl> + } <nl> + <nl> + / * * <nl> + * Empty line between javadoc and method declaration cause wrong <nl> + * line number for reporting error ( bug 841942 ) <nl> + * / <nl> + <nl> + private void method15 ( ) <nl> + { / / should report unended first sentance ( check line number of the error ) <nl> + } <nl> + <nl> + / * * Description of field : { @ value } . * / <nl> + public static final int dummy = 4911 ; <nl> + <nl> + / * * <nl> + * / <nl> + public void method16 ( ) <nl> + { / / should report empty javadoc <nl> + } <nl> + <nl> + / * * <nl> + * @ param a A parameter <nl> + * / <nl> + protected void method17 ( String a ) <nl> + { / / should report empty javadoc ( no text before parameter ) <nl> + } <nl> + <nl> + / * * <nl> + * @ exception RuntimeException shoul be thrown <nl> + * / <nl> + void method18 ( String a ) <nl> + { / / should report empty javadoc ( no text before exception ) <nl> + } <nl> + <nl> + / * * <nl> + * / <nl> + private static int ASDF = 0 ; <nl> + / / should report empty javadoc <nl> + <nl> + / * * @ see java . lang . Object * / <nl> + public void method19 ( ) <nl> + { / / should report empty javadoc ( no text before see tag ) <nl> + } <nl> + <nl> + public enum Test <nl> + / / Should complain about no javadoc <nl> + { <nl> + / * * <nl> + * Value 1 without a period <nl> + * / <nl> + value1 , <nl> + <nl> + / * * <nl> + * Value 2 with a period . <nl> + * / <nl> + value2 , <nl> + } <nl> + <nl> + / * * <nl> + * A test class . <nl> + * @ param < T1 > this is NOT an unclosed T1 tag <nl> + * @ param < KEY _ T > for bug 1649020 . <nl> + * @ author < a href = " mailto : foo @ nomail . com " > Foo Bar < / a > <nl> + * / <nl> + public class TestClass < T1 , KEY _ T > <nl> + { <nl> + / * * <nl> + * Retrieves X . <nl> + * @ return a value <nl> + * / <nl> + public T1 getX ( ) <nl> + { <nl> + return null ; <nl> + } <nl> + <nl> + / * * <nl> + * Retrieves Y . <nl> + * @ param < V > this is not an unclosed V tag <nl> + * @ return a value <nl> + * / <nl> + public < V > V getY ( ) <nl> + { <nl> + return null ; <nl> + } <nl> + <nl> + / * * <nl> + * Retrieves Z . <nl> + * <nl> + * @ param < KEY _ T1 > this is not an unclosed KEY _ T tag <nl> + * @ return a value <nl> + * / <nl> + public < KEY _ T1 > KEY _ T getZ _ 1649020 _ 1 ( ) <nl> + { <nl> + return null ; <nl> + } <nl> + <nl> + / * * <nl> + * Retrieves something . <nl> + * <nl> + * @ param < KEY _ T _ $ _ 1 _ t > strange type <nl> + * @ return a value <nl> + * / <nl> + public < KEY _ T _ $ _ 1 _ t > KEY _ T _ $ _ 1 _ t getEh _ 1649020 _ 2 ( ) { <nl> + return null ; <nl> + } <nl> + <nl> + / * * <nl> + * Retrieves more something . <nl> + * <nl> + * @ param < $ _ 12 _ xY _ z > strange type <nl> + * @ return a value <nl> + * / <nl> + public < $ _ 12 _ xY _ z > $ _ 12 _ xY _ z getUmmm _ 1649020 _ 3 ( ) { <nl> + return null ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Checks if the specified IClass needs to be <nl> + * annotated with the @ Type annotation . <nl> + * / <nl> + public void foo _ 1291847 _ 1 ( ) { <nl> + } <nl> + <nl> + / * * <nl> + * Returns the string containing the properties of <nl> + * < code > @ Type < / code > annotation . <nl> + * / <nl> + public void foo _ 1291847 _ 2 ( ) { <nl> + } <nl> + <nl> + 	 	 / * * <nl> + 	 	 * Checks generics javadoc . <nl> + 	 	 * <nl> + 	 	 * @ param strings this is a List < String > <nl> + 	 	 * @ param test Map < String , List < String > > a map indexed on String of Lists of Strings . <nl> + 	 	 * / <nl> + 	 	 public void method20 ( ) { <nl> + 	 	 } <nl> + <nl> + 	 	 / * * <nl> + 	 	 * Checks HTML tags in javadoc . <nl> + 	 	 * <nl> + 	 	 * HTML no good tag <nl> + 	 	 * < string > Tests < / string > <nl> + 	 	 * <nl> + 	 	 * / <nl> + 	 	 public void method21 ( ) { <nl> + 	 	 } <nl> + <nl> + / * * <nl> + * First sentence . <nl> + * < <nl> + * / a > <nl> + * / <nl> + void tagClosedInNextLine ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * Link to some page in two lines . <nl> + * < a <nl> + * href = " someLink " / > <nl> + * / <nl> + void tagInTwoLines ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * This Javadoc contains unclosed tag . <nl> + * < code > unclosed ' code ' tag < code > <nl> + * / <nl> + private void unclosedTag ( ) { } <nl> + <nl> + void javadocLikeCommentInMethod ( ) { <nl> + / * * <nl> + * It pretends to be Javadoc without dot , but it ' s just comment in method <nl> + * / <nl> + final int i = 0 ; <nl> + } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + private void inheritDoc ( ) { } <nl> + <nl> + / * * <nl> + * < p > < b > Note : < b > it ' s unterminated tag . < / p > <nl> + * / <nl> + private void unterminatedTag ( ) { } <nl> + <nl> + / * * <nl> + * Javadoc without dot <nl> + * / <nl> + public interface TestInterface { <nl> + / * * <nl> + * Javadoc without dot <nl> + * / <nl> + void method ( ) ; <nl> + } <nl> + <nl> + static class TestStaticClass { <nl> + / * * <nl> + * Javadoc without dot <nl> + * / <nl> + public int field ; <nl> + } <nl> + <nl> + / * * <nl> + * . <nl> + * @ throws Exception if an error occurs <nl> + * / <nl> + void foo ( ) throws Exception { } <nl> + <nl> + / * * <nl> + * text / <nl> + * @ throws Exception if an error occurs <nl> + * / <nl> + void bar ( ) throws Exception { } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * < p > <nl> + * @ throws IllegalArgumentException with errMsg as its message <nl> + * / <nl> + void inheritDocWithThrows ( ) { } <nl> + <nl> + / * * <nl> + * / <nl> + * <nl> + * * <nl> + * @ param s <nl> + * @ return Return <nl> + * / <nl> + public int test ( String s ) { return 0 ; } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleHtmlComment . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleHtmlComment . java <nl> new file mode 100644 <nl> index 0000000 . . 8a5dcf4 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleHtmlComment . java <nl> @ @ - 0 , 0 + 1 , 82 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2014 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle ; <nl> + <nl> + / * * <nl> + * Test input for the JavadocStyleCheck . This check is used to perform <nl> + * some additional Javadoc validations . <nl> + * <nl> + * @ author Tobias Geyer <nl> + * @ version 1 . 0 <nl> + * / <nl> + public class InputJavadocStyleHtmlComment <nl> + { <nl> + / * * <nl> + * sometimes a tag starts <nl> + * < pre > <nl> + * somewhere and has a comment in the middle <nl> + * < ! - - ignore this - - > <nl> + * and ends afterwards <nl> + * < / pre > <nl> + * / <nl> + private void method1 ( ) <nl> + { / / JavadocStyle should not report any error for this method <nl> + } <nl> + <nl> + / * * <nl> + * sometimes a tag starts <nl> + * < pre > <nl> + * somewhere and has a multiline comment in the middle <nl> + * < ! - - ignore this <nl> + * spanning <nl> + * multiple lines - - > <nl> + * and ends afterwards <nl> + * < / pre > <nl> + * / <nl> + private void method2 ( ) <nl> + { / / JavadocStyle should not report any error for this method <nl> + } <nl> + <nl> + / * * <nl> + * sometimes a tag starts <nl> + * < pre > <nl> + * somewhere and has a multiline comment in the middle <nl> + * < ! - - ignore this <nl> + * spanning <nl> + * multiple lines - - > < / pre > <nl> + * and ends on the same line <nl> + * / <nl> + private void method3 ( ) <nl> + { / / JavadocStyle should not report any error for this method <nl> + } <nl> + <nl> + / * * <nl> + * sometimes a tag starts <nl> + * < pre > <nl> + * somewhere and has a comment in the middle <nl> + * < ! - - ignore this - - > with text following <nl> + * and ends afterwards <nl> + * < / pre > <nl> + * / <nl> + private void method4 ( ) <nl> + { / / JavadocStyle should not report any error for this method <nl> + } <nl> + <nl> + / * * <nl> + * sometimes a tag starts <nl> + * < pre > < ! - - ignore this - - > < / pre > <nl> + * and ends with a comment in the middle <nl> + * / <nl> + private void method5 ( ) <nl> + { / / JavadocStyle should not report any error for this method <nl> + } <nl> + <nl> + / * * <nl> + * Parameterized interface . <nl> + * @ param < I > <nl> + * / <nl> + interface Interface < I > { } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleNoJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleNoJavadoc . java <nl> new file mode 100644 <nl> index 0000000 . . 5157f69 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleNoJavadoc . java <nl> @ @ - 0 , 0 + 1 , 120 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle ; <nl> + <nl> + public class InputJavadocStyleNoJavadoc / / comment test <nl> + { <nl> + public int i1 ; <nl> + protected int i2 ; <nl> + int i3 ; <nl> + private int i4 ; <nl> + <nl> + public void foo1 ( ) { } <nl> + protected void foo2 ( ) { } <nl> + void foo3 ( ) { } <nl> + private void foo4 ( ) { } <nl> + <nl> + protected class ProtectedInner { <nl> + public int i1 ; <nl> + protected int i2 ; <nl> + int i3 ; <nl> + private int i4 ; <nl> + <nl> + public void foo1 ( ) { } <nl> + protected void foo2 ( ) { } <nl> + void foo3 ( ) { } <nl> + private void foo4 ( ) { } <nl> + } <nl> + <nl> + class PackageInner { <nl> + public int i1 ; <nl> + protected int i2 ; <nl> + int i3 ; <nl> + private int i4 ; <nl> + <nl> + public void foo1 ( ) { } <nl> + protected void foo2 ( ) { } <nl> + void foo3 ( ) { } <nl> + private void foo4 ( ) { } <nl> + } <nl> + <nl> + private class PrivateInner { <nl> + public int i1 ; <nl> + protected int i2 ; <nl> + int i3 ; <nl> + private int i4 ; <nl> + <nl> + public void foo1 ( ) { } <nl> + protected void foo2 ( ) { } <nl> + void foo3 ( ) { } <nl> + private void foo4 ( ) { } <nl> + } <nl> + } <nl> + <nl> + class PackageClass { <nl> + public int i1 ; <nl> + protected int i2 ; <nl> + int i3 ; <nl> + private int i4 ; <nl> + <nl> + public void foo1 ( ) { } <nl> + protected void foo2 ( ) { } <nl> + void foo3 ( ) { } <nl> + private void foo4 ( ) { } <nl> + <nl> + public class PublicInner { <nl> + public int i1 ; <nl> + protected int i2 ; <nl> + int i3 ; <nl> + private int i4 ; <nl> + <nl> + public void foo1 ( ) { } <nl> + protected void foo2 ( ) { } <nl> + void foo3 ( ) { } <nl> + private void foo4 ( ) { } <nl> + } <nl> + <nl> + protected class ProtectedInner { <nl> + public int i1 ; <nl> + protected int i2 ; <nl> + int i3 ; <nl> + private int i4 ; <nl> + <nl> + public void foo1 ( ) { } <nl> + protected void foo2 ( ) { } <nl> + void foo3 ( ) { } <nl> + private void foo4 ( ) { } <nl> + } <nl> + <nl> + class PackageInner { <nl> + public int i1 ; <nl> + protected int i2 ; <nl> + int i3 ; <nl> + private int i4 ; <nl> + <nl> + public void foo1 ( ) { } <nl> + protected void foo2 ( ) { } <nl> + void foo3 ( ) { } <nl> + private void foo4 ( ) { } <nl> + } <nl> + <nl> + private class PrivateInner { <nl> + public int i1 ; <nl> + protected int i2 ; <nl> + int i3 ; <nl> + private int i4 ; <nl> + <nl> + public void foo1 ( ) { } <nl> + protected void foo2 ( ) { } <nl> + void foo3 ( ) { } <nl> + private void foo4 ( ) { } <nl> + } <nl> + <nl> + class IgnoredName { <nl> + / / ignore by name <nl> + private int logger ; <nl> + / / no warning , ' serialVersionUID ' fields do not require Javadoc <nl> + private static final long serialVersionUID = 0 ; <nl> + } <nl> + <nl> + / * * / <nl> + void methodWithTwoStarComment ( ) { } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / bothfiles / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / bothfiles / package - info . java <nl> new file mode 100644 <nl> index 0000000 . . 99fd5a5 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / bothfiles / package - info . java <nl> @ @ - 0 , 0 + 1 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . bothfiles ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / annotation / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / annotation / package - info . java <nl> new file mode 100644 <nl> index 0000000 . . 208ec59 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / annotation / package - info . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + / * * <nl> + * This is a valid package documentation . < - - - See the period after the <nl> + * first sentence . <nl> + * <nl> + * < p > <nl> + * hurray for javadocs in html <nl> + * < br > <nl> + * with a legacy non - closed br element <nl> + * < / p > <nl> + * / <nl> + @ Deprecated <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . pkginfo . annotation ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidformat / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidformat / package - info . java <nl> new file mode 100644 <nl> index 0000000 . . a685dfe <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidformat / package - info . java <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + / * * <nl> + * blah blah <nl> + * / <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . pkginfo . invalidformat ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidinherit / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidinherit / package - info . java <nl> new file mode 100644 <nl> index 0000000 . . 7cb38b7 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidinherit / package - info . java <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + / * * <nl> + * { @ inheritDoc } Where are we inheriting from <nl> + * / <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . pkginfo . invalidinherit ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / valid / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / valid / package - info . java <nl> new file mode 100644 <nl> index 0000000 . . 66c8f64 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / valid / package - info . java <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + / * * <nl> + * This is a valid package documentation . < - - - See the period after the <nl> + * first sentence . <nl> + * <nl> + * < p > <nl> + * hurray for javadocs in html <nl> + * < br > <nl> + * with a legacy non - closed br element <nl> + * < / p > <nl> + * / <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . pkginfo . valid ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / annotation / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / annotation / package - info . java <nl> deleted file mode 100644 <nl> index b53186a . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / annotation / package - info . java <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - / * * <nl> - * This is a valid package documentation . < - - - See the period after the <nl> - * first sentence . <nl> - * <nl> - * < p > <nl> - * hurray for javadocs in html <nl> - * < br > <nl> - * with a legacy non - closed br element <nl> - * < / p > <nl> - * / <nl> - @ Deprecated <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc . pkginfo . annotation ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidformat / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidformat / package - info . java <nl> deleted file mode 100644 <nl> index e8d8b6d . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidformat / package - info . java <nl> + + + / dev / null <nl> @ @ - 1 , 4 + 0 , 0 @ @ <nl> - / * * <nl> - * blah blah <nl> - * / <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc . pkginfo . invalidformat ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidinherit / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidinherit / package - info . java <nl> deleted file mode 100644 <nl> index 9bc4ef5 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidinherit / package - info . java <nl> + + + / dev / null <nl> @ @ - 1 , 4 + 0 , 0 @ @ <nl> - / * * <nl> - * { @ inheritDoc } Where are we inheriting from <nl> - * / <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc . pkginfo . invalidinherit ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / valid / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / valid / package - info . java <nl> deleted file mode 100644 <nl> index 10a9f31 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / valid / package - info . java <nl> + + + / dev / null <nl> @ @ - 1 , 11 + 0 , 0 @ @ <nl> - / * * <nl> - * This is a valid package documentation . < - - - See the period after the <nl> - * first sentence . <nl> - * <nl> - * < p > <nl> - * hurray for javadocs in html <nl> - * < br > <nl> - * with a legacy non - closed br element <nl> - * < / p > <nl> - * / <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc . pkginfo . valid ;
NEAREST DIFF (one line): diff - - git a / config / findbugs - exclude . xml b / config / findbugs - exclude . xml <nl> index 13b814b . . 332bc87 100644 <nl> - - - a / config / findbugs - exclude . xml <nl> + + + b / config / findbugs - exclude . xml <nl> @ @ - 99 , 20 + 99 , 6 @ @ <nl> < Package name = " ~ com \ . puppycrawl \ . tools \ . checkstyle \ . gui . * " / > <nl> < / Match > <nl> < Match > <nl> - < ! - - till # 896 - - > <nl> - < Or > <nl> - < Class name = " com . puppycrawl . tools . checkstyle . api . Scope " / > <nl> - < Class name = " com . puppycrawl . tools . checkstyle . api . SeverityLevel " / > <nl> - < Class name = " com . puppycrawl . tools . checkstyle . checks . AbstractOptionCheck " / > <nl> - < Class name = " com . puppycrawl . tools . checkstyle . checks . NewlineAtEndOfFileCheck " / > <nl> - < Class name = " com . puppycrawl . tools . checkstyle . checks . SuppressWarningsHolder " / > <nl> - < Class name = " com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationUseStyleCheck " / > <nl> - < Class name = " com . puppycrawl . tools . checkstyle . checks . coding . HiddenFieldCheck " / > <nl> - < Class name = " com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocStyleCheck " / > <nl> - < / Or > <nl> - < Bug pattern = " DM _ CONVERT _ CASE " / > <nl> - < / Match > <nl> - < Match > <nl> < ! - - have never been a case for years , Eclipse does not show any other classes inherited from CommonASTWithHiddenTokens - - > <nl> < Class name = " com . puppycrawl . tools . checkstyle . api . DetailAST " / > <nl> < Bug pattern = " BC _ UNCONFIRMED _ CAST " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java <nl> index fd1eee0 . . 28dca27 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java <nl> @ @ - 18 , 11 + 18 , 14 @ @ <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> + import java . util . Locale ; <nl> + <nl> / * * <nl> * Represents a Java visibility scope . <nl> * <nl> * @ author Lars K ü hne <nl> * @ author Travis Schneeberger <nl> + * @ author Mehmet Can C ö mert <nl> * / <nl> public enum Scope <nl> { <nl> @ @ - 50 , 7 + 53 , 7 @ @ public enum Scope <nl> * / <nl> public String getName ( ) <nl> { <nl> - return name ( ) . toLowerCase ( ) ; <nl> + return name ( ) . toLowerCase ( Locale . ENGLISH ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 73 , 6 + 76 , 6 @ @ public enum Scope <nl> * / <nl> public static Scope getInstance ( String scopeName ) <nl> { <nl> - return valueOf ( Scope . class , scopeName . trim ( ) . toUpperCase ( ) ) ; <nl> + return valueOf ( Scope . class , scopeName . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java <nl> index f0f8ec8 . . 3b98e95 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java <nl> @ @ - 18 , 6 + 18 , 8 @ @ <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> + import java . util . Locale ; <nl> + <nl> / * * <nl> * < p > <nl> * Severity level for a check violation . <nl> @ @ - 29 , 6 + 31 , 7 @ @ package com . puppycrawl . tools . checkstyle . api ; <nl> * <nl> * @ author David Schneider <nl> * @ author Travis Schneeberger <nl> + * @ author Mehmet Can C ö mert <nl> * / <nl> public enum SeverityLevel <nl> { <nl> @ @ - 52 , 7 + 55 , 7 @ @ public enum SeverityLevel <nl> * / <nl> public String getName ( ) <nl> { <nl> - return name ( ) . toLowerCase ( ) ; <nl> + return name ( ) . toLowerCase ( Locale . ENGLISH ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 65 , 6 + 68 , 6 @ @ public enum SeverityLevel <nl> public static SeverityLevel getInstance ( String securityLevelName ) <nl> { <nl> return valueOf ( SeverityLevel . class , securityLevelName . trim ( ) <nl> - . toUpperCase ( ) ) ; <nl> + . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractOptionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractOptionCheck . java <nl> index e48c94b . . d3704a4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractOptionCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractOptionCheck . java <nl> @ @ - 18 , 6 + 18 , 8 @ @ <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> package com . puppycrawl . tools . checkstyle . checks ; <nl> <nl> + import java . util . Locale ; <nl> + <nl> import org . apache . commons . beanutils . ConversionException ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . Check ; <nl> @ @ - 60 , 7 + 62 , 7 @ @ public abstract class AbstractOptionCheck < T extends Enum < T > > <nl> public void setOption ( String optionStr ) throws ConversionException <nl> { <nl> try { <nl> - option = Enum . valueOf ( optionClass , optionStr . trim ( ) . toUpperCase ( ) ) ; <nl> + option = Enum . valueOf ( optionClass , optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> catch ( IllegalArgumentException iae ) { <nl> throw new ConversionException ( " unable to parse " + option , iae ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java <nl> index 701ed88 . . 7241942 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java <nl> @ @ - 20 , 10 + 20 , 13 @ @ package com . puppycrawl . tools . checkstyle . checks ; <nl> <nl> import com . google . common . io . Closeables ; <nl> import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; <nl> + <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . io . RandomAccessFile ; <nl> import java . util . List ; <nl> + import java . util . Locale ; <nl> + <nl> import org . apache . commons . beanutils . ConversionException ; <nl> <nl> / * * <nl> @ @ - 108 , 7 + 111 , 7 @ @ public class NewlineAtEndOfFileCheck <nl> try { <nl> lineSeparator = <nl> Enum . valueOf ( LineSeparatorOption . class , lineSeparatorParam . trim ( ) <nl> - . toUpperCase ( ) ) ; <nl> + . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> catch ( IllegalArgumentException iae ) { <nl> throw new ConversionException ( " unable to parse " + lineSeparatorParam , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 15542ca . . 49f10f0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 20 , 7 + 20 , 6 @ @ package com . puppycrawl . tools . checkstyle . checks ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> import com . google . common . collect . Lists ; <nl> - <nl> import com . puppycrawl . tools . checkstyle . api . Check ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> @ @ - 30 , 6 + 29 , 7 @ @ import org . apache . commons . beanutils . ConversionException ; <nl> import java . util . HashMap ; <nl> import java . util . LinkedList ; <nl> import java . util . List ; <nl> + import java . util . Locale ; <nl> import java . util . Map ; <nl> <nl> / * * <nl> @ @ - 136 , 7 + 136 , 7 @ @ public class SuppressWarningsHolder <nl> if ( sourceName . endsWith ( CHECK _ SUFFIX ) ) { <nl> endIndex - = CHECK _ SUFFIX . length ( ) ; <nl> } <nl> - return sourceName . substring ( startIndex , endIndex ) . toLowerCase ( ) ; <nl> + return sourceName . substring ( startIndex , endIndex ) . toLowerCase ( Locale . ENGLISH ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> index 3795b64 . . 395509f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> @ @ - 18 , 6 + 18 , 8 @ @ <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> <nl> + import java . util . Locale ; <nl> + <nl> import org . apache . commons . beanutils . ConversionException ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . Check ; <nl> @ @ - 217 , 7 + 219 , 7 @ @ public final class AnnotationUseStyleCheck extends Check <nl> final String string ) <nl> { <nl> try { <nl> - return Enum . valueOf ( enuclass , string . trim ( ) . toUpperCase ( ) ) ; <nl> + return Enum . valueOf ( enuclass , string . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> catch ( final IllegalArgumentException iae ) { <nl> throw new ConversionException ( " unable to parse " + string , iae ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> index f30e745 . . d73ee30 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> @ @ - 26 , 8 + 26 , 10 @ @ import com . puppycrawl . tools . checkstyle . api . ScopeUtils ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . Utils ; <nl> <nl> + import java . util . Locale ; <nl> import java . util . Set ; <nl> import java . util . regex . Pattern ; <nl> + <nl> import org . apache . commons . beanutils . ConversionException ; <nl> <nl> / * * <nl> @ @ - 414 , 7 + 416 , 7 @ @ public class HiddenFieldCheck <nl> if ( name ! = null & & ( name . length ( ) = = 1 <nl> | | name . length ( ) > 1 & & ! Character . isUpperCase ( name . charAt ( 1 ) ) ) ) <nl> { <nl> - setterName = name . substring ( 0 , 1 ) . toUpperCase ( ) + name . substring ( 1 ) ; <nl> + setterName = name . substring ( 0 , 1 ) . toUpperCase ( Locale . ENGLISH ) + name . substring ( 1 ) ; <nl> } <nl> return setterName ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> index b9a2312 . . dd591c3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> @ @ - 28 , 9 + 28 , 11 @ @ import com . puppycrawl . tools . checkstyle . api . ScopeUtils ; <nl> import com . puppycrawl . tools . checkstyle . api . TextBlock ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . checks . CheckUtils ; <nl> + <nl> import java . util . ArrayDeque ; <nl> import java . util . Deque ; <nl> import java . util . List ; <nl> + import java . util . Locale ; <nl> import java . util . Set ; <nl> import java . util . regex . Pattern ; <nl> <nl> @ @ - 467 , 7 + 469 , 7 @ @ public class JavadocStyleCheck <nl> / / Can ' t simply not put them on the stack , since singletons <nl> / / like < dt > and < dd > ( unhappily ) may either be terminated <nl> / / or not terminated . Both options are legal . <nl> - return SINGLE _ TAGS . contains ( tag . getId ( ) . toLowerCase ( ) ) ; <nl> + return SINGLE _ TAGS . contains ( tag . getId ( ) . toLowerCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 478 , 7 + 480 , 7 @ @ public class JavadocStyleCheck <nl> * / <nl> private boolean isAllowedTag ( HtmlTag tag ) <nl> { <nl> - return ALLOWED _ TAGS . contains ( tag . getId ( ) . toLowerCase ( ) ) ; <nl> + return ALLOWED _ TAGS . contains ( tag . getId ( ) . toLowerCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / ScopeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / ScopeTest . java <nl> index ac81f1d . . aead7fe 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / ScopeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / ScopeTest . java <nl> @ @ - 21 , 8 + 21 , 15 @ @ package com . puppycrawl . tools . checkstyle . api ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNotNull ; <nl> import static org . junit . Assert . assertTrue ; <nl> + <nl> + import java . util . Locale ; <nl> + <nl> import org . junit . Test ; <nl> <nl> + / * * <nl> + * Test cases for { @ link Scope } enumeration . <nl> + * @ author Mehmet Can C ö mert <nl> + * / <nl> public class ScopeTest <nl> { <nl> @ Test ( expected = IllegalArgumentException . class ) <nl> @ @ - 48 , 6 + 55 , 22 @ @ public class ScopeTest <nl> } <nl> <nl> @ Test <nl> + public void testMixedCaseSpacesWithDifferentLocales ( ) <nl> + { <nl> + Locale [ ] differentLocales = new Locale [ ] { new Locale ( " TR " , " tr " ) } ; <nl> + Locale defaultLocale = Locale . getDefault ( ) ; <nl> + try { <nl> + for ( Locale differentLocale : differentLocales ) { <nl> + Locale . setDefault ( differentLocale ) ; <nl> + testMixedCaseSpaces ( ) ; <nl> + } <nl> + } <nl> + finally { <nl> + Locale . setDefault ( defaultLocale ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> public void testIsInAnonInner ( ) <nl> { <nl> assertTrue ( Scope . NOTHING . isIn ( Scope . ANONINNER ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelTest . java <nl> index 90e72cb . . c096ce5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelTest . java <nl> @ @ - 20 , 8 + 20 , 15 @ @ package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNotNull ; <nl> + <nl> + import java . util . Locale ; <nl> + <nl> import org . junit . Test ; <nl> <nl> + / * * <nl> + * Test cases for { @ link SeverityLevel } enumeration . <nl> + * @ author Mehmet Can C ö mert <nl> + * / <nl> public class SeverityLevelTest <nl> { <nl> @ Test ( expected = IllegalArgumentException . class ) <nl> @ @ - 43 , 4 + 50 , 20 @ @ public class SeverityLevelTest <nl> SeverityLevel . getInstance ( " WarniNg " ) ; <nl> SeverityLevel . getInstance ( " ERROR " ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testMixedCaseSpacesWithDifferentLocales ( ) <nl> + { <nl> + Locale [ ] differentLocales = new Locale [ ] { new Locale ( " TR " , " tr " ) } ; <nl> + Locale defaultLocale = Locale . getDefault ( ) ; <nl> + try { <nl> + for ( Locale differentLocale : differentLocales ) { <nl> + Locale . setDefault ( differentLocale ) ; <nl> + testMixedCaseSpaces ( ) ; <nl> + } <nl> + } <nl> + finally { <nl> + Locale . setDefault ( defaultLocale ) ; <nl> + } <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheckTest . java 
 index dd8ddd4 . . ddfd074 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheckTest . java 
 @ @ - 42 , 7 + 42 , 8 @ @ public class JavadocStyleCheckTest 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " javadoc " + File . separator + filename ) ; 
 + + " javadoc " + File . separator 
 + + " javadocstyle " + File . separator + filename ) ; 
 } 
 
 @ Test 
 @ @ - 198 , 7 + 199 , 7 @ @ public class JavadocStyleCheckTest 
 final DefaultConfiguration checkConfig = createCheckConfig ( JavadocStyleCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " InputNoJavadoc . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputJavadocStyleNoJavadoc . java " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java 
 deleted file mode 100644 
 index 33c603d . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java 
 + + + / dev / null 
 @ @ - 1 , 426 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2003 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 - 
 - / * * 
 - * Test input for the JavadocStyleCheck . This check is used to perform 
 - * some additional Javadoc validations . 
 - * 
 - * @ author Chris Stillwell 
 - * @ version 1 . 0 
 - * / 
 - public class InputJavadocStyle 
 - { 
 - / / This is OK . We don ' t flag missing javadoc . That ' s left for other checks . 
 - private String first ; 
 - 
 - / * * This Javadoc is missing an ending period * / 
 - private String second ; 
 - 
 - / * * 
 - * We don ' t want { @ link com . puppycrawl . tools . checkstyle . checks . JavadocStyleCheck } 
 - * tags to stop the scan for the end of sentence . 
 - * @ see Somthing 
 - * / 
 - public InputJavadocStyle ( ) 
 - { 
 - } 
 - 
 - / * * 
 - * This is ok ! 
 - * / 
 - private void method1 ( ) 
 - { 
 - } 
 - 
 - / * * 
 - * This is ok ? 
 - * / 
 - private void method2 ( ) 
 - { 
 - } 
 - 
 - / * * 
 - * And This is ok . < br > 
 - * / 
 - private void method3 ( ) 
 - { 
 - } 
 - 
 - / * * 
 - * This should fail even . though . there are embedded periods 
 - * / 
 - private void method4 ( ) 
 - { 
 - } 
 - 
 - / * * 
 - * Test HTML in Javadoc comment 
 - * < dl > 
 - * < dt > < b > This guy is missing end of bold tag 
 - * < dd > The dt and dd don ' t require end tags . 
 - * < / dl > 
 - * < / td > Extra tag shouldn ' t be here 
 - * 
 - * @ param arg1 < code > dummy . 
 - * / 
 - private void method5 ( int arg1 ) 
 - { 
 - } 
 - 
 - / * * 
 - * Protected check < b > should fail 
 - * / 
 - protected void method6 ( ) 
 - { 
 - } 
 - 
 - / * * 
 - * Package protected check < b > should fail 
 - * / 
 - void method7 ( ) 
 - { 
 - } 
 - 
 - / * * 
 - * Public check should fail < / code > 
 - * should fail < 
 - * / 
 - public void method8 ( ) 
 - { 
 - } 
 - 
 - / * * { @ inheritDoc } * * / 
 - public void method9 ( ) 
 - { 
 - } 
 - 
 - 
 - / / Testcases to excercize the Tag parser ( bug 843887 ) 
 - 
 - / * * 
 - * Real men don ' t use XHTML . 
 - * < br / > 
 - * < hr / > 
 - * < br / > 
 - * < img src = " schattenparker . jpg " / > < / img > 
 - * / 
 - private void method10 ( ) 
 - { / / < / img > should be the only error 
 - } 
 - 
 - / * * 
 - * Tag content can be really mean . 
 - * < p > 
 - * Sometimes a p tag is closed . 
 - * < / p > 
 - * < p > 
 - * Sometimes it ' s not . 
 - * 
 - * < span style = " font - family : ' Times New Roman ' , Times , serif ; font - size : 200 % " > 
 - * Attributes can contain spaces and nested quotes . 
 - * < / span > 
 - * < img src = " slashesCanOccurWithin / attributes . jpg " / > 
 - * < img src = " slashesCanOccurWithin / attributes . jpg " > 
 - * < ! - - comments < div > should not be checked . - - > 
 - * / 
 - private void method11 ( ) 
 - { / / JavadocStyle should not report any error for this method 
 - } 
 - 
 - / * * 
 - * Tags for two lines . 
 - * < a href = " some _ link " 
 - * > Link Text < / a > 
 - * / 
 - private void method12 ( ) 
 - { / / JavadocStyle should not report any error for this method 
 - } 
 - 
 - / * * 
 - * First sentence . 
 - * < pre > 
 - * + - - LITERAL _ DO ( do ) 
 - * | 
 - * + - - SLIST ( { ) 
 - * | 
 - * + - - EXPR 
 - * | 
 - * + - - ASSIGN ( = ) 
 - * | 
 - * + - - IDENT ( x ) 
 - * + - - METHOD _ CALL ( ( ) 
 - * | 
 - * + - - DOT ( . ) 
 - * | 
 - * + - - IDENT ( rand ) 
 - * + - - IDENT ( nextInt ) 
 - * + - - ELIST 
 - * | 
 - * + - - EXPR 
 - * | 
 - * + - - NUM _ INT ( 10 ) 
 - * + - - RPAREN ( ) ) 
 - * + - - SEMI ( ; ) 
 - * + - - RCURLY ( } ) 
 - * + - - LPAREN ( ( ) 
 - * + - - EXPR 
 - * | 
 - * + - - LT ( < ) 
 - * | 
 - * + - - IDENT ( x ) 
 - * + - - NUM _ INT ( 5 ) 
 - * + - - RPAREN ( ) ) 
 - * + - - SEMI ( ; ) 
 - * < / pre > 
 - * / 
 - private void method13 ( ) 
 - { / / JavadocStyle should not report any error for this method 
 - } 
 - 
 - / * * 
 - * Some problematic javadoc . Sample usage : 
 - * < blockquote > 
 - * / 
 - 
 - private void method14 ( ) 
 - { / / empty line between javadoc and method is critical ( bug 841942 ) 
 - } 
 - 
 - / * * 
 - * Empty line between javadoc and method declaration cause wrong 
 - * line number for reporting error ( bug 841942 ) 
 - * / 
 - 
 - private void method15 ( ) 
 - { / / should report unended first sentance ( check line number of the error ) 
 - } 
 - 
 - / * * Description of field : { @ value } . * / 
 - public static final int dummy = 4911 ; 
 - 
 - / * * 
 - * / 
 - public void method16 ( ) 
 - { / / should report empty javadoc 
 - } 
 - 
 - / * * 
 - * @ param a A parameter 
 - * / 
 - protected void method17 ( String a ) 
 - { / / should report empty javadoc ( no text before parameter ) 
 - } 
 - 
 - / * * 
 - * @ exception RuntimeException shoul be thrown 
 - * / 
 - void method18 ( String a ) 
 - { / / should report empty javadoc ( no text before exception ) 
 - } 
 - 
 - / * * 
 - * / 
 - private static int ASDF = 0 ; 
 - / / should report empty javadoc 
 - 
 - / * * @ see java . lang . Object * / 
 - public void method19 ( ) 
 - { / / should report empty javadoc ( no text before see tag ) 
 - } 
 - 
 - public enum Test 
 - / / Should complain about no javadoc 
 - { 
 - / * * 
 - * Value 1 without a period 
 - * / 
 - value1 , 
 - 
 - / * * 
 - * Value 2 with a period . 
 - * / 
 - value2 , 
 - } 
 - 
 - / * * 
 - * A test class . 
 - * @ param < T1 > this is NOT an unclosed T1 tag 
 - * @ param < KEY _ T > for bug 1649020 . 
 - * @ author < a href = " mailto : foo @ nomail . com " > Foo Bar < / a > 
 - * / 
 - public class TestClass < T1 , KEY _ T > 
 - { 
 - / * * 
 - * Retrieves X . 
 - * @ return a value 
 - * / 
 - public T1 getX ( ) 
 - { 
 - return null ; 
 - } 
 - 
 - / * * 
 - * Retrieves Y . 
 - * @ param < V > this is not an unclosed V tag 
 - * @ return a value 
 - * / 
 - public < V > V getY ( ) 
 - { 
 - return null ; 
 - } 
 - 
 - / * * 
 - * Retrieves Z . 
 - * 
 - * @ param < KEY _ T1 > this is not an unclosed KEY _ T tag 
 - * @ return a value 
 - * / 
 - public < KEY _ T1 > KEY _ T getZ _ 1649020 _ 1 ( ) 
 - { 
 - return null ; 
 - } 
 - 
 - / * * 
 - * Retrieves something . 
 - * 
 - * @ param < KEY _ T _ $ _ 1 _ t > strange type 
 - * @ return a value 
 - * / 
 - public < KEY _ T _ $ _ 1 _ t > KEY _ T _ $ _ 1 _ t getEh _ 1649020 _ 2 ( ) { 
 - return null ; 
 - } 
 - 
 - / * * 
 - * Retrieves more something . 
 - * 
 - * @ param < $ _ 12 _ xY _ z > strange type 
 - * @ return a value 
 - * / 
 - public < $ _ 12 _ xY _ z > $ _ 12 _ xY _ z getUmmm _ 1649020 _ 3 ( ) { 
 - return null ; 
 - } 
 - } 
 - 
 - / * * 
 - * Checks if the specified IClass needs to be 
 - * annotated with the @ Type annotation . 
 - * / 
 - public void foo _ 1291847 _ 1 ( ) { 
 - } 
 - 
 - / * * 
 - * Returns the string containing the properties of 
 - * < code > @ Type < / code > annotation . 
 - * / 
 - public void foo _ 1291847 _ 2 ( ) { 
 - } 
 - 
 - 	 	 / * * 
 - 	 	 * Checks generics javadoc . 
 - 	 	 * 
 - 	 	 * @ param strings this is a List < String > 
 - 	 	 * @ param test Map < String , List < String > > a map indexed on String of Lists of Strings . 
 - 	 	 * / 
 - 	 	 public void method20 ( ) { 
 - 	 	 } 
 - 
 - 	 	 / * * 
 - 	 	 * Checks HTML tags in javadoc . 
 - 	 	 * 
 - 	 	 * HTML no good tag 
 - 	 	 * < string > Tests < / string > 
 - 	 	 * 
 - 	 	 * / 
 - 	 	 public void method21 ( ) { 
 - 	 	 } 
 - 
 - / * * 
 - * First sentence . 
 - * < 
 - * / a > 
 - * / 
 - void tagClosedInNextLine ( ) { 
 - 
 - } 
 - 
 - / * * 
 - * Link to some page in two lines . 
 - * < a 
 - * href = " someLink " / > 
 - * / 
 - void tagInTwoLines ( ) { 
 - 
 - } 
 - 
 - / * * 
 - * This Javadoc contains unclosed tag . 
 - * < code > unclosed ' code ' tag < code > 
 - * / 
 - private void unclosedTag ( ) { } 
 - 
 - void javadocLikeCommentInMethod ( ) { 
 - / * * 
 - * It pretends to be Javadoc without dot , but it ' s just comment in method 
 - * / 
 - final int i = 0 ; 
 - } 
 - 
 - / * * 
 - * { @ inheritDoc } 
 - * / 
 - private void inheritDoc ( ) { } 
 - 
 - / * * 
 - * < p > < b > Note : < b > it ' s unterminated tag . < / p > 
 - * / 
 - private void unterminatedTag ( ) { } 
 - 
 - / * * 
 - * Javadoc without dot 
 - * / 
 - public interface TestInterface { 
 - / * * 
 - * Javadoc without dot 
 - * / 
 - void method ( ) ; 
 - } 
 - 
 - static class TestStaticClass { 
 - / * * 
 - * Javadoc without dot 
 - * / 
 - public int field ; 
 - } 
 - 
 - / * * 
 - * . 
 - * @ throws Exception if an error occurs 
 - * / 
 - void foo ( ) throws Exception { } 
 - 
 - / * * 
 - * text / 
 - * @ throws Exception if an error occurs 
 - * / 
 - void bar ( ) throws Exception { } 
 - 
 - / * * 
 - * { @ inheritDoc } 
 - * < p > 
 - * @ throws IllegalArgumentException with errMsg as its message 
 - * / 
 - void inheritDocWithThrows ( ) { } 
 - 
 - / * * 
 - * / 
 - * 
 - * * 
 - * @ param s 
 - * @ return Return 
 - * / 
 - public int test ( String s ) { return 0 ; } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyleHtmlComment . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyleHtmlComment . java 
 deleted file mode 100644 
 index 581e1dd . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyleHtmlComment . java 
 + + + / dev / null 
 @ @ - 1 , 82 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2014 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 - 
 - / * * 
 - * Test input for the JavadocStyleCheck . This check is used to perform 
 - * some additional Javadoc validations . 
 - * 
 - * @ author Tobias Geyer 
 - * @ version 1 . 0 
 - * / 
 - public class InputJavadocStyleHtmlComment 
 - { 
 - / * * 
 - * sometimes a tag starts 
 - * < pre > 
 - * somewhere and has a comment in the middle 
 - * < ! - - ignore this - - > 
 - * and ends afterwards 
 - * < / pre > 
 - * / 
 - private void method1 ( ) 
 - { / / JavadocStyle should not report any error for this method 
 - } 
 - 
 - / * * 
 - * sometimes a tag starts 
 - * < pre > 
 - * somewhere and has a multiline comment in the middle 
 - * < ! - - ignore this 
 - * spanning 
 - * multiple lines - - > 
 - * and ends afterwards 
 - * < / pre > 
 - * / 
 - private void method2 ( ) 
 - { / / JavadocStyle should not report any error for this method 
 - } 
 - 
 - / * * 
 - * sometimes a tag starts 
 - * < pre > 
 - * somewhere and has a multiline comment in the middle 
 - * < ! - - ignore this 
 - * spanning 
 - * multiple lines - - > < / pre > 
 - * and ends on the same line 
 - * / 
 - private void method3 ( ) 
 - { / / JavadocStyle should not report any error for this method 
 - } 
 - 
 - / * * 
 - * sometimes a tag starts 
 - * < pre > 
 - * somewhere and has a comment in the middle 
 - * < ! - - ignore this - - > with text following 
 - * and ends afterwards 
 - * < / pre > 
 - * / 
 - private void method4 ( ) 
 - { / / JavadocStyle should not report any error for this method 
 - } 
 - 
 - / * * 
 - * sometimes a tag starts 
 - * < pre > < ! - - ignore this - - > < / pre > 
 - * and ends with a comment in the middle 
 - * / 
 - private void method5 ( ) 
 - { / / JavadocStyle should not report any error for this method 
 - } 
 - 
 - / * * 
 - * Parameterized interface . 
 - * @ param < I > 
 - * / 
 - interface Interface < I > { } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / InputIgnored . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / InputIgnored . java 
 deleted file mode 100644 
 index 08b51f9 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / InputIgnored . java 
 + + + / dev / null 
 @ @ - 1 , 5 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc . bothfiles ; 
 - 
 - class InputIgnored 
 - { 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package - info . java 
 deleted file mode 100644 
 index c8a2290 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package - info . java 
 + + + / dev / null 
 @ @ - 1 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc . bothfiles ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package . html b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package . html 
 deleted file mode 100644 
 index 739cd58 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / bothfiles / package . html 
 + + + / dev / null 
 @ @ - 1 + 0 , 0 @ @ 
 - Ignored 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyle . java 
 new file mode 100644 
 index 0000000 . . b02fbd1 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyle . java 
 @ @ - 0 , 0 + 1 , 426 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2003 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle ; 
 + 
 + / * * 
 + * Test input for the JavadocStyleCheck . This check is used to perform 
 + * some additional Javadoc validations . 
 + * 
 + * @ author Chris Stillwell 
 + * @ version 1 . 0 
 + * / 
 + public class InputJavadocStyle 
 + { 
 + / / This is OK . We don ' t flag missing javadoc . That ' s left for other checks . 
 + private String first ; 
 + 
 + / * * This Javadoc is missing an ending period * / 
 + private String second ; 
 + 
 + / * * 
 + * We don ' t want { @ link com . puppycrawl . tools . checkstyle . checks . JavadocStyleCheck } 
 + * tags to stop the scan for the end of sentence . 
 + * @ see Somthing 
 + * / 
 + public InputJavadocStyle ( ) 
 + { 
 + } 
 + 
 + / * * 
 + * This is ok ! 
 + * / 
 + private void method1 ( ) 
 + { 
 + } 
 + 
 + / * * 
 + * This is ok ? 
 + * / 
 + private void method2 ( ) 
 + { 
 + } 
 + 
 + / * * 
 + * And This is ok . < br > 
 + * / 
 + private void method3 ( ) 
 + { 
 + } 
 + 
 + / * * 
 + * This should fail even . though . there are embedded periods 
 + * / 
 + private void method4 ( ) 
 + { 
 + } 
 + 
 + / * * 
 + * Test HTML in Javadoc comment 
 + * < dl > 
 + * < dt > < b > This guy is missing end of bold tag 
 + * < dd > The dt and dd don ' t require end tags . 
 + * < / dl > 
 + * < / td > Extra tag shouldn ' t be here 
 + * 
 + * @ param arg1 < code > dummy . 
 + * / 
 + private void method5 ( int arg1 ) 
 + { 
 + } 
 + 
 + / * * 
 + * Protected check < b > should fail 
 + * / 
 + protected void method6 ( ) 
 + { 
 + } 
 + 
 + / * * 
 + * Package protected check < b > should fail 
 + * / 
 + void method7 ( ) 
 + { 
 + } 
 + 
 + / * * 
 + * Public check should fail < / code > 
 + * should fail < 
 + * / 
 + public void method8 ( ) 
 + { 
 + } 
 + 
 + / * * { @ inheritDoc } * * / 
 + public void method9 ( ) 
 + { 
 + } 
 + 
 + 
 + / / Testcases to excercize the Tag parser ( bug 843887 ) 
 + 
 + / * * 
 + * Real men don ' t use XHTML . 
 + * < br / > 
 + * < hr / > 
 + * < br / > 
 + * < img src = " schattenparker . jpg " / > < / img > 
 + * / 
 + private void method10 ( ) 
 + { / / < / img > should be the only error 
 + } 
 + 
 + / * * 
 + * Tag content can be really mean . 
 + * < p > 
 + * Sometimes a p tag is closed . 
 + * < / p > 
 + * < p > 
 + * Sometimes it ' s not . 
 + * 
 + * < span style = " font - family : ' Times New Roman ' , Times , serif ; font - size : 200 % " > 
 + * Attributes can contain spaces and nested quotes . 
 + * < / span > 
 + * < img src = " slashesCanOccurWithin / attributes . jpg " / > 
 + * < img src = " slashesCanOccurWithin / attributes . jpg " > 
 + * < ! - - comments < div > should not be checked . - - > 
 + * / 
 + private void method11 ( ) 
 + { / / JavadocStyle should not report any error for this method 
 + } 
 + 
 + / * * 
 + * Tags for two lines . 
 + * < a href = " some _ link " 
 + * > Link Text < / a > 
 + * / 
 + private void method12 ( ) 
 + { / / JavadocStyle should not report any error for this method 
 + } 
 + 
 + / * * 
 + * First sentence . 
 + * < pre > 
 + * + - - LITERAL _ DO ( do ) 
 + * | 
 + * + - - SLIST ( { ) 
 + * | 
 + * + - - EXPR 
 + * | 
 + * + - - ASSIGN ( = ) 
 + * | 
 + * + - - IDENT ( x ) 
 + * + - - METHOD _ CALL ( ( ) 
 + * | 
 + * + - - DOT ( . ) 
 + * | 
 + * + - - IDENT ( rand ) 
 + * + - - IDENT ( nextInt ) 
 + * + - - ELIST 
 + * | 
 + * + - - EXPR 
 + * | 
 + * + - - NUM _ INT ( 10 ) 
 + * + - - RPAREN ( ) ) 
 + * + - - SEMI ( ; ) 
 + * + - - RCURLY ( } ) 
 + * + - - LPAREN ( ( ) 
 + * + - - EXPR 
 + * | 
 + * + - - LT ( < ) 
 + * | 
 + * + - - IDENT ( x ) 
 + * + - - NUM _ INT ( 5 ) 
 + * + - - RPAREN ( ) ) 
 + * + - - SEMI ( ; ) 
 + * < / pre > 
 + * / 
 + private void method13 ( ) 
 + { / / JavadocStyle should not report any error for this method 
 + } 
 + 
 + / * * 
 + * Some problematic javadoc . Sample usage : 
 + * < blockquote > 
 + * / 
 + 
 + private void method14 ( ) 
 + { / / empty line between javadoc and method is critical ( bug 841942 ) 
 + } 
 + 
 + / * * 
 + * Empty line between javadoc and method declaration cause wrong 
 + * line number for reporting error ( bug 841942 ) 
 + * / 
 + 
 + private void method15 ( ) 
 + { / / should report unended first sentance ( check line number of the error ) 
 + } 
 + 
 + / * * Description of field : { @ value } . * / 
 + public static final int dummy = 4911 ; 
 + 
 + / * * 
 + * / 
 + public void method16 ( ) 
 + { / / should report empty javadoc 
 + } 
 + 
 + / * * 
 + * @ param a A parameter 
 + * / 
 + protected void method17 ( String a ) 
 + { / / should report empty javadoc ( no text before parameter ) 
 + } 
 + 
 + / * * 
 + * @ exception RuntimeException shoul be thrown 
 + * / 
 + void method18 ( String a ) 
 + { / / should report empty javadoc ( no text before exception ) 
 + } 
 + 
 + / * * 
 + * / 
 + private static int ASDF = 0 ; 
 + / / should report empty javadoc 
 + 
 + / * * @ see java . lang . Object * / 
 + public void method19 ( ) 
 + { / / should report empty javadoc ( no text before see tag ) 
 + } 
 + 
 + public enum Test 
 + / / Should complain about no javadoc 
 + { 
 + / * * 
 + * Value 1 without a period 
 + * / 
 + value1 , 
 + 
 + / * * 
 + * Value 2 with a period . 
 + * / 
 + value2 , 
 + } 
 + 
 + / * * 
 + * A test class . 
 + * @ param < T1 > this is NOT an unclosed T1 tag 
 + * @ param < KEY _ T > for bug 1649020 . 
 + * @ author < a href = " mailto : foo @ nomail . com " > Foo Bar < / a > 
 + * / 
 + public class TestClass < T1 , KEY _ T > 
 + { 
 + / * * 
 + * Retrieves X . 
 + * @ return a value 
 + * / 
 + public T1 getX ( ) 
 + { 
 + return null ; 
 + } 
 + 
 + / * * 
 + * Retrieves Y . 
 + * @ param < V > this is not an unclosed V tag 
 + * @ return a value 
 + * / 
 + public < V > V getY ( ) 
 + { 
 + return null ; 
 + } 
 + 
 + / * * 
 + * Retrieves Z . 
 + * 
 + * @ param < KEY _ T1 > this is not an unclosed KEY _ T tag 
 + * @ return a value 
 + * / 
 + public < KEY _ T1 > KEY _ T getZ _ 1649020 _ 1 ( ) 
 + { 
 + return null ; 
 + } 
 + 
 + / * * 
 + * Retrieves something . 
 + * 
 + * @ param < KEY _ T _ $ _ 1 _ t > strange type 
 + * @ return a value 
 + * / 
 + public < KEY _ T _ $ _ 1 _ t > KEY _ T _ $ _ 1 _ t getEh _ 1649020 _ 2 ( ) { 
 + return null ; 
 + } 
 + 
 + / * * 
 + * Retrieves more something . 
 + * 
 + * @ param < $ _ 12 _ xY _ z > strange type 
 + * @ return a value 
 + * / 
 + public < $ _ 12 _ xY _ z > $ _ 12 _ xY _ z getUmmm _ 1649020 _ 3 ( ) { 
 + return null ; 
 + } 
 + } 
 + 
 + / * * 
 + * Checks if the specified IClass needs to be 
 + * annotated with the @ Type annotation . 
 + * / 
 + public void foo _ 1291847 _ 1 ( ) { 
 + } 
 + 
 + / * * 
 + * Returns the string containing the properties of 
 + * < code > @ Type < / code > annotation . 
 + * / 
 + public void foo _ 1291847 _ 2 ( ) { 
 + } 
 + 
 + 	 	 / * * 
 + 	 	 * Checks generics javadoc . 
 + 	 	 * 
 + 	 	 * @ param strings this is a List < String > 
 + 	 	 * @ param test Map < String , List < String > > a map indexed on String of Lists of Strings . 
 + 	 	 * / 
 + 	 	 public void method20 ( ) { 
 + 	 	 } 
 + 
 + 	 	 / * * 
 + 	 	 * Checks HTML tags in javadoc . 
 + 	 	 * 
 + 	 	 * HTML no good tag 
 + 	 	 * < string > Tests < / string > 
 + 	 	 * 
 + 	 	 * / 
 + 	 	 public void method21 ( ) { 
 + 	 	 } 
 + 
 + / * * 
 + * First sentence . 
 + * < 
 + * / a > 
 + * / 
 + void tagClosedInNextLine ( ) { 
 + 
 + } 
 + 
 + / * * 
 + * Link to some page in two lines . 
 + * < a 
 + * href = " someLink " / > 
 + * / 
 + void tagInTwoLines ( ) { 
 + 
 + } 
 + 
 + / * * 
 + * This Javadoc contains unclosed tag . 
 + * < code > unclosed ' code ' tag < code > 
 + * / 
 + private void unclosedTag ( ) { } 
 + 
 + void javadocLikeCommentInMethod ( ) { 
 + / * * 
 + * It pretends to be Javadoc without dot , but it ' s just comment in method 
 + * / 
 + final int i = 0 ; 
 + } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + private void inheritDoc ( ) { } 
 + 
 + / * * 
 + * < p > < b > Note : < b > it ' s unterminated tag . < / p > 
 + * / 
 + private void unterminatedTag ( ) { } 
 + 
 + / * * 
 + * Javadoc without dot 
 + * / 
 + public interface TestInterface { 
 + / * * 
 + * Javadoc without dot 
 + * / 
 + void method ( ) ; 
 + } 
 + 
 + static class TestStaticClass { 
 + / * * 
 + * Javadoc without dot 
 + * / 
 + public int field ; 
 + } 
 + 
 + / * * 
 + * . 
 + * @ throws Exception if an error occurs 
 + * / 
 + void foo ( ) throws Exception { } 
 + 
 + / * * 
 + * text / 
 + * @ throws Exception if an error occurs 
 + * / 
 + void bar ( ) throws Exception { } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * < p > 
 + * @ throws IllegalArgumentException with errMsg as its message 
 + * / 
 + void inheritDocWithThrows ( ) { } 
 + 
 + / * * 
 + * / 
 + * 
 + * * 
 + * @ param s 
 + * @ return Return 
 + * / 
 + public int test ( String s ) { return 0 ; } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleHtmlComment . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleHtmlComment . java 
 new file mode 100644 
 index 0000000 . . 8a5dcf4 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleHtmlComment . java 
 @ @ - 0 , 0 + 1 , 82 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2014 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle ; 
 + 
 + / * * 
 + * Test input for the JavadocStyleCheck . This check is used to perform 
 + * some additional Javadoc validations . 
 + * 
 + * @ author Tobias Geyer 
 + * @ version 1 . 0 
 + * / 
 + public class InputJavadocStyleHtmlComment 
 + { 
 + / * * 
 + * sometimes a tag starts 
 + * < pre > 
 + * somewhere and has a comment in the middle 
 + * < ! - - ignore this - - > 
 + * and ends afterwards 
 + * < / pre > 
 + * / 
 + private void method1 ( ) 
 + { / / JavadocStyle should not report any error for this method 
 + } 
 + 
 + / * * 
 + * sometimes a tag starts 
 + * < pre > 
 + * somewhere and has a multiline comment in the middle 
 + * < ! - - ignore this 
 + * spanning 
 + * multiple lines - - > 
 + * and ends afterwards 
 + * < / pre > 
 + * / 
 + private void method2 ( ) 
 + { / / JavadocStyle should not report any error for this method 
 + } 
 + 
 + / * * 
 + * sometimes a tag starts 
 + * < pre > 
 + * somewhere and has a multiline comment in the middle 
 + * < ! - - ignore this 
 + * spanning 
 + * multiple lines - - > < / pre > 
 + * and ends on the same line 
 + * / 
 + private void method3 ( ) 
 + { / / JavadocStyle should not report any error for this method 
 + } 
 + 
 + / * * 
 + * sometimes a tag starts 
 + * < pre > 
 + * somewhere and has a comment in the middle 
 + * < ! - - ignore this - - > with text following 
 + * and ends afterwards 
 + * < / pre > 
 + * / 
 + private void method4 ( ) 
 + { / / JavadocStyle should not report any error for this method 
 + } 
 + 
 + / * * 
 + * sometimes a tag starts 
 + * < pre > < ! - - ignore this - - > < / pre > 
 + * and ends with a comment in the middle 
 + * / 
 + private void method5 ( ) 
 + { / / JavadocStyle should not report any error for this method 
 + } 
 + 
 + / * * 
 + * Parameterized interface . 
 + * @ param < I > 
 + * / 
 + interface Interface < I > { } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleNoJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleNoJavadoc . java 
 new file mode 100644 
 index 0000000 . . 5157f69 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / InputJavadocStyleNoJavadoc . java 
 @ @ - 0 , 0 + 1 , 120 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle ; 
 + 
 + public class InputJavadocStyleNoJavadoc / / comment test 
 + { 
 + public int i1 ; 
 + protected int i2 ; 
 + int i3 ; 
 + private int i4 ; 
 + 
 + public void foo1 ( ) { } 
 + protected void foo2 ( ) { } 
 + void foo3 ( ) { } 
 + private void foo4 ( ) { } 
 + 
 + protected class ProtectedInner { 
 + public int i1 ; 
 + protected int i2 ; 
 + int i3 ; 
 + private int i4 ; 
 + 
 + public void foo1 ( ) { } 
 + protected void foo2 ( ) { } 
 + void foo3 ( ) { } 
 + private void foo4 ( ) { } 
 + } 
 + 
 + class PackageInner { 
 + public int i1 ; 
 + protected int i2 ; 
 + int i3 ; 
 + private int i4 ; 
 + 
 + public void foo1 ( ) { } 
 + protected void foo2 ( ) { } 
 + void foo3 ( ) { } 
 + private void foo4 ( ) { } 
 + } 
 + 
 + private class PrivateInner { 
 + public int i1 ; 
 + protected int i2 ; 
 + int i3 ; 
 + private int i4 ; 
 + 
 + public void foo1 ( ) { } 
 + protected void foo2 ( ) { } 
 + void foo3 ( ) { } 
 + private void foo4 ( ) { } 
 + } 
 + } 
 + 
 + class PackageClass { 
 + public int i1 ; 
 + protected int i2 ; 
 + int i3 ; 
 + private int i4 ; 
 + 
 + public void foo1 ( ) { } 
 + protected void foo2 ( ) { } 
 + void foo3 ( ) { } 
 + private void foo4 ( ) { } 
 + 
 + public class PublicInner { 
 + public int i1 ; 
 + protected int i2 ; 
 + int i3 ; 
 + private int i4 ; 
 + 
 + public void foo1 ( ) { } 
 + protected void foo2 ( ) { } 
 + void foo3 ( ) { } 
 + private void foo4 ( ) { } 
 + } 
 + 
 + protected class ProtectedInner { 
 + public int i1 ; 
 + protected int i2 ; 
 + int i3 ; 
 + private int i4 ; 
 + 
 + public void foo1 ( ) { } 
 + protected void foo2 ( ) { } 
 + void foo3 ( ) { } 
 + private void foo4 ( ) { } 
 + } 
 + 
 + class PackageInner { 
 + public int i1 ; 
 + protected int i2 ; 
 + int i3 ; 
 + private int i4 ; 
 + 
 + public void foo1 ( ) { } 
 + protected void foo2 ( ) { } 
 + void foo3 ( ) { } 
 + private void foo4 ( ) { } 
 + } 
 + 
 + private class PrivateInner { 
 + public int i1 ; 
 + protected int i2 ; 
 + int i3 ; 
 + private int i4 ; 
 + 
 + public void foo1 ( ) { } 
 + protected void foo2 ( ) { } 
 + void foo3 ( ) { } 
 + private void foo4 ( ) { } 
 + } 
 + 
 + class IgnoredName { 
 + / / ignore by name 
 + private int logger ; 
 + / / no warning , ' serialVersionUID ' fields do not require Javadoc 
 + private static final long serialVersionUID = 0 ; 
 + } 
 + 
 + / * * / 
 + void methodWithTwoStarComment ( ) { } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / bothfiles / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / bothfiles / package - info . java 
 new file mode 100644 
 index 0000000 . . 99fd5a5 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / bothfiles / package - info . java 
 @ @ - 0 , 0 + 1 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . bothfiles ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / annotation / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / annotation / package - info . java 
 new file mode 100644 
 index 0000000 . . 208ec59 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / annotation / package - info . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + / * * 
 + * This is a valid package documentation . < - - - See the period after the 
 + * first sentence . 
 + * 
 + * < p > 
 + * hurray for javadocs in html 
 + * < br > 
 + * with a legacy non - closed br element 
 + * < / p > 
 + * / 
 + @ Deprecated 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . pkginfo . annotation ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidformat / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidformat / package - info . java 
 new file mode 100644 
 index 0000000 . . a685dfe 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidformat / package - info . java 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + / * * 
 + * blah blah 
 + * / 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . pkginfo . invalidformat ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidinherit / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidinherit / package - info . java 
 new file mode 100644 
 index 0000000 . . 7cb38b7 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / invalidinherit / package - info . java 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + / * * 
 + * { @ inheritDoc } Where are we inheriting from 
 + * / 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . pkginfo . invalidinherit ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / valid / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / valid / package - info . java 
 new file mode 100644 
 index 0000000 . . 66c8f64 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / javadocstyle / pkginfo / valid / package - info . java 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + / * * 
 + * This is a valid package documentation . < - - - See the period after the 
 + * first sentence . 
 + * 
 + * < p > 
 + * hurray for javadocs in html 
 + * < br > 
 + * with a legacy non - closed br element 
 + * < / p > 
 + * / 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc . javadocstyle . pkginfo . valid ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / annotation / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / annotation / package - info . java 
 deleted file mode 100644 
 index b53186a . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / annotation / package - info . java 
 + + + / dev / null 
 @ @ - 1 , 12 + 0 , 0 @ @ 
 - / * * 
 - * This is a valid package documentation . < - - - See the period after the 
 - * first sentence . 
 - * 
 - * < p > 
 - * hurray for javadocs in html 
 - * < br > 
 - * with a legacy non - closed br element 
 - * < / p > 
 - * / 
 - @ Deprecated 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc . pkginfo . annotation ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidformat / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidformat / package - info . java 
 deleted file mode 100644 
 index e8d8b6d . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidformat / package - info . java 
 + + + / dev / null 
 @ @ - 1 , 4 + 0 , 0 @ @ 
 - / * * 
 - * blah blah 
 - * / 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc . pkginfo . invalidformat ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidinherit / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidinherit / package - info . java 
 deleted file mode 100644 
 index 9bc4ef5 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / invalidinherit / package - info . java 
 + + + / dev / null 
 @ @ - 1 , 4 + 0 , 0 @ @ 
 - / * * 
 - * { @ inheritDoc } Where are we inheriting from 
 - * / 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc . pkginfo . invalidinherit ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / valid / package - info . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / valid / package - info . java 
 deleted file mode 100644 
 index 10a9f31 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / pkginfo / valid / package - info . java 
 + + + / dev / null 
 @ @ - 1 , 11 + 0 , 0 @ @ 
 - / * * 
 - * This is a valid package documentation . < - - - See the period after the 
 - * first sentence . 
 - * 
 - * < p > 
 - * hurray for javadocs in html 
 - * < br > 
 - * with a legacy non - closed br element 
 - * < / p > 
 - * / 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc . pkginfo . valid ;

NEAREST DIFF:
diff - - git a / config / findbugs - exclude . xml b / config / findbugs - exclude . xml 
 index 13b814b . . 332bc87 100644 
 - - - a / config / findbugs - exclude . xml 
 + + + b / config / findbugs - exclude . xml 
 @ @ - 99 , 20 + 99 , 6 @ @ 
 < Package name = " ~ com \ . puppycrawl \ . tools \ . checkstyle \ . gui . * " / > 
 < / Match > 
 < Match > 
 - < ! - - till # 896 - - > 
 - < Or > 
 - < Class name = " com . puppycrawl . tools . checkstyle . api . Scope " / > 
 - < Class name = " com . puppycrawl . tools . checkstyle . api . SeverityLevel " / > 
 - < Class name = " com . puppycrawl . tools . checkstyle . checks . AbstractOptionCheck " / > 
 - < Class name = " com . puppycrawl . tools . checkstyle . checks . NewlineAtEndOfFileCheck " / > 
 - < Class name = " com . puppycrawl . tools . checkstyle . checks . SuppressWarningsHolder " / > 
 - < Class name = " com . puppycrawl . tools . checkstyle . checks . annotation . AnnotationUseStyleCheck " / > 
 - < Class name = " com . puppycrawl . tools . checkstyle . checks . coding . HiddenFieldCheck " / > 
 - < Class name = " com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocStyleCheck " / > 
 - < / Or > 
 - < Bug pattern = " DM _ CONVERT _ CASE " / > 
 - < / Match > 
 - < Match > 
 < ! - - have never been a case for years , Eclipse does not show any other classes inherited from CommonASTWithHiddenTokens - - > 
 < Class name = " com . puppycrawl . tools . checkstyle . api . DetailAST " / > 
 < Bug pattern = " BC _ UNCONFIRMED _ CAST " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java 
 index fd1eee0 . . 28dca27 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java 
 @ @ - 18 , 11 + 18 , 14 @ @ 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 + import java . util . Locale ; 
 + 
 / * * 
 * Represents a Java visibility scope . 
 * 
 * @ author Lars K ü hne 
 * @ author Travis Schneeberger 
 + * @ author Mehmet Can C ö mert 
 * / 
 public enum Scope 
 { 
 @ @ - 50 , 7 + 53 , 7 @ @ public enum Scope 
 * / 
 public String getName ( ) 
 { 
 - return name ( ) . toLowerCase ( ) ; 
 + return name ( ) . toLowerCase ( Locale . ENGLISH ) ; 
 } 
 
 / * * 
 @ @ - 73 , 6 + 76 , 6 @ @ public enum Scope 
 * / 
 public static Scope getInstance ( String scopeName ) 
 { 
 - return valueOf ( Scope . class , scopeName . trim ( ) . toUpperCase ( ) ) ; 
 + return valueOf ( Scope . class , scopeName . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java 
 index f0f8ec8 . . 3b98e95 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java 
 @ @ - 18 , 6 + 18 , 8 @ @ 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 + import java . util . Locale ; 
 + 
 / * * 
 * < p > 
 * Severity level for a check violation . 
 @ @ - 29 , 6 + 31 , 7 @ @ package com . puppycrawl . tools . checkstyle . api ; 
 * 
 * @ author David Schneider 
 * @ author Travis Schneeberger 
 + * @ author Mehmet Can C ö mert 
 * / 
 public enum SeverityLevel 
 { 
 @ @ - 52 , 7 + 55 , 7 @ @ public enum SeverityLevel 
 * / 
 public String getName ( ) 
 { 
 - return name ( ) . toLowerCase ( ) ; 
 + return name ( ) . toLowerCase ( Locale . ENGLISH ) ; 
 } 
 
 / * * 
 @ @ - 65 , 6 + 68 , 6 @ @ public enum SeverityLevel 
 public static SeverityLevel getInstance ( String securityLevelName ) 
 { 
 return valueOf ( SeverityLevel . class , securityLevelName . trim ( ) 
 - . toUpperCase ( ) ) ; 
 + . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractOptionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractOptionCheck . java 
 index e48c94b . . d3704a4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractOptionCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractOptionCheck . java 
 @ @ - 18 , 6 + 18 , 8 @ @ 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 package com . puppycrawl . tools . checkstyle . checks ; 
 
 + import java . util . Locale ; 
 + 
 import org . apache . commons . beanutils . ConversionException ; 
 
 import com . puppycrawl . tools . checkstyle . api . Check ; 
 @ @ - 60 , 7 + 62 , 7 @ @ public abstract class AbstractOptionCheck < T extends Enum < T > > 
 public void setOption ( String optionStr ) throws ConversionException 
 { 
 try { 
 - option = Enum . valueOf ( optionClass , optionStr . trim ( ) . toUpperCase ( ) ) ; 
 + option = Enum . valueOf ( optionClass , optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 catch ( IllegalArgumentException iae ) { 
 throw new ConversionException ( " unable to parse " + option , iae ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java 
 index 701ed88 . . 7241942 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java 
 @ @ - 20 , 10 + 20 , 13 @ @ package com . puppycrawl . tools . checkstyle . checks ; 
 
 import com . google . common . io . Closeables ; 
 import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; 
 + 
 import java . io . File ; 
 import java . io . IOException ; 
 import java . io . RandomAccessFile ; 
 import java . util . List ; 
 + import java . util . Locale ; 
 + 
 import org . apache . commons . beanutils . ConversionException ; 
 
 / * * 
 @ @ - 108 , 7 + 111 , 7 @ @ public class NewlineAtEndOfFileCheck 
 try { 
 lineSeparator = 
 Enum . valueOf ( LineSeparatorOption . class , lineSeparatorParam . trim ( ) 
 - . toUpperCase ( ) ) ; 
 + . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 catch ( IllegalArgumentException iae ) { 
 throw new ConversionException ( " unable to parse " + lineSeparatorParam , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 15542ca . . 49f10f0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 20 , 7 + 20 , 6 @ @ package com . puppycrawl . tools . checkstyle . checks ; 
 
 import com . google . common . collect . ImmutableList ; 
 import com . google . common . collect . Lists ; 
 - 
 import com . puppycrawl . tools . checkstyle . api . Check ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 @ @ - 30 , 6 + 29 , 7 @ @ import org . apache . commons . beanutils . ConversionException ; 
 import java . util . HashMap ; 
 import java . util . LinkedList ; 
 import java . util . List ; 
 + import java . util . Locale ; 
 import java . util . Map ; 
 
 / * * 
 @ @ - 136 , 7 + 136 , 7 @ @ public class SuppressWarningsHolder 
 if ( sourceName . endsWith ( CHECK _ SUFFIX ) ) { 
 endIndex - = CHECK _ SUFFIX . length ( ) ; 
 } 
 - return sourceName . substring ( startIndex , endIndex ) . toLowerCase ( ) ; 
 + return sourceName . substring ( startIndex , endIndex ) . toLowerCase ( Locale . ENGLISH ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 index 3795b64 . . 395509f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 @ @ - 18 , 6 + 18 , 8 @ @ 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 
 + import java . util . Locale ; 
 + 
 import org . apache . commons . beanutils . ConversionException ; 
 
 import com . puppycrawl . tools . checkstyle . api . Check ; 
 @ @ - 217 , 7 + 219 , 7 @ @ public final class AnnotationUseStyleCheck extends Check 
 final String string ) 
 { 
 try { 
 - return Enum . valueOf ( enuclass , string . trim ( ) . toUpperCase ( ) ) ; 
 + return Enum . valueOf ( enuclass , string . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 catch ( final IllegalArgumentException iae ) { 
 throw new ConversionException ( " unable to parse " + string , iae ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 index f30e745 . . d73ee30 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 @ @ - 26 , 8 + 26 , 10 @ @ import com . puppycrawl . tools . checkstyle . api . ScopeUtils ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . Utils ; 
 
 + import java . util . Locale ; 
 import java . util . Set ; 
 import java . util . regex . Pattern ; 
 + 
 import org . apache . commons . beanutils . ConversionException ; 
 
 / * * 
 @ @ - 414 , 7 + 416 , 7 @ @ public class HiddenFieldCheck 
 if ( name ! = null & & ( name . length ( ) = = 1 
 | | name . length ( ) > 1 & & ! Character . isUpperCase ( name . charAt ( 1 ) ) ) ) 
 { 
 - setterName = name . substring ( 0 , 1 ) . toUpperCase ( ) + name . substring ( 1 ) ; 
 + setterName = name . substring ( 0 , 1 ) . toUpperCase ( Locale . ENGLISH ) + name . substring ( 1 ) ; 
 } 
 return setterName ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 index b9a2312 . . dd591c3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 @ @ - 28 , 9 + 28 , 11 @ @ import com . puppycrawl . tools . checkstyle . api . ScopeUtils ; 
 import com . puppycrawl . tools . checkstyle . api . TextBlock ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . checks . CheckUtils ; 
 + 
 import java . util . ArrayDeque ; 
 import java . util . Deque ; 
 import java . util . List ; 
 + import java . util . Locale ; 
 import java . util . Set ; 
 import java . util . regex . Pattern ; 
 
 @ @ - 467 , 7 + 469 , 7 @ @ public class JavadocStyleCheck 
 / / Can ' t simply not put them on the stack , since singletons 
 / / like < dt > and < dd > ( unhappily ) may either be terminated 
 / / or not terminated . Both options are legal . 
 - return SINGLE _ TAGS . contains ( tag . getId ( ) . toLowerCase ( ) ) ; 
 + return SINGLE _ TAGS . contains ( tag . getId ( ) . toLowerCase ( Locale . ENGLISH ) ) ; 
 } 
 
 / * * 
 @ @ - 478 , 7 + 480 , 7 @ @ public class JavadocStyleCheck 
 * / 
 private boolean isAllowedTag ( HtmlTag tag ) 
 { 
 - return ALLOWED _ TAGS . contains ( tag . getId ( ) . toLowerCase ( ) ) ; 
 + return ALLOWED _ TAGS . contains ( tag . getId ( ) . toLowerCase ( Locale . ENGLISH ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / ScopeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / ScopeTest . java 
 index ac81f1d . . aead7fe 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / ScopeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / ScopeTest . java 
 @ @ - 21 , 8 + 21 , 15 @ @ package com . puppycrawl . tools . checkstyle . api ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertNotNull ; 
 import static org . junit . Assert . assertTrue ; 
 + 
 + import java . util . Locale ; 
 + 
 import org . junit . Test ; 
 
 + / * * 
 + * Test cases for { @ link Scope } enumeration . 
 + * @ author Mehmet Can C ö mert 
 + * / 
 public class ScopeTest 
 { 
 @ Test ( expected = IllegalArgumentException . class ) 
 @ @ - 48 , 6 + 55 , 22 @ @ public class ScopeTest 
 } 
 
 @ Test 
 + public void testMixedCaseSpacesWithDifferentLocales ( ) 
 + { 
 + Locale [ ] differentLocales = new Locale [ ] { new Locale ( " TR " , " tr " ) } ; 
 + Locale defaultLocale = Locale . getDefault ( ) ; 
 + try { 
 + for ( Locale differentLocale : differentLocales ) { 
 + Locale . setDefault ( differentLocale ) ; 
 + testMixedCaseSpaces ( ) ; 
 + } 
 + } 
 + finally { 
 + Locale . setDefault ( defaultLocale ) ; 
 + } 
 + } 
 + 
 + @ Test 
 public void testIsInAnonInner ( ) 
 { 
 assertTrue ( Scope . NOTHING . isIn ( Scope . ANONINNER ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelTest . java 
 index 90e72cb . . c096ce5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelTest . java 
 @ @ - 20 , 8 + 20 , 15 @ @ package com . puppycrawl . tools . checkstyle . api ; 
 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertNotNull ; 
 + 
 + import java . util . Locale ; 
 + 
 import org . junit . Test ; 
 
 + / * * 
 + * Test cases for { @ link SeverityLevel } enumeration . 
 + * @ author Mehmet Can C ö mert 
 + * / 
 public class SeverityLevelTest 
 { 
 @ Test ( expected = IllegalArgumentException . class ) 
 @ @ - 43 , 4 + 50 , 20 @ @ public class SeverityLevelTest 
 SeverityLevel . getInstance ( " WarniNg " ) ; 
 SeverityLevel . getInstance ( " ERROR " ) ; 
 } 
 + 
 + @ Test 
 + public void testMixedCaseSpacesWithDifferentLocales ( ) 
 + { 
 + Locale [ ] differentLocales = new Locale [ ] { new Locale ( " TR " , " tr " ) } ; 
 + Locale defaultLocale = Locale . getDefault ( ) ; 
 + try { 
 + for ( Locale differentLocale : differentLocales ) { 
 + Locale . setDefault ( differentLocale ) ; 
 + testMixedCaseSpaces ( ) ; 
 + } 
 + } 
 + finally { 
 + Locale . setDefault ( defaultLocale ) ; 
 + } 
 + } 
 }
