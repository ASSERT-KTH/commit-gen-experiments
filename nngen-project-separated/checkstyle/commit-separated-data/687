BLEU SCORE: 0.043899270742871276

TEST MSG: Issue # 3752 : Added tokens to SeparatorWrapCheck in google style
GENERATED MSG: OneTopLevelClass check example is broken and documentation missing , for ' tokens ' property . Issue # 1017

TEST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / SeparatorWrapTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / SeparatorWrapTest . java <nl> index 146babf . . 86a8d94 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / SeparatorWrapTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / SeparatorWrapTest . java <nl> @ @ - 79 , 4 + 79 , 31 @ @ public class SeparatorWrapTest extends BaseCheckTestSupport { <nl> final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testEllipsis ( ) throws Exception { <nl> + final String [ ] expected = { <nl> + " 11 : 13 : " + getCheckMessage ( SeparatorWrapCheck . class , " line . previous " , " . . . " ) , <nl> + } ; <nl> + <nl> + final Configuration checkConfig = getCheckConfig ( " SeparatorWrap " , " SeparatorWrapEllipsis " ) ; <nl> + final String filePath = getPath ( " InputSeparatorWrapEllipsis . java " ) ; <nl> + <nl> + final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; <nl> + verify ( checkConfig , filePath , expected , warnList ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testArrayDeclarator ( ) throws Exception { <nl> + final String [ ] expected = { <nl> + " 9 : 13 : " + getCheckMessage ( SeparatorWrapCheck . class , " line . previous " , " [ " ) , <nl> + } ; <nl> + final Configuration checkConfig = getCheckConfig ( " SeparatorWrap " , <nl> + " SeparatorWrapArrayDeclarator " ) ; <nl> + final String filePath = getPath ( " InputSeparatorWrapArrayDeclarator . java " ) ; <nl> + <nl> + final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; <nl> + verify ( checkConfig , filePath , expected , warnList ) ; <nl> + } <nl> + <nl> } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapArrayDeclarator . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapArrayDeclarator . java <nl> new file mode 100644 <nl> index 0000000 . . acbcdd9 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapArrayDeclarator . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + package com . google . checkstyle . test . chapter4formatting . rule451wheretobreak ; <nl> + <nl> + class InputSeparatorWrapArrayDeclarator { <nl> + <nl> + protected int [ ] arrayDeclarationWithGoodWrapping = new int [ <nl> + ] { 1 , 2 } ; / / ok <nl> + <nl> + protected int [ ] arrayDeclarationWithBadWrapping = new int <nl> + [ ] { 1 , 2 } ; / / warn <nl> + <nl> + } <nl> + <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapEllipsis . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapEllipsis . java <nl> new file mode 100644 <nl> index 0000000 . . d962046 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapEllipsis . java <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + package com . google . checkstyle . test . chapter4formatting . rule451wheretobreak ; <nl> + <nl> + class InputSeparatorWrapEllipsis { <nl> + <nl> + public void testMethodWithGoodWrapping ( String . . . / / ok <nl> + parameters ) { <nl> + <nl> + } <nl> + <nl> + public void testMethodWithBadWrapping ( String <nl> + . . . parameters ) { / / warn <nl> + <nl> + } <nl> + <nl> + } <nl> + <nl> diff - - git a / src / main / resources / google _ checks . xml b / src / main / resources / google _ checks . xml <nl> index a912603 . . f5efa55 100644 <nl> - - - a / src / main / resources / google _ checks . xml <nl> + + + b / src / main / resources / google _ checks . xml <nl> @ @ - 94 , 6 + 94 , 18 @ @ <nl> < property name = " option " value = " EOL " / > <nl> < / module > <nl> < module name = " SeparatorWrap " > <nl> + < ! - - ELLIPSIS is EOL until https : / / github . com / google / styleguide / issues / 258 - - > <nl> + < property name = " id " value = " SeparatorWrapEllipsis " / > <nl> + < property name = " tokens " value = " ELLIPSIS " / > <nl> + < property name = " option " value = " EOL " / > <nl> + < / module > <nl> + < module name = " SeparatorWrap " > <nl> + < ! - - ARRAY _ DECLARATOR is EOL until https : / / github . com / google / styleguide / issues / 259 - - > <nl> + < property name = " id " value = " SeparatorWrapArrayDeclarator " / > <nl> + < property name = " tokens " value = " ARRAY _ DECLARATOR " / > <nl> + < property name = " option " value = " EOL " / > <nl> + < / module > <nl> + < module name = " SeparatorWrap " > <nl> < property name = " id " value = " SeparatorWrapMethodRef " / > <nl> < property name = " tokens " value = " METHOD _ REF " / > <nl> < property name = " option " value = " nl " / > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java <nl> index 8f00833 . . 87454c8 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java <nl> @ @ - 112 , 4 + 112 , 25 @ @ public class SeparatorWrapCheckTest <nl> ex . getMessage ( ) . startsWith ( messageStart ) ) ; <nl> } <nl> } <nl> + <nl> + @ Test <nl> + public void testEllipsis ( ) throws Exception { <nl> + checkConfig . addAttribute ( " option " , " EOL " ) ; <nl> + checkConfig . addAttribute ( " tokens " , " ELLIPSIS " ) ; <nl> + final String [ ] expected = { <nl> + " 11 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " . . . " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputSeparatorWrapForEllipsis . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testArrayDeclarator ( ) throws Exception { <nl> + checkConfig . addAttribute ( " option " , " EOL " ) ; <nl> + checkConfig . addAttribute ( " tokens " , " ARRAY _ DECLARATOR " ) ; <nl> + final String [ ] expected = { <nl> + " 9 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " [ " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputSeparatorWrapForArrayDeclarator . java " ) , expected ) ; <nl> + } <nl> + <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> index b8e5491 . . 158c760 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> @ @ - 179 , 9 + 179 , 15 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> " METHOD _ DEF " , " CTOR _ DEF " , " CLASS _ DEF " , " ENUM _ DEF " , " INTERFACE _ DEF " ) <nl> . collect ( Collectors . toSet ( ) ) ) ; <nl> GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " SeparatorWrap " , Stream . of ( <nl> - / / state of configuration until <nl> - / / https : / / github . com / checkstyle / checkstyle / issues / 3752 <nl> - " RBRACK " , " AT " , " ELLIPSIS " , " SEMI " , " ARRAY _ DECLARATOR " , <nl> + / / location could be any to allow writing expressions for indexes evaluation <nl> + / / on new line , see https : / / github . com / checkstyle / checkstyle / issues / 3752 <nl> + " RBRACK " , <nl> + / / for some targets annotations can be used without wrapping , as described <nl> + / / in https : / / google . github . io / styleguide / javaguide . html # s4 . 8 . 5 - annotations <nl> + " AT " , <nl> + / / location could be any to allow using for line separation in enum values , <nl> + / / see https : / / github . com / checkstyle / checkstyle / issues / 3752 <nl> + " SEMI " , <nl> / / needs context to decide what type of parentheses should be separated or not <nl> / / which this check does not provide <nl> " LPAREN " , " RPAREN " ) . collect ( Collectors . toSet ( ) ) ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForArrayDeclarator . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForArrayDeclarator . java <nl> new file mode 100644 <nl> index 0000000 . . 59a4b8a <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForArrayDeclarator . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . separatorwrap ; <nl> + <nl> + class InputSeparatorWrapTestArrayDeclarator { <nl> + <nl> + protected int [ ] arrayDeclarationWithGoodWrapping = new int [ <nl> + ] { 1 , 2 } ; <nl> + <nl> + protected int [ ] arrayDeclarationWithBadWrapping = new int <nl> + [ ] { 1 , 2 } ; <nl> + <nl> + } <nl> + <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForEllipsis . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForEllipsis . java <nl> new file mode 100644 <nl> index 0000000 . . f95d8cf <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForEllipsis . java <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . separatorwrap ; <nl> + <nl> + class InputSeparatorWrapTestEllipsis { <nl> + <nl> + public void testMethodWithGoodWrapping ( String . . . <nl> + parameters ) { <nl> + <nl> + } <nl> + <nl> + public void testMethodWithBadWrapping ( String <nl> + . . . parameters ) { <nl> + <nl> + } <nl> + <nl> + } <nl> +
NEAREST DIFF (one line): diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 4b15ade . . c2e6e8c 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 73 , 7 + 73 , 9 @ @ <nl> < exclude name = " DataflowAnomalyAnalysis " / > <nl> < ! - - turning local varibles to fields create design problems and extend scope of variable - - > <nl> < exclude name = " AvoidFinalLocalVariable " / > <nl> + < ! - - conflicts with names that does not mean in / out - - > <nl> < exclude name = " AvoidPrefixingMethodParameters " / > <nl> + < ! - - that is not practical , no options to allow some magic numbers , we will use our implementation - - > <nl> < exclude name = " AvoidLiteralsInIfCondition " / > <nl> < ! - - Checkstyle is not thread safe - - > <nl> < exclude name = " UseConcurrentHashMap " / >

TEST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / SeparatorWrapTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / SeparatorWrapTest . java 
 index 146babf . . 86a8d94 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / SeparatorWrapTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / SeparatorWrapTest . java 
 @ @ - 79 , 4 + 79 , 31 @ @ public class SeparatorWrapTest extends BaseCheckTestSupport { 
 final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 + 
 + @ Test 
 + public void testEllipsis ( ) throws Exception { 
 + final String [ ] expected = { 
 + " 11 : 13 : " + getCheckMessage ( SeparatorWrapCheck . class , " line . previous " , " . . . " ) , 
 + } ; 
 + 
 + final Configuration checkConfig = getCheckConfig ( " SeparatorWrap " , " SeparatorWrapEllipsis " ) ; 
 + final String filePath = getPath ( " InputSeparatorWrapEllipsis . java " ) ; 
 + 
 + final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; 
 + verify ( checkConfig , filePath , expected , warnList ) ; 
 + } 
 + 
 + @ Test 
 + public void testArrayDeclarator ( ) throws Exception { 
 + final String [ ] expected = { 
 + " 9 : 13 : " + getCheckMessage ( SeparatorWrapCheck . class , " line . previous " , " [ " ) , 
 + } ; 
 + final Configuration checkConfig = getCheckConfig ( " SeparatorWrap " , 
 + " SeparatorWrapArrayDeclarator " ) ; 
 + final String filePath = getPath ( " InputSeparatorWrapArrayDeclarator . java " ) ; 
 + 
 + final Integer [ ] warnList = getLinesWithWarn ( filePath ) ; 
 + verify ( checkConfig , filePath , expected , warnList ) ; 
 + } 
 + 
 } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapArrayDeclarator . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapArrayDeclarator . java 
 new file mode 100644 
 index 0000000 . . acbcdd9 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapArrayDeclarator . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + package com . google . checkstyle . test . chapter4formatting . rule451wheretobreak ; 
 + 
 + class InputSeparatorWrapArrayDeclarator { 
 + 
 + protected int [ ] arrayDeclarationWithGoodWrapping = new int [ 
 + ] { 1 , 2 } ; / / ok 
 + 
 + protected int [ ] arrayDeclarationWithBadWrapping = new int 
 + [ ] { 1 , 2 } ; / / warn 
 + 
 + } 
 + 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapEllipsis . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapEllipsis . java 
 new file mode 100644 
 index 0000000 . . d962046 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule451wheretobreak / InputSeparatorWrapEllipsis . java 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + package com . google . checkstyle . test . chapter4formatting . rule451wheretobreak ; 
 + 
 + class InputSeparatorWrapEllipsis { 
 + 
 + public void testMethodWithGoodWrapping ( String . . . / / ok 
 + parameters ) { 
 + 
 + } 
 + 
 + public void testMethodWithBadWrapping ( String 
 + . . . parameters ) { / / warn 
 + 
 + } 
 + 
 + } 
 + 
 diff - - git a / src / main / resources / google _ checks . xml b / src / main / resources / google _ checks . xml 
 index a912603 . . f5efa55 100644 
 - - - a / src / main / resources / google _ checks . xml 
 + + + b / src / main / resources / google _ checks . xml 
 @ @ - 94 , 6 + 94 , 18 @ @ 
 < property name = " option " value = " EOL " / > 
 < / module > 
 < module name = " SeparatorWrap " > 
 + < ! - - ELLIPSIS is EOL until https : / / github . com / google / styleguide / issues / 258 - - > 
 + < property name = " id " value = " SeparatorWrapEllipsis " / > 
 + < property name = " tokens " value = " ELLIPSIS " / > 
 + < property name = " option " value = " EOL " / > 
 + < / module > 
 + < module name = " SeparatorWrap " > 
 + < ! - - ARRAY _ DECLARATOR is EOL until https : / / github . com / google / styleguide / issues / 259 - - > 
 + < property name = " id " value = " SeparatorWrapArrayDeclarator " / > 
 + < property name = " tokens " value = " ARRAY _ DECLARATOR " / > 
 + < property name = " option " value = " EOL " / > 
 + < / module > 
 + < module name = " SeparatorWrap " > 
 < property name = " id " value = " SeparatorWrapMethodRef " / > 
 < property name = " tokens " value = " METHOD _ REF " / > 
 < property name = " option " value = " nl " / > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java 
 index 8f00833 . . 87454c8 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheckTest . java 
 @ @ - 112 , 4 + 112 , 25 @ @ public class SeparatorWrapCheckTest 
 ex . getMessage ( ) . startsWith ( messageStart ) ) ; 
 } 
 } 
 + 
 + @ Test 
 + public void testEllipsis ( ) throws Exception { 
 + checkConfig . addAttribute ( " option " , " EOL " ) ; 
 + checkConfig . addAttribute ( " tokens " , " ELLIPSIS " ) ; 
 + final String [ ] expected = { 
 + " 11 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " . . . " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputSeparatorWrapForEllipsis . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testArrayDeclarator ( ) throws Exception { 
 + checkConfig . addAttribute ( " option " , " EOL " ) ; 
 + checkConfig . addAttribute ( " tokens " , " ARRAY _ DECLARATOR " ) ; 
 + final String [ ] expected = { 
 + " 9 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " [ " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputSeparatorWrapForArrayDeclarator . java " ) , expected ) ; 
 + } 
 + 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 index b8e5491 . . 158c760 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 @ @ - 179 , 9 + 179 , 15 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 " METHOD _ DEF " , " CTOR _ DEF " , " CLASS _ DEF " , " ENUM _ DEF " , " INTERFACE _ DEF " ) 
 . collect ( Collectors . toSet ( ) ) ) ; 
 GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " SeparatorWrap " , Stream . of ( 
 - / / state of configuration until 
 - / / https : / / github . com / checkstyle / checkstyle / issues / 3752 
 - " RBRACK " , " AT " , " ELLIPSIS " , " SEMI " , " ARRAY _ DECLARATOR " , 
 + / / location could be any to allow writing expressions for indexes evaluation 
 + / / on new line , see https : / / github . com / checkstyle / checkstyle / issues / 3752 
 + " RBRACK " , 
 + / / for some targets annotations can be used without wrapping , as described 
 + / / in https : / / google . github . io / styleguide / javaguide . html # s4 . 8 . 5 - annotations 
 + " AT " , 
 + / / location could be any to allow using for line separation in enum values , 
 + / / see https : / / github . com / checkstyle / checkstyle / issues / 3752 
 + " SEMI " , 
 / / needs context to decide what type of parentheses should be separated or not 
 / / which this check does not provide 
 " LPAREN " , " RPAREN " ) . collect ( Collectors . toSet ( ) ) ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForArrayDeclarator . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForArrayDeclarator . java 
 new file mode 100644 
 index 0000000 . . 59a4b8a 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForArrayDeclarator . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . separatorwrap ; 
 + 
 + class InputSeparatorWrapTestArrayDeclarator { 
 + 
 + protected int [ ] arrayDeclarationWithGoodWrapping = new int [ 
 + ] { 1 , 2 } ; 
 + 
 + protected int [ ] arrayDeclarationWithBadWrapping = new int 
 + [ ] { 1 , 2 } ; 
 + 
 + } 
 + 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForEllipsis . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForEllipsis . java 
 new file mode 100644 
 index 0000000 . . f95d8cf 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / separatorwrap / InputSeparatorWrapForEllipsis . java 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . separatorwrap ; 
 + 
 + class InputSeparatorWrapTestEllipsis { 
 + 
 + public void testMethodWithGoodWrapping ( String . . . 
 + parameters ) { 
 + 
 + } 
 + 
 + public void testMethodWithBadWrapping ( String 
 + . . . parameters ) { 
 + 
 + } 
 + 
 + } 
 +

NEAREST DIFF:
diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 4b15ade . . c2e6e8c 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 73 , 7 + 73 , 9 @ @ 
 < exclude name = " DataflowAnomalyAnalysis " / > 
 < ! - - turning local varibles to fields create design problems and extend scope of variable - - > 
 < exclude name = " AvoidFinalLocalVariable " / > 
 + < ! - - conflicts with names that does not mean in / out - - > 
 < exclude name = " AvoidPrefixingMethodParameters " / > 
 + < ! - - that is not practical , no options to allow some magic numbers , we will use our implementation - - > 
 < exclude name = " AvoidLiteralsInIfCondition " / > 
 < ! - - Checkstyle is not thread safe - - > 
 < exclude name = " UseConcurrentHashMap " / >
