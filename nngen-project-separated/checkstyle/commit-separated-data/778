BLEU SCORE: 0.8663105150671037

TEST MSG: Revert " minor : remove problematic Check to unblock CI failure states , this commit will be revered after fix for # 4387 "
GENERATED MSG: minor : remove problematic Check to unblock CI failure states , this commit will be revered after fix for # 4387

TEST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index 5b5cda3 . . 292fde8 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 190 , 9 + 190 , 7 @ @ <nl> < module name = " NumericLiteralNeedsUnderscoreCheck " / > <nl> < module name = " UniformEnumConstantNameCheck " / > <nl> < module name = " ForbidAnnotationElementValueCheck " / > <nl> - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4387 <nl> < module name = " HideUtilityClassConstructorCheck " / > <nl> - - - > <nl> < module name = " AvoidModifiersForTypesCheck " > <nl> < property name = " forbiddenClassesRegexpProtected " value = " Logger " / > <nl> < property name = " forbiddenClassesRegexpPublic " value = " Logger " / >
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheckTest . java <nl> index 4106012 . . 95d6a23 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheckTest . java <nl> @ @ - 35 , 7 + 35 , 9 @ @ public class IllegalTokenCheckTest <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " coding " + File . separator + filename ) ; <nl> + + " coding " + File . separator <nl> + + " illegaltoken " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTokens . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTokens . java <nl> deleted file mode 100644 <nl> index 31c6faf . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTokens . java <nl> + + + / dev / null <nl> @ @ - 1 , 38 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> - <nl> - / * * <nl> - * Test for illegal tokens <nl> - * / <nl> - public class InputIllegalTokens <nl> - { <nl> - public void methodWithPreviouslyIllegalTokens ( ) <nl> - { <nl> - int i = 0 ; <nl> - switch ( i ) <nl> - { <nl> - default : <nl> - i - - ; <nl> - i + + ; <nl> - break ; <nl> - } <nl> - } <nl> - <nl> - public native void nativeMethod ( ) ; <nl> - <nl> - public void methodWithLiterals ( ) <nl> - { <nl> - final String ref = " < a href = \ " " ; <nl> - final String refCase = " < A hReF = \ " " ; <nl> - } <nl> - <nl> - public void methodWithLabels ( ) { <nl> - label : <nl> - { <nl> - anotherLabel : / / some comment href <nl> - do { <nl> - continue anotherLabel ; <nl> - } while ( false ) ; <nl> - break label ; / / some a href <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltoken / InputIllegalTokens . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltoken / InputIllegalTokens . java <nl> new file mode 100644 <nl> index 0000000 . . 43a07e9 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltoken / InputIllegalTokens . java <nl> @ @ - 0 , 0 + 1 , 38 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding . illegaltoken ; <nl> + <nl> + / * * <nl> + * Test for illegal tokens <nl> + * / <nl> + public class InputIllegalTokens <nl> + { <nl> + public void methodWithPreviouslyIllegalTokens ( ) <nl> + { <nl> + int i = 0 ; <nl> + switch ( i ) <nl> + { <nl> + default : <nl> + i - - ; <nl> + i + + ; <nl> + break ; <nl> + } <nl> + } <nl> + <nl> + public native void nativeMethod ( ) ; <nl> + <nl> + public void methodWithLiterals ( ) <nl> + { <nl> + final String ref = " < a href = \ " " ; <nl> + final String refCase = " < A hReF = \ " " ; <nl> + } <nl> + <nl> + public void methodWithLabels ( ) { <nl> + label : <nl> + { <nl> + anotherLabel : / / some comment href <nl> + do { <nl> + continue anotherLabel ; <nl> + } while ( false ) ; <nl> + break label ; / / some a href <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index 5b5cda3 . . 292fde8 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 190 , 9 + 190 , 7 @ @ 
 < module name = " NumericLiteralNeedsUnderscoreCheck " / > 
 < module name = " UniformEnumConstantNameCheck " / > 
 < module name = " ForbidAnnotationElementValueCheck " / > 
 - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4387 
 < module name = " HideUtilityClassConstructorCheck " / > 
 - - - > 
 < module name = " AvoidModifiersForTypesCheck " > 
 < property name = " forbiddenClassesRegexpProtected " value = " Logger " / > 
 < property name = " forbiddenClassesRegexpPublic " value = " Logger " / >

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheckTest . java 
 index 4106012 . . 95d6a23 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTokenCheckTest . java 
 @ @ - 35 , 7 + 35 , 9 @ @ public class IllegalTokenCheckTest 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " coding " + File . separator + filename ) ; 
 + + " coding " + File . separator 
 + + " illegaltoken " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTokens . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTokens . java 
 deleted file mode 100644 
 index 31c6faf . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIllegalTokens . java 
 + + + / dev / null 
 @ @ - 1 , 38 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . coding ; 
 - 
 - / * * 
 - * Test for illegal tokens 
 - * / 
 - public class InputIllegalTokens 
 - { 
 - public void methodWithPreviouslyIllegalTokens ( ) 
 - { 
 - int i = 0 ; 
 - switch ( i ) 
 - { 
 - default : 
 - i - - ; 
 - i + + ; 
 - break ; 
 - } 
 - } 
 - 
 - public native void nativeMethod ( ) ; 
 - 
 - public void methodWithLiterals ( ) 
 - { 
 - final String ref = " < a href = \ " " ; 
 - final String refCase = " < A hReF = \ " " ; 
 - } 
 - 
 - public void methodWithLabels ( ) { 
 - label : 
 - { 
 - anotherLabel : / / some comment href 
 - do { 
 - continue anotherLabel ; 
 - } while ( false ) ; 
 - break label ; / / some a href 
 - } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltoken / InputIllegalTokens . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltoken / InputIllegalTokens . java 
 new file mode 100644 
 index 0000000 . . 43a07e9 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltoken / InputIllegalTokens . java 
 @ @ - 0 , 0 + 1 , 38 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding . illegaltoken ; 
 + 
 + / * * 
 + * Test for illegal tokens 
 + * / 
 + public class InputIllegalTokens 
 + { 
 + public void methodWithPreviouslyIllegalTokens ( ) 
 + { 
 + int i = 0 ; 
 + switch ( i ) 
 + { 
 + default : 
 + i - - ; 
 + i + + ; 
 + break ; 
 + } 
 + } 
 + 
 + public native void nativeMethod ( ) ; 
 + 
 + public void methodWithLiterals ( ) 
 + { 
 + final String ref = " < a href = \ " " ; 
 + final String refCase = " < A hReF = \ " " ; 
 + } 
 + 
 + public void methodWithLabels ( ) { 
 + label : 
 + { 
 + anotherLabel : / / some comment href 
 + do { 
 + continue anotherLabel ; 
 + } while ( false ) ; 
 + break label ; / / some a href 
 + } 
 + } 
 + }
