BLEU SCORE: 0.07768562846380175

TEST MSG: minor : extending whitelist with ' words ' from hash in shell script
GENERATED MSG: minor : fix for typo in travis ; add new words to whitelist

TEST DIFF (one line): diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words <nl> index 829e33c . . cdf7719 100644 <nl> - - - a / . ci / jsoref - spellchecker / whitelist . words <nl> + + + b / . ci / jsoref - spellchecker / whitelist . words <nl> @ @ - 103 , 6 + 103 , 7 @ @ bbb <nl> BBBB <nl> bc <nl> BCA <nl> + bcff <nl> BClass <nl> bdc <nl> bdo <nl> @ @ - 278 , 6 + 279 , 7 @ @ DDDD <nl> Ddry <nl> declarationorder <nl> DECOMPRESSOR <nl> + ded <nl> defau <nl> defaultcasepresent <nl> defaultcomeslast
NEAREST DIFF (one line): diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 9868ed2 . . 5cf62b6 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 7 , 6 + 7 , 35 @ @ <nl> < description > <nl> PMD common ruleset for Checkstyle main / test sourcesets <nl> < / description > <nl> + <nl> + < rule ref = " category / java / bestpractices . xml " > <nl> + < ! - - We do not care about this minor overhead , we are not Android application and we do not <nl> + want to change visibility of methods . Package - private visibility should be avoid almost <nl> + always . - - > <nl> + < exclude name = " AccessorMethodGeneration " / > <nl> + < ! - - The PMD mistakes the AbstractViolationReporter : : log ( ) as a debug log . - - > <nl> + < exclude name = " GuardLogStatement " / > <nl> + < / rule > <nl> + < rule ref = " category / java / bestpractices . xml / AvoidPrintStackTrace " > <nl> + < properties > <nl> + < ! - - It is ok to use print stack trace in CLI class . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' ] " / > <nl> + < / properties > <nl> + < / rule > <nl> + < rule ref = " category / java / bestpractices . xml / JUnitAssertionsShouldIncludeMessage " > <nl> + < properties > <nl> + < ! - - The PMD check accepts only a string constant as the assert message . <nl> + This check uses a method call . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocCatchCheck ' ] / / MethodDeclaration [ @ Name = ' visitJavadocToken ' ] " / > <nl> + < / properties > <nl> + < / rule > <nl> + < rule ref = " category / java / bestpractices . xml / SystemPrintln " > <nl> + < properties > <nl> + < ! - - it is ok to use println in CLI class . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' ] " / > <nl> + < / properties > <nl> + < / rule > <nl> + <nl> < rule ref = " category / java / errorprone . xml " > <nl> < ! - - That rule is not practical , no options to allow some magic numbers , <nl> we will use our implementation . - - > <nl> @ @ - 285 , 19 + 314 , 6 @ @ <nl> <nl> < rule ref = " rulesets / java / imports . xml " / > <nl> <nl> - < rule ref = " rulesets / java / logging - java . xml / SystemPrintln " > <nl> - < properties > <nl> - < ! - - it is ok to use println in CLI class - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' or @ Image = ' JavadocPropertiesGenerator ' ] " / > <nl> - < / properties > <nl> - < / rule > <nl> - < rule ref = " rulesets / java / logging - java . xml / AvoidPrintStackTrace " > <nl> - < properties > <nl> - < ! - - it is ok to use print stack trace in CLI class - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' or @ Image = ' JavadocPropertiesGenerator ' ] " / > <nl> - < / properties > <nl> - < / rule > <nl> - <nl> < rule ref = " rulesets / java / migrating . xml " / > <nl> <nl> < rule ref = " rulesets / java / naming . xml " > <nl> @ @ - 379 , 14 + 395 , 7 @ @ <nl> < property name = " skipAnnotations " value = " true " / > <nl> < / properties > <nl> < / rule > <nl> - < rule ref = " rulesets / java / sunsecure . xml / MethodReturnsInternalArray " > <nl> - < properties > <nl> - < ! - - It ' s not important when array is empty - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocNodeImpl ' ] " / > <nl> - < / properties > <nl> - < / rule > <nl> < rule ref = " rulesets / java / typeresolution . xml " / > <nl> < rule ref = " rulesets / java / unnecessary . xml " / > <nl> - < rule ref = " rulesets / java / unusedcode . xml " / > <nl> <nl> < / ruleset >

TEST DIFF:
diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words 
 index 829e33c . . cdf7719 100644 
 - - - a / . ci / jsoref - spellchecker / whitelist . words 
 + + + b / . ci / jsoref - spellchecker / whitelist . words 
 @ @ - 103 , 6 + 103 , 7 @ @ bbb 
 BBBB 
 bc 
 BCA 
 + bcff 
 BClass 
 bdc 
 bdo 
 @ @ - 278 , 6 + 279 , 7 @ @ DDDD 
 Ddry 
 declarationorder 
 DECOMPRESSOR 
 + ded 
 defau 
 defaultcasepresent 
 defaultcomeslast

NEAREST DIFF:
diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 9868ed2 . . 5cf62b6 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 7 , 6 + 7 , 35 @ @ 
 < description > 
 PMD common ruleset for Checkstyle main / test sourcesets 
 < / description > 
 + 
 + < rule ref = " category / java / bestpractices . xml " > 
 + < ! - - We do not care about this minor overhead , we are not Android application and we do not 
 + want to change visibility of methods . Package - private visibility should be avoid almost 
 + always . - - > 
 + < exclude name = " AccessorMethodGeneration " / > 
 + < ! - - The PMD mistakes the AbstractViolationReporter : : log ( ) as a debug log . - - > 
 + < exclude name = " GuardLogStatement " / > 
 + < / rule > 
 + < rule ref = " category / java / bestpractices . xml / AvoidPrintStackTrace " > 
 + < properties > 
 + < ! - - It is ok to use print stack trace in CLI class . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' ] " / > 
 + < / properties > 
 + < / rule > 
 + < rule ref = " category / java / bestpractices . xml / JUnitAssertionsShouldIncludeMessage " > 
 + < properties > 
 + < ! - - The PMD check accepts only a string constant as the assert message . 
 + This check uses a method call . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocCatchCheck ' ] / / MethodDeclaration [ @ Name = ' visitJavadocToken ' ] " / > 
 + < / properties > 
 + < / rule > 
 + < rule ref = " category / java / bestpractices . xml / SystemPrintln " > 
 + < properties > 
 + < ! - - it is ok to use println in CLI class . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' ] " / > 
 + < / properties > 
 + < / rule > 
 + 
 < rule ref = " category / java / errorprone . xml " > 
 < ! - - That rule is not practical , no options to allow some magic numbers , 
 we will use our implementation . - - > 
 @ @ - 285 , 19 + 314 , 6 @ @ 
 
 < rule ref = " rulesets / java / imports . xml " / > 
 
 - < rule ref = " rulesets / java / logging - java . xml / SystemPrintln " > 
 - < properties > 
 - < ! - - it is ok to use println in CLI class - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' or @ Image = ' JavadocPropertiesGenerator ' ] " / > 
 - < / properties > 
 - < / rule > 
 - < rule ref = " rulesets / java / logging - java . xml / AvoidPrintStackTrace " > 
 - < properties > 
 - < ! - - it is ok to use print stack trace in CLI class - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' or @ Image = ' JavadocPropertiesGenerator ' ] " / > 
 - < / properties > 
 - < / rule > 
 - 
 < rule ref = " rulesets / java / migrating . xml " / > 
 
 < rule ref = " rulesets / java / naming . xml " > 
 @ @ - 379 , 14 + 395 , 7 @ @ 
 < property name = " skipAnnotations " value = " true " / > 
 < / properties > 
 < / rule > 
 - < rule ref = " rulesets / java / sunsecure . xml / MethodReturnsInternalArray " > 
 - < properties > 
 - < ! - - It ' s not important when array is empty - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocNodeImpl ' ] " / > 
 - < / properties > 
 - < / rule > 
 < rule ref = " rulesets / java / typeresolution . xml " / > 
 < rule ref = " rulesets / java / unnecessary . xml " / > 
 - < rule ref = " rulesets / java / unusedcode . xml " / > 
 
 < / ruleset >
