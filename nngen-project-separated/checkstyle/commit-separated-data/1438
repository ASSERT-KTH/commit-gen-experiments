BLEU SCORE: 0.05816635421147516

TEST MSG: Issue # 2639 : adjust AbbreviationAsWordInName in checkstyle _ checks . xml to catch unexpected abbreviations
GENERATED MSG: Issue # 2080 : Fix typos in code

TEST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 51f4ea0 . . 921eea3 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 317 , 7 + 317 , 11 @ @ <nl> < module name = " RedundantModifier " / > <nl> <nl> < ! - - Naming Conventions - - > <nl> - < module name = " AbbreviationAsWordInName " / > <nl> + < module name = " AbbreviationAsWordInName " > <nl> + < property name = " ignoreFinal " value = " false " / > <nl> + < property name = " allowedAbbreviationLength " value = " 1 " / > <nl> + < property name = " allowedAbbreviations " value = " XML , URL , URI , AST , CPP , RTE , RE , ID , CSV " / > <nl> + < / module > <nl> < module name = " AbstractClassName " / > <nl> < module name = " ClassTypeParameterName " / > <nl> < module name = " ConstantName " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> index cf38f70 . . fb0c798 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> @ @ - 268 , 12 + 268 , 12 @ @ public final class TreeWalker <nl> <nl> / * * <nl> * Register a check for a specified token id . <nl> - * @ param tokenID the id of the token <nl> + * @ param tokenId the id of the token <nl> * @ param check the check to register <nl> * @ throws CheckstyleException if Check is misconfigured <nl> * / <nl> - private void registerCheck ( int tokenID , Check check ) throws CheckstyleException { <nl> - registerCheck ( TokenUtils . getTokenName ( tokenID ) , check ) ; <nl> + private void registerCheck ( int tokenId , Check check ) throws CheckstyleException { <nl> + registerCheck ( TokenUtils . getTokenName ( tokenId ) , check ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java <nl> index ef9cfb3 . . 7df11c8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java <nl> @ @ - 107 , 10 + 107 , 10 @ @ public abstract class AbstractLoader <nl> publicIdToResourceNameMap . get ( publicId ) ; <nl> final ClassLoader loader = <nl> getClass ( ) . getClassLoader ( ) ; <nl> - final InputStream dtdIS = <nl> + final InputStream dtdIs = <nl> loader . getResourceAsStream ( dtdResourceName ) ; <nl> <nl> - return new InputSource ( dtdIS ) ; <nl> + return new InputSource ( dtdIs ) ; <nl> } <nl> return super . resolveEntity ( publicId , systemId ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> index f1338db . . 67272f5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> @ @ - 296 , 7 + 296 , 7 @ @ public final class LocalizedMessage <nl> . get ( bundleName ) ; <nl> if ( resourceBundle = = null ) { <nl> resourceBundle = ResourceBundle . getBundle ( bundleName , sLocale , <nl> - sourceClass . getClassLoader ( ) , new UTF8Control ( ) ) ; <nl> + sourceClass . getClassLoader ( ) , new Utf8Control ( ) ) ; <nl> BUNDLE _ CACHE . put ( bundleName , resourceBundle ) ; <nl> } <nl> return resourceBundle ; <nl> @ @ - 392 , 7 + 392 , 7 @ @ public final class LocalizedMessage <nl> * <nl> * @ author < a href = " mailto : nesterenko - aleksey @ list . ru " > Aleksey Nesterenko < / a > <nl> * / <nl> - protected static class UTF8Control extends Control { <nl> + protected static class Utf8Control extends Control { <nl> @ Override <nl> public ResourceBundle newBundle ( String aBaseName , Locale aLocale , String aFormat , <nl> ClassLoader aLoader , boolean aReload ) throws IOException { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> index c772151 . . 0805d06 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> @ @ - 391 , 7 + 391 , 7 @ @ public class TranslationCheck <nl> } <nl> } <nl> catch ( final IOException e ) { <nl> - logIOException ( e , file ) ; <nl> + logIoException ( e , file ) ; <nl> } <nl> finally { <nl> Closeables . closeQuietly ( inStream ) ; <nl> @ @ - 404 , 7 + 404 , 7 @ @ public class TranslationCheck <nl> * @ param ex the exception that occurred <nl> * @ param file the file that could not be processed <nl> * / <nl> - private void logIOException ( IOException ex , File file ) { <nl> + private void logIoException ( IOException ex , File file ) { <nl> String [ ] args = null ; <nl> String key = " general . fileNotFound " ; <nl> if ( ! ( ex instanceof FileNotFoundException ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java <nl> index 8e3246b . . f397d6c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java <nl> @ @ - 78 , 10 + 78 , 10 @ @ public class HideUtilityClassConstructorCheck extends Check { <nl> <nl> / / figure out if class extends java . lang . object directly <nl> / / keep it simple for now and get a 99 % solution <nl> - final boolean extendsJLO = <nl> + final boolean extendsJlo = <nl> ast . findFirstToken ( TokenTypes . EXTENDS _ CLAUSE ) = = null ; <nl> <nl> - final boolean isUtilClass = extendsJLO & & hasMethodOrField <nl> + final boolean isUtilClass = extendsJlo & & hasMethodOrField <nl> & & ! hasNonStaticMethodOrField & & hasNonPrivateStaticMethodOrField ; <nl> <nl> if ( isUtilClass & & hasAccessibleCtor & & ! hasStaticModifier ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 1a4b9be . . 39fab45 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 889 , 16 + 889 , 16 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> final String documentedEx = tag . getFirstArg ( ) ; <nl> final Token token = new Token ( tag . getFirstArg ( ) , tag . getLineNo ( ) , tag <nl> . getColumnNo ( ) ) ; <nl> - final AbstractClassInfo documentedCI = createClassInfo ( token , <nl> + final AbstractClassInfo documentedClassInfo = createClassInfo ( token , <nl> getCurrentClassName ( ) ) ; <nl> final boolean found = foundThrows . contains ( documentedEx ) <nl> - | | isInThrows ( throwsList , documentedCI , foundThrows ) ; <nl> + | | isInThrows ( throwsList , documentedClassInfo , foundThrows ) ; <nl> <nl> / / Handle extra JavadocTag . <nl> if ( ! found ) { <nl> boolean reqd = true ; <nl> if ( allowUndeclaredRTE ) { <nl> - reqd = ! isUnchecked ( documentedCI . getClazz ( ) ) ; <nl> + reqd = ! isUnchecked ( documentedClassInfo . getClazz ( ) ) ; <nl> } <nl> <nl> if ( reqd & & validateThrows ) { <nl> @ @ - 927 , 12 + 927 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * Verifies that documented exception is in throws . <nl> * <nl> * @ param throwsList list of throws <nl> - * @ param documentedCI documented exception class info <nl> + * @ param documentedClassInfo documented exception class info <nl> * @ param foundThrows previously found throws <nl> * @ return true if documented exception is in throws . <nl> * / <nl> private boolean isInThrows ( List < ExceptionInfo > throwsList , <nl> - AbstractClassInfo documentedCI , Set < String > foundThrows ) { <nl> + AbstractClassInfo documentedClassInfo , Set < String > foundThrows ) { <nl> boolean found = false ; <nl> ExceptionInfo foundException = null ; <nl> <nl> @ @ - 942 , 7 + 942 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> final ExceptionInfo exceptionInfo = throwIt . next ( ) ; <nl> <nl> if ( exceptionInfo . getName ( ) . getText ( ) . equals ( <nl> - documentedCI . getName ( ) . getText ( ) ) ) { <nl> + documentedClassInfo . getName ( ) . getText ( ) ) ) { <nl> found = true ; <nl> foundException = exceptionInfo ; <nl> } <nl> @ @ - 953 , 18 + 953 , 18 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> while ( ! found & & exceptionInfoIt . hasNext ( ) ) { <nl> final ExceptionInfo exceptionInfo = exceptionInfoIt . next ( ) ; <nl> <nl> - if ( documentedCI . getClazz ( ) = = exceptionInfo . getClazz ( ) ) { <nl> + if ( documentedClassInfo . getClazz ( ) = = exceptionInfo . getClazz ( ) ) { <nl> found = true ; <nl> foundException = exceptionInfo ; <nl> } <nl> else if ( allowThrowsTagsForSubclasses ) { <nl> - found = isSubclass ( documentedCI . getClazz ( ) , exceptionInfo . getClazz ( ) ) ; <nl> + found = isSubclass ( documentedClassInfo . getClazz ( ) , exceptionInfo . getClazz ( ) ) ; <nl> } <nl> } <nl> <nl> if ( foundException ! = null ) { <nl> foundException . setFound ( ) ; <nl> - foundThrows . add ( documentedCI . getName ( ) . getText ( ) ) ; <nl> + foundThrows . add ( documentedClassInfo . getName ( ) . getText ( ) ) ; <nl> } <nl> <nl> return found ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java <nl> index fd91341 . . 9e2a309 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java <nl> @ @ - 113 , 7 + 113 , 7 @ @ public class ModifierOrderCheck <nl> } <nl> <nl> if ( ! mods . isEmpty ( ) ) { <nl> - final DetailAST error = checkOrderSuggestedByJLS ( mods ) ; <nl> + final DetailAST error = checkOrderSuggestedByJls ( mods ) ; <nl> if ( error ! = null ) { <nl> if ( error . getType ( ) = = TokenTypes . ANNOTATION ) { <nl> log ( error . getLineNo ( ) , error . getColumnNo ( ) , <nl> @ @ - 138 , 7 + 138 , 7 @ @ public class ModifierOrderCheck <nl> * @ return null if the order is correct , otherwise returns the offending <nl> * modifier AST . <nl> * / <nl> - private static DetailAST checkOrderSuggestedByJLS ( List < DetailAST > modifiers ) { <nl> + private static DetailAST checkOrderSuggestedByJls ( List < DetailAST > modifiers ) { <nl> final Iterator < DetailAST > iterator = modifiers . iterator ( ) ; <nl> <nl> / / Speed past all initial annotations <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 2256197 . . 3a60742 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 433 , 7 + 433 , 7 @ @ public class MainTest { <nl> } <nl> <nl> @ Test <nl> - public void testLoadPropertiesIOException ( ) throws Exception { <nl> + public void testLoadPropertiesIoException ( ) throws Exception { <nl> final Class < ? > [ ] param = new Class < ? > [ 1 ] ; <nl> param [ 0 ] = File . class ; <nl> final Method method = Main . class . getDeclaredMethod ( " loadProperties " , param ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> index 8fe03d5 . . fd6eba2 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class LocalizedMessageTest { <nl> <nl> @ Test <nl> public void testBundleReloadUrlNull ( ) throws IOException { <nl> - final LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; <nl> + final LocalizedMessage . Utf8Control control = new LocalizedMessage . Utf8Control ( ) ; <nl> control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> Locale . ENGLISH , " java . class " , <nl> Thread . currentThread ( ) . getContextClassLoader ( ) , true ) ; <nl> @ @ - 83 , 7 + 83 , 7 @ @ public class LocalizedMessageTest { <nl> " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; <nl> when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; <nl> <nl> - final LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; <nl> + final LocalizedMessage . Utf8Control control = new LocalizedMessage . Utf8Control ( ) ; <nl> control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> Locale . ENGLISH , " java . class " , <nl> classloader , true ) ; <nl> @ @ - 99 , 7 + 99 , 7 @ @ public class LocalizedMessageTest { <nl> final URL url = getMockUrl ( null ) ; <nl> when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; <nl> <nl> - final LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; <nl> + final LocalizedMessage . Utf8Control control = new LocalizedMessage . Utf8Control ( ) ; <nl> control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> Locale . ENGLISH , " java . class " , <nl> classloader , true ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> index 3c09688 . . 83fd300 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> @ @ - 99 , 7 + 99 , 7 @ @ public class TranslationCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testLogIOExceptionFileNotFound ( ) throws Exception { <nl> + public void testLogIoExceptionFileNotFound ( ) throws Exception { <nl> / / I can ' t put wrong file here . Checkstyle fails before check started . <nl> / / I saw some usage of file or handling of wrong file in Checker , or somewhere <nl> / / in checks running part . So I had to do it with reflection to improve coverage . <nl> @ @ - 116 , 7 + 116 , 7 @ @ public class TranslationCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testLogIOException ( ) throws Exception { <nl> + public void testLogIoException ( ) throws Exception { <nl> / / I can ' t put wrong file here . Checkstyle fails before check started . <nl> / / I saw some usage of file or handling of wrong file in Checker , or somewhere <nl> / / in checks running part . So I had to do it with reflection to improve coverage . <nl> @ @ - 125 , 11 + 125 , 11 @ @ public class TranslationCheckTest <nl> check . configure ( checkConfig ) ; <nl> check . setMessageDispatcher ( createChecker ( checkConfig ) ) ; <nl> <nl> - final Method logIOException = check . getClass ( ) . getDeclaredMethod ( " logIOException " , <nl> + final Method logIoException = check . getClass ( ) . getDeclaredMethod ( " logIoException " , <nl> IOException . class , <nl> File . class ) ; <nl> - logIOException . setAccessible ( true ) ; <nl> - logIOException . invoke ( check , new IOException ( " test exception " ) , new File ( " " ) ) ; <nl> + logIoException . setAccessible ( true ) ; <nl> + logIoException . invoke ( check , new IOException ( " test exception " ) , new File ( " " ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> index ceca043 . . e1ba47e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> @ @ - 107 , 7 + 107 , 7 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { <nl> * Tests IO exception , that can occur during reading of properties file . <nl> * / <nl> @ Test <nl> - public void testIOException ( ) throws Exception { <nl> + public void testIoException ( ) throws Exception { <nl> final UniquePropertiesCheck check = new UniquePropertiesCheck ( ) ; <nl> check . configure ( checkConfig ) ; <nl> final String fileName = <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> index 036432b . . 23ad692 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> @ @ - 81 , 7 + 81 , 7 @ @ public class LeftCurlyCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testNL ( ) throws Exception { <nl> + public void testNl ( ) throws Exception { <nl> checkConfig . addAttribute ( " option " , LeftCurlyOption . NL . toString ( ) ) ; <nl> final String [ ] expected = { <nl> " 27 : 14 : " + getCheckMessage ( MSG _ KEY _ LINE _ NEW , " { " , 14 ) , <nl> @ @ - 226 , 7 + 226 , 7 @ @ public class LeftCurlyCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testNLWithAnnotations ( ) throws Exception { <nl> + public void testNlWithAnnotations ( ) throws Exception { <nl> checkConfig . addAttribute ( " option " , LeftCurlyOption . NL . toString ( ) ) ; <nl> final String [ ] expected = { <nl> " 35 : 34 : " + getCheckMessage ( MSG _ KEY _ LINE _ NEW , " { " , 34 ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> index fc0b4b2 . . c49dfef 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> @ @ - 156 , 7 + 156 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testNPE ( ) throws Exception { <nl> + public void testNullPointerException ( ) throws Exception { <nl> checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE . toString ( ) ) ; <nl> checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , METHOD _ DEF , CTOR _ DEF , LITERAL _ FOR , " <nl> + " LITERAL _ WHILE , LITERAL _ DO , STATIC _ INIT , INSTANCE _ INIT " ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheckTest . java <nl> index 15c7044 . . 5225b75 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheckTest . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class JavadocTagContinuationIndentationCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testFP ( ) throws Exception { <nl> + public void testFp ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( JavadocTagContinuationIndentationCheck . class ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheckTest . java <nl> index 10cb79d . . acd5a6d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheckTest . java <nl> @ @ - 69 , 7 + 69 , 7 @ @ public class BooleanExpressionComplexityCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testNPE ( ) throws Exception { <nl> + public void testNullPointerException ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( BooleanExpressionComplexityCheck . class ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java <nl> index 3c95f0a . . c75c8c4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java <nl> @ @ - 308 , 7 + 308 , 7 @ @ public class AbbreviationAsWordInNameCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testNPE ( ) throws Exception { <nl> + public void testNullPointerException ( ) throws Exception { <nl> <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( AbbreviationAsWordInNameCheck . class ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java <nl> index 883fd7b . . 99848a1 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java <nl> @ @ - 151 , 7 + 151 , 7 @ @ public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { <nl> } ; <nl> <nl> final File file = temporaryFolder . newFile ( ) ; <nl> - Files . write ( makeLargeXYString ( ) , file , Charsets . UTF _ 8 ) ; <nl> + Files . write ( makeLargeXyString ( ) , file , Charsets . UTF _ 8 ) ; <nl> <nl> verify ( checkConfig , file . getPath ( ) , expected ) ; <nl> } <nl> @ @ - 171 , 7 + 171 , 7 @ @ public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { <nl> verify ( checkConfig , file . getPath ( ) , expected ) ; <nl> } <nl> <nl> - private static CharSequence makeLargeXYString ( ) { <nl> + private static CharSequence makeLargeXyString ( ) { <nl> / / now needs 10 ' 000 or 100 ' 000 , as just 1000 is no longer enough today to provoke the <nl> / / StackOverflowError <nl> final int size = 100000 ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / FileLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / FileLengthCheckTest . java <nl> index 5ac015b . . 27a1882 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / FileLengthCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / FileLengthCheckTest . java <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class FileLengthCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testOK ( ) throws Exception { <nl> + public void testOk ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( FileLengthCheck . class ) ; <nl> checkConfig . addAttribute ( " max " , " 2000 " ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java <nl> index 295ff1f . . 6bdd6c2 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java <nl> @ @ - 62 , 7 + 62 , 7 @ @ public class OperatorWrapCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testOpWrapEOL ( ) <nl> + public void testOpWrapEol ( ) <nl> throws Exception { <nl> checkConfig . addAttribute ( " option " , WrapOption . EOL . toString ( ) ) ; <nl> final String [ ] expected = { <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class OperatorWrapCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testAssignEOL ( ) <nl> + public void testAssignEol ( ) <nl> throws Exception { <nl> checkConfig . addAttribute ( " tokens " , " ASSIGN " ) ; <nl> checkConfig . addAttribute ( " option " , WrapOption . EOL . toString ( ) ) ;
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index ae4ec79 . . 089ed64 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 346 , 6 + 346 , 7 @ @ <nl> < module name = " SingleLineJavadoc " / > <nl> < module name = " JavadocTagContinuationIndentation " / > <nl> < module name = " JavadocParagraph " / > <nl> + < module name = " WriteTag " / > <nl> <nl> < ! - - <nl> All Checks bellow are our futute plan to enforce over our code . <nl> @ @ - 356 , 9 + 357 , 6 @ @ <nl> < module name = " SummaryJavadoc " > <nl> < property name = " severity " value = " ignore " / > <nl> < / module > <nl> - < module name = " WriteTag " > <nl> - < property name = " severity " value = " ignore " / > <nl> - < / module > <nl> <nl> < module name = " MissingCtor " > <nl> < ! - - <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 2c7cee0 . . cd8d97c 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 38 , 6 + 38 , 7 @ @ <nl> < suppress checks = " MethodCount " files = " [ \ \ / ] IndentationCheckTest . java $ " / > <nl> < suppress checks = " MethodCount " files = " [ \ \ / ] MainTest . java $ " / > <nl> < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > <nl> + < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> <nl> < ! - - suppressions to remove over time - - > <nl> < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java <nl> index b6055a3 . . df92965 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java <nl> @ @ - 248 , 6 + 248 , 9 @ @ class FileDrop { <nl> void filesDropped ( File . . . files ) ; <nl> } <nl> <nl> + / * * <nl> + * Listener and handler for file drop target events . <nl> + * / <nl> private class FileDropTargetListener extends DropTargetAdapter { <nl> / * * Target component to drop to . * / <nl> private final Component component ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> index 8e76bdb . . 224933c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> @ @ - 259 , 6 + 259 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> } <nl> <nl> + / * * <nl> + * Filter for Java files . <nl> + * / <nl> private static class JavaFileFilter extends FileFilter { <nl> @ Override <nl> public boolean accept ( File file ) { <nl> @ @ - 274 , 6 + 277 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> } <nl> <nl> + / * * <nl> + * Handler for file selection action events . <nl> + * / <nl> private class FileSelectionAction extends AbstractAction { <nl> / * * <nl> * Serial ID . <nl> @ @ - 300 , 6 + 306 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> } <nl> <nl> + / * * <nl> + * Handler for reload action events . <nl> + * / <nl> private class ReloadAction extends AbstractAction { <nl> / * * <nl> * Serial UID . <nl> @ @ - 320 , 6 + 329 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> } <nl> <nl> + / * * <nl> + * Listener and handler for file dropped events . <nl> + * / <nl> private class FileDropListener implements FileDrop . Listener { <nl> / * * Scroll pane . * / <nl> private final JScrollPane scrollPane ;

TEST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 51f4ea0 . . 921eea3 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 317 , 7 + 317 , 11 @ @ 
 < module name = " RedundantModifier " / > 
 
 < ! - - Naming Conventions - - > 
 - < module name = " AbbreviationAsWordInName " / > 
 + < module name = " AbbreviationAsWordInName " > 
 + < property name = " ignoreFinal " value = " false " / > 
 + < property name = " allowedAbbreviationLength " value = " 1 " / > 
 + < property name = " allowedAbbreviations " value = " XML , URL , URI , AST , CPP , RTE , RE , ID , CSV " / > 
 + < / module > 
 < module name = " AbstractClassName " / > 
 < module name = " ClassTypeParameterName " / > 
 < module name = " ConstantName " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 index cf38f70 . . fb0c798 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 @ @ - 268 , 12 + 268 , 12 @ @ public final class TreeWalker 
 
 / * * 
 * Register a check for a specified token id . 
 - * @ param tokenID the id of the token 
 + * @ param tokenId the id of the token 
 * @ param check the check to register 
 * @ throws CheckstyleException if Check is misconfigured 
 * / 
 - private void registerCheck ( int tokenID , Check check ) throws CheckstyleException { 
 - registerCheck ( TokenUtils . getTokenName ( tokenID ) , check ) ; 
 + private void registerCheck ( int tokenId , Check check ) throws CheckstyleException { 
 + registerCheck ( TokenUtils . getTokenName ( tokenId ) , check ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java 
 index ef9cfb3 . . 7df11c8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java 
 @ @ - 107 , 10 + 107 , 10 @ @ public abstract class AbstractLoader 
 publicIdToResourceNameMap . get ( publicId ) ; 
 final ClassLoader loader = 
 getClass ( ) . getClassLoader ( ) ; 
 - final InputStream dtdIS = 
 + final InputStream dtdIs = 
 loader . getResourceAsStream ( dtdResourceName ) ; 
 
 - return new InputSource ( dtdIS ) ; 
 + return new InputSource ( dtdIs ) ; 
 } 
 return super . resolveEntity ( publicId , systemId ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 index f1338db . . 67272f5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 @ @ - 296 , 7 + 296 , 7 @ @ public final class LocalizedMessage 
 . get ( bundleName ) ; 
 if ( resourceBundle = = null ) { 
 resourceBundle = ResourceBundle . getBundle ( bundleName , sLocale , 
 - sourceClass . getClassLoader ( ) , new UTF8Control ( ) ) ; 
 + sourceClass . getClassLoader ( ) , new Utf8Control ( ) ) ; 
 BUNDLE _ CACHE . put ( bundleName , resourceBundle ) ; 
 } 
 return resourceBundle ; 
 @ @ - 392 , 7 + 392 , 7 @ @ public final class LocalizedMessage 
 * 
 * @ author < a href = " mailto : nesterenko - aleksey @ list . ru " > Aleksey Nesterenko < / a > 
 * / 
 - protected static class UTF8Control extends Control { 
 + protected static class Utf8Control extends Control { 
 @ Override 
 public ResourceBundle newBundle ( String aBaseName , Locale aLocale , String aFormat , 
 ClassLoader aLoader , boolean aReload ) throws IOException { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 index c772151 . . 0805d06 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 @ @ - 391 , 7 + 391 , 7 @ @ public class TranslationCheck 
 } 
 } 
 catch ( final IOException e ) { 
 - logIOException ( e , file ) ; 
 + logIoException ( e , file ) ; 
 } 
 finally { 
 Closeables . closeQuietly ( inStream ) ; 
 @ @ - 404 , 7 + 404 , 7 @ @ public class TranslationCheck 
 * @ param ex the exception that occurred 
 * @ param file the file that could not be processed 
 * / 
 - private void logIOException ( IOException ex , File file ) { 
 + private void logIoException ( IOException ex , File file ) { 
 String [ ] args = null ; 
 String key = " general . fileNotFound " ; 
 if ( ! ( ex instanceof FileNotFoundException ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java 
 index 8e3246b . . f397d6c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java 
 @ @ - 78 , 10 + 78 , 10 @ @ public class HideUtilityClassConstructorCheck extends Check { 
 
 / / figure out if class extends java . lang . object directly 
 / / keep it simple for now and get a 99 % solution 
 - final boolean extendsJLO = 
 + final boolean extendsJlo = 
 ast . findFirstToken ( TokenTypes . EXTENDS _ CLAUSE ) = = null ; 
 
 - final boolean isUtilClass = extendsJLO & & hasMethodOrField 
 + final boolean isUtilClass = extendsJlo & & hasMethodOrField 
 & & ! hasNonStaticMethodOrField & & hasNonPrivateStaticMethodOrField ; 
 
 if ( isUtilClass & & hasAccessibleCtor & & ! hasStaticModifier ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 1a4b9be . . 39fab45 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 889 , 16 + 889 , 16 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 final String documentedEx = tag . getFirstArg ( ) ; 
 final Token token = new Token ( tag . getFirstArg ( ) , tag . getLineNo ( ) , tag 
 . getColumnNo ( ) ) ; 
 - final AbstractClassInfo documentedCI = createClassInfo ( token , 
 + final AbstractClassInfo documentedClassInfo = createClassInfo ( token , 
 getCurrentClassName ( ) ) ; 
 final boolean found = foundThrows . contains ( documentedEx ) 
 - | | isInThrows ( throwsList , documentedCI , foundThrows ) ; 
 + | | isInThrows ( throwsList , documentedClassInfo , foundThrows ) ; 
 
 / / Handle extra JavadocTag . 
 if ( ! found ) { 
 boolean reqd = true ; 
 if ( allowUndeclaredRTE ) { 
 - reqd = ! isUnchecked ( documentedCI . getClazz ( ) ) ; 
 + reqd = ! isUnchecked ( documentedClassInfo . getClazz ( ) ) ; 
 } 
 
 if ( reqd & & validateThrows ) { 
 @ @ - 927 , 12 + 927 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * Verifies that documented exception is in throws . 
 * 
 * @ param throwsList list of throws 
 - * @ param documentedCI documented exception class info 
 + * @ param documentedClassInfo documented exception class info 
 * @ param foundThrows previously found throws 
 * @ return true if documented exception is in throws . 
 * / 
 private boolean isInThrows ( List < ExceptionInfo > throwsList , 
 - AbstractClassInfo documentedCI , Set < String > foundThrows ) { 
 + AbstractClassInfo documentedClassInfo , Set < String > foundThrows ) { 
 boolean found = false ; 
 ExceptionInfo foundException = null ; 
 
 @ @ - 942 , 7 + 942 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 final ExceptionInfo exceptionInfo = throwIt . next ( ) ; 
 
 if ( exceptionInfo . getName ( ) . getText ( ) . equals ( 
 - documentedCI . getName ( ) . getText ( ) ) ) { 
 + documentedClassInfo . getName ( ) . getText ( ) ) ) { 
 found = true ; 
 foundException = exceptionInfo ; 
 } 
 @ @ - 953 , 18 + 953 , 18 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 while ( ! found & & exceptionInfoIt . hasNext ( ) ) { 
 final ExceptionInfo exceptionInfo = exceptionInfoIt . next ( ) ; 
 
 - if ( documentedCI . getClazz ( ) = = exceptionInfo . getClazz ( ) ) { 
 + if ( documentedClassInfo . getClazz ( ) = = exceptionInfo . getClazz ( ) ) { 
 found = true ; 
 foundException = exceptionInfo ; 
 } 
 else if ( allowThrowsTagsForSubclasses ) { 
 - found = isSubclass ( documentedCI . getClazz ( ) , exceptionInfo . getClazz ( ) ) ; 
 + found = isSubclass ( documentedClassInfo . getClazz ( ) , exceptionInfo . getClazz ( ) ) ; 
 } 
 } 
 
 if ( foundException ! = null ) { 
 foundException . setFound ( ) ; 
 - foundThrows . add ( documentedCI . getName ( ) . getText ( ) ) ; 
 + foundThrows . add ( documentedClassInfo . getName ( ) . getText ( ) ) ; 
 } 
 
 return found ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java 
 index fd91341 . . 9e2a309 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java 
 @ @ - 113 , 7 + 113 , 7 @ @ public class ModifierOrderCheck 
 } 
 
 if ( ! mods . isEmpty ( ) ) { 
 - final DetailAST error = checkOrderSuggestedByJLS ( mods ) ; 
 + final DetailAST error = checkOrderSuggestedByJls ( mods ) ; 
 if ( error ! = null ) { 
 if ( error . getType ( ) = = TokenTypes . ANNOTATION ) { 
 log ( error . getLineNo ( ) , error . getColumnNo ( ) , 
 @ @ - 138 , 7 + 138 , 7 @ @ public class ModifierOrderCheck 
 * @ return null if the order is correct , otherwise returns the offending 
 * modifier AST . 
 * / 
 - private static DetailAST checkOrderSuggestedByJLS ( List < DetailAST > modifiers ) { 
 + private static DetailAST checkOrderSuggestedByJls ( List < DetailAST > modifiers ) { 
 final Iterator < DetailAST > iterator = modifiers . iterator ( ) ; 
 
 / / Speed past all initial annotations 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 2256197 . . 3a60742 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 433 , 7 + 433 , 7 @ @ public class MainTest { 
 } 
 
 @ Test 
 - public void testLoadPropertiesIOException ( ) throws Exception { 
 + public void testLoadPropertiesIoException ( ) throws Exception { 
 final Class < ? > [ ] param = new Class < ? > [ 1 ] ; 
 param [ 0 ] = File . class ; 
 final Method method = Main . class . getDeclaredMethod ( " loadProperties " , param ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 index 8fe03d5 . . fd6eba2 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 @ @ - 64 , 7 + 64 , 7 @ @ public class LocalizedMessageTest { 
 
 @ Test 
 public void testBundleReloadUrlNull ( ) throws IOException { 
 - final LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; 
 + final LocalizedMessage . Utf8Control control = new LocalizedMessage . Utf8Control ( ) ; 
 control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 Locale . ENGLISH , " java . class " , 
 Thread . currentThread ( ) . getContextClassLoader ( ) , true ) ; 
 @ @ - 83 , 7 + 83 , 7 @ @ public class LocalizedMessageTest { 
 " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; 
 when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; 
 
 - final LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; 
 + final LocalizedMessage . Utf8Control control = new LocalizedMessage . Utf8Control ( ) ; 
 control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 Locale . ENGLISH , " java . class " , 
 classloader , true ) ; 
 @ @ - 99 , 7 + 99 , 7 @ @ public class LocalizedMessageTest { 
 final URL url = getMockUrl ( null ) ; 
 when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; 
 
 - final LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; 
 + final LocalizedMessage . Utf8Control control = new LocalizedMessage . Utf8Control ( ) ; 
 control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 Locale . ENGLISH , " java . class " , 
 classloader , true ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 index 3c09688 . . 83fd300 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 @ @ - 99 , 7 + 99 , 7 @ @ public class TranslationCheckTest 
 } 
 
 @ Test 
 - public void testLogIOExceptionFileNotFound ( ) throws Exception { 
 + public void testLogIoExceptionFileNotFound ( ) throws Exception { 
 / / I can ' t put wrong file here . Checkstyle fails before check started . 
 / / I saw some usage of file or handling of wrong file in Checker , or somewhere 
 / / in checks running part . So I had to do it with reflection to improve coverage . 
 @ @ - 116 , 7 + 116 , 7 @ @ public class TranslationCheckTest 
 } 
 
 @ Test 
 - public void testLogIOException ( ) throws Exception { 
 + public void testLogIoException ( ) throws Exception { 
 / / I can ' t put wrong file here . Checkstyle fails before check started . 
 / / I saw some usage of file or handling of wrong file in Checker , or somewhere 
 / / in checks running part . So I had to do it with reflection to improve coverage . 
 @ @ - 125 , 11 + 125 , 11 @ @ public class TranslationCheckTest 
 check . configure ( checkConfig ) ; 
 check . setMessageDispatcher ( createChecker ( checkConfig ) ) ; 
 
 - final Method logIOException = check . getClass ( ) . getDeclaredMethod ( " logIOException " , 
 + final Method logIoException = check . getClass ( ) . getDeclaredMethod ( " logIoException " , 
 IOException . class , 
 File . class ) ; 
 - logIOException . setAccessible ( true ) ; 
 - logIOException . invoke ( check , new IOException ( " test exception " ) , new File ( " " ) ) ; 
 + logIoException . setAccessible ( true ) ; 
 + logIoException . invoke ( check , new IOException ( " test exception " ) , new File ( " " ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 index ceca043 . . e1ba47e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 @ @ - 107 , 7 + 107 , 7 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { 
 * Tests IO exception , that can occur during reading of properties file . 
 * / 
 @ Test 
 - public void testIOException ( ) throws Exception { 
 + public void testIoException ( ) throws Exception { 
 final UniquePropertiesCheck check = new UniquePropertiesCheck ( ) ; 
 check . configure ( checkConfig ) ; 
 final String fileName = 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 index 036432b . . 23ad692 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 @ @ - 81 , 7 + 81 , 7 @ @ public class LeftCurlyCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testNL ( ) throws Exception { 
 + public void testNl ( ) throws Exception { 
 checkConfig . addAttribute ( " option " , LeftCurlyOption . NL . toString ( ) ) ; 
 final String [ ] expected = { 
 " 27 : 14 : " + getCheckMessage ( MSG _ KEY _ LINE _ NEW , " { " , 14 ) , 
 @ @ - 226 , 7 + 226 , 7 @ @ public class LeftCurlyCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testNLWithAnnotations ( ) throws Exception { 
 + public void testNlWithAnnotations ( ) throws Exception { 
 checkConfig . addAttribute ( " option " , LeftCurlyOption . NL . toString ( ) ) ; 
 final String [ ] expected = { 
 " 35 : 34 : " + getCheckMessage ( MSG _ KEY _ LINE _ NEW , " { " , 34 ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 index fc0b4b2 . . c49dfef 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 @ @ - 156 , 7 + 156 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testNPE ( ) throws Exception { 
 + public void testNullPointerException ( ) throws Exception { 
 checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE . toString ( ) ) ; 
 checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , METHOD _ DEF , CTOR _ DEF , LITERAL _ FOR , " 
 + " LITERAL _ WHILE , LITERAL _ DO , STATIC _ INIT , INSTANCE _ INIT " ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheckTest . java 
 index 15c7044 . . 5225b75 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheckTest . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class JavadocTagContinuationIndentationCheckTest 
 } 
 
 @ Test 
 - public void testFP ( ) throws Exception { 
 + public void testFp ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( JavadocTagContinuationIndentationCheck . class ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheckTest . java 
 index 10cb79d . . acd5a6d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheckTest . java 
 @ @ - 69 , 7 + 69 , 7 @ @ public class BooleanExpressionComplexityCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testNPE ( ) throws Exception { 
 + public void testNullPointerException ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( BooleanExpressionComplexityCheck . class ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java 
 index 3c95f0a . . c75c8c4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java 
 @ @ - 308 , 7 + 308 , 7 @ @ public class AbbreviationAsWordInNameCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testNPE ( ) throws Exception { 
 + public void testNullPointerException ( ) throws Exception { 
 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( AbbreviationAsWordInNameCheck . class ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java 
 index 883fd7b . . 99848a1 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java 
 @ @ - 151 , 7 + 151 , 7 @ @ public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { 
 } ; 
 
 final File file = temporaryFolder . newFile ( ) ; 
 - Files . write ( makeLargeXYString ( ) , file , Charsets . UTF _ 8 ) ; 
 + Files . write ( makeLargeXyString ( ) , file , Charsets . UTF _ 8 ) ; 
 
 verify ( checkConfig , file . getPath ( ) , expected ) ; 
 } 
 @ @ - 171 , 7 + 171 , 7 @ @ public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { 
 verify ( checkConfig , file . getPath ( ) , expected ) ; 
 } 
 
 - private static CharSequence makeLargeXYString ( ) { 
 + private static CharSequence makeLargeXyString ( ) { 
 / / now needs 10 ' 000 or 100 ' 000 , as just 1000 is no longer enough today to provoke the 
 / / StackOverflowError 
 final int size = 100000 ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / FileLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / FileLengthCheckTest . java 
 index 5ac015b . . 27a1882 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / FileLengthCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / FileLengthCheckTest . java 
 @ @ - 64 , 7 + 64 , 7 @ @ public class FileLengthCheckTest 
 } 
 
 @ Test 
 - public void testOK ( ) throws Exception { 
 + public void testOk ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( FileLengthCheck . class ) ; 
 checkConfig . addAttribute ( " max " , " 2000 " ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java 
 index 295ff1f . . 6bdd6c2 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java 
 @ @ - 62 , 7 + 62 , 7 @ @ public class OperatorWrapCheckTest 
 } 
 
 @ Test 
 - public void testOpWrapEOL ( ) 
 + public void testOpWrapEol ( ) 
 throws Exception { 
 checkConfig . addAttribute ( " option " , WrapOption . EOL . toString ( ) ) ; 
 final String [ ] expected = { 
 @ @ - 74 , 7 + 74 , 7 @ @ public class OperatorWrapCheckTest 
 } 
 
 @ Test 
 - public void testAssignEOL ( ) 
 + public void testAssignEol ( ) 
 throws Exception { 
 checkConfig . addAttribute ( " tokens " , " ASSIGN " ) ; 
 checkConfig . addAttribute ( " option " , WrapOption . EOL . toString ( ) ) ;

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index ae4ec79 . . 089ed64 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 346 , 6 + 346 , 7 @ @ 
 < module name = " SingleLineJavadoc " / > 
 < module name = " JavadocTagContinuationIndentation " / > 
 < module name = " JavadocParagraph " / > 
 + < module name = " WriteTag " / > 
 
 < ! - - 
 All Checks bellow are our futute plan to enforce over our code . 
 @ @ - 356 , 9 + 357 , 6 @ @ 
 < module name = " SummaryJavadoc " > 
 < property name = " severity " value = " ignore " / > 
 < / module > 
 - < module name = " WriteTag " > 
 - < property name = " severity " value = " ignore " / > 
 - < / module > 
 
 < module name = " MissingCtor " > 
 < ! - - 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 2c7cee0 . . cd8d97c 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 38 , 6 + 38 , 7 @ @ 
 < suppress checks = " MethodCount " files = " [ \ \ / ] IndentationCheckTest . java $ " / > 
 < suppress checks = " MethodCount " files = " [ \ \ / ] MainTest . java $ " / > 
 < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > 
 + < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 
 < ! - - suppressions to remove over time - - > 
 < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java 
 index b6055a3 . . df92965 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java 
 @ @ - 248 , 6 + 248 , 9 @ @ class FileDrop { 
 void filesDropped ( File . . . files ) ; 
 } 
 
 + / * * 
 + * Listener and handler for file drop target events . 
 + * / 
 private class FileDropTargetListener extends DropTargetAdapter { 
 / * * Target component to drop to . * / 
 private final Component component ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 index 8e76bdb . . 224933c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 @ @ - 259 , 6 + 259 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 } 
 
 + / * * 
 + * Filter for Java files . 
 + * / 
 private static class JavaFileFilter extends FileFilter { 
 @ Override 
 public boolean accept ( File file ) { 
 @ @ - 274 , 6 + 277 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 } 
 
 + / * * 
 + * Handler for file selection action events . 
 + * / 
 private class FileSelectionAction extends AbstractAction { 
 / * * 
 * Serial ID . 
 @ @ - 300 , 6 + 306 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 } 
 
 + / * * 
 + * Handler for reload action events . 
 + * / 
 private class ReloadAction extends AbstractAction { 
 / * * 
 * Serial UID . 
 @ @ - 320 , 6 + 329 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 } 
 
 + / * * 
 + * Listener and handler for file dropped events . 
 + * / 
 private class FileDropListener implements FileDrop . Listener { 
 / * * Scroll pane . * / 
 private final JScrollPane scrollPane ;
