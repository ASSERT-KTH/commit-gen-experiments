BLEU SCORE: 0.39121234471035043

TEST MSG: minor : convert test - spelling - unknown - words . sh to bash
GENERATED MSG: minor : make skipFetchRepo recheck ( in shell syntax ) true in test - spelling - unknown - words . sh

TEST DIFF (one line): diff - - git a / . ci / test - spelling - unknown - words . sh b / . ci / test - spelling - unknown - words . sh <nl> index 8b3c7ef . . 06bb4e3 100755 <nl> - - - a / . ci / test - spelling - unknown - words . sh <nl> + + + b / . ci / test - spelling - unknown - words . sh <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - # ! / bin / sh <nl> + # ! / bin / bash <nl> # This CI acceptance test is based on : <nl> # https : / / github . com / jsoref / spelling / blob / 04648bdc63723e5cdf5cbeaff2225a462807abc8 <nl> # It is conceptually ` f ` which runs ` w ` ( spelling - unknown - word - splitter )
NEAREST DIFF (one line): diff - - git a / config / pmd - test . xml b / config / pmd - test . xml <nl> index 1681946 . . ed0dc69 100644 <nl> - - - a / config / pmd - test . xml <nl> + + + b / config / pmd - test . xml <nl> @ @ - 77 , 28 + 77 , 30 @ @ <nl> < ! - - pmd cannot find assert if it is located in private method of this class called from the test <nl> method or method of another class - - > <nl> < properties > <nl> - < ! - - in SuppressionCommentFilterTest , SuppressWithNearbyCommentFilterTest , SuppressionFilterTest , <nl> - SuppressionXpathFilterTest , XpathFilterTest pmd does not accept nl . jqno . equalsverifier . EqualsVerifier # . verify ( ) <nl> - as correctness check method - - > <nl> - < ! - - in AbstractJavadocCheckTest pmd does not find asserts in another class methods called from the test method - - > <nl> - < ! - - in ImportControlCheckTest , DetailASTTest <nl> + < ! - - in AllChecksTest , AstRegressionTest , DetailASTTest and ImportControlCheckTest <nl> pmd does not find asserts in private methods of the test class called from the test method - - > <nl> + < ! - - in MainTest pmd does not find asserts in lambdas called in the method exit . checkAssertionAfterwards - - > <nl> + < ! - - in FilterSetTest , LineColumnTest , LocalizedMessageTest , CsvFilterTest , IntMatchFilterTest <nl> + IntRangeFilterTest , SuppressElementTest , SuppressWithNearbyCommentFilterTest <nl> + SuppressWithPlainTextCommentFilterTest , SuppressionCommentFilterTest , SuppressionFilterTest <nl> + SuppressionXpathFilterTest , XpathFilterTest pmd does not accept <nl> + nl . jqno . equalsverifier . EqualsVerifier # . verify ( ) as correctness check method - - > <nl> < ! - - in AstRegressionTest pmd does not find asserts in inner classes methods called from the test method - - > <nl> - < ! - - in AllChecksTest pmd does not find asserts in lambdas - - > <nl> - < ! - - in DetailASTTest pmd does not find asserts in lambdas - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressionFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCode ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressionCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCodeOfTagClass ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWithNearbyCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCodeOfTagClass ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressionXpathFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCode ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' XpathFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCode ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' AbstractJavadocCheckTest ' ] / / MethodDeclarator [ @ Image = ' testBlockCommentPositionHasPrivateConstr ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' ImportControlCheckTest ' ] / / MethodDeclarator [ @ Image = ' testPkgRegExpInChild ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' ImportControlCheckTest ' ] / / MethodDeclarator [ @ Image = ' testPkgRegExpInParent ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' ImportControlCheckTest ' ] / / MethodDeclarator [ @ Image = ' testPkgRegExpInBoth ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' AstRegressionTest ' ] / / MethodDeclarator [ @ Image = ' testImpossibleValid ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' AllChecksTest ' ] / / MethodDeclarator [ @ Image = ' testAllModulesAreReferencedInConfigFile ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' DetailASTTest ' ] / / MethodDeclarator [ @ Image = ' testTreeStructure ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWithPlainTextCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCodeOfTagClass ' ] <nl> + < ! - - in XdocsPagesTest pmd does not find asserts in lambdas - - > <nl> + < ! - - PackageObjectFactoryTest . testCreateModuleWithNonExistName pmd does not find asserts <nl> + in methods called from the test method - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' AllChecksTest ' <nl> + or @ Image = ' AstRegressionTest ' or @ Image = ' DetailASTTest ' <nl> + or @ Image = ' ImportControlCheckTest ' ] / / PrimaryPrefix / Name [ @ Image = ' verify ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' MainTest ' ] / / PrimaryPrefix / / Name [ starts - with ( @ Image , ' assert ' ) ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' FilterSetTest ' or @ Image = ' LineColumnTest ' <nl> + or @ Image = ' LocalizedMessageTest ' or @ Image = ' CsvFilterTest ' or @ Image = ' IntMatchFilterTest ' <nl> + or @ Image = ' IntRangeFilterTest ' or @ Image = ' SuppressElementTest ' <nl> + or @ Image = ' SuppressWithNearbyCommentFilterTest ' or @ Image = ' SuppressionCommentFilterTest ' <nl> + or @ Image = ' SuppressionFilterTest ' or @ Image = ' SuppressionXpathFilterTest ' <nl> + or @ Image = ' SuppressWithPlainTextCommentFilterTest ' or @ Image = ' XpathFilterTest ' ] / / PrimarySuffix [ @ Image = ' verify ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' PackageObjectFactoryTest ' ] / / MethodDeclarator [ @ Image = ' testCreateModuleWithNonExistName ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclarator [ @ Image = ' testAllChecksPresentOnAvailableChecksPage ' ] <nl> " / > <nl> < / properties > <nl> < / rule > <nl> diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 2e145e7 . . bfc5066 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 17 , 10 + 17 , 38 @ @ <nl> < exclude name = " StdCyclomaticComplexity " / > <nl> < / rule > <nl> <nl> + < rule ref = " rulesets / java / codesize . xml / NcssCount " > <nl> + < properties > <nl> + < property name = " methodReportLevel " value = " 32 " / > <nl> + < ! - - The classes Main , PackageObjectFactory , CheckstyleAntTask , RequireThisCheck , <nl> + VariableDeclarationUsageDistanceCheck , CommentsIndentationCheck , JavadocMethodCheck , <nl> + HandlerFactory are big and should not be split without a good reason . <nl> + The test classes should be one whole piece of code . <nl> + The methods visitToken / leaveToken are a big SWITCH block with a nuber of IF blocks . <nl> + If we split the block to several methods it will damage the readability . <nl> + The methods XMLLogger . encode , FallThroughCheck . isTerminated , ElementNode . iterateAxis , <nl> + NoWhitespaceAfterCheck . getArrayDeclaratorPreviousElement are also huge switches , <nl> + they has to be monolithic . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' <nl> + or @ Image = ' PackageObjectFactory ' or @ Image = ' CheckstyleAntTask ' or @ Image = ' RequireThisCheck ' <nl> + or @ Image = ' VariableDeclarationUsageDistanceCheck ' or @ Image = ' CommentsIndentationCheck ' <nl> + or @ Image = ' JavadocMethodCheck ' or @ Image = ' HandlerFactory ' or ends - with ( @ Image , ' Test ' ) ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' XMLLogger ' ] / / MethodDeclaration [ @ Name = ' encode ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' LeftCurlyCheck ' or @ Image = ' FinalLocalVariableCheck ' <nl> + or @ Image = ' ImportOrderCheck ' or @ Image = ' NPathComplexityCheck ' ] / / MethodDeclaration [ @ Name = ' visitToken ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' FallThroughCheck ' ] / / MethodDeclaration [ @ Name = ' isTerminated ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' ModifiedControlVariableCheck ' <nl> + or @ Image = ' NPathComplexityCheck ' ] / / MethodDeclaration [ @ Name = ' leaveToken ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' NoWhitespaceAfterCheck ' ] / / MethodDeclaration [ @ Name = ' getArrayDeclaratorPreviousElement ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' ElementNode ' ] / / MethodDeclaration [ @ Name = ' iterateAxis ' ] <nl> + " / > <nl> + < / properties > <nl> + < / rule > <nl> + <nl> < rule ref = " rulesets / java / codesize . xml / CyclomaticComplexity " > <nl> < properties > <nl> - < property name = " showClassesComplexity " value = " false " / > <nl> - < property name = " reportLevel " value = " 11 " / > <nl> + < property name = " classReportLevel " value = " 76 " / > <nl> + < property name = " methodReportLevel " value = " 11 " / > <nl> < ! - - DeclarationOrder - ' visitToken ' has just big SWITCH block which contains IF blocks . <nl> If we split the block to several methods it will damage readability . <nl> validateCli is not reasonable to split as encapsulation of logic will be damaged <nl> @ @ - 83 , 6 + 111 , 8 @ @ <nl> < ! - - < exclude name = " CommentRequired " / > - - > <nl> < ! - - we use class comments as source for xdoc files , so content is big and that is by design - - > <nl> < exclude name = " CommentSize " / > <nl> + < ! - - Till https : / / github . com / checkstyle / checkstyle / issues / 5665 - - > <nl> + < exclude name = " CommentDefaultAccessModifier " / > <nl> < / rule > <nl> < rule ref = " rulesets / java / comments . xml / CommentRequired " > <nl> < properties > <nl> @ @ - 159 , 6 + 189 , 25 @ @ <nl> < ! - - we do not care about this minor overhead , we are not Android application and we do not want to change <nl> visibility of methods . Package - private visibility should be avoid almost always . - - > <nl> < exclude name = " AccessorMethodGeneration " / > <nl> + < ! - - Conflicts with the ToArrayCallWithZeroLengthArrayArgument check from the Idea <nl> + This rule is based on a study by Aleksey Shipil ё v <nl> + https : / / shipilev . net / blog / 2016 / arrays - wisdom - ancients / <nl> + However , in modern JVM the result is different : <nl> + Benchmark ( size ) ( type ) Mode Cnt Score Error Units <nl> + simple 1000 arraylist avgt 15 400 . 156 4 . 154 ns / op <nl> + sized 1000 arraylist avgt 15 1051 . 462 26 . 820 ns / op <nl> + zero 1000 arraylist avgt 15 743 . 794 27 . 400 ns / op <nl> + simple 1000 hashset avgt 15 4728 . 179 130 . 822 ns / op <nl> + sized 1000 hashset avgt 15 4960 . 655 179 . 637 ns / op <nl> + zero 1000 hashset avgt 15 5101 . 816 159 . 180 ns / op <nl> + The advantages of this rule are questionable , and the flaws are obvious . <nl> + - - > <nl> + < exclude name = " OptimizableToArrayCall " / > <nl> + < ! - - Too much " false - positives " on the Checks classes . <nl> + We do not follow the philosophy of complete encapsulation , we like data classes <nl> + ( preferable immutable ) to transfer content from one part to another . <nl> + There is no way to configure the rule ( it has no properties ) . - - > <nl> + < exclude name = " DataClass " / > <nl> < / rule > <nl> <nl> < rule ref = " rulesets / java / design . xml / ConfusingTernary " > <nl> @ @ - 216 , 9 + 265 , 16 @ @ <nl> < ! - - too many false - positives - - > <nl> < exclude name = " BeanMembersShouldSerialize " / > <nl> < / rule > <nl> - < rule ref = " rulesets / java / logging - jakarta - commons . xml " / > <nl> <nl> - < rule ref = " rulesets / java / logging - java . xml " / > <nl> + < ! - - Manually adding these rules from the rulesets logging - jakarta - commons and logging - java <nl> + until all deprecated rulesets will be replaced with categories . See <nl> + https : / / pmd . github . io / pmd - 6 . 0 . 0 / pmd _ release _ notes . html # rule - categories - - > <nl> + < rule ref = " category / java / errorprone . xml / ProperLogger " / > <nl> + < rule ref = " category / java / errorprone . xml / UseCorrectExceptionLogging " / > <nl> + < rule ref = " category / java / errorprone . xml / InvalidSlf4jMessageFormat " / > <nl> + < rule ref = " category / java / errorprone . xml / LoggerIsNotStaticFinal " / > <nl> + < rule ref = " category / java / errorprone . xml / MoreThanOneLogger " / > <nl> + <nl> < rule ref = " rulesets / java / logging - java . xml / SystemPrintln " > <nl> < properties > <nl> < ! - - it is ok to use println in CLI class - - > <nl> diff - - git a / config / version - number - rules . xml b / config / version - number - rules . xml <nl> index 39e0cb2 . . ab5d125 100644 <nl> - - - a / config / version - number - rules . xml <nl> + + + b / config / version - number - rules . xml <nl> @ @ - 27 , 11 + 27 , 5 @ @ <nl> < ignoreVersion type = " regex " > . * < / ignoreVersion > <nl> < / ignoreVersions > <nl> < / rule > <nl> - < rule groupId = " org . apache . maven . plugins " artifactId = " maven - pmd - plugin " > <nl> - < ignoreVersions > <nl> - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 5603 - - > <nl> - < ignoreVersion type = " regex " > 3 . 9 . * < / ignoreVersion > <nl> - < / ignoreVersions > <nl> - < / rule > <nl> < / rules > <nl> < / ruleset > <nl> diff - - git a / pom . xml b / pom . xml <nl> index 5a9ac01 . . 62d1fe9 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 201 , 8 + 201 , 8 @ @ <nl> < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > <nl> < maven . site . plugin . version > 3 . 7 < / maven . site . plugin . version > <nl> < maven . spotbugs . plugin . version > 3 . 1 . 3 < / maven . spotbugs . plugin . version > <nl> - < maven . pmd . plugin . version > 3 . 8 < / maven . pmd . plugin . version > <nl> - < pmd . version > 5 . 8 . 1 < / pmd . version > <nl> + < maven . pmd . plugin . version > 3 . 9 . 0 < / maven . pmd . plugin . version > <nl> + < pmd . version > 6 . 1 . 0 < / pmd . version > <nl> < maven . jacoco . plugin . version > 0 . 8 . 1 < / maven . jacoco . plugin . version > <nl> < powermock . version > 2 . 0 . 0 - beta . 5 < / powermock . version > <nl> < saxon . version > 9 . 8 . 0 - 10 < / saxon . version > <nl> @ @ - 392 , 6 + 392 , 7 @ @ <nl> < artifactId > maven - pmd - plugin < / artifactId > <nl> < version > $ { maven . pmd . plugin . version } < / version > <nl> < configuration > <nl> + < analysisCache > false < / analysisCache > <nl> < targetJdk > $ { java . version } < / targetJdk > <nl> < minimumTokens > 20 < / minimumTokens > <nl> < skipEmptyReport > false < / skipEmptyReport >

TEST DIFF:
diff - - git a / . ci / test - spelling - unknown - words . sh b / . ci / test - spelling - unknown - words . sh 
 index 8b3c7ef . . 06bb4e3 100755 
 - - - a / . ci / test - spelling - unknown - words . sh 
 + + + b / . ci / test - spelling - unknown - words . sh 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - # ! / bin / sh 
 + # ! / bin / bash 
 # This CI acceptance test is based on : 
 # https : / / github . com / jsoref / spelling / blob / 04648bdc63723e5cdf5cbeaff2225a462807abc8 
 # It is conceptually ` f ` which runs ` w ` ( spelling - unknown - word - splitter )

NEAREST DIFF:
diff - - git a / config / pmd - test . xml b / config / pmd - test . xml 
 index 1681946 . . ed0dc69 100644 
 - - - a / config / pmd - test . xml 
 + + + b / config / pmd - test . xml 
 @ @ - 77 , 28 + 77 , 30 @ @ 
 < ! - - pmd cannot find assert if it is located in private method of this class called from the test 
 method or method of another class - - > 
 < properties > 
 - < ! - - in SuppressionCommentFilterTest , SuppressWithNearbyCommentFilterTest , SuppressionFilterTest , 
 - SuppressionXpathFilterTest , XpathFilterTest pmd does not accept nl . jqno . equalsverifier . EqualsVerifier # . verify ( ) 
 - as correctness check method - - > 
 - < ! - - in AbstractJavadocCheckTest pmd does not find asserts in another class methods called from the test method - - > 
 - < ! - - in ImportControlCheckTest , DetailASTTest 
 + < ! - - in AllChecksTest , AstRegressionTest , DetailASTTest and ImportControlCheckTest 
 pmd does not find asserts in private methods of the test class called from the test method - - > 
 + < ! - - in MainTest pmd does not find asserts in lambdas called in the method exit . checkAssertionAfterwards - - > 
 + < ! - - in FilterSetTest , LineColumnTest , LocalizedMessageTest , CsvFilterTest , IntMatchFilterTest 
 + IntRangeFilterTest , SuppressElementTest , SuppressWithNearbyCommentFilterTest 
 + SuppressWithPlainTextCommentFilterTest , SuppressionCommentFilterTest , SuppressionFilterTest 
 + SuppressionXpathFilterTest , XpathFilterTest pmd does not accept 
 + nl . jqno . equalsverifier . EqualsVerifier # . verify ( ) as correctness check method - - > 
 < ! - - in AstRegressionTest pmd does not find asserts in inner classes methods called from the test method - - > 
 - < ! - - in AllChecksTest pmd does not find asserts in lambdas - - > 
 - < ! - - in DetailASTTest pmd does not find asserts in lambdas - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressionFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCode ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressionCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCodeOfTagClass ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWithNearbyCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCodeOfTagClass ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressionXpathFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCode ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' XpathFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCode ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' AbstractJavadocCheckTest ' ] / / MethodDeclarator [ @ Image = ' testBlockCommentPositionHasPrivateConstr ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' ImportControlCheckTest ' ] / / MethodDeclarator [ @ Image = ' testPkgRegExpInChild ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' ImportControlCheckTest ' ] / / MethodDeclarator [ @ Image = ' testPkgRegExpInParent ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' ImportControlCheckTest ' ] / / MethodDeclarator [ @ Image = ' testPkgRegExpInBoth ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' AstRegressionTest ' ] / / MethodDeclarator [ @ Image = ' testImpossibleValid ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' AllChecksTest ' ] / / MethodDeclarator [ @ Image = ' testAllModulesAreReferencedInConfigFile ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' DetailASTTest ' ] / / MethodDeclarator [ @ Image = ' testTreeStructure ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWithPlainTextCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' testEqualsAndHashCodeOfTagClass ' ] 
 + < ! - - in XdocsPagesTest pmd does not find asserts in lambdas - - > 
 + < ! - - PackageObjectFactoryTest . testCreateModuleWithNonExistName pmd does not find asserts 
 + in methods called from the test method - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' AllChecksTest ' 
 + or @ Image = ' AstRegressionTest ' or @ Image = ' DetailASTTest ' 
 + or @ Image = ' ImportControlCheckTest ' ] / / PrimaryPrefix / Name [ @ Image = ' verify ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' MainTest ' ] / / PrimaryPrefix / / Name [ starts - with ( @ Image , ' assert ' ) ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' FilterSetTest ' or @ Image = ' LineColumnTest ' 
 + or @ Image = ' LocalizedMessageTest ' or @ Image = ' CsvFilterTest ' or @ Image = ' IntMatchFilterTest ' 
 + or @ Image = ' IntRangeFilterTest ' or @ Image = ' SuppressElementTest ' 
 + or @ Image = ' SuppressWithNearbyCommentFilterTest ' or @ Image = ' SuppressionCommentFilterTest ' 
 + or @ Image = ' SuppressionFilterTest ' or @ Image = ' SuppressionXpathFilterTest ' 
 + or @ Image = ' SuppressWithPlainTextCommentFilterTest ' or @ Image = ' XpathFilterTest ' ] / / PrimarySuffix [ @ Image = ' verify ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' PackageObjectFactoryTest ' ] / / MethodDeclarator [ @ Image = ' testCreateModuleWithNonExistName ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclarator [ @ Image = ' testAllChecksPresentOnAvailableChecksPage ' ] 
 " / > 
 < / properties > 
 < / rule > 
 diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 2e145e7 . . bfc5066 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 17 , 10 + 17 , 38 @ @ 
 < exclude name = " StdCyclomaticComplexity " / > 
 < / rule > 
 
 + < rule ref = " rulesets / java / codesize . xml / NcssCount " > 
 + < properties > 
 + < property name = " methodReportLevel " value = " 32 " / > 
 + < ! - - The classes Main , PackageObjectFactory , CheckstyleAntTask , RequireThisCheck , 
 + VariableDeclarationUsageDistanceCheck , CommentsIndentationCheck , JavadocMethodCheck , 
 + HandlerFactory are big and should not be split without a good reason . 
 + The test classes should be one whole piece of code . 
 + The methods visitToken / leaveToken are a big SWITCH block with a nuber of IF blocks . 
 + If we split the block to several methods it will damage the readability . 
 + The methods XMLLogger . encode , FallThroughCheck . isTerminated , ElementNode . iterateAxis , 
 + NoWhitespaceAfterCheck . getArrayDeclaratorPreviousElement are also huge switches , 
 + they has to be monolithic . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' 
 + or @ Image = ' PackageObjectFactory ' or @ Image = ' CheckstyleAntTask ' or @ Image = ' RequireThisCheck ' 
 + or @ Image = ' VariableDeclarationUsageDistanceCheck ' or @ Image = ' CommentsIndentationCheck ' 
 + or @ Image = ' JavadocMethodCheck ' or @ Image = ' HandlerFactory ' or ends - with ( @ Image , ' Test ' ) ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' XMLLogger ' ] / / MethodDeclaration [ @ Name = ' encode ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' LeftCurlyCheck ' or @ Image = ' FinalLocalVariableCheck ' 
 + or @ Image = ' ImportOrderCheck ' or @ Image = ' NPathComplexityCheck ' ] / / MethodDeclaration [ @ Name = ' visitToken ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' FallThroughCheck ' ] / / MethodDeclaration [ @ Name = ' isTerminated ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' ModifiedControlVariableCheck ' 
 + or @ Image = ' NPathComplexityCheck ' ] / / MethodDeclaration [ @ Name = ' leaveToken ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' NoWhitespaceAfterCheck ' ] / / MethodDeclaration [ @ Name = ' getArrayDeclaratorPreviousElement ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' ElementNode ' ] / / MethodDeclaration [ @ Name = ' iterateAxis ' ] 
 + " / > 
 + < / properties > 
 + < / rule > 
 + 
 < rule ref = " rulesets / java / codesize . xml / CyclomaticComplexity " > 
 < properties > 
 - < property name = " showClassesComplexity " value = " false " / > 
 - < property name = " reportLevel " value = " 11 " / > 
 + < property name = " classReportLevel " value = " 76 " / > 
 + < property name = " methodReportLevel " value = " 11 " / > 
 < ! - - DeclarationOrder - ' visitToken ' has just big SWITCH block which contains IF blocks . 
 If we split the block to several methods it will damage readability . 
 validateCli is not reasonable to split as encapsulation of logic will be damaged 
 @ @ - 83 , 6 + 111 , 8 @ @ 
 < ! - - < exclude name = " CommentRequired " / > - - > 
 < ! - - we use class comments as source for xdoc files , so content is big and that is by design - - > 
 < exclude name = " CommentSize " / > 
 + < ! - - Till https : / / github . com / checkstyle / checkstyle / issues / 5665 - - > 
 + < exclude name = " CommentDefaultAccessModifier " / > 
 < / rule > 
 < rule ref = " rulesets / java / comments . xml / CommentRequired " > 
 < properties > 
 @ @ - 159 , 6 + 189 , 25 @ @ 
 < ! - - we do not care about this minor overhead , we are not Android application and we do not want to change 
 visibility of methods . Package - private visibility should be avoid almost always . - - > 
 < exclude name = " AccessorMethodGeneration " / > 
 + < ! - - Conflicts with the ToArrayCallWithZeroLengthArrayArgument check from the Idea 
 + This rule is based on a study by Aleksey Shipil ё v 
 + https : / / shipilev . net / blog / 2016 / arrays - wisdom - ancients / 
 + However , in modern JVM the result is different : 
 + Benchmark ( size ) ( type ) Mode Cnt Score Error Units 
 + simple 1000 arraylist avgt 15 400 . 156 4 . 154 ns / op 
 + sized 1000 arraylist avgt 15 1051 . 462 26 . 820 ns / op 
 + zero 1000 arraylist avgt 15 743 . 794 27 . 400 ns / op 
 + simple 1000 hashset avgt 15 4728 . 179 130 . 822 ns / op 
 + sized 1000 hashset avgt 15 4960 . 655 179 . 637 ns / op 
 + zero 1000 hashset avgt 15 5101 . 816 159 . 180 ns / op 
 + The advantages of this rule are questionable , and the flaws are obvious . 
 + - - > 
 + < exclude name = " OptimizableToArrayCall " / > 
 + < ! - - Too much " false - positives " on the Checks classes . 
 + We do not follow the philosophy of complete encapsulation , we like data classes 
 + ( preferable immutable ) to transfer content from one part to another . 
 + There is no way to configure the rule ( it has no properties ) . - - > 
 + < exclude name = " DataClass " / > 
 < / rule > 
 
 < rule ref = " rulesets / java / design . xml / ConfusingTernary " > 
 @ @ - 216 , 9 + 265 , 16 @ @ 
 < ! - - too many false - positives - - > 
 < exclude name = " BeanMembersShouldSerialize " / > 
 < / rule > 
 - < rule ref = " rulesets / java / logging - jakarta - commons . xml " / > 
 
 - < rule ref = " rulesets / java / logging - java . xml " / > 
 + < ! - - Manually adding these rules from the rulesets logging - jakarta - commons and logging - java 
 + until all deprecated rulesets will be replaced with categories . See 
 + https : / / pmd . github . io / pmd - 6 . 0 . 0 / pmd _ release _ notes . html # rule - categories - - > 
 + < rule ref = " category / java / errorprone . xml / ProperLogger " / > 
 + < rule ref = " category / java / errorprone . xml / UseCorrectExceptionLogging " / > 
 + < rule ref = " category / java / errorprone . xml / InvalidSlf4jMessageFormat " / > 
 + < rule ref = " category / java / errorprone . xml / LoggerIsNotStaticFinal " / > 
 + < rule ref = " category / java / errorprone . xml / MoreThanOneLogger " / > 
 + 
 < rule ref = " rulesets / java / logging - java . xml / SystemPrintln " > 
 < properties > 
 < ! - - it is ok to use println in CLI class - - > 
 diff - - git a / config / version - number - rules . xml b / config / version - number - rules . xml 
 index 39e0cb2 . . ab5d125 100644 
 - - - a / config / version - number - rules . xml 
 + + + b / config / version - number - rules . xml 
 @ @ - 27 , 11 + 27 , 5 @ @ 
 < ignoreVersion type = " regex " > . * < / ignoreVersion > 
 < / ignoreVersions > 
 < / rule > 
 - < rule groupId = " org . apache . maven . plugins " artifactId = " maven - pmd - plugin " > 
 - < ignoreVersions > 
 - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 5603 - - > 
 - < ignoreVersion type = " regex " > 3 . 9 . * < / ignoreVersion > 
 - < / ignoreVersions > 
 - < / rule > 
 < / rules > 
 < / ruleset > 
 diff - - git a / pom . xml b / pom . xml 
 index 5a9ac01 . . 62d1fe9 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 201 , 8 + 201 , 8 @ @ 
 < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > 
 < maven . site . plugin . version > 3 . 7 < / maven . site . plugin . version > 
 < maven . spotbugs . plugin . version > 3 . 1 . 3 < / maven . spotbugs . plugin . version > 
 - < maven . pmd . plugin . version > 3 . 8 < / maven . pmd . plugin . version > 
 - < pmd . version > 5 . 8 . 1 < / pmd . version > 
 + < maven . pmd . plugin . version > 3 . 9 . 0 < / maven . pmd . plugin . version > 
 + < pmd . version > 6 . 1 . 0 < / pmd . version > 
 < maven . jacoco . plugin . version > 0 . 8 . 1 < / maven . jacoco . plugin . version > 
 < powermock . version > 2 . 0 . 0 - beta . 5 < / powermock . version > 
 < saxon . version > 9 . 8 . 0 - 10 < / saxon . version > 
 @ @ - 392 , 6 + 392 , 7 @ @ 
 < artifactId > maven - pmd - plugin < / artifactId > 
 < version > $ { maven . pmd . plugin . version } < / version > 
 < configuration > 
 + < analysisCache > false < / analysisCache > 
 < targetJdk > $ { java . version } < / targetJdk > 
 < minimumTokens > 20 < / minimumTokens > 
 < skipEmptyReport > false < / skipEmptyReport >
