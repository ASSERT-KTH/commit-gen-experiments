BLEU SCORE: 0.027611988917697356

TEST MSG: Issue # 2161 : unify test input locations
GENERATED MSG: added tests for InterfaceIsType check

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java <nl> index decf141 . . 26bce39 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java <nl> @ @ - 22 , 6 + 22 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . design ; <nl> import static com . puppycrawl . tools . checkstyle . checks . design . InterfaceIsTypeCheck . MSG _ KEY ; <nl> import static org . junit . Assert . assertArrayEquals ; <nl> <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> @ @ - 30 , 6 + 33 , 12 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> public class InterfaceIsTypeCheckTest <nl> extends BaseCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " design " + File . separator + filename ) ; <nl> + } <nl> + <nl> @ Test <nl> public void testDefault ( ) <nl> throws Exception { <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputInterfaceIsType . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputInterfaceIsType . java <nl> deleted file mode 100644 <nl> index d8a2b23 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputInterfaceIsType . java <nl> + + + / dev / null <nl> @ @ - 1 , 30 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2001 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - / * * <nl> - * Test input for InterfaceIsTypeCheck <nl> - * @ author lkuehne <nl> - * * / <nl> - class InputInterfaceIsType <nl> - { <nl> - / / OK , has method , so is a type <nl> - interface OK <nl> - { <nl> - void method ( ) ; <nl> - } <nl> - <nl> - / / Marker interface , OK for some configurations <nl> - interface Marker <nl> - { <nl> - } <nl> - <nl> - / / Always flagged <nl> - interface ConstantPool <nl> - { <nl> - boolean BAD = true ; <nl> - } <nl> - <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java <nl> new file mode 100644 <nl> index 0000000 . . e33faca <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java <nl> @ @ - 0 , 0 + 1 , 30 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . design ; <nl> + <nl> + / * * <nl> + * Test input for InterfaceIsTypeCheck <nl> + * @ author lkuehne <nl> + * * / <nl> + class InputInterfaceIsType <nl> + { <nl> + / / OK , has method , so is a type <nl> + interface OK <nl> + { <nl> + void method ( ) ; <nl> + } <nl> + <nl> + / / Marker interface , OK for some configurations <nl> + interface Marker <nl> + { <nl> + } <nl> + <nl> + / / Always flagged <nl> + interface ConstantPool <nl> + { <nl> + boolean BAD = true ; <nl> + } <nl> + <nl> + }
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / IndentationCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / IndentationCheck . java <nl> index 66e2720 . . 5436cb1 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / IndentationCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / IndentationCheck . java <nl> @ @ - 107 , 6 + 107 , 7 @ @ import org . apache . commons . collections . ArrayStack ; <nl> * <nl> * @ author jrichard <nl> * / <nl> + <nl> public class IndentationCheck <nl> extends Check <nl> { <nl> @ @ - 114 , 10 + 115 , 10 @ @ public class IndentationCheck <nl> private static final int DEFAULT _ INDENTATION = 4 ; <nl> <nl> / * * how many tabs or spaces to use * / <nl> - private int mIndentationAmount = DEFAULT _ INDENTATION ; <nl> + private int mBasicOffset = DEFAULT _ INDENTATION ; <nl> <nl> / * * how much to indent a case label * / <nl> - private int mCaseIndentationAmount = mIndentationAmount ; <nl> + private int mCaseIndentationAmount = mBasicOffset ; <nl> <nl> / * * how far brace should be indented when on next line * / <nl> private int mBraceAdjustment = 0 ; <nl> @ @ - 134 , 23 + 135 , 23 @ @ public class IndentationCheck <nl> } <nl> <nl> / * * <nl> - * Set the indentation amount . <nl> + * Set the basic offset . <nl> * <nl> - * @ param aIndentAmount the number of tabs or spaces to indent <nl> + * @ param aBasicOffset the number of tabs or spaces to indent <nl> * / <nl> - public void setIndentationAmount ( int aIndentAmount ) <nl> + public void setBasicOffset ( int aBasicOffset ) <nl> { <nl> - mIndentationAmount = aIndentAmount ; <nl> + mBasicOffset = aBasicOffset ; <nl> } <nl> <nl> / * * <nl> - * Get the indentation amount . <nl> + * Get the basic offset . <nl> * <nl> * @ return the number of tabs or spaces to indent <nl> * / <nl> - public int getIndentationAmount ( ) <nl> + public int getBasicOffset ( ) <nl> { <nl> - return mIndentationAmount ; <nl> + return mBasicOffset ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> index 024f2ea . . cd509f2 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> @ @ - 230 , 7 + 230 , 7 @ @ public class BlockParentHandler extends ExpressionHandler <nl> } <nl> <nl> checkExpressionSubtree ( nonlist , getLevel ( ) <nl> - + getIndentCheck ( ) . getIndentationAmount ( ) ) ; <nl> + + getIndentCheck ( ) . getBasicOffset ( ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 326 , 8 + 326 , 8 @ @ public class BlockParentHandler extends ExpressionHandler <nl> } <nl> DetailAST listChild = getListChild ( ) ; <nl> if ( listChild ! = null ) { <nl> - final int expectedLevel = <nl> - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ; <nl> + final int expectedLevel = <nl> + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ; <nl> / / NOTE : switch statements usually don ' t have curlys <nl> if ( ! hasCurlys ( ) | | ! areOnSameLine ( getLCurly ( ) , getRCurly ( ) ) ) { <nl> checkChildren ( listChild , <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ExpressionHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ExpressionHandler . java <nl> index 29aaa59 . . 3cb6eef 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ExpressionHandler . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ExpressionHandler . java <nl> @ @ - 109 , 7 + 109 , 7 @ @ public abstract class ExpressionHandler <nl> * / <nl> public int suggestedChildLevel ( ExpressionHandler aChild ) <nl> { <nl> - return getLevel ( ) + mIndentCheck . getIndentationAmount ( ) ; <nl> + return getLevel ( ) + mIndentCheck . getBasicOffset ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 246 , 7 + 246 , 7 @ @ public abstract class ExpressionHandler <nl> checkSingleLine ( aStartLine , aIndentLevel ) ; <nl> <nl> / / check following lines <nl> - aIndentLevel + = mIndentCheck . getIndentationAmount ( ) ; <nl> + aIndentLevel + = mIndentCheck . getBasicOffset ( ) ; <nl> for ( int i = aStartLine + 1 ; i < = aEndLine ; i + + ) { <nl> checkSingleLine ( i , aIndentLevel ) ; <nl> } <nl> @ @ - 393 , 7 + 393 , 7 @ @ public abstract class ExpressionHandler <nl> } <nl> <nl> if ( aFirstLineMatches | | startLine > mMainAst . getLineNo ( ) ) { <nl> - aIndentLevel + = mIndentCheck . getIndentationAmount ( ) ; <nl> + aIndentLevel + = mIndentCheck . getBasicOffset ( ) ; <nl> } <nl> <nl> / / check following lines <nl> @ @ - 415 , 7 + 415 , 7 @ @ public abstract class ExpressionHandler <nl> if ( thisLine . matches ( " ^ \ \ s * \ \ . " ) <nl> | | prevLine . matches ( " \ \ . \ \ s * $ " ) ) <nl> { <nl> - aIndentLevel + = mIndentCheck . getIndentationAmount ( ) ; <nl> + aIndentLevel + = mIndentCheck . getBasicOffset ( ) ; <nl> } <nl> <nl> if ( col ! = null ) { <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java <nl> index 72de5e2 . . b49aed3 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java <nl> @ @ - 50 , 13 + 50 , 13 @ @ public class ForHandler extends BlockParentHandler <nl> { <nl> checkExpressionSubtree ( <nl> getMainAst ( ) . findFirstToken ( TokenTypes . FOR _ INIT ) , <nl> - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ) ; <nl> + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ) ; <nl> checkExpressionSubtree ( <nl> getMainAst ( ) . findFirstToken ( TokenTypes . FOR _ CONDITION ) , <nl> - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ) ; <nl> + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ) ; <nl> checkExpressionSubtree ( <nl> getMainAst ( ) . findFirstToken ( TokenTypes . FOR _ ITERATOR ) , <nl> - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ) ; <nl> + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java <nl> index 325e772 . . 4ee6224 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java <nl> @ @ - 110 , 7 + 110 , 7 @ @ public class IfHandler extends BlockParentHandler <nl> DetailAST condAst = ( DetailAST ) <nl> getMainAst ( ) . findFirstToken ( TokenTypes . LPAREN ) . getNextSibling ( ) ; <nl> int expectedLevel = <nl> - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ; <nl> + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ; <nl> checkExpressionSubtree ( condAst , expectedLevel , false , false ) ; <nl> } <nl> <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> index c1ebb05 . . 1329492 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> @ @ - 105 , 7 + 105 , 7 @ @ public class MethodCallHandler extends ExpressionHandler <nl> } <nl> else { <nl> return container . getLevel ( ) <nl> - + getIndentCheck ( ) . getIndentationAmount ( ) ; <nl> + + getIndentCheck ( ) . getBasicOffset ( ) ; <nl> } <nl> } <nl> <nl> @ @ - 185 , 7 + 185 , 7 @ @ public class MethodCallHandler extends ExpressionHandler <nl> if ( ! areOnSameLine ( ( DetailAST ) aChild . getMainAst ( ) . getFirstChild ( ) , <nl> ( DetailAST ) getMainAst ( ) . getFirstChild ( ) ) ) <nl> { <nl> - indentLevel + = getIndentCheck ( ) . getIndentationAmount ( ) ; <nl> + indentLevel + = getIndentCheck ( ) . getBasicOffset ( ) ; <nl> } <nl> } <nl> return indentLevel ; <nl> @ @ - 251 , 7 + 251 , 7 @ @ public class MethodCallHandler extends ExpressionHandler <nl> <nl> checkExpressionSubtree ( <nl> getMainAst ( ) . findFirstToken ( TokenTypes . ELIST ) , <nl> - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) , <nl> + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) , <nl> false , true ) ; <nl> <nl> checkRParen ( ) ; <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / WhileHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / WhileHandler . java <nl> index b45dff0 . . 6ac9d49 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / WhileHandler . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / WhileHandler . java <nl> @ @ - 50 , 7 + 50 , 7 @ @ public class WhileHandler extends BlockParentHandler <nl> { <nl> DetailAST condAst = getMainAst ( ) . findFirstToken ( TokenTypes . EXPR ) ; <nl> checkExpressionSubtree ( condAst , getLevel ( ) <nl> - + getIndentCheck ( ) . getIndentationAmount ( ) ) ; <nl> + + getIndentCheck ( ) . getBasicOffset ( ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / IndentationCheckTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / IndentationCheckTest . java <nl> index 762c7ea . . feccfd6 100644 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / IndentationCheckTest . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / IndentationCheckTest . java <nl> @ @ - 29 , 9 + 29 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( checkConfig , getPath ( " indentation / InputInvalidLabelIndent . java " ) , expected ) ; <nl> } <nl> - <nl> - <nl> - <nl> + <nl> + <nl> + <nl> public void testValidLabel ( ) <nl> throws Exception <nl> { <nl> @ @ - 41 , 7 + 41 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> verify ( checkConfig , getPath ( " indentation / InputValidLabelIndent . java " ) , expected ) ; <nl> } <nl> <nl> - <nl> + <nl> public void testValidIfWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 51 , 9 + 51 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> final String [ ] expected = { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> - } <nl> - <nl> - <nl> + } <nl> + <nl> + <nl> public void testValidDotWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 64 , 8 + 64 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> - <nl> + <nl> + <nl> public void testValidMethodWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 76 , 8 + 76 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> - <nl> + <nl> + <nl> public void testInvalidMethodWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 116 , 15 + 116 , 15 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> " 139 : method call child at indentation level 10 not at correct indentation , 12 " , <nl> " 142 : method call child at indentation level 10 not at correct indentation , 12 " , <nl> / / todo : 152 - - 8 should be 12 <nl> - " 152 : method call child at indentation level 6 not at correct indentation , 8 " , <nl> + " 152 : method call child at indentation level 6 not at correct indentation , 8 " , <nl> " 158 : method def throws at indentation level 6 not at correct indentation , 8 " , <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> <nl> - <nl> - <nl> - <nl> + <nl> + <nl> + <nl> public void testInvalidSwitchWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 161 , 7 + 161 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> + <nl> public void testValidSwitchWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 172 , 9 + 172 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> - <nl> - <nl> + <nl> + <nl> + <nl> public void testValidArrayInitWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 226 , 9 + 226 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> verify ( c , fname , expected ) ; <nl> } <nl> <nl> - <nl> - <nl> - <nl> + <nl> + <nl> + <nl> public void testValidTryWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 276 , 8 + 276 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> - <nl> + <nl> + <nl> / / TODO : needs to be finished <nl> public void testInvalidClassDefWithChecker ( ) <nl> throws Exception <nl> @ @ - 330 , 8 + 330 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> - <nl> + <nl> + <nl> public void testInvalidBlockWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 378 , 7 + 378 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> + <nl> public void testInvalidIfWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 532 , 7 + 532 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> + <nl> public void testValidForWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 543 , 7 + 543 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> + <nl> public void testValidDoWhileWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 565 , 8 + 565 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> - <nl> + <nl> + <nl> public void testValidWhileWithChecker ( ) <nl> throws Exception <nl> { <nl> @ @ - 611 , 24 + 611 , 24 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> } ; <nl> verify ( c , fname , expected ) ; <nl> } <nl> - <nl> + <nl> public void testTabs ( ) <nl> throws Exception <nl> { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; <nl> - checkConfig . addAttribute ( " indentationAmount " , new Integer ( 4 ) . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " basicOffset " , new Integer ( 4 ) . toString ( ) ) ; <nl> checkConfig . addAttribute ( " tabWidth " , new Integer ( 4 ) . toString ( ) ) ; <nl> final String [ ] expected = { <nl> " 25 : ctor def child at indentation level 9 not at correct indentation , 8 " , <nl> } ; <nl> verify ( checkConfig , getPath ( " indentation / InputUseTabs . java " ) , expected ) ; <nl> } <nl> - <nl> + <nl> public void testIndentationLevel ( ) <nl> throws Exception <nl> { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; <nl> - checkConfig . addAttribute ( " indentationAmount " , new Integer ( 2 ) . toString ( ) ) ; <nl> + checkConfig . addAttribute ( " basicOffset " , new Integer ( 2 ) . toString ( ) ) ; <nl> final String [ ] expected = { <nl> " 25 : ctor def child at indentation level 5 not at correct indentation , 4 " , <nl> } ; <nl> @ @ - 657 , 5 + 657 , 5 @ @ public class IndentationCheckTest extends BaseCheckTestCase { <nl> verify ( checkConfig , getPath ( " indentation / InputBraceAdjustment . java " ) , expected ) ; <nl> } <nl> <nl> - <nl> + <nl> }

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java 
 index decf141 . . 26bce39 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java 
 @ @ - 22 , 6 + 22 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . design ; 
 import static com . puppycrawl . tools . checkstyle . checks . design . InterfaceIsTypeCheck . MSG _ KEY ; 
 import static org . junit . Assert . assertArrayEquals ; 
 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 @ @ - 30 , 6 + 33 , 12 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 public class InterfaceIsTypeCheckTest 
 extends BaseCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " design " + File . separator + filename ) ; 
 + } 
 + 
 @ Test 
 public void testDefault ( ) 
 throws Exception { 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputInterfaceIsType . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputInterfaceIsType . java 
 deleted file mode 100644 
 index d8a2b23 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputInterfaceIsType . java 
 + + + / dev / null 
 @ @ - 1 , 30 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2001 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - / * * 
 - * Test input for InterfaceIsTypeCheck 
 - * @ author lkuehne 
 - * * / 
 - class InputInterfaceIsType 
 - { 
 - / / OK , has method , so is a type 
 - interface OK 
 - { 
 - void method ( ) ; 
 - } 
 - 
 - / / Marker interface , OK for some configurations 
 - interface Marker 
 - { 
 - } 
 - 
 - / / Always flagged 
 - interface ConstantPool 
 - { 
 - boolean BAD = true ; 
 - } 
 - 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java 
 new file mode 100644 
 index 0000000 . . e33faca 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java 
 @ @ - 0 , 0 + 1 , 30 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . design ; 
 + 
 + / * * 
 + * Test input for InterfaceIsTypeCheck 
 + * @ author lkuehne 
 + * * / 
 + class InputInterfaceIsType 
 + { 
 + / / OK , has method , so is a type 
 + interface OK 
 + { 
 + void method ( ) ; 
 + } 
 + 
 + / / Marker interface , OK for some configurations 
 + interface Marker 
 + { 
 + } 
 + 
 + / / Always flagged 
 + interface ConstantPool 
 + { 
 + boolean BAD = true ; 
 + } 
 + 
 + }

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / IndentationCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / IndentationCheck . java 
 index 66e2720 . . 5436cb1 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / IndentationCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / IndentationCheck . java 
 @ @ - 107 , 6 + 107 , 7 @ @ import org . apache . commons . collections . ArrayStack ; 
 * 
 * @ author jrichard 
 * / 
 + 
 public class IndentationCheck 
 extends Check 
 { 
 @ @ - 114 , 10 + 115 , 10 @ @ public class IndentationCheck 
 private static final int DEFAULT _ INDENTATION = 4 ; 
 
 / * * how many tabs or spaces to use * / 
 - private int mIndentationAmount = DEFAULT _ INDENTATION ; 
 + private int mBasicOffset = DEFAULT _ INDENTATION ; 
 
 / * * how much to indent a case label * / 
 - private int mCaseIndentationAmount = mIndentationAmount ; 
 + private int mCaseIndentationAmount = mBasicOffset ; 
 
 / * * how far brace should be indented when on next line * / 
 private int mBraceAdjustment = 0 ; 
 @ @ - 134 , 23 + 135 , 23 @ @ public class IndentationCheck 
 } 
 
 / * * 
 - * Set the indentation amount . 
 + * Set the basic offset . 
 * 
 - * @ param aIndentAmount the number of tabs or spaces to indent 
 + * @ param aBasicOffset the number of tabs or spaces to indent 
 * / 
 - public void setIndentationAmount ( int aIndentAmount ) 
 + public void setBasicOffset ( int aBasicOffset ) 
 { 
 - mIndentationAmount = aIndentAmount ; 
 + mBasicOffset = aBasicOffset ; 
 } 
 
 / * * 
 - * Get the indentation amount . 
 + * Get the basic offset . 
 * 
 * @ return the number of tabs or spaces to indent 
 * / 
 - public int getIndentationAmount ( ) 
 + public int getBasicOffset ( ) 
 { 
 - return mIndentationAmount ; 
 + return mBasicOffset ; 
 } 
 
 / * * 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 index 024f2ea . . cd509f2 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 @ @ - 230 , 7 + 230 , 7 @ @ public class BlockParentHandler extends ExpressionHandler 
 } 
 
 checkExpressionSubtree ( nonlist , getLevel ( ) 
 - + getIndentCheck ( ) . getIndentationAmount ( ) ) ; 
 + + getIndentCheck ( ) . getBasicOffset ( ) ) ; 
 } 
 
 / * * 
 @ @ - 326 , 8 + 326 , 8 @ @ public class BlockParentHandler extends ExpressionHandler 
 } 
 DetailAST listChild = getListChild ( ) ; 
 if ( listChild ! = null ) { 
 - final int expectedLevel = 
 - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ; 
 + final int expectedLevel = 
 + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ; 
 / / NOTE : switch statements usually don ' t have curlys 
 if ( ! hasCurlys ( ) | | ! areOnSameLine ( getLCurly ( ) , getRCurly ( ) ) ) { 
 checkChildren ( listChild , 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ExpressionHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ExpressionHandler . java 
 index 29aaa59 . . 3cb6eef 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ExpressionHandler . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ExpressionHandler . java 
 @ @ - 109 , 7 + 109 , 7 @ @ public abstract class ExpressionHandler 
 * / 
 public int suggestedChildLevel ( ExpressionHandler aChild ) 
 { 
 - return getLevel ( ) + mIndentCheck . getIndentationAmount ( ) ; 
 + return getLevel ( ) + mIndentCheck . getBasicOffset ( ) ; 
 } 
 
 / * * 
 @ @ - 246 , 7 + 246 , 7 @ @ public abstract class ExpressionHandler 
 checkSingleLine ( aStartLine , aIndentLevel ) ; 
 
 / / check following lines 
 - aIndentLevel + = mIndentCheck . getIndentationAmount ( ) ; 
 + aIndentLevel + = mIndentCheck . getBasicOffset ( ) ; 
 for ( int i = aStartLine + 1 ; i < = aEndLine ; i + + ) { 
 checkSingleLine ( i , aIndentLevel ) ; 
 } 
 @ @ - 393 , 7 + 393 , 7 @ @ public abstract class ExpressionHandler 
 } 
 
 if ( aFirstLineMatches | | startLine > mMainAst . getLineNo ( ) ) { 
 - aIndentLevel + = mIndentCheck . getIndentationAmount ( ) ; 
 + aIndentLevel + = mIndentCheck . getBasicOffset ( ) ; 
 } 
 
 / / check following lines 
 @ @ - 415 , 7 + 415 , 7 @ @ public abstract class ExpressionHandler 
 if ( thisLine . matches ( " ^ \ \ s * \ \ . " ) 
 | | prevLine . matches ( " \ \ . \ \ s * $ " ) ) 
 { 
 - aIndentLevel + = mIndentCheck . getIndentationAmount ( ) ; 
 + aIndentLevel + = mIndentCheck . getBasicOffset ( ) ; 
 } 
 
 if ( col ! = null ) { 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java 
 index 72de5e2 . . b49aed3 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / ForHandler . java 
 @ @ - 50 , 13 + 50 , 13 @ @ public class ForHandler extends BlockParentHandler 
 { 
 checkExpressionSubtree ( 
 getMainAst ( ) . findFirstToken ( TokenTypes . FOR _ INIT ) , 
 - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ) ; 
 + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ) ; 
 checkExpressionSubtree ( 
 getMainAst ( ) . findFirstToken ( TokenTypes . FOR _ CONDITION ) , 
 - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ) ; 
 + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ) ; 
 checkExpressionSubtree ( 
 getMainAst ( ) . findFirstToken ( TokenTypes . FOR _ ITERATOR ) , 
 - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ) ; 
 + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java 
 index 325e772 . . 4ee6224 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java 
 @ @ - 110 , 7 + 110 , 7 @ @ public class IfHandler extends BlockParentHandler 
 DetailAST condAst = ( DetailAST ) 
 getMainAst ( ) . findFirstToken ( TokenTypes . LPAREN ) . getNextSibling ( ) ; 
 int expectedLevel = 
 - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) ; 
 + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) ; 
 checkExpressionSubtree ( condAst , expectedLevel , false , false ) ; 
 } 
 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 index c1ebb05 . . 1329492 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 @ @ - 105 , 7 + 105 , 7 @ @ public class MethodCallHandler extends ExpressionHandler 
 } 
 else { 
 return container . getLevel ( ) 
 - + getIndentCheck ( ) . getIndentationAmount ( ) ; 
 + + getIndentCheck ( ) . getBasicOffset ( ) ; 
 } 
 } 
 
 @ @ - 185 , 7 + 185 , 7 @ @ public class MethodCallHandler extends ExpressionHandler 
 if ( ! areOnSameLine ( ( DetailAST ) aChild . getMainAst ( ) . getFirstChild ( ) , 
 ( DetailAST ) getMainAst ( ) . getFirstChild ( ) ) ) 
 { 
 - indentLevel + = getIndentCheck ( ) . getIndentationAmount ( ) ; 
 + indentLevel + = getIndentCheck ( ) . getBasicOffset ( ) ; 
 } 
 } 
 return indentLevel ; 
 @ @ - 251 , 7 + 251 , 7 @ @ public class MethodCallHandler extends ExpressionHandler 
 
 checkExpressionSubtree ( 
 getMainAst ( ) . findFirstToken ( TokenTypes . ELIST ) , 
 - getLevel ( ) + getIndentCheck ( ) . getIndentationAmount ( ) , 
 + getLevel ( ) + getIndentCheck ( ) . getBasicOffset ( ) , 
 false , true ) ; 
 
 checkRParen ( ) ; 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / WhileHandler . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / WhileHandler . java 
 index b45dff0 . . 6ac9d49 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / WhileHandler . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / indentation / WhileHandler . java 
 @ @ - 50 , 7 + 50 , 7 @ @ public class WhileHandler extends BlockParentHandler 
 { 
 DetailAST condAst = getMainAst ( ) . findFirstToken ( TokenTypes . EXPR ) ; 
 checkExpressionSubtree ( condAst , getLevel ( ) 
 - + getIndentCheck ( ) . getIndentationAmount ( ) ) ; 
 + + getIndentCheck ( ) . getBasicOffset ( ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / IndentationCheckTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / IndentationCheckTest . java 
 index 762c7ea . . feccfd6 100644 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / IndentationCheckTest . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / IndentationCheckTest . java 
 @ @ - 29 , 9 + 29 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( checkConfig , getPath ( " indentation / InputInvalidLabelIndent . java " ) , expected ) ; 
 } 
 - 
 - 
 - 
 + 
 + 
 + 
 public void testValidLabel ( ) 
 throws Exception 
 { 
 @ @ - 41 , 7 + 41 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 verify ( checkConfig , getPath ( " indentation / InputValidLabelIndent . java " ) , expected ) ; 
 } 
 
 - 
 + 
 public void testValidIfWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 51 , 9 + 51 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 final String [ ] expected = { 
 } ; 
 verify ( c , fname , expected ) ; 
 - } 
 - 
 - 
 + } 
 + 
 + 
 public void testValidDotWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 64 , 8 + 64 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 - 
 + 
 + 
 public void testValidMethodWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 76 , 8 + 76 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 - 
 + 
 + 
 public void testInvalidMethodWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 116 , 15 + 116 , 15 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 " 139 : method call child at indentation level 10 not at correct indentation , 12 " , 
 " 142 : method call child at indentation level 10 not at correct indentation , 12 " , 
 / / todo : 152 - - 8 should be 12 
 - " 152 : method call child at indentation level 6 not at correct indentation , 8 " , 
 + " 152 : method call child at indentation level 6 not at correct indentation , 8 " , 
 " 158 : method def throws at indentation level 6 not at correct indentation , 8 " , 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 
 - 
 - 
 - 
 + 
 + 
 + 
 public void testInvalidSwitchWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 161 , 7 + 161 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 + 
 public void testValidSwitchWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 172 , 9 + 172 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 - 
 - 
 + 
 + 
 + 
 public void testValidArrayInitWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 226 , 9 + 226 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 verify ( c , fname , expected ) ; 
 } 
 
 - 
 - 
 - 
 + 
 + 
 + 
 public void testValidTryWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 276 , 8 + 276 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 - 
 + 
 + 
 / / TODO : needs to be finished 
 public void testInvalidClassDefWithChecker ( ) 
 throws Exception 
 @ @ - 330 , 8 + 330 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 - 
 + 
 + 
 public void testInvalidBlockWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 378 , 7 + 378 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 + 
 public void testInvalidIfWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 532 , 7 + 532 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 + 
 public void testValidForWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 543 , 7 + 543 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 + 
 public void testValidDoWhileWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 565 , 8 + 565 , 8 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 - 
 + 
 + 
 public void testValidWhileWithChecker ( ) 
 throws Exception 
 { 
 @ @ - 611 , 24 + 611 , 24 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 } ; 
 verify ( c , fname , expected ) ; 
 } 
 - 
 + 
 public void testTabs ( ) 
 throws Exception 
 { 
 final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; 
 - checkConfig . addAttribute ( " indentationAmount " , new Integer ( 4 ) . toString ( ) ) ; 
 + checkConfig . addAttribute ( " basicOffset " , new Integer ( 4 ) . toString ( ) ) ; 
 checkConfig . addAttribute ( " tabWidth " , new Integer ( 4 ) . toString ( ) ) ; 
 final String [ ] expected = { 
 " 25 : ctor def child at indentation level 9 not at correct indentation , 8 " , 
 } ; 
 verify ( checkConfig , getPath ( " indentation / InputUseTabs . java " ) , expected ) ; 
 } 
 - 
 + 
 public void testIndentationLevel ( ) 
 throws Exception 
 { 
 final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; 
 - checkConfig . addAttribute ( " indentationAmount " , new Integer ( 2 ) . toString ( ) ) ; 
 + checkConfig . addAttribute ( " basicOffset " , new Integer ( 2 ) . toString ( ) ) ; 
 final String [ ] expected = { 
 " 25 : ctor def child at indentation level 5 not at correct indentation , 4 " , 
 } ; 
 @ @ - 657 , 5 + 657 , 5 @ @ public class IndentationCheckTest extends BaseCheckTestCase { 
 verify ( checkConfig , getPath ( " indentation / InputBraceAdjustment . java " ) , expected ) ; 
 } 
 
 - 
 + 
 }
