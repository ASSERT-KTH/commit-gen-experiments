BLEU SCORE: 0.1278832848562552

TEST MSG: config : bump picocli to 3 . 8 . 2
GENERATED MSG: Update Apache Commons Lang to 3 . 4 , issue # 899

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 9bf5d6e . . ffbad1b 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 227 , 7 + 227 , 7 @ @ <nl> < dependency > <nl> < groupId > info . picocli < / groupId > <nl> < artifactId > picocli < / artifactId > <nl> - < version > 3 . 8 . 0 < / version > <nl> + < version > 3 . 8 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupId > antlr < / groupId >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java <nl> index 6382616 . . 6b63699 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java <nl> @ @ - 21 , 8 + 21 , 10 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> import com . google . common . collect . Sets ; <nl> import com . puppycrawl . tools . checkstyle . api . Check ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - import com . puppycrawl . tools . checkstyle . api . FastStack ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> + import java . util . ArrayDeque ; <nl> + import java . util . Collections ; <nl> + import java . util . Deque ; <nl> import java . util . Set ; <nl> <nl> / * * <nl> @ @ - 49 , 8 + 51 , 7 @ @ public final class ParameterAssignmentCheck extends Check <nl> public static final String MSG _ KEY = " parameter . assignment " ; <nl> <nl> / * * Stack of methods ' parameters . * / <nl> - private final FastStack < Set < String > > parameterNamesStack = <nl> - FastStack . newInstance ( ) ; <nl> + private final Deque < Set < String > > parameterNamesStack = new ArrayDeque < > ( ) ; <nl> / * * Current set of perameters . * / <nl> private Set < String > parameterNames ; <nl> <nl> @ @ - 115 , 7 + 116 , 7 @ @ public final class ParameterAssignmentCheck extends Check <nl> { <nl> / / clear data <nl> parameterNamesStack . clear ( ) ; <nl> - parameterNames = null ; <nl> + parameterNames = Collections . emptySet ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ReturnCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ReturnCountCheck . java <nl> index 497e2b3 . . 75ba2e1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ReturnCountCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ReturnCountCheck . java <nl> @ @ - 19 , 9 + 19 , 10 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - import com . puppycrawl . tools . checkstyle . api . FastStack ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . checks . AbstractFormatCheck ; <nl> + import java . util . ArrayDeque ; <nl> + import java . util . Deque ; <nl> <nl> / * * <nl> * < p > <nl> @ @ - 49 , 7 + 50 , 7 @ @ public final class ReturnCountCheck extends AbstractFormatCheck <nl> private static final int DEFAULT _ MAX = 2 ; <nl> <nl> / * * Stack of method contexts . * / <nl> - private final FastStack < Context > contextStack = FastStack . newInstance ( ) ; <nl> + private final Deque < Context > contextStack = new ArrayDeque < > ( ) ; <nl> / * * Maximum allowed number of return stmts . * / <nl> private int max ; <nl> / * * Current method context . * / <nl> @ @ - 112 , 7 + 113 , 7 @ @ public final class ReturnCountCheck extends AbstractFormatCheck <nl> @ Override <nl> public void beginTree ( DetailAST rootAST ) <nl> { <nl> - context = null ; <nl> + context = new Context ( false ) ; <nl> contextStack . clear ( ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java <nl> index 8541242 . . 9a006f5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java <nl> @ @ - 22 , 11 + 22 , 11 @ @ import com . google . common . collect . ImmutableSet ; <nl> import com . google . common . collect . Sets ; <nl> import com . puppycrawl . tools . checkstyle . api . Check ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - import com . puppycrawl . tools . checkstyle . api . FastStack ; <nl> import com . puppycrawl . tools . checkstyle . api . FullIdent ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . checks . CheckUtils ; <nl> - <nl> + import java . util . ArrayDeque ; <nl> + import java . util . Deque ; <nl> import java . util . Set ; <nl> <nl> / * * <nl> @ @ - 68 , 9 + 68 , 9 @ @ public abstract class AbstractClassCouplingCheck extends Check <nl> private String packageName ; <nl> <nl> / * * Stack of contexts . * / <nl> - private final FastStack < Context > contextStack = FastStack . newInstance ( ) ; <nl> + private final Deque < Context > contextStack = new ArrayDeque < > ( ) ; <nl> / * * Current context . * / <nl> - private Context context ; <nl> + private Context context = new Context ( " " , 0 , 0 ) ; <nl> <nl> / * * <nl> * Creates new instance of the check . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ExecutableStatementCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ExecutableStatementCountCheck . java <nl> index 40c129e . . 86ec70b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ExecutableStatementCountCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ExecutableStatementCountCheck . java <nl> @ @ - 20 , 8 + 20 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . sizes ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . Check ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - import com . puppycrawl . tools . checkstyle . api . FastStack ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> + import java . util . ArrayDeque ; <nl> + import java . util . Deque ; <nl> <nl> / * * <nl> * Restricts the number of executable statements to a specified limit <nl> @ @ - 45 , 7 + 46 , 7 @ @ public final class ExecutableStatementCountCheck <nl> private int max ; <nl> <nl> / * * Stack of method contexts . * / <nl> - private final FastStack < Context > contextStack = FastStack . newInstance ( ) ; <nl> + private final Deque < Context > contextStack = new ArrayDeque < > ( ) ; <nl> <nl> / * * Current method context . * / <nl> private Context context ; <nl> @ @ - 107 , 7 + 108 , 7 @ @ public final class ExecutableStatementCountCheck <nl> @ Override <nl> public void beginTree ( DetailAST rootAST ) <nl> { <nl> - context = null ; <nl> + context = new Context ( null ) ; <nl> contextStack . clear ( ) ; <nl> } <nl> <nl> @ @ - 179 , 7 + 180 , 7 @ @ public final class ExecutableStatementCountCheck <nl> * / <nl> private void visitSlist ( DetailAST ast ) <nl> { <nl> - if ( context ! = null ) { <nl> + if ( context . getAST ( ) ! = null ) { <nl> / / find member AST for the statement list <nl> final DetailAST contextAST = context . getAST ( ) ; <nl> DetailAST parent = ast . getParent ( ) ;

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 9bf5d6e . . ffbad1b 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 227 , 7 + 227 , 7 @ @ 
 < dependency > 
 < groupId > info . picocli < / groupId > 
 < artifactId > picocli < / artifactId > 
 - < version > 3 . 8 . 0 < / version > 
 + < version > 3 . 8 . 2 < / version > 
 < / dependency > 
 < dependency > 
 < groupId > antlr < / groupId >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java 
 index 6382616 . . 6b63699 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java 
 @ @ - 21 , 8 + 21 , 10 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 import com . google . common . collect . Sets ; 
 import com . puppycrawl . tools . checkstyle . api . Check ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - import com . puppycrawl . tools . checkstyle . api . FastStack ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 + import java . util . ArrayDeque ; 
 + import java . util . Collections ; 
 + import java . util . Deque ; 
 import java . util . Set ; 
 
 / * * 
 @ @ - 49 , 8 + 51 , 7 @ @ public final class ParameterAssignmentCheck extends Check 
 public static final String MSG _ KEY = " parameter . assignment " ; 
 
 / * * Stack of methods ' parameters . * / 
 - private final FastStack < Set < String > > parameterNamesStack = 
 - FastStack . newInstance ( ) ; 
 + private final Deque < Set < String > > parameterNamesStack = new ArrayDeque < > ( ) ; 
 / * * Current set of perameters . * / 
 private Set < String > parameterNames ; 
 
 @ @ - 115 , 7 + 116 , 7 @ @ public final class ParameterAssignmentCheck extends Check 
 { 
 / / clear data 
 parameterNamesStack . clear ( ) ; 
 - parameterNames = null ; 
 + parameterNames = Collections . emptySet ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ReturnCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ReturnCountCheck . java 
 index 497e2b3 . . 75ba2e1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ReturnCountCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ReturnCountCheck . java 
 @ @ - 19 , 9 + 19 , 10 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - import com . puppycrawl . tools . checkstyle . api . FastStack ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . checks . AbstractFormatCheck ; 
 + import java . util . ArrayDeque ; 
 + import java . util . Deque ; 
 
 / * * 
 * < p > 
 @ @ - 49 , 7 + 50 , 7 @ @ public final class ReturnCountCheck extends AbstractFormatCheck 
 private static final int DEFAULT _ MAX = 2 ; 
 
 / * * Stack of method contexts . * / 
 - private final FastStack < Context > contextStack = FastStack . newInstance ( ) ; 
 + private final Deque < Context > contextStack = new ArrayDeque < > ( ) ; 
 / * * Maximum allowed number of return stmts . * / 
 private int max ; 
 / * * Current method context . * / 
 @ @ - 112 , 7 + 113 , 7 @ @ public final class ReturnCountCheck extends AbstractFormatCheck 
 @ Override 
 public void beginTree ( DetailAST rootAST ) 
 { 
 - context = null ; 
 + context = new Context ( false ) ; 
 contextStack . clear ( ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java 
 index 8541242 . . 9a006f5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java 
 @ @ - 22 , 11 + 22 , 11 @ @ import com . google . common . collect . ImmutableSet ; 
 import com . google . common . collect . Sets ; 
 import com . puppycrawl . tools . checkstyle . api . Check ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - import com . puppycrawl . tools . checkstyle . api . FastStack ; 
 import com . puppycrawl . tools . checkstyle . api . FullIdent ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . checks . CheckUtils ; 
 - 
 + import java . util . ArrayDeque ; 
 + import java . util . Deque ; 
 import java . util . Set ; 
 
 / * * 
 @ @ - 68 , 9 + 68 , 9 @ @ public abstract class AbstractClassCouplingCheck extends Check 
 private String packageName ; 
 
 / * * Stack of contexts . * / 
 - private final FastStack < Context > contextStack = FastStack . newInstance ( ) ; 
 + private final Deque < Context > contextStack = new ArrayDeque < > ( ) ; 
 / * * Current context . * / 
 - private Context context ; 
 + private Context context = new Context ( " " , 0 , 0 ) ; 
 
 / * * 
 * Creates new instance of the check . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ExecutableStatementCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ExecutableStatementCountCheck . java 
 index 40c129e . . 86ec70b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ExecutableStatementCountCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / ExecutableStatementCountCheck . java 
 @ @ - 20 , 8 + 20 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . sizes ; 
 
 import com . puppycrawl . tools . checkstyle . api . Check ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - import com . puppycrawl . tools . checkstyle . api . FastStack ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 + import java . util . ArrayDeque ; 
 + import java . util . Deque ; 
 
 / * * 
 * Restricts the number of executable statements to a specified limit 
 @ @ - 45 , 7 + 46 , 7 @ @ public final class ExecutableStatementCountCheck 
 private int max ; 
 
 / * * Stack of method contexts . * / 
 - private final FastStack < Context > contextStack = FastStack . newInstance ( ) ; 
 + private final Deque < Context > contextStack = new ArrayDeque < > ( ) ; 
 
 / * * Current method context . * / 
 private Context context ; 
 @ @ - 107 , 7 + 108 , 7 @ @ public final class ExecutableStatementCountCheck 
 @ Override 
 public void beginTree ( DetailAST rootAST ) 
 { 
 - context = null ; 
 + context = new Context ( null ) ; 
 contextStack . clear ( ) ; 
 } 
 
 @ @ - 179 , 7 + 180 , 7 @ @ public final class ExecutableStatementCountCheck 
 * / 
 private void visitSlist ( DetailAST ast ) 
 { 
 - if ( context ! = null ) { 
 + if ( context . getAST ( ) ! = null ) { 
 / / find member AST for the statement list 
 final DetailAST contextAST = context . getAST ( ) ; 
 DetailAST parent = ast . getParent ( ) ;
