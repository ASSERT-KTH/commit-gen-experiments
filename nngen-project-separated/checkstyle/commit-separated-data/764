BLEU SCORE: 0.033864985683445356

TEST MSG: Issue # 3907 : Added period at the end of first sentence
GENERATED MSG: Fix PMD violations from UseVarargs rule , issue # 999

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> index 304a5dc . . 3463868 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> @ @ - 32 , 8 + 32 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . utils . ModuleReflectionUtils ; <nl> <nl> / * * <nl> - * A factory for creating objects from package names and names , <nl> - * considering : <nl> + * A factory for creating objects from package names and names . <nl> + * Consider the below example for better understanding . <nl> * < ul > <nl> * < li > module name - name of java class that represents module ; < / li > <nl> * < li > module full name - fully qualifies name of java class that represents module ; < / li > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> index a246d76 . . 84dbf25 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> @ @ - 120 , 6 + 120 , 7 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe <nl> } <nl> <nl> / * * <nl> + * Sets classLoader to load class . <nl> * @ param classLoader class loader to resolve classes with . <nl> * / <nl> public void setClassLoader ( ClassLoader classLoader ) { <nl> @ @ - 388 , 7 + 389 , 7 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe <nl> } <nl> <nl> / * * <nl> - * Method returns list of checks <nl> + * Method returns list of checks . <nl> * <nl> * @ param ast <nl> * the node to notify for <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> index a3b83b9 . . d5f66bb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> @ @ - 186 , 6 + 186 , 7 @ @ public class XMLLogger <nl> } <nl> <nl> / * * <nl> + * Finds whether the given argument is character or entity reference . <nl> * @ param ent the possible entity to look for . <nl> * @ return whether the given argument a character or entity reference <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java <nl> index be09fa9 . . 294c73a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java <nl> @ @ - 101 , 6 + 101 , 7 @ @ public abstract class AbstractFileSetCheck <nl> } <nl> <nl> / * * <nl> + * Makes copy of file extensions and returns them . <nl> * @ return file extensions that identify the files that pass the <nl> * filter of this FileSetCheck . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java <nl> index 0385b47 . . acad045 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java <nl> @ @ - 78 , 6 + 78 , 7 @ @ public final class AuditEvent <nl> } <nl> <nl> / * * <nl> + * Returns name of file being audited . <nl> * @ return the file name currently being audited or null if there is <nl> * no relation to a file . <nl> * / <nl> @ @ - 123 , 6 + 124 , 7 @ @ public final class AuditEvent <nl> } <nl> <nl> / * * <nl> + * Returns id of module . <nl> * @ return the identifier of the module that generated the event . Can return <nl> * null . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java <nl> index 16b2013 . . 568db2d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java <nl> @ @ - 334 , 6 + 334 , 7 @ @ public final class DetailAST extends CommonASTWithHiddenTokens { <nl> } <nl> <nl> / * * <nl> + * Returns token type with branch . <nl> * @ return the token types that occur in the branch as a sorted set . <nl> * / <nl> private BitSet getBranchTokenTypes ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> index 50f620b . . 87169ef 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> @ @ - 332 , 6 + 332 , 7 @ @ public final class LocalizedMessage <nl> } <nl> <nl> / * * <nl> + * Returns id of module . <nl> * @ return the module identifier . <nl> * / <nl> public String getModuleId ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java <nl> index 66dd905 . . 01c9379 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java <nl> @ @ - 48 , 6 + 48 , 7 @ @ public enum Scope { <nl> } <nl> <nl> / * * <nl> + * Returns name of severity level . <nl> * @ return the name of this severity level . <nl> * / <nl> public String getName ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java <nl> index e16503a . . e060dfc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java <nl> @ @ - 50 , 6 + 50 , 7 @ @ public enum SeverityLevel { <nl> } <nl> <nl> / * * <nl> + * Returns name of severity level . <nl> * @ return the name of this severity level . <nl> * / <nl> public String getName ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> index 1576af7 . . 7682992 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> @ @ - 209 , 6 + 209 , 7 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns the current tree ' s ClassResolver . <nl> * @ return { @ code ClassResolver } for current tree . <nl> * / <nl> private ClassResolver getClassResolver ( ) { <nl> @ @ - 413 , 6 + 414 , 7 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns class associated with that object . <nl> * @ return { @ code Class } associated with an object . <nl> * / <nl> / / - @ cs [ ForbidWildcardAsReturnType ] The class is deprecated and will be removed soon . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> index 54453c1 . . f7ac3f5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> @ @ - 184 , 6 + 184 , 7 @ @ public class ClassResolver { <nl> } <nl> <nl> / * * <nl> + * Checks if the given class name can be loaded . <nl> * @ param name name of the class to check <nl> * @ return whether a specified class is loadable with safeLoad ( ) . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / FileContentsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / FileContentsHolder . java <nl> index e82fb70 . . 073d5ee 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / FileContentsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / FileContentsHolder . java <nl> @ @ - 36 , 6 + 36 , 7 @ @ public class FileContentsHolder extends AbstractCheck { <nl> private static FileContents currentFileContents ; <nl> <nl> / * * <nl> + * Returns content of current file . <nl> * @ return the current file contents . <nl> * / <nl> public static FileContents getCurrentFileContents ( ) { <nl> @ @ - 43 , 6 + 44 , 7 @ @ public class FileContentsHolder extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns content of current file . <nl> * @ return the current file contents . <nl> * @ deprecated use getCurrentFileContents ( ) instead . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java <nl> index 8b03ced . . 4f1b885 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java <nl> @ @ - 80 , 6 + 80 , 7 @ @ public enum LineSeparatorOption { <nl> } <nl> <nl> / * * <nl> + * Returns length of file separator in bytes . <nl> * @ return the length of the file separator in bytes , <nl> * e . g . 1 for CR , 2 for CRLF , . . . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> index 4c8bcb7 . . d973149 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> @ @ - 166 , 6 + 166 , 7 @ @ public class EmptyBlockCheck <nl> } <nl> <nl> / * * <nl> + * Checks if SLIST token contains any text . <nl> * @ param slistAST a { @ code DetailAST } value <nl> * @ return whether the SLIST token contains any text . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> index b2ddca5 . . d63d573 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> @ @ - 215 , 7 + 215 , 7 @ @ public class NeedBracesCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * Checks if ast is default in annotation <nl> + * Checks if ast is the default token of an annotation field . <nl> * @ param ast ast to test . <nl> * @ return true if current ast is default and it is part of annotation . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> index 7f18bee . . 6b89662 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> @ @ - 190 , 7 + 190 , 7 @ @ public class EqualsAvoidNullCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * Determine whether SLIST begins static or non - static block and <nl> + * Determine whether SLIST begins static or non - static block . <nl> * @ param ast SLIST ast . <nl> * / <nl> private void leaveSlist ( DetailAST ast ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> index d780a77 . . 2f46c31 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> @ @ - 137 , 7 + 137 , 7 @ @ public class ExplicitInitializationCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * Checks for cases that should be skipped : no assignment , local variable , final variables <nl> + * Checks for cases that should be skipped : no assignment , local variable , final variables . <nl> * @ param ast Variable def AST <nl> * @ return true is that is a case that need to be skipped . <nl> * / <nl> @ @ - 185 , 6 + 185 , 8 @ @ public class ExplicitInitializationCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Checks if given node contains numeric constant for zero . <nl> + * <nl> * @ param expr node to check . <nl> * @ return true if given node contains numeric constant for zero . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> index dba226f . . c07eabc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> @ @ - 394 , 7 + 394 , 7 @ @ public class HiddenFieldCheck <nl> * ( default behavior ) or return type is name of the class in which <nl> * such method is declared ( allowed only if <nl> * { @ link # setSetterCanReturnItsClass ( boolean ) } is called with <nl> - * value < em > true < / em > ) <nl> + * value < em > true < / em > ) . <nl> * <nl> * @ param ast the AST to check . <nl> * @ param name the name of ast . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java <nl> index 02f3ff7 . . f809edb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java <nl> @ @ - 70 , 7 + 70 , 7 @ @ public class IllegalInstantiationCheck <nl> * / <nl> public static final String MSG _ KEY = " instantiation . avoid " ; <nl> <nl> - / * * { @ link java . lang } package as string * / <nl> + / * * { @ link java . lang } package as string . * / <nl> private static final String JAVA _ LANG = " java . lang . " ; <nl> <nl> / * * The imports for the file . * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> index 9ad6c9f . . fd0dd1e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> @ @ - 325 , 6 + 325 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns true if given class name is one of illegal classes or else false . <nl> * @ param className class name to check . <nl> * @ return true if given class name is one of illegal classes <nl> * or if it matches to abstract class names pattern . <nl> @ @ - 400 , 6 + 401 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns true if method has to be checked or false . <nl> * @ param ast method def to check . <nl> * @ return true if we should check this method . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java <nl> index 6b1dca6 . . 16f3af6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java <nl> @ @ - 89 , 6 + 89 , 7 @ @ public class HideUtilityClassConstructorCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns true if given class is abstract or false . <nl> * @ param ast class definition for check . <nl> * @ return true if a given class declared as abstract . <nl> * / <nl> @ @ - 98 , 6 + 99 , 7 @ @ public class HideUtilityClassConstructorCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns true if given class is static or false . <nl> * @ param ast class definition for check . <nl> * @ return true if a given class declared as static . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java <nl> index 27db8ca . . bc82d4c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java <nl> @ @ - 52 , 6 + 52 , 7 @ @ public class HeaderCheck extends AbstractHeaderCheck { <nl> private int [ ] ignoreLines = EMPTY _ INT _ ARRAY ; <nl> <nl> / * * <nl> + * Returns true if lineNo is header lines or false . <nl> * @ param lineNo a line number <nl> * @ return if { @ code lineNo } is one of the ignored header lines . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheck . java <nl> index d447f7c . . c659aac 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheck . java <nl> @ @ - 137 , 6 + 137 , 7 @ @ public class RegexpHeaderCheck extends AbstractHeaderCheck { <nl> } <nl> <nl> / * * <nl> + * Returns true if line is multiline header lines or false . <nl> * @ param lineNo a line number <nl> * @ return if { @ code lineNo } is one of the repeat header lines . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AbstractImportRule . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AbstractImportRule . java <nl> index e38548a . . c851ef5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AbstractImportRule . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AbstractImportRule . java <nl> @ @ - 58 , 6 + 58 , 7 @ @ abstract class AbstractImportRule { <nl> public abstract AccessResult verifyImport ( String forImport ) ; <nl> <nl> / * * <nl> + * Return true if the guard is to only be applied locally or false . <nl> * @ return whether the guard is to only be applied locally . <nl> * / <nl> public boolean isLocalOnly ( ) { <nl> @ @ - 65 , 6 + 66 , 7 @ @ abstract class AbstractImportRule { <nl> } <nl> <nl> / * * <nl> + * Return true if the name is to be interpreted as a regular expression or false . <nl> * @ return whether the name is to be interpreted as a regular expression . <nl> * / <nl> protected boolean isRegExp ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> index 05ee9fe . . 9b2992c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> @ @ - 779 , 7 + 779 , 7 @ @ public class CustomImportOrderCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * Extracts defined amount of domains from the left side of package / import identifier <nl> + * Extracts defined amount of domains from the left side of package / import identifier . <nl> * @ param firstPackageDomainsCount <nl> * number of first package domains . <nl> * @ param packageFullPath <nl> @ @ - 819 , 6 + 819 , 7 @ @ public class CustomImportOrderCheck extends AbstractCheck { <nl> private final boolean staticImport ; <nl> <nl> / * * <nl> + * Initialise importFullPath , lineNumber , importGroup , staticImport . <nl> * @ param importFullPath <nl> * import full path . <nl> * @ param lineNumber <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java <nl> index 26c53a5 . . 496b4fc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java <nl> @ @ - 327 , 7 + 327 , 7 @ @ class ImportControl { <nl> } <nl> <nl> / * * <nl> - * Check for equality of this with pkg <nl> + * Check for equality of this with pkg . <nl> * @ param pkg the package to compare with . <nl> * @ return if it matches . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> index b3f674b . . c9f032c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> @ @ - 240 , 6 + 240 , 7 @ @ final class ImportControlLoader extends AbstractLoader { <nl> } <nl> <nl> / * * <nl> + * Returns root ImportControl . <nl> * @ return the root { @ link ImportControl } object loaded . <nl> * / <nl> private ImportControl getRoot ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java <nl> index 9215454 . . 23c55bc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java <nl> @ @ - 105 , 6 + 105 , 10 @ @ public class ArrayInitHandler extends BlockParentHandler { <nl> } <nl> <nl> / * * <nl> + * Returns column number of first non - blank char after <nl> + * specified column on specified line or - 1 if <nl> + * such char doesn ' t exist . <nl> + * <nl> * @ param lineNo number of line on which we search <nl> * @ param columnNo number of column after which we search <nl> * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java <nl> index e3326d6 . . 09ea87c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java <nl> @ @ - 72 , 6 + 72 , 8 @ @ public class IndentLevel { <nl> } <nl> <nl> / * * <nl> + * Returns true if indent less then minimal of <nl> + * acceptable indentation levels , false otherwise . <nl> * @ param indent indentation to check . <nl> * @ return true if { @ code indent } less then minimal of <nl> * acceptable indentation levels , false otherwise . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SynchronizedHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SynchronizedHandler . java <nl> index 9148ff8 . . a25375c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SynchronizedHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SynchronizedHandler . java <nl> @ @ - 70 , 7 + 70 , 7 @ @ public class SynchronizedHandler extends BlockParentHandler { <nl> } <nl> <nl> / * * <nl> - * Checks if given synchronized is modifier of method * <nl> + * Checks if given synchronized is modifier of method . <nl> * @ param ast synchronized ( TokenTypes . LITERAL _ SYNCHRONIZED ) to check <nl> * @ return true if synchronized only modifies method <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTag . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTag . java <nl> index e01434a . . df51319 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTag . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTag . java <nl> @ @ - 66 , 6 + 66 , 7 @ @ public class JavadocTag { <nl> } <nl> <nl> / * * <nl> + * Returns first argument . <nl> * @ return the first argument . null if not set . <nl> * / <nl> public String getFirstArg ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> index 6b4d4bb . . 8b484dc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> @ @ - 109 , 7 + 109 , 7 @ @ class TagParser { <nl> } <nl> <nl> / * * <nl> - * Parses the tag and return position after it <nl> + * Parses the tag and return position after it . <nl> * @ param text the source line to parse . <nl> * @ param lineNo the source line number . <nl> * @ param nLines line length <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java <nl> index 03f522d . . 4339007 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java <nl> @ @ - 100 , 6 + 100 , 7 @ @ public abstract class AbstractClassCouplingCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns message key we use for log violations . <nl> * @ return message key we use for log violations . <nl> * / <nl> protected abstract String getLogMessageId ( ) ; <nl> @ @ - 110 , 6 + 111 , 7 @ @ public abstract class AbstractClassCouplingCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns allowed complexity . <nl> * @ return allowed complexity . <nl> * / <nl> public final int getMax ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> index 68e108f . . 34552c5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> @ @ - 411 , 7 + 411 , 7 @ @ public class RedundantModifierCheck <nl> } <nl> <nl> / * * <nl> - * Checks if method definition is annotated with <nl> + * Checks if method definition is annotated with . <nl> * < a href = " https : / / docs . oracle . com / javase / 8 / docs / api / java / lang / SafeVarargs . html " > <nl> * SafeVarargs < / a > annotation <nl> * @ param methodDef method definition node <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> index 4dd58d6 . . 8cc7669 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> @ @ - 129 , 6 + 129 , 7 @ @ public final class AbstractClassNameCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Checks if declared class is abstract or not . <nl> * @ param ast class definition for check . <nl> * @ return true if a given class declared as abstract . <nl> * / <nl> @ @ - 140 , 6 + 141 , 7 @ @ public final class AbstractClassNameCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Returns true if class name matches format of abstract class names . <nl> * @ param className class name for check . <nl> * @ return true if class name matches format of abstract class names . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java <nl> index 7d0ca15 . . c432148 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java <nl> @ @ - 101 , 6 + 101 , 7 @ @ public class AnonInnerLengthCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Sets maximum length of an anonymous inner class . <nl> * @ param length the maximum length of an anonymous inner class . <nl> * / <nl> public void setMax ( int length ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java <nl> index 0ff4916 . . 1c9b1d5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java <nl> @ @ - 260 , 6 + 260 , 7 @ @ public final class MethodCountCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Fetches total number of methods . <nl> * @ return the total number of methods . <nl> * / <nl> private int getTotal ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheck . java <nl> index efb25ac . . 168f080 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheck . java <nl> @ @ - 123 , 6 + 123 , 7 @ @ public class MethodLengthCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Sets maximum length of a method . <nl> * @ param length the maximum length of a method . <nl> * / <nl> public void setMax ( int length ) { <nl> @ @ - 130 , 6 + 131 , 7 @ @ public class MethodLengthCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Sets countEmpty . <nl> * @ param countEmpty whether to count empty and single line comments <nl> * of the form / / . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheck . java <nl> index e9a710e . . bd5bc60 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheck . java <nl> @ @ - 213 , 6 + 213 , 7 @ @ public class ParenPadCheck extends AbstractParenPadCheck { <nl> } <nl> <nl> / * * <nl> + * Returns array of acceptable tokens . <nl> * @ return acceptableTokens . <nl> * / <nl> private static int [ ] makeAcceptableTokens ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> index 130a549 . . fa434c0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> @ @ - 588 , 7 + 588 , 7 @ @ public class WhitespaceAroundCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * <nl> + * Checks if loop is empty . <nl> * @ param ast ast the { @ code DetailAST } to test . <nl> * @ param parentType the token type of { @ code ast } ' s parent . <nl> * @ return { @ code true } if { @ code ast } makes up part of an <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> index e3c6af7 . . 7ff3a58 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> @ @ - 126 , 6 + 126 , 7 @ @ public class SuppressWithNearbyCommentFilter <nl> } <nl> <nl> / * * <nl> + * Returns FileContents for this filter . <nl> * @ return the FileContents for this filter . <nl> * / <nl> public FileContents getFileContents ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> index f703ac1 . . 50e0e54 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> @ @ - 122 , 6 + 122 , 7 @ @ public class SuppressionCommentFilter <nl> } <nl> <nl> / * * <nl> + * Returns FileContents for this filter . <nl> * @ return the FileContents for this filter . <nl> * / <nl> public FileContents getFileContents ( ) { <nl> @ @ - 355 , 6 + 356 , 7 @ @ public class SuppressionCommentFilter <nl> } <nl> <nl> / * * <nl> + * Returns line number of the tag in the source file . <nl> * @ return the line number of the tag in the source file . <nl> * / <nl> public int getLine ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java <nl> index 53c4bfd . . a34ce23 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java <nl> @ @ - 64 , 6 + 64 , 7 @ @ public class CodeSelectorPresentation { <nl> } <nl> <nl> / * * <nl> + * Returns selection start position . <nl> * @ return selection start position . <nl> * / <nl> public int getSelectionStart ( ) { <nl> @ @ - 71 , 6 + 72 , 7 @ @ public class CodeSelectorPresentation { <nl> } <nl> <nl> / * * <nl> + * Returns selection end position . <nl> * @ return selection end position . <nl> * / <nl> public int getSelectionEnd ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ListToTreeSelectionModelWrapper . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ListToTreeSelectionModelWrapper . java <nl> index 9b86563 . . d07d00a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ListToTreeSelectionModelWrapper . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ListToTreeSelectionModelWrapper . java <nl> @ @ - 39 , 6 + 39 , 7 @ @ class ListToTreeSelectionModelWrapper extends DefaultTreeSelectionModel { <nl> private boolean updatingListSelectionModel ; <nl> <nl> / * * <nl> + * Constructor to initialise treeTable . <nl> * @ param jTreeTable TreeTable to perform updates on . <nl> * / <nl> ListToTreeSelectionModelWrapper ( TreeTable jTreeTable ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> index 2fa25f2 . . 18609e8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> @ @ - 126 , 6 + 126 , 7 @ @ public class MainFrameModel { <nl> } <nl> <nl> / * * <nl> + * Returns title for the main frame . <nl> * @ return title for the main frame . <nl> * / <nl> public String getTitle ( ) { <nl> @ @ - 133 , 6 + 134 , 7 @ @ public class MainFrameModel { <nl> } <nl> <nl> / * * <nl> + * Returns true if the reload action is enabled , false otherwise . <nl> * @ return true if the reload action is enabled . <nl> * / <nl> public boolean isReloadActionEnabled ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java <nl> index 3083b5f . . 6d0b624 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java <nl> @ @ - 43 , 6 + 43 , 7 @ @ public class ParseTreeTableModel implements TreeModel { <nl> private final EventListenerList listenerList = new EventListenerList ( ) ; <nl> <nl> / * * <nl> + * Initialise pModel . <nl> * @ param parseTree DetailAST parse tree . <nl> * / <nl> public ParseTreeTableModel ( DetailAST parseTree ) { <nl> @ @ - 71 , 6 + 72 , 7 @ @ public class ParseTreeTableModel implements TreeModel { <nl> } <nl> <nl> / * * <nl> + * Returns number of available column . <nl> * @ return the number of available column . <nl> * / <nl> public int getColumnCount ( ) { <nl> @ @ - 78 , 6 + 80 , 7 @ @ public class ParseTreeTableModel implements TreeModel { <nl> } <nl> <nl> / * * <nl> + * Returns column name of specified column number . <nl> * @ param column the column number <nl> * @ return the name for column number { @ code column } . <nl> * / <nl> @ @ - 86 , 6 + 89 , 7 @ @ public class ParseTreeTableModel implements TreeModel { <nl> } <nl> <nl> / * * <nl> + * Returns type of specified column number . <nl> * @ param column the column number <nl> * @ return the type for column number { @ code column } . <nl> * / <nl> @ @ - 96 , 6 + 100 , 7 @ @ public class ParseTreeTableModel implements TreeModel { <nl> } <nl> <nl> / * * <nl> + * Returns the value to be displayed for node at column number . <nl> * @ param node the node <nl> * @ param column the column number <nl> * @ return the value to be displayed for node { @ code node } , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java <nl> index 820eaad . . c94f6f1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java <nl> @ @ - 63 , 6 + 63 , 7 @ @ public class ParseTreeTablePresentation { <nl> private ParseMode parseMode ; <nl> <nl> / * * <nl> + * Constructor initialise root node . <nl> * @ param parseTree DetailAST parse tree . <nl> * / <nl> public ParseTreeTablePresentation ( DetailAST parseTree ) { <nl> @ @ - 87 , 6 + 88 , 7 @ @ public class ParseTreeTablePresentation { <nl> } <nl> <nl> / * * <nl> + * Returns number of available columns . <nl> * @ return the number of available columns . <nl> * / <nl> public int getColumnCount ( ) { <nl> @ @ - 94 , 6 + 96 , 7 @ @ public class ParseTreeTablePresentation { <nl> } <nl> <nl> / * * <nl> + * Returns name for specified column number . <nl> * @ param column the column number <nl> * @ return the name for column number { @ code column } . <nl> * / <nl> @ @ - 102 , 6 + 105 , 7 @ @ public class ParseTreeTablePresentation { <nl> } <nl> <nl> / * * <nl> + * Returns type of specified column number . <nl> * @ param column the column number <nl> * @ return the type for column number { @ code column } . <nl> * / <nl> @ @ - 133 , 6 + 137 , 7 @ @ public class ParseTreeTablePresentation { <nl> } <nl> <nl> / * * <nl> + * Returns the value to be displayed for node at column number . <nl> * @ param node the node <nl> * @ param column the column number <nl> * @ return the value to be displayed for node { @ code node } , at column number { @ code column } . <nl> @ @ - 197 , 6 + 202 , 7 @ @ public class ParseTreeTablePresentation { <nl> } <nl> <nl> / * * <nl> + * Returns value of root . <nl> * @ return the root . <nl> * / <nl> public Object getRoot ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java <nl> index d6847e2 . . 75a362e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java <nl> @ @ - 214 , 6 + 214 , 7 @ @ public class TreeTable extends JTable { <nl> } <nl> <nl> / * * <nl> + * Returns tree . <nl> * @ return the tree that is being shared between the model . <nl> * / <nl> public JTree getTree ( ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java <nl> index e233be9 . . ad40f18 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java <nl> @ @ - 50 , 6 + 50 , 7 @ @ public class TreeTableModelAdapter extends AbstractTableModel { <nl> private final transient ParseTreeTableModel treeTableModel ; <nl> <nl> / * * <nl> + * Initialise tree and treeTableModel class attributes . <nl> * @ param treeTableModel Tree table model . <nl> * @ param tree JTree component . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CheckUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CheckUtils . java <nl> index fe05498 . . 15946cd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CheckUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CheckUtils . java <nl> @ @ - 150 , 6 + 150 , 7 @ @ public final class CheckUtils { <nl> } <nl> <nl> / * * <nl> + * Returns FullIndent for given type . <nl> * @ param typeAST a type node ( no array ) <nl> * @ return { @ code FullIdent } for given type . <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java <nl> index 82ac3d2 . . 66345c7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java <nl> @ @ - 226 , 6 + 226 , 7 @ @ public final class CommonUtils { <nl> } <nl> <nl> / * * <nl> + * Returns base class name from qualified name . <nl> * @ param type <nl> * the fully qualified name . Cannot be null <nl> * @ return the base class name from a fully qualified name <nl> @ @ - 326 , 6 + 327 , 7 @ @ public final class CommonUtils { <nl> } <nl> <nl> / * * <nl> + * Returns new instance of a class . <nl> * @ param constructor <nl> * to invoke <nl> * @ param parameters
NEAREST DIFF (one line): diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 0dd0b3c . . 3a42cba 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 60 , 7 + 60 , 9 @ @ <nl> < rule ref = " rulesets / java / controversial . xml " > <nl> < ! - - calling super ( ) is completely pointless , no matter if class inherits anything or not ; it is meaningful only if you do not call implicit constructor of base class - - > <nl> < exclude name = " CallSuperInConstructor " / > <nl> + < ! - - We reuse Check instances between java files , we need to clear state of class in beginTree ( ) methods - - > <nl> < exclude name = " NullAssignment " / > <nl> + < ! - - it is possible only in functional languages and fanatically - pristine code , withot aditional option that are done at ReturnCountExtendedCheck it is not good rule - - > <nl> < exclude name = " OnlyOneReturn " / > <nl> < exclude name = " AssignmentInOperand " / > <nl> < exclude name = " AtLeastOneConstructor " / >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 index 304a5dc . . 3463868 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 @ @ - 32 , 8 + 32 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . utils . ModuleReflectionUtils ; 
 
 / * * 
 - * A factory for creating objects from package names and names , 
 - * considering : 
 + * A factory for creating objects from package names and names . 
 + * Consider the below example for better understanding . 
 * < ul > 
 * < li > module name - name of java class that represents module ; < / li > 
 * < li > module full name - fully qualifies name of java class that represents module ; < / li > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 index a246d76 . . 84dbf25 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 @ @ - 120 , 6 + 120 , 7 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe 
 } 
 
 / * * 
 + * Sets classLoader to load class . 
 * @ param classLoader class loader to resolve classes with . 
 * / 
 public void setClassLoader ( ClassLoader classLoader ) { 
 @ @ - 388 , 7 + 389 , 7 @ @ public final class TreeWalker extends AbstractFileSetCheck implements ExternalRe 
 } 
 
 / * * 
 - * Method returns list of checks 
 + * Method returns list of checks . 
 * 
 * @ param ast 
 * the node to notify for 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 index a3b83b9 . . d5f66bb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 @ @ - 186 , 6 + 186 , 7 @ @ public class XMLLogger 
 } 
 
 / * * 
 + * Finds whether the given argument is character or entity reference . 
 * @ param ent the possible entity to look for . 
 * @ return whether the given argument a character or entity reference 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java 
 index be09fa9 . . 294c73a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractFileSetCheck . java 
 @ @ - 101 , 6 + 101 , 7 @ @ public abstract class AbstractFileSetCheck 
 } 
 
 / * * 
 + * Makes copy of file extensions and returns them . 
 * @ return file extensions that identify the files that pass the 
 * filter of this FileSetCheck . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java 
 index 0385b47 . . acad045 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java 
 @ @ - 78 , 6 + 78 , 7 @ @ public final class AuditEvent 
 } 
 
 / * * 
 + * Returns name of file being audited . 
 * @ return the file name currently being audited or null if there is 
 * no relation to a file . 
 * / 
 @ @ - 123 , 6 + 124 , 7 @ @ public final class AuditEvent 
 } 
 
 / * * 
 + * Returns id of module . 
 * @ return the identifier of the module that generated the event . Can return 
 * null . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java 
 index 16b2013 . . 568db2d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java 
 @ @ - 334 , 6 + 334 , 7 @ @ public final class DetailAST extends CommonASTWithHiddenTokens { 
 } 
 
 / * * 
 + * Returns token type with branch . 
 * @ return the token types that occur in the branch as a sorted set . 
 * / 
 private BitSet getBranchTokenTypes ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 index 50f620b . . 87169ef 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 @ @ - 332 , 6 + 332 , 7 @ @ public final class LocalizedMessage 
 } 
 
 / * * 
 + * Returns id of module . 
 * @ return the module identifier . 
 * / 
 public String getModuleId ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java 
 index 66dd905 . . 01c9379 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / Scope . java 
 @ @ - 48 , 6 + 48 , 7 @ @ public enum Scope { 
 } 
 
 / * * 
 + * Returns name of severity level . 
 * @ return the name of this severity level . 
 * / 
 public String getName ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java 
 index e16503a . . e060dfc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevel . java 
 @ @ - 50 , 6 + 50 , 7 @ @ public enum SeverityLevel { 
 } 
 
 / * * 
 + * Returns name of severity level . 
 * @ return the name of this severity level . 
 * / 
 public String getName ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 index 1576af7 . . 7682992 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 @ @ - 209 , 6 + 209 , 7 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns the current tree ' s ClassResolver . 
 * @ return { @ code ClassResolver } for current tree . 
 * / 
 private ClassResolver getClassResolver ( ) { 
 @ @ - 413 , 6 + 414 , 7 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns class associated with that object . 
 * @ return { @ code Class } associated with an object . 
 * / 
 / / - @ cs [ ForbidWildcardAsReturnType ] The class is deprecated and will be removed soon . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 index 54453c1 . . f7ac3f5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 @ @ - 184 , 6 + 184 , 7 @ @ public class ClassResolver { 
 } 
 
 / * * 
 + * Checks if the given class name can be loaded . 
 * @ param name name of the class to check 
 * @ return whether a specified class is loadable with safeLoad ( ) . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / FileContentsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / FileContentsHolder . java 
 index e82fb70 . . 073d5ee 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / FileContentsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / FileContentsHolder . java 
 @ @ - 36 , 6 + 36 , 7 @ @ public class FileContentsHolder extends AbstractCheck { 
 private static FileContents currentFileContents ; 
 
 / * * 
 + * Returns content of current file . 
 * @ return the current file contents . 
 * / 
 public static FileContents getCurrentFileContents ( ) { 
 @ @ - 43 , 6 + 44 , 7 @ @ public class FileContentsHolder extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns content of current file . 
 * @ return the current file contents . 
 * @ deprecated use getCurrentFileContents ( ) instead . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java 
 index 8b03ced . . 4f1b885 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / LineSeparatorOption . java 
 @ @ - 80 , 6 + 80 , 7 @ @ public enum LineSeparatorOption { 
 } 
 
 / * * 
 + * Returns length of file separator in bytes . 
 * @ return the length of the file separator in bytes , 
 * e . g . 1 for CR , 2 for CRLF , . . . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 index 4c8bcb7 . . d973149 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 @ @ - 166 , 6 + 166 , 7 @ @ public class EmptyBlockCheck 
 } 
 
 / * * 
 + * Checks if SLIST token contains any text . 
 * @ param slistAST a { @ code DetailAST } value 
 * @ return whether the SLIST token contains any text . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 index b2ddca5 . . d63d573 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 @ @ - 215 , 7 + 215 , 7 @ @ public class NeedBracesCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * Checks if ast is default in annotation 
 + * Checks if ast is the default token of an annotation field . 
 * @ param ast ast to test . 
 * @ return true if current ast is default and it is part of annotation . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 index 7f18bee . . 6b89662 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 @ @ - 190 , 7 + 190 , 7 @ @ public class EqualsAvoidNullCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * Determine whether SLIST begins static or non - static block and 
 + * Determine whether SLIST begins static or non - static block . 
 * @ param ast SLIST ast . 
 * / 
 private void leaveSlist ( DetailAST ast ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 index d780a77 . . 2f46c31 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 @ @ - 137 , 7 + 137 , 7 @ @ public class ExplicitInitializationCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * Checks for cases that should be skipped : no assignment , local variable , final variables 
 + * Checks for cases that should be skipped : no assignment , local variable , final variables . 
 * @ param ast Variable def AST 
 * @ return true is that is a case that need to be skipped . 
 * / 
 @ @ - 185 , 6 + 185 , 8 @ @ public class ExplicitInitializationCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Checks if given node contains numeric constant for zero . 
 + * 
 * @ param expr node to check . 
 * @ return true if given node contains numeric constant for zero . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 index dba226f . . c07eabc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 @ @ - 394 , 7 + 394 , 7 @ @ public class HiddenFieldCheck 
 * ( default behavior ) or return type is name of the class in which 
 * such method is declared ( allowed only if 
 * { @ link # setSetterCanReturnItsClass ( boolean ) } is called with 
 - * value < em > true < / em > ) 
 + * value < em > true < / em > ) . 
 * 
 * @ param ast the AST to check . 
 * @ param name the name of ast . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java 
 index 02f3ff7 . . f809edb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheck . java 
 @ @ - 70 , 7 + 70 , 7 @ @ public class IllegalInstantiationCheck 
 * / 
 public static final String MSG _ KEY = " instantiation . avoid " ; 
 
 - / * * { @ link java . lang } package as string * / 
 + / * * { @ link java . lang } package as string . * / 
 private static final String JAVA _ LANG = " java . lang . " ; 
 
 / * * The imports for the file . * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 index 9ad6c9f . . fd0dd1e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 @ @ - 325 , 6 + 325 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns true if given class name is one of illegal classes or else false . 
 * @ param className class name to check . 
 * @ return true if given class name is one of illegal classes 
 * or if it matches to abstract class names pattern . 
 @ @ - 400 , 6 + 401 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns true if method has to be checked or false . 
 * @ param ast method def to check . 
 * @ return true if we should check this method . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java 
 index 6b1dca6 . . 16f3af6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java 
 @ @ - 89 , 6 + 89 , 7 @ @ public class HideUtilityClassConstructorCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns true if given class is abstract or false . 
 * @ param ast class definition for check . 
 * @ return true if a given class declared as abstract . 
 * / 
 @ @ - 98 , 6 + 99 , 7 @ @ public class HideUtilityClassConstructorCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns true if given class is static or false . 
 * @ param ast class definition for check . 
 * @ return true if a given class declared as static . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java 
 index 27db8ca . . bc82d4c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java 
 @ @ - 52 , 6 + 52 , 7 @ @ public class HeaderCheck extends AbstractHeaderCheck { 
 private int [ ] ignoreLines = EMPTY _ INT _ ARRAY ; 
 
 / * * 
 + * Returns true if lineNo is header lines or false . 
 * @ param lineNo a line number 
 * @ return if { @ code lineNo } is one of the ignored header lines . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheck . java 
 index d447f7c . . c659aac 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheck . java 
 @ @ - 137 , 6 + 137 , 7 @ @ public class RegexpHeaderCheck extends AbstractHeaderCheck { 
 } 
 
 / * * 
 + * Returns true if line is multiline header lines or false . 
 * @ param lineNo a line number 
 * @ return if { @ code lineNo } is one of the repeat header lines . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AbstractImportRule . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AbstractImportRule . java 
 index e38548a . . c851ef5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AbstractImportRule . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AbstractImportRule . java 
 @ @ - 58 , 6 + 58 , 7 @ @ abstract class AbstractImportRule { 
 public abstract AccessResult verifyImport ( String forImport ) ; 
 
 / * * 
 + * Return true if the guard is to only be applied locally or false . 
 * @ return whether the guard is to only be applied locally . 
 * / 
 public boolean isLocalOnly ( ) { 
 @ @ - 65 , 6 + 66 , 7 @ @ abstract class AbstractImportRule { 
 } 
 
 / * * 
 + * Return true if the name is to be interpreted as a regular expression or false . 
 * @ return whether the name is to be interpreted as a regular expression . 
 * / 
 protected boolean isRegExp ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 index 05ee9fe . . 9b2992c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 @ @ - 779 , 7 + 779 , 7 @ @ public class CustomImportOrderCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * Extracts defined amount of domains from the left side of package / import identifier 
 + * Extracts defined amount of domains from the left side of package / import identifier . 
 * @ param firstPackageDomainsCount 
 * number of first package domains . 
 * @ param packageFullPath 
 @ @ - 819 , 6 + 819 , 7 @ @ public class CustomImportOrderCheck extends AbstractCheck { 
 private final boolean staticImport ; 
 
 / * * 
 + * Initialise importFullPath , lineNumber , importGroup , staticImport . 
 * @ param importFullPath 
 * import full path . 
 * @ param lineNumber 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java 
 index 26c53a5 . . 496b4fc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java 
 @ @ - 327 , 7 + 327 , 7 @ @ class ImportControl { 
 } 
 
 / * * 
 - * Check for equality of this with pkg 
 + * Check for equality of this with pkg . 
 * @ param pkg the package to compare with . 
 * @ return if it matches . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 index b3f674b . . c9f032c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 @ @ - 240 , 6 + 240 , 7 @ @ final class ImportControlLoader extends AbstractLoader { 
 } 
 
 / * * 
 + * Returns root ImportControl . 
 * @ return the root { @ link ImportControl } object loaded . 
 * / 
 private ImportControl getRoot ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java 
 index 9215454 . . 23c55bc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java 
 @ @ - 105 , 6 + 105 , 10 @ @ public class ArrayInitHandler extends BlockParentHandler { 
 } 
 
 / * * 
 + * Returns column number of first non - blank char after 
 + * specified column on specified line or - 1 if 
 + * such char doesn ' t exist . 
 + * 
 * @ param lineNo number of line on which we search 
 * @ param columnNo number of column after which we search 
 * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java 
 index e3326d6 . . 09ea87c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentLevel . java 
 @ @ - 72 , 6 + 72 , 8 @ @ public class IndentLevel { 
 } 
 
 / * * 
 + * Returns true if indent less then minimal of 
 + * acceptable indentation levels , false otherwise . 
 * @ param indent indentation to check . 
 * @ return true if { @ code indent } less then minimal of 
 * acceptable indentation levels , false otherwise . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SynchronizedHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SynchronizedHandler . java 
 index 9148ff8 . . a25375c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SynchronizedHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SynchronizedHandler . java 
 @ @ - 70 , 7 + 70 , 7 @ @ public class SynchronizedHandler extends BlockParentHandler { 
 } 
 
 / * * 
 - * Checks if given synchronized is modifier of method * 
 + * Checks if given synchronized is modifier of method . 
 * @ param ast synchronized ( TokenTypes . LITERAL _ SYNCHRONIZED ) to check 
 * @ return true if synchronized only modifies method 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTag . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTag . java 
 index e01434a . . df51319 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTag . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTag . java 
 @ @ - 66 , 6 + 66 , 7 @ @ public class JavadocTag { 
 } 
 
 / * * 
 + * Returns first argument . 
 * @ return the first argument . null if not set . 
 * / 
 public String getFirstArg ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 index 6b4d4bb . . 8b484dc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 @ @ - 109 , 7 + 109 , 7 @ @ class TagParser { 
 } 
 
 / * * 
 - * Parses the tag and return position after it 
 + * Parses the tag and return position after it . 
 * @ param text the source line to parse . 
 * @ param lineNo the source line number . 
 * @ param nLines line length 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java 
 index 03f522d . . 4339007 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java 
 @ @ - 100 , 6 + 100 , 7 @ @ public abstract class AbstractClassCouplingCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns message key we use for log violations . 
 * @ return message key we use for log violations . 
 * / 
 protected abstract String getLogMessageId ( ) ; 
 @ @ - 110 , 6 + 111 , 7 @ @ public abstract class AbstractClassCouplingCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns allowed complexity . 
 * @ return allowed complexity . 
 * / 
 public final int getMax ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 index 68e108f . . 34552c5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 @ @ - 411 , 7 + 411 , 7 @ @ public class RedundantModifierCheck 
 } 
 
 / * * 
 - * Checks if method definition is annotated with 
 + * Checks if method definition is annotated with . 
 * < a href = " https : / / docs . oracle . com / javase / 8 / docs / api / java / lang / SafeVarargs . html " > 
 * SafeVarargs < / a > annotation 
 * @ param methodDef method definition node 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 index 4dd58d6 . . 8cc7669 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 @ @ - 129 , 6 + 129 , 7 @ @ public final class AbstractClassNameCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Checks if declared class is abstract or not . 
 * @ param ast class definition for check . 
 * @ return true if a given class declared as abstract . 
 * / 
 @ @ - 140 , 6 + 141 , 7 @ @ public final class AbstractClassNameCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Returns true if class name matches format of abstract class names . 
 * @ param className class name for check . 
 * @ return true if class name matches format of abstract class names . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java 
 index 7d0ca15 . . c432148 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheck . java 
 @ @ - 101 , 6 + 101 , 7 @ @ public class AnonInnerLengthCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Sets maximum length of an anonymous inner class . 
 * @ param length the maximum length of an anonymous inner class . 
 * / 
 public void setMax ( int length ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java 
 index 0ff4916 . . 1c9b1d5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheck . java 
 @ @ - 260 , 6 + 260 , 7 @ @ public final class MethodCountCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Fetches total number of methods . 
 * @ return the total number of methods . 
 * / 
 private int getTotal ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheck . java 
 index efb25ac . . 168f080 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheck . java 
 @ @ - 123 , 6 + 123 , 7 @ @ public class MethodLengthCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Sets maximum length of a method . 
 * @ param length the maximum length of a method . 
 * / 
 public void setMax ( int length ) { 
 @ @ - 130 , 6 + 131 , 7 @ @ public class MethodLengthCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Sets countEmpty . 
 * @ param countEmpty whether to count empty and single line comments 
 * of the form / / . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheck . java 
 index e9a710e . . bd5bc60 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / ParenPadCheck . java 
 @ @ - 213 , 6 + 213 , 7 @ @ public class ParenPadCheck extends AbstractParenPadCheck { 
 } 
 
 / * * 
 + * Returns array of acceptable tokens . 
 * @ return acceptableTokens . 
 * / 
 private static int [ ] makeAcceptableTokens ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 index 130a549 . . fa434c0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 @ @ - 588 , 7 + 588 , 7 @ @ public class WhitespaceAroundCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * 
 + * Checks if loop is empty . 
 * @ param ast ast the { @ code DetailAST } to test . 
 * @ param parentType the token type of { @ code ast } ' s parent . 
 * @ return { @ code true } if { @ code ast } makes up part of an 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 index e3c6af7 . . 7ff3a58 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 @ @ - 126 , 6 + 126 , 7 @ @ public class SuppressWithNearbyCommentFilter 
 } 
 
 / * * 
 + * Returns FileContents for this filter . 
 * @ return the FileContents for this filter . 
 * / 
 public FileContents getFileContents ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 index f703ac1 . . 50e0e54 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 @ @ - 122 , 6 + 122 , 7 @ @ public class SuppressionCommentFilter 
 } 
 
 / * * 
 + * Returns FileContents for this filter . 
 * @ return the FileContents for this filter . 
 * / 
 public FileContents getFileContents ( ) { 
 @ @ - 355 , 6 + 356 , 7 @ @ public class SuppressionCommentFilter 
 } 
 
 / * * 
 + * Returns line number of the tag in the source file . 
 * @ return the line number of the tag in the source file . 
 * / 
 public int getLine ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java 
 index 53c4bfd . . a34ce23 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java 
 @ @ - 64 , 6 + 64 , 7 @ @ public class CodeSelectorPresentation { 
 } 
 
 / * * 
 + * Returns selection start position . 
 * @ return selection start position . 
 * / 
 public int getSelectionStart ( ) { 
 @ @ - 71 , 6 + 72 , 7 @ @ public class CodeSelectorPresentation { 
 } 
 
 / * * 
 + * Returns selection end position . 
 * @ return selection end position . 
 * / 
 public int getSelectionEnd ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ListToTreeSelectionModelWrapper . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ListToTreeSelectionModelWrapper . java 
 index 9b86563 . . d07d00a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ListToTreeSelectionModelWrapper . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ListToTreeSelectionModelWrapper . java 
 @ @ - 39 , 6 + 39 , 7 @ @ class ListToTreeSelectionModelWrapper extends DefaultTreeSelectionModel { 
 private boolean updatingListSelectionModel ; 
 
 / * * 
 + * Constructor to initialise treeTable . 
 * @ param jTreeTable TreeTable to perform updates on . 
 * / 
 ListToTreeSelectionModelWrapper ( TreeTable jTreeTable ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 index 2fa25f2 . . 18609e8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 @ @ - 126 , 6 + 126 , 7 @ @ public class MainFrameModel { 
 } 
 
 / * * 
 + * Returns title for the main frame . 
 * @ return title for the main frame . 
 * / 
 public String getTitle ( ) { 
 @ @ - 133 , 6 + 134 , 7 @ @ public class MainFrameModel { 
 } 
 
 / * * 
 + * Returns true if the reload action is enabled , false otherwise . 
 * @ return true if the reload action is enabled . 
 * / 
 public boolean isReloadActionEnabled ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java 
 index 3083b5f . . 6d0b624 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java 
 @ @ - 43 , 6 + 43 , 7 @ @ public class ParseTreeTableModel implements TreeModel { 
 private final EventListenerList listenerList = new EventListenerList ( ) ; 
 
 / * * 
 + * Initialise pModel . 
 * @ param parseTree DetailAST parse tree . 
 * / 
 public ParseTreeTableModel ( DetailAST parseTree ) { 
 @ @ - 71 , 6 + 72 , 7 @ @ public class ParseTreeTableModel implements TreeModel { 
 } 
 
 / * * 
 + * Returns number of available column . 
 * @ return the number of available column . 
 * / 
 public int getColumnCount ( ) { 
 @ @ - 78 , 6 + 80 , 7 @ @ public class ParseTreeTableModel implements TreeModel { 
 } 
 
 / * * 
 + * Returns column name of specified column number . 
 * @ param column the column number 
 * @ return the name for column number { @ code column } . 
 * / 
 @ @ - 86 , 6 + 89 , 7 @ @ public class ParseTreeTableModel implements TreeModel { 
 } 
 
 / * * 
 + * Returns type of specified column number . 
 * @ param column the column number 
 * @ return the type for column number { @ code column } . 
 * / 
 @ @ - 96 , 6 + 100 , 7 @ @ public class ParseTreeTableModel implements TreeModel { 
 } 
 
 / * * 
 + * Returns the value to be displayed for node at column number . 
 * @ param node the node 
 * @ param column the column number 
 * @ return the value to be displayed for node { @ code node } , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java 
 index 820eaad . . c94f6f1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java 
 @ @ - 63 , 6 + 63 , 7 @ @ public class ParseTreeTablePresentation { 
 private ParseMode parseMode ; 
 
 / * * 
 + * Constructor initialise root node . 
 * @ param parseTree DetailAST parse tree . 
 * / 
 public ParseTreeTablePresentation ( DetailAST parseTree ) { 
 @ @ - 87 , 6 + 88 , 7 @ @ public class ParseTreeTablePresentation { 
 } 
 
 / * * 
 + * Returns number of available columns . 
 * @ return the number of available columns . 
 * / 
 public int getColumnCount ( ) { 
 @ @ - 94 , 6 + 96 , 7 @ @ public class ParseTreeTablePresentation { 
 } 
 
 / * * 
 + * Returns name for specified column number . 
 * @ param column the column number 
 * @ return the name for column number { @ code column } . 
 * / 
 @ @ - 102 , 6 + 105 , 7 @ @ public class ParseTreeTablePresentation { 
 } 
 
 / * * 
 + * Returns type of specified column number . 
 * @ param column the column number 
 * @ return the type for column number { @ code column } . 
 * / 
 @ @ - 133 , 6 + 137 , 7 @ @ public class ParseTreeTablePresentation { 
 } 
 
 / * * 
 + * Returns the value to be displayed for node at column number . 
 * @ param node the node 
 * @ param column the column number 
 * @ return the value to be displayed for node { @ code node } , at column number { @ code column } . 
 @ @ - 197 , 6 + 202 , 7 @ @ public class ParseTreeTablePresentation { 
 } 
 
 / * * 
 + * Returns value of root . 
 * @ return the root . 
 * / 
 public Object getRoot ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java 
 index d6847e2 . . 75a362e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java 
 @ @ - 214 , 6 + 214 , 7 @ @ public class TreeTable extends JTable { 
 } 
 
 / * * 
 + * Returns tree . 
 * @ return the tree that is being shared between the model . 
 * / 
 public JTree getTree ( ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java 
 index e233be9 . . ad40f18 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java 
 @ @ - 50 , 6 + 50 , 7 @ @ public class TreeTableModelAdapter extends AbstractTableModel { 
 private final transient ParseTreeTableModel treeTableModel ; 
 
 / * * 
 + * Initialise tree and treeTableModel class attributes . 
 * @ param treeTableModel Tree table model . 
 * @ param tree JTree component . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CheckUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CheckUtils . java 
 index fe05498 . . 15946cd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CheckUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CheckUtils . java 
 @ @ - 150 , 6 + 150 , 7 @ @ public final class CheckUtils { 
 } 
 
 / * * 
 + * Returns FullIndent for given type . 
 * @ param typeAST a type node ( no array ) 
 * @ return { @ code FullIdent } for given type . 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java 
 index 82ac3d2 . . 66345c7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / CommonUtils . java 
 @ @ - 226 , 6 + 226 , 7 @ @ public final class CommonUtils { 
 } 
 
 / * * 
 + * Returns base class name from qualified name . 
 * @ param type 
 * the fully qualified name . Cannot be null 
 * @ return the base class name from a fully qualified name 
 @ @ - 326 , 6 + 327 , 7 @ @ public final class CommonUtils { 
 } 
 
 / * * 
 + * Returns new instance of a class . 
 * @ param constructor 
 * to invoke 
 * @ param parameters

NEAREST DIFF:
diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 0dd0b3c . . 3a42cba 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 60 , 7 + 60 , 9 @ @ 
 < rule ref = " rulesets / java / controversial . xml " > 
 < ! - - calling super ( ) is completely pointless , no matter if class inherits anything or not ; it is meaningful only if you do not call implicit constructor of base class - - > 
 < exclude name = " CallSuperInConstructor " / > 
 + < ! - - We reuse Check instances between java files , we need to clear state of class in beginTree ( ) methods - - > 
 < exclude name = " NullAssignment " / > 
 + < ! - - it is possible only in functional languages and fanatically - pristine code , withot aditional option that are done at ReturnCountExtendedCheck it is not good rule - - > 
 < exclude name = " OnlyOneReturn " / > 
 < exclude name = " AssignmentInOperand " / > 
 < exclude name = " AtLeastOneConstructor " / >
