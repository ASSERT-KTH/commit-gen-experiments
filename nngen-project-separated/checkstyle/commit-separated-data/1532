BLEU SCORE: 0.08295193507109855

TEST MSG: Issue # 2161 : unify test input locations for header package
GENERATED MSG: Issue # 49 . Added comments to existing test inputs .

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> index 622d579 . . ff43076 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> import static org . mockito . Matchers . anyObject ; <nl> <nl> + import java . io . File ; <nl> import java . io . IOException ; <nl> import java . lang . reflect . InvocationTargetException ; <nl> import java . lang . reflect . Method ; <nl> @ @ - 45 , 11 + 46 , 20 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> @ RunWith ( PowerMockRunner . class ) <nl> @ PrepareForTest ( { HeaderCheck . class , HeaderCheckTest . class , AbstractHeaderCheck . class } ) <nl> public class HeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " header " + File . separator + filename ) ; <nl> + } <nl> + <nl> + protected String getConfigPath ( String filename ) throws IOException { <nl> + return super . getPath ( " configs " + File . separator + filename ) ; <nl> + } <nl> <nl> @ Test <nl> public void testStaticHeader ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( HeaderCheck . class ) ; <nl> - checkConfig . addAttribute ( " headerFile " , getPath ( " configs / java . header " ) ) ; <nl> + checkConfig . addAttribute ( " headerFile " , getConfigPath ( " java . header " ) ) ; <nl> checkConfig . addAttribute ( " ignoreLines " , " " ) ; <nl> final String [ ] expected = { <nl> " 1 : " + getCheckMessage ( MSG _ MISSING ) , <nl> @ @ - 91 , 7 + 101 , 7 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> @ Test <nl> public void testInvalidCharset ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( HeaderCheck . class ) ; <nl> - checkConfig . addAttribute ( " headerFile " , getPath ( " config / java . header " ) ) ; <nl> + checkConfig . addAttribute ( " headerFile " , getConfigPath ( " java . header " ) ) ; <nl> checkConfig . addAttribute ( " charset " , " XSO - 8859 - 1 " ) ; <nl> try { <nl> createChecker ( checkConfig ) ; <nl> @ @ - 126 , 22 + 136 , 22 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> @ Test <nl> public void testNotMatch ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( HeaderCheck . class ) ; <nl> - checkConfig . addAttribute ( " headerFile " , getPath ( " configs / java . header " ) ) ; <nl> + checkConfig . addAttribute ( " headerFile " , getConfigPath ( " java . header " ) ) ; <nl> checkConfig . addAttribute ( " ignoreLines " , " " ) ; <nl> final String [ ] expected = { <nl> " 2 : " + getCheckMessage ( MSG _ MISMATCH , <nl> " / / checkstyle : Checks Java source code for adherence to a set of rules . " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " configs / java2 . header " ) , expected ) ; <nl> + verify ( checkConfig , getConfigPath ( " java2 . header " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> public void testIgnore ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( HeaderCheck . class ) ; <nl> - checkConfig . addAttribute ( " headerFile " , getPath ( " configs / java . header " ) ) ; <nl> + checkConfig . addAttribute ( " headerFile " , getConfigPath ( " java . header " ) ) ; <nl> checkConfig . addAttribute ( " ignoreLines " , " 2 " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " configs / java2 . header " ) , expected ) ; <nl> + verify ( checkConfig , getConfigPath ( " java2 . header " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java <nl> index e2d00fa . . c14a3fd 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . fail ; <nl> <nl> import java . io . File ; <nl> + import java . io . IOException ; <nl> import java . net . URI ; <nl> import java . util . Locale ; <nl> <nl> @ @ - 41 , 6 + 42 , 11 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> * @ author richter <nl> * / <nl> public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " header " + File . separator + filename ) ; <nl> + } <nl> <nl> / * * <nl> * Test of setHeader method , of class RegexpHeaderCheck . <nl> @ @ - 130 , 7 + 136 , 7 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> final String [ ] expected = { <nl> " 3 : " + getCheckMessage ( MSG _ MISMATCH , " / / Created : 2002 " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputScopeAnonInner . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputRegexpHeader7 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 142 , 7 + 148 , 7 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> final String [ ] expected = { <nl> " 3 : " + getCheckMessage ( MSG _ MISMATCH , " / / Created : 2002 " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputScopeAnonInner . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputRegexpHeader7 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 153 , 7 + 159 , 7 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> final String [ ] expected = { <nl> " 3 : " + getCheckMessage ( MSG _ MISMATCH , " / / Created : 2002 " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputScopeAnonInner . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputRegexpHeader7 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 180 , 7 + 186 , 7 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> createCheckConfig ( RegexpHeaderCheck . class ) ; <nl> checkConfig . addAttribute ( " headerFile " , getPath ( " regexp . header1 " ) ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputScopeAnonInner . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputRegexpHeader7 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader1 . java <nl> deleted file mode 100644 <nl> index 9a3045f . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader1 . java <nl> + + + / dev / null <nl> @ @ - 1 , 11 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - import java . awt . * ; <nl> - <nl> - / * * <nl> - * Some doc . <nl> - * / <nl> - <nl> - public class InputRegexpHeader1 <nl> - { <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader2 . java <nl> deleted file mode 100644 <nl> index 250b03b . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 14 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - import java . awt . * ; <nl> - import java . awt . event . * ; <nl> - import java . io . * ; <nl> - <nl> - / * * <nl> - * <nl> - * blah blah <nl> - * @ see foo <nl> - * / <nl> - public class InputRegexpHeader2 <nl> - { <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader3 . java <nl> deleted file mode 100644 <nl> index 717e005 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader3 . java <nl> + + + / dev / null <nl> @ @ - 1 , 7 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - import java . awt . * ; <nl> - <nl> - public class InputRegexpHeader3 <nl> - { <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader4 . java <nl> deleted file mode 100644 <nl> index 7a2a73d . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader4 . java <nl> + + + / dev / null <nl> @ @ - 1 , 6 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - import java . awt . * ; <nl> - import java . awt . * ; <nl> - import java . awt . * ; <nl> - import java . awt . * ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader5 . java <nl> deleted file mode 100644 <nl> index 5041a85 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader5 . java <nl> + + + / dev / null <nl> @ @ - 1 , 7 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - import java . awt . * ; <nl> - import java . awt . * ; <nl> - import java . awt . * ; <nl> - import java . awt . * ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader6 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader6 . java <nl> deleted file mode 100644 <nl> index 5e3a326 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader6 . java <nl> + + + / dev / null <nl> @ @ - 1 , 3 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - import java . awt . * ; <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpSmallHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpSmallHeader . java <nl> deleted file mode 100644 <nl> index 767a7a4 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpSmallHeader . java <nl> + + + / dev / null <nl> @ @ - 1 , 6 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - <nl> - / * * <nl> - * / <nl> - public class InputRegexpSmallHeader { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader1 . java <nl> new file mode 100644 <nl> index 0000000 . . 6e25292 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader1 . java <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . header ; <nl> + <nl> + import java . awt . * ; <nl> + <nl> + / * * <nl> + * Some doc . <nl> + * / <nl> + <nl> + public class InputRegexpHeader1 <nl> + { <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader2 . java <nl> new file mode 100644 <nl> index 0000000 . . c843f56 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader2 . java <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . header ; <nl> + <nl> + import java . awt . * ; <nl> + import java . awt . event . * ; <nl> + import java . io . * ; <nl> + <nl> + / * * <nl> + * <nl> + * blah blah <nl> + * @ see foo <nl> + * / <nl> + public class InputRegexpHeader2 <nl> + { <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader3 . java <nl> new file mode 100644 <nl> index 0000000 . . b3e7494 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader3 . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . header ; <nl> + <nl> + import java . awt . * ; <nl> + <nl> + public class InputRegexpHeader3 <nl> + { <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader4 . java <nl> new file mode 100644 <nl> index 0000000 . . 7ee955f <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader4 . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . header ; <nl> + <nl> + import java . awt . * ; <nl> + import java . awt . * ; <nl> + import java . awt . * ; <nl> + import java . awt . * ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader5 . java <nl> new file mode 100644 <nl> index 0000000 . . 6a29223 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader5 . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . header ; <nl> + <nl> + import java . awt . * ; <nl> + import java . awt . * ; <nl> + import java . awt . * ; <nl> + import java . awt . * ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader6 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader6 . java <nl> new file mode 100644 <nl> index 0000000 . . 495fa01 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader6 . java <nl> @ @ - 0 , 0 + 1 , 3 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . header ; <nl> + <nl> + import java . awt . * ; <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader7 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader7 . java <nl> new file mode 100644 <nl> index 0000000 . . ec40a9b <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader7 . java <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . header ; <nl> + <nl> + import java . awt . event . MouseEvent ; <nl> + import java . awt . event . MouseAdapter ; <nl> + import javax . swing . JButton ; <nl> + <nl> + / * * <nl> + * Tests for regxexp header <nl> + * @ author Lars K ü hne <nl> + * * / <nl> + public class InputRegexpHeader7 <nl> + { <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpSmallHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpSmallHeader . java <nl> new file mode 100644 <nl> index 0000000 . . 236ff63 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpSmallHeader . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . header ; <nl> + <nl> + <nl> + / * * <nl> + * / <nl> + public class InputRegexpSmallHeader { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / inputHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / inputHeader . java <nl> new file mode 100644 <nl> index 0000000 . . 58af1e6 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / inputHeader . java <nl> @ @ - 0 , 0 + 1 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . header ; class inputHeader { } / / One line test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header <nl> new file mode 100644 <nl> index 0000000 . . 1c7f998 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + ^ / * $ <nl> + / / . * <nl> + / / Created : 2002 <nl> + ^ . * $ <nl> + ^ . * $ <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header1 b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header1 <nl> new file mode 100644 <nl> index 0000000 . . 6a2ee45 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header1 <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + ^ / * $ <nl> + / / . * <nl> + ^ . * $ <nl> + ^ . * $ <nl> + ^ . * $ <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header2 b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header2 <nl> new file mode 100644 <nl> index 0000000 . . 075455c <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header2 <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + ^ package <nl> + ^ $ <nl> + ^ import <nl> + ^ $ <nl> + ^ / \ * \ * <nl> + ^ \ * ( [ ^ / ] | $ ) <nl> + ^ \ * / <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header3 b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header3 <nl> new file mode 100644 <nl> index 0000000 . . 5a38c78 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header3 <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + \ / + <nl> + ^ package <nl> + ^ $ <nl> + ^ import <nl> + ^ $ <nl> + ^ / \ * \ * <nl> + ^ \ * ( [ ^ / ] | $ ) <nl> + ^ \ * / <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp2 . header4 b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp2 . header4 <nl> new file mode 100644 <nl> index 0000000 . . fb9ff02 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp2 . header4 <nl> @ @ - 0 , 0 + 1 , 3 @ @ <nl> + ^ package <nl> + ^ $ <nl> + ^ import <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . java <nl> deleted file mode 100644 <nl> index 36e6178 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . java <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - / * <nl> - * ( C ) 2006 correct header <nl> - * / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . header ; <nl> - <nl> - public class H1 <nl> - { <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . properties b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . properties <nl> deleted file mode 100644 <nl> index e7b2fe0 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . properties <nl> + + + / dev / null <nl> @ @ - 1 , 4 + 0 , 0 @ @ <nl> - # <nl> - # ( C ) 2006 correct header <nl> - # <nl> - x = y <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . xml <nl> deleted file mode 100644 <nl> index 475d5b6 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . xml <nl> + + + / dev / null <nl> @ @ - 1 , 7 + 0 , 0 @ @ <nl> - < ? xml version = " 1 . 0 " ? > <nl> - < ! - - <nl> - ( C ) 2006 correct header <nl> - - - > <nl> - <nl> - < root > <nl> - < / root > <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . java <nl> deleted file mode 100644 <nl> index 0f0cc2a . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - / * <nl> - * ( C ) ' 06 incorrect header <nl> - * / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . header ; <nl> - <nl> - public class H2 <nl> - { <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . properties b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . properties <nl> deleted file mode 100644 <nl> index 08ddc0c . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . properties <nl> + + + / dev / null <nl> @ @ - 1 + 0 , 0 @ @ <nl> - x = y <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . xml <nl> deleted file mode 100644 <nl> index e93f505 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . xml <nl> + + + / dev / null <nl> @ @ - 1 , 5 + 0 , 0 @ @ <nl> - < ? xml version = " 1 . 0 " ? > <nl> - < ! - - ( C ) ' 06 incorrect header - - > <nl> - <nl> - < root > <nl> - < / root > <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / inputHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / inputHeader . java <nl> deleted file mode 100644 <nl> index 90db343 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / inputHeader . java <nl> + + + / dev / null <nl> @ @ - 1 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle ; class inputHeader { } / / One line test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header <nl> deleted file mode 100644 <nl> index 1c7f998 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header <nl> + + + / dev / null <nl> @ @ - 1 , 5 + 0 , 0 @ @ <nl> - ^ / * $ <nl> - / / . * <nl> - / / Created : 2002 <nl> - ^ . * $ <nl> - ^ . * $ <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header1 b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header1 <nl> deleted file mode 100644 <nl> index 6a2ee45 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header1 <nl> + + + / dev / null <nl> @ @ - 1 , 5 + 0 , 0 @ @ <nl> - ^ / * $ <nl> - / / . * <nl> - ^ . * $ <nl> - ^ . * $ <nl> - ^ . * $ <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header2 b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header2 <nl> deleted file mode 100644 <nl> index 075455c . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header2 <nl> + + + / dev / null <nl> @ @ - 1 , 7 + 0 , 0 @ @ <nl> - ^ package <nl> - ^ $ <nl> - ^ import <nl> - ^ $ <nl> - ^ / \ * \ * <nl> - ^ \ * ( [ ^ / ] | $ ) <nl> - ^ \ * / <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header3 b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header3 <nl> deleted file mode 100644 <nl> index 5a38c78 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header3 <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - \ / + <nl> - ^ package <nl> - ^ $ <nl> - ^ import <nl> - ^ $ <nl> - ^ / \ * \ * <nl> - ^ \ * ( [ ^ / ] | $ ) <nl> - ^ \ * / <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp2 . header4 b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp2 . header4 <nl> deleted file mode 100644 <nl> index fb9ff02 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp2 . header4 <nl> + + + / dev / null <nl> @ @ - 1 , 3 + 0 , 0 @ @ <nl> - ^ package <nl> - ^ $ <nl> - ^ import <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> index 99e923c . . 5081b85 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> @ @ - 29 , 11 + 29 , 11 @ @ import com . puppycrawl . tools . checkstyle . api . Utils ; <nl> * " & lt ; " and " & gt ; " are correct to the < i > typical < / i > convention . <nl> * The convention is not configurable . <nl> * < / p > <nl> - * < br / > <nl> + * < br > <nl> * < p > <nl> * Left angle bracket ( " & lt ; " ) : <nl> * < / p > <nl> - * < br / > <nl> + * < br > <nl> * < ul > <nl> * < li > should be preceded with whitespace only <nl> * in generic methods definitions . < / li > <nl> @ @ - 41 , 26 + 41 , 26 @ @ import com . puppycrawl . tools . checkstyle . api . Utils ; <nl> * when it is precede method name or following type name . < / li > <nl> * < li > should not be followed with whitespace in all cases . < / li > <nl> * < / ul > <nl> - * < br / > <nl> + * < br > <nl> * < p > <nl> * Right angle bracket ( " & gt ; " ) : <nl> * < / p > <nl> - * < br / > <nl> + * < br > <nl> * < ul > <nl> * < li > should not be preceded with whitespace in all cases . < / li > <nl> * < li > should be followed with whitespace in almost all cases , <nl> * except diamond operators and when preceding method name . < / li > < / ul > <nl> - * < br / > <nl> + * < br > <nl> * < p > <nl> * Examples with correct spacing : <nl> * < / p > <nl> - * < br / > <nl> + * < br > <nl> * < pre > <nl> - * public void & lt ; K , V extends Number & gt ; boolean foo ( K , V ) { } / / Generic methods definitions <nl> - * class name & lt ; T1 , T2 , . . . , Tn & gt ; { } / / Generic type definition <nl> - * OrderedPair & lt ; String , Box & lt ; Integer & gt ; & gt ; p ; / / Generic type reference <nl> - * boolean same = Util . & lt ; Integer , String & gt ; compare ( p1 , p2 ) ; / / Generic preceded method name <nl> - * Pair & lt ; Integer , String > p1 = new Pair & lt ; & gt ; ( 1 , " apple " ) ; / / Diamond operator <nl> + * public void & lt ; K , V extends Number & gt ; boolean foo ( K , V ) { } / / Generic methods definitions <nl> + * class name & lt ; T1 , T2 , . . . , Tn & gt ; { } / / Generic type definition <nl> + * OrderedPair & lt ; String , Box & lt ; Integer & gt ; & gt ; p ; / / Generic type reference <nl> + * boolean same = Util . & lt ; Integer , String & gt ; compare ( p1 , p2 ) ; / / Generic preceded method name <nl> + * Pair & lt ; Integer , String & gt ; p1 = new Pair & lt ; & gt ; ( 1 , " apple " ) ; / / Diamond operator <nl> * < / pre > <nl> * @ author Oliver Burn <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> index 8b9b965 . . 0d7e3f8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> / * * <nl> * < p > <nl> * Checks that a token is surrounded by whitespace . <nl> - * < / p > <nl> + * <nl> * < p > By default the check will check the following operators : <nl> * { @ link TokenTypes # LITERAL _ ASSERT ASSERT } , <nl> * { @ link TokenTypes # ASSIGN ASSIGN } , <nl> @ @ - 78 , 22 + 78 , 24 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * { @ link TokenTypes # STAR _ ASSIGN STAR _ ASSIGN } , <nl> * { @ link TokenTypes # LITERAL _ ASSERT LITERAL _ ASSERT } , <nl> * { @ link TokenTypes # TYPE _ EXTENSION _ AND TYPE _ EXTENSION _ AND } . <nl> - * < / p > <nl> + * <nl> * < p > <nl> * An example of how to configure the check is : <nl> - * < / p > <nl> + * <nl> * < pre > <nl> * & lt ; module name = " WhitespaceAround " / & gt ; <nl> * < / pre > <nl> + * <nl> * < p > An example of how to configure the check for whitespace only around <nl> * assignment operators is : <nl> - * < / p > <nl> + * <nl> * < pre > <nl> * & lt ; module name = " WhitespaceAround " & gt ; <nl> * & lt ; property name = " tokens " <nl> * value = " ASSIGN , DIV _ ASSIGN , PLUS _ ASSIGN , MINUS _ ASSIGN , STAR _ ASSIGN , MOD _ ASSIGN , SR _ ASSIGN , BSR _ ASSIGN , SL _ ASSIGN , BXOR _ ASSIGN , BOR _ ASSIGN , BAND _ ASSIGN " / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> + * <nl> * < p > <nl> * In addition , this check can be configured to allow empty methods , types , <nl> * for , while , do - while loops and constructor bodies .

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 index 622d579 . . ff43076 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 import static org . mockito . Matchers . anyObject ; 
 
 + import java . io . File ; 
 import java . io . IOException ; 
 import java . lang . reflect . InvocationTargetException ; 
 import java . lang . reflect . Method ; 
 @ @ - 45 , 11 + 46 , 20 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 @ RunWith ( PowerMockRunner . class ) 
 @ PrepareForTest ( { HeaderCheck . class , HeaderCheckTest . class , AbstractHeaderCheck . class } ) 
 public class HeaderCheckTest extends BaseFileSetCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " header " + File . separator + filename ) ; 
 + } 
 + 
 + protected String getConfigPath ( String filename ) throws IOException { 
 + return super . getPath ( " configs " + File . separator + filename ) ; 
 + } 
 
 @ Test 
 public void testStaticHeader ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( HeaderCheck . class ) ; 
 - checkConfig . addAttribute ( " headerFile " , getPath ( " configs / java . header " ) ) ; 
 + checkConfig . addAttribute ( " headerFile " , getConfigPath ( " java . header " ) ) ; 
 checkConfig . addAttribute ( " ignoreLines " , " " ) ; 
 final String [ ] expected = { 
 " 1 : " + getCheckMessage ( MSG _ MISSING ) , 
 @ @ - 91 , 7 + 101 , 7 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { 
 @ Test 
 public void testInvalidCharset ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( HeaderCheck . class ) ; 
 - checkConfig . addAttribute ( " headerFile " , getPath ( " config / java . header " ) ) ; 
 + checkConfig . addAttribute ( " headerFile " , getConfigPath ( " java . header " ) ) ; 
 checkConfig . addAttribute ( " charset " , " XSO - 8859 - 1 " ) ; 
 try { 
 createChecker ( checkConfig ) ; 
 @ @ - 126 , 22 + 136 , 22 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { 
 @ Test 
 public void testNotMatch ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( HeaderCheck . class ) ; 
 - checkConfig . addAttribute ( " headerFile " , getPath ( " configs / java . header " ) ) ; 
 + checkConfig . addAttribute ( " headerFile " , getConfigPath ( " java . header " ) ) ; 
 checkConfig . addAttribute ( " ignoreLines " , " " ) ; 
 final String [ ] expected = { 
 " 2 : " + getCheckMessage ( MSG _ MISMATCH , 
 " / / checkstyle : Checks Java source code for adherence to a set of rules . " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " configs / java2 . header " ) , expected ) ; 
 + verify ( checkConfig , getConfigPath ( " java2 . header " ) , expected ) ; 
 } 
 
 @ Test 
 public void testIgnore ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( HeaderCheck . class ) ; 
 - checkConfig . addAttribute ( " headerFile " , getPath ( " configs / java . header " ) ) ; 
 + checkConfig . addAttribute ( " headerFile " , getConfigPath ( " java . header " ) ) ; 
 checkConfig . addAttribute ( " ignoreLines " , " 2 " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " configs / java2 . header " ) , expected ) ; 
 + verify ( checkConfig , getConfigPath ( " java2 . header " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java 
 index e2d00fa . . c14a3fd 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . fail ; 
 
 import java . io . File ; 
 + import java . io . IOException ; 
 import java . net . URI ; 
 import java . util . Locale ; 
 
 @ @ - 41 , 6 + 42 , 11 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 * @ author richter 
 * / 
 public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " header " + File . separator + filename ) ; 
 + } 
 
 / * * 
 * Test of setHeader method , of class RegexpHeaderCheck . 
 @ @ - 130 , 7 + 136 , 7 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { 
 final String [ ] expected = { 
 " 3 : " + getCheckMessage ( MSG _ MISMATCH , " / / Created : 2002 " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputScopeAnonInner . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputRegexpHeader7 . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 142 , 7 + 148 , 7 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { 
 final String [ ] expected = { 
 " 3 : " + getCheckMessage ( MSG _ MISMATCH , " / / Created : 2002 " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputScopeAnonInner . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputRegexpHeader7 . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 153 , 7 + 159 , 7 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { 
 final String [ ] expected = { 
 " 3 : " + getCheckMessage ( MSG _ MISMATCH , " / / Created : 2002 " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputScopeAnonInner . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputRegexpHeader7 . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 180 , 7 + 186 , 7 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { 
 createCheckConfig ( RegexpHeaderCheck . class ) ; 
 checkConfig . addAttribute ( " headerFile " , getPath ( " regexp . header1 " ) ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputScopeAnonInner . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputRegexpHeader7 . java " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader1 . java 
 deleted file mode 100644 
 index 9a3045f . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader1 . java 
 + + + / dev / null 
 @ @ - 1 , 11 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - import java . awt . * ; 
 - 
 - / * * 
 - * Some doc . 
 - * / 
 - 
 - public class InputRegexpHeader1 
 - { 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader2 . java 
 deleted file mode 100644 
 index 250b03b . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader2 . java 
 + + + / dev / null 
 @ @ - 1 , 14 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - import java . awt . * ; 
 - import java . awt . event . * ; 
 - import java . io . * ; 
 - 
 - / * * 
 - * 
 - * blah blah 
 - * @ see foo 
 - * / 
 - public class InputRegexpHeader2 
 - { 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader3 . java 
 deleted file mode 100644 
 index 717e005 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader3 . java 
 + + + / dev / null 
 @ @ - 1 , 7 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - import java . awt . * ; 
 - 
 - public class InputRegexpHeader3 
 - { 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader4 . java 
 deleted file mode 100644 
 index 7a2a73d . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader4 . java 
 + + + / dev / null 
 @ @ - 1 , 6 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - import java . awt . * ; 
 - import java . awt . * ; 
 - import java . awt . * ; 
 - import java . awt . * ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader5 . java 
 deleted file mode 100644 
 index 5041a85 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader5 . java 
 + + + / dev / null 
 @ @ - 1 , 7 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - import java . awt . * ; 
 - import java . awt . * ; 
 - import java . awt . * ; 
 - import java . awt . * ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader6 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader6 . java 
 deleted file mode 100644 
 index 5e3a326 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpHeader6 . java 
 + + + / dev / null 
 @ @ - 1 , 3 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - import java . awt . * ; 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpSmallHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpSmallHeader . java 
 deleted file mode 100644 
 index 767a7a4 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRegexpSmallHeader . java 
 + + + / dev / null 
 @ @ - 1 , 6 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - 
 - / * * 
 - * / 
 - public class InputRegexpSmallHeader { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader1 . java 
 new file mode 100644 
 index 0000000 . . 6e25292 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader1 . java 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . header ; 
 + 
 + import java . awt . * ; 
 + 
 + / * * 
 + * Some doc . 
 + * / 
 + 
 + public class InputRegexpHeader1 
 + { 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader2 . java 
 new file mode 100644 
 index 0000000 . . c843f56 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader2 . java 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . header ; 
 + 
 + import java . awt . * ; 
 + import java . awt . event . * ; 
 + import java . io . * ; 
 + 
 + / * * 
 + * 
 + * blah blah 
 + * @ see foo 
 + * / 
 + public class InputRegexpHeader2 
 + { 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader3 . java 
 new file mode 100644 
 index 0000000 . . b3e7494 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader3 . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . header ; 
 + 
 + import java . awt . * ; 
 + 
 + public class InputRegexpHeader3 
 + { 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader4 . java 
 new file mode 100644 
 index 0000000 . . 7ee955f 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader4 . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . header ; 
 + 
 + import java . awt . * ; 
 + import java . awt . * ; 
 + import java . awt . * ; 
 + import java . awt . * ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader5 . java 
 new file mode 100644 
 index 0000000 . . 6a29223 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader5 . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . header ; 
 + 
 + import java . awt . * ; 
 + import java . awt . * ; 
 + import java . awt . * ; 
 + import java . awt . * ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader6 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader6 . java 
 new file mode 100644 
 index 0000000 . . 495fa01 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader6 . java 
 @ @ - 0 , 0 + 1 , 3 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . header ; 
 + 
 + import java . awt . * ; 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader7 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader7 . java 
 new file mode 100644 
 index 0000000 . . ec40a9b 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpHeader7 . java 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . header ; 
 + 
 + import java . awt . event . MouseEvent ; 
 + import java . awt . event . MouseAdapter ; 
 + import javax . swing . JButton ; 
 + 
 + / * * 
 + * Tests for regxexp header 
 + * @ author Lars K ü hne 
 + * * / 
 + public class InputRegexpHeader7 
 + { 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpSmallHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpSmallHeader . java 
 new file mode 100644 
 index 0000000 . . 236ff63 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / InputRegexpSmallHeader . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . header ; 
 + 
 + 
 + / * * 
 + * / 
 + public class InputRegexpSmallHeader { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / inputHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / inputHeader . java 
 new file mode 100644 
 index 0000000 . . 58af1e6 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / inputHeader . java 
 @ @ - 0 , 0 + 1 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . header ; class inputHeader { } / / One line test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header 
 new file mode 100644 
 index 0000000 . . 1c7f998 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + ^ / * $ 
 + / / . * 
 + / / Created : 2002 
 + ^ . * $ 
 + ^ . * $ 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header1 b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header1 
 new file mode 100644 
 index 0000000 . . 6a2ee45 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header1 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + ^ / * $ 
 + / / . * 
 + ^ . * $ 
 + ^ . * $ 
 + ^ . * $ 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header2 b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header2 
 new file mode 100644 
 index 0000000 . . 075455c 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header2 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + ^ package 
 + ^ $ 
 + ^ import 
 + ^ $ 
 + ^ / \ * \ * 
 + ^ \ * ( [ ^ / ] | $ ) 
 + ^ \ * / 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header3 b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header3 
 new file mode 100644 
 index 0000000 . . 5a38c78 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp . header3 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + \ / + 
 + ^ package 
 + ^ $ 
 + ^ import 
 + ^ $ 
 + ^ / \ * \ * 
 + ^ \ * ( [ ^ / ] | $ ) 
 + ^ \ * / 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp2 . header4 b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp2 . header4 
 new file mode 100644 
 index 0000000 . . fb9ff02 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / header / regexp2 . header4 
 @ @ - 0 , 0 + 1 , 3 @ @ 
 + ^ package 
 + ^ $ 
 + ^ import 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . java 
 deleted file mode 100644 
 index 36e6178 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . java 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - / * 
 - * ( C ) 2006 correct header 
 - * / 
 - 
 - package com . puppycrawl . tools . checkstyle . header ; 
 - 
 - public class H1 
 - { 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . properties b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . properties 
 deleted file mode 100644 
 index e7b2fe0 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . properties 
 + + + / dev / null 
 @ @ - 1 , 4 + 0 , 0 @ @ 
 - # 
 - # ( C ) 2006 correct header 
 - # 
 - x = y 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . xml 
 deleted file mode 100644 
 index 475d5b6 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H1 . xml 
 + + + / dev / null 
 @ @ - 1 , 7 + 0 , 0 @ @ 
 - < ? xml version = " 1 . 0 " ? > 
 - < ! - - 
 - ( C ) 2006 correct header 
 - - - > 
 - 
 - < root > 
 - < / root > 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . java 
 deleted file mode 100644 
 index 0f0cc2a . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . java 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - / * 
 - * ( C ) ' 06 incorrect header 
 - * / 
 - 
 - package com . puppycrawl . tools . checkstyle . header ; 
 - 
 - public class H2 
 - { 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . properties b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . properties 
 deleted file mode 100644 
 index 08ddc0c . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . properties 
 + + + / dev / null 
 @ @ - 1 + 0 , 0 @ @ 
 - x = y 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . xml 
 deleted file mode 100644 
 index e93f505 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / header / H2 . xml 
 + + + / dev / null 
 @ @ - 1 , 5 + 0 , 0 @ @ 
 - < ? xml version = " 1 . 0 " ? > 
 - < ! - - ( C ) ' 06 incorrect header - - > 
 - 
 - < root > 
 - < / root > 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / inputHeader . java b / src / test / resources / com / puppycrawl / tools / checkstyle / inputHeader . java 
 deleted file mode 100644 
 index 90db343 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / inputHeader . java 
 + + + / dev / null 
 @ @ - 1 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle ; class inputHeader { } / / One line test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header 
 deleted file mode 100644 
 index 1c7f998 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header 
 + + + / dev / null 
 @ @ - 1 , 5 + 0 , 0 @ @ 
 - ^ / * $ 
 - / / . * 
 - / / Created : 2002 
 - ^ . * $ 
 - ^ . * $ 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header1 b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header1 
 deleted file mode 100644 
 index 6a2ee45 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header1 
 + + + / dev / null 
 @ @ - 1 , 5 + 0 , 0 @ @ 
 - ^ / * $ 
 - / / . * 
 - ^ . * $ 
 - ^ . * $ 
 - ^ . * $ 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header2 b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header2 
 deleted file mode 100644 
 index 075455c . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header2 
 + + + / dev / null 
 @ @ - 1 , 7 + 0 , 0 @ @ 
 - ^ package 
 - ^ $ 
 - ^ import 
 - ^ $ 
 - ^ / \ * \ * 
 - ^ \ * ( [ ^ / ] | $ ) 
 - ^ \ * / 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header3 b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header3 
 deleted file mode 100644 
 index 5a38c78 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp . header3 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - \ / + 
 - ^ package 
 - ^ $ 
 - ^ import 
 - ^ $ 
 - ^ / \ * \ * 
 - ^ \ * ( [ ^ / ] | $ ) 
 - ^ \ * / 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp2 . header4 b / src / test / resources / com / puppycrawl / tools / checkstyle / regexp2 . header4 
 deleted file mode 100644 
 index fb9ff02 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / regexp2 . header4 
 + + + / dev / null 
 @ @ - 1 , 3 + 0 , 0 @ @ 
 - ^ package 
 - ^ $ 
 - ^ import 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 index 99e923c . . 5081b85 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 @ @ - 29 , 11 + 29 , 11 @ @ import com . puppycrawl . tools . checkstyle . api . Utils ; 
 * " & lt ; " and " & gt ; " are correct to the < i > typical < / i > convention . 
 * The convention is not configurable . 
 * < / p > 
 - * < br / > 
 + * < br > 
 * < p > 
 * Left angle bracket ( " & lt ; " ) : 
 * < / p > 
 - * < br / > 
 + * < br > 
 * < ul > 
 * < li > should be preceded with whitespace only 
 * in generic methods definitions . < / li > 
 @ @ - 41 , 26 + 41 , 26 @ @ import com . puppycrawl . tools . checkstyle . api . Utils ; 
 * when it is precede method name or following type name . < / li > 
 * < li > should not be followed with whitespace in all cases . < / li > 
 * < / ul > 
 - * < br / > 
 + * < br > 
 * < p > 
 * Right angle bracket ( " & gt ; " ) : 
 * < / p > 
 - * < br / > 
 + * < br > 
 * < ul > 
 * < li > should not be preceded with whitespace in all cases . < / li > 
 * < li > should be followed with whitespace in almost all cases , 
 * except diamond operators and when preceding method name . < / li > < / ul > 
 - * < br / > 
 + * < br > 
 * < p > 
 * Examples with correct spacing : 
 * < / p > 
 - * < br / > 
 + * < br > 
 * < pre > 
 - * public void & lt ; K , V extends Number & gt ; boolean foo ( K , V ) { } / / Generic methods definitions 
 - * class name & lt ; T1 , T2 , . . . , Tn & gt ; { } / / Generic type definition 
 - * OrderedPair & lt ; String , Box & lt ; Integer & gt ; & gt ; p ; / / Generic type reference 
 - * boolean same = Util . & lt ; Integer , String & gt ; compare ( p1 , p2 ) ; / / Generic preceded method name 
 - * Pair & lt ; Integer , String > p1 = new Pair & lt ; & gt ; ( 1 , " apple " ) ; / / Diamond operator 
 + * public void & lt ; K , V extends Number & gt ; boolean foo ( K , V ) { } / / Generic methods definitions 
 + * class name & lt ; T1 , T2 , . . . , Tn & gt ; { } / / Generic type definition 
 + * OrderedPair & lt ; String , Box & lt ; Integer & gt ; & gt ; p ; / / Generic type reference 
 + * boolean same = Util . & lt ; Integer , String & gt ; compare ( p1 , p2 ) ; / / Generic preceded method name 
 + * Pair & lt ; Integer , String & gt ; p1 = new Pair & lt ; & gt ; ( 1 , " apple " ) ; / / Diamond operator 
 * < / pre > 
 * @ author Oliver Burn 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 index 8b9b965 . . 0d7e3f8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 @ @ - 25 , 7 + 25 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 / * * 
 * < p > 
 * Checks that a token is surrounded by whitespace . 
 - * < / p > 
 + * 
 * < p > By default the check will check the following operators : 
 * { @ link TokenTypes # LITERAL _ ASSERT ASSERT } , 
 * { @ link TokenTypes # ASSIGN ASSIGN } , 
 @ @ - 78 , 22 + 78 , 24 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * { @ link TokenTypes # STAR _ ASSIGN STAR _ ASSIGN } , 
 * { @ link TokenTypes # LITERAL _ ASSERT LITERAL _ ASSERT } , 
 * { @ link TokenTypes # TYPE _ EXTENSION _ AND TYPE _ EXTENSION _ AND } . 
 - * < / p > 
 + * 
 * < p > 
 * An example of how to configure the check is : 
 - * < / p > 
 + * 
 * < pre > 
 * & lt ; module name = " WhitespaceAround " / & gt ; 
 * < / pre > 
 + * 
 * < p > An example of how to configure the check for whitespace only around 
 * assignment operators is : 
 - * < / p > 
 + * 
 * < pre > 
 * & lt ; module name = " WhitespaceAround " & gt ; 
 * & lt ; property name = " tokens " 
 * value = " ASSIGN , DIV _ ASSIGN , PLUS _ ASSIGN , MINUS _ ASSIGN , STAR _ ASSIGN , MOD _ ASSIGN , SR _ ASSIGN , BSR _ ASSIGN , SL _ ASSIGN , BXOR _ ASSIGN , BOR _ ASSIGN , BAND _ ASSIGN " / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 + * 
 * < p > 
 * In addition , this check can be configured to allow empty methods , types , 
 * for , while , do - while loops and constructor bodies .
