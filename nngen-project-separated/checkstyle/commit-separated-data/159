BLEU SCORE: 0.0241596535992123

TEST MSG: config : bump equalsverifier to 3 . 0
GENERATED MSG: Issue # 4396 : increase coverage of pitest - checkstyle - filters profile to 100 %

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 5cfca1d . . 7bc77bb 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 279 , 7 + 279 , 7 @ @ <nl> < dependency > <nl> < groupId > nl . jqno . equalsverifier < / groupId > <nl> < artifactId > equalsverifier < / artifactId > <nl> - < version > 2 . 5 . 2 < / version > <nl> + < version > 3 . 0 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / FilterSetTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / FilterSetTest . java <nl> index 319fad8 . . faf9e5d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / FilterSetTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / FilterSetTest . java <nl> @ @ - 26 , 12 + 26 , 15 @ @ import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . filters . SeverityMatchFilter ; <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class FilterSetTest { <nl> <nl> @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> - EqualsVerifier . forClass ( FilterSet . class ) . usingGetClass ( ) . verify ( ) ; <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( FilterSet . class ) . usingGetClass ( ) <nl> + . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LineColumnTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LineColumnTest . java <nl> index e243a27 . . 6eab5ef 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LineColumnTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LineColumnTest . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ import static org . junit . Assert . assertEquals ; <nl> import org . junit . Test ; <nl> <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class LineColumnTest { <nl> <nl> @ @ - 55 , 7 + 56 , 9 @ @ public class LineColumnTest { <nl> <nl> @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> - EqualsVerifier . forClass ( LineColumn . class ) . usingGetClass ( ) . verify ( ) ; <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( LineColumn . class ) . usingGetClass ( ) <nl> + . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> index 124fada . . 0d7f9db 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> @ @ - 44 , 6 + 44 , 7 @ @ import org . junit . Test ; <nl> import org . powermock . reflect . Whitebox ; <nl> <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class LocalizedMessageTest { <nl> <nl> @ @ - 51 , 7 + 52 , 9 @ @ public class LocalizedMessageTest { <nl> <nl> @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> - EqualsVerifier . forClass ( LocalizedMessage . class ) . usingGetClass ( ) . verify ( ) ; <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( LocalizedMessage . class ) <nl> + . usingGetClass ( ) . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterTest . java <nl> index ff6831f . . 4d6eb9e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterTest . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import static org . junit . Assert . assertTrue ; <nl> import org . junit . Test ; <nl> <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class CsvFilterTest { <nl> <nl> @ @ - 111 , 7 + 112 , 9 @ @ public class CsvFilterTest { <nl> <nl> @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> - EqualsVerifier . forClass ( CsvFilter . class ) . usingGetClass ( ) . verify ( ) ; <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( CsvFilter . class ) . usingGetClass ( ) <nl> + . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterTest . java <nl> index 9f46174 . . aa7f563 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterTest . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import static org . junit . Assert . assertTrue ; <nl> import org . junit . Test ; <nl> <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class IntMatchFilterTest { <nl> <nl> @ @ - 39 , 7 + 40 , 8 @ @ public class IntMatchFilterTest { <nl> <nl> @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> - EqualsVerifier . forClass ( IntMatchFilter . class ) . verify ( ) ; <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( IntMatchFilter . class ) . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterTest . java <nl> index b87de70 . . b452948 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterTest . java <nl> @ @ - 19 , 12 + 19 , 14 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . filters ; <nl> <nl> + import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> import org . junit . Test ; <nl> <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class IntRangeFilterTest { <nl> <nl> @ @ - 58 , 7 + 60 , 9 @ @ public class IntRangeFilterTest { <nl> <nl> @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> - EqualsVerifier . forClass ( IntRangeFilter . class ) . usingGetClass ( ) . verify ( ) ; <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( IntRangeFilter . class ) <nl> + . usingGetClass ( ) . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> index 5446dbf . . 571f219 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> @ @ - 31 , 6 + 31 , 7 @ @ import com . puppycrawl . tools . checkstyle . TreeWalkerTest ; <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> import nl . jqno . equalsverifier . Warning ; <nl> <nl> public class SuppressElementTest { <nl> @ @ - 230 , 12 + 231 , 13 @ @ public class SuppressElementTest { <nl> <nl> @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> - EqualsVerifier . forClass ( SuppressElement . class ) <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( SuppressElement . class ) <nl> . usingGetClass ( ) <nl> . withIgnoredFields ( " fileRegexp " , " checkRegexp " , " messageRegexp " , " columnFilter " , <nl> " lineFilter " ) <nl> . suppress ( Warning . NONFINAL _ FIELDS ) <nl> - . verify ( ) ; <nl> + . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java <nl> index 9912cb9 . . a6d3741 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java <nl> @ @ - 46 , 6 + 46 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class SuppressWithNearbyCommentFilterTest <nl> extends AbstractModuleTestSupport { <nl> @ @ - 286 , 7 + 287 , 9 @ @ public class SuppressWithNearbyCommentFilterTest <nl> <nl> @ Test <nl> public void testEqualsAndHashCodeOfTagClass ( ) { <nl> - EqualsVerifier . forClass ( SuppressWithNearbyCommentFilter . Tag . class ) . usingGetClass ( ) . verify ( ) ; <nl> + final EqualsVerifierReport ev = EqualsVerifier <nl> + . forClass ( SuppressWithNearbyCommentFilter . Tag . class ) . usingGetClass ( ) . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> private void verifySuppressed ( Configuration moduleConfig , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilterTest . java <nl> index ddb6b39 . . 84af5cc 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilterTest . java <nl> @ @ - 46 , 6 + 46 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . regexp . RegexpSinglelineCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . whitespace . FileTabCharacterCheck ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class SuppressWithPlainTextCommentFilterTest extends AbstractModuleTestSupport { <nl> <nl> @ @ - 298 , 8 + 299 , 10 @ @ public class SuppressWithPlainTextCommentFilterTest extends AbstractModuleTestSu <nl> <nl> @ Test <nl> public void testEqualsAndHashCodeOfTagClass ( ) { <nl> - EqualsVerifier . forClass ( SuppressWithPlainTextCommentFilter . Suppression . class ) <nl> - . usingGetClass ( ) . verify ( ) ; <nl> + final EqualsVerifierReport ev = EqualsVerifier <nl> + . forClass ( SuppressWithPlainTextCommentFilter . Suppression . class ) . usingGetClass ( ) <nl> + . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java <nl> index a254b2a . . bbf8aae 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java <nl> @ @ - 47 , 6 + 47 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class SuppressionCommentFilterTest <nl> extends AbstractModuleTestSupport { <nl> @ @ - 299 , 7 + 300 , 9 @ @ public class SuppressionCommentFilterTest <nl> <nl> @ Test <nl> public void testEqualsAndHashCodeOfTagClass ( ) { <nl> - EqualsVerifier . forClass ( SuppressionCommentFilter . Tag . class ) . usingGetClass ( ) . verify ( ) ; <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( SuppressionCommentFilter . Tag . class ) <nl> + . usingGetClass ( ) . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> index 72c73c2 . . 0a643f7 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> @ @ - 39 , 6 + 39 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> import nl . jqno . equalsverifier . Warning ; <nl> <nl> public class SuppressionFilterTest extends AbstractModuleTestSupport { <nl> @ @ - 53 , 12 + 54 , 12 @ @ public class SuppressionFilterTest extends AbstractModuleTestSupport { <nl> <nl> @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> - EqualsVerifier <nl> - . forClass ( SuppressionFilter . class ) <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( SuppressionFilter . class ) <nl> . usingGetClass ( ) <nl> . withIgnoredFields ( " file " , " optional " , " configuration " ) <nl> . suppress ( Warning . NONFINAL _ FIELDS ) <nl> - . verify ( ) ; <nl> + . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionXpathFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionXpathFilterTest . java <nl> index 94d9ead . . 2ea4b7f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionXpathFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionXpathFilterTest . java <nl> @ @ - 38 , 6 + 38 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> import nl . jqno . equalsverifier . Warning ; <nl> <nl> public class SuppressionXpathFilterTest extends AbstractModuleTestSupport { <nl> @ @ - 157 , 12 + 158 , 11 @ @ public class SuppressionXpathFilterTest extends AbstractModuleTestSupport { <nl> <nl> @ Test <nl> public void testEqualsAndHashCode ( ) { <nl> - EqualsVerifier <nl> - . forClass ( SuppressionXpathFilter . class ) <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( SuppressionXpathFilter . class ) <nl> . usingGetClass ( ) <nl> . withIgnoredFields ( " file " , " optional " , " configuration " ) <nl> - . suppress ( Warning . NONFINAL _ FIELDS ) <nl> - . verify ( ) ; <nl> + . suppress ( Warning . NONFINAL _ FIELDS ) . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterTest . java <nl> index df5db2d . . 7e5a3cd 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . filters ; <nl> <nl> + import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> @ @ - 39 , 6 + 40 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import net . sf . saxon . sxpath . XPathEvaluator ; <nl> import net . sf . saxon . sxpath . XPathExpression ; <nl> import nl . jqno . equalsverifier . EqualsVerifier ; <nl> + import nl . jqno . equalsverifier . EqualsVerifierReport ; <nl> <nl> public class XpathFilterTest extends AbstractModuleTestSupport { <nl> <nl> @ @ - 262 , 12 + 264 , 14 @ @ public class XpathFilterTest extends AbstractModuleTestSupport { <nl> @ Test <nl> public void testEqualsAndHashCode ( ) throws Exception { <nl> final XPathEvaluator xpathEvaluator = new XPathEvaluator ( ) ; <nl> - EqualsVerifier . forClass ( XpathFilter . class ) . withPrefabValues ( XPathExpression . class , <nl> + final EqualsVerifierReport ev = EqualsVerifier . forClass ( XpathFilter . class ) <nl> + . withPrefabValues ( XPathExpression . class , <nl> xpathEvaluator . createExpression ( " / / METHOD _ DEF " ) , <nl> xpathEvaluator . createExpression ( " / / VARIABLE _ DEF " ) ) <nl> . usingGetClass ( ) <nl> . withIgnoredFields ( " fileRegexp " , " checkRegexp " , " messageRegexp " , " xpathExpression " ) <nl> - . verify ( ) ; <nl> + . report ( ) ; <nl> + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; <nl> } <nl> <nl> private TreeWalkerAuditEvent getEvent ( int line , int column , int tokenType )
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index 8032ce9 . . 0028306 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 49 , 6 + 49 , 7 @ @ import com . google . common . io . Closeables ; <nl> import com . puppycrawl . tools . checkstyle . api . AuditListener ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . api . RootModule ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> @ @ - 58 , 6 + 59 , 21 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * <nl> * * / <nl> public final class Main { <nl> + / * * <nl> + * A key pointing to the error counter <nl> + * message in the " messages . properties " file . <nl> + * / <nl> + public static final String ERROR _ COUNTER = " Main . errorCounter " ; <nl> + / * * <nl> + * A key pointing to the load properties exception <nl> + * message in the " messages . properties " file . <nl> + * / <nl> + public static final String LOAD _ PROPERTIES _ EXCEPTION = " Main . loadProperties " ; <nl> + / * * <nl> + * A key pointing to the create listener exception <nl> + * message in the " messages . properties " file . <nl> + * / <nl> + public static final String CREATE _ LISTENER _ EXCEPTION = " Main . createListener " ; <nl> / * * Logger for Main . * / <nl> private static final Log LOG = LogFactory . getLog ( Main . class ) ; <nl> <nl> @ @ - 211 , 7 + 227 , 10 @ @ public final class Main { <nl> finally { <nl> / / return exit code base on validation of Checker <nl> if ( errorCounter ! = 0 & & ! cliViolations ) { <nl> - System . out . println ( String . format ( " Checkstyle ends with % d errors . " , errorCounter ) ) ; <nl> + final LocalizedMessage errorCounterMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , ERROR _ COUNTER , <nl> + new String [ ] { String . valueOf ( errorCounter ) } , null , Main . class , null ) ; <nl> + System . out . println ( errorCounterMessage . getMessage ( ) ) ; <nl> } <nl> if ( exitStatus ! = 0 ) { <nl> System . exit ( exitStatus ) ; <nl> @ @ - 531 , 8 + 550 , 10 @ @ public final class Main { <nl> properties . load ( fis ) ; <nl> } <nl> catch ( final IOException ex ) { <nl> - throw new CheckstyleException ( String . format ( <nl> - " Unable to load properties from file ' % s ' . " , file . getAbsolutePath ( ) ) , ex ) ; <nl> + final LocalizedMessage loadPropertiesExceptionMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , LOAD _ PROPERTIES _ EXCEPTION , <nl> + new String [ ] { file . getAbsolutePath ( ) } , null , Main . class , null ) ; <nl> + throw new CheckstyleException ( loadPropertiesExceptionMessage . getMessage ( ) , ex ) ; <nl> } <nl> finally { <nl> Closeables . closeQuietly ( fis ) ; <nl> @ @ - 579 , 9 + 600 , 11 @ @ public final class Main { <nl> if ( closeOutputStream ) { <nl> CommonUtils . close ( out ) ; <nl> } <nl> - throw new IllegalStateException ( String . format ( <nl> - " Invalid output format . Found ' % s ' but expected ' % s ' or ' % s ' . " , <nl> - format , PLAIN _ FORMAT _ NAME , XML _ FORMAT _ NAME ) ) ; <nl> + final LocalizedMessage outputFormatExceptionMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , CREATE _ LISTENER _ EXCEPTION , <nl> + new String [ ] { format , PLAIN _ FORMAT _ NAME , XML _ FORMAT _ NAME } , null , <nl> + Main . class , null ) ; <nl> + throw new IllegalStateException ( outputFormatExceptionMessage . getMessage ( ) ) ; <nl> } <nl> <nl> return listener ; <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties <nl> index 00bbe2b . . 436eb7c 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties <nl> @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Error auditing { 0 } <nl> DefaultLogger . auditStarted = Starting audit . . . <nl> DefaultLogger . auditFinished = Audit done . <nl> <nl> + # <nl> + # for Main . java <nl> + # <nl> + Main . errorCounter = Checkstyle ends with { 0 } errors . <nl> + Main . loadProperties = Unable to load properties from file ' ' { 0 } ' ' . <nl> + Main . createListener = Invalid output format . Found ' ' { 0 } ' ' but expected ' ' { 1 } ' ' or ' ' { 2 } ' ' . <nl> + <nl> PackageObjectFactory . unableToInstantiateExceptionMessage = Unable to instantiate ' ' { 0 } ' ' \ <nl> class , it is also not possible to instantiate it as { 1 } . \ <nl> Please recheck that class name is specified as canonical name or read how to configure \ <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties <nl> index 41b4784 . . 0a459c8 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties <nl> @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Fehler beim Pr ü fen von { 0 } <nl> DefaultLogger . auditStarted = Beginne Pr ü fung . . . <nl> DefaultLogger . auditFinished = Pr ü fung beendet . <nl> <nl> + # <nl> + # for Main . java <nl> + # <nl> + Main . errorCounter = Checkstyle endet mit { 0 } Fehlern . <nl> + Main . loadProperties = Die Eigenschaften von Datei ' ' { 0 } ' ' k ö nnen nicht geladen werden . <nl> + Main . createListener = Ung ü ltiges Ausgabeformat . Gefunden ' ' { 0 } ' ' aber erwartet ' ' { 1 } ' ' oder ' ' { 2 } ' ' . <nl> + <nl> PackageObjectFactory . unableToInstantiateExceptionMessage = Fehler beim Instanziieren \ <nl> der Klasse ' ' { 0 } ' ' . Es war auch nicht m ö glich , sie als { 1 } zu instanziieren . \ <nl> Bitte pr ü fen Sie , dass der Klassenname als kanonischer Name angegeben wurde oder lesen Sie , wie Sie \ <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties <nl> index ed78290 . . e430706 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties <nl> @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Error auditando { 0 } <nl> DefaultLogger . auditStarted = Comenzando auditor í a . . . <nl> DefaultLogger . auditFinished = Auditor í a concluida . <nl> <nl> + # <nl> + # for Main . java <nl> + # <nl> + Main . errorCounter = Checkstyle termina con { 0 } errores . <nl> + Main . loadProperties = No se pueden cargar las propiedades del archivo ' ' { 0 } ' ' . <nl> + Main . createListener = Formato de salida no v á lido . Encontrado ' ' { 0 } ' ' pero esperado ' ' { 1 } ' ' o ' ' { 2 } ' ' . <nl> + <nl> PackageObjectFactory . unableToInstantiateExceptionMessage = No se ha podido crear \ <nl> una instancia ' ' { 0 } ' ' de clase , sino que tambi é n no es posible crear una \ <nl> instancia como { 1 } . Por favor vuelva a comprobar que el nombre \ <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties <nl> index dc83b0d . . b614082 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties <nl> @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Virhe { 0 } : n tarkistuksessa <nl> DefaultLogger . auditStarted = Aloitetaan tarkistus . . . <nl> DefaultLogger . auditFinished = Tarkistus valmis . <nl> <nl> + # <nl> + # for Main . java <nl> + # <nl> + Main . errorCounter = Checkstyle p ä ä ttyy { 0 } virheell ä . <nl> + Main . loadProperties = Ominaisuuksia ei voi ladata tiedostosta ' ' { 0 } ' ' . <nl> + Main . createListener = Virheellinen tulostusmuoto . L ö ytyi ' ' { 0 } ' ' mutta odotti ' ' { 1 } ' ' tai ' ' { 2 } ' ' . <nl> + <nl> PackageObjectFactory . unableToInstantiateExceptionMessage = Ei voitu instantiate ' ' { 0 } ' ' \ <nl> luokan , se ei my ö sk ä ä n ole mahdollista instantiate sit ä \ <nl> Ole hyv ä ja tarkista , ett ä luokan nimi on { 1 } . \ <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties <nl> index e721e7d . . 20006b0 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties <nl> @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Une erreur est survenue { 0 } <nl> DefaultLogger . auditStarted = D é but de la v é rification . . . <nl> DefaultLogger . auditFinished = V é rification termin é e . <nl> <nl> + # <nl> + # for Main . java <nl> + # <nl> + Main . errorCounter = Checkstyle se termine par { 0 } erreurs . <nl> + Main . loadProperties = Impossible de charger des propri é t é s à partir du fichier ' ' { 0 } ' ' . <nl> + Main . createListener = Format de sortie invalide . Trouv é ' ' { 0 } ' ' mais attendu ' ' { 1 } ' ' ou ' ' { 2 } ' ' . <nl> + <nl> PackageObjectFactory . unableToInstantiateExceptionMessage = Impossible d ' instancier la classe \ <nl> ' ' { 0 } ' ' , il est é galement impossible de l ' ' instancier comme { 1 } . \ <nl> Veuillez v é rifier que le nom de classe est sp é cifi é comme nom canonique ou regardez comment \ <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties <nl> index 4daf971 . . df7113a 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties <nl> @ @ - 7 , 6 + 7 , 14 @ @ general . exception = 例 外 が 発 生 し ま し た - { 0 } <nl> DefaultLogger . addException = { 0 } を 監 査 中 の エ ラ ー <nl> DefaultLogger . auditStarted = 監 査 を 開 始 し て い ま す . . . <nl> DefaultLogger . auditFinished = 監 査 が 完 了 し ま し た 。 <nl> + <nl> + # <nl> + # for Main . java <nl> + # <nl> + Main . errorCounter = Checkstyle は { 0 } 個 の エ ラ ー で 終 了 し ま す 。 <nl> + Main . loadProperties = フ ァ イ ル ' ' { 0 } ' ' か ら プ ロ パ テ ィ を 読 み 込 め ま せ ん 。 <nl> + Main . createListener = 無 効 な 出 力 形 式 で す 。 ' ' { 0 } ' ' 名 が 見 つ か り ま し た が 、 ' ' { 1 } ' ' 名 か ' ' { 2 } ' ' 名 で す 。 <nl> + <nl> PackageObjectFactory . unableToInstantiateExceptionMessage = ' ' { 0 } ' ' ク ラ ス を イ ン ス タ ン ス 化 \ <nl> で き ま せ ん で し た 。 ま た 、 以 下 の ク ラ ス 名 で も イ ン ス タ ン ス 化 で き ま せ ん で し た { 1 } 。 \ <nl> ク ラ ス 名 を 正 規 名 で 指 定 し て い る か 再 確 認 し て く だ さ い 。 ま た は 、 単 純 名 の 使 用 を 設 定 す る 方 法 \ <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties <nl> index 97f5ca8 . . 17979e0 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties <nl> @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Erro ao auditar { 0 } <nl> DefaultLogger . auditStarted = A iniciar a auditoria . . . <nl> DefaultLogger . auditFinished = Auditoria completa . <nl> <nl> + # <nl> + # for Main . java <nl> + # <nl> + Main . errorCounter = Checkstyle termina com { 0 } erros . <nl> + Main . loadProperties = N ã o é poss í vel carregar propriedades do arquivo ' ' { 0 } ' ' . <nl> + Main . createListener = Formato de sa í da inv á lido . Encontrou ' ' { 0 } ' ' mas esperava ' ' { 1 } ' ' ou ' ' { 2 } ' ' . <nl> + <nl> PackageObjectFactory . unableToInstantiateExceptionMessage = N ã o é poss í vel instanciar ' ' { 0 } ' ' \ <nl> classe , tamb é m n ã o é poss í vel instanciar - lo como { 1 } . \ <nl> Por favor , volte a verificar que o nome da classe \ <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties <nl> index 96769f5 . . faac17e 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties <nl> @ @ - 7 , 6 + 7 , 13 @ @ DefaultLogger . auditStarted = Denetleme ba ş l ı yor . . . <nl> general . exception = Bir istisna yakaland ı - { 0 } <nl> general . fileNotFound = Dosya bulunamad ı ! <nl> <nl> + # <nl> + # for Main . java <nl> + # <nl> + Main . errorCounter = Checkstyle { 0 } hatayla bitiyor . <nl> + Main . loadProperties = ' ' { 0 } ' ' dosyas ı ndan ö zellik y ü klenemiyor . <nl> + Main . createListener = Ge ç ersiz ç ı kt ı bi ç imi . ' ' { 0 } ' ' ancak beklenen ' ' { 1 } ' ' veya ' ' { 2 } ' ' bulundu . <nl> + <nl> PackageObjectFactory . unableToInstantiateExceptionMessage = ' ' { 0 } ' ' s ı n ı f ı n ı a ç ı lam ı yor , \ <nl> bu olarak ö rne ğ ini de m ü mk ü n de ğ ildir { 1 } . \ <nl> Bu s ı n ı f ad ı kurall ı ad ı olarak belirtilir yeniden kontrol edin veya k ı sa ad ı \ <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties <nl> index bb7e614 . . 83c12a3 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties <nl> @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = 检 查 错 误 ： { 0 } <nl> DefaultLogger . auditStarted = 开 始 检 查 … … <nl> DefaultLogger . auditFinished = 检 查 完 成 。 <nl> <nl> + # <nl> + # for Main . java <nl> + # <nl> + Main . errorCounter = Checkstyle 以 { 0 } 个 错 误 结 束 。 <nl> + Main . loadProperties = 无 法 从 文 件 ' ' { 0 } ' ' 中 加 载 属 性 。 <nl> + Main . createListener = 非 法 的 输 出 格 式 。 预 期 为 ' ' { 1 } ' ' 或 ' ' { 2 } ' ' ， 但 实 际 为 ' ' { 0 } ' ' 。 <nl> + <nl> PackageObjectFactory . unableToInstantiateExceptionMessage = 无 法 初 始 化 类 ： ' ' { 0 } ' ' \ <nl> ， 也 无 法 初 始 化 ： { 1 } 。 \ <nl> 请 检 查 类 名 大 小 写 ， 或 阅 读 帮 助 手 册 中 短 名 称 配 置 部 分 ： \ <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 5ec3aba . . 01f7313 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 46 , 10 + 46 , 8 @ @ import java . util . regex . Pattern ; <nl> <nl> import org . apache . commons . io . FileUtils ; <nl> import org . junit . Before ; <nl> - import org . junit . BeforeClass ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> - import org . junit . contrib . java . lang . system . Assertion ; <nl> import org . junit . contrib . java . lang . system . ExpectedSystemExit ; <nl> import org . junit . contrib . java . lang . system . SystemErrRule ; <nl> import org . junit . contrib . java . lang . system . SystemOutRule ; <nl> @ @ - 91 , 6 + 89 , 8 @ @ public class MainTest { <nl> private static final Handler [ ] HANDLERS = LOG . getHandlers ( ) ; <nl> private static final Level ORIGINAL _ LOG _ LEVEL = LOG . getLevel ( ) ; <nl> <nl> + private static final String EOL = System . getProperty ( " line . separator " ) ; <nl> + <nl> @ Rule <nl> public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> @ Rule <nl> @ @ - 100 , 6 + 100 , 18 @ @ public class MainTest { <nl> @ Rule <nl> public final SystemOutRule systemOut = new SystemOutRule ( ) . enableLog ( ) . mute ( ) ; <nl> <nl> + private final LocalizedMessage auditStartMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . auditStarted " , null , null , <nl> + getClass ( ) , null ) ; <nl> + <nl> + private final LocalizedMessage auditFinishMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . auditFinished " , null , null , <nl> + getClass ( ) , null ) ; <nl> + <nl> + private final LocalizedMessage errorCounterOneMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , " Main . errorCounter " , <nl> + new String [ ] { String . valueOf ( 1 ) } , null , getClass ( ) , null ) ; <nl> + <nl> private static String getPath ( String filename ) { <nl> return " src / test / resources / com / puppycrawl / tools / checkstyle / " + filename ; <nl> } <nl> @ @ - 112 , 13 + 124 , 6 @ @ public class MainTest { <nl> return new File ( getPath ( filename ) ) . getCanonicalPath ( ) ; <nl> } <nl> <nl> - @ BeforeClass <nl> - public static void init ( ) { <nl> - / / Set locale to root to prevent check message fail <nl> - / / in other language environment . <nl> - Locale . setDefault ( Locale . ROOT ) ; <nl> - } <nl> - <nl> @ Before <nl> public void setUp ( ) { <nl> / / restore original logging level and HANDLERS to prevent bleeding into other tests <nl> @ @ - 163 , 7 + 168 , 7 @ @ public class MainTest { <nl> throws Exception { <nl> exit . expectSystemExitWithStatus ( - 1 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - final String usage = String . format ( Locale . ROOT , " Unrecognized option : - w % n " ) <nl> + final String usage = " Unrecognized option : - w " + EOL <nl> + USAGE ; <nl> assertEquals ( usage , systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> @ @ - 200 , 9 + 205 , 8 @ @ public class MainTest { <nl> throws Exception { <nl> exit . expectSystemExitWithStatus ( - 1 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - assertEquals ( String . format ( Locale . ROOT , <nl> - " Could not find config XML file " <nl> - + " ' src / main / resources / non _ existing _ config . xml ' . % n " ) , <nl> + assertEquals ( " Could not find config XML file " <nl> + + " ' src / main / resources / non _ existing _ config . xml ' . " + EOL , <nl> systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } ) ; <nl> @ @ - 214 , 8 + 218 , 8 @ @ public class MainTest { <nl> public void testNonExistingOutputFormat ( ) throws Exception { <nl> exit . expectSystemExitWithStatus ( - 1 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - assertEquals ( String . format ( Locale . ROOT , " Invalid output format . " <nl> - + " Found ' xmlp ' but expected ' plain ' or ' xml ' . % n " ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " Invalid output format . " <nl> + + " Found ' xmlp ' but expected ' plain ' or ' xml ' . " + EOL , systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , " / google _ checks . xml " , " - f " , " xmlp " , <nl> @ @ - 226 , 8 + 230 , 8 @ @ public class MainTest { <nl> public void testNonExistingClass ( ) throws Exception { <nl> exit . expectSystemExitWithStatus ( - 2 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - final String expectedExceptionMessage = <nl> - String . format ( Locale . ROOT , " Checkstyle ends with 1 errors . % n " ) ; <nl> + final String expectedExceptionMessage = errorCounterOneMessage . getMessage ( ) <nl> + + EOL ; <nl> assertEquals ( expectedExceptionMessage , systemOut . getLog ( ) ) ; <nl> <nl> final String cause = " com . puppycrawl . tools . checkstyle . api . CheckstyleException : " <nl> @ @ - 243 , 8 + 247 , 9 @ @ public class MainTest { <nl> public void testExistingTargetFile ( ) throws Exception { <nl> <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " <nl> - + " Audit done . % n " ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( auditStartMessage . getMessage ( ) + EOL <nl> + + auditFinishMessage . getMessage ( ) + EOL , <nl> + systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> @ @ - 260 , 12 + 265 , 11 @ @ public class MainTest { <nl> ResourceBundle . getBundle ( " checkstylecompilation " , Locale . ROOT ) ; <nl> final String version = compilationProperties <nl> . getString ( " checkstyle . compile . version " ) ; <nl> - assertEquals ( String . format ( Locale . ROOT , <nl> - " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > % n " <nl> - + " < checkstyle version = \ " % s \ " > % n " <nl> - + " < file name = \ " % s \ " > % n " <nl> - + " < / file > % n " <nl> - + " < / checkstyle > % n " , version , expectedPath ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > " + EOL <nl> + + " < checkstyle version = \ " " + version + " \ " > " + EOL <nl> + + " < file name = \ " " + expectedPath + " \ " > " + EOL <nl> + + " < / file > " + EOL <nl> + + " < / checkstyle > " + EOL , systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> @ @ - 277 , 8 + 281 , 8 @ @ public class MainTest { <nl> public void testExistingTargetFilePlainOutput ( ) throws Exception { <nl> <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " <nl> - + " Audit done . % n " ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( auditStartMessage . getMessage ( ) + EOL <nl> + + auditFinishMessage . getMessage ( ) + EOL , systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " config - classname . xml " ) , <nl> @ @ - 289 , 16 + 293 , 23 @ @ public class MainTest { <nl> @ Test <nl> public void testExistingTargetFileWithViolations ( ) throws Exception { <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> + final LocalizedMessage invalidPatternMessageMain = new LocalizedMessage ( 0 , <nl> + " com . puppycrawl . tools . checkstyle . checks . naming . messages " , <nl> + " name . invalidPattern " , new String [ ] { " InputMain " , " ^ [ a - z0 - 9 ] * $ " } , <nl> + null , getClass ( ) , null ) ; <nl> + final LocalizedMessage invalidPatternMessageMainInner = new LocalizedMessage ( 0 , <nl> + " com . puppycrawl . tools . checkstyle . checks . naming . messages " , <nl> + " name . invalidPattern " , new String [ ] { " InputMainInner " , " ^ [ a - z0 - 9 ] * $ " } , <nl> + null , getClass ( ) , null ) ; <nl> final String expectedPath = getFilePath ( " InputMain . java " ) ; <nl> - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " <nl> - + " [ WARN ] % 1 $ s : 3 : 14 : " <nl> - + " Name ' InputMain ' must match pattern " <nl> - + " ' ^ [ a - z0 - 9 ] * $ ' . [ TypeName ] % n " <nl> - + " [ WARN ] % 1 $ s : 5 : 7 : " <nl> - + " Name ' InputMainInner ' must match pattern " <nl> - + " ' ^ [ a - z0 - 9 ] * $ ' . [ TypeName ] % n " <nl> - + " Audit done . % n " , expectedPath ) , <nl> - systemOut . getLog ( ) ) ; <nl> + assertEquals ( auditStartMessage . getMessage ( ) + EOL <nl> + + " [ WARN ] " + expectedPath + " : 3 : 14 : " <nl> + + invalidPatternMessageMain . getMessage ( ) <nl> + + " [ TypeName ] " + EOL <nl> + + " [ WARN ] " + expectedPath + " : 5 : 7 : " <nl> + + invalidPatternMessageMainInner . getMessage ( ) <nl> + + " [ TypeName ] " + EOL <nl> + + auditFinishMessage . getMessage ( ) + EOL , systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " config - classname2 . xml " ) , <nl> @ @ - 310 , 14 + 321 , 25 @ @ public class MainTest { <nl> throws Exception { <nl> exit . expectSystemExitWithStatus ( 2 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> + final LocalizedMessage errorCounterTwoMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , " Main . errorCounter " , <nl> + new String [ ] { String . valueOf ( 2 ) } , null , getClass ( ) , null ) ; <nl> + final LocalizedMessage invalidPatternMessageMain = new LocalizedMessage ( 0 , <nl> + " com . puppycrawl . tools . checkstyle . checks . naming . messages " , <nl> + " name . invalidPattern " , new String [ ] { " InputMain " , " ^ [ a - z0 - 9 ] * $ " } , <nl> + null , getClass ( ) , null ) ; <nl> + final LocalizedMessage invalidPatternMessageMainInner = new LocalizedMessage ( 0 , <nl> + " com . puppycrawl . tools . checkstyle . checks . naming . messages " , <nl> + " name . invalidPattern " , new String [ ] { " InputMainInner " , " ^ [ a - z0 - 9 ] * $ " } , <nl> + null , getClass ( ) , null ) ; <nl> final String expectedPath = getFilePath ( " InputMain . java " ) ; <nl> - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " <nl> - + " [ ERROR ] % 1 $ s : 3 : 14 : " <nl> - + " Name ' InputMain ' must match pattern ' ^ [ a - z0 - 9 ] * $ ' . [ TypeName ] % n " <nl> - + " [ ERROR ] % 1 $ s : 5 : 7 : " <nl> - + " Name ' InputMainInner ' must match pattern ' ^ [ a - z0 - 9 ] * $ ' . [ TypeName ] % n " <nl> - + " Audit done . % n " <nl> - + " Checkstyle ends with 2 errors . % n " , expectedPath ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( auditStartMessage . getMessage ( ) + EOL <nl> + + " [ ERROR ] " + expectedPath + " : 3 : 14 : " <nl> + + invalidPatternMessageMain . getMessage ( ) + " [ TypeName ] " + EOL <nl> + + " [ ERROR ] " + expectedPath + " : 5 : 7 : " <nl> + + invalidPatternMessageMainInner . getMessage ( ) + " [ TypeName ] " + EOL <nl> + + auditFinishMessage . getMessage ( ) + EOL <nl> + + errorCounterTwoMessage . getMessage ( ) + EOL , systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , <nl> @ @ - 369 , 8 + 391 , 8 @ @ public class MainTest { <nl> throws Exception { <nl> / / exit . expectSystemExitWithStatus ( 0 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " <nl> - + " Audit done . % n " ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( auditStartMessage . getMessage ( ) + EOL <nl> + + auditFinishMessage . getMessage ( ) + EOL , systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " config - classname - prop . xml " ) , <nl> @ @ - 397 , 8 + 419 , 7 @ @ public class MainTest { <nl> throws Exception { <nl> exit . expectSystemExitWithStatus ( - 2 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - final String output = String . format ( Locale . ROOT , <nl> - " Checkstyle ends with 1 errors . % n " ) ; <nl> + final String output = errorCounterOneMessage . getMessage ( ) + EOL ; <nl> assertEquals ( output , systemOut . getLog ( ) ) ; <nl> final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " <nl> + " CheckstyleException : unable to parse configuration stream - " ; <nl> @ @ - 413 , 8 + 434 , 7 @ @ public class MainTest { <nl> throws Exception { <nl> exit . expectSystemExitWithStatus ( - 2 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - final String output = String . format ( Locale . ROOT , <nl> - " Checkstyle ends with 1 errors . % n " ) ; <nl> + final String output = errorCounterOneMessage . getMessage ( ) + EOL ; <nl> assertEquals ( output , systemOut . getLog ( ) ) ; <nl> final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " <nl> + " CheckstyleException : cannot initialize module RegexpSingleline " <nl> @ @ - 430 , 8 + 450 , 7 @ @ public class MainTest { <nl> throws Exception { <nl> exit . expectSystemExitWithStatus ( - 2 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - final String output = String . format ( Locale . ROOT , <nl> - " Checkstyle ends with 1 errors . % n " ) ; <nl> + final String output = errorCounterOneMessage . getMessage ( ) + EOL ; <nl> assertEquals ( output , systemOut . getLog ( ) ) ; <nl> final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " <nl> + " CheckstyleException : cannot initialize module TreeWalker " <nl> @ @ - 468 , 9 + 487 , 7 @ @ public class MainTest { <nl> / / We do separate validation for message as in Windows <nl> / / disk drive letter appear in message , <nl> / / so we skip that drive letter for compatibility issues <nl> - assertTrue ( ex . getCause ( ) . getMessage ( ) <nl> - . startsWith ( " Unable to load properties from file ' " ) ) ; <nl> - assertTrue ( ex . getCause ( ) . getMessage ( ) . endsWith ( " : invalid ' . " ) ) ; <nl> + assertTrue ( ex . getCause ( ) . getLocalizedMessage ( ) . contains ( " : invalid " ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 484 , 8 + 501 , 11 @ @ public class MainTest { <nl> fail ( " InvocationTargetException is expected " ) ; <nl> } <nl> catch ( InvocationTargetException ex ) { <nl> + final LocalizedMessage loadPropertiesMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , " Main . createListener " , <nl> + new String [ ] { " myformat " , " plain " , " xml " } , null , getClass ( ) , null ) ; <nl> + assertEquals ( loadPropertiesMessage . getMessage ( ) , ex . getCause ( ) . getLocalizedMessage ( ) ) ; <nl> assertTrue ( ex . getCause ( ) instanceof IllegalStateException ) ; <nl> - assertTrue ( ex . getCause ( ) . getMessage ( ) . startsWith ( " Invalid output format . Found " ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 500 , 8 + 520 , 11 @ @ public class MainTest { <nl> fail ( " InvocationTargetException is expected " ) ; <nl> } <nl> catch ( InvocationTargetException ex ) { <nl> + final LocalizedMessage createListenerMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , " Main . createListener " , <nl> + new String [ ] { " myformat " , " plain " , " xml " } , null , getClass ( ) , null ) ; <nl> + assertEquals ( createListenerMessage . getMessage ( ) , ex . getCause ( ) . getLocalizedMessage ( ) ) ; <nl> assertTrue ( ex . getCause ( ) instanceof IllegalStateException ) ; <nl> - assertTrue ( ex . getCause ( ) . getMessage ( ) . startsWith ( " Invalid output format . Found " ) ) ; <nl> } <nl> finally { <nl> / / method creates output folder <nl> @ @ - 521 , 25 + 544 , 24 @ @ public class MainTest { <nl> final String msgKey = " maxLen . file " ; <nl> final String bundle = " com . puppycrawl . tools . checkstyle . checks . sizes . messages " ; <nl> <nl> - exit . checkAssertionAfterwards ( new Assertion ( ) { <nl> - @ Override <nl> - public void checkAssertion ( ) throws IOException { <nl> - final String expectedPath = getFilePath ( " main / " ) + File . separator ; <nl> - final StringBuilder sb = new StringBuilder ( 28 ) ; <nl> - sb . append ( " Starting audit . . . " ) . append ( System . getProperty ( " line . separator " ) ) ; <nl> - final String format = " [ WARN ] % s . java : % s : % s [ FileLength ] " ; <nl> - for ( String [ ] outputValue : outputValues ) { <nl> - final String localizedMessage = new LocalizedMessage ( 0 , bundle , <nl> - msgKey , new Integer [ ] { Integer . valueOf ( outputValue [ 2 ] ) , allowedLength } , <nl> - null , getClass ( ) , null ) . getMessage ( ) ; <nl> - final String line = String . format ( Locale . ROOT , format , <nl> - expectedPath + outputValue [ 0 ] , outputValue [ 1 ] , localizedMessage ) ; <nl> - sb . append ( line ) . append ( System . getProperty ( " line . separator " ) ) ; <nl> - } <nl> - sb . append ( " Audit done . " ) . append ( System . getProperty ( " line . separator " ) ) ; <nl> - assertEquals ( sb . toString ( ) , systemOut . getLog ( ) ) ; <nl> - assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> + exit . checkAssertionAfterwards ( ( ) - > { <nl> + final String expectedPath = getFilePath ( " main / " ) + File . separator ; <nl> + final StringBuilder sb = new StringBuilder ( 28 ) ; <nl> + sb . append ( auditStartMessage . getMessage ( ) ) <nl> + . append ( EOL ) ; <nl> + final String format = " [ WARN ] " + expectedPath + outputValues [ 0 ] [ 0 ] + " . java : " <nl> + + outputValues [ 0 ] [ 1 ] + " : " ; <nl> + for ( String [ ] outputValue : outputValues ) { <nl> + final String localizedMessage = new LocalizedMessage ( 0 , bundle , <nl> + msgKey , new Integer [ ] { Integer . valueOf ( outputValue [ 2 ] ) , allowedLength } , <nl> + null , getClass ( ) , null ) . getMessage ( ) ; <nl> + final String line = format + localizedMessage + " [ FileLength ] " ; <nl> + sb . append ( line ) . append ( EOL ) ; <nl> } <nl> + sb . append ( auditFinishMessage . getMessage ( ) ) <nl> + . append ( EOL ) ; <nl> + assertEquals ( sb . toString ( ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } ) ; <nl> <nl> Main . main ( " - c " , getPath ( " config - filelength . xml " ) , <nl> @ @ - 581 , 16 + 603 , 14 @ @ public class MainTest { <nl> public void testFileReferenceDuringException ( ) throws Exception { <nl> exit . expectSystemExitWithStatus ( - 2 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - final String expectedExceptionMessage = <nl> - String . format ( Locale . ROOT , " Starting audit . . . % n " <nl> - + " Checkstyle ends with 1 errors . % n " ) ; <nl> + final String expectedExceptionMessage = auditStartMessage . getMessage ( ) + EOL <nl> + + errorCounterOneMessage . getMessage ( ) + EOL ; <nl> assertEquals ( expectedExceptionMessage , systemOut . getLog ( ) ) ; <nl> <nl> - final String exceptionFirstLine = String . format ( Locale . ROOT , <nl> - " com . puppycrawl . tools . checkstyle . api . " <nl> + final String exceptionFirstLine = " com . puppycrawl . tools . checkstyle . api . " <nl> + " CheckstyleException : Exception was thrown while processing " <nl> + new File ( getNonCompilablePath ( " InputIncorrectClass . java " ) ) . getPath ( ) <nl> - + " % n " ) ; <nl> + + EOL ; <nl> assertTrue ( systemErr . getLog ( ) . startsWith ( exceptionFirstLine ) ) ; <nl> } ) ; <nl> <nl> @ @ - 614 , 31 + 634 , 31 @ @ public class MainTest { <nl> <nl> @ Test <nl> public void testPrintTreeOption ( ) throws Exception { <nl> - final String expected = String . format ( Locale . ROOT , " PACKAGE _ DEF - > package [ 1 : 0 ] % n " <nl> - + " | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] % n " <nl> - + " | - - DOT - > . [ 1 : 28 ] % n " <nl> - + " | | - - DOT - > . [ 1 : 22 ] % n " <nl> - + " | | | - - DOT - > . [ 1 : 11 ] % n " <nl> - + " | | | | - - IDENT - > com [ 1 : 8 ] % n " <nl> - + " | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] % n " <nl> - + " | | ` - - IDENT - > tools [ 1 : 23 ] % n " <nl> - + " | ` - - IDENT - > checkstyle [ 1 : 29 ] % n " <nl> - + " ` - - SEMI - > ; [ 1 : 39 ] % n " <nl> - + " CLASS _ DEF - > CLASS _ DEF [ 3 : 0 ] % n " <nl> - + " | - - MODIFIERS - > MODIFIERS [ 3 : 0 ] % n " <nl> - + " | ` - - LITERAL _ PUBLIC - > public [ 3 : 0 ] % n " <nl> - + " | - - LITERAL _ CLASS - > class [ 3 : 7 ] % n " <nl> - + " | - - IDENT - > InputMain [ 3 : 13 ] % n " <nl> - + " ` - - OBJBLOCK - > OBJBLOCK [ 3 : 23 ] % n " <nl> - + " | - - LCURLY - > { [ 3 : 23 ] % n " <nl> - + " ` - - RCURLY - > } [ 4 : 0 ] % n " <nl> - + " CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] % n " <nl> - + " | - - MODIFIERS - > MODIFIERS [ 5 : 0 ] % n " <nl> - + " | - - LITERAL _ CLASS - > class [ 5 : 0 ] % n " <nl> - + " | - - IDENT - > InputMainInner [ 5 : 6 ] % n " <nl> - + " ` - - OBJBLOCK - > OBJBLOCK [ 5 : 21 ] % n " <nl> - + " | - - LCURLY - > { [ 5 : 21 ] % n " <nl> - + " ` - - RCURLY - > } [ 6 : 0 ] % n " ) ; <nl> + final String expected = " PACKAGE _ DEF - > package [ 1 : 0 ] " + EOL <nl> + + " | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] " + EOL <nl> + + " | - - DOT - > . [ 1 : 28 ] " + EOL <nl> + + " | | - - DOT - > . [ 1 : 22 ] " + EOL <nl> + + " | | | - - DOT - > . [ 1 : 11 ] " + EOL <nl> + + " | | | | - - IDENT - > com [ 1 : 8 ] " + EOL <nl> + + " | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] " + EOL <nl> + + " | | ` - - IDENT - > tools [ 1 : 23 ] " + EOL <nl> + + " | ` - - IDENT - > checkstyle [ 1 : 29 ] " + EOL <nl> + + " ` - - SEMI - > ; [ 1 : 39 ] " + EOL <nl> + + " CLASS _ DEF - > CLASS _ DEF [ 3 : 0 ] " + EOL <nl> + + " | - - MODIFIERS - > MODIFIERS [ 3 : 0 ] " + EOL <nl> + + " | ` - - LITERAL _ PUBLIC - > public [ 3 : 0 ] " + EOL <nl> + + " | - - LITERAL _ CLASS - > class [ 3 : 7 ] " + EOL <nl> + + " | - - IDENT - > InputMain [ 3 : 13 ] " + EOL <nl> + + " ` - - OBJBLOCK - > OBJBLOCK [ 3 : 23 ] " + EOL <nl> + + " | - - LCURLY - > { [ 3 : 23 ] " + EOL <nl> + + " ` - - RCURLY - > } [ 4 : 0 ] " + EOL <nl> + + " CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] " + EOL <nl> + + " | - - MODIFIERS - > MODIFIERS [ 5 : 0 ] " + EOL <nl> + + " | - - LITERAL _ CLASS - > class [ 5 : 0 ] " + EOL <nl> + + " | - - IDENT - > InputMainInner [ 5 : 6 ] " + EOL <nl> + + " ` - - OBJBLOCK - > OBJBLOCK [ 5 : 21 ] " + EOL <nl> + + " | - - LCURLY - > { [ 5 : 21 ] " + EOL <nl> + + " ` - - RCURLY - > } [ 6 : 0 ] " + EOL ; <nl> <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> assertEquals ( expected , systemOut . getLog ( ) ) ; <nl> @ @ - 649 , 34 + 669 , 34 @ @ public class MainTest { <nl> <nl> @ Test <nl> public void testPrintTreeCommentsOption ( ) throws Exception { <nl> - final String expected = String . format ( Locale . ROOT , " PACKAGE _ DEF - > package [ 1 : 0 ] % n " <nl> - + " | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] % n " <nl> - + " | - - DOT - > . [ 1 : 28 ] % n " <nl> - + " | | - - DOT - > . [ 1 : 22 ] % n " <nl> - + " | | | - - DOT - > . [ 1 : 11 ] % n " <nl> - + " | | | | - - IDENT - > com [ 1 : 8 ] % n " <nl> - + " | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] % n " <nl> - + " | | ` - - IDENT - > tools [ 1 : 23 ] % n " <nl> - + " | ` - - IDENT - > checkstyle [ 1 : 29 ] % n " <nl> - + " ` - - SEMI - > ; [ 1 : 39 ] % n " <nl> - + " CLASS _ DEF - > CLASS _ DEF [ 3 : 0 ] % n " <nl> - + " | - - MODIFIERS - > MODIFIERS [ 3 : 0 ] % n " <nl> - + " | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 2 : 0 ] % n " <nl> - + " | | | - - COMMENT _ CONTENT - > comment [ 2 : 2 ] % n " <nl> - + " | | ` - - BLOCK _ COMMENT _ END - > * / [ 2 : 8 ] % n " <nl> - + " | ` - - LITERAL _ PUBLIC - > public [ 3 : 0 ] % n " <nl> - + " | - - LITERAL _ CLASS - > class [ 3 : 7 ] % n " <nl> - + " | - - IDENT - > InputMain [ 3 : 13 ] % n " <nl> - + " ` - - OBJBLOCK - > OBJBLOCK [ 3 : 23 ] % n " <nl> - + " | - - LCURLY - > { [ 3 : 23 ] % n " <nl> - + " ` - - RCURLY - > } [ 4 : 0 ] % n " <nl> - + " CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] % n " <nl> - + " | - - MODIFIERS - > MODIFIERS [ 5 : 0 ] % n " <nl> - + " | - - LITERAL _ CLASS - > class [ 5 : 0 ] % n " <nl> - + " | - - IDENT - > InputMainInner [ 5 : 6 ] % n " <nl> - + " ` - - OBJBLOCK - > OBJBLOCK [ 5 : 21 ] % n " <nl> - + " | - - LCURLY - > { [ 5 : 21 ] % n " <nl> - + " ` - - RCURLY - > } [ 6 : 0 ] % n " ) ; <nl> + final String expected = " PACKAGE _ DEF - > package [ 1 : 0 ] " + EOL <nl> + + " | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] " + EOL <nl> + + " | - - DOT - > . [ 1 : 28 ] " + EOL <nl> + + " | | - - DOT - > . [ 1 : 22 ] " + EOL <nl> + + " | | | - - DOT - > . [ 1 : 11 ] " + EOL <nl> + + " | | | | - - IDENT - > com [ 1 : 8 ] " + EOL <nl> + + " | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] " + EOL <nl> + + " | | ` - - IDENT - > tools [ 1 : 23 ] " + EOL <nl> + + " | ` - - IDENT - > checkstyle [ 1 : 29 ] " + EOL <nl> + + " ` - - SEMI - > ; [ 1 : 39 ] " + EOL <nl> + + " CLASS _ DEF - > CLASS _ DEF [ 3 : 0 ] " + EOL <nl> + + " | - - MODIFIERS - > MODIFIERS [ 3 : 0 ] " + EOL <nl> + + " | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 2 : 0 ] " + EOL <nl> + + " | | | - - COMMENT _ CONTENT - > comment [ 2 : 2 ] " + EOL <nl> + + " | | ` - - BLOCK _ COMMENT _ END - > * / [ 2 : 8 ] " + EOL <nl> + + " | ` - - LITERAL _ PUBLIC - > public [ 3 : 0 ] " + EOL <nl> + + " | - - LITERAL _ CLASS - > class [ 3 : 7 ] " + EOL <nl> + + " | - - IDENT - > InputMain [ 3 : 13 ] " + EOL <nl> + + " ` - - OBJBLOCK - > OBJBLOCK [ 3 : 23 ] " + EOL <nl> + + " | - - LCURLY - > { [ 3 : 23 ] " + EOL <nl> + + " ` - - RCURLY - > } [ 4 : 0 ] " + EOL <nl> + + " CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] " + EOL <nl> + + " | - - MODIFIERS - > MODIFIERS [ 5 : 0 ] " + EOL <nl> + + " | - - LITERAL _ CLASS - > class [ 5 : 0 ] " + EOL <nl> + + " | - - IDENT - > InputMainInner [ 5 : 6 ] " + EOL <nl> + + " ` - - OBJBLOCK - > OBJBLOCK [ 5 : 21 ] " + EOL <nl> + + " | - - LCURLY - > { [ 5 : 21 ] " + EOL <nl> + + " ` - - RCURLY - > } [ 6 : 0 ] " + EOL ; <nl> <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> assertEquals ( expected , systemOut . getLog ( ) ) ; <nl> @ @ - 824 , 15 + 844 , 18 @ @ public class MainTest { <nl> exit . expectSystemExitWithStatus ( - 2 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> final String checkstylePackage = " com . puppycrawl . tools . checkstyle . " ; <nl> - <nl> - assertEquals ( String . format ( Locale . ROOT , " Checkstyle ends with 1 errors . % n " ) , <nl> + final LocalizedMessage unableToInstantiateExceptionMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , <nl> + " PackageObjectFactory . unableToInstantiateExceptionMessage " , <nl> + new String [ ] { " TestRootModuleChecker " , checkstylePackage <nl> + + " TestRootModuleChecker , " <nl> + + " TestRootModuleCheckerCheck , " + checkstylePackage <nl> + + " TestRootModuleCheckerCheck " } , <nl> + null , getClass ( ) , null ) ; <nl> + assertEquals ( errorCounterOneMessage . getMessage ( ) + EOL , <nl> systemOut . getLog ( ) ) ; <nl> - assertTrue ( systemErr . getLog ( ) . startsWith ( <nl> - checkstylePackage + " api . CheckstyleException : Unable to instantiate " <nl> - + " ' TestRootModuleChecker ' class , it is also not possible to " <nl> - + " instantiate it as " + checkstylePackage <nl> - + " TestRootModuleChecker , TestRootModuleCheckerCheck , " <nl> - + checkstylePackage + " TestRootModuleCheckerCheck . " ) ) ; <nl> + assertTrue ( systemErr . getLog ( ) . startsWith ( checkstylePackage + " api . CheckstyleException : " <nl> + + unableToInstantiateExceptionMessage . getMessage ( ) ) ) ; <nl> assertFalse ( TestRootModuleChecker . isProcessed ( ) ) ; <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " config - custom - simple - root - module . xml " ) , <nl> @ @ - 843 , 8 + 866 , 7 @ @ public class MainTest { <nl> public void testExecuteIgnoredModule ( ) throws Exception { <nl> exit . expectSystemExitWithStatus ( - 2 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> - final String expectedExceptionMessage = <nl> - String . format ( Locale . ROOT , " Checkstyle ends with 1 errors . % n " ) ; <nl> + final String expectedExceptionMessage = errorCounterOneMessage . getMessage ( ) + EOL ; <nl> assertEquals ( expectedExceptionMessage , systemOut . getLog ( ) ) ; <nl> <nl> final String cause = " com . puppycrawl . tools . checkstyle . api . CheckstyleException : "

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 5cfca1d . . 7bc77bb 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 279 , 7 + 279 , 7 @ @ 
 < dependency > 
 < groupId > nl . jqno . equalsverifier < / groupId > 
 < artifactId > equalsverifier < / artifactId > 
 - < version > 2 . 5 . 2 < / version > 
 + < version > 3 . 0 < / version > 
 < scope > test < / scope > 
 < / dependency > 
 < dependency > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / FilterSetTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / FilterSetTest . java 
 index 319fad8 . . faf9e5d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / FilterSetTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / FilterSetTest . java 
 @ @ - 26 , 12 + 26 , 15 @ @ import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . filters . SeverityMatchFilter ; 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class FilterSetTest { 
 
 @ Test 
 public void testEqualsAndHashCode ( ) { 
 - EqualsVerifier . forClass ( FilterSet . class ) . usingGetClass ( ) . verify ( ) ; 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( FilterSet . class ) . usingGetClass ( ) 
 + . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LineColumnTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LineColumnTest . java 
 index e243a27 . . 6eab5ef 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LineColumnTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LineColumnTest . java 
 @ @ - 24 , 6 + 24 , 7 @ @ import static org . junit . Assert . assertEquals ; 
 import org . junit . Test ; 
 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class LineColumnTest { 
 
 @ @ - 55 , 7 + 56 , 9 @ @ public class LineColumnTest { 
 
 @ Test 
 public void testEqualsAndHashCode ( ) { 
 - EqualsVerifier . forClass ( LineColumn . class ) . usingGetClass ( ) . verify ( ) ; 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( LineColumn . class ) . usingGetClass ( ) 
 + . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 index 124fada . . 0d7f9db 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 @ @ - 44 , 6 + 44 , 7 @ @ import org . junit . Test ; 
 import org . powermock . reflect . Whitebox ; 
 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class LocalizedMessageTest { 
 
 @ @ - 51 , 7 + 52 , 9 @ @ public class LocalizedMessageTest { 
 
 @ Test 
 public void testEqualsAndHashCode ( ) { 
 - EqualsVerifier . forClass ( LocalizedMessage . class ) . usingGetClass ( ) . verify ( ) ; 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( LocalizedMessage . class ) 
 + . usingGetClass ( ) . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterTest . java 
 index ff6831f . . 4d6eb9e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / CsvFilterTest . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import static org . junit . Assert . assertTrue ; 
 import org . junit . Test ; 
 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class CsvFilterTest { 
 
 @ @ - 111 , 7 + 112 , 9 @ @ public class CsvFilterTest { 
 
 @ Test 
 public void testEqualsAndHashCode ( ) { 
 - EqualsVerifier . forClass ( CsvFilter . class ) . usingGetClass ( ) . verify ( ) ; 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( CsvFilter . class ) . usingGetClass ( ) 
 + . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterTest . java 
 index 9f46174 . . aa7f563 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntMatchFilterTest . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import static org . junit . Assert . assertTrue ; 
 import org . junit . Test ; 
 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class IntMatchFilterTest { 
 
 @ @ - 39 , 7 + 40 , 8 @ @ public class IntMatchFilterTest { 
 
 @ Test 
 public void testEqualsAndHashCode ( ) { 
 - EqualsVerifier . forClass ( IntMatchFilter . class ) . verify ( ) ; 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( IntMatchFilter . class ) . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterTest . java 
 index b87de70 . . b452948 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / IntRangeFilterTest . java 
 @ @ - 19 , 12 + 19 , 14 @ @ 
 
 package com . puppycrawl . tools . checkstyle . filters ; 
 
 + import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 
 import org . junit . Test ; 
 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class IntRangeFilterTest { 
 
 @ @ - 58 , 7 + 60 , 9 @ @ public class IntRangeFilterTest { 
 
 @ Test 
 public void testEqualsAndHashCode ( ) { 
 - EqualsVerifier . forClass ( IntRangeFilter . class ) . usingGetClass ( ) . verify ( ) ; 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( IntRangeFilter . class ) 
 + . usingGetClass ( ) . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 index 5446dbf . . 571f219 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 @ @ - 31 , 6 + 31 , 7 @ @ import com . puppycrawl . tools . checkstyle . TreeWalkerTest ; 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 import nl . jqno . equalsverifier . Warning ; 
 
 public class SuppressElementTest { 
 @ @ - 230 , 12 + 231 , 13 @ @ public class SuppressElementTest { 
 
 @ Test 
 public void testEqualsAndHashCode ( ) { 
 - EqualsVerifier . forClass ( SuppressElement . class ) 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( SuppressElement . class ) 
 . usingGetClass ( ) 
 . withIgnoredFields ( " fileRegexp " , " checkRegexp " , " messageRegexp " , " columnFilter " , 
 " lineFilter " ) 
 . suppress ( Warning . NONFINAL _ FIELDS ) 
 - . verify ( ) ; 
 + . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java 
 index 9912cb9 . . a6d3741 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilterTest . java 
 @ @ - 46 , 6 + 46 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class SuppressWithNearbyCommentFilterTest 
 extends AbstractModuleTestSupport { 
 @ @ - 286 , 7 + 287 , 9 @ @ public class SuppressWithNearbyCommentFilterTest 
 
 @ Test 
 public void testEqualsAndHashCodeOfTagClass ( ) { 
 - EqualsVerifier . forClass ( SuppressWithNearbyCommentFilter . Tag . class ) . usingGetClass ( ) . verify ( ) ; 
 + final EqualsVerifierReport ev = EqualsVerifier 
 + . forClass ( SuppressWithNearbyCommentFilter . Tag . class ) . usingGetClass ( ) . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 private void verifySuppressed ( Configuration moduleConfig , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilterTest . java 
 index ddb6b39 . . 84af5cc 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilterTest . java 
 @ @ - 46 , 6 + 46 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . regexp . RegexpSinglelineCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . whitespace . FileTabCharacterCheck ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class SuppressWithPlainTextCommentFilterTest extends AbstractModuleTestSupport { 
 
 @ @ - 298 , 8 + 299 , 10 @ @ public class SuppressWithPlainTextCommentFilterTest extends AbstractModuleTestSu 
 
 @ Test 
 public void testEqualsAndHashCodeOfTagClass ( ) { 
 - EqualsVerifier . forClass ( SuppressWithPlainTextCommentFilter . Suppression . class ) 
 - . usingGetClass ( ) . verify ( ) ; 
 + final EqualsVerifierReport ev = EqualsVerifier 
 + . forClass ( SuppressWithPlainTextCommentFilter . Suppression . class ) . usingGetClass ( ) 
 + . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java 
 index a254b2a . . bbf8aae 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilterTest . java 
 @ @ - 47 , 6 + 47 , 7 @ @ import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . MemberNameCheck ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class SuppressionCommentFilterTest 
 extends AbstractModuleTestSupport { 
 @ @ - 299 , 7 + 300 , 9 @ @ public class SuppressionCommentFilterTest 
 
 @ Test 
 public void testEqualsAndHashCodeOfTagClass ( ) { 
 - EqualsVerifier . forClass ( SuppressionCommentFilter . Tag . class ) . usingGetClass ( ) . verify ( ) ; 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( SuppressionCommentFilter . Tag . class ) 
 + . usingGetClass ( ) . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 index 72c73c2 . . 0a643f7 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 @ @ - 39 , 6 + 39 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 import nl . jqno . equalsverifier . Warning ; 
 
 public class SuppressionFilterTest extends AbstractModuleTestSupport { 
 @ @ - 53 , 12 + 54 , 12 @ @ public class SuppressionFilterTest extends AbstractModuleTestSupport { 
 
 @ Test 
 public void testEqualsAndHashCode ( ) { 
 - EqualsVerifier 
 - . forClass ( SuppressionFilter . class ) 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( SuppressionFilter . class ) 
 . usingGetClass ( ) 
 . withIgnoredFields ( " file " , " optional " , " configuration " ) 
 . suppress ( Warning . NONFINAL _ FIELDS ) 
 - . verify ( ) ; 
 + . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionXpathFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionXpathFilterTest . java 
 index 94d9ead . . 2ea4b7f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionXpathFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionXpathFilterTest . java 
 @ @ - 38 , 6 + 38 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 import nl . jqno . equalsverifier . Warning ; 
 
 public class SuppressionXpathFilterTest extends AbstractModuleTestSupport { 
 @ @ - 157 , 12 + 158 , 11 @ @ public class SuppressionXpathFilterTest extends AbstractModuleTestSupport { 
 
 @ Test 
 public void testEqualsAndHashCode ( ) { 
 - EqualsVerifier 
 - . forClass ( SuppressionXpathFilter . class ) 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( SuppressionXpathFilter . class ) 
 . usingGetClass ( ) 
 . withIgnoredFields ( " file " , " optional " , " configuration " ) 
 - . suppress ( Warning . NONFINAL _ FIELDS ) 
 - . verify ( ) ; 
 + . suppress ( Warning . NONFINAL _ FIELDS ) . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterTest . java 
 index df5db2d . . 7e5a3cd 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / XpathFilterTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . filters ; 
 
 + import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 @ @ - 39 , 6 + 40 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import net . sf . saxon . sxpath . XPathEvaluator ; 
 import net . sf . saxon . sxpath . XPathExpression ; 
 import nl . jqno . equalsverifier . EqualsVerifier ; 
 + import nl . jqno . equalsverifier . EqualsVerifierReport ; 
 
 public class XpathFilterTest extends AbstractModuleTestSupport { 
 
 @ @ - 262 , 12 + 264 , 14 @ @ public class XpathFilterTest extends AbstractModuleTestSupport { 
 @ Test 
 public void testEqualsAndHashCode ( ) throws Exception { 
 final XPathEvaluator xpathEvaluator = new XPathEvaluator ( ) ; 
 - EqualsVerifier . forClass ( XpathFilter . class ) . withPrefabValues ( XPathExpression . class , 
 + final EqualsVerifierReport ev = EqualsVerifier . forClass ( XpathFilter . class ) 
 + . withPrefabValues ( XPathExpression . class , 
 xpathEvaluator . createExpression ( " / / METHOD _ DEF " ) , 
 xpathEvaluator . createExpression ( " / / VARIABLE _ DEF " ) ) 
 . usingGetClass ( ) 
 . withIgnoredFields ( " fileRegexp " , " checkRegexp " , " messageRegexp " , " xpathExpression " ) 
 - . verify ( ) ; 
 + . report ( ) ; 
 + assertEquals ( " Error : " + ev . getMessage ( ) , EqualsVerifierReport . SUCCESS , ev ) ; 
 } 
 
 private TreeWalkerAuditEvent getEvent ( int line , int column , int tokenType )

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index 8032ce9 . . 0028306 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 49 , 6 + 49 , 7 @ @ import com . google . common . io . Closeables ; 
 import com . puppycrawl . tools . checkstyle . api . AuditListener ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . api . RootModule ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 @ @ - 58 , 6 + 59 , 21 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * 
 * * / 
 public final class Main { 
 + / * * 
 + * A key pointing to the error counter 
 + * message in the " messages . properties " file . 
 + * / 
 + public static final String ERROR _ COUNTER = " Main . errorCounter " ; 
 + / * * 
 + * A key pointing to the load properties exception 
 + * message in the " messages . properties " file . 
 + * / 
 + public static final String LOAD _ PROPERTIES _ EXCEPTION = " Main . loadProperties " ; 
 + / * * 
 + * A key pointing to the create listener exception 
 + * message in the " messages . properties " file . 
 + * / 
 + public static final String CREATE _ LISTENER _ EXCEPTION = " Main . createListener " ; 
 / * * Logger for Main . * / 
 private static final Log LOG = LogFactory . getLog ( Main . class ) ; 
 
 @ @ - 211 , 7 + 227 , 10 @ @ public final class Main { 
 finally { 
 / / return exit code base on validation of Checker 
 if ( errorCounter ! = 0 & & ! cliViolations ) { 
 - System . out . println ( String . format ( " Checkstyle ends with % d errors . " , errorCounter ) ) ; 
 + final LocalizedMessage errorCounterMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , ERROR _ COUNTER , 
 + new String [ ] { String . valueOf ( errorCounter ) } , null , Main . class , null ) ; 
 + System . out . println ( errorCounterMessage . getMessage ( ) ) ; 
 } 
 if ( exitStatus ! = 0 ) { 
 System . exit ( exitStatus ) ; 
 @ @ - 531 , 8 + 550 , 10 @ @ public final class Main { 
 properties . load ( fis ) ; 
 } 
 catch ( final IOException ex ) { 
 - throw new CheckstyleException ( String . format ( 
 - " Unable to load properties from file ' % s ' . " , file . getAbsolutePath ( ) ) , ex ) ; 
 + final LocalizedMessage loadPropertiesExceptionMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , LOAD _ PROPERTIES _ EXCEPTION , 
 + new String [ ] { file . getAbsolutePath ( ) } , null , Main . class , null ) ; 
 + throw new CheckstyleException ( loadPropertiesExceptionMessage . getMessage ( ) , ex ) ; 
 } 
 finally { 
 Closeables . closeQuietly ( fis ) ; 
 @ @ - 579 , 9 + 600 , 11 @ @ public final class Main { 
 if ( closeOutputStream ) { 
 CommonUtils . close ( out ) ; 
 } 
 - throw new IllegalStateException ( String . format ( 
 - " Invalid output format . Found ' % s ' but expected ' % s ' or ' % s ' . " , 
 - format , PLAIN _ FORMAT _ NAME , XML _ FORMAT _ NAME ) ) ; 
 + final LocalizedMessage outputFormatExceptionMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , CREATE _ LISTENER _ EXCEPTION , 
 + new String [ ] { format , PLAIN _ FORMAT _ NAME , XML _ FORMAT _ NAME } , null , 
 + Main . class , null ) ; 
 + throw new IllegalStateException ( outputFormatExceptionMessage . getMessage ( ) ) ; 
 } 
 
 return listener ; 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties 
 index 00bbe2b . . 436eb7c 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages . properties 
 @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Error auditing { 0 } 
 DefaultLogger . auditStarted = Starting audit . . . 
 DefaultLogger . auditFinished = Audit done . 
 
 + # 
 + # for Main . java 
 + # 
 + Main . errorCounter = Checkstyle ends with { 0 } errors . 
 + Main . loadProperties = Unable to load properties from file ' ' { 0 } ' ' . 
 + Main . createListener = Invalid output format . Found ' ' { 0 } ' ' but expected ' ' { 1 } ' ' or ' ' { 2 } ' ' . 
 + 
 PackageObjectFactory . unableToInstantiateExceptionMessage = Unable to instantiate ' ' { 0 } ' ' \ 
 class , it is also not possible to instantiate it as { 1 } . \ 
 Please recheck that class name is specified as canonical name or read how to configure \ 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties 
 index 41b4784 . . 0a459c8 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ de . properties 
 @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Fehler beim Pr ü fen von { 0 } 
 DefaultLogger . auditStarted = Beginne Pr ü fung . . . 
 DefaultLogger . auditFinished = Pr ü fung beendet . 
 
 + # 
 + # for Main . java 
 + # 
 + Main . errorCounter = Checkstyle endet mit { 0 } Fehlern . 
 + Main . loadProperties = Die Eigenschaften von Datei ' ' { 0 } ' ' k ö nnen nicht geladen werden . 
 + Main . createListener = Ung ü ltiges Ausgabeformat . Gefunden ' ' { 0 } ' ' aber erwartet ' ' { 1 } ' ' oder ' ' { 2 } ' ' . 
 + 
 PackageObjectFactory . unableToInstantiateExceptionMessage = Fehler beim Instanziieren \ 
 der Klasse ' ' { 0 } ' ' . Es war auch nicht m ö glich , sie als { 1 } zu instanziieren . \ 
 Bitte pr ü fen Sie , dass der Klassenname als kanonischer Name angegeben wurde oder lesen Sie , wie Sie \ 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties 
 index ed78290 . . e430706 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ es . properties 
 @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Error auditando { 0 } 
 DefaultLogger . auditStarted = Comenzando auditor í a . . . 
 DefaultLogger . auditFinished = Auditor í a concluida . 
 
 + # 
 + # for Main . java 
 + # 
 + Main . errorCounter = Checkstyle termina con { 0 } errores . 
 + Main . loadProperties = No se pueden cargar las propiedades del archivo ' ' { 0 } ' ' . 
 + Main . createListener = Formato de salida no v á lido . Encontrado ' ' { 0 } ' ' pero esperado ' ' { 1 } ' ' o ' ' { 2 } ' ' . 
 + 
 PackageObjectFactory . unableToInstantiateExceptionMessage = No se ha podido crear \ 
 una instancia ' ' { 0 } ' ' de clase , sino que tambi é n no es posible crear una \ 
 instancia como { 1 } . Por favor vuelva a comprobar que el nombre \ 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties 
 index dc83b0d . . b614082 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fi . properties 
 @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Virhe { 0 } : n tarkistuksessa 
 DefaultLogger . auditStarted = Aloitetaan tarkistus . . . 
 DefaultLogger . auditFinished = Tarkistus valmis . 
 
 + # 
 + # for Main . java 
 + # 
 + Main . errorCounter = Checkstyle p ä ä ttyy { 0 } virheell ä . 
 + Main . loadProperties = Ominaisuuksia ei voi ladata tiedostosta ' ' { 0 } ' ' . 
 + Main . createListener = Virheellinen tulostusmuoto . L ö ytyi ' ' { 0 } ' ' mutta odotti ' ' { 1 } ' ' tai ' ' { 2 } ' ' . 
 + 
 PackageObjectFactory . unableToInstantiateExceptionMessage = Ei voitu instantiate ' ' { 0 } ' ' \ 
 luokan , se ei my ö sk ä ä n ole mahdollista instantiate sit ä \ 
 Ole hyv ä ja tarkista , ett ä luokan nimi on { 1 } . \ 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties 
 index e721e7d . . 20006b0 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ fr . properties 
 @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Une erreur est survenue { 0 } 
 DefaultLogger . auditStarted = D é but de la v é rification . . . 
 DefaultLogger . auditFinished = V é rification termin é e . 
 
 + # 
 + # for Main . java 
 + # 
 + Main . errorCounter = Checkstyle se termine par { 0 } erreurs . 
 + Main . loadProperties = Impossible de charger des propri é t é s à partir du fichier ' ' { 0 } ' ' . 
 + Main . createListener = Format de sortie invalide . Trouv é ' ' { 0 } ' ' mais attendu ' ' { 1 } ' ' ou ' ' { 2 } ' ' . 
 + 
 PackageObjectFactory . unableToInstantiateExceptionMessage = Impossible d ' instancier la classe \ 
 ' ' { 0 } ' ' , il est é galement impossible de l ' ' instancier comme { 1 } . \ 
 Veuillez v é rifier que le nom de classe est sp é cifi é comme nom canonique ou regardez comment \ 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties 
 index 4daf971 . . df7113a 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ ja . properties 
 @ @ - 7 , 6 + 7 , 14 @ @ general . exception = 例 外 が 発 生 し ま し た - { 0 } 
 DefaultLogger . addException = { 0 } を 監 査 中 の エ ラ ー 
 DefaultLogger . auditStarted = 監 査 を 開 始 し て い ま す . . . 
 DefaultLogger . auditFinished = 監 査 が 完 了 し ま し た 。 
 + 
 + # 
 + # for Main . java 
 + # 
 + Main . errorCounter = Checkstyle は { 0 } 個 の エ ラ ー で 終 了 し ま す 。 
 + Main . loadProperties = フ ァ イ ル ' ' { 0 } ' ' か ら プ ロ パ テ ィ を 読 み 込 め ま せ ん 。 
 + Main . createListener = 無 効 な 出 力 形 式 で す 。 ' ' { 0 } ' ' 名 が 見 つ か り ま し た が 、 ' ' { 1 } ' ' 名 か ' ' { 2 } ' ' 名 で す 。 
 + 
 PackageObjectFactory . unableToInstantiateExceptionMessage = ' ' { 0 } ' ' ク ラ ス を イ ン ス タ ン ス 化 \ 
 で き ま せ ん で し た 。 ま た 、 以 下 の ク ラ ス 名 で も イ ン ス タ ン ス 化 で き ま せ ん で し た { 1 } 。 \ 
 ク ラ ス 名 を 正 規 名 で 指 定 し て い る か 再 確 認 し て く だ さ い 。 ま た は 、 単 純 名 の 使 用 を 設 定 す る 方 法 \ 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties 
 index 97f5ca8 . . 17979e0 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ pt . properties 
 @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = Erro ao auditar { 0 } 
 DefaultLogger . auditStarted = A iniciar a auditoria . . . 
 DefaultLogger . auditFinished = Auditoria completa . 
 
 + # 
 + # for Main . java 
 + # 
 + Main . errorCounter = Checkstyle termina com { 0 } erros . 
 + Main . loadProperties = N ã o é poss í vel carregar propriedades do arquivo ' ' { 0 } ' ' . 
 + Main . createListener = Formato de sa í da inv á lido . Encontrou ' ' { 0 } ' ' mas esperava ' ' { 1 } ' ' ou ' ' { 2 } ' ' . 
 + 
 PackageObjectFactory . unableToInstantiateExceptionMessage = N ã o é poss í vel instanciar ' ' { 0 } ' ' \ 
 classe , tamb é m n ã o é poss í vel instanciar - lo como { 1 } . \ 
 Por favor , volte a verificar que o nome da classe \ 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties 
 index 96769f5 . . faac17e 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ tr . properties 
 @ @ - 7 , 6 + 7 , 13 @ @ DefaultLogger . auditStarted = Denetleme ba ş l ı yor . . . 
 general . exception = Bir istisna yakaland ı - { 0 } 
 general . fileNotFound = Dosya bulunamad ı ! 
 
 + # 
 + # for Main . java 
 + # 
 + Main . errorCounter = Checkstyle { 0 } hatayla bitiyor . 
 + Main . loadProperties = ' ' { 0 } ' ' dosyas ı ndan ö zellik y ü klenemiyor . 
 + Main . createListener = Ge ç ersiz ç ı kt ı bi ç imi . ' ' { 0 } ' ' ancak beklenen ' ' { 1 } ' ' veya ' ' { 2 } ' ' bulundu . 
 + 
 PackageObjectFactory . unableToInstantiateExceptionMessage = ' ' { 0 } ' ' s ı n ı f ı n ı a ç ı lam ı yor , \ 
 bu olarak ö rne ğ ini de m ü mk ü n de ğ ildir { 1 } . \ 
 Bu s ı n ı f ad ı kurall ı ad ı olarak belirtilir yeniden kontrol edin veya k ı sa ad ı \ 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties 
 index bb7e614 . . 83c12a3 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / messages _ zh . properties 
 @ @ - 8 , 6 + 8 , 13 @ @ DefaultLogger . addException = 检 查 错 误 ： { 0 } 
 DefaultLogger . auditStarted = 开 始 检 查 … … 
 DefaultLogger . auditFinished = 检 查 完 成 。 
 
 + # 
 + # for Main . java 
 + # 
 + Main . errorCounter = Checkstyle 以 { 0 } 个 错 误 结 束 。 
 + Main . loadProperties = 无 法 从 文 件 ' ' { 0 } ' ' 中 加 载 属 性 。 
 + Main . createListener = 非 法 的 输 出 格 式 。 预 期 为 ' ' { 1 } ' ' 或 ' ' { 2 } ' ' ， 但 实 际 为 ' ' { 0 } ' ' 。 
 + 
 PackageObjectFactory . unableToInstantiateExceptionMessage = 无 法 初 始 化 类 ： ' ' { 0 } ' ' \ 
 ， 也 无 法 初 始 化 ： { 1 } 。 \ 
 请 检 查 类 名 大 小 写 ， 或 阅 读 帮 助 手 册 中 短 名 称 配 置 部 分 ： \ 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 5ec3aba . . 01f7313 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 46 , 10 + 46 , 8 @ @ import java . util . regex . Pattern ; 
 
 import org . apache . commons . io . FileUtils ; 
 import org . junit . Before ; 
 - import org . junit . BeforeClass ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 - import org . junit . contrib . java . lang . system . Assertion ; 
 import org . junit . contrib . java . lang . system . ExpectedSystemExit ; 
 import org . junit . contrib . java . lang . system . SystemErrRule ; 
 import org . junit . contrib . java . lang . system . SystemOutRule ; 
 @ @ - 91 , 6 + 89 , 8 @ @ public class MainTest { 
 private static final Handler [ ] HANDLERS = LOG . getHandlers ( ) ; 
 private static final Level ORIGINAL _ LOG _ LEVEL = LOG . getLevel ( ) ; 
 
 + private static final String EOL = System . getProperty ( " line . separator " ) ; 
 + 
 @ Rule 
 public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 @ Rule 
 @ @ - 100 , 6 + 100 , 18 @ @ public class MainTest { 
 @ Rule 
 public final SystemOutRule systemOut = new SystemOutRule ( ) . enableLog ( ) . mute ( ) ; 
 
 + private final LocalizedMessage auditStartMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . auditStarted " , null , null , 
 + getClass ( ) , null ) ; 
 + 
 + private final LocalizedMessage auditFinishMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . auditFinished " , null , null , 
 + getClass ( ) , null ) ; 
 + 
 + private final LocalizedMessage errorCounterOneMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , " Main . errorCounter " , 
 + new String [ ] { String . valueOf ( 1 ) } , null , getClass ( ) , null ) ; 
 + 
 private static String getPath ( String filename ) { 
 return " src / test / resources / com / puppycrawl / tools / checkstyle / " + filename ; 
 } 
 @ @ - 112 , 13 + 124 , 6 @ @ public class MainTest { 
 return new File ( getPath ( filename ) ) . getCanonicalPath ( ) ; 
 } 
 
 - @ BeforeClass 
 - public static void init ( ) { 
 - / / Set locale to root to prevent check message fail 
 - / / in other language environment . 
 - Locale . setDefault ( Locale . ROOT ) ; 
 - } 
 - 
 @ Before 
 public void setUp ( ) { 
 / / restore original logging level and HANDLERS to prevent bleeding into other tests 
 @ @ - 163 , 7 + 168 , 7 @ @ public class MainTest { 
 throws Exception { 
 exit . expectSystemExitWithStatus ( - 1 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - final String usage = String . format ( Locale . ROOT , " Unrecognized option : - w % n " ) 
 + final String usage = " Unrecognized option : - w " + EOL 
 + USAGE ; 
 assertEquals ( usage , systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 @ @ - 200 , 9 + 205 , 8 @ @ public class MainTest { 
 throws Exception { 
 exit . expectSystemExitWithStatus ( - 1 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - assertEquals ( String . format ( Locale . ROOT , 
 - " Could not find config XML file " 
 - + " ' src / main / resources / non _ existing _ config . xml ' . % n " ) , 
 + assertEquals ( " Could not find config XML file " 
 + + " ' src / main / resources / non _ existing _ config . xml ' . " + EOL , 
 systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } ) ; 
 @ @ - 214 , 8 + 218 , 8 @ @ public class MainTest { 
 public void testNonExistingOutputFormat ( ) throws Exception { 
 exit . expectSystemExitWithStatus ( - 1 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - assertEquals ( String . format ( Locale . ROOT , " Invalid output format . " 
 - + " Found ' xmlp ' but expected ' plain ' or ' xml ' . % n " ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( " Invalid output format . " 
 + + " Found ' xmlp ' but expected ' plain ' or ' xml ' . " + EOL , systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } ) ; 
 Main . main ( " - c " , " / google _ checks . xml " , " - f " , " xmlp " , 
 @ @ - 226 , 8 + 230 , 8 @ @ public class MainTest { 
 public void testNonExistingClass ( ) throws Exception { 
 exit . expectSystemExitWithStatus ( - 2 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - final String expectedExceptionMessage = 
 - String . format ( Locale . ROOT , " Checkstyle ends with 1 errors . % n " ) ; 
 + final String expectedExceptionMessage = errorCounterOneMessage . getMessage ( ) 
 + + EOL ; 
 assertEquals ( expectedExceptionMessage , systemOut . getLog ( ) ) ; 
 
 final String cause = " com . puppycrawl . tools . checkstyle . api . CheckstyleException : " 
 @ @ - 243 , 8 + 247 , 9 @ @ public class MainTest { 
 public void testExistingTargetFile ( ) throws Exception { 
 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " 
 - + " Audit done . % n " ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( auditStartMessage . getMessage ( ) + EOL 
 + + auditFinishMessage . getMessage ( ) + EOL , 
 + systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } ) ; 
 Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 @ @ - 260 , 12 + 265 , 11 @ @ public class MainTest { 
 ResourceBundle . getBundle ( " checkstylecompilation " , Locale . ROOT ) ; 
 final String version = compilationProperties 
 . getString ( " checkstyle . compile . version " ) ; 
 - assertEquals ( String . format ( Locale . ROOT , 
 - " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > % n " 
 - + " < checkstyle version = \ " % s \ " > % n " 
 - + " < file name = \ " % s \ " > % n " 
 - + " < / file > % n " 
 - + " < / checkstyle > % n " , version , expectedPath ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( " < ? xml version = \ " 1 . 0 \ " encoding = \ " UTF - 8 \ " ? > " + EOL 
 + + " < checkstyle version = \ " " + version + " \ " > " + EOL 
 + + " < file name = \ " " + expectedPath + " \ " > " + EOL 
 + + " < / file > " + EOL 
 + + " < / checkstyle > " + EOL , systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } ) ; 
 Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 @ @ - 277 , 8 + 281 , 8 @ @ public class MainTest { 
 public void testExistingTargetFilePlainOutput ( ) throws Exception { 
 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " 
 - + " Audit done . % n " ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( auditStartMessage . getMessage ( ) + EOL 
 + + auditFinishMessage . getMessage ( ) + EOL , systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } ) ; 
 Main . main ( " - c " , getPath ( " config - classname . xml " ) , 
 @ @ - 289 , 16 + 293 , 23 @ @ public class MainTest { 
 @ Test 
 public void testExistingTargetFileWithViolations ( ) throws Exception { 
 exit . checkAssertionAfterwards ( ( ) - > { 
 + final LocalizedMessage invalidPatternMessageMain = new LocalizedMessage ( 0 , 
 + " com . puppycrawl . tools . checkstyle . checks . naming . messages " , 
 + " name . invalidPattern " , new String [ ] { " InputMain " , " ^ [ a - z0 - 9 ] * $ " } , 
 + null , getClass ( ) , null ) ; 
 + final LocalizedMessage invalidPatternMessageMainInner = new LocalizedMessage ( 0 , 
 + " com . puppycrawl . tools . checkstyle . checks . naming . messages " , 
 + " name . invalidPattern " , new String [ ] { " InputMainInner " , " ^ [ a - z0 - 9 ] * $ " } , 
 + null , getClass ( ) , null ) ; 
 final String expectedPath = getFilePath ( " InputMain . java " ) ; 
 - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " 
 - + " [ WARN ] % 1 $ s : 3 : 14 : " 
 - + " Name ' InputMain ' must match pattern " 
 - + " ' ^ [ a - z0 - 9 ] * $ ' . [ TypeName ] % n " 
 - + " [ WARN ] % 1 $ s : 5 : 7 : " 
 - + " Name ' InputMainInner ' must match pattern " 
 - + " ' ^ [ a - z0 - 9 ] * $ ' . [ TypeName ] % n " 
 - + " Audit done . % n " , expectedPath ) , 
 - systemOut . getLog ( ) ) ; 
 + assertEquals ( auditStartMessage . getMessage ( ) + EOL 
 + + " [ WARN ] " + expectedPath + " : 3 : 14 : " 
 + + invalidPatternMessageMain . getMessage ( ) 
 + + " [ TypeName ] " + EOL 
 + + " [ WARN ] " + expectedPath + " : 5 : 7 : " 
 + + invalidPatternMessageMainInner . getMessage ( ) 
 + + " [ TypeName ] " + EOL 
 + + auditFinishMessage . getMessage ( ) + EOL , systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } ) ; 
 Main . main ( " - c " , getPath ( " config - classname2 . xml " ) , 
 @ @ - 310 , 14 + 321 , 25 @ @ public class MainTest { 
 throws Exception { 
 exit . expectSystemExitWithStatus ( 2 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 + final LocalizedMessage errorCounterTwoMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , " Main . errorCounter " , 
 + new String [ ] { String . valueOf ( 2 ) } , null , getClass ( ) , null ) ; 
 + final LocalizedMessage invalidPatternMessageMain = new LocalizedMessage ( 0 , 
 + " com . puppycrawl . tools . checkstyle . checks . naming . messages " , 
 + " name . invalidPattern " , new String [ ] { " InputMain " , " ^ [ a - z0 - 9 ] * $ " } , 
 + null , getClass ( ) , null ) ; 
 + final LocalizedMessage invalidPatternMessageMainInner = new LocalizedMessage ( 0 , 
 + " com . puppycrawl . tools . checkstyle . checks . naming . messages " , 
 + " name . invalidPattern " , new String [ ] { " InputMainInner " , " ^ [ a - z0 - 9 ] * $ " } , 
 + null , getClass ( ) , null ) ; 
 final String expectedPath = getFilePath ( " InputMain . java " ) ; 
 - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " 
 - + " [ ERROR ] % 1 $ s : 3 : 14 : " 
 - + " Name ' InputMain ' must match pattern ' ^ [ a - z0 - 9 ] * $ ' . [ TypeName ] % n " 
 - + " [ ERROR ] % 1 $ s : 5 : 7 : " 
 - + " Name ' InputMainInner ' must match pattern ' ^ [ a - z0 - 9 ] * $ ' . [ TypeName ] % n " 
 - + " Audit done . % n " 
 - + " Checkstyle ends with 2 errors . % n " , expectedPath ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( auditStartMessage . getMessage ( ) + EOL 
 + + " [ ERROR ] " + expectedPath + " : 3 : 14 : " 
 + + invalidPatternMessageMain . getMessage ( ) + " [ TypeName ] " + EOL 
 + + " [ ERROR ] " + expectedPath + " : 5 : 7 : " 
 + + invalidPatternMessageMainInner . getMessage ( ) + " [ TypeName ] " + EOL 
 + + auditFinishMessage . getMessage ( ) + EOL 
 + + errorCounterTwoMessage . getMessage ( ) + EOL , systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } ) ; 
 Main . main ( " - c " , 
 @ @ - 369 , 8 + 391 , 8 @ @ public class MainTest { 
 throws Exception { 
 / / exit . expectSystemExitWithStatus ( 0 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - assertEquals ( String . format ( Locale . ROOT , " Starting audit . . . % n " 
 - + " Audit done . % n " ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( auditStartMessage . getMessage ( ) + EOL 
 + + auditFinishMessage . getMessage ( ) + EOL , systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } ) ; 
 Main . main ( " - c " , getPath ( " config - classname - prop . xml " ) , 
 @ @ - 397 , 8 + 419 , 7 @ @ public class MainTest { 
 throws Exception { 
 exit . expectSystemExitWithStatus ( - 2 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - final String output = String . format ( Locale . ROOT , 
 - " Checkstyle ends with 1 errors . % n " ) ; 
 + final String output = errorCounterOneMessage . getMessage ( ) + EOL ; 
 assertEquals ( output , systemOut . getLog ( ) ) ; 
 final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " 
 + " CheckstyleException : unable to parse configuration stream - " ; 
 @ @ - 413 , 8 + 434 , 7 @ @ public class MainTest { 
 throws Exception { 
 exit . expectSystemExitWithStatus ( - 2 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - final String output = String . format ( Locale . ROOT , 
 - " Checkstyle ends with 1 errors . % n " ) ; 
 + final String output = errorCounterOneMessage . getMessage ( ) + EOL ; 
 assertEquals ( output , systemOut . getLog ( ) ) ; 
 final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " 
 + " CheckstyleException : cannot initialize module RegexpSingleline " 
 @ @ - 430 , 8 + 450 , 7 @ @ public class MainTest { 
 throws Exception { 
 exit . expectSystemExitWithStatus ( - 2 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - final String output = String . format ( Locale . ROOT , 
 - " Checkstyle ends with 1 errors . % n " ) ; 
 + final String output = errorCounterOneMessage . getMessage ( ) + EOL ; 
 assertEquals ( output , systemOut . getLog ( ) ) ; 
 final String errorOutput = " com . puppycrawl . tools . checkstyle . api . " 
 + " CheckstyleException : cannot initialize module TreeWalker " 
 @ @ - 468 , 9 + 487 , 7 @ @ public class MainTest { 
 / / We do separate validation for message as in Windows 
 / / disk drive letter appear in message , 
 / / so we skip that drive letter for compatibility issues 
 - assertTrue ( ex . getCause ( ) . getMessage ( ) 
 - . startsWith ( " Unable to load properties from file ' " ) ) ; 
 - assertTrue ( ex . getCause ( ) . getMessage ( ) . endsWith ( " : invalid ' . " ) ) ; 
 + assertTrue ( ex . getCause ( ) . getLocalizedMessage ( ) . contains ( " : invalid " ) ) ; 
 } 
 } 
 
 @ @ - 484 , 8 + 501 , 11 @ @ public class MainTest { 
 fail ( " InvocationTargetException is expected " ) ; 
 } 
 catch ( InvocationTargetException ex ) { 
 + final LocalizedMessage loadPropertiesMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , " Main . createListener " , 
 + new String [ ] { " myformat " , " plain " , " xml " } , null , getClass ( ) , null ) ; 
 + assertEquals ( loadPropertiesMessage . getMessage ( ) , ex . getCause ( ) . getLocalizedMessage ( ) ) ; 
 assertTrue ( ex . getCause ( ) instanceof IllegalStateException ) ; 
 - assertTrue ( ex . getCause ( ) . getMessage ( ) . startsWith ( " Invalid output format . Found " ) ) ; 
 } 
 } 
 
 @ @ - 500 , 8 + 520 , 11 @ @ public class MainTest { 
 fail ( " InvocationTargetException is expected " ) ; 
 } 
 catch ( InvocationTargetException ex ) { 
 + final LocalizedMessage createListenerMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , " Main . createListener " , 
 + new String [ ] { " myformat " , " plain " , " xml " } , null , getClass ( ) , null ) ; 
 + assertEquals ( createListenerMessage . getMessage ( ) , ex . getCause ( ) . getLocalizedMessage ( ) ) ; 
 assertTrue ( ex . getCause ( ) instanceof IllegalStateException ) ; 
 - assertTrue ( ex . getCause ( ) . getMessage ( ) . startsWith ( " Invalid output format . Found " ) ) ; 
 } 
 finally { 
 / / method creates output folder 
 @ @ - 521 , 25 + 544 , 24 @ @ public class MainTest { 
 final String msgKey = " maxLen . file " ; 
 final String bundle = " com . puppycrawl . tools . checkstyle . checks . sizes . messages " ; 
 
 - exit . checkAssertionAfterwards ( new Assertion ( ) { 
 - @ Override 
 - public void checkAssertion ( ) throws IOException { 
 - final String expectedPath = getFilePath ( " main / " ) + File . separator ; 
 - final StringBuilder sb = new StringBuilder ( 28 ) ; 
 - sb . append ( " Starting audit . . . " ) . append ( System . getProperty ( " line . separator " ) ) ; 
 - final String format = " [ WARN ] % s . java : % s : % s [ FileLength ] " ; 
 - for ( String [ ] outputValue : outputValues ) { 
 - final String localizedMessage = new LocalizedMessage ( 0 , bundle , 
 - msgKey , new Integer [ ] { Integer . valueOf ( outputValue [ 2 ] ) , allowedLength } , 
 - null , getClass ( ) , null ) . getMessage ( ) ; 
 - final String line = String . format ( Locale . ROOT , format , 
 - expectedPath + outputValue [ 0 ] , outputValue [ 1 ] , localizedMessage ) ; 
 - sb . append ( line ) . append ( System . getProperty ( " line . separator " ) ) ; 
 - } 
 - sb . append ( " Audit done . " ) . append ( System . getProperty ( " line . separator " ) ) ; 
 - assertEquals ( sb . toString ( ) , systemOut . getLog ( ) ) ; 
 - assertEquals ( " " , systemErr . getLog ( ) ) ; 
 + exit . checkAssertionAfterwards ( ( ) - > { 
 + final String expectedPath = getFilePath ( " main / " ) + File . separator ; 
 + final StringBuilder sb = new StringBuilder ( 28 ) ; 
 + sb . append ( auditStartMessage . getMessage ( ) ) 
 + . append ( EOL ) ; 
 + final String format = " [ WARN ] " + expectedPath + outputValues [ 0 ] [ 0 ] + " . java : " 
 + + outputValues [ 0 ] [ 1 ] + " : " ; 
 + for ( String [ ] outputValue : outputValues ) { 
 + final String localizedMessage = new LocalizedMessage ( 0 , bundle , 
 + msgKey , new Integer [ ] { Integer . valueOf ( outputValue [ 2 ] ) , allowedLength } , 
 + null , getClass ( ) , null ) . getMessage ( ) ; 
 + final String line = format + localizedMessage + " [ FileLength ] " ; 
 + sb . append ( line ) . append ( EOL ) ; 
 } 
 + sb . append ( auditFinishMessage . getMessage ( ) ) 
 + . append ( EOL ) ; 
 + assertEquals ( sb . toString ( ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } ) ; 
 
 Main . main ( " - c " , getPath ( " config - filelength . xml " ) , 
 @ @ - 581 , 16 + 603 , 14 @ @ public class MainTest { 
 public void testFileReferenceDuringException ( ) throws Exception { 
 exit . expectSystemExitWithStatus ( - 2 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - final String expectedExceptionMessage = 
 - String . format ( Locale . ROOT , " Starting audit . . . % n " 
 - + " Checkstyle ends with 1 errors . % n " ) ; 
 + final String expectedExceptionMessage = auditStartMessage . getMessage ( ) + EOL 
 + + errorCounterOneMessage . getMessage ( ) + EOL ; 
 assertEquals ( expectedExceptionMessage , systemOut . getLog ( ) ) ; 
 
 - final String exceptionFirstLine = String . format ( Locale . ROOT , 
 - " com . puppycrawl . tools . checkstyle . api . " 
 + final String exceptionFirstLine = " com . puppycrawl . tools . checkstyle . api . " 
 + " CheckstyleException : Exception was thrown while processing " 
 + new File ( getNonCompilablePath ( " InputIncorrectClass . java " ) ) . getPath ( ) 
 - + " % n " ) ; 
 + + EOL ; 
 assertTrue ( systemErr . getLog ( ) . startsWith ( exceptionFirstLine ) ) ; 
 } ) ; 
 
 @ @ - 614 , 31 + 634 , 31 @ @ public class MainTest { 
 
 @ Test 
 public void testPrintTreeOption ( ) throws Exception { 
 - final String expected = String . format ( Locale . ROOT , " PACKAGE _ DEF - > package [ 1 : 0 ] % n " 
 - + " | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] % n " 
 - + " | - - DOT - > . [ 1 : 28 ] % n " 
 - + " | | - - DOT - > . [ 1 : 22 ] % n " 
 - + " | | | - - DOT - > . [ 1 : 11 ] % n " 
 - + " | | | | - - IDENT - > com [ 1 : 8 ] % n " 
 - + " | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] % n " 
 - + " | | ` - - IDENT - > tools [ 1 : 23 ] % n " 
 - + " | ` - - IDENT - > checkstyle [ 1 : 29 ] % n " 
 - + " ` - - SEMI - > ; [ 1 : 39 ] % n " 
 - + " CLASS _ DEF - > CLASS _ DEF [ 3 : 0 ] % n " 
 - + " | - - MODIFIERS - > MODIFIERS [ 3 : 0 ] % n " 
 - + " | ` - - LITERAL _ PUBLIC - > public [ 3 : 0 ] % n " 
 - + " | - - LITERAL _ CLASS - > class [ 3 : 7 ] % n " 
 - + " | - - IDENT - > InputMain [ 3 : 13 ] % n " 
 - + " ` - - OBJBLOCK - > OBJBLOCK [ 3 : 23 ] % n " 
 - + " | - - LCURLY - > { [ 3 : 23 ] % n " 
 - + " ` - - RCURLY - > } [ 4 : 0 ] % n " 
 - + " CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] % n " 
 - + " | - - MODIFIERS - > MODIFIERS [ 5 : 0 ] % n " 
 - + " | - - LITERAL _ CLASS - > class [ 5 : 0 ] % n " 
 - + " | - - IDENT - > InputMainInner [ 5 : 6 ] % n " 
 - + " ` - - OBJBLOCK - > OBJBLOCK [ 5 : 21 ] % n " 
 - + " | - - LCURLY - > { [ 5 : 21 ] % n " 
 - + " ` - - RCURLY - > } [ 6 : 0 ] % n " ) ; 
 + final String expected = " PACKAGE _ DEF - > package [ 1 : 0 ] " + EOL 
 + + " | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] " + EOL 
 + + " | - - DOT - > . [ 1 : 28 ] " + EOL 
 + + " | | - - DOT - > . [ 1 : 22 ] " + EOL 
 + + " | | | - - DOT - > . [ 1 : 11 ] " + EOL 
 + + " | | | | - - IDENT - > com [ 1 : 8 ] " + EOL 
 + + " | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] " + EOL 
 + + " | | ` - - IDENT - > tools [ 1 : 23 ] " + EOL 
 + + " | ` - - IDENT - > checkstyle [ 1 : 29 ] " + EOL 
 + + " ` - - SEMI - > ; [ 1 : 39 ] " + EOL 
 + + " CLASS _ DEF - > CLASS _ DEF [ 3 : 0 ] " + EOL 
 + + " | - - MODIFIERS - > MODIFIERS [ 3 : 0 ] " + EOL 
 + + " | ` - - LITERAL _ PUBLIC - > public [ 3 : 0 ] " + EOL 
 + + " | - - LITERAL _ CLASS - > class [ 3 : 7 ] " + EOL 
 + + " | - - IDENT - > InputMain [ 3 : 13 ] " + EOL 
 + + " ` - - OBJBLOCK - > OBJBLOCK [ 3 : 23 ] " + EOL 
 + + " | - - LCURLY - > { [ 3 : 23 ] " + EOL 
 + + " ` - - RCURLY - > } [ 4 : 0 ] " + EOL 
 + + " CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] " + EOL 
 + + " | - - MODIFIERS - > MODIFIERS [ 5 : 0 ] " + EOL 
 + + " | - - LITERAL _ CLASS - > class [ 5 : 0 ] " + EOL 
 + + " | - - IDENT - > InputMainInner [ 5 : 6 ] " + EOL 
 + + " ` - - OBJBLOCK - > OBJBLOCK [ 5 : 21 ] " + EOL 
 + + " | - - LCURLY - > { [ 5 : 21 ] " + EOL 
 + + " ` - - RCURLY - > } [ 6 : 0 ] " + EOL ; 
 
 exit . checkAssertionAfterwards ( ( ) - > { 
 assertEquals ( expected , systemOut . getLog ( ) ) ; 
 @ @ - 649 , 34 + 669 , 34 @ @ public class MainTest { 
 
 @ Test 
 public void testPrintTreeCommentsOption ( ) throws Exception { 
 - final String expected = String . format ( Locale . ROOT , " PACKAGE _ DEF - > package [ 1 : 0 ] % n " 
 - + " | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] % n " 
 - + " | - - DOT - > . [ 1 : 28 ] % n " 
 - + " | | - - DOT - > . [ 1 : 22 ] % n " 
 - + " | | | - - DOT - > . [ 1 : 11 ] % n " 
 - + " | | | | - - IDENT - > com [ 1 : 8 ] % n " 
 - + " | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] % n " 
 - + " | | ` - - IDENT - > tools [ 1 : 23 ] % n " 
 - + " | ` - - IDENT - > checkstyle [ 1 : 29 ] % n " 
 - + " ` - - SEMI - > ; [ 1 : 39 ] % n " 
 - + " CLASS _ DEF - > CLASS _ DEF [ 3 : 0 ] % n " 
 - + " | - - MODIFIERS - > MODIFIERS [ 3 : 0 ] % n " 
 - + " | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 2 : 0 ] % n " 
 - + " | | | - - COMMENT _ CONTENT - > comment [ 2 : 2 ] % n " 
 - + " | | ` - - BLOCK _ COMMENT _ END - > * / [ 2 : 8 ] % n " 
 - + " | ` - - LITERAL _ PUBLIC - > public [ 3 : 0 ] % n " 
 - + " | - - LITERAL _ CLASS - > class [ 3 : 7 ] % n " 
 - + " | - - IDENT - > InputMain [ 3 : 13 ] % n " 
 - + " ` - - OBJBLOCK - > OBJBLOCK [ 3 : 23 ] % n " 
 - + " | - - LCURLY - > { [ 3 : 23 ] % n " 
 - + " ` - - RCURLY - > } [ 4 : 0 ] % n " 
 - + " CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] % n " 
 - + " | - - MODIFIERS - > MODIFIERS [ 5 : 0 ] % n " 
 - + " | - - LITERAL _ CLASS - > class [ 5 : 0 ] % n " 
 - + " | - - IDENT - > InputMainInner [ 5 : 6 ] % n " 
 - + " ` - - OBJBLOCK - > OBJBLOCK [ 5 : 21 ] % n " 
 - + " | - - LCURLY - > { [ 5 : 21 ] % n " 
 - + " ` - - RCURLY - > } [ 6 : 0 ] % n " ) ; 
 + final String expected = " PACKAGE _ DEF - > package [ 1 : 0 ] " + EOL 
 + + " | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] " + EOL 
 + + " | - - DOT - > . [ 1 : 28 ] " + EOL 
 + + " | | - - DOT - > . [ 1 : 22 ] " + EOL 
 + + " | | | - - DOT - > . [ 1 : 11 ] " + EOL 
 + + " | | | | - - IDENT - > com [ 1 : 8 ] " + EOL 
 + + " | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] " + EOL 
 + + " | | ` - - IDENT - > tools [ 1 : 23 ] " + EOL 
 + + " | ` - - IDENT - > checkstyle [ 1 : 29 ] " + EOL 
 + + " ` - - SEMI - > ; [ 1 : 39 ] " + EOL 
 + + " CLASS _ DEF - > CLASS _ DEF [ 3 : 0 ] " + EOL 
 + + " | - - MODIFIERS - > MODIFIERS [ 3 : 0 ] " + EOL 
 + + " | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 2 : 0 ] " + EOL 
 + + " | | | - - COMMENT _ CONTENT - > comment [ 2 : 2 ] " + EOL 
 + + " | | ` - - BLOCK _ COMMENT _ END - > * / [ 2 : 8 ] " + EOL 
 + + " | ` - - LITERAL _ PUBLIC - > public [ 3 : 0 ] " + EOL 
 + + " | - - LITERAL _ CLASS - > class [ 3 : 7 ] " + EOL 
 + + " | - - IDENT - > InputMain [ 3 : 13 ] " + EOL 
 + + " ` - - OBJBLOCK - > OBJBLOCK [ 3 : 23 ] " + EOL 
 + + " | - - LCURLY - > { [ 3 : 23 ] " + EOL 
 + + " ` - - RCURLY - > } [ 4 : 0 ] " + EOL 
 + + " CLASS _ DEF - > CLASS _ DEF [ 5 : 0 ] " + EOL 
 + + " | - - MODIFIERS - > MODIFIERS [ 5 : 0 ] " + EOL 
 + + " | - - LITERAL _ CLASS - > class [ 5 : 0 ] " + EOL 
 + + " | - - IDENT - > InputMainInner [ 5 : 6 ] " + EOL 
 + + " ` - - OBJBLOCK - > OBJBLOCK [ 5 : 21 ] " + EOL 
 + + " | - - LCURLY - > { [ 5 : 21 ] " + EOL 
 + + " ` - - RCURLY - > } [ 6 : 0 ] " + EOL ; 
 
 exit . checkAssertionAfterwards ( ( ) - > { 
 assertEquals ( expected , systemOut . getLog ( ) ) ; 
 @ @ - 824 , 15 + 844 , 18 @ @ public class MainTest { 
 exit . expectSystemExitWithStatus ( - 2 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 final String checkstylePackage = " com . puppycrawl . tools . checkstyle . " ; 
 - 
 - assertEquals ( String . format ( Locale . ROOT , " Checkstyle ends with 1 errors . % n " ) , 
 + final LocalizedMessage unableToInstantiateExceptionMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , 
 + " PackageObjectFactory . unableToInstantiateExceptionMessage " , 
 + new String [ ] { " TestRootModuleChecker " , checkstylePackage 
 + + " TestRootModuleChecker , " 
 + + " TestRootModuleCheckerCheck , " + checkstylePackage 
 + + " TestRootModuleCheckerCheck " } , 
 + null , getClass ( ) , null ) ; 
 + assertEquals ( errorCounterOneMessage . getMessage ( ) + EOL , 
 systemOut . getLog ( ) ) ; 
 - assertTrue ( systemErr . getLog ( ) . startsWith ( 
 - checkstylePackage + " api . CheckstyleException : Unable to instantiate " 
 - + " ' TestRootModuleChecker ' class , it is also not possible to " 
 - + " instantiate it as " + checkstylePackage 
 - + " TestRootModuleChecker , TestRootModuleCheckerCheck , " 
 - + checkstylePackage + " TestRootModuleCheckerCheck . " ) ) ; 
 + assertTrue ( systemErr . getLog ( ) . startsWith ( checkstylePackage + " api . CheckstyleException : " 
 + + unableToInstantiateExceptionMessage . getMessage ( ) ) ) ; 
 assertFalse ( TestRootModuleChecker . isProcessed ( ) ) ; 
 } ) ; 
 Main . main ( " - c " , getPath ( " config - custom - simple - root - module . xml " ) , 
 @ @ - 843 , 8 + 866 , 7 @ @ public class MainTest { 
 public void testExecuteIgnoredModule ( ) throws Exception { 
 exit . expectSystemExitWithStatus ( - 2 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 - final String expectedExceptionMessage = 
 - String . format ( Locale . ROOT , " Checkstyle ends with 1 errors . % n " ) ; 
 + final String expectedExceptionMessage = errorCounterOneMessage . getMessage ( ) + EOL ; 
 assertEquals ( expectedExceptionMessage , systemOut . getLog ( ) ) ; 
 
 final String cause = " com . puppycrawl . tools . checkstyle . api . CheckstyleException : "
