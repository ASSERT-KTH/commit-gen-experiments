BLEU SCORE: 0.040583489434387374

TEST MSG: spelling : fix typo in tests
GENERATED MSG: Fix various typos . # 1555

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> index bf44a37 . . db5cb85 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> @ @ - 41 , 7 + 41 , 7 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { <nl> public void testGetRequiredTokens ( ) { <nl> final AnnotationLocationCheck checkObj = new AnnotationLocationCheck ( ) ; <nl> assertArrayEquals ( <nl> - " AnnotationLocationCheck # getRequiredTockens should return empty array by default " , <nl> + " AnnotationLocationCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java <nl> index 6780604 . . ff81f4d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class AnnotationOnSameLineCheckTest extends AbstractModuleTestSupport { <nl> public void testGetRequiredTokens ( ) { <nl> final AnnotationOnSameLineCheck check = new AnnotationOnSameLineCheck ( ) ; <nl> assertArrayEquals ( <nl> - " AnnotationOnSameLineCheck # getRequiredTockens should return empty array by default " , <nl> + " AnnotationOnSameLineCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , check . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> index ff794f3 . . 935dfd2 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> @ @ - 55 , 7 + 55 , 7 @ @ public class LeftCurlyCheckTest extends AbstractModuleTestSupport { <nl> @ Test <nl> public void testGetRequiredTokens ( ) { <nl> final LeftCurlyCheck checkObj = new LeftCurlyCheck ( ) ; <nl> - assertArrayEquals ( " LeftCurlyCheck # getRequiredTockens should return empty array by default " , <nl> + assertArrayEquals ( " LeftCurlyCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java <nl> index 0cfe141 . . 9fbed91 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ public class JavadocTypeCheckTest extends AbstractModuleTestSupport { <nl> public void testGetRequiredTokens ( ) { <nl> final JavadocTypeCheck javadocTypeCheck = new JavadocTypeCheck ( ) ; <nl> assertArrayEquals ( <nl> - " JavadocTypeCheck # getRequiredTockens should return empty array by default " , <nl> + " JavadocTypeCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , javadocTypeCheck . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalFinalVariableNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalFinalVariableNameCheckTest . java <nl> index fd8532d . . d705e1d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalFinalVariableNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalFinalVariableNameCheckTest . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class LocalFinalVariableNameCheckTest <nl> final LocalFinalVariableNameCheck checkObj = <nl> new LocalFinalVariableNameCheck ( ) ; <nl> assertArrayEquals ( <nl> - " LocalFinalVariableNameCheck # getRequiredTockens should return empty array by default " , <nl> + " LocalFinalVariableNameCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java <nl> index ff491ea . . 0a27499 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java <nl> @ @ - 39 , 7 + 39 , 7 @ @ public class LineLengthCheckTest extends AbstractModuleTestSupport { <nl> public void testGetRequiredTokens ( ) { <nl> final LineLengthCheck checkObj = new LineLengthCheck ( ) ; <nl> assertArrayEquals ( <nl> - " LineLengthCheck # getRequiredTockens should return empty array by default " , <nl> + " LineLengthCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class LineLengthCheckTest extends AbstractModuleTestSupport { <nl> public void testGetAcceptableTokens ( ) { <nl> final LineLengthCheck checkObj = new LineLengthCheck ( ) ; <nl> assertArrayEquals ( <nl> - " LineLengthCheck # getAcceptableTockens should return empty array by default " , <nl> + " LineLengthCheck # getAcceptabletokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getAcceptableTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheckTest . java <nl> index 2c8cf76 . . 4f3d8ad 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheckTest . java <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class MethodLengthCheckTest extends AbstractModuleTestSupport { <nl> public void testGetRequiredTokens ( ) { <nl> final MethodLengthCheck checkObj = new MethodLengthCheck ( ) ; <nl> assertArrayEquals ( <nl> - " MethodLengthCheck # getRequiredTockens should return empty array by default " , <nl> + " MethodLengthCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java <nl> index 17d6884 . . 56d9aae 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java <nl> @ @ - 41 , 7 + 41 , 7 @ @ public class ParameterNumberCheckTest <nl> public void testGetRequiredTokens ( ) { <nl> final ParameterNumberCheck checkObj = new ParameterNumberCheck ( ) ; <nl> assertArrayEquals ( <nl> - " ParameterNumberCheck # getRequiredTockens should return empty array by default " , <nl> + " ParameterNumberCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java <nl> index 58fcfd6 . . e8f5310 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public class EmptyLineSeparatorCheckTest <nl> public void testGetRequiredTokens ( ) { <nl> final EmptyLineSeparatorCheck checkObj = new EmptyLineSeparatorCheck ( ) ; <nl> assertArrayEquals ( <nl> - " EmptyLineSeparatorCheck # getRequiredTockens should return empty array by default " , <nl> + " EmptyLineSeparatorCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheckTest . java <nl> index c2714bc . . 0e5d9de 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheckTest . java <nl> @ @ - 46 , 7 + 46 , 7 @ @ public class MethodParamPadCheckTest <nl> public void testGetRequiredTokens ( ) { <nl> final MethodParamPadCheck checkObj = new MethodParamPadCheck ( ) ; <nl> assertArrayEquals ( <nl> - " MethodParamPadCheck # getRequiredTockens should return empty array by default " , <nl> + " MethodParamPadCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java <nl> index cad4315 . . f91290f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class SingleSpaceSeparatorCheckTest extends AbstractModuleTestSupport { <nl> public void testGetAcceptableTokens ( ) { <nl> final SingleSpaceSeparatorCheck check = new SingleSpaceSeparatorCheck ( ) ; <nl> <nl> - assertArrayEquals ( " Invalid acceptable tockens " , <nl> + assertArrayEquals ( " Invalid acceptable tokens " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , check . getAcceptableTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheckTest . java <nl> index 91452c1 . . f55c66b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheckTest . java <nl> @ @ - 41 , 7 + 41 , 7 @ @ public class WhitespaceAfterCheckTest <nl> public void testGetRequiredTokens ( ) { <nl> final WhitespaceAfterCheck checkObj = new WhitespaceAfterCheck ( ) ; <nl> assertArrayEquals ( <nl> - " WhitespaceAfterCheck # getRequiredTockens should return empty array by default " , <nl> + " WhitespaceAfterCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java <nl> index 8c283ba . . 99d0d10 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class WhitespaceAroundCheckTest <nl> public void testGetRequiredTokens ( ) { <nl> final WhitespaceAroundCheck checkObj = new WhitespaceAroundCheck ( ) ; <nl> assertArrayEquals ( <nl> - " WhitespaceAroundCheck # getRequiredTockens should return empty array by default " , <nl> + " WhitespaceAroundCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> index 2bfce71 . . f461cdb 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> package com . google . checkstyle . test . base ; <nl> <nl> + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> + <nl> import java . io . File ; <nl> import java . util . List ; <nl> <nl> @ @ - 22 , 6 + 24 , 6 @ @ public class ConfigValidationTest extends BaseCheckTestSupport { <nl> <nl> / / runs over all input files ; <nl> / / as severity level is " warning " , no errors expected <nl> - verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , new String [ 0 ] , null ) ; <nl> + verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , EMPTY _ STRING _ ARRAY , null ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> index 37d6caf . . 44a98ff 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ BYTE _ ARRAY ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNotEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> @ @ - 115 , 7 + 116 , 7 @ @ public class PackageNamesLoaderTest { <nl> <nl> final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; <nl> when ( mockConnection . getInputStream ( ) ) . thenReturn ( <nl> - new ByteArrayInputStream ( new byte [ ] { } ) ) ; <nl> + new ByteArrayInputStream ( EMPTY _ BYTE _ ARRAY ) ) ; <nl> <nl> URL url = getMockUrl ( mockConnection ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> index f57183f . . 509c333 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ BYTE _ ARRAY ; <nl> + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ OBJECT _ ARRAY ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . powermock . api . mockito . PowerMockito . mock ; <nl> import static org . powermock . api . mockito . PowerMockito . when ; <nl> @ @ - 74 , 7 + 76 , 7 @ @ public class LocalizedMessageTest { <nl> ClassLoader classloader = mock ( ClassLoader . class ) ; <nl> final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; <nl> when ( mockConnection . getInputStream ( ) ) . thenReturn ( <nl> - new ByteArrayInputStream ( new byte [ ] { } ) ) ; <nl> + new ByteArrayInputStream ( EMPTY _ BYTE _ ARRAY ) ) ; <nl> <nl> URL url = getMockUrl ( mockConnection ) ; <nl> String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; <nl> @ @ - 139 , 7 + 141 , 7 @ @ public class LocalizedMessageTest { <nl> <nl> private static LocalizedMessage createSampleLocalizedMessage ( ) { <nl> return new LocalizedMessage ( 0 , " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> - " empty . statement " , new Object [ ] { } , " module " , LocalizedMessage . class , null ) ; <nl> + " empty . statement " , EMPTY _ OBJECT _ ARRAY , " module " , LocalizedMessage . class , null ) ; <nl> } <nl> <nl> @ After

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 index bf44a37 . . db5cb85 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 @ @ - 41 , 7 + 41 , 7 @ @ public class AnnotationLocationCheckTest extends AbstractModuleTestSupport { 
 public void testGetRequiredTokens ( ) { 
 final AnnotationLocationCheck checkObj = new AnnotationLocationCheck ( ) ; 
 assertArrayEquals ( 
 - " AnnotationLocationCheck # getRequiredTockens should return empty array by default " , 
 + " AnnotationLocationCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java 
 index 6780604 . . ff81f4d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationOnSameLineCheckTest . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class AnnotationOnSameLineCheckTest extends AbstractModuleTestSupport { 
 public void testGetRequiredTokens ( ) { 
 final AnnotationOnSameLineCheck check = new AnnotationOnSameLineCheck ( ) ; 
 assertArrayEquals ( 
 - " AnnotationOnSameLineCheck # getRequiredTockens should return empty array by default " , 
 + " AnnotationOnSameLineCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , check . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 index ff794f3 . . 935dfd2 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 @ @ - 55 , 7 + 55 , 7 @ @ public class LeftCurlyCheckTest extends AbstractModuleTestSupport { 
 @ Test 
 public void testGetRequiredTokens ( ) { 
 final LeftCurlyCheck checkObj = new LeftCurlyCheck ( ) ; 
 - assertArrayEquals ( " LeftCurlyCheck # getRequiredTockens should return empty array by default " , 
 + assertArrayEquals ( " LeftCurlyCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java 
 index 0cfe141 . . 9fbed91 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTypeCheckTest . java 
 @ @ - 45 , 7 + 45 , 7 @ @ public class JavadocTypeCheckTest extends AbstractModuleTestSupport { 
 public void testGetRequiredTokens ( ) { 
 final JavadocTypeCheck javadocTypeCheck = new JavadocTypeCheck ( ) ; 
 assertArrayEquals ( 
 - " JavadocTypeCheck # getRequiredTockens should return empty array by default " , 
 + " JavadocTypeCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , javadocTypeCheck . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalFinalVariableNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalFinalVariableNameCheckTest . java 
 index fd8532d . . d705e1d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalFinalVariableNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalFinalVariableNameCheckTest . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public class LocalFinalVariableNameCheckTest 
 final LocalFinalVariableNameCheck checkObj = 
 new LocalFinalVariableNameCheck ( ) ; 
 assertArrayEquals ( 
 - " LocalFinalVariableNameCheck # getRequiredTockens should return empty array by default " , 
 + " LocalFinalVariableNameCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java 
 index ff491ea . . 0a27499 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java 
 @ @ - 39 , 7 + 39 , 7 @ @ public class LineLengthCheckTest extends AbstractModuleTestSupport { 
 public void testGetRequiredTokens ( ) { 
 final LineLengthCheck checkObj = new LineLengthCheck ( ) ; 
 assertArrayEquals ( 
 - " LineLengthCheck # getRequiredTockens should return empty array by default " , 
 + " LineLengthCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 @ @ - 47 , 7 + 47 , 7 @ @ public class LineLengthCheckTest extends AbstractModuleTestSupport { 
 public void testGetAcceptableTokens ( ) { 
 final LineLengthCheck checkObj = new LineLengthCheck ( ) ; 
 assertArrayEquals ( 
 - " LineLengthCheck # getAcceptableTockens should return empty array by default " , 
 + " LineLengthCheck # getAcceptabletokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getAcceptableTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheckTest . java 
 index 2c8cf76 . . 4f3d8ad 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodLengthCheckTest . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class MethodLengthCheckTest extends AbstractModuleTestSupport { 
 public void testGetRequiredTokens ( ) { 
 final MethodLengthCheck checkObj = new MethodLengthCheck ( ) ; 
 assertArrayEquals ( 
 - " MethodLengthCheck # getRequiredTockens should return empty array by default " , 
 + " MethodLengthCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java 
 index 17d6884 . . 56d9aae 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / ParameterNumberCheckTest . java 
 @ @ - 41 , 7 + 41 , 7 @ @ public class ParameterNumberCheckTest 
 public void testGetRequiredTokens ( ) { 
 final ParameterNumberCheck checkObj = new ParameterNumberCheck ( ) ; 
 assertArrayEquals ( 
 - " ParameterNumberCheck # getRequiredTockens should return empty array by default " , 
 + " ParameterNumberCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java 
 index 58fcfd6 . . e8f5310 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public class EmptyLineSeparatorCheckTest 
 public void testGetRequiredTokens ( ) { 
 final EmptyLineSeparatorCheck checkObj = new EmptyLineSeparatorCheck ( ) ; 
 assertArrayEquals ( 
 - " EmptyLineSeparatorCheck # getRequiredTockens should return empty array by default " , 
 + " EmptyLineSeparatorCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheckTest . java 
 index c2714bc . . 0e5d9de 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheckTest . java 
 @ @ - 46 , 7 + 46 , 7 @ @ public class MethodParamPadCheckTest 
 public void testGetRequiredTokens ( ) { 
 final MethodParamPadCheck checkObj = new MethodParamPadCheck ( ) ; 
 assertArrayEquals ( 
 - " MethodParamPadCheck # getRequiredTockens should return empty array by default " , 
 + " MethodParamPadCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java 
 index cad4315 . . f91290f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class SingleSpaceSeparatorCheckTest extends AbstractModuleTestSupport { 
 public void testGetAcceptableTokens ( ) { 
 final SingleSpaceSeparatorCheck check = new SingleSpaceSeparatorCheck ( ) ; 
 
 - assertArrayEquals ( " Invalid acceptable tockens " , 
 + assertArrayEquals ( " Invalid acceptable tokens " , 
 CommonUtils . EMPTY _ INT _ ARRAY , check . getAcceptableTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheckTest . java 
 index 91452c1 . . f55c66b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAfterCheckTest . java 
 @ @ - 41 , 7 + 41 , 7 @ @ public class WhitespaceAfterCheckTest 
 public void testGetRequiredTokens ( ) { 
 final WhitespaceAfterCheck checkObj = new WhitespaceAfterCheck ( ) ; 
 assertArrayEquals ( 
 - " WhitespaceAfterCheck # getRequiredTockens should return empty array by default " , 
 + " WhitespaceAfterCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java 
 index 8c283ba . . 99d0d10 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public class WhitespaceAroundCheckTest 
 public void testGetRequiredTokens ( ) { 
 final WhitespaceAroundCheck checkObj = new WhitespaceAroundCheck ( ) ; 
 assertArrayEquals ( 
 - " WhitespaceAroundCheck # getRequiredTockens should return empty array by default " , 
 + " WhitespaceAroundCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 


NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 index 2bfce71 . . f461cdb 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package com . google . checkstyle . test . base ; 
 
 + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 + 
 import java . io . File ; 
 import java . util . List ; 
 
 @ @ - 22 , 6 + 24 , 6 @ @ public class ConfigValidationTest extends BaseCheckTestSupport { 
 
 / / runs over all input files ; 
 / / as severity level is " warning " , no errors expected 
 - verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , new String [ 0 ] , null ) ; 
 + verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , EMPTY _ STRING _ ARRAY , null ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 index 37d6caf . . 44a98ff 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ BYTE _ ARRAY ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertNotEquals ; 
 import static org . junit . Assert . assertTrue ; 
 @ @ - 115 , 7 + 116 , 7 @ @ public class PackageNamesLoaderTest { 
 
 final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; 
 when ( mockConnection . getInputStream ( ) ) . thenReturn ( 
 - new ByteArrayInputStream ( new byte [ ] { } ) ) ; 
 + new ByteArrayInputStream ( EMPTY _ BYTE _ ARRAY ) ) ; 
 
 URL url = getMockUrl ( mockConnection ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 index f57183f . . 509c333 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ BYTE _ ARRAY ; 
 + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ OBJECT _ ARRAY ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . powermock . api . mockito . PowerMockito . mock ; 
 import static org . powermock . api . mockito . PowerMockito . when ; 
 @ @ - 74 , 7 + 76 , 7 @ @ public class LocalizedMessageTest { 
 ClassLoader classloader = mock ( ClassLoader . class ) ; 
 final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; 
 when ( mockConnection . getInputStream ( ) ) . thenReturn ( 
 - new ByteArrayInputStream ( new byte [ ] { } ) ) ; 
 + new ByteArrayInputStream ( EMPTY _ BYTE _ ARRAY ) ) ; 
 
 URL url = getMockUrl ( mockConnection ) ; 
 String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; 
 @ @ - 139 , 7 + 141 , 7 @ @ public class LocalizedMessageTest { 
 
 private static LocalizedMessage createSampleLocalizedMessage ( ) { 
 return new LocalizedMessage ( 0 , " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 - " empty . statement " , new Object [ ] { } , " module " , LocalizedMessage . class , null ) ; 
 + " empty . statement " , EMPTY _ OBJECT _ ARRAY , " module " , LocalizedMessage . class , null ) ; 
 } 
 
 @ After
