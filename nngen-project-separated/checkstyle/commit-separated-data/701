BLEU SCORE: 0.06217116757317284

TEST MSG: Issue # 4587 : Moved all resources for UncommentedMain check
GENERATED MSG: Coverage has been increased to 100 % in UncommentedMainCheck . Issue # 1290

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheckTest . java <nl> index ec12d25 . . bf1e3d1 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheckTest . java <nl> @ @ - 39 , 7 + 39 , 10 @ @ public class UncommentedMainCheckTest <nl> extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> - return super . getPath ( " checks " + File . separator + filename ) ; <nl> + return super . getPath ( " checks " + File . separator <nl> + + " misc " + File . separator <nl> + + " uncommentedmain " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain . java <nl> deleted file mode 100644 <nl> index 9ecce3e . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain . java <nl> + + + / dev / null <nl> @ @ - 1 , 100 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2003 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - / * * <nl> - * Test case for UncommentedMainCheck <nl> - * @ author o _ sukhodolsky <nl> - * / <nl> - public class InputUncommentedMain <nl> - { <nl> - / / uncommented main <nl> - public static void main ( String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> - } <nl> - } <nl> - <nl> - class Main1 <nl> - { <nl> - / / uncommented main in class Main <nl> - public static void main ( String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " Main . main ( ) " ) ; <nl> - } <nl> - } <nl> - <nl> - class UncommentedMainTest1 <nl> - { <nl> - / / one more uncommented main <nl> - public static void main ( java . lang . String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " test1 . main ( ) " ) ; <nl> - } <nl> - } <nl> - <nl> - class UncommentedMainTest2 <nl> - { <nl> - / / wrong arg type <nl> - public static void main ( int args ) <nl> - { <nl> - System . identityHashCode ( " test2 . main ( ) " ) ; <nl> - } <nl> - } <nl> - <nl> - class UncommentedMainTest3 <nl> - { <nl> - / / no - public main <nl> - static void main ( String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " test3 . main ( ) " ) ; <nl> - } <nl> - } <nl> - <nl> - class UncommentedMainTest4 <nl> - { <nl> - / / non - static main <nl> - public void main ( String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " test4 . main ( ) " ) ; <nl> - } <nl> - } <nl> - <nl> - class UncommentedMainTest5 <nl> - { <nl> - / / wrong return type <nl> - public static int main ( String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " test5 . main ( ) " ) ; <nl> - return 1 ; <nl> - } <nl> - } <nl> - <nl> - class UncommentedMainTest6 <nl> - { <nl> - / / too many params <nl> - public static void main ( String [ ] args , int param ) <nl> - { <nl> - System . identityHashCode ( " test6 . main ( ) " ) ; <nl> - } <nl> - } <nl> - <nl> - class UncommentedMainTest7 <nl> - { <nl> - / / main w / o params <nl> - public static void main ( ) <nl> - { <nl> - System . identityHashCode ( " test7 . main ( ) " ) ; <nl> - } <nl> - } <nl> - <nl> - class UncommentedMainTest8 <nl> - { <nl> - <nl> - public static void main ( String . . . args ) <nl> - { <nl> - System . identityHashCode ( " test8 . main ( ) " ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain2 . java <nl> deleted file mode 100644 <nl> index 325ceb3 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 41 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2003 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - <nl> - public class InputUncommentedMain2 <nl> - { <nl> - private class PC { <nl> - <nl> - / / uncommented main with depth 2 <nl> - public void main ( String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> - } <nl> - <nl> - / / lets go deeper <nl> - private class PC2 { <nl> - <nl> - / / uncommented main with depth 3 <nl> - public void main ( String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> - } <nl> - <nl> - <nl> - } <nl> - } <nl> - <nl> - public static void main ( String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> - } <nl> - <nl> - } <nl> - <nl> - interface IF { <nl> - <nl> - void main ( String [ ] args ) ; <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain3 . java <nl> deleted file mode 100644 <nl> index ad70187 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain3 . java <nl> + + + / dev / null <nl> @ @ - 1 , 13 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2003 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - class oneMoreClass { <nl> - <nl> - public static void anyWrongMethodName ( String [ ] args ) <nl> - { <nl> - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain4 . java <nl> deleted file mode 100644 <nl> index 4e363b3 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain4 . java <nl> + + + / dev / null <nl> @ @ - 1 , 14 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2003 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - class InputUncommentedMainTest4 <nl> - { <nl> - / / one more uncommented main <nl> - public static void main ( int [ ] args ) <nl> - { <nl> - System . identityHashCode ( " test1 . main ( ) " ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain . java <nl> new file mode 100644 <nl> index 0000000 . . 4f5efa0 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain . java <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2003 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . uncommentedmain ; <nl> + <nl> + / * * <nl> + * Test case for UncommentedMainCheck <nl> + * @ author o _ sukhodolsky <nl> + * / <nl> + public class InputUncommentedMain <nl> + { <nl> + / / uncommented main <nl> + public static void main ( String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> + } <nl> + } <nl> + <nl> + class Main1 <nl> + { <nl> + / / uncommented main in class Main <nl> + public static void main ( String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " Main . main ( ) " ) ; <nl> + } <nl> + } <nl> + <nl> + class UncommentedMainTest1 <nl> + { <nl> + / / one more uncommented main <nl> + public static void main ( java . lang . String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " test1 . main ( ) " ) ; <nl> + } <nl> + } <nl> + <nl> + class UncommentedMainTest2 <nl> + { <nl> + / / wrong arg type <nl> + public static void main ( int args ) <nl> + { <nl> + System . identityHashCode ( " test2 . main ( ) " ) ; <nl> + } <nl> + } <nl> + <nl> + class UncommentedMainTest3 <nl> + { <nl> + / / no - public main <nl> + static void main ( String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " test3 . main ( ) " ) ; <nl> + } <nl> + } <nl> + <nl> + class UncommentedMainTest4 <nl> + { <nl> + / / non - static main <nl> + public void main ( String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " test4 . main ( ) " ) ; <nl> + } <nl> + } <nl> + <nl> + class UncommentedMainTest5 <nl> + { <nl> + / / wrong return type <nl> + public static int main ( String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " test5 . main ( ) " ) ; <nl> + return 1 ; <nl> + } <nl> + } <nl> + <nl> + class UncommentedMainTest6 <nl> + { <nl> + / / too many params <nl> + public static void main ( String [ ] args , int param ) <nl> + { <nl> + System . identityHashCode ( " test6 . main ( ) " ) ; <nl> + } <nl> + } <nl> + <nl> + class UncommentedMainTest7 <nl> + { <nl> + / / main w / o params <nl> + public static void main ( ) <nl> + { <nl> + System . identityHashCode ( " test7 . main ( ) " ) ; <nl> + } <nl> + } <nl> + <nl> + class UncommentedMainTest8 <nl> + { <nl> + <nl> + public static void main ( String . . . args ) <nl> + { <nl> + System . identityHashCode ( " test8 . main ( ) " ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain2 . java <nl> new file mode 100644 <nl> index 0000000 . . 9ffb279 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain2 . java <nl> @ @ - 0 , 0 + 1 , 41 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2003 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . uncommentedmain ; <nl> + <nl> + <nl> + public class InputUncommentedMain2 <nl> + { <nl> + private class PC { <nl> + <nl> + / / uncommented main with depth 2 <nl> + public void main ( String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> + } <nl> + <nl> + / / lets go deeper <nl> + private class PC2 { <nl> + <nl> + / / uncommented main with depth 3 <nl> + public void main ( String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> + } <nl> + <nl> + <nl> + } <nl> + } <nl> + <nl> + public static void main ( String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> + } <nl> + <nl> + } <nl> + <nl> + interface IF { <nl> + <nl> + void main ( String [ ] args ) ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain3 . java <nl> new file mode 100644 <nl> index 0000000 . . 7da0bb4 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain3 . java <nl> @ @ - 0 , 0 + 1 , 13 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2003 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . uncommentedmain ; <nl> + <nl> + class oneMoreClass { <nl> + <nl> + public static void anyWrongMethodName ( String [ ] args ) <nl> + { <nl> + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain4 . java <nl> new file mode 100644 <nl> index 0000000 . . e2ed749 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain4 . java <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2003 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . uncommentedmain ; <nl> + <nl> + class InputUncommentedMainTest4 <nl> + { <nl> + / / one more uncommented main <nl> + public static void main ( int [ ] args ) <nl> + { <nl> + System . identityHashCode ( " test1 . main ( ) " ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> index 0d84a0e . . 99e9cca 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Check ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> + <nl> / * * <nl> * Checks for redundant modifiers in interface and annotation definitions . <nl> * Also checks for redundant final modifiers on methods of final classes <nl> @ @ - 53 , 13 + 54 , 7 @ @ public class RedundantModifierCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . METHOD _ DEF , <nl> - TokenTypes . VARIABLE _ DEF , <nl> - TokenTypes . ANNOTATION _ FIELD _ DEF , <nl> - TokenTypes . INTERFACE _ DEF , <nl> - TokenTypes . CTOR _ DEF , <nl> - } ; <nl> + return getAcceptableTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 75 , 6 + 70 , 8 @ @ public class RedundantModifierCheck <nl> TokenTypes . ANNOTATION _ FIELD _ DEF , <nl> TokenTypes . INTERFACE _ DEF , <nl> TokenTypes . CTOR _ DEF , <nl> + TokenTypes . CLASS _ DEF , <nl> + TokenTypes . ENUM _ DEF , <nl> } ; <nl> } <nl> <nl> @ @ - 206 , 9 + 203 , 11 @ @ public class RedundantModifierCheck <nl> * @ return true or false <nl> * / <nl> private static boolean isInterfaceOrAnnotationMember ( DetailAST ast ) { <nl> - final DetailAST parentTypeDef = ast . getParent ( ) . getParent ( ) ; <nl> - return parentTypeDef . getType ( ) = = TokenTypes . INTERFACE _ DEF <nl> - | | parentTypeDef . getType ( ) = = TokenTypes . ANNOTATION _ DEF ; <nl> + final DetailAST parentTypeDef = <nl> + ast . getParent ( ) ! = null ? ast . getParent ( ) . getParent ( ) : null ; <nl> + return parentTypeDef ! = null <nl> + & & ( parentTypeDef . getType ( ) = = TokenTypes . INTERFACE _ DEF <nl> + | | parentTypeDef . getType ( ) = = TokenTypes . ANNOTATION _ DEF ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierTest . java <nl> index e34c01d . . eb82b7f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierTest . java <nl> @ @ - 93 , 6 + 93 , 17 @ @ public class RedundantModifierTest <nl> } <nl> <nl> @ Test <nl> + public void testInnerTypeInInterfaceIsImplicitlyStatic ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( RedundantModifierCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 8 : 5 : " + getCheckMessage ( MSG _ KEY , " static " ) , <nl> + " 12 : 5 : " + getCheckMessage ( MSG _ KEY , " static " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputRedundantStaticModifierInInnerTypeOfInterface . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testGetAcceptableTokens ( ) { <nl> RedundantModifierCheck redundantModifierCheckObj = new RedundantModifierCheck ( ) ; <nl> int [ ] actual = redundantModifierCheckObj . getAcceptableTokens ( ) ; <nl> @ @ - 102 , 6 + 113 , 8 @ @ public class RedundantModifierTest <nl> TokenTypes . ANNOTATION _ FIELD _ DEF , <nl> TokenTypes . INTERFACE _ DEF , <nl> TokenTypes . CTOR _ DEF , <nl> + TokenTypes . CLASS _ DEF , <nl> + TokenTypes . ENUM _ DEF , <nl> } ; <nl> Assert . assertNotNull ( actual ) ; <nl> Assert . assertArrayEquals ( expected , actual ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRedundantStaticModifierInInnerTypeOfInterface . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRedundantStaticModifierInInnerTypeOfInterface . java <nl> new file mode 100644 <nl> index 0000000 . . eab97ca <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRedundantStaticModifierInInnerTypeOfInterface . java <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2015 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + public interface InputRedundantStaticModifierInInnerTypeOfInterface { <nl> + static class MyInnerClass { } <nl> + <nl> + class MyInnerClass2 { } <nl> + <nl> + static enum MyInnerEnum { } <nl> + <nl> + enum MyInnerEnum2 { } <nl> + }

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheckTest . java 
 index ec12d25 . . bf1e3d1 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheckTest . java 
 @ @ - 39 , 7 + 39 , 10 @ @ public class UncommentedMainCheckTest 
 extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 - return super . getPath ( " checks " + File . separator + filename ) ; 
 + return super . getPath ( " checks " + File . separator 
 + + " misc " + File . separator 
 + + " uncommentedmain " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain . java 
 deleted file mode 100644 
 index 9ecce3e . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain . java 
 + + + / dev / null 
 @ @ - 1 , 100 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2003 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - / * * 
 - * Test case for UncommentedMainCheck 
 - * @ author o _ sukhodolsky 
 - * / 
 - public class InputUncommentedMain 
 - { 
 - / / uncommented main 
 - public static void main ( String [ ] args ) 
 - { 
 - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 - } 
 - } 
 - 
 - class Main1 
 - { 
 - / / uncommented main in class Main 
 - public static void main ( String [ ] args ) 
 - { 
 - System . identityHashCode ( " Main . main ( ) " ) ; 
 - } 
 - } 
 - 
 - class UncommentedMainTest1 
 - { 
 - / / one more uncommented main 
 - public static void main ( java . lang . String [ ] args ) 
 - { 
 - System . identityHashCode ( " test1 . main ( ) " ) ; 
 - } 
 - } 
 - 
 - class UncommentedMainTest2 
 - { 
 - / / wrong arg type 
 - public static void main ( int args ) 
 - { 
 - System . identityHashCode ( " test2 . main ( ) " ) ; 
 - } 
 - } 
 - 
 - class UncommentedMainTest3 
 - { 
 - / / no - public main 
 - static void main ( String [ ] args ) 
 - { 
 - System . identityHashCode ( " test3 . main ( ) " ) ; 
 - } 
 - } 
 - 
 - class UncommentedMainTest4 
 - { 
 - / / non - static main 
 - public void main ( String [ ] args ) 
 - { 
 - System . identityHashCode ( " test4 . main ( ) " ) ; 
 - } 
 - } 
 - 
 - class UncommentedMainTest5 
 - { 
 - / / wrong return type 
 - public static int main ( String [ ] args ) 
 - { 
 - System . identityHashCode ( " test5 . main ( ) " ) ; 
 - return 1 ; 
 - } 
 - } 
 - 
 - class UncommentedMainTest6 
 - { 
 - / / too many params 
 - public static void main ( String [ ] args , int param ) 
 - { 
 - System . identityHashCode ( " test6 . main ( ) " ) ; 
 - } 
 - } 
 - 
 - class UncommentedMainTest7 
 - { 
 - / / main w / o params 
 - public static void main ( ) 
 - { 
 - System . identityHashCode ( " test7 . main ( ) " ) ; 
 - } 
 - } 
 - 
 - class UncommentedMainTest8 
 - { 
 - 
 - public static void main ( String . . . args ) 
 - { 
 - System . identityHashCode ( " test8 . main ( ) " ) ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain2 . java 
 deleted file mode 100644 
 index 325ceb3 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain2 . java 
 + + + / dev / null 
 @ @ - 1 , 41 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2003 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - 
 - public class InputUncommentedMain2 
 - { 
 - private class PC { 
 - 
 - / / uncommented main with depth 2 
 - public void main ( String [ ] args ) 
 - { 
 - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 - } 
 - 
 - / / lets go deeper 
 - private class PC2 { 
 - 
 - / / uncommented main with depth 3 
 - public void main ( String [ ] args ) 
 - { 
 - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 - } 
 - 
 - 
 - } 
 - } 
 - 
 - public static void main ( String [ ] args ) 
 - { 
 - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 - } 
 - 
 - } 
 - 
 - interface IF { 
 - 
 - void main ( String [ ] args ) ; 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain3 . java 
 deleted file mode 100644 
 index ad70187 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain3 . java 
 + + + / dev / null 
 @ @ - 1 , 13 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2003 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - class oneMoreClass { 
 - 
 - public static void anyWrongMethodName ( String [ ] args ) 
 - { 
 - System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain4 . java 
 deleted file mode 100644 
 index 4e363b3 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputUncommentedMain4 . java 
 + + + / dev / null 
 @ @ - 1 , 14 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2003 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - class InputUncommentedMainTest4 
 - { 
 - / / one more uncommented main 
 - public static void main ( int [ ] args ) 
 - { 
 - System . identityHashCode ( " test1 . main ( ) " ) ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain . java 
 new file mode 100644 
 index 0000000 . . 4f5efa0 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain . java 
 @ @ - 0 , 0 + 1 , 100 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2003 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . misc . uncommentedmain ; 
 + 
 + / * * 
 + * Test case for UncommentedMainCheck 
 + * @ author o _ sukhodolsky 
 + * / 
 + public class InputUncommentedMain 
 + { 
 + / / uncommented main 
 + public static void main ( String [ ] args ) 
 + { 
 + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 + } 
 + } 
 + 
 + class Main1 
 + { 
 + / / uncommented main in class Main 
 + public static void main ( String [ ] args ) 
 + { 
 + System . identityHashCode ( " Main . main ( ) " ) ; 
 + } 
 + } 
 + 
 + class UncommentedMainTest1 
 + { 
 + / / one more uncommented main 
 + public static void main ( java . lang . String [ ] args ) 
 + { 
 + System . identityHashCode ( " test1 . main ( ) " ) ; 
 + } 
 + } 
 + 
 + class UncommentedMainTest2 
 + { 
 + / / wrong arg type 
 + public static void main ( int args ) 
 + { 
 + System . identityHashCode ( " test2 . main ( ) " ) ; 
 + } 
 + } 
 + 
 + class UncommentedMainTest3 
 + { 
 + / / no - public main 
 + static void main ( String [ ] args ) 
 + { 
 + System . identityHashCode ( " test3 . main ( ) " ) ; 
 + } 
 + } 
 + 
 + class UncommentedMainTest4 
 + { 
 + / / non - static main 
 + public void main ( String [ ] args ) 
 + { 
 + System . identityHashCode ( " test4 . main ( ) " ) ; 
 + } 
 + } 
 + 
 + class UncommentedMainTest5 
 + { 
 + / / wrong return type 
 + public static int main ( String [ ] args ) 
 + { 
 + System . identityHashCode ( " test5 . main ( ) " ) ; 
 + return 1 ; 
 + } 
 + } 
 + 
 + class UncommentedMainTest6 
 + { 
 + / / too many params 
 + public static void main ( String [ ] args , int param ) 
 + { 
 + System . identityHashCode ( " test6 . main ( ) " ) ; 
 + } 
 + } 
 + 
 + class UncommentedMainTest7 
 + { 
 + / / main w / o params 
 + public static void main ( ) 
 + { 
 + System . identityHashCode ( " test7 . main ( ) " ) ; 
 + } 
 + } 
 + 
 + class UncommentedMainTest8 
 + { 
 + 
 + public static void main ( String . . . args ) 
 + { 
 + System . identityHashCode ( " test8 . main ( ) " ) ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain2 . java 
 new file mode 100644 
 index 0000000 . . 9ffb279 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain2 . java 
 @ @ - 0 , 0 + 1 , 41 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2003 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . misc . uncommentedmain ; 
 + 
 + 
 + public class InputUncommentedMain2 
 + { 
 + private class PC { 
 + 
 + / / uncommented main with depth 2 
 + public void main ( String [ ] args ) 
 + { 
 + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 + } 
 + 
 + / / lets go deeper 
 + private class PC2 { 
 + 
 + / / uncommented main with depth 3 
 + public void main ( String [ ] args ) 
 + { 
 + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 + } 
 + 
 + 
 + } 
 + } 
 + 
 + public static void main ( String [ ] args ) 
 + { 
 + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 + } 
 + 
 + } 
 + 
 + interface IF { 
 + 
 + void main ( String [ ] args ) ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain3 . java 
 new file mode 100644 
 index 0000000 . . 7da0bb4 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain3 . java 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2003 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . misc . uncommentedmain ; 
 + 
 + class oneMoreClass { 
 + 
 + public static void anyWrongMethodName ( String [ ] args ) 
 + { 
 + System . identityHashCode ( " InputUncommentedMain . main ( ) " ) ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain4 . java 
 new file mode 100644 
 index 0000000 . . e2ed749 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / uncommentedmain / InputUncommentedMain4 . java 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2003 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . misc . uncommentedmain ; 
 + 
 + class InputUncommentedMainTest4 
 + { 
 + / / one more uncommented main 
 + public static void main ( int [ ] args ) 
 + { 
 + System . identityHashCode ( " test1 . main ( ) " ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 index 0d84a0e . . 99e9cca 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Check ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 + 
 / * * 
 * Checks for redundant modifiers in interface and annotation definitions . 
 * Also checks for redundant final modifiers on methods of final classes 
 @ @ - 53 , 13 + 54 , 7 @ @ public class RedundantModifierCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . METHOD _ DEF , 
 - TokenTypes . VARIABLE _ DEF , 
 - TokenTypes . ANNOTATION _ FIELD _ DEF , 
 - TokenTypes . INTERFACE _ DEF , 
 - TokenTypes . CTOR _ DEF , 
 - } ; 
 + return getAcceptableTokens ( ) ; 
 } 
 
 @ Override 
 @ @ - 75 , 6 + 70 , 8 @ @ public class RedundantModifierCheck 
 TokenTypes . ANNOTATION _ FIELD _ DEF , 
 TokenTypes . INTERFACE _ DEF , 
 TokenTypes . CTOR _ DEF , 
 + TokenTypes . CLASS _ DEF , 
 + TokenTypes . ENUM _ DEF , 
 } ; 
 } 
 
 @ @ - 206 , 9 + 203 , 11 @ @ public class RedundantModifierCheck 
 * @ return true or false 
 * / 
 private static boolean isInterfaceOrAnnotationMember ( DetailAST ast ) { 
 - final DetailAST parentTypeDef = ast . getParent ( ) . getParent ( ) ; 
 - return parentTypeDef . getType ( ) = = TokenTypes . INTERFACE _ DEF 
 - | | parentTypeDef . getType ( ) = = TokenTypes . ANNOTATION _ DEF ; 
 + final DetailAST parentTypeDef = 
 + ast . getParent ( ) ! = null ? ast . getParent ( ) . getParent ( ) : null ; 
 + return parentTypeDef ! = null 
 + & & ( parentTypeDef . getType ( ) = = TokenTypes . INTERFACE _ DEF 
 + | | parentTypeDef . getType ( ) = = TokenTypes . ANNOTATION _ DEF ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierTest . java 
 index e34c01d . . eb82b7f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierTest . java 
 @ @ - 93 , 6 + 93 , 17 @ @ public class RedundantModifierTest 
 } 
 
 @ Test 
 + public void testInnerTypeInInterfaceIsImplicitlyStatic ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( RedundantModifierCheck . class ) ; 
 + final String [ ] expected = { 
 + " 8 : 5 : " + getCheckMessage ( MSG _ KEY , " static " ) , 
 + " 12 : 5 : " + getCheckMessage ( MSG _ KEY , " static " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputRedundantStaticModifierInInnerTypeOfInterface . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testGetAcceptableTokens ( ) { 
 RedundantModifierCheck redundantModifierCheckObj = new RedundantModifierCheck ( ) ; 
 int [ ] actual = redundantModifierCheckObj . getAcceptableTokens ( ) ; 
 @ @ - 102 , 6 + 113 , 8 @ @ public class RedundantModifierTest 
 TokenTypes . ANNOTATION _ FIELD _ DEF , 
 TokenTypes . INTERFACE _ DEF , 
 TokenTypes . CTOR _ DEF , 
 + TokenTypes . CLASS _ DEF , 
 + TokenTypes . ENUM _ DEF , 
 } ; 
 Assert . assertNotNull ( actual ) ; 
 Assert . assertArrayEquals ( expected , actual ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputRedundantStaticModifierInInnerTypeOfInterface . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRedundantStaticModifierInInnerTypeOfInterface . java 
 new file mode 100644 
 index 0000000 . . eab97ca 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / InputRedundantStaticModifierInInnerTypeOfInterface . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2015 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + public interface InputRedundantStaticModifierInInnerTypeOfInterface { 
 + static class MyInnerClass { } 
 + 
 + class MyInnerClass2 { } 
 + 
 + static enum MyInnerEnum { } 
 + 
 + enum MyInnerEnum2 { } 
 + }
