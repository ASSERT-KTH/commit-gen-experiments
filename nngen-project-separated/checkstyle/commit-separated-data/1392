BLEU SCORE: 0.7825422900366437

TEST MSG: Issue # 2661 : Enforce ConfusingConditionCheck of sevntu - checkstyle over Checkstyle source code
GENERATED MSG: Issue # 2661 : Enforce DiamondOperatorForVariableDefinitionCheck of sevntu - checkstyle over Checkstyle source code

TEST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index 6d33350 . . d8c6b08 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 26 , 5 + 26 , 6 @ @ <nl> < module name = " FinalizeImplementationCheck " / > <nl> < module name = " RequiredParameterForAnnotation " / > <nl> < module name = " DiamondOperatorForVariableDefinitionCheck " / > <nl> + < module name = " ConfusingConditionCheck " / > <nl> < / module > <nl> < / module >
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index ae8d049 . . f8c8642 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 337 , 7 + 337 , 7 @ @ <nl> < module name = " MethodTypeParameterName " / > <nl> < module name = " PackageName " / > <nl> < module name = " ParameterName " > <nl> - < property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / > <nl> + < property name = " format " value = " ^ ( id ) | ( [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] + ) $ " / > <nl> < property name = " ignoreOverridden " value = " true " / > <nl> < / module > <nl> < module name = " CatchParameterName " > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java <nl> index ac694a6 . . d6ee8f7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java <nl> @ @ - 47 , 10 + 47 , 10 @ @ public final class LocalizedMessages { <nl> <nl> / * * <nl> * Logs a message to be reported . <nl> - * @ param aMsg the message to log <nl> + * @ param message the message to log <nl> * * / <nl> - public void add ( LocalizedMessage aMsg ) { <nl> - messages . add ( aMsg ) ; <nl> + public void add ( LocalizedMessage message ) { <nl> + messages . add ( message ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> index 3610f4f . . fff37eb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> @ @ - 401 , 14 + 401 , 14 @ @ public class TranslationCheck <nl> <nl> / * * <nl> * Helper method to log an io exception . <nl> - * @ param ex the exception that occurred <nl> + * @ param exception the exception that occurred <nl> * @ param file the file that could not be processed <nl> * / <nl> - private void logIoException ( IOException ex , File file ) { <nl> + private void logIoException ( IOException exception , File file ) { <nl> String [ ] args = null ; <nl> String key = " general . fileNotFound " ; <nl> - if ( ! ( ex instanceof FileNotFoundException ) ) { <nl> - args = new String [ ] { ex . getMessage ( ) } ; <nl> + if ( ! ( exception instanceof FileNotFoundException ) ) { <nl> + args = new String [ ] { exception . getMessage ( ) } ; <nl> key = " general . exception " ; <nl> } <nl> final LocalizedMessage message = <nl> @ @ - 422 , 7 + 422 , 7 @ @ public class TranslationCheck <nl> final SortedSet < LocalizedMessage > messages = Sets . newTreeSet ( ) ; <nl> messages . add ( message ) ; <nl> getMessageDispatcher ( ) . fireErrors ( file . getPath ( ) , messages ) ; <nl> - LOG . debug ( " IOException occurred . " , ex ) ; <nl> + LOG . debug ( " IOException occurred . " , exception ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java <nl> index 6534e6e . . d9ae0fe 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java <nl> @ @ - 145 , 10 + 145 , 10 @ @ public abstract class AbstractComplexityCheck <nl> / * * <nl> * Increments the current value by a specified amount . <nl> * <nl> - * @ param by the amount to increment by <nl> + * @ param amount the amount to increment by <nl> * / <nl> - protected final void incrementCurrentValue ( BigInteger by ) { <nl> - currentValue = currentValue . add ( by ) ; <nl> + protected final void incrementCurrentValue ( BigInteger amount ) { <nl> + currentValue = currentValue . add ( amount ) ; <nl> } <nl> <nl> / * * Push the current value on the stack . * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java <nl> index dfee755 . . e5c7cd3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java <nl> @ @ - 201 , 10 + 201 , 10 @ @ public class CyclomaticComplexityCheck <nl> / * * <nl> * Increments the current value by a specified amount . <nl> * <nl> - * @ param by the amount to increment by <nl> + * @ param amount the amount to increment by <nl> * / <nl> - protected final void incrementCurrentValue ( BigInteger by ) { <nl> - currentValue = currentValue . add ( by ) ; <nl> + protected final void incrementCurrentValue ( BigInteger amount ) { <nl> + currentValue = currentValue . add ( amount ) ; <nl> } <nl> <nl> / * * Push the current value on the stack . * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java <nl> index 98513a4 . . 2032566 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java <nl> @ @ - 62 , 12 + 62 , 12 @ @ public final class ScopeUtils { <nl> <nl> / * * <nl> * Returns the scope of the surrounding " block " . <nl> - * @ param aAST the node to return the scope for <nl> + * @ param node the node to return the scope for <nl> * @ return the Scope of the surrounding block <nl> * / <nl> - public static Scope getSurroundingScope ( DetailAST aAST ) { <nl> + public static Scope getSurroundingScope ( DetailAST node ) { <nl> Scope returnValue = null ; <nl> - for ( DetailAST token = aAST . getParent ( ) ; <nl> + for ( DetailAST token = node . getParent ( ) ; <nl> token ! = null ; <nl> token = token . getParent ( ) ) { <nl> final int type = token . getType ( ) ; <nl> @ @ - 95 , 14 + 95 , 14 @ @ public final class ScopeUtils { <nl> / * * <nl> * Returns whether a node is directly contained within an interface block . <nl> * <nl> - * @ param aAST the node to check if directly contained within an interface block . <nl> + * @ param node the node to check if directly contained within an interface block . <nl> * @ return a { @ code boolean } value <nl> * / <nl> - public static boolean isInInterfaceBlock ( DetailAST aAST ) { <nl> + public static boolean isInInterfaceBlock ( DetailAST node ) { <nl> boolean returnValue = false ; <nl> <nl> / / Loop up looking for a containing interface block <nl> - for ( DetailAST token = aAST . getParent ( ) ; <nl> + for ( DetailAST token = node . getParent ( ) ; <nl> token ! = null & & ! returnValue ; <nl> token = token . getParent ( ) ) { <nl> <nl> @ @ - 125 , 14 + 125 , 14 @ @ public final class ScopeUtils { <nl> / * * <nl> * Returns whether a node is directly contained within an annotation block . <nl> * <nl> - * @ param aAST the node to check if directly contained within an annotation block . <nl> + * @ param node the node to check if directly contained within an annotation block . <nl> * @ return a { @ code boolean } value <nl> * / <nl> - public static boolean isInAnnotationBlock ( DetailAST aAST ) { <nl> + public static boolean isInAnnotationBlock ( DetailAST node ) { <nl> boolean returnValue = false ; <nl> <nl> / / Loop up looking for a containing interface block <nl> - for ( DetailAST token = aAST . getParent ( ) ; <nl> + for ( DetailAST token = node . getParent ( ) ; <nl> token ! = null & & ! returnValue ; <nl> token = token . getParent ( ) ) { <nl> final int type = token . getType ( ) ; <nl> @ @ - 155 , 25 + 155 , 25 @ @ public final class ScopeUtils { <nl> * Returns whether a node is directly contained within an interface or <nl> * annotation block . <nl> * <nl> - * @ param aAST the node to check if directly contained within an interface <nl> + * @ param node the node to check if directly contained within an interface <nl> * or annotation block . <nl> * @ return a { @ code boolean } value <nl> * / <nl> - public static boolean isInInterfaceOrAnnotationBlock ( DetailAST aAST ) { <nl> - return isInInterfaceBlock ( aAST ) | | isInAnnotationBlock ( aAST ) ; <nl> + public static boolean isInInterfaceOrAnnotationBlock ( DetailAST node ) { <nl> + return isInInterfaceBlock ( node ) | | isInAnnotationBlock ( node ) ; <nl> } <nl> <nl> / * * <nl> * Returns whether a node is directly contained within an enum block . <nl> * <nl> - * @ param aAST the node to check if directly contained within an enum block . <nl> + * @ param node the node to check if directly contained within an enum block . <nl> * @ return a { @ code boolean } value <nl> * / <nl> - public static boolean isInEnumBlock ( DetailAST aAST ) { <nl> + public static boolean isInEnumBlock ( DetailAST node ) { <nl> boolean returnValue = false ; <nl> <nl> / / Loop up looking for a containing interface block <nl> - for ( DetailAST token = aAST . getParent ( ) ; <nl> + for ( DetailAST token = node . getParent ( ) ; <nl> token ! = null & & ! returnValue ; <nl> token = token . getParent ( ) ) { <nl> final int type = token . getType ( ) ; <nl> @ @ - 195 , 14 + 195 , 14 @ @ public final class ScopeUtils { <nl> * Returns whether the scope of a node is restricted to a code block . <nl> * A code block is a method or constructor body , or a initializer block . <nl> * <nl> - * @ param aAST the node to check <nl> + * @ param node the node to check <nl> * @ return a { @ code boolean } value <nl> * / <nl> - public static boolean isInCodeBlock ( DetailAST aAST ) { <nl> + public static boolean isInCodeBlock ( DetailAST node ) { <nl> boolean returnValue = false ; <nl> <nl> / / Loop up looking for a containing code block <nl> - for ( DetailAST token = aAST . getParent ( ) ; <nl> + for ( DetailAST token = node . getParent ( ) ; <nl> token ! = null ; <nl> token = token . getParent ( ) ) { <nl> final int type = token . getType ( ) ; <nl> @ @ - 221 , 12 + 221 , 12 @ @ public final class ScopeUtils { <nl> / * * <nl> * Returns whether a node is contained in the outer most type block . <nl> * <nl> - * @ param aAST the node to check <nl> + * @ param node the node to check <nl> * @ return a { @ code boolean } value <nl> * / <nl> - public static boolean isOuterMostType ( DetailAST aAST ) { <nl> + public static boolean isOuterMostType ( DetailAST node ) { <nl> boolean returnValue = true ; <nl> - for ( DetailAST parent = aAST . getParent ( ) ; <nl> + for ( DetailAST parent = node . getParent ( ) ; <nl> parent ! = null ; <nl> parent = parent . getParent ( ) ) { <nl> if ( parent . getType ( ) = = TokenTypes . CLASS _ DEF <nl> @ @ - 245 , 22 + 245 , 22 @ @ public final class ScopeUtils { <nl> * Determines whether a node is a local variable definition . <nl> * I . e . if it is declared in a code block , a for initializer , <nl> * or a catch parameter . <nl> - * @ param aAST the node to check . <nl> + * @ param node the node to check . <nl> * @ return whether aAST is a local variable definition . <nl> * / <nl> - public static boolean isLocalVariableDef ( DetailAST aAST ) { <nl> + public static boolean isLocalVariableDef ( DetailAST node ) { <nl> boolean localVariableDef = false ; <nl> / / variable declaration ? <nl> - if ( aAST . getType ( ) = = TokenTypes . VARIABLE _ DEF ) { <nl> - final DetailAST parent = aAST . getParent ( ) ; <nl> + if ( node . getType ( ) = = TokenTypes . VARIABLE _ DEF ) { <nl> + final DetailAST parent = node . getParent ( ) ; <nl> final int type = parent . getType ( ) ; <nl> localVariableDef = type = = TokenTypes . SLIST <nl> | | type = = TokenTypes . FOR _ INIT <nl> | | type = = TokenTypes . FOR _ EACH _ CLAUSE ; <nl> } <nl> / / catch parameter ? <nl> - if ( aAST . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { <nl> - final DetailAST parent = aAST . getParent ( ) ; <nl> + if ( node . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { <nl> + final DetailAST parent = node . getParent ( ) ; <nl> localVariableDef = parent . getType ( ) = = TokenTypes . LITERAL _ CATCH ; <nl> } <nl> return localVariableDef ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> index 15361f1 . . 562c5d2 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> @ @ - 230 , 11 + 230 , 11 @ @ public class ImportControlCheckTest extends BaseCheckTestSupport { <nl> * and caught in test ( it was caught and re - thrown twice after that ) <nl> * Note : this is helper method with hard - coded structure of exception causes . It works <nl> * fine for methods mentioned , you may need to adjust it if you try to use it for other needs <nl> - * @ param ex Exception <nl> + * @ param exception Exception <nl> * @ return String message of original exception <nl> * / <nl> - private static String getInvocationTargetExceptionMessage ( CheckstyleException ex ) { <nl> - return ( ( InvocationTargetException ) ex . getCause ( ) . getCause ( ) ) <nl> + private static String getInvocationTargetExceptionMessage ( CheckstyleException exception ) { <nl> + return ( ( InvocationTargetException ) exception . getCause ( ) . getCause ( ) ) <nl> . getTargetException ( ) . getMessage ( ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> index b7fcbca . . d7d92ab 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> @ @ - 278 , 8 + 278 , 8 @ @ public class JavadocParseTreeTest { <nl> compareTrees ( expectedTree , generatedTree ) ; <nl> } <nl> <nl> - private void compareTrees ( ParseTree t1 , ParseTree t2 ) { <nl> - Assert . assertEquals ( t1 . toStringTree ( parser ) , t2 . toStringTree ( parser ) ) ; <nl> + private void compareTrees ( ParseTree first , ParseTree second ) { <nl> + Assert . assertEquals ( first . toStringTree ( parser ) , second . toStringTree ( parser ) ) ; <nl> } <nl> <nl> private static class FailOnErrorListener extends BaseErrorListener {

TEST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index 6d33350 . . d8c6b08 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 26 , 5 + 26 , 6 @ @ 
 < module name = " FinalizeImplementationCheck " / > 
 < module name = " RequiredParameterForAnnotation " / > 
 < module name = " DiamondOperatorForVariableDefinitionCheck " / > 
 + < module name = " ConfusingConditionCheck " / > 
 < / module > 
 < / module >

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index ae8d049 . . f8c8642 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 337 , 7 + 337 , 7 @ @ 
 < module name = " MethodTypeParameterName " / > 
 < module name = " PackageName " / > 
 < module name = " ParameterName " > 
 - < property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / > 
 + < property name = " format " value = " ^ ( id ) | ( [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] + ) $ " / > 
 < property name = " ignoreOverridden " value = " true " / > 
 < / module > 
 < module name = " CatchParameterName " > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java 
 index ac694a6 . . d6ee8f7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java 
 @ @ - 47 , 10 + 47 , 10 @ @ public final class LocalizedMessages { 
 
 / * * 
 * Logs a message to be reported . 
 - * @ param aMsg the message to log 
 + * @ param message the message to log 
 * * / 
 - public void add ( LocalizedMessage aMsg ) { 
 - messages . add ( aMsg ) ; 
 + public void add ( LocalizedMessage message ) { 
 + messages . add ( message ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 index 3610f4f . . fff37eb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 @ @ - 401 , 14 + 401 , 14 @ @ public class TranslationCheck 
 
 / * * 
 * Helper method to log an io exception . 
 - * @ param ex the exception that occurred 
 + * @ param exception the exception that occurred 
 * @ param file the file that could not be processed 
 * / 
 - private void logIoException ( IOException ex , File file ) { 
 + private void logIoException ( IOException exception , File file ) { 
 String [ ] args = null ; 
 String key = " general . fileNotFound " ; 
 - if ( ! ( ex instanceof FileNotFoundException ) ) { 
 - args = new String [ ] { ex . getMessage ( ) } ; 
 + if ( ! ( exception instanceof FileNotFoundException ) ) { 
 + args = new String [ ] { exception . getMessage ( ) } ; 
 key = " general . exception " ; 
 } 
 final LocalizedMessage message = 
 @ @ - 422 , 7 + 422 , 7 @ @ public class TranslationCheck 
 final SortedSet < LocalizedMessage > messages = Sets . newTreeSet ( ) ; 
 messages . add ( message ) ; 
 getMessageDispatcher ( ) . fireErrors ( file . getPath ( ) , messages ) ; 
 - LOG . debug ( " IOException occurred . " , ex ) ; 
 + LOG . debug ( " IOException occurred . " , exception ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java 
 index 6534e6e . . d9ae0fe 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java 
 @ @ - 145 , 10 + 145 , 10 @ @ public abstract class AbstractComplexityCheck 
 / * * 
 * Increments the current value by a specified amount . 
 * 
 - * @ param by the amount to increment by 
 + * @ param amount the amount to increment by 
 * / 
 - protected final void incrementCurrentValue ( BigInteger by ) { 
 - currentValue = currentValue . add ( by ) ; 
 + protected final void incrementCurrentValue ( BigInteger amount ) { 
 + currentValue = currentValue . add ( amount ) ; 
 } 
 
 / * * Push the current value on the stack . * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java 
 index dfee755 . . e5c7cd3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java 
 @ @ - 201 , 10 + 201 , 10 @ @ public class CyclomaticComplexityCheck 
 / * * 
 * Increments the current value by a specified amount . 
 * 
 - * @ param by the amount to increment by 
 + * @ param amount the amount to increment by 
 * / 
 - protected final void incrementCurrentValue ( BigInteger by ) { 
 - currentValue = currentValue . add ( by ) ; 
 + protected final void incrementCurrentValue ( BigInteger amount ) { 
 + currentValue = currentValue . add ( amount ) ; 
 } 
 
 / * * Push the current value on the stack . * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java 
 index 98513a4 . . 2032566 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java 
 @ @ - 62 , 12 + 62 , 12 @ @ public final class ScopeUtils { 
 
 / * * 
 * Returns the scope of the surrounding " block " . 
 - * @ param aAST the node to return the scope for 
 + * @ param node the node to return the scope for 
 * @ return the Scope of the surrounding block 
 * / 
 - public static Scope getSurroundingScope ( DetailAST aAST ) { 
 + public static Scope getSurroundingScope ( DetailAST node ) { 
 Scope returnValue = null ; 
 - for ( DetailAST token = aAST . getParent ( ) ; 
 + for ( DetailAST token = node . getParent ( ) ; 
 token ! = null ; 
 token = token . getParent ( ) ) { 
 final int type = token . getType ( ) ; 
 @ @ - 95 , 14 + 95 , 14 @ @ public final class ScopeUtils { 
 / * * 
 * Returns whether a node is directly contained within an interface block . 
 * 
 - * @ param aAST the node to check if directly contained within an interface block . 
 + * @ param node the node to check if directly contained within an interface block . 
 * @ return a { @ code boolean } value 
 * / 
 - public static boolean isInInterfaceBlock ( DetailAST aAST ) { 
 + public static boolean isInInterfaceBlock ( DetailAST node ) { 
 boolean returnValue = false ; 
 
 / / Loop up looking for a containing interface block 
 - for ( DetailAST token = aAST . getParent ( ) ; 
 + for ( DetailAST token = node . getParent ( ) ; 
 token ! = null & & ! returnValue ; 
 token = token . getParent ( ) ) { 
 
 @ @ - 125 , 14 + 125 , 14 @ @ public final class ScopeUtils { 
 / * * 
 * Returns whether a node is directly contained within an annotation block . 
 * 
 - * @ param aAST the node to check if directly contained within an annotation block . 
 + * @ param node the node to check if directly contained within an annotation block . 
 * @ return a { @ code boolean } value 
 * / 
 - public static boolean isInAnnotationBlock ( DetailAST aAST ) { 
 + public static boolean isInAnnotationBlock ( DetailAST node ) { 
 boolean returnValue = false ; 
 
 / / Loop up looking for a containing interface block 
 - for ( DetailAST token = aAST . getParent ( ) ; 
 + for ( DetailAST token = node . getParent ( ) ; 
 token ! = null & & ! returnValue ; 
 token = token . getParent ( ) ) { 
 final int type = token . getType ( ) ; 
 @ @ - 155 , 25 + 155 , 25 @ @ public final class ScopeUtils { 
 * Returns whether a node is directly contained within an interface or 
 * annotation block . 
 * 
 - * @ param aAST the node to check if directly contained within an interface 
 + * @ param node the node to check if directly contained within an interface 
 * or annotation block . 
 * @ return a { @ code boolean } value 
 * / 
 - public static boolean isInInterfaceOrAnnotationBlock ( DetailAST aAST ) { 
 - return isInInterfaceBlock ( aAST ) | | isInAnnotationBlock ( aAST ) ; 
 + public static boolean isInInterfaceOrAnnotationBlock ( DetailAST node ) { 
 + return isInInterfaceBlock ( node ) | | isInAnnotationBlock ( node ) ; 
 } 
 
 / * * 
 * Returns whether a node is directly contained within an enum block . 
 * 
 - * @ param aAST the node to check if directly contained within an enum block . 
 + * @ param node the node to check if directly contained within an enum block . 
 * @ return a { @ code boolean } value 
 * / 
 - public static boolean isInEnumBlock ( DetailAST aAST ) { 
 + public static boolean isInEnumBlock ( DetailAST node ) { 
 boolean returnValue = false ; 
 
 / / Loop up looking for a containing interface block 
 - for ( DetailAST token = aAST . getParent ( ) ; 
 + for ( DetailAST token = node . getParent ( ) ; 
 token ! = null & & ! returnValue ; 
 token = token . getParent ( ) ) { 
 final int type = token . getType ( ) ; 
 @ @ - 195 , 14 + 195 , 14 @ @ public final class ScopeUtils { 
 * Returns whether the scope of a node is restricted to a code block . 
 * A code block is a method or constructor body , or a initializer block . 
 * 
 - * @ param aAST the node to check 
 + * @ param node the node to check 
 * @ return a { @ code boolean } value 
 * / 
 - public static boolean isInCodeBlock ( DetailAST aAST ) { 
 + public static boolean isInCodeBlock ( DetailAST node ) { 
 boolean returnValue = false ; 
 
 / / Loop up looking for a containing code block 
 - for ( DetailAST token = aAST . getParent ( ) ; 
 + for ( DetailAST token = node . getParent ( ) ; 
 token ! = null ; 
 token = token . getParent ( ) ) { 
 final int type = token . getType ( ) ; 
 @ @ - 221 , 12 + 221 , 12 @ @ public final class ScopeUtils { 
 / * * 
 * Returns whether a node is contained in the outer most type block . 
 * 
 - * @ param aAST the node to check 
 + * @ param node the node to check 
 * @ return a { @ code boolean } value 
 * / 
 - public static boolean isOuterMostType ( DetailAST aAST ) { 
 + public static boolean isOuterMostType ( DetailAST node ) { 
 boolean returnValue = true ; 
 - for ( DetailAST parent = aAST . getParent ( ) ; 
 + for ( DetailAST parent = node . getParent ( ) ; 
 parent ! = null ; 
 parent = parent . getParent ( ) ) { 
 if ( parent . getType ( ) = = TokenTypes . CLASS _ DEF 
 @ @ - 245 , 22 + 245 , 22 @ @ public final class ScopeUtils { 
 * Determines whether a node is a local variable definition . 
 * I . e . if it is declared in a code block , a for initializer , 
 * or a catch parameter . 
 - * @ param aAST the node to check . 
 + * @ param node the node to check . 
 * @ return whether aAST is a local variable definition . 
 * / 
 - public static boolean isLocalVariableDef ( DetailAST aAST ) { 
 + public static boolean isLocalVariableDef ( DetailAST node ) { 
 boolean localVariableDef = false ; 
 / / variable declaration ? 
 - if ( aAST . getType ( ) = = TokenTypes . VARIABLE _ DEF ) { 
 - final DetailAST parent = aAST . getParent ( ) ; 
 + if ( node . getType ( ) = = TokenTypes . VARIABLE _ DEF ) { 
 + final DetailAST parent = node . getParent ( ) ; 
 final int type = parent . getType ( ) ; 
 localVariableDef = type = = TokenTypes . SLIST 
 | | type = = TokenTypes . FOR _ INIT 
 | | type = = TokenTypes . FOR _ EACH _ CLAUSE ; 
 } 
 / / catch parameter ? 
 - if ( aAST . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { 
 - final DetailAST parent = aAST . getParent ( ) ; 
 + if ( node . getType ( ) = = TokenTypes . PARAMETER _ DEF ) { 
 + final DetailAST parent = node . getParent ( ) ; 
 localVariableDef = parent . getType ( ) = = TokenTypes . LITERAL _ CATCH ; 
 } 
 return localVariableDef ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 index 15361f1 . . 562c5d2 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 @ @ - 230 , 11 + 230 , 11 @ @ public class ImportControlCheckTest extends BaseCheckTestSupport { 
 * and caught in test ( it was caught and re - thrown twice after that ) 
 * Note : this is helper method with hard - coded structure of exception causes . It works 
 * fine for methods mentioned , you may need to adjust it if you try to use it for other needs 
 - * @ param ex Exception 
 + * @ param exception Exception 
 * @ return String message of original exception 
 * / 
 - private static String getInvocationTargetExceptionMessage ( CheckstyleException ex ) { 
 - return ( ( InvocationTargetException ) ex . getCause ( ) . getCause ( ) ) 
 + private static String getInvocationTargetExceptionMessage ( CheckstyleException exception ) { 
 + return ( ( InvocationTargetException ) exception . getCause ( ) . getCause ( ) ) 
 . getTargetException ( ) . getMessage ( ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 index b7fcbca . . d7d92ab 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 @ @ - 278 , 8 + 278 , 8 @ @ public class JavadocParseTreeTest { 
 compareTrees ( expectedTree , generatedTree ) ; 
 } 
 
 - private void compareTrees ( ParseTree t1 , ParseTree t2 ) { 
 - Assert . assertEquals ( t1 . toStringTree ( parser ) , t2 . toStringTree ( parser ) ) ; 
 + private void compareTrees ( ParseTree first , ParseTree second ) { 
 + Assert . assertEquals ( first . toStringTree ( parser ) , second . toStringTree ( parser ) ) ; 
 } 
 
 private static class FailOnErrorListener extends BaseErrorListener {
