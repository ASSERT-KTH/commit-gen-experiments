BLEU SCORE: 0.06285596338261261

TEST MSG: Issue # 2661 : Enforce AvoidNotShortCircuitOperatorsForBoolean of sevntu - checkstyle over Checkstyle source code
GENERATED MSG: Issue # 1566 : unused imports removed

TEST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index 4cb6aa4 . . 8f2f725 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 57 , 5 + 57 , 6 @ @ <nl> < module name = " IllegalCatchExtended " > <nl> < property name = " allowRethrow " value = " true " / > <nl> < / module > <nl> + < module name = " AvoidNotShortCircuitOperatorsForBoolean " / > <nl> < / module > <nl> < / module > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> index 6468779 . . 3f46102 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> @ @ - 255 , 8 + 255 , 7 @ @ public class RedundantModifierCheck <nl> if ( parent . getType ( ) = = TokenTypes . CLASS _ DEF ) { <nl> final DetailAST classModifiers = <nl> parent . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - checkFinal | = <nl> - classModifiers . branchContains ( TokenTypes . FINAL ) ; <nl> + checkFinal = checkFinal | | classModifiers . branchContains ( TokenTypes . FINAL ) ; <nl> break ; <nl> } <nl> if ( parent . getType ( ) = = TokenTypes . LITERAL _ NEW ) {
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java <nl> index 6b2679a . . ecd36be 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java <nl> @ @ - 98 , 24 + 98 , 21 @ @ public abstract class AbstractDeclarationCollector extends Check { <nl> DetailAST ast ) { <nl> final LexicalFrame frame = frameStack . peek ( ) ; <nl> switch ( ast . getType ( ) ) { <nl> - case TokenTypes . VARIABLE _ DEF : { <nl> + case TokenTypes . VARIABLE _ DEF : <nl> collectVariableDeclarations ( ast , frame ) ; <nl> break ; <nl> - } <nl> - case TokenTypes . PARAMETER _ DEF : { <nl> - final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; <nl> - frame . addName ( nameAST . getText ( ) ) ; <nl> + case TokenTypes . PARAMETER _ DEF : <nl> + final DetailAST parameterAST = ast . findFirstToken ( TokenTypes . IDENT ) ; <nl> + frame . addName ( parameterAST . getText ( ) ) ; <nl> break ; <nl> - } <nl> case TokenTypes . CLASS _ DEF : <nl> case TokenTypes . INTERFACE _ DEF : <nl> case TokenTypes . ENUM _ DEF : <nl> - case TokenTypes . ANNOTATION _ DEF : { <nl> - final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; <nl> - frame . addName ( nameAST . getText ( ) ) ; <nl> + case TokenTypes . ANNOTATION _ DEF : <nl> + final DetailAST classAST = ast . findFirstToken ( TokenTypes . IDENT ) ; <nl> + frame . addName ( classAST . getText ( ) ) ; <nl> frameStack . addFirst ( new ClassFrame ( frame ) ) ; <nl> break ; <nl> - } <nl> case TokenTypes . SLIST : <nl> frameStack . addFirst ( new BlockFrame ( frame ) ) ; <nl> break ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java <nl> index d8055e8 . . e5d6eb8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java <nl> @ @ - 130 , 10 + 130 , 14 @ @ public class UniquePropertiesCheck extends AbstractFileSetCheck { <nl> * / <nl> private final Multiset < String > duplicatedStrings = HashMultiset <nl> . create ( ) ; <nl> + / * * <nl> + * Lock for this class to synchronize on <nl> + * / <nl> + private final Object lock = new Object ( ) ; <nl> <nl> @ Override <nl> public Object put ( Object key , Object value ) { <nl> - synchronized ( this ) { <nl> + synchronized ( lock ) { <nl> final Object oldValue = super . put ( key , value ) ; <nl> if ( oldValue ! = null & & key instanceof String ) { <nl> final String keyString = ( String ) key ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> index 4002441 . . 56f492d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> @ @ - 260 , 21 + 260 , 15 @ @ public final class AnnotationUseStyleCheck extends Check { <nl> private void checkStyleType ( final DetailAST annotation ) { <nl> <nl> switch ( this . style ) { <nl> - <nl> - case COMPACT _ NO _ ARRAY : { <nl> + case COMPACT _ NO _ ARRAY : <nl> checkCompactNoArrayStyle ( annotation ) ; <nl> break ; <nl> - } <nl> - <nl> - case COMPACT : { <nl> + case COMPACT : <nl> checkCompactStyle ( annotation ) ; <nl> break ; <nl> - } <nl> - <nl> - case EXPANDED : { <nl> + case EXPANDED : <nl> checkExpandedStyle ( annotation ) ; <nl> break ; <nl> - } <nl> default : <nl> break ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> index 5db5fdf . . da0dd55 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> @ @ - 138 , 19 + 138 , 17 @ @ public class RequireThisCheck extends AbstractDeclarationCollector { <nl> case TokenTypes . ANNOTATION _ FIELD _ DEF : <nl> / / no need to check annotations content <nl> break ; <nl> - case TokenTypes . METHOD _ CALL : { <nl> + case TokenTypes . METHOD _ CALL : <nl> / / let ' s check method calls <nl> if ( checkMethods & & isClassMethod ( ast . getText ( ) ) ) { <nl> log ( ast , " require . this . method " , ast . getText ( ) ) ; <nl> } <nl> break ; <nl> - } <nl> - default : { <nl> + default : <nl> if ( checkFields ) { <nl> processField ( ast , parentType ) ; <nl> } <nl> break ; <nl> - } <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> index fc9fb1c . . abd7e26 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> @ @ - 54 , 8 + 54 , 8 @ @ public class CodeSelector { <nl> * Set a selection position from AST line and Column <nl> * / <nl> public void select ( ) { <nl> - int start = lines2position . get ( ast . getLineNo ( ) ) + ast . getColumnNo ( ) ; <nl> - int end = findLastPosition ( ast ) ; <nl> + final int start = lines2position . get ( ast . getLineNo ( ) ) + ast . getColumnNo ( ) ; <nl> + final int end = findLastPosition ( ast ) ; <nl> <nl> editor . setSelectedTextColor ( Color . blue ) ; <nl> editor . requestFocusInWindow ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> index 2c25c2d . . 2304248 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> @ @ - 150 , 7 + 150 , 7 @ @ public class JTreeTable extends JTable { <nl> public void actionPerformed ( ActionEvent e ) { <nl> final TreePath selected = tree . getSelectionPath ( ) ; <nl> <nl> - DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; <nl> + final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; <nl> new CodeSelector ( ast , editor , lines2position ) . select ( ) ; <nl> <nl> if ( tree . isExpanded ( selected ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> index 776e36b . . 392e5ce 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> @ @ - 48 , 7 + 48 , 7 @ @ public class Main { <nl> } <nl> frame . setDefaultCloseOperation ( JFrame . EXIT _ ON _ CLOSE ) ; <nl> <nl> - Runnable runner = new FrameShower ( frame ) ; <nl> + final Runnable runner = new FrameShower ( frame ) ; <nl> EventQueue . invokeLater ( runner ) ; <nl> } <nl> <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class Main { <nl> * @ param ast <nl> * / <nl> public static void displayAst ( DetailAST ast ) { <nl> - JFrame frame = new JFrame ( " CheckStyle " ) ; <nl> + final JFrame frame = new JFrame ( " CheckStyle " ) ; <nl> final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; <nl> frame . getContentPane ( ) . add ( panel ) ; <nl> panel . openAst ( ast , frame ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> index 96b866f . . 8a11856 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> @ @ - 113 , 7 + 113 , 7 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> <nl> @ Override <nl> public void actionPerformed ( ActionEvent e ) { <nl> - final JFileChooser fc = new JFileChooser ( lastDirectory ) ; <nl> + final JFileChooser fc = new JFileChooser ( lastDirectory ) ; <nl> final FileFilter filter = new JavaFileFilter ( ) ; <nl> fc . setFileFilter ( filter ) ; <nl> final Component parent = <nl> @ @ - 249 , 7 + 249 , 7 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> setLayout ( new BorderLayout ( ) ) ; <nl> <nl> parseTreeModel = new ParseTreeModel ( null ) ; <nl> - JTreeTable treeTable = new JTreeTable ( parseTreeModel ) ; <nl> + final JTreeTable treeTable = new JTreeTable ( parseTreeModel ) ; <nl> final JScrollPane sp = new JScrollPane ( treeTable ) ; <nl> this . add ( sp , BorderLayout . NORTH ) ; <nl>

TEST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index 4cb6aa4 . . 8f2f725 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 57 , 5 + 57 , 6 @ @ 
 < module name = " IllegalCatchExtended " > 
 < property name = " allowRethrow " value = " true " / > 
 < / module > 
 + < module name = " AvoidNotShortCircuitOperatorsForBoolean " / > 
 < / module > 
 < / module > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 index 6468779 . . 3f46102 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 @ @ - 255 , 8 + 255 , 7 @ @ public class RedundantModifierCheck 
 if ( parent . getType ( ) = = TokenTypes . CLASS _ DEF ) { 
 final DetailAST classModifiers = 
 parent . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - checkFinal | = 
 - classModifiers . branchContains ( TokenTypes . FINAL ) ; 
 + checkFinal = checkFinal | | classModifiers . branchContains ( TokenTypes . FINAL ) ; 
 break ; 
 } 
 if ( parent . getType ( ) = = TokenTypes . LITERAL _ NEW ) {

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java 
 index 6b2679a . . ecd36be 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java 
 @ @ - 98 , 24 + 98 , 21 @ @ public abstract class AbstractDeclarationCollector extends Check { 
 DetailAST ast ) { 
 final LexicalFrame frame = frameStack . peek ( ) ; 
 switch ( ast . getType ( ) ) { 
 - case TokenTypes . VARIABLE _ DEF : { 
 + case TokenTypes . VARIABLE _ DEF : 
 collectVariableDeclarations ( ast , frame ) ; 
 break ; 
 - } 
 - case TokenTypes . PARAMETER _ DEF : { 
 - final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; 
 - frame . addName ( nameAST . getText ( ) ) ; 
 + case TokenTypes . PARAMETER _ DEF : 
 + final DetailAST parameterAST = ast . findFirstToken ( TokenTypes . IDENT ) ; 
 + frame . addName ( parameterAST . getText ( ) ) ; 
 break ; 
 - } 
 case TokenTypes . CLASS _ DEF : 
 case TokenTypes . INTERFACE _ DEF : 
 case TokenTypes . ENUM _ DEF : 
 - case TokenTypes . ANNOTATION _ DEF : { 
 - final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; 
 - frame . addName ( nameAST . getText ( ) ) ; 
 + case TokenTypes . ANNOTATION _ DEF : 
 + final DetailAST classAST = ast . findFirstToken ( TokenTypes . IDENT ) ; 
 + frame . addName ( classAST . getText ( ) ) ; 
 frameStack . addFirst ( new ClassFrame ( frame ) ) ; 
 break ; 
 - } 
 case TokenTypes . SLIST : 
 frameStack . addFirst ( new BlockFrame ( frame ) ) ; 
 break ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java 
 index d8055e8 . . e5d6eb8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java 
 @ @ - 130 , 10 + 130 , 14 @ @ public class UniquePropertiesCheck extends AbstractFileSetCheck { 
 * / 
 private final Multiset < String > duplicatedStrings = HashMultiset 
 . create ( ) ; 
 + / * * 
 + * Lock for this class to synchronize on 
 + * / 
 + private final Object lock = new Object ( ) ; 
 
 @ Override 
 public Object put ( Object key , Object value ) { 
 - synchronized ( this ) { 
 + synchronized ( lock ) { 
 final Object oldValue = super . put ( key , value ) ; 
 if ( oldValue ! = null & & key instanceof String ) { 
 final String keyString = ( String ) key ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 index 4002441 . . 56f492d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 @ @ - 260 , 21 + 260 , 15 @ @ public final class AnnotationUseStyleCheck extends Check { 
 private void checkStyleType ( final DetailAST annotation ) { 
 
 switch ( this . style ) { 
 - 
 - case COMPACT _ NO _ ARRAY : { 
 + case COMPACT _ NO _ ARRAY : 
 checkCompactNoArrayStyle ( annotation ) ; 
 break ; 
 - } 
 - 
 - case COMPACT : { 
 + case COMPACT : 
 checkCompactStyle ( annotation ) ; 
 break ; 
 - } 
 - 
 - case EXPANDED : { 
 + case EXPANDED : 
 checkExpandedStyle ( annotation ) ; 
 break ; 
 - } 
 default : 
 break ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 index 5db5fdf . . da0dd55 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 @ @ - 138 , 19 + 138 , 17 @ @ public class RequireThisCheck extends AbstractDeclarationCollector { 
 case TokenTypes . ANNOTATION _ FIELD _ DEF : 
 / / no need to check annotations content 
 break ; 
 - case TokenTypes . METHOD _ CALL : { 
 + case TokenTypes . METHOD _ CALL : 
 / / let ' s check method calls 
 if ( checkMethods & & isClassMethod ( ast . getText ( ) ) ) { 
 log ( ast , " require . this . method " , ast . getText ( ) ) ; 
 } 
 break ; 
 - } 
 - default : { 
 + default : 
 if ( checkFields ) { 
 processField ( ast , parentType ) ; 
 } 
 break ; 
 - } 
 } 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 index fc9fb1c . . abd7e26 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 @ @ - 54 , 8 + 54 , 8 @ @ public class CodeSelector { 
 * Set a selection position from AST line and Column 
 * / 
 public void select ( ) { 
 - int start = lines2position . get ( ast . getLineNo ( ) ) + ast . getColumnNo ( ) ; 
 - int end = findLastPosition ( ast ) ; 
 + final int start = lines2position . get ( ast . getLineNo ( ) ) + ast . getColumnNo ( ) ; 
 + final int end = findLastPosition ( ast ) ; 
 
 editor . setSelectedTextColor ( Color . blue ) ; 
 editor . requestFocusInWindow ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 index 2c25c2d . . 2304248 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 @ @ - 150 , 7 + 150 , 7 @ @ public class JTreeTable extends JTable { 
 public void actionPerformed ( ActionEvent e ) { 
 final TreePath selected = tree . getSelectionPath ( ) ; 
 
 - DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; 
 + final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; 
 new CodeSelector ( ast , editor , lines2position ) . select ( ) ; 
 
 if ( tree . isExpanded ( selected ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 index 776e36b . . 392e5ce 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 @ @ - 48 , 7 + 48 , 7 @ @ public class Main { 
 } 
 frame . setDefaultCloseOperation ( JFrame . EXIT _ ON _ CLOSE ) ; 
 
 - Runnable runner = new FrameShower ( frame ) ; 
 + final Runnable runner = new FrameShower ( frame ) ; 
 EventQueue . invokeLater ( runner ) ; 
 } 
 
 @ @ - 57 , 7 + 57 , 7 @ @ public class Main { 
 * @ param ast 
 * / 
 public static void displayAst ( DetailAST ast ) { 
 - JFrame frame = new JFrame ( " CheckStyle " ) ; 
 + final JFrame frame = new JFrame ( " CheckStyle " ) ; 
 final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; 
 frame . getContentPane ( ) . add ( panel ) ; 
 panel . openAst ( ast , frame ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 index 96b866f . . 8a11856 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 @ @ - 113 , 7 + 113 , 7 @ @ public class ParseTreeInfoPanel extends JPanel { 
 
 @ Override 
 public void actionPerformed ( ActionEvent e ) { 
 - final JFileChooser fc = new JFileChooser ( lastDirectory ) ; 
 + final JFileChooser fc = new JFileChooser ( lastDirectory ) ; 
 final FileFilter filter = new JavaFileFilter ( ) ; 
 fc . setFileFilter ( filter ) ; 
 final Component parent = 
 @ @ - 249 , 7 + 249 , 7 @ @ public class ParseTreeInfoPanel extends JPanel { 
 setLayout ( new BorderLayout ( ) ) ; 
 
 parseTreeModel = new ParseTreeModel ( null ) ; 
 - JTreeTable treeTable = new JTreeTable ( parseTreeModel ) ; 
 + final JTreeTable treeTable = new JTreeTable ( parseTreeModel ) ; 
 final JScrollPane sp = new JScrollPane ( treeTable ) ; 
 this . add ( sp , BorderLayout . NORTH ) ; 

