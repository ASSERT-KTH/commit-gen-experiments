BLEU SCORE: 0.08208611846457008

TEST MSG: Issue # 3086 : added debug option
GENERATED MSG: Issue # 2638 : Print parse tree from CLI to terminal

TEST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 347590e . . bf48f87 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 145 , 7 + 145 , 7 @ @ <nl> <nl> < ! - - Suppressions from PMD configuration - - > <nl> < ! - - validateCli is not reasonable to split as encapsulation of logic will be damaged - - > <nl> - < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 222 " / > <nl> + < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 212 " / > <nl> < ! - - JavadocMethodCheck , JavadocStyleCheck , JavadocUtils . getJavadocTags ( ) - deprecated - - > <nl> < suppress checks = " CyclomaticComplexity " files = " JavadocMethodCheck \ . java " / > <nl> < suppress checks = " CyclomaticComplexity " files = " JavadocStyleCheck \ . java " / > <nl> @ @ - 166 , 7 + 166 , 6 @ @ <nl> lines = " 105 , 143 , 174 " / > <nl> <nl> < ! - - Not reasonable to split as encapsulation of logic will be damaged . - - > <nl> - < suppress checks = " ExecutableStatementCount " files = " Main \ . java " lines = " 114 " / > <nl> - < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 114 " / > <nl> - < suppress checks = " JavaNCSS " files = " Main \ . java " lines = " 114 " / > <nl> + < suppress checks = " ExecutableStatementCount " files = " Main \ . java " lines = " 128 " / > <nl> + < suppress checks = " JavaNCSS " files = " Main \ . java " lines = " 128 " / > <nl> < / suppressions > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index e54750c . . dfd24e5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 28 , 6 + 28 , 11 @ @ import java . io . OutputStream ; <nl> import java . util . ArrayList ; <nl> import java . util . List ; <nl> import java . util . Properties ; <nl> + import java . util . logging . ConsoleHandler ; <nl> + import java . util . logging . Filter ; <nl> + import java . util . logging . Level ; <nl> + import java . util . logging . LogRecord ; <nl> + import java . util . logging . Logger ; <nl> <nl> import org . apache . commons . cli . CommandLine ; <nl> import org . apache . commons . cli . CommandLineParser ; <nl> @ @ - 35 , 6 + 40 , 8 @ @ import org . apache . commons . cli . DefaultParser ; <nl> import org . apache . commons . cli . HelpFormatter ; <nl> import org . apache . commons . cli . Options ; <nl> import org . apache . commons . cli . ParseException ; <nl> + import org . apache . commons . logging . Log ; <nl> + import org . apache . commons . logging . LogFactory ; <nl> <nl> import com . google . common . collect . Lists ; <nl> import com . google . common . io . Closeables ; <nl> @ @ - 49 , 6 + 56 , 9 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * <nl> * * / <nl> public final class Main { <nl> + / * * Logger for Main . * / <nl> + private static final Log LOG = LogFactory . getLog ( Main . class ) ; <nl> + <nl> / * * Width of CLI help option . * / <nl> private static final int HELP _ WIDTH = 100 ; <nl> <nl> @ @ - 94 , 6 + 104 , 12 @ @ public final class Main { <nl> / * * Name for the option ' - - treeWithJavadoc ' . * / <nl> private static final String OPTION _ TREE _ JAVADOC _ NAME = " treeWithJavadoc " ; <nl> <nl> + / * * Name for the option ' - d ' . * / <nl> + private static final String OPTION _ D _ NAME = " d " ; <nl> + <nl> + / * * Name for the option ' - - debug ' . * / <nl> + private static final String OPTION _ DEBUG _ NAME = " debug " ; <nl> + <nl> / * * Name for ' xml ' format . * / <nl> private static final String XML _ FORMAT _ NAME = " xml " ; <nl> <nl> @ @ - 142 , 34 + 158 , 8 @ @ public final class Main { <nl> } <nl> } <nl> else { <nl> - / / create config helper object <nl> - final CliOptions config = convertCliToPojo ( commandLine , filesToProcess ) ; <nl> - if ( commandLine . hasOption ( OPTION _ T _ NAME ) ) { <nl> - / / print AST <nl> - final File file = config . files . get ( 0 ) ; <nl> - final String stringAst = AstTreeStringPrinter . printFileAst ( file , false ) ; <nl> - System . out . print ( stringAst ) ; <nl> - } <nl> - else if ( commandLine . hasOption ( OPTION _ CAPITAL _ T _ NAME ) ) { <nl> - final File file = config . files . get ( 0 ) ; <nl> - final String stringAst = AstTreeStringPrinter . printFileAst ( file , true ) ; <nl> - System . out . print ( stringAst ) ; <nl> - } <nl> - else if ( commandLine . hasOption ( OPTION _ J _ NAME ) ) { <nl> - final File file = config . files . get ( 0 ) ; <nl> - final String stringAst = DetailNodeTreeStringPrinter . printFileAst ( file ) ; <nl> - System . out . print ( stringAst ) ; <nl> - } <nl> - else if ( commandLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { <nl> - final File file = config . files . get ( 0 ) ; <nl> - final String stringAst = AstTreeStringPrinter . printJavaAndJavadocTree ( file ) ; <nl> - System . out . print ( stringAst ) ; <nl> - } <nl> - else { <nl> - / / run Checker <nl> - errorCounter = runCheckstyle ( config ) ; <nl> - exitStatus = errorCounter ; <nl> - } <nl> + errorCounter = runCli ( commandLine , filesToProcess ) ; <nl> + exitStatus = errorCounter ; <nl> } <nl> } <nl> } <nl> @ @ - 279 , 6 + 269 , 71 @ @ public final class Main { <nl> } <nl> <nl> / * * <nl> + * Do execution of CheckStyle based on Command line options . <nl> + * @ param commandLine command line object <nl> + * @ param filesToProcess List of files to process found from the command line . <nl> + * @ return number of violations <nl> + * @ throws IOException if a file could not be read . <nl> + * @ throws CheckstyleException if something happens processing the files . <nl> + * / <nl> + private static int runCli ( CommandLine commandLine , List < File > filesToProcess ) <nl> + throws IOException , CheckstyleException { <nl> + int result = 0 ; <nl> + <nl> + / / create config helper object <nl> + final CliOptions config = convertCliToPojo ( commandLine , filesToProcess ) ; <nl> + if ( commandLine . hasOption ( OPTION _ T _ NAME ) ) { <nl> + / / print AST <nl> + final File file = config . files . get ( 0 ) ; <nl> + final String stringAst = AstTreeStringPrinter . printFileAst ( file , false ) ; <nl> + System . out . print ( stringAst ) ; <nl> + } <nl> + else if ( commandLine . hasOption ( OPTION _ CAPITAL _ T _ NAME ) ) { <nl> + final File file = config . files . get ( 0 ) ; <nl> + final String stringAst = AstTreeStringPrinter . printFileAst ( file , true ) ; <nl> + System . out . print ( stringAst ) ; <nl> + } <nl> + else if ( commandLine . hasOption ( OPTION _ J _ NAME ) ) { <nl> + final File file = config . files . get ( 0 ) ; <nl> + final String stringAst = DetailNodeTreeStringPrinter . printFileAst ( file ) ; <nl> + System . out . print ( stringAst ) ; <nl> + } <nl> + else if ( commandLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { <nl> + final File file = config . files . get ( 0 ) ; <nl> + final String stringAst = AstTreeStringPrinter . printJavaAndJavadocTree ( file ) ; <nl> + System . out . print ( stringAst ) ; <nl> + } <nl> + else { <nl> + if ( commandLine . hasOption ( OPTION _ D _ NAME ) ) { <nl> + final Logger parentLogger = Logger . getLogger ( Main . class . getName ( ) ) . getParent ( ) ; <nl> + final ConsoleHandler handler = new ConsoleHandler ( ) ; <nl> + <nl> + parentLogger . setLevel ( Level . FINEST ) ; <nl> + handler . setLevel ( Level . FINEST ) ; <nl> + parentLogger . addHandler ( handler ) ; <nl> + handler . setFilter ( new Filter ( ) { <nl> + private final String packageName = Main . class . getPackage ( ) . getName ( ) ; <nl> + <nl> + @ Override <nl> + public boolean isLoggable ( LogRecord record ) { <nl> + return record . getLoggerName ( ) . startsWith ( packageName ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + if ( LOG . isDebugEnabled ( ) ) { <nl> + LOG . debug ( " Checkstyle debug logging enabled " ) ; <nl> + LOG . debug ( " Running Checkstyle with version : " <nl> + + Main . class . getPackage ( ) . getImplementationVersion ( ) ) ; <nl> + } <nl> + <nl> + / / run Checker <nl> + result = runCheckstyle ( config ) ; <nl> + } <nl> + <nl> + return result ; <nl> + } <nl> + <nl> + / * * <nl> * Util method to convert CommandLine type to POJO object . <nl> * @ param cmdLine command line object <nl> * @ param filesToProcess List of files to process found from the command line . <nl> @ @ - 495 , 6 + 550 , 8 @ @ public final class Main { <nl> " Print Parse tree of the Javadoc comment " ) ; <nl> options . addOption ( OPTION _ CAPITAL _ J _ NAME , OPTION _ TREE _ JAVADOC _ NAME , false , <nl> " Print full Abstract Syntax Tree of the file " ) ; <nl> + options . addOption ( OPTION _ D _ NAME , OPTION _ DEBUG _ NAME , false , <nl> + " Print all debug logging of CheckStyle utility " ) ; <nl> return options ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index fb6bf6f . . 8b8dc87 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertNotEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> import static org . powermock . api . mockito . PowerMockito . mock ; <nl> @ @ - 54 , 6 + 55 , 7 @ @ public class MainTest { <nl> " usage : java com . puppycrawl . tools . checkstyle . Main [ options ] - c < config . xml > " <nl> + " file . . . % n " <nl> + " - c < arg > Sets the check configuration file to use . % n " <nl> + + " - d , - - debug Print all debug logging of CheckStyle utility % n " <nl> + " - f < arg > Sets the output format . ( plain | xml ) . Defaults to " <nl> + " plain % n " <nl> + " - j , - - javadocTree Print Parse tree of the Javadoc comment % n " <nl> @ @ - 836 , 4 + 838 , 15 @ @ public class MainTest { <nl> <nl> Main . main ( " - o " , file . getCanonicalPath ( ) , " - t " , getPath ( " checks / metrics " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testDebugOption ( ) throws Exception { <nl> + exit . checkAssertionAfterwards ( new Assertion ( ) { <nl> + @ Override <nl> + public void checkAssertion ( ) { <nl> + assertNotEquals ( " " , systemErr . getLog ( ) ) ; <nl> + } <nl> + } ) ; <nl> + Main . main ( " - c " , " / google _ checks . xml " , getPath ( " InputMain . java " ) , " - d " ) ; <nl> + } <nl> } <nl> diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm <nl> index 1c5dd8d . . 0f15269 100644 <nl> - - - a / src / xdocs / cmdline . xml . vm <nl> + + + b / src / xdocs / cmdline . xml . vm <nl> @ @ - 100 , 6 + 100 , 9 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ <nl> cannot be used other options and requires exactly one file to run on to be specified . <nl> < / li > <nl> < li > <nl> + < code > - d , - - debug < / code > - Print all debug logging of CheckStyle utility . <nl> + < / li > <nl> + < li > <nl> < code > - v < / code > - print product version and exit . Any other option is ignored . <nl> < / li > <nl> < / ul >
NEAREST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index df6d345 . . f3e5af3 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 89 , 9 + 89 , 8 @ @ <nl> < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ " / > <nl> < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> <nl> - < ! - - Classes FileDrop , Main , ParseTreeInfoPanel from gui - package contain Magic Numbers . <nl> - The Check generates too many violations , fixing them will make code unmanageable . - - > <nl> - < suppress checks = " MagicNumber " files = " . * [ \ \ / ] checkstyle [ \ \ / ] gui [ \ \ / ] " / > <nl> + < ! - - The Check generates too many violations , fixing them will make code unmanageable . - - > <nl> + < suppress checks = " MagicNumber " files = " ( ParseTreeTableModel | MainFrame ) \ . java " / > <nl> <nl> < ! - - Methods that build fake AST are very long - - > <nl> < suppress checks = " MethodLength " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > <nl> @ @ - 122 , 7 + 121 , 7 @ @ <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | AbstractJavadocCheck ) \ . java " / > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest | BaseCheckTestSupport | XDocsPagesTest ) \ . java " / > <nl> < ! - - a lot of GUI elements is OK - - > <nl> - < suppress checks = " ClassDataAbstractionCoupling " files = " ParseTreeInfoPanel \ . java " / > <nl> + < suppress checks = " ClassDataAbstractionCoupling " files = " ( JTreeTable | MainFrame ) \ . java " / > <nl> <nl> < ! - - Should be fixed after moving https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / blob / master / sevntu - checks / src / main / java / com / github / sevntu / checkstyle / checks / coding / ReturnCountExtendedCheck . java into the main repo - - > <nl> < suppress checks = " ReturnCount " files = " ( ClassResolver | ConfigurationLoader | IndentationCheckTest ) \ . java " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java <nl> new file mode 100644 <nl> index 0000000 . . a85c003 <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java <nl> @ @ - 0 , 0 + 1 , 113 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . gui ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + <nl> + import antlr . ANTLRException ; <nl> + <nl> + import com . google . common . collect . ImmutableList ; <nl> + import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> + import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> + <nl> + / * * <nl> + * Model for checkstyle frame . <nl> + * @ author Vladislav Lisetskiy <nl> + * / <nl> + public class CheckstyleFrameModel { <nl> + <nl> + / * * Lines to position map . * / <nl> + private final List < Integer > linesToPosition = new ArrayList < > ( ) ; <nl> + <nl> + / * * The file which is being parsed . * / <nl> + private File currentFile ; <nl> + <nl> + / * * <nl> + * Parse a file and return the parse tree . <nl> + * @ param file the file to parse . <nl> + * @ return the root node of the parse tree . <nl> + * @ throws IOException if the file could not be read . <nl> + * @ throws ANTLRException if the file is not a Java source . <nl> + * / <nl> + public DetailAST parseFile ( File file ) throws IOException , ANTLRException { <nl> + currentFile = file ; <nl> + final FileText text = getFileText ( file ) ; <nl> + final FileContents contents = new FileContents ( text ) ; <nl> + return TreeWalker . parse ( contents ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get FileText from a file . <nl> + * @ param file the file to get the FileText from . <nl> + * @ return the FileText . <nl> + * @ throws IOException if the file could not be read . <nl> + * / <nl> + public FileText getFileText ( File file ) throws IOException { <nl> + return new FileText ( file . getAbsoluteFile ( ) , <nl> + System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get the directory of the last loaded file . <nl> + * @ return directory of the last loaded file . <nl> + * / <nl> + public File getLastDirectory ( ) { <nl> + File lastDirectory = null ; <nl> + if ( currentFile ! = null ) { <nl> + lastDirectory = new File ( currentFile . getParent ( ) ) ; <nl> + } <nl> + return lastDirectory ; <nl> + } <nl> + <nl> + / * * <nl> + * Get current file . <nl> + * @ return current file . <nl> + * / <nl> + public File getCurrentFile ( ) { <nl> + return currentFile ; <nl> + } <nl> + <nl> + / * * <nl> + * Get lines to position map . <nl> + * @ return lines to position map . <nl> + * / <nl> + public List < Integer > getLinesToPosition ( ) { <nl> + return ImmutableList . copyOf ( linesToPosition ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Add a new value into lines to position map . <nl> + * @ param value Value to be added into position map . <nl> + * / <nl> + public void addLineToPosition ( int value ) { <nl> + linesToPosition . add ( value ) ; <nl> + } <nl> + <nl> + / * * Clear lines to position map . * / <nl> + public void clearLinesToPosition ( ) { <nl> + linesToPosition . clear ( ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> index 7d3d042 . . 6608278 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> @ @ - 72 , 7 + 72 , 6 @ @ public class CodeSelector { <nl> editor . requestFocusInWindow ( ) ; <nl> editor . setCaretPosition ( start ) ; <nl> editor . moveCaretPosition ( end ) ; <nl> - editor . transferFocusBackward ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> index b6a62c7 . . 74d7263 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import java . awt . Component ; <nl> import java . awt . Dimension ; <nl> import java . awt . FontMetrics ; <nl> import java . awt . event . ActionEvent ; <nl> + import java . awt . event . MouseAdapter ; <nl> import java . awt . event . MouseEvent ; <nl> import java . util . EventObject ; <nl> import java . util . List ; <nl> @ @ - 103 , 25 + 104 , 50 @ @ public class JTreeTable extends JTable { <nl> final Action expand = new AbstractAction ( ) { <nl> private static final long serialVersionUID = - 5859674518660156121L ; <nl> <nl> - @ Override <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - final TreePath selected = tree . getSelectionPath ( ) ; <nl> - final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; <nl> - new CodeSelector ( ast , editor , linePositionMap ) . select ( ) ; <nl> - <nl> - if ( tree . isExpanded ( selected ) ) { <nl> - tree . collapsePath ( selected ) ; <nl> - } <nl> - else { <nl> - tree . expandPath ( selected ) ; <nl> - } <nl> - tree . setSelectionPath ( selected ) ; <nl> - } <nl> - } ; <nl> + @ Override <nl> + public void actionPerformed ( ActionEvent event ) { <nl> + doExpandByEnter ( ) ; <nl> + } <nl> + } ; <nl> final KeyStroke stroke = KeyStroke . getKeyStroke ( " ENTER " ) ; <nl> final String command = " expand / collapse " ; <nl> getInputMap ( ) . put ( stroke , command ) ; <nl> getActionMap ( ) . put ( command , expand ) ; <nl> + <nl> + addMouseListener ( new MouseAdapter ( ) { <nl> + @ Override <nl> + public void mouseClicked ( MouseEvent event ) { <nl> + if ( event . getClickCount ( ) = = 2 ) { <nl> + makeCodeSelection ( ) ; <nl> + } <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Do expansion of a tree node after pressing ENTER . <nl> + * / <nl> + private void doExpandByEnter ( ) { <nl> + final TreePath selected = makeCodeSelection ( ) ; <nl> + <nl> + if ( tree . isExpanded ( selected ) ) { <nl> + tree . collapsePath ( selected ) ; <nl> + } <nl> + else { <nl> + tree . expandPath ( selected ) ; <nl> + } <nl> + tree . setSelectionPath ( selected ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Make selection of code in a text area . <nl> + * @ return selected TreePath . <nl> + * / <nl> + private TreePath makeCodeSelection ( ) { <nl> + final TreePath selected = tree . getSelectionPath ( ) ; <nl> + final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; <nl> + new CodeSelector ( ast , editor , linePositionMap ) . select ( ) ; <nl> + return selected ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> index 7aa2ffd . . ebe29af 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> @ @ - 19 , 14 + 19 , 11 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . gui ; <nl> <nl> - import java . awt . EventQueue ; <nl> import java . io . File ; <nl> <nl> - import javax . swing . JFrame ; <nl> + import javax . swing . SwingUtilities ; <nl> import javax . swing . WindowConstants ; <nl> <nl> - import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - <nl> / * * <nl> * Entry point for starting the checkstyle GUI . <nl> * <nl> @ @ - 34 , 12 + 31 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> * / <nl> public final class Main { <nl> <nl> - / * * Frame ' s name . * / <nl> - private static final String FRAME _ NAME = " CheckStyle " ; <nl> - <nl> - / * * Main frame . * / <nl> - private static JFrame frame ; <nl> - <nl> / * * Hidden constructor of the current utility class . * / <nl> private Main ( ) { <nl> / / no code <nl> @ @ - 49 , 64 + 40 , 20 @ @ public final class Main { <nl> * Entry point . <nl> * @ param args the command line arguments . <nl> * / <nl> - public static void main ( String . . . args ) { <nl> - frame = new JFrame ( FRAME _ NAME ) ; <nl> - final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; <nl> - frame . getContentPane ( ) . add ( panel ) ; <nl> - if ( args . length > = 1 ) { <nl> - final File file = new File ( args [ 0 ] ) ; <nl> - panel . openFile ( file , frame ) ; <nl> - } <nl> - frame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; <nl> - <nl> - final Runnable runner = new FrameShower ( frame ) ; <nl> - EventQueue . invokeLater ( runner ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Method is used for testing in the past . <nl> - * @ param ast tree to display <nl> - * / <nl> - public static void displayAst ( DetailAST ast ) { <nl> - final JFrame testFrame = new JFrame ( FRAME _ NAME ) ; <nl> - final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; <nl> - testFrame . getContentPane ( ) . add ( panel ) ; <nl> - panel . openAst ( ast ) ; <nl> - testFrame . setSize ( 1500 , 800 ) ; <nl> - testFrame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; <nl> - testFrame . setVisible ( true ) ; <nl> - } <nl> - <nl> - / * * <nl> - * @ return Main GUI ' s frame . <nl> - * / <nl> - static JFrame getFrame ( ) { <nl> - return frame ; <nl> - } <nl> - <nl> - / * * <nl> - * Http : / / findbugs . sourceforge . net / bugDescriptions . html # SW _ SWING _ METHODS _ INVOKED _ IN _ SWING _ THREAD <nl> - * / <nl> - private static class FrameShower implements Runnable { <nl> - / * * <nl> - * Frame . <nl> - * / <nl> - private final JFrame frame ; <nl> - <nl> - / * * <nl> - * @ param frame JFrame component . <nl> - * / <nl> - FrameShower ( JFrame frame ) { <nl> - this . frame = frame ; <nl> - } <nl> - <nl> - / * * <nl> - * Display a frame . <nl> - * / <nl> - @ Override <nl> - public void run ( ) { <nl> - frame . pack ( ) ; <nl> - frame . setVisible ( true ) ; <nl> - } <nl> + public static void main ( final String . . . args ) { <nl> + SwingUtilities . invokeLater ( new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) { <nl> + final MainFrame mainFrame = new MainFrame ( ) ; <nl> + <nl> + if ( args . length > 0 ) { <nl> + final File sourceFile = new File ( args [ 0 ] ) ; <nl> + mainFrame . openFile ( sourceFile ) ; <nl> + } <nl> + mainFrame . setTitle ( " Checkstyle " ) ; <nl> + mainFrame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; <nl> + mainFrame . setVisible ( true ) ; <nl> + } <nl> + } ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java <nl> new file mode 100644 <nl> index 0000000 . . fc8e67e <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java <nl> @ @ - 0 , 0 + 1 , 199 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . gui ; <nl> + <nl> + import java . awt . BorderLayout ; <nl> + import java . awt . GridLayout ; <nl> + import java . awt . event . ActionEvent ; <nl> + import java . awt . event . KeyEvent ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + <nl> + import javax . swing . AbstractAction ; <nl> + import javax . swing . JButton ; <nl> + import javax . swing . JFileChooser ; <nl> + import javax . swing . JFrame ; <nl> + import javax . swing . JOptionPane ; <nl> + import javax . swing . JPanel ; <nl> + import javax . swing . JScrollPane ; <nl> + import javax . swing . JSplitPane ; <nl> + import javax . swing . JTextArea ; <nl> + import javax . swing . filechooser . FileFilter ; <nl> + <nl> + import antlr . ANTLRException ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + <nl> + / * * <nl> + * Displays information about a parse tree . <nl> + * The user can change the file that is parsed and displayed <nl> + * using a JFileChooser . <nl> + * <nl> + * @ author Lars K ü hne <nl> + * @ author Vladislav Lisetskiy <nl> + * / <nl> + public class MainFrame extends JFrame { <nl> + <nl> + private static final long serialVersionUID = 7970053543351871890L ; <nl> + / * * Checkstyle frame model . * / <nl> + private final transient CheckstyleFrameModel model = new CheckstyleFrameModel ( ) ; <nl> + / * * Reload action . * / <nl> + private final ReloadAction reloadAction = new ReloadAction ( ) ; <nl> + / * * Parse tree model . * / <nl> + private transient ParseTreeTableModel parseTreeTableModel ; <nl> + / * * Code text area . * / <nl> + private JTextArea textArea ; <nl> + / * * Tree table . * / <nl> + private JTreeTable treeTable ; <nl> + <nl> + / * * Create a new MainFrame . * / <nl> + public MainFrame ( ) { <nl> + createContent ( ) ; <nl> + } <nl> + <nl> + / * * Create content of this MainFrame . * / <nl> + private void createContent ( ) { <nl> + setLayout ( new BorderLayout ( ) ) ; <nl> + <nl> + textArea = new JTextArea ( 20 , 15 ) ; <nl> + textArea . setEditable ( false ) ; <nl> + final JScrollPane textAreaScrollPane = new JScrollPane ( textArea ) ; <nl> + <nl> + parseTreeTableModel = new ParseTreeTableModel ( null ) ; <nl> + treeTable = new JTreeTable ( parseTreeTableModel ) ; <nl> + treeTable . setEditor ( textArea ) ; <nl> + treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; <nl> + final JScrollPane treeTableScrollPane = new JScrollPane ( treeTable ) ; <nl> + <nl> + final JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL _ SPLIT , treeTableScrollPane , <nl> + textAreaScrollPane ) ; <nl> + add ( splitPane , BorderLayout . CENTER ) ; <nl> + splitPane . setResizeWeight ( 0 . 7 ) ; <nl> + <nl> + add ( createButtonsPanel ( ) , BorderLayout . PAGE _ END ) ; <nl> + <nl> + pack ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Create buttons panel . <nl> + * @ return buttons panel . <nl> + * / <nl> + private JPanel createButtonsPanel ( ) { <nl> + final JButton openFileButton = new JButton ( new FileSelectionAction ( ) ) ; <nl> + openFileButton . setMnemonic ( KeyEvent . VK _ S ) ; <nl> + openFileButton . setText ( " Open File " ) ; <nl> + <nl> + reloadAction . setEnabled ( false ) ; <nl> + final JButton reloadFileButton = new JButton ( reloadAction ) ; <nl> + reloadFileButton . setMnemonic ( KeyEvent . VK _ R ) ; <nl> + reloadFileButton . setText ( " Reload File " ) ; <nl> + <nl> + final JPanel buttonPanel = new JPanel ( ) ; <nl> + buttonPanel . setLayout ( new GridLayout ( 1 , 2 ) ) ; <nl> + buttonPanel . add ( openFileButton ) ; <nl> + buttonPanel . add ( reloadFileButton ) ; <nl> + <nl> + return buttonPanel ; <nl> + } <nl> + <nl> + / * * <nl> + * Open file and load it . <nl> + * @ param sourceFile the file to open . <nl> + * / <nl> + public void openFile ( File sourceFile ) { <nl> + if ( sourceFile ! = null ) { <nl> + try { <nl> + setTitle ( " Checkstyle : " + sourceFile . getName ( ) ) ; <nl> + final DetailAST parseTree = model . parseFile ( sourceFile ) ; <nl> + parseTreeTableModel . setParseTree ( parseTree ) ; <nl> + reloadAction . setEnabled ( true ) ; <nl> + <nl> + final String [ ] sourceLines = model . getFileText ( sourceFile ) . toLinesArray ( ) ; <nl> + <nl> + / / clear for each new file <nl> + model . clearLinesToPosition ( ) ; <nl> + / / starts line counting at 1 <nl> + model . addLineToPosition ( 0 ) ; <nl> + <nl> + / / clean the text area before inserting the lines of the new file <nl> + textArea . setText ( " " ) ; <nl> + <nl> + / / insert the contents of the file to the text area <nl> + for ( final String element : sourceLines ) { <nl> + model . addLineToPosition ( textArea . getText ( ) . length ( ) ) ; <nl> + textArea . append ( element + System . lineSeparator ( ) ) ; <nl> + } <nl> + <nl> + treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; <nl> + } <nl> + catch ( final IOException | ANTLRException ex ) { <nl> + JOptionPane . showMessageDialog ( this , <nl> + " Could not parse " + sourceFile + " : " + ex . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Handler for file selection action events . <nl> + * / <nl> + private class FileSelectionAction extends AbstractAction { <nl> + private static final long serialVersionUID = 1762396148873280589L ; <nl> + <nl> + @ Override <nl> + public void actionPerformed ( ActionEvent event ) { <nl> + final JFileChooser fileChooser = new JFileChooser ( model . getLastDirectory ( ) ) ; <nl> + final FileFilter filter = new JavaFileFilter ( ) ; <nl> + fileChooser . setFileFilter ( filter ) ; <nl> + <nl> + final int returnCode = fileChooser . showOpenDialog ( MainFrame . this ) ; <nl> + if ( returnCode = = JFileChooser . APPROVE _ OPTION ) { <nl> + final File file = fileChooser . getSelectedFile ( ) ; <nl> + openFile ( file ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Handler for reload action events . <nl> + * / <nl> + private class ReloadAction extends AbstractAction { <nl> + private static final long serialVersionUID = - 890320994114628011L ; <nl> + <nl> + @ Override <nl> + public void actionPerformed ( ActionEvent event ) { <nl> + openFile ( model . getCurrentFile ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Filter for Java files . <nl> + * / <nl> + private static class JavaFileFilter extends FileFilter { <nl> + @ Override <nl> + public boolean accept ( File file ) { <nl> + return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getDescription ( ) { <nl> + return " Java Source File " ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> deleted file mode 100644 <nl> index bd0df08 . . 0000000 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> + + + / dev / null <nl> @ @ - 1 , 321 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> - / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> - / / <nl> - / / This library is free software ; you can redistribute it and / or <nl> - / / modify it under the terms of the GNU Lesser General Public <nl> - / / License as published by the Free Software Foundation ; either <nl> - / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> - / / <nl> - / / This library is distributed in the hope that it will be useful , <nl> - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - / / Lesser General Public License for more details . <nl> - / / <nl> - / / You should have received a copy of the GNU Lesser General Public <nl> - / / License along with this library ; if not , write to the Free Software <nl> - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . gui ; <nl> - <nl> - import java . awt . BorderLayout ; <nl> - import java . awt . Component ; <nl> - import java . awt . GridLayout ; <nl> - import java . awt . event . ActionEvent ; <nl> - import java . awt . event . KeyEvent ; <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - <nl> - import javax . swing . AbstractAction ; <nl> - import javax . swing . Action ; <nl> - import javax . swing . JButton ; <nl> - import javax . swing . JFileChooser ; <nl> - import javax . swing . JOptionPane ; <nl> - import javax . swing . JPanel ; <nl> - import javax . swing . JScrollPane ; <nl> - import javax . swing . JSplitPane ; <nl> - import javax . swing . JTextArea ; <nl> - import javax . swing . SwingUtilities ; <nl> - import javax . swing . filechooser . FileFilter ; <nl> - <nl> - import antlr . ANTLRException ; <nl> - <nl> - import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> - import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> - import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> - <nl> - / * * <nl> - * Displays information about a parse tree . <nl> - * The user can change the file that is parsed and displayed <nl> - * through a JFileChooser . <nl> - * <nl> - * @ author Lars K ü hne <nl> - * / <nl> - public class ParseTreeInfoPanel extends JPanel { <nl> - private static final long serialVersionUID = - 4243405131202059043L ; <nl> - <nl> - / * * Parse tree model . * / <nl> - private final transient ParseTreeTableModel parseTreeTableModel ; <nl> - / * * JTextArea component . * / <nl> - private final JTextArea textArea ; <nl> - / * * Reload action . * / <nl> - private final ReloadAction reloadAction ; <nl> - / * * Lines to position map . * / <nl> - private final List < Integer > linesToPosition = new ArrayList < > ( ) ; <nl> - / * * Tree table . * / <nl> - private final JTreeTable treeTable ; <nl> - / * * Last directory . * / <nl> - private File lastDirectory ; <nl> - / * * Current file . * / <nl> - private File currentFile ; <nl> - <nl> - / * * <nl> - * Create a new ParseTreeInfoPanel instance . <nl> - * / <nl> - public ParseTreeInfoPanel ( ) { <nl> - setLayout ( new BorderLayout ( ) ) ; <nl> - <nl> - parseTreeTableModel = new ParseTreeTableModel ( null ) ; <nl> - treeTable = new JTreeTable ( parseTreeTableModel ) ; <nl> - final JScrollPane scrollPane = new JScrollPane ( treeTable ) ; <nl> - <nl> - final JButton fileSelectionButton = <nl> - new JButton ( new FileSelectionAction ( ) ) ; <nl> - <nl> - reloadAction = new ReloadAction ( ) ; <nl> - reloadAction . setEnabled ( false ) ; <nl> - final JButton reloadButton = new JButton ( reloadAction ) ; <nl> - <nl> - textArea = new JTextArea ( 20 , 15 ) ; <nl> - textArea . setEditable ( false ) ; <nl> - treeTable . setEditor ( textArea ) ; <nl> - treeTable . setLinePositionMap ( linesToPosition ) ; <nl> - <nl> - final JScrollPane sp2 = new JScrollPane ( textArea ) ; <nl> - <nl> - final JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL _ SPLIT , <nl> - scrollPane , sp2 ) ; <nl> - add ( splitPane , BorderLayout . CENTER ) ; <nl> - splitPane . setResizeWeight ( 0 . 7 ) ; <nl> - <nl> - final JPanel pane = new JPanel ( new GridLayout ( 1 , 2 ) ) ; <nl> - add ( pane , BorderLayout . PAGE _ END ) ; <nl> - pane . add ( fileSelectionButton ) ; <nl> - pane . add ( reloadButton ) ; <nl> - <nl> - } <nl> - <nl> - / * * <nl> - * Opens the input parse tree ast . <nl> - * @ param parseTree DetailAST tree . <nl> - * / <nl> - public void openAst ( DetailAST parseTree ) { <nl> - parseTreeTableModel . setParseTree ( parseTree ) ; <nl> - reloadAction . setEnabled ( true ) ; <nl> - <nl> - / / clear for each new file <nl> - clearLinesToPosition ( ) ; <nl> - / / starts line counting at 1 <nl> - addLineToPosition ( 0 ) ; <nl> - / / insert the contents of the file to the text area <nl> - <nl> - / / clean the text area before inserting the lines of the new file <nl> - if ( ! textArea . getText ( ) . isEmpty ( ) ) { <nl> - textArea . replaceRange ( " " , 0 , textArea . getText ( ) . length ( ) ) ; <nl> - } <nl> - <nl> - / / move back to the top of the file <nl> - textArea . moveCaretPosition ( 0 ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Opens file and loads it into text area . <nl> - * @ param file File to open . <nl> - * @ param parent Component for displaying errors if file can ' t be open . <nl> - * / <nl> - public void openFile ( File file , final Component parent ) { <nl> - if ( file ! = null ) { <nl> - try { <nl> - Main . getFrame ( ) . setTitle ( " Checkstyle : " + file . getName ( ) ) ; <nl> - final FileText text = new FileText ( file . getAbsoluteFile ( ) , <nl> - getEncoding ( ) ) ; <nl> - final DetailAST parseTree = parseFile ( text ) ; <nl> - parseTreeTableModel . setParseTree ( parseTree ) ; <nl> - currentFile = file ; <nl> - lastDirectory = file . getParentFile ( ) ; <nl> - reloadAction . setEnabled ( true ) ; <nl> - <nl> - final String [ ] sourceLines = text . toLinesArray ( ) ; <nl> - <nl> - / / clear for each new file <nl> - clearLinesToPosition ( ) ; <nl> - / / starts line counting at 1 <nl> - addLineToPosition ( 0 ) ; <nl> - <nl> - / / clean the text area before inserting the lines of the new file <nl> - if ( ! textArea . getText ( ) . isEmpty ( ) ) { <nl> - textArea . replaceRange ( " " , 0 , textArea . getText ( ) <nl> - . length ( ) ) ; <nl> - } <nl> - <nl> - / / insert the contents of the file to the text area <nl> - for ( final String element : sourceLines ) { <nl> - addLineToPosition ( textArea . getText ( ) . length ( ) ) ; <nl> - textArea . append ( element + System . lineSeparator ( ) ) ; <nl> - } <nl> - <nl> - / / move back to the top of the file <nl> - textArea . moveCaretPosition ( 0 ) ; <nl> - treeTable . setLinePositionMap ( linesToPosition ) ; <nl> - } <nl> - catch ( final IOException | ANTLRException ex ) { <nl> - showErrorDialog ( <nl> - parent , <nl> - " Could not parse " + file + " : " + ex . getMessage ( ) ) ; <nl> - } <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Parses a file and returns the parse tree . <nl> - * @ param text the file to parse <nl> - * @ return the root node of the parse tree <nl> - * @ throws ANTLRException if the file is not a Java source <nl> - * / <nl> - private static DetailAST parseFile ( FileText text ) <nl> - throws ANTLRException { <nl> - final FileContents contents = new FileContents ( text ) ; <nl> - return TreeWalker . parse ( contents ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Returns the configured file encoding . <nl> - * This can be set using the { @ code file . encoding } system property . <nl> - * It defaults to UTF - 8 . <nl> - * @ return the configured file encoding <nl> - * / <nl> - private static String getEncoding ( ) { <nl> - return System . getProperty ( " file . encoding " , " UTF - 8 " ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Opens dialog with error . <nl> - * @ param parent Component for displaying errors . <nl> - * @ param msg Error message to display . <nl> - * / <nl> - private static void showErrorDialog ( final Component parent , final String msg ) { <nl> - final Runnable showError = new FrameShower ( parent , msg ) ; <nl> - SwingUtilities . invokeLater ( showError ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Adds a new value into lines to position map . <nl> - * @ param value Value to be added into position map . <nl> - * / <nl> - private void addLineToPosition ( int value ) { <nl> - linesToPosition . add ( value ) ; <nl> - } <nl> - <nl> - / * * Clears lines to position map . * / <nl> - private void clearLinesToPosition ( ) { <nl> - linesToPosition . clear ( ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Http : / / findbugs . sourceforge . net / bugDescriptions . html # SW _ SWING _ METHODS _ INVOKED _ IN _ SWING _ THREAD <nl> - * / <nl> - private static class FrameShower implements Runnable { <nl> - / * * <nl> - * Frame . <nl> - * / <nl> - private final Component parent ; <nl> - <nl> - / * * <nl> - * Frame . <nl> - * / <nl> - private final String msg ; <nl> - <nl> - / * * <nl> - * @ param parent Frame ' s component . <nl> - * @ param msg Message to show . <nl> - * / <nl> - FrameShower ( Component parent , final String msg ) { <nl> - this . parent = parent ; <nl> - this . msg = msg ; <nl> - } <nl> - <nl> - / * * <nl> - * Display a frame . <nl> - * / <nl> - @ Override <nl> - public void run ( ) { <nl> - JOptionPane . showMessageDialog ( parent , msg ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Filter for Java files . <nl> - * / <nl> - private static class JavaFileFilter extends FileFilter { <nl> - @ Override <nl> - public boolean accept ( File file ) { <nl> - return file ! = null & & ( file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public String getDescription ( ) { <nl> - return " Java Source Code " ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Handler for file selection action events . <nl> - * / <nl> - private class FileSelectionAction extends AbstractAction { <nl> - private static final long serialVersionUID = - 1926935338069418119L ; <nl> - <nl> - / * * Default constructor to setup current action . * / <nl> - FileSelectionAction ( ) { <nl> - super ( " Select Java File " ) ; <nl> - putValue ( Action . MNEMONIC _ KEY , KeyEvent . VK _ S ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - final JFileChooser chooser = new JFileChooser ( lastDirectory ) ; <nl> - final FileFilter filter = new JavaFileFilter ( ) ; <nl> - chooser . setFileFilter ( filter ) ; <nl> - final Component parent = <nl> - SwingUtilities . getRoot ( ParseTreeInfoPanel . this ) ; <nl> - chooser . showDialog ( parent , " Open " ) ; <nl> - final File file = chooser . getSelectedFile ( ) ; <nl> - openFile ( file , parent ) ; <nl> - <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Handler for reload action events . <nl> - * / <nl> - private class ReloadAction extends AbstractAction { <nl> - private static final long serialVersionUID = - 1021880396046355863L ; <nl> - <nl> - / * * Default constructor to setup current action . * / <nl> - ReloadAction ( ) { <nl> - super ( " Reload Java File " ) ; <nl> - putValue ( Action . MNEMONIC _ KEY , KeyEvent . VK _ R ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - final Component parent = <nl> - SwingUtilities . getRoot ( ParseTreeInfoPanel . this ) ; <nl> - openFile ( currentFile , parent ) ; <nl> - } <nl> - } <nl> - <nl> - }

TEST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 347590e . . bf48f87 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 145 , 7 + 145 , 7 @ @ 
 
 < ! - - Suppressions from PMD configuration - - > 
 < ! - - validateCli is not reasonable to split as encapsulation of logic will be damaged - - > 
 - < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 222 " / > 
 + < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 212 " / > 
 < ! - - JavadocMethodCheck , JavadocStyleCheck , JavadocUtils . getJavadocTags ( ) - deprecated - - > 
 < suppress checks = " CyclomaticComplexity " files = " JavadocMethodCheck \ . java " / > 
 < suppress checks = " CyclomaticComplexity " files = " JavadocStyleCheck \ . java " / > 
 @ @ - 166 , 7 + 166 , 6 @ @ 
 lines = " 105 , 143 , 174 " / > 
 
 < ! - - Not reasonable to split as encapsulation of logic will be damaged . - - > 
 - < suppress checks = " ExecutableStatementCount " files = " Main \ . java " lines = " 114 " / > 
 - < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 114 " / > 
 - < suppress checks = " JavaNCSS " files = " Main \ . java " lines = " 114 " / > 
 + < suppress checks = " ExecutableStatementCount " files = " Main \ . java " lines = " 128 " / > 
 + < suppress checks = " JavaNCSS " files = " Main \ . java " lines = " 128 " / > 
 < / suppressions > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index e54750c . . dfd24e5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 28 , 6 + 28 , 11 @ @ import java . io . OutputStream ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 import java . util . Properties ; 
 + import java . util . logging . ConsoleHandler ; 
 + import java . util . logging . Filter ; 
 + import java . util . logging . Level ; 
 + import java . util . logging . LogRecord ; 
 + import java . util . logging . Logger ; 
 
 import org . apache . commons . cli . CommandLine ; 
 import org . apache . commons . cli . CommandLineParser ; 
 @ @ - 35 , 6 + 40 , 8 @ @ import org . apache . commons . cli . DefaultParser ; 
 import org . apache . commons . cli . HelpFormatter ; 
 import org . apache . commons . cli . Options ; 
 import org . apache . commons . cli . ParseException ; 
 + import org . apache . commons . logging . Log ; 
 + import org . apache . commons . logging . LogFactory ; 
 
 import com . google . common . collect . Lists ; 
 import com . google . common . io . Closeables ; 
 @ @ - 49 , 6 + 56 , 9 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * 
 * * / 
 public final class Main { 
 + / * * Logger for Main . * / 
 + private static final Log LOG = LogFactory . getLog ( Main . class ) ; 
 + 
 / * * Width of CLI help option . * / 
 private static final int HELP _ WIDTH = 100 ; 
 
 @ @ - 94 , 6 + 104 , 12 @ @ public final class Main { 
 / * * Name for the option ' - - treeWithJavadoc ' . * / 
 private static final String OPTION _ TREE _ JAVADOC _ NAME = " treeWithJavadoc " ; 
 
 + / * * Name for the option ' - d ' . * / 
 + private static final String OPTION _ D _ NAME = " d " ; 
 + 
 + / * * Name for the option ' - - debug ' . * / 
 + private static final String OPTION _ DEBUG _ NAME = " debug " ; 
 + 
 / * * Name for ' xml ' format . * / 
 private static final String XML _ FORMAT _ NAME = " xml " ; 
 
 @ @ - 142 , 34 + 158 , 8 @ @ public final class Main { 
 } 
 } 
 else { 
 - / / create config helper object 
 - final CliOptions config = convertCliToPojo ( commandLine , filesToProcess ) ; 
 - if ( commandLine . hasOption ( OPTION _ T _ NAME ) ) { 
 - / / print AST 
 - final File file = config . files . get ( 0 ) ; 
 - final String stringAst = AstTreeStringPrinter . printFileAst ( file , false ) ; 
 - System . out . print ( stringAst ) ; 
 - } 
 - else if ( commandLine . hasOption ( OPTION _ CAPITAL _ T _ NAME ) ) { 
 - final File file = config . files . get ( 0 ) ; 
 - final String stringAst = AstTreeStringPrinter . printFileAst ( file , true ) ; 
 - System . out . print ( stringAst ) ; 
 - } 
 - else if ( commandLine . hasOption ( OPTION _ J _ NAME ) ) { 
 - final File file = config . files . get ( 0 ) ; 
 - final String stringAst = DetailNodeTreeStringPrinter . printFileAst ( file ) ; 
 - System . out . print ( stringAst ) ; 
 - } 
 - else if ( commandLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { 
 - final File file = config . files . get ( 0 ) ; 
 - final String stringAst = AstTreeStringPrinter . printJavaAndJavadocTree ( file ) ; 
 - System . out . print ( stringAst ) ; 
 - } 
 - else { 
 - / / run Checker 
 - errorCounter = runCheckstyle ( config ) ; 
 - exitStatus = errorCounter ; 
 - } 
 + errorCounter = runCli ( commandLine , filesToProcess ) ; 
 + exitStatus = errorCounter ; 
 } 
 } 
 } 
 @ @ - 279 , 6 + 269 , 71 @ @ public final class Main { 
 } 
 
 / * * 
 + * Do execution of CheckStyle based on Command line options . 
 + * @ param commandLine command line object 
 + * @ param filesToProcess List of files to process found from the command line . 
 + * @ return number of violations 
 + * @ throws IOException if a file could not be read . 
 + * @ throws CheckstyleException if something happens processing the files . 
 + * / 
 + private static int runCli ( CommandLine commandLine , List < File > filesToProcess ) 
 + throws IOException , CheckstyleException { 
 + int result = 0 ; 
 + 
 + / / create config helper object 
 + final CliOptions config = convertCliToPojo ( commandLine , filesToProcess ) ; 
 + if ( commandLine . hasOption ( OPTION _ T _ NAME ) ) { 
 + / / print AST 
 + final File file = config . files . get ( 0 ) ; 
 + final String stringAst = AstTreeStringPrinter . printFileAst ( file , false ) ; 
 + System . out . print ( stringAst ) ; 
 + } 
 + else if ( commandLine . hasOption ( OPTION _ CAPITAL _ T _ NAME ) ) { 
 + final File file = config . files . get ( 0 ) ; 
 + final String stringAst = AstTreeStringPrinter . printFileAst ( file , true ) ; 
 + System . out . print ( stringAst ) ; 
 + } 
 + else if ( commandLine . hasOption ( OPTION _ J _ NAME ) ) { 
 + final File file = config . files . get ( 0 ) ; 
 + final String stringAst = DetailNodeTreeStringPrinter . printFileAst ( file ) ; 
 + System . out . print ( stringAst ) ; 
 + } 
 + else if ( commandLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { 
 + final File file = config . files . get ( 0 ) ; 
 + final String stringAst = AstTreeStringPrinter . printJavaAndJavadocTree ( file ) ; 
 + System . out . print ( stringAst ) ; 
 + } 
 + else { 
 + if ( commandLine . hasOption ( OPTION _ D _ NAME ) ) { 
 + final Logger parentLogger = Logger . getLogger ( Main . class . getName ( ) ) . getParent ( ) ; 
 + final ConsoleHandler handler = new ConsoleHandler ( ) ; 
 + 
 + parentLogger . setLevel ( Level . FINEST ) ; 
 + handler . setLevel ( Level . FINEST ) ; 
 + parentLogger . addHandler ( handler ) ; 
 + handler . setFilter ( new Filter ( ) { 
 + private final String packageName = Main . class . getPackage ( ) . getName ( ) ; 
 + 
 + @ Override 
 + public boolean isLoggable ( LogRecord record ) { 
 + return record . getLoggerName ( ) . startsWith ( packageName ) ; 
 + } 
 + } ) ; 
 + } 
 + if ( LOG . isDebugEnabled ( ) ) { 
 + LOG . debug ( " Checkstyle debug logging enabled " ) ; 
 + LOG . debug ( " Running Checkstyle with version : " 
 + + Main . class . getPackage ( ) . getImplementationVersion ( ) ) ; 
 + } 
 + 
 + / / run Checker 
 + result = runCheckstyle ( config ) ; 
 + } 
 + 
 + return result ; 
 + } 
 + 
 + / * * 
 * Util method to convert CommandLine type to POJO object . 
 * @ param cmdLine command line object 
 * @ param filesToProcess List of files to process found from the command line . 
 @ @ - 495 , 6 + 550 , 8 @ @ public final class Main { 
 " Print Parse tree of the Javadoc comment " ) ; 
 options . addOption ( OPTION _ CAPITAL _ J _ NAME , OPTION _ TREE _ JAVADOC _ NAME , false , 
 " Print full Abstract Syntax Tree of the file " ) ; 
 + options . addOption ( OPTION _ D _ NAME , OPTION _ DEBUG _ NAME , false , 
 + " Print all debug logging of CheckStyle utility " ) ; 
 return options ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index fb6bf6f . . 8b8dc87 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle ; 
 
 import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 + import static org . junit . Assert . assertNotEquals ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 import static org . powermock . api . mockito . PowerMockito . mock ; 
 @ @ - 54 , 6 + 55 , 7 @ @ public class MainTest { 
 " usage : java com . puppycrawl . tools . checkstyle . Main [ options ] - c < config . xml > " 
 + " file . . . % n " 
 + " - c < arg > Sets the check configuration file to use . % n " 
 + + " - d , - - debug Print all debug logging of CheckStyle utility % n " 
 + " - f < arg > Sets the output format . ( plain | xml ) . Defaults to " 
 + " plain % n " 
 + " - j , - - javadocTree Print Parse tree of the Javadoc comment % n " 
 @ @ - 836 , 4 + 838 , 15 @ @ public class MainTest { 
 
 Main . main ( " - o " , file . getCanonicalPath ( ) , " - t " , getPath ( " checks / metrics " ) ) ; 
 } 
 + 
 + @ Test 
 + public void testDebugOption ( ) throws Exception { 
 + exit . checkAssertionAfterwards ( new Assertion ( ) { 
 + @ Override 
 + public void checkAssertion ( ) { 
 + assertNotEquals ( " " , systemErr . getLog ( ) ) ; 
 + } 
 + } ) ; 
 + Main . main ( " - c " , " / google _ checks . xml " , getPath ( " InputMain . java " ) , " - d " ) ; 
 + } 
 } 
 diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm 
 index 1c5dd8d . . 0f15269 100644 
 - - - a / src / xdocs / cmdline . xml . vm 
 + + + b / src / xdocs / cmdline . xml . vm 
 @ @ - 100 , 6 + 100 , 9 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ 
 cannot be used other options and requires exactly one file to run on to be specified . 
 < / li > 
 < li > 
 + < code > - d , - - debug < / code > - Print all debug logging of CheckStyle utility . 
 + < / li > 
 + < li > 
 < code > - v < / code > - print product version and exit . Any other option is ignored . 
 < / li > 
 < / ul >

NEAREST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index df6d345 . . f3e5af3 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 89 , 9 + 89 , 8 @ @ 
 < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ " / > 
 < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 
 - < ! - - Classes FileDrop , Main , ParseTreeInfoPanel from gui - package contain Magic Numbers . 
 - The Check generates too many violations , fixing them will make code unmanageable . - - > 
 - < suppress checks = " MagicNumber " files = " . * [ \ \ / ] checkstyle [ \ \ / ] gui [ \ \ / ] " / > 
 + < ! - - The Check generates too many violations , fixing them will make code unmanageable . - - > 
 + < suppress checks = " MagicNumber " files = " ( ParseTreeTableModel | MainFrame ) \ . java " / > 
 
 < ! - - Methods that build fake AST are very long - - > 
 < suppress checks = " MethodLength " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > 
 @ @ - 122 , 7 + 121 , 7 @ @ 
 < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | AbstractJavadocCheck ) \ . java " / > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest | BaseCheckTestSupport | XDocsPagesTest ) \ . java " / > 
 < ! - - a lot of GUI elements is OK - - > 
 - < suppress checks = " ClassDataAbstractionCoupling " files = " ParseTreeInfoPanel \ . java " / > 
 + < suppress checks = " ClassDataAbstractionCoupling " files = " ( JTreeTable | MainFrame ) \ . java " / > 
 
 < ! - - Should be fixed after moving https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / blob / master / sevntu - checks / src / main / java / com / github / sevntu / checkstyle / checks / coding / ReturnCountExtendedCheck . java into the main repo - - > 
 < suppress checks = " ReturnCount " files = " ( ClassResolver | ConfigurationLoader | IndentationCheckTest ) \ . java " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java 
 new file mode 100644 
 index 0000000 . . a85c003 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java 
 @ @ - 0 , 0 + 1 , 113 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . gui ; 
 + 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 + 
 + import antlr . ANTLRException ; 
 + 
 + import com . google . common . collect . ImmutableList ; 
 + import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 + import com . puppycrawl . tools . checkstyle . api . FileText ; 
 + 
 + / * * 
 + * Model for checkstyle frame . 
 + * @ author Vladislav Lisetskiy 
 + * / 
 + public class CheckstyleFrameModel { 
 + 
 + / * * Lines to position map . * / 
 + private final List < Integer > linesToPosition = new ArrayList < > ( ) ; 
 + 
 + / * * The file which is being parsed . * / 
 + private File currentFile ; 
 + 
 + / * * 
 + * Parse a file and return the parse tree . 
 + * @ param file the file to parse . 
 + * @ return the root node of the parse tree . 
 + * @ throws IOException if the file could not be read . 
 + * @ throws ANTLRException if the file is not a Java source . 
 + * / 
 + public DetailAST parseFile ( File file ) throws IOException , ANTLRException { 
 + currentFile = file ; 
 + final FileText text = getFileText ( file ) ; 
 + final FileContents contents = new FileContents ( text ) ; 
 + return TreeWalker . parse ( contents ) ; 
 + } 
 + 
 + / * * 
 + * Get FileText from a file . 
 + * @ param file the file to get the FileText from . 
 + * @ return the FileText . 
 + * @ throws IOException if the file could not be read . 
 + * / 
 + public FileText getFileText ( File file ) throws IOException { 
 + return new FileText ( file . getAbsoluteFile ( ) , 
 + System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 + } 
 + 
 + / * * 
 + * Get the directory of the last loaded file . 
 + * @ return directory of the last loaded file . 
 + * / 
 + public File getLastDirectory ( ) { 
 + File lastDirectory = null ; 
 + if ( currentFile ! = null ) { 
 + lastDirectory = new File ( currentFile . getParent ( ) ) ; 
 + } 
 + return lastDirectory ; 
 + } 
 + 
 + / * * 
 + * Get current file . 
 + * @ return current file . 
 + * / 
 + public File getCurrentFile ( ) { 
 + return currentFile ; 
 + } 
 + 
 + / * * 
 + * Get lines to position map . 
 + * @ return lines to position map . 
 + * / 
 + public List < Integer > getLinesToPosition ( ) { 
 + return ImmutableList . copyOf ( linesToPosition ) ; 
 + } 
 + 
 + / * * 
 + * Add a new value into lines to position map . 
 + * @ param value Value to be added into position map . 
 + * / 
 + public void addLineToPosition ( int value ) { 
 + linesToPosition . add ( value ) ; 
 + } 
 + 
 + / * * Clear lines to position map . * / 
 + public void clearLinesToPosition ( ) { 
 + linesToPosition . clear ( ) ; 
 + } 
 + 
 + } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 index 7d3d042 . . 6608278 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 @ @ - 72 , 7 + 72 , 6 @ @ public class CodeSelector { 
 editor . requestFocusInWindow ( ) ; 
 editor . setCaretPosition ( start ) ; 
 editor . moveCaretPosition ( end ) ; 
 - editor . transferFocusBackward ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 index b6a62c7 . . 74d7263 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import java . awt . Component ; 
 import java . awt . Dimension ; 
 import java . awt . FontMetrics ; 
 import java . awt . event . ActionEvent ; 
 + import java . awt . event . MouseAdapter ; 
 import java . awt . event . MouseEvent ; 
 import java . util . EventObject ; 
 import java . util . List ; 
 @ @ - 103 , 25 + 104 , 50 @ @ public class JTreeTable extends JTable { 
 final Action expand = new AbstractAction ( ) { 
 private static final long serialVersionUID = - 5859674518660156121L ; 
 
 - @ Override 
 - public void actionPerformed ( ActionEvent event ) { 
 - final TreePath selected = tree . getSelectionPath ( ) ; 
 - final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; 
 - new CodeSelector ( ast , editor , linePositionMap ) . select ( ) ; 
 - 
 - if ( tree . isExpanded ( selected ) ) { 
 - tree . collapsePath ( selected ) ; 
 - } 
 - else { 
 - tree . expandPath ( selected ) ; 
 - } 
 - tree . setSelectionPath ( selected ) ; 
 - } 
 - } ; 
 + @ Override 
 + public void actionPerformed ( ActionEvent event ) { 
 + doExpandByEnter ( ) ; 
 + } 
 + } ; 
 final KeyStroke stroke = KeyStroke . getKeyStroke ( " ENTER " ) ; 
 final String command = " expand / collapse " ; 
 getInputMap ( ) . put ( stroke , command ) ; 
 getActionMap ( ) . put ( command , expand ) ; 
 + 
 + addMouseListener ( new MouseAdapter ( ) { 
 + @ Override 
 + public void mouseClicked ( MouseEvent event ) { 
 + if ( event . getClickCount ( ) = = 2 ) { 
 + makeCodeSelection ( ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 + 
 + / * * 
 + * Do expansion of a tree node after pressing ENTER . 
 + * / 
 + private void doExpandByEnter ( ) { 
 + final TreePath selected = makeCodeSelection ( ) ; 
 + 
 + if ( tree . isExpanded ( selected ) ) { 
 + tree . collapsePath ( selected ) ; 
 + } 
 + else { 
 + tree . expandPath ( selected ) ; 
 + } 
 + tree . setSelectionPath ( selected ) ; 
 + } 
 + 
 + / * * 
 + * Make selection of code in a text area . 
 + * @ return selected TreePath . 
 + * / 
 + private TreePath makeCodeSelection ( ) { 
 + final TreePath selected = tree . getSelectionPath ( ) ; 
 + final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; 
 + new CodeSelector ( ast , editor , linePositionMap ) . select ( ) ; 
 + return selected ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 index 7aa2ffd . . ebe29af 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 @ @ - 19 , 14 + 19 , 11 @ @ 
 
 package com . puppycrawl . tools . checkstyle . gui ; 
 
 - import java . awt . EventQueue ; 
 import java . io . File ; 
 
 - import javax . swing . JFrame ; 
 + import javax . swing . SwingUtilities ; 
 import javax . swing . WindowConstants ; 
 
 - import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - 
 / * * 
 * Entry point for starting the checkstyle GUI . 
 * 
 @ @ - 34 , 12 + 31 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 * / 
 public final class Main { 
 
 - / * * Frame ' s name . * / 
 - private static final String FRAME _ NAME = " CheckStyle " ; 
 - 
 - / * * Main frame . * / 
 - private static JFrame frame ; 
 - 
 / * * Hidden constructor of the current utility class . * / 
 private Main ( ) { 
 / / no code 
 @ @ - 49 , 64 + 40 , 20 @ @ public final class Main { 
 * Entry point . 
 * @ param args the command line arguments . 
 * / 
 - public static void main ( String . . . args ) { 
 - frame = new JFrame ( FRAME _ NAME ) ; 
 - final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; 
 - frame . getContentPane ( ) . add ( panel ) ; 
 - if ( args . length > = 1 ) { 
 - final File file = new File ( args [ 0 ] ) ; 
 - panel . openFile ( file , frame ) ; 
 - } 
 - frame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; 
 - 
 - final Runnable runner = new FrameShower ( frame ) ; 
 - EventQueue . invokeLater ( runner ) ; 
 - } 
 - 
 - / * * 
 - * Method is used for testing in the past . 
 - * @ param ast tree to display 
 - * / 
 - public static void displayAst ( DetailAST ast ) { 
 - final JFrame testFrame = new JFrame ( FRAME _ NAME ) ; 
 - final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; 
 - testFrame . getContentPane ( ) . add ( panel ) ; 
 - panel . openAst ( ast ) ; 
 - testFrame . setSize ( 1500 , 800 ) ; 
 - testFrame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; 
 - testFrame . setVisible ( true ) ; 
 - } 
 - 
 - / * * 
 - * @ return Main GUI ' s frame . 
 - * / 
 - static JFrame getFrame ( ) { 
 - return frame ; 
 - } 
 - 
 - / * * 
 - * Http : / / findbugs . sourceforge . net / bugDescriptions . html # SW _ SWING _ METHODS _ INVOKED _ IN _ SWING _ THREAD 
 - * / 
 - private static class FrameShower implements Runnable { 
 - / * * 
 - * Frame . 
 - * / 
 - private final JFrame frame ; 
 - 
 - / * * 
 - * @ param frame JFrame component . 
 - * / 
 - FrameShower ( JFrame frame ) { 
 - this . frame = frame ; 
 - } 
 - 
 - / * * 
 - * Display a frame . 
 - * / 
 - @ Override 
 - public void run ( ) { 
 - frame . pack ( ) ; 
 - frame . setVisible ( true ) ; 
 - } 
 + public static void main ( final String . . . args ) { 
 + SwingUtilities . invokeLater ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + final MainFrame mainFrame = new MainFrame ( ) ; 
 + 
 + if ( args . length > 0 ) { 
 + final File sourceFile = new File ( args [ 0 ] ) ; 
 + mainFrame . openFile ( sourceFile ) ; 
 + } 
 + mainFrame . setTitle ( " Checkstyle " ) ; 
 + mainFrame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; 
 + mainFrame . setVisible ( true ) ; 
 + } 
 + } ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java 
 new file mode 100644 
 index 0000000 . . fc8e67e 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java 
 @ @ - 0 , 0 + 1 , 199 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . gui ; 
 + 
 + import java . awt . BorderLayout ; 
 + import java . awt . GridLayout ; 
 + import java . awt . event . ActionEvent ; 
 + import java . awt . event . KeyEvent ; 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + 
 + import javax . swing . AbstractAction ; 
 + import javax . swing . JButton ; 
 + import javax . swing . JFileChooser ; 
 + import javax . swing . JFrame ; 
 + import javax . swing . JOptionPane ; 
 + import javax . swing . JPanel ; 
 + import javax . swing . JScrollPane ; 
 + import javax . swing . JSplitPane ; 
 + import javax . swing . JTextArea ; 
 + import javax . swing . filechooser . FileFilter ; 
 + 
 + import antlr . ANTLRException ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + 
 + / * * 
 + * Displays information about a parse tree . 
 + * The user can change the file that is parsed and displayed 
 + * using a JFileChooser . 
 + * 
 + * @ author Lars K ü hne 
 + * @ author Vladislav Lisetskiy 
 + * / 
 + public class MainFrame extends JFrame { 
 + 
 + private static final long serialVersionUID = 7970053543351871890L ; 
 + / * * Checkstyle frame model . * / 
 + private final transient CheckstyleFrameModel model = new CheckstyleFrameModel ( ) ; 
 + / * * Reload action . * / 
 + private final ReloadAction reloadAction = new ReloadAction ( ) ; 
 + / * * Parse tree model . * / 
 + private transient ParseTreeTableModel parseTreeTableModel ; 
 + / * * Code text area . * / 
 + private JTextArea textArea ; 
 + / * * Tree table . * / 
 + private JTreeTable treeTable ; 
 + 
 + / * * Create a new MainFrame . * / 
 + public MainFrame ( ) { 
 + createContent ( ) ; 
 + } 
 + 
 + / * * Create content of this MainFrame . * / 
 + private void createContent ( ) { 
 + setLayout ( new BorderLayout ( ) ) ; 
 + 
 + textArea = new JTextArea ( 20 , 15 ) ; 
 + textArea . setEditable ( false ) ; 
 + final JScrollPane textAreaScrollPane = new JScrollPane ( textArea ) ; 
 + 
 + parseTreeTableModel = new ParseTreeTableModel ( null ) ; 
 + treeTable = new JTreeTable ( parseTreeTableModel ) ; 
 + treeTable . setEditor ( textArea ) ; 
 + treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; 
 + final JScrollPane treeTableScrollPane = new JScrollPane ( treeTable ) ; 
 + 
 + final JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL _ SPLIT , treeTableScrollPane , 
 + textAreaScrollPane ) ; 
 + add ( splitPane , BorderLayout . CENTER ) ; 
 + splitPane . setResizeWeight ( 0 . 7 ) ; 
 + 
 + add ( createButtonsPanel ( ) , BorderLayout . PAGE _ END ) ; 
 + 
 + pack ( ) ; 
 + } 
 + 
 + / * * 
 + * Create buttons panel . 
 + * @ return buttons panel . 
 + * / 
 + private JPanel createButtonsPanel ( ) { 
 + final JButton openFileButton = new JButton ( new FileSelectionAction ( ) ) ; 
 + openFileButton . setMnemonic ( KeyEvent . VK _ S ) ; 
 + openFileButton . setText ( " Open File " ) ; 
 + 
 + reloadAction . setEnabled ( false ) ; 
 + final JButton reloadFileButton = new JButton ( reloadAction ) ; 
 + reloadFileButton . setMnemonic ( KeyEvent . VK _ R ) ; 
 + reloadFileButton . setText ( " Reload File " ) ; 
 + 
 + final JPanel buttonPanel = new JPanel ( ) ; 
 + buttonPanel . setLayout ( new GridLayout ( 1 , 2 ) ) ; 
 + buttonPanel . add ( openFileButton ) ; 
 + buttonPanel . add ( reloadFileButton ) ; 
 + 
 + return buttonPanel ; 
 + } 
 + 
 + / * * 
 + * Open file and load it . 
 + * @ param sourceFile the file to open . 
 + * / 
 + public void openFile ( File sourceFile ) { 
 + if ( sourceFile ! = null ) { 
 + try { 
 + setTitle ( " Checkstyle : " + sourceFile . getName ( ) ) ; 
 + final DetailAST parseTree = model . parseFile ( sourceFile ) ; 
 + parseTreeTableModel . setParseTree ( parseTree ) ; 
 + reloadAction . setEnabled ( true ) ; 
 + 
 + final String [ ] sourceLines = model . getFileText ( sourceFile ) . toLinesArray ( ) ; 
 + 
 + / / clear for each new file 
 + model . clearLinesToPosition ( ) ; 
 + / / starts line counting at 1 
 + model . addLineToPosition ( 0 ) ; 
 + 
 + / / clean the text area before inserting the lines of the new file 
 + textArea . setText ( " " ) ; 
 + 
 + / / insert the contents of the file to the text area 
 + for ( final String element : sourceLines ) { 
 + model . addLineToPosition ( textArea . getText ( ) . length ( ) ) ; 
 + textArea . append ( element + System . lineSeparator ( ) ) ; 
 + } 
 + 
 + treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; 
 + } 
 + catch ( final IOException | ANTLRException ex ) { 
 + JOptionPane . showMessageDialog ( this , 
 + " Could not parse " + sourceFile + " : " + ex . getMessage ( ) ) ; 
 + } 
 + } 
 + } 
 + 
 + / * * 
 + * Handler for file selection action events . 
 + * / 
 + private class FileSelectionAction extends AbstractAction { 
 + private static final long serialVersionUID = 1762396148873280589L ; 
 + 
 + @ Override 
 + public void actionPerformed ( ActionEvent event ) { 
 + final JFileChooser fileChooser = new JFileChooser ( model . getLastDirectory ( ) ) ; 
 + final FileFilter filter = new JavaFileFilter ( ) ; 
 + fileChooser . setFileFilter ( filter ) ; 
 + 
 + final int returnCode = fileChooser . showOpenDialog ( MainFrame . this ) ; 
 + if ( returnCode = = JFileChooser . APPROVE _ OPTION ) { 
 + final File file = fileChooser . getSelectedFile ( ) ; 
 + openFile ( file ) ; 
 + } 
 + } 
 + } 
 + 
 + / * * 
 + * Handler for reload action events . 
 + * / 
 + private class ReloadAction extends AbstractAction { 
 + private static final long serialVersionUID = - 890320994114628011L ; 
 + 
 + @ Override 
 + public void actionPerformed ( ActionEvent event ) { 
 + openFile ( model . getCurrentFile ( ) ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Filter for Java files . 
 + * / 
 + private static class JavaFileFilter extends FileFilter { 
 + @ Override 
 + public boolean accept ( File file ) { 
 + return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; 
 + } 
 + 
 + @ Override 
 + public String getDescription ( ) { 
 + return " Java Source File " ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 deleted file mode 100644 
 index bd0df08 . . 0000000 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 + + + / dev / null 
 @ @ - 1 , 321 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / checkstyle : Checks Java source code for adherence to a set of rules . 
 - / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 - / / 
 - / / This library is free software ; you can redistribute it and / or 
 - / / modify it under the terms of the GNU Lesser General Public 
 - / / License as published by the Free Software Foundation ; either 
 - / / version 2 . 1 of the License , or ( at your option ) any later version . 
 - / / 
 - / / This library is distributed in the hope that it will be useful , 
 - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - / / Lesser General Public License for more details . 
 - / / 
 - / / You should have received a copy of the GNU Lesser General Public 
 - / / License along with this library ; if not , write to the Free Software 
 - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - package com . puppycrawl . tools . checkstyle . gui ; 
 - 
 - import java . awt . BorderLayout ; 
 - import java . awt . Component ; 
 - import java . awt . GridLayout ; 
 - import java . awt . event . ActionEvent ; 
 - import java . awt . event . KeyEvent ; 
 - import java . io . File ; 
 - import java . io . IOException ; 
 - import java . util . ArrayList ; 
 - import java . util . List ; 
 - 
 - import javax . swing . AbstractAction ; 
 - import javax . swing . Action ; 
 - import javax . swing . JButton ; 
 - import javax . swing . JFileChooser ; 
 - import javax . swing . JOptionPane ; 
 - import javax . swing . JPanel ; 
 - import javax . swing . JScrollPane ; 
 - import javax . swing . JSplitPane ; 
 - import javax . swing . JTextArea ; 
 - import javax . swing . SwingUtilities ; 
 - import javax . swing . filechooser . FileFilter ; 
 - 
 - import antlr . ANTLRException ; 
 - 
 - import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 - import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 - import com . puppycrawl . tools . checkstyle . api . FileText ; 
 - 
 - / * * 
 - * Displays information about a parse tree . 
 - * The user can change the file that is parsed and displayed 
 - * through a JFileChooser . 
 - * 
 - * @ author Lars K ü hne 
 - * / 
 - public class ParseTreeInfoPanel extends JPanel { 
 - private static final long serialVersionUID = - 4243405131202059043L ; 
 - 
 - / * * Parse tree model . * / 
 - private final transient ParseTreeTableModel parseTreeTableModel ; 
 - / * * JTextArea component . * / 
 - private final JTextArea textArea ; 
 - / * * Reload action . * / 
 - private final ReloadAction reloadAction ; 
 - / * * Lines to position map . * / 
 - private final List < Integer > linesToPosition = new ArrayList < > ( ) ; 
 - / * * Tree table . * / 
 - private final JTreeTable treeTable ; 
 - / * * Last directory . * / 
 - private File lastDirectory ; 
 - / * * Current file . * / 
 - private File currentFile ; 
 - 
 - / * * 
 - * Create a new ParseTreeInfoPanel instance . 
 - * / 
 - public ParseTreeInfoPanel ( ) { 
 - setLayout ( new BorderLayout ( ) ) ; 
 - 
 - parseTreeTableModel = new ParseTreeTableModel ( null ) ; 
 - treeTable = new JTreeTable ( parseTreeTableModel ) ; 
 - final JScrollPane scrollPane = new JScrollPane ( treeTable ) ; 
 - 
 - final JButton fileSelectionButton = 
 - new JButton ( new FileSelectionAction ( ) ) ; 
 - 
 - reloadAction = new ReloadAction ( ) ; 
 - reloadAction . setEnabled ( false ) ; 
 - final JButton reloadButton = new JButton ( reloadAction ) ; 
 - 
 - textArea = new JTextArea ( 20 , 15 ) ; 
 - textArea . setEditable ( false ) ; 
 - treeTable . setEditor ( textArea ) ; 
 - treeTable . setLinePositionMap ( linesToPosition ) ; 
 - 
 - final JScrollPane sp2 = new JScrollPane ( textArea ) ; 
 - 
 - final JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL _ SPLIT , 
 - scrollPane , sp2 ) ; 
 - add ( splitPane , BorderLayout . CENTER ) ; 
 - splitPane . setResizeWeight ( 0 . 7 ) ; 
 - 
 - final JPanel pane = new JPanel ( new GridLayout ( 1 , 2 ) ) ; 
 - add ( pane , BorderLayout . PAGE _ END ) ; 
 - pane . add ( fileSelectionButton ) ; 
 - pane . add ( reloadButton ) ; 
 - 
 - } 
 - 
 - / * * 
 - * Opens the input parse tree ast . 
 - * @ param parseTree DetailAST tree . 
 - * / 
 - public void openAst ( DetailAST parseTree ) { 
 - parseTreeTableModel . setParseTree ( parseTree ) ; 
 - reloadAction . setEnabled ( true ) ; 
 - 
 - / / clear for each new file 
 - clearLinesToPosition ( ) ; 
 - / / starts line counting at 1 
 - addLineToPosition ( 0 ) ; 
 - / / insert the contents of the file to the text area 
 - 
 - / / clean the text area before inserting the lines of the new file 
 - if ( ! textArea . getText ( ) . isEmpty ( ) ) { 
 - textArea . replaceRange ( " " , 0 , textArea . getText ( ) . length ( ) ) ; 
 - } 
 - 
 - / / move back to the top of the file 
 - textArea . moveCaretPosition ( 0 ) ; 
 - } 
 - 
 - / * * 
 - * Opens file and loads it into text area . 
 - * @ param file File to open . 
 - * @ param parent Component for displaying errors if file can ' t be open . 
 - * / 
 - public void openFile ( File file , final Component parent ) { 
 - if ( file ! = null ) { 
 - try { 
 - Main . getFrame ( ) . setTitle ( " Checkstyle : " + file . getName ( ) ) ; 
 - final FileText text = new FileText ( file . getAbsoluteFile ( ) , 
 - getEncoding ( ) ) ; 
 - final DetailAST parseTree = parseFile ( text ) ; 
 - parseTreeTableModel . setParseTree ( parseTree ) ; 
 - currentFile = file ; 
 - lastDirectory = file . getParentFile ( ) ; 
 - reloadAction . setEnabled ( true ) ; 
 - 
 - final String [ ] sourceLines = text . toLinesArray ( ) ; 
 - 
 - / / clear for each new file 
 - clearLinesToPosition ( ) ; 
 - / / starts line counting at 1 
 - addLineToPosition ( 0 ) ; 
 - 
 - / / clean the text area before inserting the lines of the new file 
 - if ( ! textArea . getText ( ) . isEmpty ( ) ) { 
 - textArea . replaceRange ( " " , 0 , textArea . getText ( ) 
 - . length ( ) ) ; 
 - } 
 - 
 - / / insert the contents of the file to the text area 
 - for ( final String element : sourceLines ) { 
 - addLineToPosition ( textArea . getText ( ) . length ( ) ) ; 
 - textArea . append ( element + System . lineSeparator ( ) ) ; 
 - } 
 - 
 - / / move back to the top of the file 
 - textArea . moveCaretPosition ( 0 ) ; 
 - treeTable . setLinePositionMap ( linesToPosition ) ; 
 - } 
 - catch ( final IOException | ANTLRException ex ) { 
 - showErrorDialog ( 
 - parent , 
 - " Could not parse " + file + " : " + ex . getMessage ( ) ) ; 
 - } 
 - } 
 - } 
 - 
 - / * * 
 - * Parses a file and returns the parse tree . 
 - * @ param text the file to parse 
 - * @ return the root node of the parse tree 
 - * @ throws ANTLRException if the file is not a Java source 
 - * / 
 - private static DetailAST parseFile ( FileText text ) 
 - throws ANTLRException { 
 - final FileContents contents = new FileContents ( text ) ; 
 - return TreeWalker . parse ( contents ) ; 
 - } 
 - 
 - / * * 
 - * Returns the configured file encoding . 
 - * This can be set using the { @ code file . encoding } system property . 
 - * It defaults to UTF - 8 . 
 - * @ return the configured file encoding 
 - * / 
 - private static String getEncoding ( ) { 
 - return System . getProperty ( " file . encoding " , " UTF - 8 " ) ; 
 - } 
 - 
 - / * * 
 - * Opens dialog with error . 
 - * @ param parent Component for displaying errors . 
 - * @ param msg Error message to display . 
 - * / 
 - private static void showErrorDialog ( final Component parent , final String msg ) { 
 - final Runnable showError = new FrameShower ( parent , msg ) ; 
 - SwingUtilities . invokeLater ( showError ) ; 
 - } 
 - 
 - / * * 
 - * Adds a new value into lines to position map . 
 - * @ param value Value to be added into position map . 
 - * / 
 - private void addLineToPosition ( int value ) { 
 - linesToPosition . add ( value ) ; 
 - } 
 - 
 - / * * Clears lines to position map . * / 
 - private void clearLinesToPosition ( ) { 
 - linesToPosition . clear ( ) ; 
 - } 
 - 
 - / * * 
 - * Http : / / findbugs . sourceforge . net / bugDescriptions . html # SW _ SWING _ METHODS _ INVOKED _ IN _ SWING _ THREAD 
 - * / 
 - private static class FrameShower implements Runnable { 
 - / * * 
 - * Frame . 
 - * / 
 - private final Component parent ; 
 - 
 - / * * 
 - * Frame . 
 - * / 
 - private final String msg ; 
 - 
 - / * * 
 - * @ param parent Frame ' s component . 
 - * @ param msg Message to show . 
 - * / 
 - FrameShower ( Component parent , final String msg ) { 
 - this . parent = parent ; 
 - this . msg = msg ; 
 - } 
 - 
 - / * * 
 - * Display a frame . 
 - * / 
 - @ Override 
 - public void run ( ) { 
 - JOptionPane . showMessageDialog ( parent , msg ) ; 
 - } 
 - } 
 - 
 - / * * 
 - * Filter for Java files . 
 - * / 
 - private static class JavaFileFilter extends FileFilter { 
 - @ Override 
 - public boolean accept ( File file ) { 
 - return file ! = null & & ( file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ) ; 
 - } 
 - 
 - @ Override 
 - public String getDescription ( ) { 
 - return " Java Source Code " ; 
 - } 
 - } 
 - 
 - / * * 
 - * Handler for file selection action events . 
 - * / 
 - private class FileSelectionAction extends AbstractAction { 
 - private static final long serialVersionUID = - 1926935338069418119L ; 
 - 
 - / * * Default constructor to setup current action . * / 
 - FileSelectionAction ( ) { 
 - super ( " Select Java File " ) ; 
 - putValue ( Action . MNEMONIC _ KEY , KeyEvent . VK _ S ) ; 
 - } 
 - 
 - @ Override 
 - public void actionPerformed ( ActionEvent event ) { 
 - final JFileChooser chooser = new JFileChooser ( lastDirectory ) ; 
 - final FileFilter filter = new JavaFileFilter ( ) ; 
 - chooser . setFileFilter ( filter ) ; 
 - final Component parent = 
 - SwingUtilities . getRoot ( ParseTreeInfoPanel . this ) ; 
 - chooser . showDialog ( parent , " Open " ) ; 
 - final File file = chooser . getSelectedFile ( ) ; 
 - openFile ( file , parent ) ; 
 - 
 - } 
 - } 
 - 
 - / * * 
 - * Handler for reload action events . 
 - * / 
 - private class ReloadAction extends AbstractAction { 
 - private static final long serialVersionUID = - 1021880396046355863L ; 
 - 
 - / * * Default constructor to setup current action . * / 
 - ReloadAction ( ) { 
 - super ( " Reload Java File " ) ; 
 - putValue ( Action . MNEMONIC _ KEY , KeyEvent . VK _ R ) ; 
 - } 
 - 
 - @ Override 
 - public void actionPerformed ( ActionEvent event ) { 
 - final Component parent = 
 - SwingUtilities . getRoot ( ParseTreeInfoPanel . this ) ; 
 - openFile ( currentFile , parent ) ; 
 - } 
 - } 
 - 
 - }
