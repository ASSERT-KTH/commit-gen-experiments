BLEU SCORE: 0.11217265776204946

TEST MSG: Issue # 6294 : added test cases to kill indentation profile mutations
GENERATED MSG: Issue # 6272 : added new tests to kill FALSE _ RETURNS mutations

TEST DIFF (one line): diff - - git a / . ci / pitest . sh b / . ci / pitest . sh <nl> index cf67fb5 . . 7e96785 100755 <nl> - - - a / . ci / pitest . sh <nl> + + + b / . ci / pitest . sh <nl> @ @ - 67 , 19 + 67 , 11 @ @ pitest - indentation ) <nl> " BlockParentHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > level . addAcceptedIndent ( level . getFirstIndentLevel ( ) + getLineWrappingIndent ( ) ) ; < / span > < / pre > < / td > < / tr > " <nl> " BlockParentHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return getIndentCheck ( ) . getLineWrappingIndentation ( ) ; < / span > < / pre > < / td > < / tr > " <nl> " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; root . getFirstChild ( ) . getFirstChild ( ) . getFirstChild ( ) . getNextSibling ( ) ! = null ; < / span > < / pre > < / td > < / tr > " <nl> - " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > distanceAim + = nextToken . getLastChild ( ) . getLineNo ( ) - nextToken . getLineNo ( ) ; < / span > < / pre > < / td > < / tr > " <nl> - " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( comment . getColumnNo ( ) & # 60 ; nextStmt . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> - " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( comment . getType ( ) = = TokenTypes . SINGLE _ LINE _ COMMENT ) { < / span > < / pre > < / td > < / tr > " <nl> " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( isUsingOfObjectReferenceToInvokeMethod ( blockBody ) ) { < / span > < / pre > < / td > < / tr > " <nl> " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( isUsingOfObjectReferenceToInvokeMethod ( root ) ) { < / span > < / pre > < / td > < / tr > " <nl> - " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( nextToken . getType ( ) = = TokenTypes . BLOCK _ COMMENT _ BEGIN ) { < / span > < / pre > < / td > < / tr > " <nl> " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( root . getFirstChild ( ) . getType ( ) = = TokenTypes . LITERAL _ NEW ) { < / span > < / pre > < / td > < / tr > " <nl> " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( root . getLineNo ( ) & # 62 ; = comment . getLineNo ( ) ) { < / span > < / pre > < / td > < / tr > " <nl> " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return root . getFirstChild ( ) . getFirstChild ( ) . getFirstChild ( ) ! = null < / span > < / pre > < / td > < / tr > " <nl> - " ElseHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return getMainAst ( ) . getFirstChild ( ) ; < / span > < / pre > < / td > < / tr > " <nl> - " ElseHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > super . checkTopLevelToken ( ) ; < / span > < / pre > < / td > < / tr > " <nl> - " ForHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkExpressionSubtree ( forEach , expected , false , false ) ; < / span > < / pre > < / td > < / tr > " <nl> - " ForHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkWrappingIndentation ( getMainAst ( ) , getForLoopRightParen ( getMainAst ( ) ) ) ; < / span > < / pre > < / td > < / tr > " <nl> " HandlerFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > createdHandlers . clear ( ) ; < / span > < / pre > < / td > < / tr > " <nl> " HandlerFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > register ( TokenTypes . INDEX _ OP , IndexHandler . class ) ; < / span > < / pre > < / td > < / tr > " <nl> " IndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > handlerFactory . clearCreatedHandlers ( ) ; < / span > < / pre > < / td > < / tr > " <nl> @ @ - 88 , 10 + 80 , 7 @ @ pitest - indentation ) <nl> " IndentLevel . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > for ( int i = levels . nextSetBit ( 0 ) ; i & # 62 ; = 0 ; < / span > < / pre > < / td > < / tr > " <nl> " MethodDefHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( node . getLineNo ( ) & # 60 ; lineStart ) { < / span > < / pre > < / td > < / tr > " <nl> " MethodDefHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( node . getType ( ) = = TokenTypes . ANNOTATION ) { < / span > < / pre > < / td > < / tr > " <nl> - " NewHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkExpressionSubtree ( type , getIndent ( ) , false , false ) ; < / span > < / pre > < / td > < / tr > " <nl> - " NewHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkLeftParen ( lparen ) ; < / span > < / pre > < / td > < / tr > " <nl> " NewHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return false ; < / span > < / pre > < / td > < / tr > " <nl> - " PackageDefHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkWrappingIndentation ( getMainAst ( ) , semi ) ; < / span > < / pre > < / td > < / tr > " <nl> " SwitchHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkExpressionSubtree ( < / span > < / pre > < / td > < / tr > " <nl> " SwitchHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkSwitchExpr ( ) ; < / span > < / pre > < / td > < / tr > " <nl> " SynchronizedHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkExpressionSubtree ( syncAst , expected , false , false ) ; < / span > < / pre > < / td > < / tr > " <nl> diff - - git a / config / pmd - test . xml b / config / pmd - test . xml <nl> index 0de8ce3 . . 75fb335 100644 <nl> - - - a / config / pmd - test . xml <nl> + + + b / config / pmd - test . xml <nl> @ @ - 63 , 7 + 63 , 8 @ @ <nl> JavadocTokenTypesTest . TokenValues contains several asserts as it checks each <nl> token explicitly . <nl> XdocsPagesTest . getModulePropertyExpectedTypeName is a complicated list of <nl> - different checks . - - > <nl> + different checks . <nl> + IndentationCheckTest has a lot of cases . - - > <nl> < property name = " violationSuppressXPath " <nl> value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypesTest ' ] <nl> / / MethodDeclaration [ @ Name = ' testTokenValues ' ] <nl> @ @ - 72 , 7 + 73 , 8 @ @ <nl> | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] <nl> / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedTypeName ' ] <nl> | / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavadocTokenTypesTest ' ] <nl> - / / MethodDeclaration [ @ Name = ' testTokenNumbers ' ] " / > <nl> + / / MethodDeclaration [ @ Name = ' testTokenNumbers ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' IndentationCheckTest ' ] " / > <nl> < / properties > <nl> < / rule > <nl> <nl> diff - - git a / pom . xml b / pom . xml <nl> index 2120c1f . . 7d8cd71 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 2134 , 7 + 2134 , 7 @ @ <nl> < param > * . Input * < / param > <nl> < / excludedTestClasses > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 95 < / mutationThreshold > <nl> + < mutationThreshold > 97 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java <nl> index f315269 . . c2f8d35 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java <nl> @ @ - 87 , 6 + 87 , 7 @ @ public class CommentsIndentationCheckTest extends AbstractModuleTestSupport { <nl> " 551 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 550 , 12 , 8 ) , <nl> " 557 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 555 , 0 , 8 ) , <nl> " 562 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 561 , 0 , 8 ) , <nl> + " 577 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 574 , 0 , 8 ) , <nl> } ; <nl> final String testInputFile = " InputCommentsIndentationCommentIsAtTheEndOfBlock . java " ; <nl> verify ( checkConfig , getPath ( testInputFile ) , expected ) ; <nl> @ @ - 116 , 6 + 117 , 7 @ @ public class CommentsIndentationCheckTest extends AbstractModuleTestSupport { <nl> " 229 : " + getCheckMessage ( MSG _ KEY _ SINGLE , " 228 , 230 " , 6 , " 12 , 12 " ) , <nl> " 276 : " + getCheckMessage ( MSG _ KEY _ BLOCK , " 275 , 279 " , 11 , " 16 , 12 " ) , <nl> " 281 : " + getCheckMessage ( MSG _ KEY _ SINGLE , " 280 , 282 " , 11 , " 16 , 12 " ) , <nl> + " 311 : " + getCheckMessage ( MSG _ KEY _ SINGLE , " 312 " , 0 , " 8 " ) , <nl> } ; <nl> final String testInputFile = " InputCommentsIndentationInSwitchBlock . java " ; <nl> verify ( checkConfig , getPath ( testInputFile ) , expected ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> index 062e338 . . 90b10fb 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> @ @ - 709 , 6 + 709 , 11 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { <nl> " 93 : " + getCheckMessage ( MSG _ ERROR , " switch rcurly " , 10 , 8 ) , <nl> " 95 : " + getCheckMessage ( MSG _ ERROR , " switch lcurly " , 10 , 8 ) , <nl> " 96 : " + getCheckMessage ( MSG _ ERROR , " switch rcurly " , 6 , 8 ) , <nl> + " 99 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " case " , 8 , 12 ) , <nl> + " 100 : " + getCheckMessage ( MSG _ ERROR , " if " , 12 , 16 ) , <nl> + " 101 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " if " , 16 , 20 ) , <nl> + " 102 : " + getCheckMessage ( MSG _ ERROR , " else " , 12 , 16 ) , <nl> + " 103 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " else " , 16 , 20 ) , <nl> } ; <nl> verifyWarns ( checkConfig , fileName , expected ) ; <nl> } <nl> @ @ - 1095 , 6 + 1100 , 8 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { <nl> " 257 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " if " , 0 , 12 ) , <nl> " 258 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " if " , 0 , 12 ) , <nl> " 259 : " + getCheckMessage ( MSG _ ERROR , " if rcurly " , 0 , 8 ) , <nl> + " 260 : " + getCheckMessage ( MSG _ ERROR , " if " , 0 , 8 ) , <nl> + " 262 : " + getCheckMessage ( MSG _ ERROR , " else " , 0 , 8 ) , <nl> } ; <nl> verifyWarns ( checkConfig , fileName , expected ) ; <nl> } <nl> @ @ - 1203 , 6 + 1210 , 18 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { <nl> " 71 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 14 , 16 ) , <nl> " 72 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 10 , 12 ) , <nl> " 81 : " + getCheckMessage ( MSG _ ERROR , " for rparen " , 12 , 8 ) , <nl> + " 86 : " + getCheckMessage ( MSG _ ERROR , " method def modifier " , 2 , 4 ) , <nl> + " 87 : " + getCheckMessage ( MSG _ ERROR , " for " , 4 , 8 ) , <nl> + " 88 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 8 , 12 ) , <nl> + " 89 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 6 , 12 ) , <nl> + " 90 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " method call " , 8 , 16 ) , <nl> + " 92 : " + getCheckMessage ( MSG _ ERROR , " for " , 0 , 8 ) , <nl> + " 93 : " + getCheckMessage ( MSG _ ERROR , " for lparen " , 0 , 8 ) , <nl> + " 94 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 0 , 12 ) , <nl> + " 95 : " + getCheckMessage ( MSG _ ERROR , " ; " , 0 , 4 ) , <nl> + " 96 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 0 , 12 ) , <nl> + " 97 : " + getCheckMessage ( MSG _ ERROR , " ; " , 0 , 4 ) , <nl> + " 98 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 0 , 12 ) , <nl> } ; <nl> verifyWarns ( checkConfig , fileName , expected ) ; <nl> } <nl> @ @ - 1701 , 6 + 1720 , 17 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testPackageDeclaration4 ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; <nl> + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> + final String [ ] expected = { <nl> + " 2 : " + getCheckMessage ( MSG _ ERROR , " com " , 0 , 4 ) , <nl> + " 3 : " + getCheckMessage ( MSG _ ERROR , " checks " , 0 , 4 ) , <nl> + } ; <nl> + verifyWarns ( checkConfig , getPath ( " InputIndentationPackageDeclaration4 . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testLambda1 ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; <nl> checkConfig . addAttribute ( " tabWidth " , " 2 " ) ; <nl> @ @ - 1974 , 6 + 2004 , 19 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { <nl> verifyWarns ( checkConfig , getPath ( " InputIndentationEmptyArray . java " ) , expected ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testNewHandler ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; <nl> + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> + final String [ ] expected = { <nl> + " 8 : " + getCheckMessage ( MSG _ ERROR , " Object " , 0 , 12 ) , <nl> + " 10 : " + getCheckMessage ( MSG _ ERROR , " ( " , 0 , 12 ) , <nl> + " 13 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " operator new " , 0 , 8 ) , <nl> + " 15 : " + getCheckMessage ( MSG _ ERROR , " operator new lparen " , 0 , 8 ) , <nl> + } ; <nl> + verifyWarns ( checkConfig , getPath ( " InputIndentationNewHandler . java " ) , expected ) ; <nl> + } <nl> + <nl> private static final class IndentAudit implements AuditListener { <nl> <nl> private final IndentComment [ ] comments ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationCommentIsAtTheEndOfBlock . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationCommentIsAtTheEndOfBlock . java <nl> index 29aecdf . . 89cdaa5 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationCommentIsAtTheEndOfBlock . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationCommentIsAtTheEndOfBlock . java <nl> @ @ - 570 , 6 + 570 , 19 @ @ public class InputCommentsIndentationCommentIsAtTheEndOfBlock { <nl> / / comment <nl> } <nl> <nl> + int foo76 ( ) { <nl> + return 0 ; <nl> + / * test <nl> + * test * / <nl> + / / test <nl> + } <nl> + <nl> + void foo77 ( ) { <nl> + try { <nl> + / * CHECKSTYLE : OFF * / } catch ( Exception e ) { <nl> + } <nl> + } <nl> + <nl> / / We almost reached the end of the class here . <nl> } <nl> / / The END of the class . <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationInSwitchBlock . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationInSwitchBlock . java <nl> index 1214024 . . 20dd4b4 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationInSwitchBlock . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationInSwitchBlock . java <nl> @ @ - 302 , 4 + 302 , 22 @ @ public class InputCommentsIndentationInSwitchBlock { <nl> break ; <nl> } <nl> } <nl> + <nl> + public void foo14 ( ) { <nl> + int a = 1 ; <nl> + switch ( a ) { <nl> + case 1 : <nl> + default : <nl> + / / violation <nl> + } <nl> + } <nl> + <nl> + public void foo15 ( ) { <nl> + int a = 1 ; <nl> + switch ( a ) { <nl> + case 1 : <nl> + default : <nl> + / / violation <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidForIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidForIndent . java <nl> index ae8e09f . . 78a6623 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidForIndent . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidForIndent . java <nl> @ @ - 83 , 4 + 83 , 19 @ @ public class InputIndentationInvalidForIndent { / / indent : 0 exp : 0 <nl> } / / indent : 8 exp : 8 <nl> } / / indent : 4 exp : 4 <nl> <nl> + public void doSmth ( ) { / / indent : 2 exp : 4 warn <nl> + for ( int h / / indent : 4 exp : 8 warn <nl> + : new int [ ] { } ) { / / indent : 8 exp : 12 warn <nl> + System . getProperty ( / / indent : 6 exp : 12 warn <nl> + " someString " ) ; / / indent : 8 exp : 16 warn <nl> + } / / indent : 8 exp : 8 <nl> + for / / indent : 0 exp : 8 warn <nl> + ( / / indent : 0 exp : 8 warn <nl> + int i = 0 / / indent : 0 exp : 12 warn <nl> + ; / / indent : 0 exp : 4 warn <nl> + i < 5 / / indent : 0 exp : 12 warn <nl> + ; / / indent : 0 exp : 4 warn <nl> + i + + ) { } / / indent : 0 exp : 12 warn <nl> + } / / indent : 4 exp : 4 <nl> + <nl> } / / indent : 0 exp : 0 <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidIfIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidIfIndent . java <nl> index b62efa6 . . 0521407 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidIfIndent . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidIfIndent . java <nl> @ @ - 257 , 6 + 257 , 10 @ @ if ( test / / indent : 0 exp : 8 warn <nl> | | test ) { / / indent : 0 exp : 12 warn <nl> System . getProperty ( " blah " ) ; / / indent : 0 exp : 12 warn <nl> } / / indent : 0 exp : 8 warn <nl> + if ( test ) / / indent : 0 exp : 8 warn <nl> + System . getProperty ( " blah " ) ; / / indent : 0 exp : 0 <nl> + else / / indent : 0 exp : 8 warn <nl> + System . getProperty ( " blah " ) ; / / indent : 0 exp : 0 <nl> <nl> } / / indent : 4 exp : 4 <nl> <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidSwitchIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidSwitchIndent . java <nl> index bfb6ceb . . 403f726 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidSwitchIndent . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidSwitchIndent . java <nl> @ @ - 95 , 6 + 95 , 14 @ @ public class InputIndentationInvalidSwitchIndent { / / indent : 0 exp : 0 <nl> { / / indent : 10 exp : 8 warn <nl> } / / indent : 6 exp : 8 warn <nl> <nl> + switch ( s ) { / / indent : 8 exp : 8 <nl> + 	 case 1 : / / indent : 8 exp : 12 warn <nl> + 	 	 if ( true ) / / indent : 12 exp : 16 warn <nl> + 	 	 	 break ; / / indent : 16 exp : 20 warn <nl> + 	 	 else / / indent : 12 exp : 16 warn <nl> + 	 	 	 break ; / / indent : 16 exp : 20 warn <nl> + } / / indent : 8 exp : 8 <nl> + <nl> } / / indent : 4 exp : 4 <nl> <nl> } / / indent : 0 exp : 0 <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationNewHandler . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationNewHandler . java <nl> new file mode 100644 <nl> index 0000000 . . f7ddc0b <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationNewHandler . java <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . indentation . indentation ; / / indent : 0 exp : 0 <nl> + <nl> + public class InputIndentationNewHandler / / indent : 0 exp : 0 <nl> + { / / indent : 0 exp : 0 <nl> + public void test ( ) { / / indent : 4 exp : 4 <nl> + Object o = new Object ( ) ; / / indent : 8 exp : 8 <nl> + Object p = new / / indent : 8 exp : 8 <nl> + Object ( ) ; / / indent : 0 exp : 12 warn <nl> + Object q = new Object / / indent : 8 exp : 8 <nl> + ( ) ; / / indent : 0 exp : 12 warn <nl> + o = new Integer ( " " . indexOf ( " 5 " ) ) ; / / indent : 8 exp : 8 <nl> + o = new / / indent : 8 exp : 8 <nl> + Integer ( " " . indexOf ( " 5 " ) ) ; / / indent : 0 exp : 8 warn <nl> + o = new Integer / / indent : 8 exp : 8 <nl> + ( " " . indexOf ( " 5 " ) ) ; / / indent : 0 exp : 8 warn <nl> + } / / indent : 4 exp : 4 <nl> + } / / indent : 0 exp : 0 <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationPackageDeclaration4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationPackageDeclaration4 . java <nl> new file mode 100644 <nl> index 0000000 . . 9391288 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationPackageDeclaration4 . java <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + package / / indent : 0 exp : > = 0 <nl> + com . puppycrawl . tools . checkstyle . / / indent : 0 exp : 4 warn <nl> + checks . indentation . indentation ; / / indent : 0 exp : 4 warn <nl> + <nl> + public class InputIndentationPackageDeclaration4 { } / / indent : 0 exp : 0
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index cba0a8c . . 295f33a 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 202 , 7 + 202 , 7 @ @ <nl> < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > <nl> < maven . site . plugin . version > 3 . 7 . 1 < / maven . site . plugin . version > <nl> < maven . spotbugs . plugin . version > 3 . 1 . 7 < / maven . spotbugs . plugin . version > <nl> - < maven . pmd . plugin . version > 3 . 10 . 0 < / maven . pmd . plugin . version > <nl> + < maven . pmd . plugin . version > 3 . 11 . 0 < / maven . pmd . plugin . version > <nl> < pmd . version > 6 . 6 . 0 < / pmd . version > <nl> < maven . jacoco . plugin . version > 0 . 8 . 2 < / maven . jacoco . plugin . version > <nl> < powermock . version > 2 . 0 . 0 - beta . 5 < / powermock . version >

TEST DIFF:
diff - - git a / . ci / pitest . sh b / . ci / pitest . sh 
 index cf67fb5 . . 7e96785 100755 
 - - - a / . ci / pitest . sh 
 + + + b / . ci / pitest . sh 
 @ @ - 67 , 19 + 67 , 11 @ @ pitest - indentation ) 
 " BlockParentHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > level . addAcceptedIndent ( level . getFirstIndentLevel ( ) + getLineWrappingIndent ( ) ) ; < / span > < / pre > < / td > < / tr > " 
 " BlockParentHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return getIndentCheck ( ) . getLineWrappingIndentation ( ) ; < / span > < / pre > < / td > < / tr > " 
 " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; root . getFirstChild ( ) . getFirstChild ( ) . getFirstChild ( ) . getNextSibling ( ) ! = null ; < / span > < / pre > < / td > < / tr > " 
 - " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > distanceAim + = nextToken . getLastChild ( ) . getLineNo ( ) - nextToken . getLineNo ( ) ; < / span > < / pre > < / td > < / tr > " 
 - " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( comment . getColumnNo ( ) & # 60 ; nextStmt . getColumnNo ( ) ) { < / span > < / pre > < / td > < / tr > " 
 - " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( comment . getType ( ) = = TokenTypes . SINGLE _ LINE _ COMMENT ) { < / span > < / pre > < / td > < / tr > " 
 " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( isUsingOfObjectReferenceToInvokeMethod ( blockBody ) ) { < / span > < / pre > < / td > < / tr > " 
 " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( isUsingOfObjectReferenceToInvokeMethod ( root ) ) { < / span > < / pre > < / td > < / tr > " 
 - " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( nextToken . getType ( ) = = TokenTypes . BLOCK _ COMMENT _ BEGIN ) { < / span > < / pre > < / td > < / tr > " 
 " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( root . getFirstChild ( ) . getType ( ) = = TokenTypes . LITERAL _ NEW ) { < / span > < / pre > < / td > < / tr > " 
 " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( root . getLineNo ( ) & # 62 ; = comment . getLineNo ( ) ) { < / span > < / pre > < / td > < / tr > " 
 " CommentsIndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return root . getFirstChild ( ) . getFirstChild ( ) . getFirstChild ( ) ! = null < / span > < / pre > < / td > < / tr > " 
 - " ElseHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return getMainAst ( ) . getFirstChild ( ) ; < / span > < / pre > < / td > < / tr > " 
 - " ElseHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > super . checkTopLevelToken ( ) ; < / span > < / pre > < / td > < / tr > " 
 - " ForHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkExpressionSubtree ( forEach , expected , false , false ) ; < / span > < / pre > < / td > < / tr > " 
 - " ForHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkWrappingIndentation ( getMainAst ( ) , getForLoopRightParen ( getMainAst ( ) ) ) ; < / span > < / pre > < / td > < / tr > " 
 " HandlerFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > createdHandlers . clear ( ) ; < / span > < / pre > < / td > < / tr > " 
 " HandlerFactory . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > register ( TokenTypes . INDEX _ OP , IndexHandler . class ) ; < / span > < / pre > < / td > < / tr > " 
 " IndentationCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > handlerFactory . clearCreatedHandlers ( ) ; < / span > < / pre > < / td > < / tr > " 
 @ @ - 88 , 10 + 80 , 7 @ @ pitest - indentation ) 
 " IndentLevel . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > for ( int i = levels . nextSetBit ( 0 ) ; i & # 62 ; = 0 ; < / span > < / pre > < / td > < / tr > " 
 " MethodDefHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( node . getLineNo ( ) & # 60 ; lineStart ) { < / span > < / pre > < / td > < / tr > " 
 " MethodDefHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( node . getType ( ) = = TokenTypes . ANNOTATION ) { < / span > < / pre > < / td > < / tr > " 
 - " NewHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkExpressionSubtree ( type , getIndent ( ) , false , false ) ; < / span > < / pre > < / td > < / tr > " 
 - " NewHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkLeftParen ( lparen ) ; < / span > < / pre > < / td > < / tr > " 
 " NewHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > return false ; < / span > < / pre > < / td > < / tr > " 
 - " PackageDefHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkWrappingIndentation ( getMainAst ( ) , semi ) ; < / span > < / pre > < / td > < / tr > " 
 " SwitchHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkExpressionSubtree ( < / span > < / pre > < / td > < / tr > " 
 " SwitchHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkSwitchExpr ( ) ; < / span > < / pre > < / td > < / tr > " 
 " SynchronizedHandler . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > checkExpressionSubtree ( syncAst , expected , false , false ) ; < / span > < / pre > < / td > < / tr > " 
 diff - - git a / config / pmd - test . xml b / config / pmd - test . xml 
 index 0de8ce3 . . 75fb335 100644 
 - - - a / config / pmd - test . xml 
 + + + b / config / pmd - test . xml 
 @ @ - 63 , 7 + 63 , 8 @ @ 
 JavadocTokenTypesTest . TokenValues contains several asserts as it checks each 
 token explicitly . 
 XdocsPagesTest . getModulePropertyExpectedTypeName is a complicated list of 
 - different checks . - - > 
 + different checks . 
 + IndentationCheckTest has a lot of cases . - - > 
 < property name = " violationSuppressXPath " 
 value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypesTest ' ] 
 / / MethodDeclaration [ @ Name = ' testTokenValues ' ] 
 @ @ - 72 , 7 + 73 , 8 @ @ 
 | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] 
 / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedTypeName ' ] 
 | / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavadocTokenTypesTest ' ] 
 - / / MethodDeclaration [ @ Name = ' testTokenNumbers ' ] " / > 
 + / / MethodDeclaration [ @ Name = ' testTokenNumbers ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' IndentationCheckTest ' ] " / > 
 < / properties > 
 < / rule > 
 
 diff - - git a / pom . xml b / pom . xml 
 index 2120c1f . . 7d8cd71 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 2134 , 7 + 2134 , 7 @ @ 
 < param > * . Input * < / param > 
 < / excludedTestClasses > 
 < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 95 < / mutationThreshold > 
 + < mutationThreshold > 97 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java 
 index f315269 . . c2f8d35 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java 
 @ @ - 87 , 6 + 87 , 7 @ @ public class CommentsIndentationCheckTest extends AbstractModuleTestSupport { 
 " 551 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 550 , 12 , 8 ) , 
 " 557 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 555 , 0 , 8 ) , 
 " 562 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 561 , 0 , 8 ) , 
 + " 577 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 574 , 0 , 8 ) , 
 } ; 
 final String testInputFile = " InputCommentsIndentationCommentIsAtTheEndOfBlock . java " ; 
 verify ( checkConfig , getPath ( testInputFile ) , expected ) ; 
 @ @ - 116 , 6 + 117 , 7 @ @ public class CommentsIndentationCheckTest extends AbstractModuleTestSupport { 
 " 229 : " + getCheckMessage ( MSG _ KEY _ SINGLE , " 228 , 230 " , 6 , " 12 , 12 " ) , 
 " 276 : " + getCheckMessage ( MSG _ KEY _ BLOCK , " 275 , 279 " , 11 , " 16 , 12 " ) , 
 " 281 : " + getCheckMessage ( MSG _ KEY _ SINGLE , " 280 , 282 " , 11 , " 16 , 12 " ) , 
 + " 311 : " + getCheckMessage ( MSG _ KEY _ SINGLE , " 312 " , 0 , " 8 " ) , 
 } ; 
 final String testInputFile = " InputCommentsIndentationInSwitchBlock . java " ; 
 verify ( checkConfig , getPath ( testInputFile ) , expected ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 index 062e338 . . 90b10fb 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 @ @ - 709 , 6 + 709 , 11 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { 
 " 93 : " + getCheckMessage ( MSG _ ERROR , " switch rcurly " , 10 , 8 ) , 
 " 95 : " + getCheckMessage ( MSG _ ERROR , " switch lcurly " , 10 , 8 ) , 
 " 96 : " + getCheckMessage ( MSG _ ERROR , " switch rcurly " , 6 , 8 ) , 
 + " 99 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " case " , 8 , 12 ) , 
 + " 100 : " + getCheckMessage ( MSG _ ERROR , " if " , 12 , 16 ) , 
 + " 101 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " if " , 16 , 20 ) , 
 + " 102 : " + getCheckMessage ( MSG _ ERROR , " else " , 12 , 16 ) , 
 + " 103 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " else " , 16 , 20 ) , 
 } ; 
 verifyWarns ( checkConfig , fileName , expected ) ; 
 } 
 @ @ - 1095 , 6 + 1100 , 8 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { 
 " 257 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " if " , 0 , 12 ) , 
 " 258 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " if " , 0 , 12 ) , 
 " 259 : " + getCheckMessage ( MSG _ ERROR , " if rcurly " , 0 , 8 ) , 
 + " 260 : " + getCheckMessage ( MSG _ ERROR , " if " , 0 , 8 ) , 
 + " 262 : " + getCheckMessage ( MSG _ ERROR , " else " , 0 , 8 ) , 
 } ; 
 verifyWarns ( checkConfig , fileName , expected ) ; 
 } 
 @ @ - 1203 , 6 + 1210 , 18 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { 
 " 71 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 14 , 16 ) , 
 " 72 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 10 , 12 ) , 
 " 81 : " + getCheckMessage ( MSG _ ERROR , " for rparen " , 12 , 8 ) , 
 + " 86 : " + getCheckMessage ( MSG _ ERROR , " method def modifier " , 2 , 4 ) , 
 + " 87 : " + getCheckMessage ( MSG _ ERROR , " for " , 4 , 8 ) , 
 + " 88 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 8 , 12 ) , 
 + " 89 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 6 , 12 ) , 
 + " 90 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " method call " , 8 , 16 ) , 
 + " 92 : " + getCheckMessage ( MSG _ ERROR , " for " , 0 , 8 ) , 
 + " 93 : " + getCheckMessage ( MSG _ ERROR , " for lparen " , 0 , 8 ) , 
 + " 94 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 0 , 12 ) , 
 + " 95 : " + getCheckMessage ( MSG _ ERROR , " ; " , 0 , 4 ) , 
 + " 96 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 0 , 12 ) , 
 + " 97 : " + getCheckMessage ( MSG _ ERROR , " ; " , 0 , 4 ) , 
 + " 98 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 0 , 12 ) , 
 } ; 
 verifyWarns ( checkConfig , fileName , expected ) ; 
 } 
 @ @ - 1701 , 6 + 1720 , 17 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testPackageDeclaration4 ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; 
 + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 + final String [ ] expected = { 
 + " 2 : " + getCheckMessage ( MSG _ ERROR , " com " , 0 , 4 ) , 
 + " 3 : " + getCheckMessage ( MSG _ ERROR , " checks " , 0 , 4 ) , 
 + } ; 
 + verifyWarns ( checkConfig , getPath ( " InputIndentationPackageDeclaration4 . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testLambda1 ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; 
 checkConfig . addAttribute ( " tabWidth " , " 2 " ) ; 
 @ @ - 1974 , 6 + 2004 , 19 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { 
 verifyWarns ( checkConfig , getPath ( " InputIndentationEmptyArray . java " ) , expected ) ; 
 } 
 
 + @ Test 
 + public void testNewHandler ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; 
 + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 + final String [ ] expected = { 
 + " 8 : " + getCheckMessage ( MSG _ ERROR , " Object " , 0 , 12 ) , 
 + " 10 : " + getCheckMessage ( MSG _ ERROR , " ( " , 0 , 12 ) , 
 + " 13 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " operator new " , 0 , 8 ) , 
 + " 15 : " + getCheckMessage ( MSG _ ERROR , " operator new lparen " , 0 , 8 ) , 
 + } ; 
 + verifyWarns ( checkConfig , getPath ( " InputIndentationNewHandler . java " ) , expected ) ; 
 + } 
 + 
 private static final class IndentAudit implements AuditListener { 
 
 private final IndentComment [ ] comments ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationCommentIsAtTheEndOfBlock . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationCommentIsAtTheEndOfBlock . java 
 index 29aecdf . . 89cdaa5 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationCommentIsAtTheEndOfBlock . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationCommentIsAtTheEndOfBlock . java 
 @ @ - 570 , 6 + 570 , 19 @ @ public class InputCommentsIndentationCommentIsAtTheEndOfBlock { 
 / / comment 
 } 
 
 + int foo76 ( ) { 
 + return 0 ; 
 + / * test 
 + * test * / 
 + / / test 
 + } 
 + 
 + void foo77 ( ) { 
 + try { 
 + / * CHECKSTYLE : OFF * / } catch ( Exception e ) { 
 + } 
 + } 
 + 
 / / We almost reached the end of the class here . 
 } 
 / / The END of the class . 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationInSwitchBlock . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationInSwitchBlock . java 
 index 1214024 . . 20dd4b4 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationInSwitchBlock . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / commentsindentation / InputCommentsIndentationInSwitchBlock . java 
 @ @ - 302 , 4 + 302 , 22 @ @ public class InputCommentsIndentationInSwitchBlock { 
 break ; 
 } 
 } 
 + 
 + public void foo14 ( ) { 
 + int a = 1 ; 
 + switch ( a ) { 
 + case 1 : 
 + default : 
 + / / violation 
 + } 
 + } 
 + 
 + public void foo15 ( ) { 
 + int a = 1 ; 
 + switch ( a ) { 
 + case 1 : 
 + default : 
 + / / violation 
 + } 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidForIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidForIndent . java 
 index ae8e09f . . 78a6623 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidForIndent . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidForIndent . java 
 @ @ - 83 , 4 + 83 , 19 @ @ public class InputIndentationInvalidForIndent { / / indent : 0 exp : 0 
 } / / indent : 8 exp : 8 
 } / / indent : 4 exp : 4 
 
 + public void doSmth ( ) { / / indent : 2 exp : 4 warn 
 + for ( int h / / indent : 4 exp : 8 warn 
 + : new int [ ] { } ) { / / indent : 8 exp : 12 warn 
 + System . getProperty ( / / indent : 6 exp : 12 warn 
 + " someString " ) ; / / indent : 8 exp : 16 warn 
 + } / / indent : 8 exp : 8 
 + for / / indent : 0 exp : 8 warn 
 + ( / / indent : 0 exp : 8 warn 
 + int i = 0 / / indent : 0 exp : 12 warn 
 + ; / / indent : 0 exp : 4 warn 
 + i < 5 / / indent : 0 exp : 12 warn 
 + ; / / indent : 0 exp : 4 warn 
 + i + + ) { } / / indent : 0 exp : 12 warn 
 + } / / indent : 4 exp : 4 
 + 
 } / / indent : 0 exp : 0 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidIfIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidIfIndent . java 
 index b62efa6 . . 0521407 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidIfIndent . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidIfIndent . java 
 @ @ - 257 , 6 + 257 , 10 @ @ if ( test / / indent : 0 exp : 8 warn 
 | | test ) { / / indent : 0 exp : 12 warn 
 System . getProperty ( " blah " ) ; / / indent : 0 exp : 12 warn 
 } / / indent : 0 exp : 8 warn 
 + if ( test ) / / indent : 0 exp : 8 warn 
 + System . getProperty ( " blah " ) ; / / indent : 0 exp : 0 
 + else / / indent : 0 exp : 8 warn 
 + System . getProperty ( " blah " ) ; / / indent : 0 exp : 0 
 
 } / / indent : 4 exp : 4 
 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidSwitchIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidSwitchIndent . java 
 index bfb6ceb . . 403f726 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidSwitchIndent . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationInvalidSwitchIndent . java 
 @ @ - 95 , 6 + 95 , 14 @ @ public class InputIndentationInvalidSwitchIndent { / / indent : 0 exp : 0 
 { / / indent : 10 exp : 8 warn 
 } / / indent : 6 exp : 8 warn 
 
 + switch ( s ) { / / indent : 8 exp : 8 
 + 	 case 1 : / / indent : 8 exp : 12 warn 
 + 	 	 if ( true ) / / indent : 12 exp : 16 warn 
 + 	 	 	 break ; / / indent : 16 exp : 20 warn 
 + 	 	 else / / indent : 12 exp : 16 warn 
 + 	 	 	 break ; / / indent : 16 exp : 20 warn 
 + } / / indent : 8 exp : 8 
 + 
 } / / indent : 4 exp : 4 
 
 } / / indent : 0 exp : 0 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationNewHandler . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationNewHandler . java 
 new file mode 100644 
 index 0000000 . . f7ddc0b 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationNewHandler . java 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . indentation . indentation ; / / indent : 0 exp : 0 
 + 
 + public class InputIndentationNewHandler / / indent : 0 exp : 0 
 + { / / indent : 0 exp : 0 
 + public void test ( ) { / / indent : 4 exp : 4 
 + Object o = new Object ( ) ; / / indent : 8 exp : 8 
 + Object p = new / / indent : 8 exp : 8 
 + Object ( ) ; / / indent : 0 exp : 12 warn 
 + Object q = new Object / / indent : 8 exp : 8 
 + ( ) ; / / indent : 0 exp : 12 warn 
 + o = new Integer ( " " . indexOf ( " 5 " ) ) ; / / indent : 8 exp : 8 
 + o = new / / indent : 8 exp : 8 
 + Integer ( " " . indexOf ( " 5 " ) ) ; / / indent : 0 exp : 8 warn 
 + o = new Integer / / indent : 8 exp : 8 
 + ( " " . indexOf ( " 5 " ) ) ; / / indent : 0 exp : 8 warn 
 + } / / indent : 4 exp : 4 
 + } / / indent : 0 exp : 0 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationPackageDeclaration4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationPackageDeclaration4 . java 
 new file mode 100644 
 index 0000000 . . 9391288 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationPackageDeclaration4 . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + package / / indent : 0 exp : > = 0 
 + com . puppycrawl . tools . checkstyle . / / indent : 0 exp : 4 warn 
 + checks . indentation . indentation ; / / indent : 0 exp : 4 warn 
 + 
 + public class InputIndentationPackageDeclaration4 { } / / indent : 0 exp : 0

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index cba0a8c . . 295f33a 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 202 , 7 + 202 , 7 @ @ 
 < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > 
 < maven . site . plugin . version > 3 . 7 . 1 < / maven . site . plugin . version > 
 < maven . spotbugs . plugin . version > 3 . 1 . 7 < / maven . spotbugs . plugin . version > 
 - < maven . pmd . plugin . version > 3 . 10 . 0 < / maven . pmd . plugin . version > 
 + < maven . pmd . plugin . version > 3 . 11 . 0 < / maven . pmd . plugin . version > 
 < pmd . version > 6 . 6 . 0 < / pmd . version > 
 < maven . jacoco . plugin . version > 0 . 8 . 2 < / maven . jacoco . plugin . version > 
 < powermock . version > 2 . 0 . 0 - beta . 5 < / powermock . version >
