BLEU SCORE: 0.519087769811935

TEST MSG: [ maven - release - plugin ] prepare for next development iteration
GENERATED MSG: [ maven - release - plugin ] prepare release checkstyle - 6 . 18

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index b939618 . . 93d3b93 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 22 , 7 + 22 , 7 @ @ <nl> <nl> < groupId > com . puppycrawl . tools < / groupId > <nl> < artifactId > checkstyle < / artifactId > <nl> - < version > 6 . 18 < / version > <nl> + < version > 6 . 19 - SNAPSHOT < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > checkstyle < / name >
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index efabc01 . . e990b26 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 399 , 6 + 399 , 7 @ @ <nl> < module name = " EmptyForIteratorPad " / > <nl> < module name = " EmptyLineSeparator " > <nl> < property name = " allowNoEmptyLineBetweenFields " value = " true " / > <nl> + < property name = " allowMultipleEmptyLinesInsideClassMembers " value = " false " / > <nl> < / module > <nl> < module name = " GenericWhitespace " / > <nl> < module name = " MethodParamPad " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java <nl> index 0274169 . . caccf1c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java <nl> @ @ - 19 , 6 + 19 , 9 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + <nl> import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> @ @ - 142 , 6 + 145 , 45 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> * <nl> + * < p > <nl> + * An example how to disallow multiple empty line inside methods , constructors , etc . : <nl> + * < / p > <nl> + * < pre > <nl> + * & lt ; module name = " EmptyLineSeparator " & gt ; <nl> + * & lt ; property name = " allowMultipleEmptyLinesInsideClassMembers " value = " false " / & gt ; <nl> + * & lt ; / module & gt ; <nl> + * < / pre > <nl> + * <nl> + * < p > The check is valid only for statements that have body : <nl> + * { @ link TokenTypes # CLASS _ DEF } , <nl> + * { @ link TokenTypes # INTERFACE _ DEF } , <nl> + * { @ link TokenTypes # ENUM _ DEF } , <nl> + * { @ link TokenTypes # STATIC _ INIT } , <nl> + * { @ link TokenTypes # INSTANCE _ INIT } , <nl> + * { @ link TokenTypes # METHOD _ DEF } , <nl> + * { @ link TokenTypes # CTOR _ DEF } <nl> + * < / p > <nl> + * < p > <nl> + * Example of declarations with multiple empty lines inside method : <nl> + * < / p > <nl> + * <nl> + * < pre > <nl> + * / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + * / / HEADER <nl> + * / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + * <nl> + * package com . puppycrawl . tools . checkstyle . whitespace ; <nl> + * <nl> + * class Foo <nl> + * { <nl> + * <nl> + * public void foo ( ) { <nl> + * <nl> + * <nl> + * System . out . println ( 1 ) ; / / violation since method has 2 empty lines subsequently <nl> + * } <nl> + * } <nl> + * < / pre > <nl> * @ author maxvetrenko <nl> * @ author < a href = " mailto : nesterenko - aleksey @ list . ru " > Aleksey Nesterenko < / a > <nl> * / <nl> @ @ - 167 , 12 + 209 , 22 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { <nl> public static final String MSG _ MULTIPLE _ LINES _ AFTER = <nl> " empty . line . separator . multiple . lines . after " ; <nl> <nl> + / * * <nl> + * A key is pointing to the warning message empty . line . separator . multiple . lines . inside <nl> + * in " messages . properties " file . <nl> + * / <nl> + public static final String MSG _ MULTIPLE _ LINES _ INSIDE = <nl> + " empty . line . separator . multiple . lines . inside " ; <nl> + <nl> / * * Allows no empty line between fields . * / <nl> private boolean allowNoEmptyLineBetweenFields ; <nl> <nl> / * * Allows multiple empty lines between class members . * / <nl> private boolean allowMultipleEmptyLines = true ; <nl> <nl> + / * * Allows multiple empty lines inside class members . * / <nl> + private boolean allowMultipleEmptyLinesInsideClassMembers = true ; <nl> + <nl> / * * <nl> * Allow no empty line between fields . <nl> * @ param allow <nl> @ @ - 190 , 6 + 242 , 14 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { <nl> allowMultipleEmptyLines = allow ; <nl> } <nl> <nl> + / * * <nl> + * Allow multiple empty lines inside class members . <nl> + * @ param allow User ' s value . <nl> + * / <nl> + public void setAllowMultipleEmptyLinesInsideClassMembers ( boolean allow ) { <nl> + allowMultipleEmptyLinesInsideClassMembers = allow ; <nl> + } <nl> + <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> return getAcceptableTokens ( ) ; <nl> @ @ - 221 , 6 + 281 , 9 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { <nl> if ( hasMultipleLinesBefore ( ast ) ) { <nl> log ( ast . getLineNo ( ) , MSG _ MULTIPLE _ LINES , ast . getText ( ) ) ; <nl> } <nl> + if ( ! allowMultipleEmptyLinesInsideClassMembers ) { <nl> + processMultipleLinesInside ( ast ) ; <nl> + } <nl> <nl> final DetailAST nextToken = ast . getNextSibling ( ) ; <nl> if ( nextToken ! = null ) { <nl> @ @ - 250 , 6 + 313 , 77 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Log violation in case there are multiple empty lines inside constructor , <nl> + * initialization block or method . <nl> + * @ param ast the ast to check . <nl> + * / <nl> + private void processMultipleLinesInside ( DetailAST ast ) { <nl> + final int astType = ast . getType ( ) ; <nl> + if ( isClassMemberBlock ( astType ) ) { <nl> + final List < Integer > emptyLines = getEmptyLines ( ast ) ; <nl> + final List < Integer > emptyLinesToLog = getEmptyLinesToLog ( emptyLines ) ; <nl> + <nl> + for ( Integer lineNo : emptyLinesToLog ) { <nl> + / / Checkstyle counts line numbers from 0 but IDE from 1 <nl> + log ( lineNo + 1 , MSG _ MULTIPLE _ LINES _ INSIDE ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Whether the AST is a class member block . <nl> + * @ param astType the AST to check . <nl> + * @ return true if the AST is a class member block . <nl> + * / <nl> + private static boolean isClassMemberBlock ( int astType ) { <nl> + return astType = = TokenTypes . STATIC _ INIT <nl> + | | astType = = TokenTypes . INSTANCE _ INIT <nl> + | | astType = = TokenTypes . METHOD _ DEF <nl> + | | astType = = TokenTypes . CTOR _ DEF ; <nl> + } <nl> + <nl> + / * * <nl> + * Get list of empty lines . <nl> + * @ param ast the ast to check . <nl> + * @ return list of line numbers for empty lines . <nl> + * / <nl> + private List < Integer > getEmptyLines ( DetailAST ast ) { <nl> + final DetailAST lastToken = ast . getLastChild ( ) . getLastChild ( ) ; <nl> + int lastTokenLineNo = 0 ; <nl> + if ( lastToken ! = null ) { <nl> + lastTokenLineNo = lastToken . getLineNo ( ) ; <nl> + } <nl> + final List < Integer > emptyLines = new ArrayList < > ( ) ; <nl> + final FileContents fileContents = getFileContents ( ) ; <nl> + <nl> + for ( int lineNo = ast . getLineNo ( ) ; lineNo < lastTokenLineNo ; lineNo + + ) { <nl> + if ( fileContents . lineIsBlank ( lineNo ) ) { <nl> + emptyLines . add ( lineNo ) ; <nl> + } <nl> + } <nl> + return emptyLines ; <nl> + } <nl> + <nl> + / * * <nl> + * Get list of empty lines to log . <nl> + * @ param emptyLines list of empty lines . <nl> + * @ return list of empty lines to log . <nl> + * / <nl> + private static List < Integer > getEmptyLinesToLog ( List < Integer > emptyLines ) { <nl> + final List < Integer > emptyLinesToLog = new ArrayList < > ( ) ; <nl> + if ( emptyLines . size ( ) > 1 ) { <nl> + int previousEmptyLineNo = emptyLines . get ( 0 ) ; <nl> + for ( int emptyLineNo : emptyLines ) { <nl> + if ( previousEmptyLineNo + 1 = = emptyLineNo ) { <nl> + emptyLinesToLog . add ( emptyLineNo ) ; <nl> + } <nl> + previousEmptyLineNo = emptyLineNo ; <nl> + } <nl> + } <nl> + return emptyLinesToLog ; <nl> + } <nl> + <nl> + / * * <nl> * Whether the token has not allowed multiple empty lines before . <nl> * @ param ast the ast to check . <nl> * @ return true if the token has not allowed multiple empty lines before . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages . properties <nl> index b306a8c . . d981f3a 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages . properties <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> empty . line . separator = ' ' { 0 } ' ' should be separated from previous statement . <nl> empty . line . separator . multiple . lines = ' ' { 0 } ' ' has more than 1 empty lines before . <nl> empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' has more than 1 empty lines after . <nl> + empty . line . separator . multiple . lines . inside = There is more than 1 empty line one after another . <nl> <nl> containsTab = Line contains a tab character . <nl> file . containsTab = File contains tab characters ( this is the first instance ) . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ de . properties <nl> index 442b7d6 . . 8e15364 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ de . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ de . properties <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> empty . line . separator = ' ' { 0 } ' ' sollte vom vorangehenden Ausdruck getrennt stehen . <nl> empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' hat mehr als 1 Leerzeilen nach . <nl> + empty . line . separator . multiple . lines . inside = Es gibt mehr als 1 leere Zeile nacheinander . <nl> <nl> containsTab = Zeile enth ä lt ein TAB - Zeichen <nl> file . containsTab = Datei enth ä lt Tabulatorzeichen ( diese Stelle ist das erste Vorkommnen ) . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ es . properties <nl> index cdadaf6 . . 40b9da4 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ es . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ es . properties <nl> @ @ - 14 , 6 + 14 , 7 @ @ ws . typeCast = ' ' conversi ó n de tipos ' ' no est á seguido de espacio en blanco . <nl> empty . line . separator = ' ' { 0 } ' ' debe ser separado de la declaraci ó n anterior . <nl> empty . line . separator . multiple . lines = ' ' { 0 } ' ' cuenta con m á s de 1 l í neas vac í as antes . <nl> empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' cuenta con m á s de 1 l í neas vac í as despu é s . <nl> + empty . line . separator . multiple . lines . inside = Hay m á s de 1 una l í nea vac í a despu é s de otra . <nl> file . containsTab = Archivo contiene caracteres de tabulaci ó n ( este es el primer ejemplo ) . <nl> no . line . wrap = { 0 } declaraci ó n no debe ser la l í nea envuelto . <nl> ws . illegalFollow = ' ' { 0 } ' ' es seguido por un car á cter ilegal . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fi . properties <nl> index 449ee19 . . 4917798 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fi . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fi . properties <nl> @ @ - 15 , 5 + 15 , 6 @ @ ws . illegalFollow = ' ' { 0 } ' ' seuraa laiton merkki . <nl> empty . line . separator = ' ' { 0 } ' ' olisi erotettava edellisen selonteon . <nl> empty . line . separator . multiple . lines = ' ' { 0 } ' ' on yli 1 tyhj ä ä rivi ä ennen . <nl> empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' on yli 1 tyhj ä ä rivi ä j ä lkeen . <nl> + empty . line . separator . multiple . lines . inside = On enemm ä n kuin 1 tyhj ä rivi yksi toisensa j ä lkeen . <nl> file . containsTab = Tiedosto sis ä lt ä ä sarkainmerkeill ä ( t ä m ä on ensisijaisesti ) . <nl> no . line . wrap = { 0 } lausunto ei pit ä isi olla linja - k ä ä ritty . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fr . properties <nl> index ced7345 . . 5db0305 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fr . properties <nl> @ @ - 15 , 5 + 15 , 6 @ @ ws . illegalFollow = ' ' { 0 } ' ' est suivi par un caract è re ill é gal . <nl> empty . line . separator = ' ' { 0 } ' ' doit ê tre s é par é de la d é claration pr é c é dente . <nl> empty . line . separator . multiple . lines = ' ' { 0 } ' ' a plus de 1 lignes vides avant . <nl> empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' compte plus de 1 lignes vides apr è s . <nl> + empty . line . separator . multiple . lines . inside = Il y a plus de 1 ligne vide un apr è s l ' autre . <nl> file . containsTab = Fichier contient des caract è res de tabulation ( ce qui est le premier exemple ) . <nl> no . line . wrap = { 0 } d é claration ne devrait pas ê tre sur des lignes envelopp é . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ ja . properties <nl> index 79984b3 . . d5d7985 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ ja . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ ja . properties <nl> @ @ - 15 , 5 + 15 , 6 @ @ ws . illegalFollow = が ' ' { 0 } ' ' 不 正 な 文 字 が 続 い て い ま す 。 <nl> empty . line . separator = ' ' { 0 } ' ' 前 の 文 か ら 分 離 す る 必 要 が あ り ま す 。 <nl> empty . line . separator . multiple . lines = ' ' { 0 } ' ' の 前 に 1 以 上 の 空 行 を 持 っ て い ま す 。 <nl> empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' 後 の 1 以 上 の 空 行 を 持 っ て い ま す 。 <nl> + empty . line . separator . multiple . lines . inside = 別 の 後 に 1 以 上 の 空 行 の 1 が あ り ま す 。 <nl> file . containsTab = フ ァ イ ル が （ こ れ が 最 初 の イ ン ス タ ン ス で あ る ） タ ブ 文 字 が 含 ま れ て い ま す 。 <nl> no . line . wrap = { 0 } 文 は 、 行 ラ ッ プ さ れ て は な り ま せ ん 。 <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ pt . properties <nl> index d9f8773 . . 83df7ab 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ pt . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ pt . properties <nl> @ @ - 15 , 5 + 15 , 6 @ @ ws . illegalFollow = ' ' { 0 } ' ' é seguido por um car á cter ilegal . <nl> empty . line . separator = ' ' { 0 } ' ' deve ser separada da declara ç ã o anterior . <nl> empty . line . separator . multiple . lines = ' ' { 0 } ' ' tem mais de 1 linhas vazias antes . <nl> empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' tem mais de 1 linhas vazias depois . <nl> + empty . line . separator . multiple . lines . inside = H á mais de um vazio linha um ap ó s o outro . <nl> file . containsTab = Arquivo cont é m caracteres de tabula ç ã o ( esta é a primeira inst â ncia ) . <nl> no . line . wrap = { 0 } afirma ç ã o n ã o deve ser linha - embrulhado . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ tr . properties <nl> index c5b27c3 . . c9d4e15 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ tr . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ tr . properties <nl> @ @ - 19 , 4 + 19 , 5 @ @ ws . typeCast = ' ' t ü r ü d ö n ü ş t ü rme ' ' ifadesinden sonra bo ş luk kullan ı lmam ı ş <nl> empty . line . separator = { 0 } ' Bir ö nceki deyimi ayr ı lmal ı d ı r . <nl> empty . line . separator . multiple . lines = { 0 } daha ö nce en fazla 1 bo ş hatlar ı vard ı r . <nl> empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' sonra 1 ' den fazla bo ş hatlar ı vard ı r . <nl> + empty . line . separator . multiple . lines . inside = birbiri ard ı na 1 ' den fazla bo ş sat ı r biri var . <nl> no . line . wrap = { 0 } ifadesi hatt ı sar ı l ı olmamal ı d ı r . <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ zh . properties <nl> index f70fe29 . . 3186bb6 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ zh . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ zh . properties <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> empty . line . separator = ' ' { 0 } ' 前 应 有 空 行 。 <nl> empty . line . separator . multiple . lines = ' ' { 0 } ' ' 前 只 应 有 一 个 空 行 。 <nl> empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' 后 只 应 有 一 个 空 行 。 <nl> + empty . line . separator . multiple . lines . inside = 还 有 陆 续 超 过 1 空 行 之 一 。 <nl> <nl> containsTab = 行 内 含 有 制 表 符 tab 。 <nl> file . containsTab = 文 件 含 有 制 表 符 tab （ 这 只 是 第 一 例 ） 。 <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java <nl> index c2ed6cf . . e00cbff 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheck . MSG _ MULTIPLE _ LINES ; <nl> import static com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheck . MSG _ MULTIPLE _ LINES _ AFTER ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheck . MSG _ MULTIPLE _ LINES _ INSIDE ; <nl> import static com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheck . MSG _ SHOULD _ BE _ SEPARATED ; <nl> import static org . junit . Assert . assertArrayEquals ; <nl> <nl> @ @ - 164 , 4 + 165 , 30 @ @ public class EmptyLineSeparatorCheckTest <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , getPath ( " InputPrePreviousLineEmptiness . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testDisAllowMultipleEmptyLinesInsideClassMembers ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( EmptyLineSeparatorCheck . class ) ; <nl> + checkConfig . addAttribute ( " allowMultipleEmptyLinesInsideClassMembers " , " false " ) ; <nl> + final String [ ] expected = { <nl> + " 27 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , <nl> + " 39 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , <nl> + " 45 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , <nl> + " 50 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , <nl> + " 55 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , <nl> + " 56 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , <nl> + } ; <nl> + verify ( checkConfig , <nl> + getPath ( " InputEmptyLineSeparatorMultipleEmptyLinesInside . java " ) , <nl> + expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testAllowMultipleEmptyLinesInsideClassMembers ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( EmptyLineSeparatorCheck . class ) ; <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , <nl> + getPath ( " InputEmptyLineSeparatorMultipleEmptyLinesInside . java " ) , <nl> + expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyLineSeparatorMultipleEmptyLinesInside . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyLineSeparatorMultipleEmptyLinesInside . java <nl> new file mode 100644 <nl> index 0000000 . . 68d2f75 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyLineSeparatorMultipleEmptyLinesInside . java <nl> @ @ - 0 , 0 + 1 , 59 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2016 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> + <nl> + public abstract class InputEmptyLineSeparatorMultipleEmptyLinesInside <nl> + { <nl> + public InputEmptyLineSeparatorMultipleEmptyLinesInside ( ) { <nl> + / / empty lines below should cause a violation <nl> + <nl> + <nl> + } <nl> + <nl> + private int counter ; <nl> + <nl> + private Object obj = null ; <nl> + <nl> + abstract int generateSrc ( String s ) ; <nl> + <nl> + static { <nl> + / / empty lines below should cause a violation <nl> + <nl> + <nl> + } <nl> + <nl> + { <nl> + / / empty lines below should cause a violation <nl> + <nl> + <nl> + } <nl> + <nl> + private static void foo ( ) { <nl> + <nl> + <nl> + / / 1 empty line above should cause a violation <nl> + <nl> + / / 1 empty line above should not cause a violation <nl> + <nl> + <nl> + <nl> + / / 2 empty lines above should cause violations <nl> + } <nl> + } <nl> diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml <nl> index f531cf7 . . d4d03d4 100644 <nl> - - - a / src / xdocs / config _ whitespace . xml <nl> + + + b / src / xdocs / config _ whitespace . xml <nl> @ @ - 238 , 6 + 238 , 12 @ @ for ( Iterator foo = very . long . line . iterator ( ) ; <nl> < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > <nl> < td > true < / td > <nl> < / tr > <nl> + < tr > <nl> + < td > allowMultipleEmptyLinesInsideClassMembers < / td > <nl> + < td > Allow multiple empty lines inside class members < / td > <nl> + < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > <nl> + < td > true < / td > <nl> + < / tr > <nl> < tr > <nl> < td > tokens < / td > <nl> < td > tokens to check < / td > <nl> @ @ - 328 , 6 + 334 , 45 @ @ class Foo <nl> & lt ; property name = " allowNoEmptyLineBetweenFields " value = " true " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> + < p > <nl> + An example how to disallow multiple empty lines inside constructor , initialization block and method : <nl> + < / p > <nl> + < source > <nl> + & lt ; module name = " EmptyLineSeparator " & gt ; <nl> + & lt ; property name = " allowMultipleEmptyLinesInsideClassMembers " value = " false " / & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + <nl> + < p > <nl> + The check is valid only for statements that have body : <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > CLASS _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > INTERFACE _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > ENUM _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > STATIC _ INIT < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INSTANCE _ INIT " > INSTANCE _ INIT < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > METHOD _ DEF < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CTOR _ DEF " > CTOR _ DEF < / a > , <nl> + < / p > <nl> + < p > <nl> + Example of declarations with multiple empty lines inside method : <nl> + < / p > <nl> + < source > <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / HEADER <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . whitespace ; <nl> + <nl> + class Foo <nl> + { <nl> + <nl> + public void foo ( ) { <nl> + < br / > <nl> + <nl> + System . out . println ( 1 ) ; / / violation since method has 2 empty lines subsequently <nl> + } <nl> + } <nl> + < / source > <nl> < / subsection > <nl> <nl> < subsection name = " Example of Usage " > <nl> @ @ - 357 , 6 + 402 , 10 @ @ class Foo <nl> < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources % 2Fcom % 2Fpuppycrawl % 2Ftools % 2Fcheckstyle % 2Fchecks % 2Fwhitespace + filename % 3Amessages * . properties + repo % 3Acheckstyle % 2Fcheckstyle + % 22empty . line . separator . multiple . lines . after % 22 " > <nl> empty . line . separator . multiple . lines . after < / a > <nl> < / li > <nl> + < li > <nl> + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources % 2Fcom % 2Fpuppycrawl % 2Ftools % 2Fcheckstyle % 2Fchecks % 2Fwhitespace + filename % 3Amessages * . properties + repo % 3Acheckstyle % 2Fcheckstyle + % 22empty . line . separator . multiple . lines . inside % 22 " > <nl> + empty . line . separator . multiple . lines . inside < / a > <nl> + < / li > <nl> < / ul > <nl> < p > <nl> All messages can be customized if the default message doesn ' t suite you .

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index b939618 . . 93d3b93 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 22 , 7 + 22 , 7 @ @ 
 
 < groupId > com . puppycrawl . tools < / groupId > 
 < artifactId > checkstyle < / artifactId > 
 - < version > 6 . 18 < / version > 
 + < version > 6 . 19 - SNAPSHOT < / version > 
 < packaging > jar < / packaging > 
 
 < name > checkstyle < / name >

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index efabc01 . . e990b26 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 399 , 6 + 399 , 7 @ @ 
 < module name = " EmptyForIteratorPad " / > 
 < module name = " EmptyLineSeparator " > 
 < property name = " allowNoEmptyLineBetweenFields " value = " true " / > 
 + < property name = " allowMultipleEmptyLinesInsideClassMembers " value = " false " / > 
 < / module > 
 < module name = " GenericWhitespace " / > 
 < module name = " MethodParamPad " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java 
 index 0274169 . . caccf1c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java 
 @ @ - 19 , 6 + 19 , 9 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 + 
 import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 @ @ - 142 , 6 + 145 , 45 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 * 
 + * < p > 
 + * An example how to disallow multiple empty line inside methods , constructors , etc . : 
 + * < / p > 
 + * < pre > 
 + * & lt ; module name = " EmptyLineSeparator " & gt ; 
 + * & lt ; property name = " allowMultipleEmptyLinesInsideClassMembers " value = " false " / & gt ; 
 + * & lt ; / module & gt ; 
 + * < / pre > 
 + * 
 + * < p > The check is valid only for statements that have body : 
 + * { @ link TokenTypes # CLASS _ DEF } , 
 + * { @ link TokenTypes # INTERFACE _ DEF } , 
 + * { @ link TokenTypes # ENUM _ DEF } , 
 + * { @ link TokenTypes # STATIC _ INIT } , 
 + * { @ link TokenTypes # INSTANCE _ INIT } , 
 + * { @ link TokenTypes # METHOD _ DEF } , 
 + * { @ link TokenTypes # CTOR _ DEF } 
 + * < / p > 
 + * < p > 
 + * Example of declarations with multiple empty lines inside method : 
 + * < / p > 
 + * 
 + * < pre > 
 + * / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + * / / HEADER 
 + * / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + * 
 + * package com . puppycrawl . tools . checkstyle . whitespace ; 
 + * 
 + * class Foo 
 + * { 
 + * 
 + * public void foo ( ) { 
 + * 
 + * 
 + * System . out . println ( 1 ) ; / / violation since method has 2 empty lines subsequently 
 + * } 
 + * } 
 + * < / pre > 
 * @ author maxvetrenko 
 * @ author < a href = " mailto : nesterenko - aleksey @ list . ru " > Aleksey Nesterenko < / a > 
 * / 
 @ @ - 167 , 12 + 209 , 22 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { 
 public static final String MSG _ MULTIPLE _ LINES _ AFTER = 
 " empty . line . separator . multiple . lines . after " ; 
 
 + / * * 
 + * A key is pointing to the warning message empty . line . separator . multiple . lines . inside 
 + * in " messages . properties " file . 
 + * / 
 + public static final String MSG _ MULTIPLE _ LINES _ INSIDE = 
 + " empty . line . separator . multiple . lines . inside " ; 
 + 
 / * * Allows no empty line between fields . * / 
 private boolean allowNoEmptyLineBetweenFields ; 
 
 / * * Allows multiple empty lines between class members . * / 
 private boolean allowMultipleEmptyLines = true ; 
 
 + / * * Allows multiple empty lines inside class members . * / 
 + private boolean allowMultipleEmptyLinesInsideClassMembers = true ; 
 + 
 / * * 
 * Allow no empty line between fields . 
 * @ param allow 
 @ @ - 190 , 6 + 242 , 14 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { 
 allowMultipleEmptyLines = allow ; 
 } 
 
 + / * * 
 + * Allow multiple empty lines inside class members . 
 + * @ param allow User ' s value . 
 + * / 
 + public void setAllowMultipleEmptyLinesInsideClassMembers ( boolean allow ) { 
 + allowMultipleEmptyLinesInsideClassMembers = allow ; 
 + } 
 + 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 return getAcceptableTokens ( ) ; 
 @ @ - 221 , 6 + 281 , 9 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { 
 if ( hasMultipleLinesBefore ( ast ) ) { 
 log ( ast . getLineNo ( ) , MSG _ MULTIPLE _ LINES , ast . getText ( ) ) ; 
 } 
 + if ( ! allowMultipleEmptyLinesInsideClassMembers ) { 
 + processMultipleLinesInside ( ast ) ; 
 + } 
 
 final DetailAST nextToken = ast . getNextSibling ( ) ; 
 if ( nextToken ! = null ) { 
 @ @ - 250 , 6 + 313 , 77 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Log violation in case there are multiple empty lines inside constructor , 
 + * initialization block or method . 
 + * @ param ast the ast to check . 
 + * / 
 + private void processMultipleLinesInside ( DetailAST ast ) { 
 + final int astType = ast . getType ( ) ; 
 + if ( isClassMemberBlock ( astType ) ) { 
 + final List < Integer > emptyLines = getEmptyLines ( ast ) ; 
 + final List < Integer > emptyLinesToLog = getEmptyLinesToLog ( emptyLines ) ; 
 + 
 + for ( Integer lineNo : emptyLinesToLog ) { 
 + / / Checkstyle counts line numbers from 0 but IDE from 1 
 + log ( lineNo + 1 , MSG _ MULTIPLE _ LINES _ INSIDE ) ; 
 + } 
 + } 
 + } 
 + 
 + / * * 
 + * Whether the AST is a class member block . 
 + * @ param astType the AST to check . 
 + * @ return true if the AST is a class member block . 
 + * / 
 + private static boolean isClassMemberBlock ( int astType ) { 
 + return astType = = TokenTypes . STATIC _ INIT 
 + | | astType = = TokenTypes . INSTANCE _ INIT 
 + | | astType = = TokenTypes . METHOD _ DEF 
 + | | astType = = TokenTypes . CTOR _ DEF ; 
 + } 
 + 
 + / * * 
 + * Get list of empty lines . 
 + * @ param ast the ast to check . 
 + * @ return list of line numbers for empty lines . 
 + * / 
 + private List < Integer > getEmptyLines ( DetailAST ast ) { 
 + final DetailAST lastToken = ast . getLastChild ( ) . getLastChild ( ) ; 
 + int lastTokenLineNo = 0 ; 
 + if ( lastToken ! = null ) { 
 + lastTokenLineNo = lastToken . getLineNo ( ) ; 
 + } 
 + final List < Integer > emptyLines = new ArrayList < > ( ) ; 
 + final FileContents fileContents = getFileContents ( ) ; 
 + 
 + for ( int lineNo = ast . getLineNo ( ) ; lineNo < lastTokenLineNo ; lineNo + + ) { 
 + if ( fileContents . lineIsBlank ( lineNo ) ) { 
 + emptyLines . add ( lineNo ) ; 
 + } 
 + } 
 + return emptyLines ; 
 + } 
 + 
 + / * * 
 + * Get list of empty lines to log . 
 + * @ param emptyLines list of empty lines . 
 + * @ return list of empty lines to log . 
 + * / 
 + private static List < Integer > getEmptyLinesToLog ( List < Integer > emptyLines ) { 
 + final List < Integer > emptyLinesToLog = new ArrayList < > ( ) ; 
 + if ( emptyLines . size ( ) > 1 ) { 
 + int previousEmptyLineNo = emptyLines . get ( 0 ) ; 
 + for ( int emptyLineNo : emptyLines ) { 
 + if ( previousEmptyLineNo + 1 = = emptyLineNo ) { 
 + emptyLinesToLog . add ( emptyLineNo ) ; 
 + } 
 + previousEmptyLineNo = emptyLineNo ; 
 + } 
 + } 
 + return emptyLinesToLog ; 
 + } 
 + 
 + / * * 
 * Whether the token has not allowed multiple empty lines before . 
 * @ param ast the ast to check . 
 * @ return true if the token has not allowed multiple empty lines before . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages . properties 
 index b306a8c . . d981f3a 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages . properties 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 empty . line . separator = ' ' { 0 } ' ' should be separated from previous statement . 
 empty . line . separator . multiple . lines = ' ' { 0 } ' ' has more than 1 empty lines before . 
 empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' has more than 1 empty lines after . 
 + empty . line . separator . multiple . lines . inside = There is more than 1 empty line one after another . 
 
 containsTab = Line contains a tab character . 
 file . containsTab = File contains tab characters ( this is the first instance ) . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ de . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ de . properties 
 index 442b7d6 . . 8e15364 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ de . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ de . properties 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 empty . line . separator = ' ' { 0 } ' ' sollte vom vorangehenden Ausdruck getrennt stehen . 
 empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' hat mehr als 1 Leerzeilen nach . 
 + empty . line . separator . multiple . lines . inside = Es gibt mehr als 1 leere Zeile nacheinander . 
 
 containsTab = Zeile enth ä lt ein TAB - Zeichen 
 file . containsTab = Datei enth ä lt Tabulatorzeichen ( diese Stelle ist das erste Vorkommnen ) . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ es . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ es . properties 
 index cdadaf6 . . 40b9da4 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ es . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ es . properties 
 @ @ - 14 , 6 + 14 , 7 @ @ ws . typeCast = ' ' conversi ó n de tipos ' ' no est á seguido de espacio en blanco . 
 empty . line . separator = ' ' { 0 } ' ' debe ser separado de la declaraci ó n anterior . 
 empty . line . separator . multiple . lines = ' ' { 0 } ' ' cuenta con m á s de 1 l í neas vac í as antes . 
 empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' cuenta con m á s de 1 l í neas vac í as despu é s . 
 + empty . line . separator . multiple . lines . inside = Hay m á s de 1 una l í nea vac í a despu é s de otra . 
 file . containsTab = Archivo contiene caracteres de tabulaci ó n ( este es el primer ejemplo ) . 
 no . line . wrap = { 0 } declaraci ó n no debe ser la l í nea envuelto . 
 ws . illegalFollow = ' ' { 0 } ' ' es seguido por un car á cter ilegal . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fi . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fi . properties 
 index 449ee19 . . 4917798 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fi . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fi . properties 
 @ @ - 15 , 5 + 15 , 6 @ @ ws . illegalFollow = ' ' { 0 } ' ' seuraa laiton merkki . 
 empty . line . separator = ' ' { 0 } ' ' olisi erotettava edellisen selonteon . 
 empty . line . separator . multiple . lines = ' ' { 0 } ' ' on yli 1 tyhj ä ä rivi ä ennen . 
 empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' on yli 1 tyhj ä ä rivi ä j ä lkeen . 
 + empty . line . separator . multiple . lines . inside = On enemm ä n kuin 1 tyhj ä rivi yksi toisensa j ä lkeen . 
 file . containsTab = Tiedosto sis ä lt ä ä sarkainmerkeill ä ( t ä m ä on ensisijaisesti ) . 
 no . line . wrap = { 0 } lausunto ei pit ä isi olla linja - k ä ä ritty . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fr . properties 
 index ced7345 . . 5db0305 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ fr . properties 
 @ @ - 15 , 5 + 15 , 6 @ @ ws . illegalFollow = ' ' { 0 } ' ' est suivi par un caract è re ill é gal . 
 empty . line . separator = ' ' { 0 } ' ' doit ê tre s é par é de la d é claration pr é c é dente . 
 empty . line . separator . multiple . lines = ' ' { 0 } ' ' a plus de 1 lignes vides avant . 
 empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' compte plus de 1 lignes vides apr è s . 
 + empty . line . separator . multiple . lines . inside = Il y a plus de 1 ligne vide un apr è s l ' autre . 
 file . containsTab = Fichier contient des caract è res de tabulation ( ce qui est le premier exemple ) . 
 no . line . wrap = { 0 } d é claration ne devrait pas ê tre sur des lignes envelopp é . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ ja . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ ja . properties 
 index 79984b3 . . d5d7985 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ ja . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ ja . properties 
 @ @ - 15 , 5 + 15 , 6 @ @ ws . illegalFollow = が ' ' { 0 } ' ' 不 正 な 文 字 が 続 い て い ま す 。 
 empty . line . separator = ' ' { 0 } ' ' 前 の 文 か ら 分 離 す る 必 要 が あ り ま す 。 
 empty . line . separator . multiple . lines = ' ' { 0 } ' ' の 前 に 1 以 上 の 空 行 を 持 っ て い ま す 。 
 empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' 後 の 1 以 上 の 空 行 を 持 っ て い ま す 。 
 + empty . line . separator . multiple . lines . inside = 別 の 後 に 1 以 上 の 空 行 の 1 が あ り ま す 。 
 file . containsTab = フ ァ イ ル が （ こ れ が 最 初 の イ ン ス タ ン ス で あ る ） タ ブ 文 字 が 含 ま れ て い ま す 。 
 no . line . wrap = { 0 } 文 は 、 行 ラ ッ プ さ れ て は な り ま せ ん 。 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ pt . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ pt . properties 
 index d9f8773 . . 83df7ab 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ pt . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ pt . properties 
 @ @ - 15 , 5 + 15 , 6 @ @ ws . illegalFollow = ' ' { 0 } ' ' é seguido por um car á cter ilegal . 
 empty . line . separator = ' ' { 0 } ' ' deve ser separada da declara ç ã o anterior . 
 empty . line . separator . multiple . lines = ' ' { 0 } ' ' tem mais de 1 linhas vazias antes . 
 empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' tem mais de 1 linhas vazias depois . 
 + empty . line . separator . multiple . lines . inside = H á mais de um vazio linha um ap ó s o outro . 
 file . containsTab = Arquivo cont é m caracteres de tabula ç ã o ( esta é a primeira inst â ncia ) . 
 no . line . wrap = { 0 } afirma ç ã o n ã o deve ser linha - embrulhado . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ tr . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ tr . properties 
 index c5b27c3 . . c9d4e15 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ tr . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ tr . properties 
 @ @ - 19 , 4 + 19 , 5 @ @ ws . typeCast = ' ' t ü r ü d ö n ü ş t ü rme ' ' ifadesinden sonra bo ş luk kullan ı lmam ı ş 
 empty . line . separator = { 0 } ' Bir ö nceki deyimi ayr ı lmal ı d ı r . 
 empty . line . separator . multiple . lines = { 0 } daha ö nce en fazla 1 bo ş hatlar ı vard ı r . 
 empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' sonra 1 ' den fazla bo ş hatlar ı vard ı r . 
 + empty . line . separator . multiple . lines . inside = birbiri ard ı na 1 ' den fazla bo ş sat ı r biri var . 
 no . line . wrap = { 0 } ifadesi hatt ı sar ı l ı olmamal ı d ı r . 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ zh . properties 
 index f70fe29 . . 3186bb6 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ zh . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / messages _ zh . properties 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 empty . line . separator = ' ' { 0 } ' 前 应 有 空 行 。 
 empty . line . separator . multiple . lines = ' ' { 0 } ' ' 前 只 应 有 一 个 空 行 。 
 empty . line . separator . multiple . lines . after = ' ' { 0 } ' ' 后 只 应 有 一 个 空 行 。 
 + empty . line . separator . multiple . lines . inside = 还 有 陆 续 超 过 1 空 行 之 一 。 
 
 containsTab = 行 内 含 有 制 表 符 tab 。 
 file . containsTab = 文 件 含 有 制 表 符 tab （ 这 只 是 第 一 例 ） 。 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java 
 index c2ed6cf . . e00cbff 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheckTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheck . MSG _ MULTIPLE _ LINES ; 
 import static com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheck . MSG _ MULTIPLE _ LINES _ AFTER ; 
 + import static com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheck . MSG _ MULTIPLE _ LINES _ INSIDE ; 
 import static com . puppycrawl . tools . checkstyle . checks . whitespace . EmptyLineSeparatorCheck . MSG _ SHOULD _ BE _ SEPARATED ; 
 import static org . junit . Assert . assertArrayEquals ; 
 
 @ @ - 164 , 4 + 165 , 30 @ @ public class EmptyLineSeparatorCheckTest 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , getPath ( " InputPrePreviousLineEmptiness . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testDisAllowMultipleEmptyLinesInsideClassMembers ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( EmptyLineSeparatorCheck . class ) ; 
 + checkConfig . addAttribute ( " allowMultipleEmptyLinesInsideClassMembers " , " false " ) ; 
 + final String [ ] expected = { 
 + " 27 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , 
 + " 39 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , 
 + " 45 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , 
 + " 50 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , 
 + " 55 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , 
 + " 56 : " + getCheckMessage ( MSG _ MULTIPLE _ LINES _ INSIDE ) , 
 + } ; 
 + verify ( checkConfig , 
 + getPath ( " InputEmptyLineSeparatorMultipleEmptyLinesInside . java " ) , 
 + expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testAllowMultipleEmptyLinesInsideClassMembers ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( EmptyLineSeparatorCheck . class ) ; 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , 
 + getPath ( " InputEmptyLineSeparatorMultipleEmptyLinesInside . java " ) , 
 + expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyLineSeparatorMultipleEmptyLinesInside . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyLineSeparatorMultipleEmptyLinesInside . java 
 new file mode 100644 
 index 0000000 . . 68d2f75 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyLineSeparatorMultipleEmptyLinesInside . java 
 @ @ - 0 , 0 + 1 , 59 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2016 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 + 
 + public abstract class InputEmptyLineSeparatorMultipleEmptyLinesInside 
 + { 
 + public InputEmptyLineSeparatorMultipleEmptyLinesInside ( ) { 
 + / / empty lines below should cause a violation 
 + 
 + 
 + } 
 + 
 + private int counter ; 
 + 
 + private Object obj = null ; 
 + 
 + abstract int generateSrc ( String s ) ; 
 + 
 + static { 
 + / / empty lines below should cause a violation 
 + 
 + 
 + } 
 + 
 + { 
 + / / empty lines below should cause a violation 
 + 
 + 
 + } 
 + 
 + private static void foo ( ) { 
 + 
 + 
 + / / 1 empty line above should cause a violation 
 + 
 + / / 1 empty line above should not cause a violation 
 + 
 + 
 + 
 + / / 2 empty lines above should cause violations 
 + } 
 + } 
 diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml 
 index f531cf7 . . d4d03d4 100644 
 - - - a / src / xdocs / config _ whitespace . xml 
 + + + b / src / xdocs / config _ whitespace . xml 
 @ @ - 238 , 6 + 238 , 12 @ @ for ( Iterator foo = very . long . line . iterator ( ) ; 
 < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > 
 < td > true < / td > 
 < / tr > 
 + < tr > 
 + < td > allowMultipleEmptyLinesInsideClassMembers < / td > 
 + < td > Allow multiple empty lines inside class members < / td > 
 + < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > 
 + < td > true < / td > 
 + < / tr > 
 < tr > 
 < td > tokens < / td > 
 < td > tokens to check < / td > 
 @ @ - 328 , 6 + 334 , 45 @ @ class Foo 
 & lt ; property name = " allowNoEmptyLineBetweenFields " value = " true " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 + < p > 
 + An example how to disallow multiple empty lines inside constructor , initialization block and method : 
 + < / p > 
 + < source > 
 + & lt ; module name = " EmptyLineSeparator " & gt ; 
 + & lt ; property name = " allowMultipleEmptyLinesInsideClassMembers " value = " false " / & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 + 
 + < p > 
 + The check is valid only for statements that have body : 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > CLASS _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > INTERFACE _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > ENUM _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > STATIC _ INIT < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INSTANCE _ INIT " > INSTANCE _ INIT < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > METHOD _ DEF < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CTOR _ DEF " > CTOR _ DEF < / a > , 
 + < / p > 
 + < p > 
 + Example of declarations with multiple empty lines inside method : 
 + < / p > 
 + < source > 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / HEADER 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . whitespace ; 
 + 
 + class Foo 
 + { 
 + 
 + public void foo ( ) { 
 + < br / > 
 + 
 + System . out . println ( 1 ) ; / / violation since method has 2 empty lines subsequently 
 + } 
 + } 
 + < / source > 
 < / subsection > 
 
 < subsection name = " Example of Usage " > 
 @ @ - 357 , 6 + 402 , 10 @ @ class Foo 
 < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources % 2Fcom % 2Fpuppycrawl % 2Ftools % 2Fcheckstyle % 2Fchecks % 2Fwhitespace + filename % 3Amessages * . properties + repo % 3Acheckstyle % 2Fcheckstyle + % 22empty . line . separator . multiple . lines . after % 22 " > 
 empty . line . separator . multiple . lines . after < / a > 
 < / li > 
 + < li > 
 + < a href = " https : / / github . com / search ? q = path % 3Asrc % 2Fmain % 2Fresources % 2Fcom % 2Fpuppycrawl % 2Ftools % 2Fcheckstyle % 2Fchecks % 2Fwhitespace + filename % 3Amessages * . properties + repo % 3Acheckstyle % 2Fcheckstyle + % 22empty . line . separator . multiple . lines . inside % 22 " > 
 + empty . line . separator . multiple . lines . inside < / a > 
 + < / li > 
 < / ul > 
 < p > 
 All messages can be customized if the default message doesn ' t suite you .
