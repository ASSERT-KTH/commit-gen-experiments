BLEU SCORE: 0.06113920478593803

TEST MSG: Issue # 2161 : unify test input file names
GENERATED MSG: Magic Number annotation detection enhanced for arbitary parent nodes , Issue # 926

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheckTest . java <nl> index 2b713cb . . 39a7766 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheckTest . java <nl> @ @ - 80 , 10 + 80 , 10 @ @ public class MagicNumberCheckTest <nl> " 174 : 15 : " + getCheckMessage ( MSG _ KEY , " 21 " ) , <nl> " 178 : 15 : " + getCheckMessage ( MSG _ KEY , " 37 " ) , <nl> " 182 : 15 : " + getCheckMessage ( MSG _ KEY , " 101 " ) , <nl> - " 185 : 26 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , <nl> - " 189 : 32 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , <nl> - " 193 : 26 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , <nl> - " 197 : 32 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , <nl> + " 185 : 31 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , <nl> + " 189 : 37 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , <nl> + " 193 : 31 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , <nl> + " 197 : 37 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputMagicNumber . java " ) , expected ) ; <nl> } <nl> @ @ - 375 , 10 + 375 , 10 @ @ public class MagicNumberCheckTest <nl> " 174 : 15 : " + getCheckMessage ( MSG _ KEY , " 21 " ) , <nl> " 178 : 15 : " + getCheckMessage ( MSG _ KEY , " 37 " ) , <nl> " 182 : 15 : " + getCheckMessage ( MSG _ KEY , " 101 " ) , <nl> - " 185 : 26 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , <nl> - " 189 : 32 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , <nl> - " 193 : 26 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , <nl> - " 197 : 32 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , <nl> + " 185 : 31 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , <nl> + " 189 : 37 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , <nl> + " 193 : 31 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , <nl> + " 197 : 37 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputMagicNumber . java " ) , expected ) ; <nl> } <nl> @ @ - 433 , 10 + 433 , 10 @ @ public class MagicNumberCheckTest <nl> " 174 : 15 : " + getCheckMessage ( MSG _ KEY , " 21 " ) , <nl> " 178 : 15 : " + getCheckMessage ( MSG _ KEY , " 37 " ) , <nl> " 182 : 15 : " + getCheckMessage ( MSG _ KEY , " 101 " ) , <nl> - " 185 : 26 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , <nl> - " 189 : 32 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , <nl> - " 193 : 26 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , <nl> - " 197 : 32 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , <nl> + " 185 : 31 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , <nl> + " 189 : 37 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , <nl> + " 193 : 31 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , <nl> + " 197 : 37 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , <nl> " 209 : 63 : " + getCheckMessage ( MSG _ KEY , " 62 " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputMagicNumber . java " ) , expected ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIntMethodAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIntMethodAnnotation . java <nl> new file mode 100644 <nl> index 0000000 . . 51f2231 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIntMethodAnnotation . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + import java . lang . annotation . Target ; <nl> + <nl> + @ Retention ( RetentionPolicy . RUNTIME ) <nl> + @ Target ( ElementType . METHOD ) <nl> + public @ interface InputIntMethodAnnotation { <nl> + 	 int value ( ) ; <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMagicNumber . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMagicNumber . java <nl> index 01e7c1e . . 214fad7 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMagicNumber . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMagicNumber . java <nl> @ @ - 182 , 19 + 182 , 19 @ @ class TestHashCodeMethod { <nl> int z = 101 ; <nl> } <nl> <nl> - @ IntMethodAnnotation ( 42 ) <nl> + @ InputIntMethodAnnotation ( 42 ) <nl> public void another ( ) { <nl> } <nl> <nl> - @ IntMethodAnnotation ( value = 43 ) <nl> + @ InputIntMethodAnnotation ( value = 43 ) <nl> public void another2 ( ) { <nl> } <nl> <nl> - @ IntMethodAnnotation ( - 44 ) <nl> + @ InputIntMethodAnnotation ( - 44 ) <nl> public void anotherNegative ( ) { <nl> } <nl> <nl> - @ IntMethodAnnotation ( value = - 45 ) <nl> + @ InputIntMethodAnnotation ( value = - 45 ) <nl> public void anotherNegative2 ( ) { <nl> } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / IntMethodAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / IntMethodAnnotation . java <nl> deleted file mode 100644 <nl> index 365763d . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / IntMethodAnnotation . java <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Retention ; <nl> - import java . lang . annotation . RetentionPolicy ; <nl> - import java . lang . annotation . Target ; <nl> - <nl> - @ Retention ( RetentionPolicy . RUNTIME ) <nl> - @ Target ( ElementType . METHOD ) <nl> - public @ interface IntMethodAnnotation { <nl> - 	 int value ( ) ; <nl> - } <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 5a65a40 . . 83615f1 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 163 , 7 + 163 , 6 @ @ <nl> < rule ref = " rulesets / java / naming . xml " > <nl> < exclude name = " AbstractNaming " / > <nl> < exclude name = " AvoidFieldNameMatchingMethodName " / > <nl> - < exclude name = " AvoidFieldNameMatchingTypeName " / > <nl> < exclude name = " BooleanGetMethodName " / > <nl> < exclude name = " LongVariable " / > <nl> < exclude name = " ShortClassName " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java <nl> index 708fa33 . . 5da02bb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java <nl> @ @ - 112 , 7 + 112 , 7 @ @ public class DeclarationOrderCheck extends Check <nl> private static class ScopeState <nl> { <nl> / * * The state the check is in * / <nl> - private int scopeState = STATE _ STATIC _ VARIABLE _ DEF ; <nl> + private int currentScopeState = STATE _ STATIC _ VARIABLE _ DEF ; <nl> <nl> / * * The sub - state the check is in * / <nl> private Scope declarationAccess = Scope . PUBLIC ; <nl> @ @ - 164 , 13 + 164 , 13 @ @ public class DeclarationOrderCheck extends Check <nl> } <nl> <nl> state = scopeStates . peek ( ) ; <nl> - if ( state . scopeState > STATE _ CTOR _ DEF ) { <nl> + if ( state . currentScopeState > STATE _ CTOR _ DEF ) { <nl> if ( ! ignoreConstructors ) { <nl> log ( ast , MSG _ CONSTRUCTOR ) ; <nl> } <nl> } <nl> else { <nl> - state . scopeState = STATE _ CTOR _ DEF ; <nl> + state . currentScopeState = STATE _ CTOR _ DEF ; <nl> } <nl> break ; <nl> <nl> @ @ - 180 , 13 + 180 , 13 @ @ public class DeclarationOrderCheck extends Check <nl> return ; <nl> } <nl> <nl> - if ( state . scopeState > STATE _ METHOD _ DEF ) { <nl> + if ( state . currentScopeState > STATE _ METHOD _ DEF ) { <nl> if ( ! ignoreMethods ) { <nl> log ( ast , MSG _ METHOD ) ; <nl> } <nl> } <nl> else { <nl> - state . scopeState = STATE _ METHOD _ DEF ; <nl> + state . currentScopeState = STATE _ METHOD _ DEF ; <nl> } <nl> break ; <nl> <nl> @ @ - 200 , 24 + 200 , 24 @ @ public class DeclarationOrderCheck extends Check <nl> <nl> state = scopeStates . peek ( ) ; <nl> if ( ast . findFirstToken ( TokenTypes . LITERAL _ STATIC ) ! = null ) { <nl> - if ( state . scopeState > STATE _ STATIC _ VARIABLE _ DEF ) { <nl> + if ( state . currentScopeState > STATE _ STATIC _ VARIABLE _ DEF ) { <nl> if ( ! ignoreModifiers <nl> - | | state . scopeState > STATE _ INSTANCE _ VARIABLE _ DEF ) <nl> + | | state . currentScopeState > STATE _ INSTANCE _ VARIABLE _ DEF ) <nl> { <nl> log ( ast , MSG _ STATIC ) ; <nl> } <nl> } <nl> else { <nl> - state . scopeState = STATE _ STATIC _ VARIABLE _ DEF ; <nl> + state . currentScopeState = STATE _ STATIC _ VARIABLE _ DEF ; <nl> } <nl> } <nl> else { <nl> - if ( state . scopeState > STATE _ INSTANCE _ VARIABLE _ DEF ) { <nl> + if ( state . currentScopeState > STATE _ INSTANCE _ VARIABLE _ DEF ) { <nl> log ( ast , MSG _ INSTANCE ) ; <nl> } <nl> - else if ( state . scopeState = = STATE _ STATIC _ VARIABLE _ DEF ) { <nl> + else if ( state . currentScopeState = = STATE _ STATIC _ VARIABLE _ DEF ) { <nl> state . declarationAccess = Scope . PUBLIC ; <nl> - state . scopeState = STATE _ INSTANCE _ VARIABLE _ DEF ; <nl> + state . currentScopeState = STATE _ INSTANCE _ VARIABLE _ DEF ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheckTest . java 
 index 2b713cb . . 39a7766 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheckTest . java 
 @ @ - 80 , 10 + 80 , 10 @ @ public class MagicNumberCheckTest 
 " 174 : 15 : " + getCheckMessage ( MSG _ KEY , " 21 " ) , 
 " 178 : 15 : " + getCheckMessage ( MSG _ KEY , " 37 " ) , 
 " 182 : 15 : " + getCheckMessage ( MSG _ KEY , " 101 " ) , 
 - " 185 : 26 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , 
 - " 189 : 32 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , 
 - " 193 : 26 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , 
 - " 197 : 32 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , 
 + " 185 : 31 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , 
 + " 189 : 37 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , 
 + " 193 : 31 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , 
 + " 197 : 37 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputMagicNumber . java " ) , expected ) ; 
 } 
 @ @ - 375 , 10 + 375 , 10 @ @ public class MagicNumberCheckTest 
 " 174 : 15 : " + getCheckMessage ( MSG _ KEY , " 21 " ) , 
 " 178 : 15 : " + getCheckMessage ( MSG _ KEY , " 37 " ) , 
 " 182 : 15 : " + getCheckMessage ( MSG _ KEY , " 101 " ) , 
 - " 185 : 26 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , 
 - " 189 : 32 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , 
 - " 193 : 26 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , 
 - " 197 : 32 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , 
 + " 185 : 31 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , 
 + " 189 : 37 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , 
 + " 193 : 31 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , 
 + " 197 : 37 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputMagicNumber . java " ) , expected ) ; 
 } 
 @ @ - 433 , 10 + 433 , 10 @ @ public class MagicNumberCheckTest 
 " 174 : 15 : " + getCheckMessage ( MSG _ KEY , " 21 " ) , 
 " 178 : 15 : " + getCheckMessage ( MSG _ KEY , " 37 " ) , 
 " 182 : 15 : " + getCheckMessage ( MSG _ KEY , " 101 " ) , 
 - " 185 : 26 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , 
 - " 189 : 32 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , 
 - " 193 : 26 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , 
 - " 197 : 32 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , 
 + " 185 : 31 : " + getCheckMessage ( MSG _ KEY , " 42 " ) , 
 + " 189 : 37 : " + getCheckMessage ( MSG _ KEY , " 43 " ) , 
 + " 193 : 31 : " + getCheckMessage ( MSG _ KEY , " - 44 " ) , 
 + " 197 : 37 : " + getCheckMessage ( MSG _ KEY , " - 45 " ) , 
 " 209 : 63 : " + getCheckMessage ( MSG _ KEY , " 62 " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputMagicNumber . java " ) , expected ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIntMethodAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIntMethodAnnotation . java 
 new file mode 100644 
 index 0000000 . . 51f2231 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputIntMethodAnnotation . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Retention ; 
 + import java . lang . annotation . RetentionPolicy ; 
 + import java . lang . annotation . Target ; 
 + 
 + @ Retention ( RetentionPolicy . RUNTIME ) 
 + @ Target ( ElementType . METHOD ) 
 + public @ interface InputIntMethodAnnotation { 
 + 	 int value ( ) ; 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMagicNumber . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMagicNumber . java 
 index 01e7c1e . . 214fad7 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMagicNumber . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputMagicNumber . java 
 @ @ - 182 , 19 + 182 , 19 @ @ class TestHashCodeMethod { 
 int z = 101 ; 
 } 
 
 - @ IntMethodAnnotation ( 42 ) 
 + @ InputIntMethodAnnotation ( 42 ) 
 public void another ( ) { 
 } 
 
 - @ IntMethodAnnotation ( value = 43 ) 
 + @ InputIntMethodAnnotation ( value = 43 ) 
 public void another2 ( ) { 
 } 
 
 - @ IntMethodAnnotation ( - 44 ) 
 + @ InputIntMethodAnnotation ( - 44 ) 
 public void anotherNegative ( ) { 
 } 
 
 - @ IntMethodAnnotation ( value = - 45 ) 
 + @ InputIntMethodAnnotation ( value = - 45 ) 
 public void anotherNegative2 ( ) { 
 } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / IntMethodAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / IntMethodAnnotation . java 
 deleted file mode 100644 
 index 365763d . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / IntMethodAnnotation . java 
 + + + / dev / null 
 @ @ - 1 , 12 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . coding ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Retention ; 
 - import java . lang . annotation . RetentionPolicy ; 
 - import java . lang . annotation . Target ; 
 - 
 - @ Retention ( RetentionPolicy . RUNTIME ) 
 - @ Target ( ElementType . METHOD ) 
 - public @ interface IntMethodAnnotation { 
 - 	 int value ( ) ; 
 - } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 5a65a40 . . 83615f1 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 163 , 7 + 163 , 6 @ @ 
 < rule ref = " rulesets / java / naming . xml " > 
 < exclude name = " AbstractNaming " / > 
 < exclude name = " AvoidFieldNameMatchingMethodName " / > 
 - < exclude name = " AvoidFieldNameMatchingTypeName " / > 
 < exclude name = " BooleanGetMethodName " / > 
 < exclude name = " LongVariable " / > 
 < exclude name = " ShortClassName " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java 
 index 708fa33 . . 5da02bb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java 
 @ @ - 112 , 7 + 112 , 7 @ @ public class DeclarationOrderCheck extends Check 
 private static class ScopeState 
 { 
 / * * The state the check is in * / 
 - private int scopeState = STATE _ STATIC _ VARIABLE _ DEF ; 
 + private int currentScopeState = STATE _ STATIC _ VARIABLE _ DEF ; 
 
 / * * The sub - state the check is in * / 
 private Scope declarationAccess = Scope . PUBLIC ; 
 @ @ - 164 , 13 + 164 , 13 @ @ public class DeclarationOrderCheck extends Check 
 } 
 
 state = scopeStates . peek ( ) ; 
 - if ( state . scopeState > STATE _ CTOR _ DEF ) { 
 + if ( state . currentScopeState > STATE _ CTOR _ DEF ) { 
 if ( ! ignoreConstructors ) { 
 log ( ast , MSG _ CONSTRUCTOR ) ; 
 } 
 } 
 else { 
 - state . scopeState = STATE _ CTOR _ DEF ; 
 + state . currentScopeState = STATE _ CTOR _ DEF ; 
 } 
 break ; 
 
 @ @ - 180 , 13 + 180 , 13 @ @ public class DeclarationOrderCheck extends Check 
 return ; 
 } 
 
 - if ( state . scopeState > STATE _ METHOD _ DEF ) { 
 + if ( state . currentScopeState > STATE _ METHOD _ DEF ) { 
 if ( ! ignoreMethods ) { 
 log ( ast , MSG _ METHOD ) ; 
 } 
 } 
 else { 
 - state . scopeState = STATE _ METHOD _ DEF ; 
 + state . currentScopeState = STATE _ METHOD _ DEF ; 
 } 
 break ; 
 
 @ @ - 200 , 24 + 200 , 24 @ @ public class DeclarationOrderCheck extends Check 
 
 state = scopeStates . peek ( ) ; 
 if ( ast . findFirstToken ( TokenTypes . LITERAL _ STATIC ) ! = null ) { 
 - if ( state . scopeState > STATE _ STATIC _ VARIABLE _ DEF ) { 
 + if ( state . currentScopeState > STATE _ STATIC _ VARIABLE _ DEF ) { 
 if ( ! ignoreModifiers 
 - | | state . scopeState > STATE _ INSTANCE _ VARIABLE _ DEF ) 
 + | | state . currentScopeState > STATE _ INSTANCE _ VARIABLE _ DEF ) 
 { 
 log ( ast , MSG _ STATIC ) ; 
 } 
 } 
 else { 
 - state . scopeState = STATE _ STATIC _ VARIABLE _ DEF ; 
 + state . currentScopeState = STATE _ STATIC _ VARIABLE _ DEF ; 
 } 
 } 
 else { 
 - if ( state . scopeState > STATE _ INSTANCE _ VARIABLE _ DEF ) { 
 + if ( state . currentScopeState > STATE _ INSTANCE _ VARIABLE _ DEF ) { 
 log ( ast , MSG _ INSTANCE ) ; 
 } 
 - else if ( state . scopeState = = STATE _ STATIC _ VARIABLE _ DEF ) { 
 + else if ( state . currentScopeState = = STATE _ STATIC _ VARIABLE _ DEF ) { 
 state . declarationAccess = Scope . PUBLIC ; 
 - state . scopeState = STATE _ INSTANCE _ VARIABLE _ DEF ; 
 + state . currentScopeState = STATE _ INSTANCE _ VARIABLE _ DEF ; 
 } 
 } 

