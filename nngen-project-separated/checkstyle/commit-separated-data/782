BLEU SCORE: 0.05795599612995367

TEST MSG: Issue # 4274 : ImportControl : strategyOnMismatch property
GENERATED MSG: ImportControl test resources moved to imports folder # 1128

TEST DIFF (one line): diff - - git a / config / catalog . xml b / config / catalog . xml <nl> index 6676ce8 . . c6719ff 100644 <nl> - - - a / config / catalog . xml <nl> + + + b / config / catalog . xml <nl> @ @ - 11 , 4 + 11 , 5 @ @ <nl> < system systemId = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 0 . dtd " uri = " . / . . / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 0 . dtd " / > <nl> < system systemId = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 1 . dtd " uri = " . / . . / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 1 . dtd " / > <nl> < system systemId = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd " uri = " . / . . / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 2 . dtd " / > <nl> + < system systemId = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " uri = " . / . . / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd " / > <nl> < / catalog > <nl> diff - - git a / config / import - control . xml b / config / import - control . xml <nl> index 66a7141 . . 5de5f8c 100644 <nl> - - - a / config / import - control . xml <nl> + + + b / config / import - control . xml <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> < ? xml version = " 1 . 0 " ? > <nl> < ! DOCTYPE import - control PUBLIC <nl> - " - / / Puppy Crawl / / DTD Import Control 1 . 2 / / EN " <nl> - " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd " > <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " <nl> + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > <nl> <nl> < import - control pkg = " com . puppycrawl . tools . checkstyle " > <nl> <nl> @ @ - 134 , 10 + 134 , 10 @ @ <nl> < / subpackage > <nl> < / subpackage > <nl> <nl> - < subpackage name = " doclets " > <nl> - < allow class = " java . nio . charset . StandardCharsets " local - only = " true " / > <nl> + < subpackage name = " doclets " strategyOnMismatch = " disallowed " > <nl> + < allow class = " java . nio . charset . StandardCharsets " / > <nl> < allow pkg = " com . sun . javadoc " / > <nl> - < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . ( checks | ant | filters | gui ) " regex = " true " / > <nl> + < allow pkg = " java . io " / > <nl> < / subpackage > <nl> <nl> < subpackage name = " filters " > <nl> @ @ - 146 , 13 + 146 , 17 @ @ <nl> < allow pkg = " com . puppycrawl . tools . checkstyle . utils " / > <nl> < / subpackage > <nl> <nl> - < subpackage name = " gui " > <nl> + < subpackage name = " gui " strategyOnMismatch = " disallowed " > <nl> + < allow pkg = " antlr " / > <nl> < allow pkg = " java . awt " / > <nl> + < allow pkg = " java . io " / > <nl> < allow pkg = " javax . swing " / > <nl> + < allow pkg = " java . util " exact - match = " true " / > <nl> + < allow pkg = " com . puppycrawl . tools . checkstyle . api " local - only = " true " / > <nl> < allow pkg = " com . puppycrawl . tools . checkstyle . utils " local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . TreeWalker " local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . gui . MainFrameModel . ParseMode " <nl> - local - only = " true " / > <nl> + local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser " local - only = " true " / > <nl> < / subpackage > <nl> < / import - control > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java <nl> index c490202 . . 26c53a5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java <nl> @ @ - 56 , 15 + 56 , 20 @ @ class ImportControl { <nl> private final Pattern patternForExactMatch ; <nl> / * * If this package represents a regular expression . * / <nl> private final boolean regex ; <nl> + / * * Strategy in a case if matching allow / disallow rule was not found . * / <nl> + private final MismatchStrategy strategyOnMismatch ; <nl> <nl> / * * <nl> * Construct a root node . <nl> * @ param pkgName the name of the package . <nl> * @ param regex flags interpretation of pkgName as regex pattern . <nl> + * @ param strategyOnMismatch strategy in a case if matching allow / disallow rule was not found . <nl> * / <nl> - ImportControl ( final String pkgName , final boolean regex ) { <nl> + ImportControl ( final String pkgName , final boolean regex , <nl> + final MismatchStrategy strategyOnMismatch ) { <nl> parent = null ; <nl> this . regex = regex ; <nl> + this . strategyOnMismatch = strategyOnMismatch ; <nl> if ( regex ) { <nl> / / ensure that fullPackage is a self - contained regular expression <nl> fullPackage = encloseInGroup ( pkgName ) ; <nl> @ @ - 79 , 14 + 84 , 26 @ @ class ImportControl { <nl> } <nl> <nl> / * * <nl> + * Construct a root node . <nl> + * @ param pkgName the name of the package . <nl> + * @ param regex flags interpretation of pkgName as regex pattern . <nl> + * / <nl> + ImportControl ( final String pkgName , final boolean regex ) { <nl> + this ( pkgName , regex , MismatchStrategy . DISALLOWED ) ; <nl> + } <nl> + <nl> + / * * <nl> * Construct a child node . The concatenation of regular expressions needs special care : <nl> * see { @ link # ensureSelfContainedRegex ( String , boolean ) } for more details . <nl> * @ param parent the parent node . <nl> * @ param subPkg the sub package name . <nl> * @ param regex flags interpretation of subPkg as regex pattern . <nl> + * @ param strategyOnMismatch strategy in a case if matching allow / disallow rule was not found . <nl> * / <nl> - ImportControl ( final ImportControl parent , final String subPkg , final boolean regex ) { <nl> + ImportControl ( final ImportControl parent , final String subPkg , final boolean regex , <nl> + final MismatchStrategy strategyOnMismatch ) { <nl> this . parent = parent ; <nl> + this . strategyOnMismatch = strategyOnMismatch ; <nl> if ( regex | | parent . regex ) { <nl> / / regex gets inherited <nl> final String parentRegex = ensureSelfContainedRegex ( parent . fullPackage , parent . regex ) ; <nl> @ @ - 106 , 6 + 123 , 17 @ @ class ImportControl { <nl> } <nl> <nl> / * * <nl> + * Construct a child node . The concatenation of regular expressions needs special care : <nl> + * see { @ link # ensureSelfContainedRegex ( String , boolean ) } for more details . <nl> + * @ param parent the parent node . <nl> + * @ param subPkg the sub package name . <nl> + * @ param regex flags interpretation of subPkg as regex pattern . <nl> + * / <nl> + ImportControl ( final ImportControl parent , final String subPkg , final boolean regex ) { <nl> + this ( parent , subPkg , regex , MismatchStrategy . DELEGATE _ TO _ PARENT ) ; <nl> + } <nl> + <nl> + / * * <nl> * Returns a regex that is suitable for concatenation by 1 ) either converting a plain string <nl> * into a regular expression ( handling special characters ) or 2 ) by enclosing { @ code input } in <nl> * a ( non - capturing ) group if { @ code input } already is a regular expression . <nl> @ @ - 255 , 11 + 283 , 23 @ @ class ImportControl { <nl> result = returnValue ; <nl> } <nl> else if ( parent = = null ) { <nl> - / / we are the top , so default to not allowed . <nl> - result = AccessResult . DISALLOWED ; <nl> + if ( strategyOnMismatch = = MismatchStrategy . ALLOWED ) { <nl> + result = AccessResult . ALLOWED ; <nl> + } <nl> + else { <nl> + result = AccessResult . DISALLOWED ; <nl> + } <nl> } <nl> else { <nl> - result = parent . checkAccess ( inPkg , forImport ) ; <nl> + if ( strategyOnMismatch = = MismatchStrategy . ALLOWED ) { <nl> + result = AccessResult . ALLOWED ; <nl> + } <nl> + else if ( strategyOnMismatch = = MismatchStrategy . DISALLOWED ) { <nl> + result = AccessResult . DISALLOWED ; <nl> + } <nl> + else { <nl> + result = parent . checkAccess ( inPkg , forImport ) ; <nl> + } <nl> } <nl> return result ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> index 9b9dc2e . . b3f674b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> @ @ - 54 , 6 + 54 , 10 @ @ final class ImportControlLoader extends AbstractLoader { <nl> private static final String DTD _ PUBLIC _ ID _ 1 _ 2 = <nl> " - / / Puppy Crawl / / DTD Import Control 1 . 2 / / EN " ; <nl> <nl> + / * * The public ID for the configuration dtd . * / <nl> + private static final String DTD _ PUBLIC _ ID _ 1 _ 3 = <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " ; <nl> + <nl> / * * The resource for the configuration dtd . * / <nl> private static final String DTD _ RESOURCE _ NAME _ 1 _ 0 = <nl> " com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 0 . dtd " ; <nl> @ @ - 66 , 12 + 70 , 25 @ @ final class ImportControlLoader extends AbstractLoader { <nl> private static final String DTD _ RESOURCE _ NAME _ 1 _ 2 = <nl> " com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 2 . dtd " ; <nl> <nl> + / * * The resource for the configuration dtd . * / <nl> + private static final String DTD _ RESOURCE _ NAME _ 1 _ 3 = <nl> + " com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd " ; <nl> + <nl> / * * The map to lookup the resource name by the id . * / <nl> private static final Map < String , String > DTD _ RESOURCE _ BY _ ID = new HashMap < > ( ) ; <nl> <nl> / * * Name for attribute ' pkg ' . * / <nl> private static final String PKG _ ATTRIBUTE _ NAME = " pkg " ; <nl> <nl> + / * * Name for attribute ' strategyOnMismatch ' . * / <nl> + private static final String STRATEGY _ ON _ MISMATCH _ ATTRIBUTE _ NAME = " strategyOnMismatch " ; <nl> + <nl> + / * * Value " allowed " for attribute ' strategyOnMismatch ' . * / <nl> + private static final String STRATEGY _ ON _ MISMATCH _ ALLOWED _ VALUE = " allowed " ; <nl> + <nl> + / * * Value " disallowed " for attribute ' strategyOnMismatch ' . * / <nl> + private static final String STRATEGY _ ON _ MISMATCH _ DISALLOWED _ VALUE = " disallowed " ; <nl> + <nl> / * * Qualified name for element ' subpackage ' . * / <nl> private static final String SUBPACKAGE _ ELEMENT _ NAME = " subpackage " ; <nl> <nl> @ @ - 85 , 6 + 102 , 7 @ @ final class ImportControlLoader extends AbstractLoader { <nl> DTD _ RESOURCE _ BY _ ID . put ( DTD _ PUBLIC _ ID _ 1 _ 0 , DTD _ RESOURCE _ NAME _ 1 _ 0 ) ; <nl> DTD _ RESOURCE _ BY _ ID . put ( DTD _ PUBLIC _ ID _ 1 _ 1 , DTD _ RESOURCE _ NAME _ 1 _ 1 ) ; <nl> DTD _ RESOURCE _ BY _ ID . put ( DTD _ PUBLIC _ ID _ 1 _ 2 , DTD _ RESOURCE _ NAME _ 1 _ 2 ) ; <nl> + DTD _ RESOURCE _ BY _ ID . put ( DTD _ PUBLIC _ ID _ 1 _ 3 , DTD _ RESOURCE _ NAME _ 1 _ 3 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 105 , 13 + 123 , 15 @ @ final class ImportControlLoader extends AbstractLoader { <nl> throws SAXException { <nl> if ( " import - control " . equals ( qName ) ) { <nl> final String pkg = safeGet ( attributes , PKG _ ATTRIBUTE _ NAME ) ; <nl> + final MismatchStrategy strategyOnMismatch = getStrategyForImportControl ( attributes ) ; <nl> final boolean regex = containsRegexAttribute ( attributes ) ; <nl> - stack . push ( new ImportControl ( pkg , regex ) ) ; <nl> + stack . push ( new ImportControl ( pkg , regex , strategyOnMismatch ) ) ; <nl> } <nl> else if ( SUBPACKAGE _ ELEMENT _ NAME . equals ( qName ) ) { <nl> final String name = safeGet ( attributes , " name " ) ; <nl> + final MismatchStrategy strategyOnMismatch = getStrategyForSubpackage ( attributes ) ; <nl> final boolean regex = containsRegexAttribute ( attributes ) ; <nl> - stack . push ( new ImportControl ( stack . peek ( ) , name , regex ) ) ; <nl> + stack . push ( new ImportControl ( stack . peek ( ) , name , regex , strategyOnMismatch ) ) ; <nl> } <nl> else if ( ALLOW _ ELEMENT _ NAME . equals ( qName ) | | " disallow " . equals ( qName ) ) { <nl> / / Need to handle either " pkg " or " class " attribute . <nl> @ @ - 227 , 6 + 247 , 37 @ @ final class ImportControlLoader extends AbstractLoader { <nl> } <nl> <nl> / * * <nl> + * Utility to get a strategyOnMismatch property for " import - control " tag . <nl> + * @ param attributes collect to get attribute from . <nl> + * @ return the value of the attribute . <nl> + * / <nl> + private static MismatchStrategy getStrategyForImportControl ( final Attributes attributes ) { <nl> + final String returnValue = attributes . getValue ( STRATEGY _ ON _ MISMATCH _ ATTRIBUTE _ NAME ) ; <nl> + MismatchStrategy strategyOnMismatch = MismatchStrategy . DISALLOWED ; <nl> + if ( STRATEGY _ ON _ MISMATCH _ ALLOWED _ VALUE . equals ( returnValue ) ) { <nl> + strategyOnMismatch = MismatchStrategy . ALLOWED ; <nl> + } <nl> + return strategyOnMismatch ; <nl> + } <nl> + <nl> + / * * <nl> + * Utility to get a strategyOnMismatch property for " subpackage " tag . <nl> + * @ param attributes collect to get attribute from . <nl> + * @ return the value of the attribute . <nl> + * / <nl> + private static MismatchStrategy getStrategyForSubpackage ( final Attributes attributes ) { <nl> + final String returnValue = attributes . getValue ( STRATEGY _ ON _ MISMATCH _ ATTRIBUTE _ NAME ) ; <nl> + MismatchStrategy strategyOnMismatch = MismatchStrategy . DELEGATE _ TO _ PARENT ; <nl> + if ( STRATEGY _ ON _ MISMATCH _ ALLOWED _ VALUE . equals ( returnValue ) ) { <nl> + strategyOnMismatch = MismatchStrategy . ALLOWED ; <nl> + } <nl> + else if ( STRATEGY _ ON _ MISMATCH _ DISALLOWED _ VALUE . equals ( returnValue ) ) { <nl> + strategyOnMismatch = MismatchStrategy . DISALLOWED ; <nl> + } <nl> + return strategyOnMismatch ; <nl> + } <nl> + <nl> + / * * <nl> * Utility to safely get an attribute . If it does not exist an exception <nl> * is thrown . <nl> * @ param attributes collect to get attribute from . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / MismatchStrategy . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / MismatchStrategy . java <nl> new file mode 100644 <nl> index 0000000 . . a01fa4f <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / MismatchStrategy . java <nl> @ @ - 0 , 0 + 1 , 45 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2017 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . checks . imports ; <nl> + <nl> + / * * <nl> + * Represents the strategy for checking rules inside ImportControl . <nl> + * @ author Timur Tibeyev <nl> + * @ see ImportControlCheck <nl> + * / <nl> + public enum MismatchStrategy { <nl> + / * * <nl> + * In a case if matching allow / disallow rule was not found , <nl> + * decision should be delegated to the parent and continue checking . <nl> + * / <nl> + DELEGATE _ TO _ PARENT , <nl> + <nl> + / * * <nl> + * In a case if matching allow / disallow rule was not found , <nl> + * import will be allowed by default . <nl> + * / <nl> + ALLOWED , <nl> + <nl> + / * * <nl> + * In a case if matching allow / disallow rule was not found , <nl> + * import will be disallowed by default . <nl> + * / <nl> + DISALLOWED <nl> + } <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd <nl> new file mode 100644 <nl> index 0000000 . . 6de01d9 <nl> - - - / dev / null <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd <nl> @ @ - 0 , 0 + 1 , 94 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + <nl> + < ! - - Add the following to any file that is to be validated against this DTD : <nl> + <nl> + < ! DOCTYPE module PUBLIC <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " <nl> + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > <nl> + - - > <nl> + <nl> + < ! - - <nl> + The root element of the configuration file . <nl> + - - > <nl> + < ! ELEMENT import - control ( ( allow | disallow ) * , subpackage * ) > <nl> + <nl> + < ! - - <nl> + pkg - The root package to be checked . For example " com . puppycrawl " . <nl> + <nl> + regex - Root package name has to be interpreted as <nl> + regular expression . <nl> + <nl> + strategyOnMismatch - Strategy in a case if matching allow / disallow rule <nl> + was not found . Possible values : allowed , disallowed . <nl> + If not defined explicitly , has " disallowed " value by default . <nl> + - - > <nl> + < ! ATTLIST import - control <nl> + pkg CDATA # REQUIRED <nl> + strategyOnMismatch ( allowed | disallowed ) # IMPLIED <nl> + regex ( true ) # IMPLIED > <nl> + <nl> + < ! - - <nl> + Represents a subpackage of the parent element . <nl> + - - > <nl> + < ! ELEMENT subpackage ( ( allow | disallow ) * , subpackage * ) > <nl> + <nl> + < ! - - <nl> + name - The name of the subpackage . For example if the name is " tools " <nl> + and the parent is " com . puppycrawl " , then it corresponds to the <nl> + package " com . puppycrawl . tools " . If the regex attribute is " true " the <nl> + name is interpreted as a regular expression . <nl> + <nl> + regex - Subpackage name has to be interpreted as <nl> + regular expression . <nl> + <nl> + strategyOnMismatch - Strategy in a case if matching allow / disallow rule <nl> + was not found . Possible values : allowed , disallowed , delegateToParent . <nl> + If not defined explicitly , has " delegateToParent " value by default . <nl> + - - > <nl> + < ! ATTLIST subpackage <nl> + name CDATA # REQUIRED <nl> + strategyOnMismatch ( delegateToParent | allowed | disallowed ) # IMPLIED <nl> + regex ( true ) # IMPLIED > <nl> + <nl> + < ! - - <nl> + Represents attributes for an import rule which can either allow or <nl> + disallow access . <nl> + <nl> + pkg - The fully qualified name of the package to allow / disallow . <nl> + Cannot be specified in conjunction with " class " . <nl> + <nl> + class - The fully qualified name of the class to allow / disallow . <nl> + Cannot be specified in conjunction with " pkg " . <nl> + <nl> + exact - match - Only valid with " pkg " . Specifies whether the package <nl> + name matching should be exact . For example , the pkg <nl> + " com . puppycrawl . tools " will match the import <nl> + " com . puppycrawl . tools . checkstyle . api . * " when the option is not set , <nl> + but will not match if the option is set . <nl> + <nl> + local - only - Indicates that the rule is to apply only to the current <nl> + package and not to subpackages . <nl> + <nl> + regex - Indicates that the class or package name has to be interpreted as <nl> + regular expression . <nl> + - - > <nl> + < ! ENTITY % attlist . importrule " <nl> + pkg CDATA # IMPLIED <nl> + exact - match ( true ) # IMPLIED <nl> + class CDATA # IMPLIED <nl> + local - only ( true ) # IMPLIED <nl> + regex ( true ) # IMPLIED " > <nl> + <nl> + < ! - - <nl> + Represents an import rule that will allow access . <nl> + - - > <nl> + < ! ELEMENT allow EMPTY > <nl> + < ! ATTLIST allow <nl> + % attlist . importrule ; > <nl> + <nl> + < ! - - <nl> + Represents an import rule that will disallow access . <nl> + - - > <nl> + < ! ELEMENT disallow EMPTY > <nl> + < ! ATTLIST disallow <nl> + % attlist . importrule ; > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> index 794dd85 . . 288dda2 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> @ @ - 194 , 6 + 194 , 54 @ @ public class ImportControlCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testStrategyOnMismatchOne ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> + checkConfig . addAttribute ( " file " , getPath ( " import - control _ strategy - on - mismatch _ one . xml " ) ) ; <nl> + final String [ ] expected = { <nl> + " 3 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Image " ) , <nl> + " 4 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " javax . swing . border . * " ) , <nl> + " 6 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Button . ABORT " ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testStrategyOnMismatchTwo ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> + checkConfig . addAttribute ( " file " , getPath ( " import - control _ strategy - on - mismatch _ two . xml " ) ) ; <nl> + final String [ ] expected = { <nl> + " 3 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Image " ) , <nl> + " 6 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Button . ABORT " ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testStrategyOnMismatchThree ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> + checkConfig . addAttribute ( " file " , getPath ( " import - control _ strategy - on - mismatch _ three . xml " ) ) ; <nl> + final String [ ] expected = { <nl> + " 3 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Image " ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testStrategyOnMismatchFour ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; <nl> + checkConfig . addAttribute ( " file " , getPath ( " import - control _ strategy - on - mismatch _ four . xml " ) ) ; <nl> + final String [ ] expected = { <nl> + " 3 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Image " ) , <nl> + " 4 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " javax . swing . border . * " ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testPkgRegExpInParent ( ) throws Exception { <nl> testRegExpInPackage ( " import - control _ pkg - re - in - parent . xml " ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ four . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ four . xml <nl> new file mode 100644 <nl> index 0000000 . . face302 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ four . xml <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + < ! DOCTYPE import - control PUBLIC <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " <nl> + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > <nl> + <nl> + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks " strategyOnMismatch = " disallowed " > <nl> + < subpackage name = " imports " strategyOnMismatch = " allowed " > <nl> + < disallow class = " java \ . . * \ . Image " local - only = " true " regex = " true " / > <nl> + < disallow pkg = " javax \ . swing " regex = " true " / > <nl> + < / subpackage > <nl> + < / import - control > <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ one . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ one . xml <nl> new file mode 100644 <nl> index 0000000 . . 28a2a8a <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ one . xml <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + < ! DOCTYPE import - control PUBLIC <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " <nl> + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > <nl> + <nl> + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks " strategyOnMismatch = " disallowed " > <nl> + < allow class = " java \ . awt \ . Image " regex = " true " / > <nl> + < allow class = " java \ . . * \ . File " local - only = " true " regex = " true " / > <nl> + < subpackage name = " imports " strategyOnMismatch = " delegateToParent " > <nl> + < disallow class = " java \ . . * \ . Image " local - only = " true " regex = " true " / > <nl> + < allow pkg = " javax \ . swing " exact - match = " true " regex = " true " / > <nl> + < allow pkg = " java \ . io " exact - match = " true " local - only = " true " regex = " true " / > <nl> + < / subpackage > <nl> + < / import - control > <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ three . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ three . xml <nl> new file mode 100644 <nl> index 0000000 . . 80ea6c9 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ three . xml <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + < ! DOCTYPE import - control PUBLIC <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " <nl> + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > <nl> + <nl> + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks " strategyOnMismatch = " allowed " > <nl> + < subpackage name = " imports " strategyOnMismatch = " delegateToParent " > <nl> + < disallow class = " java \ . . * \ . Image " local - only = " true " regex = " true " / > <nl> + < / subpackage > <nl> + < / import - control > <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ two . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ two . xml <nl> new file mode 100644 <nl> index 0000000 . . a4b2bd6 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ two . xml <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + < ! DOCTYPE import - control PUBLIC <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " <nl> + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > <nl> + <nl> + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks " strategyOnMismatch = " allowed " > <nl> + < allow class = " java \ . awt \ . Image " regex = " true " / > <nl> + < allow class = " java \ . . * \ . File " local - only = " true " regex = " true " / > <nl> + < subpackage name = " imports " strategyOnMismatch = " disallowed " > <nl> + < disallow class = " java \ . . * \ . Image " local - only = " true " regex = " true " / > <nl> + < allow pkg = " javax \ . swing " regex = " true " / > <nl> + < allow pkg = " java \ . io " exact - match = " true " local - only = " true " regex = " true " / > <nl> + < / subpackage > <nl> + < / import - control > <nl> diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml <nl> index c042b25 . . 8f95d72 100644 <nl> - - - a / src / xdocs / config _ imports . xml <nl> + + + b / src / xdocs / config _ imports . xml <nl> @ @ - 858 , 8 + 858 , 8 @ @ public class InputIllegalImport { } <nl> <nl> < p > <nl> The DTD for a import control XML document is at < a <nl> - href = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd " > <nl> - http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd < / a > . It <nl> + href = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > <nl> + http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd < / a > . It <nl> contains documentation on each of the elements and attributes . <nl> < / p > <nl> <nl> @ @ - 871 , 8 + 871 , 8 @ @ public class InputIllegalImport { } <nl> <nl> < pre > <nl> & lt ; ! DOCTYPE import - control PUBLIC <nl> - & quot ; - / / Puppy Crawl / / DTD Import Control 1 . 2 / / EN & quot ; <nl> - & quot ; http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd & quot ; & gt ; <nl> + & quot ; - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN & quot ; <nl> + & quot ; http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd & quot ; & gt ; <nl> < / pre > <nl> < / subsection > <nl> <nl> @ @ - 997 , 6 + 997 , 64 @ @ public class InputIllegalImport { } <nl> < / source > <nl> <nl> < p > <nl> + In the next examples usage of < code > strategyOnMismatch < / code > property is shown . <nl> + This property defines strategy in a case when no matching allow / disallow rule was found . <nl> + Property < code > strategyOnMismatch < / code > is attribute of < code > import - control < / code > and < code > subpackage < / code > tags . <nl> + Property can have following values for < code > import - control < / code > tag : <nl> + < ul > <nl> + < li > disallowed ( default value ) - if there is no matching allow / disallow rule in any of the subpackages , including the root level ( import - control ) , then the import is disallowed . < / li > <nl> + < li > allowed - if there is no matching allow / disallow rule in any of the subpackages , including the root level , then the import is allowed . < / li > <nl> + < / ul > <nl> + And following values for < code > subpackage < / code > tags : <nl> + < ul > <nl> + < li > delegateToParent ( default value ) - if there is no matching allow / disallow rule inside the current subpackage , then it continues checking in the parent subpackage . < / li > <nl> + < li > allowed - if there is no matching allow / disallow rule inside the current subpackage , then the import is allowed . < / li > <nl> + < li > disallowed - if there is no matching allow / disallow rule inside the current subpackage , then the import is disallowed . < / li > <nl> + < / ul > <nl> + < / p > <nl> + <nl> + < p > <nl> + The following example demonstrates usage of < code > strategyOnMismatch < / code > property for < code > import - control < / code > tag . Here all imports are allowed except < code > java . awt . Image < / code > and < code > java . io . File < / code > classes . <nl> + < / p > <nl> + < source > <nl> + & lt ; import - control pkg = & quot ; com . puppycrawl . tools . checkstyle . checks & quot ; strategyOnMismatch = & quot ; allowed & quot ; & gt ; <nl> + & lt ; disallow class = & quot ; java . awt . Image & quot ; / & gt ; <nl> + & lt ; disallow class = & quot ; java . io . File & quot ; / & gt ; <nl> + & lt ; / import - control & gt ; <nl> + < / source > <nl> + <nl> + < p > <nl> + In the example below , any import is disallowed inside < code > com . puppycrawl . tools . checkstyle . checks . imports < / code > package except imports from package < code > javax . swing < / code > and class < code > java . io . File < / code > . <nl> + However , any import is allowed in the classes outside of < code > com . puppycrawl . tools . checkstyle . checks . imports < / code > package . <nl> + < / p > <nl> + < source > <nl> + & lt ; import - control pkg = & quot ; com . puppycrawl . tools . checkstyle . checks & quot ; strategyOnMismatch = & quot ; allowed & quot ; & gt ; <nl> + & lt ; subpackage name = & quot ; imports & quot ; strategyOnMismatch = & quot ; disallowed & quot ; & gt ; <nl> + & lt ; allow pkg = & quot ; javax . swing & quot ; / & gt ; <nl> + & lt ; allow class = & quot ; java . io . File & quot ; / & gt ; <nl> + & lt ; / subpackage & gt ; <nl> + & lt ; / import - control & gt ; <nl> + < / source > <nl> + <nl> + < p > <nl> + When < code > strategyOnMismatch < / code > has < code > allowed < / code > or < code > disallowed < / code > value for < code > subpackage < / code > tag , it makes < code > subpackage < / code > isolated from parent rules . <nl> + In the next example , if no matching rule was found inside < code > com . puppycrawl . tools . checkstyle . checks . filters < / code > then it continues checking in the parent subpackage , while for < code > com . puppycrawl . tools . checkstyle . checks . imports < / code > import will be allowed by default . <nl> + < / p > <nl> + < source > <nl> + & lt ; import - control pkg = & quot ; com . puppycrawl . tools . checkstyle . checks & quot ; & gt ; <nl> + & lt ; allow class = & quot ; java \ . awt \ . Image & quot ; regex = & quot ; true & quot ; / & gt ; <nl> + & lt ; allow class = & quot ; java \ . . * \ . File & quot ; local - only = & quot ; true & quot ; regex = & quot ; true & quot ; / & gt ; <nl> + & lt ; subpackage name = & quot ; imports & quot ; strategyOnMismatch = & quot ; allowed & quot ; & gt ; <nl> + & lt ; allow pkg = & quot ; javax \ . swing & quot ; regex = & quot ; true & quot ; / & gt ; <nl> + & lt ; allow pkg = & quot ; java \ . io & quot ; exact - match = & quot ; true & quot ; local - only = & quot ; true & quot ; regex = & quot ; true & quot ; / & gt ; <nl> + & lt ; / subpackage & gt ; <nl> + & lt ; subpackage name = & quot ; filters & quot ; & gt ; <nl> + & lt ; allow class = & quot ; javax . util . Date & quot ; / & gt ; <nl> + & lt ; / subpackage & gt ; <nl> + & lt ; / import - control & gt ; <nl> + < / source > <nl> + <nl> + < p > <nl> For a real - life import control file look at the file called < a <nl> href = " https : / / github . com / checkstyle / checkstyle / blob / master / config / import - control . xml " > <nl> import - control . xml < / a >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> index b1f0b39 . . d45f86f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> @ @ - 54 , 7 + 54 , 7 @ @ public final class AbstractClassNameCheck extends AbstractFormatCheck { <nl> public static final String NO _ ABSTRACT _ CLASS _ MODIFIER = " no . abstract . class . modifier " ; <nl> <nl> / * * Default format for abstract class names * / <nl> - private static final String DEFAULT _ FORMAT = " ^ Abstract . + $ | ^ . * Factory $ " ; <nl> + private static final String DEFAULT _ FORMAT = " ^ Abstract . + $ " ; <nl> <nl> / * * whether to ignore checking the modifier * / <nl> private boolean ignoreModifier ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheckTest . java <nl> index 7f60108 . . e07be9f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheckTest . java <nl> @ @ - 37 , 13 + 37 , 12 @ @ public class AbstractClassNameCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " ignoreName " , " false " ) ; <nl> checkConfig . addAttribute ( " ignoreModifier " , " true " ) ; <nl> <nl> - final String pattern = " ^ Abstract . + $ | ^ . * Factory $ " ; <nl> + final String pattern = " ^ Abstract . + $ " ; <nl> <nl> final String [ ] expected = { <nl> " 3 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " InputAbstractClassName " , pattern ) , <nl> " 6 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractClassName " , pattern ) , <nl> - " 9 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " FactoryWithBadName " , pattern ) , <nl> - " 13 : 5 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractInnerClass " , pattern ) , <nl> + " 10 : 5 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractInnerClass " , pattern ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " naming " + File . separator + " InputAbstractClassName . java " ) , expected ) ; <nl> @ @ - 56 , 10 + 55 , 8 @ @ public class AbstractClassNameCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " ignoreModifier " , " false " ) ; <nl> <nl> final String [ ] expected = { <nl> - " 26 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractClass " ) , <nl> - " 29 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " Class1Factory " ) , <nl> - " 33 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractInnerClass " ) , <nl> - " 38 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " WellNamedFactory " ) , <nl> + " 18 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractClass " ) , <nl> + " 22 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractInnerClass " ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " naming " + File . separator + " InputAbstractClassName . java " ) , expected ) ; <nl> @ @ - 71 , 17 + 68 , 14 @ @ public class AbstractClassNameCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " ignoreName " , " false " ) ; <nl> checkConfig . addAttribute ( " ignoreModifier " , " false " ) ; <nl> <nl> - final String pattern = " ^ Abstract . + $ | ^ . * Factory $ " ; <nl> + final String pattern = " ^ Abstract . + $ " ; <nl> <nl> final String [ ] expected = { <nl> " 3 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " InputAbstractClassName " , pattern ) , <nl> " 6 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractClassName " , pattern ) , <nl> - " 9 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " FactoryWithBadName " , pattern ) , <nl> - " 13 : 5 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractInnerClass " , pattern ) , <nl> - " 26 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractClass " ) , <nl> - " 29 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " Class1Factory " ) , <nl> - " 33 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractInnerClass " ) , <nl> - " 38 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " WellNamedFactory " ) , <nl> + " 10 : 5 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractInnerClass " , pattern ) , <nl> + " 18 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractClass " ) , <nl> + " 22 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractInnerClass " ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " naming " + File . separator + " InputAbstractClassName . java " ) , expected ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / naming / InputAbstractClassName . java b / src / test / resources / com / puppycrawl / tools / checkstyle / naming / InputAbstractClassName . java <nl> index 4087923 . . b7cbb99 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / naming / InputAbstractClassName . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / naming / InputAbstractClassName . java <nl> @ @ - 2 , 39 + 2 , 23 @ @ package com . puppycrawl . tools . checkstyle . naming ; <nl> <nl> abstract public class InputAbstractClassName { <nl> } <nl> - / / abstract - - > ^ Abstract . * $ | ^ . * Factory $ <nl> + / / abstract - - > ^ Abstract . * $ <nl> abstract class NonAbstractClassName { <nl> } <nl> <nl> - abstract class FactoryWithBadName { <nl> - } <nl> - <nl> abstract class AbstractClassName { <nl> abstract class NonAbstractInnerClass { <nl> } <nl> } <nl> <nl> - abstract class ClassFactory { <nl> - abstract class WellNamedFactory { <nl> - } <nl> - } <nl> - <nl> class NonAbstractClass { <nl> } <nl> <nl> - / / ^ Abstract . * $ | ^ . * Factory $ - - > abstract <nl> + / / ^ Abstract . * $ - - > abstract <nl> class AbstractClass { <nl> } <nl> <nl> - class Class1Factory { <nl> - } <nl> - <nl> abstract class AbstractClassName2 { <nl> class AbstractInnerClass { <nl> } <nl> } <nl> - <nl> - abstract class Class2Factory { <nl> - class WellNamedFactory { <nl> - } <nl> - }

TEST DIFF:
diff - - git a / config / catalog . xml b / config / catalog . xml 
 index 6676ce8 . . c6719ff 100644 
 - - - a / config / catalog . xml 
 + + + b / config / catalog . xml 
 @ @ - 11 , 4 + 11 , 5 @ @ 
 < system systemId = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 0 . dtd " uri = " . / . . / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 0 . dtd " / > 
 < system systemId = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 1 . dtd " uri = " . / . . / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 1 . dtd " / > 
 < system systemId = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd " uri = " . / . . / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 2 . dtd " / > 
 + < system systemId = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " uri = " . / . . / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd " / > 
 < / catalog > 
 diff - - git a / config / import - control . xml b / config / import - control . xml 
 index 66a7141 . . 5de5f8c 100644 
 - - - a / config / import - control . xml 
 + + + b / config / import - control . xml 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 < ? xml version = " 1 . 0 " ? > 
 < ! DOCTYPE import - control PUBLIC 
 - " - / / Puppy Crawl / / DTD Import Control 1 . 2 / / EN " 
 - " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd " > 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " 
 + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > 
 
 < import - control pkg = " com . puppycrawl . tools . checkstyle " > 
 
 @ @ - 134 , 10 + 134 , 10 @ @ 
 < / subpackage > 
 < / subpackage > 
 
 - < subpackage name = " doclets " > 
 - < allow class = " java . nio . charset . StandardCharsets " local - only = " true " / > 
 + < subpackage name = " doclets " strategyOnMismatch = " disallowed " > 
 + < allow class = " java . nio . charset . StandardCharsets " / > 
 < allow pkg = " com . sun . javadoc " / > 
 - < disallow pkg = " com \ . puppycrawl \ . tools \ . checkstyle \ . ( checks | ant | filters | gui ) " regex = " true " / > 
 + < allow pkg = " java . io " / > 
 < / subpackage > 
 
 < subpackage name = " filters " > 
 @ @ - 146 , 13 + 146 , 17 @ @ 
 < allow pkg = " com . puppycrawl . tools . checkstyle . utils " / > 
 < / subpackage > 
 
 - < subpackage name = " gui " > 
 + < subpackage name = " gui " strategyOnMismatch = " disallowed " > 
 + < allow pkg = " antlr " / > 
 < allow pkg = " java . awt " / > 
 + < allow pkg = " java . io " / > 
 < allow pkg = " javax . swing " / > 
 + < allow pkg = " java . util " exact - match = " true " / > 
 + < allow pkg = " com . puppycrawl . tools . checkstyle . api " local - only = " true " / > 
 < allow pkg = " com . puppycrawl . tools . checkstyle . utils " local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . TreeWalker " local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . gui . MainFrameModel . ParseMode " 
 - local - only = " true " / > 
 + local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser " local - only = " true " / > 
 < / subpackage > 
 < / import - control > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java 
 index c490202 . . 26c53a5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java 
 @ @ - 56 , 15 + 56 , 20 @ @ class ImportControl { 
 private final Pattern patternForExactMatch ; 
 / * * If this package represents a regular expression . * / 
 private final boolean regex ; 
 + / * * Strategy in a case if matching allow / disallow rule was not found . * / 
 + private final MismatchStrategy strategyOnMismatch ; 
 
 / * * 
 * Construct a root node . 
 * @ param pkgName the name of the package . 
 * @ param regex flags interpretation of pkgName as regex pattern . 
 + * @ param strategyOnMismatch strategy in a case if matching allow / disallow rule was not found . 
 * / 
 - ImportControl ( final String pkgName , final boolean regex ) { 
 + ImportControl ( final String pkgName , final boolean regex , 
 + final MismatchStrategy strategyOnMismatch ) { 
 parent = null ; 
 this . regex = regex ; 
 + this . strategyOnMismatch = strategyOnMismatch ; 
 if ( regex ) { 
 / / ensure that fullPackage is a self - contained regular expression 
 fullPackage = encloseInGroup ( pkgName ) ; 
 @ @ - 79 , 14 + 84 , 26 @ @ class ImportControl { 
 } 
 
 / * * 
 + * Construct a root node . 
 + * @ param pkgName the name of the package . 
 + * @ param regex flags interpretation of pkgName as regex pattern . 
 + * / 
 + ImportControl ( final String pkgName , final boolean regex ) { 
 + this ( pkgName , regex , MismatchStrategy . DISALLOWED ) ; 
 + } 
 + 
 + / * * 
 * Construct a child node . The concatenation of regular expressions needs special care : 
 * see { @ link # ensureSelfContainedRegex ( String , boolean ) } for more details . 
 * @ param parent the parent node . 
 * @ param subPkg the sub package name . 
 * @ param regex flags interpretation of subPkg as regex pattern . 
 + * @ param strategyOnMismatch strategy in a case if matching allow / disallow rule was not found . 
 * / 
 - ImportControl ( final ImportControl parent , final String subPkg , final boolean regex ) { 
 + ImportControl ( final ImportControl parent , final String subPkg , final boolean regex , 
 + final MismatchStrategy strategyOnMismatch ) { 
 this . parent = parent ; 
 + this . strategyOnMismatch = strategyOnMismatch ; 
 if ( regex | | parent . regex ) { 
 / / regex gets inherited 
 final String parentRegex = ensureSelfContainedRegex ( parent . fullPackage , parent . regex ) ; 
 @ @ - 106 , 6 + 123 , 17 @ @ class ImportControl { 
 } 
 
 / * * 
 + * Construct a child node . The concatenation of regular expressions needs special care : 
 + * see { @ link # ensureSelfContainedRegex ( String , boolean ) } for more details . 
 + * @ param parent the parent node . 
 + * @ param subPkg the sub package name . 
 + * @ param regex flags interpretation of subPkg as regex pattern . 
 + * / 
 + ImportControl ( final ImportControl parent , final String subPkg , final boolean regex ) { 
 + this ( parent , subPkg , regex , MismatchStrategy . DELEGATE _ TO _ PARENT ) ; 
 + } 
 + 
 + / * * 
 * Returns a regex that is suitable for concatenation by 1 ) either converting a plain string 
 * into a regular expression ( handling special characters ) or 2 ) by enclosing { @ code input } in 
 * a ( non - capturing ) group if { @ code input } already is a regular expression . 
 @ @ - 255 , 11 + 283 , 23 @ @ class ImportControl { 
 result = returnValue ; 
 } 
 else if ( parent = = null ) { 
 - / / we are the top , so default to not allowed . 
 - result = AccessResult . DISALLOWED ; 
 + if ( strategyOnMismatch = = MismatchStrategy . ALLOWED ) { 
 + result = AccessResult . ALLOWED ; 
 + } 
 + else { 
 + result = AccessResult . DISALLOWED ; 
 + } 
 } 
 else { 
 - result = parent . checkAccess ( inPkg , forImport ) ; 
 + if ( strategyOnMismatch = = MismatchStrategy . ALLOWED ) { 
 + result = AccessResult . ALLOWED ; 
 + } 
 + else if ( strategyOnMismatch = = MismatchStrategy . DISALLOWED ) { 
 + result = AccessResult . DISALLOWED ; 
 + } 
 + else { 
 + result = parent . checkAccess ( inPkg , forImport ) ; 
 + } 
 } 
 return result ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 index 9b9dc2e . . b3f674b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 @ @ - 54 , 6 + 54 , 10 @ @ final class ImportControlLoader extends AbstractLoader { 
 private static final String DTD _ PUBLIC _ ID _ 1 _ 2 = 
 " - / / Puppy Crawl / / DTD Import Control 1 . 2 / / EN " ; 
 
 + / * * The public ID for the configuration dtd . * / 
 + private static final String DTD _ PUBLIC _ ID _ 1 _ 3 = 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " ; 
 + 
 / * * The resource for the configuration dtd . * / 
 private static final String DTD _ RESOURCE _ NAME _ 1 _ 0 = 
 " com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 0 . dtd " ; 
 @ @ - 66 , 12 + 70 , 25 @ @ final class ImportControlLoader extends AbstractLoader { 
 private static final String DTD _ RESOURCE _ NAME _ 1 _ 2 = 
 " com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 2 . dtd " ; 
 
 + / * * The resource for the configuration dtd . * / 
 + private static final String DTD _ RESOURCE _ NAME _ 1 _ 3 = 
 + " com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd " ; 
 + 
 / * * The map to lookup the resource name by the id . * / 
 private static final Map < String , String > DTD _ RESOURCE _ BY _ ID = new HashMap < > ( ) ; 
 
 / * * Name for attribute ' pkg ' . * / 
 private static final String PKG _ ATTRIBUTE _ NAME = " pkg " ; 
 
 + / * * Name for attribute ' strategyOnMismatch ' . * / 
 + private static final String STRATEGY _ ON _ MISMATCH _ ATTRIBUTE _ NAME = " strategyOnMismatch " ; 
 + 
 + / * * Value " allowed " for attribute ' strategyOnMismatch ' . * / 
 + private static final String STRATEGY _ ON _ MISMATCH _ ALLOWED _ VALUE = " allowed " ; 
 + 
 + / * * Value " disallowed " for attribute ' strategyOnMismatch ' . * / 
 + private static final String STRATEGY _ ON _ MISMATCH _ DISALLOWED _ VALUE = " disallowed " ; 
 + 
 / * * Qualified name for element ' subpackage ' . * / 
 private static final String SUBPACKAGE _ ELEMENT _ NAME = " subpackage " ; 
 
 @ @ - 85 , 6 + 102 , 7 @ @ final class ImportControlLoader extends AbstractLoader { 
 DTD _ RESOURCE _ BY _ ID . put ( DTD _ PUBLIC _ ID _ 1 _ 0 , DTD _ RESOURCE _ NAME _ 1 _ 0 ) ; 
 DTD _ RESOURCE _ BY _ ID . put ( DTD _ PUBLIC _ ID _ 1 _ 1 , DTD _ RESOURCE _ NAME _ 1 _ 1 ) ; 
 DTD _ RESOURCE _ BY _ ID . put ( DTD _ PUBLIC _ ID _ 1 _ 2 , DTD _ RESOURCE _ NAME _ 1 _ 2 ) ; 
 + DTD _ RESOURCE _ BY _ ID . put ( DTD _ PUBLIC _ ID _ 1 _ 3 , DTD _ RESOURCE _ NAME _ 1 _ 3 ) ; 
 } 
 
 / * * 
 @ @ - 105 , 13 + 123 , 15 @ @ final class ImportControlLoader extends AbstractLoader { 
 throws SAXException { 
 if ( " import - control " . equals ( qName ) ) { 
 final String pkg = safeGet ( attributes , PKG _ ATTRIBUTE _ NAME ) ; 
 + final MismatchStrategy strategyOnMismatch = getStrategyForImportControl ( attributes ) ; 
 final boolean regex = containsRegexAttribute ( attributes ) ; 
 - stack . push ( new ImportControl ( pkg , regex ) ) ; 
 + stack . push ( new ImportControl ( pkg , regex , strategyOnMismatch ) ) ; 
 } 
 else if ( SUBPACKAGE _ ELEMENT _ NAME . equals ( qName ) ) { 
 final String name = safeGet ( attributes , " name " ) ; 
 + final MismatchStrategy strategyOnMismatch = getStrategyForSubpackage ( attributes ) ; 
 final boolean regex = containsRegexAttribute ( attributes ) ; 
 - stack . push ( new ImportControl ( stack . peek ( ) , name , regex ) ) ; 
 + stack . push ( new ImportControl ( stack . peek ( ) , name , regex , strategyOnMismatch ) ) ; 
 } 
 else if ( ALLOW _ ELEMENT _ NAME . equals ( qName ) | | " disallow " . equals ( qName ) ) { 
 / / Need to handle either " pkg " or " class " attribute . 
 @ @ - 227 , 6 + 247 , 37 @ @ final class ImportControlLoader extends AbstractLoader { 
 } 
 
 / * * 
 + * Utility to get a strategyOnMismatch property for " import - control " tag . 
 + * @ param attributes collect to get attribute from . 
 + * @ return the value of the attribute . 
 + * / 
 + private static MismatchStrategy getStrategyForImportControl ( final Attributes attributes ) { 
 + final String returnValue = attributes . getValue ( STRATEGY _ ON _ MISMATCH _ ATTRIBUTE _ NAME ) ; 
 + MismatchStrategy strategyOnMismatch = MismatchStrategy . DISALLOWED ; 
 + if ( STRATEGY _ ON _ MISMATCH _ ALLOWED _ VALUE . equals ( returnValue ) ) { 
 + strategyOnMismatch = MismatchStrategy . ALLOWED ; 
 + } 
 + return strategyOnMismatch ; 
 + } 
 + 
 + / * * 
 + * Utility to get a strategyOnMismatch property for " subpackage " tag . 
 + * @ param attributes collect to get attribute from . 
 + * @ return the value of the attribute . 
 + * / 
 + private static MismatchStrategy getStrategyForSubpackage ( final Attributes attributes ) { 
 + final String returnValue = attributes . getValue ( STRATEGY _ ON _ MISMATCH _ ATTRIBUTE _ NAME ) ; 
 + MismatchStrategy strategyOnMismatch = MismatchStrategy . DELEGATE _ TO _ PARENT ; 
 + if ( STRATEGY _ ON _ MISMATCH _ ALLOWED _ VALUE . equals ( returnValue ) ) { 
 + strategyOnMismatch = MismatchStrategy . ALLOWED ; 
 + } 
 + else if ( STRATEGY _ ON _ MISMATCH _ DISALLOWED _ VALUE . equals ( returnValue ) ) { 
 + strategyOnMismatch = MismatchStrategy . DISALLOWED ; 
 + } 
 + return strategyOnMismatch ; 
 + } 
 + 
 + / * * 
 * Utility to safely get an attribute . If it does not exist an exception 
 * is thrown . 
 * @ param attributes collect to get attribute from . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / MismatchStrategy . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / MismatchStrategy . java 
 new file mode 100644 
 index 0000000 . . a01fa4f 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / MismatchStrategy . java 
 @ @ - 0 , 0 + 1 , 45 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2017 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . checks . imports ; 
 + 
 + / * * 
 + * Represents the strategy for checking rules inside ImportControl . 
 + * @ author Timur Tibeyev 
 + * @ see ImportControlCheck 
 + * / 
 + public enum MismatchStrategy { 
 + / * * 
 + * In a case if matching allow / disallow rule was not found , 
 + * decision should be delegated to the parent and continue checking . 
 + * / 
 + DELEGATE _ TO _ PARENT , 
 + 
 + / * * 
 + * In a case if matching allow / disallow rule was not found , 
 + * import will be allowed by default . 
 + * / 
 + ALLOWED , 
 + 
 + / * * 
 + * In a case if matching allow / disallow rule was not found , 
 + * import will be disallowed by default . 
 + * / 
 + DISALLOWED 
 + } 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd 
 new file mode 100644 
 index 0000000 . . 6de01d9 
 - - - / dev / null 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / imports / import _ control _ 1 _ 3 . dtd 
 @ @ - 0 , 0 + 1 , 94 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > 
 + 
 + < ! - - Add the following to any file that is to be validated against this DTD : 
 + 
 + < ! DOCTYPE module PUBLIC 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " 
 + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > 
 + - - > 
 + 
 + < ! - - 
 + The root element of the configuration file . 
 + - - > 
 + < ! ELEMENT import - control ( ( allow | disallow ) * , subpackage * ) > 
 + 
 + < ! - - 
 + pkg - The root package to be checked . For example " com . puppycrawl " . 
 + 
 + regex - Root package name has to be interpreted as 
 + regular expression . 
 + 
 + strategyOnMismatch - Strategy in a case if matching allow / disallow rule 
 + was not found . Possible values : allowed , disallowed . 
 + If not defined explicitly , has " disallowed " value by default . 
 + - - > 
 + < ! ATTLIST import - control 
 + pkg CDATA # REQUIRED 
 + strategyOnMismatch ( allowed | disallowed ) # IMPLIED 
 + regex ( true ) # IMPLIED > 
 + 
 + < ! - - 
 + Represents a subpackage of the parent element . 
 + - - > 
 + < ! ELEMENT subpackage ( ( allow | disallow ) * , subpackage * ) > 
 + 
 + < ! - - 
 + name - The name of the subpackage . For example if the name is " tools " 
 + and the parent is " com . puppycrawl " , then it corresponds to the 
 + package " com . puppycrawl . tools " . If the regex attribute is " true " the 
 + name is interpreted as a regular expression . 
 + 
 + regex - Subpackage name has to be interpreted as 
 + regular expression . 
 + 
 + strategyOnMismatch - Strategy in a case if matching allow / disallow rule 
 + was not found . Possible values : allowed , disallowed , delegateToParent . 
 + If not defined explicitly , has " delegateToParent " value by default . 
 + - - > 
 + < ! ATTLIST subpackage 
 + name CDATA # REQUIRED 
 + strategyOnMismatch ( delegateToParent | allowed | disallowed ) # IMPLIED 
 + regex ( true ) # IMPLIED > 
 + 
 + < ! - - 
 + Represents attributes for an import rule which can either allow or 
 + disallow access . 
 + 
 + pkg - The fully qualified name of the package to allow / disallow . 
 + Cannot be specified in conjunction with " class " . 
 + 
 + class - The fully qualified name of the class to allow / disallow . 
 + Cannot be specified in conjunction with " pkg " . 
 + 
 + exact - match - Only valid with " pkg " . Specifies whether the package 
 + name matching should be exact . For example , the pkg 
 + " com . puppycrawl . tools " will match the import 
 + " com . puppycrawl . tools . checkstyle . api . * " when the option is not set , 
 + but will not match if the option is set . 
 + 
 + local - only - Indicates that the rule is to apply only to the current 
 + package and not to subpackages . 
 + 
 + regex - Indicates that the class or package name has to be interpreted as 
 + regular expression . 
 + - - > 
 + < ! ENTITY % attlist . importrule " 
 + pkg CDATA # IMPLIED 
 + exact - match ( true ) # IMPLIED 
 + class CDATA # IMPLIED 
 + local - only ( true ) # IMPLIED 
 + regex ( true ) # IMPLIED " > 
 + 
 + < ! - - 
 + Represents an import rule that will allow access . 
 + - - > 
 + < ! ELEMENT allow EMPTY > 
 + < ! ATTLIST allow 
 + % attlist . importrule ; > 
 + 
 + < ! - - 
 + Represents an import rule that will disallow access . 
 + - - > 
 + < ! ELEMENT disallow EMPTY > 
 + < ! ATTLIST disallow 
 + % attlist . importrule ; > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 index 794dd85 . . 288dda2 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 @ @ - 194 , 6 + 194 , 54 @ @ public class ImportControlCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void testStrategyOnMismatchOne ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 + checkConfig . addAttribute ( " file " , getPath ( " import - control _ strategy - on - mismatch _ one . xml " ) ) ; 
 + final String [ ] expected = { 
 + " 3 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Image " ) , 
 + " 4 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " javax . swing . border . * " ) , 
 + " 6 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Button . ABORT " ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testStrategyOnMismatchTwo ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 + checkConfig . addAttribute ( " file " , getPath ( " import - control _ strategy - on - mismatch _ two . xml " ) ) ; 
 + final String [ ] expected = { 
 + " 3 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Image " ) , 
 + " 6 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Button . ABORT " ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testStrategyOnMismatchThree ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 + checkConfig . addAttribute ( " file " , getPath ( " import - control _ strategy - on - mismatch _ three . xml " ) ) ; 
 + final String [ ] expected = { 
 + " 3 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Image " ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testStrategyOnMismatchFour ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( ImportControlCheck . class ) ; 
 + checkConfig . addAttribute ( " file " , getPath ( " import - control _ strategy - on - mismatch _ four . xml " ) ) ; 
 + final String [ ] expected = { 
 + " 3 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . awt . Image " ) , 
 + " 4 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " javax . swing . border . * " ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testPkgRegExpInParent ( ) throws Exception { 
 testRegExpInPackage ( " import - control _ pkg - re - in - parent . xml " ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ four . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ four . xml 
 new file mode 100644 
 index 0000000 . . face302 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ four . xml 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + < ! DOCTYPE import - control PUBLIC 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " 
 + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > 
 + 
 + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks " strategyOnMismatch = " disallowed " > 
 + < subpackage name = " imports " strategyOnMismatch = " allowed " > 
 + < disallow class = " java \ . . * \ . Image " local - only = " true " regex = " true " / > 
 + < disallow pkg = " javax \ . swing " regex = " true " / > 
 + < / subpackage > 
 + < / import - control > 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ one . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ one . xml 
 new file mode 100644 
 index 0000000 . . 28a2a8a 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ one . xml 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + < ! DOCTYPE import - control PUBLIC 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " 
 + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > 
 + 
 + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks " strategyOnMismatch = " disallowed " > 
 + < allow class = " java \ . awt \ . Image " regex = " true " / > 
 + < allow class = " java \ . . * \ . File " local - only = " true " regex = " true " / > 
 + < subpackage name = " imports " strategyOnMismatch = " delegateToParent " > 
 + < disallow class = " java \ . . * \ . Image " local - only = " true " regex = " true " / > 
 + < allow pkg = " javax \ . swing " exact - match = " true " regex = " true " / > 
 + < allow pkg = " java \ . io " exact - match = " true " local - only = " true " regex = " true " / > 
 + < / subpackage > 
 + < / import - control > 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ three . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ three . xml 
 new file mode 100644 
 index 0000000 . . 80ea6c9 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ three . xml 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + < ! DOCTYPE import - control PUBLIC 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " 
 + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > 
 + 
 + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks " strategyOnMismatch = " allowed " > 
 + < subpackage name = " imports " strategyOnMismatch = " delegateToParent " > 
 + < disallow class = " java \ . . * \ . Image " local - only = " true " regex = " true " / > 
 + < / subpackage > 
 + < / import - control > 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ two . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ two . xml 
 new file mode 100644 
 index 0000000 . . a4b2bd6 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / import - control _ strategy - on - mismatch _ two . xml 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + < ! DOCTYPE import - control PUBLIC 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " 
 + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > 
 + 
 + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks " strategyOnMismatch = " allowed " > 
 + < allow class = " java \ . awt \ . Image " regex = " true " / > 
 + < allow class = " java \ . . * \ . File " local - only = " true " regex = " true " / > 
 + < subpackage name = " imports " strategyOnMismatch = " disallowed " > 
 + < disallow class = " java \ . . * \ . Image " local - only = " true " regex = " true " / > 
 + < allow pkg = " javax \ . swing " regex = " true " / > 
 + < allow pkg = " java \ . io " exact - match = " true " local - only = " true " regex = " true " / > 
 + < / subpackage > 
 + < / import - control > 
 diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml 
 index c042b25 . . 8f95d72 100644 
 - - - a / src / xdocs / config _ imports . xml 
 + + + b / src / xdocs / config _ imports . xml 
 @ @ - 858 , 8 + 858 , 8 @ @ public class InputIllegalImport { } 
 
 < p > 
 The DTD for a import control XML document is at < a 
 - href = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd " > 
 - http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd < / a > . It 
 + href = " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > 
 + http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd < / a > . It 
 contains documentation on each of the elements and attributes . 
 < / p > 
 
 @ @ - 871 , 8 + 871 , 8 @ @ public class InputIllegalImport { } 
 
 < pre > 
 & lt ; ! DOCTYPE import - control PUBLIC 
 - & quot ; - / / Puppy Crawl / / DTD Import Control 1 . 2 / / EN & quot ; 
 - & quot ; http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 2 . dtd & quot ; & gt ; 
 + & quot ; - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN & quot ; 
 + & quot ; http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd & quot ; & gt ; 
 < / pre > 
 < / subsection > 
 
 @ @ - 997 , 6 + 997 , 64 @ @ public class InputIllegalImport { } 
 < / source > 
 
 < p > 
 + In the next examples usage of < code > strategyOnMismatch < / code > property is shown . 
 + This property defines strategy in a case when no matching allow / disallow rule was found . 
 + Property < code > strategyOnMismatch < / code > is attribute of < code > import - control < / code > and < code > subpackage < / code > tags . 
 + Property can have following values for < code > import - control < / code > tag : 
 + < ul > 
 + < li > disallowed ( default value ) - if there is no matching allow / disallow rule in any of the subpackages , including the root level ( import - control ) , then the import is disallowed . < / li > 
 + < li > allowed - if there is no matching allow / disallow rule in any of the subpackages , including the root level , then the import is allowed . < / li > 
 + < / ul > 
 + And following values for < code > subpackage < / code > tags : 
 + < ul > 
 + < li > delegateToParent ( default value ) - if there is no matching allow / disallow rule inside the current subpackage , then it continues checking in the parent subpackage . < / li > 
 + < li > allowed - if there is no matching allow / disallow rule inside the current subpackage , then the import is allowed . < / li > 
 + < li > disallowed - if there is no matching allow / disallow rule inside the current subpackage , then the import is disallowed . < / li > 
 + < / ul > 
 + < / p > 
 + 
 + < p > 
 + The following example demonstrates usage of < code > strategyOnMismatch < / code > property for < code > import - control < / code > tag . Here all imports are allowed except < code > java . awt . Image < / code > and < code > java . io . File < / code > classes . 
 + < / p > 
 + < source > 
 + & lt ; import - control pkg = & quot ; com . puppycrawl . tools . checkstyle . checks & quot ; strategyOnMismatch = & quot ; allowed & quot ; & gt ; 
 + & lt ; disallow class = & quot ; java . awt . Image & quot ; / & gt ; 
 + & lt ; disallow class = & quot ; java . io . File & quot ; / & gt ; 
 + & lt ; / import - control & gt ; 
 + < / source > 
 + 
 + < p > 
 + In the example below , any import is disallowed inside < code > com . puppycrawl . tools . checkstyle . checks . imports < / code > package except imports from package < code > javax . swing < / code > and class < code > java . io . File < / code > . 
 + However , any import is allowed in the classes outside of < code > com . puppycrawl . tools . checkstyle . checks . imports < / code > package . 
 + < / p > 
 + < source > 
 + & lt ; import - control pkg = & quot ; com . puppycrawl . tools . checkstyle . checks & quot ; strategyOnMismatch = & quot ; allowed & quot ; & gt ; 
 + & lt ; subpackage name = & quot ; imports & quot ; strategyOnMismatch = & quot ; disallowed & quot ; & gt ; 
 + & lt ; allow pkg = & quot ; javax . swing & quot ; / & gt ; 
 + & lt ; allow class = & quot ; java . io . File & quot ; / & gt ; 
 + & lt ; / subpackage & gt ; 
 + & lt ; / import - control & gt ; 
 + < / source > 
 + 
 + < p > 
 + When < code > strategyOnMismatch < / code > has < code > allowed < / code > or < code > disallowed < / code > value for < code > subpackage < / code > tag , it makes < code > subpackage < / code > isolated from parent rules . 
 + In the next example , if no matching rule was found inside < code > com . puppycrawl . tools . checkstyle . checks . filters < / code > then it continues checking in the parent subpackage , while for < code > com . puppycrawl . tools . checkstyle . checks . imports < / code > import will be allowed by default . 
 + < / p > 
 + < source > 
 + & lt ; import - control pkg = & quot ; com . puppycrawl . tools . checkstyle . checks & quot ; & gt ; 
 + & lt ; allow class = & quot ; java \ . awt \ . Image & quot ; regex = & quot ; true & quot ; / & gt ; 
 + & lt ; allow class = & quot ; java \ . . * \ . File & quot ; local - only = & quot ; true & quot ; regex = & quot ; true & quot ; / & gt ; 
 + & lt ; subpackage name = & quot ; imports & quot ; strategyOnMismatch = & quot ; allowed & quot ; & gt ; 
 + & lt ; allow pkg = & quot ; javax \ . swing & quot ; regex = & quot ; true & quot ; / & gt ; 
 + & lt ; allow pkg = & quot ; java \ . io & quot ; exact - match = & quot ; true & quot ; local - only = & quot ; true & quot ; regex = & quot ; true & quot ; / & gt ; 
 + & lt ; / subpackage & gt ; 
 + & lt ; subpackage name = & quot ; filters & quot ; & gt ; 
 + & lt ; allow class = & quot ; javax . util . Date & quot ; / & gt ; 
 + & lt ; / subpackage & gt ; 
 + & lt ; / import - control & gt ; 
 + < / source > 
 + 
 + < p > 
 For a real - life import control file look at the file called < a 
 href = " https : / / github . com / checkstyle / checkstyle / blob / master / config / import - control . xml " > 
 import - control . xml < / a >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 index b1f0b39 . . d45f86f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 @ @ - 54 , 7 + 54 , 7 @ @ public final class AbstractClassNameCheck extends AbstractFormatCheck { 
 public static final String NO _ ABSTRACT _ CLASS _ MODIFIER = " no . abstract . class . modifier " ; 
 
 / * * Default format for abstract class names * / 
 - private static final String DEFAULT _ FORMAT = " ^ Abstract . + $ | ^ . * Factory $ " ; 
 + private static final String DEFAULT _ FORMAT = " ^ Abstract . + $ " ; 
 
 / * * whether to ignore checking the modifier * / 
 private boolean ignoreModifier ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheckTest . java 
 index 7f60108 . . e07be9f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheckTest . java 
 @ @ - 37 , 13 + 37 , 12 @ @ public class AbstractClassNameCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " ignoreName " , " false " ) ; 
 checkConfig . addAttribute ( " ignoreModifier " , " true " ) ; 
 
 - final String pattern = " ^ Abstract . + $ | ^ . * Factory $ " ; 
 + final String pattern = " ^ Abstract . + $ " ; 
 
 final String [ ] expected = { 
 " 3 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " InputAbstractClassName " , pattern ) , 
 " 6 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractClassName " , pattern ) , 
 - " 9 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " FactoryWithBadName " , pattern ) , 
 - " 13 : 5 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractInnerClass " , pattern ) , 
 + " 10 : 5 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractInnerClass " , pattern ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " naming " + File . separator + " InputAbstractClassName . java " ) , expected ) ; 
 @ @ - 56 , 10 + 55 , 8 @ @ public class AbstractClassNameCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " ignoreModifier " , " false " ) ; 
 
 final String [ ] expected = { 
 - " 26 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractClass " ) , 
 - " 29 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " Class1Factory " ) , 
 - " 33 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractInnerClass " ) , 
 - " 38 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " WellNamedFactory " ) , 
 + " 18 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractClass " ) , 
 + " 22 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractInnerClass " ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " naming " + File . separator + " InputAbstractClassName . java " ) , expected ) ; 
 @ @ - 71 , 17 + 68 , 14 @ @ public class AbstractClassNameCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " ignoreName " , " false " ) ; 
 checkConfig . addAttribute ( " ignoreModifier " , " false " ) ; 
 
 - final String pattern = " ^ Abstract . + $ | ^ . * Factory $ " ; 
 + final String pattern = " ^ Abstract . + $ " ; 
 
 final String [ ] expected = { 
 " 3 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " InputAbstractClassName " , pattern ) , 
 " 6 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractClassName " , pattern ) , 
 - " 9 : 1 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " FactoryWithBadName " , pattern ) , 
 - " 13 : 5 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractInnerClass " , pattern ) , 
 - " 26 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractClass " ) , 
 - " 29 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " Class1Factory " ) , 
 - " 33 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractInnerClass " ) , 
 - " 38 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " WellNamedFactory " ) , 
 + " 10 : 5 : " + getCheckMessage ( ILLEGAL _ ABSTRACT _ CLASS _ NAME , " NonAbstractInnerClass " , pattern ) , 
 + " 18 : 1 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractClass " ) , 
 + " 22 : 5 : " + getCheckMessage ( NO _ ABSTRACT _ CLASS _ MODIFIER , " AbstractInnerClass " ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " naming " + File . separator + " InputAbstractClassName . java " ) , expected ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / naming / InputAbstractClassName . java b / src / test / resources / com / puppycrawl / tools / checkstyle / naming / InputAbstractClassName . java 
 index 4087923 . . b7cbb99 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / naming / InputAbstractClassName . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / naming / InputAbstractClassName . java 
 @ @ - 2 , 39 + 2 , 23 @ @ package com . puppycrawl . tools . checkstyle . naming ; 
 
 abstract public class InputAbstractClassName { 
 } 
 - / / abstract - - > ^ Abstract . * $ | ^ . * Factory $ 
 + / / abstract - - > ^ Abstract . * $ 
 abstract class NonAbstractClassName { 
 } 
 
 - abstract class FactoryWithBadName { 
 - } 
 - 
 abstract class AbstractClassName { 
 abstract class NonAbstractInnerClass { 
 } 
 } 
 
 - abstract class ClassFactory { 
 - abstract class WellNamedFactory { 
 - } 
 - } 
 - 
 class NonAbstractClass { 
 } 
 
 - / / ^ Abstract . * $ | ^ . * Factory $ - - > abstract 
 + / / ^ Abstract . * $ - - > abstract 
 class AbstractClass { 
 } 
 
 - class Class1Factory { 
 - } 
 - 
 abstract class AbstractClassName2 { 
 class AbstractInnerClass { 
 } 
 } 
 - 
 - abstract class Class2Factory { 
 - class WellNamedFactory { 
 - } 
 - }
