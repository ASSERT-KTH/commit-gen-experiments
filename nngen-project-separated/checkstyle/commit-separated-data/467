BLEU SCORE: 0.037477767366779206

TEST MSG: Issue # 5327 : fixed finding annotation name with comment embedded
GENERATED MSG: Fix value pair representation in SuppressWarnings check . # 1246

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtility . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtility . java <nl> index bb673e9 . . a36d609 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtility . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtility . java <nl> @ @ - 155 , 7 + 155 , 7 @ @ public final class AnnotationUtility { <nl> for ( DetailAST child = holder . getFirstChild ( ) ; <nl> child ! = null ; child = child . getNextSibling ( ) ) { <nl> if ( child . getType ( ) = = TokenTypes . ANNOTATION ) { <nl> - final DetailAST firstChild = child . getFirstChild ( ) ; <nl> + final DetailAST firstChild = child . findFirstToken ( TokenTypes . AT ) ; <nl> final String name = <nl> FullIdent . createFullIdent ( firstChild . getNextSibling ( ) ) . getText ( ) ; <nl> if ( annotation . equals ( name ) ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java <nl> index 090b2d3 . . a000ea5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java <nl> @ @ - 173 , 6 + 173 , 7 @ @ public class AnnotationUtilityTest { <nl> final DetailAST annotationName = new DetailAST ( ) ; <nl> annotations . setType ( TokenTypes . ANNOTATIONS ) ; <nl> annotation . setType ( TokenTypes . ANNOTATION ) ; <nl> + annotationNameHolder . setType ( TokenTypes . AT ) ; <nl> annotationName . setText ( " Annotation " ) ; <nl> <nl> annotationNameHolder . setNextSibling ( annotationName ) ; <nl> @ @ - 184 , 4 + 185 , 31 @ @ public class AnnotationUtilityTest { <nl> assertTrue ( " Annotation should contain " + astForTest , <nl> AnnotationUtility . containsAnnotation ( astForTest , " Annotation " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testContainsAnnotationWithComment ( ) { <nl> + final DetailAST astForTest = new DetailAST ( ) ; <nl> + astForTest . setType ( TokenTypes . PACKAGE _ DEF ) ; <nl> + final DetailAST child = new DetailAST ( ) ; <nl> + final DetailAST annotations = new DetailAST ( ) ; <nl> + final DetailAST annotation = new DetailAST ( ) ; <nl> + final DetailAST annotationNameHolder = new DetailAST ( ) ; <nl> + final DetailAST annotationName = new DetailAST ( ) ; <nl> + final DetailAST comment = new DetailAST ( ) ; <nl> + annotations . setType ( TokenTypes . ANNOTATIONS ) ; <nl> + annotation . setType ( TokenTypes . ANNOTATION ) ; <nl> + annotationNameHolder . setType ( TokenTypes . AT ) ; <nl> + comment . setType ( TokenTypes . BLOCK _ COMMENT _ BEGIN ) ; <nl> + annotationName . setText ( " Annotation " ) ; <nl> + <nl> + annotationNameHolder . setNextSibling ( annotationName ) ; <nl> + annotation . setFirstChild ( comment ) ; <nl> + comment . setNextSibling ( annotationNameHolder ) ; <nl> + annotations . setFirstChild ( annotation ) ; <nl> + child . setNextSibling ( annotations ) ; <nl> + astForTest . setFirstChild ( child ) ; <nl> + <nl> + assertTrue ( " Annotation should contain " + astForTest , <nl> + AnnotationUtility . containsAnnotation ( astForTest , " Annotation " ) ) ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java <nl> index 1a95cca . . 6f8f346 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java <nl> @ @ - 122 , 7 + 122 , 8 @ @ public class AvoidStaticImportCheck <nl> / / a starred import <nl> final String excludeMinusDotStar = <nl> exclude . substring ( 0 , exclude . length ( ) - 2 ) ; <nl> - if ( classOrStaticMember . startsWith ( excludeMinusDotStar ) ) { <nl> + if ( classOrStaticMember . startsWith ( excludeMinusDotStar ) <nl> + & & ! classOrStaticMember . equals ( excludeMinusDotStar ) ) { <nl> final String member = <nl> classOrStaticMember . substring ( <nl> excludeMinusDotStar . length ( ) + 1 ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java <nl> index 1a3fa96 . . 1d8304f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java <nl> @ @ - 42 , 6 + 42 , 8 @ @ public class AvoidStaticImportTest <nl> " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , <nl> " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> @ @ - 53 , 10 + 55 , 12 @ @ public class AvoidStaticImportTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( AvoidStaticImportCheck . class ) ; <nl> checkConfig . addAttribute ( " excludes " , " java . io . File . * , sun . net . ftpclient . FtpClient . * " ) ; <nl> - / / allow the java . io . File . * / sun . net . ftpclient . FtpClient . * star imports <nl> + / / allow the " java . io . File . * " AND " sun . net . ftpclient . FtpClient . * " star imports <nl> final String [ ] expected = { <nl> " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> } <nl> @ @ - 73 , 6 + 77 , 8 @ @ public class AvoidStaticImportTest <nl> " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , <nl> " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> } <nl> @ @ - 83 , 16 + 89 , 36 @ @ public class AvoidStaticImportTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( AvoidStaticImportCheck . class ) ; <nl> checkConfig . addAttribute ( <nl> - " excludes " , <nl> - " java . io . File . listRoots . listRoots , javax . swing . WindowConstants , " <nl> + " excludes " , / / should NOT mask anything <nl> + " java . io . File . listRoots . listRoots , javax . swing . WindowConstants , javax . swing . * , " <nl> + " sun . net . ftpclient . FtpClient . * FtpClient , sun . net . ftpclient . FtpClientjunk , java . io . File . listRootsmorejunk " ) ; <nl> - / / allow the java . io . File . listRoots member imports <nl> final String [ ] expected = { <nl> " 23 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , <nl> " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , <nl> " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testInnerClassMemberExcludesStar ( ) <nl> + throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( AvoidStaticImportCheck . class ) ; <nl> + checkConfig . addAttribute ( <nl> + " excludes " , / / should mask com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one <nl> + " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . * " ) ; <nl> + final String [ ] expected = { <nl> + " 23 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , <nl> + " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> + " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> + " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , <nl> + " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> } <nl> @ @ - 106 , 4 + 132 , 5 @ @ public class AvoidStaticImportTest <nl> <nl> assertArrayEquals ( expected , actual ) ; <nl> } <nl> + <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java <nl> index 7551523 . . 209a3ff 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java <nl> @ @ - 26 , 6 + 26 , 8 @ @ import static javax . swing . WindowConstants . * ; <nl> import static javax . swing . WindowConstants . * ; <nl> import static java . io . File . createTempFile ; <nl> import static java . io . File . pathSeparator ; <nl> + import static com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass ; <nl> + import static com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one ; <nl> <nl> import java . awt . Component ; <nl> import java . awt . Graphics2D ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java <nl> new file mode 100644 <nl> index 0000000 . . 8e9cbab <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package com . puppycrawl . tools . checkstyle . imports ; <nl> + <nl> + public class InputAvoidStaticImportNestedClass { <nl> + public static Integer zero = 0 ; <nl> + <nl> + public static class InnerClass { <nl> + public static Integer one = 1 ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtility . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtility . java 
 index bb673e9 . . a36d609 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtility . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtility . java 
 @ @ - 155 , 7 + 155 , 7 @ @ public final class AnnotationUtility { 
 for ( DetailAST child = holder . getFirstChild ( ) ; 
 child ! = null ; child = child . getNextSibling ( ) ) { 
 if ( child . getType ( ) = = TokenTypes . ANNOTATION ) { 
 - final DetailAST firstChild = child . getFirstChild ( ) ; 
 + final DetailAST firstChild = child . findFirstToken ( TokenTypes . AT ) ; 
 final String name = 
 FullIdent . createFullIdent ( firstChild . getNextSibling ( ) ) . getText ( ) ; 
 if ( annotation . equals ( name ) ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java 
 index 090b2d3 . . a000ea5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java 
 @ @ - 173 , 6 + 173 , 7 @ @ public class AnnotationUtilityTest { 
 final DetailAST annotationName = new DetailAST ( ) ; 
 annotations . setType ( TokenTypes . ANNOTATIONS ) ; 
 annotation . setType ( TokenTypes . ANNOTATION ) ; 
 + annotationNameHolder . setType ( TokenTypes . AT ) ; 
 annotationName . setText ( " Annotation " ) ; 
 
 annotationNameHolder . setNextSibling ( annotationName ) ; 
 @ @ - 184 , 4 + 185 , 31 @ @ public class AnnotationUtilityTest { 
 assertTrue ( " Annotation should contain " + astForTest , 
 AnnotationUtility . containsAnnotation ( astForTest , " Annotation " ) ) ; 
 } 
 + 
 + @ Test 
 + public void testContainsAnnotationWithComment ( ) { 
 + final DetailAST astForTest = new DetailAST ( ) ; 
 + astForTest . setType ( TokenTypes . PACKAGE _ DEF ) ; 
 + final DetailAST child = new DetailAST ( ) ; 
 + final DetailAST annotations = new DetailAST ( ) ; 
 + final DetailAST annotation = new DetailAST ( ) ; 
 + final DetailAST annotationNameHolder = new DetailAST ( ) ; 
 + final DetailAST annotationName = new DetailAST ( ) ; 
 + final DetailAST comment = new DetailAST ( ) ; 
 + annotations . setType ( TokenTypes . ANNOTATIONS ) ; 
 + annotation . setType ( TokenTypes . ANNOTATION ) ; 
 + annotationNameHolder . setType ( TokenTypes . AT ) ; 
 + comment . setType ( TokenTypes . BLOCK _ COMMENT _ BEGIN ) ; 
 + annotationName . setText ( " Annotation " ) ; 
 + 
 + annotationNameHolder . setNextSibling ( annotationName ) ; 
 + annotation . setFirstChild ( comment ) ; 
 + comment . setNextSibling ( annotationNameHolder ) ; 
 + annotations . setFirstChild ( annotation ) ; 
 + child . setNextSibling ( annotations ) ; 
 + astForTest . setFirstChild ( child ) ; 
 + 
 + assertTrue ( " Annotation should contain " + astForTest , 
 + AnnotationUtility . containsAnnotation ( astForTest , " Annotation " ) ) ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java 
 index 1a95cca . . 6f8f346 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java 
 @ @ - 122 , 7 + 122 , 8 @ @ public class AvoidStaticImportCheck 
 / / a starred import 
 final String excludeMinusDotStar = 
 exclude . substring ( 0 , exclude . length ( ) - 2 ) ; 
 - if ( classOrStaticMember . startsWith ( excludeMinusDotStar ) ) { 
 + if ( classOrStaticMember . startsWith ( excludeMinusDotStar ) 
 + & & ! classOrStaticMember . equals ( excludeMinusDotStar ) ) { 
 final String member = 
 classOrStaticMember . substring ( 
 excludeMinusDotStar . length ( ) + 1 ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java 
 index 1a3fa96 . . 1d8304f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java 
 @ @ - 42 , 6 + 42 , 8 @ @ public class AvoidStaticImportTest 
 " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , 
 " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 @ @ - 53 , 10 + 55 , 12 @ @ public class AvoidStaticImportTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( AvoidStaticImportCheck . class ) ; 
 checkConfig . addAttribute ( " excludes " , " java . io . File . * , sun . net . ftpclient . FtpClient . * " ) ; 
 - / / allow the java . io . File . * / sun . net . ftpclient . FtpClient . * star imports 
 + / / allow the " java . io . File . * " AND " sun . net . ftpclient . FtpClient . * " star imports 
 final String [ ] expected = { 
 " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , 
 } ; 
 verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 } 
 @ @ - 73 , 6 + 77 , 8 @ @ public class AvoidStaticImportTest 
 " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , 
 " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , 
 } ; 
 verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 } 
 @ @ - 83 , 16 + 89 , 36 @ @ public class AvoidStaticImportTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( AvoidStaticImportCheck . class ) ; 
 checkConfig . addAttribute ( 
 - " excludes " , 
 - " java . io . File . listRoots . listRoots , javax . swing . WindowConstants , " 
 + " excludes " , / / should NOT mask anything 
 + " java . io . File . listRoots . listRoots , javax . swing . WindowConstants , javax . swing . * , " 
 + " sun . net . ftpclient . FtpClient . * FtpClient , sun . net . ftpclient . FtpClientjunk , java . io . File . listRootsmorejunk " ) ; 
 - / / allow the java . io . File . listRoots member imports 
 final String [ ] expected = { 
 " 23 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , 
 " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , 
 " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testInnerClassMemberExcludesStar ( ) 
 + throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( AvoidStaticImportCheck . class ) ; 
 + checkConfig . addAttribute ( 
 + " excludes " , / / should mask com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one 
 + " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . * " ) ; 
 + final String [ ] expected = { 
 + " 23 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , 
 + " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 + " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 + " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , 
 + " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 } ; 
 verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 } 
 @ @ - 106 , 4 + 132 , 5 @ @ public class AvoidStaticImportTest 
 
 assertArrayEquals ( expected , actual ) ; 
 } 
 + 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java 
 index 7551523 . . 209a3ff 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java 
 @ @ - 26 , 6 + 26 , 8 @ @ import static javax . swing . WindowConstants . * ; 
 import static javax . swing . WindowConstants . * ; 
 import static java . io . File . createTempFile ; 
 import static java . io . File . pathSeparator ; 
 + import static com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass ; 
 + import static com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one ; 
 
 import java . awt . Component ; 
 import java . awt . Graphics2D ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java 
 new file mode 100644 
 index 0000000 . . 8e9cbab 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package com . puppycrawl . tools . checkstyle . imports ; 
 + 
 + public class InputAvoidStaticImportNestedClass { 
 + public static Integer zero = 0 ; 
 + 
 + public static class InnerClass { 
 + public static Integer one = 1 ; 
 + } 
 + }
