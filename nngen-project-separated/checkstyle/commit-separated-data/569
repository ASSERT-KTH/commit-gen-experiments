BLEU SCORE: 0.029275822595890535

TEST MSG: Issue # 2600 : extend list of skip files for all CI expect Travis
GENERATED MSG: config : skip CIs is changes are only in intellij - idea - inspections . xml

TEST DIFF (one line): diff - - git a / circle . yml b / circle . yml <nl> index 70d4b75 . . 595964e 100644 <nl> - - - a / circle . yml <nl> + + + b / circle . yml <nl> @ @ - 45 , 7 + 45 , 7 @ @ machine : <nl> TEST _ 3 : $ CMD1 $ CMD2 $ TAPESTRY $ STORM $ CASSANDRA $ CMD3 <nl> # Test over apache - commons , hadoop , scouter , groovy <nl> TEST _ 4 : $ CMD1 $ CMD2 $ COMMONS $ HADOOP $ SCOUTER $ GROOVY $ CMD3 <nl> - SKIP _ FILES : " . github | appveyor . yml | . travis . yml | . ci | distelli - manifest . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | shippable . yml | wercker . yml | intellij - idea - inspections . xml " <nl> + SKIP _ FILES : " . github | appveyor . yml | . travis . yml | . ci | distelli - manifest . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | shippable . yml | wercker . yml | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " <nl> test : <nl> override : <nl> - if [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE $ SKIP _ FILES | wc - c ) - gt 0 ] ; then case $ CIRCLE _ NODE _ INDEX in 0 ) eval $ TEST _ 1 ; ; 1 ) eval $ TEST _ 2 ; ; 2 ) eval $ TEST _ 3 ; ; 3 ) eval $ TEST _ 4 ; ; esac ; fi : <nl> diff - - git a / distelli - manifest . yml b / distelli - manifest . yml <nl> index c8d602f . . aa2042a 100644 <nl> - - - a / distelli - manifest . yml <nl> + + + b / distelli - manifest . yml <nl> @ @ - 2 , 7 + 2 , 7 @ @ <nl> checkstyle / checkstyle : <nl> Build : <nl> - set - e <nl> - - SKIP _ FILES = " appveyor . yml | circle . yml | shippable . yml | . travis . yml | wercker . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml " <nl> + - SKIP _ FILES = " appveyor . yml | circle . yml | shippable . yml | . travis . yml | wercker . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " <nl> - SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) <nl> - echo " SKIP _ CI = " $ SKIP _ CI <nl> - | <nl> diff - - git a / shippable . yml b / shippable . yml <nl> index ae632b1 . . ed66974 100644 <nl> - - - a / shippable . yml <nl> + + + b / shippable . yml <nl> @ @ - 43 , 7 + 43 , 7 @ @ build : <nl> # we skip PRs and commits that are not for Issues , as pitest is too time consuming <nl> - | <nl> set - e <nl> - SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | wercker . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml " <nl> + SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | wercker . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " <nl> SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) <nl> echo " SKIP _ CI = " $ SKIP _ CI <nl> echo " POST _ ACTION = " $ POST _ ACTION <nl> diff - - git a / wercker . yml b / wercker . yml <nl> index 1fb2769 . . e7ce4cc 100644 <nl> - - - a / wercker . yml <nl> + + + b / wercker . yml <nl> @ @ - 28 , 7 + 28 , 7 @ @ build : <nl> - script : <nl> name : Build Checkstyle <nl> code : | <nl> - SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | shippable . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml " <nl> + SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | shippable . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " <nl> export SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) <nl> echo " SKIP _ CI = " $ SKIP _ CI <nl> if [ [ $ SKIP _ CI = = ' false ' ] ] ; then
NEAREST DIFF (one line): diff - - git a / config / import - control . xml b / config / import - control . xml <nl> index 5de5f8c . . e34ebd8 100644 <nl> - - - a / config / import - control . xml <nl> + + + b / config / import - control . xml <nl> @ @ - 158 , 5 + 158 , 6 @ @ <nl> < allow class = " com . puppycrawl . tools . checkstyle . gui . MainFrameModel . ParseMode " <nl> local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser " local - only = " true " / > <nl> + < allow class = " com . google . common . collect . ImmutableList " local - only = " true " / > <nl> < / subpackage > <nl> < / import - control > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> index 41a1997 . . 8868df6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ import java . util . List ; <nl> <nl> import javax . swing . JTextArea ; <nl> <nl> + import com . google . common . collect . ImmutableList ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailNode ; <nl> <nl> @ @ - 47 , 10 + 48 , 12 @ @ public class CodeSelector { <nl> final List < Integer > lines2position ) { <nl> this . editor = editor ; <nl> if ( node instanceof DetailAST ) { <nl> - pModel = new CodeSelectorPresentation ( ( DetailAST ) node , lines2position ) ; <nl> + pModel = new CodeSelectorPresentation ( ( DetailAST ) node , <nl> + ImmutableList . copyOf ( lines2position ) ) ; <nl> } <nl> else { <nl> - pModel = new CodeSelectorPresentation ( ( DetailNode ) node , lines2position ) ; <nl> + pModel = new CodeSelectorPresentation ( ( DetailNode ) node , <nl> + ImmutableList . copyOf ( lines2position ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java <nl> index a34ce23 . . 276f819 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java <nl> @ @ - 19 , 10 + 19 , 9 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . gui ; <nl> <nl> - import java . util . ArrayList ; <nl> - import java . util . Collections ; <nl> import java . util . List ; <nl> <nl> + import com . google . common . collect . ImmutableList ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailNode ; <nl> import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; <nl> @ @ - 45 , 22 + 44 , 22 @ @ public class CodeSelectorPresentation { <nl> * Constructor . <nl> * @ param ast ast node . <nl> * @ param lines2position list to map lines . <nl> + * @ noinspection AssignmentToCollectionOrArrayFieldFromParameter <nl> * / <nl> - public CodeSelectorPresentation ( DetailAST ast , List < Integer > lines2position ) { <nl> + public CodeSelectorPresentation ( DetailAST ast , ImmutableList < Integer > lines2position ) { <nl> node = ast ; <nl> - final List < Integer > copy = new ArrayList < > ( lines2position ) ; <nl> - this . lines2position = Collections . unmodifiableList ( copy ) ; <nl> + this . lines2position = lines2position ; <nl> } <nl> <nl> / * * <nl> * Constructor . <nl> * @ param node DetailNode node . <nl> * @ param lines2position list to map lines . <nl> + * @ noinspection AssignmentToCollectionOrArrayFieldFromParameter <nl> * / <nl> - public CodeSelectorPresentation ( DetailNode node , List < Integer > lines2position ) { <nl> + public CodeSelectorPresentation ( DetailNode node , ImmutableList < Integer > lines2position ) { <nl> this . node = node ; <nl> - final List < Integer > copy = new ArrayList < > ( lines2position ) ; <nl> - this . lines2position = Collections . unmodifiableList ( copy ) ; <nl> + this . lines2position = lines2position ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> index 18609e8 . . 1bed022 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> @ @ - 22 , 11 + 22 , 11 @ @ package com . puppycrawl . tools . checkstyle . gui ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . ArrayList ; <nl> - import java . util . Collections ; <nl> import java . util . List ; <nl> import java . util . Locale ; <nl> <nl> import antlr . ANTLRException ; <nl> + import com . google . common . collect . ImmutableList ; <nl> import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> @ @ - 75 , 12 + 75 , 12 @ @ public class MainFrameModel { <nl> } <nl> } <nl> <nl> - / * * Lines to position map . * / <nl> - private final List < Integer > linesToPosition = new ArrayList < > ( ) ; <nl> - <nl> / * * Parse tree model . * / <nl> private final ParseTreeTableModel parseTreeTableModel ; <nl> <nl> + / * * Lines to position map . * / <nl> + private ImmutableList < Integer > linesToPosition = ImmutableList . of ( ) ; <nl> + <nl> / * * Current mode . * / <nl> private ParseMode parseMode = ParseMode . PLAIN _ JAVA ; <nl> <nl> @ @ - 172 , 11 + 172 , 14 @ @ public class MainFrameModel { <nl> <nl> / * * <nl> * Get lines to position map . <nl> + * It returns unmodifiable collection to <nl> + * prevent additional overhead of copying <nl> + * and possible state modifications . <nl> * @ return lines to position map . <nl> + * @ noinspection ReturnOfCollectionOrArrayField <nl> * / <nl> - public List < Integer > getLinesToPosition ( ) { <nl> - final List < Integer > copy = new ArrayList < > ( linesToPosition ) ; <nl> - return Collections . unmodifiableList ( copy ) ; <nl> + public ImmutableList < Integer > getLinesToPosition ( ) { <nl> + return linesToPosition ; <nl> } <nl> <nl> / * * <nl> @ @ - 208 , 17 + 211 , 17 @ @ public class MainFrameModel { <nl> parseTreeTableModel . setParseMode ( parseMode ) ; <nl> final String [ ] sourceLines = getFileText ( file ) . toLinesArray ( ) ; <nl> <nl> - / / clear for each new file <nl> - linesToPosition . clear ( ) ; <nl> + final List < Integer > linesToPositionTemp = new ArrayList < > ( ) ; <nl> / / starts line counting at 1 <nl> - linesToPosition . add ( 0 ) ; <nl> + linesToPositionTemp . add ( 0 ) ; <nl> <nl> final StringBuilder sb = new StringBuilder ( ) ; <nl> / / insert the contents of the file to the text area <nl> for ( final String element : sourceLines ) { <nl> - linesToPosition . add ( sb . length ( ) ) ; <nl> + linesToPositionTemp . add ( sb . length ( ) ) ; <nl> sb . append ( element ) . append ( System . lineSeparator ( ) ) ; <nl> } <nl> + linesToPosition = ImmutableList . copyOf ( linesToPositionTemp ) ; <nl> text = sb . toString ( ) ; <nl> } <nl> catch ( IOException | ANTLRException ex ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java <nl> index 75a362e . . a782dac 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java <nl> @ @ - 25 , 8 + 25 , 6 @ @ import java . awt . FontMetrics ; <nl> import java . awt . event . ActionEvent ; <nl> import java . awt . event . MouseAdapter ; <nl> import java . awt . event . MouseEvent ; <nl> - import java . util . ArrayList ; <nl> - import java . util . Collections ; <nl> import java . util . EventObject ; <nl> import java . util . List ; <nl> <nl> @ @ - 40 , 6 + 38 , 8 @ @ import javax . swing . LookAndFeel ; <nl> import javax . swing . table . TableCellEditor ; <nl> import javax . swing . tree . TreePath ; <nl> <nl> + import com . google . common . collect . ImmutableList ; <nl> + <nl> / * * <nl> * This example shows how to create a simple TreeTable component , <nl> * by using a JTree as a renderer ( and editor ) for the cells in a <nl> @ @ - 232 , 10 + 232 , 10 @ @ public class TreeTable extends JTable { <nl> / * * <nl> * Sets line position map . <nl> * @ param linePositionMap Line position map . <nl> + * @ noinspection AssignmentToCollectionOrArrayFieldFromParameter <nl> * / <nl> - public void setLinePositionMap ( List < Integer > linePositionMap ) { <nl> - final List < Integer > copy = new ArrayList < > ( linePositionMap ) ; <nl> - this . linePositionMap = Collections . unmodifiableList ( copy ) ; <nl> + public void setLinePositionMap ( ImmutableList < Integer > linePositionMap ) { <nl> + this . linePositionMap = linePositionMap ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentationTest . java <nl> index a6fbadb . . 411f493 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentationTest . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import org . junit . Assert ; <nl> import org . junit . Before ; <nl> import org . junit . Test ; <nl> <nl> + import com . google . common . collect . ImmutableList ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailNode ; <nl> @ @ - 38 , 7 + 39 , 7 @ @ public class CodeSelectorPresentationTest { <nl> <nl> private DetailAST tree ; <nl> <nl> - private List < Integer > linesToPosition ; <nl> + private ImmutableList < Integer > linesToPosition ; <nl> <nl> @ Before <nl> public void loadFile ( ) throws CheckstyleException { <nl> @ @ - 46 , 7 + 47 , 7 @ @ public class CodeSelectorPresentationTest { <nl> model . setParseMode ( ParseMode . JAVA _ WITH _ JAVADOC _ AND _ COMMENTS ) ; <nl> model . openFile ( new File ( getPath ( " InputJavadocAttributesAndMethods . java " ) ) ) ; <nl> tree = ( ( DetailAST ) model . getParseTreeTableModel ( ) . getRoot ( ) ) . getFirstChild ( ) ; <nl> - linesToPosition = convertLinesToPosition ( model . getLinesToPosition ( ) ) ; <nl> + linesToPosition = ImmutableList . copyOf ( convertLinesToPosition ( model . getLinesToPosition ( ) ) ) ; <nl> } <nl> <nl> private static String getPath ( String filename ) {

TEST DIFF:
diff - - git a / circle . yml b / circle . yml 
 index 70d4b75 . . 595964e 100644 
 - - - a / circle . yml 
 + + + b / circle . yml 
 @ @ - 45 , 7 + 45 , 7 @ @ machine : 
 TEST _ 3 : $ CMD1 $ CMD2 $ TAPESTRY $ STORM $ CASSANDRA $ CMD3 
 # Test over apache - commons , hadoop , scouter , groovy 
 TEST _ 4 : $ CMD1 $ CMD2 $ COMMONS $ HADOOP $ SCOUTER $ GROOVY $ CMD3 
 - SKIP _ FILES : " . github | appveyor . yml | . travis . yml | . ci | distelli - manifest . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | shippable . yml | wercker . yml | intellij - idea - inspections . xml " 
 + SKIP _ FILES : " . github | appveyor . yml | . travis . yml | . ci | distelli - manifest . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | shippable . yml | wercker . yml | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " 
 test : 
 override : 
 - if [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE $ SKIP _ FILES | wc - c ) - gt 0 ] ; then case $ CIRCLE _ NODE _ INDEX in 0 ) eval $ TEST _ 1 ; ; 1 ) eval $ TEST _ 2 ; ; 2 ) eval $ TEST _ 3 ; ; 3 ) eval $ TEST _ 4 ; ; esac ; fi : 
 diff - - git a / distelli - manifest . yml b / distelli - manifest . yml 
 index c8d602f . . aa2042a 100644 
 - - - a / distelli - manifest . yml 
 + + + b / distelli - manifest . yml 
 @ @ - 2 , 7 + 2 , 7 @ @ 
 checkstyle / checkstyle : 
 Build : 
 - set - e 
 - - SKIP _ FILES = " appveyor . yml | circle . yml | shippable . yml | . travis . yml | wercker . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml " 
 + - SKIP _ FILES = " appveyor . yml | circle . yml | shippable . yml | . travis . yml | wercker . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " 
 - SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) 
 - echo " SKIP _ CI = " $ SKIP _ CI 
 - | 
 diff - - git a / shippable . yml b / shippable . yml 
 index ae632b1 . . ed66974 100644 
 - - - a / shippable . yml 
 + + + b / shippable . yml 
 @ @ - 43 , 7 + 43 , 7 @ @ build : 
 # we skip PRs and commits that are not for Issues , as pitest is too time consuming 
 - | 
 set - e 
 - SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | wercker . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml " 
 + SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | wercker . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " 
 SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) 
 echo " SKIP _ CI = " $ SKIP _ CI 
 echo " POST _ ACTION = " $ POST _ ACTION 
 diff - - git a / wercker . yml b / wercker . yml 
 index 1fb2769 . . e7ce4cc 100644 
 - - - a / wercker . yml 
 + + + b / wercker . yml 
 @ @ - 28 , 7 + 28 , 7 @ @ build : 
 - script : 
 name : Build Checkstyle 
 code : | 
 - SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | shippable . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml " 
 + SKIP _ FILES = " appveyor . yml | circle . yml | distelli - manifest . yml | . travis . yml | shippable . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | intellij - idea - inspections . xml | org . eclipse . jdt . core . prefs " 
 export SKIP _ CI = $ ( if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c ) > 0 ] ] ; then echo false ; else echo true ; fi ; ) 
 echo " SKIP _ CI = " $ SKIP _ CI 
 if [ [ $ SKIP _ CI = = ' false ' ] ] ; then

NEAREST DIFF:
diff - - git a / config / import - control . xml b / config / import - control . xml 
 index 5de5f8c . . e34ebd8 100644 
 - - - a / config / import - control . xml 
 + + + b / config / import - control . xml 
 @ @ - 158 , 5 + 158 , 6 @ @ 
 < allow class = " com . puppycrawl . tools . checkstyle . gui . MainFrameModel . ParseMode " 
 local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser " local - only = " true " / > 
 + < allow class = " com . google . common . collect . ImmutableList " local - only = " true " / > 
 < / subpackage > 
 < / import - control > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 index 41a1997 . . 8868df6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 @ @ - 24 , 6 + 24 , 7 @ @ import java . util . List ; 
 
 import javax . swing . JTextArea ; 
 
 + import com . google . common . collect . ImmutableList ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . DetailNode ; 
 
 @ @ - 47 , 10 + 48 , 12 @ @ public class CodeSelector { 
 final List < Integer > lines2position ) { 
 this . editor = editor ; 
 if ( node instanceof DetailAST ) { 
 - pModel = new CodeSelectorPresentation ( ( DetailAST ) node , lines2position ) ; 
 + pModel = new CodeSelectorPresentation ( ( DetailAST ) node , 
 + ImmutableList . copyOf ( lines2position ) ) ; 
 } 
 else { 
 - pModel = new CodeSelectorPresentation ( ( DetailNode ) node , lines2position ) ; 
 + pModel = new CodeSelectorPresentation ( ( DetailNode ) node , 
 + ImmutableList . copyOf ( lines2position ) ) ; 
 } 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java 
 index a34ce23 . . 276f819 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentation . java 
 @ @ - 19 , 10 + 19 , 9 @ @ 
 
 package com . puppycrawl . tools . checkstyle . gui ; 
 
 - import java . util . ArrayList ; 
 - import java . util . Collections ; 
 import java . util . List ; 
 
 + import com . google . common . collect . ImmutableList ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . DetailNode ; 
 import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; 
 @ @ - 45 , 22 + 44 , 22 @ @ public class CodeSelectorPresentation { 
 * Constructor . 
 * @ param ast ast node . 
 * @ param lines2position list to map lines . 
 + * @ noinspection AssignmentToCollectionOrArrayFieldFromParameter 
 * / 
 - public CodeSelectorPresentation ( DetailAST ast , List < Integer > lines2position ) { 
 + public CodeSelectorPresentation ( DetailAST ast , ImmutableList < Integer > lines2position ) { 
 node = ast ; 
 - final List < Integer > copy = new ArrayList < > ( lines2position ) ; 
 - this . lines2position = Collections . unmodifiableList ( copy ) ; 
 + this . lines2position = lines2position ; 
 } 
 
 / * * 
 * Constructor . 
 * @ param node DetailNode node . 
 * @ param lines2position list to map lines . 
 + * @ noinspection AssignmentToCollectionOrArrayFieldFromParameter 
 * / 
 - public CodeSelectorPresentation ( DetailNode node , List < Integer > lines2position ) { 
 + public CodeSelectorPresentation ( DetailNode node , ImmutableList < Integer > lines2position ) { 
 this . node = node ; 
 - final List < Integer > copy = new ArrayList < > ( lines2position ) ; 
 - this . lines2position = Collections . unmodifiableList ( copy ) ; 
 + this . lines2position = lines2position ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 index 18609e8 . . 1bed022 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 @ @ - 22 , 11 + 22 , 11 @ @ package com . puppycrawl . tools . checkstyle . gui ; 
 import java . io . File ; 
 import java . io . IOException ; 
 import java . util . ArrayList ; 
 - import java . util . Collections ; 
 import java . util . List ; 
 import java . util . Locale ; 
 
 import antlr . ANTLRException ; 
 + import com . google . common . collect . ImmutableList ; 
 import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 @ @ - 75 , 12 + 75 , 12 @ @ public class MainFrameModel { 
 } 
 } 
 
 - / * * Lines to position map . * / 
 - private final List < Integer > linesToPosition = new ArrayList < > ( ) ; 
 - 
 / * * Parse tree model . * / 
 private final ParseTreeTableModel parseTreeTableModel ; 
 
 + / * * Lines to position map . * / 
 + private ImmutableList < Integer > linesToPosition = ImmutableList . of ( ) ; 
 + 
 / * * Current mode . * / 
 private ParseMode parseMode = ParseMode . PLAIN _ JAVA ; 
 
 @ @ - 172 , 11 + 172 , 14 @ @ public class MainFrameModel { 
 
 / * * 
 * Get lines to position map . 
 + * It returns unmodifiable collection to 
 + * prevent additional overhead of copying 
 + * and possible state modifications . 
 * @ return lines to position map . 
 + * @ noinspection ReturnOfCollectionOrArrayField 
 * / 
 - public List < Integer > getLinesToPosition ( ) { 
 - final List < Integer > copy = new ArrayList < > ( linesToPosition ) ; 
 - return Collections . unmodifiableList ( copy ) ; 
 + public ImmutableList < Integer > getLinesToPosition ( ) { 
 + return linesToPosition ; 
 } 
 
 / * * 
 @ @ - 208 , 17 + 211 , 17 @ @ public class MainFrameModel { 
 parseTreeTableModel . setParseMode ( parseMode ) ; 
 final String [ ] sourceLines = getFileText ( file ) . toLinesArray ( ) ; 
 
 - / / clear for each new file 
 - linesToPosition . clear ( ) ; 
 + final List < Integer > linesToPositionTemp = new ArrayList < > ( ) ; 
 / / starts line counting at 1 
 - linesToPosition . add ( 0 ) ; 
 + linesToPositionTemp . add ( 0 ) ; 
 
 final StringBuilder sb = new StringBuilder ( ) ; 
 / / insert the contents of the file to the text area 
 for ( final String element : sourceLines ) { 
 - linesToPosition . add ( sb . length ( ) ) ; 
 + linesToPositionTemp . add ( sb . length ( ) ) ; 
 sb . append ( element ) . append ( System . lineSeparator ( ) ) ; 
 } 
 + linesToPosition = ImmutableList . copyOf ( linesToPositionTemp ) ; 
 text = sb . toString ( ) ; 
 } 
 catch ( IOException | ANTLRException ex ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java 
 index 75a362e . . a782dac 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTable . java 
 @ @ - 25 , 8 + 25 , 6 @ @ import java . awt . FontMetrics ; 
 import java . awt . event . ActionEvent ; 
 import java . awt . event . MouseAdapter ; 
 import java . awt . event . MouseEvent ; 
 - import java . util . ArrayList ; 
 - import java . util . Collections ; 
 import java . util . EventObject ; 
 import java . util . List ; 
 
 @ @ - 40 , 6 + 38 , 8 @ @ import javax . swing . LookAndFeel ; 
 import javax . swing . table . TableCellEditor ; 
 import javax . swing . tree . TreePath ; 
 
 + import com . google . common . collect . ImmutableList ; 
 + 
 / * * 
 * This example shows how to create a simple TreeTable component , 
 * by using a JTree as a renderer ( and editor ) for the cells in a 
 @ @ - 232 , 10 + 232 , 10 @ @ public class TreeTable extends JTable { 
 / * * 
 * Sets line position map . 
 * @ param linePositionMap Line position map . 
 + * @ noinspection AssignmentToCollectionOrArrayFieldFromParameter 
 * / 
 - public void setLinePositionMap ( List < Integer > linePositionMap ) { 
 - final List < Integer > copy = new ArrayList < > ( linePositionMap ) ; 
 - this . linePositionMap = Collections . unmodifiableList ( copy ) ; 
 + public void setLinePositionMap ( ImmutableList < Integer > linePositionMap ) { 
 + this . linePositionMap = linePositionMap ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentationTest . java 
 index a6fbadb . . 411f493 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPresentationTest . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import org . junit . Assert ; 
 import org . junit . Before ; 
 import org . junit . Test ; 
 
 + import com . google . common . collect . ImmutableList ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . DetailNode ; 
 @ @ - 38 , 7 + 39 , 7 @ @ public class CodeSelectorPresentationTest { 
 
 private DetailAST tree ; 
 
 - private List < Integer > linesToPosition ; 
 + private ImmutableList < Integer > linesToPosition ; 
 
 @ Before 
 public void loadFile ( ) throws CheckstyleException { 
 @ @ - 46 , 7 + 47 , 7 @ @ public class CodeSelectorPresentationTest { 
 model . setParseMode ( ParseMode . JAVA _ WITH _ JAVADOC _ AND _ COMMENTS ) ; 
 model . openFile ( new File ( getPath ( " InputJavadocAttributesAndMethods . java " ) ) ) ; 
 tree = ( ( DetailAST ) model . getParseTreeTableModel ( ) . getRoot ( ) ) . getFirstChild ( ) ; 
 - linesToPosition = convertLinesToPosition ( model . getLinesToPosition ( ) ) ; 
 + linesToPosition = ImmutableList . copyOf ( convertLinesToPosition ( model . getLinesToPosition ( ) ) ) ; 
 } 
 
 private static String getPath ( String filename ) {
