BLEU SCORE: 0.033864985683445356

TEST MSG: Issue # 5642 : matched order of ImportControl rules to XML file
GENERATED MSG: UT coverage for RedundantImport check . # 1128

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java <nl> index 6950229 . . 682391f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java <nl> @ @ - 212 , 7 + 212 , 7 @ @ class ImportControl { <nl> * @ param rule the rule to be added . <nl> * / <nl> protected void addImportRule ( AbstractImportRule rule ) { <nl> - rules . addFirst ( rule ) ; <nl> + rules . addLast ( rule ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> index f459971 . . b71b144 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> @ @ - 394 , 6 + 394 , 19 @ @ public class ImportControlCheckTest extends AbstractModuleTestSupport { <nl> verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testDisallowClassOfAllowPackage ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( ImportControlCheck . class ) ; <nl> + checkConfig . addAttribute ( " file " , <nl> + getPath ( " InputImportControlDisallowClassOfAllowPackage . xml " ) ) ; <nl> + final String [ ] expected = { <nl> + " 4 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . util . Date " ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputImportControlDisallowClassOfAllowPackage . java " ) , <nl> + expected ) ; <nl> + } <nl> + <nl> / * * <nl> * Returns String message of original exception that was thrown in <nl> * ImportControlCheck . setUrl or ImportControlCheck . setFile <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . java <nl> new file mode 100644 <nl> index 0000000 . . b98e71b <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . java <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . imports . importcontrol ; <nl> + <nl> + import java . util . Calendar ; <nl> + import java . util . Date ; <nl> + <nl> + public class InputImportControlDisallowClassOfAllowPackage { <nl> + public void test ( ) { <nl> + new Date ( ) ; <nl> + Calendar . getInstance ( ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . xml <nl> new file mode 100644 <nl> index 0000000 . . 87a9c0f <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . xml <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + < ! DOCTYPE import - control PUBLIC <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " <nl> + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > <nl> + <nl> + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks . imports . importcontrol " > <nl> + < disallow class = " java . util . Date " / > <nl> + <nl> + < allow pkg = " java . util " / > <nl> + < / import - control > <nl> diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml <nl> index 906abc9 . . b778a0b 100644 <nl> - - - a / src / xdocs / config _ imports . xml <nl> + + + b / src / xdocs / config _ imports . xml <nl> @ @ - 892 , 8 + 892 , 10 @ @ public class InputIllegalImport { } <nl> < li > Check starts checking from the longest matching subpackage ( later ' current <nl> subpackage ' ) described inside import control file to package defined in class <nl> file . < / li > <nl> + < li > Order of rules in the same subpackage / root are defined by the order of <nl> + declaration in the XML file , which is from top ( first ) to bottom ( last ) . < / li > <nl> < li > If there is matching allow / disallow rule inside the current subpackage then the <nl> - Check returns " allowed " or " disallowed " message . < / li > <nl> + Check returns the first " allowed " or " disallowed " message . < / li > <nl> < li > If there is no matching allow / disallow rule inside the current subpackage then it <nl> continues checking in the parent subpackage . < / li > <nl> < li > If there is no matching allow / disallow rule in any of the subpackages , including <nl> @ @ - 1178 , 6 + 1180 , 17 @ @ import java . util . stream . IntStream ; <nl> & lt ; / subpackage & gt ; <nl> & lt ; / import - control & gt ; <nl> < / source > <nl> + < p > <nl> + In the following example , all imports of the < code > java . util < / code > package are allowed <nl> + except the < code > java . util . Date < / code > class . <nl> + < / p > <nl> + < source > <nl> + & lt ; import - control pkg = & quot ; com . puppycrawl . tools . checkstyle . checks & quot ; & gt ; <nl> + & lt ; disallow class = & quot ; java . util . Date & quot ; / & gt ; <nl> + <nl> + & lt ; allow pkg = & quot ; java . util & quot ; / & gt ; <nl> + & lt ; / import - control & gt ; <nl> + < / source > <nl> <nl> < h4 id = " regex - notes " > Notes on regular expressions < / h4 > <nl> < p >
NEAREST DIFF (one line): diff - - git a / src / xdocs / beginning _ development . xml b / src / xdocs / beginning _ development . xml <nl> index ae6e9e0 . . 509a87a 100644 <nl> - - - a / src / xdocs / beginning _ development . xml <nl> + + + b / src / xdocs / beginning _ development . xml <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> < body > <nl> < section name = " Before development " > <nl> < p > <nl> - 1 . Ensure that Git , Java JDK > = 1 . 7 are installed . < br / > <nl> + 1 . Ensure that Git , Java JDK > = 1 . 8 are installed . < br / > <nl> You can find information about development environment preparation here : <nl> < a href = " https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / wiki / Prepare - Development - Environment - in - Ubuntu - 12 . 04 " > <nl> Prepare development environment in Ubuntu < / a > . < br / >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java 
 index 6950229 . . 682391f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControl . java 
 @ @ - 212 , 7 + 212 , 7 @ @ class ImportControl { 
 * @ param rule the rule to be added . 
 * / 
 protected void addImportRule ( AbstractImportRule rule ) { 
 - rules . addFirst ( rule ) ; 
 + rules . addLast ( rule ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 index f459971 . . b71b144 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 @ @ - 394 , 6 + 394 , 19 @ @ public class ImportControlCheckTest extends AbstractModuleTestSupport { 
 verify ( checkConfig , getPath ( " InputImportControl . java " ) , expected ) ; 
 } 
 
 + @ Test 
 + public void testDisallowClassOfAllowPackage ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( ImportControlCheck . class ) ; 
 + checkConfig . addAttribute ( " file " , 
 + getPath ( " InputImportControlDisallowClassOfAllowPackage . xml " ) ) ; 
 + final String [ ] expected = { 
 + " 4 : 1 : " + getCheckMessage ( MSG _ DISALLOWED , " java . util . Date " ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputImportControlDisallowClassOfAllowPackage . java " ) , 
 + expected ) ; 
 + } 
 + 
 / * * 
 * Returns String message of original exception that was thrown in 
 * ImportControlCheck . setUrl or ImportControlCheck . setFile 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . java 
 new file mode 100644 
 index 0000000 . . b98e71b 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . java 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . imports . importcontrol ; 
 + 
 + import java . util . Calendar ; 
 + import java . util . Date ; 
 + 
 + public class InputImportControlDisallowClassOfAllowPackage { 
 + public void test ( ) { 
 + new Date ( ) ; 
 + Calendar . getInstance ( ) ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . xml 
 new file mode 100644 
 index 0000000 . . 87a9c0f 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / importcontrol / InputImportControlDisallowClassOfAllowPackage . xml 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + < ! DOCTYPE import - control PUBLIC 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 3 / / EN " 
 + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 3 . dtd " > 
 + 
 + < import - control pkg = " com . puppycrawl . tools . checkstyle . checks . imports . importcontrol " > 
 + < disallow class = " java . util . Date " / > 
 + 
 + < allow pkg = " java . util " / > 
 + < / import - control > 
 diff - - git a / src / xdocs / config _ imports . xml b / src / xdocs / config _ imports . xml 
 index 906abc9 . . b778a0b 100644 
 - - - a / src / xdocs / config _ imports . xml 
 + + + b / src / xdocs / config _ imports . xml 
 @ @ - 892 , 8 + 892 , 10 @ @ public class InputIllegalImport { } 
 < li > Check starts checking from the longest matching subpackage ( later ' current 
 subpackage ' ) described inside import control file to package defined in class 
 file . < / li > 
 + < li > Order of rules in the same subpackage / root are defined by the order of 
 + declaration in the XML file , which is from top ( first ) to bottom ( last ) . < / li > 
 < li > If there is matching allow / disallow rule inside the current subpackage then the 
 - Check returns " allowed " or " disallowed " message . < / li > 
 + Check returns the first " allowed " or " disallowed " message . < / li > 
 < li > If there is no matching allow / disallow rule inside the current subpackage then it 
 continues checking in the parent subpackage . < / li > 
 < li > If there is no matching allow / disallow rule in any of the subpackages , including 
 @ @ - 1178 , 6 + 1180 , 17 @ @ import java . util . stream . IntStream ; 
 & lt ; / subpackage & gt ; 
 & lt ; / import - control & gt ; 
 < / source > 
 + < p > 
 + In the following example , all imports of the < code > java . util < / code > package are allowed 
 + except the < code > java . util . Date < / code > class . 
 + < / p > 
 + < source > 
 + & lt ; import - control pkg = & quot ; com . puppycrawl . tools . checkstyle . checks & quot ; & gt ; 
 + & lt ; disallow class = & quot ; java . util . Date & quot ; / & gt ; 
 + 
 + & lt ; allow pkg = & quot ; java . util & quot ; / & gt ; 
 + & lt ; / import - control & gt ; 
 + < / source > 
 
 < h4 id = " regex - notes " > Notes on regular expressions < / h4 > 
 < p >

NEAREST DIFF:
diff - - git a / src / xdocs / beginning _ development . xml b / src / xdocs / beginning _ development . xml 
 index ae6e9e0 . . 509a87a 100644 
 - - - a / src / xdocs / beginning _ development . xml 
 + + + b / src / xdocs / beginning _ development . xml 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 < body > 
 < section name = " Before development " > 
 < p > 
 - 1 . Ensure that Git , Java JDK > = 1 . 7 are installed . < br / > 
 + 1 . Ensure that Git , Java JDK > = 1 . 8 are installed . < br / > 
 You can find information about development environment preparation here : 
 < a href = " https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / wiki / Prepare - Development - Environment - in - Ubuntu - 12 . 04 " > 
 Prepare development environment in Ubuntu < / a > . < br / >
