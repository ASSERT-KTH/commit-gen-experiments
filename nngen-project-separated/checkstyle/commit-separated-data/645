BLEU SCORE: 1.0

TEST MSG: minor : update to remove old local fork that is left after problematic rebase in fast - forward - merge . sh
GENERATED MSG: minor : update to remove old local fork that is left after problematic rebase in fast - forward - merge . sh

TEST DIFF (one line): diff - - git a / fast - forward - merge . sh b / fast - forward - merge . sh <nl> index 6f588a8 . . bf118bc 100755 <nl> - - - a / fast - forward - merge . sh <nl> + + + b / fast - forward - merge . sh <nl> @ @ - 23 , 12 + 23 , 15 @ @ REPO = $ { FORK _ USER _ NAME } - fork <nl> LOCAL _ USER _ BRANCH = $ { FORK _ USER _ NAME } - $ { USER _ BRANCH } <nl> <nl> echo " removing remote $ { REPO } if present . . . " <nl> - git remote rm $ { REPO } <nl> + git remote rm $ { REPO } | true <nl> <nl> echo " adding remote . . . " <nl> git remote add $ { REPO } https : / / github . com / $ { FORK _ USER _ NAME } / $ { GIT _ REPO } . git <nl> git fetch $ { REPO } <nl> <nl> + echo " removing remote $ { LOCAL _ USER _ BRANCH } if present . . . " <nl> + git branch - D $ { LOCAL _ USER _ BRANCH } | true <nl> + <nl> echo " creating local branch . . . " <nl> git checkout - b $ { LOCAL _ USER _ BRANCH } $ { REPO } / $ { USER _ BRANCH } <nl>
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> index 158c760 . . 4a2961a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . internal ; <nl> <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> import java . lang . reflect . Field ; <nl> import java . lang . reflect . Modifier ; <nl> import java . util . ArrayList ; <nl> @ @ - 230 , 9 + 232 , 14 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> " LAMBDA " ) . collect ( Collectors . toSet ( ) ) ) ; <nl> } <nl> <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " internal " + File . separator + filename ) ; <nl> + } <nl> + <nl> @ Test <nl> public void testAllChecksWithDefaultConfiguration ( ) throws Exception { <nl> - final String inputFilePath = getPath ( " InputDefaultConfig . java " ) ; <nl> + final String inputFilePath = getPath ( " InputAllChecksDefaultConfig . java " ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> for ( Class < ? > check : CheckUtil . getCheckstyleChecks ( ) ) { <nl> @ @ - 243 , 7 + 250 , 8 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> if ( check . equals ( ImportControlCheck . class ) ) { <nl> / / ImportControlCheck must have the import control configuration file to avoid <nl> / / violation . <nl> - checkConfig . addAttribute ( " file " , getPath ( " import - control _ complete . xml " ) ) ; <nl> + checkConfig . addAttribute ( " file " , getPath ( <nl> + " InputAllChecksImport - control _ complete . xml " ) ) ; <nl> } <nl> checker = createChecker ( checkConfig ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputDefaultConfig . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputDefaultConfig . java <nl> deleted file mode 100644 <nl> index 86c4296 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputDefaultConfig . java <nl> + + + / dev / null <nl> @ @ - 1 , 2 + 0 , 0 @ @ <nl> - <nl> - package com . puppycrawl . tools . checkstyle ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksDefaultConfig . java b / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksDefaultConfig . java <nl> new file mode 100644 <nl> index 0000000 . . 760e483 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksDefaultConfig . java <nl> @ @ - 0 , 0 + 1 , 2 @ @ <nl> + <nl> + package com . puppycrawl . tools . checkstyle . internal ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksImport - control _ complete . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksImport - control _ complete . xml <nl> new file mode 100644 <nl> index 0000000 . . 4ac674e <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksImport - control _ complete . xml <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + < ! DOCTYPE import - control PUBLIC <nl> + " - / / Puppy Crawl / / DTD Import Control 1 . 0 / / EN " <nl> + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 0 . dtd " > <nl> + <nl> + < import - control pkg = " com " > <nl> + < allow class = " some . class " / > <nl> + < disallow class = " another . class " local - only = " true " / > <nl> + < allow pkg = " some . pkg " / > <nl> + < disallow pkg = " another . pkg " local - only = " true " / > <nl> + < disallow pkg = " and . another . pkg " exact - match = " true " / > <nl> + < subpackage name = " puppycrawl " > <nl> + < disallow pkg = " some . pkg " / > <nl> + < disallow class = " some . class " / > <nl> + < / subpackage > <nl> + < / import - control >

TEST DIFF:
diff - - git a / fast - forward - merge . sh b / fast - forward - merge . sh 
 index 6f588a8 . . bf118bc 100755 
 - - - a / fast - forward - merge . sh 
 + + + b / fast - forward - merge . sh 
 @ @ - 23 , 12 + 23 , 15 @ @ REPO = $ { FORK _ USER _ NAME } - fork 
 LOCAL _ USER _ BRANCH = $ { FORK _ USER _ NAME } - $ { USER _ BRANCH } 
 
 echo " removing remote $ { REPO } if present . . . " 
 - git remote rm $ { REPO } 
 + git remote rm $ { REPO } | true 
 
 echo " adding remote . . . " 
 git remote add $ { REPO } https : / / github . com / $ { FORK _ USER _ NAME } / $ { GIT _ REPO } . git 
 git fetch $ { REPO } 
 
 + echo " removing remote $ { LOCAL _ USER _ BRANCH } if present . . . " 
 + git branch - D $ { LOCAL _ USER _ BRANCH } | true 
 + 
 echo " creating local branch . . . " 
 git checkout - b $ { LOCAL _ USER _ BRANCH } $ { REPO } / $ { USER _ BRANCH } 


NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 index 158c760 . . 4a2961a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 
 package com . puppycrawl . tools . checkstyle . internal ; 
 
 + import java . io . File ; 
 + import java . io . IOException ; 
 import java . lang . reflect . Field ; 
 import java . lang . reflect . Modifier ; 
 import java . util . ArrayList ; 
 @ @ - 230 , 9 + 232 , 14 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 " LAMBDA " ) . collect ( Collectors . toSet ( ) ) ) ; 
 } 
 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " internal " + File . separator + filename ) ; 
 + } 
 + 
 @ Test 
 public void testAllChecksWithDefaultConfiguration ( ) throws Exception { 
 - final String inputFilePath = getPath ( " InputDefaultConfig . java " ) ; 
 + final String inputFilePath = getPath ( " InputAllChecksDefaultConfig . java " ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 
 for ( Class < ? > check : CheckUtil . getCheckstyleChecks ( ) ) { 
 @ @ - 243 , 7 + 250 , 8 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 if ( check . equals ( ImportControlCheck . class ) ) { 
 / / ImportControlCheck must have the import control configuration file to avoid 
 / / violation . 
 - checkConfig . addAttribute ( " file " , getPath ( " import - control _ complete . xml " ) ) ; 
 + checkConfig . addAttribute ( " file " , getPath ( 
 + " InputAllChecksImport - control _ complete . xml " ) ) ; 
 } 
 checker = createChecker ( checkConfig ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputDefaultConfig . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputDefaultConfig . java 
 deleted file mode 100644 
 index 86c4296 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputDefaultConfig . java 
 + + + / dev / null 
 @ @ - 1 , 2 + 0 , 0 @ @ 
 - 
 - package com . puppycrawl . tools . checkstyle ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksDefaultConfig . java b / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksDefaultConfig . java 
 new file mode 100644 
 index 0000000 . . 760e483 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksDefaultConfig . java 
 @ @ - 0 , 0 + 1 , 2 @ @ 
 + 
 + package com . puppycrawl . tools . checkstyle . internal ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksImport - control _ complete . xml b / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksImport - control _ complete . xml 
 new file mode 100644 
 index 0000000 . . 4ac674e 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / internal / InputAllChecksImport - control _ complete . xml 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + < ! DOCTYPE import - control PUBLIC 
 + " - / / Puppy Crawl / / DTD Import Control 1 . 0 / / EN " 
 + " http : / / checkstyle . sourceforge . net / dtds / import _ control _ 1 _ 0 . dtd " > 
 + 
 + < import - control pkg = " com " > 
 + < allow class = " some . class " / > 
 + < disallow class = " another . class " local - only = " true " / > 
 + < allow pkg = " some . pkg " / > 
 + < disallow pkg = " another . pkg " local - only = " true " / > 
 + < disallow pkg = " and . another . pkg " exact - match = " true " / > 
 + < subpackage name = " puppycrawl " > 
 + < disallow pkg = " some . pkg " / > 
 + < disallow class = " some . class " / > 
 + < / subpackage > 
 + < / import - control >
