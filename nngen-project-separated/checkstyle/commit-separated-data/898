BLEU SCORE: 0.03367425136798257

TEST MSG: Issue # 4044 : Fix false negative in ALONE while checking single line if blocks
GENERATED MSG: Fix RightCurlyCheck with same option not to rise expression in single - line blocks - issue # 1416

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index 7a353b6 . . b661d1e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 189 , 16 + 189 , 14 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> * / <nl> private String validate ( Details details ) { <nl> final DetailAST rcurly = details . rcurly ; <nl> - final DetailAST lcurly = details . lcurly ; <nl> final DetailAST nextToken = details . nextToken ; <nl> final boolean shouldCheckLastRcurly = details . shouldCheckLastRcurly ; <nl> String violation = " " ; <nl> - if ( option = = RightCurlyOption . SAME <nl> - & & ! hasLineBreakBefore ( rcurly ) <nl> - & & lcurly . getLineNo ( ) ! = rcurly . getLineNo ( ) ) { <nl> + if ( shouldHaveLineBreakBefore ( option , details ) ) { <nl> violation = MSG _ KEY _ LINE _ BREAK _ BEFORE ; <nl> } <nl> - else if ( shouldCheckLastRcurly ) { <nl> + else if ( shouldCheckLastRcurly <nl> + & & option ! = RightCurlyOption . ALONE ) { <nl> if ( rcurly . getLineNo ( ) = = nextToken . getLineNo ( ) ) { <nl> violation = MSG _ KEY _ LINE _ ALONE ; <nl> } <nl> @ @ - 219 , 6 + 217 , 19 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> + * Checks whether a right curly should have a line break before . <nl> + * @ param bracePolicy option for placing the right curly brace . <nl> + * @ param details details for validation . <nl> + * @ return true if a right curly should have a line break before . <nl> + * / <nl> + private static boolean shouldHaveLineBreakBefore ( RightCurlyOption bracePolicy , <nl> + Details details ) { <nl> + return bracePolicy = = RightCurlyOption . SAME <nl> + & & ! hasLineBreakBefore ( details . rcurly ) <nl> + & & details . lcurly . getLineNo ( ) ! = details . rcurly . getLineNo ( ) ; <nl> + } <nl> + <nl> + / * * <nl> * Checks that a right curly should be on the same line as the next statement . <nl> * @ param bracePolicy option for placing the right curly brace <nl> * @ param details Details for validation <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> index bf70c97 . . fca9b7a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> @ @ - 99 , 6 + 99 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE . toString ( ) ) ; <nl> final String [ ] expected = { <nl> " 93 : 27 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 27 ) , <nl> + " 97 : 72 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 72 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputLeftCurlyOther . java " ) , expected ) ; <nl> } <nl> @ @ - 124 , 6 + 125 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " shouldStartLine " , " false " ) ; <nl> final String [ ] expected = { <nl> " 93 : 27 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 27 ) , <nl> + " 97 : 72 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 72 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputLeftCurlyOther . java " ) , expected ) ; <nl> } <nl> @ @ - 134 , 6 + 136 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " shouldStartLine " , " false " ) ; <nl> final String [ ] expected = { <nl> " 93 : 27 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 27 ) , <nl> + " 97 : 72 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 72 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputLeftCurlyOther . java " ) , expected ) ; <nl> } <nl> @ @ - 203 , 6 + 206 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { <nl> " 127 : 77 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 77 ) , <nl> " 136 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , <nl> " 138 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , <nl> + " 138 : 33 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 33 ) , <nl> " 148 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , <nl> " 150 : 75 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 75 ) , <nl> " 151 : 77 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 77 ) , <nl> @ @ - 322 , 6 + 326 , 9 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { <nl> final String [ ] expected = { <nl> " 19 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , <nl> " 24 : 67 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 67 ) , <nl> + " 25 : 35 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 35 ) , <nl> + " 27 : 92 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 92 ) , <nl> + " 33 : 67 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 67 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputRightCurlyTryResource . java " ) , expected ) ; <nl> } <nl> @ @ - 334 , 4 + 341 , 15 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> verify ( checkConfig , getPath ( " InputRightCurlyTryResource . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testBracePolicyAloneAndSinglelineIfBlocks ( ) throws Exception { <nl> + checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE . toString ( ) ) ; <nl> + final String [ ] expected = { <nl> + " 5 : 32 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 32 ) , <nl> + " 7 : 45 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 45 ) , <nl> + " 7 : 47 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 47 ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputRightCurlySingelineIfBlocks . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlySingelineIfBlocks . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlySingelineIfBlocks . java <nl> new file mode 100644 <nl> index 0000000 . . adc0c18 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlySingelineIfBlocks . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . blocks ; <nl> + <nl> + public class InputRightCurlySingelineIfBlocks { <nl> + void foo1 ( ) { <nl> + if ( true ) { int a = 5 ; } / / violation <nl> + <nl> + if ( true ) { if ( false ) { int b = 6 ; } } / / violation <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java <nl> index ab4239d . . acc3444 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java <nl> @ @ - 13 , 9 + 13 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . checks . OuterTypeFilenameCheck ; <nl> <nl> public class OuterTypeFilenameTest extends BaseCheckTestSupport { <nl> - <nl> + <nl> static ConfigurationBuilder builder ; <nl> - <nl> + <nl> @ BeforeClass <nl> public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { <nl> builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> @ @ - 24 , 39 + 24 , 37 @ @ public class OuterTypeFilenameTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void outerTypeFilenameTest _ 1 ( ) throws IOException , Exception { <nl> <nl> - String msg = getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) ; <nl> - <nl> final String [ ] expected = { } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; <nl> String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 1 " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> - } <nl> - <nl> + } <nl> + <nl> @ Test <nl> public void outerTypeFilenameTest _ 2 ( ) throws IOException , Exception { <nl> - <nl> + <nl> final String [ ] expected = { } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; <nl> String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 2 " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> public void outerTypeFilenameTest _ 3 ( ) throws IOException , Exception { <nl> - <nl> + <nl> final String [ ] expected = { <nl> - " 3 : " + getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) , <nl> + " 3 : " + getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) , <nl> } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; <nl> String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 3 " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java <nl> index bb56a48 . . 158f23a 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java <nl> @ @ - 14 , 9 + 14 , 9 @ @ import com . puppycrawl . tools . checkstyle . checks . sizes . LineLengthCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . whitespace . NoLineWrapCheck ; <nl> <nl> public class NoLineWrapTest extends BaseCheckTestSupport { <nl> - <nl> + <nl> static ConfigurationBuilder builder ; <nl> - <nl> + <nl> @ BeforeClass <nl> public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { <nl> builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> @ @ - 24 , 29 + 24 , 27 @ @ public class NoLineWrapTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void badLineWrapTest ( ) throws IOException , Exception { <nl> - <nl> - String msg = getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) ; <nl> <nl> final String [ ] expected = { <nl> " 1 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " package " ) , <nl> - " 6 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) , <nl> + " 6 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) , <nl> } ; <nl> <nl> Configuration checkConfig = builder . getCheckConfig ( " NoLineWrap " ) ; <nl> String filePath = builder . getFilePath ( " NoLineWrap _ Bad " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> public void goodLineWrapTest ( ) throws IOException , Exception { <nl> - <nl> + <nl> final String [ ] expected = { } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " NoLineWrap " ) ; <nl> String filePath = builder . getFilePath ( " NoLineWrap _ Good " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> @ @ - 68 , 7 + 66 , 7 @ @ public class NoLineWrapTest extends BaseCheckTestSupport { <nl> <nl> Configuration checkConfig = builder . getCheckConfig ( " LineLength " ) ; <nl> String filePath = builder . getFilePath ( " LineLengthInput2 " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java <nl> index 10d3ef4 . . c5b1f30 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java <nl> @ @ - 13 , 9 + 13 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . checks . coding . VariableDeclarationUsageDistanceCheck ; <nl> <nl> public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { <nl> - <nl> + <nl> static ConfigurationBuilder builder ; <nl> - <nl> + <nl> @ BeforeClass <nl> public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { <nl> builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> @ @ - 23 , 8 + 23 , 7 @ @ public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void arrayTypeStyleTest ( ) throws IOException , Exception { <nl> - <nl> - String msg = " variable . declaration . usage . distance " ; <nl> + <nl> String msgExt = " variable . declaration . usage . distance . extend " ; <nl> Class < VariableDeclarationUsageDistanceCheck > clazz = VariableDeclarationUsageDistanceCheck . class ; <nl> <nl> @ @ - 34 , 10 + 33 , 10 @ @ public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { <nl> " 479 : " + getCheckMessage ( clazz , msgExt , " myOption " , 7 , 3 ) , <nl> " 491 : " + getCheckMessage ( clazz , msgExt , " myOption " , 6 , 3 ) , <nl> } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " VariableDeclarationUsageDistance " ) ; <nl> String filePath = builder . getFilePath ( " InputVariableDeclarationUsageDistanceCheck " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> index ced1d68 . . be5ac33 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> @ @ - 127 , 8 + 127 , 7 @ @ public class PackageNamesLoaderTest { <nl> when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenReturn ( enumer ) ; <nl> <nl> try { <nl> - final Set < String > packageNames = PackageNamesLoader <nl> - . getPackageNames ( classLoader ) ; <nl> + PackageNamesLoader . getPackageNames ( classLoader ) ; <nl> fail ( ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> @ @ - 152 , 8 + 151 , 7 @ @ public class PackageNamesLoaderTest { <nl> when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenReturn ( enumer ) ; <nl> <nl> try { <nl> - final Set < String > packageNames = PackageNamesLoader <nl> - . getPackageNames ( classLoader ) ; <nl> + PackageNamesLoader . getPackageNames ( classLoader ) ; <nl> fail ( ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java <nl> index 8af77f5 . . 3605ea6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ public class PropertiesExpanderTest { <nl> <nl> @ Test ( expected = IllegalArgumentException . class ) <nl> public void testCtorException ( ) throws CheckstyleException { <nl> - PropertiesExpander object = new PropertiesExpander ( null ) ; <nl> + new PropertiesExpander ( null ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> index c511be2 . . b46b201 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> import static org . powermock . api . mockito . PowerMockito . mockStatic ; <nl> import static org . powermock . api . mockito . PowerMockito . when ; <nl> - import static org . powermock . api . support . membermodification . MemberMatcher . method ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> @ @ - 58 , 20 + 57 , 20 @ @ public class PropertyCacheFileTest { <nl> file . setReadable ( true , false ) ; <nl> file . setWritable ( false , false ) ; <nl> <nl> - PropertyCacheFile cache = new PropertyCacheFile ( config , file . getAbsolutePath ( ) ) ; <nl> + new PropertyCacheFile ( config , file . getAbsolutePath ( ) ) ; <nl> } <nl> <nl> @ Test <nl> public void testCtor ( ) throws IOException { <nl> try { <nl> - PropertyCacheFile cache = new PropertyCacheFile ( null , " " ) ; <nl> + new PropertyCacheFile ( null , " " ) ; <nl> } <nl> catch ( IllegalArgumentException ex ) { <nl> assertEquals ( " config can not be null " , ex . getMessage ( ) ) ; <nl> } <nl> try { <nl> Configuration config = new DefaultConfiguration ( " myname " ) ; <nl> - PropertyCacheFile cache = new PropertyCacheFile ( config , null ) ; <nl> + new PropertyCacheFile ( config , null ) ; <nl> } <nl> catch ( IllegalArgumentException ex ) { <nl> assertEquals ( " fileName can not be null " , ex . getMessage ( ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> index 28b8525 . . 572715b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class XMLLoggerTest { <nl> @ Test <nl> public void testEncode ( ) <nl> throws IOException { <nl> - final XMLLogger logger = new XMLLogger ( outStream , false ) ; <nl> + new XMLLogger ( outStream , false ) ; <nl> final String [ ] [ ] encodings = { <nl> { " < " , " & lt ; " } , <nl> { " > " , " & gt ; " } , <nl> @ @ - 72 , 7 + 72 , 7 @ @ public class XMLLoggerTest { <nl> @ Test <nl> public void testIsReference ( ) <nl> throws IOException { <nl> - final XMLLogger logger = new XMLLogger ( outStream , false ) ; <nl> + new XMLLogger ( outStream , false ) ; <nl> final String [ ] reference = { <nl> " & # 0 ; " , <nl> " & # x0 ; " , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> index 922d722 . . 9192678 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> @ @ - 68 , 8 + 68 , 6 @ @ public class DetailASTTest { <nl> public void testSetSiblingNull ( ) { <nl> final DetailAST root = new DetailAST ( ) ; <nl> final DetailAST firstLevelA = new DetailAST ( ) ; <nl> - final DetailAST firstLevelB = new DetailAST ( ) ; <nl> - final DetailAST secondLevelA = new DetailAST ( ) ; <nl> <nl> root . setFirstChild ( firstLevelA ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java <nl> index a7e7072 . . 4f8b652 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class FileTextTest { <nl> / / just to make UT coverage 100 % <nl> String charsetName = " STRANGE _ CHARSET " ; <nl> try { <nl> - FileText o = new FileText ( new File ( " any name " ) , charsetName ) ; <nl> + new FileText ( new File ( " any name " ) , charsetName ) ; <nl> fail ( ) ; <nl> } <nl> catch ( UnsupportedEncodingException e ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> index ecd438f . . ab4e105 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> @ @ - 73 , 7 + 73 , 6 @ @ public class LocalizedMessageTest { <nl> <nl> ClassLoader classloader = mock ( ClassLoader . class ) ; <nl> String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; <nl> - String urlPath = " file : com / puppycrawl / tools / checkstyle / checks / coding / messages . properties " ; <nl> final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; <nl> when ( mockConnection . getInputStream ( ) ) . thenReturn ( <nl> new ByteArrayInputStream ( new byte [ ] { } ) ) ; <nl> @ @ - 92 , 7 + 91 , 6 @ @ public class LocalizedMessageTest { <nl> <nl> ClassLoader classloader = mock ( ClassLoader . class ) ; <nl> String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; <nl> - String urlPath = " file : com / puppycrawl / tools / checkstyle / checks / coding / messages . properties " ; <nl> <nl> URL url = getMockUrl ( null ) ; <nl> when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java <nl> index 023d2a1 . . d530ac4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ public class SeverityLevelCounterTest { <nl> <nl> @ Test ( expected = IllegalArgumentException . class ) <nl> public void testCtorException ( ) { <nl> - final SeverityLevelCounter o = new SeverityLevelCounter ( null ) ; <nl> + new SeverityLevelCounter ( null ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> index 7eae052 . . 18daf6f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> @ @ - 74 , 7 + 74 , 6 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { <nl> * / <nl> @ Test <nl> public void testNotFoundKey ( ) throws Exception { <nl> - final UniquePropertiesCheck check = new UniquePropertiesCheck ( ) ; <nl> final List < String > testStrings = new ArrayList < > ( 3 ) ; <nl> testStrings . add ( " " ) ; <nl> testStrings . add ( " 0 = 0 " ) ;

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index 7a353b6 . . b661d1e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 189 , 16 + 189 , 14 @ @ public class RightCurlyCheck extends AbstractCheck { 
 * / 
 private String validate ( Details details ) { 
 final DetailAST rcurly = details . rcurly ; 
 - final DetailAST lcurly = details . lcurly ; 
 final DetailAST nextToken = details . nextToken ; 
 final boolean shouldCheckLastRcurly = details . shouldCheckLastRcurly ; 
 String violation = " " ; 
 - if ( option = = RightCurlyOption . SAME 
 - & & ! hasLineBreakBefore ( rcurly ) 
 - & & lcurly . getLineNo ( ) ! = rcurly . getLineNo ( ) ) { 
 + if ( shouldHaveLineBreakBefore ( option , details ) ) { 
 violation = MSG _ KEY _ LINE _ BREAK _ BEFORE ; 
 } 
 - else if ( shouldCheckLastRcurly ) { 
 + else if ( shouldCheckLastRcurly 
 + & & option ! = RightCurlyOption . ALONE ) { 
 if ( rcurly . getLineNo ( ) = = nextToken . getLineNo ( ) ) { 
 violation = MSG _ KEY _ LINE _ ALONE ; 
 } 
 @ @ - 219 , 6 + 217 , 19 @ @ public class RightCurlyCheck extends AbstractCheck { 
 } 
 
 / * * 
 + * Checks whether a right curly should have a line break before . 
 + * @ param bracePolicy option for placing the right curly brace . 
 + * @ param details details for validation . 
 + * @ return true if a right curly should have a line break before . 
 + * / 
 + private static boolean shouldHaveLineBreakBefore ( RightCurlyOption bracePolicy , 
 + Details details ) { 
 + return bracePolicy = = RightCurlyOption . SAME 
 + & & ! hasLineBreakBefore ( details . rcurly ) 
 + & & details . lcurly . getLineNo ( ) ! = details . rcurly . getLineNo ( ) ; 
 + } 
 + 
 + / * * 
 * Checks that a right curly should be on the same line as the next statement . 
 * @ param bracePolicy option for placing the right curly brace 
 * @ param details Details for validation 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 index bf70c97 . . fca9b7a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 @ @ - 99 , 6 + 99 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE . toString ( ) ) ; 
 final String [ ] expected = { 
 " 93 : 27 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 27 ) , 
 + " 97 : 72 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 72 ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputLeftCurlyOther . java " ) , expected ) ; 
 } 
 @ @ - 124 , 6 + 125 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " shouldStartLine " , " false " ) ; 
 final String [ ] expected = { 
 " 93 : 27 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 27 ) , 
 + " 97 : 72 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 72 ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputLeftCurlyOther . java " ) , expected ) ; 
 } 
 @ @ - 134 , 6 + 136 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " shouldStartLine " , " false " ) ; 
 final String [ ] expected = { 
 " 93 : 27 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 27 ) , 
 + " 97 : 72 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 72 ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputLeftCurlyOther . java " ) , expected ) ; 
 } 
 @ @ - 203 , 6 + 206 , 7 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { 
 " 127 : 77 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 77 ) , 
 " 136 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , 
 " 138 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , 
 + " 138 : 33 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 33 ) , 
 " 148 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , 
 " 150 : 75 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 75 ) , 
 " 151 : 77 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 77 ) , 
 @ @ - 322 , 6 + 326 , 9 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { 
 final String [ ] expected = { 
 " 19 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , 
 " 24 : 67 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 67 ) , 
 + " 25 : 35 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 35 ) , 
 + " 27 : 92 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 92 ) , 
 + " 33 : 67 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 67 ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputRightCurlyTryResource . java " ) , expected ) ; 
 } 
 @ @ - 334 , 4 + 341 , 15 @ @ public class RightCurlyCheckTest extends BaseCheckTestSupport { 
 } ; 
 verify ( checkConfig , getPath ( " InputRightCurlyTryResource . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testBracePolicyAloneAndSinglelineIfBlocks ( ) throws Exception { 
 + checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE . toString ( ) ) ; 
 + final String [ ] expected = { 
 + " 5 : 32 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 32 ) , 
 + " 7 : 45 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 45 ) , 
 + " 7 : 47 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 47 ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputRightCurlySingelineIfBlocks . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlySingelineIfBlocks . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlySingelineIfBlocks . java 
 new file mode 100644 
 index 0000000 . . adc0c18 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputRightCurlySingelineIfBlocks . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . blocks ; 
 + 
 + public class InputRightCurlySingelineIfBlocks { 
 + void foo1 ( ) { 
 + if ( true ) { int a = 5 ; } / / violation 
 + 
 + if ( true ) { if ( false ) { int b = 6 ; } } / / violation 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java 
 index ab4239d . . acc3444 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java 
 @ @ - 13 , 9 + 13 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . checks . OuterTypeFilenameCheck ; 
 
 public class OuterTypeFilenameTest extends BaseCheckTestSupport { 
 - 
 + 
 static ConfigurationBuilder builder ; 
 - 
 + 
 @ BeforeClass 
 public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { 
 builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 @ @ - 24 , 39 + 24 , 37 @ @ public class OuterTypeFilenameTest extends BaseCheckTestSupport { 
 @ Test 
 public void outerTypeFilenameTest _ 1 ( ) throws IOException , Exception { 
 
 - String msg = getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) ; 
 - 
 final String [ ] expected = { } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; 
 String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 1 " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 - } 
 - 
 + } 
 + 
 @ Test 
 public void outerTypeFilenameTest _ 2 ( ) throws IOException , Exception { 
 - 
 + 
 final String [ ] expected = { } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; 
 String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 2 " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 - 
 + 
 @ Test 
 public void outerTypeFilenameTest _ 3 ( ) throws IOException , Exception { 
 - 
 + 
 final String [ ] expected = { 
 - " 3 : " + getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) , 
 + " 3 : " + getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) , 
 } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; 
 String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 3 " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java 
 index bb56a48 . . 158f23a 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java 
 @ @ - 14 , 9 + 14 , 9 @ @ import com . puppycrawl . tools . checkstyle . checks . sizes . LineLengthCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . whitespace . NoLineWrapCheck ; 
 
 public class NoLineWrapTest extends BaseCheckTestSupport { 
 - 
 + 
 static ConfigurationBuilder builder ; 
 - 
 + 
 @ BeforeClass 
 public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { 
 builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 @ @ - 24 , 29 + 24 , 27 @ @ public class NoLineWrapTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void badLineWrapTest ( ) throws IOException , Exception { 
 - 
 - String msg = getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) ; 
 
 final String [ ] expected = { 
 " 1 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " package " ) , 
 - " 6 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) , 
 + " 6 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) , 
 } ; 
 
 Configuration checkConfig = builder . getCheckConfig ( " NoLineWrap " ) ; 
 String filePath = builder . getFilePath ( " NoLineWrap _ Bad " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 - 
 + 
 @ Test 
 public void goodLineWrapTest ( ) throws IOException , Exception { 
 - 
 + 
 final String [ ] expected = { } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " NoLineWrap " ) ; 
 String filePath = builder . getFilePath ( " NoLineWrap _ Good " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 @ @ - 68 , 7 + 66 , 7 @ @ public class NoLineWrapTest extends BaseCheckTestSupport { 
 
 Configuration checkConfig = builder . getCheckConfig ( " LineLength " ) ; 
 String filePath = builder . getFilePath ( " LineLengthInput2 " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java 
 index 10d3ef4 . . c5b1f30 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java 
 @ @ - 13 , 9 + 13 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . checks . coding . VariableDeclarationUsageDistanceCheck ; 
 
 public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { 
 - 
 + 
 static ConfigurationBuilder builder ; 
 - 
 + 
 @ BeforeClass 
 public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { 
 builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 @ @ - 23 , 8 + 23 , 7 @ @ public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void arrayTypeStyleTest ( ) throws IOException , Exception { 
 - 
 - String msg = " variable . declaration . usage . distance " ; 
 + 
 String msgExt = " variable . declaration . usage . distance . extend " ; 
 Class < VariableDeclarationUsageDistanceCheck > clazz = VariableDeclarationUsageDistanceCheck . class ; 
 
 @ @ - 34 , 10 + 33 , 10 @ @ public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { 
 " 479 : " + getCheckMessage ( clazz , msgExt , " myOption " , 7 , 3 ) , 
 " 491 : " + getCheckMessage ( clazz , msgExt , " myOption " , 6 , 3 ) , 
 } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " VariableDeclarationUsageDistance " ) ; 
 String filePath = builder . getFilePath ( " InputVariableDeclarationUsageDistanceCheck " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 index ced1d68 . . be5ac33 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 @ @ - 127 , 8 + 127 , 7 @ @ public class PackageNamesLoaderTest { 
 when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenReturn ( enumer ) ; 
 
 try { 
 - final Set < String > packageNames = PackageNamesLoader 
 - . getPackageNames ( classLoader ) ; 
 + PackageNamesLoader . getPackageNames ( classLoader ) ; 
 fail ( ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 @ @ - 152 , 8 + 151 , 7 @ @ public class PackageNamesLoaderTest { 
 when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenReturn ( enumer ) ; 
 
 try { 
 - final Set < String > packageNames = PackageNamesLoader 
 - . getPackageNames ( classLoader ) ; 
 + PackageNamesLoader . getPackageNames ( classLoader ) ; 
 fail ( ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java 
 index 8af77f5 . . 3605ea6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java 
 @ @ - 27 , 7 + 27 , 7 @ @ public class PropertiesExpanderTest { 
 
 @ Test ( expected = IllegalArgumentException . class ) 
 public void testCtorException ( ) throws CheckstyleException { 
 - PropertiesExpander object = new PropertiesExpander ( null ) ; 
 + new PropertiesExpander ( null ) ; 
 } 
 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 index c511be2 . . b46b201 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 @ @ - 25 , 7 + 25 , 6 @ @ import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 import static org . powermock . api . mockito . PowerMockito . mockStatic ; 
 import static org . powermock . api . mockito . PowerMockito . when ; 
 - import static org . powermock . api . support . membermodification . MemberMatcher . method ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 @ @ - 58 , 20 + 57 , 20 @ @ public class PropertyCacheFileTest { 
 file . setReadable ( true , false ) ; 
 file . setWritable ( false , false ) ; 
 
 - PropertyCacheFile cache = new PropertyCacheFile ( config , file . getAbsolutePath ( ) ) ; 
 + new PropertyCacheFile ( config , file . getAbsolutePath ( ) ) ; 
 } 
 
 @ Test 
 public void testCtor ( ) throws IOException { 
 try { 
 - PropertyCacheFile cache = new PropertyCacheFile ( null , " " ) ; 
 + new PropertyCacheFile ( null , " " ) ; 
 } 
 catch ( IllegalArgumentException ex ) { 
 assertEquals ( " config can not be null " , ex . getMessage ( ) ) ; 
 } 
 try { 
 Configuration config = new DefaultConfiguration ( " myname " ) ; 
 - PropertyCacheFile cache = new PropertyCacheFile ( config , null ) ; 
 + new PropertyCacheFile ( config , null ) ; 
 } 
 catch ( IllegalArgumentException ex ) { 
 assertEquals ( " fileName can not be null " , ex . getMessage ( ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 index 28b8525 . . 572715b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class XMLLoggerTest { 
 @ Test 
 public void testEncode ( ) 
 throws IOException { 
 - final XMLLogger logger = new XMLLogger ( outStream , false ) ; 
 + new XMLLogger ( outStream , false ) ; 
 final String [ ] [ ] encodings = { 
 { " < " , " & lt ; " } , 
 { " > " , " & gt ; " } , 
 @ @ - 72 , 7 + 72 , 7 @ @ public class XMLLoggerTest { 
 @ Test 
 public void testIsReference ( ) 
 throws IOException { 
 - final XMLLogger logger = new XMLLogger ( outStream , false ) ; 
 + new XMLLogger ( outStream , false ) ; 
 final String [ ] reference = { 
 " & # 0 ; " , 
 " & # x0 ; " , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 index 922d722 . . 9192678 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 @ @ - 68 , 8 + 68 , 6 @ @ public class DetailASTTest { 
 public void testSetSiblingNull ( ) { 
 final DetailAST root = new DetailAST ( ) ; 
 final DetailAST firstLevelA = new DetailAST ( ) ; 
 - final DetailAST firstLevelB = new DetailAST ( ) ; 
 - final DetailAST secondLevelA = new DetailAST ( ) ; 
 
 root . setFirstChild ( firstLevelA ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java 
 index a7e7072 . . 4f8b652 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java 
 @ @ - 35 , 7 + 35 , 7 @ @ public class FileTextTest { 
 / / just to make UT coverage 100 % 
 String charsetName = " STRANGE _ CHARSET " ; 
 try { 
 - FileText o = new FileText ( new File ( " any name " ) , charsetName ) ; 
 + new FileText ( new File ( " any name " ) , charsetName ) ; 
 fail ( ) ; 
 } 
 catch ( UnsupportedEncodingException e ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 index ecd438f . . ab4e105 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 @ @ - 73 , 7 + 73 , 6 @ @ public class LocalizedMessageTest { 
 
 ClassLoader classloader = mock ( ClassLoader . class ) ; 
 String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; 
 - String urlPath = " file : com / puppycrawl / tools / checkstyle / checks / coding / messages . properties " ; 
 final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; 
 when ( mockConnection . getInputStream ( ) ) . thenReturn ( 
 new ByteArrayInputStream ( new byte [ ] { } ) ) ; 
 @ @ - 92 , 7 + 91 , 6 @ @ public class LocalizedMessageTest { 
 
 ClassLoader classloader = mock ( ClassLoader . class ) ; 
 String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; 
 - String urlPath = " file : com / puppycrawl / tools / checkstyle / checks / coding / messages . properties " ; 
 
 URL url = getMockUrl ( null ) ; 
 when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java 
 index 023d2a1 . . d530ac4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java 
 @ @ - 26 , 7 + 26 , 7 @ @ public class SeverityLevelCounterTest { 
 
 @ Test ( expected = IllegalArgumentException . class ) 
 public void testCtorException ( ) { 
 - final SeverityLevelCounter o = new SeverityLevelCounter ( null ) ; 
 + new SeverityLevelCounter ( null ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 index 7eae052 . . 18daf6f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 @ @ - 74 , 7 + 74 , 6 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { 
 * / 
 @ Test 
 public void testNotFoundKey ( ) throws Exception { 
 - final UniquePropertiesCheck check = new UniquePropertiesCheck ( ) ; 
 final List < String > testStrings = new ArrayList < > ( 3 ) ; 
 testStrings . add ( " " ) ; 
 testStrings . add ( " 0 = 0 " ) ;
