BLEU SCORE: 0.05795599612995367

TEST MSG: Issue # 3567 : fixed final ForbidAnnotationElementValueCheck violation
GENERATED MSG: Pull # 6424 : solved pitest issues with ImportOrderCheck

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> index 29504f6 . . ba13a3b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java <nl> @ @ - 654 , 8 + 654 , 7 @ @ public class ImportOrderCheckTest extends AbstractModuleTestSupport { <nl> * <nl> * @ throws Exception if there is an error . <nl> * / <nl> - / / - @ cs [ ForbidAnnotationElementValue ] Will examine turkish failure <nl> - @ Test ( expected = IllegalStateException . class ) <nl> + @ Test <nl> public void testVisitTokenSwitchReflection ( ) throws Exception { <nl> / / Create mock ast <nl> final DetailAST astImport = mockAST ( TokenTypes . IMPORT , " import " , " mockfile " , 0 , 0 ) ; <nl> @ @ - 669 , 7 + 668 , 13 @ @ public class ImportOrderCheckTest extends AbstractModuleTestSupport { <nl> TestUtil . getClassDeclaredField ( ImportOrderCheck . class , " option " ) . set ( mock , null ) ; <nl> <nl> / / expecting IllegalStateException <nl> - mock . visitToken ( astImport ) ; <nl> + try { <nl> + mock . visitToken ( astImport ) ; <nl> + fail ( " An exception is expected " ) ; <nl> + } <nl> + catch ( IllegalStateException ex ) { <nl> + assertTrue ( " invalid exception message " , ex . getMessage ( ) . endsWith ( " : null " ) ) ; <nl> + } <nl> } <nl> <nl> / * *
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 7d8cd71 . . a74b366 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 272 , 7 + 272 , 7 @ @ <nl> < dependency > <nl> < groupId > nl . jqno . equalsverifier < / groupId > <nl> < artifactId > equalsverifier < / artifactId > <nl> - < version > 3 . 0 . 3 < / version > <nl> + < version > 3 . 1 . 2 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 index 29504f6 . . ba13a3b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheckTest . java 
 @ @ - 654 , 8 + 654 , 7 @ @ public class ImportOrderCheckTest extends AbstractModuleTestSupport { 
 * 
 * @ throws Exception if there is an error . 
 * / 
 - / / - @ cs [ ForbidAnnotationElementValue ] Will examine turkish failure 
 - @ Test ( expected = IllegalStateException . class ) 
 + @ Test 
 public void testVisitTokenSwitchReflection ( ) throws Exception { 
 / / Create mock ast 
 final DetailAST astImport = mockAST ( TokenTypes . IMPORT , " import " , " mockfile " , 0 , 0 ) ; 
 @ @ - 669 , 7 + 668 , 13 @ @ public class ImportOrderCheckTest extends AbstractModuleTestSupport { 
 TestUtil . getClassDeclaredField ( ImportOrderCheck . class , " option " ) . set ( mock , null ) ; 
 
 / / expecting IllegalStateException 
 - mock . visitToken ( astImport ) ; 
 + try { 
 + mock . visitToken ( astImport ) ; 
 + fail ( " An exception is expected " ) ; 
 + } 
 + catch ( IllegalStateException ex ) { 
 + assertTrue ( " invalid exception message " , ex . getMessage ( ) . endsWith ( " : null " ) ) ; 
 + } 
 } 
 
 / * *

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 7d8cd71 . . a74b366 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 272 , 7 + 272 , 7 @ @ 
 < dependency > 
 < groupId > nl . jqno . equalsverifier < / groupId > 
 < artifactId > equalsverifier < / artifactId > 
 - < version > 3 . 0 . 3 < / version > 
 + < version > 3 . 1 . 2 < / version > 
 < scope > test < / scope > 
 < / dependency > 
 < dependency >
