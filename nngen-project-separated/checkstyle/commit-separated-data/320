BLEU SCORE: 0.06839596061560943

TEST MSG: Issue # 4530 : Add the new option for Checkstyle CLI to generate the basic suppression xpath
GENERATED MSG: Issue # 2638 : Print parse tree from CLI to terminal

TEST DIFF (one line): diff - - git a / config / import - control . xml b / config / import - control . xml <nl> index df9d9f3 . . 7942497 100644 <nl> - - - a / config / import - control . xml <nl> + + + b / config / import - control . xml <nl> @ @ - 50 , 6 + 50 , 7 @ @ <nl> < allow class = " java . lang . annotation . Retention " local - only = " true " / > <nl> < allow class = " java . lang . annotation . RetentionPolicy " local - only = " true " / > <nl> < allow class = " java . lang . annotation . Target " local - only = " true " / > <nl> + < allow class = " com . puppycrawl . tools . checkstyle . xpath . XpathQueryGenerator " local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . FileStatefulCheck " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . StatelessCheck " / > <nl> <nl> diff - - git a / pom . xml b / pom . xml <nl> index 9094025 . . 92f2f77 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 2326 , 11 + 2326 , 13 @ @ <nl> < param > com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser < / param > <nl> < param > com . puppycrawl . tools . checkstyle . DetailNodeTreeStringPrinter < / param > <nl> < param > com . puppycrawl . tools . checkstyle . AstTreeStringPrinter < / param > <nl> + < param > com . puppycrawl . tools . checkstyle . SuppressionsStringPrinter < / param > <nl> < param > com . puppycrawl . tools . checkstyle . TreeWalker < / param > <nl> < / targetClasses > <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . DetailNodeTreeStringPrinterTest < / param > <nl> < param > com . puppycrawl . tools . checkstyle . AstTreeStringPrinterTest < / param > <nl> + < param > com . puppycrawl . tools . checkstyle . SuppressionsStringPrinterTest < / param > <nl> < param > com . puppycrawl . tools . checkstyle . TreeWalkerTest < / param > <nl> < param > com . puppycrawl . tools . checkstyle . checks . coding . PackageDeclarationCheckTest < / param > <nl> < param > com . puppycrawl . tools . checkstyle . checks . imports . ImportControlCheckTest < / param > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index 9ce6a01 . . a91a1b6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 100 , 12 + 100 , 18 @ @ public final class Main { <nl> / * * Name for the option ' o ' . * / <nl> private static final String OPTION _ O _ NAME = " o " ; <nl> <nl> + / * * Name for the option ' s ' . * / <nl> + private static final String OPTION _ S _ NAME = " s " ; <nl> + <nl> / * * Name for the option ' t ' . * / <nl> private static final String OPTION _ T _ NAME = " t " ; <nl> <nl> / * * Name for the option ' - - tree ' . * / <nl> private static final String OPTION _ TREE _ NAME = " tree " ; <nl> <nl> + / * * Name for the option ' tabWidth ' . * / <nl> + private static final String OPTION _ TAB _ WIDTH _ NAME = " tabWidth " ; <nl> + <nl> / * * Name for the option ' - T ' . * / <nl> private static final String OPTION _ CAPITAL _ T _ NAME = " T " ; <nl> <nl> @ @ - 167 , 6 + 173 , 9 @ @ public final class Main { <nl> / * * A string value of 1 . * / <nl> private static final String ONE _ STRING _ VALUE = " 1 " ; <nl> <nl> + / * * Default distance between tab stops . * / <nl> + private static final String DEFAULT _ TAB _ WIDTH = " 8 " ; <nl> + <nl> / * * Don ' t create instance of this class , use { @ link # main ( String [ ] ) } method instead . * / <nl> private Main ( ) { <nl> } <nl> @ @ - 298 , 14 + 307 , 24 @ @ public final class Main { <nl> / / ensure there is no conflicting options <nl> else if ( cmdLine . hasOption ( OPTION _ T _ NAME ) | | cmdLine . hasOption ( OPTION _ CAPITAL _ T _ NAME ) <nl> | | cmdLine . hasOption ( OPTION _ J _ NAME ) | | cmdLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { <nl> - if ( cmdLine . hasOption ( OPTION _ C _ NAME ) | | cmdLine . hasOption ( OPTION _ P _ NAME ) <nl> - | | cmdLine . hasOption ( OPTION _ F _ NAME ) | | cmdLine . hasOption ( OPTION _ O _ NAME ) ) { <nl> + if ( cmdLine . hasOption ( OPTION _ S _ NAME ) | | cmdLine . hasOption ( OPTION _ C _ NAME ) <nl> + | | cmdLine . hasOption ( OPTION _ P _ NAME ) | | cmdLine . hasOption ( OPTION _ F _ NAME ) <nl> + | | cmdLine . hasOption ( OPTION _ O _ NAME ) ) { <nl> result . add ( " Option ' - t ' cannot be used with other options . " ) ; <nl> } <nl> else if ( filesToProcess . size ( ) > 1 ) { <nl> result . add ( " Printing AST is allowed for only one file . " ) ; <nl> } <nl> } <nl> + else if ( cmdLine . hasOption ( OPTION _ S _ NAME ) ) { <nl> + if ( cmdLine . hasOption ( OPTION _ C _ NAME ) | | cmdLine . hasOption ( OPTION _ P _ NAME ) <nl> + | | cmdLine . hasOption ( OPTION _ F _ NAME ) | | cmdLine . hasOption ( OPTION _ O _ NAME ) ) { <nl> + result . add ( " Option ' - s ' cannot be used with other options . " ) ; <nl> + } <nl> + else if ( filesToProcess . size ( ) > 1 ) { <nl> + result . add ( " Printing xpath suppressions is allowed for only one file . " ) ; <nl> + } <nl> + } <nl> / / ensure a configuration file is specified <nl> else if ( cmdLine . hasOption ( OPTION _ C _ NAME ) ) { <nl> final String configLocation = cmdLine . getOptionValue ( OPTION _ C _ NAME ) ; <nl> @ @ - 412 , 6 + 431 , 15 @ @ public final class Main { <nl> final String stringAst = AstTreeStringPrinter . printJavaAndJavadocTree ( file ) ; <nl> System . out . print ( stringAst ) ; <nl> } <nl> + else if ( commandLine . hasOption ( OPTION _ S _ NAME ) ) { <nl> + final File file = config . files . get ( 0 ) ; <nl> + final String suppressionLineColumnNumber = config . suppressionLineColumnNumber ; <nl> + final int tabWidth = config . tabWidth ; <nl> + final String stringSuppressions = <nl> + SuppressionsStringPrinter . printSuppressions ( file , <nl> + suppressionLineColumnNumber , tabWidth ) ; <nl> + System . out . print ( stringSuppressions ) ; <nl> + } <nl> else { <nl> if ( commandLine . hasOption ( OPTION _ D _ NAME ) ) { <nl> final Logger parentLogger = Logger . getLogger ( Main . class . getName ( ) ) . getParent ( ) ; <nl> @ @ - 456 , 6 + 484 , 7 @ @ public final class Main { <nl> conf . outputLocation = cmdLine . getOptionValue ( OPTION _ O _ NAME ) ; <nl> conf . configLocation = cmdLine . getOptionValue ( OPTION _ C _ NAME ) ; <nl> conf . propertiesLocation = cmdLine . getOptionValue ( OPTION _ P _ NAME ) ; <nl> + conf . suppressionLineColumnNumber = cmdLine . getOptionValue ( OPTION _ S _ NAME ) ; <nl> conf . files = filesToProcess ; <nl> conf . executeIgnoredModules = cmdLine . hasOption ( OPTION _ EXECUTE _ IGNORED _ MODULES _ NAME ) ; <nl> final String checkerThreadsNumber = cmdLine . getOptionValue ( <nl> @ @ - 464 , 6 + 493 , 9 @ @ public final class Main { <nl> final String treeWalkerThreadsNumber = cmdLine . getOptionValue ( <nl> OPTION _ CAPITAL _ W _ NAME , ONE _ STRING _ VALUE ) ; <nl> conf . treeWalkerThreadsNumber = Integer . parseInt ( treeWalkerThreadsNumber ) ; <nl> + final String tabWidth = <nl> + cmdLine . getOptionValue ( OPTION _ TAB _ WIDTH _ NAME , DEFAULT _ TAB _ WIDTH ) ; <nl> + conf . tabWidth = Integer . parseInt ( tabWidth ) ; <nl> return conf ; <nl> } <nl> <nl> @ @ - 708 , 6 + 740 , 14 @ @ public final class Main { <nl> options . addOption ( OPTION _ C _ NAME , true , " Sets the check configuration file to use . " ) ; <nl> options . addOption ( OPTION _ O _ NAME , true , " Sets the output file . Defaults to stdout " ) ; <nl> options . addOption ( OPTION _ P _ NAME , true , " Loads the properties file " ) ; <nl> + options . addOption ( OPTION _ S _ NAME , true , <nl> + " Print xpath suppressions at the file ' s line and column position . " <nl> + + " Argument is the line and column number ( separated by a : ) in the file " <nl> + + " that the suppression should be generated for " ) ; <nl> + options . addOption ( OPTION _ TAB _ WIDTH _ NAME , true , <nl> + String . format ( " Sets the length of the tab character . Used only with \ " - s \ " option . " <nl> + + " Default value is % s " , <nl> + DEFAULT _ TAB _ WIDTH ) ) ; <nl> options . addOption ( OPTION _ F _ NAME , true , String . format ( <nl> " Sets the output format . ( % s | % s ) . Defaults to % s " , <nl> PLAIN _ FORMAT _ NAME , XML _ FORMAT _ NAME , PLAIN _ FORMAT _ NAME ) ) ; <nl> @ @ - 754 , 6 + 794 , 10 @ @ public final class Main { <nl> private int checkerThreadsNumber ; <nl> / * * The tree walker threads number . * / <nl> private int treeWalkerThreadsNumber ; <nl> + / * * LineNo and columnNo for the suppression . * / <nl> + private String suppressionLineColumnNumber ; <nl> + / * * Tab character length . * / <nl> + private int tabWidth ; <nl> <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinter . java <nl> new file mode 100644 <nl> index 0000000 . . 258c2d6 <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinter . java <nl> @ @ - 0 , 0 + 1 , 103 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2018 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . nio . charset . StandardCharsets ; <nl> + import java . util . List ; <nl> + import java . util . Locale ; <nl> + import java . util . regex . Matcher ; <nl> + import java . util . regex . Pattern ; <nl> + import java . util . stream . Collectors ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> + import com . puppycrawl . tools . checkstyle . xpath . XpathQueryGenerator ; <nl> + <nl> + / * * <nl> + * Class for constructing xpath queries to suppress nodes <nl> + * with specified line and column number . <nl> + * @ author Timur Tibeyev . <nl> + * / <nl> + public final class SuppressionsStringPrinter { <nl> + <nl> + / * * Line and column number config value pattern . * / <nl> + private static final Pattern VALID _ SUPPRESSION _ LINE _ COLUMN _ NUMBER _ REGEX = <nl> + Pattern . compile ( " ^ ( [ 0 - 9 ] + ) : ( [ 0 - 9 ] + ) $ " ) ; <nl> + <nl> + / * * OS specific line separator . * / <nl> + private static final String LINE _ SEPARATOR = System . getProperty ( " line . separator " ) ; <nl> + <nl> + / * * Prevent instances . * / <nl> + private SuppressionsStringPrinter ( ) { <nl> + / / no code <nl> + } <nl> + <nl> + / * * <nl> + * Prints generated suppressions . <nl> + * @ param file the file to process . <nl> + * @ param suppressionLineColumnNumber line and column number of the suppression <nl> + * @ param tabWidth length of the tab character <nl> + * @ return generated suppressions . <nl> + * @ throws IOException if the file could not be read . <nl> + * @ throws CheckstyleException if the file is not a Java source . <nl> + * / <nl> + public static String printSuppressions ( File file , String suppressionLineColumnNumber , <nl> + int tabWidth ) throws IOException , CheckstyleException { <nl> + final Matcher matcher = <nl> + VALID _ SUPPRESSION _ LINE _ COLUMN _ NUMBER _ REGEX . matcher ( suppressionLineColumnNumber ) ; <nl> + if ( matcher . matches ( ) ) { <nl> + final FileText fileText = new FileText ( file . getAbsoluteFile ( ) , <nl> + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; <nl> + final DetailAST detailAST = <nl> + JavaParser . parseFileText ( fileText , JavaParser . Options . WITH _ COMMENTS ) ; <nl> + final int lineNumber = Integer . parseInt ( matcher . group ( 1 ) ) ; <nl> + final int columnNumber = Integer . parseInt ( matcher . group ( 2 ) ) ; <nl> + return generate ( fileText , detailAST , lineNumber , columnNumber , tabWidth ) ; <nl> + } <nl> + else { <nl> + final String exceptionMsg = String . format ( Locale . ROOT , <nl> + " % s does not match valid format ' line : column ' . " , <nl> + suppressionLineColumnNumber ) ; <nl> + throw new IllegalStateException ( exceptionMsg ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Creates { @ code XpathQueryGenerator } instance and generates suppressions . <nl> + * @ param fileText { @ code FileText } object . <nl> + * @ param detailAST { @ code DetailAST } object . <nl> + * @ param lineNumber line number . <nl> + * @ param columnNumber column number . <nl> + * @ param tabWidth length of the tab character . <nl> + * @ return generated suppressions . <nl> + * / <nl> + private static String generate ( FileText fileText , DetailAST detailAST , int lineNumber , <nl> + int columnNumber , int tabWidth ) { <nl> + final XpathQueryGenerator queryGenerator = <nl> + new XpathQueryGenerator ( detailAST , lineNumber , columnNumber , fileText , <nl> + tabWidth ) ; <nl> + final List < String > suppressions = queryGenerator . generate ( ) ; <nl> + return suppressions . stream ( ) . collect ( Collectors . joining ( LINE _ SEPARATOR , <nl> + " " , LINE _ SEPARATOR ) ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 39ab06e . . 596e135 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 91 , 10 + 91 , 20 @ @ public class MainTest { <nl> + " - J , - - treeWithJavadoc Print full Abstract Syntax Tree of the file % n " <nl> + " - o < arg > Sets the output file . Defaults to stdout % n " <nl> + " - p < arg > Loads the properties file % n " <nl> + + " - s < arg > Print xpath suppressions at the file ' s line " <nl> + + " and column % n " <nl> + + " position . Argument is the line and column " <nl> + + " number ( separated % n " <nl> + + " by a : ) in the file that the suppression " <nl> + + " should be % n " <nl> + + " generated for % n " <nl> + " - t , - - tree Print Abstract Syntax Tree ( AST ) of the file % n " <nl> + " - T , - - treeWithComments Print Abstract Syntax Tree ( AST ) of the file " <nl> + " including % n " <nl> + " comments % n " <nl> + + " - tabWidth < arg > Sets the length of the tab character . " <nl> + + " Used only with \ " - s \ " % n " <nl> + + " option . Default value is 8 % n " <nl> + " - v Print product version and exit % n " <nl> + " - W , - - tree - walker - threads - number < arg > ( experimental ) The number of TreeWalker threads " <nl> + " ( must be % n " <nl> @ @ - 761 , 6 + 771 , 108 @ @ public class MainTest { <nl> } <nl> <nl> @ Test <nl> + public void testPrintSuppressionOption ( ) throws Exception { <nl> + final String expected = " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] " + EOL <nl> + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / MODIFIERS " + EOL <nl> + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / LITERAL _ CLASS " + EOL ; <nl> + <nl> + exit . checkAssertionAfterwards ( ( ) - > { <nl> + assertEquals ( " Unexpected output log " , <nl> + expected , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " Unexpected system error log " , <nl> + " " , systemErr . getLog ( ) ) ; <nl> + } ) ; <nl> + Main . main ( getPath ( " InputMainSuppressionsStringPrinter . java " ) , <nl> + " - s " , " 3 : 1 " ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testPrintSuppressionAndTabWidthOption ( ) throws Exception { <nl> + final String expected = " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / OBJBLOCK " <nl> + + " / METHOD _ DEF [ @ text = ' getName ' ] / SLIST / VARIABLE _ DEF [ @ text = ' var ' ] " + EOL <nl> + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / OBJBLOCK " <nl> + + " / METHOD _ DEF [ @ text = ' getName ' ] / SLIST / VARIABLE _ DEF [ @ text = ' var ' ] / MODIFIERS " + EOL <nl> + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / OBJBLOCK " <nl> + + " / METHOD _ DEF [ @ text = ' getName ' ] / SLIST / VARIABLE _ DEF [ @ text = ' var ' ] / TYPE " + EOL <nl> + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / OBJBLOCK " <nl> + + " / METHOD _ DEF [ @ text = ' getName ' ] / SLIST / VARIABLE _ DEF [ @ text = ' var ' ] / TYPE / LITERAL _ INT " <nl> + + EOL ; <nl> + <nl> + exit . checkAssertionAfterwards ( ( ) - > { <nl> + assertEquals ( " Unexpected output log " , <nl> + expected , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " Unexpected system error log " , <nl> + " " , systemErr . getLog ( ) ) ; <nl> + } ) ; <nl> + Main . main ( getPath ( " InputMainSuppressionsStringPrinter . java " ) , <nl> + " - s " , " 7 : 9 " , " - tabWidth " , " 2 " ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testPrintSuppressionConflictingOptionsTvsC ( ) throws Exception { <nl> + exit . expectSystemExitWithStatus ( - 1 ) ; <nl> + exit . checkAssertionAfterwards ( ( ) - > { <nl> + assertEquals ( " Unexpected output log " , " Option ' - s ' cannot be used with other options . " <nl> + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; <nl> + } ) ; <nl> + <nl> + Main . main ( " - c " , " / google _ checks . xml " , <nl> + getPath ( " " ) , " - s " , " 2 : 4 " ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testPrintSuppressionConflictingOptionsTvsP ( ) throws Exception { <nl> + exit . expectSystemExitWithStatus ( - 1 ) ; <nl> + exit . checkAssertionAfterwards ( ( ) - > { <nl> + assertEquals ( " Unexpected output log " , " Option ' - s ' cannot be used with other options . " <nl> + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; <nl> + } ) ; <nl> + <nl> + Main . main ( " - p " , getPath ( " InputMainMycheckstyle . properties " ) , " - s " , " 2 : 4 " , getPath ( " " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testPrintSuppressionConflictingOptionsTvsF ( ) throws Exception { <nl> + exit . expectSystemExitWithStatus ( - 1 ) ; <nl> + exit . checkAssertionAfterwards ( ( ) - > { <nl> + assertEquals ( " Unexpected output log " , " Option ' - s ' cannot be used with other options . " <nl> + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; <nl> + } ) ; <nl> + <nl> + Main . main ( " - f " , " plain " , " - s " , " 2 : 4 " , getPath ( " " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testPrintSuppressionConflictingOptionsTvsO ( ) throws Exception { <nl> + final File file = temporaryFolder . newFile ( " file . output " ) ; <nl> + <nl> + exit . expectSystemExitWithStatus ( - 1 ) ; <nl> + exit . checkAssertionAfterwards ( ( ) - > { <nl> + assertEquals ( " Unexpected output log " , " Option ' - s ' cannot be used with other options . " <nl> + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; <nl> + } ) ; <nl> + <nl> + Main . main ( " - o " , file . getCanonicalPath ( ) , " - s " , " 2 : 4 " , getPath ( " " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testPrintSuppressionOnMoreThanOneFile ( ) throws Exception { <nl> + exit . expectSystemExitWithStatus ( - 1 ) ; <nl> + exit . checkAssertionAfterwards ( ( ) - > { <nl> + assertEquals ( " Unexpected output log " , " Printing xpath suppressions is allowed for " <nl> + + " only one file . " <nl> + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; <nl> + } ) ; <nl> + <nl> + Main . main ( " - s " , " 2 : 4 " , getPath ( " " ) , getPath ( " " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testPrintFullTreeOption ( ) throws Exception { <nl> final String expected = new String ( Files . readAllBytes ( Paths . get ( <nl> getPath ( " InputMainExpectedInputAstTreeStringPrinterJavadoc . txt " ) ) ) , <nl> @ @ - 811 , 6 + 923 , 20 @ @ public class MainTest { <nl> } <nl> <nl> @ Test <nl> + public void testConflictingOptionsTvsS ( ) throws Exception { <nl> + final File file = temporaryFolder . newFile ( " file . output " ) ; <nl> + <nl> + exit . expectSystemExitWithStatus ( - 1 ) ; <nl> + exit . checkAssertionAfterwards ( ( ) - > { <nl> + assertEquals ( " Unexpected output log " , " Option ' - t ' cannot be used with other options . " <nl> + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; <nl> + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; <nl> + } ) ; <nl> + <nl> + Main . main ( " - s " , file . getCanonicalPath ( ) , " - t " , getPath ( " " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testConflictingOptionsTvsO ( ) throws Exception { <nl> final File file = temporaryFolder . newFile ( " file . output " ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinterTest . java <nl> new file mode 100644 <nl> index 0000000 . . 1a4b43c <nl> - - - / dev / null <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinterTest . java <nl> @ @ - 0 , 0 + 1 , 130 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2018 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + import static com . puppycrawl . tools . checkstyle . internal . utils . TestUtil . isUtilsClassHasPrivateConstructor ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + <nl> + import java . io . File ; <nl> + <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + <nl> + import antlr . NoViableAltException ; <nl> + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> + <nl> + public class SuppressionsStringPrinterTest extends AbstractTreeTestSupport { <nl> + <nl> + private static final String EOL = System . getProperty ( " line . separator " ) ; <nl> + <nl> + @ Override <nl> + protected String getPackageLocation ( ) { <nl> + return " com / puppycrawl / tools / checkstyle / suppressionsstringprinter " ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( SuppressionsStringPrinter . class , true ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testCorrect ( ) throws Exception { <nl> + final String expected = " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] " + EOL <nl> + + " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / MODIFIERS " + EOL <nl> + + " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / MODIFIERS / LITERAL _ PUBLIC " <nl> + + EOL ; <nl> + <nl> + final File input = new File ( getPath ( " InputSuppressionsStringPrinter . java " ) ) ; <nl> + final String lineAndColumnNumber = " 3 : 1 " ; <nl> + final int tabWidth = 2 ; <nl> + final String result = SuppressionsStringPrinter . printSuppressions ( input , <nl> + lineAndColumnNumber , tabWidth ) ; <nl> + <nl> + Assert . assertEquals ( " Invalid xpath queries " , <nl> + expected , result ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testCustomTabWidth ( ) throws Exception { <nl> + final String expected = " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / OBJBLOCK " <nl> + + " / METHOD _ DEF [ @ text = ' toString ' ] " + EOL <nl> + + " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / OBJBLOCK " <nl> + + " / METHOD _ DEF [ @ text = ' toString ' ] / MODIFIERS " + EOL <nl> + + " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / OBJBLOCK " <nl> + + " / METHOD _ DEF [ @ text = ' toString ' ] / MODIFIERS / LITERAL _ PUBLIC " + EOL ; <nl> + <nl> + final File input = new File ( getPath ( " InputSuppressionsStringPrinter . java " ) ) ; <nl> + final String lineAndColumnNumber = " 5 : 13 " ; <nl> + final int tabWidth = 4 ; <nl> + final String result = SuppressionsStringPrinter . printSuppressions ( input , <nl> + lineAndColumnNumber , tabWidth ) ; <nl> + <nl> + Assert . assertEquals ( " Invalid xpath queries " , <nl> + expected , result ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testCustomTabWidthEmptyResult ( ) throws Exception { <nl> + final File input = new File ( getPath ( " InputSuppressionsStringPrinter . java " ) ) ; <nl> + final String lineAndColumnNumber = " 5 : 13 " ; <nl> + final int tabWidth = 6 ; <nl> + final String result = SuppressionsStringPrinter . printSuppressions ( input , <nl> + lineAndColumnNumber , tabWidth ) ; <nl> + Assert . assertEquals ( " Invalid xpath queries " , <nl> + EOL , result ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testInvalidLineAndColumnNumberParameter ( ) throws Exception { <nl> + final File input = new File ( getPath ( " InputSuppressionsStringPrinter . java " ) ) ; <nl> + final String invalidLineAndColumnNumber = " abc - 432 " ; <nl> + final int tabWidth = 2 ; <nl> + try { <nl> + SuppressionsStringPrinter . printSuppressions ( input , <nl> + invalidLineAndColumnNumber , tabWidth ) ; <nl> + Assert . fail ( " exception expected " ) ; <nl> + } <nl> + catch ( IllegalStateException ex ) { <nl> + Assert . assertEquals ( " Invalid exception message " , <nl> + " abc - 432 does not match valid format ' line : column ' . " , <nl> + ex . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> + public void testParseFileTextThrowable ( ) throws Exception { <nl> + final File input = new File ( getNonCompilablePath ( " InputSuppressionsStringPrinter . java " ) ) ; <nl> + final String lineAndColumnNumber = " 2 : 3 " ; <nl> + final int tabWidth = 2 ; <nl> + try { <nl> + SuppressionsStringPrinter . printSuppressions ( input , <nl> + lineAndColumnNumber , tabWidth ) ; <nl> + Assert . fail ( " exception expected " ) ; <nl> + } <nl> + catch ( CheckstyleException ex ) { <nl> + Assert . assertSame ( " Invalid class " , <nl> + NoViableAltException . class , ex . getCause ( ) . getClass ( ) ) ; <nl> + Assert . assertEquals ( " Invalid exception message " , <nl> + input . getAbsolutePath ( ) + " : 1 : 1 : unexpected token : classD " , <nl> + ex . getCause ( ) . toString ( ) ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java <nl> new file mode 100644 <nl> index 0000000 . . a235d18 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java <nl> @ @ - 0 , 0 + 1 @ @ <nl> + classD a { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / main / InputMainSuppressionsStringPrinter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / main / InputMainSuppressionsStringPrinter . java <nl> new file mode 100644 <nl> index 0000000 . . 2da6dff <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / main / InputMainSuppressionsStringPrinter . java <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + package com . puppycrawl . tools . checkstyle . main ; <nl> + <nl> + class InputMainSuppressionsStringPrinter { <nl> + 	 	 	 void call ( ) { } <nl> + <nl> + 	 	 	 public String getName ( ) { <nl> + 	 	 	 	 int var = 123 ; <nl> + 	 	 	 	 return " Checkstyle " ; <nl> + 	 	 	 } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java <nl> new file mode 100644 <nl> index 0000000 . . 0d08ac9 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . suppressionsstringprinter ; <nl> + <nl> + public class InputSuppressionsStringPrinter { <nl> + <nl> + 	 	 	 public String toString ( ) { <nl> + 	 	 	 	 return " HelloWorld " ; <nl> + 	 	 	 } <nl> + } <nl> diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm <nl> index b27487e . . 0648306 100644 <nl> - - - a / src / xdocs / cmdline . xml . vm <nl> + + + b / src / xdocs / cmdline . xml . vm <nl> @ @ - 38 , 6 + 38 , 7 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ <nl> com . puppycrawl . tools . checkstyle . Main \ <nl> - c & lt ; configurationFile & gt ; \ <nl> [ - f & lt ; format & gt ; ] [ - p & lt ; propertiesFile & gt ; ] [ - o & lt ; file & gt ; ] \ <nl> + [ - s & lt ; line : column & gt ; ] [ - tabWidth & lt ; length & gt ; ] \ <nl> [ - t | - - tree ] [ - T | - - treeWithComments ] [ - J | treeWithJavadoc ] [ - j | - - javadocTree ] [ - v ] \ <nl> file . . . <nl> < / source > <nl> @ @ - 74 , 20 + 75 , 30 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ <nl> to . <nl> < / li > <nl> < li > <nl> + < code > - s line : column < / code > - print xpath suppressions at the file ' s line and column <nl> + position . Line and column numbers are integer values separated by a : , specify <nl> + location in the file the suppression should be generated for . The option cannot be used <nl> + with other options and requires exactly one file to run on to be specified . <nl> + < / li > <nl> + < li > <nl> + < code > - tabWidth length < / code > - set the length of the tab character . Used only with <nl> + < code > - s < / code > option . Default value is 8 . <nl> + < / li > <nl> + < li > <nl> < code > - t , - - tree < / code > - print Abstract Syntax Tree ( AST ) of the checked file . The option <nl> cannot be used other options and requires exactly one file to run on to be specified . <nl> < / li > <nl> < li > <nl> < code > - T , - - treeWithComments < / code > - print Abstract Syntax Tree ( AST ) with comment nodes <nl> - of the checked file . The option cannot be used other options and requires exactly one <nl> - file to run on to be specified . <nl> + of the checked file . The option cannot be used with other options and requires exactly <nl> + one file to run on to be specified . <nl> < / li > <nl> < li > <nl> < code > - J , - - treeWithJavadoc < / code > - print Abstract Syntax Tree ( AST ) with Javadoc nodes <nl> and comment nodes of the checked file . Attention that line number and columns will not be <nl> the same as it is a file due to the fact that each javadoc comment is parsed separately <nl> - from java file . The option cannot be used other options and requires exactly one file to <nl> - run on to be specified . <nl> + from java file . The option cannot be used with other options and requires exactly one <nl> + file to run on to be specified . <nl> < / li > <nl> < li > <nl> < code > - j , - - javadocTree < / code > - print Parse Tree of the Javadoc comment .
NEAREST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index df6d345 . . f3e5af3 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 89 , 9 + 89 , 8 @ @ <nl> < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ " / > <nl> < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> <nl> - < ! - - Classes FileDrop , Main , ParseTreeInfoPanel from gui - package contain Magic Numbers . <nl> - The Check generates too many violations , fixing them will make code unmanageable . - - > <nl> - < suppress checks = " MagicNumber " files = " . * [ \ \ / ] checkstyle [ \ \ / ] gui [ \ \ / ] " / > <nl> + < ! - - The Check generates too many violations , fixing them will make code unmanageable . - - > <nl> + < suppress checks = " MagicNumber " files = " ( ParseTreeTableModel | MainFrame ) \ . java " / > <nl> <nl> < ! - - Methods that build fake AST are very long - - > <nl> < suppress checks = " MethodLength " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > <nl> @ @ - 122 , 7 + 121 , 7 @ @ <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | AbstractJavadocCheck ) \ . java " / > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest | BaseCheckTestSupport | XDocsPagesTest ) \ . java " / > <nl> < ! - - a lot of GUI elements is OK - - > <nl> - < suppress checks = " ClassDataAbstractionCoupling " files = " ParseTreeInfoPanel \ . java " / > <nl> + < suppress checks = " ClassDataAbstractionCoupling " files = " ( JTreeTable | MainFrame ) \ . java " / > <nl> <nl> < ! - - Should be fixed after moving https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / blob / master / sevntu - checks / src / main / java / com / github / sevntu / checkstyle / checks / coding / ReturnCountExtendedCheck . java into the main repo - - > <nl> < suppress checks = " ReturnCount " files = " ( ClassResolver | ConfigurationLoader | IndentationCheckTest ) \ . java " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java <nl> new file mode 100644 <nl> index 0000000 . . a85c003 <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java <nl> @ @ - 0 , 0 + 1 , 113 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . gui ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + <nl> + import antlr . ANTLRException ; <nl> + <nl> + import com . google . common . collect . ImmutableList ; <nl> + import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> + import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> + <nl> + / * * <nl> + * Model for checkstyle frame . <nl> + * @ author Vladislav Lisetskiy <nl> + * / <nl> + public class CheckstyleFrameModel { <nl> + <nl> + / * * Lines to position map . * / <nl> + private final List < Integer > linesToPosition = new ArrayList < > ( ) ; <nl> + <nl> + / * * The file which is being parsed . * / <nl> + private File currentFile ; <nl> + <nl> + / * * <nl> + * Parse a file and return the parse tree . <nl> + * @ param file the file to parse . <nl> + * @ return the root node of the parse tree . <nl> + * @ throws IOException if the file could not be read . <nl> + * @ throws ANTLRException if the file is not a Java source . <nl> + * / <nl> + public DetailAST parseFile ( File file ) throws IOException , ANTLRException { <nl> + currentFile = file ; <nl> + final FileText text = getFileText ( file ) ; <nl> + final FileContents contents = new FileContents ( text ) ; <nl> + return TreeWalker . parse ( contents ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get FileText from a file . <nl> + * @ param file the file to get the FileText from . <nl> + * @ return the FileText . <nl> + * @ throws IOException if the file could not be read . <nl> + * / <nl> + public FileText getFileText ( File file ) throws IOException { <nl> + return new FileText ( file . getAbsoluteFile ( ) , <nl> + System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get the directory of the last loaded file . <nl> + * @ return directory of the last loaded file . <nl> + * / <nl> + public File getLastDirectory ( ) { <nl> + File lastDirectory = null ; <nl> + if ( currentFile ! = null ) { <nl> + lastDirectory = new File ( currentFile . getParent ( ) ) ; <nl> + } <nl> + return lastDirectory ; <nl> + } <nl> + <nl> + / * * <nl> + * Get current file . <nl> + * @ return current file . <nl> + * / <nl> + public File getCurrentFile ( ) { <nl> + return currentFile ; <nl> + } <nl> + <nl> + / * * <nl> + * Get lines to position map . <nl> + * @ return lines to position map . <nl> + * / <nl> + public List < Integer > getLinesToPosition ( ) { <nl> + return ImmutableList . copyOf ( linesToPosition ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Add a new value into lines to position map . <nl> + * @ param value Value to be added into position map . <nl> + * / <nl> + public void addLineToPosition ( int value ) { <nl> + linesToPosition . add ( value ) ; <nl> + } <nl> + <nl> + / * * Clear lines to position map . * / <nl> + public void clearLinesToPosition ( ) { <nl> + linesToPosition . clear ( ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> index 7d3d042 . . 6608278 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java <nl> @ @ - 72 , 7 + 72 , 6 @ @ public class CodeSelector { <nl> editor . requestFocusInWindow ( ) ; <nl> editor . setCaretPosition ( start ) ; <nl> editor . moveCaretPosition ( end ) ; <nl> - editor . transferFocusBackward ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> index b6a62c7 . . 74d7263 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import java . awt . Component ; <nl> import java . awt . Dimension ; <nl> import java . awt . FontMetrics ; <nl> import java . awt . event . ActionEvent ; <nl> + import java . awt . event . MouseAdapter ; <nl> import java . awt . event . MouseEvent ; <nl> import java . util . EventObject ; <nl> import java . util . List ; <nl> @ @ - 103 , 25 + 104 , 50 @ @ public class JTreeTable extends JTable { <nl> final Action expand = new AbstractAction ( ) { <nl> private static final long serialVersionUID = - 5859674518660156121L ; <nl> <nl> - @ Override <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - final TreePath selected = tree . getSelectionPath ( ) ; <nl> - final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; <nl> - new CodeSelector ( ast , editor , linePositionMap ) . select ( ) ; <nl> - <nl> - if ( tree . isExpanded ( selected ) ) { <nl> - tree . collapsePath ( selected ) ; <nl> - } <nl> - else { <nl> - tree . expandPath ( selected ) ; <nl> - } <nl> - tree . setSelectionPath ( selected ) ; <nl> - } <nl> - } ; <nl> + @ Override <nl> + public void actionPerformed ( ActionEvent event ) { <nl> + doExpandByEnter ( ) ; <nl> + } <nl> + } ; <nl> final KeyStroke stroke = KeyStroke . getKeyStroke ( " ENTER " ) ; <nl> final String command = " expand / collapse " ; <nl> getInputMap ( ) . put ( stroke , command ) ; <nl> getActionMap ( ) . put ( command , expand ) ; <nl> + <nl> + addMouseListener ( new MouseAdapter ( ) { <nl> + @ Override <nl> + public void mouseClicked ( MouseEvent event ) { <nl> + if ( event . getClickCount ( ) = = 2 ) { <nl> + makeCodeSelection ( ) ; <nl> + } <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Do expansion of a tree node after pressing ENTER . <nl> + * / <nl> + private void doExpandByEnter ( ) { <nl> + final TreePath selected = makeCodeSelection ( ) ; <nl> + <nl> + if ( tree . isExpanded ( selected ) ) { <nl> + tree . collapsePath ( selected ) ; <nl> + } <nl> + else { <nl> + tree . expandPath ( selected ) ; <nl> + } <nl> + tree . setSelectionPath ( selected ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Make selection of code in a text area . <nl> + * @ return selected TreePath . <nl> + * / <nl> + private TreePath makeCodeSelection ( ) { <nl> + final TreePath selected = tree . getSelectionPath ( ) ; <nl> + final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; <nl> + new CodeSelector ( ast , editor , linePositionMap ) . select ( ) ; <nl> + return selected ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> index 7aa2ffd . . ebe29af 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> @ @ - 19 , 14 + 19 , 11 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . gui ; <nl> <nl> - import java . awt . EventQueue ; <nl> import java . io . File ; <nl> <nl> - import javax . swing . JFrame ; <nl> + import javax . swing . SwingUtilities ; <nl> import javax . swing . WindowConstants ; <nl> <nl> - import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - <nl> / * * <nl> * Entry point for starting the checkstyle GUI . <nl> * <nl> @ @ - 34 , 12 + 31 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> * / <nl> public final class Main { <nl> <nl> - / * * Frame ' s name . * / <nl> - private static final String FRAME _ NAME = " CheckStyle " ; <nl> - <nl> - / * * Main frame . * / <nl> - private static JFrame frame ; <nl> - <nl> / * * Hidden constructor of the current utility class . * / <nl> private Main ( ) { <nl> / / no code <nl> @ @ - 49 , 64 + 40 , 20 @ @ public final class Main { <nl> * Entry point . <nl> * @ param args the command line arguments . <nl> * / <nl> - public static void main ( String . . . args ) { <nl> - frame = new JFrame ( FRAME _ NAME ) ; <nl> - final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; <nl> - frame . getContentPane ( ) . add ( panel ) ; <nl> - if ( args . length > = 1 ) { <nl> - final File file = new File ( args [ 0 ] ) ; <nl> - panel . openFile ( file , frame ) ; <nl> - } <nl> - frame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; <nl> - <nl> - final Runnable runner = new FrameShower ( frame ) ; <nl> - EventQueue . invokeLater ( runner ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Method is used for testing in the past . <nl> - * @ param ast tree to display <nl> - * / <nl> - public static void displayAst ( DetailAST ast ) { <nl> - final JFrame testFrame = new JFrame ( FRAME _ NAME ) ; <nl> - final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; <nl> - testFrame . getContentPane ( ) . add ( panel ) ; <nl> - panel . openAst ( ast ) ; <nl> - testFrame . setSize ( 1500 , 800 ) ; <nl> - testFrame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; <nl> - testFrame . setVisible ( true ) ; <nl> - } <nl> - <nl> - / * * <nl> - * @ return Main GUI ' s frame . <nl> - * / <nl> - static JFrame getFrame ( ) { <nl> - return frame ; <nl> - } <nl> - <nl> - / * * <nl> - * Http : / / findbugs . sourceforge . net / bugDescriptions . html # SW _ SWING _ METHODS _ INVOKED _ IN _ SWING _ THREAD <nl> - * / <nl> - private static class FrameShower implements Runnable { <nl> - / * * <nl> - * Frame . <nl> - * / <nl> - private final JFrame frame ; <nl> - <nl> - / * * <nl> - * @ param frame JFrame component . <nl> - * / <nl> - FrameShower ( JFrame frame ) { <nl> - this . frame = frame ; <nl> - } <nl> - <nl> - / * * <nl> - * Display a frame . <nl> - * / <nl> - @ Override <nl> - public void run ( ) { <nl> - frame . pack ( ) ; <nl> - frame . setVisible ( true ) ; <nl> - } <nl> + public static void main ( final String . . . args ) { <nl> + SwingUtilities . invokeLater ( new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) { <nl> + final MainFrame mainFrame = new MainFrame ( ) ; <nl> + <nl> + if ( args . length > 0 ) { <nl> + final File sourceFile = new File ( args [ 0 ] ) ; <nl> + mainFrame . openFile ( sourceFile ) ; <nl> + } <nl> + mainFrame . setTitle ( " Checkstyle " ) ; <nl> + mainFrame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; <nl> + mainFrame . setVisible ( true ) ; <nl> + } <nl> + } ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java <nl> new file mode 100644 <nl> index 0000000 . . fc8e67e <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java <nl> @ @ - 0 , 0 + 1 , 199 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . gui ; <nl> + <nl> + import java . awt . BorderLayout ; <nl> + import java . awt . GridLayout ; <nl> + import java . awt . event . ActionEvent ; <nl> + import java . awt . event . KeyEvent ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + <nl> + import javax . swing . AbstractAction ; <nl> + import javax . swing . JButton ; <nl> + import javax . swing . JFileChooser ; <nl> + import javax . swing . JFrame ; <nl> + import javax . swing . JOptionPane ; <nl> + import javax . swing . JPanel ; <nl> + import javax . swing . JScrollPane ; <nl> + import javax . swing . JSplitPane ; <nl> + import javax . swing . JTextArea ; <nl> + import javax . swing . filechooser . FileFilter ; <nl> + <nl> + import antlr . ANTLRException ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + <nl> + / * * <nl> + * Displays information about a parse tree . <nl> + * The user can change the file that is parsed and displayed <nl> + * using a JFileChooser . <nl> + * <nl> + * @ author Lars K ü hne <nl> + * @ author Vladislav Lisetskiy <nl> + * / <nl> + public class MainFrame extends JFrame { <nl> + <nl> + private static final long serialVersionUID = 7970053543351871890L ; <nl> + / * * Checkstyle frame model . * / <nl> + private final transient CheckstyleFrameModel model = new CheckstyleFrameModel ( ) ; <nl> + / * * Reload action . * / <nl> + private final ReloadAction reloadAction = new ReloadAction ( ) ; <nl> + / * * Parse tree model . * / <nl> + private transient ParseTreeTableModel parseTreeTableModel ; <nl> + / * * Code text area . * / <nl> + private JTextArea textArea ; <nl> + / * * Tree table . * / <nl> + private JTreeTable treeTable ; <nl> + <nl> + / * * Create a new MainFrame . * / <nl> + public MainFrame ( ) { <nl> + createContent ( ) ; <nl> + } <nl> + <nl> + / * * Create content of this MainFrame . * / <nl> + private void createContent ( ) { <nl> + setLayout ( new BorderLayout ( ) ) ; <nl> + <nl> + textArea = new JTextArea ( 20 , 15 ) ; <nl> + textArea . setEditable ( false ) ; <nl> + final JScrollPane textAreaScrollPane = new JScrollPane ( textArea ) ; <nl> + <nl> + parseTreeTableModel = new ParseTreeTableModel ( null ) ; <nl> + treeTable = new JTreeTable ( parseTreeTableModel ) ; <nl> + treeTable . setEditor ( textArea ) ; <nl> + treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; <nl> + final JScrollPane treeTableScrollPane = new JScrollPane ( treeTable ) ; <nl> + <nl> + final JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL _ SPLIT , treeTableScrollPane , <nl> + textAreaScrollPane ) ; <nl> + add ( splitPane , BorderLayout . CENTER ) ; <nl> + splitPane . setResizeWeight ( 0 . 7 ) ; <nl> + <nl> + add ( createButtonsPanel ( ) , BorderLayout . PAGE _ END ) ; <nl> + <nl> + pack ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Create buttons panel . <nl> + * @ return buttons panel . <nl> + * / <nl> + private JPanel createButtonsPanel ( ) { <nl> + final JButton openFileButton = new JButton ( new FileSelectionAction ( ) ) ; <nl> + openFileButton . setMnemonic ( KeyEvent . VK _ S ) ; <nl> + openFileButton . setText ( " Open File " ) ; <nl> + <nl> + reloadAction . setEnabled ( false ) ; <nl> + final JButton reloadFileButton = new JButton ( reloadAction ) ; <nl> + reloadFileButton . setMnemonic ( KeyEvent . VK _ R ) ; <nl> + reloadFileButton . setText ( " Reload File " ) ; <nl> + <nl> + final JPanel buttonPanel = new JPanel ( ) ; <nl> + buttonPanel . setLayout ( new GridLayout ( 1 , 2 ) ) ; <nl> + buttonPanel . add ( openFileButton ) ; <nl> + buttonPanel . add ( reloadFileButton ) ; <nl> + <nl> + return buttonPanel ; <nl> + } <nl> + <nl> + / * * <nl> + * Open file and load it . <nl> + * @ param sourceFile the file to open . <nl> + * / <nl> + public void openFile ( File sourceFile ) { <nl> + if ( sourceFile ! = null ) { <nl> + try { <nl> + setTitle ( " Checkstyle : " + sourceFile . getName ( ) ) ; <nl> + final DetailAST parseTree = model . parseFile ( sourceFile ) ; <nl> + parseTreeTableModel . setParseTree ( parseTree ) ; <nl> + reloadAction . setEnabled ( true ) ; <nl> + <nl> + final String [ ] sourceLines = model . getFileText ( sourceFile ) . toLinesArray ( ) ; <nl> + <nl> + / / clear for each new file <nl> + model . clearLinesToPosition ( ) ; <nl> + / / starts line counting at 1 <nl> + model . addLineToPosition ( 0 ) ; <nl> + <nl> + / / clean the text area before inserting the lines of the new file <nl> + textArea . setText ( " " ) ; <nl> + <nl> + / / insert the contents of the file to the text area <nl> + for ( final String element : sourceLines ) { <nl> + model . addLineToPosition ( textArea . getText ( ) . length ( ) ) ; <nl> + textArea . append ( element + System . lineSeparator ( ) ) ; <nl> + } <nl> + <nl> + treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; <nl> + } <nl> + catch ( final IOException | ANTLRException ex ) { <nl> + JOptionPane . showMessageDialog ( this , <nl> + " Could not parse " + sourceFile + " : " + ex . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Handler for file selection action events . <nl> + * / <nl> + private class FileSelectionAction extends AbstractAction { <nl> + private static final long serialVersionUID = 1762396148873280589L ; <nl> + <nl> + @ Override <nl> + public void actionPerformed ( ActionEvent event ) { <nl> + final JFileChooser fileChooser = new JFileChooser ( model . getLastDirectory ( ) ) ; <nl> + final FileFilter filter = new JavaFileFilter ( ) ; <nl> + fileChooser . setFileFilter ( filter ) ; <nl> + <nl> + final int returnCode = fileChooser . showOpenDialog ( MainFrame . this ) ; <nl> + if ( returnCode = = JFileChooser . APPROVE _ OPTION ) { <nl> + final File file = fileChooser . getSelectedFile ( ) ; <nl> + openFile ( file ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Handler for reload action events . <nl> + * / <nl> + private class ReloadAction extends AbstractAction { <nl> + private static final long serialVersionUID = - 890320994114628011L ; <nl> + <nl> + @ Override <nl> + public void actionPerformed ( ActionEvent event ) { <nl> + openFile ( model . getCurrentFile ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Filter for Java files . <nl> + * / <nl> + private static class JavaFileFilter extends FileFilter { <nl> + @ Override <nl> + public boolean accept ( File file ) { <nl> + return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getDescription ( ) { <nl> + return " Java Source File " ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> deleted file mode 100644 <nl> index bd0df08 . . 0000000 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> + + + / dev / null <nl> @ @ - 1 , 321 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> - / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> - / / <nl> - / / This library is free software ; you can redistribute it and / or <nl> - / / modify it under the terms of the GNU Lesser General Public <nl> - / / License as published by the Free Software Foundation ; either <nl> - / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> - / / <nl> - / / This library is distributed in the hope that it will be useful , <nl> - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - / / Lesser General Public License for more details . <nl> - / / <nl> - / / You should have received a copy of the GNU Lesser General Public <nl> - / / License along with this library ; if not , write to the Free Software <nl> - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . gui ; <nl> - <nl> - import java . awt . BorderLayout ; <nl> - import java . awt . Component ; <nl> - import java . awt . GridLayout ; <nl> - import java . awt . event . ActionEvent ; <nl> - import java . awt . event . KeyEvent ; <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - <nl> - import javax . swing . AbstractAction ; <nl> - import javax . swing . Action ; <nl> - import javax . swing . JButton ; <nl> - import javax . swing . JFileChooser ; <nl> - import javax . swing . JOptionPane ; <nl> - import javax . swing . JPanel ; <nl> - import javax . swing . JScrollPane ; <nl> - import javax . swing . JSplitPane ; <nl> - import javax . swing . JTextArea ; <nl> - import javax . swing . SwingUtilities ; <nl> - import javax . swing . filechooser . FileFilter ; <nl> - <nl> - import antlr . ANTLRException ; <nl> - <nl> - import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> - import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> - import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> - import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> - <nl> - / * * <nl> - * Displays information about a parse tree . <nl> - * The user can change the file that is parsed and displayed <nl> - * through a JFileChooser . <nl> - * <nl> - * @ author Lars K ü hne <nl> - * / <nl> - public class ParseTreeInfoPanel extends JPanel { <nl> - private static final long serialVersionUID = - 4243405131202059043L ; <nl> - <nl> - / * * Parse tree model . * / <nl> - private final transient ParseTreeTableModel parseTreeTableModel ; <nl> - / * * JTextArea component . * / <nl> - private final JTextArea textArea ; <nl> - / * * Reload action . * / <nl> - private final ReloadAction reloadAction ; <nl> - / * * Lines to position map . * / <nl> - private final List < Integer > linesToPosition = new ArrayList < > ( ) ; <nl> - / * * Tree table . * / <nl> - private final JTreeTable treeTable ; <nl> - / * * Last directory . * / <nl> - private File lastDirectory ; <nl> - / * * Current file . * / <nl> - private File currentFile ; <nl> - <nl> - / * * <nl> - * Create a new ParseTreeInfoPanel instance . <nl> - * / <nl> - public ParseTreeInfoPanel ( ) { <nl> - setLayout ( new BorderLayout ( ) ) ; <nl> - <nl> - parseTreeTableModel = new ParseTreeTableModel ( null ) ; <nl> - treeTable = new JTreeTable ( parseTreeTableModel ) ; <nl> - final JScrollPane scrollPane = new JScrollPane ( treeTable ) ; <nl> - <nl> - final JButton fileSelectionButton = <nl> - new JButton ( new FileSelectionAction ( ) ) ; <nl> - <nl> - reloadAction = new ReloadAction ( ) ; <nl> - reloadAction . setEnabled ( false ) ; <nl> - final JButton reloadButton = new JButton ( reloadAction ) ; <nl> - <nl> - textArea = new JTextArea ( 20 , 15 ) ; <nl> - textArea . setEditable ( false ) ; <nl> - treeTable . setEditor ( textArea ) ; <nl> - treeTable . setLinePositionMap ( linesToPosition ) ; <nl> - <nl> - final JScrollPane sp2 = new JScrollPane ( textArea ) ; <nl> - <nl> - final JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL _ SPLIT , <nl> - scrollPane , sp2 ) ; <nl> - add ( splitPane , BorderLayout . CENTER ) ; <nl> - splitPane . setResizeWeight ( 0 . 7 ) ; <nl> - <nl> - final JPanel pane = new JPanel ( new GridLayout ( 1 , 2 ) ) ; <nl> - add ( pane , BorderLayout . PAGE _ END ) ; <nl> - pane . add ( fileSelectionButton ) ; <nl> - pane . add ( reloadButton ) ; <nl> - <nl> - } <nl> - <nl> - / * * <nl> - * Opens the input parse tree ast . <nl> - * @ param parseTree DetailAST tree . <nl> - * / <nl> - public void openAst ( DetailAST parseTree ) { <nl> - parseTreeTableModel . setParseTree ( parseTree ) ; <nl> - reloadAction . setEnabled ( true ) ; <nl> - <nl> - / / clear for each new file <nl> - clearLinesToPosition ( ) ; <nl> - / / starts line counting at 1 <nl> - addLineToPosition ( 0 ) ; <nl> - / / insert the contents of the file to the text area <nl> - <nl> - / / clean the text area before inserting the lines of the new file <nl> - if ( ! textArea . getText ( ) . isEmpty ( ) ) { <nl> - textArea . replaceRange ( " " , 0 , textArea . getText ( ) . length ( ) ) ; <nl> - } <nl> - <nl> - / / move back to the top of the file <nl> - textArea . moveCaretPosition ( 0 ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Opens file and loads it into text area . <nl> - * @ param file File to open . <nl> - * @ param parent Component for displaying errors if file can ' t be open . <nl> - * / <nl> - public void openFile ( File file , final Component parent ) { <nl> - if ( file ! = null ) { <nl> - try { <nl> - Main . getFrame ( ) . setTitle ( " Checkstyle : " + file . getName ( ) ) ; <nl> - final FileText text = new FileText ( file . getAbsoluteFile ( ) , <nl> - getEncoding ( ) ) ; <nl> - final DetailAST parseTree = parseFile ( text ) ; <nl> - parseTreeTableModel . setParseTree ( parseTree ) ; <nl> - currentFile = file ; <nl> - lastDirectory = file . getParentFile ( ) ; <nl> - reloadAction . setEnabled ( true ) ; <nl> - <nl> - final String [ ] sourceLines = text . toLinesArray ( ) ; <nl> - <nl> - / / clear for each new file <nl> - clearLinesToPosition ( ) ; <nl> - / / starts line counting at 1 <nl> - addLineToPosition ( 0 ) ; <nl> - <nl> - / / clean the text area before inserting the lines of the new file <nl> - if ( ! textArea . getText ( ) . isEmpty ( ) ) { <nl> - textArea . replaceRange ( " " , 0 , textArea . getText ( ) <nl> - . length ( ) ) ; <nl> - } <nl> - <nl> - / / insert the contents of the file to the text area <nl> - for ( final String element : sourceLines ) { <nl> - addLineToPosition ( textArea . getText ( ) . length ( ) ) ; <nl> - textArea . append ( element + System . lineSeparator ( ) ) ; <nl> - } <nl> - <nl> - / / move back to the top of the file <nl> - textArea . moveCaretPosition ( 0 ) ; <nl> - treeTable . setLinePositionMap ( linesToPosition ) ; <nl> - } <nl> - catch ( final IOException | ANTLRException ex ) { <nl> - showErrorDialog ( <nl> - parent , <nl> - " Could not parse " + file + " : " + ex . getMessage ( ) ) ; <nl> - } <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Parses a file and returns the parse tree . <nl> - * @ param text the file to parse <nl> - * @ return the root node of the parse tree <nl> - * @ throws ANTLRException if the file is not a Java source <nl> - * / <nl> - private static DetailAST parseFile ( FileText text ) <nl> - throws ANTLRException { <nl> - final FileContents contents = new FileContents ( text ) ; <nl> - return TreeWalker . parse ( contents ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Returns the configured file encoding . <nl> - * This can be set using the { @ code file . encoding } system property . <nl> - * It defaults to UTF - 8 . <nl> - * @ return the configured file encoding <nl> - * / <nl> - private static String getEncoding ( ) { <nl> - return System . getProperty ( " file . encoding " , " UTF - 8 " ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Opens dialog with error . <nl> - * @ param parent Component for displaying errors . <nl> - * @ param msg Error message to display . <nl> - * / <nl> - private static void showErrorDialog ( final Component parent , final String msg ) { <nl> - final Runnable showError = new FrameShower ( parent , msg ) ; <nl> - SwingUtilities . invokeLater ( showError ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Adds a new value into lines to position map . <nl> - * @ param value Value to be added into position map . <nl> - * / <nl> - private void addLineToPosition ( int value ) { <nl> - linesToPosition . add ( value ) ; <nl> - } <nl> - <nl> - / * * Clears lines to position map . * / <nl> - private void clearLinesToPosition ( ) { <nl> - linesToPosition . clear ( ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Http : / / findbugs . sourceforge . net / bugDescriptions . html # SW _ SWING _ METHODS _ INVOKED _ IN _ SWING _ THREAD <nl> - * / <nl> - private static class FrameShower implements Runnable { <nl> - / * * <nl> - * Frame . <nl> - * / <nl> - private final Component parent ; <nl> - <nl> - / * * <nl> - * Frame . <nl> - * / <nl> - private final String msg ; <nl> - <nl> - / * * <nl> - * @ param parent Frame ' s component . <nl> - * @ param msg Message to show . <nl> - * / <nl> - FrameShower ( Component parent , final String msg ) { <nl> - this . parent = parent ; <nl> - this . msg = msg ; <nl> - } <nl> - <nl> - / * * <nl> - * Display a frame . <nl> - * / <nl> - @ Override <nl> - public void run ( ) { <nl> - JOptionPane . showMessageDialog ( parent , msg ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Filter for Java files . <nl> - * / <nl> - private static class JavaFileFilter extends FileFilter { <nl> - @ Override <nl> - public boolean accept ( File file ) { <nl> - return file ! = null & & ( file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public String getDescription ( ) { <nl> - return " Java Source Code " ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Handler for file selection action events . <nl> - * / <nl> - private class FileSelectionAction extends AbstractAction { <nl> - private static final long serialVersionUID = - 1926935338069418119L ; <nl> - <nl> - / * * Default constructor to setup current action . * / <nl> - FileSelectionAction ( ) { <nl> - super ( " Select Java File " ) ; <nl> - putValue ( Action . MNEMONIC _ KEY , KeyEvent . VK _ S ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - final JFileChooser chooser = new JFileChooser ( lastDirectory ) ; <nl> - final FileFilter filter = new JavaFileFilter ( ) ; <nl> - chooser . setFileFilter ( filter ) ; <nl> - final Component parent = <nl> - SwingUtilities . getRoot ( ParseTreeInfoPanel . this ) ; <nl> - chooser . showDialog ( parent , " Open " ) ; <nl> - final File file = chooser . getSelectedFile ( ) ; <nl> - openFile ( file , parent ) ; <nl> - <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Handler for reload action events . <nl> - * / <nl> - private class ReloadAction extends AbstractAction { <nl> - private static final long serialVersionUID = - 1021880396046355863L ; <nl> - <nl> - / * * Default constructor to setup current action . * / <nl> - ReloadAction ( ) { <nl> - super ( " Reload Java File " ) ; <nl> - putValue ( Action . MNEMONIC _ KEY , KeyEvent . VK _ R ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - final Component parent = <nl> - SwingUtilities . getRoot ( ParseTreeInfoPanel . this ) ; <nl> - openFile ( currentFile , parent ) ; <nl> - } <nl> - } <nl> - <nl> - }

TEST DIFF:
diff - - git a / config / import - control . xml b / config / import - control . xml 
 index df9d9f3 . . 7942497 100644 
 - - - a / config / import - control . xml 
 + + + b / config / import - control . xml 
 @ @ - 50 , 6 + 50 , 7 @ @ 
 < allow class = " java . lang . annotation . Retention " local - only = " true " / > 
 < allow class = " java . lang . annotation . RetentionPolicy " local - only = " true " / > 
 < allow class = " java . lang . annotation . Target " local - only = " true " / > 
 + < allow class = " com . puppycrawl . tools . checkstyle . xpath . XpathQueryGenerator " local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . FileStatefulCheck " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . StatelessCheck " / > 
 
 diff - - git a / pom . xml b / pom . xml 
 index 9094025 . . 92f2f77 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 2326 , 11 + 2326 , 13 @ @ 
 < param > com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser < / param > 
 < param > com . puppycrawl . tools . checkstyle . DetailNodeTreeStringPrinter < / param > 
 < param > com . puppycrawl . tools . checkstyle . AstTreeStringPrinter < / param > 
 + < param > com . puppycrawl . tools . checkstyle . SuppressionsStringPrinter < / param > 
 < param > com . puppycrawl . tools . checkstyle . TreeWalker < / param > 
 < / targetClasses > 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . DetailNodeTreeStringPrinterTest < / param > 
 < param > com . puppycrawl . tools . checkstyle . AstTreeStringPrinterTest < / param > 
 + < param > com . puppycrawl . tools . checkstyle . SuppressionsStringPrinterTest < / param > 
 < param > com . puppycrawl . tools . checkstyle . TreeWalkerTest < / param > 
 < param > com . puppycrawl . tools . checkstyle . checks . coding . PackageDeclarationCheckTest < / param > 
 < param > com . puppycrawl . tools . checkstyle . checks . imports . ImportControlCheckTest < / param > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index 9ce6a01 . . a91a1b6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 100 , 12 + 100 , 18 @ @ public final class Main { 
 / * * Name for the option ' o ' . * / 
 private static final String OPTION _ O _ NAME = " o " ; 
 
 + / * * Name for the option ' s ' . * / 
 + private static final String OPTION _ S _ NAME = " s " ; 
 + 
 / * * Name for the option ' t ' . * / 
 private static final String OPTION _ T _ NAME = " t " ; 
 
 / * * Name for the option ' - - tree ' . * / 
 private static final String OPTION _ TREE _ NAME = " tree " ; 
 
 + / * * Name for the option ' tabWidth ' . * / 
 + private static final String OPTION _ TAB _ WIDTH _ NAME = " tabWidth " ; 
 + 
 / * * Name for the option ' - T ' . * / 
 private static final String OPTION _ CAPITAL _ T _ NAME = " T " ; 
 
 @ @ - 167 , 6 + 173 , 9 @ @ public final class Main { 
 / * * A string value of 1 . * / 
 private static final String ONE _ STRING _ VALUE = " 1 " ; 
 
 + / * * Default distance between tab stops . * / 
 + private static final String DEFAULT _ TAB _ WIDTH = " 8 " ; 
 + 
 / * * Don ' t create instance of this class , use { @ link # main ( String [ ] ) } method instead . * / 
 private Main ( ) { 
 } 
 @ @ - 298 , 14 + 307 , 24 @ @ public final class Main { 
 / / ensure there is no conflicting options 
 else if ( cmdLine . hasOption ( OPTION _ T _ NAME ) | | cmdLine . hasOption ( OPTION _ CAPITAL _ T _ NAME ) 
 | | cmdLine . hasOption ( OPTION _ J _ NAME ) | | cmdLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { 
 - if ( cmdLine . hasOption ( OPTION _ C _ NAME ) | | cmdLine . hasOption ( OPTION _ P _ NAME ) 
 - | | cmdLine . hasOption ( OPTION _ F _ NAME ) | | cmdLine . hasOption ( OPTION _ O _ NAME ) ) { 
 + if ( cmdLine . hasOption ( OPTION _ S _ NAME ) | | cmdLine . hasOption ( OPTION _ C _ NAME ) 
 + | | cmdLine . hasOption ( OPTION _ P _ NAME ) | | cmdLine . hasOption ( OPTION _ F _ NAME ) 
 + | | cmdLine . hasOption ( OPTION _ O _ NAME ) ) { 
 result . add ( " Option ' - t ' cannot be used with other options . " ) ; 
 } 
 else if ( filesToProcess . size ( ) > 1 ) { 
 result . add ( " Printing AST is allowed for only one file . " ) ; 
 } 
 } 
 + else if ( cmdLine . hasOption ( OPTION _ S _ NAME ) ) { 
 + if ( cmdLine . hasOption ( OPTION _ C _ NAME ) | | cmdLine . hasOption ( OPTION _ P _ NAME ) 
 + | | cmdLine . hasOption ( OPTION _ F _ NAME ) | | cmdLine . hasOption ( OPTION _ O _ NAME ) ) { 
 + result . add ( " Option ' - s ' cannot be used with other options . " ) ; 
 + } 
 + else if ( filesToProcess . size ( ) > 1 ) { 
 + result . add ( " Printing xpath suppressions is allowed for only one file . " ) ; 
 + } 
 + } 
 / / ensure a configuration file is specified 
 else if ( cmdLine . hasOption ( OPTION _ C _ NAME ) ) { 
 final String configLocation = cmdLine . getOptionValue ( OPTION _ C _ NAME ) ; 
 @ @ - 412 , 6 + 431 , 15 @ @ public final class Main { 
 final String stringAst = AstTreeStringPrinter . printJavaAndJavadocTree ( file ) ; 
 System . out . print ( stringAst ) ; 
 } 
 + else if ( commandLine . hasOption ( OPTION _ S _ NAME ) ) { 
 + final File file = config . files . get ( 0 ) ; 
 + final String suppressionLineColumnNumber = config . suppressionLineColumnNumber ; 
 + final int tabWidth = config . tabWidth ; 
 + final String stringSuppressions = 
 + SuppressionsStringPrinter . printSuppressions ( file , 
 + suppressionLineColumnNumber , tabWidth ) ; 
 + System . out . print ( stringSuppressions ) ; 
 + } 
 else { 
 if ( commandLine . hasOption ( OPTION _ D _ NAME ) ) { 
 final Logger parentLogger = Logger . getLogger ( Main . class . getName ( ) ) . getParent ( ) ; 
 @ @ - 456 , 6 + 484 , 7 @ @ public final class Main { 
 conf . outputLocation = cmdLine . getOptionValue ( OPTION _ O _ NAME ) ; 
 conf . configLocation = cmdLine . getOptionValue ( OPTION _ C _ NAME ) ; 
 conf . propertiesLocation = cmdLine . getOptionValue ( OPTION _ P _ NAME ) ; 
 + conf . suppressionLineColumnNumber = cmdLine . getOptionValue ( OPTION _ S _ NAME ) ; 
 conf . files = filesToProcess ; 
 conf . executeIgnoredModules = cmdLine . hasOption ( OPTION _ EXECUTE _ IGNORED _ MODULES _ NAME ) ; 
 final String checkerThreadsNumber = cmdLine . getOptionValue ( 
 @ @ - 464 , 6 + 493 , 9 @ @ public final class Main { 
 final String treeWalkerThreadsNumber = cmdLine . getOptionValue ( 
 OPTION _ CAPITAL _ W _ NAME , ONE _ STRING _ VALUE ) ; 
 conf . treeWalkerThreadsNumber = Integer . parseInt ( treeWalkerThreadsNumber ) ; 
 + final String tabWidth = 
 + cmdLine . getOptionValue ( OPTION _ TAB _ WIDTH _ NAME , DEFAULT _ TAB _ WIDTH ) ; 
 + conf . tabWidth = Integer . parseInt ( tabWidth ) ; 
 return conf ; 
 } 
 
 @ @ - 708 , 6 + 740 , 14 @ @ public final class Main { 
 options . addOption ( OPTION _ C _ NAME , true , " Sets the check configuration file to use . " ) ; 
 options . addOption ( OPTION _ O _ NAME , true , " Sets the output file . Defaults to stdout " ) ; 
 options . addOption ( OPTION _ P _ NAME , true , " Loads the properties file " ) ; 
 + options . addOption ( OPTION _ S _ NAME , true , 
 + " Print xpath suppressions at the file ' s line and column position . " 
 + + " Argument is the line and column number ( separated by a : ) in the file " 
 + + " that the suppression should be generated for " ) ; 
 + options . addOption ( OPTION _ TAB _ WIDTH _ NAME , true , 
 + String . format ( " Sets the length of the tab character . Used only with \ " - s \ " option . " 
 + + " Default value is % s " , 
 + DEFAULT _ TAB _ WIDTH ) ) ; 
 options . addOption ( OPTION _ F _ NAME , true , String . format ( 
 " Sets the output format . ( % s | % s ) . Defaults to % s " , 
 PLAIN _ FORMAT _ NAME , XML _ FORMAT _ NAME , PLAIN _ FORMAT _ NAME ) ) ; 
 @ @ - 754 , 6 + 794 , 10 @ @ public final class Main { 
 private int checkerThreadsNumber ; 
 / * * The tree walker threads number . * / 
 private int treeWalkerThreadsNumber ; 
 + / * * LineNo and columnNo for the suppression . * / 
 + private String suppressionLineColumnNumber ; 
 + / * * Tab character length . * / 
 + private int tabWidth ; 
 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinter . java 
 new file mode 100644 
 index 0000000 . . 258c2d6 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinter . java 
 @ @ - 0 , 0 + 1 , 103 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2018 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + import java . nio . charset . StandardCharsets ; 
 + import java . util . List ; 
 + import java . util . Locale ; 
 + import java . util . regex . Matcher ; 
 + import java . util . regex . Pattern ; 
 + import java . util . stream . Collectors ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + import com . puppycrawl . tools . checkstyle . api . FileText ; 
 + import com . puppycrawl . tools . checkstyle . xpath . XpathQueryGenerator ; 
 + 
 + / * * 
 + * Class for constructing xpath queries to suppress nodes 
 + * with specified line and column number . 
 + * @ author Timur Tibeyev . 
 + * / 
 + public final class SuppressionsStringPrinter { 
 + 
 + / * * Line and column number config value pattern . * / 
 + private static final Pattern VALID _ SUPPRESSION _ LINE _ COLUMN _ NUMBER _ REGEX = 
 + Pattern . compile ( " ^ ( [ 0 - 9 ] + ) : ( [ 0 - 9 ] + ) $ " ) ; 
 + 
 + / * * OS specific line separator . * / 
 + private static final String LINE _ SEPARATOR = System . getProperty ( " line . separator " ) ; 
 + 
 + / * * Prevent instances . * / 
 + private SuppressionsStringPrinter ( ) { 
 + / / no code 
 + } 
 + 
 + / * * 
 + * Prints generated suppressions . 
 + * @ param file the file to process . 
 + * @ param suppressionLineColumnNumber line and column number of the suppression 
 + * @ param tabWidth length of the tab character 
 + * @ return generated suppressions . 
 + * @ throws IOException if the file could not be read . 
 + * @ throws CheckstyleException if the file is not a Java source . 
 + * / 
 + public static String printSuppressions ( File file , String suppressionLineColumnNumber , 
 + int tabWidth ) throws IOException , CheckstyleException { 
 + final Matcher matcher = 
 + VALID _ SUPPRESSION _ LINE _ COLUMN _ NUMBER _ REGEX . matcher ( suppressionLineColumnNumber ) ; 
 + if ( matcher . matches ( ) ) { 
 + final FileText fileText = new FileText ( file . getAbsoluteFile ( ) , 
 + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; 
 + final DetailAST detailAST = 
 + JavaParser . parseFileText ( fileText , JavaParser . Options . WITH _ COMMENTS ) ; 
 + final int lineNumber = Integer . parseInt ( matcher . group ( 1 ) ) ; 
 + final int columnNumber = Integer . parseInt ( matcher . group ( 2 ) ) ; 
 + return generate ( fileText , detailAST , lineNumber , columnNumber , tabWidth ) ; 
 + } 
 + else { 
 + final String exceptionMsg = String . format ( Locale . ROOT , 
 + " % s does not match valid format ' line : column ' . " , 
 + suppressionLineColumnNumber ) ; 
 + throw new IllegalStateException ( exceptionMsg ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Creates { @ code XpathQueryGenerator } instance and generates suppressions . 
 + * @ param fileText { @ code FileText } object . 
 + * @ param detailAST { @ code DetailAST } object . 
 + * @ param lineNumber line number . 
 + * @ param columnNumber column number . 
 + * @ param tabWidth length of the tab character . 
 + * @ return generated suppressions . 
 + * / 
 + private static String generate ( FileText fileText , DetailAST detailAST , int lineNumber , 
 + int columnNumber , int tabWidth ) { 
 + final XpathQueryGenerator queryGenerator = 
 + new XpathQueryGenerator ( detailAST , lineNumber , columnNumber , fileText , 
 + tabWidth ) ; 
 + final List < String > suppressions = queryGenerator . generate ( ) ; 
 + return suppressions . stream ( ) . collect ( Collectors . joining ( LINE _ SEPARATOR , 
 + " " , LINE _ SEPARATOR ) ) ; 
 + } 
 + } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 39ab06e . . 596e135 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 91 , 10 + 91 , 20 @ @ public class MainTest { 
 + " - J , - - treeWithJavadoc Print full Abstract Syntax Tree of the file % n " 
 + " - o < arg > Sets the output file . Defaults to stdout % n " 
 + " - p < arg > Loads the properties file % n " 
 + + " - s < arg > Print xpath suppressions at the file ' s line " 
 + + " and column % n " 
 + + " position . Argument is the line and column " 
 + + " number ( separated % n " 
 + + " by a : ) in the file that the suppression " 
 + + " should be % n " 
 + + " generated for % n " 
 + " - t , - - tree Print Abstract Syntax Tree ( AST ) of the file % n " 
 + " - T , - - treeWithComments Print Abstract Syntax Tree ( AST ) of the file " 
 + " including % n " 
 + " comments % n " 
 + + " - tabWidth < arg > Sets the length of the tab character . " 
 + + " Used only with \ " - s \ " % n " 
 + + " option . Default value is 8 % n " 
 + " - v Print product version and exit % n " 
 + " - W , - - tree - walker - threads - number < arg > ( experimental ) The number of TreeWalker threads " 
 + " ( must be % n " 
 @ @ - 761 , 6 + 771 , 108 @ @ public class MainTest { 
 } 
 
 @ Test 
 + public void testPrintSuppressionOption ( ) throws Exception { 
 + final String expected = " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] " + EOL 
 + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / MODIFIERS " + EOL 
 + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / LITERAL _ CLASS " + EOL ; 
 + 
 + exit . checkAssertionAfterwards ( ( ) - > { 
 + assertEquals ( " Unexpected output log " , 
 + expected , systemOut . getLog ( ) ) ; 
 + assertEquals ( " Unexpected system error log " , 
 + " " , systemErr . getLog ( ) ) ; 
 + } ) ; 
 + Main . main ( getPath ( " InputMainSuppressionsStringPrinter . java " ) , 
 + " - s " , " 3 : 1 " ) ; 
 + } 
 + 
 + @ Test 
 + public void testPrintSuppressionAndTabWidthOption ( ) throws Exception { 
 + final String expected = " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / OBJBLOCK " 
 + + " / METHOD _ DEF [ @ text = ' getName ' ] / SLIST / VARIABLE _ DEF [ @ text = ' var ' ] " + EOL 
 + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / OBJBLOCK " 
 + + " / METHOD _ DEF [ @ text = ' getName ' ] / SLIST / VARIABLE _ DEF [ @ text = ' var ' ] / MODIFIERS " + EOL 
 + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / OBJBLOCK " 
 + + " / METHOD _ DEF [ @ text = ' getName ' ] / SLIST / VARIABLE _ DEF [ @ text = ' var ' ] / TYPE " + EOL 
 + + " / CLASS _ DEF [ @ text = ' InputMainSuppressionsStringPrinter ' ] / OBJBLOCK " 
 + + " / METHOD _ DEF [ @ text = ' getName ' ] / SLIST / VARIABLE _ DEF [ @ text = ' var ' ] / TYPE / LITERAL _ INT " 
 + + EOL ; 
 + 
 + exit . checkAssertionAfterwards ( ( ) - > { 
 + assertEquals ( " Unexpected output log " , 
 + expected , systemOut . getLog ( ) ) ; 
 + assertEquals ( " Unexpected system error log " , 
 + " " , systemErr . getLog ( ) ) ; 
 + } ) ; 
 + Main . main ( getPath ( " InputMainSuppressionsStringPrinter . java " ) , 
 + " - s " , " 7 : 9 " , " - tabWidth " , " 2 " ) ; 
 + } 
 + 
 + @ Test 
 + public void testPrintSuppressionConflictingOptionsTvsC ( ) throws Exception { 
 + exit . expectSystemExitWithStatus ( - 1 ) ; 
 + exit . checkAssertionAfterwards ( ( ) - > { 
 + assertEquals ( " Unexpected output log " , " Option ' - s ' cannot be used with other options . " 
 + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; 
 + } ) ; 
 + 
 + Main . main ( " - c " , " / google _ checks . xml " , 
 + getPath ( " " ) , " - s " , " 2 : 4 " ) ; 
 + } 
 + 
 + @ Test 
 + public void testPrintSuppressionConflictingOptionsTvsP ( ) throws Exception { 
 + exit . expectSystemExitWithStatus ( - 1 ) ; 
 + exit . checkAssertionAfterwards ( ( ) - > { 
 + assertEquals ( " Unexpected output log " , " Option ' - s ' cannot be used with other options . " 
 + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; 
 + } ) ; 
 + 
 + Main . main ( " - p " , getPath ( " InputMainMycheckstyle . properties " ) , " - s " , " 2 : 4 " , getPath ( " " ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testPrintSuppressionConflictingOptionsTvsF ( ) throws Exception { 
 + exit . expectSystemExitWithStatus ( - 1 ) ; 
 + exit . checkAssertionAfterwards ( ( ) - > { 
 + assertEquals ( " Unexpected output log " , " Option ' - s ' cannot be used with other options . " 
 + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; 
 + } ) ; 
 + 
 + Main . main ( " - f " , " plain " , " - s " , " 2 : 4 " , getPath ( " " ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testPrintSuppressionConflictingOptionsTvsO ( ) throws Exception { 
 + final File file = temporaryFolder . newFile ( " file . output " ) ; 
 + 
 + exit . expectSystemExitWithStatus ( - 1 ) ; 
 + exit . checkAssertionAfterwards ( ( ) - > { 
 + assertEquals ( " Unexpected output log " , " Option ' - s ' cannot be used with other options . " 
 + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; 
 + } ) ; 
 + 
 + Main . main ( " - o " , file . getCanonicalPath ( ) , " - s " , " 2 : 4 " , getPath ( " " ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testPrintSuppressionOnMoreThanOneFile ( ) throws Exception { 
 + exit . expectSystemExitWithStatus ( - 1 ) ; 
 + exit . checkAssertionAfterwards ( ( ) - > { 
 + assertEquals ( " Unexpected output log " , " Printing xpath suppressions is allowed for " 
 + + " only one file . " 
 + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; 
 + } ) ; 
 + 
 + Main . main ( " - s " , " 2 : 4 " , getPath ( " " ) , getPath ( " " ) ) ; 
 + } 
 + 
 + @ Test 
 public void testPrintFullTreeOption ( ) throws Exception { 
 final String expected = new String ( Files . readAllBytes ( Paths . get ( 
 getPath ( " InputMainExpectedInputAstTreeStringPrinterJavadoc . txt " ) ) ) , 
 @ @ - 811 , 6 + 923 , 20 @ @ public class MainTest { 
 } 
 
 @ Test 
 + public void testConflictingOptionsTvsS ( ) throws Exception { 
 + final File file = temporaryFolder . newFile ( " file . output " ) ; 
 + 
 + exit . expectSystemExitWithStatus ( - 1 ) ; 
 + exit . checkAssertionAfterwards ( ( ) - > { 
 + assertEquals ( " Unexpected output log " , " Option ' - t ' cannot be used with other options . " 
 + + System . lineSeparator ( ) , systemOut . getLog ( ) ) ; 
 + assertEquals ( " Unexpected system error log " , " " , systemErr . getLog ( ) ) ; 
 + } ) ; 
 + 
 + Main . main ( " - s " , file . getCanonicalPath ( ) , " - t " , getPath ( " " ) ) ; 
 + } 
 + 
 + @ Test 
 public void testConflictingOptionsTvsO ( ) throws Exception { 
 final File file = temporaryFolder . newFile ( " file . output " ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinterTest . java 
 new file mode 100644 
 index 0000000 . . 1a4b43c 
 - - - / dev / null 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / SuppressionsStringPrinterTest . java 
 @ @ - 0 , 0 + 1 , 130 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2018 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + import static com . puppycrawl . tools . checkstyle . internal . utils . TestUtil . isUtilsClassHasPrivateConstructor ; 
 + import static org . junit . Assert . assertTrue ; 
 + 
 + import java . io . File ; 
 + 
 + import org . junit . Assert ; 
 + import org . junit . Test ; 
 + 
 + import antlr . NoViableAltException ; 
 + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 + 
 + public class SuppressionsStringPrinterTest extends AbstractTreeTestSupport { 
 + 
 + private static final String EOL = System . getProperty ( " line . separator " ) ; 
 + 
 + @ Override 
 + protected String getPackageLocation ( ) { 
 + return " com / puppycrawl / tools / checkstyle / suppressionsstringprinter " ; 
 + } 
 + 
 + @ Test 
 + public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( SuppressionsStringPrinter . class , true ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testCorrect ( ) throws Exception { 
 + final String expected = " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] " + EOL 
 + + " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / MODIFIERS " + EOL 
 + + " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / MODIFIERS / LITERAL _ PUBLIC " 
 + + EOL ; 
 + 
 + final File input = new File ( getPath ( " InputSuppressionsStringPrinter . java " ) ) ; 
 + final String lineAndColumnNumber = " 3 : 1 " ; 
 + final int tabWidth = 2 ; 
 + final String result = SuppressionsStringPrinter . printSuppressions ( input , 
 + lineAndColumnNumber , tabWidth ) ; 
 + 
 + Assert . assertEquals ( " Invalid xpath queries " , 
 + expected , result ) ; 
 + } 
 + 
 + @ Test 
 + public void testCustomTabWidth ( ) throws Exception { 
 + final String expected = " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / OBJBLOCK " 
 + + " / METHOD _ DEF [ @ text = ' toString ' ] " + EOL 
 + + " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / OBJBLOCK " 
 + + " / METHOD _ DEF [ @ text = ' toString ' ] / MODIFIERS " + EOL 
 + + " / CLASS _ DEF [ @ text = ' InputSuppressionsStringPrinter ' ] / OBJBLOCK " 
 + + " / METHOD _ DEF [ @ text = ' toString ' ] / MODIFIERS / LITERAL _ PUBLIC " + EOL ; 
 + 
 + final File input = new File ( getPath ( " InputSuppressionsStringPrinter . java " ) ) ; 
 + final String lineAndColumnNumber = " 5 : 13 " ; 
 + final int tabWidth = 4 ; 
 + final String result = SuppressionsStringPrinter . printSuppressions ( input , 
 + lineAndColumnNumber , tabWidth ) ; 
 + 
 + Assert . assertEquals ( " Invalid xpath queries " , 
 + expected , result ) ; 
 + } 
 + 
 + @ Test 
 + public void testCustomTabWidthEmptyResult ( ) throws Exception { 
 + final File input = new File ( getPath ( " InputSuppressionsStringPrinter . java " ) ) ; 
 + final String lineAndColumnNumber = " 5 : 13 " ; 
 + final int tabWidth = 6 ; 
 + final String result = SuppressionsStringPrinter . printSuppressions ( input , 
 + lineAndColumnNumber , tabWidth ) ; 
 + Assert . assertEquals ( " Invalid xpath queries " , 
 + EOL , result ) ; 
 + } 
 + 
 + @ Test 
 + public void testInvalidLineAndColumnNumberParameter ( ) throws Exception { 
 + final File input = new File ( getPath ( " InputSuppressionsStringPrinter . java " ) ) ; 
 + final String invalidLineAndColumnNumber = " abc - 432 " ; 
 + final int tabWidth = 2 ; 
 + try { 
 + SuppressionsStringPrinter . printSuppressions ( input , 
 + invalidLineAndColumnNumber , tabWidth ) ; 
 + Assert . fail ( " exception expected " ) ; 
 + } 
 + catch ( IllegalStateException ex ) { 
 + Assert . assertEquals ( " Invalid exception message " , 
 + " abc - 432 does not match valid format ' line : column ' . " , 
 + ex . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 + public void testParseFileTextThrowable ( ) throws Exception { 
 + final File input = new File ( getNonCompilablePath ( " InputSuppressionsStringPrinter . java " ) ) ; 
 + final String lineAndColumnNumber = " 2 : 3 " ; 
 + final int tabWidth = 2 ; 
 + try { 
 + SuppressionsStringPrinter . printSuppressions ( input , 
 + lineAndColumnNumber , tabWidth ) ; 
 + Assert . fail ( " exception expected " ) ; 
 + } 
 + catch ( CheckstyleException ex ) { 
 + Assert . assertSame ( " Invalid class " , 
 + NoViableAltException . class , ex . getCause ( ) . getClass ( ) ) ; 
 + Assert . assertEquals ( " Invalid exception message " , 
 + input . getAbsolutePath ( ) + " : 1 : 1 : unexpected token : classD " , 
 + ex . getCause ( ) . toString ( ) ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java 
 new file mode 100644 
 index 0000000 . . a235d18 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java 
 @ @ - 0 , 0 + 1 @ @ 
 + classD a { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / main / InputMainSuppressionsStringPrinter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / main / InputMainSuppressionsStringPrinter . java 
 new file mode 100644 
 index 0000000 . . 2da6dff 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / main / InputMainSuppressionsStringPrinter . java 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + package com . puppycrawl . tools . checkstyle . main ; 
 + 
 + class InputMainSuppressionsStringPrinter { 
 + 	 	 	 void call ( ) { } 
 + 
 + 	 	 	 public String getName ( ) { 
 + 	 	 	 	 int var = 123 ; 
 + 	 	 	 	 return " Checkstyle " ; 
 + 	 	 	 } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java 
 new file mode 100644 
 index 0000000 . . 0d08ac9 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / suppressionsstringprinter / InputSuppressionsStringPrinter . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . suppressionsstringprinter ; 
 + 
 + public class InputSuppressionsStringPrinter { 
 + 
 + 	 	 	 public String toString ( ) { 
 + 	 	 	 	 return " HelloWorld " ; 
 + 	 	 	 } 
 + } 
 diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm 
 index b27487e . . 0648306 100644 
 - - - a / src / xdocs / cmdline . xml . vm 
 + + + b / src / xdocs / cmdline . xml . vm 
 @ @ - 38 , 6 + 38 , 7 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ 
 com . puppycrawl . tools . checkstyle . Main \ 
 - c & lt ; configurationFile & gt ; \ 
 [ - f & lt ; format & gt ; ] [ - p & lt ; propertiesFile & gt ; ] [ - o & lt ; file & gt ; ] \ 
 + [ - s & lt ; line : column & gt ; ] [ - tabWidth & lt ; length & gt ; ] \ 
 [ - t | - - tree ] [ - T | - - treeWithComments ] [ - J | treeWithJavadoc ] [ - j | - - javadocTree ] [ - v ] \ 
 file . . . 
 < / source > 
 @ @ - 74 , 20 + 75 , 30 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ 
 to . 
 < / li > 
 < li > 
 + < code > - s line : column < / code > - print xpath suppressions at the file ' s line and column 
 + position . Line and column numbers are integer values separated by a : , specify 
 + location in the file the suppression should be generated for . The option cannot be used 
 + with other options and requires exactly one file to run on to be specified . 
 + < / li > 
 + < li > 
 + < code > - tabWidth length < / code > - set the length of the tab character . Used only with 
 + < code > - s < / code > option . Default value is 8 . 
 + < / li > 
 + < li > 
 < code > - t , - - tree < / code > - print Abstract Syntax Tree ( AST ) of the checked file . The option 
 cannot be used other options and requires exactly one file to run on to be specified . 
 < / li > 
 < li > 
 < code > - T , - - treeWithComments < / code > - print Abstract Syntax Tree ( AST ) with comment nodes 
 - of the checked file . The option cannot be used other options and requires exactly one 
 - file to run on to be specified . 
 + of the checked file . The option cannot be used with other options and requires exactly 
 + one file to run on to be specified . 
 < / li > 
 < li > 
 < code > - J , - - treeWithJavadoc < / code > - print Abstract Syntax Tree ( AST ) with Javadoc nodes 
 and comment nodes of the checked file . Attention that line number and columns will not be 
 the same as it is a file due to the fact that each javadoc comment is parsed separately 
 - from java file . The option cannot be used other options and requires exactly one file to 
 - run on to be specified . 
 + from java file . The option cannot be used with other options and requires exactly one 
 + file to run on to be specified . 
 < / li > 
 < li > 
 < code > - j , - - javadocTree < / code > - print Parse Tree of the Javadoc comment .

NEAREST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index df6d345 . . f3e5af3 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 89 , 9 + 89 , 8 @ @ 
 < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ " / > 
 < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 
 - < ! - - Classes FileDrop , Main , ParseTreeInfoPanel from gui - package contain Magic Numbers . 
 - The Check generates too many violations , fixing them will make code unmanageable . - - > 
 - < suppress checks = " MagicNumber " files = " . * [ \ \ / ] checkstyle [ \ \ / ] gui [ \ \ / ] " / > 
 + < ! - - The Check generates too many violations , fixing them will make code unmanageable . - - > 
 + < suppress checks = " MagicNumber " files = " ( ParseTreeTableModel | MainFrame ) \ . java " / > 
 
 < ! - - Methods that build fake AST are very long - - > 
 < suppress checks = " MethodLength " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > 
 @ @ - 122 , 7 + 121 , 7 @ @ 
 < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | AbstractJavadocCheck ) \ . java " / > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest | BaseCheckTestSupport | XDocsPagesTest ) \ . java " / > 
 < ! - - a lot of GUI elements is OK - - > 
 - < suppress checks = " ClassDataAbstractionCoupling " files = " ParseTreeInfoPanel \ . java " / > 
 + < suppress checks = " ClassDataAbstractionCoupling " files = " ( JTreeTable | MainFrame ) \ . java " / > 
 
 < ! - - Should be fixed after moving https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / blob / master / sevntu - checks / src / main / java / com / github / sevntu / checkstyle / checks / coding / ReturnCountExtendedCheck . java into the main repo - - > 
 < suppress checks = " ReturnCount " files = " ( ClassResolver | ConfigurationLoader | IndentationCheckTest ) \ . java " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java 
 new file mode 100644 
 index 0000000 . . a85c003 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CheckstyleFrameModel . java 
 @ @ - 0 , 0 + 1 , 113 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . gui ; 
 + 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 + 
 + import antlr . ANTLRException ; 
 + 
 + import com . google . common . collect . ImmutableList ; 
 + import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 + import com . puppycrawl . tools . checkstyle . api . FileText ; 
 + 
 + / * * 
 + * Model for checkstyle frame . 
 + * @ author Vladislav Lisetskiy 
 + * / 
 + public class CheckstyleFrameModel { 
 + 
 + / * * Lines to position map . * / 
 + private final List < Integer > linesToPosition = new ArrayList < > ( ) ; 
 + 
 + / * * The file which is being parsed . * / 
 + private File currentFile ; 
 + 
 + / * * 
 + * Parse a file and return the parse tree . 
 + * @ param file the file to parse . 
 + * @ return the root node of the parse tree . 
 + * @ throws IOException if the file could not be read . 
 + * @ throws ANTLRException if the file is not a Java source . 
 + * / 
 + public DetailAST parseFile ( File file ) throws IOException , ANTLRException { 
 + currentFile = file ; 
 + final FileText text = getFileText ( file ) ; 
 + final FileContents contents = new FileContents ( text ) ; 
 + return TreeWalker . parse ( contents ) ; 
 + } 
 + 
 + / * * 
 + * Get FileText from a file . 
 + * @ param file the file to get the FileText from . 
 + * @ return the FileText . 
 + * @ throws IOException if the file could not be read . 
 + * / 
 + public FileText getFileText ( File file ) throws IOException { 
 + return new FileText ( file . getAbsoluteFile ( ) , 
 + System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 + } 
 + 
 + / * * 
 + * Get the directory of the last loaded file . 
 + * @ return directory of the last loaded file . 
 + * / 
 + public File getLastDirectory ( ) { 
 + File lastDirectory = null ; 
 + if ( currentFile ! = null ) { 
 + lastDirectory = new File ( currentFile . getParent ( ) ) ; 
 + } 
 + return lastDirectory ; 
 + } 
 + 
 + / * * 
 + * Get current file . 
 + * @ return current file . 
 + * / 
 + public File getCurrentFile ( ) { 
 + return currentFile ; 
 + } 
 + 
 + / * * 
 + * Get lines to position map . 
 + * @ return lines to position map . 
 + * / 
 + public List < Integer > getLinesToPosition ( ) { 
 + return ImmutableList . copyOf ( linesToPosition ) ; 
 + } 
 + 
 + / * * 
 + * Add a new value into lines to position map . 
 + * @ param value Value to be added into position map . 
 + * / 
 + public void addLineToPosition ( int value ) { 
 + linesToPosition . add ( value ) ; 
 + } 
 + 
 + / * * Clear lines to position map . * / 
 + public void clearLinesToPosition ( ) { 
 + linesToPosition . clear ( ) ; 
 + } 
 + 
 + } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 index 7d3d042 . . 6608278 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / CodeSelector . java 
 @ @ - 72 , 7 + 72 , 6 @ @ public class CodeSelector { 
 editor . requestFocusInWindow ( ) ; 
 editor . setCaretPosition ( start ) ; 
 editor . moveCaretPosition ( end ) ; 
 - editor . transferFocusBackward ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 index b6a62c7 . . 74d7263 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import java . awt . Component ; 
 import java . awt . Dimension ; 
 import java . awt . FontMetrics ; 
 import java . awt . event . ActionEvent ; 
 + import java . awt . event . MouseAdapter ; 
 import java . awt . event . MouseEvent ; 
 import java . util . EventObject ; 
 import java . util . List ; 
 @ @ - 103 , 25 + 104 , 50 @ @ public class JTreeTable extends JTable { 
 final Action expand = new AbstractAction ( ) { 
 private static final long serialVersionUID = - 5859674518660156121L ; 
 
 - @ Override 
 - public void actionPerformed ( ActionEvent event ) { 
 - final TreePath selected = tree . getSelectionPath ( ) ; 
 - final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; 
 - new CodeSelector ( ast , editor , linePositionMap ) . select ( ) ; 
 - 
 - if ( tree . isExpanded ( selected ) ) { 
 - tree . collapsePath ( selected ) ; 
 - } 
 - else { 
 - tree . expandPath ( selected ) ; 
 - } 
 - tree . setSelectionPath ( selected ) ; 
 - } 
 - } ; 
 + @ Override 
 + public void actionPerformed ( ActionEvent event ) { 
 + doExpandByEnter ( ) ; 
 + } 
 + } ; 
 final KeyStroke stroke = KeyStroke . getKeyStroke ( " ENTER " ) ; 
 final String command = " expand / collapse " ; 
 getInputMap ( ) . put ( stroke , command ) ; 
 getActionMap ( ) . put ( command , expand ) ; 
 + 
 + addMouseListener ( new MouseAdapter ( ) { 
 + @ Override 
 + public void mouseClicked ( MouseEvent event ) { 
 + if ( event . getClickCount ( ) = = 2 ) { 
 + makeCodeSelection ( ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 + 
 + / * * 
 + * Do expansion of a tree node after pressing ENTER . 
 + * / 
 + private void doExpandByEnter ( ) { 
 + final TreePath selected = makeCodeSelection ( ) ; 
 + 
 + if ( tree . isExpanded ( selected ) ) { 
 + tree . collapsePath ( selected ) ; 
 + } 
 + else { 
 + tree . expandPath ( selected ) ; 
 + } 
 + tree . setSelectionPath ( selected ) ; 
 + } 
 + 
 + / * * 
 + * Make selection of code in a text area . 
 + * @ return selected TreePath . 
 + * / 
 + private TreePath makeCodeSelection ( ) { 
 + final TreePath selected = tree . getSelectionPath ( ) ; 
 + final DetailAST ast = ( DetailAST ) selected . getLastPathComponent ( ) ; 
 + new CodeSelector ( ast , editor , linePositionMap ) . select ( ) ; 
 + return selected ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 index 7aa2ffd . . ebe29af 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 @ @ - 19 , 14 + 19 , 11 @ @ 
 
 package com . puppycrawl . tools . checkstyle . gui ; 
 
 - import java . awt . EventQueue ; 
 import java . io . File ; 
 
 - import javax . swing . JFrame ; 
 + import javax . swing . SwingUtilities ; 
 import javax . swing . WindowConstants ; 
 
 - import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - 
 / * * 
 * Entry point for starting the checkstyle GUI . 
 * 
 @ @ - 34 , 12 + 31 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 * / 
 public final class Main { 
 
 - / * * Frame ' s name . * / 
 - private static final String FRAME _ NAME = " CheckStyle " ; 
 - 
 - / * * Main frame . * / 
 - private static JFrame frame ; 
 - 
 / * * Hidden constructor of the current utility class . * / 
 private Main ( ) { 
 / / no code 
 @ @ - 49 , 64 + 40 , 20 @ @ public final class Main { 
 * Entry point . 
 * @ param args the command line arguments . 
 * / 
 - public static void main ( String . . . args ) { 
 - frame = new JFrame ( FRAME _ NAME ) ; 
 - final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; 
 - frame . getContentPane ( ) . add ( panel ) ; 
 - if ( args . length > = 1 ) { 
 - final File file = new File ( args [ 0 ] ) ; 
 - panel . openFile ( file , frame ) ; 
 - } 
 - frame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; 
 - 
 - final Runnable runner = new FrameShower ( frame ) ; 
 - EventQueue . invokeLater ( runner ) ; 
 - } 
 - 
 - / * * 
 - * Method is used for testing in the past . 
 - * @ param ast tree to display 
 - * / 
 - public static void displayAst ( DetailAST ast ) { 
 - final JFrame testFrame = new JFrame ( FRAME _ NAME ) ; 
 - final ParseTreeInfoPanel panel = new ParseTreeInfoPanel ( ) ; 
 - testFrame . getContentPane ( ) . add ( panel ) ; 
 - panel . openAst ( ast ) ; 
 - testFrame . setSize ( 1500 , 800 ) ; 
 - testFrame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; 
 - testFrame . setVisible ( true ) ; 
 - } 
 - 
 - / * * 
 - * @ return Main GUI ' s frame . 
 - * / 
 - static JFrame getFrame ( ) { 
 - return frame ; 
 - } 
 - 
 - / * * 
 - * Http : / / findbugs . sourceforge . net / bugDescriptions . html # SW _ SWING _ METHODS _ INVOKED _ IN _ SWING _ THREAD 
 - * / 
 - private static class FrameShower implements Runnable { 
 - / * * 
 - * Frame . 
 - * / 
 - private final JFrame frame ; 
 - 
 - / * * 
 - * @ param frame JFrame component . 
 - * / 
 - FrameShower ( JFrame frame ) { 
 - this . frame = frame ; 
 - } 
 - 
 - / * * 
 - * Display a frame . 
 - * / 
 - @ Override 
 - public void run ( ) { 
 - frame . pack ( ) ; 
 - frame . setVisible ( true ) ; 
 - } 
 + public static void main ( final String . . . args ) { 
 + SwingUtilities . invokeLater ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + final MainFrame mainFrame = new MainFrame ( ) ; 
 + 
 + if ( args . length > 0 ) { 
 + final File sourceFile = new File ( args [ 0 ] ) ; 
 + mainFrame . openFile ( sourceFile ) ; 
 + } 
 + mainFrame . setTitle ( " Checkstyle " ) ; 
 + mainFrame . setDefaultCloseOperation ( WindowConstants . EXIT _ ON _ CLOSE ) ; 
 + mainFrame . setVisible ( true ) ; 
 + } 
 + } ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java 
 new file mode 100644 
 index 0000000 . . fc8e67e 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java 
 @ @ - 0 , 0 + 1 , 199 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . gui ; 
 + 
 + import java . awt . BorderLayout ; 
 + import java . awt . GridLayout ; 
 + import java . awt . event . ActionEvent ; 
 + import java . awt . event . KeyEvent ; 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + 
 + import javax . swing . AbstractAction ; 
 + import javax . swing . JButton ; 
 + import javax . swing . JFileChooser ; 
 + import javax . swing . JFrame ; 
 + import javax . swing . JOptionPane ; 
 + import javax . swing . JPanel ; 
 + import javax . swing . JScrollPane ; 
 + import javax . swing . JSplitPane ; 
 + import javax . swing . JTextArea ; 
 + import javax . swing . filechooser . FileFilter ; 
 + 
 + import antlr . ANTLRException ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + 
 + / * * 
 + * Displays information about a parse tree . 
 + * The user can change the file that is parsed and displayed 
 + * using a JFileChooser . 
 + * 
 + * @ author Lars K ü hne 
 + * @ author Vladislav Lisetskiy 
 + * / 
 + public class MainFrame extends JFrame { 
 + 
 + private static final long serialVersionUID = 7970053543351871890L ; 
 + / * * Checkstyle frame model . * / 
 + private final transient CheckstyleFrameModel model = new CheckstyleFrameModel ( ) ; 
 + / * * Reload action . * / 
 + private final ReloadAction reloadAction = new ReloadAction ( ) ; 
 + / * * Parse tree model . * / 
 + private transient ParseTreeTableModel parseTreeTableModel ; 
 + / * * Code text area . * / 
 + private JTextArea textArea ; 
 + / * * Tree table . * / 
 + private JTreeTable treeTable ; 
 + 
 + / * * Create a new MainFrame . * / 
 + public MainFrame ( ) { 
 + createContent ( ) ; 
 + } 
 + 
 + / * * Create content of this MainFrame . * / 
 + private void createContent ( ) { 
 + setLayout ( new BorderLayout ( ) ) ; 
 + 
 + textArea = new JTextArea ( 20 , 15 ) ; 
 + textArea . setEditable ( false ) ; 
 + final JScrollPane textAreaScrollPane = new JScrollPane ( textArea ) ; 
 + 
 + parseTreeTableModel = new ParseTreeTableModel ( null ) ; 
 + treeTable = new JTreeTable ( parseTreeTableModel ) ; 
 + treeTable . setEditor ( textArea ) ; 
 + treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; 
 + final JScrollPane treeTableScrollPane = new JScrollPane ( treeTable ) ; 
 + 
 + final JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL _ SPLIT , treeTableScrollPane , 
 + textAreaScrollPane ) ; 
 + add ( splitPane , BorderLayout . CENTER ) ; 
 + splitPane . setResizeWeight ( 0 . 7 ) ; 
 + 
 + add ( createButtonsPanel ( ) , BorderLayout . PAGE _ END ) ; 
 + 
 + pack ( ) ; 
 + } 
 + 
 + / * * 
 + * Create buttons panel . 
 + * @ return buttons panel . 
 + * / 
 + private JPanel createButtonsPanel ( ) { 
 + final JButton openFileButton = new JButton ( new FileSelectionAction ( ) ) ; 
 + openFileButton . setMnemonic ( KeyEvent . VK _ S ) ; 
 + openFileButton . setText ( " Open File " ) ; 
 + 
 + reloadAction . setEnabled ( false ) ; 
 + final JButton reloadFileButton = new JButton ( reloadAction ) ; 
 + reloadFileButton . setMnemonic ( KeyEvent . VK _ R ) ; 
 + reloadFileButton . setText ( " Reload File " ) ; 
 + 
 + final JPanel buttonPanel = new JPanel ( ) ; 
 + buttonPanel . setLayout ( new GridLayout ( 1 , 2 ) ) ; 
 + buttonPanel . add ( openFileButton ) ; 
 + buttonPanel . add ( reloadFileButton ) ; 
 + 
 + return buttonPanel ; 
 + } 
 + 
 + / * * 
 + * Open file and load it . 
 + * @ param sourceFile the file to open . 
 + * / 
 + public void openFile ( File sourceFile ) { 
 + if ( sourceFile ! = null ) { 
 + try { 
 + setTitle ( " Checkstyle : " + sourceFile . getName ( ) ) ; 
 + final DetailAST parseTree = model . parseFile ( sourceFile ) ; 
 + parseTreeTableModel . setParseTree ( parseTree ) ; 
 + reloadAction . setEnabled ( true ) ; 
 + 
 + final String [ ] sourceLines = model . getFileText ( sourceFile ) . toLinesArray ( ) ; 
 + 
 + / / clear for each new file 
 + model . clearLinesToPosition ( ) ; 
 + / / starts line counting at 1 
 + model . addLineToPosition ( 0 ) ; 
 + 
 + / / clean the text area before inserting the lines of the new file 
 + textArea . setText ( " " ) ; 
 + 
 + / / insert the contents of the file to the text area 
 + for ( final String element : sourceLines ) { 
 + model . addLineToPosition ( textArea . getText ( ) . length ( ) ) ; 
 + textArea . append ( element + System . lineSeparator ( ) ) ; 
 + } 
 + 
 + treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; 
 + } 
 + catch ( final IOException | ANTLRException ex ) { 
 + JOptionPane . showMessageDialog ( this , 
 + " Could not parse " + sourceFile + " : " + ex . getMessage ( ) ) ; 
 + } 
 + } 
 + } 
 + 
 + / * * 
 + * Handler for file selection action events . 
 + * / 
 + private class FileSelectionAction extends AbstractAction { 
 + private static final long serialVersionUID = 1762396148873280589L ; 
 + 
 + @ Override 
 + public void actionPerformed ( ActionEvent event ) { 
 + final JFileChooser fileChooser = new JFileChooser ( model . getLastDirectory ( ) ) ; 
 + final FileFilter filter = new JavaFileFilter ( ) ; 
 + fileChooser . setFileFilter ( filter ) ; 
 + 
 + final int returnCode = fileChooser . showOpenDialog ( MainFrame . this ) ; 
 + if ( returnCode = = JFileChooser . APPROVE _ OPTION ) { 
 + final File file = fileChooser . getSelectedFile ( ) ; 
 + openFile ( file ) ; 
 + } 
 + } 
 + } 
 + 
 + / * * 
 + * Handler for reload action events . 
 + * / 
 + private class ReloadAction extends AbstractAction { 
 + private static final long serialVersionUID = - 890320994114628011L ; 
 + 
 + @ Override 
 + public void actionPerformed ( ActionEvent event ) { 
 + openFile ( model . getCurrentFile ( ) ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Filter for Java files . 
 + * / 
 + private static class JavaFileFilter extends FileFilter { 
 + @ Override 
 + public boolean accept ( File file ) { 
 + return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; 
 + } 
 + 
 + @ Override 
 + public String getDescription ( ) { 
 + return " Java Source File " ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 deleted file mode 100644 
 index bd0df08 . . 0000000 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 + + + / dev / null 
 @ @ - 1 , 321 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / checkstyle : Checks Java source code for adherence to a set of rules . 
 - / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 - / / 
 - / / This library is free software ; you can redistribute it and / or 
 - / / modify it under the terms of the GNU Lesser General Public 
 - / / License as published by the Free Software Foundation ; either 
 - / / version 2 . 1 of the License , or ( at your option ) any later version . 
 - / / 
 - / / This library is distributed in the hope that it will be useful , 
 - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - / / Lesser General Public License for more details . 
 - / / 
 - / / You should have received a copy of the GNU Lesser General Public 
 - / / License along with this library ; if not , write to the Free Software 
 - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - package com . puppycrawl . tools . checkstyle . gui ; 
 - 
 - import java . awt . BorderLayout ; 
 - import java . awt . Component ; 
 - import java . awt . GridLayout ; 
 - import java . awt . event . ActionEvent ; 
 - import java . awt . event . KeyEvent ; 
 - import java . io . File ; 
 - import java . io . IOException ; 
 - import java . util . ArrayList ; 
 - import java . util . List ; 
 - 
 - import javax . swing . AbstractAction ; 
 - import javax . swing . Action ; 
 - import javax . swing . JButton ; 
 - import javax . swing . JFileChooser ; 
 - import javax . swing . JOptionPane ; 
 - import javax . swing . JPanel ; 
 - import javax . swing . JScrollPane ; 
 - import javax . swing . JSplitPane ; 
 - import javax . swing . JTextArea ; 
 - import javax . swing . SwingUtilities ; 
 - import javax . swing . filechooser . FileFilter ; 
 - 
 - import antlr . ANTLRException ; 
 - 
 - import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 - import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 - import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 - import com . puppycrawl . tools . checkstyle . api . FileText ; 
 - 
 - / * * 
 - * Displays information about a parse tree . 
 - * The user can change the file that is parsed and displayed 
 - * through a JFileChooser . 
 - * 
 - * @ author Lars K ü hne 
 - * / 
 - public class ParseTreeInfoPanel extends JPanel { 
 - private static final long serialVersionUID = - 4243405131202059043L ; 
 - 
 - / * * Parse tree model . * / 
 - private final transient ParseTreeTableModel parseTreeTableModel ; 
 - / * * JTextArea component . * / 
 - private final JTextArea textArea ; 
 - / * * Reload action . * / 
 - private final ReloadAction reloadAction ; 
 - / * * Lines to position map . * / 
 - private final List < Integer > linesToPosition = new ArrayList < > ( ) ; 
 - / * * Tree table . * / 
 - private final JTreeTable treeTable ; 
 - / * * Last directory . * / 
 - private File lastDirectory ; 
 - / * * Current file . * / 
 - private File currentFile ; 
 - 
 - / * * 
 - * Create a new ParseTreeInfoPanel instance . 
 - * / 
 - public ParseTreeInfoPanel ( ) { 
 - setLayout ( new BorderLayout ( ) ) ; 
 - 
 - parseTreeTableModel = new ParseTreeTableModel ( null ) ; 
 - treeTable = new JTreeTable ( parseTreeTableModel ) ; 
 - final JScrollPane scrollPane = new JScrollPane ( treeTable ) ; 
 - 
 - final JButton fileSelectionButton = 
 - new JButton ( new FileSelectionAction ( ) ) ; 
 - 
 - reloadAction = new ReloadAction ( ) ; 
 - reloadAction . setEnabled ( false ) ; 
 - final JButton reloadButton = new JButton ( reloadAction ) ; 
 - 
 - textArea = new JTextArea ( 20 , 15 ) ; 
 - textArea . setEditable ( false ) ; 
 - treeTable . setEditor ( textArea ) ; 
 - treeTable . setLinePositionMap ( linesToPosition ) ; 
 - 
 - final JScrollPane sp2 = new JScrollPane ( textArea ) ; 
 - 
 - final JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL _ SPLIT , 
 - scrollPane , sp2 ) ; 
 - add ( splitPane , BorderLayout . CENTER ) ; 
 - splitPane . setResizeWeight ( 0 . 7 ) ; 
 - 
 - final JPanel pane = new JPanel ( new GridLayout ( 1 , 2 ) ) ; 
 - add ( pane , BorderLayout . PAGE _ END ) ; 
 - pane . add ( fileSelectionButton ) ; 
 - pane . add ( reloadButton ) ; 
 - 
 - } 
 - 
 - / * * 
 - * Opens the input parse tree ast . 
 - * @ param parseTree DetailAST tree . 
 - * / 
 - public void openAst ( DetailAST parseTree ) { 
 - parseTreeTableModel . setParseTree ( parseTree ) ; 
 - reloadAction . setEnabled ( true ) ; 
 - 
 - / / clear for each new file 
 - clearLinesToPosition ( ) ; 
 - / / starts line counting at 1 
 - addLineToPosition ( 0 ) ; 
 - / / insert the contents of the file to the text area 
 - 
 - / / clean the text area before inserting the lines of the new file 
 - if ( ! textArea . getText ( ) . isEmpty ( ) ) { 
 - textArea . replaceRange ( " " , 0 , textArea . getText ( ) . length ( ) ) ; 
 - } 
 - 
 - / / move back to the top of the file 
 - textArea . moveCaretPosition ( 0 ) ; 
 - } 
 - 
 - / * * 
 - * Opens file and loads it into text area . 
 - * @ param file File to open . 
 - * @ param parent Component for displaying errors if file can ' t be open . 
 - * / 
 - public void openFile ( File file , final Component parent ) { 
 - if ( file ! = null ) { 
 - try { 
 - Main . getFrame ( ) . setTitle ( " Checkstyle : " + file . getName ( ) ) ; 
 - final FileText text = new FileText ( file . getAbsoluteFile ( ) , 
 - getEncoding ( ) ) ; 
 - final DetailAST parseTree = parseFile ( text ) ; 
 - parseTreeTableModel . setParseTree ( parseTree ) ; 
 - currentFile = file ; 
 - lastDirectory = file . getParentFile ( ) ; 
 - reloadAction . setEnabled ( true ) ; 
 - 
 - final String [ ] sourceLines = text . toLinesArray ( ) ; 
 - 
 - / / clear for each new file 
 - clearLinesToPosition ( ) ; 
 - / / starts line counting at 1 
 - addLineToPosition ( 0 ) ; 
 - 
 - / / clean the text area before inserting the lines of the new file 
 - if ( ! textArea . getText ( ) . isEmpty ( ) ) { 
 - textArea . replaceRange ( " " , 0 , textArea . getText ( ) 
 - . length ( ) ) ; 
 - } 
 - 
 - / / insert the contents of the file to the text area 
 - for ( final String element : sourceLines ) { 
 - addLineToPosition ( textArea . getText ( ) . length ( ) ) ; 
 - textArea . append ( element + System . lineSeparator ( ) ) ; 
 - } 
 - 
 - / / move back to the top of the file 
 - textArea . moveCaretPosition ( 0 ) ; 
 - treeTable . setLinePositionMap ( linesToPosition ) ; 
 - } 
 - catch ( final IOException | ANTLRException ex ) { 
 - showErrorDialog ( 
 - parent , 
 - " Could not parse " + file + " : " + ex . getMessage ( ) ) ; 
 - } 
 - } 
 - } 
 - 
 - / * * 
 - * Parses a file and returns the parse tree . 
 - * @ param text the file to parse 
 - * @ return the root node of the parse tree 
 - * @ throws ANTLRException if the file is not a Java source 
 - * / 
 - private static DetailAST parseFile ( FileText text ) 
 - throws ANTLRException { 
 - final FileContents contents = new FileContents ( text ) ; 
 - return TreeWalker . parse ( contents ) ; 
 - } 
 - 
 - / * * 
 - * Returns the configured file encoding . 
 - * This can be set using the { @ code file . encoding } system property . 
 - * It defaults to UTF - 8 . 
 - * @ return the configured file encoding 
 - * / 
 - private static String getEncoding ( ) { 
 - return System . getProperty ( " file . encoding " , " UTF - 8 " ) ; 
 - } 
 - 
 - / * * 
 - * Opens dialog with error . 
 - * @ param parent Component for displaying errors . 
 - * @ param msg Error message to display . 
 - * / 
 - private static void showErrorDialog ( final Component parent , final String msg ) { 
 - final Runnable showError = new FrameShower ( parent , msg ) ; 
 - SwingUtilities . invokeLater ( showError ) ; 
 - } 
 - 
 - / * * 
 - * Adds a new value into lines to position map . 
 - * @ param value Value to be added into position map . 
 - * / 
 - private void addLineToPosition ( int value ) { 
 - linesToPosition . add ( value ) ; 
 - } 
 - 
 - / * * Clears lines to position map . * / 
 - private void clearLinesToPosition ( ) { 
 - linesToPosition . clear ( ) ; 
 - } 
 - 
 - / * * 
 - * Http : / / findbugs . sourceforge . net / bugDescriptions . html # SW _ SWING _ METHODS _ INVOKED _ IN _ SWING _ THREAD 
 - * / 
 - private static class FrameShower implements Runnable { 
 - / * * 
 - * Frame . 
 - * / 
 - private final Component parent ; 
 - 
 - / * * 
 - * Frame . 
 - * / 
 - private final String msg ; 
 - 
 - / * * 
 - * @ param parent Frame ' s component . 
 - * @ param msg Message to show . 
 - * / 
 - FrameShower ( Component parent , final String msg ) { 
 - this . parent = parent ; 
 - this . msg = msg ; 
 - } 
 - 
 - / * * 
 - * Display a frame . 
 - * / 
 - @ Override 
 - public void run ( ) { 
 - JOptionPane . showMessageDialog ( parent , msg ) ; 
 - } 
 - } 
 - 
 - / * * 
 - * Filter for Java files . 
 - * / 
 - private static class JavaFileFilter extends FileFilter { 
 - @ Override 
 - public boolean accept ( File file ) { 
 - return file ! = null & & ( file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ) ; 
 - } 
 - 
 - @ Override 
 - public String getDescription ( ) { 
 - return " Java Source Code " ; 
 - } 
 - } 
 - 
 - / * * 
 - * Handler for file selection action events . 
 - * / 
 - private class FileSelectionAction extends AbstractAction { 
 - private static final long serialVersionUID = - 1926935338069418119L ; 
 - 
 - / * * Default constructor to setup current action . * / 
 - FileSelectionAction ( ) { 
 - super ( " Select Java File " ) ; 
 - putValue ( Action . MNEMONIC _ KEY , KeyEvent . VK _ S ) ; 
 - } 
 - 
 - @ Override 
 - public void actionPerformed ( ActionEvent event ) { 
 - final JFileChooser chooser = new JFileChooser ( lastDirectory ) ; 
 - final FileFilter filter = new JavaFileFilter ( ) ; 
 - chooser . setFileFilter ( filter ) ; 
 - final Component parent = 
 - SwingUtilities . getRoot ( ParseTreeInfoPanel . this ) ; 
 - chooser . showDialog ( parent , " Open " ) ; 
 - final File file = chooser . getSelectedFile ( ) ; 
 - openFile ( file , parent ) ; 
 - 
 - } 
 - } 
 - 
 - / * * 
 - * Handler for reload action events . 
 - * / 
 - private class ReloadAction extends AbstractAction { 
 - private static final long serialVersionUID = - 1021880396046355863L ; 
 - 
 - / * * Default constructor to setup current action . * / 
 - ReloadAction ( ) { 
 - super ( " Reload Java File " ) ; 
 - putValue ( Action . MNEMONIC _ KEY , KeyEvent . VK _ R ) ; 
 - } 
 - 
 - @ Override 
 - public void actionPerformed ( ActionEvent event ) { 
 - final Component parent = 
 - SwingUtilities . getRoot ( ParseTreeInfoPanel . this ) ; 
 - openFile ( currentFile , parent ) ; 
 - } 
 - } 
 - 
 - }
