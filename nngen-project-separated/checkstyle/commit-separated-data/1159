BLEU SCORE: 0.05522397783539471

TEST MSG: minor : update to new link to sonarqube
GENERATED MSG: spelling : fix typo

TEST DIFF (one line): diff - - git a / README . md b / README . md <nl> index 4d281ce . . 5dc7bbc 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 73 , 7 + 73 , 7 @ @ directory . <nl> [ appveyor img ] : https : / / ci . appveyor . com / api / projects / status / rw6bw3dl9kph6ucc ? svg = true <nl> <nl> [ sonar ] : https : / / sonarqube . com / overview ? id = com . puppycrawl . tools % 3Acheckstyle <nl> - [ sonar img ] : https : / / img . shields . io / sonar / http / nemo . sonarqube . org / com . puppycrawl . tools : checkstyle / tech _ debt . svg ? label = Sonarqube % 20tech % 20debt <nl> + [ sonar img ] : https : / / img . shields . io / sonar / http / sonarqube . com / com . puppycrawl . tools : checkstyle / tech _ debt . svg ? label = Sonarqube % 20tech % 20debt <nl> <nl> [ codacy ] : https : / / www . codacy . com / app / checkstyle / checkstyle <nl> [ codacy img ] : https : / / api . codacy . com / project / badge / 3adf12d434314ba8b38277ea46d3c44b
NEAREST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index 04ea9d6 . . 09349c9 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 10 , 7 + 10 , 7 @ @ <nl> < / inspection _ tool > <nl> < inspection _ tool class = " AbstractClassNeverImplemented " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " AbstractClassWithOnlyOneDirectInheritor " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> - < inspection _ tool class = " AbstractClassWithoutAbstractMethods " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> + < inspection _ tool class = " AbstractClassWithoutAbstractMethods " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " AbstractMethodCallInConstructor " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " AbstractMethodOverridesAbstractMethod " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " AbstractMethodOverridesConcreteMethod " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java <nl> deleted file mode 100644 <nl> index 4b089af . . 0000000 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java <nl> + + + / dev / null <nl> @ @ - 1 , 115 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> - / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> - / / <nl> - / / This library is free software ; you can redistribute it and / or <nl> - / / modify it under the terms of the GNU Lesser General Public <nl> - / / License as published by the Free Software Foundation ; either <nl> - / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> - / / <nl> - / / This library is distributed in the hope that it will be useful , <nl> - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - / / Lesser General Public License for more details . <nl> - / / <nl> - / / You should have received a copy of the GNU Lesser General Public <nl> - / / License along with this library ; if not , write to the Free Software <nl> - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - package com . puppycrawl . tools . checkstyle . gui ; <nl> - <nl> - import java . util . EventObject ; <nl> - <nl> - import javax . swing . CellEditor ; <nl> - import javax . swing . event . CellEditorListener ; <nl> - import javax . swing . event . ChangeEvent ; <nl> - import javax . swing . event . EventListenerList ; <nl> - <nl> - / * * <nl> - * A base class for CellEditors , providing default implementations for all <nl> - * methods in the CellEditor interface and support for managing a series <nl> - * of listeners . <nl> - * <nl> - * < a href = <nl> - * " https : / / docs . oracle . com / cd / E48246 _ 01 / apirefs . 1111 / e13403 / oracle / ide / controls / TreeTableModel . html " > <nl> - * Original & nbsp ; Source & nbsp ; Location < / a > <nl> - * <nl> - * @ author Philip Milne <nl> - * / <nl> - public abstract class AbstractCellEditor implements CellEditor { <nl> - <nl> - / * * <nl> - * A list of event listeners for the cell editor . <nl> - * / <nl> - private final EventListenerList listenerList = new EventListenerList ( ) ; <nl> - <nl> - @ Override <nl> - public Object getCellEditorValue ( ) { <nl> - return null ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean isCellEditable ( EventObject e ) { <nl> - return true ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean shouldSelectCell ( EventObject anEvent ) { <nl> - return false ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean stopCellEditing ( ) { <nl> - return true ; <nl> - } <nl> - <nl> - @ Override <nl> - public void cancelCellEditing ( ) { <nl> - / / No code , tree is read - only <nl> - } <nl> - <nl> - @ Override <nl> - public void addCellEditorListener ( CellEditorListener listener ) { <nl> - listenerList . add ( CellEditorListener . class , listener ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void removeCellEditorListener ( CellEditorListener listener ) { <nl> - listenerList . remove ( CellEditorListener . class , listener ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Notifies all listeners that have registered interest for <nl> - * ' editing stopped ' event . <nl> - * @ see EventListenerList <nl> - * / <nl> - protected void fireEditingStopped ( ) { <nl> - / / Guaranteed to return a non - null array <nl> - final Object [ ] listeners = listenerList . getListenerList ( ) ; <nl> - / / Process the listeners last to first , notifying <nl> - / / those that are interested in this event <nl> - for ( int i = listeners . length - 2 ; i > = 0 ; i - = 2 ) { <nl> - if ( listeners [ i ] = = CellEditorListener . class ) { <nl> - ( ( CellEditorListener ) listeners [ i + 1 ] ) . editingStopped ( new ChangeEvent ( this ) ) ; <nl> - } <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Notifies all listeners that have registered interest for <nl> - * ' editing canceled ' event . <nl> - * @ see EventListenerList <nl> - * / <nl> - protected void fireEditingCanceled ( ) { <nl> - / / Guaranteed to return a non - null array <nl> - final Object [ ] listeners = listenerList . getListenerList ( ) ; <nl> - / / Process the listeners last to first , notifying <nl> - / / those that are interested in this event <nl> - for ( int i = listeners . length - 2 ; i > = 0 ; i - = 2 ) { <nl> - if ( listeners [ i ] = = CellEditorListener . class ) { <nl> - ( ( CellEditorListener ) listeners [ i + 1 ] ) . editingCanceled ( new ChangeEvent ( this ) ) ; <nl> - } <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / BaseCellEditor . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / BaseCellEditor . java <nl> new file mode 100644 <nl> index 0000000 . . 79d604f <nl> - - - / dev / null <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / BaseCellEditor . java <nl> @ @ - 0 , 0 + 1 , 115 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . gui ; <nl> + <nl> + import java . util . EventObject ; <nl> + <nl> + import javax . swing . CellEditor ; <nl> + import javax . swing . event . CellEditorListener ; <nl> + import javax . swing . event . ChangeEvent ; <nl> + import javax . swing . event . EventListenerList ; <nl> + <nl> + / * * <nl> + * A base class for CellEditors , providing default implementations for all <nl> + * methods in the CellEditor interface and support for managing a series <nl> + * of listeners . <nl> + * <nl> + * < a href = <nl> + * " https : / / docs . oracle . com / cd / E48246 _ 01 / apirefs . 1111 / e13403 / oracle / ide / controls / TreeTableModel . html " > <nl> + * Original & nbsp ; Source & nbsp ; Location < / a > <nl> + * <nl> + * @ author Philip Milne <nl> + * / <nl> + public class BaseCellEditor implements CellEditor { <nl> + <nl> + / * * <nl> + * A list of event listeners for the cell editor . <nl> + * / <nl> + private final EventListenerList listenerList = new EventListenerList ( ) ; <nl> + <nl> + @ Override <nl> + public Object getCellEditorValue ( ) { <nl> + return null ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isCellEditable ( EventObject e ) { <nl> + return true ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean shouldSelectCell ( EventObject anEvent ) { <nl> + return false ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean stopCellEditing ( ) { <nl> + return true ; <nl> + } <nl> + <nl> + @ Override <nl> + public void cancelCellEditing ( ) { <nl> + / / No code , tree is read - only <nl> + } <nl> + <nl> + @ Override <nl> + public void addCellEditorListener ( CellEditorListener listener ) { <nl> + listenerList . add ( CellEditorListener . class , listener ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void removeCellEditorListener ( CellEditorListener listener ) { <nl> + listenerList . remove ( CellEditorListener . class , listener ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Notifies all listeners that have registered interest for <nl> + * ' editing stopped ' event . <nl> + * @ see EventListenerList <nl> + * / <nl> + protected void fireEditingStopped ( ) { <nl> + / / Guaranteed to return a non - null array <nl> + final Object [ ] listeners = listenerList . getListenerList ( ) ; <nl> + / / Process the listeners last to first , notifying <nl> + / / those that are interested in this event <nl> + for ( int i = listeners . length - 2 ; i > = 0 ; i - = 2 ) { <nl> + if ( listeners [ i ] = = CellEditorListener . class ) { <nl> + ( ( CellEditorListener ) listeners [ i + 1 ] ) . editingStopped ( new ChangeEvent ( this ) ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Notifies all listeners that have registered interest for <nl> + * ' editing canceled ' event . <nl> + * @ see EventListenerList <nl> + * / <nl> + protected void fireEditingCanceled ( ) { <nl> + / / Guaranteed to return a non - null array <nl> + final Object [ ] listeners = listenerList . getListenerList ( ) ; <nl> + / / Process the listeners last to first , notifying <nl> + / / those that are interested in this event <nl> + for ( int i = listeners . length - 2 ; i > = 0 ; i - = 2 ) { <nl> + if ( listeners [ i ] = = CellEditorListener . class ) { <nl> + ( ( CellEditorListener ) listeners [ i + 1 ] ) . editingCanceled ( new ChangeEvent ( this ) ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> index f608ed8 . . 27574c0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java <nl> @ @ - 194 , 7 + 194 , 7 @ @ public class JTreeTable extends JTable { <nl> * TreeTableCellEditor implementation . Component returned is the <nl> * JTree . <nl> * / <nl> - private class TreeTableCellEditor extends AbstractCellEditor implements <nl> + private class TreeTableCellEditor extends BaseCellEditor implements <nl> TableCellEditor { <nl> @ Override <nl> public Component getTableCellEditorComponent ( JTable table , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> index 4e7c445 . . 065d541 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ import com . google . common . collect . Lists ; <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> <nl> - public abstract class BaseCheckTestSupport { <nl> + public class BaseCheckTestSupport { <nl> / * * <nl> * A brief logger that only display info about errors . <nl> * /

TEST DIFF:
diff - - git a / README . md b / README . md 
 index 4d281ce . . 5dc7bbc 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 73 , 7 + 73 , 7 @ @ directory . 
 [ appveyor img ] : https : / / ci . appveyor . com / api / projects / status / rw6bw3dl9kph6ucc ? svg = true 
 
 [ sonar ] : https : / / sonarqube . com / overview ? id = com . puppycrawl . tools % 3Acheckstyle 
 - [ sonar img ] : https : / / img . shields . io / sonar / http / nemo . sonarqube . org / com . puppycrawl . tools : checkstyle / tech _ debt . svg ? label = Sonarqube % 20tech % 20debt 
 + [ sonar img ] : https : / / img . shields . io / sonar / http / sonarqube . com / com . puppycrawl . tools : checkstyle / tech _ debt . svg ? label = Sonarqube % 20tech % 20debt 
 
 [ codacy ] : https : / / www . codacy . com / app / checkstyle / checkstyle 
 [ codacy img ] : https : / / api . codacy . com / project / badge / 3adf12d434314ba8b38277ea46d3c44b

NEAREST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index 04ea9d6 . . 09349c9 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 10 , 7 + 10 , 7 @ @ 
 < / inspection _ tool > 
 < inspection _ tool class = " AbstractClassNeverImplemented " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " AbstractClassWithOnlyOneDirectInheritor " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 - < inspection _ tool class = " AbstractClassWithoutAbstractMethods " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 + < inspection _ tool class = " AbstractClassWithoutAbstractMethods " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " AbstractMethodCallInConstructor " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " AbstractMethodOverridesAbstractMethod " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " AbstractMethodOverridesConcreteMethod " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java 
 deleted file mode 100644 
 index 4b089af . . 0000000 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / AbstractCellEditor . java 
 + + + / dev / null 
 @ @ - 1 , 115 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / checkstyle : Checks Java source code for adherence to a set of rules . 
 - / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 - / / 
 - / / This library is free software ; you can redistribute it and / or 
 - / / modify it under the terms of the GNU Lesser General Public 
 - / / License as published by the Free Software Foundation ; either 
 - / / version 2 . 1 of the License , or ( at your option ) any later version . 
 - / / 
 - / / This library is distributed in the hope that it will be useful , 
 - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - / / Lesser General Public License for more details . 
 - / / 
 - / / You should have received a copy of the GNU Lesser General Public 
 - / / License along with this library ; if not , write to the Free Software 
 - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - package com . puppycrawl . tools . checkstyle . gui ; 
 - 
 - import java . util . EventObject ; 
 - 
 - import javax . swing . CellEditor ; 
 - import javax . swing . event . CellEditorListener ; 
 - import javax . swing . event . ChangeEvent ; 
 - import javax . swing . event . EventListenerList ; 
 - 
 - / * * 
 - * A base class for CellEditors , providing default implementations for all 
 - * methods in the CellEditor interface and support for managing a series 
 - * of listeners . 
 - * 
 - * < a href = 
 - * " https : / / docs . oracle . com / cd / E48246 _ 01 / apirefs . 1111 / e13403 / oracle / ide / controls / TreeTableModel . html " > 
 - * Original & nbsp ; Source & nbsp ; Location < / a > 
 - * 
 - * @ author Philip Milne 
 - * / 
 - public abstract class AbstractCellEditor implements CellEditor { 
 - 
 - / * * 
 - * A list of event listeners for the cell editor . 
 - * / 
 - private final EventListenerList listenerList = new EventListenerList ( ) ; 
 - 
 - @ Override 
 - public Object getCellEditorValue ( ) { 
 - return null ; 
 - } 
 - 
 - @ Override 
 - public boolean isCellEditable ( EventObject e ) { 
 - return true ; 
 - } 
 - 
 - @ Override 
 - public boolean shouldSelectCell ( EventObject anEvent ) { 
 - return false ; 
 - } 
 - 
 - @ Override 
 - public boolean stopCellEditing ( ) { 
 - return true ; 
 - } 
 - 
 - @ Override 
 - public void cancelCellEditing ( ) { 
 - / / No code , tree is read - only 
 - } 
 - 
 - @ Override 
 - public void addCellEditorListener ( CellEditorListener listener ) { 
 - listenerList . add ( CellEditorListener . class , listener ) ; 
 - } 
 - 
 - @ Override 
 - public void removeCellEditorListener ( CellEditorListener listener ) { 
 - listenerList . remove ( CellEditorListener . class , listener ) ; 
 - } 
 - 
 - / * * 
 - * Notifies all listeners that have registered interest for 
 - * ' editing stopped ' event . 
 - * @ see EventListenerList 
 - * / 
 - protected void fireEditingStopped ( ) { 
 - / / Guaranteed to return a non - null array 
 - final Object [ ] listeners = listenerList . getListenerList ( ) ; 
 - / / Process the listeners last to first , notifying 
 - / / those that are interested in this event 
 - for ( int i = listeners . length - 2 ; i > = 0 ; i - = 2 ) { 
 - if ( listeners [ i ] = = CellEditorListener . class ) { 
 - ( ( CellEditorListener ) listeners [ i + 1 ] ) . editingStopped ( new ChangeEvent ( this ) ) ; 
 - } 
 - } 
 - } 
 - 
 - / * * 
 - * Notifies all listeners that have registered interest for 
 - * ' editing canceled ' event . 
 - * @ see EventListenerList 
 - * / 
 - protected void fireEditingCanceled ( ) { 
 - / / Guaranteed to return a non - null array 
 - final Object [ ] listeners = listenerList . getListenerList ( ) ; 
 - / / Process the listeners last to first , notifying 
 - / / those that are interested in this event 
 - for ( int i = listeners . length - 2 ; i > = 0 ; i - = 2 ) { 
 - if ( listeners [ i ] = = CellEditorListener . class ) { 
 - ( ( CellEditorListener ) listeners [ i + 1 ] ) . editingCanceled ( new ChangeEvent ( this ) ) ; 
 - } 
 - } 
 - } 
 - } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / BaseCellEditor . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / BaseCellEditor . java 
 new file mode 100644 
 index 0000000 . . 79d604f 
 - - - / dev / null 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / BaseCellEditor . java 
 @ @ - 0 , 0 + 1 , 115 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . gui ; 
 + 
 + import java . util . EventObject ; 
 + 
 + import javax . swing . CellEditor ; 
 + import javax . swing . event . CellEditorListener ; 
 + import javax . swing . event . ChangeEvent ; 
 + import javax . swing . event . EventListenerList ; 
 + 
 + / * * 
 + * A base class for CellEditors , providing default implementations for all 
 + * methods in the CellEditor interface and support for managing a series 
 + * of listeners . 
 + * 
 + * < a href = 
 + * " https : / / docs . oracle . com / cd / E48246 _ 01 / apirefs . 1111 / e13403 / oracle / ide / controls / TreeTableModel . html " > 
 + * Original & nbsp ; Source & nbsp ; Location < / a > 
 + * 
 + * @ author Philip Milne 
 + * / 
 + public class BaseCellEditor implements CellEditor { 
 + 
 + / * * 
 + * A list of event listeners for the cell editor . 
 + * / 
 + private final EventListenerList listenerList = new EventListenerList ( ) ; 
 + 
 + @ Override 
 + public Object getCellEditorValue ( ) { 
 + return null ; 
 + } 
 + 
 + @ Override 
 + public boolean isCellEditable ( EventObject e ) { 
 + return true ; 
 + } 
 + 
 + @ Override 
 + public boolean shouldSelectCell ( EventObject anEvent ) { 
 + return false ; 
 + } 
 + 
 + @ Override 
 + public boolean stopCellEditing ( ) { 
 + return true ; 
 + } 
 + 
 + @ Override 
 + public void cancelCellEditing ( ) { 
 + / / No code , tree is read - only 
 + } 
 + 
 + @ Override 
 + public void addCellEditorListener ( CellEditorListener listener ) { 
 + listenerList . add ( CellEditorListener . class , listener ) ; 
 + } 
 + 
 + @ Override 
 + public void removeCellEditorListener ( CellEditorListener listener ) { 
 + listenerList . remove ( CellEditorListener . class , listener ) ; 
 + } 
 + 
 + / * * 
 + * Notifies all listeners that have registered interest for 
 + * ' editing stopped ' event . 
 + * @ see EventListenerList 
 + * / 
 + protected void fireEditingStopped ( ) { 
 + / / Guaranteed to return a non - null array 
 + final Object [ ] listeners = listenerList . getListenerList ( ) ; 
 + / / Process the listeners last to first , notifying 
 + / / those that are interested in this event 
 + for ( int i = listeners . length - 2 ; i > = 0 ; i - = 2 ) { 
 + if ( listeners [ i ] = = CellEditorListener . class ) { 
 + ( ( CellEditorListener ) listeners [ i + 1 ] ) . editingStopped ( new ChangeEvent ( this ) ) ; 
 + } 
 + } 
 + } 
 + 
 + / * * 
 + * Notifies all listeners that have registered interest for 
 + * ' editing canceled ' event . 
 + * @ see EventListenerList 
 + * / 
 + protected void fireEditingCanceled ( ) { 
 + / / Guaranteed to return a non - null array 
 + final Object [ ] listeners = listenerList . getListenerList ( ) ; 
 + / / Process the listeners last to first , notifying 
 + / / those that are interested in this event 
 + for ( int i = listeners . length - 2 ; i > = 0 ; i - = 2 ) { 
 + if ( listeners [ i ] = = CellEditorListener . class ) { 
 + ( ( CellEditorListener ) listeners [ i + 1 ] ) . editingCanceled ( new ChangeEvent ( this ) ) ; 
 + } 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 index f608ed8 . . 27574c0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / JTreeTable . java 
 @ @ - 194 , 7 + 194 , 7 @ @ public class JTreeTable extends JTable { 
 * TreeTableCellEditor implementation . Component returned is the 
 * JTree . 
 * / 
 - private class TreeTableCellEditor extends AbstractCellEditor implements 
 + private class TreeTableCellEditor extends BaseCellEditor implements 
 TableCellEditor { 
 @ Override 
 public Component getTableCellEditorComponent ( JTable table , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 index 4e7c445 . . 065d541 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 @ @ - 20 , 7 + 20 , 7 @ @ import com . google . common . collect . Lists ; 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 
 - public abstract class BaseCheckTestSupport { 
 + public class BaseCheckTestSupport { 
 / * * 
 * A brief logger that only display info about errors . 
 * /
