BLEU SCORE: 0.11451997463067552

TEST MSG: Issue # 3040 : New CLI option to print full tree ( java + comments + javadoc ) .
GENERATED MSG: Issue # 652 : New option to print AST with comment nodes .

TEST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 47f5a84 . . 0ff8df2 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 143 , 7 + 143 , 7 @ @ <nl> <nl> < ! - - Suppressions from PMD configuration - - > <nl> < ! - - validateCli is not reasonable to split as encapsulation of logic will be damaged - - > <nl> - < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 211 " / > <nl> + < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 222 " / > <nl> < ! - - JavadocMethodCheck , JavadocStyleCheck , JavadocUtils . getJavadocTags ( ) - deprecated - - > <nl> < suppress checks = " CyclomaticComplexity " files = " JavadocMethodCheck \ . java " / > <nl> < suppress checks = " CyclomaticComplexity " files = " JavadocStyleCheck \ . java " / > <nl> @ @ - 164 , 7 + 164 , 7 @ @ <nl> lines = " 105 , 143 , 174 " / > <nl> <nl> < ! - - Not reasonable to split as encapsulation of logic will be damaged . - - > <nl> - < suppress checks = " ExecutableStatementCount " files = " Main \ . java " lines = " 108 " / > <nl> - < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 108 " / > <nl> - < suppress checks = " JavaNCSS " files = " Main \ . java " lines = " 108 " / > <nl> + < suppress checks = " ExecutableStatementCount " files = " Main \ . java " lines = " 114 " / > <nl> + < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 114 " / > <nl> + < suppress checks = " JavaNCSS " files = " Main \ . java " lines = " 114 " / > <nl> < / suppressions > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java <nl> index a7ffb7d . . c1b5de6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java <nl> @ @ - 26 , 10 + 26 , 14 @ @ import java . util . regex . Pattern ; <nl> <nl> import antlr . RecognitionException ; <nl> import antlr . TokenStreamException ; <nl> + <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailNode ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> + import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; <nl> import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; <nl> <nl> / * * <nl> @ @ - 67 , 6 + 71 , 58 @ @ public final class AstTreeStringPrinter { <nl> } <nl> <nl> / * * <nl> + * Prints full AST ( java + comments + javadoc ) of the java file . <nl> + * @ param file java file <nl> + * @ return Full tree <nl> + * @ throws IOException Failed to open a file <nl> + * @ throws CheckstyleException error while parsing the file <nl> + * / <nl> + public static String printJavaAndJavadocTree ( File file ) <nl> + throws IOException , CheckstyleException { <nl> + final DetailAST tree = parseFile ( file , true ) ; <nl> + return printJavaAndJavadocTree ( tree ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Prints full tree ( java + comments + javadoc ) of the DetailAST . <nl> + * @ param ast root DetailAST <nl> + * @ return Full tree <nl> + * / <nl> + private static String printJavaAndJavadocTree ( DetailAST ast ) { <nl> + final StringBuilder messageBuilder = new StringBuilder ( ) ; <nl> + DetailAST node = ast ; <nl> + while ( node ! = null ) { <nl> + if ( node . getType ( ) = = TokenTypes . BLOCK _ COMMENT _ BEGIN <nl> + & & JavadocUtils . isJavadocComment ( node ) ) { <nl> + final String javadocTree = parseAndPrintJavadocTree ( node ) ; <nl> + messageBuilder . append ( javadocTree ) ; <nl> + } <nl> + else { <nl> + messageBuilder . append ( getIndentation ( node ) ) <nl> + . append ( getNodeInfo ( node ) ) <nl> + . append ( LINE _ SEPARATOR ) <nl> + . append ( printJavaAndJavadocTree ( node . getFirstChild ( ) ) ) ; <nl> + } <nl> + node = node . getNextSibling ( ) ; <nl> + } <nl> + return messageBuilder . toString ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Parses block comment as javadoc and prints its tree . <nl> + * @ param node block comment begin <nl> + * @ return string javadoc tree <nl> + * / <nl> + private static String parseAndPrintJavadocTree ( DetailAST node ) { <nl> + final JavadocDetailNodeParser parser = new JavadocDetailNodeParser ( ) ; <nl> + final DetailNode tree = parser . parseJavadocAsDetailNode ( node ) . getTree ( ) ; <nl> + <nl> + final String rootPrefix = getIndentation ( node ) ; <nl> + final String prefix = rootPrefix . substring ( 0 , rootPrefix . length ( ) - 2 ) + " " ; <nl> + return DetailNodeTreeStringPrinter . printTree ( tree , rootPrefix , prefix ) ; <nl> + } <nl> + <nl> + / * * <nl> * Parse a file and print the parse tree . <nl> * @ param text the text to parse . <nl> * @ param withComments true to include comments to AST <nl> @ @ - 87 , 9 + 143 , 7 @ @ public final class AstTreeStringPrinter { <nl> DetailAST node = ast ; <nl> while ( node ! = null ) { <nl> messageBuilder . append ( getIndentation ( node ) ) <nl> - . append ( TokenUtils . getTokenName ( node . getType ( ) ) ) . append ( " - > " ) <nl> - . append ( excapeAllControlChars ( node . getText ( ) ) ) . append ( " [ " ) <nl> - . append ( node . getLineNo ( ) ) . append ( ' : ' ) . append ( node . getColumnNo ( ) ) . append ( ' ] ' ) <nl> + . append ( getNodeInfo ( node ) ) <nl> . append ( LINE _ SEPARATOR ) <nl> . append ( printTree ( node . getFirstChild ( ) ) ) ; <nl> node = node . getNextSibling ( ) ; <nl> @ @ - 98 , 6 + 152 , 18 @ @ public final class AstTreeStringPrinter { <nl> } <nl> <nl> / * * <nl> + * Get string representation of the node as token name , <nl> + * node text , line number and column number . <nl> + * @ param node DetailAST <nl> + * @ return node info <nl> + * / <nl> + private static String getNodeInfo ( DetailAST node ) { <nl> + return TokenUtils . getTokenName ( node . getType ( ) ) <nl> + + " - > " + excapeAllControlChars ( node . getText ( ) ) <nl> + + " [ " + node . getLineNo ( ) + ' : ' + node . getColumnNo ( ) + ' ] ' ; <nl> + } <nl> + <nl> + / * * <nl> * Get indentation for an AST node . <nl> * @ param ast the AST to get the indentation for . <nl> * @ return the indentation in String format . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java <nl> index f15925a . . e8b8873 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import java . util . regex . Pattern ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailNode ; <nl> import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> + import com . puppycrawl . tools . checkstyle . api . JavadocTokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; <nl> <nl> @ @ - 57 , 7 + 58 , 7 @ @ public final class DetailNodeTreeStringPrinter { <nl> * @ throws IOException if the file could not be read . <nl> * / <nl> public static String printFileAst ( File file ) throws IOException { <nl> - return printTree ( parseFile ( file ) ) ; <nl> + return printTree ( parseFile ( file ) , " " , " " ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 74 , 18 + 75 , 26 @ @ public final class DetailNodeTreeStringPrinter { <nl> / * * <nl> * Print AST . <nl> * @ param ast the root AST node . <nl> + * @ param rootPrefix prefix for the root node <nl> + * @ param prefix prefix for other nodes <nl> * @ return string AST . <nl> * / <nl> - private static String printTree ( DetailNode ast ) { <nl> + public static String printTree ( DetailNode ast , String rootPrefix , String prefix ) { <nl> final StringBuilder messageBuilder = new StringBuilder ( ) ; <nl> DetailNode node = ast ; <nl> while ( node ! = null ) { <nl> + if ( node . getType ( ) = = JavadocTokenTypes . JAVADOC ) { <nl> + messageBuilder . append ( rootPrefix ) ; <nl> + } <nl> + else { <nl> + messageBuilder . append ( prefix ) ; <nl> + } <nl> messageBuilder . append ( getIndentation ( node ) ) <nl> . append ( JavadocUtils . getTokenName ( node . getType ( ) ) ) . append ( " - > " ) <nl> . append ( excapeAllControlChars ( node . getText ( ) ) ) . append ( " [ " ) <nl> . append ( node . getLineNumber ( ) ) . append ( ' : ' ) . append ( node . getColumnNumber ( ) ) <nl> . append ( ' ] ' ) . append ( LINE _ SEPARATOR ) <nl> - . append ( printTree ( JavadocUtils . getFirstChild ( node ) ) ) ; <nl> + . append ( printTree ( JavadocUtils . getFirstChild ( node ) , rootPrefix , prefix ) ) ; <nl> node = JavadocUtils . getNextSibling ( node ) ; <nl> } <nl> return messageBuilder . toString ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index aa06db5 . . e54750c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 88 , 6 + 88 , 12 @ @ public final class Main { <nl> / * * NAme for the option ' - - javadocTree ' . * / <nl> private static final String OPTION _ JAVADOC _ TREE _ NAME = " javadocTree " ; <nl> <nl> + / * * Name for the option ' - J ' . * / <nl> + private static final String OPTION _ CAPITAL _ J _ NAME = " J " ; <nl> + <nl> + / * * Name for the option ' - - treeWithJavadoc ' . * / <nl> + private static final String OPTION _ TREE _ JAVADOC _ NAME = " treeWithJavadoc " ; <nl> + <nl> / * * Name for ' xml ' format . * / <nl> private static final String XML _ FORMAT _ NAME = " xml " ; <nl> <nl> @ @ - 154 , 6 + 160 , 11 @ @ public final class Main { <nl> final String stringAst = DetailNodeTreeStringPrinter . printFileAst ( file ) ; <nl> System . out . print ( stringAst ) ; <nl> } <nl> + else if ( commandLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { <nl> + final File file = config . files . get ( 0 ) ; <nl> + final String stringAst = AstTreeStringPrinter . printJavaAndJavadocTree ( file ) ; <nl> + System . out . print ( stringAst ) ; <nl> + } <nl> else { <nl> / / run Checker <nl> errorCounter = runCheckstyle ( config ) ; <nl> @ @ - 216 , 7 + 227 , 7 @ @ public final class Main { <nl> } <nl> / / ensure there is no conflicting options <nl> else if ( cmdLine . hasOption ( OPTION _ T _ NAME ) | | cmdLine . hasOption ( OPTION _ CAPITAL _ T _ NAME ) <nl> - | | cmdLine . hasOption ( OPTION _ J _ NAME ) ) { <nl> + | | cmdLine . hasOption ( OPTION _ J _ NAME ) | | cmdLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { <nl> if ( cmdLine . hasOption ( OPTION _ C _ NAME ) | | cmdLine . hasOption ( OPTION _ P _ NAME ) <nl> | | cmdLine . hasOption ( OPTION _ F _ NAME ) | | cmdLine . hasOption ( OPTION _ O _ NAME ) ) { <nl> result . add ( " Option ' - t ' cannot be used with other options . " ) ; <nl> @ @ - 482 , 6 + 493 , 8 @ @ public final class Main { <nl> " Print Abstract Syntax Tree ( AST ) of the file including comments " ) ; <nl> options . addOption ( OPTION _ J _ NAME , OPTION _ JAVADOC _ TREE _ NAME , false , <nl> " Print Parse tree of the Javadoc comment " ) ; <nl> + options . addOption ( OPTION _ CAPITAL _ J _ NAME , OPTION _ TREE _ JAVADOC _ NAME , false , <nl> + " Print full Abstract Syntax Tree of the file " ) ; <nl> return options ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> index 0a20ef2 . . fff95d6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> @ @ - 70 , 4 + 70 , 15 @ @ public class AstTreeStringPrinterTest { <nl> . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> Assert . assertEquals ( expected , actual ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testParseFileWithJavadoc ( ) throws Exception { <nl> + final String actual = AstTreeStringPrinter . printJavaAndJavadocTree ( <nl> + new File ( getPath ( " InputAstTreeStringPrinterJavadoc . java " ) ) ) <nl> + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> + final String expected = Files . toString ( new File ( <nl> + getPath ( " expectedInputAstTreeStringPrinterJavadoc . txt " ) ) , Charsets . UTF _ 8 ) <nl> + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> + Assert . assertEquals ( expected , actual ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index fd80e56 . . 18d9d2c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 50 , 6 + 50 , 21 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> <nl> public class MainTest { <nl> + private static final String USAGE = String . format ( Locale . ROOT , <nl> + " usage : java com . puppycrawl . tools . checkstyle . Main [ options ] - c < config . xml > " <nl> + + " file . . . % n " <nl> + + " - c < arg > Sets the check configuration file to use . % n " <nl> + + " - f < arg > Sets the output format . ( plain | xml ) . Defaults to " <nl> + + " plain % n " <nl> + + " - j , - - javadocTree Print Parse tree of the Javadoc comment % n " <nl> + + " - J , - - treeWithJavadoc Print full Abstract Syntax Tree of the file % n " <nl> + + " - o < arg > Sets the output file . Defaults to stdout % n " <nl> + + " - p < arg > Loads the properties file % n " <nl> + + " - t , - - tree Print Abstract Syntax Tree ( AST ) of the file % n " <nl> + + " - T , - - treeWithComments Print Abstract Syntax Tree ( AST ) of the file " <nl> + + " including comments % n " <nl> + + " - v Print product version and exit % n " ) ; <nl> + <nl> @ Rule <nl> public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> @ Rule <nl> @ @ - 105 , 19 + 120 , 8 @ @ public class MainTest { <nl> exit . checkAssertionAfterwards ( new Assertion ( ) { <nl> @ Override <nl> public void checkAssertion ( ) { <nl> - final String usage = String . format ( Locale . ROOT , " Unrecognized option : - w % n " <nl> - + " usage : java com . puppycrawl . tools . checkstyle . Main [ options ] - c < config . xml > " <nl> - + " file . . . % n " <nl> - + " - c < arg > Sets the check configuration file to use . % n " <nl> - + " - f < arg > Sets the output format . ( plain | xml ) . Defaults to " <nl> - + " plain % n " <nl> - + " - j , - - javadocTree Print Parse tree of the Javadoc comment % n " <nl> - + " - o < arg > Sets the output file . Defaults to stdout % n " <nl> - + " - p < arg > Loads the properties file % n " <nl> - + " - t , - - tree Print Abstract Syntax Tree ( AST ) of the file % n " <nl> - + " - T , - - treeWithComments Print Abstract Syntax Tree ( AST ) of the file " <nl> - + " including comments % n " <nl> - + " - v Print product version and exit % n " ) ; <nl> + final String usage = String . format ( Locale . ROOT , " Unrecognized option : - w % n " ) <nl> + + USAGE ; <nl> assertEquals ( usage , systemOut . getLog ( ) ) ; <nl> assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> } <nl> @ @ - 753 , 6 + 757 , 22 @ @ public class MainTest { <nl> } <nl> <nl> @ Test <nl> + public void testPrintFullTreeOption ( ) throws Exception { <nl> + final String expected = Files . toString ( new File ( <nl> + getPath ( " astprinter / expectedInputAstTreeStringPrinterJavadoc . txt " ) ) , <nl> + Charsets . UTF _ 8 ) . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; <nl> + <nl> + exit . checkAssertionAfterwards ( new Assertion ( ) { <nl> + @ Override <nl> + public void checkAssertion ( ) { <nl> + assertEquals ( expected , systemOut . getLog ( ) . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ) ; <nl> + assertEquals ( " " , systemErr . getLog ( ) ) ; <nl> + } <nl> + } ) ; <nl> + Main . main ( " - J " , getPath ( " astprinter / InputAstTreeStringPrinterJavadoc . java " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testConflictingOptionsTvsC ( ) throws Exception { <nl> <nl> exit . expectSystemExitWithStatus ( - 1 ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadoc . java <nl> new file mode 100644 <nl> index 0000000 . . d1cc6ad <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadoc . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + / * * javadoc * / <nl> + class InputAstTreeStringPrinterJavadoc { <nl> + / * not javadoc * / <nl> + void m ( ) { } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt <nl> new file mode 100644 <nl> index 0000000 . . 3a4bf64 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt <nl> @ @ - 0 , 0 + 1 , 40 @ @ <nl> + PACKAGE _ DEF - > package [ 1 : 0 ] <nl> + | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] <nl> + | - - DOT - > . [ 1 : 28 ] <nl> + | | - - DOT - > . [ 1 : 22 ] <nl> + | | | - - DOT - > . [ 1 : 11 ] <nl> + | | | | - - IDENT - > com [ 1 : 8 ] <nl> + | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] <nl> + | | ` - - IDENT - > tools [ 1 : 23 ] <nl> + | ` - - IDENT - > checkstyle [ 1 : 29 ] <nl> + ` - - SEMI - > ; [ 1 : 39 ] <nl> + CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] <nl> + | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] <nl> + | - - JAVADOC - > javadoc < EOF > [ 3 : 0 ] <nl> + | | - - TEXT - > javadoc [ 3 : 0 ] <nl> + | | | - - CHAR - > j [ 3 : 0 ] <nl> + | | | - - CHAR - > a [ 3 : 1 ] <nl> + | | | - - CHAR - > v [ 3 : 2 ] <nl> + | | | - - CHAR - > a [ 3 : 3 ] <nl> + | | | - - CHAR - > d [ 3 : 4 ] <nl> + | | | - - CHAR - > o [ 3 : 5 ] <nl> + | | ` - - CHAR - > c [ 3 : 6 ] <nl> + | ` - - EOF - > < EOF > [ 3 : 7 ] <nl> + | - - LITERAL _ CLASS - > class [ 4 : 0 ] <nl> + | - - IDENT - > InputAstTreeStringPrinterJavadoc [ 4 : 6 ] <nl> + ` - - OBJBLOCK - > OBJBLOCK [ 4 : 39 ] <nl> + | - - LCURLY - > { [ 4 : 39 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 6 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 6 : 4 ] <nl> + | | - - TYPE - > TYPE [ 6 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 5 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > not javadoc [ 5 : 6 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 5 : 16 ] <nl> + | | ` - - LITERAL _ VOID - > void [ 6 : 4 ] <nl> + | | - - IDENT - > m [ 6 : 9 ] <nl> + | | - - LPAREN - > ( [ 6 : 10 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 6 : 11 ] <nl> + | | - - RPAREN - > ) [ 6 : 11 ] <nl> + | ` - - SLIST - > { [ 6 : 12 ] <nl> + | ` - - RCURLY - > } [ 6 : 13 ] <nl> + ` - - RCURLY - > } [ 7 : 0 ] <nl> diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm <nl> index 2918fc6 . . 1c5dd8d 100644 <nl> - - - a / src / xdocs / cmdline . xml . vm <nl> + + + b / src / xdocs / cmdline . xml . vm <nl> @ @ - 38 , 7 + 38 , 7 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ <nl> com . puppycrawl . tools . checkstyle . Main \ <nl> - c & lt ; configurationFile & gt ; \ <nl> [ - f & lt ; format & gt ; ] [ - p & lt ; propertiesFile & gt ; ] [ - o & lt ; file & gt ; ] \ <nl> - [ - t | - - tree ] [ - T | - - treeWithComments ] [ - j | - - javadocTree ] [ - v ] \ <nl> + [ - t | - - tree ] [ - T | - - treeWithComments ] [ - J | treeWithJavadoc ] [ - j | - - javadocTree ] [ - v ] \ <nl> file . . . <nl> < / source > <nl> < / p > <nl> @ @ - 82 , 6 + 82 , 10 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ <nl> cannot be used other options and requires exactly one file to run on to be specified . <nl> < / li > <nl> < li > <nl> + < code > - J , - - treeWithJavadoc < / code > - print Abstract Syntax Tree ( AST ) with Javadoc nodes and comment nodes <nl> + of the checked file . The option cannot be used other options and requires exactly one file to run on to be specified . <nl> + < / li > <nl> + < li > <nl> < code > - j , - - javadocTree < / code > - print Parse Tree of the Javadoc comment . <nl> The file have to contain < b > only Javadoc comment content < / b > without including ' / * * ' and ' * / ' at the beginning and at the end respectively . <nl> For example :
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java <nl> index 1701a98 . . b8d7ab3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java <nl> @ @ - 24 , 7 + 24 , 6 @ @ import java . awt . GridLayout ; <nl> import java . awt . event . ActionEvent ; <nl> import java . awt . event . KeyEvent ; <nl> import java . io . File ; <nl> - import java . io . IOException ; <nl> <nl> import javax . swing . AbstractAction ; <nl> import javax . swing . JButton ; <nl> @ @ - 37 , 8 + 36 , 7 @ @ import javax . swing . JSplitPane ; <nl> import javax . swing . JTextArea ; <nl> import javax . swing . filechooser . FileFilter ; <nl> <nl> - import antlr . ANTLRException ; <nl> - import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> <nl> / * * <nl> * Displays information about a parse tree . <nl> @ @ - 55 , 8 + 53 , 6 @ @ public class MainFrame extends JFrame { <nl> private final transient MainFrameModel model = new MainFrameModel ( ) ; <nl> / * * Reload action . * / <nl> private final ReloadAction reloadAction = new ReloadAction ( ) ; <nl> - / * * Parse tree model . * / <nl> - private transient ParseTreeTableModel parseTreeTableModel ; <nl> / * * Code text area . * / <nl> private JTextArea textArea ; <nl> / * * Tree table . * / <nl> @ @ - 75 , 8 + 71 , 7 @ @ public class MainFrame extends JFrame { <nl> textArea . setEditable ( false ) ; <nl> final JScrollPane textAreaScrollPane = new JScrollPane ( textArea ) ; <nl> <nl> - parseTreeTableModel = new ParseTreeTableModel ( null ) ; <nl> - treeTable = new JTreeTable ( parseTreeTableModel ) ; <nl> + treeTable = new JTreeTable ( model . getParseTreeTableModel ( ) ) ; <nl> treeTable . setEditor ( textArea ) ; <nl> treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; <nl> final JScrollPane treeTableScrollPane = new JScrollPane ( treeTable ) ; <nl> @ @ - 121 , 31 + 116 , 13 @ @ public class MainFrame extends JFrame { <nl> if ( sourceFile ! = null ) { <nl> try { <nl> setTitle ( " Checkstyle GUI : " + sourceFile . getName ( ) ) ; <nl> - final DetailAST parseTree = model . parseFile ( sourceFile ) ; <nl> - parseTreeTableModel . setParseTree ( parseTree ) ; <nl> + model . openFile ( sourceFile ) ; <nl> reloadAction . setEnabled ( true ) ; <nl> - <nl> - final String [ ] sourceLines = model . getFileText ( sourceFile ) . toLinesArray ( ) ; <nl> - <nl> - / / clear for each new file <nl> - model . clearLinesToPosition ( ) ; <nl> - / / starts line counting at 1 <nl> - model . addLineToPosition ( 0 ) ; <nl> - <nl> - / / clean the text area before inserting the lines of the new file <nl> - textArea . setText ( " " ) ; <nl> - <nl> - / / insert the contents of the file to the text area <nl> - for ( final String element : sourceLines ) { <nl> - model . addLineToPosition ( textArea . getText ( ) . length ( ) ) ; <nl> - textArea . append ( element + System . lineSeparator ( ) ) ; <nl> - } <nl> - <nl> + textArea . setText ( model . getText ( ) ) ; <nl> treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; <nl> } <nl> - catch ( final IOException | ANTLRException ex ) { <nl> - JOptionPane . showMessageDialog ( this , <nl> - " Could not parse " + sourceFile + " : " + ex . getMessage ( ) ) ; <nl> + catch ( final CheckstyleException ex ) { <nl> + JOptionPane . showMessageDialog ( this , ex . getMessage ( ) ) ; <nl> } <nl> } <nl> } <nl> @ @ - 188 , 7 + 165 , 7 @ @ public class MainFrame extends JFrame { <nl> private static class JavaFileFilter extends FileFilter { <nl> @ Override <nl> public boolean accept ( File file ) { <nl> - return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; <nl> + return MainFrameModel . shouldAcceptFile ( file ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> index 8adc769 . . a4a556f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> @ @ - 23 , 11 + 23 , 13 @ @ import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . ArrayList ; <nl> import java . util . List ; <nl> + import java . util . Locale ; <nl> <nl> import antlr . ANTLRException ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . FileContents ; <nl> import com . puppycrawl . tools . checkstyle . api . FileText ; <nl> @ @ - 41 , 32 + 43 , 43 @ @ public class MainFrameModel { <nl> / * * Lines to position map . * / <nl> private final List < Integer > linesToPosition = new ArrayList < > ( ) ; <nl> <nl> + / * * Parse tree model . * / <nl> + private final ParseTreeTableModel parseTreeTableModel ; <nl> + <nl> / * * The file which is being parsed . * / <nl> private File currentFile ; <nl> <nl> + / * * Text for a frame ' s text area . * / <nl> + private String text ; <nl> + <nl> + / * * Instantiate the model . * / <nl> + public MainFrameModel ( ) { <nl> + parseTreeTableModel = new ParseTreeTableModel ( null ) ; <nl> + } <nl> + <nl> / * * <nl> - * Parse a file and return the parse tree . <nl> - * @ param file the file to parse . <nl> - * @ return the root node of the parse tree . <nl> - * @ throws IOException if the file could not be read . <nl> - * @ throws ANTLRException if the file is not a Java source . <nl> + * Get parse tree table model . <nl> + * @ return parse tree table model . <nl> * / <nl> - public DetailAST parseFile ( File file ) throws IOException , ANTLRException { <nl> - currentFile = file ; <nl> - final FileText text = getFileText ( file ) ; <nl> - final FileContents contents = new FileContents ( text ) ; <nl> - return TreeWalker . parse ( contents ) ; <nl> + public ParseTreeTableModel getParseTreeTableModel ( ) { <nl> + return parseTreeTableModel ; <nl> } <nl> <nl> / * * <nl> - * Get FileText from a file . <nl> - * @ param file the file to get the FileText from . <nl> - * @ return the FileText . <nl> - * @ throws IOException if the file could not be read . <nl> + * Get text to display in a text area . <nl> + * @ return text to display in a text area . <nl> * / <nl> - public FileText getFileText ( File file ) throws IOException { <nl> - return new FileText ( file . getAbsoluteFile ( ) , <nl> - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> + public String getText ( ) { <nl> + return text ; <nl> + } <nl> + <nl> + / * * <nl> + * Whether a file chooser should accept the file as a source file . <nl> + * @ param file the file to check . <nl> + * @ return true if the file should be accepted . <nl> + * / <nl> + public static boolean shouldAcceptFile ( File file ) { <nl> + return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 98 , 16 + 111 , 59 @ @ public class MainFrameModel { <nl> } <nl> <nl> / * * <nl> - * Add a new value into lines to position map . <nl> - * @ param value Value to be added into position map . <nl> + * Open file and load the file . <nl> + * @ param file the file to open . <nl> + * @ throws CheckstyleException if the file can not be parsed . <nl> * / <nl> - public void addLineToPosition ( int value ) { <nl> - linesToPosition . add ( value ) ; <nl> + public void openFile ( File file ) throws CheckstyleException { <nl> + try { <nl> + currentFile = file ; <nl> + final DetailAST parseTree = parseFile ( file ) ; <nl> + parseTreeTableModel . setParseTree ( parseTree ) ; <nl> + final String [ ] sourceLines = getFileText ( file ) . toLinesArray ( ) ; <nl> + <nl> + / / clear for each new file <nl> + linesToPosition . clear ( ) ; <nl> + / / starts line counting at 1 <nl> + linesToPosition . add ( 0 ) ; <nl> + <nl> + final StringBuilder sb = new StringBuilder ( ) ; <nl> + / / insert the contents of the file to the text area <nl> + for ( final String element : sourceLines ) { <nl> + linesToPosition . add ( sb . length ( ) ) ; <nl> + sb . append ( element ) . append ( System . lineSeparator ( ) ) ; <nl> + } <nl> + text = sb . toString ( ) ; <nl> + } <nl> + catch ( IOException | ANTLRException ex ) { <nl> + final String exceptionMsg = String . format ( Locale . ROOT , <nl> + " % s occurred while opening file % s . " , <nl> + ex . getClass ( ) . getSimpleName ( ) , file . getPath ( ) ) ; <nl> + throw new CheckstyleException ( exceptionMsg , ex ) ; <nl> + } <nl> } <nl> <nl> - / * * Clear lines to position map . * / <nl> - public void clearLinesToPosition ( ) { <nl> - linesToPosition . clear ( ) ; <nl> + / * * <nl> + * Parse a file and return the parse tree . <nl> + * @ param file the file to parse . <nl> + * @ return the root node of the parse tree . <nl> + * @ throws IOException if the file could not be read . <nl> + * @ throws ANTLRException if the file is not a Java source . <nl> + * / <nl> + public DetailAST parseFile ( File file ) throws IOException , ANTLRException { <nl> + final FileText fileText = getFileText ( file ) ; <nl> + final FileContents contents = new FileContents ( fileText ) ; <nl> + return TreeWalker . parse ( contents ) ; <nl> } <nl> <nl> + / * * <nl> + * Get FileText from a file . <nl> + * @ param file the file to get the FileText from . <nl> + * @ return the FileText . <nl> + * @ throws IOException if the file could not be read . <nl> + * / <nl> + public FileText getFileText ( File file ) throws IOException { <nl> + return new FileText ( file . getAbsoluteFile ( ) , <nl> + System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 47f5a84 . . 0ff8df2 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 143 , 7 + 143 , 7 @ @ 
 
 < ! - - Suppressions from PMD configuration - - > 
 < ! - - validateCli is not reasonable to split as encapsulation of logic will be damaged - - > 
 - < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 211 " / > 
 + < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 222 " / > 
 < ! - - JavadocMethodCheck , JavadocStyleCheck , JavadocUtils . getJavadocTags ( ) - deprecated - - > 
 < suppress checks = " CyclomaticComplexity " files = " JavadocMethodCheck \ . java " / > 
 < suppress checks = " CyclomaticComplexity " files = " JavadocStyleCheck \ . java " / > 
 @ @ - 164 , 7 + 164 , 7 @ @ 
 lines = " 105 , 143 , 174 " / > 
 
 < ! - - Not reasonable to split as encapsulation of logic will be damaged . - - > 
 - < suppress checks = " ExecutableStatementCount " files = " Main \ . java " lines = " 108 " / > 
 - < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 108 " / > 
 - < suppress checks = " JavaNCSS " files = " Main \ . java " lines = " 108 " / > 
 + < suppress checks = " ExecutableStatementCount " files = " Main \ . java " lines = " 114 " / > 
 + < suppress checks = " CyclomaticComplexity " files = " Main \ . java " lines = " 114 " / > 
 + < suppress checks = " JavaNCSS " files = " Main \ . java " lines = " 114 " / > 
 < / suppressions > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java 
 index a7ffb7d . . c1b5de6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java 
 @ @ - 26 , 10 + 26 , 14 @ @ import java . util . regex . Pattern ; 
 
 import antlr . RecognitionException ; 
 import antlr . TokenStreamException ; 
 + 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailNode ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 import com . puppycrawl . tools . checkstyle . api . FileText ; 
 + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 + import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; 
 import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; 
 
 / * * 
 @ @ - 67 , 6 + 71 , 58 @ @ public final class AstTreeStringPrinter { 
 } 
 
 / * * 
 + * Prints full AST ( java + comments + javadoc ) of the java file . 
 + * @ param file java file 
 + * @ return Full tree 
 + * @ throws IOException Failed to open a file 
 + * @ throws CheckstyleException error while parsing the file 
 + * / 
 + public static String printJavaAndJavadocTree ( File file ) 
 + throws IOException , CheckstyleException { 
 + final DetailAST tree = parseFile ( file , true ) ; 
 + return printJavaAndJavadocTree ( tree ) ; 
 + } 
 + 
 + / * * 
 + * Prints full tree ( java + comments + javadoc ) of the DetailAST . 
 + * @ param ast root DetailAST 
 + * @ return Full tree 
 + * / 
 + private static String printJavaAndJavadocTree ( DetailAST ast ) { 
 + final StringBuilder messageBuilder = new StringBuilder ( ) ; 
 + DetailAST node = ast ; 
 + while ( node ! = null ) { 
 + if ( node . getType ( ) = = TokenTypes . BLOCK _ COMMENT _ BEGIN 
 + & & JavadocUtils . isJavadocComment ( node ) ) { 
 + final String javadocTree = parseAndPrintJavadocTree ( node ) ; 
 + messageBuilder . append ( javadocTree ) ; 
 + } 
 + else { 
 + messageBuilder . append ( getIndentation ( node ) ) 
 + . append ( getNodeInfo ( node ) ) 
 + . append ( LINE _ SEPARATOR ) 
 + . append ( printJavaAndJavadocTree ( node . getFirstChild ( ) ) ) ; 
 + } 
 + node = node . getNextSibling ( ) ; 
 + } 
 + return messageBuilder . toString ( ) ; 
 + } 
 + 
 + / * * 
 + * Parses block comment as javadoc and prints its tree . 
 + * @ param node block comment begin 
 + * @ return string javadoc tree 
 + * / 
 + private static String parseAndPrintJavadocTree ( DetailAST node ) { 
 + final JavadocDetailNodeParser parser = new JavadocDetailNodeParser ( ) ; 
 + final DetailNode tree = parser . parseJavadocAsDetailNode ( node ) . getTree ( ) ; 
 + 
 + final String rootPrefix = getIndentation ( node ) ; 
 + final String prefix = rootPrefix . substring ( 0 , rootPrefix . length ( ) - 2 ) + " " ; 
 + return DetailNodeTreeStringPrinter . printTree ( tree , rootPrefix , prefix ) ; 
 + } 
 + 
 + / * * 
 * Parse a file and print the parse tree . 
 * @ param text the text to parse . 
 * @ param withComments true to include comments to AST 
 @ @ - 87 , 9 + 143 , 7 @ @ public final class AstTreeStringPrinter { 
 DetailAST node = ast ; 
 while ( node ! = null ) { 
 messageBuilder . append ( getIndentation ( node ) ) 
 - . append ( TokenUtils . getTokenName ( node . getType ( ) ) ) . append ( " - > " ) 
 - . append ( excapeAllControlChars ( node . getText ( ) ) ) . append ( " [ " ) 
 - . append ( node . getLineNo ( ) ) . append ( ' : ' ) . append ( node . getColumnNo ( ) ) . append ( ' ] ' ) 
 + . append ( getNodeInfo ( node ) ) 
 . append ( LINE _ SEPARATOR ) 
 . append ( printTree ( node . getFirstChild ( ) ) ) ; 
 node = node . getNextSibling ( ) ; 
 @ @ - 98 , 6 + 152 , 18 @ @ public final class AstTreeStringPrinter { 
 } 
 
 / * * 
 + * Get string representation of the node as token name , 
 + * node text , line number and column number . 
 + * @ param node DetailAST 
 + * @ return node info 
 + * / 
 + private static String getNodeInfo ( DetailAST node ) { 
 + return TokenUtils . getTokenName ( node . getType ( ) ) 
 + + " - > " + excapeAllControlChars ( node . getText ( ) ) 
 + + " [ " + node . getLineNo ( ) + ' : ' + node . getColumnNo ( ) + ' ] ' ; 
 + } 
 + 
 + / * * 
 * Get indentation for an AST node . 
 * @ param ast the AST to get the indentation for . 
 * @ return the indentation in String format . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java 
 index f15925a . . e8b8873 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import java . util . regex . Pattern ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . DetailNode ; 
 import com . puppycrawl . tools . checkstyle . api . FileText ; 
 + import com . puppycrawl . tools . checkstyle . api . JavadocTokenTypes ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; 
 
 @ @ - 57 , 7 + 58 , 7 @ @ public final class DetailNodeTreeStringPrinter { 
 * @ throws IOException if the file could not be read . 
 * / 
 public static String printFileAst ( File file ) throws IOException { 
 - return printTree ( parseFile ( file ) ) ; 
 + return printTree ( parseFile ( file ) , " " , " " ) ; 
 } 
 
 / * * 
 @ @ - 74 , 18 + 75 , 26 @ @ public final class DetailNodeTreeStringPrinter { 
 / * * 
 * Print AST . 
 * @ param ast the root AST node . 
 + * @ param rootPrefix prefix for the root node 
 + * @ param prefix prefix for other nodes 
 * @ return string AST . 
 * / 
 - private static String printTree ( DetailNode ast ) { 
 + public static String printTree ( DetailNode ast , String rootPrefix , String prefix ) { 
 final StringBuilder messageBuilder = new StringBuilder ( ) ; 
 DetailNode node = ast ; 
 while ( node ! = null ) { 
 + if ( node . getType ( ) = = JavadocTokenTypes . JAVADOC ) { 
 + messageBuilder . append ( rootPrefix ) ; 
 + } 
 + else { 
 + messageBuilder . append ( prefix ) ; 
 + } 
 messageBuilder . append ( getIndentation ( node ) ) 
 . append ( JavadocUtils . getTokenName ( node . getType ( ) ) ) . append ( " - > " ) 
 . append ( excapeAllControlChars ( node . getText ( ) ) ) . append ( " [ " ) 
 . append ( node . getLineNumber ( ) ) . append ( ' : ' ) . append ( node . getColumnNumber ( ) ) 
 . append ( ' ] ' ) . append ( LINE _ SEPARATOR ) 
 - . append ( printTree ( JavadocUtils . getFirstChild ( node ) ) ) ; 
 + . append ( printTree ( JavadocUtils . getFirstChild ( node ) , rootPrefix , prefix ) ) ; 
 node = JavadocUtils . getNextSibling ( node ) ; 
 } 
 return messageBuilder . toString ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index aa06db5 . . e54750c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 88 , 6 + 88 , 12 @ @ public final class Main { 
 / * * NAme for the option ' - - javadocTree ' . * / 
 private static final String OPTION _ JAVADOC _ TREE _ NAME = " javadocTree " ; 
 
 + / * * Name for the option ' - J ' . * / 
 + private static final String OPTION _ CAPITAL _ J _ NAME = " J " ; 
 + 
 + / * * Name for the option ' - - treeWithJavadoc ' . * / 
 + private static final String OPTION _ TREE _ JAVADOC _ NAME = " treeWithJavadoc " ; 
 + 
 / * * Name for ' xml ' format . * / 
 private static final String XML _ FORMAT _ NAME = " xml " ; 
 
 @ @ - 154 , 6 + 160 , 11 @ @ public final class Main { 
 final String stringAst = DetailNodeTreeStringPrinter . printFileAst ( file ) ; 
 System . out . print ( stringAst ) ; 
 } 
 + else if ( commandLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { 
 + final File file = config . files . get ( 0 ) ; 
 + final String stringAst = AstTreeStringPrinter . printJavaAndJavadocTree ( file ) ; 
 + System . out . print ( stringAst ) ; 
 + } 
 else { 
 / / run Checker 
 errorCounter = runCheckstyle ( config ) ; 
 @ @ - 216 , 7 + 227 , 7 @ @ public final class Main { 
 } 
 / / ensure there is no conflicting options 
 else if ( cmdLine . hasOption ( OPTION _ T _ NAME ) | | cmdLine . hasOption ( OPTION _ CAPITAL _ T _ NAME ) 
 - | | cmdLine . hasOption ( OPTION _ J _ NAME ) ) { 
 + | | cmdLine . hasOption ( OPTION _ J _ NAME ) | | cmdLine . hasOption ( OPTION _ CAPITAL _ J _ NAME ) ) { 
 if ( cmdLine . hasOption ( OPTION _ C _ NAME ) | | cmdLine . hasOption ( OPTION _ P _ NAME ) 
 | | cmdLine . hasOption ( OPTION _ F _ NAME ) | | cmdLine . hasOption ( OPTION _ O _ NAME ) ) { 
 result . add ( " Option ' - t ' cannot be used with other options . " ) ; 
 @ @ - 482 , 6 + 493 , 8 @ @ public final class Main { 
 " Print Abstract Syntax Tree ( AST ) of the file including comments " ) ; 
 options . addOption ( OPTION _ J _ NAME , OPTION _ JAVADOC _ TREE _ NAME , false , 
 " Print Parse tree of the Javadoc comment " ) ; 
 + options . addOption ( OPTION _ CAPITAL _ J _ NAME , OPTION _ TREE _ JAVADOC _ NAME , false , 
 + " Print full Abstract Syntax Tree of the file " ) ; 
 return options ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 index 0a20ef2 . . fff95d6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 @ @ - 70 , 4 + 70 , 15 @ @ public class AstTreeStringPrinterTest { 
 . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 Assert . assertEquals ( expected , actual ) ; 
 } 
 + 
 + @ Test 
 + public void testParseFileWithJavadoc ( ) throws Exception { 
 + final String actual = AstTreeStringPrinter . printJavaAndJavadocTree ( 
 + new File ( getPath ( " InputAstTreeStringPrinterJavadoc . java " ) ) ) 
 + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 + final String expected = Files . toString ( new File ( 
 + getPath ( " expectedInputAstTreeStringPrinterJavadoc . txt " ) ) , Charsets . UTF _ 8 ) 
 + . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 + Assert . assertEquals ( expected , actual ) ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index fd80e56 . . 18d9d2c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 50 , 6 + 50 , 21 @ @ import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 
 public class MainTest { 
 + private static final String USAGE = String . format ( Locale . ROOT , 
 + " usage : java com . puppycrawl . tools . checkstyle . Main [ options ] - c < config . xml > " 
 + + " file . . . % n " 
 + + " - c < arg > Sets the check configuration file to use . % n " 
 + + " - f < arg > Sets the output format . ( plain | xml ) . Defaults to " 
 + + " plain % n " 
 + + " - j , - - javadocTree Print Parse tree of the Javadoc comment % n " 
 + + " - J , - - treeWithJavadoc Print full Abstract Syntax Tree of the file % n " 
 + + " - o < arg > Sets the output file . Defaults to stdout % n " 
 + + " - p < arg > Loads the properties file % n " 
 + + " - t , - - tree Print Abstract Syntax Tree ( AST ) of the file % n " 
 + + " - T , - - treeWithComments Print Abstract Syntax Tree ( AST ) of the file " 
 + + " including comments % n " 
 + + " - v Print product version and exit % n " ) ; 
 + 
 @ Rule 
 public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 @ Rule 
 @ @ - 105 , 19 + 120 , 8 @ @ public class MainTest { 
 exit . checkAssertionAfterwards ( new Assertion ( ) { 
 @ Override 
 public void checkAssertion ( ) { 
 - final String usage = String . format ( Locale . ROOT , " Unrecognized option : - w % n " 
 - + " usage : java com . puppycrawl . tools . checkstyle . Main [ options ] - c < config . xml > " 
 - + " file . . . % n " 
 - + " - c < arg > Sets the check configuration file to use . % n " 
 - + " - f < arg > Sets the output format . ( plain | xml ) . Defaults to " 
 - + " plain % n " 
 - + " - j , - - javadocTree Print Parse tree of the Javadoc comment % n " 
 - + " - o < arg > Sets the output file . Defaults to stdout % n " 
 - + " - p < arg > Loads the properties file % n " 
 - + " - t , - - tree Print Abstract Syntax Tree ( AST ) of the file % n " 
 - + " - T , - - treeWithComments Print Abstract Syntax Tree ( AST ) of the file " 
 - + " including comments % n " 
 - + " - v Print product version and exit % n " ) ; 
 + final String usage = String . format ( Locale . ROOT , " Unrecognized option : - w % n " ) 
 + + USAGE ; 
 assertEquals ( usage , systemOut . getLog ( ) ) ; 
 assertEquals ( " " , systemErr . getLog ( ) ) ; 
 } 
 @ @ - 753 , 6 + 757 , 22 @ @ public class MainTest { 
 } 
 
 @ Test 
 + public void testPrintFullTreeOption ( ) throws Exception { 
 + final String expected = Files . toString ( new File ( 
 + getPath ( " astprinter / expectedInputAstTreeStringPrinterJavadoc . txt " ) ) , 
 + Charsets . UTF _ 8 ) . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ; 
 + 
 + exit . checkAssertionAfterwards ( new Assertion ( ) { 
 + @ Override 
 + public void checkAssertion ( ) { 
 + assertEquals ( expected , systemOut . getLog ( ) . replaceAll ( " \ \ \ \ r \ \ \ \ n " , " \ \ \ \ n " ) ) ; 
 + assertEquals ( " " , systemErr . getLog ( ) ) ; 
 + } 
 + } ) ; 
 + Main . main ( " - J " , getPath ( " astprinter / InputAstTreeStringPrinterJavadoc . java " ) ) ; 
 + } 
 + 
 + @ Test 
 public void testConflictingOptionsTvsC ( ) throws Exception { 
 
 exit . expectSystemExitWithStatus ( - 1 ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadoc . java 
 new file mode 100644 
 index 0000000 . . d1cc6ad 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadoc . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + / * * javadoc * / 
 + class InputAstTreeStringPrinterJavadoc { 
 + / * not javadoc * / 
 + void m ( ) { } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt 
 new file mode 100644 
 index 0000000 . . 3a4bf64 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt 
 @ @ - 0 , 0 + 1 , 40 @ @ 
 + PACKAGE _ DEF - > package [ 1 : 0 ] 
 + | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 28 ] 
 + | - - DOT - > . [ 1 : 28 ] 
 + | | - - DOT - > . [ 1 : 22 ] 
 + | | | - - DOT - > . [ 1 : 11 ] 
 + | | | | - - IDENT - > com [ 1 : 8 ] 
 + | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] 
 + | | ` - - IDENT - > tools [ 1 : 23 ] 
 + | ` - - IDENT - > checkstyle [ 1 : 29 ] 
 + ` - - SEMI - > ; [ 1 : 39 ] 
 + CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] 
 + | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] 
 + | - - JAVADOC - > javadoc < EOF > [ 3 : 0 ] 
 + | | - - TEXT - > javadoc [ 3 : 0 ] 
 + | | | - - CHAR - > j [ 3 : 0 ] 
 + | | | - - CHAR - > a [ 3 : 1 ] 
 + | | | - - CHAR - > v [ 3 : 2 ] 
 + | | | - - CHAR - > a [ 3 : 3 ] 
 + | | | - - CHAR - > d [ 3 : 4 ] 
 + | | | - - CHAR - > o [ 3 : 5 ] 
 + | | ` - - CHAR - > c [ 3 : 6 ] 
 + | ` - - EOF - > < EOF > [ 3 : 7 ] 
 + | - - LITERAL _ CLASS - > class [ 4 : 0 ] 
 + | - - IDENT - > InputAstTreeStringPrinterJavadoc [ 4 : 6 ] 
 + ` - - OBJBLOCK - > OBJBLOCK [ 4 : 39 ] 
 + | - - LCURLY - > { [ 4 : 39 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 6 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 6 : 4 ] 
 + | | - - TYPE - > TYPE [ 6 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 5 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > not javadoc [ 5 : 6 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 5 : 16 ] 
 + | | ` - - LITERAL _ VOID - > void [ 6 : 4 ] 
 + | | - - IDENT - > m [ 6 : 9 ] 
 + | | - - LPAREN - > ( [ 6 : 10 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 6 : 11 ] 
 + | | - - RPAREN - > ) [ 6 : 11 ] 
 + | ` - - SLIST - > { [ 6 : 12 ] 
 + | ` - - RCURLY - > } [ 6 : 13 ] 
 + ` - - RCURLY - > } [ 7 : 0 ] 
 diff - - git a / src / xdocs / cmdline . xml . vm b / src / xdocs / cmdline . xml . vm 
 index 2918fc6 . . 1c5dd8d 100644 
 - - - a / src / xdocs / cmdline . xml . vm 
 + + + b / src / xdocs / cmdline . xml . vm 
 @ @ - 38 , 7 + 38 , 7 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ 
 com . puppycrawl . tools . checkstyle . Main \ 
 - c & lt ; configurationFile & gt ; \ 
 [ - f & lt ; format & gt ; ] [ - p & lt ; propertiesFile & gt ; ] [ - o & lt ; file & gt ; ] \ 
 - [ - t | - - tree ] [ - T | - - treeWithComments ] [ - j | - - javadocTree ] [ - v ] \ 
 + [ - t | - - tree ] [ - T | - - treeWithComments ] [ - J | treeWithJavadoc ] [ - j | - - javadocTree ] [ - v ] \ 
 file . . . 
 < / source > 
 < / p > 
 @ @ - 82 , 6 + 82 , 10 @ @ java - D & lt ; property & gt ; = & lt ; value & gt ; \ 
 cannot be used other options and requires exactly one file to run on to be specified . 
 < / li > 
 < li > 
 + < code > - J , - - treeWithJavadoc < / code > - print Abstract Syntax Tree ( AST ) with Javadoc nodes and comment nodes 
 + of the checked file . The option cannot be used other options and requires exactly one file to run on to be specified . 
 + < / li > 
 + < li > 
 < code > - j , - - javadocTree < / code > - print Parse Tree of the Javadoc comment . 
 The file have to contain < b > only Javadoc comment content < / b > without including ' / * * ' and ' * / ' at the beginning and at the end respectively . 
 For example :

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java 
 index 1701a98 . . b8d7ab3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrame . java 
 @ @ - 24 , 7 + 24 , 6 @ @ import java . awt . GridLayout ; 
 import java . awt . event . ActionEvent ; 
 import java . awt . event . KeyEvent ; 
 import java . io . File ; 
 - import java . io . IOException ; 
 
 import javax . swing . AbstractAction ; 
 import javax . swing . JButton ; 
 @ @ - 37 , 8 + 36 , 7 @ @ import javax . swing . JSplitPane ; 
 import javax . swing . JTextArea ; 
 import javax . swing . filechooser . FileFilter ; 
 
 - import antlr . ANTLRException ; 
 - import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 
 / * * 
 * Displays information about a parse tree . 
 @ @ - 55 , 8 + 53 , 6 @ @ public class MainFrame extends JFrame { 
 private final transient MainFrameModel model = new MainFrameModel ( ) ; 
 / * * Reload action . * / 
 private final ReloadAction reloadAction = new ReloadAction ( ) ; 
 - / * * Parse tree model . * / 
 - private transient ParseTreeTableModel parseTreeTableModel ; 
 / * * Code text area . * / 
 private JTextArea textArea ; 
 / * * Tree table . * / 
 @ @ - 75 , 8 + 71 , 7 @ @ public class MainFrame extends JFrame { 
 textArea . setEditable ( false ) ; 
 final JScrollPane textAreaScrollPane = new JScrollPane ( textArea ) ; 
 
 - parseTreeTableModel = new ParseTreeTableModel ( null ) ; 
 - treeTable = new JTreeTable ( parseTreeTableModel ) ; 
 + treeTable = new JTreeTable ( model . getParseTreeTableModel ( ) ) ; 
 treeTable . setEditor ( textArea ) ; 
 treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; 
 final JScrollPane treeTableScrollPane = new JScrollPane ( treeTable ) ; 
 @ @ - 121 , 31 + 116 , 13 @ @ public class MainFrame extends JFrame { 
 if ( sourceFile ! = null ) { 
 try { 
 setTitle ( " Checkstyle GUI : " + sourceFile . getName ( ) ) ; 
 - final DetailAST parseTree = model . parseFile ( sourceFile ) ; 
 - parseTreeTableModel . setParseTree ( parseTree ) ; 
 + model . openFile ( sourceFile ) ; 
 reloadAction . setEnabled ( true ) ; 
 - 
 - final String [ ] sourceLines = model . getFileText ( sourceFile ) . toLinesArray ( ) ; 
 - 
 - / / clear for each new file 
 - model . clearLinesToPosition ( ) ; 
 - / / starts line counting at 1 
 - model . addLineToPosition ( 0 ) ; 
 - 
 - / / clean the text area before inserting the lines of the new file 
 - textArea . setText ( " " ) ; 
 - 
 - / / insert the contents of the file to the text area 
 - for ( final String element : sourceLines ) { 
 - model . addLineToPosition ( textArea . getText ( ) . length ( ) ) ; 
 - textArea . append ( element + System . lineSeparator ( ) ) ; 
 - } 
 - 
 + textArea . setText ( model . getText ( ) ) ; 
 treeTable . setLinePositionMap ( model . getLinesToPosition ( ) ) ; 
 } 
 - catch ( final IOException | ANTLRException ex ) { 
 - JOptionPane . showMessageDialog ( this , 
 - " Could not parse " + sourceFile + " : " + ex . getMessage ( ) ) ; 
 + catch ( final CheckstyleException ex ) { 
 + JOptionPane . showMessageDialog ( this , ex . getMessage ( ) ) ; 
 } 
 } 
 } 
 @ @ - 188 , 7 + 165 , 7 @ @ public class MainFrame extends JFrame { 
 private static class JavaFileFilter extends FileFilter { 
 @ Override 
 public boolean accept ( File file ) { 
 - return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; 
 + return MainFrameModel . shouldAcceptFile ( file ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 index 8adc769 . . a4a556f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 @ @ - 23 , 11 + 23 , 13 @ @ import java . io . File ; 
 import java . io . IOException ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 + import java . util . Locale ; 
 
 import antlr . ANTLRException ; 
 
 import com . google . common . collect . ImmutableList ; 
 import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . FileContents ; 
 import com . puppycrawl . tools . checkstyle . api . FileText ; 
 @ @ - 41 , 32 + 43 , 43 @ @ public class MainFrameModel { 
 / * * Lines to position map . * / 
 private final List < Integer > linesToPosition = new ArrayList < > ( ) ; 
 
 + / * * Parse tree model . * / 
 + private final ParseTreeTableModel parseTreeTableModel ; 
 + 
 / * * The file which is being parsed . * / 
 private File currentFile ; 
 
 + / * * Text for a frame ' s text area . * / 
 + private String text ; 
 + 
 + / * * Instantiate the model . * / 
 + public MainFrameModel ( ) { 
 + parseTreeTableModel = new ParseTreeTableModel ( null ) ; 
 + } 
 + 
 / * * 
 - * Parse a file and return the parse tree . 
 - * @ param file the file to parse . 
 - * @ return the root node of the parse tree . 
 - * @ throws IOException if the file could not be read . 
 - * @ throws ANTLRException if the file is not a Java source . 
 + * Get parse tree table model . 
 + * @ return parse tree table model . 
 * / 
 - public DetailAST parseFile ( File file ) throws IOException , ANTLRException { 
 - currentFile = file ; 
 - final FileText text = getFileText ( file ) ; 
 - final FileContents contents = new FileContents ( text ) ; 
 - return TreeWalker . parse ( contents ) ; 
 + public ParseTreeTableModel getParseTreeTableModel ( ) { 
 + return parseTreeTableModel ; 
 } 
 
 / * * 
 - * Get FileText from a file . 
 - * @ param file the file to get the FileText from . 
 - * @ return the FileText . 
 - * @ throws IOException if the file could not be read . 
 + * Get text to display in a text area . 
 + * @ return text to display in a text area . 
 * / 
 - public FileText getFileText ( File file ) throws IOException { 
 - return new FileText ( file . getAbsoluteFile ( ) , 
 - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 + public String getText ( ) { 
 + return text ; 
 + } 
 + 
 + / * * 
 + * Whether a file chooser should accept the file as a source file . 
 + * @ param file the file to check . 
 + * @ return true if the file should be accepted . 
 + * / 
 + public static boolean shouldAcceptFile ( File file ) { 
 + return file . isDirectory ( ) | | file . getName ( ) . endsWith ( " . java " ) ; 
 } 
 
 / * * 
 @ @ - 98 , 16 + 111 , 59 @ @ public class MainFrameModel { 
 } 
 
 / * * 
 - * Add a new value into lines to position map . 
 - * @ param value Value to be added into position map . 
 + * Open file and load the file . 
 + * @ param file the file to open . 
 + * @ throws CheckstyleException if the file can not be parsed . 
 * / 
 - public void addLineToPosition ( int value ) { 
 - linesToPosition . add ( value ) ; 
 + public void openFile ( File file ) throws CheckstyleException { 
 + try { 
 + currentFile = file ; 
 + final DetailAST parseTree = parseFile ( file ) ; 
 + parseTreeTableModel . setParseTree ( parseTree ) ; 
 + final String [ ] sourceLines = getFileText ( file ) . toLinesArray ( ) ; 
 + 
 + / / clear for each new file 
 + linesToPosition . clear ( ) ; 
 + / / starts line counting at 1 
 + linesToPosition . add ( 0 ) ; 
 + 
 + final StringBuilder sb = new StringBuilder ( ) ; 
 + / / insert the contents of the file to the text area 
 + for ( final String element : sourceLines ) { 
 + linesToPosition . add ( sb . length ( ) ) ; 
 + sb . append ( element ) . append ( System . lineSeparator ( ) ) ; 
 + } 
 + text = sb . toString ( ) ; 
 + } 
 + catch ( IOException | ANTLRException ex ) { 
 + final String exceptionMsg = String . format ( Locale . ROOT , 
 + " % s occurred while opening file % s . " , 
 + ex . getClass ( ) . getSimpleName ( ) , file . getPath ( ) ) ; 
 + throw new CheckstyleException ( exceptionMsg , ex ) ; 
 + } 
 } 
 
 - / * * Clear lines to position map . * / 
 - public void clearLinesToPosition ( ) { 
 - linesToPosition . clear ( ) ; 
 + / * * 
 + * Parse a file and return the parse tree . 
 + * @ param file the file to parse . 
 + * @ return the root node of the parse tree . 
 + * @ throws IOException if the file could not be read . 
 + * @ throws ANTLRException if the file is not a Java source . 
 + * / 
 + public DetailAST parseFile ( File file ) throws IOException , ANTLRException { 
 + final FileText fileText = getFileText ( file ) ; 
 + final FileContents contents = new FileContents ( fileText ) ; 
 + return TreeWalker . parse ( contents ) ; 
 } 
 
 + / * * 
 + * Get FileText from a file . 
 + * @ param file the file to get the FileText from . 
 + * @ return the FileText . 
 + * @ throws IOException if the file could not be read . 
 + * / 
 + public FileText getFileText ( File file ) throws IOException { 
 + return new FileText ( file . getAbsoluteFile ( ) , 
 + System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 + } 
 }
