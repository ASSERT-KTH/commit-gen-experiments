BLEU SCORE: 0.06722636787666479

TEST MSG: Issue # 4313 : Split and Organize Checkstyle inputs by Test for checks in annotation package : SuppressWarnings
GENERATED MSG: Issue # 2161 : unify test input locations for annotation package

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheckTest . java <nl> index f41c3bc . . cecf7de 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheckTest . java <nl> @ @ - 34 , 7 + 34 , 9 @ @ public class SuppressWarningsCheckTest extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " annotation " + File . separator + filename ) ; <nl> + + " annotation " + File . separator <nl> + + " suppresswarnings " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsCompact . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsCompact . java <nl> deleted file mode 100644 <nl> index 25ac727 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsCompact . java <nl> + + + / dev / null <nl> @ @ - 1 , 87 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> - <nl> - import java . lang . annotation . Documented ; <nl> - <nl> - @ SuppressWarnings ( { " unchecked " , " unused " } ) <nl> - public class InputSuppressWarningsCompact <nl> - { <nl> - @ SuppressWarnings ( { " " } ) <nl> - class Empty { <nl> - <nl> - @ SuppressWarnings ( { " unchecked " , " " } ) <nl> - public Empty ( ) { <nl> - <nl> - } <nl> - } <nl> - <nl> - @ SuppressWarnings ( { " unused " } ) <nl> - enum Duh { <nl> - <nl> - @ SuppressWarnings ( { " unforgiven " , " un " } ) <nl> - D ; <nl> - <nl> - public static void foo ( ) { <nl> - <nl> - @ SuppressWarnings ( { " unused " } ) <nl> - Object o = new InputSuppressWarningsCompact ( ) { <nl> - <nl> - @ Override <nl> - @ SuppressWarnings ( { " unchecked " } ) <nl> - public String toString ( ) { <nl> - return " " ; <nl> - } <nl> - } ; <nl> - } <nl> - } <nl> - <nl> - @ SuppressWarnings ( { " abcun " } ) <nl> - @ Documented <nl> - @ interface Sweet { <nl> - int cool ( ) ; <nl> - } <nl> - <nl> - @ Documented <nl> - @ SuppressWarnings ( { } ) <nl> - @ interface MoreSweetness { <nl> - <nl> - @ SuppressWarnings ( { " unused " , " bleh " } ) <nl> - int cool ( ) ; <nl> - } <nl> - <nl> - public class Junk { <nl> - <nl> - @ SuppressWarnings ( { } ) <nl> - int a = 1 ; <nl> - <nl> - @ SuppressWarnings ( { " unchecked " } ) <nl> - @ Deprecated <nl> - int b = 1 ; <nl> - void doFoo ( String s , @ SuppressWarnings ( { " unchecked " } ) String y ) { <nl> - <nl> - } <nl> - } <nl> - <nl> - @ SuppressWarnings ( { ( false ) ? " unchecked " : " " , ( false ) ? " unchecked " : " " } ) <nl> - class Cond { <nl> - <nl> - @ SuppressWarnings ( { ( false ) ? " " : " unchecked " } ) <nl> - public Cond ( ) { <nl> - <nl> - } <nl> - <nl> - @ SuppressWarnings ( { ( false ) ? ( true ) ? " " : " unused " : " unchecked " , ( false ) ? ( true ) ? " " : " unused " : " unchecked " } ) <nl> - public void aCond1 ( ) { <nl> - <nl> - } <nl> - <nl> - @ SuppressWarnings ( { ( false ) ? " unchecked " : ( true ) ? " " : " unused " } ) <nl> - public void aCond2 ( ) { <nl> - <nl> - } <nl> - <nl> - @ java . lang . SuppressWarnings ( { ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " , ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " } ) <nl> - public void seriously ( ) { <nl> - <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsConstants . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsConstants . java <nl> deleted file mode 100644 <nl> index bb64632 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsConstants . java <nl> + + + / dev / null <nl> @ @ - 1 , 16 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> - <nl> - import java . util . List ; <nl> - import java . util . ArrayList ; <nl> - <nl> - public class InputSuppressWarningsConstants <nl> - { <nl> - public static final String UNCHECKED = " unchecked " ; <nl> - <nl> - public static void test ( ) { <nl> - @ SuppressWarnings ( UNCHECKED ) <nl> - final List < String > dummyOne = ( List < String > ) new ArrayList ( ) ; <nl> - @ SuppressWarnings ( InputSuppressWarningsConstants . UNCHECKED ) <nl> - final List < String > dummyTwo = ( List < String > ) new ArrayList ( ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsExpanded . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsExpanded . java <nl> deleted file mode 100644 <nl> index e63d413 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsExpanded . java <nl> + + + / dev / null <nl> @ @ - 1 , 87 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> - <nl> - import java . lang . annotation . Documented ; <nl> - <nl> - @ SuppressWarnings ( value = { " unchecked " , " unused " } ) <nl> - public class InputSuppressWarningsExpanded <nl> - { <nl> - @ SuppressWarnings ( value = { " " } ) <nl> - class Empty { <nl> - <nl> - @ SuppressWarnings ( value = { " unchecked " , " " } ) <nl> - public Empty ( ) { <nl> - <nl> - } <nl> - } <nl> - <nl> - @ SuppressWarnings ( value = { " unused " } ) <nl> - enum Duh { <nl> - <nl> - @ SuppressWarnings ( value = { " unforgiven " , " un " } ) <nl> - D ; <nl> - <nl> - public static void foo ( ) { <nl> - <nl> - @ SuppressWarnings ( value = { " unused " } ) <nl> - Object o = new InputSuppressWarningsExpanded ( ) { <nl> - <nl> - @ Override <nl> - @ SuppressWarnings ( value = { " unchecked " } ) <nl> - public String toString ( ) { <nl> - return " " ; <nl> - } <nl> - } ; <nl> - } <nl> - } <nl> - <nl> - @ SuppressWarnings ( value = { " abcun " } ) <nl> - @ Documented <nl> - @ interface Sweet { <nl> - int cool ( ) ; <nl> - } <nl> - <nl> - @ Documented <nl> - @ SuppressWarnings ( value = { } ) <nl> - @ interface MoreSweetness { <nl> - <nl> - @ SuppressWarnings ( value = { " unused " , " bleh " } ) <nl> - int cool ( ) ; <nl> - } <nl> - <nl> - public class Junk { <nl> - <nl> - @ SuppressWarnings ( value = { } ) <nl> - int a = 1 ; <nl> - <nl> - @ SuppressWarnings ( value = { " unchecked " } ) <nl> - @ Deprecated <nl> - int b = 1 ; <nl> - void doFoo ( String s , @ SuppressWarnings ( value = { " unchecked " } ) String y ) { <nl> - <nl> - } <nl> - } <nl> - <nl> - @ SuppressWarnings ( value = { ( false ) ? " unchecked " : " " , ( false ) ? " unchecked " : " " } ) <nl> - class Cond { <nl> - <nl> - @ SuppressWarnings ( value = { ( false ) ? " " : " unchecked " } ) <nl> - public Cond ( ) { <nl> - <nl> - } <nl> - <nl> - @ SuppressWarnings ( value = { ( false ) ? ( true ) ? " " : " unused " : " unchecked " , ( false ) ? ( true ) ? " " : " unused " : " unchecked " } ) <nl> - public void aCond1 ( ) { <nl> - <nl> - } <nl> - <nl> - @ SuppressWarnings ( value = { ( false ) ? " unchecked " : ( true ) ? " " : " unused " } ) <nl> - public void aCond2 ( ) { <nl> - <nl> - } <nl> - <nl> - @ java . lang . SuppressWarnings ( value = { ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " , ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " } ) <nl> - public void seriously ( ) { <nl> - <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsHolder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsHolder . java <nl> deleted file mode 100644 <nl> index c3280cd . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsHolder . java <nl> + + + / dev / null <nl> @ @ - 1 , 36 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> - <nl> - public class InputSuppressWarningsHolder { <nl> - static final String UNUSED = " unused " ; <nl> - <nl> - @ SuppressWarnings ( UNUSED ) <nl> - int a ; <nl> - @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) <nl> - int b ; <nl> - @ SuppressWarnings ( com . puppycrawl . tools . checkstyle . checks . annotation . InputSuppressWarningsHolder . UNUSED ) <nl> - int c ; <nl> - @ SuppressWarnings ( value = UNUSED ) <nl> - int d ; <nl> - @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) <nl> - int e ; <nl> - @ SuppressWarnings ( value = com . puppycrawl . tools . checkstyle . checks . annotation . InputSuppressWarningsHolder . UNUSED ) <nl> - int f ; <nl> - @ SuppressWarnings ( ( 1 ! = 1 ) ? " " : " unused " ) <nl> - int g ; <nl> - @ SuppressWarnings ( " un " + " used " ) <nl> - int h ; <nl> - @ SuppressWarnings ( ( String ) " unused " ) <nl> - int i ; <nl> - @ SuppressWarnings ( { } ) <nl> - int j ; <nl> - @ SuppressWarnings ( { UNUSED } ) <nl> - int k ; <nl> - @ SuppressWarnings ( { " unused " , true ? " unused " : " " } ) <nl> - int l ; <nl> - } <nl> - <nl> - class CustomSuppressWarnings { <nl> - @ SuppressWarnings <nl> - private @ interface SuppressWarnings { <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsSingle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsSingle . java <nl> deleted file mode 100644 <nl> index 58fbc24 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsSingle . java <nl> + + + / dev / null <nl> @ @ - 1 , 87 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> - <nl> - import java . lang . annotation . Documented ; <nl> - <nl> - @ SuppressWarnings ( " unchecked " ) <nl> - public class InputSuppressWarningsSingle <nl> - { <nl> - @ SuppressWarnings ( " " ) <nl> - class Empty { <nl> - <nl> - @ SuppressWarnings ( " " ) <nl> - public Empty ( ) { <nl> - <nl> - } <nl> - } <nl> - <nl> - @ SuppressWarnings ( " unused " ) <nl> - enum Duh { <nl> - <nl> - @ SuppressWarnings ( " unforgiven " ) <nl> - D ; <nl> - <nl> - public static void foo ( ) { <nl> - <nl> - @ SuppressWarnings ( " unused " ) <nl> - Object o = new InputSuppressWarningsSingle ( ) { <nl> - <nl> - @ Override <nl> - @ SuppressWarnings ( " unchecked " ) <nl> - public String toString ( ) { <nl> - return " " ; <nl> - } <nl> - } ; <nl> - } <nl> - } <nl> - <nl> - @ SuppressWarnings ( " abcun " ) <nl> - @ Documented <nl> - @ interface Sweet { <nl> - int cool ( ) ; <nl> - } <nl> - <nl> - @ Documented <nl> - @ SuppressWarnings ( " abcun " ) <nl> - @ interface MoreSweetness { <nl> - <nl> - @ SuppressWarnings ( " unused " ) <nl> - int cool ( ) ; <nl> - } <nl> - <nl> - public class Junk { <nl> - <nl> - @ SuppressWarnings ( " " ) <nl> - int a = 1 ; <nl> - <nl> - @ SuppressWarnings ( " unchecked " ) <nl> - @ Deprecated <nl> - int b = 1 ; <nl> - void doFoo ( String s , @ SuppressWarnings ( " unchecked " ) String y ) { <nl> - <nl> - } <nl> - } <nl> - <nl> - @ SuppressWarnings ( ( false ) ? " unchecked " : " " ) <nl> - class Cond { <nl> - <nl> - @ SuppressWarnings ( ( false ) ? " " : " unchecked " ) <nl> - public Cond ( ) { <nl> - <nl> - } <nl> - <nl> - @ SuppressWarnings ( ( false ) ? ( true ) ? " " : " unused " : " unchecked " ) <nl> - public void aCond1 ( ) { <nl> - <nl> - } <nl> - <nl> - @ SuppressWarnings ( ( false ) ? " unchecked " : ( true ) ? " " : " unused " ) <nl> - public void aCond2 ( ) { <nl> - <nl> - } <nl> - <nl> - @ java . lang . SuppressWarnings ( ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " ) <nl> - public void seriously ( ) { <nl> - <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsValuePair . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsValuePair . java <nl> deleted file mode 100644 <nl> index c0e0403 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsValuePair . java <nl> + + + / dev / null <nl> @ @ - 1 , 14 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> - <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - <nl> - public class InputSuppressWarningsValuePair <nl> - { <nl> - public static final String UNCHECKED = " unchecked " ; <nl> - <nl> - public static void test ( ) { <nl> - @ SuppressWarnings ( value = UNCHECKED ) <nl> - final List < String > dummyOne = ( List < String > ) new ArrayList ( ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsCompact . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsCompact . java <nl> new file mode 100644 <nl> index 0000000 . . 2051d90 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsCompact . java <nl> @ @ - 0 , 0 + 1 , 87 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; <nl> + <nl> + import java . lang . annotation . Documented ; <nl> + <nl> + @ SuppressWarnings ( { " unchecked " , " unused " } ) <nl> + public class InputSuppressWarningsCompact <nl> + { <nl> + @ SuppressWarnings ( { " " } ) <nl> + class Empty { <nl> + <nl> + @ SuppressWarnings ( { " unchecked " , " " } ) <nl> + public Empty ( ) { <nl> + <nl> + } <nl> + } <nl> + <nl> + @ SuppressWarnings ( { " unused " } ) <nl> + enum Duh { <nl> + <nl> + @ SuppressWarnings ( { " unforgiven " , " un " } ) <nl> + D ; <nl> + <nl> + public static void foo ( ) { <nl> + <nl> + @ SuppressWarnings ( { " unused " } ) <nl> + Object o = new InputSuppressWarningsCompact ( ) { <nl> + <nl> + @ Override <nl> + @ SuppressWarnings ( { " unchecked " } ) <nl> + public String toString ( ) { <nl> + return " " ; <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> + <nl> + @ SuppressWarnings ( { " abcun " } ) <nl> + @ Documented <nl> + @ interface Sweet { <nl> + int cool ( ) ; <nl> + } <nl> + <nl> + @ Documented <nl> + @ SuppressWarnings ( { } ) <nl> + @ interface MoreSweetness { <nl> + <nl> + @ SuppressWarnings ( { " unused " , " bleh " } ) <nl> + int cool ( ) ; <nl> + } <nl> + <nl> + public class Junk { <nl> + <nl> + @ SuppressWarnings ( { } ) <nl> + int a = 1 ; <nl> + <nl> + @ SuppressWarnings ( { " unchecked " } ) <nl> + @ Deprecated <nl> + int b = 1 ; <nl> + void doFoo ( String s , @ SuppressWarnings ( { " unchecked " } ) String y ) { <nl> + <nl> + } <nl> + } <nl> + <nl> + @ SuppressWarnings ( { ( false ) ? " unchecked " : " " , ( false ) ? " unchecked " : " " } ) <nl> + class Cond { <nl> + <nl> + @ SuppressWarnings ( { ( false ) ? " " : " unchecked " } ) <nl> + public Cond ( ) { <nl> + <nl> + } <nl> + <nl> + @ SuppressWarnings ( { ( false ) ? ( true ) ? " " : " unused " : " unchecked " , ( false ) ? ( true ) ? " " : " unused " : " unchecked " } ) <nl> + public void aCond1 ( ) { <nl> + <nl> + } <nl> + <nl> + @ SuppressWarnings ( { ( false ) ? " unchecked " : ( true ) ? " " : " unused " } ) <nl> + public void aCond2 ( ) { <nl> + <nl> + } <nl> + <nl> + @ java . lang . SuppressWarnings ( { ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " , ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " } ) <nl> + public void seriously ( ) { <nl> + <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsConstants . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsConstants . java <nl> new file mode 100644 <nl> index 0000000 . . 2271f92 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsConstants . java <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; <nl> + <nl> + import java . util . List ; <nl> + import java . util . ArrayList ; <nl> + <nl> + public class InputSuppressWarningsConstants <nl> + { <nl> + public static final String UNCHECKED = " unchecked " ; <nl> + <nl> + public static void test ( ) { <nl> + @ SuppressWarnings ( UNCHECKED ) <nl> + final List < String > dummyOne = ( List < String > ) new ArrayList ( ) ; <nl> + @ SuppressWarnings ( InputSuppressWarningsConstants . UNCHECKED ) <nl> + final List < String > dummyTwo = ( List < String > ) new ArrayList ( ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsExpanded . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsExpanded . java <nl> new file mode 100644 <nl> index 0000000 . . 91a07e7 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsExpanded . java <nl> @ @ - 0 , 0 + 1 , 87 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; <nl> + <nl> + import java . lang . annotation . Documented ; <nl> + <nl> + @ SuppressWarnings ( value = { " unchecked " , " unused " } ) <nl> + public class InputSuppressWarningsExpanded <nl> + { <nl> + @ SuppressWarnings ( value = { " " } ) <nl> + class Empty { <nl> + <nl> + @ SuppressWarnings ( value = { " unchecked " , " " } ) <nl> + public Empty ( ) { <nl> + <nl> + } <nl> + } <nl> + <nl> + @ SuppressWarnings ( value = { " unused " } ) <nl> + enum Duh { <nl> + <nl> + @ SuppressWarnings ( value = { " unforgiven " , " un " } ) <nl> + D ; <nl> + <nl> + public static void foo ( ) { <nl> + <nl> + @ SuppressWarnings ( value = { " unused " } ) <nl> + Object o = new InputSuppressWarningsExpanded ( ) { <nl> + <nl> + @ Override <nl> + @ SuppressWarnings ( value = { " unchecked " } ) <nl> + public String toString ( ) { <nl> + return " " ; <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> + <nl> + @ SuppressWarnings ( value = { " abcun " } ) <nl> + @ Documented <nl> + @ interface Sweet { <nl> + int cool ( ) ; <nl> + } <nl> + <nl> + @ Documented <nl> + @ SuppressWarnings ( value = { } ) <nl> + @ interface MoreSweetness { <nl> + <nl> + @ SuppressWarnings ( value = { " unused " , " bleh " } ) <nl> + int cool ( ) ; <nl> + } <nl> + <nl> + public class Junk { <nl> + <nl> + @ SuppressWarnings ( value = { } ) <nl> + int a = 1 ; <nl> + <nl> + @ SuppressWarnings ( value = { " unchecked " } ) <nl> + @ Deprecated <nl> + int b = 1 ; <nl> + void doFoo ( String s , @ SuppressWarnings ( value = { " unchecked " } ) String y ) { <nl> + <nl> + } <nl> + } <nl> + <nl> + @ SuppressWarnings ( value = { ( false ) ? " unchecked " : " " , ( false ) ? " unchecked " : " " } ) <nl> + class Cond { <nl> + <nl> + @ SuppressWarnings ( value = { ( false ) ? " " : " unchecked " } ) <nl> + public Cond ( ) { <nl> + <nl> + } <nl> + <nl> + @ SuppressWarnings ( value = { ( false ) ? ( true ) ? " " : " unused " : " unchecked " , ( false ) ? ( true ) ? " " : " unused " : " unchecked " } ) <nl> + public void aCond1 ( ) { <nl> + <nl> + } <nl> + <nl> + @ SuppressWarnings ( value = { ( false ) ? " unchecked " : ( true ) ? " " : " unused " } ) <nl> + public void aCond2 ( ) { <nl> + <nl> + } <nl> + <nl> + @ java . lang . SuppressWarnings ( value = { ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " , ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " } ) <nl> + public void seriously ( ) { <nl> + <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsHolder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsHolder . java <nl> new file mode 100644 <nl> index 0000000 . . 721b3f1 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsHolder . java <nl> @ @ - 0 , 0 + 1 , 36 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; <nl> + <nl> + public class InputSuppressWarningsHolder { <nl> + static final String UNUSED = " unused " ; <nl> + <nl> + @ SuppressWarnings ( UNUSED ) <nl> + int a ; <nl> + @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) <nl> + int b ; <nl> + @ SuppressWarnings ( com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings . InputSuppressWarningsHolder . UNUSED ) <nl> + int c ; <nl> + @ SuppressWarnings ( value = UNUSED ) <nl> + int d ; <nl> + @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) <nl> + int e ; <nl> + @ SuppressWarnings ( value = com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings . InputSuppressWarningsHolder . UNUSED ) <nl> + int f ; <nl> + @ SuppressWarnings ( ( 1 ! = 1 ) ? " " : " unused " ) <nl> + int g ; <nl> + @ SuppressWarnings ( " un " + " used " ) <nl> + int h ; <nl> + @ SuppressWarnings ( ( String ) " unused " ) <nl> + int i ; <nl> + @ SuppressWarnings ( { } ) <nl> + int j ; <nl> + @ SuppressWarnings ( { UNUSED } ) <nl> + int k ; <nl> + @ SuppressWarnings ( { " unused " , true ? " unused " : " " } ) <nl> + int l ; <nl> + } <nl> + <nl> + class CustomSuppressWarnings { <nl> + @ SuppressWarnings <nl> + private @ interface SuppressWarnings { <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsSingle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsSingle . java <nl> new file mode 100644 <nl> index 0000000 . . 5d6f16f <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsSingle . java <nl> @ @ - 0 , 0 + 1 , 87 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; <nl> + <nl> + import java . lang . annotation . Documented ; <nl> + <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + public class InputSuppressWarningsSingle <nl> + { <nl> + @ SuppressWarnings ( " " ) <nl> + class Empty { <nl> + <nl> + @ SuppressWarnings ( " " ) <nl> + public Empty ( ) { <nl> + <nl> + } <nl> + } <nl> + <nl> + @ SuppressWarnings ( " unused " ) <nl> + enum Duh { <nl> + <nl> + @ SuppressWarnings ( " unforgiven " ) <nl> + D ; <nl> + <nl> + public static void foo ( ) { <nl> + <nl> + @ SuppressWarnings ( " unused " ) <nl> + Object o = new InputSuppressWarningsSingle ( ) { <nl> + <nl> + @ Override <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + public String toString ( ) { <nl> + return " " ; <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> + <nl> + @ SuppressWarnings ( " abcun " ) <nl> + @ Documented <nl> + @ interface Sweet { <nl> + int cool ( ) ; <nl> + } <nl> + <nl> + @ Documented <nl> + @ SuppressWarnings ( " abcun " ) <nl> + @ interface MoreSweetness { <nl> + <nl> + @ SuppressWarnings ( " unused " ) <nl> + int cool ( ) ; <nl> + } <nl> + <nl> + public class Junk { <nl> + <nl> + @ SuppressWarnings ( " " ) <nl> + int a = 1 ; <nl> + <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + @ Deprecated <nl> + int b = 1 ; <nl> + void doFoo ( String s , @ SuppressWarnings ( " unchecked " ) String y ) { <nl> + <nl> + } <nl> + } <nl> + <nl> + @ SuppressWarnings ( ( false ) ? " unchecked " : " " ) <nl> + class Cond { <nl> + <nl> + @ SuppressWarnings ( ( false ) ? " " : " unchecked " ) <nl> + public Cond ( ) { <nl> + <nl> + } <nl> + <nl> + @ SuppressWarnings ( ( false ) ? ( true ) ? " " : " unused " : " unchecked " ) <nl> + public void aCond1 ( ) { <nl> + <nl> + } <nl> + <nl> + @ SuppressWarnings ( ( false ) ? " unchecked " : ( true ) ? " " : " unused " ) <nl> + public void aCond2 ( ) { <nl> + <nl> + } <nl> + <nl> + @ java . lang . SuppressWarnings ( ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " ) <nl> + public void seriously ( ) { <nl> + <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsValuePair . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsValuePair . java <nl> new file mode 100644 <nl> index 0000000 . . 09d0bf0 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsValuePair . java <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; <nl> + <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + <nl> + public class InputSuppressWarningsValuePair <nl> + { <nl> + public static final String UNCHECKED = " unchecked " ; <nl> + <nl> + public static void test ( ) { <nl> + @ SuppressWarnings ( value = UNCHECKED ) <nl> + final List < String > dummyOne = ( List < String > ) new ArrayList ( ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index 2c95692 . . 3a28758 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 9 , 7 + 9 , 7 @ @ matrix : <nl> include : <nl> # unit tests ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " <nl> + env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " DEPLOY = " true " <nl> <nl> # unit tests in German locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> @ @ - 226 , 6 + 226 , 7 @ @ script : eval $ CMD <nl> <nl> after _ success : <nl> - eval $ COVERAGE _ CMD <nl> + - if [ [ $ TRAVIS _ REPO _ SLUG = = ' checkstyle / checkstyle ' & & $ TRAVIS _ BRANCH = = ' master ' & & $ TRAVIS _ PULL _ REQUEST = = ' false ' & & $ DEPLOY = = ' true ' ] ] ; then mvn - s config / deploy - settings . xml deploy ; fi <nl> <nl> cache : <nl> directories : <nl> diff - - git a / config / deploy - settings . xml b / config / deploy - settings . xml <nl> new file mode 100644 <nl> index 0000000 . . 9a73bbf <nl> - - - / dev / null <nl> + + + b / config / deploy - settings . xml <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + < settings xmlns = " http : / / maven . apache . org / SETTINGS / 1 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " xsi : schemaLocation = " http : / / maven . apache . org / SETTINGS / 1 . 0 . 0 http : / / maven . apache . org / xsd / settings - 1 . 0 . 0 . xsd " > <nl> + < servers > <nl> + < server > <nl> + < id > sonatype - nexus - snapshots < / id > <nl> + < username > $ { env . CI _ DEPLOY _ USERNAME } < / username > <nl> + < password > $ { env . CI _ DEPLOY _ PASSWORD } < / password > <nl> + < / server > <nl> + < / servers > <nl> + < / settings > <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheckTest . java 
 index f41c3bc . . cecf7de 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheckTest . java 
 @ @ - 34 , 7 + 34 , 9 @ @ public class SuppressWarningsCheckTest extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " annotation " + File . separator + filename ) ; 
 + + " annotation " + File . separator 
 + + " suppresswarnings " + File . separator 
 + + filename ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsCompact . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsCompact . java 
 deleted file mode 100644 
 index 25ac727 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsCompact . java 
 + + + / dev / null 
 @ @ - 1 , 87 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 - 
 - import java . lang . annotation . Documented ; 
 - 
 - @ SuppressWarnings ( { " unchecked " , " unused " } ) 
 - public class InputSuppressWarningsCompact 
 - { 
 - @ SuppressWarnings ( { " " } ) 
 - class Empty { 
 - 
 - @ SuppressWarnings ( { " unchecked " , " " } ) 
 - public Empty ( ) { 
 - 
 - } 
 - } 
 - 
 - @ SuppressWarnings ( { " unused " } ) 
 - enum Duh { 
 - 
 - @ SuppressWarnings ( { " unforgiven " , " un " } ) 
 - D ; 
 - 
 - public static void foo ( ) { 
 - 
 - @ SuppressWarnings ( { " unused " } ) 
 - Object o = new InputSuppressWarningsCompact ( ) { 
 - 
 - @ Override 
 - @ SuppressWarnings ( { " unchecked " } ) 
 - public String toString ( ) { 
 - return " " ; 
 - } 
 - } ; 
 - } 
 - } 
 - 
 - @ SuppressWarnings ( { " abcun " } ) 
 - @ Documented 
 - @ interface Sweet { 
 - int cool ( ) ; 
 - } 
 - 
 - @ Documented 
 - @ SuppressWarnings ( { } ) 
 - @ interface MoreSweetness { 
 - 
 - @ SuppressWarnings ( { " unused " , " bleh " } ) 
 - int cool ( ) ; 
 - } 
 - 
 - public class Junk { 
 - 
 - @ SuppressWarnings ( { } ) 
 - int a = 1 ; 
 - 
 - @ SuppressWarnings ( { " unchecked " } ) 
 - @ Deprecated 
 - int b = 1 ; 
 - void doFoo ( String s , @ SuppressWarnings ( { " unchecked " } ) String y ) { 
 - 
 - } 
 - } 
 - 
 - @ SuppressWarnings ( { ( false ) ? " unchecked " : " " , ( false ) ? " unchecked " : " " } ) 
 - class Cond { 
 - 
 - @ SuppressWarnings ( { ( false ) ? " " : " unchecked " } ) 
 - public Cond ( ) { 
 - 
 - } 
 - 
 - @ SuppressWarnings ( { ( false ) ? ( true ) ? " " : " unused " : " unchecked " , ( false ) ? ( true ) ? " " : " unused " : " unchecked " } ) 
 - public void aCond1 ( ) { 
 - 
 - } 
 - 
 - @ SuppressWarnings ( { ( false ) ? " unchecked " : ( true ) ? " " : " unused " } ) 
 - public void aCond2 ( ) { 
 - 
 - } 
 - 
 - @ java . lang . SuppressWarnings ( { ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " , ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " } ) 
 - public void seriously ( ) { 
 - 
 - } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsConstants . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsConstants . java 
 deleted file mode 100644 
 index bb64632 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsConstants . java 
 + + + / dev / null 
 @ @ - 1 , 16 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 - 
 - import java . util . List ; 
 - import java . util . ArrayList ; 
 - 
 - public class InputSuppressWarningsConstants 
 - { 
 - public static final String UNCHECKED = " unchecked " ; 
 - 
 - public static void test ( ) { 
 - @ SuppressWarnings ( UNCHECKED ) 
 - final List < String > dummyOne = ( List < String > ) new ArrayList ( ) ; 
 - @ SuppressWarnings ( InputSuppressWarningsConstants . UNCHECKED ) 
 - final List < String > dummyTwo = ( List < String > ) new ArrayList ( ) ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsExpanded . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsExpanded . java 
 deleted file mode 100644 
 index e63d413 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsExpanded . java 
 + + + / dev / null 
 @ @ - 1 , 87 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 - 
 - import java . lang . annotation . Documented ; 
 - 
 - @ SuppressWarnings ( value = { " unchecked " , " unused " } ) 
 - public class InputSuppressWarningsExpanded 
 - { 
 - @ SuppressWarnings ( value = { " " } ) 
 - class Empty { 
 - 
 - @ SuppressWarnings ( value = { " unchecked " , " " } ) 
 - public Empty ( ) { 
 - 
 - } 
 - } 
 - 
 - @ SuppressWarnings ( value = { " unused " } ) 
 - enum Duh { 
 - 
 - @ SuppressWarnings ( value = { " unforgiven " , " un " } ) 
 - D ; 
 - 
 - public static void foo ( ) { 
 - 
 - @ SuppressWarnings ( value = { " unused " } ) 
 - Object o = new InputSuppressWarningsExpanded ( ) { 
 - 
 - @ Override 
 - @ SuppressWarnings ( value = { " unchecked " } ) 
 - public String toString ( ) { 
 - return " " ; 
 - } 
 - } ; 
 - } 
 - } 
 - 
 - @ SuppressWarnings ( value = { " abcun " } ) 
 - @ Documented 
 - @ interface Sweet { 
 - int cool ( ) ; 
 - } 
 - 
 - @ Documented 
 - @ SuppressWarnings ( value = { } ) 
 - @ interface MoreSweetness { 
 - 
 - @ SuppressWarnings ( value = { " unused " , " bleh " } ) 
 - int cool ( ) ; 
 - } 
 - 
 - public class Junk { 
 - 
 - @ SuppressWarnings ( value = { } ) 
 - int a = 1 ; 
 - 
 - @ SuppressWarnings ( value = { " unchecked " } ) 
 - @ Deprecated 
 - int b = 1 ; 
 - void doFoo ( String s , @ SuppressWarnings ( value = { " unchecked " } ) String y ) { 
 - 
 - } 
 - } 
 - 
 - @ SuppressWarnings ( value = { ( false ) ? " unchecked " : " " , ( false ) ? " unchecked " : " " } ) 
 - class Cond { 
 - 
 - @ SuppressWarnings ( value = { ( false ) ? " " : " unchecked " } ) 
 - public Cond ( ) { 
 - 
 - } 
 - 
 - @ SuppressWarnings ( value = { ( false ) ? ( true ) ? " " : " unused " : " unchecked " , ( false ) ? ( true ) ? " " : " unused " : " unchecked " } ) 
 - public void aCond1 ( ) { 
 - 
 - } 
 - 
 - @ SuppressWarnings ( value = { ( false ) ? " unchecked " : ( true ) ? " " : " unused " } ) 
 - public void aCond2 ( ) { 
 - 
 - } 
 - 
 - @ java . lang . SuppressWarnings ( value = { ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " , ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " } ) 
 - public void seriously ( ) { 
 - 
 - } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsHolder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsHolder . java 
 deleted file mode 100644 
 index c3280cd . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsHolder . java 
 + + + / dev / null 
 @ @ - 1 , 36 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 - 
 - public class InputSuppressWarningsHolder { 
 - static final String UNUSED = " unused " ; 
 - 
 - @ SuppressWarnings ( UNUSED ) 
 - int a ; 
 - @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) 
 - int b ; 
 - @ SuppressWarnings ( com . puppycrawl . tools . checkstyle . checks . annotation . InputSuppressWarningsHolder . UNUSED ) 
 - int c ; 
 - @ SuppressWarnings ( value = UNUSED ) 
 - int d ; 
 - @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) 
 - int e ; 
 - @ SuppressWarnings ( value = com . puppycrawl . tools . checkstyle . checks . annotation . InputSuppressWarningsHolder . UNUSED ) 
 - int f ; 
 - @ SuppressWarnings ( ( 1 ! = 1 ) ? " " : " unused " ) 
 - int g ; 
 - @ SuppressWarnings ( " un " + " used " ) 
 - int h ; 
 - @ SuppressWarnings ( ( String ) " unused " ) 
 - int i ; 
 - @ SuppressWarnings ( { } ) 
 - int j ; 
 - @ SuppressWarnings ( { UNUSED } ) 
 - int k ; 
 - @ SuppressWarnings ( { " unused " , true ? " unused " : " " } ) 
 - int l ; 
 - } 
 - 
 - class CustomSuppressWarnings { 
 - @ SuppressWarnings 
 - private @ interface SuppressWarnings { 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsSingle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsSingle . java 
 deleted file mode 100644 
 index 58fbc24 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsSingle . java 
 + + + / dev / null 
 @ @ - 1 , 87 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 - 
 - import java . lang . annotation . Documented ; 
 - 
 - @ SuppressWarnings ( " unchecked " ) 
 - public class InputSuppressWarningsSingle 
 - { 
 - @ SuppressWarnings ( " " ) 
 - class Empty { 
 - 
 - @ SuppressWarnings ( " " ) 
 - public Empty ( ) { 
 - 
 - } 
 - } 
 - 
 - @ SuppressWarnings ( " unused " ) 
 - enum Duh { 
 - 
 - @ SuppressWarnings ( " unforgiven " ) 
 - D ; 
 - 
 - public static void foo ( ) { 
 - 
 - @ SuppressWarnings ( " unused " ) 
 - Object o = new InputSuppressWarningsSingle ( ) { 
 - 
 - @ Override 
 - @ SuppressWarnings ( " unchecked " ) 
 - public String toString ( ) { 
 - return " " ; 
 - } 
 - } ; 
 - } 
 - } 
 - 
 - @ SuppressWarnings ( " abcun " ) 
 - @ Documented 
 - @ interface Sweet { 
 - int cool ( ) ; 
 - } 
 - 
 - @ Documented 
 - @ SuppressWarnings ( " abcun " ) 
 - @ interface MoreSweetness { 
 - 
 - @ SuppressWarnings ( " unused " ) 
 - int cool ( ) ; 
 - } 
 - 
 - public class Junk { 
 - 
 - @ SuppressWarnings ( " " ) 
 - int a = 1 ; 
 - 
 - @ SuppressWarnings ( " unchecked " ) 
 - @ Deprecated 
 - int b = 1 ; 
 - void doFoo ( String s , @ SuppressWarnings ( " unchecked " ) String y ) { 
 - 
 - } 
 - } 
 - 
 - @ SuppressWarnings ( ( false ) ? " unchecked " : " " ) 
 - class Cond { 
 - 
 - @ SuppressWarnings ( ( false ) ? " " : " unchecked " ) 
 - public Cond ( ) { 
 - 
 - } 
 - 
 - @ SuppressWarnings ( ( false ) ? ( true ) ? " " : " unused " : " unchecked " ) 
 - public void aCond1 ( ) { 
 - 
 - } 
 - 
 - @ SuppressWarnings ( ( false ) ? " unchecked " : ( true ) ? " " : " unused " ) 
 - public void aCond2 ( ) { 
 - 
 - } 
 - 
 - @ java . lang . SuppressWarnings ( ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " ) 
 - public void seriously ( ) { 
 - 
 - } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsValuePair . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsValuePair . java 
 deleted file mode 100644 
 index c0e0403 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputSuppressWarningsValuePair . java 
 + + + / dev / null 
 @ @ - 1 , 14 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 - 
 - import java . util . ArrayList ; 
 - import java . util . List ; 
 - 
 - public class InputSuppressWarningsValuePair 
 - { 
 - public static final String UNCHECKED = " unchecked " ; 
 - 
 - public static void test ( ) { 
 - @ SuppressWarnings ( value = UNCHECKED ) 
 - final List < String > dummyOne = ( List < String > ) new ArrayList ( ) ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsCompact . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsCompact . java 
 new file mode 100644 
 index 0000000 . . 2051d90 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsCompact . java 
 @ @ - 0 , 0 + 1 , 87 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; 
 + 
 + import java . lang . annotation . Documented ; 
 + 
 + @ SuppressWarnings ( { " unchecked " , " unused " } ) 
 + public class InputSuppressWarningsCompact 
 + { 
 + @ SuppressWarnings ( { " " } ) 
 + class Empty { 
 + 
 + @ SuppressWarnings ( { " unchecked " , " " } ) 
 + public Empty ( ) { 
 + 
 + } 
 + } 
 + 
 + @ SuppressWarnings ( { " unused " } ) 
 + enum Duh { 
 + 
 + @ SuppressWarnings ( { " unforgiven " , " un " } ) 
 + D ; 
 + 
 + public static void foo ( ) { 
 + 
 + @ SuppressWarnings ( { " unused " } ) 
 + Object o = new InputSuppressWarningsCompact ( ) { 
 + 
 + @ Override 
 + @ SuppressWarnings ( { " unchecked " } ) 
 + public String toString ( ) { 
 + return " " ; 
 + } 
 + } ; 
 + } 
 + } 
 + 
 + @ SuppressWarnings ( { " abcun " } ) 
 + @ Documented 
 + @ interface Sweet { 
 + int cool ( ) ; 
 + } 
 + 
 + @ Documented 
 + @ SuppressWarnings ( { } ) 
 + @ interface MoreSweetness { 
 + 
 + @ SuppressWarnings ( { " unused " , " bleh " } ) 
 + int cool ( ) ; 
 + } 
 + 
 + public class Junk { 
 + 
 + @ SuppressWarnings ( { } ) 
 + int a = 1 ; 
 + 
 + @ SuppressWarnings ( { " unchecked " } ) 
 + @ Deprecated 
 + int b = 1 ; 
 + void doFoo ( String s , @ SuppressWarnings ( { " unchecked " } ) String y ) { 
 + 
 + } 
 + } 
 + 
 + @ SuppressWarnings ( { ( false ) ? " unchecked " : " " , ( false ) ? " unchecked " : " " } ) 
 + class Cond { 
 + 
 + @ SuppressWarnings ( { ( false ) ? " " : " unchecked " } ) 
 + public Cond ( ) { 
 + 
 + } 
 + 
 + @ SuppressWarnings ( { ( false ) ? ( true ) ? " " : " unused " : " unchecked " , ( false ) ? ( true ) ? " " : " unused " : " unchecked " } ) 
 + public void aCond1 ( ) { 
 + 
 + } 
 + 
 + @ SuppressWarnings ( { ( false ) ? " unchecked " : ( true ) ? " " : " unused " } ) 
 + public void aCond2 ( ) { 
 + 
 + } 
 + 
 + @ java . lang . SuppressWarnings ( { ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " , ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " } ) 
 + public void seriously ( ) { 
 + 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsConstants . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsConstants . java 
 new file mode 100644 
 index 0000000 . . 2271f92 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsConstants . java 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; 
 + 
 + import java . util . List ; 
 + import java . util . ArrayList ; 
 + 
 + public class InputSuppressWarningsConstants 
 + { 
 + public static final String UNCHECKED = " unchecked " ; 
 + 
 + public static void test ( ) { 
 + @ SuppressWarnings ( UNCHECKED ) 
 + final List < String > dummyOne = ( List < String > ) new ArrayList ( ) ; 
 + @ SuppressWarnings ( InputSuppressWarningsConstants . UNCHECKED ) 
 + final List < String > dummyTwo = ( List < String > ) new ArrayList ( ) ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsExpanded . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsExpanded . java 
 new file mode 100644 
 index 0000000 . . 91a07e7 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsExpanded . java 
 @ @ - 0 , 0 + 1 , 87 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; 
 + 
 + import java . lang . annotation . Documented ; 
 + 
 + @ SuppressWarnings ( value = { " unchecked " , " unused " } ) 
 + public class InputSuppressWarningsExpanded 
 + { 
 + @ SuppressWarnings ( value = { " " } ) 
 + class Empty { 
 + 
 + @ SuppressWarnings ( value = { " unchecked " , " " } ) 
 + public Empty ( ) { 
 + 
 + } 
 + } 
 + 
 + @ SuppressWarnings ( value = { " unused " } ) 
 + enum Duh { 
 + 
 + @ SuppressWarnings ( value = { " unforgiven " , " un " } ) 
 + D ; 
 + 
 + public static void foo ( ) { 
 + 
 + @ SuppressWarnings ( value = { " unused " } ) 
 + Object o = new InputSuppressWarningsExpanded ( ) { 
 + 
 + @ Override 
 + @ SuppressWarnings ( value = { " unchecked " } ) 
 + public String toString ( ) { 
 + return " " ; 
 + } 
 + } ; 
 + } 
 + } 
 + 
 + @ SuppressWarnings ( value = { " abcun " } ) 
 + @ Documented 
 + @ interface Sweet { 
 + int cool ( ) ; 
 + } 
 + 
 + @ Documented 
 + @ SuppressWarnings ( value = { } ) 
 + @ interface MoreSweetness { 
 + 
 + @ SuppressWarnings ( value = { " unused " , " bleh " } ) 
 + int cool ( ) ; 
 + } 
 + 
 + public class Junk { 
 + 
 + @ SuppressWarnings ( value = { } ) 
 + int a = 1 ; 
 + 
 + @ SuppressWarnings ( value = { " unchecked " } ) 
 + @ Deprecated 
 + int b = 1 ; 
 + void doFoo ( String s , @ SuppressWarnings ( value = { " unchecked " } ) String y ) { 
 + 
 + } 
 + } 
 + 
 + @ SuppressWarnings ( value = { ( false ) ? " unchecked " : " " , ( false ) ? " unchecked " : " " } ) 
 + class Cond { 
 + 
 + @ SuppressWarnings ( value = { ( false ) ? " " : " unchecked " } ) 
 + public Cond ( ) { 
 + 
 + } 
 + 
 + @ SuppressWarnings ( value = { ( false ) ? ( true ) ? " " : " unused " : " unchecked " , ( false ) ? ( true ) ? " " : " unused " : " unchecked " } ) 
 + public void aCond1 ( ) { 
 + 
 + } 
 + 
 + @ SuppressWarnings ( value = { ( false ) ? " unchecked " : ( true ) ? " " : " unused " } ) 
 + public void aCond2 ( ) { 
 + 
 + } 
 + 
 + @ java . lang . SuppressWarnings ( value = { ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " , ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " } ) 
 + public void seriously ( ) { 
 + 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsHolder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsHolder . java 
 new file mode 100644 
 index 0000000 . . 721b3f1 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsHolder . java 
 @ @ - 0 , 0 + 1 , 36 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; 
 + 
 + public class InputSuppressWarningsHolder { 
 + static final String UNUSED = " unused " ; 
 + 
 + @ SuppressWarnings ( UNUSED ) 
 + int a ; 
 + @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) 
 + int b ; 
 + @ SuppressWarnings ( com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings . InputSuppressWarningsHolder . UNUSED ) 
 + int c ; 
 + @ SuppressWarnings ( value = UNUSED ) 
 + int d ; 
 + @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) 
 + int e ; 
 + @ SuppressWarnings ( value = com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings . InputSuppressWarningsHolder . UNUSED ) 
 + int f ; 
 + @ SuppressWarnings ( ( 1 ! = 1 ) ? " " : " unused " ) 
 + int g ; 
 + @ SuppressWarnings ( " un " + " used " ) 
 + int h ; 
 + @ SuppressWarnings ( ( String ) " unused " ) 
 + int i ; 
 + @ SuppressWarnings ( { } ) 
 + int j ; 
 + @ SuppressWarnings ( { UNUSED } ) 
 + int k ; 
 + @ SuppressWarnings ( { " unused " , true ? " unused " : " " } ) 
 + int l ; 
 + } 
 + 
 + class CustomSuppressWarnings { 
 + @ SuppressWarnings 
 + private @ interface SuppressWarnings { 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsSingle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsSingle . java 
 new file mode 100644 
 index 0000000 . . 5d6f16f 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsSingle . java 
 @ @ - 0 , 0 + 1 , 87 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; 
 + 
 + import java . lang . annotation . Documented ; 
 + 
 + @ SuppressWarnings ( " unchecked " ) 
 + public class InputSuppressWarningsSingle 
 + { 
 + @ SuppressWarnings ( " " ) 
 + class Empty { 
 + 
 + @ SuppressWarnings ( " " ) 
 + public Empty ( ) { 
 + 
 + } 
 + } 
 + 
 + @ SuppressWarnings ( " unused " ) 
 + enum Duh { 
 + 
 + @ SuppressWarnings ( " unforgiven " ) 
 + D ; 
 + 
 + public static void foo ( ) { 
 + 
 + @ SuppressWarnings ( " unused " ) 
 + Object o = new InputSuppressWarningsSingle ( ) { 
 + 
 + @ Override 
 + @ SuppressWarnings ( " unchecked " ) 
 + public String toString ( ) { 
 + return " " ; 
 + } 
 + } ; 
 + } 
 + } 
 + 
 + @ SuppressWarnings ( " abcun " ) 
 + @ Documented 
 + @ interface Sweet { 
 + int cool ( ) ; 
 + } 
 + 
 + @ Documented 
 + @ SuppressWarnings ( " abcun " ) 
 + @ interface MoreSweetness { 
 + 
 + @ SuppressWarnings ( " unused " ) 
 + int cool ( ) ; 
 + } 
 + 
 + public class Junk { 
 + 
 + @ SuppressWarnings ( " " ) 
 + int a = 1 ; 
 + 
 + @ SuppressWarnings ( " unchecked " ) 
 + @ Deprecated 
 + int b = 1 ; 
 + void doFoo ( String s , @ SuppressWarnings ( " unchecked " ) String y ) { 
 + 
 + } 
 + } 
 + 
 + @ SuppressWarnings ( ( false ) ? " unchecked " : " " ) 
 + class Cond { 
 + 
 + @ SuppressWarnings ( ( false ) ? " " : " unchecked " ) 
 + public Cond ( ) { 
 + 
 + } 
 + 
 + @ SuppressWarnings ( ( false ) ? ( true ) ? " " : " unused " : " unchecked " ) 
 + public void aCond1 ( ) { 
 + 
 + } 
 + 
 + @ SuppressWarnings ( ( false ) ? " unchecked " : ( true ) ? " " : " unused " ) 
 + public void aCond2 ( ) { 
 + 
 + } 
 + 
 + @ java . lang . SuppressWarnings ( ( false ) ? " unchecked " : ( " " = = " " ) ? ( false ) ? ( true ) ? " " : " foo " : " " : " unused " ) 
 + public void seriously ( ) { 
 + 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsValuePair . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsValuePair . java 
 new file mode 100644 
 index 0000000 . . 09d0bf0 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / suppresswarnings / InputSuppressWarningsValuePair . java 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation . suppresswarnings ; 
 + 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 + 
 + public class InputSuppressWarningsValuePair 
 + { 
 + public static final String UNCHECKED = " unchecked " ; 
 + 
 + public static void test ( ) { 
 + @ SuppressWarnings ( value = UNCHECKED ) 
 + final List < String > dummyOne = ( List < String > ) new ArrayList ( ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index 2c95692 . . 3a28758 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 9 , 7 + 9 , 7 @ @ matrix : 
 include : 
 # unit tests ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " 
 + env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " DEPLOY = " true " 
 
 # unit tests in German locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 @ @ - 226 , 6 + 226 , 7 @ @ script : eval $ CMD 
 
 after _ success : 
 - eval $ COVERAGE _ CMD 
 + - if [ [ $ TRAVIS _ REPO _ SLUG = = ' checkstyle / checkstyle ' & & $ TRAVIS _ BRANCH = = ' master ' & & $ TRAVIS _ PULL _ REQUEST = = ' false ' & & $ DEPLOY = = ' true ' ] ] ; then mvn - s config / deploy - settings . xml deploy ; fi 
 
 cache : 
 directories : 
 diff - - git a / config / deploy - settings . xml b / config / deploy - settings . xml 
 new file mode 100644 
 index 0000000 . . 9a73bbf 
 - - - / dev / null 
 + + + b / config / deploy - settings . xml 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + < settings xmlns = " http : / / maven . apache . org / SETTINGS / 1 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " xsi : schemaLocation = " http : / / maven . apache . org / SETTINGS / 1 . 0 . 0 http : / / maven . apache . org / xsd / settings - 1 . 0 . 0 . xsd " > 
 + < servers > 
 + < server > 
 + < id > sonatype - nexus - snapshots < / id > 
 + < username > $ { env . CI _ DEPLOY _ USERNAME } < / username > 
 + < password > $ { env . CI _ DEPLOY _ PASSWORD } < / password > 
 + < / server > 
 + < / servers > 
 + < / settings > 
 \ No newline at end of file
