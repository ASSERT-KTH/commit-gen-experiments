BLEU SCORE: 0.2282484365812207

TEST MSG: Issue # 2805 : fixed false positive in SummaryJavadoc on inheritDoc tag
GENERATED MSG: Issue # 2411 : Fix false positive in JavadocStyle check on inheritDoc tag

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java <nl> index a89753a . . 0554981 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java <nl> @ @ - 131 , 7 + 131 , 9 @ @ public class SummaryJavadocCheck extends AbstractJavadocCheck { <nl> String firstSentence = getFirstSentence ( ast ) ; <nl> final int endOfSentence = firstSentence . lastIndexOf ( period ) ; <nl> if ( endOfSentence = = - 1 ) { <nl> - log ( ast . getLineNumber ( ) , MSG _ SUMMARY _ FIRST _ SENTENCE ) ; <nl> + if ( ! firstSentence . trim ( ) . startsWith ( " { @ inheritDoc } " ) ) { <nl> + log ( ast . getLineNumber ( ) , MSG _ SUMMARY _ FIRST _ SENTENCE ) ; <nl> + } <nl> } <nl> else { <nl> firstSentence = firstSentence . substring ( 0 , endOfSentence ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputCorrectSummaryJavaDoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputCorrectSummaryJavaDoc . java <nl> index 93f441e . . 0c5a130 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputCorrectSummaryJavaDoc . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputCorrectSummaryJavaDoc . java <nl> @ @ - 29 , 6 + 29 , 9 @ @ class InputCorrectSummaryJavaDoc { <nl> * / <nl> void foo6 ( ) { } <nl> <nl> + / * * { @ inheritDoc } * / <nl> + void foo7 ( ) { } <nl> + <nl> / * * <nl> * < a href = " mailto : vlad @ htmlbook . ru " / > <nl> * /
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> index 1b13bb9 . . 622d579 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> @ @ - 80 , 7 + 80 , 11 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> fail ( ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> - / / expected exception <nl> + assertTrue ( ex . getMessage ( ) <nl> + . startsWith ( " cannot initialize module " <nl> + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " <nl> + + " - Unable to find : " ) ) ; <nl> + assertTrue ( ex . getMessage ( ) . endsWith ( " nonExisting . file " ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 94 , 7 + 98 , 11 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> fail ( ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> - / / expected exception <nl> + assertEquals ( " cannot initialize module " <nl> + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " <nl> + + " - Cannot set property ' charset ' to ' XSO - 8859 - 1 ' in module " <nl> + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " , <nl> + ex . getMessage ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 107 , 7 + 115 , 11 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> fail ( " Checker creation should not succeed with invalid headerFile " ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> - / / expected exception <nl> + assertEquals ( " cannot initialize module " <nl> + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " <nl> + + " - Cannot set property ' headerFile ' to ' ' in module " <nl> + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " , <nl> + ex . getMessage ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java <nl> index e2a0d88 . . e2d00fa 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . header ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck . MSG _ MISMATCH ; <nl> import static com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck . MSG _ MISSING ; <nl> + import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . fail ; <nl> <nl> import java . io . File ; <nl> @ @ - 90 , 7 + 91 , 9 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> ConversionException . class ) ) ; <nl> } <nl> catch ( ConversionException ex ) { <nl> - / / expected <nl> + assertEquals ( " Unable to parse format : ^ / * * \ \ n * " <nl> + + " Licensed to the Apache Software Foundation ( ASF ) " , <nl> + ex . getMessage ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 111 , 7 + 114 , 11 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> fail ( " Checker creation should not succeed with invalid headerFile " ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> - / / expected exception <nl> + assertEquals ( " cannot initialize module " <nl> + + " com . puppycrawl . tools . checkstyle . checks . header . RegexpHeaderCheck " <nl> + + " - Cannot set property ' headerFile ' to ' ' in " <nl> + + " module com . puppycrawl . tools . checkstyle . checks . header . RegexpHeaderCheck " , <nl> + ex . getMessage ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 159 , 7 + 166 , 11 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> fail ( " Checker creation should not succeed when regexp spans multiple lines " ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> - / / expected exception <nl> + assertEquals ( " cannot initialize module " <nl> + + " com . puppycrawl . tools . checkstyle . checks . header . RegexpHeaderCheck " <nl> + + " - Cannot set property ' header ' to ' ^ ( . * \ \ n . * ) ' in module " <nl> + + " com . puppycrawl . tools . checkstyle . checks . header . RegexpHeaderCheck " , <nl> + ex . getMessage ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheckTest . java <nl> index 8c7ea1e . . f844139 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheckTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . naming ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; <nl> import static org . junit . Assert . assertArrayEquals ; <nl> + import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . fail ; <nl> <nl> import java . io . File ; <nl> @ @ - 55 , 7 + 56 , 11 @ @ public class ConstantNameCheckTest <nl> fail ( ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> - / / expected exception <nl> + assertEquals ( " cannot initialize module " <nl> + + " com . puppycrawl . tools . checkstyle . TreeWalker - Cannot set property " <nl> + + " ' format ' to ' \ \ ' in module " <nl> + + " com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck " , <nl> + ex . getMessage ( ) ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java 
 index a89753a . . 0554981 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java 
 @ @ - 131 , 7 + 131 , 9 @ @ public class SummaryJavadocCheck extends AbstractJavadocCheck { 
 String firstSentence = getFirstSentence ( ast ) ; 
 final int endOfSentence = firstSentence . lastIndexOf ( period ) ; 
 if ( endOfSentence = = - 1 ) { 
 - log ( ast . getLineNumber ( ) , MSG _ SUMMARY _ FIRST _ SENTENCE ) ; 
 + if ( ! firstSentence . trim ( ) . startsWith ( " { @ inheritDoc } " ) ) { 
 + log ( ast . getLineNumber ( ) , MSG _ SUMMARY _ FIRST _ SENTENCE ) ; 
 + } 
 } 
 else { 
 firstSentence = firstSentence . substring ( 0 , endOfSentence ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputCorrectSummaryJavaDoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputCorrectSummaryJavaDoc . java 
 index 93f441e . . 0c5a130 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputCorrectSummaryJavaDoc . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputCorrectSummaryJavaDoc . java 
 @ @ - 29 , 6 + 29 , 9 @ @ class InputCorrectSummaryJavaDoc { 
 * / 
 void foo6 ( ) { } 
 
 + / * * { @ inheritDoc } * / 
 + void foo7 ( ) { } 
 + 
 / * * 
 * < a href = " mailto : vlad @ htmlbook . ru " / > 
 * /

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 index 1b13bb9 . . 622d579 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 @ @ - 80 , 7 + 80 , 11 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { 
 fail ( ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 - / / expected exception 
 + assertTrue ( ex . getMessage ( ) 
 + . startsWith ( " cannot initialize module " 
 + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " 
 + + " - Unable to find : " ) ) ; 
 + assertTrue ( ex . getMessage ( ) . endsWith ( " nonExisting . file " ) ) ; 
 } 
 } 
 
 @ @ - 94 , 7 + 98 , 11 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { 
 fail ( ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 - / / expected exception 
 + assertEquals ( " cannot initialize module " 
 + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " 
 + + " - Cannot set property ' charset ' to ' XSO - 8859 - 1 ' in module " 
 + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " , 
 + ex . getMessage ( ) ) ; 
 } 
 } 
 
 @ @ - 107 , 7 + 115 , 11 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { 
 fail ( " Checker creation should not succeed with invalid headerFile " ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 - / / expected exception 
 + assertEquals ( " cannot initialize module " 
 + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " 
 + + " - Cannot set property ' headerFile ' to ' ' in module " 
 + + " com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck " , 
 + ex . getMessage ( ) ) ; 
 } 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java 
 index e2a0d88 . . e2d00fa 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / RegexpHeaderCheckTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . header ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck . MSG _ MISMATCH ; 
 import static com . puppycrawl . tools . checkstyle . checks . header . HeaderCheck . MSG _ MISSING ; 
 + import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . fail ; 
 
 import java . io . File ; 
 @ @ - 90 , 7 + 91 , 9 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { 
 ConversionException . class ) ) ; 
 } 
 catch ( ConversionException ex ) { 
 - / / expected 
 + assertEquals ( " Unable to parse format : ^ / * * \ \ n * " 
 + + " Licensed to the Apache Software Foundation ( ASF ) " , 
 + ex . getMessage ( ) ) ; 
 } 
 } 
 
 @ @ - 111 , 7 + 114 , 11 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { 
 fail ( " Checker creation should not succeed with invalid headerFile " ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 - / / expected exception 
 + assertEquals ( " cannot initialize module " 
 + + " com . puppycrawl . tools . checkstyle . checks . header . RegexpHeaderCheck " 
 + + " - Cannot set property ' headerFile ' to ' ' in " 
 + + " module com . puppycrawl . tools . checkstyle . checks . header . RegexpHeaderCheck " , 
 + ex . getMessage ( ) ) ; 
 } 
 } 
 
 @ @ - 159 , 7 + 166 , 11 @ @ public class RegexpHeaderCheckTest extends BaseFileSetCheckTestSupport { 
 fail ( " Checker creation should not succeed when regexp spans multiple lines " ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 - / / expected exception 
 + assertEquals ( " cannot initialize module " 
 + + " com . puppycrawl . tools . checkstyle . checks . header . RegexpHeaderCheck " 
 + + " - Cannot set property ' header ' to ' ^ ( . * \ \ n . * ) ' in module " 
 + + " com . puppycrawl . tools . checkstyle . checks . header . RegexpHeaderCheck " , 
 + ex . getMessage ( ) ) ; 
 } 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheckTest . java 
 index 8c7ea1e . . f844139 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheckTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . naming ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; 
 import static org . junit . Assert . assertArrayEquals ; 
 + import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . fail ; 
 
 import java . io . File ; 
 @ @ - 55 , 7 + 56 , 11 @ @ public class ConstantNameCheckTest 
 fail ( ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 - / / expected exception 
 + assertEquals ( " cannot initialize module " 
 + + " com . puppycrawl . tools . checkstyle . TreeWalker - Cannot set property " 
 + + " ' format ' to ' \ \ ' in module " 
 + + " com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck " , 
 + ex . getMessage ( ) ) ; 
 } 
 } 

