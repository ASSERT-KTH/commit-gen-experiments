BLEU SCORE: 0.07768562846380175

TEST MSG: Issue # 4934 : Enforced WS in appropriate places for block javadoc tags
GENERATED MSG: Issue # 4381 : Added new UTs for javadoc grammar

TEST DIFF (one line): diff - - git a / . gitattributes b / . gitattributes <nl> index b9c4d75 . . e87e25e 100644 <nl> - - - a / . gitattributes <nl> + + + b / . gitattributes <nl> @ @ - 2 , 3 + 2 , 4 @ @ <nl> / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / newlineatendoffile / InputNewlineCrlfAtEndOfFile . java eol = crlf <nl> / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / InputNewlineCrAtEndOfFile . java - text <nl> / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / newlineatendoffile / InputNewlineCrAtEndOfFile . java - text <nl> + / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc eol = lf <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 <nl> index a1bd3ff . . b1a3399 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 <nl> @ @ - 861 , 32 + 861 , 36 @ @ reference : <nl> ; <nl> parameters : LEFT _ BRACE ( ARGUMENT | COMMA | WS | NEWLINE | LEADING _ ASTERISK ) * RIGHT _ BRACE ; <nl> <nl> - javadocTag : AUTHOR _ LITERAL ( WS | NEWLINE ) * description ? <nl> + javadocTag : AUTHOR _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | DEPRECATED _ LITERAL ( WS | NEWLINE ) * description ? <nl> + | DEPRECATED _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | EXCEPTION _ LITERAL ( WS | NEWLINE ) * CLASS _ NAME ? ( WS | NEWLINE ) * description ? <nl> + | EXCEPTION _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) CLASS _ NAME ) ? ( WS | NEWLINE ) * <nl> + ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | PARAM _ LITERAL ( WS | NEWLINE ) * PARAMETER _ NAME ? ( WS | NEWLINE ) * description ? <nl> + | PARAM _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) PARAMETER _ NAME ) ? ( WS | NEWLINE ) * <nl> + ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | RETURN _ LITERAL ( WS | NEWLINE ) * description ? <nl> + | RETURN _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> <nl> | SEE _ LITERAL ( WS | NEWLINE ) * reference ? ( STRING | htmlElement ) * ( WS | NEWLINE ) * description ? <nl> <nl> - | SERIAL _ LITERAL ( WS | NEWLINE ) * ( LITERAL _ INCLUDE | LITERAL _ EXCLUDE ) ? description ? <nl> + | SERIAL _ LITERAL ( WS | NEWLINE ) * <nl> + ( ( WS | NEWLINE ) description | LITERAL _ INCLUDE | LITERAL _ EXCLUDE ) ? ( WS | NEWLINE ) * <nl> <nl> - | SERIAL _ DATA _ LITERAL ( WS | NEWLINE ) * description ? <nl> + | SERIAL _ DATA _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | SERIAL _ FIELD _ LITERAL ( WS | NEWLINE ) * FIELD _ NAME ? ( WS | NEWLINE ) * FIELD _ TYPE ? <nl> - ( WS | NEWLINE ) * description ? <nl> + | SERIAL _ FIELD _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) FIELD _ NAME ) ? ( WS | NEWLINE ) * <nl> + ( ( WS | NEWLINE ) FIELD _ TYPE ) ? ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | SINCE _ LITERAL ( WS | NEWLINE ) * description ? <nl> + | SINCE _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | THROWS _ LITERAL ( WS | NEWLINE ) * CLASS _ NAME ? ( WS | NEWLINE ) * description ? <nl> + | THROWS _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) CLASS _ NAME ) ? ( WS | NEWLINE ) * <nl> + ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | VERSION _ LITERAL ( WS | NEWLINE ) * description ? <nl> + | VERSION _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> <nl> - | CUSTOM _ NAME ( WS | NEWLINE ) * description ? <nl> + | CUSTOM _ NAME ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? <nl> ; <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / JAVADOC INLINE TAGS / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> index 62eacbd . . 70aeb72 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> @ @ - 135 , 4 + 135 , 12 @ @ public class AstTreeStringPrinterTest extends AbstractTreeTestSupport { <nl> getPath ( " InputFullOfSinglelineComments . java " ) , <nl> AstTreeStringPrinter . PrintOptions . WITH _ COMMENTS ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testJavadocTagsWithoutArgs ( ) throws Exception { <nl> + verifyJavaAndJavadocAst ( <nl> + getPath ( " expectedAstTreeStringPrinterJavadocTagsWithoutArgsAst . txt " ) , <nl> + getPath ( " InputAstTreeStringPrinterJavadocTagsWithoutArgs . java " ) <nl> + ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java <nl> index 1e9440e . . ea63367 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java <nl> @ @ - 233 , 4 + 233 , 5 @ @ public class DetailNodeTreeStringPrinterTest extends AbstractTreeTestSupport { <nl> expected , ex . getMessage ( ) ) ; <nl> } <nl> } <nl> + <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> index 58d2706 . . dc1dfff 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> @ @ - 276 , 6 + 276 , 27 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { <nl> JavadocVisitLeaveCheck . visitCount , JavadocVisitLeaveCheck . leaveCount ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testNoWsBeforeDescriptionInJavadocTags ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( TempCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 13 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 23 , " mismatched input ' d ' expecting < EOF > " , " JAVADOC " ) , <nl> + " 22 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 30 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , <nl> + " 28 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 39 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , <nl> + " 40 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 34 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , <nl> + " 48 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 31 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , <nl> + " 57 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , <nl> + 15 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java " ) , <nl> + expected ) ; <nl> + } <nl> + <nl> private static class TempCheck extends AbstractJavadocCheck { <nl> <nl> @ Override <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> index d39044e . . 8deb981 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> @ @ - 269 , 4 + 269 , 10 @ @ public class JavadocParseTreeTest extends AbstractTreeTestSupport { <nl> verifyJavadocTree ( getHtmlPath ( " expectedHtmlVoidElementEmbedAst . txt " ) , <nl> getHtmlPath ( " InputHtmlVoidElementEmbed . javadoc " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testSpaceBeforeDescriptionInBlockJavadocTags ( ) throws Exception { <nl> + verifyJavadocTree ( getDocPath ( " expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt " ) , <nl> + getDocPath ( " InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc " ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadocTagsWithoutArgs . java b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadocTagsWithoutArgs . java <nl> new file mode 100644 <nl> index 0000000 . . cf6ecb1 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadocTagsWithoutArgs . java <nl> @ @ - 0 , 0 + 1 , 60 @ @ <nl> + package com . puppycrawl . tools . checkstyle . astprinter ; <nl> + <nl> + import java . io . Serializable ; <nl> + <nl> + / * * @ author * / <nl> + public class InputAstTreeStringPrinterJavadocTagsWithoutArgs implements Serializable { <nl> + / * * @ serial * / <nl> + private static final long serialVersionUID = 7556448691029650757L ; <nl> + <nl> + / * * @ see * / <nl> + private static int field2 ; <nl> + <nl> + / * * @ since * / <nl> + private static String field3 ; <nl> + <nl> + / * * @ version * / <nl> + private static Object field4 ; <nl> + <nl> + / * * serialField * / <nl> + private static Object field5 ; <nl> + <nl> + / * * @ exception * / <nl> + public static void method1 ( ) { <nl> + <nl> + } <nl> + <nl> + / * * @ throws * / <nl> + public static void method2 ( ) { <nl> + <nl> + } <nl> + <nl> + / * * @ return * / <nl> + public static int method3 ( ) { <nl> + return - 1 ; <nl> + } <nl> + <nl> + / * * @ param * / <nl> + public static void method4 ( int a ) { <nl> + <nl> + } <nl> + <nl> + / * * @ customTag * / <nl> + public static void method5 ( int a ) { <nl> + <nl> + } <nl> + <nl> + / * * @ deprecated * / <nl> + public static void method6 ( int a ) { <nl> + <nl> + } <nl> + <nl> + / * * @ serialData * / <nl> + private void readObject ( java . io . ObjectInputStream inputStream ) { <nl> + <nl> + } <nl> + <nl> + private void writeObject ( java . io . ObjectOutputStream outputStream ) { <nl> + <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedAstTreeStringPrinterJavadocTagsWithoutArgsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedAstTreeStringPrinterJavadocTagsWithoutArgsAst . txt <nl> new file mode 100644 <nl> index 0000000 . . 249d1cd <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedAstTreeStringPrinterJavadocTagsWithoutArgsAst . txt <nl> @ @ - 0 , 0 + 1 , 295 @ @ <nl> + PACKAGE _ DEF - > package [ 1 : 0 ] <nl> + | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 39 ] <nl> + | - - DOT - > . [ 1 : 39 ] <nl> + | | - - DOT - > . [ 1 : 28 ] <nl> + | | | - - DOT - > . [ 1 : 22 ] <nl> + | | | | - - DOT - > . [ 1 : 11 ] <nl> + | | | | | - - IDENT - > com [ 1 : 8 ] <nl> + | | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] <nl> + | | | ` - - IDENT - > tools [ 1 : 23 ] <nl> + | | ` - - IDENT - > checkstyle [ 1 : 29 ] <nl> + | ` - - IDENT - > astprinter [ 1 : 40 ] <nl> + ` - - SEMI - > ; [ 1 : 50 ] <nl> + IMPORT - > import [ 3 : 0 ] <nl> + | - - DOT - > . [ 3 : 14 ] <nl> + | | - - DOT - > . [ 3 : 11 ] <nl> + | | | - - IDENT - > java [ 3 : 7 ] <nl> + | | ` - - IDENT - > io [ 3 : 12 ] <nl> + | ` - - IDENT - > Serializable [ 3 : 15 ] <nl> + ` - - SEMI - > ; [ 3 : 27 ] <nl> + CLASS _ DEF - > CLASS _ DEF [ 6 : 0 ] <nl> + | - - MODIFIERS - > MODIFIERS [ 6 : 0 ] <nl> + | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 5 : 0 ] <nl> + | | | - - COMMENT _ CONTENT - > * @ author [ 5 : 2 ] <nl> + | | | ` - - JAVADOC - > JAVADOC [ 5 : 3 ] <nl> + | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 5 : 3 ] <nl> + | | | | ` - - AUTHOR _ LITERAL - > @ author [ 5 : 3 ] <nl> + | | | ` - - EOF - > < EOF > [ 5 : 10 ] <nl> + | | ` - - BLOCK _ COMMENT _ END - > * / [ 5 : 9 ] <nl> + | ` - - LITERAL _ PUBLIC - > public [ 6 : 0 ] <nl> + | - - LITERAL _ CLASS - > class [ 6 : 7 ] <nl> + | - - IDENT - > InputAstTreeStringPrinterJavadocTagsWithoutArgs [ 6 : 13 ] <nl> + | - - IMPLEMENTS _ CLAUSE - > implements [ 6 : 61 ] <nl> + | ` - - IDENT - > Serializable [ 6 : 72 ] <nl> + ` - - OBJBLOCK - > OBJBLOCK [ 6 : 84 ] <nl> + | - - LCURLY - > { [ 6 : 84 ] <nl> + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 8 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 8 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 7 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ serial [ 7 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 7 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 7 : 7 ] <nl> + | | | | | ` - - SERIAL _ LITERAL - > @ serial [ 7 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 7 : 14 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 7 : 13 ] <nl> + | | | - - LITERAL _ PRIVATE - > private [ 8 : 4 ] <nl> + | | | - - LITERAL _ STATIC - > static [ 8 : 12 ] <nl> + | | ` - - FINAL - > final [ 8 : 19 ] <nl> + | | - - TYPE - > TYPE [ 8 : 25 ] <nl> + | | ` - - LITERAL _ LONG - > long [ 8 : 25 ] <nl> + | | - - IDENT - > serialVersionUID [ 8 : 30 ] <nl> + | | - - ASSIGN - > = [ 8 : 47 ] <nl> + | | ` - - EXPR - > EXPR [ 8 : 49 ] <nl> + | | ` - - NUM _ LONG - > 7556448691029650757L [ 8 : 49 ] <nl> + | ` - - SEMI - > ; [ 8 : 69 ] <nl> + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 11 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 11 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 10 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ see [ 10 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 10 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 10 : 7 ] <nl> + | | | | | ` - - SEE _ LITERAL - > @ see [ 10 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 10 : 11 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 10 : 10 ] <nl> + | | | - - LITERAL _ PRIVATE - > private [ 11 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 11 : 12 ] <nl> + | | - - TYPE - > TYPE [ 11 : 19 ] <nl> + | | ` - - LITERAL _ INT - > int [ 11 : 19 ] <nl> + | | - - IDENT - > field2 [ 11 : 23 ] <nl> + | ` - - SEMI - > ; [ 11 : 29 ] <nl> + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 14 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 14 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 13 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ since [ 13 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 13 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 13 : 7 ] <nl> + | | | | | ` - - SINCE _ LITERAL - > @ since [ 13 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 13 : 13 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 13 : 12 ] <nl> + | | | - - LITERAL _ PRIVATE - > private [ 14 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 14 : 12 ] <nl> + | | - - TYPE - > TYPE [ 14 : 19 ] <nl> + | | ` - - IDENT - > String [ 14 : 19 ] <nl> + | | - - IDENT - > field3 [ 14 : 26 ] <nl> + | ` - - SEMI - > ; [ 14 : 32 ] <nl> + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 17 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 17 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 16 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ version [ 16 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 16 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 16 : 7 ] <nl> + | | | | | ` - - VERSION _ LITERAL - > @ version [ 16 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 16 : 15 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 16 : 14 ] <nl> + | | | - - LITERAL _ PRIVATE - > private [ 17 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 17 : 12 ] <nl> + | | - - TYPE - > TYPE [ 17 : 19 ] <nl> + | | ` - - IDENT - > Object [ 17 : 19 ] <nl> + | | - - IDENT - > field4 [ 17 : 26 ] <nl> + | ` - - SEMI - > ; [ 17 : 32 ] <nl> + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 20 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 20 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 19 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * serialField [ 19 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 19 : 7 ] <nl> + | | | | | - - TEXT - > serialField [ 19 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 19 : 18 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 19 : 17 ] <nl> + | | | - - LITERAL _ PRIVATE - > private [ 20 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 20 : 12 ] <nl> + | | - - TYPE - > TYPE [ 20 : 19 ] <nl> + | | ` - - IDENT - > Object [ 20 : 19 ] <nl> + | | - - IDENT - > field5 [ 20 : 26 ] <nl> + | ` - - SEMI - > ; [ 20 : 32 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 23 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 23 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 22 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ exception [ 22 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 22 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 22 : 7 ] <nl> + | | | | | ` - - EXCEPTION _ LITERAL - > @ exception [ 22 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 22 : 17 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 22 : 16 ] <nl> + | | | - - LITERAL _ PUBLIC - > public [ 23 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 23 : 11 ] <nl> + | | - - TYPE - > TYPE [ 23 : 18 ] <nl> + | | ` - - LITERAL _ VOID - > void [ 23 : 18 ] <nl> + | | - - IDENT - > method1 [ 23 : 23 ] <nl> + | | - - LPAREN - > ( [ 23 : 30 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 23 : 31 ] <nl> + | | - - RPAREN - > ) [ 23 : 31 ] <nl> + | ` - - SLIST - > { [ 23 : 33 ] <nl> + | ` - - RCURLY - > } [ 25 : 4 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 28 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 28 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 27 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ throws [ 27 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 27 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 27 : 7 ] <nl> + | | | | | ` - - THROWS _ LITERAL - > @ throws [ 27 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 27 : 14 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 27 : 13 ] <nl> + | | | - - LITERAL _ PUBLIC - > public [ 28 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 28 : 11 ] <nl> + | | - - TYPE - > TYPE [ 28 : 18 ] <nl> + | | ` - - LITERAL _ VOID - > void [ 28 : 18 ] <nl> + | | - - IDENT - > method2 [ 28 : 23 ] <nl> + | | - - LPAREN - > ( [ 28 : 30 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 28 : 31 ] <nl> + | | - - RPAREN - > ) [ 28 : 31 ] <nl> + | ` - - SLIST - > { [ 28 : 33 ] <nl> + | ` - - RCURLY - > } [ 30 : 4 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 33 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 33 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 32 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ return [ 32 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 32 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 32 : 7 ] <nl> + | | | | | ` - - RETURN _ LITERAL - > @ return [ 32 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 32 : 14 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 32 : 13 ] <nl> + | | | - - LITERAL _ PUBLIC - > public [ 33 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 33 : 11 ] <nl> + | | - - TYPE - > TYPE [ 33 : 18 ] <nl> + | | ` - - LITERAL _ INT - > int [ 33 : 18 ] <nl> + | | - - IDENT - > method3 [ 33 : 22 ] <nl> + | | - - LPAREN - > ( [ 33 : 29 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 33 : 30 ] <nl> + | | - - RPAREN - > ) [ 33 : 30 ] <nl> + | ` - - SLIST - > { [ 33 : 32 ] <nl> + | | - - LITERAL _ RETURN - > return [ 34 : 8 ] <nl> + | | | - - EXPR - > EXPR [ 34 : 15 ] <nl> + | | | ` - - UNARY _ MINUS - > - [ 34 : 15 ] <nl> + | | | ` - - NUM _ INT - > 1 [ 34 : 16 ] <nl> + | | ` - - SEMI - > ; [ 34 : 17 ] <nl> + | ` - - RCURLY - > } [ 35 : 4 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 38 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 38 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 37 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ param [ 37 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 37 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 37 : 7 ] <nl> + | | | | | ` - - PARAM _ LITERAL - > @ param [ 37 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 37 : 13 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 37 : 12 ] <nl> + | | | - - LITERAL _ PUBLIC - > public [ 38 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 38 : 11 ] <nl> + | | - - TYPE - > TYPE [ 38 : 18 ] <nl> + | | ` - - LITERAL _ VOID - > void [ 38 : 18 ] <nl> + | | - - IDENT - > method4 [ 38 : 23 ] <nl> + | | - - LPAREN - > ( [ 38 : 30 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 38 : 31 ] <nl> + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 38 : 31 ] <nl> + | | | - - MODIFIERS - > MODIFIERS [ 38 : 31 ] <nl> + | | | - - TYPE - > TYPE [ 38 : 31 ] <nl> + | | | ` - - LITERAL _ INT - > int [ 38 : 31 ] <nl> + | | ` - - IDENT - > a [ 38 : 35 ] <nl> + | | - - RPAREN - > ) [ 38 : 36 ] <nl> + | ` - - SLIST - > { [ 38 : 38 ] <nl> + | ` - - RCURLY - > } [ 40 : 4 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 43 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 43 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 42 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ customTag [ 42 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 42 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 42 : 7 ] <nl> + | | | | | ` - - CUSTOM _ NAME - > @ customTag [ 42 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 42 : 17 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 42 : 16 ] <nl> + | | | - - LITERAL _ PUBLIC - > public [ 43 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 43 : 11 ] <nl> + | | - - TYPE - > TYPE [ 43 : 18 ] <nl> + | | ` - - LITERAL _ VOID - > void [ 43 : 18 ] <nl> + | | - - IDENT - > method5 [ 43 : 23 ] <nl> + | | - - LPAREN - > ( [ 43 : 30 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 43 : 31 ] <nl> + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 43 : 31 ] <nl> + | | | - - MODIFIERS - > MODIFIERS [ 43 : 31 ] <nl> + | | | - - TYPE - > TYPE [ 43 : 31 ] <nl> + | | | ` - - LITERAL _ INT - > int [ 43 : 31 ] <nl> + | | ` - - IDENT - > a [ 43 : 35 ] <nl> + | | - - RPAREN - > ) [ 43 : 36 ] <nl> + | ` - - SLIST - > { [ 43 : 38 ] <nl> + | ` - - RCURLY - > } [ 45 : 4 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 48 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 48 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 47 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ deprecated [ 47 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 47 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 47 : 7 ] <nl> + | | | | | ` - - DEPRECATED _ LITERAL - > @ deprecated [ 47 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 47 : 18 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 47 : 17 ] <nl> + | | | - - LITERAL _ PUBLIC - > public [ 48 : 4 ] <nl> + | | ` - - LITERAL _ STATIC - > static [ 48 : 11 ] <nl> + | | - - TYPE - > TYPE [ 48 : 18 ] <nl> + | | ` - - LITERAL _ VOID - > void [ 48 : 18 ] <nl> + | | - - IDENT - > method6 [ 48 : 23 ] <nl> + | | - - LPAREN - > ( [ 48 : 30 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 48 : 31 ] <nl> + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 48 : 31 ] <nl> + | | | - - MODIFIERS - > MODIFIERS [ 48 : 31 ] <nl> + | | | - - TYPE - > TYPE [ 48 : 31 ] <nl> + | | | ` - - LITERAL _ INT - > int [ 48 : 31 ] <nl> + | | ` - - IDENT - > a [ 48 : 35 ] <nl> + | | - - RPAREN - > ) [ 48 : 36 ] <nl> + | ` - - SLIST - > { [ 48 : 38 ] <nl> + | ` - - RCURLY - > } [ 50 : 4 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 53 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 53 : 4 ] <nl> + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 52 : 4 ] <nl> + | | | | - - COMMENT _ CONTENT - > * @ serialData [ 52 : 6 ] <nl> + | | | | ` - - JAVADOC - > JAVADOC [ 52 : 7 ] <nl> + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 52 : 7 ] <nl> + | | | | | ` - - SERIAL _ DATA _ LITERAL - > @ serialData [ 52 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 52 : 18 ] <nl> + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 52 : 17 ] <nl> + | | ` - - LITERAL _ PRIVATE - > private [ 53 : 4 ] <nl> + | | - - TYPE - > TYPE [ 53 : 12 ] <nl> + | | ` - - LITERAL _ VOID - > void [ 53 : 12 ] <nl> + | | - - IDENT - > readObject [ 53 : 17 ] <nl> + | | - - LPAREN - > ( [ 53 : 27 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 53 : 35 ] <nl> + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 53 : 35 ] <nl> + | | | - - MODIFIERS - > MODIFIERS [ 53 : 35 ] <nl> + | | | - - TYPE - > TYPE [ 53 : 35 ] <nl> + | | | ` - - DOT - > . [ 53 : 35 ] <nl> + | | | | - - DOT - > . [ 53 : 32 ] <nl> + | | | | | - - IDENT - > java [ 53 : 28 ] <nl> + | | | | ` - - IDENT - > io [ 53 : 33 ] <nl> + | | | ` - - IDENT - > ObjectInputStream [ 53 : 36 ] <nl> + | | ` - - IDENT - > inputStream [ 53 : 54 ] <nl> + | | - - RPAREN - > ) [ 53 : 65 ] <nl> + | ` - - SLIST - > { [ 53 : 67 ] <nl> + | ` - - RCURLY - > } [ 55 : 4 ] <nl> + | - - METHOD _ DEF - > METHOD _ DEF [ 57 : 4 ] <nl> + | | - - MODIFIERS - > MODIFIERS [ 57 : 4 ] <nl> + | | ` - - LITERAL _ PRIVATE - > private [ 57 : 4 ] <nl> + | | - - TYPE - > TYPE [ 57 : 12 ] <nl> + | | ` - - LITERAL _ VOID - > void [ 57 : 12 ] <nl> + | | - - IDENT - > writeObject [ 57 : 17 ] <nl> + | | - - LPAREN - > ( [ 57 : 28 ] <nl> + | | - - PARAMETERS - > PARAMETERS [ 57 : 36 ] <nl> + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 57 : 36 ] <nl> + | | | - - MODIFIERS - > MODIFIERS [ 57 : 36 ] <nl> + | | | - - TYPE - > TYPE [ 57 : 36 ] <nl> + | | | ` - - DOT - > . [ 57 : 36 ] <nl> + | | | | - - DOT - > . [ 57 : 33 ] <nl> + | | | | | - - IDENT - > java [ 57 : 29 ] <nl> + | | | | ` - - IDENT - > io [ 57 : 34 ] <nl> + | | | ` - - IDENT - > ObjectOutputStream [ 57 : 37 ] <nl> + | | ` - - IDENT - > outputStream [ 57 : 56 ] <nl> + | | - - RPAREN - > ) [ 57 : 68 ] <nl> + | ` - - SLIST - > { [ 57 : 70 ] <nl> + | ` - - RCURLY - > } [ 59 : 4 ] <nl> + ` - - RCURLY - > } [ 60 : 0 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java <nl> new file mode 100644 <nl> index 0000000 . . 4ea86e2 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java <nl> @ @ - 0 , 0 + 1 , 63 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc . abstractjavadoc ; <nl> + <nl> + import java . io . ObjectStreamField ; <nl> + import java . io . Serializable ; <nl> + <nl> + / * * <nl> + * @ author author - name < link rel = " author license " href = " / about " > <nl> + * / <nl> + public class InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags implements Serializable { <nl> + <nl> + / * * <nl> + * Parse Error from ANTLR . <nl> + * @ serial include description <nl> + * @ see < a <nl> + * href = " http : / / docs . oracle . com / javase / 7 / docs / technotes / tools / windows / javadoc . html # serial " > <nl> + * oracle docs < / a > Syntax : < b > @ serial field - description | include | exclude < / b > <nl> + * / <nl> + private static final long serialVersionUID = 8669426759693842025L ; <nl> + <nl> + / * * <nl> + * Parse Error from ANTLR . <nl> + * @ serialField Fieldname - fieldtype - fielddescription <nl> + * / <nl> + private static ObjectStreamField objectStreamField1 ; <nl> + <nl> + / * * <nl> + * Parse Error from ANTLR . <nl> + * @ serialField Fieldname fieldtype - fielddescription <nl> + * / <nl> + private static ObjectStreamField objectStreamField2 ; <nl> + <nl> + / * * <nl> + * @ serialField Fieldname - fieldtype - fielddescription < ! - - No <nl> + * error - - > <nl> + * / <nl> + private static ObjectStreamField objectStreamField3 ; <nl> + <nl> + / * * <nl> + * Parse Error from ANTLR . <nl> + * @ exception RuntimeException - description <nl> + * / <nl> + private static void method1 ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * Parse Error from ANTLR . <nl> + * @ throws RuntimeException - description <nl> + * / <nl> + private static void method2 ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * Parse Error from ANTLR . <nl> + * <nl> + * @ param a - description <nl> + * / <nl> + private static void method3 ( int a ) { <nl> + <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc <nl> new file mode 100644 <nl> index 0000000 . . 5f037f7 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc <nl> @ @ - 0 , 0 + 1 , 53 @ @ <nl> + * @ author <nl> + author - name < br attr = " value " / > <nl> + <nl> + * @ deprecated <nl> + deprecated - text <nl> + <nl> + * @ exception CustomEx <nl> + { @ link CustomEx } < b > Internal < / b > <nl> + <nl> + * @ param ParamName <nl> + Param - description <nl> + <nl> + * @ return <nl> + return - description <nl> + <nl> + * @ serial <nl> + DESCRIPTION <nl> + <nl> + * @ serial <nl> + include <nl> + <nl> + * @ serialData <nl> + DESCRIPTION <nl> + on multiple lines <nl> + <nl> + * @ serialField fieldname fieldtype <nl> + <nl> + description <nl> + <nl> + * @ since <nl> + 8 . 2 <nl> + <nl> + * @ throws Exception Exception - description <nl> + spanning multiple lines <nl> + <nl> + * @ version <nl> + 8 . 2 - 8 . 3 - 8 . 4 . . . <nl> + <nl> + * @ customTag <nl> + <nl> + DESCRIPTION <nl> + <nl> + * @ exception <nl> + Exception Exception - description <nl> + spanning multiple lines <nl> + <nl> + * @ param <nl> + ParamName <nl> + Param - description <nl> + <nl> + * @ throws <nl> + Exception Exception - description <nl> + spanning multiple lines <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllStandardJavadocTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllStandardJavadocTagsAst . txt <nl> index 7c5b5f7 . . f108958 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllStandardJavadocTagsAst . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllStandardJavadocTagsAst . txt <nl> @ @ - 611 , 14 + 611 , 12 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> | | - - SERIAL _ LITERAL - > @ serial [ 55 : 0 ] <nl> | | - - WS - > [ 55 : 7 ] <nl> | | - - LITERAL _ INCLUDE - > include [ 55 : 8 ] <nl> - | ` - - DESCRIPTION - > DESCRIPTION [ 55 : 15 ] <nl> - | ` - - NEWLINE - > \ r \ n [ 55 : 15 ] <nl> + | ` - - NEWLINE - > \ r \ n [ 55 : 15 ] <nl> | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 56 : 0 ] <nl> | | - - SERIAL _ LITERAL - > @ serial [ 56 : 0 ] <nl> | | - - WS - > [ 56 : 7 ] <nl> | | - - LITERAL _ EXCLUDE - > exclude [ 56 : 8 ] <nl> - | ` - - DESCRIPTION - > DESCRIPTION [ 56 : 15 ] <nl> - | ` - - NEWLINE - > \ r \ n [ 56 : 15 ] <nl> + | ` - - NEWLINE - > \ r \ n [ 56 : 15 ] <nl> | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 57 : 0 ] <nl> | | - - SERIAL _ FIELD _ LITERAL - > @ serialField [ 57 : 0 ] <nl> | | - - WS - > [ 57 : 12 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSerialAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSerialAst . txt <nl> index c7c0bf9 . . a2dd8e6 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSerialAst . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSerialAst . txt <nl> @ @ - 13 , 14 + 13 , 12 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] <nl> | | - - SERIAL _ LITERAL - > @ serial [ 3 : 0 ] <nl> | | - - WS - > [ 3 : 7 ] <nl> | | - - LITERAL _ INCLUDE - > include [ 3 : 8 ] <nl> - | ` - - DESCRIPTION - > DESCRIPTION [ 3 : 15 ] <nl> - | ` - - NEWLINE - > \ r \ n [ 3 : 15 ] <nl> + | ` - - NEWLINE - > \ r \ n [ 3 : 15 ] <nl> | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 4 : 0 ] <nl> | | - - SERIAL _ LITERAL - > @ serial [ 4 : 0 ] <nl> | | - - WS - > [ 4 : 7 ] <nl> | | - - LITERAL _ EXCLUDE - > exclude [ 4 : 8 ] <nl> - | ` - - DESCRIPTION - > DESCRIPTION [ 4 : 15 ] <nl> - | ` - - NEWLINE - > \ r \ n [ 4 : 15 ] <nl> + | ` - - NEWLINE - > \ r \ n [ 4 : 15 ] <nl> | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 5 : 0 ] <nl> | | - - SERIAL _ FIELD _ LITERAL - > @ serialField [ 5 : 0 ] <nl> | | - - WS - > [ 5 : 12 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt <nl> new file mode 100644 <nl> index 0000000 . . 8671b78 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt <nl> @ @ - 0 , 0 + 1 , 213 @ @ <nl> + JAVADOC - > JAVADOC [ 0 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 0 : 0 ] <nl> + | - - WS - > [ 0 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 0 : 2 ] <nl> + | | - - AUTHOR _ LITERAL - > @ author [ 0 : 2 ] <nl> + | | - - WS - > [ 0 : 9 ] <nl> + | | - - NEWLINE - > \ n [ 0 : 11 ] <nl> + | | - - WS - > [ 1 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 1 : 6 ] <nl> + | | - - TEXT - > author - name [ 1 : 6 ] <nl> + | | - - HTML _ ELEMENT - > HTML _ ELEMENT [ 1 : 18 ] <nl> + | | ` - - SINGLETON _ ELEMENT - > SINGLETON _ ELEMENT [ 1 : 18 ] <nl> + | | ` - - BR _ TAG - > BR _ TAG [ 1 : 18 ] <nl> + | | | - - START - > < [ 1 : 18 ] <nl> + | | | - - BR _ HTML _ TAG _ NAME - > br [ 1 : 19 ] <nl> + | | | - - WS - > [ 1 : 21 ] <nl> + | | | - - ATTRIBUTE - > ATTRIBUTE [ 1 : 22 ] <nl> + | | | | - - HTML _ TAG _ NAME - > attr [ 1 : 22 ] <nl> + | | | | - - EQUALS - > = [ 1 : 26 ] <nl> + | | | ` - - ATTR _ VALUE - > " value " [ 1 : 27 ] <nl> + | | ` - - SLASH _ END - > / > [ 1 : 35 ] <nl> + | | - - NEWLINE - > \ n [ 1 : 37 ] <nl> + | ` - - NEWLINE - > \ n [ 2 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 3 : 0 ] <nl> + | - - WS - > [ 3 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 3 : 2 ] <nl> + | | - - DEPRECATED _ LITERAL - > @ deprecated [ 3 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 3 : 13 ] <nl> + | | - - WS - > [ 4 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 4 : 6 ] <nl> + | | - - TEXT - > deprecated - text [ 4 : 6 ] <nl> + | | - - NEWLINE - > \ n [ 4 : 21 ] <nl> + | ` - - NEWLINE - > \ n [ 5 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 6 : 0 ] <nl> + | - - WS - > [ 6 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 6 : 2 ] <nl> + | | - - EXCEPTION _ LITERAL - > @ exception [ 6 : 2 ] <nl> + | | - - WS - > [ 6 : 12 ] <nl> + | | - - CLASS _ NAME - > CustomEx [ 6 : 18 ] <nl> + | | - - WS - > [ 6 : 26 ] <nl> + | | - - NEWLINE - > \ n [ 6 : 28 ] <nl> + | | - - WS - > [ 7 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 7 : 6 ] <nl> + | | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 7 : 6 ] <nl> + | | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 7 : 6 ] <nl> + | | | - - LINK _ LITERAL - > @ link [ 7 : 7 ] <nl> + | | | - - WS - > [ 7 : 12 ] <nl> + | | | - - REFERENCE - > REFERENCE [ 7 : 13 ] <nl> + | | | ` - - CLASS - > CustomEx [ 7 : 13 ] <nl> + | | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 7 : 21 ] <nl> + | | - - TEXT - > [ 7 : 22 ] <nl> + | | - - HTML _ ELEMENT - > HTML _ ELEMENT [ 7 : 23 ] <nl> + | | ` - - HTML _ TAG - > HTML _ TAG [ 7 : 23 ] <nl> + | | | - - HTML _ ELEMENT _ START - > HTML _ ELEMENT _ START [ 7 : 23 ] <nl> + | | | | - - START - > < [ 7 : 23 ] <nl> + | | | | - - HTML _ TAG _ NAME - > b [ 7 : 24 ] <nl> + | | | ` - - END - > > [ 7 : 25 ] <nl> + | | | - - TEXT - > Internal [ 7 : 26 ] <nl> + | | ` - - HTML _ ELEMENT _ END - > HTML _ ELEMENT _ END [ 7 : 34 ] <nl> + | | | - - START - > < [ 7 : 34 ] <nl> + | | | - - SLASH - > / [ 7 : 35 ] <nl> + | | | - - HTML _ TAG _ NAME - > b [ 7 : 36 ] <nl> + | | ` - - END - > > [ 7 : 37 ] <nl> + | | - - NEWLINE - > \ n [ 7 : 38 ] <nl> + | ` - - NEWLINE - > \ n [ 8 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 9 : 0 ] <nl> + | - - WS - > [ 9 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 9 : 2 ] <nl> + | | - - PARAM _ LITERAL - > @ param [ 9 : 2 ] <nl> + | | - - WS - > [ 9 : 8 ] <nl> + | | - - PARAMETER _ NAME - > ParamName [ 9 : 17 ] <nl> + | | - - NEWLINE - > \ n [ 9 : 26 ] <nl> + | | - - WS - > [ 10 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 10 : 6 ] <nl> + | | - - TEXT - > Param - description [ 10 : 6 ] <nl> + | | - - NEWLINE - > \ n [ 10 : 23 ] <nl> + | ` - - NEWLINE - > \ n [ 11 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 12 : 0 ] <nl> + | - - WS - > [ 12 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 12 : 2 ] <nl> + | | - - RETURN _ LITERAL - > @ return [ 12 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 12 : 9 ] <nl> + | | - - WS - > [ 13 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 13 : 6 ] <nl> + | | - - TEXT - > return - description [ 13 : 6 ] <nl> + | | - - NEWLINE - > \ n [ 13 : 24 ] <nl> + | ` - - NEWLINE - > \ n [ 14 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 15 : 0 ] <nl> + | - - WS - > [ 15 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 15 : 2 ] <nl> + | | - - SERIAL _ LITERAL - > @ serial [ 15 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 15 : 9 ] <nl> + | | - - WS - > [ 16 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 16 : 6 ] <nl> + | | - - TEXT - > DESCRIPTION [ 16 : 6 ] <nl> + | | - - NEWLINE - > \ n [ 16 : 17 ] <nl> + | ` - - NEWLINE - > \ n [ 17 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 18 : 0 ] <nl> + | - - WS - > [ 18 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 18 : 2 ] <nl> + | | - - SERIAL _ LITERAL - > @ serial [ 18 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 18 : 9 ] <nl> + | | - - LITERAL _ INCLUDE - > include [ 19 : 0 ] <nl> + | | - - WS - > [ 19 : 7 ] <nl> + | | - - NEWLINE - > \ n [ 19 : 11 ] <nl> + | ` - - NEWLINE - > \ n [ 20 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 21 : 0 ] <nl> + | - - WS - > [ 21 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 21 : 2 ] <nl> + | | - - SERIAL _ DATA _ LITERAL - > @ serialData [ 21 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 21 : 13 ] <nl> + | | - - WS - > [ 22 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 22 : 6 ] <nl> + | | - - TEXT - > DESCRIPTION [ 22 : 6 ] <nl> + | | - - NEWLINE - > \ n [ 22 : 17 ] <nl> + | | - - TEXT - > on multiple lines [ 23 : 0 ] <nl> + | | - - NEWLINE - > \ n [ 23 : 23 ] <nl> + | ` - - NEWLINE - > \ n [ 24 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 25 : 0 ] <nl> + | - - WS - > [ 25 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 25 : 2 ] <nl> + | | - - SERIAL _ FIELD _ LITERAL - > @ serialField [ 25 : 2 ] <nl> + | | - - WS - > [ 25 : 14 ] <nl> + | | - - FIELD _ NAME - > fieldname [ 25 : 19 ] <nl> + | | - - WS - > [ 25 : 28 ] <nl> + | | - - FIELD _ TYPE - > fieldtype [ 25 : 33 ] <nl> + | | - - NEWLINE - > \ n [ 25 : 42 ] <nl> + | | - - NEWLINE - > \ n [ 26 : 0 ] <nl> + | | - - WS - > [ 27 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 27 : 5 ] <nl> + | | - - TEXT - > description [ 27 : 5 ] <nl> + | | - - NEWLINE - > \ n [ 27 : 16 ] <nl> + | ` - - NEWLINE - > \ n [ 28 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 29 : 0 ] <nl> + | - - WS - > [ 29 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 29 : 2 ] <nl> + | | - - SINCE _ LITERAL - > @ since [ 29 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 29 : 8 ] <nl> + | | - - WS - > [ 30 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 30 : 12 ] <nl> + | | - - TEXT - > 8 . 2 [ 30 : 12 ] <nl> + | | - - NEWLINE - > \ n [ 30 : 15 ] <nl> + | ` - - NEWLINE - > \ n [ 31 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 32 : 0 ] <nl> + | - - WS - > [ 32 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 32 : 2 ] <nl> + | | - - THROWS _ LITERAL - > @ throws [ 32 : 2 ] <nl> + | | - - WS - > [ 32 : 9 ] <nl> + | | - - CLASS _ NAME - > Exception [ 32 : 15 ] <nl> + | | - - WS - > [ 32 : 24 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 32 : 29 ] <nl> + | | - - TEXT - > Exception - description [ 32 : 29 ] <nl> + | | - - NEWLINE - > \ n [ 32 : 50 ] <nl> + | | - - TEXT - > spanning multiple lines [ 33 : 0 ] <nl> + | | - - NEWLINE - > \ n [ 33 : 32 ] <nl> + | ` - - NEWLINE - > \ n [ 34 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 35 : 0 ] <nl> + | - - WS - > [ 35 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 35 : 2 ] <nl> + | | - - VERSION _ LITERAL - > @ version [ 35 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 35 : 10 ] <nl> + | | - - WS - > [ 36 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 36 : 13 ] <nl> + | | - - TEXT - > 8 . 2 - 8 . 3 - 8 . 4 . . . [ 36 : 13 ] <nl> + | | - - NEWLINE - > \ n [ 36 : 31 ] <nl> + | ` - - NEWLINE - > \ n [ 37 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 38 : 0 ] <nl> + | - - WS - > [ 38 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 38 : 2 ] <nl> + | | - - CUSTOM _ NAME - > @ customTag [ 38 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 38 : 12 ] <nl> + | | - - WS - > [ 39 : 0 ] <nl> + | | - - NEWLINE - > \ n [ 39 : 5 ] <nl> + | | - - WS - > [ 40 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 40 : 5 ] <nl> + | | - - TEXT - > DESCRIPTION [ 40 : 5 ] <nl> + | | - - NEWLINE - > \ n [ 40 : 16 ] <nl> + | ` - - NEWLINE - > \ n [ 41 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 42 : 0 ] <nl> + | - - WS - > [ 42 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 42 : 2 ] <nl> + | | - - EXCEPTION _ LITERAL - > @ exception [ 42 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 43 : 0 ] <nl> + | | - - WS - > [ 44 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 44 : 6 ] <nl> + | | - - TEXT - > Exception Exception - description [ 44 : 6 ] <nl> + | | - - NEWLINE - > \ n [ 44 : 41 ] <nl> + | | - - TEXT - > spanning multiple lines [ 45 : 0 ] <nl> + | | - - NEWLINE - > \ n [ 45 : 29 ] <nl> + | ` - - NEWLINE - > \ n [ 46 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 47 : 0 ] <nl> + | - - WS - > [ 47 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 47 : 2 ] <nl> + | | - - PARAM _ LITERAL - > @ param [ 47 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 48 : 0 ] <nl> + | | - - WS - > [ 49 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 49 : 6 ] <nl> + | | - - TEXT - > ParamName [ 49 : 6 ] <nl> + | | - - NEWLINE - > \ n [ 49 : 15 ] <nl> + | | - - TEXT - > Param - description [ 50 : 0 ] <nl> + | | - - NEWLINE - > \ n [ 50 : 23 ] <nl> + | ` - - NEWLINE - > \ n [ 51 : 0 ] <nl> + | - - LEADING _ ASTERISK - > * [ 52 : 0 ] <nl> + | - - WS - > [ 52 : 1 ] <nl> + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 52 : 2 ] <nl> + | | - - THROWS _ LITERAL - > @ throws [ 52 : 2 ] <nl> + | | - - NEWLINE - > \ n [ 53 : 0 ] <nl> + | | - - WS - > [ 54 : 0 ] <nl> + | ` - - DESCRIPTION - > DESCRIPTION [ 54 : 5 ] <nl> + | | - - TEXT - > Exception Exception - description [ 54 : 5 ] <nl> + | | - - NEWLINE - > \ n [ 54 : 40 ] <nl> + | ` - - TEXT - > spanning multiple lines [ 55 : 0 ] <nl> + ` - - EOF - > < EOF > [ 55 : 32 ]
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java <nl> index 581e08f . . 229f9e6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java <nl> @ @ - 39 , 13 + 39 , 13 @ @ public class ModifierOrderCheckTest <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " modifier " + File . separator + filename ) ; <nl> + + " modifier " + File . separator + " modifierorder " + File . separator + filename ) ; <nl> } <nl> <nl> @ Override <nl> protected String getNonCompilablePath ( String filename ) throws IOException { <nl> return super . getNonCompilablePath ( " checks " + File . separator <nl> - + " modifier " + File . separator + filename ) ; <nl> + + " modifier " + File . separator + " modifierorder " + File . separator + filename ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 68 , 7 + 68 , 7 @ @ public class ModifierOrderCheckTest <nl> " 49 : 35 : " + getCheckMessage ( MSG _ ANNOTATION _ ORDER , " @ MyAnnotation4 " ) , <nl> " 157 : 14 : " + getCheckMessage ( MSG _ MODIFIER _ ORDER , " default " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputModifier . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputModifierOrderIt . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 77 , 7 + 77 , 7 @ @ public class ModifierOrderCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( ModifierOrderCheck . class ) ; <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " InputModifier2 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputModifierOrderDefaultMethods . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 121 , 7 + 121 , 8 @ @ public class ModifierOrderCheckTest <nl> final String [ ] expected = { <nl> " 103 : 13 : " + getCheckMessage ( MSG _ ANNOTATION _ ORDER , " @ MethodAnnotation " ) , <nl> } ; <nl> - verify ( checkConfig , getNonCompilablePath ( " InputTypeAnnotations . java " ) , expected ) ; <nl> + verify ( checkConfig , getNonCompilablePath ( " InputModifierOrderTypeAnnotations . java " ) , <nl> + expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / InputTypeAnnotations . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / InputTypeAnnotations . java <nl> deleted file mode 100644 <nl> index 327b0a4 . . 0000000 <nl> - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / InputTypeAnnotations . java <nl> + + + / dev / null <nl> @ @ - 1 , 127 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . modifier ; <nl> - <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> - import java . io . Serializable ; <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - import java . util . Collection ; <nl> - import java . util . Comparator ; <nl> - import java . util . List ; <nl> - import java . util . Map ; <nl> - <nl> - public class InputTypeAnnotations extends MyClass { <nl> - <nl> - / / Simple type definitions with type annotations <nl> - private @ TypeAnnotation String hello = " Hello , World ! " ; <nl> - private @ TypeAnnotation final String jdk = " JDK8 " ; <nl> - @ TypeAnnotation private String projectName = " Checkstyle " ; <nl> - <nl> - / / We can use type Annotations with generic type arguments <nl> - private Map . @ TypeAnnotation Entry entry ; <nl> - / / Type annotations can also be applied to nested types <nl> - private List < @ TypeAnnotation String > strings ; <nl> - <nl> - / / Constructors with type annotations <nl> - { <nl> - new @ TypeAnnotation Object ( ) ; <nl> - } <nl> - <nl> - static { <nl> - new @ TypeAnnotation Object ( ) ; <nl> - } <nl> - <nl> - public void foo1 ( ) { <nl> - new @ TypeAnnotation Object ( ) ; <nl> - } <nl> - <nl> - / / Type annotations work with nested ( non static ) class constructors too <nl> - public void foo2 ( ) { <nl> - InputTypeAnnotations myObject = new InputTypeAnnotations ( ) ; <nl> - myObject . new @ TypeAnnotation Nested ( ) ; <nl> - } <nl> - <nl> - / / Type casts <nl> - public void foo3 ( ) { <nl> - String myString = ( @ TypeAnnotation String ) new Object ( ) ; <nl> - <nl> - } <nl> - <nl> - / / Type annotations with method arguments <nl> - private void foo4 ( final @ TypeAnnotation String parameterName ) { } <nl> - <nl> - / / Inheritance <nl> - class MySerializableClass < T > implements @ TypeAnnotation Serializable { } <nl> - <nl> - / / Nested type annotations <nl> - Map < @ TypeAnnotation String , @ TypeAnnotation List < @ TypeAnnotation String > > documents ; <nl> - <nl> - / / Apply type annotations to intersection types <nl> - public < E extends @ TypeAnnotation Comparator < E > & @ TypeAnnotation Comparable > void foo5 ( ) { } <nl> - <nl> - / / Including parameter bounds and wildcard bounds <nl> - class Folder < F extends @ TypeAnnotation File > { } <nl> - Collection < ? super @ TypeAnnotation File > c ; <nl> - List < @ TypeAnnotation ? extends Comparable < T > > unchangeable ; <nl> - <nl> - / / Throwing exceptions <nl> - void foo6 ( ) throws @ TypeAnnotation IOException { } <nl> - <nl> - / / Type annotations in instanceof statements <nl> - public void foo7 ( ) { <nl> - boolean isNonNull = " string " instanceof @ TypeAnnotation String ; <nl> - <nl> - } <nl> - <nl> - class Nested { } <nl> - <nl> - class T { } <nl> - <nl> - / / Type annotation on method return type <nl> - @ Override <nl> - public @ TypeAnnotation String toString ( ) { return " " ; } <nl> - <nl> - @ Override <nl> - @ TypeAnnotation public int hashCode ( ) { return 1 ; } <nl> - <nl> - public @ TypeAnnotation int foo8 ( ) { return 1 ; } <nl> - <nl> - public @ TypeAnnotation boolean equals ( Object obj ) { return super . equals ( obj ) ; } <nl> - <nl> - / / @ TypeAnnotation void foo9 ( ) { } < - - Compiletime error : void type cannot be annotated with type annotation <nl> - <nl> - @ Override <nl> - void foo10 ( ) { <nl> - super . foo10 ( ) ; <nl> - } <nl> - } <nl> - <nl> - class MyClass { <nl> - <nl> - / / It is annotation on method , but not on type ! <nl> - @ MethodAnnotation void foo10 ( ) { } <nl> - private @ MethodAnnotation void foo11 ( ) { } <nl> - <nl> - public @ TypeAnnotation MyClass ( ) { } <nl> - @ ConstructorAnnotation public MyClass ( String name ) { } <nl> - } <nl> - <nl> - enum MyEnum { <nl> - @ TypeAnnotation A ; <nl> - } <nl> - <nl> - interface IInterfacable { <nl> - default @ TypeAnnotation String foo ( ) { <nl> - return null ; <nl> - } <nl> - } <nl> - <nl> - @ Target ( { <nl> - ElementType . FIELD , ElementType . LOCAL _ VARIABLE , ElementType . PARAMETER , <nl> - ElementType . TYPE _ PARAMETER , ElementType . TYPE _ USE } ) <nl> - @ interface TypeAnnotation { <nl> - } <nl> - <nl> - @ interface MethodAnnotation { } <nl> - <nl> - @ interface ConstructorAnnotation { } <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderTypeAnnotations . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderTypeAnnotations . java <nl> new file mode 100644 <nl> index 0000000 . . 8702e1f <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderTypeAnnotations . java <nl> @ @ - 0 , 0 + 1 , 127 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . modifier . modifierorder ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . io . Serializable ; <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + import java . util . Collection ; <nl> + import java . util . Comparator ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + <nl> + public class InputModifierOrderTypeAnnotations extends MyClass { <nl> + <nl> + / / Simple type definitions with type annotations <nl> + private @ TypeAnnotation String hello = " Hello , World ! " ; <nl> + private @ TypeAnnotation final String jdk = " JDK8 " ; <nl> + @ TypeAnnotation private String projectName = " Checkstyle " ; <nl> + <nl> + / / We can use type Annotations with generic type arguments <nl> + private Map . @ TypeAnnotation Entry entry ; <nl> + / / Type annotations can also be applied to nested types <nl> + private List < @ TypeAnnotation String > strings ; <nl> + <nl> + / / Constructors with type annotations <nl> + { <nl> + new @ TypeAnnotation Object ( ) ; <nl> + } <nl> + <nl> + static { <nl> + new @ TypeAnnotation Object ( ) ; <nl> + } <nl> + <nl> + public void foo1 ( ) { <nl> + new @ TypeAnnotation Object ( ) ; <nl> + } <nl> + <nl> + / / Type annotations work with nested ( non static ) class constructors too <nl> + public void foo2 ( ) { <nl> + InputTypeAnnotations myObject = new InputTypeAnnotations ( ) ; <nl> + myObject . new @ TypeAnnotation Nested ( ) ; <nl> + } <nl> + <nl> + / / Type casts <nl> + public void foo3 ( ) { <nl> + String myString = ( @ TypeAnnotation String ) new Object ( ) ; <nl> + <nl> + } <nl> + <nl> + / / Type annotations with method arguments <nl> + private void foo4 ( final @ TypeAnnotation String parameterName ) { } <nl> + <nl> + / / Inheritance <nl> + class MySerializableClass < T > implements @ TypeAnnotation Serializable { } <nl> + <nl> + / / Nested type annotations <nl> + Map < @ TypeAnnotation String , @ TypeAnnotation List < @ TypeAnnotation String > > documents ; <nl> + <nl> + / / Apply type annotations to intersection types <nl> + public < E extends @ TypeAnnotation Comparator < E > & @ TypeAnnotation Comparable > void foo5 ( ) { } <nl> + <nl> + / / Including parameter bounds and wildcard bounds <nl> + class Folder < F extends @ TypeAnnotation File > { } <nl> + Collection < ? super @ TypeAnnotation File > c ; <nl> + List < @ TypeAnnotation ? extends Comparable < T > > unchangeable ; <nl> + <nl> + / / Throwing exceptions <nl> + void foo6 ( ) throws @ TypeAnnotation IOException { } <nl> + <nl> + / / Type annotations in instanceof statements <nl> + public void foo7 ( ) { <nl> + boolean isNonNull = " string " instanceof @ TypeAnnotation String ; <nl> + <nl> + } <nl> + <nl> + class Nested { } <nl> + <nl> + class T { } <nl> + <nl> + / / Type annotation on method return type <nl> + @ Override <nl> + public @ TypeAnnotation String toString ( ) { return " " ; } <nl> + <nl> + @ Override <nl> + @ TypeAnnotation public int hashCode ( ) { return 1 ; } <nl> + <nl> + public @ TypeAnnotation int foo8 ( ) { return 1 ; } <nl> + <nl> + public @ TypeAnnotation boolean equals ( Object obj ) { return super . equals ( obj ) ; } <nl> + <nl> + / / @ TypeAnnotation void foo9 ( ) { } < - - Compiletime error : void type cannot be annotated with type annotation <nl> + <nl> + @ Override <nl> + void foo10 ( ) { <nl> + super . foo10 ( ) ; <nl> + } <nl> + } <nl> + <nl> + class MyClass { <nl> + <nl> + / / It is annotation on method , but not on type ! <nl> + @ MethodAnnotation void foo10 ( ) { } <nl> + private @ MethodAnnotation void foo11 ( ) { } <nl> + <nl> + public @ TypeAnnotation MyClass ( ) { } <nl> + @ ConstructorAnnotation public MyClass ( String name ) { } <nl> + } <nl> + <nl> + enum MyEnum { <nl> + @ TypeAnnotation A ; <nl> + } <nl> + <nl> + interface IInterfacable { <nl> + default @ TypeAnnotation String foo ( ) { <nl> + return null ; <nl> + } <nl> + } <nl> + <nl> + @ Target ( { <nl> + ElementType . FIELD , ElementType . LOCAL _ VARIABLE , ElementType . PARAMETER , <nl> + ElementType . TYPE _ PARAMETER , ElementType . TYPE _ USE } ) <nl> + @ interface TypeAnnotation { <nl> + } <nl> + <nl> + @ interface MethodAnnotation { } <nl> + <nl> + @ interface ConstructorAnnotation { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier2 . java <nl> deleted file mode 100644 <nl> index 2a9edbe . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . modifier ; <nl> - import java . util . Comparator ; <nl> - <nl> - public interface InputModifier2 extends Comparator < Integer > { <nl> - @ Override <nl> - default int compare ( Integer a , Integer b ) { <nl> - return 0 ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifierOrderAnnotationDeclaration . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifierOrderAnnotationDeclaration . java <nl> deleted file mode 100644 <nl> index 9a98854 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifierOrderAnnotationDeclaration . java <nl> + + + / dev / null <nl> @ @ - 1 , 7 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . modifier ; <nl> - <nl> - public @ InterfaceAnnotation @ interface InputModifierOrderAnnotationDeclaration { <nl> - int getValue ( ) ; <nl> - } <nl> - <nl> - @ interface InterfaceAnnotation { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderAnnotationDeclaration . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderAnnotationDeclaration . java <nl> new file mode 100644 <nl> index 0000000 . . 81831ea <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderAnnotationDeclaration . java <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . modifier . modifierorder ; <nl> + <nl> + public @ InterfaceAnnotation @ interface InputModifierOrderAnnotationDeclaration { <nl> + int getValue ( ) ; <nl> + } <nl> + <nl> + @ interface InterfaceAnnotation { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderDefaultMethods . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderDefaultMethods . java <nl> new file mode 100644 <nl> index 0000000 . . 389d497 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderDefaultMethods . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . modifier . modifierorder ; <nl> + import java . util . Comparator ; <nl> + <nl> + public interface InputModifierOrderDefaultMethods extends Comparator < Integer > { <nl> + @ Override <nl> + default int compare ( Integer a , Integer b ) { <nl> + return 0 ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderIt . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderIt . java <nl> new file mode 100644 <nl> index 0000000 . . 457c3b3 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderIt . java <nl> @ @ - 0 , 0 + 1 , 160 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . checks . modifier . modifierorder ; <nl> + <nl> + / * * <nl> + * Test case for Modifier checks : <nl> + * - order of modifiers <nl> + * - use of ' public ' in interface definition <nl> + * @ author lkuehne <nl> + * / <nl> + strictfp final class InputModifierOrderIt / / illegal order of modifiers for class <nl> + { <nl> + <nl> + / * * Illegal order of modifiers for variables * / <nl> + static private boolean sModifierOrderVar = false ; <nl> + <nl> + / * * <nl> + * Illegal order of modifiers for methods . Make sure that the <nl> + * first and last modifier from the JLS sequence is used . <nl> + * / <nl> + strictfp private void doStuff ( ) <nl> + { <nl> + } <nl> + <nl> + / * * Single annotation without other modifiers * / <nl> + @ MyAnnotation2 void someMethod ( ) <nl> + { <nl> + } <nl> + <nl> + / * * Illegal order of annotation - must come first * / <nl> + private @ MyAnnotation2 void someMethod2 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * Annotation in middle of other modifiers otherwise in correct order * / <nl> + private @ MyAnnotation2 strictfp void someMethod3 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * Correct order * / <nl> + @ MyAnnotation2 private strictfp void someMethod4 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * Annotation in middle of other modifiers otherwise in correct order * / <nl> + @ MyAnnotation2 private static @ MyAnnotation4 strictfp void someMethod5 ( ) <nl> + { <nl> + } <nl> + <nl> + / * * holder for redundant ' public ' modifier check . * / <nl> + public static interface InputRedundantPublicModifier / / violation <nl> + { <nl> + / * * redundant ' public ' modifier * / <nl> + public void a ( ) ; / / violation <nl> + <nl> + / * * all OK * / <nl> + void b ( ) ; <nl> + <nl> + / * * redundant abstract modifier * / <nl> + abstract void c ( ) ; / / violation <nl> + <nl> + / * * redundant ' public ' modifier * / <nl> + public float PI _ PUBLIC = ( float ) 3 . 14 ; / / violation <nl> + <nl> + / * * redundant ' abstract ' modifier ( field can not be abstract ) * / <nl> + / / abstract float PI _ ABSTRACT = ( float ) 3 . 14 ; <nl> + <nl> + / * * redundant ' final ' modifier * / <nl> + final float PI _ FINAL = ( float ) 3 . 14 ; / / violation <nl> + <nl> + / * * all OK * / <nl> + float PI _ OK = ( float ) 3 . 14 ; <nl> + } <nl> + <nl> + / * * redundant ' final ' modifier * / <nl> + private final void method ( ) / / violation <nl> + { <nl> + } <nl> + } <nl> + <nl> + / * * Holder for redundant ' final ' check . * / <nl> + final class RedundantFinalClass <nl> + { <nl> + / * * redundant ' final ' modifier * / <nl> + public final void finalMethod ( ) / / violation <nl> + { <nl> + } <nl> + <nl> + / * * OK * / <nl> + public void method ( ) <nl> + { <nl> + } <nl> + } <nl> + <nl> + / * * Holder for redundant modifiers of inner implementation * / <nl> + abstract interface InnerImplementation / / violation <nl> + { <nl> + InnerImplementation inner = <nl> + new InnerImplementation ( ) <nl> + { <nl> + / * * compiler requires ' public ' modifier * / <nl> + public void method ( ) <nl> + { <nl> + } <nl> + } ; <nl> + <nl> + void method ( ) ; <nl> + } <nl> + <nl> + / * * Holder for redundant modifiers of annotation fields / variables * / <nl> + @ interface Annotation <nl> + { <nl> + public String s1 = " " ; / / violation <nl> + final String s2 = " " ; / / violation <nl> + static String s3 = " " ; / / violation <nl> + String s4 = " " ; <nl> + public String blah ( ) ; / / violation <nl> + abstract String blah2 ( ) ; / / violation <nl> + } <nl> + <nl> + @ interface MyAnnotation2 { <nl> + } <nl> + <nl> + @ interface MyAnnotation4 { <nl> + } <nl> + <nl> + class SafeVarargsUsage { <nl> + @ Deprecated <nl> + @ SafeVarargs <nl> + private final void foo ( int . . . k ) { } <nl> + <nl> + @ Deprecated <nl> + @ SafeVarargs <nl> + @ SuppressWarnings ( " " ) <nl> + private final void foo1 ( Object . . . obj ) { } <nl> + } <nl> + <nl> + enum TestEnum { <nl> + ; <nl> + <nl> + public void method ( ) { <nl> + } <nl> + } <nl> + <nl> + / * * holder for interface specific modifier check . * / <nl> + interface InputDefaultPublicModifier <nl> + { <nl> + / * * correct order * / <nl> + default strictfp void a ( ) <nl> + { <nl> + } <nl> + <nl> + / * * wrong order * / <nl> + strictfp default void b ( ) / / violation <nl> + { <nl> + } <nl> + }

TEST DIFF:
diff - - git a / . gitattributes b / . gitattributes 
 index b9c4d75 . . e87e25e 100644 
 - - - a / . gitattributes 
 + + + b / . gitattributes 
 @ @ - 2 , 3 + 2 , 4 @ @ 
 / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / newlineatendoffile / InputNewlineCrlfAtEndOfFile . java eol = crlf 
 / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / InputNewlineCrAtEndOfFile . java - text 
 / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / newlineatendoffile / InputNewlineCrAtEndOfFile . java - text 
 + / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc eol = lf 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 
 index a1bd3ff . . b1a3399 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . g4 
 @ @ - 861 , 32 + 861 , 36 @ @ reference : 
 ; 
 parameters : LEFT _ BRACE ( ARGUMENT | COMMA | WS | NEWLINE | LEADING _ ASTERISK ) * RIGHT _ BRACE ; 
 
 - javadocTag : AUTHOR _ LITERAL ( WS | NEWLINE ) * description ? 
 + javadocTag : AUTHOR _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 
 - | DEPRECATED _ LITERAL ( WS | NEWLINE ) * description ? 
 + | DEPRECATED _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 
 - | EXCEPTION _ LITERAL ( WS | NEWLINE ) * CLASS _ NAME ? ( WS | NEWLINE ) * description ? 
 + | EXCEPTION _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) CLASS _ NAME ) ? ( WS | NEWLINE ) * 
 + ( ( WS | NEWLINE ) description ) ? 
 
 - | PARAM _ LITERAL ( WS | NEWLINE ) * PARAMETER _ NAME ? ( WS | NEWLINE ) * description ? 
 + | PARAM _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) PARAMETER _ NAME ) ? ( WS | NEWLINE ) * 
 + ( ( WS | NEWLINE ) description ) ? 
 
 - | RETURN _ LITERAL ( WS | NEWLINE ) * description ? 
 + | RETURN _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 
 | SEE _ LITERAL ( WS | NEWLINE ) * reference ? ( STRING | htmlElement ) * ( WS | NEWLINE ) * description ? 
 
 - | SERIAL _ LITERAL ( WS | NEWLINE ) * ( LITERAL _ INCLUDE | LITERAL _ EXCLUDE ) ? description ? 
 + | SERIAL _ LITERAL ( WS | NEWLINE ) * 
 + ( ( WS | NEWLINE ) description | LITERAL _ INCLUDE | LITERAL _ EXCLUDE ) ? ( WS | NEWLINE ) * 
 
 - | SERIAL _ DATA _ LITERAL ( WS | NEWLINE ) * description ? 
 + | SERIAL _ DATA _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 
 - | SERIAL _ FIELD _ LITERAL ( WS | NEWLINE ) * FIELD _ NAME ? ( WS | NEWLINE ) * FIELD _ TYPE ? 
 - ( WS | NEWLINE ) * description ? 
 + | SERIAL _ FIELD _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) FIELD _ NAME ) ? ( WS | NEWLINE ) * 
 + ( ( WS | NEWLINE ) FIELD _ TYPE ) ? ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 
 - | SINCE _ LITERAL ( WS | NEWLINE ) * description ? 
 + | SINCE _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 
 - | THROWS _ LITERAL ( WS | NEWLINE ) * CLASS _ NAME ? ( WS | NEWLINE ) * description ? 
 + | THROWS _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) CLASS _ NAME ) ? ( WS | NEWLINE ) * 
 + ( ( WS | NEWLINE ) description ) ? 
 
 - | VERSION _ LITERAL ( WS | NEWLINE ) * description ? 
 + | VERSION _ LITERAL ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 
 - | CUSTOM _ NAME ( WS | NEWLINE ) * description ? 
 + | CUSTOM _ NAME ( WS | NEWLINE ) * ( ( WS | NEWLINE ) description ) ? 
 ; 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 / / / / / / / / / / / / / / / / / / / / / / / / / / JAVADOC INLINE TAGS / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 index 62eacbd . . 70aeb72 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 @ @ - 135 , 4 + 135 , 12 @ @ public class AstTreeStringPrinterTest extends AbstractTreeTestSupport { 
 getPath ( " InputFullOfSinglelineComments . java " ) , 
 AstTreeStringPrinter . PrintOptions . WITH _ COMMENTS ) ; 
 } 
 + 
 + @ Test 
 + public void testJavadocTagsWithoutArgs ( ) throws Exception { 
 + verifyJavaAndJavadocAst ( 
 + getPath ( " expectedAstTreeStringPrinterJavadocTagsWithoutArgsAst . txt " ) , 
 + getPath ( " InputAstTreeStringPrinterJavadocTagsWithoutArgs . java " ) 
 + ) ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java 
 index 1e9440e . . ea63367 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java 
 @ @ - 233 , 4 + 233 , 5 @ @ public class DetailNodeTreeStringPrinterTest extends AbstractTreeTestSupport { 
 expected , ex . getMessage ( ) ) ; 
 } 
 } 
 + 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 index 58d2706 . . dc1dfff 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 @ @ - 276 , 6 + 276 , 27 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { 
 JavadocVisitLeaveCheck . visitCount , JavadocVisitLeaveCheck . leaveCount ) ; 
 } 
 
 + @ Test 
 + public void testNoWsBeforeDescriptionInJavadocTags ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( TempCheck . class ) ; 
 + final String [ ] expected = { 
 + " 13 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 23 , " mismatched input ' d ' expecting < EOF > " , " JAVADOC " ) , 
 + " 22 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 30 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , 
 + " 28 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 39 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , 
 + " 40 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 34 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , 
 + " 48 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 31 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , 
 + " 57 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 
 + 15 , " mismatched input ' - ' expecting < EOF > " , " JAVADOC " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java " ) , 
 + expected ) ; 
 + } 
 + 
 private static class TempCheck extends AbstractJavadocCheck { 
 
 @ Override 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 index d39044e . . 8deb981 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 @ @ - 269 , 4 + 269 , 10 @ @ public class JavadocParseTreeTest extends AbstractTreeTestSupport { 
 verifyJavadocTree ( getHtmlPath ( " expectedHtmlVoidElementEmbedAst . txt " ) , 
 getHtmlPath ( " InputHtmlVoidElementEmbed . javadoc " ) ) ; 
 } 
 + 
 + @ Test 
 + public void testSpaceBeforeDescriptionInBlockJavadocTags ( ) throws Exception { 
 + verifyJavadocTree ( getDocPath ( " expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt " ) , 
 + getDocPath ( " InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc " ) ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadocTagsWithoutArgs . java b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadocTagsWithoutArgs . java 
 new file mode 100644 
 index 0000000 . . cf6ecb1 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / InputAstTreeStringPrinterJavadocTagsWithoutArgs . java 
 @ @ - 0 , 0 + 1 , 60 @ @ 
 + package com . puppycrawl . tools . checkstyle . astprinter ; 
 + 
 + import java . io . Serializable ; 
 + 
 + / * * @ author * / 
 + public class InputAstTreeStringPrinterJavadocTagsWithoutArgs implements Serializable { 
 + / * * @ serial * / 
 + private static final long serialVersionUID = 7556448691029650757L ; 
 + 
 + / * * @ see * / 
 + private static int field2 ; 
 + 
 + / * * @ since * / 
 + private static String field3 ; 
 + 
 + / * * @ version * / 
 + private static Object field4 ; 
 + 
 + / * * serialField * / 
 + private static Object field5 ; 
 + 
 + / * * @ exception * / 
 + public static void method1 ( ) { 
 + 
 + } 
 + 
 + / * * @ throws * / 
 + public static void method2 ( ) { 
 + 
 + } 
 + 
 + / * * @ return * / 
 + public static int method3 ( ) { 
 + return - 1 ; 
 + } 
 + 
 + / * * @ param * / 
 + public static void method4 ( int a ) { 
 + 
 + } 
 + 
 + / * * @ customTag * / 
 + public static void method5 ( int a ) { 
 + 
 + } 
 + 
 + / * * @ deprecated * / 
 + public static void method6 ( int a ) { 
 + 
 + } 
 + 
 + / * * @ serialData * / 
 + private void readObject ( java . io . ObjectInputStream inputStream ) { 
 + 
 + } 
 + 
 + private void writeObject ( java . io . ObjectOutputStream outputStream ) { 
 + 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedAstTreeStringPrinterJavadocTagsWithoutArgsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedAstTreeStringPrinterJavadocTagsWithoutArgsAst . txt 
 new file mode 100644 
 index 0000000 . . 249d1cd 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedAstTreeStringPrinterJavadocTagsWithoutArgsAst . txt 
 @ @ - 0 , 0 + 1 , 295 @ @ 
 + PACKAGE _ DEF - > package [ 1 : 0 ] 
 + | - - ANNOTATIONS - > ANNOTATIONS [ 1 : 39 ] 
 + | - - DOT - > . [ 1 : 39 ] 
 + | | - - DOT - > . [ 1 : 28 ] 
 + | | | - - DOT - > . [ 1 : 22 ] 
 + | | | | - - DOT - > . [ 1 : 11 ] 
 + | | | | | - - IDENT - > com [ 1 : 8 ] 
 + | | | | ` - - IDENT - > puppycrawl [ 1 : 12 ] 
 + | | | ` - - IDENT - > tools [ 1 : 23 ] 
 + | | ` - - IDENT - > checkstyle [ 1 : 29 ] 
 + | ` - - IDENT - > astprinter [ 1 : 40 ] 
 + ` - - SEMI - > ; [ 1 : 50 ] 
 + IMPORT - > import [ 3 : 0 ] 
 + | - - DOT - > . [ 3 : 14 ] 
 + | | - - DOT - > . [ 3 : 11 ] 
 + | | | - - IDENT - > java [ 3 : 7 ] 
 + | | ` - - IDENT - > io [ 3 : 12 ] 
 + | ` - - IDENT - > Serializable [ 3 : 15 ] 
 + ` - - SEMI - > ; [ 3 : 27 ] 
 + CLASS _ DEF - > CLASS _ DEF [ 6 : 0 ] 
 + | - - MODIFIERS - > MODIFIERS [ 6 : 0 ] 
 + | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 5 : 0 ] 
 + | | | - - COMMENT _ CONTENT - > * @ author [ 5 : 2 ] 
 + | | | ` - - JAVADOC - > JAVADOC [ 5 : 3 ] 
 + | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 5 : 3 ] 
 + | | | | ` - - AUTHOR _ LITERAL - > @ author [ 5 : 3 ] 
 + | | | ` - - EOF - > < EOF > [ 5 : 10 ] 
 + | | ` - - BLOCK _ COMMENT _ END - > * / [ 5 : 9 ] 
 + | ` - - LITERAL _ PUBLIC - > public [ 6 : 0 ] 
 + | - - LITERAL _ CLASS - > class [ 6 : 7 ] 
 + | - - IDENT - > InputAstTreeStringPrinterJavadocTagsWithoutArgs [ 6 : 13 ] 
 + | - - IMPLEMENTS _ CLAUSE - > implements [ 6 : 61 ] 
 + | ` - - IDENT - > Serializable [ 6 : 72 ] 
 + ` - - OBJBLOCK - > OBJBLOCK [ 6 : 84 ] 
 + | - - LCURLY - > { [ 6 : 84 ] 
 + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 8 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 8 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 7 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ serial [ 7 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 7 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 7 : 7 ] 
 + | | | | | ` - - SERIAL _ LITERAL - > @ serial [ 7 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 7 : 14 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 7 : 13 ] 
 + | | | - - LITERAL _ PRIVATE - > private [ 8 : 4 ] 
 + | | | - - LITERAL _ STATIC - > static [ 8 : 12 ] 
 + | | ` - - FINAL - > final [ 8 : 19 ] 
 + | | - - TYPE - > TYPE [ 8 : 25 ] 
 + | | ` - - LITERAL _ LONG - > long [ 8 : 25 ] 
 + | | - - IDENT - > serialVersionUID [ 8 : 30 ] 
 + | | - - ASSIGN - > = [ 8 : 47 ] 
 + | | ` - - EXPR - > EXPR [ 8 : 49 ] 
 + | | ` - - NUM _ LONG - > 7556448691029650757L [ 8 : 49 ] 
 + | ` - - SEMI - > ; [ 8 : 69 ] 
 + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 11 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 11 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 10 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ see [ 10 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 10 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 10 : 7 ] 
 + | | | | | ` - - SEE _ LITERAL - > @ see [ 10 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 10 : 11 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 10 : 10 ] 
 + | | | - - LITERAL _ PRIVATE - > private [ 11 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 11 : 12 ] 
 + | | - - TYPE - > TYPE [ 11 : 19 ] 
 + | | ` - - LITERAL _ INT - > int [ 11 : 19 ] 
 + | | - - IDENT - > field2 [ 11 : 23 ] 
 + | ` - - SEMI - > ; [ 11 : 29 ] 
 + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 14 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 14 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 13 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ since [ 13 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 13 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 13 : 7 ] 
 + | | | | | ` - - SINCE _ LITERAL - > @ since [ 13 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 13 : 13 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 13 : 12 ] 
 + | | | - - LITERAL _ PRIVATE - > private [ 14 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 14 : 12 ] 
 + | | - - TYPE - > TYPE [ 14 : 19 ] 
 + | | ` - - IDENT - > String [ 14 : 19 ] 
 + | | - - IDENT - > field3 [ 14 : 26 ] 
 + | ` - - SEMI - > ; [ 14 : 32 ] 
 + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 17 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 17 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 16 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ version [ 16 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 16 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 16 : 7 ] 
 + | | | | | ` - - VERSION _ LITERAL - > @ version [ 16 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 16 : 15 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 16 : 14 ] 
 + | | | - - LITERAL _ PRIVATE - > private [ 17 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 17 : 12 ] 
 + | | - - TYPE - > TYPE [ 17 : 19 ] 
 + | | ` - - IDENT - > Object [ 17 : 19 ] 
 + | | - - IDENT - > field4 [ 17 : 26 ] 
 + | ` - - SEMI - > ; [ 17 : 32 ] 
 + | - - VARIABLE _ DEF - > VARIABLE _ DEF [ 20 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 20 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 19 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * serialField [ 19 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 19 : 7 ] 
 + | | | | | - - TEXT - > serialField [ 19 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 19 : 18 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 19 : 17 ] 
 + | | | - - LITERAL _ PRIVATE - > private [ 20 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 20 : 12 ] 
 + | | - - TYPE - > TYPE [ 20 : 19 ] 
 + | | ` - - IDENT - > Object [ 20 : 19 ] 
 + | | - - IDENT - > field5 [ 20 : 26 ] 
 + | ` - - SEMI - > ; [ 20 : 32 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 23 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 23 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 22 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ exception [ 22 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 22 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 22 : 7 ] 
 + | | | | | ` - - EXCEPTION _ LITERAL - > @ exception [ 22 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 22 : 17 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 22 : 16 ] 
 + | | | - - LITERAL _ PUBLIC - > public [ 23 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 23 : 11 ] 
 + | | - - TYPE - > TYPE [ 23 : 18 ] 
 + | | ` - - LITERAL _ VOID - > void [ 23 : 18 ] 
 + | | - - IDENT - > method1 [ 23 : 23 ] 
 + | | - - LPAREN - > ( [ 23 : 30 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 23 : 31 ] 
 + | | - - RPAREN - > ) [ 23 : 31 ] 
 + | ` - - SLIST - > { [ 23 : 33 ] 
 + | ` - - RCURLY - > } [ 25 : 4 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 28 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 28 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 27 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ throws [ 27 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 27 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 27 : 7 ] 
 + | | | | | ` - - THROWS _ LITERAL - > @ throws [ 27 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 27 : 14 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 27 : 13 ] 
 + | | | - - LITERAL _ PUBLIC - > public [ 28 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 28 : 11 ] 
 + | | - - TYPE - > TYPE [ 28 : 18 ] 
 + | | ` - - LITERAL _ VOID - > void [ 28 : 18 ] 
 + | | - - IDENT - > method2 [ 28 : 23 ] 
 + | | - - LPAREN - > ( [ 28 : 30 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 28 : 31 ] 
 + | | - - RPAREN - > ) [ 28 : 31 ] 
 + | ` - - SLIST - > { [ 28 : 33 ] 
 + | ` - - RCURLY - > } [ 30 : 4 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 33 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 33 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 32 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ return [ 32 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 32 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 32 : 7 ] 
 + | | | | | ` - - RETURN _ LITERAL - > @ return [ 32 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 32 : 14 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 32 : 13 ] 
 + | | | - - LITERAL _ PUBLIC - > public [ 33 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 33 : 11 ] 
 + | | - - TYPE - > TYPE [ 33 : 18 ] 
 + | | ` - - LITERAL _ INT - > int [ 33 : 18 ] 
 + | | - - IDENT - > method3 [ 33 : 22 ] 
 + | | - - LPAREN - > ( [ 33 : 29 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 33 : 30 ] 
 + | | - - RPAREN - > ) [ 33 : 30 ] 
 + | ` - - SLIST - > { [ 33 : 32 ] 
 + | | - - LITERAL _ RETURN - > return [ 34 : 8 ] 
 + | | | - - EXPR - > EXPR [ 34 : 15 ] 
 + | | | ` - - UNARY _ MINUS - > - [ 34 : 15 ] 
 + | | | ` - - NUM _ INT - > 1 [ 34 : 16 ] 
 + | | ` - - SEMI - > ; [ 34 : 17 ] 
 + | ` - - RCURLY - > } [ 35 : 4 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 38 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 38 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 37 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ param [ 37 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 37 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 37 : 7 ] 
 + | | | | | ` - - PARAM _ LITERAL - > @ param [ 37 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 37 : 13 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 37 : 12 ] 
 + | | | - - LITERAL _ PUBLIC - > public [ 38 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 38 : 11 ] 
 + | | - - TYPE - > TYPE [ 38 : 18 ] 
 + | | ` - - LITERAL _ VOID - > void [ 38 : 18 ] 
 + | | - - IDENT - > method4 [ 38 : 23 ] 
 + | | - - LPAREN - > ( [ 38 : 30 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 38 : 31 ] 
 + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 38 : 31 ] 
 + | | | - - MODIFIERS - > MODIFIERS [ 38 : 31 ] 
 + | | | - - TYPE - > TYPE [ 38 : 31 ] 
 + | | | ` - - LITERAL _ INT - > int [ 38 : 31 ] 
 + | | ` - - IDENT - > a [ 38 : 35 ] 
 + | | - - RPAREN - > ) [ 38 : 36 ] 
 + | ` - - SLIST - > { [ 38 : 38 ] 
 + | ` - - RCURLY - > } [ 40 : 4 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 43 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 43 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 42 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ customTag [ 42 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 42 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 42 : 7 ] 
 + | | | | | ` - - CUSTOM _ NAME - > @ customTag [ 42 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 42 : 17 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 42 : 16 ] 
 + | | | - - LITERAL _ PUBLIC - > public [ 43 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 43 : 11 ] 
 + | | - - TYPE - > TYPE [ 43 : 18 ] 
 + | | ` - - LITERAL _ VOID - > void [ 43 : 18 ] 
 + | | - - IDENT - > method5 [ 43 : 23 ] 
 + | | - - LPAREN - > ( [ 43 : 30 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 43 : 31 ] 
 + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 43 : 31 ] 
 + | | | - - MODIFIERS - > MODIFIERS [ 43 : 31 ] 
 + | | | - - TYPE - > TYPE [ 43 : 31 ] 
 + | | | ` - - LITERAL _ INT - > int [ 43 : 31 ] 
 + | | ` - - IDENT - > a [ 43 : 35 ] 
 + | | - - RPAREN - > ) [ 43 : 36 ] 
 + | ` - - SLIST - > { [ 43 : 38 ] 
 + | ` - - RCURLY - > } [ 45 : 4 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 48 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 48 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 47 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ deprecated [ 47 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 47 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 47 : 7 ] 
 + | | | | | ` - - DEPRECATED _ LITERAL - > @ deprecated [ 47 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 47 : 18 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 47 : 17 ] 
 + | | | - - LITERAL _ PUBLIC - > public [ 48 : 4 ] 
 + | | ` - - LITERAL _ STATIC - > static [ 48 : 11 ] 
 + | | - - TYPE - > TYPE [ 48 : 18 ] 
 + | | ` - - LITERAL _ VOID - > void [ 48 : 18 ] 
 + | | - - IDENT - > method6 [ 48 : 23 ] 
 + | | - - LPAREN - > ( [ 48 : 30 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 48 : 31 ] 
 + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 48 : 31 ] 
 + | | | - - MODIFIERS - > MODIFIERS [ 48 : 31 ] 
 + | | | - - TYPE - > TYPE [ 48 : 31 ] 
 + | | | ` - - LITERAL _ INT - > int [ 48 : 31 ] 
 + | | ` - - IDENT - > a [ 48 : 35 ] 
 + | | - - RPAREN - > ) [ 48 : 36 ] 
 + | ` - - SLIST - > { [ 48 : 38 ] 
 + | ` - - RCURLY - > } [ 50 : 4 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 53 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 53 : 4 ] 
 + | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 52 : 4 ] 
 + | | | | - - COMMENT _ CONTENT - > * @ serialData [ 52 : 6 ] 
 + | | | | ` - - JAVADOC - > JAVADOC [ 52 : 7 ] 
 + | | | | | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 52 : 7 ] 
 + | | | | | ` - - SERIAL _ DATA _ LITERAL - > @ serialData [ 52 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 52 : 18 ] 
 + | | | ` - - BLOCK _ COMMENT _ END - > * / [ 52 : 17 ] 
 + | | ` - - LITERAL _ PRIVATE - > private [ 53 : 4 ] 
 + | | - - TYPE - > TYPE [ 53 : 12 ] 
 + | | ` - - LITERAL _ VOID - > void [ 53 : 12 ] 
 + | | - - IDENT - > readObject [ 53 : 17 ] 
 + | | - - LPAREN - > ( [ 53 : 27 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 53 : 35 ] 
 + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 53 : 35 ] 
 + | | | - - MODIFIERS - > MODIFIERS [ 53 : 35 ] 
 + | | | - - TYPE - > TYPE [ 53 : 35 ] 
 + | | | ` - - DOT - > . [ 53 : 35 ] 
 + | | | | - - DOT - > . [ 53 : 32 ] 
 + | | | | | - - IDENT - > java [ 53 : 28 ] 
 + | | | | ` - - IDENT - > io [ 53 : 33 ] 
 + | | | ` - - IDENT - > ObjectInputStream [ 53 : 36 ] 
 + | | ` - - IDENT - > inputStream [ 53 : 54 ] 
 + | | - - RPAREN - > ) [ 53 : 65 ] 
 + | ` - - SLIST - > { [ 53 : 67 ] 
 + | ` - - RCURLY - > } [ 55 : 4 ] 
 + | - - METHOD _ DEF - > METHOD _ DEF [ 57 : 4 ] 
 + | | - - MODIFIERS - > MODIFIERS [ 57 : 4 ] 
 + | | ` - - LITERAL _ PRIVATE - > private [ 57 : 4 ] 
 + | | - - TYPE - > TYPE [ 57 : 12 ] 
 + | | ` - - LITERAL _ VOID - > void [ 57 : 12 ] 
 + | | - - IDENT - > writeObject [ 57 : 17 ] 
 + | | - - LPAREN - > ( [ 57 : 28 ] 
 + | | - - PARAMETERS - > PARAMETERS [ 57 : 36 ] 
 + | | ` - - PARAMETER _ DEF - > PARAMETER _ DEF [ 57 : 36 ] 
 + | | | - - MODIFIERS - > MODIFIERS [ 57 : 36 ] 
 + | | | - - TYPE - > TYPE [ 57 : 36 ] 
 + | | | ` - - DOT - > . [ 57 : 36 ] 
 + | | | | - - DOT - > . [ 57 : 33 ] 
 + | | | | | - - IDENT - > java [ 57 : 29 ] 
 + | | | | ` - - IDENT - > io [ 57 : 34 ] 
 + | | | ` - - IDENT - > ObjectOutputStream [ 57 : 37 ] 
 + | | ` - - IDENT - > outputStream [ 57 : 56 ] 
 + | | - - RPAREN - > ) [ 57 : 68 ] 
 + | ` - - SLIST - > { [ 57 : 70 ] 
 + | ` - - RCURLY - > } [ 59 : 4 ] 
 + ` - - RCURLY - > } [ 60 : 0 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java 
 new file mode 100644 
 index 0000000 . . 4ea86e2 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags . java 
 @ @ - 0 , 0 + 1 , 63 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc . abstractjavadoc ; 
 + 
 + import java . io . ObjectStreamField ; 
 + import java . io . Serializable ; 
 + 
 + / * * 
 + * @ author author - name < link rel = " author license " href = " / about " > 
 + * / 
 + public class InputAbstractJavadocNoWsBeforeDescriptionInJavadocTags implements Serializable { 
 + 
 + / * * 
 + * Parse Error from ANTLR . 
 + * @ serial include description 
 + * @ see < a 
 + * href = " http : / / docs . oracle . com / javase / 7 / docs / technotes / tools / windows / javadoc . html # serial " > 
 + * oracle docs < / a > Syntax : < b > @ serial field - description | include | exclude < / b > 
 + * / 
 + private static final long serialVersionUID = 8669426759693842025L ; 
 + 
 + / * * 
 + * Parse Error from ANTLR . 
 + * @ serialField Fieldname - fieldtype - fielddescription 
 + * / 
 + private static ObjectStreamField objectStreamField1 ; 
 + 
 + / * * 
 + * Parse Error from ANTLR . 
 + * @ serialField Fieldname fieldtype - fielddescription 
 + * / 
 + private static ObjectStreamField objectStreamField2 ; 
 + 
 + / * * 
 + * @ serialField Fieldname - fieldtype - fielddescription < ! - - No 
 + * error - - > 
 + * / 
 + private static ObjectStreamField objectStreamField3 ; 
 + 
 + / * * 
 + * Parse Error from ANTLR . 
 + * @ exception RuntimeException - description 
 + * / 
 + private static void method1 ( ) { 
 + 
 + } 
 + 
 + / * * 
 + * Parse Error from ANTLR . 
 + * @ throws RuntimeException - description 
 + * / 
 + private static void method2 ( ) { 
 + 
 + } 
 + 
 + / * * 
 + * Parse Error from ANTLR . 
 + * 
 + * @ param a - description 
 + * / 
 + private static void method3 ( int a ) { 
 + 
 + } 
 + 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc 
 new file mode 100644 
 index 0000000 . . 5f037f7 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputSpaceBeforeDescriptionInBlockJavadocTags . javadoc 
 @ @ - 0 , 0 + 1 , 53 @ @ 
 + * @ author 
 + author - name < br attr = " value " / > 
 + 
 + * @ deprecated 
 + deprecated - text 
 + 
 + * @ exception CustomEx 
 + { @ link CustomEx } < b > Internal < / b > 
 + 
 + * @ param ParamName 
 + Param - description 
 + 
 + * @ return 
 + return - description 
 + 
 + * @ serial 
 + DESCRIPTION 
 + 
 + * @ serial 
 + include 
 + 
 + * @ serialData 
 + DESCRIPTION 
 + on multiple lines 
 + 
 + * @ serialField fieldname fieldtype 
 + 
 + description 
 + 
 + * @ since 
 + 8 . 2 
 + 
 + * @ throws Exception Exception - description 
 + spanning multiple lines 
 + 
 + * @ version 
 + 8 . 2 - 8 . 3 - 8 . 4 . . . 
 + 
 + * @ customTag 
 + 
 + DESCRIPTION 
 + 
 + * @ exception 
 + Exception Exception - description 
 + spanning multiple lines 
 + 
 + * @ param 
 + ParamName 
 + Param - description 
 + 
 + * @ throws 
 + Exception Exception - description 
 + spanning multiple lines 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllStandardJavadocTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllStandardJavadocTagsAst . txt 
 index 7c5b5f7 . . f108958 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllStandardJavadocTagsAst . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedAllStandardJavadocTagsAst . txt 
 @ @ - 611 , 14 + 611 , 12 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 | | - - SERIAL _ LITERAL - > @ serial [ 55 : 0 ] 
 | | - - WS - > [ 55 : 7 ] 
 | | - - LITERAL _ INCLUDE - > include [ 55 : 8 ] 
 - | ` - - DESCRIPTION - > DESCRIPTION [ 55 : 15 ] 
 - | ` - - NEWLINE - > \ r \ n [ 55 : 15 ] 
 + | ` - - NEWLINE - > \ r \ n [ 55 : 15 ] 
 | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 56 : 0 ] 
 | | - - SERIAL _ LITERAL - > @ serial [ 56 : 0 ] 
 | | - - WS - > [ 56 : 7 ] 
 | | - - LITERAL _ EXCLUDE - > exclude [ 56 : 8 ] 
 - | ` - - DESCRIPTION - > DESCRIPTION [ 56 : 15 ] 
 - | ` - - NEWLINE - > \ r \ n [ 56 : 15 ] 
 + | ` - - NEWLINE - > \ r \ n [ 56 : 15 ] 
 | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 57 : 0 ] 
 | | - - SERIAL _ FIELD _ LITERAL - > @ serialField [ 57 : 0 ] 
 | | - - WS - > [ 57 : 12 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSerialAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSerialAst . txt 
 index c7c0bf9 . . a2dd8e6 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSerialAst . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSerialAst . txt 
 @ @ - 13 , 14 + 13 , 12 @ @ JAVADOC - > JAVADOC [ 0 : 0 ] 
 | | - - SERIAL _ LITERAL - > @ serial [ 3 : 0 ] 
 | | - - WS - > [ 3 : 7 ] 
 | | - - LITERAL _ INCLUDE - > include [ 3 : 8 ] 
 - | ` - - DESCRIPTION - > DESCRIPTION [ 3 : 15 ] 
 - | ` - - NEWLINE - > \ r \ n [ 3 : 15 ] 
 + | ` - - NEWLINE - > \ r \ n [ 3 : 15 ] 
 | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 4 : 0 ] 
 | | - - SERIAL _ LITERAL - > @ serial [ 4 : 0 ] 
 | | - - WS - > [ 4 : 7 ] 
 | | - - LITERAL _ EXCLUDE - > exclude [ 4 : 8 ] 
 - | ` - - DESCRIPTION - > DESCRIPTION [ 4 : 15 ] 
 - | ` - - NEWLINE - > \ r \ n [ 4 : 15 ] 
 + | ` - - NEWLINE - > \ r \ n [ 4 : 15 ] 
 | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 5 : 0 ] 
 | | - - SERIAL _ FIELD _ LITERAL - > @ serialField [ 5 : 0 ] 
 | | - - WS - > [ 5 : 12 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt 
 new file mode 100644 
 index 0000000 . . 8671b78 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / expectedSpaceBeforeDescriptionInBlockJavadocTagsAst . txt 
 @ @ - 0 , 0 + 1 , 213 @ @ 
 + JAVADOC - > JAVADOC [ 0 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 0 : 0 ] 
 + | - - WS - > [ 0 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 0 : 2 ] 
 + | | - - AUTHOR _ LITERAL - > @ author [ 0 : 2 ] 
 + | | - - WS - > [ 0 : 9 ] 
 + | | - - NEWLINE - > \ n [ 0 : 11 ] 
 + | | - - WS - > [ 1 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 1 : 6 ] 
 + | | - - TEXT - > author - name [ 1 : 6 ] 
 + | | - - HTML _ ELEMENT - > HTML _ ELEMENT [ 1 : 18 ] 
 + | | ` - - SINGLETON _ ELEMENT - > SINGLETON _ ELEMENT [ 1 : 18 ] 
 + | | ` - - BR _ TAG - > BR _ TAG [ 1 : 18 ] 
 + | | | - - START - > < [ 1 : 18 ] 
 + | | | - - BR _ HTML _ TAG _ NAME - > br [ 1 : 19 ] 
 + | | | - - WS - > [ 1 : 21 ] 
 + | | | - - ATTRIBUTE - > ATTRIBUTE [ 1 : 22 ] 
 + | | | | - - HTML _ TAG _ NAME - > attr [ 1 : 22 ] 
 + | | | | - - EQUALS - > = [ 1 : 26 ] 
 + | | | ` - - ATTR _ VALUE - > " value " [ 1 : 27 ] 
 + | | ` - - SLASH _ END - > / > [ 1 : 35 ] 
 + | | - - NEWLINE - > \ n [ 1 : 37 ] 
 + | ` - - NEWLINE - > \ n [ 2 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 3 : 0 ] 
 + | - - WS - > [ 3 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 3 : 2 ] 
 + | | - - DEPRECATED _ LITERAL - > @ deprecated [ 3 : 2 ] 
 + | | - - NEWLINE - > \ n [ 3 : 13 ] 
 + | | - - WS - > [ 4 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 4 : 6 ] 
 + | | - - TEXT - > deprecated - text [ 4 : 6 ] 
 + | | - - NEWLINE - > \ n [ 4 : 21 ] 
 + | ` - - NEWLINE - > \ n [ 5 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 6 : 0 ] 
 + | - - WS - > [ 6 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 6 : 2 ] 
 + | | - - EXCEPTION _ LITERAL - > @ exception [ 6 : 2 ] 
 + | | - - WS - > [ 6 : 12 ] 
 + | | - - CLASS _ NAME - > CustomEx [ 6 : 18 ] 
 + | | - - WS - > [ 6 : 26 ] 
 + | | - - NEWLINE - > \ n [ 6 : 28 ] 
 + | | - - WS - > [ 7 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 7 : 6 ] 
 + | | - - JAVADOC _ INLINE _ TAG - > JAVADOC _ INLINE _ TAG [ 7 : 6 ] 
 + | | | - - JAVADOC _ INLINE _ TAG _ START - > { [ 7 : 6 ] 
 + | | | - - LINK _ LITERAL - > @ link [ 7 : 7 ] 
 + | | | - - WS - > [ 7 : 12 ] 
 + | | | - - REFERENCE - > REFERENCE [ 7 : 13 ] 
 + | | | ` - - CLASS - > CustomEx [ 7 : 13 ] 
 + | | ` - - JAVADOC _ INLINE _ TAG _ END - > } [ 7 : 21 ] 
 + | | - - TEXT - > [ 7 : 22 ] 
 + | | - - HTML _ ELEMENT - > HTML _ ELEMENT [ 7 : 23 ] 
 + | | ` - - HTML _ TAG - > HTML _ TAG [ 7 : 23 ] 
 + | | | - - HTML _ ELEMENT _ START - > HTML _ ELEMENT _ START [ 7 : 23 ] 
 + | | | | - - START - > < [ 7 : 23 ] 
 + | | | | - - HTML _ TAG _ NAME - > b [ 7 : 24 ] 
 + | | | ` - - END - > > [ 7 : 25 ] 
 + | | | - - TEXT - > Internal [ 7 : 26 ] 
 + | | ` - - HTML _ ELEMENT _ END - > HTML _ ELEMENT _ END [ 7 : 34 ] 
 + | | | - - START - > < [ 7 : 34 ] 
 + | | | - - SLASH - > / [ 7 : 35 ] 
 + | | | - - HTML _ TAG _ NAME - > b [ 7 : 36 ] 
 + | | ` - - END - > > [ 7 : 37 ] 
 + | | - - NEWLINE - > \ n [ 7 : 38 ] 
 + | ` - - NEWLINE - > \ n [ 8 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 9 : 0 ] 
 + | - - WS - > [ 9 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 9 : 2 ] 
 + | | - - PARAM _ LITERAL - > @ param [ 9 : 2 ] 
 + | | - - WS - > [ 9 : 8 ] 
 + | | - - PARAMETER _ NAME - > ParamName [ 9 : 17 ] 
 + | | - - NEWLINE - > \ n [ 9 : 26 ] 
 + | | - - WS - > [ 10 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 10 : 6 ] 
 + | | - - TEXT - > Param - description [ 10 : 6 ] 
 + | | - - NEWLINE - > \ n [ 10 : 23 ] 
 + | ` - - NEWLINE - > \ n [ 11 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 12 : 0 ] 
 + | - - WS - > [ 12 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 12 : 2 ] 
 + | | - - RETURN _ LITERAL - > @ return [ 12 : 2 ] 
 + | | - - NEWLINE - > \ n [ 12 : 9 ] 
 + | | - - WS - > [ 13 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 13 : 6 ] 
 + | | - - TEXT - > return - description [ 13 : 6 ] 
 + | | - - NEWLINE - > \ n [ 13 : 24 ] 
 + | ` - - NEWLINE - > \ n [ 14 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 15 : 0 ] 
 + | - - WS - > [ 15 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 15 : 2 ] 
 + | | - - SERIAL _ LITERAL - > @ serial [ 15 : 2 ] 
 + | | - - NEWLINE - > \ n [ 15 : 9 ] 
 + | | - - WS - > [ 16 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 16 : 6 ] 
 + | | - - TEXT - > DESCRIPTION [ 16 : 6 ] 
 + | | - - NEWLINE - > \ n [ 16 : 17 ] 
 + | ` - - NEWLINE - > \ n [ 17 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 18 : 0 ] 
 + | - - WS - > [ 18 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 18 : 2 ] 
 + | | - - SERIAL _ LITERAL - > @ serial [ 18 : 2 ] 
 + | | - - NEWLINE - > \ n [ 18 : 9 ] 
 + | | - - LITERAL _ INCLUDE - > include [ 19 : 0 ] 
 + | | - - WS - > [ 19 : 7 ] 
 + | | - - NEWLINE - > \ n [ 19 : 11 ] 
 + | ` - - NEWLINE - > \ n [ 20 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 21 : 0 ] 
 + | - - WS - > [ 21 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 21 : 2 ] 
 + | | - - SERIAL _ DATA _ LITERAL - > @ serialData [ 21 : 2 ] 
 + | | - - NEWLINE - > \ n [ 21 : 13 ] 
 + | | - - WS - > [ 22 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 22 : 6 ] 
 + | | - - TEXT - > DESCRIPTION [ 22 : 6 ] 
 + | | - - NEWLINE - > \ n [ 22 : 17 ] 
 + | | - - TEXT - > on multiple lines [ 23 : 0 ] 
 + | | - - NEWLINE - > \ n [ 23 : 23 ] 
 + | ` - - NEWLINE - > \ n [ 24 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 25 : 0 ] 
 + | - - WS - > [ 25 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 25 : 2 ] 
 + | | - - SERIAL _ FIELD _ LITERAL - > @ serialField [ 25 : 2 ] 
 + | | - - WS - > [ 25 : 14 ] 
 + | | - - FIELD _ NAME - > fieldname [ 25 : 19 ] 
 + | | - - WS - > [ 25 : 28 ] 
 + | | - - FIELD _ TYPE - > fieldtype [ 25 : 33 ] 
 + | | - - NEWLINE - > \ n [ 25 : 42 ] 
 + | | - - NEWLINE - > \ n [ 26 : 0 ] 
 + | | - - WS - > [ 27 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 27 : 5 ] 
 + | | - - TEXT - > description [ 27 : 5 ] 
 + | | - - NEWLINE - > \ n [ 27 : 16 ] 
 + | ` - - NEWLINE - > \ n [ 28 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 29 : 0 ] 
 + | - - WS - > [ 29 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 29 : 2 ] 
 + | | - - SINCE _ LITERAL - > @ since [ 29 : 2 ] 
 + | | - - NEWLINE - > \ n [ 29 : 8 ] 
 + | | - - WS - > [ 30 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 30 : 12 ] 
 + | | - - TEXT - > 8 . 2 [ 30 : 12 ] 
 + | | - - NEWLINE - > \ n [ 30 : 15 ] 
 + | ` - - NEWLINE - > \ n [ 31 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 32 : 0 ] 
 + | - - WS - > [ 32 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 32 : 2 ] 
 + | | - - THROWS _ LITERAL - > @ throws [ 32 : 2 ] 
 + | | - - WS - > [ 32 : 9 ] 
 + | | - - CLASS _ NAME - > Exception [ 32 : 15 ] 
 + | | - - WS - > [ 32 : 24 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 32 : 29 ] 
 + | | - - TEXT - > Exception - description [ 32 : 29 ] 
 + | | - - NEWLINE - > \ n [ 32 : 50 ] 
 + | | - - TEXT - > spanning multiple lines [ 33 : 0 ] 
 + | | - - NEWLINE - > \ n [ 33 : 32 ] 
 + | ` - - NEWLINE - > \ n [ 34 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 35 : 0 ] 
 + | - - WS - > [ 35 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 35 : 2 ] 
 + | | - - VERSION _ LITERAL - > @ version [ 35 : 2 ] 
 + | | - - NEWLINE - > \ n [ 35 : 10 ] 
 + | | - - WS - > [ 36 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 36 : 13 ] 
 + | | - - TEXT - > 8 . 2 - 8 . 3 - 8 . 4 . . . [ 36 : 13 ] 
 + | | - - NEWLINE - > \ n [ 36 : 31 ] 
 + | ` - - NEWLINE - > \ n [ 37 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 38 : 0 ] 
 + | - - WS - > [ 38 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 38 : 2 ] 
 + | | - - CUSTOM _ NAME - > @ customTag [ 38 : 2 ] 
 + | | - - NEWLINE - > \ n [ 38 : 12 ] 
 + | | - - WS - > [ 39 : 0 ] 
 + | | - - NEWLINE - > \ n [ 39 : 5 ] 
 + | | - - WS - > [ 40 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 40 : 5 ] 
 + | | - - TEXT - > DESCRIPTION [ 40 : 5 ] 
 + | | - - NEWLINE - > \ n [ 40 : 16 ] 
 + | ` - - NEWLINE - > \ n [ 41 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 42 : 0 ] 
 + | - - WS - > [ 42 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 42 : 2 ] 
 + | | - - EXCEPTION _ LITERAL - > @ exception [ 42 : 2 ] 
 + | | - - NEWLINE - > \ n [ 43 : 0 ] 
 + | | - - WS - > [ 44 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 44 : 6 ] 
 + | | - - TEXT - > Exception Exception - description [ 44 : 6 ] 
 + | | - - NEWLINE - > \ n [ 44 : 41 ] 
 + | | - - TEXT - > spanning multiple lines [ 45 : 0 ] 
 + | | - - NEWLINE - > \ n [ 45 : 29 ] 
 + | ` - - NEWLINE - > \ n [ 46 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 47 : 0 ] 
 + | - - WS - > [ 47 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 47 : 2 ] 
 + | | - - PARAM _ LITERAL - > @ param [ 47 : 2 ] 
 + | | - - NEWLINE - > \ n [ 48 : 0 ] 
 + | | - - WS - > [ 49 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 49 : 6 ] 
 + | | - - TEXT - > ParamName [ 49 : 6 ] 
 + | | - - NEWLINE - > \ n [ 49 : 15 ] 
 + | | - - TEXT - > Param - description [ 50 : 0 ] 
 + | | - - NEWLINE - > \ n [ 50 : 23 ] 
 + | ` - - NEWLINE - > \ n [ 51 : 0 ] 
 + | - - LEADING _ ASTERISK - > * [ 52 : 0 ] 
 + | - - WS - > [ 52 : 1 ] 
 + | - - JAVADOC _ TAG - > JAVADOC _ TAG [ 52 : 2 ] 
 + | | - - THROWS _ LITERAL - > @ throws [ 52 : 2 ] 
 + | | - - NEWLINE - > \ n [ 53 : 0 ] 
 + | | - - WS - > [ 54 : 0 ] 
 + | ` - - DESCRIPTION - > DESCRIPTION [ 54 : 5 ] 
 + | | - - TEXT - > Exception Exception - description [ 54 : 5 ] 
 + | | - - NEWLINE - > \ n [ 54 : 40 ] 
 + | ` - - TEXT - > spanning multiple lines [ 55 : 0 ] 
 + ` - - EOF - > < EOF > [ 55 : 32 ]

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java 
 index 581e08f . . 229f9e6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheckTest . java 
 @ @ - 39 , 13 + 39 , 13 @ @ public class ModifierOrderCheckTest 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " modifier " + File . separator + filename ) ; 
 + + " modifier " + File . separator + " modifierorder " + File . separator + filename ) ; 
 } 
 
 @ Override 
 protected String getNonCompilablePath ( String filename ) throws IOException { 
 return super . getNonCompilablePath ( " checks " + File . separator 
 - + " modifier " + File . separator + filename ) ; 
 + + " modifier " + File . separator + " modifierorder " + File . separator + filename ) ; 
 } 
 
 @ Test 
 @ @ - 68 , 7 + 68 , 7 @ @ public class ModifierOrderCheckTest 
 " 49 : 35 : " + getCheckMessage ( MSG _ ANNOTATION _ ORDER , " @ MyAnnotation4 " ) , 
 " 157 : 14 : " + getCheckMessage ( MSG _ MODIFIER _ ORDER , " default " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputModifier . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputModifierOrderIt . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 77 , 7 + 77 , 7 @ @ public class ModifierOrderCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( ModifierOrderCheck . class ) ; 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " InputModifier2 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputModifierOrderDefaultMethods . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 121 , 7 + 121 , 8 @ @ public class ModifierOrderCheckTest 
 final String [ ] expected = { 
 " 103 : 13 : " + getCheckMessage ( MSG _ ANNOTATION _ ORDER , " @ MethodAnnotation " ) , 
 } ; 
 - verify ( checkConfig , getNonCompilablePath ( " InputTypeAnnotations . java " ) , expected ) ; 
 + verify ( checkConfig , getNonCompilablePath ( " InputModifierOrderTypeAnnotations . java " ) , 
 + expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / InputTypeAnnotations . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / InputTypeAnnotations . java 
 deleted file mode 100644 
 index 327b0a4 . . 0000000 
 - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / InputTypeAnnotations . java 
 + + + / dev / null 
 @ @ - 1 , 127 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . modifier ; 
 - 
 - import java . io . File ; 
 - import java . io . IOException ; 
 - import java . io . Serializable ; 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - import java . util . Collection ; 
 - import java . util . Comparator ; 
 - import java . util . List ; 
 - import java . util . Map ; 
 - 
 - public class InputTypeAnnotations extends MyClass { 
 - 
 - / / Simple type definitions with type annotations 
 - private @ TypeAnnotation String hello = " Hello , World ! " ; 
 - private @ TypeAnnotation final String jdk = " JDK8 " ; 
 - @ TypeAnnotation private String projectName = " Checkstyle " ; 
 - 
 - / / We can use type Annotations with generic type arguments 
 - private Map . @ TypeAnnotation Entry entry ; 
 - / / Type annotations can also be applied to nested types 
 - private List < @ TypeAnnotation String > strings ; 
 - 
 - / / Constructors with type annotations 
 - { 
 - new @ TypeAnnotation Object ( ) ; 
 - } 
 - 
 - static { 
 - new @ TypeAnnotation Object ( ) ; 
 - } 
 - 
 - public void foo1 ( ) { 
 - new @ TypeAnnotation Object ( ) ; 
 - } 
 - 
 - / / Type annotations work with nested ( non static ) class constructors too 
 - public void foo2 ( ) { 
 - InputTypeAnnotations myObject = new InputTypeAnnotations ( ) ; 
 - myObject . new @ TypeAnnotation Nested ( ) ; 
 - } 
 - 
 - / / Type casts 
 - public void foo3 ( ) { 
 - String myString = ( @ TypeAnnotation String ) new Object ( ) ; 
 - 
 - } 
 - 
 - / / Type annotations with method arguments 
 - private void foo4 ( final @ TypeAnnotation String parameterName ) { } 
 - 
 - / / Inheritance 
 - class MySerializableClass < T > implements @ TypeAnnotation Serializable { } 
 - 
 - / / Nested type annotations 
 - Map < @ TypeAnnotation String , @ TypeAnnotation List < @ TypeAnnotation String > > documents ; 
 - 
 - / / Apply type annotations to intersection types 
 - public < E extends @ TypeAnnotation Comparator < E > & @ TypeAnnotation Comparable > void foo5 ( ) { } 
 - 
 - / / Including parameter bounds and wildcard bounds 
 - class Folder < F extends @ TypeAnnotation File > { } 
 - Collection < ? super @ TypeAnnotation File > c ; 
 - List < @ TypeAnnotation ? extends Comparable < T > > unchangeable ; 
 - 
 - / / Throwing exceptions 
 - void foo6 ( ) throws @ TypeAnnotation IOException { } 
 - 
 - / / Type annotations in instanceof statements 
 - public void foo7 ( ) { 
 - boolean isNonNull = " string " instanceof @ TypeAnnotation String ; 
 - 
 - } 
 - 
 - class Nested { } 
 - 
 - class T { } 
 - 
 - / / Type annotation on method return type 
 - @ Override 
 - public @ TypeAnnotation String toString ( ) { return " " ; } 
 - 
 - @ Override 
 - @ TypeAnnotation public int hashCode ( ) { return 1 ; } 
 - 
 - public @ TypeAnnotation int foo8 ( ) { return 1 ; } 
 - 
 - public @ TypeAnnotation boolean equals ( Object obj ) { return super . equals ( obj ) ; } 
 - 
 - / / @ TypeAnnotation void foo9 ( ) { } < - - Compiletime error : void type cannot be annotated with type annotation 
 - 
 - @ Override 
 - void foo10 ( ) { 
 - super . foo10 ( ) ; 
 - } 
 - } 
 - 
 - class MyClass { 
 - 
 - / / It is annotation on method , but not on type ! 
 - @ MethodAnnotation void foo10 ( ) { } 
 - private @ MethodAnnotation void foo11 ( ) { } 
 - 
 - public @ TypeAnnotation MyClass ( ) { } 
 - @ ConstructorAnnotation public MyClass ( String name ) { } 
 - } 
 - 
 - enum MyEnum { 
 - @ TypeAnnotation A ; 
 - } 
 - 
 - interface IInterfacable { 
 - default @ TypeAnnotation String foo ( ) { 
 - return null ; 
 - } 
 - } 
 - 
 - @ Target ( { 
 - ElementType . FIELD , ElementType . LOCAL _ VARIABLE , ElementType . PARAMETER , 
 - ElementType . TYPE _ PARAMETER , ElementType . TYPE _ USE } ) 
 - @ interface TypeAnnotation { 
 - } 
 - 
 - @ interface MethodAnnotation { } 
 - 
 - @ interface ConstructorAnnotation { } 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderTypeAnnotations . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderTypeAnnotations . java 
 new file mode 100644 
 index 0000000 . . 8702e1f 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderTypeAnnotations . java 
 @ @ - 0 , 0 + 1 , 127 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . modifier . modifierorder ; 
 + 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + import java . io . Serializable ; 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + import java . util . Collection ; 
 + import java . util . Comparator ; 
 + import java . util . List ; 
 + import java . util . Map ; 
 + 
 + public class InputModifierOrderTypeAnnotations extends MyClass { 
 + 
 + / / Simple type definitions with type annotations 
 + private @ TypeAnnotation String hello = " Hello , World ! " ; 
 + private @ TypeAnnotation final String jdk = " JDK8 " ; 
 + @ TypeAnnotation private String projectName = " Checkstyle " ; 
 + 
 + / / We can use type Annotations with generic type arguments 
 + private Map . @ TypeAnnotation Entry entry ; 
 + / / Type annotations can also be applied to nested types 
 + private List < @ TypeAnnotation String > strings ; 
 + 
 + / / Constructors with type annotations 
 + { 
 + new @ TypeAnnotation Object ( ) ; 
 + } 
 + 
 + static { 
 + new @ TypeAnnotation Object ( ) ; 
 + } 
 + 
 + public void foo1 ( ) { 
 + new @ TypeAnnotation Object ( ) ; 
 + } 
 + 
 + / / Type annotations work with nested ( non static ) class constructors too 
 + public void foo2 ( ) { 
 + InputTypeAnnotations myObject = new InputTypeAnnotations ( ) ; 
 + myObject . new @ TypeAnnotation Nested ( ) ; 
 + } 
 + 
 + / / Type casts 
 + public void foo3 ( ) { 
 + String myString = ( @ TypeAnnotation String ) new Object ( ) ; 
 + 
 + } 
 + 
 + / / Type annotations with method arguments 
 + private void foo4 ( final @ TypeAnnotation String parameterName ) { } 
 + 
 + / / Inheritance 
 + class MySerializableClass < T > implements @ TypeAnnotation Serializable { } 
 + 
 + / / Nested type annotations 
 + Map < @ TypeAnnotation String , @ TypeAnnotation List < @ TypeAnnotation String > > documents ; 
 + 
 + / / Apply type annotations to intersection types 
 + public < E extends @ TypeAnnotation Comparator < E > & @ TypeAnnotation Comparable > void foo5 ( ) { } 
 + 
 + / / Including parameter bounds and wildcard bounds 
 + class Folder < F extends @ TypeAnnotation File > { } 
 + Collection < ? super @ TypeAnnotation File > c ; 
 + List < @ TypeAnnotation ? extends Comparable < T > > unchangeable ; 
 + 
 + / / Throwing exceptions 
 + void foo6 ( ) throws @ TypeAnnotation IOException { } 
 + 
 + / / Type annotations in instanceof statements 
 + public void foo7 ( ) { 
 + boolean isNonNull = " string " instanceof @ TypeAnnotation String ; 
 + 
 + } 
 + 
 + class Nested { } 
 + 
 + class T { } 
 + 
 + / / Type annotation on method return type 
 + @ Override 
 + public @ TypeAnnotation String toString ( ) { return " " ; } 
 + 
 + @ Override 
 + @ TypeAnnotation public int hashCode ( ) { return 1 ; } 
 + 
 + public @ TypeAnnotation int foo8 ( ) { return 1 ; } 
 + 
 + public @ TypeAnnotation boolean equals ( Object obj ) { return super . equals ( obj ) ; } 
 + 
 + / / @ TypeAnnotation void foo9 ( ) { } < - - Compiletime error : void type cannot be annotated with type annotation 
 + 
 + @ Override 
 + void foo10 ( ) { 
 + super . foo10 ( ) ; 
 + } 
 + } 
 + 
 + class MyClass { 
 + 
 + / / It is annotation on method , but not on type ! 
 + @ MethodAnnotation void foo10 ( ) { } 
 + private @ MethodAnnotation void foo11 ( ) { } 
 + 
 + public @ TypeAnnotation MyClass ( ) { } 
 + @ ConstructorAnnotation public MyClass ( String name ) { } 
 + } 
 + 
 + enum MyEnum { 
 + @ TypeAnnotation A ; 
 + } 
 + 
 + interface IInterfacable { 
 + default @ TypeAnnotation String foo ( ) { 
 + return null ; 
 + } 
 + } 
 + 
 + @ Target ( { 
 + ElementType . FIELD , ElementType . LOCAL _ VARIABLE , ElementType . PARAMETER , 
 + ElementType . TYPE _ PARAMETER , ElementType . TYPE _ USE } ) 
 + @ interface TypeAnnotation { 
 + } 
 + 
 + @ interface MethodAnnotation { } 
 + 
 + @ interface ConstructorAnnotation { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier2 . java 
 deleted file mode 100644 
 index 2a9edbe . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier2 . java 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . modifier ; 
 - import java . util . Comparator ; 
 - 
 - public interface InputModifier2 extends Comparator < Integer > { 
 - @ Override 
 - default int compare ( Integer a , Integer b ) { 
 - return 0 ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifierOrderAnnotationDeclaration . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifierOrderAnnotationDeclaration . java 
 deleted file mode 100644 
 index 9a98854 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifierOrderAnnotationDeclaration . java 
 + + + / dev / null 
 @ @ - 1 , 7 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . modifier ; 
 - 
 - public @ InterfaceAnnotation @ interface InputModifierOrderAnnotationDeclaration { 
 - int getValue ( ) ; 
 - } 
 - 
 - @ interface InterfaceAnnotation { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderAnnotationDeclaration . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderAnnotationDeclaration . java 
 new file mode 100644 
 index 0000000 . . 81831ea 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderAnnotationDeclaration . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . modifier . modifierorder ; 
 + 
 + public @ InterfaceAnnotation @ interface InputModifierOrderAnnotationDeclaration { 
 + int getValue ( ) ; 
 + } 
 + 
 + @ interface InterfaceAnnotation { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderDefaultMethods . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderDefaultMethods . java 
 new file mode 100644 
 index 0000000 . . 389d497 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderDefaultMethods . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . modifier . modifierorder ; 
 + import java . util . Comparator ; 
 + 
 + public interface InputModifierOrderDefaultMethods extends Comparator < Integer > { 
 + @ Override 
 + default int compare ( Integer a , Integer b ) { 
 + return 0 ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderIt . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderIt . java 
 new file mode 100644 
 index 0000000 . . 457c3b3 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / modifierorder / InputModifierOrderIt . java 
 @ @ - 0 , 0 + 1 , 160 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . checks . modifier . modifierorder ; 
 + 
 + / * * 
 + * Test case for Modifier checks : 
 + * - order of modifiers 
 + * - use of ' public ' in interface definition 
 + * @ author lkuehne 
 + * / 
 + strictfp final class InputModifierOrderIt / / illegal order of modifiers for class 
 + { 
 + 
 + / * * Illegal order of modifiers for variables * / 
 + static private boolean sModifierOrderVar = false ; 
 + 
 + / * * 
 + * Illegal order of modifiers for methods . Make sure that the 
 + * first and last modifier from the JLS sequence is used . 
 + * / 
 + strictfp private void doStuff ( ) 
 + { 
 + } 
 + 
 + / * * Single annotation without other modifiers * / 
 + @ MyAnnotation2 void someMethod ( ) 
 + { 
 + } 
 + 
 + / * * Illegal order of annotation - must come first * / 
 + private @ MyAnnotation2 void someMethod2 ( ) 
 + { 
 + } 
 + 
 + / * * Annotation in middle of other modifiers otherwise in correct order * / 
 + private @ MyAnnotation2 strictfp void someMethod3 ( ) 
 + { 
 + } 
 + 
 + / * * Correct order * / 
 + @ MyAnnotation2 private strictfp void someMethod4 ( ) 
 + { 
 + } 
 + 
 + / * * Annotation in middle of other modifiers otherwise in correct order * / 
 + @ MyAnnotation2 private static @ MyAnnotation4 strictfp void someMethod5 ( ) 
 + { 
 + } 
 + 
 + / * * holder for redundant ' public ' modifier check . * / 
 + public static interface InputRedundantPublicModifier / / violation 
 + { 
 + / * * redundant ' public ' modifier * / 
 + public void a ( ) ; / / violation 
 + 
 + / * * all OK * / 
 + void b ( ) ; 
 + 
 + / * * redundant abstract modifier * / 
 + abstract void c ( ) ; / / violation 
 + 
 + / * * redundant ' public ' modifier * / 
 + public float PI _ PUBLIC = ( float ) 3 . 14 ; / / violation 
 + 
 + / * * redundant ' abstract ' modifier ( field can not be abstract ) * / 
 + / / abstract float PI _ ABSTRACT = ( float ) 3 . 14 ; 
 + 
 + / * * redundant ' final ' modifier * / 
 + final float PI _ FINAL = ( float ) 3 . 14 ; / / violation 
 + 
 + / * * all OK * / 
 + float PI _ OK = ( float ) 3 . 14 ; 
 + } 
 + 
 + / * * redundant ' final ' modifier * / 
 + private final void method ( ) / / violation 
 + { 
 + } 
 + } 
 + 
 + / * * Holder for redundant ' final ' check . * / 
 + final class RedundantFinalClass 
 + { 
 + / * * redundant ' final ' modifier * / 
 + public final void finalMethod ( ) / / violation 
 + { 
 + } 
 + 
 + / * * OK * / 
 + public void method ( ) 
 + { 
 + } 
 + } 
 + 
 + / * * Holder for redundant modifiers of inner implementation * / 
 + abstract interface InnerImplementation / / violation 
 + { 
 + InnerImplementation inner = 
 + new InnerImplementation ( ) 
 + { 
 + / * * compiler requires ' public ' modifier * / 
 + public void method ( ) 
 + { 
 + } 
 + } ; 
 + 
 + void method ( ) ; 
 + } 
 + 
 + / * * Holder for redundant modifiers of annotation fields / variables * / 
 + @ interface Annotation 
 + { 
 + public String s1 = " " ; / / violation 
 + final String s2 = " " ; / / violation 
 + static String s3 = " " ; / / violation 
 + String s4 = " " ; 
 + public String blah ( ) ; / / violation 
 + abstract String blah2 ( ) ; / / violation 
 + } 
 + 
 + @ interface MyAnnotation2 { 
 + } 
 + 
 + @ interface MyAnnotation4 { 
 + } 
 + 
 + class SafeVarargsUsage { 
 + @ Deprecated 
 + @ SafeVarargs 
 + private final void foo ( int . . . k ) { } 
 + 
 + @ Deprecated 
 + @ SafeVarargs 
 + @ SuppressWarnings ( " " ) 
 + private final void foo1 ( Object . . . obj ) { } 
 + } 
 + 
 + enum TestEnum { 
 + ; 
 + 
 + public void method ( ) { 
 + } 
 + } 
 + 
 + / * * holder for interface specific modifier check . * / 
 + interface InputDefaultPublicModifier 
 + { 
 + / * * correct order * / 
 + default strictfp void a ( ) 
 + { 
 + } 
 + 
 + / * * wrong order * / 
 + strictfp default void b ( ) / / violation 
 + { 
 + } 
 + }
