BLEU SCORE: 0.02955926526467443

TEST MSG: Issue # 2161 : unify test input locations
GENERATED MSG: added check for equals ( ) vs . hashCode , RFE # 554373

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheckTest . java <nl> index c1fc4cb . . 047a3a6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheckTest . java <nl> @ @ - 21 , 6 + 21 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . SimplifyBooleanExpressionCheck . MSG _ KEY ; <nl> <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> @ @ - 29 , 6 + 32 , 12 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> <nl> public class SimplifyBooleanExpressionCheckTest <nl> extends BaseCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " coding " + File . separator + filename ) ; <nl> + } <nl> + <nl> @ Test <nl> public void testIt ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheckTest . java <nl> index 7fbb5cf . . d9cc174 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheckTest . java <nl> @ @ - 21 , 6 + 21 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . SimplifyBooleanReturnCheck . MSG _ KEY ; <nl> <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> @ @ - 29 , 6 + 32 , 12 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> <nl> public class SimplifyBooleanReturnCheckTest <nl> extends BaseCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " coding " + File . separator + filename ) ; <nl> + } <nl> + <nl> @ Test <nl> public void testIt ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputSimplifyBoolean . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputSimplifyBoolean . java <nl> deleted file mode 100644 <nl> index 03b263d . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputSimplifyBoolean . java <nl> + + + / dev / null <nl> @ @ - 1 , 88 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2001 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - / * * <nl> - Contains boolean logic that can be simplified . <nl> - <nl> - @ author lkuehne <nl> - * / <nl> - public class InputSimplifyBoolean <nl> - { <nl> - <nl> - public static boolean isOddMillis ( ) <nl> - { <nl> - boolean even = System . currentTimeMillis ( ) % 2 = = 0 ; <nl> - <nl> - / / can be simplified to " if ( even ) " <nl> - if ( even = = true ) { <nl> - return false ; <nl> - } <nl> - else { <nl> - return true ; <nl> - } <nl> - / / return can be simplified to " return ! even " <nl> - } <nl> - <nl> - public static boolean isOddMillis2 ( ) <nl> - { <nl> - boolean even = System . currentTimeMillis ( ) % 2 = = 0 ; <nl> - / / can be simplified to " return ! even " <nl> - if ( ! even ) <nl> - return true ; <nl> - else <nl> - return false ; <nl> - } <nl> - <nl> - public static boolean giveMeTrue ( ) <nl> - { <nl> - boolean tt = isOddMillis ( ) | | true ; <nl> - boolean ff = isOddMillis ( ) & & false ; <nl> - return ! false | | ( true ! = false ) ; <nl> - } <nl> - <nl> - public void tryToProvokeNPE ( ) <nl> - { <nl> - if ( true ) { <nl> - } <nl> - else { <nl> - } <nl> - <nl> - if ( true ) { <nl> - return ; <nl> - } <nl> - else { <nl> - return ; <nl> - } <nl> - } <nl> - <nl> - public boolean ifNoElse ( ) <nl> - { <nl> - if ( isOddMillis ( ) ) { <nl> - return true ; <nl> - } <nl> - return false ; <nl> - } <nl> - <nl> - boolean a ( ) { <nl> - boolean asd = false ; <nl> - boolean dasa = true ; <nl> - <nl> - if ( asd ) { <nl> - return true ; <nl> - } else { <nl> - return dasa ; <nl> - } <nl> - } <nl> - <nl> - boolean b ( ) { <nl> - boolean asd = false ; <nl> - <nl> - if ( asd ) ; <nl> - else ; <nl> - <nl> - return true ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputSimplifyBoolean . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputSimplifyBoolean . java <nl> new file mode 100644 <nl> index 0000000 . . 36d3b81 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputSimplifyBoolean . java <nl> @ @ - 0 , 0 + 1 , 88 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> + <nl> + / * * <nl> + Contains boolean logic that can be simplified . <nl> + <nl> + @ author lkuehne <nl> + * / <nl> + public class InputSimplifyBoolean <nl> + { <nl> + <nl> + public static boolean isOddMillis ( ) <nl> + { <nl> + boolean even = System . currentTimeMillis ( ) % 2 = = 0 ; <nl> + <nl> + / / can be simplified to " if ( even ) " <nl> + if ( even = = true ) { <nl> + return false ; <nl> + } <nl> + else { <nl> + return true ; <nl> + } <nl> + / / return can be simplified to " return ! even " <nl> + } <nl> + <nl> + public static boolean isOddMillis2 ( ) <nl> + { <nl> + boolean even = System . currentTimeMillis ( ) % 2 = = 0 ; <nl> + / / can be simplified to " return ! even " <nl> + if ( ! even ) <nl> + return true ; <nl> + else <nl> + return false ; <nl> + } <nl> + <nl> + public static boolean giveMeTrue ( ) <nl> + { <nl> + boolean tt = isOddMillis ( ) | | true ; <nl> + boolean ff = isOddMillis ( ) & & false ; <nl> + return ! false | | ( true ! = false ) ; <nl> + } <nl> + <nl> + public void tryToProvokeNPE ( ) <nl> + { <nl> + if ( true ) { <nl> + } <nl> + else { <nl> + } <nl> + <nl> + if ( true ) { <nl> + return ; <nl> + } <nl> + else { <nl> + return ; <nl> + } <nl> + } <nl> + <nl> + public boolean ifNoElse ( ) <nl> + { <nl> + if ( isOddMillis ( ) ) { <nl> + return true ; <nl> + } <nl> + return false ; <nl> + } <nl> + <nl> + boolean a ( ) { <nl> + boolean asd = false ; <nl> + boolean dasa = true ; <nl> + <nl> + if ( asd ) { <nl> + return true ; <nl> + } else { <nl> + return dasa ; <nl> + } <nl> + } <nl> + <nl> + boolean b ( ) { <nl> + boolean asd = false ; <nl> + <nl> + if ( asd ) ; <nl> + else ; <nl> + <nl> + return true ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 9cb78b7 . . 38ce1f8 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 186 , 6 + 186 , 14 @ @ <nl> < ! - - TEST TARGETS - - > <nl> < ! - - - - > <nl> <nl> + < ! - - Run the GUI - - > <nl> + < target name = " run . gui " depends = " compile . checkstyle " <nl> + description = " Run the GUI for displaying a tree " > <nl> + < java classname = " com . puppycrawl . tools . checkstyle . gui . Main " <nl> + fork = " yes " classpathref = " run . classpath " > <nl> + < / java > <nl> + < / target > <nl> + <nl> < ! - - display a specified file in a UI frame - - > <nl> < target name = " run . treeviewer " depends = " compile . checkstyle " <nl> description = " Display a specified file in GUI tree " > <nl> @ @ - 252 , 7 + 260 , 7 @ @ <nl> < checkstyle properties = " docs / checkstyle . rules " > <nl> < fileset dir = " src / checkstyle " <nl> includes = " * * / * . java " <nl> - excludes = " * * / Generated * . java , * * / Java * . java " / > <nl> + excludes = " * * / Generated * . java , * * / Java * . java , * * / gui / * " / > <nl> < formatter type = " plain " / > <nl> < formatter type = " xml " toFile = " target / cs _ errors . xml " / > <nl> < classpath refid = " run . classpath " / >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheckTest . java 
 index c1fc4cb . . 047a3a6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheckTest . java 
 @ @ - 21 , 6 + 21 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . coding . SimplifyBooleanExpressionCheck . MSG _ KEY ; 
 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 
 @ @ - 29 , 6 + 32 , 12 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 
 public class SimplifyBooleanExpressionCheckTest 
 extends BaseCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " coding " + File . separator + filename ) ; 
 + } 
 + 
 @ Test 
 public void testIt ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheckTest . java 
 index 7fbb5cf . . d9cc174 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheckTest . java 
 @ @ - 21 , 6 + 21 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . coding . SimplifyBooleanReturnCheck . MSG _ KEY ; 
 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 
 @ @ - 29 , 6 + 32 , 12 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 
 public class SimplifyBooleanReturnCheckTest 
 extends BaseCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " coding " + File . separator + filename ) ; 
 + } 
 + 
 @ Test 
 public void testIt ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / InputSimplifyBoolean . java b / src / test / resources / com / puppycrawl / tools / checkstyle / InputSimplifyBoolean . java 
 deleted file mode 100644 
 index 03b263d . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / InputSimplifyBoolean . java 
 + + + / dev / null 
 @ @ - 1 , 88 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2001 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - / * * 
 - Contains boolean logic that can be simplified . 
 - 
 - @ author lkuehne 
 - * / 
 - public class InputSimplifyBoolean 
 - { 
 - 
 - public static boolean isOddMillis ( ) 
 - { 
 - boolean even = System . currentTimeMillis ( ) % 2 = = 0 ; 
 - 
 - / / can be simplified to " if ( even ) " 
 - if ( even = = true ) { 
 - return false ; 
 - } 
 - else { 
 - return true ; 
 - } 
 - / / return can be simplified to " return ! even " 
 - } 
 - 
 - public static boolean isOddMillis2 ( ) 
 - { 
 - boolean even = System . currentTimeMillis ( ) % 2 = = 0 ; 
 - / / can be simplified to " return ! even " 
 - if ( ! even ) 
 - return true ; 
 - else 
 - return false ; 
 - } 
 - 
 - public static boolean giveMeTrue ( ) 
 - { 
 - boolean tt = isOddMillis ( ) | | true ; 
 - boolean ff = isOddMillis ( ) & & false ; 
 - return ! false | | ( true ! = false ) ; 
 - } 
 - 
 - public void tryToProvokeNPE ( ) 
 - { 
 - if ( true ) { 
 - } 
 - else { 
 - } 
 - 
 - if ( true ) { 
 - return ; 
 - } 
 - else { 
 - return ; 
 - } 
 - } 
 - 
 - public boolean ifNoElse ( ) 
 - { 
 - if ( isOddMillis ( ) ) { 
 - return true ; 
 - } 
 - return false ; 
 - } 
 - 
 - boolean a ( ) { 
 - boolean asd = false ; 
 - boolean dasa = true ; 
 - 
 - if ( asd ) { 
 - return true ; 
 - } else { 
 - return dasa ; 
 - } 
 - } 
 - 
 - boolean b ( ) { 
 - boolean asd = false ; 
 - 
 - if ( asd ) ; 
 - else ; 
 - 
 - return true ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputSimplifyBoolean . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputSimplifyBoolean . java 
 new file mode 100644 
 index 0000000 . . 36d3b81 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputSimplifyBoolean . java 
 @ @ - 0 , 0 + 1 , 88 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . coding ; 
 + 
 + / * * 
 + Contains boolean logic that can be simplified . 
 + 
 + @ author lkuehne 
 + * / 
 + public class InputSimplifyBoolean 
 + { 
 + 
 + public static boolean isOddMillis ( ) 
 + { 
 + boolean even = System . currentTimeMillis ( ) % 2 = = 0 ; 
 + 
 + / / can be simplified to " if ( even ) " 
 + if ( even = = true ) { 
 + return false ; 
 + } 
 + else { 
 + return true ; 
 + } 
 + / / return can be simplified to " return ! even " 
 + } 
 + 
 + public static boolean isOddMillis2 ( ) 
 + { 
 + boolean even = System . currentTimeMillis ( ) % 2 = = 0 ; 
 + / / can be simplified to " return ! even " 
 + if ( ! even ) 
 + return true ; 
 + else 
 + return false ; 
 + } 
 + 
 + public static boolean giveMeTrue ( ) 
 + { 
 + boolean tt = isOddMillis ( ) | | true ; 
 + boolean ff = isOddMillis ( ) & & false ; 
 + return ! false | | ( true ! = false ) ; 
 + } 
 + 
 + public void tryToProvokeNPE ( ) 
 + { 
 + if ( true ) { 
 + } 
 + else { 
 + } 
 + 
 + if ( true ) { 
 + return ; 
 + } 
 + else { 
 + return ; 
 + } 
 + } 
 + 
 + public boolean ifNoElse ( ) 
 + { 
 + if ( isOddMillis ( ) ) { 
 + return true ; 
 + } 
 + return false ; 
 + } 
 + 
 + boolean a ( ) { 
 + boolean asd = false ; 
 + boolean dasa = true ; 
 + 
 + if ( asd ) { 
 + return true ; 
 + } else { 
 + return dasa ; 
 + } 
 + } 
 + 
 + boolean b ( ) { 
 + boolean asd = false ; 
 + 
 + if ( asd ) ; 
 + else ; 
 + 
 + return true ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 9cb78b7 . . 38ce1f8 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 186 , 6 + 186 , 14 @ @ 
 < ! - - TEST TARGETS - - > 
 < ! - - - - > 
 
 + < ! - - Run the GUI - - > 
 + < target name = " run . gui " depends = " compile . checkstyle " 
 + description = " Run the GUI for displaying a tree " > 
 + < java classname = " com . puppycrawl . tools . checkstyle . gui . Main " 
 + fork = " yes " classpathref = " run . classpath " > 
 + < / java > 
 + < / target > 
 + 
 < ! - - display a specified file in a UI frame - - > 
 < target name = " run . treeviewer " depends = " compile . checkstyle " 
 description = " Display a specified file in GUI tree " > 
 @ @ - 252 , 7 + 260 , 7 @ @ 
 < checkstyle properties = " docs / checkstyle . rules " > 
 < fileset dir = " src / checkstyle " 
 includes = " * * / * . java " 
 - excludes = " * * / Generated * . java , * * / Java * . java " / > 
 + excludes = " * * / Generated * . java , * * / Java * . java , * * / gui / * " / > 
 < formatter type = " plain " / > 
 < formatter type = " xml " toFile = " target / cs _ errors . xml " / > 
 < classpath refid = " run . classpath " / >
