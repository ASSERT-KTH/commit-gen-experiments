BLEU SCORE: 0.1525487608028145

TEST MSG: Issue # 4157 : added support for varargs
GENERATED MSG: Issue # 3718 : Add varargs support for NoWhitespaceBefore

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> index fa434c0 . . 6eb7329 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> @ @ - 307 , 6 + 307 , 7 @ @ public class WhitespaceAroundCheck extends AbstractCheck { <nl> TokenTypes . WILDCARD _ TYPE , <nl> TokenTypes . GENERIC _ START , <nl> TokenTypes . GENERIC _ END , <nl> + TokenTypes . ELLIPSIS , <nl> } ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java <nl> index 6610952 . . 9be28bd 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java <nl> @ @ - 323 , 6 + 323 , 7 @ @ public class WhitespaceAroundCheckTest <nl> TokenTypes . WILDCARD _ TYPE , <nl> TokenTypes . GENERIC _ START , <nl> TokenTypes . GENERIC _ END , <nl> + TokenTypes . ELLIPSIS , <nl> } ; <nl> assertArrayEquals ( " Default acceptable tokens are invalid " , expected , actual ) ; <nl> } <nl> @ @ - 414 , 4 + 415 , 20 @ @ public class WhitespaceAroundCheckTest <nl> verify ( checkConfig , getPath ( " InputWhitespaceAroundCatch . java " ) , <nl> expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testWhitespaceAroundVarargs ( ) throws Exception { <nl> + checkConfig . addAttribute ( " tokens " , " ELLIPSIS " ) ; <nl> + final String [ ] expected = { <nl> + " 9 : 36 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " . . . " ) , <nl> + " 10 : 40 : " + getCheckMessage ( MSG _ WS _ NOT _ FOLLOWED , " . . . " ) , <nl> + " 11 : 36 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " . . . " ) , <nl> + " 11 : 39 : " + getCheckMessage ( MSG _ WS _ NOT _ FOLLOWED , " . . . " ) , <nl> + " 13 : 28 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " . . . " ) , <nl> + " 13 : 31 : " + getCheckMessage ( MSG _ WS _ NOT _ FOLLOWED , " . . . " ) , <nl> + " 14 : 39 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " . . . " ) , <nl> + " 14 : 42 : " + getCheckMessage ( MSG _ WS _ NOT _ FOLLOWED , " . . . " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputWhitespaceAroundVarargs . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> index db55354 . . b769f9c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> @ @ - 158 , 6 + 158 , 7 @ @ public class AllChecksTest extends AbstractModuleTestSupport { <nl> CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " WhitespaceAround " , Stream . of ( <nl> / / we prefer no spaces on one side or both for these tokens <nl> " ARRAY _ INIT " , <nl> + " ELLIPSIS " , <nl> / / these are covered by GenericWhitespaceCheck <nl> " WILDCARD _ TYPE " , " GENERIC _ END " , " GENERIC _ START " ) . collect ( Collectors . toSet ( ) ) ) ; <nl> CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " RightCurly " , Stream . of ( <nl> @ @ - 209 , 6 + 210 , 8 @ @ public class AllChecksTest extends AbstractModuleTestSupport { <nl> GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " WhitespaceAround " , Stream . of ( <nl> / / allowed via ' 4 . 8 . 3 Arrays ' <nl> " ARRAY _ INIT " , <nl> + / / ' . . . ' is almost same as ' [ ] ' by meaning <nl> + " ELLIPSIS " , <nl> / / google prefers no spaces on one side or both for these tokens <nl> " GENERIC _ START " , " GENERIC _ END " , " WILDCARD _ TYPE " ) <nl> . collect ( Collectors . toSet ( ) ) ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / whitespacearound / InputWhitespaceAroundVarargs . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / whitespacearound / InputWhitespaceAroundVarargs . java <nl> new file mode 100644 <nl> index 0000000 . . 1334dfd <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / whitespacearound / InputWhitespaceAroundVarargs . java <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2017 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . whitespacearound ; <nl> + <nl> + class InputWhitespaceAroundVarargs <nl> + { <nl> + public static void main0 ( String . . . args ) { } <nl> + public static void main1 ( String . . . args ) { } <nl> + public static void main2 ( String . . . args ) { } <nl> + public static void main3 ( String . . . args ) { } <nl> + public void varargs ( int . . . arr ) { } <nl> + public void doubleValue ( int a , int . . . b ) { } <nl> + <nl> + } <nl> diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml <nl> index f8a749c . . c40160f 100644 <nl> - - - a / src / xdocs / config _ whitespace . xml <nl> + + + b / src / xdocs / config _ whitespace . xml <nl> @ @ - 2289 , 7 + 2289 , 8 @ @ try { <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # TYPE _ EXTENSION _ AND " > TYPE _ EXTENSION _ AND < / a > , <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # WILDCARD _ TYPE " > WILDCARD _ TYPE < / a > , <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # GENERIC _ START " > GENERIC _ START < / a > , <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # GENERIC _ END " > GENERIC _ END < / a > . <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # GENERIC _ END " > GENERIC _ END < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ELLIPSIS " > ELLIPSIS < / a > . <nl> < / td > <nl> < td > <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ASSIGN " > ASSIGN < / a > ,
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java <nl> index 51ab46a . . 6ac6c65 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java <nl> @ @ - 41 , 6 + 41 , 9 @ @ public final class DetailNodeTreeStringPrinter { <nl> / * * OS specific line separator . * / <nl> private static final String LINE _ SEPARATOR = System . getProperty ( " line . separator " ) ; <nl> <nl> + / * * Symbols with which javadoc starts . * / <nl> + private static final String JAVADOC _ START = " / * * " ; <nl> + <nl> / * * Prevent instances . * / <nl> private DetailNodeTreeStringPrinter ( ) { <nl> / / no code <nl> @ @ - 182 , 13 + 185 , 15 @ @ public final class DetailNodeTreeStringPrinter { <nl> blockCommentBegin . setType ( TokenTypes . BLOCK _ COMMENT _ BEGIN ) ; <nl> blockCommentBegin . setText ( " / * " ) ; <nl> blockCommentBegin . setLineNo ( 0 ) ; <nl> - blockCommentBegin . setColumnNo ( 0 ) ; <nl> + blockCommentBegin . setColumnNo ( - JAVADOC _ START . length ( ) ) ; <nl> <nl> final DetailAST commentContent = new DetailAST ( ) ; <nl> commentContent . setType ( TokenTypes . COMMENT _ CONTENT ) ; <nl> commentContent . setText ( " * " + content ) ; <nl> commentContent . setLineNo ( 0 ) ; <nl> - commentContent . setColumnNo ( 2 ) ; <nl> + / / javadoc should starts at 0 column , so COMMENT _ CONTENT node <nl> + / / that contains javadoc identificator has - 1 column <nl> + commentContent . setColumnNo ( - 1 ) ; <nl> <nl> final DetailAST blockCommentEnd = new DetailAST ( ) ; <nl> blockCommentEnd . setType ( TokenTypes . BLOCK _ COMMENT _ END ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / JavadocDetailNodeParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / JavadocDetailNodeParser . java <nl> index 70adc5f . . 995ad5f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / JavadocDetailNodeParser . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / JavadocDetailNodeParser . java <nl> @ @ - 78 , 6 + 78 , 9 @ @ public class JavadocDetailNodeParser { <nl> public static final String MSG _ KEY _ UNRECOGNIZED _ ANTLR _ ERROR = <nl> " javadoc . unrecognized . antlr . error " ; <nl> <nl> + / * * Symbols with which javadoc starts . * / <nl> + private static final String JAVADOC _ START = " / * * " ; <nl> + <nl> / * * <nl> * Line number of the Block comment AST that is being parsed . <nl> * / <nl> @ @ - 96 , 6 + 99 , 7 @ @ public class JavadocDetailNodeParser { <nl> * / <nl> public ParseStatus parseJavadocAsDetailNode ( DetailAST javadocCommentAst ) { <nl> blockCommentLineNumber = javadocCommentAst . getLineNo ( ) ; <nl> + <nl> final String javadocComment = JavadocUtils . getJavadocCommentContent ( javadocCommentAst ) ; <nl> <nl> / / Use a new error listener each time to be able to use <nl> @ @ - 114 , 6 + 118 , 10 @ @ public class JavadocDetailNodeParser { <nl> final ParseTree parseTree = parseJavadocAsParseTree ( javadocComment ) ; <nl> <nl> final DetailNode tree = convertParseTreeToDetailNode ( parseTree ) ; <nl> + / / adjust first line to indent of / * * <nl> + adjustFirstLineToJavadocIndent ( tree , <nl> + javadocCommentAst . getColumnNo ( ) <nl> + + JAVADOC _ START . length ( ) ) ; <nl> result . setTree ( tree ) ; <nl> } <nl> catch ( ParseCancellationException ex ) { <nl> @ @ - 304 , 6 + 312 , 21 @ @ public class JavadocDetailNodeParser { <nl> } <nl> <nl> / * * <nl> + * Adjust first line nodes to javadoc indent . <nl> + * @ param tree DetailNode tree root <nl> + * @ param javadocColumnNumber javadoc indent <nl> + * / <nl> + private void adjustFirstLineToJavadocIndent ( DetailNode tree , int javadocColumnNumber ) { <nl> + if ( tree . getLineNumber ( ) = = blockCommentLineNumber ) { <nl> + ( ( JavadocNodeImpl ) tree ) . setColumnNumber ( tree . getColumnNumber ( ) + javadocColumnNumber ) ; <nl> + final DetailNode [ ] children = tree . getChildren ( ) ; <nl> + for ( DetailNode child : children ) { <nl> + adjustFirstLineToJavadocIndent ( child , javadocColumnNumber ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> * Gets line number from ParseTree node . <nl> * @ param tree <nl> * ParseTree node <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPModelTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPModelTest . java <nl> index 927c36a . . 4cc550a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPModelTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPModelTest . java <nl> @ @ - 101 , 7 + 101 , 7 @ @ public class CodeSelectorPModelTest { <nl> . getChild ( tree . getFirstChild ( ) . getNextSibling ( ) . getFirstChild ( ) , 0 ) ; <nl> final CodeSelectorPModel selector = new CodeSelectorPModel ( javadoc , linesToPosition ) ; <nl> selector . findSelectionPositions ( ) ; <nl> - Assert . assertEquals ( 0 , selector . getSelectionStart ( ) ) ; <nl> + Assert . assertEquals ( 3 , selector . getSelectionStart ( ) ) ; <nl> Assert . assertEquals ( 25 , selector . getSelectionEnd ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePModelTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePModelTest . java <nl> index 0e9434b . . a6dd247 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePModelTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePModelTest . java <nl> @ @ - 259 , 7 + 259 , 7 @ @ public class ParseTreeTablePModelTest { <nl> Assert . assertNull ( treeModel ) ; <nl> Assert . assertEquals ( " JAVADOC " , type ) ; <nl> Assert . assertEquals ( 1 , line ) ; <nl> - Assert . assertEquals ( 0 , column ) ; <nl> + Assert . assertEquals ( 3 , column ) ; <nl> Assert . assertEquals ( expectedText , text ) ; <nl> <nl> try { <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt <nl> index 0da4646 . . 4e13da9 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt <nl> @ @ - 2 , 8 + 2 , 8 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] <nl> | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] <nl> | - - BLOCK _ COMMENT _ BEGIN - > / * [ 1 : 0 ] <nl> | | - - COMMENT _ CONTENT - > * \ n * class javadoc \ n [ 1 : 2 ] <nl> - | | ` - - JAVADOC - > \ n * class javadoc \ n < EOF > [ 1 : 0 ] <nl> - | | | - - NEWLINE - > \ n [ 1 : 0 ] <nl> + | | ` - - JAVADOC - > \ n * class javadoc \ n < EOF > [ 1 : 3 ] <nl> + | | | - - NEWLINE - > \ n [ 1 : 3 ] <nl> | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] <nl> | | | - - TEXT - > class javadoc [ 2 : 1 ] <nl> | | | - - NEWLINE - > \ n [ 2 : 15 ] <nl> @ @ - 18 , 9 + 18 , 9 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] <nl> | | - - TYPE - > TYPE [ 7 : 4 ] <nl> | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 6 : 4 ] <nl> | | | | - - COMMENT _ CONTENT - > * attribute javadoc [ 6 : 6 ] <nl> - | | | | ` - - JAVADOC - > attribute javadoc < EOF > [ 6 : 0 ] <nl> - | | | | | - - TEXT - > attribute javadoc [ 6 : 0 ] <nl> - | | | | ` - - EOF - > < EOF > [ 6 : 18 ] <nl> + | | | | ` - - JAVADOC - > attribute javadoc < EOF > [ 6 : 7 ] <nl> + | | | | | - - TEXT - > attribute javadoc [ 6 : 7 ] <nl> + | | | | ` - - EOF - > < EOF > [ 6 : 25 ] <nl> | | | ` - - BLOCK _ COMMENT _ END - > * / [ 6 : 24 ] <nl> | | ` - - LITERAL _ INT - > int [ 7 : 4 ] <nl> | | - - IDENT - > attribute [ 7 : 8 ] <nl> @ @ - 29 , 8 + 29 , 8 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] <nl> | | - - MODIFIERS - > MODIFIERS [ 12 : 4 ] <nl> | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 9 : 4 ] <nl> | | | | - - COMMENT _ CONTENT - > * \ n * method javadoc \ n [ 9 : 6 ] <nl> - | | | | ` - - JAVADOC - > \ n * method javadoc \ n < EOF > [ 9 : 0 ] <nl> - | | | | | - - NEWLINE - > \ n [ 9 : 0 ] <nl> + | | | | ` - - JAVADOC - > \ n * method javadoc \ n < EOF > [ 9 : 7 ] <nl> + | | | | | - - NEWLINE - > \ n [ 9 : 7 ] <nl> | | | | | - - LEADING _ ASTERISK - > * [ 10 : 0 ] <nl> | | | | | - - TEXT - > method javadoc [ 10 : 5 ] <nl> | | | | | - - NEWLINE - > \ n [ 10 : 20 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt <nl> index 2691045 . . 93be46d 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt <nl> @ @ - 2 , 8 + 2 , 8 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] <nl> | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] <nl> | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 1 : 0 ] <nl> | | | - - COMMENT _ CONTENT - > * \ n * some text \ n [ 1 : 2 ] <nl> - | | | ` - - JAVADOC - > \ n * some text \ n < EOF > [ 1 : 0 ] <nl> - | | | | - - NEWLINE - > \ n [ 1 : 0 ] <nl> + | | | ` - - JAVADOC - > \ n * some text \ n < EOF > [ 1 : 3 ] <nl> + | | | | - - NEWLINE - > \ n [ 1 : 3 ] <nl> | | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] <nl> | | | | - - TEXT - > some text [ 2 : 1 ] <nl> | | | | - - NEWLINE - > \ n [ 2 : 11 ] <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt <nl> index 22f7b93 . . 63d3eb4 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt <nl> @ @ - 12 , 9 + 12 , 9 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] <nl> | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] <nl> | - - BLOCK _ COMMENT _ BEGIN - > / * [ 3 : 0 ] <nl> | | - - COMMENT _ CONTENT - > * javadoc [ 3 : 2 ] <nl> - | | ` - - JAVADOC - > javadoc < EOF > [ 3 : 0 ] <nl> - | | | - - TEXT - > javadoc [ 3 : 0 ] <nl> - | | ` - - EOF - > < EOF > [ 3 : 7 ] <nl> + | | ` - - JAVADOC - > javadoc < EOF > [ 3 : 3 ] <nl> + | | | - - TEXT - > javadoc [ 3 : 3 ] <nl> + | | ` - - EOF - > < EOF > [ 3 : 10 ] <nl> | ` - - BLOCK _ COMMENT _ END - > * / [ 3 : 9 ] <nl> | - - LITERAL _ CLASS - > class [ 4 : 0 ] <nl> | - - IDENT - > InputAstTreeStringPrinterJavadoc [ 4 : 6 ]

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 index fa434c0 . . 6eb7329 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 @ @ - 307 , 6 + 307 , 7 @ @ public class WhitespaceAroundCheck extends AbstractCheck { 
 TokenTypes . WILDCARD _ TYPE , 
 TokenTypes . GENERIC _ START , 
 TokenTypes . GENERIC _ END , 
 + TokenTypes . ELLIPSIS , 
 } ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java 
 index 6610952 . . 9be28bd 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java 
 @ @ - 323 , 6 + 323 , 7 @ @ public class WhitespaceAroundCheckTest 
 TokenTypes . WILDCARD _ TYPE , 
 TokenTypes . GENERIC _ START , 
 TokenTypes . GENERIC _ END , 
 + TokenTypes . ELLIPSIS , 
 } ; 
 assertArrayEquals ( " Default acceptable tokens are invalid " , expected , actual ) ; 
 } 
 @ @ - 414 , 4 + 415 , 20 @ @ public class WhitespaceAroundCheckTest 
 verify ( checkConfig , getPath ( " InputWhitespaceAroundCatch . java " ) , 
 expected ) ; 
 } 
 + 
 + @ Test 
 + public void testWhitespaceAroundVarargs ( ) throws Exception { 
 + checkConfig . addAttribute ( " tokens " , " ELLIPSIS " ) ; 
 + final String [ ] expected = { 
 + " 9 : 36 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " . . . " ) , 
 + " 10 : 40 : " + getCheckMessage ( MSG _ WS _ NOT _ FOLLOWED , " . . . " ) , 
 + " 11 : 36 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " . . . " ) , 
 + " 11 : 39 : " + getCheckMessage ( MSG _ WS _ NOT _ FOLLOWED , " . . . " ) , 
 + " 13 : 28 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " . . . " ) , 
 + " 13 : 31 : " + getCheckMessage ( MSG _ WS _ NOT _ FOLLOWED , " . . . " ) , 
 + " 14 : 39 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " . . . " ) , 
 + " 14 : 42 : " + getCheckMessage ( MSG _ WS _ NOT _ FOLLOWED , " . . . " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputWhitespaceAroundVarargs . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 index db55354 . . b769f9c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 @ @ - 158 , 6 + 158 , 7 @ @ public class AllChecksTest extends AbstractModuleTestSupport { 
 CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " WhitespaceAround " , Stream . of ( 
 / / we prefer no spaces on one side or both for these tokens 
 " ARRAY _ INIT " , 
 + " ELLIPSIS " , 
 / / these are covered by GenericWhitespaceCheck 
 " WILDCARD _ TYPE " , " GENERIC _ END " , " GENERIC _ START " ) . collect ( Collectors . toSet ( ) ) ) ; 
 CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " RightCurly " , Stream . of ( 
 @ @ - 209 , 6 + 210 , 8 @ @ public class AllChecksTest extends AbstractModuleTestSupport { 
 GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " WhitespaceAround " , Stream . of ( 
 / / allowed via ' 4 . 8 . 3 Arrays ' 
 " ARRAY _ INIT " , 
 + / / ' . . . ' is almost same as ' [ ] ' by meaning 
 + " ELLIPSIS " , 
 / / google prefers no spaces on one side or both for these tokens 
 " GENERIC _ START " , " GENERIC _ END " , " WILDCARD _ TYPE " ) 
 . collect ( Collectors . toSet ( ) ) ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / whitespacearound / InputWhitespaceAroundVarargs . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / whitespacearound / InputWhitespaceAroundVarargs . java 
 new file mode 100644 
 index 0000000 . . 1334dfd 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / whitespacearound / InputWhitespaceAroundVarargs . java 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2017 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . whitespacearound ; 
 + 
 + class InputWhitespaceAroundVarargs 
 + { 
 + public static void main0 ( String . . . args ) { } 
 + public static void main1 ( String . . . args ) { } 
 + public static void main2 ( String . . . args ) { } 
 + public static void main3 ( String . . . args ) { } 
 + public void varargs ( int . . . arr ) { } 
 + public void doubleValue ( int a , int . . . b ) { } 
 + 
 + } 
 diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml 
 index f8a749c . . c40160f 100644 
 - - - a / src / xdocs / config _ whitespace . xml 
 + + + b / src / xdocs / config _ whitespace . xml 
 @ @ - 2289 , 7 + 2289 , 8 @ @ try { 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # TYPE _ EXTENSION _ AND " > TYPE _ EXTENSION _ AND < / a > , 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # WILDCARD _ TYPE " > WILDCARD _ TYPE < / a > , 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # GENERIC _ START " > GENERIC _ START < / a > , 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # GENERIC _ END " > GENERIC _ END < / a > . 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # GENERIC _ END " > GENERIC _ END < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ELLIPSIS " > ELLIPSIS < / a > . 
 < / td > 
 < td > 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ASSIGN " > ASSIGN < / a > ,

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java 
 index 51ab46a . . 6ac6c65 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java 
 @ @ - 41 , 6 + 41 , 9 @ @ public final class DetailNodeTreeStringPrinter { 
 / * * OS specific line separator . * / 
 private static final String LINE _ SEPARATOR = System . getProperty ( " line . separator " ) ; 
 
 + / * * Symbols with which javadoc starts . * / 
 + private static final String JAVADOC _ START = " / * * " ; 
 + 
 / * * Prevent instances . * / 
 private DetailNodeTreeStringPrinter ( ) { 
 / / no code 
 @ @ - 182 , 13 + 185 , 15 @ @ public final class DetailNodeTreeStringPrinter { 
 blockCommentBegin . setType ( TokenTypes . BLOCK _ COMMENT _ BEGIN ) ; 
 blockCommentBegin . setText ( " / * " ) ; 
 blockCommentBegin . setLineNo ( 0 ) ; 
 - blockCommentBegin . setColumnNo ( 0 ) ; 
 + blockCommentBegin . setColumnNo ( - JAVADOC _ START . length ( ) ) ; 
 
 final DetailAST commentContent = new DetailAST ( ) ; 
 commentContent . setType ( TokenTypes . COMMENT _ CONTENT ) ; 
 commentContent . setText ( " * " + content ) ; 
 commentContent . setLineNo ( 0 ) ; 
 - commentContent . setColumnNo ( 2 ) ; 
 + / / javadoc should starts at 0 column , so COMMENT _ CONTENT node 
 + / / that contains javadoc identificator has - 1 column 
 + commentContent . setColumnNo ( - 1 ) ; 
 
 final DetailAST blockCommentEnd = new DetailAST ( ) ; 
 blockCommentEnd . setType ( TokenTypes . BLOCK _ COMMENT _ END ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / JavadocDetailNodeParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / JavadocDetailNodeParser . java 
 index 70adc5f . . 995ad5f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / JavadocDetailNodeParser . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / JavadocDetailNodeParser . java 
 @ @ - 78 , 6 + 78 , 9 @ @ public class JavadocDetailNodeParser { 
 public static final String MSG _ KEY _ UNRECOGNIZED _ ANTLR _ ERROR = 
 " javadoc . unrecognized . antlr . error " ; 
 
 + / * * Symbols with which javadoc starts . * / 
 + private static final String JAVADOC _ START = " / * * " ; 
 + 
 / * * 
 * Line number of the Block comment AST that is being parsed . 
 * / 
 @ @ - 96 , 6 + 99 , 7 @ @ public class JavadocDetailNodeParser { 
 * / 
 public ParseStatus parseJavadocAsDetailNode ( DetailAST javadocCommentAst ) { 
 blockCommentLineNumber = javadocCommentAst . getLineNo ( ) ; 
 + 
 final String javadocComment = JavadocUtils . getJavadocCommentContent ( javadocCommentAst ) ; 
 
 / / Use a new error listener each time to be able to use 
 @ @ - 114 , 6 + 118 , 10 @ @ public class JavadocDetailNodeParser { 
 final ParseTree parseTree = parseJavadocAsParseTree ( javadocComment ) ; 
 
 final DetailNode tree = convertParseTreeToDetailNode ( parseTree ) ; 
 + / / adjust first line to indent of / * * 
 + adjustFirstLineToJavadocIndent ( tree , 
 + javadocCommentAst . getColumnNo ( ) 
 + + JAVADOC _ START . length ( ) ) ; 
 result . setTree ( tree ) ; 
 } 
 catch ( ParseCancellationException ex ) { 
 @ @ - 304 , 6 + 312 , 21 @ @ public class JavadocDetailNodeParser { 
 } 
 
 / * * 
 + * Adjust first line nodes to javadoc indent . 
 + * @ param tree DetailNode tree root 
 + * @ param javadocColumnNumber javadoc indent 
 + * / 
 + private void adjustFirstLineToJavadocIndent ( DetailNode tree , int javadocColumnNumber ) { 
 + if ( tree . getLineNumber ( ) = = blockCommentLineNumber ) { 
 + ( ( JavadocNodeImpl ) tree ) . setColumnNumber ( tree . getColumnNumber ( ) + javadocColumnNumber ) ; 
 + final DetailNode [ ] children = tree . getChildren ( ) ; 
 + for ( DetailNode child : children ) { 
 + adjustFirstLineToJavadocIndent ( child , javadocColumnNumber ) ; 
 + } 
 + } 
 + } 
 + 
 + / * * 
 * Gets line number from ParseTree node . 
 * @ param tree 
 * ParseTree node 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPModelTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPModelTest . java 
 index 927c36a . . 4cc550a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPModelTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / gui / CodeSelectorPModelTest . java 
 @ @ - 101 , 7 + 101 , 7 @ @ public class CodeSelectorPModelTest { 
 . getChild ( tree . getFirstChild ( ) . getNextSibling ( ) . getFirstChild ( ) , 0 ) ; 
 final CodeSelectorPModel selector = new CodeSelectorPModel ( javadoc , linesToPosition ) ; 
 selector . findSelectionPositions ( ) ; 
 - Assert . assertEquals ( 0 , selector . getSelectionStart ( ) ) ; 
 + Assert . assertEquals ( 3 , selector . getSelectionStart ( ) ) ; 
 Assert . assertEquals ( 25 , selector . getSelectionEnd ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePModelTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePModelTest . java 
 index 0e9434b . . a6dd247 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePModelTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePModelTest . java 
 @ @ - 259 , 7 + 259 , 7 @ @ public class ParseTreeTablePModelTest { 
 Assert . assertNull ( treeModel ) ; 
 Assert . assertEquals ( " JAVADOC " , type ) ; 
 Assert . assertEquals ( 1 , line ) ; 
 - Assert . assertEquals ( 0 , column ) ; 
 + Assert . assertEquals ( 3 , column ) ; 
 Assert . assertEquals ( expectedText , text ) ; 
 
 try { 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt 
 index 0da4646 . . 4e13da9 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc . txt 
 @ @ - 2 , 8 + 2 , 8 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] 
 | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] 
 | - - BLOCK _ COMMENT _ BEGIN - > / * [ 1 : 0 ] 
 | | - - COMMENT _ CONTENT - > * \ n * class javadoc \ n [ 1 : 2 ] 
 - | | ` - - JAVADOC - > \ n * class javadoc \ n < EOF > [ 1 : 0 ] 
 - | | | - - NEWLINE - > \ n [ 1 : 0 ] 
 + | | ` - - JAVADOC - > \ n * class javadoc \ n < EOF > [ 1 : 3 ] 
 + | | | - - NEWLINE - > \ n [ 1 : 3 ] 
 | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] 
 | | | - - TEXT - > class javadoc [ 2 : 1 ] 
 | | | - - NEWLINE - > \ n [ 2 : 15 ] 
 @ @ - 18 , 9 + 18 , 9 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] 
 | | - - TYPE - > TYPE [ 7 : 4 ] 
 | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 6 : 4 ] 
 | | | | - - COMMENT _ CONTENT - > * attribute javadoc [ 6 : 6 ] 
 - | | | | ` - - JAVADOC - > attribute javadoc < EOF > [ 6 : 0 ] 
 - | | | | | - - TEXT - > attribute javadoc [ 6 : 0 ] 
 - | | | | ` - - EOF - > < EOF > [ 6 : 18 ] 
 + | | | | ` - - JAVADOC - > attribute javadoc < EOF > [ 6 : 7 ] 
 + | | | | | - - TEXT - > attribute javadoc [ 6 : 7 ] 
 + | | | | ` - - EOF - > < EOF > [ 6 : 25 ] 
 | | | ` - - BLOCK _ COMMENT _ END - > * / [ 6 : 24 ] 
 | | ` - - LITERAL _ INT - > int [ 7 : 4 ] 
 | | - - IDENT - > attribute [ 7 : 8 ] 
 @ @ - 29 , 8 + 29 , 8 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] 
 | | - - MODIFIERS - > MODIFIERS [ 12 : 4 ] 
 | | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 9 : 4 ] 
 | | | | - - COMMENT _ CONTENT - > * \ n * method javadoc \ n [ 9 : 6 ] 
 - | | | | ` - - JAVADOC - > \ n * method javadoc \ n < EOF > [ 9 : 0 ] 
 - | | | | | - - NEWLINE - > \ n [ 9 : 0 ] 
 + | | | | ` - - JAVADOC - > \ n * method javadoc \ n < EOF > [ 9 : 7 ] 
 + | | | | | - - NEWLINE - > \ n [ 9 : 7 ] 
 | | | | | - - LEADING _ ASTERISK - > * [ 10 : 0 ] 
 | | | | | - - TEXT - > method javadoc [ 10 : 5 ] 
 | | | | | - - NEWLINE - > \ n [ 10 : 20 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt 
 index 2691045 . . 93be46d 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavaAndJavadoc . txt 
 @ @ - 2 , 8 + 2 , 8 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] 
 | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] 
 | | - - BLOCK _ COMMENT _ BEGIN - > / * [ 1 : 0 ] 
 | | | - - COMMENT _ CONTENT - > * \ n * some text \ n [ 1 : 2 ] 
 - | | | ` - - JAVADOC - > \ n * some text \ n < EOF > [ 1 : 0 ] 
 - | | | | - - NEWLINE - > \ n [ 1 : 0 ] 
 + | | | ` - - JAVADOC - > \ n * some text \ n < EOF > [ 1 : 3 ] 
 + | | | | - - NEWLINE - > \ n [ 1 : 3 ] 
 | | | | - - LEADING _ ASTERISK - > * [ 2 : 0 ] 
 | | | | - - TEXT - > some text [ 2 : 1 ] 
 | | | | - - NEWLINE - > \ n [ 2 : 11 ] 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt 
 index 22f7b93 . . 63d3eb4 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / astprinter / expectedInputAstTreeStringPrinterJavadoc . txt 
 @ @ - 12 , 9 + 12 , 9 @ @ CLASS _ DEF - > CLASS _ DEF [ 4 : 0 ] 
 | - - MODIFIERS - > MODIFIERS [ 4 : 0 ] 
 | - - BLOCK _ COMMENT _ BEGIN - > / * [ 3 : 0 ] 
 | | - - COMMENT _ CONTENT - > * javadoc [ 3 : 2 ] 
 - | | ` - - JAVADOC - > javadoc < EOF > [ 3 : 0 ] 
 - | | | - - TEXT - > javadoc [ 3 : 0 ] 
 - | | ` - - EOF - > < EOF > [ 3 : 7 ] 
 + | | ` - - JAVADOC - > javadoc < EOF > [ 3 : 3 ] 
 + | | | - - TEXT - > javadoc [ 3 : 3 ] 
 + | | ` - - EOF - > < EOF > [ 3 : 10 ] 
 | ` - - BLOCK _ COMMENT _ END - > * / [ 3 : 9 ] 
 | - - LITERAL _ CLASS - > class [ 4 : 0 ] 
 | - - IDENT - > InputAstTreeStringPrinterJavadoc [ 4 : 6 ]
