BLEU SCORE: 0.02286956778061902

TEST MSG: Pull # 2495 : Performance - Optimization : Do not recompile Pattern for each file / line
GENERATED MSG: Coverage has been increased to 100 % in CommentSuppressor . Issue # 1010

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java <nl> index 8d03338 . . 33d56f9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java <nl> @ @ - 50 , 6 + 50 , 8 @ @ class DetectorOptions { <nl> private boolean ignoreCase ; <nl> / * * Used to determine whether to suppress a detected match . * / <nl> private MatchSuppressor suppressor = NeverSuppress . INSTANCE ; <nl> + / * * Pattern created from format . Lazily initialized . * / <nl> + private Pattern pattern ; <nl> <nl> / * * <nl> * Creates an instance . <nl> @ @ - 69 , 6 + 71 , 7 @ @ class DetectorOptions { <nl> * / <nl> public DetectorOptions setFormat ( String format ) { <nl> this . format = format ; <nl> + pattern = null ; <nl> return this ; <nl> } <nl> <nl> @ @ - 119 , 6 + 122 , 7 @ @ class DetectorOptions { <nl> * / <nl> public DetectorOptions setIgnoreCase ( boolean ignore ) { <nl> ignoreCase = ignore ; <nl> + pattern = null ; <nl> return this ; <nl> } <nl> <nl> @ @ - 175 , 11 + 179 , 15 @ @ class DetectorOptions { <nl> * @ return the pattern to use when matching . <nl> * / <nl> public Pattern getPattern ( ) { <nl> + if ( pattern ! = null ) { <nl> + return pattern ; <nl> + } <nl> int options = compileFlags ; <nl> <nl> if ( ignoreCase ) { <nl> options | = Pattern . CASE _ INSENSITIVE ; <nl> } <nl> - return Pattern . compile ( format , options ) ; <nl> + pattern = Pattern . compile ( format , options ) ; <nl> + return pattern ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> index af1eb07 . . 8dfd37a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> / * * <nl> * Entry point for starting the checkstyle GUI . <nl> * / <nl> - public class Main { <nl> + public final class Main { <nl> / * * <nl> * Main frame <nl> * /

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java 
 index 8d03338 . . 33d56f9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java 
 @ @ - 50 , 6 + 50 , 8 @ @ class DetectorOptions { 
 private boolean ignoreCase ; 
 / * * Used to determine whether to suppress a detected match . * / 
 private MatchSuppressor suppressor = NeverSuppress . INSTANCE ; 
 + / * * Pattern created from format . Lazily initialized . * / 
 + private Pattern pattern ; 
 
 / * * 
 * Creates an instance . 
 @ @ - 69 , 6 + 71 , 7 @ @ class DetectorOptions { 
 * / 
 public DetectorOptions setFormat ( String format ) { 
 this . format = format ; 
 + pattern = null ; 
 return this ; 
 } 
 
 @ @ - 119 , 6 + 122 , 7 @ @ class DetectorOptions { 
 * / 
 public DetectorOptions setIgnoreCase ( boolean ignore ) { 
 ignoreCase = ignore ; 
 + pattern = null ; 
 return this ; 
 } 
 
 @ @ - 175 , 11 + 179 , 15 @ @ class DetectorOptions { 
 * @ return the pattern to use when matching . 
 * / 
 public Pattern getPattern ( ) { 
 + if ( pattern ! = null ) { 
 + return pattern ; 
 + } 
 int options = compileFlags ; 
 
 if ( ignoreCase ) { 
 options | = Pattern . CASE _ INSENSITIVE ; 
 } 
 - return Pattern . compile ( format , options ) ; 
 + pattern = Pattern . compile ( format , options ) ; 
 + return pattern ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 index af1eb07 . . 8dfd37a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / Main . java 
 @ @ - 30 , 7 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 / * * 
 * Entry point for starting the checkstyle GUI . 
 * / 
 - public class Main { 
 + public final class Main { 
 / * * 
 * Main frame 
 * /
