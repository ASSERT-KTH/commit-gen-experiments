BLEU SCORE: 0.03431634827996379

TEST MSG: Issue # 2122 : Fix RedundantModifier at final methods in anonymous class
GENERATED MSG: Redundant Modifier Check fixed bug with warning on final variables in default methods issue # 364

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> index 87f20f6 . . 6468779 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> @ @ - 259 , 6 + 259 , 10 @ @ public class RedundantModifierCheck <nl> classModifiers . branchContains ( TokenTypes . FINAL ) ; <nl> break ; <nl> } <nl> + if ( parent . getType ( ) = = TokenTypes . LITERAL _ NEW ) { <nl> + checkFinal = true ; <nl> + break ; <nl> + } <nl> parent = parent . getParent ( ) ; <nl> } <nl> if ( checkFinal & & ! isAnnotatedWithSafeVarargs ( ast ) ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> index 3f08002 . . d11b8e5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> @ @ - 187 , 4 + 187 , 15 @ @ public class RedundantModifierCheckTest <nl> } ; <nl> verify ( checkConfig , getPath ( " InputRedundantStaticModifierInNestedEnum . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testFinalInAnonymousClass ( ) <nl> + throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( RedundantModifierCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 14 : 20 : " + getCheckMessage ( MSG _ KEY , " final " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputFinalInAnonymousClass . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputFinalInAnonymousClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputFinalInAnonymousClass . java <nl> new file mode 100644 <nl> index 0000000 . . a1678d8 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputFinalInAnonymousClass . java <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . modifier ; <nl> + <nl> + public class InputFinalInAnonymousClass { <nl> + public static abstract class Example { <nl> + public abstract void innerTest ( ) ; <nl> + <nl> + public final void test ( ) { <nl> + } <nl> + } <nl> + <nl> + public static void test ( ) { <nl> + new Example ( ) { <nl> + @ Override <nl> + public final void innerTest ( ) { / / violation <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier . java <nl> index ae84d8c . . fd3ae6c 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier . java <nl> @ @ - 137 , 3 + 137 , 10 @ @ class SafeVarargsUsage { <nl> @ SuppressWarnings ( " " ) <nl> private final void foo1 ( Object . . . obj ) { } <nl> } <nl> + <nl> + enum TestEnum { <nl> + ; <nl> + <nl> + public void method ( ) { <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / xdocs / config _ modifier . xml b / src / xdocs / config _ modifier . xml <nl> index 5a635ee . . 48d0df3 100644 <nl> - - - a / src / xdocs / config _ modifier . xml <nl> + + + b / src / xdocs / config _ modifier . xml <nl> @ @ - 111 , 7 + 111 , 7 @ @ <nl> < / p > <nl> < ol > <nl> < li > Interface and annotation definitions . < / li > <nl> - < li > Final modifier on methods of final classes . < / li > <nl> + < li > Final modifier on methods of final and anonymous classes . < / li > <nl> < li > <nl> Inner < code > interface < / code > declarations that are declared <nl> as < code > static < / code > .
NEAREST DIFF (one line): diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java <nl> index 7935ccc . . 927c7ab 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class BadDeprecatedAnnotation <nl> / * * <nl> * @ deprecated stuff <nl> * / <nl> - interface Foo { <nl> + interface Foo1 { <nl> <nl> / * * <nl> * @ deprecated stuff

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 index 87f20f6 . . 6468779 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 @ @ - 259 , 6 + 259 , 10 @ @ public class RedundantModifierCheck 
 classModifiers . branchContains ( TokenTypes . FINAL ) ; 
 break ; 
 } 
 + if ( parent . getType ( ) = = TokenTypes . LITERAL _ NEW ) { 
 + checkFinal = true ; 
 + break ; 
 + } 
 parent = parent . getParent ( ) ; 
 } 
 if ( checkFinal & & ! isAnnotatedWithSafeVarargs ( ast ) ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 index 3f08002 . . d11b8e5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 @ @ - 187 , 4 + 187 , 15 @ @ public class RedundantModifierCheckTest 
 } ; 
 verify ( checkConfig , getPath ( " InputRedundantStaticModifierInNestedEnum . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testFinalInAnonymousClass ( ) 
 + throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( RedundantModifierCheck . class ) ; 
 + final String [ ] expected = { 
 + " 14 : 20 : " + getCheckMessage ( MSG _ KEY , " final " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputFinalInAnonymousClass . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputFinalInAnonymousClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputFinalInAnonymousClass . java 
 new file mode 100644 
 index 0000000 . . a1678d8 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputFinalInAnonymousClass . java 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . modifier ; 
 + 
 + public class InputFinalInAnonymousClass { 
 + public static abstract class Example { 
 + public abstract void innerTest ( ) ; 
 + 
 + public final void test ( ) { 
 + } 
 + } 
 + 
 + public static void test ( ) { 
 + new Example ( ) { 
 + @ Override 
 + public final void innerTest ( ) { / / violation 
 + } 
 + } ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier . java 
 index ae84d8c . . fd3ae6c 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / modifier / InputModifier . java 
 @ @ - 137 , 3 + 137 , 10 @ @ class SafeVarargsUsage { 
 @ SuppressWarnings ( " " ) 
 private final void foo1 ( Object . . . obj ) { } 
 } 
 + 
 + enum TestEnum { 
 + ; 
 + 
 + public void method ( ) { 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / xdocs / config _ modifier . xml b / src / xdocs / config _ modifier . xml 
 index 5a635ee . . 48d0df3 100644 
 - - - a / src / xdocs / config _ modifier . xml 
 + + + b / src / xdocs / config _ modifier . xml 
 @ @ - 111 , 7 + 111 , 7 @ @ 
 < / p > 
 < ol > 
 < li > Interface and annotation definitions . < / li > 
 - < li > Final modifier on methods of final classes . < / li > 
 + < li > Final modifier on methods of final and anonymous classes . < / li > 
 < li > 
 Inner < code > interface < / code > declarations that are declared 
 as < code > static < / code > .

NEAREST DIFF:
diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java 
 index 7935ccc . . 927c7ab 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / annotation / BadDeprecatedAnnotation . java 
 @ @ - 35 , 7 + 35 , 7 @ @ public class BadDeprecatedAnnotation 
 / * * 
 * @ deprecated stuff 
 * / 
 - interface Foo { 
 + interface Foo1 { 
 
 / * * 
 * @ deprecated stuff
