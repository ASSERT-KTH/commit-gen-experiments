BLEU SCORE: 0.09287528999566796

TEST MSG: Issue # 6149 : update to saxon 9 . 9
GENERATED MSG: Issue # 3891 : reorganized xpath package inputs

TEST DIFF (one line): diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words <nl> index f04b022 . . 47cc292 100644 <nl> - - - a / . ci / jsoref - spellchecker / whitelist . words <nl> + + + b / . ci / jsoref - spellchecker / whitelist . words <nl> @ @ - 1085 , 6 + 1085 , 7 @ @ Ruslan <nl> rw <nl> sabaka <nl> Sameline <nl> + saxonica <nl> sbe <nl> sbt <nl> scache <nl> diff - - git a / config / version - number - rules . xml b / config / version - number - rules . xml <nl> index 874f936 . . 83826fb 100644 <nl> - - - a / config / version - number - rules . xml <nl> + + + b / config / version - number - rules . xml <nl> @ @ - 28 , 12 + 28 , 6 @ @ <nl> < ignoreVersion type = " regex " > 3 . 10 . 0 < / ignoreVersion > <nl> < / ignoreVersions > <nl> < / rule > <nl> - < rule groupId = " net . sf . saxon " artifactId = " Saxon - HE " > <nl> - < ignoreVersions > <nl> - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 6149 - - > <nl> - < ignoreVersion type = " regex " > 9 . 9 . * < / ignoreVersion > <nl> - < / ignoreVersions > <nl> - < / rule > <nl> < rule groupId = " org . apache . maven . plugins " artifactId = " maven - release - plugin " > <nl> < ignoreVersions > <nl> < ! - - we use 2 . 1 version that is defined at our parent <nl> diff - - git a / pom . xml b / pom . xml <nl> index 300df3e . . 4aba65a 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 206 , 7 + 206 , 7 @ @ <nl> < pmd . version > 6 . 6 . 0 < / pmd . version > <nl> < maven . jacoco . plugin . version > 0 . 8 . 2 < / maven . jacoco . plugin . version > <nl> < powermock . version > 2 . 0 . 0 - beta . 5 < / powermock . version > <nl> - < saxon . version > 9 . 8 . 0 - 14 < / saxon . version > <nl> + < saxon . version > 9 . 9 . 0 - 2 < / saxon . version > <nl> < maven . checkstyle . plugin . version > 3 . 0 . 0 < / maven . checkstyle . plugin . version > <nl> < maven . sevntu . checkstyle . plugin . version > 1 . 32 . 0 < / maven . sevntu . checkstyle . plugin . version > <nl> < maven . sevntu - checkstyle - check . checkstyle . version > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilter . java <nl> index dba40dd . . 7f3e492 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilter . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ package com . puppycrawl . tools . checkstyle . filters ; <nl> import java . util . List ; <nl> import java . util . Objects ; <nl> import java . util . regex . Pattern ; <nl> + import java . util . stream . Collectors ; <nl> <nl> import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . TreeWalkerFilter ; <nl> @ @ - 156 , 9 + 157 , 9 @ @ public class XpathFilter implements TreeWalkerFilter { <nl> } <nl> else { <nl> isMatching = false ; <nl> - final List < Item > items = getItems ( event ) ; <nl> - for ( Item item : items ) { <nl> - final AbstractNode abstractNode = ( AbstractNode ) item ; <nl> + final List < AbstractNode > nodes = getItems ( event ) <nl> + . stream ( ) . map ( item - > ( AbstractNode ) item ) . collect ( Collectors . toList ( ) ) ; <nl> + for ( AbstractNode abstractNode : nodes ) { <nl> isMatching = abstractNode . getTokenType ( ) = = event . getTokenType ( ) <nl> & & abstractNode . getLineNumber ( ) = = event . getLine ( ) <nl> & & abstractNode . getColumnNumber ( ) = = event . getColumnCharIndex ( ) ; <nl> @ @ - 175 , 7 + 176 , 7 @ @ public class XpathFilter implements TreeWalkerFilter { <nl> * @ param event { @ code TreeWalkerAuditEvent } object <nl> * @ return list of nodes matching xpath expression given event <nl> * / <nl> - private List < Item > getItems ( TreeWalkerAuditEvent event ) { <nl> + private List < Item < ? > > getItems ( TreeWalkerAuditEvent event ) { <nl> final RootNode rootNode ; <nl> if ( event . getRootAst ( ) = = null ) { <nl> rootNode = null ; <nl> @ @ - 183 , 7 + 184 , 7 @ @ public class XpathFilter implements TreeWalkerFilter { <nl> else { <nl> rootNode = new RootNode ( event . getRootAst ( ) ) ; <nl> } <nl> - final List < Item > items ; <nl> + final List < Item < ? > > items ; <nl> try { <nl> final XPathDynamicContext xpathDynamicContext = <nl> xpathExpression . createDynamicContext ( rootNode ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / AbstractNode . java b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / AbstractNode . java <nl> index fc97d03 . . b16dac9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / AbstractNode . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / AbstractNode . java <nl> @ @ - 28 , 10 + 28 , 8 @ @ import net . sf . saxon . Configuration ; <nl> import net . sf . saxon . event . Receiver ; <nl> import net . sf . saxon . expr . parser . Location ; <nl> import net . sf . saxon . om . AtomicSequence ; <nl> - import net . sf . saxon . om . Item ; <nl> import net . sf . saxon . om . NamespaceBinding ; <nl> import net . sf . saxon . om . NodeInfo ; <nl> - import net . sf . saxon . om . SequenceIterator ; <nl> import net . sf . saxon . om . TreeInfo ; <nl> import net . sf . saxon . pattern . NodeTest ; <nl> import net . sf . saxon . tree . iter . AxisIterator ; <nl> @ @ - 271 , 39 + 269 , 6 @ @ public abstract class AbstractNode implements NodeInfo { <nl> } <nl> <nl> / * * <nl> - * Compares current object with specified for position . Throws <nl> - * { @ code UnsupportedOperationException } , because no child <nl> - * class implements it and this method is not used for querying . <nl> - * @ param nodeInfo another { @ code NodeInfo } object <nl> - * @ return constant from { @ code AxisInfo } representing order of <nl> - * current object to specified one <nl> - * / <nl> - @ Override <nl> - public final int comparePosition ( NodeInfo nodeInfo ) { <nl> - throw throwUnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Returns head . Throws { @ code UnsupportedOperationException } , because no child <nl> - * class implements it and this method is not used for querying . <nl> - * @ return head <nl> - * / <nl> - @ Override <nl> - public final Item head ( ) { <nl> - throw throwUnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Returns iterator . Throws { @ code UnsupportedOperationException } , because no child <nl> - * class implements it and this method is not used for querying . <nl> - * @ return iterator <nl> - * / <nl> - @ Override <nl> - public final SequenceIterator iterate ( ) { <nl> - throw throwUnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - / * * <nl> * Returns CharSequence string value . Throws { @ code UnsupportedOperationException } , <nl> * because no child class implements it and this method is not used for querying . <nl> * @ return CharSequence string value <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / ElementNode . java b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / ElementNode . java <nl> index 1971e05 . . 034f50d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / ElementNode . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / ElementNode . java <nl> @ @ - 169 , 23 + 169 , 31 @ @ public class ElementNode extends AbstractNode { <nl> final AxisIterator result ; <nl> switch ( axisNumber ) { <nl> case AxisInfo . ANCESTOR : <nl> - result = new Navigator . AncestorEnumeration ( this , false ) ; <nl> + try ( AxisIterator iterator = new Navigator . AncestorEnumeration ( this , false ) ) { <nl> + result = iterator ; <nl> + } <nl> break ; <nl> case AxisInfo . ANCESTOR _ OR _ SELF : <nl> - result = new Navigator . AncestorEnumeration ( this , true ) ; <nl> + try ( AxisIterator iterator = new Navigator . AncestorEnumeration ( this , true ) ) { <nl> + result = iterator ; <nl> + } <nl> break ; <nl> case AxisInfo . ATTRIBUTE : <nl> if ( attributes = = null ) { <nl> result = EmptyIterator . OfNodes . THE _ INSTANCE ; <nl> } <nl> else { <nl> - result = new ArrayIterator . OfNodes ( attributes ) ; <nl> + try ( AxisIterator iterator = new ArrayIterator . OfNodes ( attributes ) ) { <nl> + result = iterator ; <nl> + } <nl> } <nl> break ; <nl> case AxisInfo . CHILD : <nl> if ( hasChildNodes ( ) ) { <nl> - result = new ArrayIterator . OfNodes ( <nl> - getChildren ( ) . toArray ( EMPTY _ ABSTRACT _ NODE _ ARRAY ) ) ; <nl> + try ( AxisIterator iterator = new ArrayIterator . OfNodes ( <nl> + getChildren ( ) . toArray ( EMPTY _ ABSTRACT _ NODE _ ARRAY ) ) ) { <nl> + result = iterator ; <nl> + } <nl> } <nl> else { <nl> result = EmptyIterator . OfNodes . THE _ INSTANCE ; <nl> @ @ - 193 , 20 + 201 , 30 @ @ public class ElementNode extends AbstractNode { <nl> break ; <nl> case AxisInfo . DESCENDANT : <nl> if ( hasChildNodes ( ) ) { <nl> - result = new Navigator . DescendantEnumeration ( this , false , true ) ; <nl> + try ( AxisIterator iterator = <nl> + new Navigator . DescendantEnumeration ( this , false , true ) ) { <nl> + result = iterator ; <nl> + } <nl> } <nl> else { <nl> result = EmptyIterator . OfNodes . THE _ INSTANCE ; <nl> } <nl> break ; <nl> case AxisInfo . DESCENDANT _ OR _ SELF : <nl> - result = new Navigator . DescendantEnumeration ( this , true , true ) ; <nl> + try ( AxisIterator iterator = <nl> + new Navigator . DescendantEnumeration ( this , true , true ) ) { <nl> + result = iterator ; <nl> + } <nl> break ; <nl> case AxisInfo . PARENT : <nl> - result = SingleNodeIterator . makeIterator ( parent ) ; <nl> + try ( AxisIterator iterator = SingleNodeIterator . makeIterator ( parent ) ) { <nl> + result = iterator ; <nl> + } <nl> break ; <nl> case AxisInfo . SELF : <nl> - result = SingleNodeIterator . makeIterator ( this ) ; <nl> + try ( AxisIterator iterator = SingleNodeIterator . makeIterator ( this ) ) { <nl> + result = iterator ; <nl> + } <nl> break ; <nl> default : <nl> throw throwUnsupportedOperationException ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / RootNode . java b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / RootNode . java <nl> index daa1c9c . . 835cb09 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / RootNode . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / RootNode . java <nl> @ @ - 152 , 12 + 152 , 16 @ @ public class RootNode extends AbstractNode { <nl> break ; <nl> case AxisInfo . ANCESTOR _ OR _ SELF : <nl> case AxisInfo . SELF : <nl> - result = SingleNodeIterator . makeIterator ( this ) ; <nl> + try ( AxisIterator iterator = SingleNodeIterator . makeIterator ( this ) ) { <nl> + result = iterator ; <nl> + } <nl> break ; <nl> case AxisInfo . CHILD : <nl> if ( hasChildNodes ( ) ) { <nl> - result = new ArrayIterator . OfNodes ( <nl> - getChildren ( ) . toArray ( EMPTY _ ABSTRACT _ NODE _ ARRAY ) ) ; <nl> + try ( AxisIterator iterator = new ArrayIterator . OfNodes ( <nl> + getChildren ( ) . toArray ( EMPTY _ ABSTRACT _ NODE _ ARRAY ) ) ) { <nl> + result = iterator ; <nl> + } <nl> } <nl> else { <nl> result = EmptyIterator . OfNodes . THE _ INSTANCE ; <nl> @ @ - 165 , 14 + 169 , 20 @ @ public class RootNode extends AbstractNode { <nl> break ; <nl> case AxisInfo . DESCENDANT : <nl> if ( hasChildNodes ( ) ) { <nl> - result = new Navigator . DescendantEnumeration ( this , false , true ) ; <nl> + try ( AxisIterator iterator = <nl> + new Navigator . DescendantEnumeration ( this , false , true ) ) { <nl> + result = iterator ; <nl> + } <nl> } <nl> else { <nl> result = EmptyIterator . OfNodes . THE _ INSTANCE ; <nl> } <nl> break ; <nl> case AxisInfo . DESCENDANT _ OR _ SELF : <nl> - result = new Navigator . DescendantEnumeration ( this , true , true ) ; <nl> + try ( AxisIterator iterator = <nl> + new Navigator . DescendantEnumeration ( this , true , true ) ) { <nl> + result = iterator ; <nl> + } <nl> break ; <nl> default : <nl> throw throwUnsupportedOperationException ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / XpathUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / XpathUtil . java <nl> index e0240b6 . . fa3d0fd 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / XpathUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / XpathUtil . java <nl> @ @ - 20 , 9 + 20 , 11 @ @ <nl> package com . puppycrawl . tools . checkstyle . internal . utils ; <nl> <nl> import java . util . List ; <nl> + import java . util . stream . Collectors ; <nl> <nl> import com . puppycrawl . tools . checkstyle . xpath . AbstractNode ; <nl> import net . sf . saxon . om . Item ; <nl> + import net . sf . saxon . om . NodeInfo ; <nl> import net . sf . saxon . sxpath . XPathDynamicContext ; <nl> import net . sf . saxon . sxpath . XPathEvaluator ; <nl> import net . sf . saxon . sxpath . XPathExpression ; <nl> @ @ - 43 , 13 + 45 , 14 @ @ public final class XpathUtil { <nl> * @ param rootNode { @ code NodeInfo } node context <nl> * @ return list of nodes matching xpath expression given node context <nl> * / <nl> - public static List < Item > getXpathItems ( String xpath , AbstractNode rootNode ) <nl> + public static List < NodeInfo > getXpathItems ( String xpath , AbstractNode rootNode ) <nl> throws XPathException { <nl> final XPathEvaluator xpathEvaluator = new XPathEvaluator ( ) ; <nl> final XPathExpression xpathExpression = xpathEvaluator . createExpression ( xpath ) ; <nl> final XPathDynamicContext xpathDynamicContext = xpathExpression <nl> . createDynamicContext ( rootNode ) ; <nl> - return xpathExpression . evaluate ( xpathDynamicContext ) ; <nl> + final List < Item < ? > > items = xpathExpression . evaluate ( xpathDynamicContext ) ; <nl> + return items . stream ( ) . map ( item - > ( NodeInfo ) item ) . collect ( Collectors . toList ( ) ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / AttributeNodeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / AttributeNodeTest . java <nl> index 7b62f34 . . 9638d67 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / AttributeNodeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / AttributeNodeTest . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import org . junit . Before ; <nl> import org . junit . Test ; <nl> <nl> import net . sf . saxon . om . AxisInfo ; <nl> + import net . sf . saxon . tree . iter . AxisIterator ; <nl> <nl> public class AttributeNodeTest { <nl> <nl> @ @ - 85 , 8 + 86 , 7 @ @ public class AttributeNodeTest { <nl> <nl> @ Test <nl> public void testIterate ( ) { <nl> - try { <nl> - attributeNode . iterateAxis ( AxisInfo . SELF ) ; <nl> + try ( AxisIterator ignored = attributeNode . iterateAxis ( AxisInfo . SELF ) ) { <nl> fail ( " Exception is excepted " ) ; <nl> } <nl> catch ( UnsupportedOperationException ex ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / ElementNodeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / ElementNodeTest . java <nl> index c1e0305 . . e6d5dce 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / ElementNodeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / ElementNodeTest . java <nl> @ @ - 33 , 7 + 33 , 6 @ @ import com . puppycrawl . tools . checkstyle . AbstractPathTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . JavaParser ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> - import net . sf . saxon . om . Item ; <nl> import net . sf . saxon . om . NodeInfo ; <nl> <nl> public class ElementNodeTest extends AbstractPathTestSupport { <nl> @ @ - 55 , 18 + 54 , 18 @ @ public class ElementNodeTest extends AbstractPathTestSupport { <nl> @ Test <nl> public void testGetParent ( ) throws Exception { <nl> final String xpath = " / / OBJBLOCK " ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; <nl> - final AbstractNode parent = ( AbstractNode ) ( ( NodeInfo ) nodes . get ( 0 ) ) . getParent ( ) ; <nl> + final AbstractNode parent = ( AbstractNode ) nodes . get ( 0 ) . getParent ( ) ; <nl> assertEquals ( " Invalid token type " , TokenTypes . CLASS _ DEF , parent . getTokenType ( ) ) ; <nl> } <nl> <nl> @ Test <nl> public void testRootOfElementNode ( ) throws Exception { <nl> final String xpath = " / / OBJBLOCK " ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; <nl> - final AbstractNode root = ( AbstractNode ) ( ( NodeInfo ) nodes . get ( 0 ) ) . getRoot ( ) ; <nl> + final AbstractNode root = ( AbstractNode ) nodes . get ( 0 ) . getRoot ( ) ; <nl> assertEquals ( " Invalid token type " , TokenTypes . EOF , root . getTokenType ( ) ) ; <nl> assertTrue ( " Should return true , because selected node is RootNode " , <nl> root instanceof RootNode ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / RootNodeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / RootNodeTest . java <nl> index aae5b3b . . 93b38e3 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / RootNodeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / RootNodeTest . java <nl> @ @ - 36 , 8 + 36 , 8 @ @ import com . puppycrawl . tools . checkstyle . JavaParser ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import net . sf . saxon . om . AxisInfo ; <nl> - import net . sf . saxon . om . Item ; <nl> import net . sf . saxon . om . NamespaceBinding ; <nl> + import net . sf . saxon . om . NodeInfo ; <nl> import net . sf . saxon . tree . iter . EmptyIterator ; <nl> <nl> public class RootNodeTest extends AbstractPathTestSupport { <nl> @ @ - 59 , 7 + 59 , 7 @ @ public class RootNodeTest extends AbstractPathTestSupport { <nl> @ Test <nl> public void testXpath ( ) throws Exception { <nl> final String xpath = " / " ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; <nl> assertTrue ( " Should return true , because selected node is RootNode " , <nl> nodes . get ( 0 ) instanceof RootNode ) ; <nl> @ @ - 103 , 19 + 103 , 6 @ @ public class RootNodeTest extends AbstractPathTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testIterateWithoutArgument ( ) { <nl> - try { <nl> - rootNode . iterate ( ) ; <nl> - fail ( " Exception is excepted " ) ; <nl> - } <nl> - catch ( UnsupportedOperationException ex ) { <nl> - assertEquals ( " Invalid exception message " , <nl> - " Operation is not supported " , <nl> - ex . getMessage ( ) ) ; <nl> - } <nl> - } <nl> - <nl> - @ Test <nl> public void testGetAttributeValue ( ) { <nl> try { <nl> rootNode . getAttributeValue ( " " , " " ) ; <nl> @ @ - 285 , 34 + 272 , 6 @ @ public class RootNodeTest extends AbstractPathTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testComparePosition ( ) { <nl> - try { <nl> - rootNode . comparePosition ( null ) ; <nl> - fail ( " Exception is excepted " ) ; <nl> - } <nl> - catch ( UnsupportedOperationException ex ) { <nl> - assertEquals ( <nl> - " Invalid exception message " , <nl> - " Operation is not supported " , <nl> - ex . getMessage ( ) ) ; <nl> - } <nl> - } <nl> - <nl> - @ Test <nl> - public void testHead ( ) { <nl> - try { <nl> - rootNode . head ( ) ; <nl> - fail ( " Exception is excepted " ) ; <nl> - } <nl> - catch ( UnsupportedOperationException ex ) { <nl> - assertEquals ( <nl> - " Invalid exception message " , <nl> - " Operation is not supported " , <nl> - ex . getMessage ( ) ) ; <nl> - } <nl> - } <nl> - <nl> - @ Test <nl> public void testGetStringValueCs ( ) { <nl> try { <nl> rootNode . getStringValueCS ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / XpathMapperTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / XpathMapperTest . java <nl> index d1ada4c . . f4d66b8 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / XpathMapperTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / XpathMapperTest . java <nl> @ @ - 36 , 8 + 36 , 7 @ @ import com . puppycrawl . tools . checkstyle . JavaParser ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import net . sf . saxon . om . AxisInfo ; <nl> - import net . sf . saxon . om . Item ; <nl> - import net . sf . saxon . trans . XPathException ; <nl> + import net . sf . saxon . om . NodeInfo ; <nl> import net . sf . saxon . tree . iter . EmptyIterator ; <nl> <nl> public class XpathMapperTest extends AbstractPathTestSupport { <nl> @ @ - 188 , 7 + 187 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryAllElementsWithAttribute ( ) throws Exception { <nl> final String xpath = " / / * [ @ text ] " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 18 , nodes . size ( ) ) ; <nl> } <nl> <nl> @ @ - 212 , 7 + 211 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryAllVariableDefinitionsWithAttribute ( ) throws Exception { <nl> final String xpath = " / / VARIABLE _ DEF [ @ * ] " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 4 , nodes . size ( ) ) ; <nl> } <nl> <nl> @ @ - 220 , 7 + 219 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryAllVariableDefWrongAttribute ( ) throws Exception { <nl> final String xpath = " / / VARIABLE _ DEF [ @ qwe ] " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 0 , nodes . size ( ) ) ; <nl> } <nl> <nl> @ @ - 228 , 11 + 227 , 11 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryAllMethodDefinitionsInContext ( ) throws Exception { <nl> final String objectXpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] / / OBJBLOCK " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > objectNodes = getXpathItems ( objectXpath , rootNode ) ; <nl> + final List < NodeInfo > objectNodes = getXpathItems ( objectXpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 1 , objectNodes . size ( ) ) ; <nl> final AbstractNode objNode = ( AbstractNode ) objectNodes . get ( 0 ) ; <nl> final String methodsXpath = " METHOD _ DEF " ; <nl> - final List < Item > methodsNodes = getXpathItems ( methodsXpath , objNode ) ; <nl> + final List < NodeInfo > methodsNodes = getXpathItems ( methodsXpath , objNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 2 , methodsNodes . size ( ) ) ; <nl> final DetailAST [ ] actual = convertToArray ( methodsNodes ) ; <nl> final DetailAST expectedMethodDefNode = getSiblingByType ( rootNode . getUnderlyingNode ( ) , <nl> @ @ - 248 , 7 + 247 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryAllClassDefinitions ( ) throws Exception { <nl> final String xpath = " CLASS _ DEF " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; <nl> final AbstractNode classDefNode = ( AbstractNode ) nodes . get ( 0 ) ; <nl> assertEquals ( " Invalid number of nodes " , 3 , classDefNode . getLineNumber ( ) ) ; <nl> @ @ - 307 , 7 + 306 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryClassDefinitionByClassName ( ) throws Exception { <nl> final String xpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> final DetailAST [ ] actual = convertToArray ( nodes ) ; <nl> final DetailAST expectedClassDefNode = getSiblingByType ( rootNode . getUnderlyingNode ( ) , <nl> TokenTypes . CLASS _ DEF ) ; <nl> @ @ - 323 , 7 + 322 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryWrongClassName ( ) throws Exception { <nl> final String xpath = " / CLASS _ DEF [ @ text = ' WrongName ' ] " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertTrue ( " Should return true , because no item matches xpath " , nodes . isEmpty ( ) ) ; <nl> } <nl> <nl> @ @ - 331 , 7 + 330 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryWrongXpath ( ) throws Exception { <nl> final String xpath = " / WRONG _ XPATH " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertTrue ( " Should return true , because no item matches xpath " , nodes . isEmpty ( ) ) ; <nl> } <nl> <nl> @ @ - 369 , 7 + 368 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryDescendant ( ) throws Exception { <nl> final String xpath = " / / METHOD _ DEF / descendant : : EXPR " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 6 , nodes . size ( ) ) ; <nl> } <nl> <nl> @ @ - 391 , 7 + 390 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryNoChild ( ) throws Exception { <nl> final String xpath = " / / RCURLY / METHOD _ DEF " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertTrue ( " Should return true , because no item matches xpath " , nodes . isEmpty ( ) ) ; <nl> } <nl> <nl> @ @ - 399 , 7 + 398 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryNoDescendant ( ) throws Exception { <nl> final String xpath = " / / RCURLY / descendant : : METHOD _ DEF " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertTrue ( " Should return true , because no item matches xpath " , nodes . isEmpty ( ) ) ; <nl> } <nl> <nl> @ @ - 411 , 7 + 410 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> getXpathItems ( xpath , rootNode ) ; <nl> fail ( " Exception is excepted " ) ; <nl> } <nl> - catch ( XPathException ex ) { <nl> + catch ( UnsupportedOperationException ex ) { <nl> assertEquals ( " Invalid number of nodes " , " Operation is not supported " , ex . getMessage ( ) ) ; <nl> } <nl> } <nl> @ @ - 424 , 7 + 423 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> getXpathItems ( xpath , rootNode ) ; <nl> fail ( " Exception is excepted " ) ; <nl> } <nl> - catch ( XPathException ex ) { <nl> + catch ( UnsupportedOperationException ex ) { <nl> assertEquals ( " Invalid number of nodes " , " Operation is not supported " , ex . getMessage ( ) ) ; <nl> } <nl> } <nl> @ @ - 433 , 7 + 432 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQuerySelf ( ) throws Exception { <nl> final String objectXpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] / / OBJBLOCK " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > objectNodes = getXpathItems ( objectXpath , rootNode ) ; <nl> + final List < NodeInfo > objectNodes = getXpathItems ( objectXpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 1 , objectNodes . size ( ) ) ; <nl> final AbstractNode objNode = ( AbstractNode ) objectNodes . get ( 0 ) ; <nl> final String methodsXpath = " self : : OBJBLOCK " ; <nl> @ @ - 460 , 7 + 459 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryNonExistentAttribute ( ) throws Exception { <nl> final String xpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> final ElementNode classDefNode = ( ElementNode ) nodes . get ( 0 ) ; <nl> try { <nl> classDefNode . getAttributeValue ( " " , " noneExistingAttribute " ) ; <nl> @ @ - 475 , 7 + 474 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryRootSelf ( ) throws Exception { <nl> final String xpath = " self : : node ( ) " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; <nl> } <nl> <nl> @ @ - 496 , 7 + 495 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryNonExistentAnnotation ( ) throws Exception { <nl> final String xpath = " / / ANNOTATION [ @ text = ' SpringBootApplication ' ] " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAnnotation . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 0 , nodes . size ( ) ) ; <nl> } <nl> <nl> @ @ - 515 , 7 + 514 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryEnumElementsNumber ( ) throws Exception { <nl> final String xpath = " / ENUM _ DEF / OBJBLOCK / ENUM _ CONSTANT _ DEF " ; <nl> final RootNode enumRootNode = getRootNode ( " InputXpathMapperEnum . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , enumRootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , enumRootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 3 , nodes . size ( ) ) ; <nl> } <nl> <nl> @ @ - 551 , 7 + 550 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testQueryInterfaceMethodDefNumber ( ) throws Exception { <nl> final String xpath = " / INTERFACE _ DEF / OBJBLOCK / METHOD _ DEF " ; <nl> final RootNode interfaceRootNode = getRootNode ( " InputXpathMapperInterface . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , interfaceRootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , interfaceRootNode ) ; <nl> assertEquals ( " Invalid number of nodes " , 4 , nodes . size ( ) ) ; <nl> } <nl> <nl> @ @ - 574 , 7 + 573 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> public void testIdent ( ) throws Exception { <nl> final String xpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] / IDENT " ; <nl> final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; <nl> - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; <nl> + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; <nl> final DetailAST [ ] actual = convertToArray ( nodes ) ; <nl> final DetailAST expectedIdentNode = getSiblingByType ( rootNode . getUnderlyingNode ( ) , <nl> TokenTypes . CLASS _ DEF ) <nl> @ @ - 590 , 7 + 589 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { <nl> return new RootNode ( rootAst ) ; <nl> } <nl> <nl> - private static DetailAST [ ] convertToArray ( List < Item > nodes ) { <nl> + private static DetailAST [ ] convertToArray ( List < NodeInfo > nodes ) { <nl> final DetailAST [ ] result = new DetailAST [ nodes . size ( ) ] ; <nl> for ( int i = 0 ; i < nodes . size ( ) ; i + + ) { <nl> final AbstractNode abstractNode = ( AbstractNode ) nodes . get ( i ) ;
NEAREST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index bbade63 . . 5600254 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 2129 , 8 + 2129 , 6 @ @ isolated classes and we cannot put them to separate package as it will affect us <nl> < option value = " NonFinalFieldReferencedInHashCode " / > <nl> < ! - - violations in DetailAST will be addressed further - - > <nl> < option value = " FieldNotUsedInToString " / > <nl> - < ! - - till # 4805 - - > <nl> - < option value = " HtmlTagCanBeJavadocTag " / > <nl> < ! - - WeakerAccess reports ' can be protected ' that we can not change - - > <nl> < option value = " WeakerAccess " / > <nl> < ! - - we need to work with AntClassLoader , there is no way to avoid this - - > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> index 790b4b9 . . 2410faa 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> @ @ - 30 , 7 + 30 , 6 @ @ import com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaTokenTypes ; <nl> * <nl> * @ author Oliver Burn <nl> * @ author < a href = " mailto : dobratzp @ ele . uri . edu " > Peter Dobratz < / a > <nl> - * @ noinspection HtmlTagCanBeJavadocTag <nl> * / <nl> public final class TokenTypes { <nl> / / The following three types are never part of an AST , <nl> @ @ - 481 , 7 + 480 , 7 @ @ public final class TokenTypes { <nl> / * * <nl> * An extends clause . This appear as part of class and interface <nl> * definitions . This element appears even if the <nl> - * < code > extends < / code > keyword is not explicitly used . The child <nl> + * { @ code extends } keyword is not explicitly used . The child <nl> * is an optional identifier . <nl> * <nl> * < p > For example : < / p > <nl> @ @ - 672 , 7 + 671 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int INDEX _ OP = GeneratedJavaTokenTypes . INDEX _ OP ; <nl> / * * <nl> - * The < code > + + < / code > ( postfix increment ) operator . <nl> + * The { @ code + + } ( postfix increment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 14 . 1 " > Java <nl> @ @ - 682 , 7 + 681 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int POST _ INC = GeneratedJavaTokenTypes . POST _ INC ; <nl> / * * <nl> - * The < code > - - < / code > ( postfix decrement ) operator . <nl> + * The { @ code - - } ( postfix decrement ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 14 . 2 " > Java <nl> @ @ - 803 , 7 + 802 , 7 @ @ public final class TokenTypes { <nl> public static final int EXPR = GeneratedJavaTokenTypes . EXPR ; <nl> / * * <nl> * An array initialization . This may occur as part of an array <nl> - * declaration or inline with < code > new < / code > . <nl> + * declaration or inline with { @ code new } . <nl> * <nl> * < p > For example : < / p > <nl> * < pre > <nl> @ @ - 923 , 7 + 922 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int IMPORT = GeneratedJavaTokenTypes . IMPORT ; <nl> / * * <nl> - * The < code > - < / code > ( unary minus ) operator . <nl> + * The { @ code - } ( unary minus ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 4 " > Java <nl> @ @ - 932 , 7 + 931 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int UNARY _ MINUS = GeneratedJavaTokenTypes . UNARY _ MINUS ; <nl> / * * <nl> - * The < code > + < / code > ( unary plus ) operator . <nl> + * The { @ code + } ( unary plus ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 3 " > Java <nl> @ @ - 1007 , 7 + 1006 , 7 @ @ public final class TokenTypes { <nl> public static final int ELIST = GeneratedJavaTokenTypes . ELIST ; <nl> / * * <nl> * A for loop initializer . This is a child of <nl> - * < code > LITERAL _ FOR < / code > . The children of this element may be <nl> + * { @ code LITERAL _ FOR } . The children of this element may be <nl> * a comma separated list of variable declarations , an expression <nl> * list , or empty . <nl> * <nl> @ @ - 1018 , 7 + 1017 , 7 @ @ public final class TokenTypes { <nl> public static final int FOR _ INIT = GeneratedJavaTokenTypes . FOR _ INIT ; <nl> / * * <nl> * A for loop condition . This is a child of <nl> - * < code > LITERAL _ FOR < / code > . The child of this element is an <nl> + * { @ code LITERAL _ FOR } . The child of this element is an <nl> * optional expression . <nl> * <nl> * @ see # EXPR <nl> @ @ - 1029 , 7 + 1028 , 7 @ @ public final class TokenTypes { <nl> <nl> / * * <nl> * A for loop iterator . This is a child of <nl> - * < code > LITERAL _ FOR < / code > . The child of this element is an <nl> + * { @ code LITERAL _ FOR } . The child of this element is an <nl> * optional expression list . <nl> * <nl> * @ see # ELIST <nl> @ @ - 1040 , 7 + 1039 , 7 @ @ public final class TokenTypes { <nl> <nl> / * * <nl> * The empty statement . This goes in place of an <nl> - * < code > SLIST < / code > for a < code > for < / code > or < code > while < / code > <nl> + * { @ code SLIST } for a { @ code for } or { @ code while } <nl> * loop body . <nl> * <nl> * @ see < a <nl> @ @ - 1051 , 19 + 1050 , 19 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int EMPTY _ STAT = GeneratedJavaTokenTypes . EMPTY _ STAT ; <nl> / * * <nl> - * The < code > final < / code > keyword . <nl> + * The { @ code final } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> public static final int FINAL = GeneratedJavaTokenTypes . FINAL ; <nl> / * * <nl> - * The < code > abstract < / code > keyword . <nl> + * The { @ code abstract } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> public static final int ABSTRACT = GeneratedJavaTokenTypes . ABSTRACT ; <nl> / * * <nl> - * The < code > strictfp < / code > keyword . <nl> + * The { @ code strictfp } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> @ @ - 1108 , 7 + 1107 , 7 @ @ public final class TokenTypes { <nl> public static final int CTOR _ CALL = GeneratedJavaTokenTypes . CTOR _ CALL ; <nl> <nl> / * * <nl> - * The statement terminator ( < code > ; < / code > ) . Depending on the <nl> + * The statement terminator ( { @ code ; } ) . Depending on the <nl> * context , this make occur as a sibling , a child , or not at all . <nl> * <nl> * @ see # PACKAGE _ DEF <nl> @ @ - 1120 , 14 + 1119 , 14 @ @ public final class TokenTypes { <nl> public static final int SEMI = GeneratedJavaTokenTypes . SEMI ; <nl> <nl> / * * <nl> - * The < code > ] < / code > symbol . <nl> + * The { @ code ] } symbol . <nl> * <nl> * @ see # INDEX _ OP <nl> * @ see # ARRAY _ DECLARATOR <nl> * * / <nl> public static final int RBRACK = GeneratedJavaTokenTypes . RBRACK ; <nl> / * * <nl> - * The < code > void < / code > keyword . <nl> + * The { @ code void } keyword . <nl> * <nl> * @ see # TYPE <nl> * * / <nl> @ @ - 1135 , 7 + 1134 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ void ; <nl> <nl> / * * <nl> - * The < code > boolean < / code > keyword . <nl> + * The { @ code boolean } keyword . <nl> * <nl> * @ see # TYPE <nl> * * / <nl> @ @ - 1143 , 7 + 1142 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ boolean ; <nl> <nl> / * * <nl> - * The < code > byte < / code > keyword . <nl> + * The { @ code byte } keyword . <nl> * <nl> * @ see # TYPE <nl> * * / <nl> @ @ - 1151 , 7 + 1150 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ byte ; <nl> <nl> / * * <nl> - * The < code > char < / code > keyword . <nl> + * The { @ code char } keyword . <nl> * <nl> * @ see # TYPE <nl> * * / <nl> @ @ - 1159 , 7 + 1158 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ char ; <nl> <nl> / * * <nl> - * The < code > short < / code > keyword . <nl> + * The { @ code short } keyword . <nl> * <nl> * @ see # TYPE <nl> * * / <nl> @ @ - 1167 , 13 + 1166 , 13 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ short ; <nl> <nl> / * * <nl> - * The < code > int < / code > keyword . <nl> + * The { @ code int } keyword . <nl> * <nl> * @ see # TYPE <nl> * * / <nl> public static final int LITERAL _ INT = GeneratedJavaTokenTypes . LITERAL _ int ; <nl> / * * <nl> - * The < code > float < / code > keyword . <nl> + * The { @ code float } keyword . <nl> * <nl> * @ see # TYPE <nl> * * / <nl> @ @ - 1181 , 7 + 1180 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ float ; <nl> <nl> / * * <nl> - * The < code > long < / code > keyword . <nl> + * The { @ code long } keyword . <nl> * <nl> * @ see # TYPE <nl> * * / <nl> @ @ - 1189 , 7 + 1188 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ long ; <nl> <nl> / * * <nl> - * The < code > double < / code > keyword . <nl> + * The { @ code double } keyword . <nl> * <nl> * @ see # TYPE <nl> * * / <nl> @ @ - 1202 , 13 + 1201 , 13 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int IDENT = GeneratedJavaTokenTypes . IDENT ; <nl> / * * <nl> - * The < code > & # 46 ; < / code > ( dot ) operator . <nl> + * The { @ code & # 46 ; } ( dot ) operator . <nl> * <nl> * @ see FullIdent <nl> * * / <nl> public static final int DOT = GeneratedJavaTokenTypes . DOT ; <nl> / * * <nl> - * The < code > * < / code > ( multiplication or wildcard ) operator . <nl> + * The { @ code * } ( multiplication or wildcard ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 7 . html # jls - 7 . 5 . 2 " > Java <nl> @ @ - 1221 , 7 + 1220 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int STAR = GeneratedJavaTokenTypes . STAR ; <nl> / * * <nl> - * The < code > private < / code > keyword . <nl> + * The { @ code private } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> @ @ - 1229 , 7 + 1228 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ private ; <nl> <nl> / * * <nl> - * The < code > public < / code > keyword . <nl> + * The { @ code public } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> @ @ - 1237 , 7 + 1236 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ public ; <nl> <nl> / * * <nl> - * The < code > protected < / code > keyword . <nl> + * The { @ code protected } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> @ @ - 1245 , 7 + 1244 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ protected ; <nl> <nl> / * * <nl> - * The < code > static < / code > keyword . <nl> + * The { @ code static } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> @ @ - 1253 , 7 + 1252 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ static ; <nl> <nl> / * * <nl> - * The < code > transient < / code > keyword . <nl> + * The { @ code transient } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> @ @ - 1261 , 7 + 1260 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ transient ; <nl> <nl> / * * <nl> - * The < code > native < / code > keyword . <nl> + * The { @ code native } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> @ @ - 1269 , 7 + 1268 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ native ; <nl> <nl> / * * <nl> - * The < code > synchronized < / code > keyword . This may be used as a <nl> + * The { @ code synchronized } keyword . This may be used as a <nl> * modifier of a method or in the definition of a synchronized <nl> * block . <nl> * <nl> @ @ - 1315 , 7 + 1314 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ synchronized ; <nl> <nl> / * * <nl> - * The < code > volatile < / code > keyword . <nl> + * The { @ code volatile } keyword . <nl> * <nl> * @ see # MODIFIERS <nl> * * / <nl> @ @ - 1323 , 7 + 1322 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ volatile ; <nl> <nl> / * * <nl> - * The < code > class < / code > keyword . This element appears both <nl> + * The { @ code class } keyword . This element appears both <nl> * as part of a class declaration , and inline to reference a <nl> * class object . <nl> * <nl> @ @ - 1351 , 7 + 1350 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ class ; <nl> <nl> / * * <nl> - * The < code > interface < / code > keyword . This token appears in <nl> + * The { @ code interface } keyword . This token appears in <nl> * interface definition . <nl> * <nl> * @ see # INTERFACE _ DEF <nl> @ @ - 1360 , 7 + 1359 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ interface ; <nl> <nl> / * * <nl> - * A left ( curly ) brace ( < code > { < / code > ) . <nl> + * A left ( curly ) brace ( { @ code & # 123 ; } ) . <nl> * <nl> * @ see # OBJBLOCK <nl> * @ see # ARRAY _ INIT <nl> @ @ - 1368 , 7 + 1367 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int LCURLY = GeneratedJavaTokenTypes . LCURLY ; <nl> / * * <nl> - * A right ( curly ) brace ( < code > } < / code > ) . <nl> + * A right ( curly ) brace ( { @ code & # 125 ; } ) . <nl> * <nl> * @ see # OBJBLOCK <nl> * @ see # ARRAY _ INIT <nl> @ @ - 1376 , 7 + 1375 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int RCURLY = GeneratedJavaTokenTypes . RCURLY ; <nl> / * * <nl> - * The < code > , < / code > ( comma ) operator . <nl> + * The { @ code , } ( comma ) operator . <nl> * <nl> * @ see # ARRAY _ INIT <nl> * @ see # FOR _ INIT <nl> @ @ - 1387 , 7 + 1386 , 7 @ @ public final class TokenTypes { <nl> public static final int COMMA = GeneratedJavaTokenTypes . COMMA ; <nl> <nl> / * * <nl> - * A left parenthesis ( < code > ( < / code > ) . <nl> + * A left parenthesis ( { @ code ( } ) . <nl> * <nl> * @ see # LITERAL _ FOR <nl> * @ see # LITERAL _ NEW <nl> @ @ - 1397 , 7 + 1396 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int LPAREN = GeneratedJavaTokenTypes . LPAREN ; <nl> / * * <nl> - * A right parenthesis ( < code > ) < / code > ) . <nl> + * A right parenthesis ( { @ code ) } ) . <nl> * <nl> * @ see # LITERAL _ FOR <nl> * @ see # LITERAL _ NEW <nl> @ @ - 1409 , 7 + 1408 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int RPAREN = GeneratedJavaTokenTypes . RPAREN ; <nl> / * * <nl> - * The < code > this < / code > keyword . <nl> + * The { @ code this } keyword . <nl> * <nl> * @ see # EXPR <nl> * @ see # CTOR _ CALL <nl> @ @ - 1418 , 7 + 1417 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ this ; <nl> <nl> / * * <nl> - * The < code > super < / code > keyword . <nl> + * The { @ code super } keyword . <nl> * <nl> * @ see # EXPR <nl> * @ see # SUPER _ CTOR _ CALL <nl> @ @ - 1427 , 7 + 1426 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ super ; <nl> <nl> / * * <nl> - * The < code > = < / code > ( assignment ) operator . <nl> + * The { @ code = } ( assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 1 " > Java <nl> @ @ - 1436 , 7 + 1435 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int ASSIGN = GeneratedJavaTokenTypes . ASSIGN ; <nl> / * * <nl> - * The < code > throws < / code > keyword . The children are a number of <nl> + * The { @ code throws } keyword . The children are a number of <nl> * one or more identifiers separated by commas . <nl> * <nl> * @ see < a <nl> @ @ - 1453 , 8 + 1452 , 8 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ throws ; <nl> <nl> / * * <nl> - * The < code > : < / code > ( colon ) operator . This will appear as part <nl> - * of the conditional operator ( < code > ? : < / code > ) . <nl> + * The { @ code : } ( colon ) operator . This will appear as part <nl> + * of the conditional operator ( { @ code ? : } ) . <nl> * <nl> * @ see # QUESTION <nl> * @ see # LABELED _ STAT <nl> @ @ - 1463 , 7 + 1462 , 7 @ @ public final class TokenTypes { <nl> public static final int COLON = GeneratedJavaTokenTypes . COLON ; <nl> <nl> / * * <nl> - * The < code > : : < / code > ( double colon ) separator . <nl> + * The { @ code : : } ( double colon ) separator . <nl> * It is part of Java 8 syntax that is used for method reference . <nl> * The token does not appear in tree , { @ link # METHOD _ REF } should be used instead . <nl> * <nl> @ @ - 1471 , 7 + 1470 , 7 @ @ public final class TokenTypes { <nl> * / <nl> public static final int DOUBLE _ COLON = GeneratedJavaTokenTypes . DOUBLE _ COLON ; <nl> / * * <nl> - * The < code > if < / code > keyword . <nl> + * The { @ code if } keyword . <nl> * <nl> * < p > For example : < / p > <nl> * < pre > <nl> @ @ - 1526 , 8 + 1525 , 8 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int LITERAL _ IF = GeneratedJavaTokenTypes . LITERAL _ if ; <nl> / * * <nl> - * The < code > for < / code > keyword . The children are < code > ( < / code > , <nl> - * an initializer , a condition , an iterator , a < code > ) < / code > and <nl> + * The { @ code for } keyword . The children are { @ code ( } , <nl> + * an initializer , a condition , an iterator , a { @ code ) } and <nl> * either a statement list , a single expression , or an empty <nl> * statement . <nl> * <nl> @ @ - 1610 , 7 + 1609 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int LITERAL _ FOR = GeneratedJavaTokenTypes . LITERAL _ for ; <nl> / * * <nl> - * The < code > while < / code > keyword . <nl> + * The { @ code while } keyword . <nl> * <nl> * < p > For example : < / p > <nl> * < pre > <nl> @ @ - 1667 , 7 + 1666 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ while ; <nl> <nl> / * * <nl> - * The < code > do < / code > keyword . Note the the while token does not <nl> + * The { @ code do } keyword . Note the the while token does not <nl> * appear as part of the do - while construct . <nl> * <nl> * < p > For example : < / p > <nl> @ @ - 1724 , 12 + 1723 , 12 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int LITERAL _ DO = GeneratedJavaTokenTypes . LITERAL _ do ; <nl> / * * <nl> - * Literal < code > while < / code > in do - while loop . <nl> + * Literal { @ code while } in do - while loop . <nl> * @ see # LITERAL _ DO <nl> * / <nl> public static final int DO _ WHILE = GeneratedJavaTokenTypes . DO _ WHILE ; <nl> / * * <nl> - * The < code > break < / code > keyword . The first child is an optional <nl> + * The { @ code break } keyword . The first child is an optional <nl> * identifier and the last child is a semicolon . <nl> * <nl> * @ see # IDENT <nl> @ @ - 1740 , 7 + 1739 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ break ; <nl> <nl> / * * <nl> - * The < code > continue < / code > keyword . The first child is an <nl> + * The { @ code continue } keyword . The first child is an <nl> * optional identifier and the last child is a semicolon . <nl> * <nl> * @ see # IDENT <nl> @ @ - 1751 , 7 + 1750 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ continue ; <nl> <nl> / * * <nl> - * The < code > return < / code > keyword . The first child is an <nl> + * The { @ code return } keyword . The first child is an <nl> * optional expression for the return value . The last child is a <nl> * semi colon . <nl> * <nl> @ @ - 1763 , 7 + 1762 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ return ; <nl> <nl> / * * <nl> - * The < code > switch < / code > keyword . <nl> + * The { @ code switch } keyword . <nl> * <nl> * < p > For example : < / p > <nl> * < pre > <nl> @ @ - 1870 , 8 + 1869 , 8 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ switch ; <nl> <nl> / * * <nl> - * The < code > throw < / code > keyword . The first child is an <nl> - * expression that evaluates to a < code > Throwable < / code > instance . <nl> + * The { @ code throw } keyword . The first child is an <nl> + * expression that evaluates to a { @ code Throwable } instance . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 17 " > Java <nl> @ @ - 1883 , 8 + 1882 , 8 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ throw ; <nl> <nl> / * * <nl> - * The < code > else < / code > keyword . This appears as a child of an <nl> - * < code > if < / code > statement . <nl> + * The { @ code else } keyword . This appears as a child of an <nl> + * { @ code if } statement . <nl> * <nl> * @ see # SLIST <nl> * @ see # EXPR <nl> @ @ - 1895 , 7 + 1894 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ else ; <nl> <nl> / * * <nl> - * The < code > case < / code > keyword . The first child is a constant <nl> + * The { @ code case } keyword . The first child is a constant <nl> * expression that evaluates to a integer . <nl> * <nl> * @ see # CASE _ GROUP <nl> @ @ - 1905 , 7 + 1904 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ case ; <nl> <nl> / * * <nl> - * The < code > default < / code > keyword . This element has no <nl> + * The { @ code default } keyword . This element has no <nl> * children . <nl> * <nl> * @ see # CASE _ GROUP <nl> @ @ - 1915 , 7 + 1914 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ default ; <nl> <nl> / * * <nl> - * The < code > try < / code > keyword . The children are a statement <nl> + * The { @ code try } keyword . The children are a statement <nl> * list , zero or more catch blocks and then an optional finally <nl> * block . <nl> * <nl> @ @ - 2140 , 7 + 2139 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . RESOURCE ; <nl> <nl> / * * <nl> - * The < code > catch < / code > keyword . <nl> + * The { @ code catch } keyword . <nl> * <nl> * @ see # LPAREN <nl> * @ see # PARAMETER _ DEF <nl> @ @ - 2152 , 7 + 2151 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ catch ; <nl> <nl> / * * <nl> - * The < code > finally < / code > keyword . <nl> + * The { @ code finally } keyword . <nl> * <nl> * @ see # SLIST <nl> * @ see # LITERAL _ TRY <nl> @ @ - 2161 , 7 + 2160 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ finally ; <nl> <nl> / * * <nl> - * The < code > + = < / code > ( addition assignment ) operator . <nl> + * The { @ code + = } ( addition assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java <nl> @ @ - 2170 , 7 + 2169 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int PLUS _ ASSIGN = GeneratedJavaTokenTypes . PLUS _ ASSIGN ; <nl> / * * <nl> - * The < code > - = < / code > ( subtraction assignment ) operator . <nl> + * The { @ code - = } ( subtraction assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java <nl> @ @ - 2181 , 7 + 2180 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . MINUS _ ASSIGN ; <nl> <nl> / * * <nl> - * The < code > * = < / code > ( multiplication assignment ) operator . <nl> + * The { @ code * = } ( multiplication assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java <nl> @ @ - 2190 , 7 + 2189 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int STAR _ ASSIGN = GeneratedJavaTokenTypes . STAR _ ASSIGN ; <nl> / * * <nl> - * The < code > / = < / code > ( division assignment ) operator . <nl> + * The { @ code / = } ( division assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java <nl> @ @ - 2199 , 7 + 2198 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int DIV _ ASSIGN = GeneratedJavaTokenTypes . DIV _ ASSIGN ; <nl> / * * <nl> - * The < code > % = < / code > ( remainder assignment ) operator . <nl> + * The { @ code % = } ( remainder assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java <nl> @ @ - 2208 , 7 + 2207 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int MOD _ ASSIGN = GeneratedJavaTokenTypes . MOD _ ASSIGN ; <nl> / * * <nl> - * The < code > & gt ; & gt ; = < / code > ( signed right shift assignment ) <nl> + * The { @ code & gt ; & gt ; = } ( signed right shift assignment ) <nl> * operator . <nl> * <nl> * @ see < a <nl> @ @ - 2218 , 7 + 2217 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int SR _ ASSIGN = GeneratedJavaTokenTypes . SR _ ASSIGN ; <nl> / * * <nl> - * The < code > & gt ; & gt ; & gt ; = < / code > ( unsigned right shift assignment ) <nl> + * The { @ code & gt ; & gt ; & gt ; = } ( unsigned right shift assignment ) <nl> * operator . <nl> * <nl> * @ see < a <nl> @ @ - 2228 , 7 + 2227 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int BSR _ ASSIGN = GeneratedJavaTokenTypes . BSR _ ASSIGN ; <nl> / * * <nl> - * The < code > & lt ; & lt ; = < / code > ( left shift assignment ) operator . <nl> + * The { @ code & lt ; & lt ; = } ( left shift assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java <nl> @ @ - 2237 , 7 + 2236 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int SL _ ASSIGN = GeneratedJavaTokenTypes . SL _ ASSIGN ; <nl> / * * <nl> - * The < code > & amp ; = < / code > ( bitwise AND assignment ) operator . <nl> + * The { @ code & amp ; = } ( bitwise AND assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java <nl> @ @ - 2246 , 7 + 2245 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int BAND _ ASSIGN = GeneratedJavaTokenTypes . BAND _ ASSIGN ; <nl> / * * <nl> - * The < code > ^ = < / code > ( bitwise exclusive OR assignment ) operator . <nl> + * The { @ code ^ = } ( bitwise exclusive OR assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java <nl> @ @ - 2255 , 7 + 2254 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int BXOR _ ASSIGN = GeneratedJavaTokenTypes . BXOR _ ASSIGN ; <nl> / * * <nl> - * The < code > | = < / code > ( bitwise OR assignment ) operator . <nl> + * The { @ code | = } ( bitwise OR assignment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java <nl> @ @ - 2264 , 7 + 2263 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int BOR _ ASSIGN = GeneratedJavaTokenTypes . BOR _ ASSIGN ; <nl> / * * <nl> - * The < code > & # 63 ; < / code > ( conditional ) operator . Technically , <nl> + * The { @ code & # 63 ; } ( conditional ) operator . Technically , <nl> * the colon is also part of this operator , but it appears as a <nl> * separate token . <nl> * <nl> @ @ - 2297 , 7 + 2296 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int QUESTION = GeneratedJavaTokenTypes . QUESTION ; <nl> / * * <nl> - * The < code > | | < / code > ( conditional OR ) operator . <nl> + * The { @ code | | } ( conditional OR ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 24 " > Java <nl> @ @ - 2306 , 7 + 2305 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int LOR = GeneratedJavaTokenTypes . LOR ; <nl> / * * <nl> - * The < code > & amp ; & amp ; < / code > ( conditional AND ) operator . <nl> + * The { @ code & amp ; & amp ; } ( conditional AND ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 23 " > Java <nl> @ @ - 2315 , 7 + 2314 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int LAND = GeneratedJavaTokenTypes . LAND ; <nl> / * * <nl> - * The < code > | < / code > ( bitwise OR ) operator . <nl> + * The { @ code | } ( bitwise OR ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 22 . 1 " > Java <nl> @ @ - 2324 , 7 + 2323 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int BOR = GeneratedJavaTokenTypes . BOR ; <nl> / * * <nl> - * The < code > ^ < / code > ( bitwise exclusive OR ) operator . <nl> + * The { @ code ^ } ( bitwise exclusive OR ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 22 . 1 " > Java <nl> @ @ - 2333 , 7 + 2332 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int BXOR = GeneratedJavaTokenTypes . BXOR ; <nl> / * * <nl> - * The < code > & amp ; < / code > ( bitwise AND ) operator . <nl> + * The { @ code & amp ; } ( bitwise AND ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 22 . 1 " > Java <nl> @ @ - 2342 , 43 + 2341 , 43 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int BAND = GeneratedJavaTokenTypes . BAND ; <nl> / * * <nl> - * The < code > & # 33 ; = < / code > ( not equal ) operator . <nl> + * The { @ code & # 33 ; = } ( not equal ) operator . <nl> * <nl> * @ see # EXPR <nl> * * / <nl> public static final int NOT _ EQUAL = GeneratedJavaTokenTypes . NOT _ EQUAL ; <nl> / * * <nl> - * The < code > = = < / code > ( equal ) operator . <nl> + * The { @ code = = } ( equal ) operator . <nl> * <nl> * @ see # EXPR <nl> * * / <nl> public static final int EQUAL = GeneratedJavaTokenTypes . EQUAL ; <nl> / * * <nl> - * The < code > & lt ; < / code > ( less than ) operator . <nl> + * The { @ code & lt ; } ( less than ) operator . <nl> * <nl> * @ see # EXPR <nl> * * / <nl> public static final int LT = GeneratedJavaTokenTypes . LT ; <nl> / * * <nl> - * The < code > & gt ; < / code > ( greater than ) operator . <nl> + * The { @ code & gt ; } ( greater than ) operator . <nl> * <nl> * @ see # EXPR <nl> * * / <nl> public static final int GT = GeneratedJavaTokenTypes . GT ; <nl> / * * <nl> - * The < code > & lt ; = < / code > ( less than or equal ) operator . <nl> + * The { @ code & lt ; = } ( less than or equal ) operator . <nl> * <nl> * @ see # EXPR <nl> * * / <nl> public static final int LE = GeneratedJavaTokenTypes . LE ; <nl> / * * <nl> - * The < code > & gt ; = < / code > ( greater than or equal ) operator . <nl> + * The { @ code & gt ; = } ( greater than or equal ) operator . <nl> * <nl> * @ see # EXPR <nl> * * / <nl> public static final int GE = GeneratedJavaTokenTypes . GE ; <nl> / * * <nl> - * The < code > instanceof < / code > operator . The first child is an <nl> + * The { @ code instanceof } operator . The first child is an <nl> * object reference or something that evaluates to an object <nl> * reference . The second child is a reference type . <nl> * <nl> @ @ - 2396 , 7 + 2395 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ instanceof ; <nl> <nl> / * * <nl> - * The < code > & lt ; & lt ; < / code > ( shift left ) operator . <nl> + * The { @ code & lt ; & lt ; } ( shift left ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 19 " > Java <nl> @ @ - 2405 , 7 + 2404 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int SL = GeneratedJavaTokenTypes . SL ; <nl> / * * <nl> - * The < code > & gt ; & gt ; < / code > ( signed shift right ) operator . <nl> + * The { @ code & gt ; & gt ; } ( signed shift right ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 19 " > Java <nl> @ @ - 2414 , 7 + 2413 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int SR = GeneratedJavaTokenTypes . SR ; <nl> / * * <nl> - * The < code > & gt ; & gt ; & gt ; < / code > ( unsigned shift right ) operator . <nl> + * The { @ code & gt ; & gt ; & gt ; } ( unsigned shift right ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 19 " > Java <nl> @ @ - 2423 , 7 + 2422 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int BSR = GeneratedJavaTokenTypes . BSR ; <nl> / * * <nl> - * The < code > + < / code > ( addition ) operator . <nl> + * The { @ code + } ( addition ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 18 " > Java <nl> @ @ - 2432 , 7 + 2431 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int PLUS = GeneratedJavaTokenTypes . PLUS ; <nl> / * * <nl> - * The < code > - < / code > ( subtraction ) operator . <nl> + * The { @ code - } ( subtraction ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 18 " > Java <nl> @ @ - 2441 , 7 + 2440 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int MINUS = GeneratedJavaTokenTypes . MINUS ; <nl> / * * <nl> - * The < code > / < / code > ( division ) operator . <nl> + * The { @ code / } ( division ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 17 . 2 " > Java <nl> @ @ - 2450 , 7 + 2449 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int DIV = GeneratedJavaTokenTypes . DIV ; <nl> / * * <nl> - * The < code > % < / code > ( remainder ) operator . <nl> + * The { @ code % } ( remainder ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 17 . 3 " > Java <nl> @ @ - 2459 , 7 + 2458 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int MOD = GeneratedJavaTokenTypes . MOD ; <nl> / * * <nl> - * The < code > + + < / code > ( prefix increment ) operator . <nl> + * The { @ code + + } ( prefix increment ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 1 " > Java <nl> @ @ - 2469 , 7 + 2468 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int INC = GeneratedJavaTokenTypes . INC ; <nl> / * * <nl> - * The < code > - - < / code > ( prefix decrement ) operator . <nl> + * The { @ code - - } ( prefix decrement ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 2 " > Java <nl> @ @ - 2479 , 7 + 2478 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int DEC = GeneratedJavaTokenTypes . DEC ; <nl> / * * <nl> - * The < code > ~ < / code > ( bitwise complement ) operator . <nl> + * The { @ code ~ } ( bitwise complement ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 5 " > Java <nl> @ @ - 2488 , 7 + 2487 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int BNOT = GeneratedJavaTokenTypes . BNOT ; <nl> / * * <nl> - * The < code > & # 33 ; < / code > ( logical complement ) operator . <nl> + * The { @ code & # 33 ; } ( logical complement ) operator . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 6 " > Java <nl> @ @ - 2497 , 7 + 2496 , 7 @ @ public final class TokenTypes { <nl> * * / <nl> public static final int LNOT = GeneratedJavaTokenTypes . LNOT ; <nl> / * * <nl> - * The < code > true < / code > keyword . <nl> + * The { @ code true } keyword . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 10 . 3 " > Java <nl> @ @ - 2509 , 7 + 2508 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ true ; <nl> <nl> / * * <nl> - * The < code > false < / code > keyword . <nl> + * The { @ code false } keyword . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 10 . 3 " > Java <nl> @ @ - 2521 , 7 + 2520 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ false ; <nl> <nl> / * * <nl> - * The < code > null < / code > keyword . <nl> + * The { @ code null } keyword . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 10 . 7 " > Java <nl> @ @ - 2532 , 7 + 2531 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . LITERAL _ null ; <nl> <nl> / * * <nl> - * The < code > new < / code > keyword . This element is used to define <nl> + * The { @ code new } keyword . This element is used to define <nl> * new instances of objects , new arrays , and new anonymous inner <nl> * classes . <nl> * <nl> @ @ - 2701 , 7 + 2700 , 7 @ @ public final class TokenTypes { <nl> <nl> / * * <nl> * A single precision floating point literal . This is a floating <nl> - * point number with an < code > F < / code > or < code > f < / code > suffix . <nl> + * point number with an { @ code F } or { @ code f } suffix . <nl> * <nl> * @ see < a <nl> * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 10 . 2 " > Java <nl> @ @ - 2712 , 7 + 2711 , 7 @ @ public final class TokenTypes { <nl> public static final int NUM _ FLOAT = GeneratedJavaTokenTypes . NUM _ FLOAT ; <nl> / * * <nl> * A long integer literal . These are almost the same as integer <nl> - * literals , but they have an < code > L < / code > or < code > l < / code > <nl> + * literals , but they have an { @ code L } or { @ code l } <nl> * ( ell ) suffix . <nl> * <nl> * @ see < a <nl> @ @ - 2724 , 7 + 2723 , 7 @ @ public final class TokenTypes { <nl> public static final int NUM _ LONG = GeneratedJavaTokenTypes . NUM _ LONG ; <nl> / * * <nl> * A double precision floating point literal . This is a floating <nl> - * point number with an optional < code > D < / code > or < code > d < / code > <nl> + * point number with an optional { @ code D } or { @ code d } <nl> * suffix . <nl> * <nl> * @ see < a <nl> @ @ - 2736 , 7 + 2735 , 7 @ @ public final class TokenTypes { <nl> public static final int NUM _ DOUBLE = GeneratedJavaTokenTypes . NUM _ DOUBLE ; <nl> <nl> / * * <nl> - * The < code > assert < / code > keyword . This is only for Java 1 . 4 and <nl> + * The { @ code assert } keyword . This is only for Java 1 . 4 and <nl> * later . <nl> * <nl> * < p > For example : < / p > <nl> @ @ - 2874 , 7 + 2873 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . ENUM _ DEF ; <nl> <nl> / * * <nl> - * The < code > enum < / code > keyword . This element appears <nl> + * The { @ code enum } keyword . This element appears <nl> * as part of an enum declaration . <nl> * * / <nl> public static final int ENUM = <nl> @ @ - 2942 , 7 + 2941 , 7 @ @ public final class TokenTypes { <nl> <nl> / * * <nl> * A for - each clause . This is a child of <nl> - * < code > LITERAL _ FOR < / code > . The children of this element may be <nl> + * { @ code LITERAL _ FOR } . The children of this element may be <nl> * a parameter definition , the colon literal and an expression . <nl> * <nl> * < p > For example : < / p > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java b / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java <nl> index f565438 . . 74b2a3f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java <nl> @ @ - 72 , 12 + 72 , 24 @ @ public final class TokenTypesDoclet { <nl> final FieldDoc [ ] fields = classes [ 0 ] . fields ( ) ; <nl> for ( final FieldDoc field : fields ) { <nl> if ( field . isStatic ( ) & & field . isPublic ( ) & & field . isFinal ( ) <nl> - & & " int " . equals ( field . type ( ) . qualifiedTypeName ( ) ) ) { <nl> - / / We have to filter " Text " tags because of jdk parsing bug <nl> - / / till Oracle reference id : 9050448 <nl> - if ( field . firstSentenceTags ( ) . length ! = 1 <nl> - & & Arrays . stream ( field . firstSentenceTags ( ) ) <nl> - . filter ( tag - > ! " Text " . equals ( tag . name ( ) ) ) . count ( ) ! = 1 ) { <nl> + & & " int " . equals ( field . type ( ) . qualifiedTypeName ( ) ) ) { <nl> + <nl> + final String firstSentence ; <nl> + <nl> + if ( field . firstSentenceTags ( ) . length = = 1 ) { <nl> + firstSentence = field . firstSentenceTags ( ) [ 0 ] . text ( ) ; <nl> + } <nl> + else if ( Arrays . stream ( field . firstSentenceTags ( ) ) <nl> + . filter ( tag - > ! " Text " . equals ( tag . name ( ) ) ) . count ( ) = = 1 ) { <nl> + / / We have to filter " Text " tags because of jdk parsing bug <nl> + / / till JDK - 8186270 <nl> + firstSentence = field . firstSentenceTags ( ) [ 0 ] . text ( ) <nl> + + " < code > " <nl> + + field . firstSentenceTags ( ) [ 1 ] . text ( ) <nl> + + " < / code > " <nl> + + field . firstSentenceTags ( ) [ 2 ] . text ( ) ; <nl> + } <nl> + else { <nl> final List < Tag > tags = Arrays . asList ( field . firstSentenceTags ( ) ) ; <nl> final String joinedTags = tags <nl> . stream ( ) <nl> @ @ - 88 , 8 + 100 , 7 @ @ public final class TokenTypesDoclet { <nl> field . toString ( ) , joinedTags ) ; <nl> throw new IllegalArgumentException ( message ) ; <nl> } <nl> - writer . println ( field . name ( ) + " = " <nl> - + field . firstSentenceTags ( ) [ 0 ] . text ( ) ) ; <nl> + writer . println ( field . name ( ) + " = " + firstSentence ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java <nl> index 051aea2 . . ae5924b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java <nl> @ @ - 30 , 8 + 30 , 28 @ @ public class TokenTypesTest { <nl> @ Test <nl> public void testGetShortDescription ( ) { <nl> assertEquals ( " short description for EQUAL " , <nl> - " The < code > = = < / code > ( equal ) operator . " , TokenUtils <nl> - . getShortDescription ( " EQUAL " ) ) ; <nl> + " The < code > = = < / code > ( equal ) operator . " , <nl> + TokenUtils . getShortDescription ( " EQUAL " ) ) ; <nl> + <nl> + assertEquals ( " short description for LAND " , <nl> + " The < code > & amp ; & amp ; < / code > ( conditional AND ) operator . " , <nl> + TokenUtils . getShortDescription ( " LAND " ) ) ; <nl> + <nl> + assertEquals ( " short description for LCURLY " , <nl> + " A left ( curly ) brace ( < code > & # 123 ; < / code > ) . " , <nl> + TokenUtils . getShortDescription ( " LCURLY " ) ) ; <nl> + <nl> + assertEquals ( " short description for SR _ ASSIGN " , <nl> + " The < code > & gt ; & gt ; = < / code > ( signed right shift assignment ) " , <nl> + TokenUtils . getShortDescription ( " SR _ ASSIGN " ) ) ; <nl> + <nl> + assertEquals ( " short description for SL " , <nl> + " The < code > & lt ; & lt ; < / code > ( shift left ) operator . " , <nl> + TokenUtils . getShortDescription ( " SL " ) ) ; <nl> + <nl> + assertEquals ( " short description for BSR " , <nl> + " The < code > & gt ; & gt ; & gt ; < / code > ( unsigned shift right ) operator . " , <nl> + TokenUtils . getShortDescription ( " BSR " ) ) ; <nl> } <nl> <nl> @ Test

TEST DIFF:
diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words 
 index f04b022 . . 47cc292 100644 
 - - - a / . ci / jsoref - spellchecker / whitelist . words 
 + + + b / . ci / jsoref - spellchecker / whitelist . words 
 @ @ - 1085 , 6 + 1085 , 7 @ @ Ruslan 
 rw 
 sabaka 
 Sameline 
 + saxonica 
 sbe 
 sbt 
 scache 
 diff - - git a / config / version - number - rules . xml b / config / version - number - rules . xml 
 index 874f936 . . 83826fb 100644 
 - - - a / config / version - number - rules . xml 
 + + + b / config / version - number - rules . xml 
 @ @ - 28 , 12 + 28 , 6 @ @ 
 < ignoreVersion type = " regex " > 3 . 10 . 0 < / ignoreVersion > 
 < / ignoreVersions > 
 < / rule > 
 - < rule groupId = " net . sf . saxon " artifactId = " Saxon - HE " > 
 - < ignoreVersions > 
 - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 6149 - - > 
 - < ignoreVersion type = " regex " > 9 . 9 . * < / ignoreVersion > 
 - < / ignoreVersions > 
 - < / rule > 
 < rule groupId = " org . apache . maven . plugins " artifactId = " maven - release - plugin " > 
 < ignoreVersions > 
 < ! - - we use 2 . 1 version that is defined at our parent 
 diff - - git a / pom . xml b / pom . xml 
 index 300df3e . . 4aba65a 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 206 , 7 + 206 , 7 @ @ 
 < pmd . version > 6 . 6 . 0 < / pmd . version > 
 < maven . jacoco . plugin . version > 0 . 8 . 2 < / maven . jacoco . plugin . version > 
 < powermock . version > 2 . 0 . 0 - beta . 5 < / powermock . version > 
 - < saxon . version > 9 . 8 . 0 - 14 < / saxon . version > 
 + < saxon . version > 9 . 9 . 0 - 2 < / saxon . version > 
 < maven . checkstyle . plugin . version > 3 . 0 . 0 < / maven . checkstyle . plugin . version > 
 < maven . sevntu . checkstyle . plugin . version > 1 . 32 . 0 < / maven . sevntu . checkstyle . plugin . version > 
 < maven . sevntu - checkstyle - check . checkstyle . version > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilter . java 
 index dba40dd . . 7f3e492 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / XpathFilter . java 
 @ @ - 22 , 6 + 22 , 7 @ @ package com . puppycrawl . tools . checkstyle . filters ; 
 import java . util . List ; 
 import java . util . Objects ; 
 import java . util . regex . Pattern ; 
 + import java . util . stream . Collectors ; 
 
 import com . puppycrawl . tools . checkstyle . TreeWalkerAuditEvent ; 
 import com . puppycrawl . tools . checkstyle . TreeWalkerFilter ; 
 @ @ - 156 , 9 + 157 , 9 @ @ public class XpathFilter implements TreeWalkerFilter { 
 } 
 else { 
 isMatching = false ; 
 - final List < Item > items = getItems ( event ) ; 
 - for ( Item item : items ) { 
 - final AbstractNode abstractNode = ( AbstractNode ) item ; 
 + final List < AbstractNode > nodes = getItems ( event ) 
 + . stream ( ) . map ( item - > ( AbstractNode ) item ) . collect ( Collectors . toList ( ) ) ; 
 + for ( AbstractNode abstractNode : nodes ) { 
 isMatching = abstractNode . getTokenType ( ) = = event . getTokenType ( ) 
 & & abstractNode . getLineNumber ( ) = = event . getLine ( ) 
 & & abstractNode . getColumnNumber ( ) = = event . getColumnCharIndex ( ) ; 
 @ @ - 175 , 7 + 176 , 7 @ @ public class XpathFilter implements TreeWalkerFilter { 
 * @ param event { @ code TreeWalkerAuditEvent } object 
 * @ return list of nodes matching xpath expression given event 
 * / 
 - private List < Item > getItems ( TreeWalkerAuditEvent event ) { 
 + private List < Item < ? > > getItems ( TreeWalkerAuditEvent event ) { 
 final RootNode rootNode ; 
 if ( event . getRootAst ( ) = = null ) { 
 rootNode = null ; 
 @ @ - 183 , 7 + 184 , 7 @ @ public class XpathFilter implements TreeWalkerFilter { 
 else { 
 rootNode = new RootNode ( event . getRootAst ( ) ) ; 
 } 
 - final List < Item > items ; 
 + final List < Item < ? > > items ; 
 try { 
 final XPathDynamicContext xpathDynamicContext = 
 xpathExpression . createDynamicContext ( rootNode ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / AbstractNode . java b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / AbstractNode . java 
 index fc97d03 . . b16dac9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / AbstractNode . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / AbstractNode . java 
 @ @ - 28 , 10 + 28 , 8 @ @ import net . sf . saxon . Configuration ; 
 import net . sf . saxon . event . Receiver ; 
 import net . sf . saxon . expr . parser . Location ; 
 import net . sf . saxon . om . AtomicSequence ; 
 - import net . sf . saxon . om . Item ; 
 import net . sf . saxon . om . NamespaceBinding ; 
 import net . sf . saxon . om . NodeInfo ; 
 - import net . sf . saxon . om . SequenceIterator ; 
 import net . sf . saxon . om . TreeInfo ; 
 import net . sf . saxon . pattern . NodeTest ; 
 import net . sf . saxon . tree . iter . AxisIterator ; 
 @ @ - 271 , 39 + 269 , 6 @ @ public abstract class AbstractNode implements NodeInfo { 
 } 
 
 / * * 
 - * Compares current object with specified for position . Throws 
 - * { @ code UnsupportedOperationException } , because no child 
 - * class implements it and this method is not used for querying . 
 - * @ param nodeInfo another { @ code NodeInfo } object 
 - * @ return constant from { @ code AxisInfo } representing order of 
 - * current object to specified one 
 - * / 
 - @ Override 
 - public final int comparePosition ( NodeInfo nodeInfo ) { 
 - throw throwUnsupportedOperationException ( ) ; 
 - } 
 - 
 - / * * 
 - * Returns head . Throws { @ code UnsupportedOperationException } , because no child 
 - * class implements it and this method is not used for querying . 
 - * @ return head 
 - * / 
 - @ Override 
 - public final Item head ( ) { 
 - throw throwUnsupportedOperationException ( ) ; 
 - } 
 - 
 - / * * 
 - * Returns iterator . Throws { @ code UnsupportedOperationException } , because no child 
 - * class implements it and this method is not used for querying . 
 - * @ return iterator 
 - * / 
 - @ Override 
 - public final SequenceIterator iterate ( ) { 
 - throw throwUnsupportedOperationException ( ) ; 
 - } 
 - 
 - / * * 
 * Returns CharSequence string value . Throws { @ code UnsupportedOperationException } , 
 * because no child class implements it and this method is not used for querying . 
 * @ return CharSequence string value 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / ElementNode . java b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / ElementNode . java 
 index 1971e05 . . 034f50d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / ElementNode . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / ElementNode . java 
 @ @ - 169 , 23 + 169 , 31 @ @ public class ElementNode extends AbstractNode { 
 final AxisIterator result ; 
 switch ( axisNumber ) { 
 case AxisInfo . ANCESTOR : 
 - result = new Navigator . AncestorEnumeration ( this , false ) ; 
 + try ( AxisIterator iterator = new Navigator . AncestorEnumeration ( this , false ) ) { 
 + result = iterator ; 
 + } 
 break ; 
 case AxisInfo . ANCESTOR _ OR _ SELF : 
 - result = new Navigator . AncestorEnumeration ( this , true ) ; 
 + try ( AxisIterator iterator = new Navigator . AncestorEnumeration ( this , true ) ) { 
 + result = iterator ; 
 + } 
 break ; 
 case AxisInfo . ATTRIBUTE : 
 if ( attributes = = null ) { 
 result = EmptyIterator . OfNodes . THE _ INSTANCE ; 
 } 
 else { 
 - result = new ArrayIterator . OfNodes ( attributes ) ; 
 + try ( AxisIterator iterator = new ArrayIterator . OfNodes ( attributes ) ) { 
 + result = iterator ; 
 + } 
 } 
 break ; 
 case AxisInfo . CHILD : 
 if ( hasChildNodes ( ) ) { 
 - result = new ArrayIterator . OfNodes ( 
 - getChildren ( ) . toArray ( EMPTY _ ABSTRACT _ NODE _ ARRAY ) ) ; 
 + try ( AxisIterator iterator = new ArrayIterator . OfNodes ( 
 + getChildren ( ) . toArray ( EMPTY _ ABSTRACT _ NODE _ ARRAY ) ) ) { 
 + result = iterator ; 
 + } 
 } 
 else { 
 result = EmptyIterator . OfNodes . THE _ INSTANCE ; 
 @ @ - 193 , 20 + 201 , 30 @ @ public class ElementNode extends AbstractNode { 
 break ; 
 case AxisInfo . DESCENDANT : 
 if ( hasChildNodes ( ) ) { 
 - result = new Navigator . DescendantEnumeration ( this , false , true ) ; 
 + try ( AxisIterator iterator = 
 + new Navigator . DescendantEnumeration ( this , false , true ) ) { 
 + result = iterator ; 
 + } 
 } 
 else { 
 result = EmptyIterator . OfNodes . THE _ INSTANCE ; 
 } 
 break ; 
 case AxisInfo . DESCENDANT _ OR _ SELF : 
 - result = new Navigator . DescendantEnumeration ( this , true , true ) ; 
 + try ( AxisIterator iterator = 
 + new Navigator . DescendantEnumeration ( this , true , true ) ) { 
 + result = iterator ; 
 + } 
 break ; 
 case AxisInfo . PARENT : 
 - result = SingleNodeIterator . makeIterator ( parent ) ; 
 + try ( AxisIterator iterator = SingleNodeIterator . makeIterator ( parent ) ) { 
 + result = iterator ; 
 + } 
 break ; 
 case AxisInfo . SELF : 
 - result = SingleNodeIterator . makeIterator ( this ) ; 
 + try ( AxisIterator iterator = SingleNodeIterator . makeIterator ( this ) ) { 
 + result = iterator ; 
 + } 
 break ; 
 default : 
 throw throwUnsupportedOperationException ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / RootNode . java b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / RootNode . java 
 index daa1c9c . . 835cb09 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / xpath / RootNode . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / xpath / RootNode . java 
 @ @ - 152 , 12 + 152 , 16 @ @ public class RootNode extends AbstractNode { 
 break ; 
 case AxisInfo . ANCESTOR _ OR _ SELF : 
 case AxisInfo . SELF : 
 - result = SingleNodeIterator . makeIterator ( this ) ; 
 + try ( AxisIterator iterator = SingleNodeIterator . makeIterator ( this ) ) { 
 + result = iterator ; 
 + } 
 break ; 
 case AxisInfo . CHILD : 
 if ( hasChildNodes ( ) ) { 
 - result = new ArrayIterator . OfNodes ( 
 - getChildren ( ) . toArray ( EMPTY _ ABSTRACT _ NODE _ ARRAY ) ) ; 
 + try ( AxisIterator iterator = new ArrayIterator . OfNodes ( 
 + getChildren ( ) . toArray ( EMPTY _ ABSTRACT _ NODE _ ARRAY ) ) ) { 
 + result = iterator ; 
 + } 
 } 
 else { 
 result = EmptyIterator . OfNodes . THE _ INSTANCE ; 
 @ @ - 165 , 14 + 169 , 20 @ @ public class RootNode extends AbstractNode { 
 break ; 
 case AxisInfo . DESCENDANT : 
 if ( hasChildNodes ( ) ) { 
 - result = new Navigator . DescendantEnumeration ( this , false , true ) ; 
 + try ( AxisIterator iterator = 
 + new Navigator . DescendantEnumeration ( this , false , true ) ) { 
 + result = iterator ; 
 + } 
 } 
 else { 
 result = EmptyIterator . OfNodes . THE _ INSTANCE ; 
 } 
 break ; 
 case AxisInfo . DESCENDANT _ OR _ SELF : 
 - result = new Navigator . DescendantEnumeration ( this , true , true ) ; 
 + try ( AxisIterator iterator = 
 + new Navigator . DescendantEnumeration ( this , true , true ) ) { 
 + result = iterator ; 
 + } 
 break ; 
 default : 
 throw throwUnsupportedOperationException ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / XpathUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / XpathUtil . java 
 index e0240b6 . . fa3d0fd 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / XpathUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / XpathUtil . java 
 @ @ - 20 , 9 + 20 , 11 @ @ 
 package com . puppycrawl . tools . checkstyle . internal . utils ; 
 
 import java . util . List ; 
 + import java . util . stream . Collectors ; 
 
 import com . puppycrawl . tools . checkstyle . xpath . AbstractNode ; 
 import net . sf . saxon . om . Item ; 
 + import net . sf . saxon . om . NodeInfo ; 
 import net . sf . saxon . sxpath . XPathDynamicContext ; 
 import net . sf . saxon . sxpath . XPathEvaluator ; 
 import net . sf . saxon . sxpath . XPathExpression ; 
 @ @ - 43 , 13 + 45 , 14 @ @ public final class XpathUtil { 
 * @ param rootNode { @ code NodeInfo } node context 
 * @ return list of nodes matching xpath expression given node context 
 * / 
 - public static List < Item > getXpathItems ( String xpath , AbstractNode rootNode ) 
 + public static List < NodeInfo > getXpathItems ( String xpath , AbstractNode rootNode ) 
 throws XPathException { 
 final XPathEvaluator xpathEvaluator = new XPathEvaluator ( ) ; 
 final XPathExpression xpathExpression = xpathEvaluator . createExpression ( xpath ) ; 
 final XPathDynamicContext xpathDynamicContext = xpathExpression 
 . createDynamicContext ( rootNode ) ; 
 - return xpathExpression . evaluate ( xpathDynamicContext ) ; 
 + final List < Item < ? > > items = xpathExpression . evaluate ( xpathDynamicContext ) ; 
 + return items . stream ( ) . map ( item - > ( NodeInfo ) item ) . collect ( Collectors . toList ( ) ) ; 
 } 
 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / AttributeNodeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / AttributeNodeTest . java 
 index 7b62f34 . . 9638d67 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / AttributeNodeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / AttributeNodeTest . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import org . junit . Before ; 
 import org . junit . Test ; 
 
 import net . sf . saxon . om . AxisInfo ; 
 + import net . sf . saxon . tree . iter . AxisIterator ; 
 
 public class AttributeNodeTest { 
 
 @ @ - 85 , 8 + 86 , 7 @ @ public class AttributeNodeTest { 
 
 @ Test 
 public void testIterate ( ) { 
 - try { 
 - attributeNode . iterateAxis ( AxisInfo . SELF ) ; 
 + try ( AxisIterator ignored = attributeNode . iterateAxis ( AxisInfo . SELF ) ) { 
 fail ( " Exception is excepted " ) ; 
 } 
 catch ( UnsupportedOperationException ex ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / ElementNodeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / ElementNodeTest . java 
 index c1e0305 . . e6d5dce 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / ElementNodeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / ElementNodeTest . java 
 @ @ - 33 , 7 + 33 , 6 @ @ import com . puppycrawl . tools . checkstyle . AbstractPathTestSupport ; 
 import com . puppycrawl . tools . checkstyle . JavaParser ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 - import net . sf . saxon . om . Item ; 
 import net . sf . saxon . om . NodeInfo ; 
 
 public class ElementNodeTest extends AbstractPathTestSupport { 
 @ @ - 55 , 18 + 54 , 18 @ @ public class ElementNodeTest extends AbstractPathTestSupport { 
 @ Test 
 public void testGetParent ( ) throws Exception { 
 final String xpath = " / / OBJBLOCK " ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; 
 - final AbstractNode parent = ( AbstractNode ) ( ( NodeInfo ) nodes . get ( 0 ) ) . getParent ( ) ; 
 + final AbstractNode parent = ( AbstractNode ) nodes . get ( 0 ) . getParent ( ) ; 
 assertEquals ( " Invalid token type " , TokenTypes . CLASS _ DEF , parent . getTokenType ( ) ) ; 
 } 
 
 @ Test 
 public void testRootOfElementNode ( ) throws Exception { 
 final String xpath = " / / OBJBLOCK " ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; 
 - final AbstractNode root = ( AbstractNode ) ( ( NodeInfo ) nodes . get ( 0 ) ) . getRoot ( ) ; 
 + final AbstractNode root = ( AbstractNode ) nodes . get ( 0 ) . getRoot ( ) ; 
 assertEquals ( " Invalid token type " , TokenTypes . EOF , root . getTokenType ( ) ) ; 
 assertTrue ( " Should return true , because selected node is RootNode " , 
 root instanceof RootNode ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / RootNodeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / RootNodeTest . java 
 index aae5b3b . . 93b38e3 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / RootNodeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / RootNodeTest . java 
 @ @ - 36 , 8 + 36 , 8 @ @ import com . puppycrawl . tools . checkstyle . JavaParser ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import net . sf . saxon . om . AxisInfo ; 
 - import net . sf . saxon . om . Item ; 
 import net . sf . saxon . om . NamespaceBinding ; 
 + import net . sf . saxon . om . NodeInfo ; 
 import net . sf . saxon . tree . iter . EmptyIterator ; 
 
 public class RootNodeTest extends AbstractPathTestSupport { 
 @ @ - 59 , 7 + 59 , 7 @ @ public class RootNodeTest extends AbstractPathTestSupport { 
 @ Test 
 public void testXpath ( ) throws Exception { 
 final String xpath = " / " ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; 
 assertTrue ( " Should return true , because selected node is RootNode " , 
 nodes . get ( 0 ) instanceof RootNode ) ; 
 @ @ - 103 , 19 + 103 , 6 @ @ public class RootNodeTest extends AbstractPathTestSupport { 
 } 
 
 @ Test 
 - public void testIterateWithoutArgument ( ) { 
 - try { 
 - rootNode . iterate ( ) ; 
 - fail ( " Exception is excepted " ) ; 
 - } 
 - catch ( UnsupportedOperationException ex ) { 
 - assertEquals ( " Invalid exception message " , 
 - " Operation is not supported " , 
 - ex . getMessage ( ) ) ; 
 - } 
 - } 
 - 
 - @ Test 
 public void testGetAttributeValue ( ) { 
 try { 
 rootNode . getAttributeValue ( " " , " " ) ; 
 @ @ - 285 , 34 + 272 , 6 @ @ public class RootNodeTest extends AbstractPathTestSupport { 
 } 
 
 @ Test 
 - public void testComparePosition ( ) { 
 - try { 
 - rootNode . comparePosition ( null ) ; 
 - fail ( " Exception is excepted " ) ; 
 - } 
 - catch ( UnsupportedOperationException ex ) { 
 - assertEquals ( 
 - " Invalid exception message " , 
 - " Operation is not supported " , 
 - ex . getMessage ( ) ) ; 
 - } 
 - } 
 - 
 - @ Test 
 - public void testHead ( ) { 
 - try { 
 - rootNode . head ( ) ; 
 - fail ( " Exception is excepted " ) ; 
 - } 
 - catch ( UnsupportedOperationException ex ) { 
 - assertEquals ( 
 - " Invalid exception message " , 
 - " Operation is not supported " , 
 - ex . getMessage ( ) ) ; 
 - } 
 - } 
 - 
 - @ Test 
 public void testGetStringValueCs ( ) { 
 try { 
 rootNode . getStringValueCS ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / XpathMapperTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / XpathMapperTest . java 
 index d1ada4c . . f4d66b8 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / xpath / XpathMapperTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / xpath / XpathMapperTest . java 
 @ @ - 36 , 8 + 36 , 7 @ @ import com . puppycrawl . tools . checkstyle . JavaParser ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import net . sf . saxon . om . AxisInfo ; 
 - import net . sf . saxon . om . Item ; 
 - import net . sf . saxon . trans . XPathException ; 
 + import net . sf . saxon . om . NodeInfo ; 
 import net . sf . saxon . tree . iter . EmptyIterator ; 
 
 public class XpathMapperTest extends AbstractPathTestSupport { 
 @ @ - 188 , 7 + 187 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryAllElementsWithAttribute ( ) throws Exception { 
 final String xpath = " / / * [ @ text ] " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 18 , nodes . size ( ) ) ; 
 } 
 
 @ @ - 212 , 7 + 211 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryAllVariableDefinitionsWithAttribute ( ) throws Exception { 
 final String xpath = " / / VARIABLE _ DEF [ @ * ] " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 4 , nodes . size ( ) ) ; 
 } 
 
 @ @ - 220 , 7 + 219 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryAllVariableDefWrongAttribute ( ) throws Exception { 
 final String xpath = " / / VARIABLE _ DEF [ @ qwe ] " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 0 , nodes . size ( ) ) ; 
 } 
 
 @ @ - 228 , 11 + 227 , 11 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryAllMethodDefinitionsInContext ( ) throws Exception { 
 final String objectXpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] / / OBJBLOCK " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > objectNodes = getXpathItems ( objectXpath , rootNode ) ; 
 + final List < NodeInfo > objectNodes = getXpathItems ( objectXpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 1 , objectNodes . size ( ) ) ; 
 final AbstractNode objNode = ( AbstractNode ) objectNodes . get ( 0 ) ; 
 final String methodsXpath = " METHOD _ DEF " ; 
 - final List < Item > methodsNodes = getXpathItems ( methodsXpath , objNode ) ; 
 + final List < NodeInfo > methodsNodes = getXpathItems ( methodsXpath , objNode ) ; 
 assertEquals ( " Invalid number of nodes " , 2 , methodsNodes . size ( ) ) ; 
 final DetailAST [ ] actual = convertToArray ( methodsNodes ) ; 
 final DetailAST expectedMethodDefNode = getSiblingByType ( rootNode . getUnderlyingNode ( ) , 
 @ @ - 248 , 7 + 247 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryAllClassDefinitions ( ) throws Exception { 
 final String xpath = " CLASS _ DEF " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; 
 final AbstractNode classDefNode = ( AbstractNode ) nodes . get ( 0 ) ; 
 assertEquals ( " Invalid number of nodes " , 3 , classDefNode . getLineNumber ( ) ) ; 
 @ @ - 307 , 7 + 306 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryClassDefinitionByClassName ( ) throws Exception { 
 final String xpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 final DetailAST [ ] actual = convertToArray ( nodes ) ; 
 final DetailAST expectedClassDefNode = getSiblingByType ( rootNode . getUnderlyingNode ( ) , 
 TokenTypes . CLASS _ DEF ) ; 
 @ @ - 323 , 7 + 322 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryWrongClassName ( ) throws Exception { 
 final String xpath = " / CLASS _ DEF [ @ text = ' WrongName ' ] " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertTrue ( " Should return true , because no item matches xpath " , nodes . isEmpty ( ) ) ; 
 } 
 
 @ @ - 331 , 7 + 330 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryWrongXpath ( ) throws Exception { 
 final String xpath = " / WRONG _ XPATH " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertTrue ( " Should return true , because no item matches xpath " , nodes . isEmpty ( ) ) ; 
 } 
 
 @ @ - 369 , 7 + 368 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryDescendant ( ) throws Exception { 
 final String xpath = " / / METHOD _ DEF / descendant : : EXPR " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 6 , nodes . size ( ) ) ; 
 } 
 
 @ @ - 391 , 7 + 390 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryNoChild ( ) throws Exception { 
 final String xpath = " / / RCURLY / METHOD _ DEF " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertTrue ( " Should return true , because no item matches xpath " , nodes . isEmpty ( ) ) ; 
 } 
 
 @ @ - 399 , 7 + 398 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryNoDescendant ( ) throws Exception { 
 final String xpath = " / / RCURLY / descendant : : METHOD _ DEF " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertTrue ( " Should return true , because no item matches xpath " , nodes . isEmpty ( ) ) ; 
 } 
 
 @ @ - 411 , 7 + 410 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 getXpathItems ( xpath , rootNode ) ; 
 fail ( " Exception is excepted " ) ; 
 } 
 - catch ( XPathException ex ) { 
 + catch ( UnsupportedOperationException ex ) { 
 assertEquals ( " Invalid number of nodes " , " Operation is not supported " , ex . getMessage ( ) ) ; 
 } 
 } 
 @ @ - 424 , 7 + 423 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 getXpathItems ( xpath , rootNode ) ; 
 fail ( " Exception is excepted " ) ; 
 } 
 - catch ( XPathException ex ) { 
 + catch ( UnsupportedOperationException ex ) { 
 assertEquals ( " Invalid number of nodes " , " Operation is not supported " , ex . getMessage ( ) ) ; 
 } 
 } 
 @ @ - 433 , 7 + 432 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQuerySelf ( ) throws Exception { 
 final String objectXpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] / / OBJBLOCK " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > objectNodes = getXpathItems ( objectXpath , rootNode ) ; 
 + final List < NodeInfo > objectNodes = getXpathItems ( objectXpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 1 , objectNodes . size ( ) ) ; 
 final AbstractNode objNode = ( AbstractNode ) objectNodes . get ( 0 ) ; 
 final String methodsXpath = " self : : OBJBLOCK " ; 
 @ @ - 460 , 7 + 459 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryNonExistentAttribute ( ) throws Exception { 
 final String xpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 final ElementNode classDefNode = ( ElementNode ) nodes . get ( 0 ) ; 
 try { 
 classDefNode . getAttributeValue ( " " , " noneExistingAttribute " ) ; 
 @ @ - 475 , 7 + 474 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryRootSelf ( ) throws Exception { 
 final String xpath = " self : : node ( ) " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 1 , nodes . size ( ) ) ; 
 } 
 
 @ @ - 496 , 7 + 495 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryNonExistentAnnotation ( ) throws Exception { 
 final String xpath = " / / ANNOTATION [ @ text = ' SpringBootApplication ' ] " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAnnotation . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 0 , nodes . size ( ) ) ; 
 } 
 
 @ @ - 515 , 7 + 514 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryEnumElementsNumber ( ) throws Exception { 
 final String xpath = " / ENUM _ DEF / OBJBLOCK / ENUM _ CONSTANT _ DEF " ; 
 final RootNode enumRootNode = getRootNode ( " InputXpathMapperEnum . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , enumRootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , enumRootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 3 , nodes . size ( ) ) ; 
 } 
 
 @ @ - 551 , 7 + 550 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testQueryInterfaceMethodDefNumber ( ) throws Exception { 
 final String xpath = " / INTERFACE _ DEF / OBJBLOCK / METHOD _ DEF " ; 
 final RootNode interfaceRootNode = getRootNode ( " InputXpathMapperInterface . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , interfaceRootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , interfaceRootNode ) ; 
 assertEquals ( " Invalid number of nodes " , 4 , nodes . size ( ) ) ; 
 } 
 
 @ @ - 574 , 7 + 573 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 public void testIdent ( ) throws Exception { 
 final String xpath = " / CLASS _ DEF [ @ text = ' InputXpathMapperAst ' ] / IDENT " ; 
 final RootNode rootNode = getRootNode ( " InputXpathMapperAst . java " ) ; 
 - final List < Item > nodes = getXpathItems ( xpath , rootNode ) ; 
 + final List < NodeInfo > nodes = getXpathItems ( xpath , rootNode ) ; 
 final DetailAST [ ] actual = convertToArray ( nodes ) ; 
 final DetailAST expectedIdentNode = getSiblingByType ( rootNode . getUnderlyingNode ( ) , 
 TokenTypes . CLASS _ DEF ) 
 @ @ - 590 , 7 + 589 , 7 @ @ public class XpathMapperTest extends AbstractPathTestSupport { 
 return new RootNode ( rootAst ) ; 
 } 
 
 - private static DetailAST [ ] convertToArray ( List < Item > nodes ) { 
 + private static DetailAST [ ] convertToArray ( List < NodeInfo > nodes ) { 
 final DetailAST [ ] result = new DetailAST [ nodes . size ( ) ] ; 
 for ( int i = 0 ; i < nodes . size ( ) ; i + + ) { 
 final AbstractNode abstractNode = ( AbstractNode ) nodes . get ( i ) ;

NEAREST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index bbade63 . . 5600254 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 2129 , 8 + 2129 , 6 @ @ isolated classes and we cannot put them to separate package as it will affect us 
 < option value = " NonFinalFieldReferencedInHashCode " / > 
 < ! - - violations in DetailAST will be addressed further - - > 
 < option value = " FieldNotUsedInToString " / > 
 - < ! - - till # 4805 - - > 
 - < option value = " HtmlTagCanBeJavadocTag " / > 
 < ! - - WeakerAccess reports ' can be protected ' that we can not change - - > 
 < option value = " WeakerAccess " / > 
 < ! - - we need to work with AntClassLoader , there is no way to avoid this - - > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 index 790b4b9 . . 2410faa 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 @ @ - 30 , 7 + 30 , 6 @ @ import com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaTokenTypes ; 
 * 
 * @ author Oliver Burn 
 * @ author < a href = " mailto : dobratzp @ ele . uri . edu " > Peter Dobratz < / a > 
 - * @ noinspection HtmlTagCanBeJavadocTag 
 * / 
 public final class TokenTypes { 
 / / The following three types are never part of an AST , 
 @ @ - 481 , 7 + 480 , 7 @ @ public final class TokenTypes { 
 / * * 
 * An extends clause . This appear as part of class and interface 
 * definitions . This element appears even if the 
 - * < code > extends < / code > keyword is not explicitly used . The child 
 + * { @ code extends } keyword is not explicitly used . The child 
 * is an optional identifier . 
 * 
 * < p > For example : < / p > 
 @ @ - 672 , 7 + 671 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int INDEX _ OP = GeneratedJavaTokenTypes . INDEX _ OP ; 
 / * * 
 - * The < code > + + < / code > ( postfix increment ) operator . 
 + * The { @ code + + } ( postfix increment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 14 . 1 " > Java 
 @ @ - 682 , 7 + 681 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int POST _ INC = GeneratedJavaTokenTypes . POST _ INC ; 
 / * * 
 - * The < code > - - < / code > ( postfix decrement ) operator . 
 + * The { @ code - - } ( postfix decrement ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 14 . 2 " > Java 
 @ @ - 803 , 7 + 802 , 7 @ @ public final class TokenTypes { 
 public static final int EXPR = GeneratedJavaTokenTypes . EXPR ; 
 / * * 
 * An array initialization . This may occur as part of an array 
 - * declaration or inline with < code > new < / code > . 
 + * declaration or inline with { @ code new } . 
 * 
 * < p > For example : < / p > 
 * < pre > 
 @ @ - 923 , 7 + 922 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int IMPORT = GeneratedJavaTokenTypes . IMPORT ; 
 / * * 
 - * The < code > - < / code > ( unary minus ) operator . 
 + * The { @ code - } ( unary minus ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 4 " > Java 
 @ @ - 932 , 7 + 931 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int UNARY _ MINUS = GeneratedJavaTokenTypes . UNARY _ MINUS ; 
 / * * 
 - * The < code > + < / code > ( unary plus ) operator . 
 + * The { @ code + } ( unary plus ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 3 " > Java 
 @ @ - 1007 , 7 + 1006 , 7 @ @ public final class TokenTypes { 
 public static final int ELIST = GeneratedJavaTokenTypes . ELIST ; 
 / * * 
 * A for loop initializer . This is a child of 
 - * < code > LITERAL _ FOR < / code > . The children of this element may be 
 + * { @ code LITERAL _ FOR } . The children of this element may be 
 * a comma separated list of variable declarations , an expression 
 * list , or empty . 
 * 
 @ @ - 1018 , 7 + 1017 , 7 @ @ public final class TokenTypes { 
 public static final int FOR _ INIT = GeneratedJavaTokenTypes . FOR _ INIT ; 
 / * * 
 * A for loop condition . This is a child of 
 - * < code > LITERAL _ FOR < / code > . The child of this element is an 
 + * { @ code LITERAL _ FOR } . The child of this element is an 
 * optional expression . 
 * 
 * @ see # EXPR 
 @ @ - 1029 , 7 + 1028 , 7 @ @ public final class TokenTypes { 
 
 / * * 
 * A for loop iterator . This is a child of 
 - * < code > LITERAL _ FOR < / code > . The child of this element is an 
 + * { @ code LITERAL _ FOR } . The child of this element is an 
 * optional expression list . 
 * 
 * @ see # ELIST 
 @ @ - 1040 , 7 + 1039 , 7 @ @ public final class TokenTypes { 
 
 / * * 
 * The empty statement . This goes in place of an 
 - * < code > SLIST < / code > for a < code > for < / code > or < code > while < / code > 
 + * { @ code SLIST } for a { @ code for } or { @ code while } 
 * loop body . 
 * 
 * @ see < a 
 @ @ - 1051 , 19 + 1050 , 19 @ @ public final class TokenTypes { 
 * * / 
 public static final int EMPTY _ STAT = GeneratedJavaTokenTypes . EMPTY _ STAT ; 
 / * * 
 - * The < code > final < / code > keyword . 
 + * The { @ code final } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 public static final int FINAL = GeneratedJavaTokenTypes . FINAL ; 
 / * * 
 - * The < code > abstract < / code > keyword . 
 + * The { @ code abstract } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 public static final int ABSTRACT = GeneratedJavaTokenTypes . ABSTRACT ; 
 / * * 
 - * The < code > strictfp < / code > keyword . 
 + * The { @ code strictfp } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 @ @ - 1108 , 7 + 1107 , 7 @ @ public final class TokenTypes { 
 public static final int CTOR _ CALL = GeneratedJavaTokenTypes . CTOR _ CALL ; 
 
 / * * 
 - * The statement terminator ( < code > ; < / code > ) . Depending on the 
 + * The statement terminator ( { @ code ; } ) . Depending on the 
 * context , this make occur as a sibling , a child , or not at all . 
 * 
 * @ see # PACKAGE _ DEF 
 @ @ - 1120 , 14 + 1119 , 14 @ @ public final class TokenTypes { 
 public static final int SEMI = GeneratedJavaTokenTypes . SEMI ; 
 
 / * * 
 - * The < code > ] < / code > symbol . 
 + * The { @ code ] } symbol . 
 * 
 * @ see # INDEX _ OP 
 * @ see # ARRAY _ DECLARATOR 
 * * / 
 public static final int RBRACK = GeneratedJavaTokenTypes . RBRACK ; 
 / * * 
 - * The < code > void < / code > keyword . 
 + * The { @ code void } keyword . 
 * 
 * @ see # TYPE 
 * * / 
 @ @ - 1135 , 7 + 1134 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ void ; 
 
 / * * 
 - * The < code > boolean < / code > keyword . 
 + * The { @ code boolean } keyword . 
 * 
 * @ see # TYPE 
 * * / 
 @ @ - 1143 , 7 + 1142 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ boolean ; 
 
 / * * 
 - * The < code > byte < / code > keyword . 
 + * The { @ code byte } keyword . 
 * 
 * @ see # TYPE 
 * * / 
 @ @ - 1151 , 7 + 1150 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ byte ; 
 
 / * * 
 - * The < code > char < / code > keyword . 
 + * The { @ code char } keyword . 
 * 
 * @ see # TYPE 
 * * / 
 @ @ - 1159 , 7 + 1158 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ char ; 
 
 / * * 
 - * The < code > short < / code > keyword . 
 + * The { @ code short } keyword . 
 * 
 * @ see # TYPE 
 * * / 
 @ @ - 1167 , 13 + 1166 , 13 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ short ; 
 
 / * * 
 - * The < code > int < / code > keyword . 
 + * The { @ code int } keyword . 
 * 
 * @ see # TYPE 
 * * / 
 public static final int LITERAL _ INT = GeneratedJavaTokenTypes . LITERAL _ int ; 
 / * * 
 - * The < code > float < / code > keyword . 
 + * The { @ code float } keyword . 
 * 
 * @ see # TYPE 
 * * / 
 @ @ - 1181 , 7 + 1180 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ float ; 
 
 / * * 
 - * The < code > long < / code > keyword . 
 + * The { @ code long } keyword . 
 * 
 * @ see # TYPE 
 * * / 
 @ @ - 1189 , 7 + 1188 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ long ; 
 
 / * * 
 - * The < code > double < / code > keyword . 
 + * The { @ code double } keyword . 
 * 
 * @ see # TYPE 
 * * / 
 @ @ - 1202 , 13 + 1201 , 13 @ @ public final class TokenTypes { 
 * * / 
 public static final int IDENT = GeneratedJavaTokenTypes . IDENT ; 
 / * * 
 - * The < code > & # 46 ; < / code > ( dot ) operator . 
 + * The { @ code & # 46 ; } ( dot ) operator . 
 * 
 * @ see FullIdent 
 * * / 
 public static final int DOT = GeneratedJavaTokenTypes . DOT ; 
 / * * 
 - * The < code > * < / code > ( multiplication or wildcard ) operator . 
 + * The { @ code * } ( multiplication or wildcard ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 7 . html # jls - 7 . 5 . 2 " > Java 
 @ @ - 1221 , 7 + 1220 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int STAR = GeneratedJavaTokenTypes . STAR ; 
 / * * 
 - * The < code > private < / code > keyword . 
 + * The { @ code private } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 @ @ - 1229 , 7 + 1228 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ private ; 
 
 / * * 
 - * The < code > public < / code > keyword . 
 + * The { @ code public } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 @ @ - 1237 , 7 + 1236 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ public ; 
 
 / * * 
 - * The < code > protected < / code > keyword . 
 + * The { @ code protected } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 @ @ - 1245 , 7 + 1244 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ protected ; 
 
 / * * 
 - * The < code > static < / code > keyword . 
 + * The { @ code static } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 @ @ - 1253 , 7 + 1252 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ static ; 
 
 / * * 
 - * The < code > transient < / code > keyword . 
 + * The { @ code transient } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 @ @ - 1261 , 7 + 1260 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ transient ; 
 
 / * * 
 - * The < code > native < / code > keyword . 
 + * The { @ code native } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 @ @ - 1269 , 7 + 1268 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ native ; 
 
 / * * 
 - * The < code > synchronized < / code > keyword . This may be used as a 
 + * The { @ code synchronized } keyword . This may be used as a 
 * modifier of a method or in the definition of a synchronized 
 * block . 
 * 
 @ @ - 1315 , 7 + 1314 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ synchronized ; 
 
 / * * 
 - * The < code > volatile < / code > keyword . 
 + * The { @ code volatile } keyword . 
 * 
 * @ see # MODIFIERS 
 * * / 
 @ @ - 1323 , 7 + 1322 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ volatile ; 
 
 / * * 
 - * The < code > class < / code > keyword . This element appears both 
 + * The { @ code class } keyword . This element appears both 
 * as part of a class declaration , and inline to reference a 
 * class object . 
 * 
 @ @ - 1351 , 7 + 1350 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ class ; 
 
 / * * 
 - * The < code > interface < / code > keyword . This token appears in 
 + * The { @ code interface } keyword . This token appears in 
 * interface definition . 
 * 
 * @ see # INTERFACE _ DEF 
 @ @ - 1360 , 7 + 1359 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ interface ; 
 
 / * * 
 - * A left ( curly ) brace ( < code > { < / code > ) . 
 + * A left ( curly ) brace ( { @ code & # 123 ; } ) . 
 * 
 * @ see # OBJBLOCK 
 * @ see # ARRAY _ INIT 
 @ @ - 1368 , 7 + 1367 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int LCURLY = GeneratedJavaTokenTypes . LCURLY ; 
 / * * 
 - * A right ( curly ) brace ( < code > } < / code > ) . 
 + * A right ( curly ) brace ( { @ code & # 125 ; } ) . 
 * 
 * @ see # OBJBLOCK 
 * @ see # ARRAY _ INIT 
 @ @ - 1376 , 7 + 1375 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int RCURLY = GeneratedJavaTokenTypes . RCURLY ; 
 / * * 
 - * The < code > , < / code > ( comma ) operator . 
 + * The { @ code , } ( comma ) operator . 
 * 
 * @ see # ARRAY _ INIT 
 * @ see # FOR _ INIT 
 @ @ - 1387 , 7 + 1386 , 7 @ @ public final class TokenTypes { 
 public static final int COMMA = GeneratedJavaTokenTypes . COMMA ; 
 
 / * * 
 - * A left parenthesis ( < code > ( < / code > ) . 
 + * A left parenthesis ( { @ code ( } ) . 
 * 
 * @ see # LITERAL _ FOR 
 * @ see # LITERAL _ NEW 
 @ @ - 1397 , 7 + 1396 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int LPAREN = GeneratedJavaTokenTypes . LPAREN ; 
 / * * 
 - * A right parenthesis ( < code > ) < / code > ) . 
 + * A right parenthesis ( { @ code ) } ) . 
 * 
 * @ see # LITERAL _ FOR 
 * @ see # LITERAL _ NEW 
 @ @ - 1409 , 7 + 1408 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int RPAREN = GeneratedJavaTokenTypes . RPAREN ; 
 / * * 
 - * The < code > this < / code > keyword . 
 + * The { @ code this } keyword . 
 * 
 * @ see # EXPR 
 * @ see # CTOR _ CALL 
 @ @ - 1418 , 7 + 1417 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ this ; 
 
 / * * 
 - * The < code > super < / code > keyword . 
 + * The { @ code super } keyword . 
 * 
 * @ see # EXPR 
 * @ see # SUPER _ CTOR _ CALL 
 @ @ - 1427 , 7 + 1426 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ super ; 
 
 / * * 
 - * The < code > = < / code > ( assignment ) operator . 
 + * The { @ code = } ( assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 1 " > Java 
 @ @ - 1436 , 7 + 1435 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int ASSIGN = GeneratedJavaTokenTypes . ASSIGN ; 
 / * * 
 - * The < code > throws < / code > keyword . The children are a number of 
 + * The { @ code throws } keyword . The children are a number of 
 * one or more identifiers separated by commas . 
 * 
 * @ see < a 
 @ @ - 1453 , 8 + 1452 , 8 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ throws ; 
 
 / * * 
 - * The < code > : < / code > ( colon ) operator . This will appear as part 
 - * of the conditional operator ( < code > ? : < / code > ) . 
 + * The { @ code : } ( colon ) operator . This will appear as part 
 + * of the conditional operator ( { @ code ? : } ) . 
 * 
 * @ see # QUESTION 
 * @ see # LABELED _ STAT 
 @ @ - 1463 , 7 + 1462 , 7 @ @ public final class TokenTypes { 
 public static final int COLON = GeneratedJavaTokenTypes . COLON ; 
 
 / * * 
 - * The < code > : : < / code > ( double colon ) separator . 
 + * The { @ code : : } ( double colon ) separator . 
 * It is part of Java 8 syntax that is used for method reference . 
 * The token does not appear in tree , { @ link # METHOD _ REF } should be used instead . 
 * 
 @ @ - 1471 , 7 + 1470 , 7 @ @ public final class TokenTypes { 
 * / 
 public static final int DOUBLE _ COLON = GeneratedJavaTokenTypes . DOUBLE _ COLON ; 
 / * * 
 - * The < code > if < / code > keyword . 
 + * The { @ code if } keyword . 
 * 
 * < p > For example : < / p > 
 * < pre > 
 @ @ - 1526 , 8 + 1525 , 8 @ @ public final class TokenTypes { 
 * * / 
 public static final int LITERAL _ IF = GeneratedJavaTokenTypes . LITERAL _ if ; 
 / * * 
 - * The < code > for < / code > keyword . The children are < code > ( < / code > , 
 - * an initializer , a condition , an iterator , a < code > ) < / code > and 
 + * The { @ code for } keyword . The children are { @ code ( } , 
 + * an initializer , a condition , an iterator , a { @ code ) } and 
 * either a statement list , a single expression , or an empty 
 * statement . 
 * 
 @ @ - 1610 , 7 + 1609 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int LITERAL _ FOR = GeneratedJavaTokenTypes . LITERAL _ for ; 
 / * * 
 - * The < code > while < / code > keyword . 
 + * The { @ code while } keyword . 
 * 
 * < p > For example : < / p > 
 * < pre > 
 @ @ - 1667 , 7 + 1666 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ while ; 
 
 / * * 
 - * The < code > do < / code > keyword . Note the the while token does not 
 + * The { @ code do } keyword . Note the the while token does not 
 * appear as part of the do - while construct . 
 * 
 * < p > For example : < / p > 
 @ @ - 1724 , 12 + 1723 , 12 @ @ public final class TokenTypes { 
 * * / 
 public static final int LITERAL _ DO = GeneratedJavaTokenTypes . LITERAL _ do ; 
 / * * 
 - * Literal < code > while < / code > in do - while loop . 
 + * Literal { @ code while } in do - while loop . 
 * @ see # LITERAL _ DO 
 * / 
 public static final int DO _ WHILE = GeneratedJavaTokenTypes . DO _ WHILE ; 
 / * * 
 - * The < code > break < / code > keyword . The first child is an optional 
 + * The { @ code break } keyword . The first child is an optional 
 * identifier and the last child is a semicolon . 
 * 
 * @ see # IDENT 
 @ @ - 1740 , 7 + 1739 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ break ; 
 
 / * * 
 - * The < code > continue < / code > keyword . The first child is an 
 + * The { @ code continue } keyword . The first child is an 
 * optional identifier and the last child is a semicolon . 
 * 
 * @ see # IDENT 
 @ @ - 1751 , 7 + 1750 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ continue ; 
 
 / * * 
 - * The < code > return < / code > keyword . The first child is an 
 + * The { @ code return } keyword . The first child is an 
 * optional expression for the return value . The last child is a 
 * semi colon . 
 * 
 @ @ - 1763 , 7 + 1762 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ return ; 
 
 / * * 
 - * The < code > switch < / code > keyword . 
 + * The { @ code switch } keyword . 
 * 
 * < p > For example : < / p > 
 * < pre > 
 @ @ - 1870 , 8 + 1869 , 8 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ switch ; 
 
 / * * 
 - * The < code > throw < / code > keyword . The first child is an 
 - * expression that evaluates to a < code > Throwable < / code > instance . 
 + * The { @ code throw } keyword . The first child is an 
 + * expression that evaluates to a { @ code Throwable } instance . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 14 . html # jls - 14 . 17 " > Java 
 @ @ - 1883 , 8 + 1882 , 8 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ throw ; 
 
 / * * 
 - * The < code > else < / code > keyword . This appears as a child of an 
 - * < code > if < / code > statement . 
 + * The { @ code else } keyword . This appears as a child of an 
 + * { @ code if } statement . 
 * 
 * @ see # SLIST 
 * @ see # EXPR 
 @ @ - 1895 , 7 + 1894 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ else ; 
 
 / * * 
 - * The < code > case < / code > keyword . The first child is a constant 
 + * The { @ code case } keyword . The first child is a constant 
 * expression that evaluates to a integer . 
 * 
 * @ see # CASE _ GROUP 
 @ @ - 1905 , 7 + 1904 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ case ; 
 
 / * * 
 - * The < code > default < / code > keyword . This element has no 
 + * The { @ code default } keyword . This element has no 
 * children . 
 * 
 * @ see # CASE _ GROUP 
 @ @ - 1915 , 7 + 1914 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ default ; 
 
 / * * 
 - * The < code > try < / code > keyword . The children are a statement 
 + * The { @ code try } keyword . The children are a statement 
 * list , zero or more catch blocks and then an optional finally 
 * block . 
 * 
 @ @ - 2140 , 7 + 2139 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . RESOURCE ; 
 
 / * * 
 - * The < code > catch < / code > keyword . 
 + * The { @ code catch } keyword . 
 * 
 * @ see # LPAREN 
 * @ see # PARAMETER _ DEF 
 @ @ - 2152 , 7 + 2151 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ catch ; 
 
 / * * 
 - * The < code > finally < / code > keyword . 
 + * The { @ code finally } keyword . 
 * 
 * @ see # SLIST 
 * @ see # LITERAL _ TRY 
 @ @ - 2161 , 7 + 2160 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ finally ; 
 
 / * * 
 - * The < code > + = < / code > ( addition assignment ) operator . 
 + * The { @ code + = } ( addition assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java 
 @ @ - 2170 , 7 + 2169 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int PLUS _ ASSIGN = GeneratedJavaTokenTypes . PLUS _ ASSIGN ; 
 / * * 
 - * The < code > - = < / code > ( subtraction assignment ) operator . 
 + * The { @ code - = } ( subtraction assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java 
 @ @ - 2181 , 7 + 2180 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . MINUS _ ASSIGN ; 
 
 / * * 
 - * The < code > * = < / code > ( multiplication assignment ) operator . 
 + * The { @ code * = } ( multiplication assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java 
 @ @ - 2190 , 7 + 2189 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int STAR _ ASSIGN = GeneratedJavaTokenTypes . STAR _ ASSIGN ; 
 / * * 
 - * The < code > / = < / code > ( division assignment ) operator . 
 + * The { @ code / = } ( division assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java 
 @ @ - 2199 , 7 + 2198 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int DIV _ ASSIGN = GeneratedJavaTokenTypes . DIV _ ASSIGN ; 
 / * * 
 - * The < code > % = < / code > ( remainder assignment ) operator . 
 + * The { @ code % = } ( remainder assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java 
 @ @ - 2208 , 7 + 2207 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int MOD _ ASSIGN = GeneratedJavaTokenTypes . MOD _ ASSIGN ; 
 / * * 
 - * The < code > & gt ; & gt ; = < / code > ( signed right shift assignment ) 
 + * The { @ code & gt ; & gt ; = } ( signed right shift assignment ) 
 * operator . 
 * 
 * @ see < a 
 @ @ - 2218 , 7 + 2217 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int SR _ ASSIGN = GeneratedJavaTokenTypes . SR _ ASSIGN ; 
 / * * 
 - * The < code > & gt ; & gt ; & gt ; = < / code > ( unsigned right shift assignment ) 
 + * The { @ code & gt ; & gt ; & gt ; = } ( unsigned right shift assignment ) 
 * operator . 
 * 
 * @ see < a 
 @ @ - 2228 , 7 + 2227 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int BSR _ ASSIGN = GeneratedJavaTokenTypes . BSR _ ASSIGN ; 
 / * * 
 - * The < code > & lt ; & lt ; = < / code > ( left shift assignment ) operator . 
 + * The { @ code & lt ; & lt ; = } ( left shift assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java 
 @ @ - 2237 , 7 + 2236 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int SL _ ASSIGN = GeneratedJavaTokenTypes . SL _ ASSIGN ; 
 / * * 
 - * The < code > & amp ; = < / code > ( bitwise AND assignment ) operator . 
 + * The { @ code & amp ; = } ( bitwise AND assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java 
 @ @ - 2246 , 7 + 2245 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int BAND _ ASSIGN = GeneratedJavaTokenTypes . BAND _ ASSIGN ; 
 / * * 
 - * The < code > ^ = < / code > ( bitwise exclusive OR assignment ) operator . 
 + * The { @ code ^ = } ( bitwise exclusive OR assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java 
 @ @ - 2255 , 7 + 2254 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int BXOR _ ASSIGN = GeneratedJavaTokenTypes . BXOR _ ASSIGN ; 
 / * * 
 - * The < code > | = < / code > ( bitwise OR assignment ) operator . 
 + * The { @ code | = } ( bitwise OR assignment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 26 . 2 " > Java 
 @ @ - 2264 , 7 + 2263 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int BOR _ ASSIGN = GeneratedJavaTokenTypes . BOR _ ASSIGN ; 
 / * * 
 - * The < code > & # 63 ; < / code > ( conditional ) operator . Technically , 
 + * The { @ code & # 63 ; } ( conditional ) operator . Technically , 
 * the colon is also part of this operator , but it appears as a 
 * separate token . 
 * 
 @ @ - 2297 , 7 + 2296 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int QUESTION = GeneratedJavaTokenTypes . QUESTION ; 
 / * * 
 - * The < code > | | < / code > ( conditional OR ) operator . 
 + * The { @ code | | } ( conditional OR ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 24 " > Java 
 @ @ - 2306 , 7 + 2305 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int LOR = GeneratedJavaTokenTypes . LOR ; 
 / * * 
 - * The < code > & amp ; & amp ; < / code > ( conditional AND ) operator . 
 + * The { @ code & amp ; & amp ; } ( conditional AND ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 23 " > Java 
 @ @ - 2315 , 7 + 2314 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int LAND = GeneratedJavaTokenTypes . LAND ; 
 / * * 
 - * The < code > | < / code > ( bitwise OR ) operator . 
 + * The { @ code | } ( bitwise OR ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 22 . 1 " > Java 
 @ @ - 2324 , 7 + 2323 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int BOR = GeneratedJavaTokenTypes . BOR ; 
 / * * 
 - * The < code > ^ < / code > ( bitwise exclusive OR ) operator . 
 + * The { @ code ^ } ( bitwise exclusive OR ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 22 . 1 " > Java 
 @ @ - 2333 , 7 + 2332 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int BXOR = GeneratedJavaTokenTypes . BXOR ; 
 / * * 
 - * The < code > & amp ; < / code > ( bitwise AND ) operator . 
 + * The { @ code & amp ; } ( bitwise AND ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 22 . 1 " > Java 
 @ @ - 2342 , 43 + 2341 , 43 @ @ public final class TokenTypes { 
 * * / 
 public static final int BAND = GeneratedJavaTokenTypes . BAND ; 
 / * * 
 - * The < code > & # 33 ; = < / code > ( not equal ) operator . 
 + * The { @ code & # 33 ; = } ( not equal ) operator . 
 * 
 * @ see # EXPR 
 * * / 
 public static final int NOT _ EQUAL = GeneratedJavaTokenTypes . NOT _ EQUAL ; 
 / * * 
 - * The < code > = = < / code > ( equal ) operator . 
 + * The { @ code = = } ( equal ) operator . 
 * 
 * @ see # EXPR 
 * * / 
 public static final int EQUAL = GeneratedJavaTokenTypes . EQUAL ; 
 / * * 
 - * The < code > & lt ; < / code > ( less than ) operator . 
 + * The { @ code & lt ; } ( less than ) operator . 
 * 
 * @ see # EXPR 
 * * / 
 public static final int LT = GeneratedJavaTokenTypes . LT ; 
 / * * 
 - * The < code > & gt ; < / code > ( greater than ) operator . 
 + * The { @ code & gt ; } ( greater than ) operator . 
 * 
 * @ see # EXPR 
 * * / 
 public static final int GT = GeneratedJavaTokenTypes . GT ; 
 / * * 
 - * The < code > & lt ; = < / code > ( less than or equal ) operator . 
 + * The { @ code & lt ; = } ( less than or equal ) operator . 
 * 
 * @ see # EXPR 
 * * / 
 public static final int LE = GeneratedJavaTokenTypes . LE ; 
 / * * 
 - * The < code > & gt ; = < / code > ( greater than or equal ) operator . 
 + * The { @ code & gt ; = } ( greater than or equal ) operator . 
 * 
 * @ see # EXPR 
 * * / 
 public static final int GE = GeneratedJavaTokenTypes . GE ; 
 / * * 
 - * The < code > instanceof < / code > operator . The first child is an 
 + * The { @ code instanceof } operator . The first child is an 
 * object reference or something that evaluates to an object 
 * reference . The second child is a reference type . 
 * 
 @ @ - 2396 , 7 + 2395 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ instanceof ; 
 
 / * * 
 - * The < code > & lt ; & lt ; < / code > ( shift left ) operator . 
 + * The { @ code & lt ; & lt ; } ( shift left ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 19 " > Java 
 @ @ - 2405 , 7 + 2404 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int SL = GeneratedJavaTokenTypes . SL ; 
 / * * 
 - * The < code > & gt ; & gt ; < / code > ( signed shift right ) operator . 
 + * The { @ code & gt ; & gt ; } ( signed shift right ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 19 " > Java 
 @ @ - 2414 , 7 + 2413 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int SR = GeneratedJavaTokenTypes . SR ; 
 / * * 
 - * The < code > & gt ; & gt ; & gt ; < / code > ( unsigned shift right ) operator . 
 + * The { @ code & gt ; & gt ; & gt ; } ( unsigned shift right ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 19 " > Java 
 @ @ - 2423 , 7 + 2422 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int BSR = GeneratedJavaTokenTypes . BSR ; 
 / * * 
 - * The < code > + < / code > ( addition ) operator . 
 + * The { @ code + } ( addition ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 18 " > Java 
 @ @ - 2432 , 7 + 2431 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int PLUS = GeneratedJavaTokenTypes . PLUS ; 
 / * * 
 - * The < code > - < / code > ( subtraction ) operator . 
 + * The { @ code - } ( subtraction ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 18 " > Java 
 @ @ - 2441 , 7 + 2440 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int MINUS = GeneratedJavaTokenTypes . MINUS ; 
 / * * 
 - * The < code > / < / code > ( division ) operator . 
 + * The { @ code / } ( division ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 17 . 2 " > Java 
 @ @ - 2450 , 7 + 2449 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int DIV = GeneratedJavaTokenTypes . DIV ; 
 / * * 
 - * The < code > % < / code > ( remainder ) operator . 
 + * The { @ code % } ( remainder ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 17 . 3 " > Java 
 @ @ - 2459 , 7 + 2458 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int MOD = GeneratedJavaTokenTypes . MOD ; 
 / * * 
 - * The < code > + + < / code > ( prefix increment ) operator . 
 + * The { @ code + + } ( prefix increment ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 1 " > Java 
 @ @ - 2469 , 7 + 2468 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int INC = GeneratedJavaTokenTypes . INC ; 
 / * * 
 - * The < code > - - < / code > ( prefix decrement ) operator . 
 + * The { @ code - - } ( prefix decrement ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 2 " > Java 
 @ @ - 2479 , 7 + 2478 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int DEC = GeneratedJavaTokenTypes . DEC ; 
 / * * 
 - * The < code > ~ < / code > ( bitwise complement ) operator . 
 + * The { @ code ~ } ( bitwise complement ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 5 " > Java 
 @ @ - 2488 , 7 + 2487 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int BNOT = GeneratedJavaTokenTypes . BNOT ; 
 / * * 
 - * The < code > & # 33 ; < / code > ( logical complement ) operator . 
 + * The { @ code & # 33 ; } ( logical complement ) operator . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 15 . html # jls - 15 . 15 . 6 " > Java 
 @ @ - 2497 , 7 + 2496 , 7 @ @ public final class TokenTypes { 
 * * / 
 public static final int LNOT = GeneratedJavaTokenTypes . LNOT ; 
 / * * 
 - * The < code > true < / code > keyword . 
 + * The { @ code true } keyword . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 10 . 3 " > Java 
 @ @ - 2509 , 7 + 2508 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ true ; 
 
 / * * 
 - * The < code > false < / code > keyword . 
 + * The { @ code false } keyword . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 10 . 3 " > Java 
 @ @ - 2521 , 7 + 2520 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ false ; 
 
 / * * 
 - * The < code > null < / code > keyword . 
 + * The { @ code null } keyword . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 10 . 7 " > Java 
 @ @ - 2532 , 7 + 2531 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . LITERAL _ null ; 
 
 / * * 
 - * The < code > new < / code > keyword . This element is used to define 
 + * The { @ code new } keyword . This element is used to define 
 * new instances of objects , new arrays , and new anonymous inner 
 * classes . 
 * 
 @ @ - 2701 , 7 + 2700 , 7 @ @ public final class TokenTypes { 
 
 / * * 
 * A single precision floating point literal . This is a floating 
 - * point number with an < code > F < / code > or < code > f < / code > suffix . 
 + * point number with an { @ code F } or { @ code f } suffix . 
 * 
 * @ see < a 
 * href = " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 10 . 2 " > Java 
 @ @ - 2712 , 7 + 2711 , 7 @ @ public final class TokenTypes { 
 public static final int NUM _ FLOAT = GeneratedJavaTokenTypes . NUM _ FLOAT ; 
 / * * 
 * A long integer literal . These are almost the same as integer 
 - * literals , but they have an < code > L < / code > or < code > l < / code > 
 + * literals , but they have an { @ code L } or { @ code l } 
 * ( ell ) suffix . 
 * 
 * @ see < a 
 @ @ - 2724 , 7 + 2723 , 7 @ @ public final class TokenTypes { 
 public static final int NUM _ LONG = GeneratedJavaTokenTypes . NUM _ LONG ; 
 / * * 
 * A double precision floating point literal . This is a floating 
 - * point number with an optional < code > D < / code > or < code > d < / code > 
 + * point number with an optional { @ code D } or { @ code d } 
 * suffix . 
 * 
 * @ see < a 
 @ @ - 2736 , 7 + 2735 , 7 @ @ public final class TokenTypes { 
 public static final int NUM _ DOUBLE = GeneratedJavaTokenTypes . NUM _ DOUBLE ; 
 
 / * * 
 - * The < code > assert < / code > keyword . This is only for Java 1 . 4 and 
 + * The { @ code assert } keyword . This is only for Java 1 . 4 and 
 * later . 
 * 
 * < p > For example : < / p > 
 @ @ - 2874 , 7 + 2873 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . ENUM _ DEF ; 
 
 / * * 
 - * The < code > enum < / code > keyword . This element appears 
 + * The { @ code enum } keyword . This element appears 
 * as part of an enum declaration . 
 * * / 
 public static final int ENUM = 
 @ @ - 2942 , 7 + 2941 , 7 @ @ public final class TokenTypes { 
 
 / * * 
 * A for - each clause . This is a child of 
 - * < code > LITERAL _ FOR < / code > . The children of this element may be 
 + * { @ code LITERAL _ FOR } . The children of this element may be 
 * a parameter definition , the colon literal and an expression . 
 * 
 * < p > For example : < / p > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java b / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java 
 index f565438 . . 74b2a3f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDoclet . java 
 @ @ - 72 , 12 + 72 , 24 @ @ public final class TokenTypesDoclet { 
 final FieldDoc [ ] fields = classes [ 0 ] . fields ( ) ; 
 for ( final FieldDoc field : fields ) { 
 if ( field . isStatic ( ) & & field . isPublic ( ) & & field . isFinal ( ) 
 - & & " int " . equals ( field . type ( ) . qualifiedTypeName ( ) ) ) { 
 - / / We have to filter " Text " tags because of jdk parsing bug 
 - / / till Oracle reference id : 9050448 
 - if ( field . firstSentenceTags ( ) . length ! = 1 
 - & & Arrays . stream ( field . firstSentenceTags ( ) ) 
 - . filter ( tag - > ! " Text " . equals ( tag . name ( ) ) ) . count ( ) ! = 1 ) { 
 + & & " int " . equals ( field . type ( ) . qualifiedTypeName ( ) ) ) { 
 + 
 + final String firstSentence ; 
 + 
 + if ( field . firstSentenceTags ( ) . length = = 1 ) { 
 + firstSentence = field . firstSentenceTags ( ) [ 0 ] . text ( ) ; 
 + } 
 + else if ( Arrays . stream ( field . firstSentenceTags ( ) ) 
 + . filter ( tag - > ! " Text " . equals ( tag . name ( ) ) ) . count ( ) = = 1 ) { 
 + / / We have to filter " Text " tags because of jdk parsing bug 
 + / / till JDK - 8186270 
 + firstSentence = field . firstSentenceTags ( ) [ 0 ] . text ( ) 
 + + " < code > " 
 + + field . firstSentenceTags ( ) [ 1 ] . text ( ) 
 + + " < / code > " 
 + + field . firstSentenceTags ( ) [ 2 ] . text ( ) ; 
 + } 
 + else { 
 final List < Tag > tags = Arrays . asList ( field . firstSentenceTags ( ) ) ; 
 final String joinedTags = tags 
 . stream ( ) 
 @ @ - 88 , 8 + 100 , 7 @ @ public final class TokenTypesDoclet { 
 field . toString ( ) , joinedTags ) ; 
 throw new IllegalArgumentException ( message ) ; 
 } 
 - writer . println ( field . name ( ) + " = " 
 - + field . firstSentenceTags ( ) [ 0 ] . text ( ) ) ; 
 + writer . println ( field . name ( ) + " = " + firstSentence ) ; 
 } 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java 
 index 051aea2 . . ae5924b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java 
 @ @ - 30 , 8 + 30 , 28 @ @ public class TokenTypesTest { 
 @ Test 
 public void testGetShortDescription ( ) { 
 assertEquals ( " short description for EQUAL " , 
 - " The < code > = = < / code > ( equal ) operator . " , TokenUtils 
 - . getShortDescription ( " EQUAL " ) ) ; 
 + " The < code > = = < / code > ( equal ) operator . " , 
 + TokenUtils . getShortDescription ( " EQUAL " ) ) ; 
 + 
 + assertEquals ( " short description for LAND " , 
 + " The < code > & amp ; & amp ; < / code > ( conditional AND ) operator . " , 
 + TokenUtils . getShortDescription ( " LAND " ) ) ; 
 + 
 + assertEquals ( " short description for LCURLY " , 
 + " A left ( curly ) brace ( < code > & # 123 ; < / code > ) . " , 
 + TokenUtils . getShortDescription ( " LCURLY " ) ) ; 
 + 
 + assertEquals ( " short description for SR _ ASSIGN " , 
 + " The < code > & gt ; & gt ; = < / code > ( signed right shift assignment ) " , 
 + TokenUtils . getShortDescription ( " SR _ ASSIGN " ) ) ; 
 + 
 + assertEquals ( " short description for SL " , 
 + " The < code > & lt ; & lt ; < / code > ( shift left ) operator . " , 
 + TokenUtils . getShortDescription ( " SL " ) ) ; 
 + 
 + assertEquals ( " short description for BSR " , 
 + " The < code > & gt ; & gt ; & gt ; < / code > ( unsigned shift right ) operator . " , 
 + TokenUtils . getShortDescription ( " BSR " ) ) ; 
 } 
 
 @ Test
