BLEU SCORE: 0.035802380724744266

TEST MSG: minor : methods made static
GENERATED MSG: Refactoring of CommentsIndentationCheck , issue # 333

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> index 04bb27c . . 9d6cb6e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> @ @ - 166 , 7 + 166 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> * @ param comment single line comment . <nl> * @ return the previous statement of a single line comment . <nl> * / <nl> - private DetailAST getPreviousStatementOfSingleLineComment ( DetailAST comment ) { <nl> + private static DetailAST getPreviousStatementOfSingleLineComment ( DetailAST comment ) { <nl> final DetailAST prevStatement ; <nl> if ( isDistributedPreviousStatement ( comment ) ) { <nl> prevStatement = getDistributedPreviousStatementOfSingleLineComment ( comment ) ; <nl> @ @ - 184 , 7 + 184 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> * @ return true if the previous statement of a single line comment is distributed over two or <nl> * more lines . <nl> * / <nl> - private boolean isDistributedPreviousStatement ( DetailAST singleLineComment ) { <nl> + private static boolean isDistributedPreviousStatement ( DetailAST singleLineComment ) { <nl> final DetailAST previousSibling = singleLineComment . getPreviousSibling ( ) ; <nl> return isDistributedMethodChainOrConcatenationStatement ( singleLineComment , previousSibling ) <nl> | | isDistributedReturnStatement ( previousSibling ) <nl> @ @ - 323 , 7 + 323 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> * @ param nextStmt next statement . <nl> * @ return true if a single line comment is placed at the end of the block . <nl> * / <nl> - private boolean isSingleLineCommentAtTheEndOfTheCodeBlock ( DetailAST nextStmt ) { <nl> + private static boolean isSingleLineCommentAtTheEndOfTheCodeBlock ( DetailAST nextStmt ) { <nl> return nextStmt ! = null <nl> & & nextStmt . getType ( ) = = TokenTypes . RCURLY ; <nl> } <nl> @ @ - 343 , 7 + 343 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> * @ param nextStmt next statement . <nl> * @ return true if comment is placed in the empty code block . <nl> * / <nl> - private boolean isInEmptyCodeBlock ( DetailAST prevStmt , DetailAST nextStmt ) { <nl> + private static boolean isInEmptyCodeBlock ( DetailAST prevStmt , DetailAST nextStmt ) { <nl> return prevStmt ! = null <nl> & & nextStmt ! = null <nl> & & ( prevStmt . getType ( ) = = TokenTypes . SLIST
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> index e2321e9 . . 5e711a6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> @ @ - 221 , 7 + 221 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> } <nl> else { <nl> result = singleLineComment . getColumnNo ( ) = = nextStmt . getColumnNo ( ) <nl> - | singleLineComment . getColumnNo ( ) = = prevStmt . getColumnNo ( ) ; <nl> + | | singleLineComment . getColumnNo ( ) = = prevStmt . getColumnNo ( ) ; <nl> } <nl> return result ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java <nl> index cb2c118 . . 5a6ba86 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java <nl> @ @ - 50 , 6 + 50 , 7 @ @ public class CommentsIndentationCheckTest extends BaseCheckTestSupport { <nl> " 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK , 31 , 16 , 12 ) , <nl> " 50 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 51 , 27 , 23 ) , <nl> " 51 : " + getCheckMessage ( MSG _ KEY _ BLOCK , 53 , 23 , 36 ) , <nl> + " 136 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 137 , 20 , 16 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " comments " + File . separator <nl> + " InputCommentsIndentationCheckSurroundingCode . java " ) , expected ) ; <nl> @ @ - 73 , 6 + 74 , 7 @ @ public class CommentsIndentationCheckTest extends BaseCheckTestSupport { <nl> final String [ ] expected = { <nl> " 13 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 14 , 14 , 12 ) , <nl> " 50 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 51 , 27 , 23 ) , <nl> + " 136 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 137 , 20 , 16 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " comments " + File . separator <nl> + " InputCommentsIndentationCheckSurroundingCode . java " ) , expected ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / comments / InputCommentsIndentationCheckSurroundingCode . java b / src / test / resources / com / puppycrawl / tools / checkstyle / comments / InputCommentsIndentationCheckSurroundingCode . java <nl> index 79d3e42 . . b319aac 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / comments / InputCommentsIndentationCheckSurroundingCode . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / comments / InputCommentsIndentationCheckSurroundingCode . java <nl> @ @ - 126 , 4 + 126 , 17 @ @ public class InputCommentsIndentationCheckSurroundingCode <nl> * some javadoc <nl> * / <nl> private static void l ( ) { } <nl> + <nl> + private void foo32 ( ) { <nl> + if ( true ) { <nl> + switch ( 1 ) { <nl> + case 0 : <nl> + <nl> + case 1 : <nl> + / / initialize b <nl> + int b = 10 ; <nl> + } <nl> + <nl> + } <nl> + } <nl> } / / The Check should not throw NPE here !

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 index 04bb27c . . 9d6cb6e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 @ @ - 166 , 7 + 166 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 * @ param comment single line comment . 
 * @ return the previous statement of a single line comment . 
 * / 
 - private DetailAST getPreviousStatementOfSingleLineComment ( DetailAST comment ) { 
 + private static DetailAST getPreviousStatementOfSingleLineComment ( DetailAST comment ) { 
 final DetailAST prevStatement ; 
 if ( isDistributedPreviousStatement ( comment ) ) { 
 prevStatement = getDistributedPreviousStatementOfSingleLineComment ( comment ) ; 
 @ @ - 184 , 7 + 184 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 * @ return true if the previous statement of a single line comment is distributed over two or 
 * more lines . 
 * / 
 - private boolean isDistributedPreviousStatement ( DetailAST singleLineComment ) { 
 + private static boolean isDistributedPreviousStatement ( DetailAST singleLineComment ) { 
 final DetailAST previousSibling = singleLineComment . getPreviousSibling ( ) ; 
 return isDistributedMethodChainOrConcatenationStatement ( singleLineComment , previousSibling ) 
 | | isDistributedReturnStatement ( previousSibling ) 
 @ @ - 323 , 7 + 323 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 * @ param nextStmt next statement . 
 * @ return true if a single line comment is placed at the end of the block . 
 * / 
 - private boolean isSingleLineCommentAtTheEndOfTheCodeBlock ( DetailAST nextStmt ) { 
 + private static boolean isSingleLineCommentAtTheEndOfTheCodeBlock ( DetailAST nextStmt ) { 
 return nextStmt ! = null 
 & & nextStmt . getType ( ) = = TokenTypes . RCURLY ; 
 } 
 @ @ - 343 , 7 + 343 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 * @ param nextStmt next statement . 
 * @ return true if comment is placed in the empty code block . 
 * / 
 - private boolean isInEmptyCodeBlock ( DetailAST prevStmt , DetailAST nextStmt ) { 
 + private static boolean isInEmptyCodeBlock ( DetailAST prevStmt , DetailAST nextStmt ) { 
 return prevStmt ! = null 
 & & nextStmt ! = null 
 & & ( prevStmt . getType ( ) = = TokenTypes . SLIST

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 index e2321e9 . . 5e711a6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 @ @ - 221 , 7 + 221 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 } 
 else { 
 result = singleLineComment . getColumnNo ( ) = = nextStmt . getColumnNo ( ) 
 - | singleLineComment . getColumnNo ( ) = = prevStmt . getColumnNo ( ) ; 
 + | | singleLineComment . getColumnNo ( ) = = prevStmt . getColumnNo ( ) ; 
 } 
 return result ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java 
 index cb2c118 . . 5a6ba86 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheckTest . java 
 @ @ - 50 , 6 + 50 , 7 @ @ public class CommentsIndentationCheckTest extends BaseCheckTestSupport { 
 " 28 : " + getCheckMessage ( MSG _ KEY _ BLOCK , 31 , 16 , 12 ) , 
 " 50 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 51 , 27 , 23 ) , 
 " 51 : " + getCheckMessage ( MSG _ KEY _ BLOCK , 53 , 23 , 36 ) , 
 + " 136 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 137 , 20 , 16 ) , 
 } ; 
 verify ( checkConfig , getPath ( " comments " + File . separator 
 + " InputCommentsIndentationCheckSurroundingCode . java " ) , expected ) ; 
 @ @ - 73 , 6 + 74 , 7 @ @ public class CommentsIndentationCheckTest extends BaseCheckTestSupport { 
 final String [ ] expected = { 
 " 13 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 14 , 14 , 12 ) , 
 " 50 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 51 , 27 , 23 ) , 
 + " 136 : " + getCheckMessage ( MSG _ KEY _ SINGLE , 137 , 20 , 16 ) , 
 } ; 
 verify ( checkConfig , getPath ( " comments " + File . separator 
 + " InputCommentsIndentationCheckSurroundingCode . java " ) , expected ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / comments / InputCommentsIndentationCheckSurroundingCode . java b / src / test / resources / com / puppycrawl / tools / checkstyle / comments / InputCommentsIndentationCheckSurroundingCode . java 
 index 79d3e42 . . b319aac 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / comments / InputCommentsIndentationCheckSurroundingCode . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / comments / InputCommentsIndentationCheckSurroundingCode . java 
 @ @ - 126 , 4 + 126 , 17 @ @ public class InputCommentsIndentationCheckSurroundingCode 
 * some javadoc 
 * / 
 private static void l ( ) { } 
 + 
 + private void foo32 ( ) { 
 + if ( true ) { 
 + switch ( 1 ) { 
 + case 0 : 
 + 
 + case 1 : 
 + / / initialize b 
 + int b = 10 ; 
 + } 
 + 
 + } 
 + } 
 } / / The Check should not throw NPE here !
