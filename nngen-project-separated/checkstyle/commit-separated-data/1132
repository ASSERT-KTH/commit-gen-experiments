BLEU SCORE: 0.026279617104084448

TEST MSG: minor : fix IntelijIdea violations of ' Scope of variable lnr is too broad '
GENERATED MSG: Decrease scope of variables . # 1538

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> index 2bb91ff . . 7e2e340 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> @ @ - 97 , 14 + 97 , 14 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { <nl> closeInfo = closeInfoAfterUse ; <nl> closeError = closeErrorAfterUse ; <nl> final Writer infoStreamWriter = new OutputStreamWriter ( infoStream , StandardCharsets . UTF _ 8 ) ; <nl> - final Writer errorStreamWriter = new OutputStreamWriter ( errorStream , <nl> - StandardCharsets . UTF _ 8 ) ; <nl> infoWriter = new PrintWriter ( infoStreamWriter ) ; <nl> <nl> if ( infoStream = = errorStream ) { <nl> errorWriter = infoWriter ; <nl> } <nl> else { <nl> + final Writer errorStreamWriter = new OutputStreamWriter ( errorStream , <nl> + StandardCharsets . UTF _ 8 ) ; <nl> errorWriter = new PrintWriter ( errorStreamWriter ) ; <nl> } <nl> formatter = messageFormatter ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index 3f96908 . . 259b3fe 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 300 , 10 + 300 , 7 @ @ public final class Main { <nl> if ( commandLine . hasOption ( OPTION _ D _ NAME ) ) { <nl> final Logger parentLogger = Logger . getLogger ( Main . class . getName ( ) ) . getParent ( ) ; <nl> final ConsoleHandler handler = new ConsoleHandler ( ) ; <nl> - <nl> - parentLogger . setLevel ( Level . FINEST ) ; <nl> handler . setLevel ( Level . FINEST ) ; <nl> - parentLogger . addHandler ( handler ) ; <nl> handler . setFilter ( new Filter ( ) { <nl> private final String packageName = Main . class . getPackage ( ) . getName ( ) ; <nl> <nl> @ @ - 312 , 6 + 309 , 8 @ @ public final class Main { <nl> return record . getLoggerName ( ) . startsWith ( packageName ) ; <nl> } <nl> } ) ; <nl> + parentLogger . addHandler ( handler ) ; <nl> + parentLogger . setLevel ( Level . FINEST ) ; <nl> } <nl> if ( LOG . isDebugEnabled ( ) ) { <nl> LOG . debug ( " Checkstyle debug logging enabled " ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java <nl> index 600a723 . . ad98818 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java <nl> @ @ - 170 , 8 + 170 , 8 @ @ public abstract class AbstractHeaderCheck extends AbstractFileSetCheck <nl> * @ throws IOException if <nl> * / <nl> private void loadHeader ( final Reader headerReader ) throws IOException { <nl> - final LineNumberReader lnr = new LineNumberReader ( headerReader ) ; <nl> readerLines . clear ( ) ; <nl> + final LineNumberReader lnr = new LineNumberReader ( headerReader ) ; <nl> while ( true ) { <nl> final String line = lnr . readLine ( ) ; <nl> if ( line = = null ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> index 59df38f . . 179bbc3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> @ @ - 165 , 11 + 165 , 11 @ @ public class HandlerFactory { <nl> * / <nl> private AbstractExpressionHandler createMethodCallHandler ( IndentationCheck indentCheck , <nl> DetailAST ast , AbstractExpressionHandler parent ) { <nl> - AbstractExpressionHandler theParent = parent ; <nl> DetailAST astNode = ast . getFirstChild ( ) ; <nl> while ( astNode . getType ( ) = = TokenTypes . DOT ) { <nl> astNode = astNode . getFirstChild ( ) ; <nl> } <nl> + AbstractExpressionHandler theParent = parent ; <nl> if ( isHandledType ( astNode . getType ( ) ) ) { <nl> theParent = getHandler ( indentCheck , astNode , theParent ) ; <nl> createdHandlers . put ( astNode , theParent ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> index 9aea020 . . 0b42e51 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> @ @ - 93 , 9 + 93 , 7 @ @ class TagParser { <nl> * / <nl> private void parseTags ( String [ ] text , int lineNo ) { <nl> final int nLines = text . length ; <nl> - Point position = new Point ( 0 , 0 ) ; <nl> - <nl> - position = findChar ( text , ' < ' , position ) ; <nl> + Point position = findChar ( text , ' < ' , new Point ( 0 , 0 ) ) ; <nl> while ( position . getLineNo ( ) < nLines ) { <nl> / / if this is html comment then skip it <nl> if ( isCommentTag ( text , position ) ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> index 2117408 . . cc802a9 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> @ @ - 272 , 9 + 272 , 9 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { <nl> int attemptCount = 0 ; <nl> <nl> while ( attemptCount < = attemptLimit ) { <nl> - final URL addres = new URL ( url ) ; <nl> InputStream stream = null ; <nl> try { <nl> + final URL addres = new URL ( url ) ; <nl> stream = addres . openStream ( ) ; <nl> / / Attemt to read a byte in order to check wtether file content is available <nl> available = stream . read ( ) ! = - 1 ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java <nl> index 3c18c85 . . 5acd40a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java <nl> @ @ - 50 , 8 + 50 , 8 @ @ public final class XDocUtil { <nl> * / <nl> public static Set < Path > getXdocsFilePaths ( ) throws IOException { <nl> final Path directory = Paths . get ( DIRECTORY _ PATH ) ; <nl> - final Set < Path > xdocs = new HashSet < > ( ) ; <nl> try ( DirectoryStream < Path > stream = Files . newDirectoryStream ( directory , " * . xml " ) ) { <nl> + final Set < Path > xdocs = new HashSet < > ( ) ; <nl> for ( Path entry : stream ) { <nl> xdocs . add ( entry ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 48122c7 . . 47114dc 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1126 , 7 + 1126 , 6 @ @ <nl> < regex > < pattern > . * . checks . regexp . CommentSuppressor < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . regexp . DetectorOptions < / pattern > < branchRate > 100 < / branchRate > < lineRate > 96 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . regexp . MultilineDetector < / pattern > < branchRate > 58 < / branchRate > < lineRate > 87 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . regexp . RegexpMultilineCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 76 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . regexp . SinglelineDetector < / pattern > < branchRate > 93 < / branchRate > < lineRate > 96 < / lineRate > < / regex > <nl> <nl> < regex > < pattern > . * . filters . SuppressionCommentFilter < / pattern > < branchRate > 83 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java <nl> index 8368a57 . . 33b05ed 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . regexp ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . EMPTY ; <nl> import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . REGEXP _ EXCEEDED ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . REGEXP _ MINIMUM ; <nl> import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . STACKOVERFLOW ; <nl> <nl> import java . io . File ; <nl> @ @ - 104 , 6 + 105 , 7 @ @ public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { <nl> public void testCarriageReturn ( ) throws Exception { <nl> final String illegal = " \ \ r " ; <nl> checkConfig . addAttribute ( " format " , illegal ) ; <nl> + checkConfig . addAttribute ( " maximum " , " 0 " ) ; <nl> final String [ ] expected = { <nl> " 1 : " + getCheckMessage ( REGEXP _ EXCEEDED , illegal ) , <nl> " 3 : " + getCheckMessage ( REGEXP _ EXCEEDED , illegal ) , <nl> @ @ - 146 , 7 + 148 , 22 @ @ public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { <nl> verify ( checkConfig , file . getPath ( ) , expected ) ; <nl> } <nl> <nl> - private CharSequence makeLargeXYString ( ) { <nl> + @ Test <nl> + public void testMinimum ( ) throws Exception { <nl> + final String illegal = " \ \ r " ; <nl> + checkConfig . addAttribute ( " format " , illegal ) ; <nl> + checkConfig . addAttribute ( " minimum " , " 5 " ) ; <nl> + final String [ ] expected = { <nl> + " 0 : " + getCheckMessage ( REGEXP _ MINIMUM , " 5 " , illegal ) , <nl> + } ; <nl> + <nl> + final File file = temporaryFolder . newFile ( ) ; <nl> + Files . write ( " " , file , Charsets . UTF _ 8 ) ; <nl> + <nl> + verify ( checkConfig , file . getPath ( ) , expected ) ; <nl> + } <nl> + <nl> + private static CharSequence makeLargeXYString ( ) { <nl> / / now needs 10 ' 000 or 100 ' 000 , as just 1000 is no longer enough today to provoke the StackOverflowError <nl> final int size = 100000 ; <nl> StringBuffer largeString = new StringBuffer ( size ) ;

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 index 2bb91ff . . 7e2e340 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 @ @ - 97 , 14 + 97 , 14 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { 
 closeInfo = closeInfoAfterUse ; 
 closeError = closeErrorAfterUse ; 
 final Writer infoStreamWriter = new OutputStreamWriter ( infoStream , StandardCharsets . UTF _ 8 ) ; 
 - final Writer errorStreamWriter = new OutputStreamWriter ( errorStream , 
 - StandardCharsets . UTF _ 8 ) ; 
 infoWriter = new PrintWriter ( infoStreamWriter ) ; 
 
 if ( infoStream = = errorStream ) { 
 errorWriter = infoWriter ; 
 } 
 else { 
 + final Writer errorStreamWriter = new OutputStreamWriter ( errorStream , 
 + StandardCharsets . UTF _ 8 ) ; 
 errorWriter = new PrintWriter ( errorStreamWriter ) ; 
 } 
 formatter = messageFormatter ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index 3f96908 . . 259b3fe 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 300 , 10 + 300 , 7 @ @ public final class Main { 
 if ( commandLine . hasOption ( OPTION _ D _ NAME ) ) { 
 final Logger parentLogger = Logger . getLogger ( Main . class . getName ( ) ) . getParent ( ) ; 
 final ConsoleHandler handler = new ConsoleHandler ( ) ; 
 - 
 - parentLogger . setLevel ( Level . FINEST ) ; 
 handler . setLevel ( Level . FINEST ) ; 
 - parentLogger . addHandler ( handler ) ; 
 handler . setFilter ( new Filter ( ) { 
 private final String packageName = Main . class . getPackage ( ) . getName ( ) ; 
 
 @ @ - 312 , 6 + 309 , 8 @ @ public final class Main { 
 return record . getLoggerName ( ) . startsWith ( packageName ) ; 
 } 
 } ) ; 
 + parentLogger . addHandler ( handler ) ; 
 + parentLogger . setLevel ( Level . FINEST ) ; 
 } 
 if ( LOG . isDebugEnabled ( ) ) { 
 LOG . debug ( " Checkstyle debug logging enabled " ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java 
 index 600a723 . . ad98818 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java 
 @ @ - 170 , 8 + 170 , 8 @ @ public abstract class AbstractHeaderCheck extends AbstractFileSetCheck 
 * @ throws IOException if 
 * / 
 private void loadHeader ( final Reader headerReader ) throws IOException { 
 - final LineNumberReader lnr = new LineNumberReader ( headerReader ) ; 
 readerLines . clear ( ) ; 
 + final LineNumberReader lnr = new LineNumberReader ( headerReader ) ; 
 while ( true ) { 
 final String line = lnr . readLine ( ) ; 
 if ( line = = null ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 index 59df38f . . 179bbc3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 @ @ - 165 , 11 + 165 , 11 @ @ public class HandlerFactory { 
 * / 
 private AbstractExpressionHandler createMethodCallHandler ( IndentationCheck indentCheck , 
 DetailAST ast , AbstractExpressionHandler parent ) { 
 - AbstractExpressionHandler theParent = parent ; 
 DetailAST astNode = ast . getFirstChild ( ) ; 
 while ( astNode . getType ( ) = = TokenTypes . DOT ) { 
 astNode = astNode . getFirstChild ( ) ; 
 } 
 + AbstractExpressionHandler theParent = parent ; 
 if ( isHandledType ( astNode . getType ( ) ) ) { 
 theParent = getHandler ( indentCheck , astNode , theParent ) ; 
 createdHandlers . put ( astNode , theParent ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 index 9aea020 . . 0b42e51 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 @ @ - 93 , 9 + 93 , 7 @ @ class TagParser { 
 * / 
 private void parseTags ( String [ ] text , int lineNo ) { 
 final int nLines = text . length ; 
 - Point position = new Point ( 0 , 0 ) ; 
 - 
 - position = findChar ( text , ' < ' , position ) ; 
 + Point position = findChar ( text , ' < ' , new Point ( 0 , 0 ) ) ; 
 while ( position . getLineNo ( ) < nLines ) { 
 / / if this is html comment then skip it 
 if ( isCommentTag ( text , position ) ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 index 2117408 . . cc802a9 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 @ @ - 272 , 9 + 272 , 9 @ @ public class SuppressionFilterTest extends BaseCheckTestSupport { 
 int attemptCount = 0 ; 
 
 while ( attemptCount < = attemptLimit ) { 
 - final URL addres = new URL ( url ) ; 
 InputStream stream = null ; 
 try { 
 + final URL addres = new URL ( url ) ; 
 stream = addres . openStream ( ) ; 
 / / Attemt to read a byte in order to check wtether file content is available 
 available = stream . read ( ) ! = - 1 ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java 
 index 3c18c85 . . 5acd40a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocUtil . java 
 @ @ - 50 , 8 + 50 , 8 @ @ public final class XDocUtil { 
 * / 
 public static Set < Path > getXdocsFilePaths ( ) throws IOException { 
 final Path directory = Paths . get ( DIRECTORY _ PATH ) ; 
 - final Set < Path > xdocs = new HashSet < > ( ) ; 
 try ( DirectoryStream < Path > stream = Files . newDirectoryStream ( directory , " * . xml " ) ) { 
 + final Set < Path > xdocs = new HashSet < > ( ) ; 
 for ( Path entry : stream ) { 
 xdocs . add ( entry ) ; 
 }

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 48122c7 . . 47114dc 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1126 , 7 + 1126 , 6 @ @ 
 < regex > < pattern > . * . checks . regexp . CommentSuppressor < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . regexp . DetectorOptions < / pattern > < branchRate > 100 < / branchRate > < lineRate > 96 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . regexp . MultilineDetector < / pattern > < branchRate > 58 < / branchRate > < lineRate > 87 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . regexp . RegexpMultilineCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 76 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . regexp . SinglelineDetector < / pattern > < branchRate > 93 < / branchRate > < lineRate > 96 < / lineRate > < / regex > 
 
 < regex > < pattern > . * . filters . SuppressionCommentFilter < / pattern > < branchRate > 83 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java 
 index 8368a57 . . 33b05ed 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . regexp ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . EMPTY ; 
 import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . REGEXP _ EXCEEDED ; 
 + import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . REGEXP _ MINIMUM ; 
 import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . STACKOVERFLOW ; 
 
 import java . io . File ; 
 @ @ - 104 , 6 + 105 , 7 @ @ public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { 
 public void testCarriageReturn ( ) throws Exception { 
 final String illegal = " \ \ r " ; 
 checkConfig . addAttribute ( " format " , illegal ) ; 
 + checkConfig . addAttribute ( " maximum " , " 0 " ) ; 
 final String [ ] expected = { 
 " 1 : " + getCheckMessage ( REGEXP _ EXCEEDED , illegal ) , 
 " 3 : " + getCheckMessage ( REGEXP _ EXCEEDED , illegal ) , 
 @ @ - 146 , 7 + 148 , 22 @ @ public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { 
 verify ( checkConfig , file . getPath ( ) , expected ) ; 
 } 
 
 - private CharSequence makeLargeXYString ( ) { 
 + @ Test 
 + public void testMinimum ( ) throws Exception { 
 + final String illegal = " \ \ r " ; 
 + checkConfig . addAttribute ( " format " , illegal ) ; 
 + checkConfig . addAttribute ( " minimum " , " 5 " ) ; 
 + final String [ ] expected = { 
 + " 0 : " + getCheckMessage ( REGEXP _ MINIMUM , " 5 " , illegal ) , 
 + } ; 
 + 
 + final File file = temporaryFolder . newFile ( ) ; 
 + Files . write ( " " , file , Charsets . UTF _ 8 ) ; 
 + 
 + verify ( checkConfig , file . getPath ( ) , expected ) ; 
 + } 
 + 
 + private static CharSequence makeLargeXYString ( ) { 
 / / now needs 10 ' 000 or 100 ' 000 , as just 1000 is no longer enough today to provoke the StackOverflowError 
 final int size = 100000 ; 
 StringBuffer largeString = new StringBuffer ( size ) ;
