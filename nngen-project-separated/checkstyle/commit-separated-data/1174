BLEU SCORE: 0.018155431088372653

TEST MSG: Issue # 3229 : update to java8
GENERATED MSG: reorganization of build sequence to speedup build failure , as verify stage is most common mistakes

TEST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index 1e557a1 . . 6c698d9 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 63 , 8 + 63 , 8 @ @ matrix : <nl> - CMD7 = " & & if grep ' warning ' output . log ; then exit 1 ; fi " <nl> - CMD = $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 <nl> - COVERAGE _ CMD = " " <nl> - # nemo . sonarqube . com ( oraclejdk7 ) <nl> - - jdk : oraclejdk7 <nl> + # nemo . sonarqube . com ( oraclejd8 ) <nl> + - jdk : oraclejdk8 <nl> env : <nl> - DESC = " nemo . sonarqube . com " <nl> - CMD1 = " mvn clean install cobertura : cobertura - Dcobertura . report . format = xml " <nl> @ @ - 269 , 6 + 269 , 7 @ @ matrix : <nl> - CMD3 = " - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dgpg . skip = true ' " <nl> - CMD = $ CMD1 $ CMD2 $ CMD3 <nl> - COVERAGE _ CMD = " " <nl> + <nl> # unit tests in German locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : DESC = " tests de " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = de - Duser . country = DE - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> @ @ - 293 , 22 + 294 , 6 @ @ matrix : <nl> # unit tests in Turkish locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : DESC = " tests tr " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = tr - Duser . country = TR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " <nl> - # unit tests ( openjdk7 , oraclejdk7 ) <nl> - - jdk : openjdk7 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " <nl> - - jdk : oraclejdk7 <nl> - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " <nl> - # checkstyle ( openjdk7 , oraclejdk7 ) <nl> - - jdk : openjdk7 <nl> - env : <nl> - - DESC = " checkstyle and sevntu - checkstyle " <nl> - - CMD = " mvn clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " <nl> - - COVERAGE _ CMD = " " <nl> - - jdk : oraclejdk7 <nl> - env : <nl> - - DESC = " checkstyle and sevntu - checkstyle " <nl> - - CMD = " mvn clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " <nl> - - COVERAGE _ CMD = " " <nl> <nl> # MacOS verify ( till cache is not working , we can not do verify ) <nl> - os : osx <nl> diff - - git a / pom . xml b / pom . xml <nl> index 0275ebc . . 0266df3 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 199 , 7 + 199 , 7 @ @ <nl> < maven . sevntu . checkstyle . plugin . version > 1 . 21 . 0 < / maven . sevntu . checkstyle . plugin . version > <nl> < tools . jar . version > 1 . 7 . 0 < / tools . jar . version > <nl> < tools . jar . path > $ { java . home } / . . / lib / tools . jar < / tools . jar . path > <nl> - < java . version > 1 . 7 < / java . version > <nl> + < java . version > 1 . 8 < / java . version > <nl> < checkstyle . version > 6 . 18 < / checkstyle . version > <nl> < / properties > <nl> <nl> @ @ - 1174 , 7 + 1174 , 7 @ @ <nl> < ! - - SSLHandshakeException but page is opening - - > <nl> < excludedLink > http : / / www . sickboy . cz / checkstyle / < / excludedLink > <nl> < ! - - Excluded due to Checkstyle ' s issue # 549 until https : / / issues . apache . org / jira / browse / MJAVADOC - 428 will be fixed - - > <nl> - < excludedLink > http : / / docs . oracle . com / javase / 7 / docs / api / org / xml / sax / helpers . DefaultHandler . html ? * < / excludedLink > <nl> + < excludedLink > http : / / docs . oracle . com / javase / 8 / docs / api / org / xml / sax / helpers . DefaultHandler . html ? * < / excludedLink > <nl> < ! - - Excluded due to Maven Enforcer Plugin ' s issue # 234 : https : / / issues . apache . org / jira / browse / MENFORCER - 234 - - > <nl> < excludedLink > http : / / maven . apache . org / enforcer / maven - enforcer - plugin < / excludedLink > <nl> < ! - - Excluded due to Maven Surefire Plugin ' s issue # 1173 : https : / / issues . apache . org / jira / browse / SUREFIRE - 1173 - - >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> index 4fa2cfe . . 2a58105 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> @ @ - 229 , 7 + 229 , 9 @ @ public abstract class AbstractSuperCheck <nl> } <nl> final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; <nl> final String name = nameAST . getText ( ) ; <nl> - if ( ! getMethodName ( ) . equals ( name ) ) { <nl> + final DetailAST modifiersAST = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> + if ( ! getMethodName ( ) . equals ( name ) <nl> + | | modifiersAST . branchContains ( TokenTypes . LITERAL _ NATIVE ) ) { <nl> return false ; <nl> } <nl> final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java <nl> index 1c74215 . . 023c369 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> / * * <nl> * < p > <nl> * Checks that an overriding clone ( ) method invokes super . clone ( ) . <nl> + * Does not check native methods , as they have no possible java defined implementation . <nl> * < / p > <nl> * < p > <nl> * Reference : < a <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java <nl> index 893f265 . . 2301bde 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> / * * <nl> * < p > <nl> * Checks that an overriding finalize ( ) method invokes super . finalize ( ) . <nl> + * Does not check native methods , as they have no possible java defined implementation . <nl> * < / p > <nl> * < p > <nl> * Reference : < a <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java <nl> index e8812ba . . cfcf311 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java <nl> @ @ - 43 , 6 + 43 , 7 @ @ public class NoCloneCheckTest <nl> " 39 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 52 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 60 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 98 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> index b7a24a7 . . 0da4711 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> @ @ - 106 , 6 + 106 , 7 @ @ public class OneTopLevelClassCheckTest extends BaseCheckTestSupport { <nl> " 58 : " + getCheckMessage ( MSG _ KEY , " CloneWithTypeArgumentsAndNoSuper " ) , <nl> " 67 : " + getCheckMessage ( MSG _ KEY , " MyClassWithGenericSuperMethod " ) , <nl> " 84 : " + getCheckMessage ( MSG _ KEY , " AnotherClass " ) , <nl> + " 97 : " + getCheckMessage ( MSG _ KEY , " NativeTest " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java <nl> index 707669f . . ca858c5 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java <nl> @ @ - 93 , 3 + 93 , 7 @ @ class AnotherClass { <nl> 	 return null ; <nl> } <nl> } <nl> + <nl> + class NativeTest { <nl> + public native Object clone ( ) ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java <nl> index a7ed92b . . cd734dd 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java <nl> @ @ - 51 , 3 + 51 , 7 @ @ class MyClassWithGenericSuperMethod1 <nl> <nl> } <nl> } <nl> + <nl> + class TestNative { <nl> + public native void finalize ( ) ; <nl> + } <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index 454589a . . 23d6bdd 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 1564 , 8 + 1564 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) <nl> < section name = " SuperClone " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks that an overriding < code > clone ( ) < / code > method <nl> - invokes < code > super . clone ( ) < / code > . <nl> + Checks that an overriding < code > clone ( ) < / code > method invokes <nl> + < code > super . clone ( ) < / code > . Does not check native methods , as <nl> + they have no possible java defined implementation . <nl> < / p > <nl> <nl> < p > <nl> @ @ - 1599 , 8 + 1600 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) <nl> < section name = " SuperFinalize " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks that an overriding < code > finalize ( ) < / code > <nl> - method invokes < code > super . finalize ( ) < / code > . <nl> + Checks that an overriding < code > finalize ( ) < / code > method invokes <nl> + < code > super . finalize ( ) < / code > . Does not check native methods , as <nl> + they have no possible java defined implementation . <nl> < / p > <nl> <nl> < p >

TEST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index 1e557a1 . . 6c698d9 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 63 , 8 + 63 , 8 @ @ matrix : 
 - CMD7 = " & & if grep ' warning ' output . log ; then exit 1 ; fi " 
 - CMD = $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 
 - COVERAGE _ CMD = " " 
 - # nemo . sonarqube . com ( oraclejdk7 ) 
 - - jdk : oraclejdk7 
 + # nemo . sonarqube . com ( oraclejd8 ) 
 + - jdk : oraclejdk8 
 env : 
 - DESC = " nemo . sonarqube . com " 
 - CMD1 = " mvn clean install cobertura : cobertura - Dcobertura . report . format = xml " 
 @ @ - 269 , 6 + 269 , 7 @ @ matrix : 
 - CMD3 = " - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dgpg . skip = true ' " 
 - CMD = $ CMD1 $ CMD2 $ CMD3 
 - COVERAGE _ CMD = " " 
 + 
 # unit tests in German locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : DESC = " tests de " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = de - Duser . country = DE - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 @ @ - 293 , 22 + 294 , 6 @ @ matrix : 
 # unit tests in Turkish locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : DESC = " tests tr " CMD = " mvn clean integration - test failsafe : verify - DargLine = ' - Duser . language = tr - Duser . country = TR - XX : - UseSplitVerifier ' " COVERAGE _ CMD = " " 
 - # unit tests ( openjdk7 , oraclejdk7 ) 
 - - jdk : openjdk7 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " 
 - - jdk : oraclejdk7 
 - env : DESC = " tests " CMD = " mvn clean integration - test failsafe : verify " COVERAGE _ CMD = " " 
 - # checkstyle ( openjdk7 , oraclejdk7 ) 
 - - jdk : openjdk7 
 - env : 
 - - DESC = " checkstyle and sevntu - checkstyle " 
 - - CMD = " mvn clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " 
 - - COVERAGE _ CMD = " " 
 - - jdk : oraclejdk7 
 - env : 
 - - DESC = " checkstyle and sevntu - checkstyle " 
 - - CMD = " mvn clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " 
 - - COVERAGE _ CMD = " " 
 
 # MacOS verify ( till cache is not working , we can not do verify ) 
 - os : osx 
 diff - - git a / pom . xml b / pom . xml 
 index 0275ebc . . 0266df3 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 199 , 7 + 199 , 7 @ @ 
 < maven . sevntu . checkstyle . plugin . version > 1 . 21 . 0 < / maven . sevntu . checkstyle . plugin . version > 
 < tools . jar . version > 1 . 7 . 0 < / tools . jar . version > 
 < tools . jar . path > $ { java . home } / . . / lib / tools . jar < / tools . jar . path > 
 - < java . version > 1 . 7 < / java . version > 
 + < java . version > 1 . 8 < / java . version > 
 < checkstyle . version > 6 . 18 < / checkstyle . version > 
 < / properties > 
 
 @ @ - 1174 , 7 + 1174 , 7 @ @ 
 < ! - - SSLHandshakeException but page is opening - - > 
 < excludedLink > http : / / www . sickboy . cz / checkstyle / < / excludedLink > 
 < ! - - Excluded due to Checkstyle ' s issue # 549 until https : / / issues . apache . org / jira / browse / MJAVADOC - 428 will be fixed - - > 
 - < excludedLink > http : / / docs . oracle . com / javase / 7 / docs / api / org / xml / sax / helpers . DefaultHandler . html ? * < / excludedLink > 
 + < excludedLink > http : / / docs . oracle . com / javase / 8 / docs / api / org / xml / sax / helpers . DefaultHandler . html ? * < / excludedLink > 
 < ! - - Excluded due to Maven Enforcer Plugin ' s issue # 234 : https : / / issues . apache . org / jira / browse / MENFORCER - 234 - - > 
 < excludedLink > http : / / maven . apache . org / enforcer / maven - enforcer - plugin < / excludedLink > 
 < ! - - Excluded due to Maven Surefire Plugin ' s issue # 1173 : https : / / issues . apache . org / jira / browse / SUREFIRE - 1173 - - >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 index 4fa2cfe . . 2a58105 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 @ @ - 229 , 7 + 229 , 9 @ @ public abstract class AbstractSuperCheck 
 } 
 final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; 
 final String name = nameAST . getText ( ) ; 
 - if ( ! getMethodName ( ) . equals ( name ) ) { 
 + final DetailAST modifiersAST = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 + if ( ! getMethodName ( ) . equals ( name ) 
 + | | modifiersAST . branchContains ( TokenTypes . LITERAL _ NATIVE ) ) { 
 return false ; 
 } 
 final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java 
 index 1c74215 . . 023c369 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java 
 @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 / * * 
 * < p > 
 * Checks that an overriding clone ( ) method invokes super . clone ( ) . 
 + * Does not check native methods , as they have no possible java defined implementation . 
 * < / p > 
 * < p > 
 * Reference : < a 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java 
 index 893f265 . . 2301bde 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java 
 @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 / * * 
 * < p > 
 * Checks that an overriding finalize ( ) method invokes super . finalize ( ) . 
 + * Does not check native methods , as they have no possible java defined implementation . 
 * < / p > 
 * < p > 
 * Reference : < a 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java 
 index e8812ba . . cfcf311 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java 
 @ @ - 43 , 6 + 43 , 7 @ @ public class NoCloneCheckTest 
 " 39 : " + getCheckMessage ( MSG _ KEY ) , 
 " 52 : " + getCheckMessage ( MSG _ KEY ) , 
 " 60 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 98 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 index b7a24a7 . . 0da4711 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 @ @ - 106 , 6 + 106 , 7 @ @ public class OneTopLevelClassCheckTest extends BaseCheckTestSupport { 
 " 58 : " + getCheckMessage ( MSG _ KEY , " CloneWithTypeArgumentsAndNoSuper " ) , 
 " 67 : " + getCheckMessage ( MSG _ KEY , " MyClassWithGenericSuperMethod " ) , 
 " 84 : " + getCheckMessage ( MSG _ KEY , " AnotherClass " ) , 
 + " 97 : " + getCheckMessage ( MSG _ KEY , " NativeTest " ) , 
 } ; 
 verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java 
 index 707669f . . ca858c5 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java 
 @ @ - 93 , 3 + 93 , 7 @ @ class AnotherClass { 
 	 return null ; 
 } 
 } 
 + 
 + class NativeTest { 
 + public native Object clone ( ) ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java 
 index a7ed92b . . cd734dd 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java 
 @ @ - 51 , 3 + 51 , 7 @ @ class MyClassWithGenericSuperMethod1 
 
 } 
 } 
 + 
 + class TestNative { 
 + public native void finalize ( ) ; 
 + } 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index 454589a . . 23d6bdd 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 1564 , 8 + 1564 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) 
 < section name = " SuperClone " > 
 < subsection name = " Description " > 
 < p > 
 - Checks that an overriding < code > clone ( ) < / code > method 
 - invokes < code > super . clone ( ) < / code > . 
 + Checks that an overriding < code > clone ( ) < / code > method invokes 
 + < code > super . clone ( ) < / code > . Does not check native methods , as 
 + they have no possible java defined implementation . 
 < / p > 
 
 < p > 
 @ @ - 1599 , 8 + 1600 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) 
 < section name = " SuperFinalize " > 
 < subsection name = " Description " > 
 < p > 
 - Checks that an overriding < code > finalize ( ) < / code > 
 - method invokes < code > super . finalize ( ) < / code > . 
 + Checks that an overriding < code > finalize ( ) < / code > method invokes 
 + < code > super . finalize ( ) < / code > . Does not check native methods , as 
 + they have no possible java defined implementation . 
 < / p > 
 
 < p >
