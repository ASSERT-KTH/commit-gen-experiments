BLEU SCORE: 0.805312203079627

TEST MSG: Revert " Issue # 2290 : Add ' skipCatchParameter ' to skip catch parameter from validation "
GENERATED MSG: Issue # 2290 : Add ' skipCatchParameter ' to skip catch parameter from validation

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> index 20527fa . . b5cf4a7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> @ @ - 30 , 11 + 30 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * and defaults to <nl> * < strong > ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ < / strong > . <nl> * < / p > <nl> - * < p > The check has the following options : < / p > <nl> + * < p > The check has the following option : < / p > <nl> * < p > < b > ignoreOverridden < / b > - allows to skip methods with Override annotation from <nl> - * validation . Default value is < b > false < / b > . < / p > <nl> - * < p > < b > skipCatchParameter < / b > - allows to skip catcj parameter from validation . Default value <nl> - * is < b > true < / b > . < / p > <nl> + * validation . Default values is < b > false < / b > . < / p > <nl> * < p > <nl> * An example of how to configure the check is : <nl> * < / p > <nl> @ @ - 59 , 14 + 57 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * & lt ; property name = " ignoreOverridden " value = " true " / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> - * < p > <nl> - * An example of how to configure the check to skip catch parameter from validation : <nl> - * < / p > <nl> - * < pre > <nl> - * & lt ; module name = " ParameterName " & gt ; <nl> - * & lt ; property name = " skipCatchParameter " value = " true " / & gt ; <nl> - * & lt ; / module & gt ; <nl> - * < / pre > <nl> * <nl> * @ author Oliver Burn <nl> * @ author Andrei Selkin <nl> @ @ - 80 , 11 + 70 , 6 @ @ public class ParameterNameCheck <nl> private boolean ignoreOverridden ; <nl> <nl> / * * <nl> - * Allows to skip catch parameter from validation . <nl> - * / <nl> - private boolean skipCatchParameter = true ; <nl> - <nl> - / * * <nl> * Creates a new { @ code ParameterNameCheck } instance . <nl> * / <nl> public ParameterNameCheck ( ) { <nl> @ @ - 100 , 14 + 85 , 6 @ @ public class ParameterNameCheck <nl> this . ignoreOverridden = ignoreOverridden ; <nl> } <nl> <nl> - / * * <nl> - * Sets whether to skip catch parameter from validation . <nl> - * @ param skipCatchParameter Flag for skipping catch parameter . <nl> - * / <nl> - public void setSkipCatchParameter ( boolean skipCatchParameter ) { <nl> - this . skipCatchParameter = skipCatchParameter ; <nl> - } <nl> - <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> return getAcceptableTokens ( ) ; <nl> @ @ - 127 , 7 + 104 , 7 @ @ public class ParameterNameCheck <nl> protected boolean mustCheckName ( DetailAST ast ) { <nl> boolean checkName = true ; <nl> if ( ignoreOverridden & & isOverriddenMethod ( ast ) <nl> - | | skipCatchParameter & & ast . getParent ( ) . getType ( ) = = TokenTypes . LITERAL _ CATCH ) { <nl> + | | ast . getParent ( ) . getType ( ) = = TokenTypes . LITERAL _ CATCH ) { <nl> checkName = false ; <nl> } <nl> return checkName ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheckTest . java <nl> index 0d0fe08 . . 1c35fd3 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheckTest . java <nl> @ @ - 137 , 132 + 137 , 4 @ @ public class ParameterNameCheckTest <nl> } ; <nl> verify ( checkConfig , getPath ( " InputOverrideAnnotation . java " ) , expected ) ; <nl> } <nl> - <nl> - @ Test <nl> - public void testSkipCatchParameterTrue ( ) <nl> - throws Exception { <nl> - final DefaultConfiguration checkConfig = <nl> - createCheckConfig ( ParameterNameCheck . class ) ; <nl> - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; <nl> - checkConfig . addAttribute ( " skipCatchParameter " , " true " ) ; <nl> - <nl> - final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> - <nl> - verify ( checkConfig , getPath ( " InputCatchParameter . java " ) , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testSkipCatchParameterFalse ( ) <nl> - throws Exception { <nl> - final DefaultConfiguration checkConfig = <nl> - createCheckConfig ( ParameterNameCheck . class ) ; <nl> - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; <nl> - checkConfig . addAttribute ( " skipCatchParameter " , " false " ) ; <nl> - final String pattern = " ^ h $ " ; <nl> - <nl> - final String [ ] expected = { <nl> - " 13 : 26 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , <nl> - " 22 : 64 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , <nl> - } ; <nl> - <nl> - verify ( checkConfig , getPath ( " InputCatchParameter . java " ) , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testSkipCatchParameterTrueAndIgnoreOverriddenTrue ( ) <nl> - throws Exception { <nl> - final DefaultConfiguration checkConfig = <nl> - createCheckConfig ( ParameterNameCheck . class ) ; <nl> - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; <nl> - checkConfig . addAttribute ( " skipCatchParameter " , " true " ) ; <nl> - checkConfig . addAttribute ( " ignoreOverridden " , " true " ) ; <nl> - final String pattern = " ^ h $ " ; <nl> - <nl> - final String [ ] expected = { <nl> - " 13 : 29 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " object " , pattern ) , <nl> - " 17 : 30 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " aaaa " , pattern ) , <nl> - " 21 : 19 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , <nl> - " 21 : 28 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " bd " , pattern ) , <nl> - " 23 : 18 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , <nl> - " 30 : 43 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " field " , pattern ) , <nl> - " 30 : 62 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " packageNames " , pattern ) , <nl> - } ; <nl> - <nl> - verify ( checkConfig , getPath ( " InputParameterNameMultipleOptions . java " ) , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testSkipCatchParameterFalseAndIgnoreOverriddenFalse ( ) <nl> - throws Exception { <nl> - final DefaultConfiguration checkConfig = <nl> - createCheckConfig ( ParameterNameCheck . class ) ; <nl> - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; <nl> - checkConfig . addAttribute ( " skipCatchParameter " , " false " ) ; <nl> - checkConfig . addAttribute ( " ignoreOverridden " , " false " ) ; <nl> - final String pattern = " ^ h $ " ; <nl> - <nl> - final String [ ] expected = { <nl> - " 8 : 34 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " o " , pattern ) , <nl> - " 13 : 29 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " object " , pattern ) , <nl> - " 17 : 30 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " aaaa " , pattern ) , <nl> - " 21 : 19 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , <nl> - " 21 : 28 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " bd " , pattern ) , <nl> - " 23 : 18 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , <nl> - " 30 : 43 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " field " , pattern ) , <nl> - " 30 : 62 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " packageNames " , pattern ) , <nl> - " 36 : 26 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , <nl> - " 45 : 64 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , <nl> - } ; <nl> - <nl> - verify ( checkConfig , getPath ( " InputParameterNameMultipleOptions . java " ) , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testSkipCatchParameterTrueAndIgnoreOverriddenFalse ( ) <nl> - throws Exception { <nl> - final DefaultConfiguration checkConfig = <nl> - createCheckConfig ( ParameterNameCheck . class ) ; <nl> - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; <nl> - checkConfig . addAttribute ( " skipCatchParameter " , " true " ) ; <nl> - checkConfig . addAttribute ( " ignoreOverridden " , " false " ) ; <nl> - final String pattern = " ^ h $ " ; <nl> - <nl> - final String [ ] expected = { <nl> - " 8 : 34 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " o " , pattern ) , <nl> - " 13 : 29 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " object " , pattern ) , <nl> - " 17 : 30 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " aaaa " , pattern ) , <nl> - " 21 : 19 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , <nl> - " 21 : 28 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " bd " , pattern ) , <nl> - " 23 : 18 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , <nl> - " 30 : 43 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " field " , pattern ) , <nl> - " 30 : 62 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " packageNames " , pattern ) , <nl> - } ; <nl> - <nl> - verify ( checkConfig , getPath ( " InputParameterNameMultipleOptions . java " ) , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void testSkipCatchParameterFalseAndIgnoreOverriddenTrue ( ) <nl> - throws Exception { <nl> - final DefaultConfiguration checkConfig = <nl> - createCheckConfig ( ParameterNameCheck . class ) ; <nl> - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; <nl> - checkConfig . addAttribute ( " skipCatchParameter " , " false " ) ; <nl> - checkConfig . addAttribute ( " ignoreOverridden " , " true " ) ; <nl> - final String pattern = " ^ h $ " ; <nl> - <nl> - final String [ ] expected = { <nl> - " 13 : 29 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " object " , pattern ) , <nl> - " 17 : 30 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " aaaa " , pattern ) , <nl> - " 21 : 19 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , <nl> - " 21 : 28 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " bd " , pattern ) , <nl> - " 23 : 18 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , <nl> - " 30 : 43 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " field " , pattern ) , <nl> - " 30 : 62 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " packageNames " , pattern ) , <nl> - " 36 : 26 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , <nl> - " 45 : 64 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , <nl> - } ; <nl> - <nl> - verify ( checkConfig , getPath ( " InputParameterNameMultipleOptions . java " ) , expected ) ; <nl> - } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputCatchParameter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputCatchParameter . java <nl> deleted file mode 100644 <nl> index 47388be . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputCatchParameter . java <nl> + + + / dev / null <nl> @ @ - 1 , 27 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . naming ; <nl> - <nl> - import java . io . FileNotFoundException ; <nl> - import java . io . IOException ; <nl> - import java . sql . SQLException ; <nl> - <nl> - public class InputCatchParameter { <nl> - <nl> - void foo1 ( ) { <nl> - try { <nl> - <nl> - } <nl> - catch ( Exception ex ) { <nl> - <nl> - } <nl> - } <nl> - <nl> - void foo2 ( ) { <nl> - try { <nl> - <nl> - } <nl> - catch ( NullPointerException | IllegalArgumentException ex ) { <nl> - / / just to check how the ParentName ' s option ' skipCahcthParameter ' deals with catching <nl> - / / multiple exception types and <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputOverrideAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputOverrideAnnotation . java <nl> index 608b3a5 . . e4e40d1 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputOverrideAnnotation . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputOverrideAnnotation . java <nl> @ @ - 26 , 4 + 26 , 6 @ @ public class InputOverrideAnnotation { <nl> InputOverrideAnnotation ( ) { } / / No NPE here ! <nl> <nl> InputOverrideAnnotation ( int field , java . util . Set < String > packageNames ) { } / / No NPE here ! <nl> + <nl> + <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputParameterNameMultipleOptions . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputParameterNameMultipleOptions . java <nl> deleted file mode 100644 <nl> index f42bd21 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputParameterNameMultipleOptions . java <nl> + + + / dev / null <nl> @ @ - 1 , 50 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . naming ; <nl> - <nl> - import java . util . Set ; <nl> - <nl> - public class InputParameterNameMultipleOptions { <nl> - <nl> - @ Override <nl> - public boolean equals ( Object o ) { <nl> - return super . equals ( o ) ; <nl> - } <nl> - <nl> - @ SuppressWarnings ( " " ) <nl> - public void foo1 ( Object object ) { <nl> - <nl> - } <nl> - <nl> - public void foo2 ( Integer aaaa ) { } <nl> - <nl> - void foo3 ( ) { } / / No NPE here ! <nl> - <nl> - void foo4 ( int abc , int bd ) { } / / No NPE here ! <nl> - <nl> - int foo5 ( int abc ) { return 1 ; } / / No NPE here ! <nl> - <nl> - private int field ; <nl> - private Set < String > packageNames ; <nl> - <nl> - InputParameterNameMultipleOptions ( ) { } / / No NPE here ! <nl> - <nl> - InputParameterNameMultipleOptions ( int field , Set < String > packageNames ) { } / / No NPE here ! <nl> - <nl> - void foo6 ( ) { <nl> - try { <nl> - <nl> - } <nl> - catch ( Exception ex ) { <nl> - <nl> - } <nl> - } <nl> - <nl> - void foo7 ( ) { <nl> - try { <nl> - <nl> - } <nl> - catch ( NullPointerException | IllegalArgumentException ex ) { <nl> - / / just to check how the ParentName ' s option ' skipCahcthParameter ' deals with catching <nl> - / / multiple exception types and <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index f84615a . . 03867b6 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 950 , 24 + 950 , 6 @ @ public boolean equals ( Object o ) { <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> < td > < code > false < / code > < / td > <nl> < / tr > <nl> - < tr > <nl> - < td > skipCatchParameter < / td > <nl> - < td > <nl> - Allows to skip < code > catch < / code > parameter from validation . For example , the <nl> - following catch parameter will be skipped from validation , if <nl> - skipCatchParameter is true : <nl> - < pre > <nl> - try { <nl> - . . . <nl> - } <nl> - catch ( Exception ex ) { <nl> - . . . <nl> - } <nl> - < / pre > <nl> - < / td > <nl> - < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> - < td > < code > true < / code > < / td > <nl> - < / tr > <nl> < / table > <nl> < / subsection > <nl> <nl> @ @ - 987 , 14 + 969 , 6 @ @ catch ( Exception ex ) { <nl> & lt ; property name = " ignoreOverridden " value = " true " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> - < p > <nl> - An example of how to configure the check to skip catch parameter from validation : <nl> - < / p > <nl> - < source > <nl> - & lt ; module name = " ParameterName " & gt ; <nl> - & lt ; property name = " skipCatchParameter " value = " true " / & gt ; <nl> - & lt ; / module & gt ; <nl> - < / source > <nl> < / subsection > <nl> <nl> < subsection name = " Example of Usage " >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> index 83aeff2 . . aff38ed 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> @ @ - 231 , 7 + 231 , 7 @ @ public class JavadocStyleCheck <nl> <nl> if ( ! commentText . isEmpty ( ) <nl> & & ! getEndOfSentencePattern ( ) . matcher ( commentText ) . find ( ) <nl> - & & ! ( " { @ inheritDoc } " . equals ( commentText ) <nl> + & & ! ( commentText . startsWith ( " { @ inheritDoc } " ) <nl> & & JavadocTagInfo . INHERIT _ DOC . isValidOn ( ast ) ) ) { <nl> log ( comment . getStartLineNo ( ) , NO _ PERIOD ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java <nl> index 24694e4 . . 0822977 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java <nl> @ @ - 407 , 4 + 407 , 11 @ @ public class InputJavadocStyle <nl> * @ throws Exception if an error occurs <nl> * / <nl> void bar ( ) throws Exception { } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * < p > <nl> + * @ throws IllegalArgumentException with errMsg as its message <nl> + * / <nl> + void inheritDocWithThrows ( ) { } <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 index 20527fa . . b5cf4a7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 @ @ - 30 , 11 + 30 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * and defaults to 
 * < strong > ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ < / strong > . 
 * < / p > 
 - * < p > The check has the following options : < / p > 
 + * < p > The check has the following option : < / p > 
 * < p > < b > ignoreOverridden < / b > - allows to skip methods with Override annotation from 
 - * validation . Default value is < b > false < / b > . < / p > 
 - * < p > < b > skipCatchParameter < / b > - allows to skip catcj parameter from validation . Default value 
 - * is < b > true < / b > . < / p > 
 + * validation . Default values is < b > false < / b > . < / p > 
 * < p > 
 * An example of how to configure the check is : 
 * < / p > 
 @ @ - 59 , 14 + 57 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * & lt ; property name = " ignoreOverridden " value = " true " / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 - * < p > 
 - * An example of how to configure the check to skip catch parameter from validation : 
 - * < / p > 
 - * < pre > 
 - * & lt ; module name = " ParameterName " & gt ; 
 - * & lt ; property name = " skipCatchParameter " value = " true " / & gt ; 
 - * & lt ; / module & gt ; 
 - * < / pre > 
 * 
 * @ author Oliver Burn 
 * @ author Andrei Selkin 
 @ @ - 80 , 11 + 70 , 6 @ @ public class ParameterNameCheck 
 private boolean ignoreOverridden ; 
 
 / * * 
 - * Allows to skip catch parameter from validation . 
 - * / 
 - private boolean skipCatchParameter = true ; 
 - 
 - / * * 
 * Creates a new { @ code ParameterNameCheck } instance . 
 * / 
 public ParameterNameCheck ( ) { 
 @ @ - 100 , 14 + 85 , 6 @ @ public class ParameterNameCheck 
 this . ignoreOverridden = ignoreOverridden ; 
 } 
 
 - / * * 
 - * Sets whether to skip catch parameter from validation . 
 - * @ param skipCatchParameter Flag for skipping catch parameter . 
 - * / 
 - public void setSkipCatchParameter ( boolean skipCatchParameter ) { 
 - this . skipCatchParameter = skipCatchParameter ; 
 - } 
 - 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 return getAcceptableTokens ( ) ; 
 @ @ - 127 , 7 + 104 , 7 @ @ public class ParameterNameCheck 
 protected boolean mustCheckName ( DetailAST ast ) { 
 boolean checkName = true ; 
 if ( ignoreOverridden & & isOverriddenMethod ( ast ) 
 - | | skipCatchParameter & & ast . getParent ( ) . getType ( ) = = TokenTypes . LITERAL _ CATCH ) { 
 + | | ast . getParent ( ) . getType ( ) = = TokenTypes . LITERAL _ CATCH ) { 
 checkName = false ; 
 } 
 return checkName ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheckTest . java 
 index 0d0fe08 . . 1c35fd3 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheckTest . java 
 @ @ - 137 , 132 + 137 , 4 @ @ public class ParameterNameCheckTest 
 } ; 
 verify ( checkConfig , getPath ( " InputOverrideAnnotation . java " ) , expected ) ; 
 } 
 - 
 - @ Test 
 - public void testSkipCatchParameterTrue ( ) 
 - throws Exception { 
 - final DefaultConfiguration checkConfig = 
 - createCheckConfig ( ParameterNameCheck . class ) ; 
 - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; 
 - checkConfig . addAttribute ( " skipCatchParameter " , " true " ) ; 
 - 
 - final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 - 
 - verify ( checkConfig , getPath ( " InputCatchParameter . java " ) , expected ) ; 
 - } 
 - 
 - @ Test 
 - public void testSkipCatchParameterFalse ( ) 
 - throws Exception { 
 - final DefaultConfiguration checkConfig = 
 - createCheckConfig ( ParameterNameCheck . class ) ; 
 - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; 
 - checkConfig . addAttribute ( " skipCatchParameter " , " false " ) ; 
 - final String pattern = " ^ h $ " ; 
 - 
 - final String [ ] expected = { 
 - " 13 : 26 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , 
 - " 22 : 64 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , 
 - } ; 
 - 
 - verify ( checkConfig , getPath ( " InputCatchParameter . java " ) , expected ) ; 
 - } 
 - 
 - @ Test 
 - public void testSkipCatchParameterTrueAndIgnoreOverriddenTrue ( ) 
 - throws Exception { 
 - final DefaultConfiguration checkConfig = 
 - createCheckConfig ( ParameterNameCheck . class ) ; 
 - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; 
 - checkConfig . addAttribute ( " skipCatchParameter " , " true " ) ; 
 - checkConfig . addAttribute ( " ignoreOverridden " , " true " ) ; 
 - final String pattern = " ^ h $ " ; 
 - 
 - final String [ ] expected = { 
 - " 13 : 29 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " object " , pattern ) , 
 - " 17 : 30 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " aaaa " , pattern ) , 
 - " 21 : 19 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , 
 - " 21 : 28 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " bd " , pattern ) , 
 - " 23 : 18 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , 
 - " 30 : 43 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " field " , pattern ) , 
 - " 30 : 62 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " packageNames " , pattern ) , 
 - } ; 
 - 
 - verify ( checkConfig , getPath ( " InputParameterNameMultipleOptions . java " ) , expected ) ; 
 - } 
 - 
 - @ Test 
 - public void testSkipCatchParameterFalseAndIgnoreOverriddenFalse ( ) 
 - throws Exception { 
 - final DefaultConfiguration checkConfig = 
 - createCheckConfig ( ParameterNameCheck . class ) ; 
 - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; 
 - checkConfig . addAttribute ( " skipCatchParameter " , " false " ) ; 
 - checkConfig . addAttribute ( " ignoreOverridden " , " false " ) ; 
 - final String pattern = " ^ h $ " ; 
 - 
 - final String [ ] expected = { 
 - " 8 : 34 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " o " , pattern ) , 
 - " 13 : 29 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " object " , pattern ) , 
 - " 17 : 30 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " aaaa " , pattern ) , 
 - " 21 : 19 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , 
 - " 21 : 28 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " bd " , pattern ) , 
 - " 23 : 18 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , 
 - " 30 : 43 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " field " , pattern ) , 
 - " 30 : 62 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " packageNames " , pattern ) , 
 - " 36 : 26 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , 
 - " 45 : 64 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , 
 - } ; 
 - 
 - verify ( checkConfig , getPath ( " InputParameterNameMultipleOptions . java " ) , expected ) ; 
 - } 
 - 
 - @ Test 
 - public void testSkipCatchParameterTrueAndIgnoreOverriddenFalse ( ) 
 - throws Exception { 
 - final DefaultConfiguration checkConfig = 
 - createCheckConfig ( ParameterNameCheck . class ) ; 
 - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; 
 - checkConfig . addAttribute ( " skipCatchParameter " , " true " ) ; 
 - checkConfig . addAttribute ( " ignoreOverridden " , " false " ) ; 
 - final String pattern = " ^ h $ " ; 
 - 
 - final String [ ] expected = { 
 - " 8 : 34 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " o " , pattern ) , 
 - " 13 : 29 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " object " , pattern ) , 
 - " 17 : 30 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " aaaa " , pattern ) , 
 - " 21 : 19 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , 
 - " 21 : 28 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " bd " , pattern ) , 
 - " 23 : 18 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , 
 - " 30 : 43 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " field " , pattern ) , 
 - " 30 : 62 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " packageNames " , pattern ) , 
 - } ; 
 - 
 - verify ( checkConfig , getPath ( " InputParameterNameMultipleOptions . java " ) , expected ) ; 
 - } 
 - 
 - @ Test 
 - public void testSkipCatchParameterFalseAndIgnoreOverriddenTrue ( ) 
 - throws Exception { 
 - final DefaultConfiguration checkConfig = 
 - createCheckConfig ( ParameterNameCheck . class ) ; 
 - checkConfig . addAttribute ( " format " , " ^ h $ " ) ; 
 - checkConfig . addAttribute ( " skipCatchParameter " , " false " ) ; 
 - checkConfig . addAttribute ( " ignoreOverridden " , " true " ) ; 
 - final String pattern = " ^ h $ " ; 
 - 
 - final String [ ] expected = { 
 - " 13 : 29 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " object " , pattern ) , 
 - " 17 : 30 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " aaaa " , pattern ) , 
 - " 21 : 19 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , 
 - " 21 : 28 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " bd " , pattern ) , 
 - " 23 : 18 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " abc " , pattern ) , 
 - " 30 : 43 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " field " , pattern ) , 
 - " 30 : 62 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " packageNames " , pattern ) , 
 - " 36 : 26 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , 
 - " 45 : 64 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , 
 - } ; 
 - 
 - verify ( checkConfig , getPath ( " InputParameterNameMultipleOptions . java " ) , expected ) ; 
 - } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputCatchParameter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputCatchParameter . java 
 deleted file mode 100644 
 index 47388be . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputCatchParameter . java 
 + + + / dev / null 
 @ @ - 1 , 27 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . naming ; 
 - 
 - import java . io . FileNotFoundException ; 
 - import java . io . IOException ; 
 - import java . sql . SQLException ; 
 - 
 - public class InputCatchParameter { 
 - 
 - void foo1 ( ) { 
 - try { 
 - 
 - } 
 - catch ( Exception ex ) { 
 - 
 - } 
 - } 
 - 
 - void foo2 ( ) { 
 - try { 
 - 
 - } 
 - catch ( NullPointerException | IllegalArgumentException ex ) { 
 - / / just to check how the ParentName ' s option ' skipCahcthParameter ' deals with catching 
 - / / multiple exception types and 
 - } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputOverrideAnnotation . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputOverrideAnnotation . java 
 index 608b3a5 . . e4e40d1 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputOverrideAnnotation . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputOverrideAnnotation . java 
 @ @ - 26 , 4 + 26 , 6 @ @ public class InputOverrideAnnotation { 
 InputOverrideAnnotation ( ) { } / / No NPE here ! 
 
 InputOverrideAnnotation ( int field , java . util . Set < String > packageNames ) { } / / No NPE here ! 
 + 
 + 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputParameterNameMultipleOptions . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputParameterNameMultipleOptions . java 
 deleted file mode 100644 
 index f42bd21 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / naming / InputParameterNameMultipleOptions . java 
 + + + / dev / null 
 @ @ - 1 , 50 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . naming ; 
 - 
 - import java . util . Set ; 
 - 
 - public class InputParameterNameMultipleOptions { 
 - 
 - @ Override 
 - public boolean equals ( Object o ) { 
 - return super . equals ( o ) ; 
 - } 
 - 
 - @ SuppressWarnings ( " " ) 
 - public void foo1 ( Object object ) { 
 - 
 - } 
 - 
 - public void foo2 ( Integer aaaa ) { } 
 - 
 - void foo3 ( ) { } / / No NPE here ! 
 - 
 - void foo4 ( int abc , int bd ) { } / / No NPE here ! 
 - 
 - int foo5 ( int abc ) { return 1 ; } / / No NPE here ! 
 - 
 - private int field ; 
 - private Set < String > packageNames ; 
 - 
 - InputParameterNameMultipleOptions ( ) { } / / No NPE here ! 
 - 
 - InputParameterNameMultipleOptions ( int field , Set < String > packageNames ) { } / / No NPE here ! 
 - 
 - void foo6 ( ) { 
 - try { 
 - 
 - } 
 - catch ( Exception ex ) { 
 - 
 - } 
 - } 
 - 
 - void foo7 ( ) { 
 - try { 
 - 
 - } 
 - catch ( NullPointerException | IllegalArgumentException ex ) { 
 - / / just to check how the ParentName ' s option ' skipCahcthParameter ' deals with catching 
 - / / multiple exception types and 
 - } 
 - } 
 - } 
 diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index f84615a . . 03867b6 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 950 , 24 + 950 , 6 @ @ public boolean equals ( Object o ) { 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 < td > < code > false < / code > < / td > 
 < / tr > 
 - < tr > 
 - < td > skipCatchParameter < / td > 
 - < td > 
 - Allows to skip < code > catch < / code > parameter from validation . For example , the 
 - following catch parameter will be skipped from validation , if 
 - skipCatchParameter is true : 
 - < pre > 
 - try { 
 - . . . 
 - } 
 - catch ( Exception ex ) { 
 - . . . 
 - } 
 - < / pre > 
 - < / td > 
 - < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 - < td > < code > true < / code > < / td > 
 - < / tr > 
 < / table > 
 < / subsection > 
 
 @ @ - 987 , 14 + 969 , 6 @ @ catch ( Exception ex ) { 
 & lt ; property name = " ignoreOverridden " value = " true " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 - < p > 
 - An example of how to configure the check to skip catch parameter from validation : 
 - < / p > 
 - < source > 
 - & lt ; module name = " ParameterName " & gt ; 
 - & lt ; property name = " skipCatchParameter " value = " true " / & gt ; 
 - & lt ; / module & gt ; 
 - < / source > 
 < / subsection > 
 
 < subsection name = " Example of Usage " >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 index 83aeff2 . . aff38ed 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 @ @ - 231 , 7 + 231 , 7 @ @ public class JavadocStyleCheck 
 
 if ( ! commentText . isEmpty ( ) 
 & & ! getEndOfSentencePattern ( ) . matcher ( commentText ) . find ( ) 
 - & & ! ( " { @ inheritDoc } " . equals ( commentText ) 
 + & & ! ( commentText . startsWith ( " { @ inheritDoc } " ) 
 & & JavadocTagInfo . INHERIT _ DOC . isValidOn ( ast ) ) ) { 
 log ( comment . getStartLineNo ( ) , NO _ PERIOD ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java 
 index 24694e4 . . 0822977 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputJavadocStyle . java 
 @ @ - 407 , 4 + 407 , 11 @ @ public class InputJavadocStyle 
 * @ throws Exception if an error occurs 
 * / 
 void bar ( ) throws Exception { } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * < p > 
 + * @ throws IllegalArgumentException with errMsg as its message 
 + * / 
 + void inheritDocWithThrows ( ) { } 
 }
