BLEU SCORE: 0.041961149062965476

TEST MSG: Issue # 957 : Resolve problems from PMD DefaultPackage rule
GENERATED MSG: Fix typos in code and Javadoc . # 1555

TEST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index f1de850 . . ba56b52 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 13 , 10 + 13 , 10 @ @ <nl> See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > <nl> < suppress checks = " IllegalCatch " <nl> files = " Checker . java " <nl> - lines = " 316 " / > <nl> + lines = " 317 " / > <nl> < suppress checks = " IllegalCatch " <nl> files = " Checker . java " <nl> - lines = " 321 " / > <nl> + lines = " 322 " / > <nl> < ! - - Test to reproduce error catching in Checker and satisfy coverage rate . - - > <nl> < suppress checks = " IllegalCatch " <nl> files = " CheckerTest . java " <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> index 9d69646 . . 2ac79f4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import org . apache . commons . lang3 . ArrayUtils ; <nl> import org . apache . commons . logging . Log ; <nl> import org . apache . commons . logging . LogFactory ; <nl> <nl> + import com . google . common . annotations . VisibleForTesting ; <nl> import com . google . common . collect . Lists ; <nl> import com . google . common . collect . Sets ; <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> @ @ - 357 , 6 + 358 , 7 @ @ public class Checker extends AutomaticBean implements MessageDispatcher { <nl> } <nl> <nl> / * * Notify all listeners about the audit start . * / <nl> + @ VisibleForTesting <nl> void fireAuditStarted ( ) { <nl> final AuditEvent event = new AuditEvent ( this ) ; <nl> for ( final AuditListener listener : listeners ) { <nl> @ @ - 365 , 6 + 367 , 7 @ @ public class Checker extends AutomaticBean implements MessageDispatcher { <nl> } <nl> <nl> / * * Notify all listeners about the audit end . * / <nl> + @ VisibleForTesting <nl> void fireAuditFinished ( ) { <nl> final AuditEvent event = new AuditEvent ( this ) ; <nl> for ( final AuditListener listener : listeners ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java <nl> index e9dacb8 . . 1308d5e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java <nl> @ @ - 104 , 7 + 104 , 7 @ @ final class PropertyCacheFile { <nl> * Load cached values from file . <nl> * @ throws IOException when there is a problems with file read <nl> * / <nl> - void load ( ) throws IOException { <nl> + public void load ( ) throws IOException { <nl> / / get the current config so if the file isn ' t found <nl> / / the first time the hash will be added to output file <nl> final String currentConfigHash = getConfigHashCode ( config ) ; <nl> @ @ - 134 , 7 + 134 , 7 @ @ final class PropertyCacheFile { <nl> * Cleans up the object and updates the cache file . <nl> * @ throws IOException when there is a problems with file save <nl> * / <nl> - void persist ( ) throws IOException { <nl> + public void persist ( ) throws IOException { <nl> try { <nl> final Path directory = Paths . get ( fileName ) . getParent ( ) ; <nl> if ( directory ! = null ) { <nl> @ @ - 157 , 7 + 157 , 7 @ @ final class PropertyCacheFile { <nl> / * * <nl> * Clears the cache . <nl> * / <nl> - void clear ( ) { <nl> + public void clear ( ) { <nl> details . clear ( ) ; <nl> } <nl> <nl> @ @ - 179 , 7 + 179 , 7 @ @ final class PropertyCacheFile { <nl> * @ param timestamp the timestamp of the file to check <nl> * @ return whether the specified file has already been checked ok <nl> * / <nl> - boolean isInCache ( String uncheckedFileName , long timestamp ) { <nl> + public boolean isInCache ( String uncheckedFileName , long timestamp ) { <nl> final String lastChecked = details . getProperty ( uncheckedFileName ) ; <nl> return lastChecked ! = null <nl> & & lastChecked . equals ( Long . toString ( timestamp ) ) ; <nl> @ @ - 190 , 7 + 190 , 7 @ @ final class PropertyCacheFile { <nl> * @ param checkedFileName name of the file that checked ok <nl> * @ param timestamp the timestamp of the file <nl> * / <nl> - void put ( String checkedFileName , long timestamp ) { <nl> + public void put ( String checkedFileName , long timestamp ) { <nl> details . setProperty ( checkedFileName , Long . toString ( timestamp ) ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java <nl> index 1117c4c . . 9c368c2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java <nl> @ @ - 257 , 7 + 257 , 7 @ @ public abstract class AbstractDeclarationCollector extends AbstractCheck { <nl> * @ param nameToFind the name we ' re looking for <nl> * @ return whether it was found <nl> * / <nl> - boolean contains ( String nameToFind ) { <nl> + protected boolean contains ( String nameToFind ) { <nl> return varNames . contains ( nameToFind ) ; <nl> } <nl> <nl> @ @ - 387 , 7 + 387 , 7 @ @ public abstract class AbstractDeclarationCollector extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> - boolean contains ( String nameToFind ) { <nl> + protected boolean contains ( String nameToFind ) { <nl> return super . contains ( nameToFind ) <nl> | | instanceMembers . contains ( nameToFind ) <nl> | | instanceMethods . contains ( nameToFind ) <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> index eb4d186 . . b90b791 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> @ @ - 498 , 7 + 498 , 7 @ @ public class RequireThisCheck extends AbstractCheck { <nl> * @ param nameToFind the IDENT ast of the name we ' re looking for <nl> * @ return whether it was found <nl> * / <nl> - boolean containsFieldOrVariable ( DetailAST nameToFind ) { <nl> + protected boolean containsFieldOrVariable ( DetailAST nameToFind ) { <nl> return containsFieldOrVariableDef ( varIdents , nameToFind ) ; <nl> } <nl> <nl> @ @ - 682 , 7 + 682 , 7 @ @ public class RequireThisCheck extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> - boolean containsFieldOrVariable ( DetailAST nameToFind ) { <nl> + protected boolean containsFieldOrVariable ( DetailAST nameToFind ) { <nl> return containsFieldOrVariableDef ( instanceMembers , nameToFind ) <nl> | | containsFieldOrVariableDef ( staticMembers , nameToFind ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> index ad70a26 . . 3436981 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> @ @ - 182 , 7 + 182 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * <nl> * @ return true if they are , false otherwise <nl> * / <nl> - static boolean areOnSameLine ( DetailAST ast1 , DetailAST ast2 ) { <nl> + public static boolean areOnSameLine ( DetailAST ast1 , DetailAST ast2 ) { <nl> return ast1 . getLineNo ( ) = = ast2 . getLineNo ( ) ; <nl> } <nl> <nl> @ @ - 192 , 7 + 192 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * @ param ast a root of sub - tree in which the search should be performed . <nl> * @ return a token which occurs first in the file . <nl> * / <nl> - static DetailAST getFirstToken ( DetailAST ast ) { <nl> + public static DetailAST getFirstToken ( DetailAST ast ) { <nl> DetailAST first = ast ; <nl> DetailAST child = ast . getFirstChild ( ) ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> index 1cbe5c4 . . 59df38f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> @ @ - 178 , 7 + 178 , 7 @ @ public class HandlerFactory { <nl> } <nl> <nl> / * * Clears cache of created handlers . * / <nl> - void clearCreatedHandlers ( ) { <nl> + public void clearCreatedHandlers ( ) { <nl> createdHandlers . clear ( ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> index a2e9301 . . ba601f9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> @ @ - 335 , 7 + 335 , 7 @ @ public class IndentationCheck extends AbstractCheck { <nl> * <nl> * @ return the handler factory <nl> * / <nl> - final HandlerFactory getHandlerFactory ( ) { <nl> + public final HandlerFactory getHandlerFactory ( ) { <nl> return handlerFactory ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> index f9622cc . . d2881f4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> @ @ - 193 , 7 + 193 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { <nl> * , line number of a possible whitespace . <nl> * @ return true if whitespace found . <nl> * / <nl> - boolean hasTrailingWhitespace ( DetailAST ast , <nl> + private boolean hasTrailingWhitespace ( DetailAST ast , <nl> int whitespaceColumnNo , int whitespaceLineNo ) { <nl> final boolean result ; <nl> final int astLineNo = ast . getLineNo ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> index b50f78b . . fe7448a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> @ @ - 61 , 7 + 61 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testDestroy ( ) { <nl> - final DebugChecker checker = new DebugChecker ( ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> final DebugAuditAdapter auditAdapter = new DebugAuditAdapter ( ) ; <nl> checker . addListener ( auditAdapter ) ; <nl> final DebugFilter filter = new DebugFilter ( ) ; <nl> @ @ - 87 , 7 + 87 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testAddListener ( ) { <nl> - final DebugChecker checker = new DebugChecker ( ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> final DebugAuditAdapter auditAdapter = new DebugAuditAdapter ( ) ; <nl> checker . addListener ( auditAdapter ) ; <nl> <nl> @ @ - 117 , 7 + 117 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testRemoveListener ( ) { <nl> - final DebugChecker checker = new DebugChecker ( ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> final DebugAuditAdapter auditAdapter = new DebugAuditAdapter ( ) ; <nl> final DebugAuditAdapter aa2 = new DebugAuditAdapter ( ) ; <nl> checker . addListener ( auditAdapter ) ; <nl> @ @ - 160 , 7 + 160 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testAddFilter ( ) { <nl> - final DebugChecker checker = new DebugChecker ( ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> final DebugFilter filter = new DebugFilter ( ) ; <nl> <nl> checker . addFilter ( filter ) ; <nl> @ @ - 175 , 7 + 175 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testRemoveFilter ( ) { <nl> - final DebugChecker checker = new DebugChecker ( ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> final DebugFilter filter = new DebugFilter ( ) ; <nl> final DebugFilter f2 = new DebugFilter ( ) ; <nl> checker . addFilter ( filter ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java b / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java <nl> deleted file mode 100644 <nl> index 03cc6d7 . . 0000000 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java <nl> + + + / dev / null <nl> @ @ - 1 , 32 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> - / / Copyright ( C ) 2001 - 2016 the original author or authors . <nl> - / / <nl> - / / This library is free software ; you can redistribute it and / or <nl> - / / modify it under the terms of the GNU Lesser General Public <nl> - / / License as published by the Free Software Foundation ; either <nl> - / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> - / / <nl> - / / This library is distributed in the hope that it will be useful , <nl> - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - / / Lesser General Public License for more details . <nl> - / / <nl> - / / You should have received a copy of the GNU Lesser General Public <nl> - / / License along with this library ; if not , write to the Free Software <nl> - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - package com . puppycrawl . tools . checkstyle ; <nl> - <nl> - class DebugChecker extends Checker { <nl> - @ Override <nl> - public void fireAuditFinished ( ) { <nl> - super . fireAuditFinished ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void fireAuditStarted ( ) { <nl> - super . fireAuditStarted ( ) ; <nl> - } <nl> - }
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> index f3415ce . . a36aee0 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> @ @ - 19 , 22 + 19 , 22 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> <nl> public class ConfigurationBuilder extends BaseCheckTestSupport { <nl> <nl> + 	 private static final String XML _ NAME = " / google _ checks . xml " ; <nl> + <nl> 	 private final File root ; <nl> <nl> 	 private final List < File > files = new ArrayList < > ( ) ; <nl> <nl> 	 Configuration config ; <nl> - 	 <nl> + <nl> 	 URL url ; <nl> - 	 <nl> - 	 final String xmlName = " / google _ checks . xml " ; <nl> - 	 <nl> + <nl> 	 final Pattern warnPattern = Utils . createPattern ( " . * [ ] * / / [ ] * warn [ ] * | / [ * ] warn [ * ] / " ) ; <nl> <nl> 	 public ConfigurationBuilder ( File aROOT ) <nl> 	 	 	 throws CheckstyleException , IOException { <nl> 	 	 root = aROOT ; <nl> - 	 	 config = getConfigurationFromXML ( xmlName , System . getProperties ( ) ) ; <nl> + 	 	 config = getConfigurationFromXML ( XML _ NAME , System . getProperties ( ) ) ; <nl> 	 	 listFiles ( files , root , " java " ) ; <nl> 	 } <nl>

TEST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index f1de850 . . ba56b52 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 13 , 10 + 13 , 10 @ @ 
 See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > 
 < suppress checks = " IllegalCatch " 
 files = " Checker . java " 
 - lines = " 316 " / > 
 + lines = " 317 " / > 
 < suppress checks = " IllegalCatch " 
 files = " Checker . java " 
 - lines = " 321 " / > 
 + lines = " 322 " / > 
 < ! - - Test to reproduce error catching in Checker and satisfy coverage rate . - - > 
 < suppress checks = " IllegalCatch " 
 files = " CheckerTest . java " 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 index 9d69646 . . 2ac79f4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import org . apache . commons . lang3 . ArrayUtils ; 
 import org . apache . commons . logging . Log ; 
 import org . apache . commons . logging . LogFactory ; 
 
 + import com . google . common . annotations . VisibleForTesting ; 
 import com . google . common . collect . Lists ; 
 import com . google . common . collect . Sets ; 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 @ @ - 357 , 6 + 358 , 7 @ @ public class Checker extends AutomaticBean implements MessageDispatcher { 
 } 
 
 / * * Notify all listeners about the audit start . * / 
 + @ VisibleForTesting 
 void fireAuditStarted ( ) { 
 final AuditEvent event = new AuditEvent ( this ) ; 
 for ( final AuditListener listener : listeners ) { 
 @ @ - 365 , 6 + 367 , 7 @ @ public class Checker extends AutomaticBean implements MessageDispatcher { 
 } 
 
 / * * Notify all listeners about the audit end . * / 
 + @ VisibleForTesting 
 void fireAuditFinished ( ) { 
 final AuditEvent event = new AuditEvent ( this ) ; 
 for ( final AuditListener listener : listeners ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java 
 index e9dacb8 . . 1308d5e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java 
 @ @ - 104 , 7 + 104 , 7 @ @ final class PropertyCacheFile { 
 * Load cached values from file . 
 * @ throws IOException when there is a problems with file read 
 * / 
 - void load ( ) throws IOException { 
 + public void load ( ) throws IOException { 
 / / get the current config so if the file isn ' t found 
 / / the first time the hash will be added to output file 
 final String currentConfigHash = getConfigHashCode ( config ) ; 
 @ @ - 134 , 7 + 134 , 7 @ @ final class PropertyCacheFile { 
 * Cleans up the object and updates the cache file . 
 * @ throws IOException when there is a problems with file save 
 * / 
 - void persist ( ) throws IOException { 
 + public void persist ( ) throws IOException { 
 try { 
 final Path directory = Paths . get ( fileName ) . getParent ( ) ; 
 if ( directory ! = null ) { 
 @ @ - 157 , 7 + 157 , 7 @ @ final class PropertyCacheFile { 
 / * * 
 * Clears the cache . 
 * / 
 - void clear ( ) { 
 + public void clear ( ) { 
 details . clear ( ) ; 
 } 
 
 @ @ - 179 , 7 + 179 , 7 @ @ final class PropertyCacheFile { 
 * @ param timestamp the timestamp of the file to check 
 * @ return whether the specified file has already been checked ok 
 * / 
 - boolean isInCache ( String uncheckedFileName , long timestamp ) { 
 + public boolean isInCache ( String uncheckedFileName , long timestamp ) { 
 final String lastChecked = details . getProperty ( uncheckedFileName ) ; 
 return lastChecked ! = null 
 & & lastChecked . equals ( Long . toString ( timestamp ) ) ; 
 @ @ - 190 , 7 + 190 , 7 @ @ final class PropertyCacheFile { 
 * @ param checkedFileName name of the file that checked ok 
 * @ param timestamp the timestamp of the file 
 * / 
 - void put ( String checkedFileName , long timestamp ) { 
 + public void put ( String checkedFileName , long timestamp ) { 
 details . setProperty ( checkedFileName , Long . toString ( timestamp ) ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java 
 index 1117c4c . . 9c368c2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractDeclarationCollector . java 
 @ @ - 257 , 7 + 257 , 7 @ @ public abstract class AbstractDeclarationCollector extends AbstractCheck { 
 * @ param nameToFind the name we ' re looking for 
 * @ return whether it was found 
 * / 
 - boolean contains ( String nameToFind ) { 
 + protected boolean contains ( String nameToFind ) { 
 return varNames . contains ( nameToFind ) ; 
 } 
 
 @ @ - 387 , 7 + 387 , 7 @ @ public abstract class AbstractDeclarationCollector extends AbstractCheck { 
 } 
 
 @ Override 
 - boolean contains ( String nameToFind ) { 
 + protected boolean contains ( String nameToFind ) { 
 return super . contains ( nameToFind ) 
 | | instanceMembers . contains ( nameToFind ) 
 | | instanceMethods . contains ( nameToFind ) 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 index eb4d186 . . b90b791 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 @ @ - 498 , 7 + 498 , 7 @ @ public class RequireThisCheck extends AbstractCheck { 
 * @ param nameToFind the IDENT ast of the name we ' re looking for 
 * @ return whether it was found 
 * / 
 - boolean containsFieldOrVariable ( DetailAST nameToFind ) { 
 + protected boolean containsFieldOrVariable ( DetailAST nameToFind ) { 
 return containsFieldOrVariableDef ( varIdents , nameToFind ) ; 
 } 
 
 @ @ - 682 , 7 + 682 , 7 @ @ public class RequireThisCheck extends AbstractCheck { 
 } 
 
 @ Override 
 - boolean containsFieldOrVariable ( DetailAST nameToFind ) { 
 + protected boolean containsFieldOrVariable ( DetailAST nameToFind ) { 
 return containsFieldOrVariableDef ( instanceMembers , nameToFind ) 
 | | containsFieldOrVariableDef ( staticMembers , nameToFind ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 index ad70a26 . . 3436981 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 @ @ - 182 , 7 + 182 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * 
 * @ return true if they are , false otherwise 
 * / 
 - static boolean areOnSameLine ( DetailAST ast1 , DetailAST ast2 ) { 
 + public static boolean areOnSameLine ( DetailAST ast1 , DetailAST ast2 ) { 
 return ast1 . getLineNo ( ) = = ast2 . getLineNo ( ) ; 
 } 
 
 @ @ - 192 , 7 + 192 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * @ param ast a root of sub - tree in which the search should be performed . 
 * @ return a token which occurs first in the file . 
 * / 
 - static DetailAST getFirstToken ( DetailAST ast ) { 
 + public static DetailAST getFirstToken ( DetailAST ast ) { 
 DetailAST first = ast ; 
 DetailAST child = ast . getFirstChild ( ) ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 index 1cbe5c4 . . 59df38f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 @ @ - 178 , 7 + 178 , 7 @ @ public class HandlerFactory { 
 } 
 
 / * * Clears cache of created handlers . * / 
 - void clearCreatedHandlers ( ) { 
 + public void clearCreatedHandlers ( ) { 
 createdHandlers . clear ( ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 index a2e9301 . . ba601f9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 @ @ - 335 , 7 + 335 , 7 @ @ public class IndentationCheck extends AbstractCheck { 
 * 
 * @ return the handler factory 
 * / 
 - final HandlerFactory getHandlerFactory ( ) { 
 + public final HandlerFactory getHandlerFactory ( ) { 
 return handlerFactory ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 index f9622cc . . d2881f4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 @ @ - 193 , 7 + 193 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { 
 * , line number of a possible whitespace . 
 * @ return true if whitespace found . 
 * / 
 - boolean hasTrailingWhitespace ( DetailAST ast , 
 + private boolean hasTrailingWhitespace ( DetailAST ast , 
 int whitespaceColumnNo , int whitespaceLineNo ) { 
 final boolean result ; 
 final int astLineNo = ast . getLineNo ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 index b50f78b . . fe7448a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 @ @ - 61 , 7 + 61 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testDestroy ( ) { 
 - final DebugChecker checker = new DebugChecker ( ) ; 
 + final Checker checker = new Checker ( ) ; 
 final DebugAuditAdapter auditAdapter = new DebugAuditAdapter ( ) ; 
 checker . addListener ( auditAdapter ) ; 
 final DebugFilter filter = new DebugFilter ( ) ; 
 @ @ - 87 , 7 + 87 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testAddListener ( ) { 
 - final DebugChecker checker = new DebugChecker ( ) ; 
 + final Checker checker = new Checker ( ) ; 
 final DebugAuditAdapter auditAdapter = new DebugAuditAdapter ( ) ; 
 checker . addListener ( auditAdapter ) ; 
 
 @ @ - 117 , 7 + 117 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testRemoveListener ( ) { 
 - final DebugChecker checker = new DebugChecker ( ) ; 
 + final Checker checker = new Checker ( ) ; 
 final DebugAuditAdapter auditAdapter = new DebugAuditAdapter ( ) ; 
 final DebugAuditAdapter aa2 = new DebugAuditAdapter ( ) ; 
 checker . addListener ( auditAdapter ) ; 
 @ @ - 160 , 7 + 160 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testAddFilter ( ) { 
 - final DebugChecker checker = new DebugChecker ( ) ; 
 + final Checker checker = new Checker ( ) ; 
 final DebugFilter filter = new DebugFilter ( ) ; 
 
 checker . addFilter ( filter ) ; 
 @ @ - 175 , 7 + 175 , 7 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testRemoveFilter ( ) { 
 - final DebugChecker checker = new DebugChecker ( ) ; 
 + final Checker checker = new Checker ( ) ; 
 final DebugFilter filter = new DebugFilter ( ) ; 
 final DebugFilter f2 = new DebugFilter ( ) ; 
 checker . addFilter ( filter ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java b / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java 
 deleted file mode 100644 
 index 03cc6d7 . . 0000000 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DebugChecker . java 
 + + + / dev / null 
 @ @ - 1 , 32 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / checkstyle : Checks Java source code for adherence to a set of rules . 
 - / / Copyright ( C ) 2001 - 2016 the original author or authors . 
 - / / 
 - / / This library is free software ; you can redistribute it and / or 
 - / / modify it under the terms of the GNU Lesser General Public 
 - / / License as published by the Free Software Foundation ; either 
 - / / version 2 . 1 of the License , or ( at your option ) any later version . 
 - / / 
 - / / This library is distributed in the hope that it will be useful , 
 - / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - / / Lesser General Public License for more details . 
 - / / 
 - / / You should have received a copy of the GNU Lesser General Public 
 - / / License along with this library ; if not , write to the Free Software 
 - / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - package com . puppycrawl . tools . checkstyle ; 
 - 
 - class DebugChecker extends Checker { 
 - @ Override 
 - public void fireAuditFinished ( ) { 
 - super . fireAuditFinished ( ) ; 
 - } 
 - 
 - @ Override 
 - public void fireAuditStarted ( ) { 
 - super . fireAuditStarted ( ) ; 
 - } 
 - }

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 index f3415ce . . a36aee0 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 @ @ - 19 , 22 + 19 , 22 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 
 public class ConfigurationBuilder extends BaseCheckTestSupport { 
 
 + 	 private static final String XML _ NAME = " / google _ checks . xml " ; 
 + 
 	 private final File root ; 
 
 	 private final List < File > files = new ArrayList < > ( ) ; 
 
 	 Configuration config ; 
 - 	 
 + 
 	 URL url ; 
 - 	 
 - 	 final String xmlName = " / google _ checks . xml " ; 
 - 	 
 + 
 	 final Pattern warnPattern = Utils . createPattern ( " . * [ ] * / / [ ] * warn [ ] * | / [ * ] warn [ * ] / " ) ; 
 
 	 public ConfigurationBuilder ( File aROOT ) 
 	 	 	 throws CheckstyleException , IOException { 
 	 	 root = aROOT ; 
 - 	 	 config = getConfigurationFromXML ( xmlName , System . getProperties ( ) ) ; 
 + 	 	 config = getConfigurationFromXML ( XML _ NAME , System . getProperties ( ) ) ; 
 	 	 listFiles ( files , root , " java " ) ; 
 	 } 

