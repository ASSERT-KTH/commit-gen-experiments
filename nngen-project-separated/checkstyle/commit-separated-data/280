BLEU SCORE: 0.3155984539112945

TEST MSG: Issue # 5791 : line wrap for travis files
GENERATED MSG: Issue # 5791 : wrap lines in ci folder

TEST DIFF (one line): diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words <nl> index 76e49e4 . . af3d056 100644 <nl> - - - a / . ci / jsoref - spellchecker / whitelist . words <nl> + + + b / . ci / jsoref - spellchecker / whitelist . words <nl> @ @ - 632 , 6 + 632 , 7 @ @ Jlo <nl> jls <nl> JNDI <nl> JOption <nl> + jp <nl> Jpa <nl> JPanel <nl> jpeg <nl> diff - - git a / . ci / travis / checkchmod . sh b / . ci / travis / checkchmod . sh <nl> index 606045f . . a963d3d 100755 <nl> - - - a / . ci / travis / checkchmod . sh <nl> + + + b / . ci / travis / checkchmod . sh <nl> @ @ - 2 , 8 + 2 , 12 @ @ <nl> <nl> set - e <nl> <nl> - # On Travis , after clone , all files are with 644 permission , on local they are 664 , so we check only executable bit <nl> - CHMOD = $ ( find - type f - not - path ' * / \ . git / * ' - a - type f - not - name ' * . sh ' - a - type f - not - name ' * . pl ' - a \ ( - type d - not - perm 775 - o - type f - executable \ ) ) <nl> + # On Travis , after clone , all files are with 644 permission , on local they are 664 , <nl> + # so we check only executable bit <nl> + CHMOD = $ ( find - type f - not - path ' * / \ . git / * ' \ <nl> + - a - type f - not - name ' * . sh ' \ <nl> + - a - type f - not - name ' * . pl ' \ <nl> + - a \ ( - type d - not - perm 775 - o - type f - executable \ ) ) <nl> if [ [ ! - z $ CHMOD ] ] ; then <nl> echo " Expected mode for non ' . sh ' files is 664 . " ; <nl> echo " Files that violates this rule : " <nl> diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh <nl> index 225b504 . . ad93346 100755 <nl> - - - a / . ci / travis / travis . sh <nl> + + + b / . ci / travis / travis . sh <nl> @ @ - 4 , 6 + 4 , 61 @ @ set - e <nl> <nl> case $ 1 in <nl> <nl> + checkstyle - and - sevntu ) <nl> + export MAVEN _ OPTS = ' - Xmx2000m ' <nl> + mvn - e clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dspotbugs . skip = true - Djacoco . skip = true <nl> + ; ; <nl> + <nl> + jacoco ) <nl> + export MAVEN _ OPTS = ' - Xmx2000m ' <nl> + mvn - e clean test jacoco : restore - instrumented - classes jacoco : report @ default - report <nl> + ; ; <nl> + <nl> + test - de ) <nl> + mvn - e clean integration - test failsafe : verify \ <nl> + - DargLine = ' - Duser . language = de - Duser . country = DE - Xms1024m - Xmx2048m ' <nl> + ; ; <nl> + <nl> + test - es ) <nl> + mvn - e clean integration - test failsafe : verify \ <nl> + - DargLine = ' - Duser . language = es - Duser . country = ES - Xms1024m - Xmx2048m ' <nl> + ; ; <nl> + <nl> + test - fi ) <nl> + mvn - e clean integration - test failsafe : verify \ <nl> + - DargLine = ' - Duser . language = fi - Duser . country = FI - Xms1024m - Xmx2048m ' <nl> + ; ; <nl> + <nl> + test - fr ) <nl> + mvn - e clean integration - test failsafe : verify \ <nl> + - DargLine = ' - Duser . language = fr - Duser . country = FR - Xms1024m - Xmx2048m ' <nl> + ; ; <nl> + <nl> + test - zh ) <nl> + mvn - e clean integration - test failsafe : verify \ <nl> + - DargLine = ' - Duser . language = zh - Duser . country = ZH - Xms1024m - Xmx2048m ' <nl> + ; ; <nl> + <nl> + test - jp ) <nl> + mvn - e clean integration - test failsafe : verify \ <nl> + - DargLine = ' - Duser . language = jp - Duser . country = JP - Xms1024m - Xmx2048m ' <nl> + ; ; <nl> + <nl> + test - pt ) <nl> + mvn - e clean integration - test failsafe : verify \ <nl> + - DargLine = ' - Duser . language = pt - Duser . country = PT - Xms1024m - Xmx2048m ' <nl> + ; ; <nl> + <nl> + test - tr ) <nl> + mvn - e clean integration - test failsafe : verify \ <nl> + - DargLine = ' - Duser . language = tr - Duser . country = TR - Xms1024m - Xmx2048m ' <nl> + ; ; <nl> + <nl> + travis - osx ) <nl> + mvn - e package - Dlinkcheck . skip = true <nl> + mvn - e package - Passembly <nl> + ; ; <nl> + <nl> site ) <nl> mvn - e clean site - Pno - validations <nl> ; ; <nl> @ @ - 39 , 10 + 94 , 13 @ @ versions ) <nl> <nl> assembly - run - all - jar ) <nl> mvn - e clean package - Passembly <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo version : $ CS _ POM _ VERSION <nl> + FOLDER = src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap <nl> + FILE = InputNoLineWrapGood . java <nl> java - jar target / checkstyle - $ CS _ POM _ VERSION - all . jar - c / google _ checks . xml \ <nl> - src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / InputNoLineWrapGood . java > output . log <nl> + $ FOLDER / $ FILE > output . log <nl> if grep - vE ' ( Starting audit ) | ( warning ) | ( Audit done . ) ' output . log ; then exit 1 ; fi <nl> if grep ' warning ' output . log ; then exit 1 ; fi <nl> ; ; <nl> @ @ - 50 , 7 + 108 , 10 @ @ assembly - run - all - jar ) <nl> sonarqube ) <nl> # token could be generated at https : / / sonarcloud . io / account / security / <nl> # executon on local : SONAR _ TOKEN = xxxxxxxxxx . / . ci / travis / travis . sh sonarqube <nl> - if [ [ - v TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi <nl> + if [ [ - v TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; <nl> + then <nl> + exit 0 ; <nl> + fi <nl> if [ [ - z $ SONAR _ TOKEN ] ] ; then echo " SONAR _ TOKEN is not set " ; sleep 5s ; exit 1 ; fi <nl> export MAVEN _ OPTS = ' - Xmx2000m ' <nl> mvn - e clean package sonar : sonar \ <nl> @ @ - 61 , 7 + 122 , 7 @ @ sonarqube ) <nl> ; ; <nl> <nl> release - dry - run ) <nl> - if [ $ ( git log - 1 | grep - E " \ [ maven - release - plugin \ ] prepare release " | cat | wc - l ) - lt 1 ] ; then <nl> + if [ $ ( git log - 1 | grep - E " \ [ maven - release - plugin \ ] prepare release " | cat | wc - l ) - lt 1 ] ; then <nl> mvn - e release : prepare - DdryRun = true - - batch - mode - Darguments = ' - DskipTests - DskipITs \ <nl> - Djacoco . skip = true - Dpmd . skip = true - Dspotbugs . skip = true - Dxml . skip = true \ <nl> - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dgpg . skip = true ' <nl> @ @ - 93 , 18 + 154 , 22 @ @ all - sevntu - checks ) <nl> ; ; <nl> <nl> no - error - test - sbe ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo version : $ CS _ POM _ VERSION <nl> mvn - e clean install - Pno - validations <nl> git clone https : / / github . com / real - logic / simple - binary - encoding . git <nl> cd simple - binary - encoding <nl> git checkout 963814f8ca1456de9daaf67e78663e7d877871a9 <nl> - sed - i ' ' " s / ' com . puppycrawl . tools : checkstyle : . * ' / ' com . puppycrawl . tools : checkstyle : $ CS _ POM _ VERSION ' / " build . gradle <nl> + sed - i ' ' \ <nl> + " s / ' com . puppycrawl . tools : checkstyle : . * ' / ' com . puppycrawl . tools : checkstyle : $ CS _ POM _ VERSION ' / " \ <nl> + build . gradle <nl> . / gradlew build <nl> ; ; <nl> <nl> no - exception - test - checkstyle - sevntu - checkstyle ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo CS _ version : $ CS _ POM _ VERSION <nl> git clone https : / / github . com / checkstyle / contribution <nl> cd contribution / checkstyle - tester <nl> @ @ - 115 , 11 + 180 , 13 @ @ no - exception - test - checkstyle - sevntu - checkstyle ) <nl> mvn - e clean install - Pno - validations <nl> cd contribution / checkstyle - tester <nl> export MAVEN _ OPTS = " - Xmx2048m " <nl> - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ <nl> + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> ; ; <nl> <nl> no - exception - test - guava ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo CS _ version : $ CS _ POM _ VERSION <nl> git clone https : / / github . com / checkstyle / contribution <nl> cd contribution / checkstyle - tester <nl> @ @ - 129 , 11 + 196 , 13 @ @ no - exception - test - guava ) <nl> mvn - e clean install - Pno - validations <nl> cd contribution / checkstyle - tester <nl> export MAVEN _ OPTS = " - Xmx2048m " <nl> - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties <nl> + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> ; ; <nl> <nl> no - exception - test - guava - with - google - checks ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo CS _ version : $ CS _ POM _ VERSION <nl> git clone https : / / github . com / checkstyle / contribution <nl> cd contribution / checkstyle - tester <nl> @ @ - 144 , 11 + 213 , 13 @ @ no - exception - test - guava - with - google - checks ) <nl> sed - i . ' ' ' s / warning / ignore / ' src / main / resources / google _ checks . xml <nl> cd contribution / checkstyle - tester <nl> export MAVEN _ OPTS = " - Xmx2048m " <nl> - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config . . / . . / src / main / resources / google _ checks . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ <nl> + - - config . . / . . / src / main / resources / google _ checks . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> ; ; <nl> <nl> no - exception - test - hibernate ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo CS _ version : $ CS _ POM _ VERSION <nl> git clone https : / / github . com / checkstyle / contribution <nl> cd contribution / checkstyle - tester <nl> @ @ - 158 , 11 + 229 , 13 @ @ no - exception - test - hibernate ) <nl> mvn - e clean install - Pno - validations <nl> cd contribution / checkstyle - tester <nl> export MAVEN _ OPTS = " - Xmx2048m " <nl> - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ <nl> + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> ; ; <nl> <nl> no - exception - test - spotbugs ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo CS _ version : $ CS _ POM _ VERSION <nl> git clone https : / / github . com / checkstyle / contribution <nl> cd contribution / checkstyle - tester <nl> @ @ - 172 , 11 + 245 , 13 @ @ no - exception - test - spotbugs ) <nl> mvn - e clean install - Pno - validations <nl> cd contribution / checkstyle - tester <nl> export MAVEN _ OPTS = " - Xmx2048m " <nl> - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ <nl> + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> ; ; <nl> <nl> no - exception - test - spring - framework ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo CS _ version : $ CS _ POM _ VERSION <nl> git clone https : / / github . com / checkstyle / contribution <nl> cd contribution / checkstyle - tester <nl> @ @ - 186 , 11 + 261 , 13 @ @ no - exception - test - spring - framework ) <nl> mvn - e clean install - Pno - validations <nl> cd contribution / checkstyle - tester <nl> export MAVEN _ OPTS = " - Xmx2048m " <nl> - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ <nl> + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> ; ; <nl> <nl> no - exception - test - hbase ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo CS _ version : $ CS _ POM _ VERSION <nl> git clone https : / / github . com / checkstyle / contribution <nl> cd contribution / checkstyle - tester <nl> @ @ - 200 , 11 + 277 , 13 @ @ no - exception - test - hbase ) <nl> mvn - e clean install - Pno - validations <nl> cd contribution / checkstyle - tester <nl> export MAVEN _ OPTS = " - Xmx2048m " <nl> - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ <nl> + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> ; ; <nl> <nl> no - exception - test - Pmd - elasticsearch - lombok - ast ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo CS _ version : $ CS _ POM _ VERSION <nl> git clone https : / / github . com / checkstyle / contribution <nl> cd contribution / checkstyle - tester <nl> @ @ - 216 , 11 + 295 , 13 @ @ no - exception - test - Pmd - elasticsearch - lombok - ast ) <nl> mvn - e clean install - Pno - validations <nl> cd contribution / checkstyle - tester <nl> export MAVEN _ OPTS = " - Xmx2048m " <nl> - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ <nl> + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> ; ; <nl> <nl> no - exception - test - alot - of - project1 ) <nl> - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) <nl> echo CS _ version : $ CS _ POM _ VERSION <nl> git clone https : / / github . com / checkstyle / contribution <nl> cd contribution / checkstyle - tester <nl> @ @ - 235 , 7 + 316 , 8 @ @ no - exception - test - alot - of - project1 ) <nl> mvn - e clean install - Pno - validations <nl> cd contribution / checkstyle - tester <nl> export MAVEN _ OPTS = " - Xmx2048m " <nl> - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ <nl> + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION <nl> ; ; <nl> <nl> * ) <nl> diff - - git a / . ci / travis / xtr _ pr - description . sh b / . ci / travis / xtr _ pr - description . sh <nl> index e9aa6db . . b15f238 100755 <nl> - - - a / . ci / travis / xtr _ pr - description . sh <nl> + + + b / . ci / travis / xtr _ pr - description . sh <nl> @ @ - 4 , 7 + 4 , 8 @ @ set - e <nl> <nl> if [ [ ! $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi <nl> LINK _ COMMITS = https : / / api . github . com / repos / checkstyle / checkstyle / pulls / $ TRAVIS _ PULL _ REQUEST / commits <nl> - COMMITS = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ COMMITS | jq ' . [ 0 ] | . commit . message ' ) <nl> + COMMITS = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ COMMITS \ <nl> + | jq ' . [ 0 ] | . commit . message ' ) <nl> echo ' Commit messages from github : ' $ { COMMITS : 0 : 60 } . . . <nl> ISSUE _ NUMBER = $ ( echo $ COMMITS | sed - e ' s / ^ . * Issue / / ' | sed - e ' s / : . * / / ' ) <nl> echo ' Issue number : ' $ ISSUE _ NUMBER & & RESULT = 0 <nl> @ @ - 12 , 14 + 13 , 20 @ @ if [ [ $ ISSUE _ NUMBER = ~ ^ # [ 0 - 9 ] + $ ] ] ; then <nl> LINK _ PR = https : / / api . github . com / repos / checkstyle / checkstyle / pulls / $ TRAVIS _ PULL _ REQUEST <nl> LINK _ ISSUE = https : / / api . github . com / repos / checkstyle / checkstyle / issues / $ { ISSUE _ NUMBER : 1 } <nl> REGEXP = ( $ ISSUE _ NUMBER \ | https : / / github . com / checkstyle / checkstyle / issues / $ { ISSUE _ NUMBER : 1 } ) <nl> - PR _ DESC = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ PR | jq ' . body ' | grep - E $ REGEXP | cat ) <nl> + PR _ DESC = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ PR \ <nl> + | jq ' . body ' | grep - E $ REGEXP | cat ) <nl> echo ' PR Description grepped : ' $ { PR _ DESC : 0 : 80 } <nl> if [ [ - z $ PR _ DESC ] ] ; then <nl> - echo ' Please put a reference to an Issue in the PR description , this will bind the Issue to your PR in Github ' & & RESULT = 1 ; <nl> + echo ' Please put a reference to an Issue in the PR description , " <nl> + echo ' this will bind the Issue to your PR in Github ' <nl> + RESULT = 1 ; <nl> fi <nl> - LABEL _ APRV = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ ISSUE | jq ' . labels [ ] | . name ' | grep approved | cat | wc - l ) <nl> + LABEL _ APRV = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ ISSUE \ <nl> + | jq ' . labels [ ] | . name ' | grep approved | cat | wc - l ) <nl> if [ [ $ LABEL _ APRV = = 0 ] ] ; then <nl> - echo ' You are providing a PR for an Issue that is not approved yet , please ask admins to approve your Issue first ' & & RESULT = 1 ; <nl> + echo ' You are providing a PR for an Issue that is not approved yet , <nl> + echo ' please ask admins to approve your Issue first ' <nl> + RESULT = 1 ; <nl> fi <nl> fi <nl> if [ [ $ RESULT = = 0 ] ] ; then <nl> diff - - git a / . ci / travis / xtr _ releasenotes - gen . sh b / . ci / travis / xtr _ releasenotes - gen . sh <nl> index 8fac6d9 . . c42a231 100755 <nl> - - - a / . ci / travis / xtr _ releasenotes - gen . sh <nl> + + + b / . ci / travis / xtr _ releasenotes - gen . sh <nl> @ @ - 1 , 11 + 1 , 17 @ @ <nl> # ! / bin / bash <nl> # Attention , there is no " - x " to avoid problem on Travis <nl> - # to run on local : export READ _ ONLY _ TOKEN = 9ffd28f & & export TRAVIS _ PULL _ REQUEST = " master " & & . / . ci / travis / travis . sh releasenotes - gen <nl> + # to run on local : <nl> + # export READ _ ONLY _ TOKEN = 9ffd28f <nl> + # & & export TRAVIS _ PULL _ REQUEST = " master " & & . / . ci / travis / travis . sh releasenotes - gen <nl> <nl> set - e <nl> <nl> echo " TRAVIS _ PULL _ REQUEST : " $ TRAVIS _ PULL _ REQUEST <nl> - if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then echo " Build is not for Pull Request " ; sleep 5 ; exit 0 ; fi <nl> + if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then <nl> + echo " Build is not for Pull Request " ; <nl> + sleep 5 ; <nl> + exit 0 ; <nl> + fi <nl> <nl> if [ - d contribution ] ; then <nl> cd contribution / <nl> @ @ - 32 , 7 + 38 , 8 @ @ cd checkstyle <nl> LATEST _ RELEASE _ TAG = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) ) <nl> cd . . / <nl> <nl> - CS _ RELEASE _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec | sed ' s / - SNAPSHOT / / ' ) <nl> + CS _ RELEASE _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ <nl> + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec | sed ' s / - SNAPSHOT / / ' ) <nl> echo LATEST _ RELEASE _ TAG = $ LATEST _ RELEASE _ TAG <nl> echo CS _ RELEASE _ VERSION = $ CS _ RELEASE _ VERSION <nl> java - jar contribution / releasenotes - builder / target / releasenotes - builder - 1 . 0 - all . jar \ <nl> diff - - git a / . travis . yml b / . travis . yml <nl> index 9ec1007 . . 2d0ba11 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 40 , 13 + 40 , 13 @ @ matrix : <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " checkstyle and sevntu - checkstyle " <nl> - - CMD = " export MAVEN _ OPTS = ' - Xmx2000m ' & & mvn - e clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dspotbugs . skip = true - Djacoco . skip = true " <nl> + - CMD = " . / . ci / travis / travis . sh checkstyle - and - sevntu " <nl> <nl> # jacoco and codecov ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " jacoco and codecov " <nl> - - CMD = " export MAVEN _ OPTS = ' - Xmx2000m ' & & mvn - e clean test jacoco : restore - instrumented - classes jacoco : report @ default - report " <nl> + - CMD = " . / . ci / travis / travis . sh jacoco " <nl> - CMD _ AFTER _ SUCCESS = " bash < ( curl - s https : / / codecov . io / bash ) " <nl> <nl> # spotbugs and pmd ( oraclejdk8 ) <nl> @ @ - 73 , 7 + 73 , 8 @ @ matrix : <nl> - DESC = " NonDex " <nl> - CMD = " . / . ci / travis / travis . sh nondex " <nl> <nl> - # site ( oraclejdk8 as ' site ' success is required to be sure that on release time all will be ok , admins will use oracle8 version ) <nl> + # site ( oraclejdk8 as ' site ' success is required to be sure that on release time all will be ok , <nl> + # admins will use oracle8 version ) <nl> # moved to https : / / codeship . com / projects / 124310 / configure _ tests <nl> # - jdk : oraclejdk8 <nl> # env : <nl> @ @ - 88 , 42 + 89 , 42 @ @ matrix : <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " tests de " <nl> - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = de - Duser . country = DE - Xms1024m - Xmx2048m ' " <nl> + - CMD = " . / . ci / travis / travis . sh test - de " <nl> # unit tests in Spanish locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " tests es " <nl> - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = es - Duser . country = ES - Xms1024m - Xmx2048m ' " <nl> + - CMD = " . / . ci / travis / travis . sh test - es " <nl> # unit tests in Finnish locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " tests fi " <nl> - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = fi - Duser . country = FI - Xms1024m - Xmx2048m ' " <nl> + - CMD = " . / . ci / travis / travis . sh test - fi " <nl> # unit tests in French locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " tests fr " <nl> - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = fr - Duser . country = FR - Xms1024m - Xmx2048m ' " <nl> + - CMD = " . / . ci / travis / travis . sh test - fr " <nl> # unit tests in Chinese locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " tests zh " <nl> - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = zh - Duser . country = CN - Xms1024m - Xmx2048m ' " <nl> + - CMD = " . / . ci / travis / travis . sh test - zh " <nl> # unit tests in Japanese locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " tests ja " <nl> - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = ja - Duser . country = JP - Xms1024m - Xmx2048m ' " <nl> + - CMD = " . / . ci / travis / travis . sh test - jp " <nl> # unit tests in Portuguese locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " tests pt " <nl> - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = pt - Duser . country = PT - Xms1024m - Xmx2048m ' " <nl> + - CMD = " . / . ci / travis / travis . sh test - pt " <nl> # unit tests in Turkish locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> - DESC = " tests tr " <nl> - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = tr - Duser . country = TR - Xms1024m - Xmx2048m ' " <nl> + - CMD = " . / . ci / travis / travis . sh test - tr " <nl> <nl> # assembly ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> @ @ - 158 , 8 + 159 , 10 @ @ matrix : <nl> # MacOS verify ( till cache is not working , we can not do verify ) <nl> - os : osx <nl> env : <nl> - - DESC = " MacOS verify , site , assembly " <nl> - - CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & mvn - e package - Dlinkcheck . skip = true & & mvn - e package - Passembly " <nl> + - DESC = " MacOS verify , site , assembly <nl> + - CMD1 = " mvn - e package - Dlinkcheck . skip = true " <nl> + - CMD2 = " mvn - e package - Passembly " <nl> + - CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & $ CMD1 & & $ CMD2 " <nl> <nl> # https : / / sonarcloud . io ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> @ @ - 198 , 10 + 201 , 14 @ @ matrix : <nl> - SKIP _ CI = " false " <nl> <nl> script : <nl> - - SKIP _ FILES = " . github | codeship - * | buddy . yml | appveyor . yml | circleci | distelli - manifest . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | shippable . yml | shippable . sh | wercker . yml | wercker . sh | intellij - idea - inspections . xml " <nl> + - SKIP _ FILES1 = " . github | codeship - * | buddy . yml | appveyor . yml | circleci | distelli - manifest . yml " <nl> + - SKIP _ FILES2 = " | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr " <nl> + - SKIP _ FILE3 = " | shippable . yml | shippable . sh | wercker . yml | wercker . sh | intellij - idea - inspections . xml " <nl> + - SKIP _ FILES = $ SKIP _ FILES1 $ SKIP _ FILES2 $ SKIP _ FILES3 <nl> - | <nl> if [ [ $ SKIP _ CI ! = ' false ' ] ] ; then <nl> - if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c | sed ' s / ^ * / / ' ) > 0 ] ] ; then <nl> + if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " \ <nl> + | cat | wc - c | sed ' s / ^ * / / ' ) > 0 ] ] ; then <nl> SKIP _ CI = " false " <nl> else <nl> SKIP _ CI = " true " <nl> @ @ - 230 , 7 + 237 , 13 @ @ after _ success : <nl> fi <nl> - | <nl> set - e <nl> - SKIP _ DEPLOY = $ ( if [ $ ( git log - 1 | grep - E " \ [ maven - release - plugin \ ] prepare release " | cat | wc - l ) - lt 1 ] ; then echo false ; else echo true ; fi ; ) <nl> + SKIP _ DEPLOY = false <nl> + if [ $ ( git log - 1 | grep - E " \ [ maven - release - plugin \ ] prepare release " | cat | wc - l ) - lt 1 ] ; <nl> + then <nl> + SKIP _ DEPLOY = false ; <nl> + else <nl> + SKIP _ DEPLOY = true ; <nl> + fi ; <nl> if [ [ $ TRAVIS _ REPO _ SLUG = = ' checkstyle / checkstyle ' <nl> & & $ TRAVIS _ BRANCH = = ' master ' <nl> & & $ TRAVIS _ PULL _ REQUEST = = ' false ' <nl> diff - - git a / config / checkstyle _ non _ main _ files _ suppressions . xml b / config / checkstyle _ non _ main _ files _ suppressions . xml <nl> index 4714b0a . . 5d0dc40 100644 <nl> - - - a / config / checkstyle _ non _ main _ files _ suppressions . xml <nl> + + + b / config / checkstyle _ non _ main _ files _ suppressions . xml <nl> @ @ - 60 , 14 + 60 , 6 @ @ <nl> < suppress checks = " RegexpSingleline " <nl> files = " appveyor . yml " / > <nl> < suppress checks = " RegexpSingleline " <nl> - files = " . ci [ \ \ / ] travis [ \ \ / ] checkchmod . sh " / > <nl> - < suppress checks = " RegexpSingleline " <nl> - files = " . ci [ \ \ / ] travis [ \ \ / ] travis . sh " / > <nl> - < suppress checks = " RegexpSingleline " <nl> - files = " . ci [ \ \ / ] travis [ \ \ / ] xtr _ pr - description . sh " / > <nl> - < suppress checks = " RegexpSingleline " <nl> - files = " . ci [ \ \ / ] travis [ \ \ / ] xtr _ releasenotes - gen . sh " / > <nl> - < suppress checks = " RegexpSingleline " <nl> files = " config [ \ \ / ] build . xml " / > <nl> < suppress checks = " RegexpSingleline " <nl> files = " config [ \ \ / ] catalog . xml " / > <nl> @ @ - 93 , 7 + 85 , 5 @ @ <nl> files = " src [ \ \ / ] xdocs [ \ \ / ] writingchecks . xml " / > <nl> < suppress checks = " RegexpSingleline " <nl> files = " src [ \ \ / ] xdocs [ \ \ / ] writingjavadocchecks . xml . vm " / > <nl> - < suppress checks = " RegexpSingleline " <nl> - files = " . travis . yml " / > <nl> <nl> < / suppressions >
NEAREST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 10ac851 . . b75d948 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 12 , 16 + 12 , 12 @ @ <nl> < ! - - illegal words are part of Javadoc - - > <nl> < suppress checks = " TodoComment " files = " . * TodoCommentCheck \ . java " / > <nl> <nl> - < ! - - All disallowed characters are stored there - - > <nl> - < suppress checks = " AvoidEscapedUnicodeCharactersCheck " <nl> - files = " AvoidEscapedUnicodeCharactersCheck . java " / > <nl> - <nl> < ! - - ' Abstract ' pattern is used to show it is checking for abstract class name - - > <nl> < suppress checks = " AbstractClassNameCheck " <nl> files = " AbstractClassNameCheck . java " / > <nl> < ! - - test should be named as their main class - - > <nl> < suppress checks = " AbstractClassNameCheck " <nl> - files = " AbstractCheckTest . java | AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java | AbstractFileSetCheckTest . java | AbstractNodeTest . java " / > <nl> + files = " AbstractCheckTest . java | AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java | AbstractFileSetCheckTest . java " / > <nl> <nl> < ! - - Tone down the checking for test code - - > <nl> < suppress checks = " ExecutableStatementCount | JavaNCSS | BooleanExpressionComplexity | NestedIfDepth | MethodLength " files = " [ \ \ / ] XdocsPagesTest \ . java " / > <nl> @ @ - 30 , 9 + 26 , 6 @ @ <nl> < suppress message = " Missing a Javadoc comment | Missing package - info . java file | Expected @ throws tag for " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " MagicNumber " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " AvoidStaticImport " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> - < suppress checks = " ClassDataAbstractionCoupling " files = " [ \ \ / ] IndentationCheckTest . java $ | [ \ \ / ] SuppressWithNearbyCommentFilterTest . java $ | [ \ \ / ] SuppressionCommentFilterTest . java | [ \ \ / ] DetailASTTest . java $ " / > <nl> - < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > <nl> - < suppress checks = " VisibilityModifier " files = " [ \ \ / ] AbstractModuleTestSupport . java $ " / > <nl> < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " MethodCount " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> <nl> @ @ - 40 , 9 + 33 , 6 @ @ <nl> < suppress checks = " MagicNumber " files = " ( ParseTreeTablePresentation | MainFrame ) \ . java " / > <nl> <nl> < ! - - Methods that build fake AST are very long - - > <nl> - < suppress checks = " MethodLength " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > <nl> - < suppress checks = " ExecutableStatementCount " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > <nl> - < suppress checks = " JavaNCSS " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > <nl> < suppress checks = " MethodLength " files = " . * ( Generated ) ? Java ( doc ) ? TokenTypesTest \ . java " / > <nl> < suppress checks = " ExecutableStatementCount " files = " . * ( Generated ) ? Java ( doc ) ? TokenTypesTest \ . java " / > <nl> < suppress checks = " JavaNCSS " files = " . * ( Generated ) ? Java ( doc ) ? TokenTypesTest \ . java " / > <nl> @ @ - 53 , 10 + 43 , 10 @ @ <nl> < suppress checks = " MissingDeprecated " files = " . * JavadocTokenTypes \ . java " / > <nl> <nl> < ! - - Till https : / / github . com / checkstyle / checkstyle / issues / 1854 - - > <nl> - < suppress checks = " TrailingComment " files = " ( InnerAssignmentCheck \ . java | OperatorWrapCheck \ . java | XMLLoggerTest \ . java | AbbreviationAsWordInNameCheckTest \ . java ) " / > <nl> + < suppress checks = " TrailingComment " files = " ( InnerAssignmentCheck \ . java | OperatorWrapCheck \ . java | AbbreviationAsWordInNameCheckTest \ . java ) " / > <nl> <nl> < ! - - Fixing these cases will decrease code readability - - > <nl> - < suppress checks = " MultipleStringLiterals " files = " JavadocStyleCheck \ . java | AbstractTypeAwareCheck \ . java | XMLLogger \ . java " / > <nl> + < suppress checks = " MultipleStringLiterals " files = " JavadocStyleCheck \ . java | XMLLogger \ . java " / > <nl> < suppress checks = " MultipleStringLiterals " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> <nl> < ! - - There are a lot of setters / getters in the Check . A small number of methods is left for Check ' s logic - - > <nl> @ @ - 67 , 17 + 57 , 13 @ @ <nl> < suppress checks = " MethodCount " files = " [ \ \ / ] VisibilityModifierCheck . java $ " / > <nl> < ! - - RequireThisCheck has a hierarchy of nested classes which contains a lot of methods . - - > <nl> < suppress checks = " MethodCount " files = " [ \ \ / ] RequireThisCheck . java $ " / > <nl> - < ! - - There are a lot of methods inherited from NodeInfo interface . - - > <nl> - < suppress checks = " MethodCount " files = " [ \ \ / ] AbstractNode . java $ " / > <nl> <nl> < ! - - we need that set of converters - - > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " AutomaticBean \ . java " / > <nl> < ! - - they are aggregators of logic , usage a several of classes are ok - - > <nl> - < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | JavadocDetailNodeParser ) \ . java " / > <nl> - < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest | AbstractModuleTestSupport | XdocsPagesTest | CheckstyleAntTaskTest ) \ . java " / > <nl> - < suppress checks = " ClassDataAbstractionCoupling " files = " PropertyCacheFile \ . java " / > <nl> + < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | Main | CheckstyleAntTask | JavadocDetailNodeParser ) \ . java " / > <nl> + < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | AbstractModuleTestSupport | CheckstyleAntTaskTest ) \ . java " / > <nl> < suppress checks = " ClassDataAbstractionCoupling " files = " PropertyCacheFileTest \ . java " / > <nl> - < suppress checks = " ClassDataAbstractionCoupling " files = " JavadocPropertiesGenerator \ . java " / > <nl> < suppress checks = " ClassFanOutComplexity " files = " [ \ \ / ] Main \ . java " / > <nl> < suppress checks = " ClassFanOutComplexity " files = " CheckstyleAntTask \ . java " / > <nl> < suppress checks = " ClassFanOutComplexity " files = " CheckerTest \ . java " / >

TEST DIFF:
diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words 
 index 76e49e4 . . af3d056 100644 
 - - - a / . ci / jsoref - spellchecker / whitelist . words 
 + + + b / . ci / jsoref - spellchecker / whitelist . words 
 @ @ - 632 , 6 + 632 , 7 @ @ Jlo 
 jls 
 JNDI 
 JOption 
 + jp 
 Jpa 
 JPanel 
 jpeg 
 diff - - git a / . ci / travis / checkchmod . sh b / . ci / travis / checkchmod . sh 
 index 606045f . . a963d3d 100755 
 - - - a / . ci / travis / checkchmod . sh 
 + + + b / . ci / travis / checkchmod . sh 
 @ @ - 2 , 8 + 2 , 12 @ @ 
 
 set - e 
 
 - # On Travis , after clone , all files are with 644 permission , on local they are 664 , so we check only executable bit 
 - CHMOD = $ ( find - type f - not - path ' * / \ . git / * ' - a - type f - not - name ' * . sh ' - a - type f - not - name ' * . pl ' - a \ ( - type d - not - perm 775 - o - type f - executable \ ) ) 
 + # On Travis , after clone , all files are with 644 permission , on local they are 664 , 
 + # so we check only executable bit 
 + CHMOD = $ ( find - type f - not - path ' * / \ . git / * ' \ 
 + - a - type f - not - name ' * . sh ' \ 
 + - a - type f - not - name ' * . pl ' \ 
 + - a \ ( - type d - not - perm 775 - o - type f - executable \ ) ) 
 if [ [ ! - z $ CHMOD ] ] ; then 
 echo " Expected mode for non ' . sh ' files is 664 . " ; 
 echo " Files that violates this rule : " 
 diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh 
 index 225b504 . . ad93346 100755 
 - - - a / . ci / travis / travis . sh 
 + + + b / . ci / travis / travis . sh 
 @ @ - 4 , 6 + 4 , 61 @ @ set - e 
 
 case $ 1 in 
 
 + checkstyle - and - sevntu ) 
 + export MAVEN _ OPTS = ' - Xmx2000m ' 
 + mvn - e clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dspotbugs . skip = true - Djacoco . skip = true 
 + ; ; 
 + 
 + jacoco ) 
 + export MAVEN _ OPTS = ' - Xmx2000m ' 
 + mvn - e clean test jacoco : restore - instrumented - classes jacoco : report @ default - report 
 + ; ; 
 + 
 + test - de ) 
 + mvn - e clean integration - test failsafe : verify \ 
 + - DargLine = ' - Duser . language = de - Duser . country = DE - Xms1024m - Xmx2048m ' 
 + ; ; 
 + 
 + test - es ) 
 + mvn - e clean integration - test failsafe : verify \ 
 + - DargLine = ' - Duser . language = es - Duser . country = ES - Xms1024m - Xmx2048m ' 
 + ; ; 
 + 
 + test - fi ) 
 + mvn - e clean integration - test failsafe : verify \ 
 + - DargLine = ' - Duser . language = fi - Duser . country = FI - Xms1024m - Xmx2048m ' 
 + ; ; 
 + 
 + test - fr ) 
 + mvn - e clean integration - test failsafe : verify \ 
 + - DargLine = ' - Duser . language = fr - Duser . country = FR - Xms1024m - Xmx2048m ' 
 + ; ; 
 + 
 + test - zh ) 
 + mvn - e clean integration - test failsafe : verify \ 
 + - DargLine = ' - Duser . language = zh - Duser . country = ZH - Xms1024m - Xmx2048m ' 
 + ; ; 
 + 
 + test - jp ) 
 + mvn - e clean integration - test failsafe : verify \ 
 + - DargLine = ' - Duser . language = jp - Duser . country = JP - Xms1024m - Xmx2048m ' 
 + ; ; 
 + 
 + test - pt ) 
 + mvn - e clean integration - test failsafe : verify \ 
 + - DargLine = ' - Duser . language = pt - Duser . country = PT - Xms1024m - Xmx2048m ' 
 + ; ; 
 + 
 + test - tr ) 
 + mvn - e clean integration - test failsafe : verify \ 
 + - DargLine = ' - Duser . language = tr - Duser . country = TR - Xms1024m - Xmx2048m ' 
 + ; ; 
 + 
 + travis - osx ) 
 + mvn - e package - Dlinkcheck . skip = true 
 + mvn - e package - Passembly 
 + ; ; 
 + 
 site ) 
 mvn - e clean site - Pno - validations 
 ; ; 
 @ @ - 39 , 10 + 94 , 13 @ @ versions ) 
 
 assembly - run - all - jar ) 
 mvn - e clean package - Passembly 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo version : $ CS _ POM _ VERSION 
 + FOLDER = src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap 
 + FILE = InputNoLineWrapGood . java 
 java - jar target / checkstyle - $ CS _ POM _ VERSION - all . jar - c / google _ checks . xml \ 
 - src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / InputNoLineWrapGood . java > output . log 
 + $ FOLDER / $ FILE > output . log 
 if grep - vE ' ( Starting audit ) | ( warning ) | ( Audit done . ) ' output . log ; then exit 1 ; fi 
 if grep ' warning ' output . log ; then exit 1 ; fi 
 ; ; 
 @ @ - 50 , 7 + 108 , 10 @ @ assembly - run - all - jar ) 
 sonarqube ) 
 # token could be generated at https : / / sonarcloud . io / account / security / 
 # executon on local : SONAR _ TOKEN = xxxxxxxxxx . / . ci / travis / travis . sh sonarqube 
 - if [ [ - v TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi 
 + if [ [ - v TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; 
 + then 
 + exit 0 ; 
 + fi 
 if [ [ - z $ SONAR _ TOKEN ] ] ; then echo " SONAR _ TOKEN is not set " ; sleep 5s ; exit 1 ; fi 
 export MAVEN _ OPTS = ' - Xmx2000m ' 
 mvn - e clean package sonar : sonar \ 
 @ @ - 61 , 7 + 122 , 7 @ @ sonarqube ) 
 ; ; 
 
 release - dry - run ) 
 - if [ $ ( git log - 1 | grep - E " \ [ maven - release - plugin \ ] prepare release " | cat | wc - l ) - lt 1 ] ; then 
 + if [ $ ( git log - 1 | grep - E " \ [ maven - release - plugin \ ] prepare release " | cat | wc - l ) - lt 1 ] ; then 
 mvn - e release : prepare - DdryRun = true - - batch - mode - Darguments = ' - DskipTests - DskipITs \ 
 - Djacoco . skip = true - Dpmd . skip = true - Dspotbugs . skip = true - Dxml . skip = true \ 
 - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dgpg . skip = true ' 
 @ @ - 93 , 18 + 154 , 22 @ @ all - sevntu - checks ) 
 ; ; 
 
 no - error - test - sbe ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo version : $ CS _ POM _ VERSION 
 mvn - e clean install - Pno - validations 
 git clone https : / / github . com / real - logic / simple - binary - encoding . git 
 cd simple - binary - encoding 
 git checkout 963814f8ca1456de9daaf67e78663e7d877871a9 
 - sed - i ' ' " s / ' com . puppycrawl . tools : checkstyle : . * ' / ' com . puppycrawl . tools : checkstyle : $ CS _ POM _ VERSION ' / " build . gradle 
 + sed - i ' ' \ 
 + " s / ' com . puppycrawl . tools : checkstyle : . * ' / ' com . puppycrawl . tools : checkstyle : $ CS _ POM _ VERSION ' / " \ 
 + build . gradle 
 . / gradlew build 
 ; ; 
 
 no - exception - test - checkstyle - sevntu - checkstyle ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo CS _ version : $ CS _ POM _ VERSION 
 git clone https : / / github . com / checkstyle / contribution 
 cd contribution / checkstyle - tester 
 @ @ - 115 , 11 + 180 , 13 @ @ no - exception - test - checkstyle - sevntu - checkstyle ) 
 mvn - e clean install - Pno - validations 
 cd contribution / checkstyle - tester 
 export MAVEN _ OPTS = " - Xmx2048m " 
 - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ 
 + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 ; ; 
 
 no - exception - test - guava ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo CS _ version : $ CS _ POM _ VERSION 
 git clone https : / / github . com / checkstyle / contribution 
 cd contribution / checkstyle - tester 
 @ @ - 129 , 11 + 196 , 13 @ @ no - exception - test - guava ) 
 mvn - e clean install - Pno - validations 
 cd contribution / checkstyle - tester 
 export MAVEN _ OPTS = " - Xmx2048m " 
 - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties 
 + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 ; ; 
 
 no - exception - test - guava - with - google - checks ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo CS _ version : $ CS _ POM _ VERSION 
 git clone https : / / github . com / checkstyle / contribution 
 cd contribution / checkstyle - tester 
 @ @ - 144 , 11 + 213 , 13 @ @ no - exception - test - guava - with - google - checks ) 
 sed - i . ' ' ' s / warning / ignore / ' src / main / resources / google _ checks . xml 
 cd contribution / checkstyle - tester 
 export MAVEN _ OPTS = " - Xmx2048m " 
 - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config . . / . . / src / main / resources / google _ checks . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ 
 + - - config . . / . . / src / main / resources / google _ checks . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 ; ; 
 
 no - exception - test - hibernate ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo CS _ version : $ CS _ POM _ VERSION 
 git clone https : / / github . com / checkstyle / contribution 
 cd contribution / checkstyle - tester 
 @ @ - 158 , 11 + 229 , 13 @ @ no - exception - test - hibernate ) 
 mvn - e clean install - Pno - validations 
 cd contribution / checkstyle - tester 
 export MAVEN _ OPTS = " - Xmx2048m " 
 - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ 
 + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 ; ; 
 
 no - exception - test - spotbugs ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo CS _ version : $ CS _ POM _ VERSION 
 git clone https : / / github . com / checkstyle / contribution 
 cd contribution / checkstyle - tester 
 @ @ - 172 , 11 + 245 , 13 @ @ no - exception - test - spotbugs ) 
 mvn - e clean install - Pno - validations 
 cd contribution / checkstyle - tester 
 export MAVEN _ OPTS = " - Xmx2048m " 
 - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ 
 + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 ; ; 
 
 no - exception - test - spring - framework ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo CS _ version : $ CS _ POM _ VERSION 
 git clone https : / / github . com / checkstyle / contribution 
 cd contribution / checkstyle - tester 
 @ @ - 186 , 11 + 261 , 13 @ @ no - exception - test - spring - framework ) 
 mvn - e clean install - Pno - validations 
 cd contribution / checkstyle - tester 
 export MAVEN _ OPTS = " - Xmx2048m " 
 - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ 
 + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 ; ; 
 
 no - exception - test - hbase ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo CS _ version : $ CS _ POM _ VERSION 
 git clone https : / / github . com / checkstyle / contribution 
 cd contribution / checkstyle - tester 
 @ @ - 200 , 11 + 277 , 13 @ @ no - exception - test - hbase ) 
 mvn - e clean install - Pno - validations 
 cd contribution / checkstyle - tester 
 export MAVEN _ OPTS = " - Xmx2048m " 
 - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ 
 + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 ; ; 
 
 no - exception - test - Pmd - elasticsearch - lombok - ast ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo CS _ version : $ CS _ POM _ VERSION 
 git clone https : / / github . com / checkstyle / contribution 
 cd contribution / checkstyle - tester 
 @ @ - 216 , 11 + 295 , 13 @ @ no - exception - test - Pmd - elasticsearch - lombok - ast ) 
 mvn - e clean install - Pno - validations 
 cd contribution / checkstyle - tester 
 export MAVEN _ OPTS = " - Xmx2048m " 
 - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ 
 + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 ; ; 
 
 no - exception - test - alot - of - project1 ) 
 - CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 + CS _ POM _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec ) 
 echo CS _ version : $ CS _ POM _ VERSION 
 git clone https : / / github . com / checkstyle / contribution 
 cd contribution / checkstyle - tester 
 @ @ - 235 , 7 + 316 , 8 @ @ no - exception - test - alot - of - project1 ) 
 mvn - e clean install - Pno - validations 
 cd contribution / checkstyle - tester 
 export MAVEN _ OPTS = " - Xmx2048m " 
 - groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 + groovy . / launch . groovy - - listOfProjects projects - to - test - on . properties \ 
 + - - config checks - nonjavadoc - error . xml - - checkstyleVersion $ CS _ POM _ VERSION 
 ; ; 
 
 * ) 
 diff - - git a / . ci / travis / xtr _ pr - description . sh b / . ci / travis / xtr _ pr - description . sh 
 index e9aa6db . . b15f238 100755 
 - - - a / . ci / travis / xtr _ pr - description . sh 
 + + + b / . ci / travis / xtr _ pr - description . sh 
 @ @ - 4 , 7 + 4 , 8 @ @ set - e 
 
 if [ [ ! $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi 
 LINK _ COMMITS = https : / / api . github . com / repos / checkstyle / checkstyle / pulls / $ TRAVIS _ PULL _ REQUEST / commits 
 - COMMITS = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ COMMITS | jq ' . [ 0 ] | . commit . message ' ) 
 + COMMITS = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ COMMITS \ 
 + | jq ' . [ 0 ] | . commit . message ' ) 
 echo ' Commit messages from github : ' $ { COMMITS : 0 : 60 } . . . 
 ISSUE _ NUMBER = $ ( echo $ COMMITS | sed - e ' s / ^ . * Issue / / ' | sed - e ' s / : . * / / ' ) 
 echo ' Issue number : ' $ ISSUE _ NUMBER & & RESULT = 0 
 @ @ - 12 , 14 + 13 , 20 @ @ if [ [ $ ISSUE _ NUMBER = ~ ^ # [ 0 - 9 ] + $ ] ] ; then 
 LINK _ PR = https : / / api . github . com / repos / checkstyle / checkstyle / pulls / $ TRAVIS _ PULL _ REQUEST 
 LINK _ ISSUE = https : / / api . github . com / repos / checkstyle / checkstyle / issues / $ { ISSUE _ NUMBER : 1 } 
 REGEXP = ( $ ISSUE _ NUMBER \ | https : / / github . com / checkstyle / checkstyle / issues / $ { ISSUE _ NUMBER : 1 } ) 
 - PR _ DESC = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ PR | jq ' . body ' | grep - E $ REGEXP | cat ) 
 + PR _ DESC = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ PR \ 
 + | jq ' . body ' | grep - E $ REGEXP | cat ) 
 echo ' PR Description grepped : ' $ { PR _ DESC : 0 : 80 } 
 if [ [ - z $ PR _ DESC ] ] ; then 
 - echo ' Please put a reference to an Issue in the PR description , this will bind the Issue to your PR in Github ' & & RESULT = 1 ; 
 + echo ' Please put a reference to an Issue in the PR description , " 
 + echo ' this will bind the Issue to your PR in Github ' 
 + RESULT = 1 ; 
 fi 
 - LABEL _ APRV = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ ISSUE | jq ' . labels [ ] | . name ' | grep approved | cat | wc - l ) 
 + LABEL _ APRV = $ ( curl - s - H " Authorization : token $ READ _ ONLY _ TOKEN " $ LINK _ ISSUE \ 
 + | jq ' . labels [ ] | . name ' | grep approved | cat | wc - l ) 
 if [ [ $ LABEL _ APRV = = 0 ] ] ; then 
 - echo ' You are providing a PR for an Issue that is not approved yet , please ask admins to approve your Issue first ' & & RESULT = 1 ; 
 + echo ' You are providing a PR for an Issue that is not approved yet , 
 + echo ' please ask admins to approve your Issue first ' 
 + RESULT = 1 ; 
 fi 
 fi 
 if [ [ $ RESULT = = 0 ] ] ; then 
 diff - - git a / . ci / travis / xtr _ releasenotes - gen . sh b / . ci / travis / xtr _ releasenotes - gen . sh 
 index 8fac6d9 . . c42a231 100755 
 - - - a / . ci / travis / xtr _ releasenotes - gen . sh 
 + + + b / . ci / travis / xtr _ releasenotes - gen . sh 
 @ @ - 1 , 11 + 1 , 17 @ @ 
 # ! / bin / bash 
 # Attention , there is no " - x " to avoid problem on Travis 
 - # to run on local : export READ _ ONLY _ TOKEN = 9ffd28f & & export TRAVIS _ PULL _ REQUEST = " master " & & . / . ci / travis / travis . sh releasenotes - gen 
 + # to run on local : 
 + # export READ _ ONLY _ TOKEN = 9ffd28f 
 + # & & export TRAVIS _ PULL _ REQUEST = " master " & & . / . ci / travis / travis . sh releasenotes - gen 
 
 set - e 
 
 echo " TRAVIS _ PULL _ REQUEST : " $ TRAVIS _ PULL _ REQUEST 
 - if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then echo " Build is not for Pull Request " ; sleep 5 ; exit 0 ; fi 
 + if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then 
 + echo " Build is not for Pull Request " ; 
 + sleep 5 ; 
 + exit 0 ; 
 + fi 
 
 if [ - d contribution ] ; then 
 cd contribution / 
 @ @ - 32 , 7 + 38 , 8 @ @ cd checkstyle 
 LATEST _ RELEASE _ TAG = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) ) 
 cd . . / 
 
 - CS _ RELEASE _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec | sed ' s / - SNAPSHOT / / ' ) 
 + CS _ RELEASE _ VERSION = $ ( mvn - e - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' \ 
 + - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec | sed ' s / - SNAPSHOT / / ' ) 
 echo LATEST _ RELEASE _ TAG = $ LATEST _ RELEASE _ TAG 
 echo CS _ RELEASE _ VERSION = $ CS _ RELEASE _ VERSION 
 java - jar contribution / releasenotes - builder / target / releasenotes - builder - 1 . 0 - all . jar \ 
 diff - - git a / . travis . yml b / . travis . yml 
 index 9ec1007 . . 2d0ba11 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 40 , 13 + 40 , 13 @ @ matrix : 
 - jdk : oraclejdk8 
 env : 
 - DESC = " checkstyle and sevntu - checkstyle " 
 - - CMD = " export MAVEN _ OPTS = ' - Xmx2000m ' & & mvn - e clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dspotbugs . skip = true - Djacoco . skip = true " 
 + - CMD = " . / . ci / travis / travis . sh checkstyle - and - sevntu " 
 
 # jacoco and codecov ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - DESC = " jacoco and codecov " 
 - - CMD = " export MAVEN _ OPTS = ' - Xmx2000m ' & & mvn - e clean test jacoco : restore - instrumented - classes jacoco : report @ default - report " 
 + - CMD = " . / . ci / travis / travis . sh jacoco " 
 - CMD _ AFTER _ SUCCESS = " bash < ( curl - s https : / / codecov . io / bash ) " 
 
 # spotbugs and pmd ( oraclejdk8 ) 
 @ @ - 73 , 7 + 73 , 8 @ @ matrix : 
 - DESC = " NonDex " 
 - CMD = " . / . ci / travis / travis . sh nondex " 
 
 - # site ( oraclejdk8 as ' site ' success is required to be sure that on release time all will be ok , admins will use oracle8 version ) 
 + # site ( oraclejdk8 as ' site ' success is required to be sure that on release time all will be ok , 
 + # admins will use oracle8 version ) 
 # moved to https : / / codeship . com / projects / 124310 / configure _ tests 
 # - jdk : oraclejdk8 
 # env : 
 @ @ - 88 , 42 + 89 , 42 @ @ matrix : 
 - jdk : oraclejdk8 
 env : 
 - DESC = " tests de " 
 - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = de - Duser . country = DE - Xms1024m - Xmx2048m ' " 
 + - CMD = " . / . ci / travis / travis . sh test - de " 
 # unit tests in Spanish locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - DESC = " tests es " 
 - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = es - Duser . country = ES - Xms1024m - Xmx2048m ' " 
 + - CMD = " . / . ci / travis / travis . sh test - es " 
 # unit tests in Finnish locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - DESC = " tests fi " 
 - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = fi - Duser . country = FI - Xms1024m - Xmx2048m ' " 
 + - CMD = " . / . ci / travis / travis . sh test - fi " 
 # unit tests in French locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - DESC = " tests fr " 
 - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = fr - Duser . country = FR - Xms1024m - Xmx2048m ' " 
 + - CMD = " . / . ci / travis / travis . sh test - fr " 
 # unit tests in Chinese locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - DESC = " tests zh " 
 - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = zh - Duser . country = CN - Xms1024m - Xmx2048m ' " 
 + - CMD = " . / . ci / travis / travis . sh test - zh " 
 # unit tests in Japanese locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - DESC = " tests ja " 
 - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = ja - Duser . country = JP - Xms1024m - Xmx2048m ' " 
 + - CMD = " . / . ci / travis / travis . sh test - jp " 
 # unit tests in Portuguese locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - DESC = " tests pt " 
 - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = pt - Duser . country = PT - Xms1024m - Xmx2048m ' " 
 + - CMD = " . / . ci / travis / travis . sh test - pt " 
 # unit tests in Turkish locale ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 - DESC = " tests tr " 
 - - CMD = " mvn - e clean integration - test failsafe : verify - DargLine = ' - Duser . language = tr - Duser . country = TR - Xms1024m - Xmx2048m ' " 
 + - CMD = " . / . ci / travis / travis . sh test - tr " 
 
 # assembly ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 @ @ - 158 , 8 + 159 , 10 @ @ matrix : 
 # MacOS verify ( till cache is not working , we can not do verify ) 
 - os : osx 
 env : 
 - - DESC = " MacOS verify , site , assembly " 
 - - CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & mvn - e package - Dlinkcheck . skip = true & & mvn - e package - Passembly " 
 + - DESC = " MacOS verify , site , assembly 
 + - CMD1 = " mvn - e package - Dlinkcheck . skip = true " 
 + - CMD2 = " mvn - e package - Passembly " 
 + - CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & $ CMD1 & & $ CMD2 " 
 
 # https : / / sonarcloud . io ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 @ @ - 198 , 10 + 201 , 14 @ @ matrix : 
 - SKIP _ CI = " false " 
 
 script : 
 - - SKIP _ FILES = " . github | codeship - * | buddy . yml | appveyor . yml | circleci | distelli - manifest . yml | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr | shippable . yml | shippable . sh | wercker . yml | wercker . sh | intellij - idea - inspections . xml " 
 + - SKIP _ FILES1 = " . github | codeship - * | buddy . yml | appveyor . yml | circleci | distelli - manifest . yml " 
 + - SKIP _ FILES2 = " | fast - forward - merge . sh | LICENSE | LICENSE . apache20 | README . md | release . sh | RIGHTS . antlr " 
 + - SKIP _ FILE3 = " | shippable . yml | shippable . sh | wercker . yml | wercker . sh | intellij - idea - inspections . xml " 
 + - SKIP _ FILES = $ SKIP _ FILES1 $ SKIP _ FILES2 $ SKIP _ FILES3 
 - | 
 if [ [ $ SKIP _ CI ! = ' false ' ] ] ; then 
 - if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " | cat | wc - c | sed ' s / ^ * / / ' ) > 0 ] ] ; then 
 + if [ [ $ ( git diff - - name - only HEAD HEAD ~ 1 | grep - vE " $ SKIP _ FILES " \ 
 + | cat | wc - c | sed ' s / ^ * / / ' ) > 0 ] ] ; then 
 SKIP _ CI = " false " 
 else 
 SKIP _ CI = " true " 
 @ @ - 230 , 7 + 237 , 13 @ @ after _ success : 
 fi 
 - | 
 set - e 
 - SKIP _ DEPLOY = $ ( if [ $ ( git log - 1 | grep - E " \ [ maven - release - plugin \ ] prepare release " | cat | wc - l ) - lt 1 ] ; then echo false ; else echo true ; fi ; ) 
 + SKIP _ DEPLOY = false 
 + if [ $ ( git log - 1 | grep - E " \ [ maven - release - plugin \ ] prepare release " | cat | wc - l ) - lt 1 ] ; 
 + then 
 + SKIP _ DEPLOY = false ; 
 + else 
 + SKIP _ DEPLOY = true ; 
 + fi ; 
 if [ [ $ TRAVIS _ REPO _ SLUG = = ' checkstyle / checkstyle ' 
 & & $ TRAVIS _ BRANCH = = ' master ' 
 & & $ TRAVIS _ PULL _ REQUEST = = ' false ' 
 diff - - git a / config / checkstyle _ non _ main _ files _ suppressions . xml b / config / checkstyle _ non _ main _ files _ suppressions . xml 
 index 4714b0a . . 5d0dc40 100644 
 - - - a / config / checkstyle _ non _ main _ files _ suppressions . xml 
 + + + b / config / checkstyle _ non _ main _ files _ suppressions . xml 
 @ @ - 60 , 14 + 60 , 6 @ @ 
 < suppress checks = " RegexpSingleline " 
 files = " appveyor . yml " / > 
 < suppress checks = " RegexpSingleline " 
 - files = " . ci [ \ \ / ] travis [ \ \ / ] checkchmod . sh " / > 
 - < suppress checks = " RegexpSingleline " 
 - files = " . ci [ \ \ / ] travis [ \ \ / ] travis . sh " / > 
 - < suppress checks = " RegexpSingleline " 
 - files = " . ci [ \ \ / ] travis [ \ \ / ] xtr _ pr - description . sh " / > 
 - < suppress checks = " RegexpSingleline " 
 - files = " . ci [ \ \ / ] travis [ \ \ / ] xtr _ releasenotes - gen . sh " / > 
 - < suppress checks = " RegexpSingleline " 
 files = " config [ \ \ / ] build . xml " / > 
 < suppress checks = " RegexpSingleline " 
 files = " config [ \ \ / ] catalog . xml " / > 
 @ @ - 93 , 7 + 85 , 5 @ @ 
 files = " src [ \ \ / ] xdocs [ \ \ / ] writingchecks . xml " / > 
 < suppress checks = " RegexpSingleline " 
 files = " src [ \ \ / ] xdocs [ \ \ / ] writingjavadocchecks . xml . vm " / > 
 - < suppress checks = " RegexpSingleline " 
 - files = " . travis . yml " / > 
 
 < / suppressions >

NEAREST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 10ac851 . . b75d948 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 12 , 16 + 12 , 12 @ @ 
 < ! - - illegal words are part of Javadoc - - > 
 < suppress checks = " TodoComment " files = " . * TodoCommentCheck \ . java " / > 
 
 - < ! - - All disallowed characters are stored there - - > 
 - < suppress checks = " AvoidEscapedUnicodeCharactersCheck " 
 - files = " AvoidEscapedUnicodeCharactersCheck . java " / > 
 - 
 < ! - - ' Abstract ' pattern is used to show it is checking for abstract class name - - > 
 < suppress checks = " AbstractClassNameCheck " 
 files = " AbstractClassNameCheck . java " / > 
 < ! - - test should be named as their main class - - > 
 < suppress checks = " AbstractClassNameCheck " 
 - files = " AbstractCheckTest . java | AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java | AbstractFileSetCheckTest . java | AbstractNodeTest . java " / > 
 + files = " AbstractCheckTest . java | AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java | AbstractFileSetCheckTest . java " / > 
 
 < ! - - Tone down the checking for test code - - > 
 < suppress checks = " ExecutableStatementCount | JavaNCSS | BooleanExpressionComplexity | NestedIfDepth | MethodLength " files = " [ \ \ / ] XdocsPagesTest \ . java " / > 
 @ @ - 30 , 9 + 26 , 6 @ @ 
 < suppress message = " Missing a Javadoc comment | Missing package - info . java file | Expected @ throws tag for " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " MagicNumber " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " AvoidStaticImport " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 - < suppress checks = " ClassDataAbstractionCoupling " files = " [ \ \ / ] IndentationCheckTest . java $ | [ \ \ / ] SuppressWithNearbyCommentFilterTest . java $ | [ \ \ / ] SuppressionCommentFilterTest . java | [ \ \ / ] DetailASTTest . java $ " / > 
 - < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > 
 - < suppress checks = " VisibilityModifier " files = " [ \ \ / ] AbstractModuleTestSupport . java $ " / > 
 < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " MethodCount " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 
 @ @ - 40 , 9 + 33 , 6 @ @ 
 < suppress checks = " MagicNumber " files = " ( ParseTreeTablePresentation | MainFrame ) \ . java " / > 
 
 < ! - - Methods that build fake AST are very long - - > 
 - < suppress checks = " MethodLength " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > 
 - < suppress checks = " ExecutableStatementCount " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > 
 - < suppress checks = " JavaNCSS " files = " src [ \ \ / ] test [ \ \ / ] java [ \ \ / ] com [ \ \ / ] puppycrawl [ \ \ / ] tools [ \ \ / ] checkstyle [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] CommentsTest \ . java " / > 
 < suppress checks = " MethodLength " files = " . * ( Generated ) ? Java ( doc ) ? TokenTypesTest \ . java " / > 
 < suppress checks = " ExecutableStatementCount " files = " . * ( Generated ) ? Java ( doc ) ? TokenTypesTest \ . java " / > 
 < suppress checks = " JavaNCSS " files = " . * ( Generated ) ? Java ( doc ) ? TokenTypesTest \ . java " / > 
 @ @ - 53 , 10 + 43 , 10 @ @ 
 < suppress checks = " MissingDeprecated " files = " . * JavadocTokenTypes \ . java " / > 
 
 < ! - - Till https : / / github . com / checkstyle / checkstyle / issues / 1854 - - > 
 - < suppress checks = " TrailingComment " files = " ( InnerAssignmentCheck \ . java | OperatorWrapCheck \ . java | XMLLoggerTest \ . java | AbbreviationAsWordInNameCheckTest \ . java ) " / > 
 + < suppress checks = " TrailingComment " files = " ( InnerAssignmentCheck \ . java | OperatorWrapCheck \ . java | AbbreviationAsWordInNameCheckTest \ . java ) " / > 
 
 < ! - - Fixing these cases will decrease code readability - - > 
 - < suppress checks = " MultipleStringLiterals " files = " JavadocStyleCheck \ . java | AbstractTypeAwareCheck \ . java | XMLLogger \ . java " / > 
 + < suppress checks = " MultipleStringLiterals " files = " JavadocStyleCheck \ . java | XMLLogger \ . java " / > 
 < suppress checks = " MultipleStringLiterals " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 
 < ! - - There are a lot of setters / getters in the Check . A small number of methods is left for Check ' s logic - - > 
 @ @ - 67 , 17 + 57 , 13 @ @ 
 < suppress checks = " MethodCount " files = " [ \ \ / ] VisibilityModifierCheck . java $ " / > 
 < ! - - RequireThisCheck has a hierarchy of nested classes which contains a lot of methods . - - > 
 < suppress checks = " MethodCount " files = " [ \ \ / ] RequireThisCheck . java $ " / > 
 - < ! - - There are a lot of methods inherited from NodeInfo interface . - - > 
 - < suppress checks = " MethodCount " files = " [ \ \ / ] AbstractNode . java $ " / > 
 
 < ! - - we need that set of converters - - > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " AutomaticBean \ . java " / > 
 < ! - - they are aggregators of logic , usage a several of classes are ok - - > 
 - < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | TreeWalker | Main | CheckstyleAntTask | JavadocDetailNodeParser ) \ . java " / > 
 - < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | TreeWalkerTest | AbstractModuleTestSupport | XdocsPagesTest | CheckstyleAntTaskTest ) \ . java " / > 
 - < suppress checks = " ClassDataAbstractionCoupling " files = " PropertyCacheFile \ . java " / > 
 + < suppress checks = " ClassDataAbstractionCoupling " files = " ( Checker | Main | CheckstyleAntTask | JavadocDetailNodeParser ) \ . java " / > 
 + < suppress checks = " ClassDataAbstractionCoupling " files = " ( CheckerTest | AbstractModuleTestSupport | CheckstyleAntTaskTest ) \ . java " / > 
 < suppress checks = " ClassDataAbstractionCoupling " files = " PropertyCacheFileTest \ . java " / > 
 - < suppress checks = " ClassDataAbstractionCoupling " files = " JavadocPropertiesGenerator \ . java " / > 
 < suppress checks = " ClassFanOutComplexity " files = " [ \ \ / ] Main \ . java " / > 
 < suppress checks = " ClassFanOutComplexity " files = " CheckstyleAntTask \ . java " / > 
 < suppress checks = " ClassFanOutComplexity " files = " CheckerTest \ . java " / >
