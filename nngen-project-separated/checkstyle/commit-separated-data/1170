BLEU SCORE: 0.3699033744491308

TEST MSG: config : version bump for maven - resource - plugin
GENERATED MSG: config : maven - resource - plugin 3 . 0 . 0

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 2d8f89b . . 903337a 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 522 , 7 + 522 , 7 @ @ <nl> < plugin > <nl> < groupId > org . apache . maven . plugins < / groupId > <nl> < artifactId > maven - resources - plugin < / artifactId > <nl> - < version > 3 . 0 . 0 < / version > <nl> + < version > 3 . 0 . 1 < / version > <nl> < / plugin > <nl> <nl> < plugin >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> index c9c58c9 . . 4ceed2a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> @ @ - 90 , 12 + 90 , 10 @ @ public class LineWrappingHandler { <nl> for ( DetailAST node : firstNodesOnLines . values ( ) ) { <nl> final int currentType = node . getType ( ) ; <nl> <nl> - if ( currentType = = TokenTypes . RCURLY <nl> - | | currentType = = TokenTypes . RPAREN <nl> - | | currentType = = TokenTypes . ARRAY _ INIT ) { <nl> + if ( currentType = = TokenTypes . RPAREN ) { <nl> logWarningMessage ( node , firstNodeIndent ) ; <nl> } <nl> - else { <nl> + else if ( currentType ! = TokenTypes . RCURLY & & currentType ! = TokenTypes . ARRAY _ INIT ) { <nl> logWarningMessage ( node , currentIndent ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> index dccc2da . . 2a2bd8b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import static com . puppycrawl . tools . checkstyle . checks . indentation . IndentationChec <nl> import static org . junit . Assert . assertArrayEquals ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> + import static org . junit . Assert . fail ; <nl> <nl> import java . io . BufferedReader ; <nl> import java . io . File ; <nl> @ @ - 206 , 6 + 207 , 21 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testStrictCondition ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; <nl> + checkConfig . addAttribute ( " arrayInitIndent " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " basicOffset " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " braceAdjustment " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " caseIndent " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " forceStrictCondition " , " true " ) ; <nl> + checkConfig . addAttribute ( " lineWrappingIndentation " , " 8 " ) ; <nl> + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " throwsIndent " , " 8 " ) ; <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verifyWarns ( checkConfig , getPath ( " InputStrictCondition . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void forbidCStyle ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; <nl> checkConfig . addAttribute ( " arrayInitIndent " , " 4 " ) ; <nl> @ @ - 870 , 11 + 886 , 11 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> " 127 : " + getCheckMessage ( MSG _ ERROR , " member def type " , 10 , 12 ) , <nl> " 132 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " method def " , 10 , 8 ) , <nl> " 133 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " object def lcurly " , 8 , " 10 , 14 " ) , <nl> - " 137 : " + getCheckMessage ( MSG _ ERROR , " } " , 8 , 10 ) , <nl> + " 137 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " object def rcurly " , 8 , " 10 , 14 " ) , <nl> " 141 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " object def lcurly " , 6 , " 8 , 12 " ) , <nl> " 142 : " + getCheckMessage ( MSG _ ERROR , " method def modifier " , 12 , 10 ) , <nl> " 144 : " + getCheckMessage ( MSG _ ERROR , " method def rcurly " , 12 , 10 ) , <nl> - " 145 : " + getCheckMessage ( MSG _ ERROR , " } " , 6 , 8 ) , <nl> + " 145 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " object def rcurly " , 6 , " 8 , 12 " ) , <nl> " 150 : " + getCheckMessage ( MSG _ ERROR , " method def modifier " , 10 , 12 ) , <nl> " 152 : " + getCheckMessage ( MSG _ ERROR , " method def rcurly " , 10 , 12 ) , <nl> " 188 : " + getCheckMessage ( MSG _ ERROR , " class " , 0 , 4 ) , <nl> @ @ - 1616 , 6 + 1632 , 12 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> public void addError ( AuditEvent event ) { <nl> final int line = event . getLine ( ) ; <nl> final String message = event . getMessage ( ) ; <nl> + <nl> + if ( position > = comments . length ) { <nl> + fail ( " found a warning when none was expected for # " + position + " at line " + line <nl> + + " with message " + message ) ; <nl> + } <nl> + <nl> final IndentComment comment = comments [ position ] ; <nl> position + + ; <nl> <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidClassDefIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidClassDefIndent . java <nl> index 1640704 . . c5b5224 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidClassDefIndent . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidClassDefIndent . java <nl> @ @ - 134 , 7 + 134 , 7 @ @ final class InputValidClassDefIndent66 extends java . awt . event . MouseAdapter imple <nl> public void actionPerformed ( ActionEvent e ) { / / indent : 12 exp : 12 <nl> <nl> } / / indent : 12 exp : 12 <nl> - } ) ; / / indent : 8 exp : 10 warn <nl> + } ) ; / / indent : 8 exp : 10 , 14 warn <nl> <nl> <nl> new JButton ( ) . addActionListener ( new ActionListener ( ) / / indent : 8 exp : 8 <nl> @ @ - 142 , 7 + 142 , 7 @ @ final class InputValidClassDefIndent66 extends java . awt . event . MouseAdapter imple <nl> public void actionPerformed ( ActionEvent e ) { / / indent : 12 exp : 10 warn <nl> <nl> } / / indent : 12 exp : 10 warn <nl> - } ) ; / / indent : 6 exp : 8 warn <nl> + } ) ; / / indent : 6 exp : 8 , 12 warn <nl> <nl> <nl> new JButton ( ) . addActionListener ( new ActionListener ( ) / / indent : 8 exp : 8 <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputStrictCondition . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputStrictCondition . java <nl> new file mode 100644 <nl> index 0000000 . . ad2a00b <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputStrictCondition . java <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . indentation ; / / indent : 0 exp : 0 <nl> + <nl> + import java . lang . Thread ; / / indent : 0 exp : 0 <nl> + <nl> + public class InputStrictCondition { / / indent : 0 exp : 0 <nl> + void method ( Thread foo ) { / / indent : 4 exp : 4 <nl> + method ( / / indent : 8 exp : 8 <nl> + new Thread ( ) { / / indent : 16 exp : 16 <nl> + public void run ( ) { / / indent : 24 exp : 24 <nl> + } / / indent : 28 exp : 28 <nl> + } / / indent : 20 exp : 20 <nl> + ) ; / / indent : 8 exp : 8 <nl> + } / / indent : 8 exp : 8 <nl> + } / / indent : 4 exp : 4 <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 2d8f89b . . 903337a 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 522 , 7 + 522 , 7 @ @ 
 < plugin > 
 < groupId > org . apache . maven . plugins < / groupId > 
 < artifactId > maven - resources - plugin < / artifactId > 
 - < version > 3 . 0 . 0 < / version > 
 + < version > 3 . 0 . 1 < / version > 
 < / plugin > 
 
 < plugin >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 index c9c58c9 . . 4ceed2a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 @ @ - 90 , 12 + 90 , 10 @ @ public class LineWrappingHandler { 
 for ( DetailAST node : firstNodesOnLines . values ( ) ) { 
 final int currentType = node . getType ( ) ; 
 
 - if ( currentType = = TokenTypes . RCURLY 
 - | | currentType = = TokenTypes . RPAREN 
 - | | currentType = = TokenTypes . ARRAY _ INIT ) { 
 + if ( currentType = = TokenTypes . RPAREN ) { 
 logWarningMessage ( node , firstNodeIndent ) ; 
 } 
 - else { 
 + else if ( currentType ! = TokenTypes . RCURLY & & currentType ! = TokenTypes . ARRAY _ INIT ) { 
 logWarningMessage ( node , currentIndent ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 index dccc2da . . 2a2bd8b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import static com . puppycrawl . tools . checkstyle . checks . indentation . IndentationChec 
 import static org . junit . Assert . assertArrayEquals ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 + import static org . junit . Assert . fail ; 
 
 import java . io . BufferedReader ; 
 import java . io . File ; 
 @ @ - 206 , 6 + 207 , 21 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void testStrictCondition ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; 
 + checkConfig . addAttribute ( " arrayInitIndent " , " 4 " ) ; 
 + checkConfig . addAttribute ( " basicOffset " , " 4 " ) ; 
 + checkConfig . addAttribute ( " braceAdjustment " , " 4 " ) ; 
 + checkConfig . addAttribute ( " caseIndent " , " 4 " ) ; 
 + checkConfig . addAttribute ( " forceStrictCondition " , " true " ) ; 
 + checkConfig . addAttribute ( " lineWrappingIndentation " , " 8 " ) ; 
 + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 + checkConfig . addAttribute ( " throwsIndent " , " 8 " ) ; 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verifyWarns ( checkConfig , getPath ( " InputStrictCondition . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void forbidCStyle ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( IndentationCheck . class ) ; 
 checkConfig . addAttribute ( " arrayInitIndent " , " 4 " ) ; 
 @ @ - 870 , 11 + 886 , 11 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 " 127 : " + getCheckMessage ( MSG _ ERROR , " member def type " , 10 , 12 ) , 
 " 132 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " method def " , 10 , 8 ) , 
 " 133 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " object def lcurly " , 8 , " 10 , 14 " ) , 
 - " 137 : " + getCheckMessage ( MSG _ ERROR , " } " , 8 , 10 ) , 
 + " 137 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " object def rcurly " , 8 , " 10 , 14 " ) , 
 " 141 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " object def lcurly " , 6 , " 8 , 12 " ) , 
 " 142 : " + getCheckMessage ( MSG _ ERROR , " method def modifier " , 12 , 10 ) , 
 " 144 : " + getCheckMessage ( MSG _ ERROR , " method def rcurly " , 12 , 10 ) , 
 - " 145 : " + getCheckMessage ( MSG _ ERROR , " } " , 6 , 8 ) , 
 + " 145 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " object def rcurly " , 6 , " 8 , 12 " ) , 
 " 150 : " + getCheckMessage ( MSG _ ERROR , " method def modifier " , 10 , 12 ) , 
 " 152 : " + getCheckMessage ( MSG _ ERROR , " method def rcurly " , 10 , 12 ) , 
 " 188 : " + getCheckMessage ( MSG _ ERROR , " class " , 0 , 4 ) , 
 @ @ - 1616 , 6 + 1632 , 12 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 public void addError ( AuditEvent event ) { 
 final int line = event . getLine ( ) ; 
 final String message = event . getMessage ( ) ; 
 + 
 + if ( position > = comments . length ) { 
 + fail ( " found a warning when none was expected for # " + position + " at line " + line 
 + + " with message " + message ) ; 
 + } 
 + 
 final IndentComment comment = comments [ position ] ; 
 position + + ; 
 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidClassDefIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidClassDefIndent . java 
 index 1640704 . . c5b5224 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidClassDefIndent . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidClassDefIndent . java 
 @ @ - 134 , 7 + 134 , 7 @ @ final class InputValidClassDefIndent66 extends java . awt . event . MouseAdapter imple 
 public void actionPerformed ( ActionEvent e ) { / / indent : 12 exp : 12 
 
 } / / indent : 12 exp : 12 
 - } ) ; / / indent : 8 exp : 10 warn 
 + } ) ; / / indent : 8 exp : 10 , 14 warn 
 
 
 new JButton ( ) . addActionListener ( new ActionListener ( ) / / indent : 8 exp : 8 
 @ @ - 142 , 7 + 142 , 7 @ @ final class InputValidClassDefIndent66 extends java . awt . event . MouseAdapter imple 
 public void actionPerformed ( ActionEvent e ) { / / indent : 12 exp : 10 warn 
 
 } / / indent : 12 exp : 10 warn 
 - } ) ; / / indent : 6 exp : 8 warn 
 + } ) ; / / indent : 6 exp : 8 , 12 warn 
 
 
 new JButton ( ) . addActionListener ( new ActionListener ( ) / / indent : 8 exp : 8 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputStrictCondition . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputStrictCondition . java 
 new file mode 100644 
 index 0000000 . . ad2a00b 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputStrictCondition . java 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . indentation ; / / indent : 0 exp : 0 
 + 
 + import java . lang . Thread ; / / indent : 0 exp : 0 
 + 
 + public class InputStrictCondition { / / indent : 0 exp : 0 
 + void method ( Thread foo ) { / / indent : 4 exp : 4 
 + method ( / / indent : 8 exp : 8 
 + new Thread ( ) { / / indent : 16 exp : 16 
 + public void run ( ) { / / indent : 24 exp : 24 
 + } / / indent : 28 exp : 28 
 + } / / indent : 20 exp : 20 
 + ) ; / / indent : 8 exp : 8 
 + } / / indent : 8 exp : 8 
 + } / / indent : 4 exp : 4 
 \ No newline at end of file
