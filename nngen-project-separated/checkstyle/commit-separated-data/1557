BLEU SCORE: 0.04873498938813619

TEST MSG: Issue # 2161 : unify test input locations
GENERATED MSG: LocalVariableNameUpdate # 192 . Allowed one char variables in

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java <nl> index 9f83ad7 . . ab6169a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java <nl> @ @ - 21 , 6 + 21 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . ModifiedControlVariableCheck . MSG _ KEY ; <nl> <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + <nl> import org . apache . commons . lang3 . ArrayUtils ; <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> @ @ - 32 , 6 + 35 , 12 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> <nl> public class ModifiedControlVariableCheckTest <nl> extends BaseCheckTestSupport { <nl> + @ Override <nl> + protected String getPath ( String filename ) throws IOException { <nl> + return super . getPath ( " checks " + File . separator <nl> + + " coding " + File . separator + filename ) ; <nl> + } <nl> + <nl> @ Test <nl> public void testModifiedControlVariable ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> @ @ - 46 , 7 + 55 , 7 @ @ public class ModifiedControlVariableCheckTest <nl> " 67 : 15 : " + getCheckMessage ( MSG _ KEY , " i " ) , <nl> " 68 : 15 : " + getCheckMessage ( MSG _ KEY , " k " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " coding / InputModifiedControl . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputModifiedControl . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 56 , 7 + 65 , 7 @ @ public class ModifiedControlVariableCheckTest <nl> checkConfig . addAttribute ( " skipEnhancedForLoopVariable " , " true " ) ; <nl> <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( checkConfig , getPath ( " coding / InputModifiedControlVariableEnhancedForLoopVariable . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputModifiedControlVariableEnhancedForLoopVariable . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 67 , 7 + 76 , 7 @ @ public class ModifiedControlVariableCheckTest <nl> final String [ ] expected = { <nl> " 9 : 18 : " + getCheckMessage ( MSG _ KEY , " line " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " coding / InputModifiedControlVariableEnhancedForLoopVariable . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputModifiedControlVariableEnhancedForLoopVariable . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControl . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControl . java <nl> new file mode 100644 <nl> index 0000000 . . 6e2c7ae <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControl . java <nl> @ @ - 0 , 0 + 1 , 79 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for FOR _ ITERATION and whitespace . <nl> + / / Created : 2003 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> + import java . io . Serializable ; <nl> + class InputModifiedControl <nl> + { <nl> + int k ; <nl> + void method1 ( ) <nl> + { <nl> + / / Violations : <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + i + + ; <nl> + } <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + i = i + 1 ; <nl> + } <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + for ( int j = 0 ; j < 1 ; i + + ) { <nl> + - - i ; <nl> + } <nl> + } <nl> + for ( int i = 0 , j = 0 ; i < 1 ; i + + ) { <nl> + j + + ; <nl> + } <nl> + <nl> + / / Ok : <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + } <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + int x = i ; <nl> + } <nl> + for ( int i = 0 ; i < 1 ; i + + ) { <nl> + Serializable s = new Serializable ( ) { <nl> + int i = 3 ; <nl> + void a ( ) { <nl> + System . out . println ( i + + ) ; <nl> + } <nl> + } ; <nl> + } <nl> + for ( int k = 0 ; k < 1 ; k + + ) { <nl> + this . k + + ; <nl> + } <nl> + <nl> + String [ ] sa = { " a " , " b " } ; <nl> + for ( String s : sa ) { } <nl> + for ( String s : sa ) { <nl> + s = " new string " ; <nl> + } <nl> + for ( int i = 0 ; i < 10 ; ) { <nl> + i + + ; <nl> + } <nl> + for ( int i = 0 , l = 0 , m = 0 ; l < 10 ; i + + , m = m + 2 ) { <nl> + l + + ; <nl> + m + + ; <nl> + } <nl> + for ( int i = 0 ; i < 10 ; ) { <nl> + i = 11 ; <nl> + } <nl> + int w = 0 ; <nl> + for ( int i = 0 ; i < 10 ; java . sql . Date . valueOf ( " " ) , this . i + + , w + + ) { <nl> + i + + ; <nl> + w + + ; <nl> + } <nl> + for ( int i = 0 , k = 0 ; i < 10 & & k < 10 ; + + i , + + k ) { <nl> + i = i + 3 ; <nl> + k = k + 4 ; <nl> + } <nl> + for ( int i = 0 , j = 0 ; i < 10 ; i + + ) { <nl> + j + + ; <nl> + } <nl> + } <nl> + private int i ; <nl> + } <nl> + <nl> + @ SuppressWarnings ( value = " this previously caused NullPointerException " ) <nl> + class VariableDeclaredBeforeTheFirstBlockBegins { <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControlVariableEnhancedForLoopVariable . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControlVariableEnhancedForLoopVariable . java <nl> new file mode 100644 <nl> index 0000000 . . e985cb4 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControlVariableEnhancedForLoopVariable . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> + <nl> + public class InputModifiedControlVariableEnhancedForLoopVariable { <nl> + <nl> + public void method2 ( ) <nl> + { <nl> + final String [ ] lines = { " line1 " , " line2 " , " line3 " } ; <nl> + for ( String line : lines ) { <nl> + line = line . trim ( ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControl . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControl . java <nl> deleted file mode 100644 <nl> index 9d0d74e . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControl . java <nl> + + + / dev / null <nl> @ @ - 1 , 79 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for FOR _ ITERATION and whitespace . <nl> - / / Created : 2003 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . coding ; <nl> - import java . io . Serializable ; <nl> - class InputModifiedControl <nl> - { <nl> - int k ; <nl> - void method1 ( ) <nl> - { <nl> - / / Violations : <nl> - for ( int i = 0 ; i < 1 ; i + + ) { <nl> - i + + ; <nl> - } <nl> - for ( int i = 0 ; i < 1 ; i + + ) { <nl> - i = i + 1 ; <nl> - } <nl> - for ( int i = 0 ; i < 1 ; i + + ) { <nl> - for ( int j = 0 ; j < 1 ; i + + ) { <nl> - - - i ; <nl> - } <nl> - } <nl> - for ( int i = 0 , j = 0 ; i < 1 ; i + + ) { <nl> - j + + ; <nl> - } <nl> - <nl> - / / Ok : <nl> - for ( int i = 0 ; i < 1 ; i + + ) { <nl> - } <nl> - for ( int i = 0 ; i < 1 ; i + + ) { <nl> - int x = i ; <nl> - } <nl> - for ( int i = 0 ; i < 1 ; i + + ) { <nl> - Serializable s = new Serializable ( ) { <nl> - int i = 3 ; <nl> - void a ( ) { <nl> - System . out . println ( i + + ) ; <nl> - } <nl> - } ; <nl> - } <nl> - for ( int k = 0 ; k < 1 ; k + + ) { <nl> - this . k + + ; <nl> - } <nl> - <nl> - String [ ] sa = { " a " , " b " } ; <nl> - for ( String s : sa ) { } <nl> - for ( String s : sa ) { <nl> - s = " new string " ; <nl> - } <nl> - for ( int i = 0 ; i < 10 ; ) { <nl> - i + + ; <nl> - } <nl> - for ( int i = 0 , l = 0 , m = 0 ; l < 10 ; i + + , m = m + 2 ) { <nl> - l + + ; <nl> - m + + ; <nl> - } <nl> - for ( int i = 0 ; i < 10 ; ) { <nl> - i = 11 ; <nl> - } <nl> - int w = 0 ; <nl> - for ( int i = 0 ; i < 10 ; java . sql . Date . valueOf ( " " ) , this . i + + , w + + ) { <nl> - i + + ; <nl> - w + + ; <nl> - } <nl> - for ( int i = 0 , k = 0 ; i < 10 & & k < 10 ; + + i , + + k ) { <nl> - i = i + 3 ; <nl> - k = k + 4 ; <nl> - } <nl> - for ( int i = 0 , j = 0 ; i < 10 ; i + + ) { <nl> - j + + ; <nl> - } <nl> - } <nl> - private int i ; <nl> - } <nl> - <nl> - @ SuppressWarnings ( value = " this previously caused NullPointerException " ) <nl> - class VariableDeclaredBeforeTheFirstBlockBegins { <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControlVariableEnhancedForLoopVariable . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControlVariableEnhancedForLoopVariable . java <nl> deleted file mode 100644 <nl> index 14ab214 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControlVariableEnhancedForLoopVariable . java <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . coding ; <nl> - <nl> - public class InputModifiedControlVariableEnhancedForLoopVariable { <nl> - <nl> - public void method2 ( ) <nl> - { <nl> - final String [ ] lines = { " line1 " , " line2 " , " line3 " } ; <nl> - for ( String line : lines ) { <nl> - line = line . trim ( ) ; <nl> - } <nl> - } <nl> - }
NEAREST DIFF (one line): diff - - git a / README . md b / README . md <nl> index 344a605 . . b9f986a 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> - " ! https : / / secure . travis - ci . org / checkstyle / checkstyle . png ! " : http : / / travis - ci . org / checkstyle / checkstyle " ! https : / / d2weczhvl823v0 . cloudfront . net / romani / checkstyle / trend . png ! " : https : / / bitdeli . com / free <nl> + [ ! [ ] [ travis img ] ] [ travis ] <nl> + [ ! [ ] [ trend img ] ] [ trend ] <nl> <nl> CHECKSTYLE <nl> = = = = = = = = = = <nl> @ @ - 35 , 7 + 36 , 7 @ @ directory . <nl> <nl> Continuous integration <nl> = = = = = = = = = = = = = = = = = = = = = = <nl> - Travis : " ! https : / / secure . travis - ci . org / checkstyle / checkstyle . png ! " : http : / / travis - ci . org / checkstyle / checkstyle <nl> + Travis : [ ! [ ] [ travis img ] ] [ travis ] <nl> <nl> <nl> Feedback <nl> @ @ - 46 , 6 + 47 , 11 @ @ Please send any feedback to https : / / groups . google . com / forum / ? hl = en # ! forum / checks <nl> Bugs should be reported to the checkstyle bugtracker at <nl> https : / / github . com / checkstyle / checkstyle / issues <nl> <nl> + [ travis ] : http : / / travis - ci . org / checkstyle / checkstyle <nl> + [ travis img ] : https : / / secure . travis - ci . org / checkstyle / checkstyle . png <nl> + <nl> + [ trend img ] : https : / / d2weczhvl823v0 . cloudfront . net / romani / checkstyle / trend . png <nl> + [ trend ] : https : / / bitdeli . com / free <nl> <nl> Thanks for trying out checkstyle ! <nl>

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java 
 index 9f83ad7 . . ab6169a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java 
 @ @ - 21 , 6 + 21 , 9 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . coding . ModifiedControlVariableCheck . MSG _ KEY ; 
 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + 
 import org . apache . commons . lang3 . ArrayUtils ; 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 @ @ - 32 , 6 + 35 , 12 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 
 public class ModifiedControlVariableCheckTest 
 extends BaseCheckTestSupport { 
 + @ Override 
 + protected String getPath ( String filename ) throws IOException { 
 + return super . getPath ( " checks " + File . separator 
 + + " coding " + File . separator + filename ) ; 
 + } 
 + 
 @ Test 
 public void testModifiedControlVariable ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 @ @ - 46 , 7 + 55 , 7 @ @ public class ModifiedControlVariableCheckTest 
 " 67 : 15 : " + getCheckMessage ( MSG _ KEY , " i " ) , 
 " 68 : 15 : " + getCheckMessage ( MSG _ KEY , " k " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " coding / InputModifiedControl . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputModifiedControl . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 56 , 7 + 65 , 7 @ @ public class ModifiedControlVariableCheckTest 
 checkConfig . addAttribute ( " skipEnhancedForLoopVariable " , " true " ) ; 
 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( checkConfig , getPath ( " coding / InputModifiedControlVariableEnhancedForLoopVariable . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputModifiedControlVariableEnhancedForLoopVariable . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 67 , 7 + 76 , 7 @ @ public class ModifiedControlVariableCheckTest 
 final String [ ] expected = { 
 " 9 : 18 : " + getCheckMessage ( MSG _ KEY , " line " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " coding / InputModifiedControlVariableEnhancedForLoopVariable . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputModifiedControlVariableEnhancedForLoopVariable . java " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControl . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControl . java 
 new file mode 100644 
 index 0000000 . . 6e2c7ae 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControl . java 
 @ @ - 0 , 0 + 1 , 79 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for FOR _ ITERATION and whitespace . 
 + / / Created : 2003 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . coding ; 
 + import java . io . Serializable ; 
 + class InputModifiedControl 
 + { 
 + int k ; 
 + void method1 ( ) 
 + { 
 + / / Violations : 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + i + + ; 
 + } 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + i = i + 1 ; 
 + } 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + for ( int j = 0 ; j < 1 ; i + + ) { 
 + - - i ; 
 + } 
 + } 
 + for ( int i = 0 , j = 0 ; i < 1 ; i + + ) { 
 + j + + ; 
 + } 
 + 
 + / / Ok : 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + } 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + int x = i ; 
 + } 
 + for ( int i = 0 ; i < 1 ; i + + ) { 
 + Serializable s = new Serializable ( ) { 
 + int i = 3 ; 
 + void a ( ) { 
 + System . out . println ( i + + ) ; 
 + } 
 + } ; 
 + } 
 + for ( int k = 0 ; k < 1 ; k + + ) { 
 + this . k + + ; 
 + } 
 + 
 + String [ ] sa = { " a " , " b " } ; 
 + for ( String s : sa ) { } 
 + for ( String s : sa ) { 
 + s = " new string " ; 
 + } 
 + for ( int i = 0 ; i < 10 ; ) { 
 + i + + ; 
 + } 
 + for ( int i = 0 , l = 0 , m = 0 ; l < 10 ; i + + , m = m + 2 ) { 
 + l + + ; 
 + m + + ; 
 + } 
 + for ( int i = 0 ; i < 10 ; ) { 
 + i = 11 ; 
 + } 
 + int w = 0 ; 
 + for ( int i = 0 ; i < 10 ; java . sql . Date . valueOf ( " " ) , this . i + + , w + + ) { 
 + i + + ; 
 + w + + ; 
 + } 
 + for ( int i = 0 , k = 0 ; i < 10 & & k < 10 ; + + i , + + k ) { 
 + i = i + 3 ; 
 + k = k + 4 ; 
 + } 
 + for ( int i = 0 , j = 0 ; i < 10 ; i + + ) { 
 + j + + ; 
 + } 
 + } 
 + private int i ; 
 + } 
 + 
 + @ SuppressWarnings ( value = " this previously caused NullPointerException " ) 
 + class VariableDeclaredBeforeTheFirstBlockBegins { 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControlVariableEnhancedForLoopVariable . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControlVariableEnhancedForLoopVariable . java 
 new file mode 100644 
 index 0000000 . . e985cb4 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputModifiedControlVariableEnhancedForLoopVariable . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding ; 
 + 
 + public class InputModifiedControlVariableEnhancedForLoopVariable { 
 + 
 + public void method2 ( ) 
 + { 
 + final String [ ] lines = { " line1 " , " line2 " , " line3 " } ; 
 + for ( String line : lines ) { 
 + line = line . trim ( ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControl . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControl . java 
 deleted file mode 100644 
 index 9d0d74e . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControl . java 
 + + + / dev / null 
 @ @ - 1 , 79 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for FOR _ ITERATION and whitespace . 
 - / / Created : 2003 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . coding ; 
 - import java . io . Serializable ; 
 - class InputModifiedControl 
 - { 
 - int k ; 
 - void method1 ( ) 
 - { 
 - / / Violations : 
 - for ( int i = 0 ; i < 1 ; i + + ) { 
 - i + + ; 
 - } 
 - for ( int i = 0 ; i < 1 ; i + + ) { 
 - i = i + 1 ; 
 - } 
 - for ( int i = 0 ; i < 1 ; i + + ) { 
 - for ( int j = 0 ; j < 1 ; i + + ) { 
 - - - i ; 
 - } 
 - } 
 - for ( int i = 0 , j = 0 ; i < 1 ; i + + ) { 
 - j + + ; 
 - } 
 - 
 - / / Ok : 
 - for ( int i = 0 ; i < 1 ; i + + ) { 
 - } 
 - for ( int i = 0 ; i < 1 ; i + + ) { 
 - int x = i ; 
 - } 
 - for ( int i = 0 ; i < 1 ; i + + ) { 
 - Serializable s = new Serializable ( ) { 
 - int i = 3 ; 
 - void a ( ) { 
 - System . out . println ( i + + ) ; 
 - } 
 - } ; 
 - } 
 - for ( int k = 0 ; k < 1 ; k + + ) { 
 - this . k + + ; 
 - } 
 - 
 - String [ ] sa = { " a " , " b " } ; 
 - for ( String s : sa ) { } 
 - for ( String s : sa ) { 
 - s = " new string " ; 
 - } 
 - for ( int i = 0 ; i < 10 ; ) { 
 - i + + ; 
 - } 
 - for ( int i = 0 , l = 0 , m = 0 ; l < 10 ; i + + , m = m + 2 ) { 
 - l + + ; 
 - m + + ; 
 - } 
 - for ( int i = 0 ; i < 10 ; ) { 
 - i = 11 ; 
 - } 
 - int w = 0 ; 
 - for ( int i = 0 ; i < 10 ; java . sql . Date . valueOf ( " " ) , this . i + + , w + + ) { 
 - i + + ; 
 - w + + ; 
 - } 
 - for ( int i = 0 , k = 0 ; i < 10 & & k < 10 ; + + i , + + k ) { 
 - i = i + 3 ; 
 - k = k + 4 ; 
 - } 
 - for ( int i = 0 , j = 0 ; i < 10 ; i + + ) { 
 - j + + ; 
 - } 
 - } 
 - private int i ; 
 - } 
 - 
 - @ SuppressWarnings ( value = " this previously caused NullPointerException " ) 
 - class VariableDeclaredBeforeTheFirstBlockBegins { 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControlVariableEnhancedForLoopVariable . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControlVariableEnhancedForLoopVariable . java 
 deleted file mode 100644 
 index 14ab214 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputModifiedControlVariableEnhancedForLoopVariable . java 
 + + + / dev / null 
 @ @ - 1 , 12 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . coding ; 
 - 
 - public class InputModifiedControlVariableEnhancedForLoopVariable { 
 - 
 - public void method2 ( ) 
 - { 
 - final String [ ] lines = { " line1 " , " line2 " , " line3 " } ; 
 - for ( String line : lines ) { 
 - line = line . trim ( ) ; 
 - } 
 - } 
 - }

NEAREST DIFF:
diff - - git a / README . md b / README . md 
 index 344a605 . . b9f986a 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 - " ! https : / / secure . travis - ci . org / checkstyle / checkstyle . png ! " : http : / / travis - ci . org / checkstyle / checkstyle " ! https : / / d2weczhvl823v0 . cloudfront . net / romani / checkstyle / trend . png ! " : https : / / bitdeli . com / free 
 + [ ! [ ] [ travis img ] ] [ travis ] 
 + [ ! [ ] [ trend img ] ] [ trend ] 
 
 CHECKSTYLE 
 = = = = = = = = = = 
 @ @ - 35 , 7 + 36 , 7 @ @ directory . 
 
 Continuous integration 
 = = = = = = = = = = = = = = = = = = = = = = 
 - Travis : " ! https : / / secure . travis - ci . org / checkstyle / checkstyle . png ! " : http : / / travis - ci . org / checkstyle / checkstyle 
 + Travis : [ ! [ ] [ travis img ] ] [ travis ] 
 
 
 Feedback 
 @ @ - 46 , 6 + 47 , 11 @ @ Please send any feedback to https : / / groups . google . com / forum / ? hl = en # ! forum / checks 
 Bugs should be reported to the checkstyle bugtracker at 
 https : / / github . com / checkstyle / checkstyle / issues 
 
 + [ travis ] : http : / / travis - ci . org / checkstyle / checkstyle 
 + [ travis img ] : https : / / secure . travis - ci . org / checkstyle / checkstyle . png 
 + 
 + [ trend img ] : https : / / d2weczhvl823v0 . cloudfront . net / romani / checkstyle / trend . png 
 + [ trend ] : https : / / bitdeli . com / free 
 
 Thanks for trying out checkstyle ! 

