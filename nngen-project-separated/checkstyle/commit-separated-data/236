BLEU SCORE: 0.016932492841722675

TEST MSG: Issue # 5916 : update doc to show how to setup Eclipse
GENERATED MSG: XDoc updated

TEST DIFF (one line): diff - - git a / src / xdocs / eclipse . xml b / src / xdocs / eclipse . xml <nl> index 2a22b49 . . 4249746 100644 <nl> - - - a / src / xdocs / eclipse . xml <nl> + + + b / src / xdocs / eclipse . xml <nl> @ @ - 72 , 8 + 72 , 21 @ @ <nl> < / p > <nl> < / section > <nl> <nl> - < section name = " Suppress Eclipse warnings on resource files " > <nl> + < section name = " Suppress Eclipse warnings " > <nl> < p > <nl> + 1 ) Use Eclipse compiler preferences from repo : < br / > < br / > <nl> + copy <nl> + < a href = <nl> + " https : / / github . com / checkstyle / checkstyle / blob / master / config / org . eclipse . jdt . core . prefs " > <nl> + config / org . eclipse . jdt . core . prefs < / a > file <nl> + to <nl> + < code > . settings < / code > folder of cloned repository on your PC . Restart Eclipse . <nl> + Such folder does not exists in repository after clone and it is created by Eclipse <nl> + during project import . If folder not present please import checkstyle to Eclipse first . <nl> + < / p > <nl> + <nl> + < p > <nl> + 2 ) Ignore optional compile problems on resource files : < br / > < br / > <nl> Right click on Checkstyle project > Build Path > Configure Build Path . . . < br / > < br / > <nl> < img alt = " screenshot " src = " images / gui _ screenshot _ eclipse _ build _ path . png " / > <nl> < / p > <nl> @ @ - 89 , 11 + 102 , 6 @ @ <nl> < p > <nl> < img alt = " screenshot " src = " images / gui _ screenshot _ eclipse _ ignore _ warnings . png " / > <nl> < / p > <nl> - < br / > <nl> - < p > <nl> - Next , you need to put < i > . ci / org . eclipse . jdt . core . prefs < / i > file to the <nl> - < i > . settings / org . eclipse . jdt . core . prefs < / i > to setup Eclipse compiler . <nl> - < / p > <nl> < / section > <nl> <nl> < section name = " Organize Imports " >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ScopeUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / ScopeUtils . java <nl> index 47061b9 . . 89133fb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ScopeUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ScopeUtils . java <nl> @ @ - 43 , 20 + 43 , 17 @ @ public final class ScopeUtils { <nl> * / <nl> public static Scope getScopeFromMods ( DetailAST aMods ) { <nl> Scope retVal = Scope . PACKAGE ; / / default scope <nl> - for ( AST token = aMods . getFirstChild ( ) ; <nl> - token ! = null ; <nl> - token = token . getNextSibling ( ) ) { <nl> + for ( AST token = aMods . getFirstChild ( ) ; token ! = null <nl> + & & retVal = = Scope . PACKAGE ; <nl> + token = token . getNextSibling ( ) ) { <nl> if ( " public " . equals ( token . getText ( ) ) ) { <nl> retVal = Scope . PUBLIC ; <nl> - break ; <nl> } <nl> else if ( " protected " . equals ( token . getText ( ) ) ) { <nl> retVal = Scope . PROTECTED ; <nl> - break ; <nl> } <nl> else if ( " private " . equals ( token . getText ( ) ) ) { <nl> retVal = Scope . PRIVATE ; <nl> - break ; <nl> } <nl> } <nl> return retVal ; <nl> @ @ - 105 , 21 + 102 , 20 @ @ public final class ScopeUtils { <nl> <nl> / / Loop up looking for a containing interface block <nl> for ( DetailAST token = aAST . getParent ( ) ; <nl> - token ! = null ; <nl> + token ! = null & & ! retVal ; <nl> token = token . getParent ( ) ) { <nl> + <nl> final int type = token . getType ( ) ; <nl> - if ( type = = TokenTypes . CLASS _ DEF <nl> + <nl> + if ( type = = TokenTypes . INTERFACE _ DEF ) { <nl> + retVal = true ; <nl> + } <nl> + else if ( type = = TokenTypes . CLASS _ DEF <nl> | | type = = TokenTypes . ENUM _ DEF <nl> - | | type = = TokenTypes . ANNOTATION _ DEF ) { <nl> + | | type = = TokenTypes . ANNOTATION _ DEF <nl> + | | type = = TokenTypes . LITERAL _ NEW ) { <nl> break ; / / in a class , enum or annotation <nl> } <nl> - else if ( type = = TokenTypes . LITERAL _ NEW ) { <nl> - break ; / / inner implementation <nl> - } <nl> - else if ( type = = TokenTypes . INTERFACE _ DEF ) { <nl> - retVal = true ; <nl> - break ; <nl> - } <nl> } <nl> <nl> return retVal ; <nl> @ @ - 137 , 21 + 133 , 19 @ @ public final class ScopeUtils { <nl> <nl> / / Loop up looking for a containing interface block <nl> for ( DetailAST token = aAST . getParent ( ) ; <nl> - token ! = null ; <nl> + token ! = null & & ! retVal ; <nl> token = token . getParent ( ) ) { <nl> final int type = token . getType ( ) ; <nl> - if ( type = = TokenTypes . CLASS _ DEF <nl> + if ( type = = TokenTypes . ANNOTATION _ DEF ) { <nl> + retVal = true ; <nl> + } <nl> + else if ( type = = TokenTypes . CLASS _ DEF <nl> | | type = = TokenTypes . ENUM _ DEF <nl> - | | type = = TokenTypes . INTERFACE _ DEF ) { <nl> + | | type = = TokenTypes . INTERFACE _ DEF <nl> + | | type = = TokenTypes . LITERAL _ NEW ) { <nl> break ; / / in a class , enum or interface <nl> } <nl> - else if ( type = = TokenTypes . LITERAL _ NEW ) { <nl> - break ; / / inner implementation <nl> - } <nl> - else if ( type = = TokenTypes . ANNOTATION _ DEF ) { <nl> - retVal = true ; <nl> - break ; <nl> - } <nl> + <nl> } <nl> <nl> return retVal ; <nl> @ @ - 181 , 21 + 175 , 18 @ @ public final class ScopeUtils { <nl> <nl> / / Loop up looking for a containing interface block <nl> for ( DetailAST token = aAST . getParent ( ) ; <nl> - token ! = null ; <nl> + token ! = null & & ! retVal ; <nl> token = token . getParent ( ) ) { <nl> final int type = token . getType ( ) ; <nl> - if ( type = = TokenTypes . INTERFACE _ DEF <nl> + if ( type = = TokenTypes . ENUM _ DEF ) { <nl> + retVal = true ; <nl> + } <nl> + else if ( type = = TokenTypes . INTERFACE _ DEF <nl> | | type = = TokenTypes . ANNOTATION _ DEF <nl> - | | type = = TokenTypes . CLASS _ DEF ) { <nl> + | | type = = TokenTypes . CLASS _ DEF <nl> + | | type = = TokenTypes . LITERAL _ NEW ) { <nl> break ; / / in an interface , annotation or class <nl> } <nl> - else if ( type = = TokenTypes . LITERAL _ NEW ) { <nl> - break ; / / inner implementation , enums can ' t be inner classes <nl> - } <nl> - else if ( type = = TokenTypes . ENUM _ DEF ) { <nl> - retVal = true ; <nl> - break ; <nl> - } <nl> } <nl> <nl> return retVal ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> index 63a3a52 . . 044c57d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> @ @ - 671 , 10 + 671 , 7 @ @ public class CustomImportOrderCheck extends Check { <nl> int result = 0 ; <nl> final String [ ] import1Tokens = import1 . split ( " \ \ . " ) ; <nl> final String [ ] import2Tokens = import2 . split ( " \ \ . " ) ; <nl> - for ( int i = 0 ; i < import1Tokens . length ; i + + ) { <nl> - if ( i = = import2Tokens . length ) { <nl> - break ; <nl> - } <nl> + for ( int i = 0 ; i < import1Tokens . length & & i ! = import2Tokens . length ; i + + ) { <nl> final String import1Token = import1Tokens [ i ] ; <nl> final String import2Token = import2Tokens [ i ] ; <nl> result = import1Token . compareTo ( import2Token ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ScopeUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ScopeUtilsTest . java <nl> index cb1d7b3 . . db3fa74 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ScopeUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ScopeUtilsTest . java <nl> @ @ - 52 , 6 + 52 , 20 @ @ public class ScopeUtilsTest { <nl> } <nl> <nl> @ Test <nl> + public void testInEnumBlockWithEnum ( ) throws ReflectiveOperationException { <nl> + DetailAST ast0 = new DetailAST ( ) ; <nl> + ast0 . setType ( TokenTypes . OBJBLOCK ) ; <nl> + DetailAST ast1 = new DetailAST ( ) ; <nl> + ast1 . setType ( TokenTypes . ENUM _ DEF ) ; <nl> + ast0 . addChild ( ast1 ) ; <nl> + DetailAST ast2 = new DetailAST ( ) ; <nl> + ast2 . setType ( TokenTypes . MODIFIERS ) ; <nl> + ast1 . addChild ( ast2 ) ; <nl> + <nl> + Assert . assertTrue ( ScopeUtils . inEnumBlock ( ast2 ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testInEnumBlockInInterface ( ) throws ReflectiveOperationException { <nl> DetailAST ast = new DetailAST ( ) ; <nl> ast . setType ( TokenTypes . INTERFACE _ DEF ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckInput3 . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckInput3 . java <nl> new file mode 100644 <nl> index 0000000 . . 4b1d6aa <nl> - - - / dev / null <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckInput3 . java <nl> @ @ - 0 , 0 + 1 , 38 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . sizes ; <nl> + <nl> + public class MethodCountCheckInput3 { <nl> + <nl> + / * * <nl> + * Dummy inner class to check that the inner - classes methods are not counted for the outer class . <nl> + * / <nl> + / * * <nl> + * Dummy method doing nothing <nl> + * / <nl> + void doNothing50 ( ) { <nl> + } <nl> + <nl> + / * * <nl> + * Dummy method doing nothing <nl> + * / <nl> + void doNothing51 ( ) { <nl> + } <nl> + <nl> + / * * <nl> + * Dummy method doing nothing <nl> + * / <nl> + void doNothing52 ( ) { <nl> + } <nl> + <nl> + / * * <nl> + * Dummy method doing nothing <nl> + * / <nl> + void doNothing53 ( ) { <nl> + } <nl> + <nl> + / * * <nl> + * Dummy method doing nothing <nl> + * / <nl> + void doNothing54 ( ) { <nl> + } <nl> + <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java <nl> index 46a08fd . . 04ef74f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java <nl> @ @ - 102 , 4 + 102 , 18 @ @ public class MethodCountCheckTest extends BaseCheckTestSupport { <nl> verify ( checkConfig , <nl> getSrcPath ( " checks / sizes / MethodCountCheckInput2 . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testWithPackageModifier ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( MethodCountCheck . class ) ; <nl> + checkConfig . addAttribute ( " maxPrivate " , " 0 " ) ; <nl> + checkConfig . addAttribute ( " maxTotal " , " 2 " ) ; <nl> + <nl> + final String [ ] expected = { <nl> + " 3 : " + getCheckMessage ( MSG _ MANY _ METHODS , 5 , 2 ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , <nl> + getSrcPath ( " checks / sizes / MethodCountCheckInput3 . java " ) , expected ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / xdocs / eclipse . xml b / src / xdocs / eclipse . xml 
 index 2a22b49 . . 4249746 100644 
 - - - a / src / xdocs / eclipse . xml 
 + + + b / src / xdocs / eclipse . xml 
 @ @ - 72 , 8 + 72 , 21 @ @ 
 < / p > 
 < / section > 
 
 - < section name = " Suppress Eclipse warnings on resource files " > 
 + < section name = " Suppress Eclipse warnings " > 
 < p > 
 + 1 ) Use Eclipse compiler preferences from repo : < br / > < br / > 
 + copy 
 + < a href = 
 + " https : / / github . com / checkstyle / checkstyle / blob / master / config / org . eclipse . jdt . core . prefs " > 
 + config / org . eclipse . jdt . core . prefs < / a > file 
 + to 
 + < code > . settings < / code > folder of cloned repository on your PC . Restart Eclipse . 
 + Such folder does not exists in repository after clone and it is created by Eclipse 
 + during project import . If folder not present please import checkstyle to Eclipse first . 
 + < / p > 
 + 
 + < p > 
 + 2 ) Ignore optional compile problems on resource files : < br / > < br / > 
 Right click on Checkstyle project > Build Path > Configure Build Path . . . < br / > < br / > 
 < img alt = " screenshot " src = " images / gui _ screenshot _ eclipse _ build _ path . png " / > 
 < / p > 
 @ @ - 89 , 11 + 102 , 6 @ @ 
 < p > 
 < img alt = " screenshot " src = " images / gui _ screenshot _ eclipse _ ignore _ warnings . png " / > 
 < / p > 
 - < br / > 
 - < p > 
 - Next , you need to put < i > . ci / org . eclipse . jdt . core . prefs < / i > file to the 
 - < i > . settings / org . eclipse . jdt . core . prefs < / i > to setup Eclipse compiler . 
 - < / p > 
 < / section > 
 
 < section name = " Organize Imports " >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ScopeUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / ScopeUtils . java 
 index 47061b9 . . 89133fb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ScopeUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ScopeUtils . java 
 @ @ - 43 , 20 + 43 , 17 @ @ public final class ScopeUtils { 
 * / 
 public static Scope getScopeFromMods ( DetailAST aMods ) { 
 Scope retVal = Scope . PACKAGE ; / / default scope 
 - for ( AST token = aMods . getFirstChild ( ) ; 
 - token ! = null ; 
 - token = token . getNextSibling ( ) ) { 
 + for ( AST token = aMods . getFirstChild ( ) ; token ! = null 
 + & & retVal = = Scope . PACKAGE ; 
 + token = token . getNextSibling ( ) ) { 
 if ( " public " . equals ( token . getText ( ) ) ) { 
 retVal = Scope . PUBLIC ; 
 - break ; 
 } 
 else if ( " protected " . equals ( token . getText ( ) ) ) { 
 retVal = Scope . PROTECTED ; 
 - break ; 
 } 
 else if ( " private " . equals ( token . getText ( ) ) ) { 
 retVal = Scope . PRIVATE ; 
 - break ; 
 } 
 } 
 return retVal ; 
 @ @ - 105 , 21 + 102 , 20 @ @ public final class ScopeUtils { 
 
 / / Loop up looking for a containing interface block 
 for ( DetailAST token = aAST . getParent ( ) ; 
 - token ! = null ; 
 + token ! = null & & ! retVal ; 
 token = token . getParent ( ) ) { 
 + 
 final int type = token . getType ( ) ; 
 - if ( type = = TokenTypes . CLASS _ DEF 
 + 
 + if ( type = = TokenTypes . INTERFACE _ DEF ) { 
 + retVal = true ; 
 + } 
 + else if ( type = = TokenTypes . CLASS _ DEF 
 | | type = = TokenTypes . ENUM _ DEF 
 - | | type = = TokenTypes . ANNOTATION _ DEF ) { 
 + | | type = = TokenTypes . ANNOTATION _ DEF 
 + | | type = = TokenTypes . LITERAL _ NEW ) { 
 break ; / / in a class , enum or annotation 
 } 
 - else if ( type = = TokenTypes . LITERAL _ NEW ) { 
 - break ; / / inner implementation 
 - } 
 - else if ( type = = TokenTypes . INTERFACE _ DEF ) { 
 - retVal = true ; 
 - break ; 
 - } 
 } 
 
 return retVal ; 
 @ @ - 137 , 21 + 133 , 19 @ @ public final class ScopeUtils { 
 
 / / Loop up looking for a containing interface block 
 for ( DetailAST token = aAST . getParent ( ) ; 
 - token ! = null ; 
 + token ! = null & & ! retVal ; 
 token = token . getParent ( ) ) { 
 final int type = token . getType ( ) ; 
 - if ( type = = TokenTypes . CLASS _ DEF 
 + if ( type = = TokenTypes . ANNOTATION _ DEF ) { 
 + retVal = true ; 
 + } 
 + else if ( type = = TokenTypes . CLASS _ DEF 
 | | type = = TokenTypes . ENUM _ DEF 
 - | | type = = TokenTypes . INTERFACE _ DEF ) { 
 + | | type = = TokenTypes . INTERFACE _ DEF 
 + | | type = = TokenTypes . LITERAL _ NEW ) { 
 break ; / / in a class , enum or interface 
 } 
 - else if ( type = = TokenTypes . LITERAL _ NEW ) { 
 - break ; / / inner implementation 
 - } 
 - else if ( type = = TokenTypes . ANNOTATION _ DEF ) { 
 - retVal = true ; 
 - break ; 
 - } 
 + 
 } 
 
 return retVal ; 
 @ @ - 181 , 21 + 175 , 18 @ @ public final class ScopeUtils { 
 
 / / Loop up looking for a containing interface block 
 for ( DetailAST token = aAST . getParent ( ) ; 
 - token ! = null ; 
 + token ! = null & & ! retVal ; 
 token = token . getParent ( ) ) { 
 final int type = token . getType ( ) ; 
 - if ( type = = TokenTypes . INTERFACE _ DEF 
 + if ( type = = TokenTypes . ENUM _ DEF ) { 
 + retVal = true ; 
 + } 
 + else if ( type = = TokenTypes . INTERFACE _ DEF 
 | | type = = TokenTypes . ANNOTATION _ DEF 
 - | | type = = TokenTypes . CLASS _ DEF ) { 
 + | | type = = TokenTypes . CLASS _ DEF 
 + | | type = = TokenTypes . LITERAL _ NEW ) { 
 break ; / / in an interface , annotation or class 
 } 
 - else if ( type = = TokenTypes . LITERAL _ NEW ) { 
 - break ; / / inner implementation , enums can ' t be inner classes 
 - } 
 - else if ( type = = TokenTypes . ENUM _ DEF ) { 
 - retVal = true ; 
 - break ; 
 - } 
 } 
 
 return retVal ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 index 63a3a52 . . 044c57d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 @ @ - 671 , 10 + 671 , 7 @ @ public class CustomImportOrderCheck extends Check { 
 int result = 0 ; 
 final String [ ] import1Tokens = import1 . split ( " \ \ . " ) ; 
 final String [ ] import2Tokens = import2 . split ( " \ \ . " ) ; 
 - for ( int i = 0 ; i < import1Tokens . length ; i + + ) { 
 - if ( i = = import2Tokens . length ) { 
 - break ; 
 - } 
 + for ( int i = 0 ; i < import1Tokens . length & & i ! = import2Tokens . length ; i + + ) { 
 final String import1Token = import1Tokens [ i ] ; 
 final String import2Token = import2Tokens [ i ] ; 
 result = import1Token . compareTo ( import2Token ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ScopeUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ScopeUtilsTest . java 
 index cb1d7b3 . . db3fa74 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ScopeUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ScopeUtilsTest . java 
 @ @ - 52 , 6 + 52 , 20 @ @ public class ScopeUtilsTest { 
 } 
 
 @ Test 
 + public void testInEnumBlockWithEnum ( ) throws ReflectiveOperationException { 
 + DetailAST ast0 = new DetailAST ( ) ; 
 + ast0 . setType ( TokenTypes . OBJBLOCK ) ; 
 + DetailAST ast1 = new DetailAST ( ) ; 
 + ast1 . setType ( TokenTypes . ENUM _ DEF ) ; 
 + ast0 . addChild ( ast1 ) ; 
 + DetailAST ast2 = new DetailAST ( ) ; 
 + ast2 . setType ( TokenTypes . MODIFIERS ) ; 
 + ast1 . addChild ( ast2 ) ; 
 + 
 + Assert . assertTrue ( ScopeUtils . inEnumBlock ( ast2 ) ) ; 
 + } 
 + 
 + @ Test 
 public void testInEnumBlockInInterface ( ) throws ReflectiveOperationException { 
 DetailAST ast = new DetailAST ( ) ; 
 ast . setType ( TokenTypes . INTERFACE _ DEF ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckInput3 . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckInput3 . java 
 new file mode 100644 
 index 0000000 . . 4b1d6aa 
 - - - / dev / null 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckInput3 . java 
 @ @ - 0 , 0 + 1 , 38 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . sizes ; 
 + 
 + public class MethodCountCheckInput3 { 
 + 
 + / * * 
 + * Dummy inner class to check that the inner - classes methods are not counted for the outer class . 
 + * / 
 + / * * 
 + * Dummy method doing nothing 
 + * / 
 + void doNothing50 ( ) { 
 + } 
 + 
 + / * * 
 + * Dummy method doing nothing 
 + * / 
 + void doNothing51 ( ) { 
 + } 
 + 
 + / * * 
 + * Dummy method doing nothing 
 + * / 
 + void doNothing52 ( ) { 
 + } 
 + 
 + / * * 
 + * Dummy method doing nothing 
 + * / 
 + void doNothing53 ( ) { 
 + } 
 + 
 + / * * 
 + * Dummy method doing nothing 
 + * / 
 + void doNothing54 ( ) { 
 + } 
 + 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java 
 index 46a08fd . . 04ef74f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / MethodCountCheckTest . java 
 @ @ - 102 , 4 + 102 , 18 @ @ public class MethodCountCheckTest extends BaseCheckTestSupport { 
 verify ( checkConfig , 
 getSrcPath ( " checks / sizes / MethodCountCheckInput2 . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testWithPackageModifier ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( MethodCountCheck . class ) ; 
 + checkConfig . addAttribute ( " maxPrivate " , " 0 " ) ; 
 + checkConfig . addAttribute ( " maxTotal " , " 2 " ) ; 
 + 
 + final String [ ] expected = { 
 + " 3 : " + getCheckMessage ( MSG _ MANY _ METHODS , 5 , 2 ) , 
 + } ; 
 + 
 + verify ( checkConfig , 
 + getSrcPath ( " checks / sizes / MethodCountCheckInput3 . java " ) , expected ) ; 
 + } 
 }
