BLEU SCORE: 0.0260859600387516

TEST MSG: Issue # 3891 : reorganized filefilters package inputs
GENERATED MSG: minor : Added ' astprinter ' to resources - noncompilable for AstTreeStringPrinterTest . java

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filefilters / ExclusionBeforeExecutionFileFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filefilters / ExclusionBeforeExecutionFileFilterTest . java <nl> index 1e32f4f . . 09fb6ec 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filefilters / ExclusionBeforeExecutionFileFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filefilters / ExclusionBeforeExecutionFileFilterTest . java <nl> @ @ - 34 , 7 + 34 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> public class ExclusionBeforeExecutionFileFilterTest extends AbstractModuleTestSupport { <nl> @ Override <nl> protected String getPackageLocation ( ) { <nl> - return " com / puppycrawl / tools / checkstyle / filefilters " ; <nl> + return " com / puppycrawl / tools / checkstyle / filefilters / exclusionbeforeexecutionfilefilter " ; <nl> } <nl> <nl> @ Test <nl> @ @ - 71 , 7 + 71 , 8 @ @ public class ExclusionBeforeExecutionFileFilterTest extends AbstractModuleTestSu <nl> filterConfig . addAttribute ( " fileNamePattern " , " IncorrectClass \ \ . java " ) ; <nl> <nl> final String [ ] violations = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> - verify ( createChecker ( filterConfig ) , getNonCompilablePath ( " InputIncorrectClass . java " ) , <nl> + verify ( createChecker ( filterConfig ) , <nl> + getNonCompilablePath ( " InputExclusionBeforeExecutionFileFilterIncorrectClass . java " ) , <nl> violations ) ; <nl> } <nl> <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / InputIncorrectClass . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / InputIncorrectClass . java <nl> deleted file mode 100644 <nl> index 5adc947 . . 0000000 <nl> - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / InputIncorrectClass . java <nl> + + + / dev / null <nl> @ @ - 1 + 0 , 0 @ @ <nl> - ! @ # $ ^ $ ^ & % 5 <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / exclusionbeforeexecutionfilefilter / InputExclusionBeforeExecutionFileFilterIncorrectClass . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / exclusionbeforeexecutionfilefilter / InputExclusionBeforeExecutionFileFilterIncorrectClass . java <nl> new file mode 100644 <nl> index 0000000 . . 5adc947 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / exclusionbeforeexecutionfilefilter / InputExclusionBeforeExecutionFileFilterIncorrectClass . java <nl> @ @ - 0 , 0 + 1 @ @ <nl> + ! @ # $ ^ $ ^ & % 5
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java <nl> index 5710f79 . . f8c140e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java <nl> @ @ - 56 , 12 + 56 , 18 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> public class SuppressWarningsHolderTest extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> - return super . getPath ( " checks " + File . separator + filename ) ; <nl> + return super . getPath ( " checks " + File . separator <nl> + + " misc " + File . separator <nl> + + " suppresswarnings " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Override <nl> protected String getNonCompilablePath ( String filename ) throws IOException { <nl> - return super . getNonCompilablePath ( " checks " + File . separator + filename ) ; <nl> + return super . getNonCompilablePath ( " checks " + File . separator <nl> + + " misc " + File . separator <nl> + + " suppresswarnings " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder . java <nl> deleted file mode 100644 <nl> index 5bbbc49 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder . java <nl> + + + / dev / null <nl> @ @ - 1 , 36 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - public class InputSuppressWarningsHolder { <nl> - static final String UNUSED = " unused " ; <nl> - <nl> - @ SuppressWarnings ( UNUSED ) <nl> - int a ; <nl> - @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) <nl> - int b ; <nl> - @ SuppressWarnings ( com . puppycrawl . tools . checkstyle . checks . InputSuppressWarningsHolder . UNUSED ) <nl> - int c ; <nl> - @ SuppressWarnings ( value = UNUSED ) <nl> - int d ; <nl> - @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) <nl> - int e ; <nl> - @ SuppressWarnings ( value = com . puppycrawl . tools . checkstyle . checks . InputSuppressWarningsHolder . UNUSED ) <nl> - int f ; <nl> - @ SuppressWarnings ( ( 1 ! = 1 ) ? " " : " unused " ) <nl> - int g ; <nl> - @ SuppressWarnings ( " un " + " used " ) <nl> - int h ; <nl> - @ SuppressWarnings ( ( String ) " unused " ) <nl> - int i ; <nl> - @ SuppressWarnings ( { } ) <nl> - int j ; <nl> - @ SuppressWarnings ( { UNUSED } ) <nl> - int k ; <nl> - @ SuppressWarnings ( { " unused " , true ? " unused " : " " } ) <nl> - int l ; <nl> - } <nl> - <nl> - class CustomSuppressWarnings { <nl> - @ SuppressWarnings <nl> - private @ interface SuppressWarnings { <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder2 . java <nl> deleted file mode 100644 <nl> index 77b0257 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 13 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - public class InputSuppressWarningsHolder2 <nl> - { <nl> - public static class MyResource implements AutoCloseable { <nl> - @ Override <nl> - public void close ( ) throws Exception { } <nl> - } <nl> - <nl> - public static void main ( String [ ] args ) throws Exception { <nl> - try ( @ SuppressWarnings ( " all " ) final MyResource resource = new MyResource ( ) ) { } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder3 . java <nl> deleted file mode 100644 <nl> index 6e30fd2 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder3 . java <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - public class InputSuppressWarningsHolder3 { <nl> - <nl> - @ SuppressWarnings ( ) <nl> - int a ; <nl> - private @ interface SuppressWarnings { <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder4 . java <nl> deleted file mode 100644 <nl> index 35ab2a2 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder4 . java <nl> + + + / dev / null <nl> @ @ - 1 , 10 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - public class InputSuppressWarningsHolder4 { <nl> - <nl> - @ com . puppycrawl . tools . checkstyle . checks . CustomAnnotation ( ) <nl> - int a ; <nl> - <nl> - } <nl> - @ interface CustomAnnotation { <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder5 . java <nl> deleted file mode 100644 <nl> index fbefdd4 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder5 . java <nl> + + + / dev / null <nl> @ @ - 1 , 50 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Target ; <nl> - import java . util . List ; <nl> - import java . util . Map ; <nl> - <nl> - <nl> - public class InputSuppressWarningsHolder5 { <nl> - <nl> - public static Object foo1 ( @ SuppressWarnings ( " unsused " ) Object str ) { <nl> - String myString = ( @ SuppressWarnings ( " unsused " ) String ) str ; <nl> - Object object = new @ SuppressWarnings ( " unsused " ) Object ( ) ; <nl> - try { <nl> - return null ; <nl> - <nl> - } catch ( @ SuppressWarnings ( " unsused " ) Exception ex ) { <nl> - return " " ; <nl> - } <nl> - } <nl> - <nl> - void foo2 ( ) throws @ SuppressWarnings ( " unsused " ) Exception { } <nl> - <nl> - public void foo3 ( ) { <nl> - Map . @ SuppressWarnings ( " unsused " ) Entry entry ; <nl> - MyObject myObject = new MyObject ( ) ; <nl> - myObject . < @ SuppressWarnings ( " unsused " ) String > myMethod ( ) ; <nl> - myObject . new @ SuppressWarnings ( " unsused " ) MyObject2 ( ) ; <nl> - } <nl> - <nl> - public static < T > void foo4 ( Object str ) { <nl> - List < @ SuppressWarnings ( " unsused " ) ? extends Comparable < T > > unchangeable ; <nl> - } <nl> - <nl> - abstract class UnmodifiableList < T > <nl> - implements @ SuppressWarnings ( " unsused " ) List < @ SuppressWarnings ( " unsused " ) T > { <nl> - } <nl> - <nl> - class MyObject { <nl> - <nl> - public void myMethod ( ) { } ; <nl> - <nl> - class MyObject2 { } <nl> - } <nl> - <nl> - @ Target ( ElementType . TYPE _ USE ) <nl> - @ interface SuppressWarnings { <nl> - String value ( ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder . java <nl> new file mode 100644 <nl> index 0000000 . . 8e34d54 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder . java <nl> @ @ - 0 , 0 + 1 , 36 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; <nl> + <nl> + public class InputSuppressWarningsHolder { <nl> + static final String UNUSED = " unused " ; <nl> + <nl> + @ SuppressWarnings ( UNUSED ) <nl> + int a ; <nl> + @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) <nl> + int b ; <nl> + @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) <nl> + int c ; <nl> + @ SuppressWarnings ( value = UNUSED ) <nl> + int d ; <nl> + @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) <nl> + int e ; <nl> + @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) <nl> + int f ; <nl> + @ SuppressWarnings ( ( 1 ! = 1 ) ? " " : " unused " ) <nl> + int g ; <nl> + @ SuppressWarnings ( " un " + " used " ) <nl> + int h ; <nl> + @ SuppressWarnings ( ( String ) " unused " ) <nl> + int i ; <nl> + @ SuppressWarnings ( { } ) <nl> + int j ; <nl> + @ SuppressWarnings ( { UNUSED } ) <nl> + int k ; <nl> + @ SuppressWarnings ( { " unused " , true ? " unused " : " " } ) <nl> + int l ; <nl> + } <nl> + <nl> + class CustomSuppressWarnings { <nl> + @ SuppressWarnings <nl> + private @ interface SuppressWarnings { <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder2 . java <nl> new file mode 100644 <nl> index 0000000 . . 72897d0 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder2 . java <nl> @ @ - 0 , 0 + 1 , 13 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; <nl> + <nl> + public class InputSuppressWarningsHolder2 <nl> + { <nl> + public static class MyResource implements AutoCloseable { <nl> + @ Override <nl> + public void close ( ) throws Exception { } <nl> + } <nl> + <nl> + public static void main ( String [ ] args ) throws Exception { <nl> + try ( @ SuppressWarnings ( " all " ) final MyResource resource = new MyResource ( ) ) { } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder3 . java <nl> new file mode 100644 <nl> index 0000000 . . b011092 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder3 . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; <nl> + <nl> + public class InputSuppressWarningsHolder3 { <nl> + <nl> + @ SuppressWarnings ( ) <nl> + int a ; <nl> + private @ interface SuppressWarnings { <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder4 . java <nl> new file mode 100644 <nl> index 0000000 . . 0920433 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder4 . java <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; <nl> + <nl> + public class InputSuppressWarningsHolder4 { <nl> + <nl> + @ CustomAnnotation ( ) <nl> + int a ; <nl> + <nl> + } <nl> + @ interface CustomAnnotation { <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder5 . java <nl> new file mode 100644 <nl> index 0000000 . . 2f0ebcf <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder5 . java <nl> @ @ - 0 , 0 + 1 , 50 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + <nl> + <nl> + public class InputSuppressWarningsHolder5 { <nl> + <nl> + public static Object foo1 ( @ SuppressWarnings ( " unsused " ) Object str ) { <nl> + String myString = ( @ SuppressWarnings ( " unsused " ) String ) str ; <nl> + Object object = new @ SuppressWarnings ( " unsused " ) Object ( ) ; <nl> + try { <nl> + return null ; <nl> + <nl> + } catch ( @ SuppressWarnings ( " unsused " ) Exception ex ) { <nl> + return " " ; <nl> + } <nl> + } <nl> + <nl> + void foo2 ( ) throws @ SuppressWarnings ( " unsused " ) Exception { } <nl> + <nl> + public void foo3 ( ) { <nl> + Map . @ SuppressWarnings ( " unsused " ) Entry entry ; <nl> + MyObject myObject = new MyObject ( ) ; <nl> + myObject . < @ SuppressWarnings ( " unsused " ) String > myMethod ( ) ; <nl> + myObject . new @ SuppressWarnings ( " unsused " ) MyObject2 ( ) ; <nl> + } <nl> + <nl> + public static < T > void foo4 ( Object str ) { <nl> + List < @ SuppressWarnings ( " unsused " ) ? extends Comparable < T > > unchangeable ; <nl> + } <nl> + <nl> + abstract class UnmodifiableList < T > <nl> + implements @ SuppressWarnings ( " unsused " ) List < @ SuppressWarnings ( " unsused " ) T > { <nl> + } <nl> + <nl> + class MyObject { <nl> + <nl> + public void myMethod ( ) { } ; <nl> + <nl> + class MyObject2 { } <nl> + } <nl> + <nl> + @ Target ( ElementType . TYPE _ USE ) <nl> + @ interface SuppressWarnings { <nl> + String value ( ) ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filefilters / ExclusionBeforeExecutionFileFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filefilters / ExclusionBeforeExecutionFileFilterTest . java 
 index 1e32f4f . . 09fb6ec 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filefilters / ExclusionBeforeExecutionFileFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filefilters / ExclusionBeforeExecutionFileFilterTest . java 
 @ @ - 34 , 7 + 34 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 public class ExclusionBeforeExecutionFileFilterTest extends AbstractModuleTestSupport { 
 @ Override 
 protected String getPackageLocation ( ) { 
 - return " com / puppycrawl / tools / checkstyle / filefilters " ; 
 + return " com / puppycrawl / tools / checkstyle / filefilters / exclusionbeforeexecutionfilefilter " ; 
 } 
 
 @ Test 
 @ @ - 71 , 7 + 71 , 8 @ @ public class ExclusionBeforeExecutionFileFilterTest extends AbstractModuleTestSu 
 filterConfig . addAttribute ( " fileNamePattern " , " IncorrectClass \ \ . java " ) ; 
 
 final String [ ] violations = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 - verify ( createChecker ( filterConfig ) , getNonCompilablePath ( " InputIncorrectClass . java " ) , 
 + verify ( createChecker ( filterConfig ) , 
 + getNonCompilablePath ( " InputExclusionBeforeExecutionFileFilterIncorrectClass . java " ) , 
 violations ) ; 
 } 
 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / InputIncorrectClass . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / InputIncorrectClass . java 
 deleted file mode 100644 
 index 5adc947 . . 0000000 
 - - - a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / InputIncorrectClass . java 
 + + + / dev / null 
 @ @ - 1 + 0 , 0 @ @ 
 - ! @ # $ ^ $ ^ & % 5 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / exclusionbeforeexecutionfilefilter / InputExclusionBeforeExecutionFileFilterIncorrectClass . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / exclusionbeforeexecutionfilefilter / InputExclusionBeforeExecutionFileFilterIncorrectClass . java 
 new file mode 100644 
 index 0000000 . . 5adc947 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / filefilters / exclusionbeforeexecutionfilefilter / InputExclusionBeforeExecutionFileFilterIncorrectClass . java 
 @ @ - 0 , 0 + 1 @ @ 
 + ! @ # $ ^ $ ^ & % 5

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java 
 index 5710f79 . . f8c140e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java 
 @ @ - 56 , 12 + 56 , 18 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 public class SuppressWarningsHolderTest extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 - return super . getPath ( " checks " + File . separator + filename ) ; 
 + return super . getPath ( " checks " + File . separator 
 + + " misc " + File . separator 
 + + " suppresswarnings " + File . separator 
 + + filename ) ; 
 } 
 
 @ Override 
 protected String getNonCompilablePath ( String filename ) throws IOException { 
 - return super . getNonCompilablePath ( " checks " + File . separator + filename ) ; 
 + return super . getNonCompilablePath ( " checks " + File . separator 
 + + " misc " + File . separator 
 + + " suppresswarnings " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder . java 
 deleted file mode 100644 
 index 5bbbc49 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder . java 
 + + + / dev / null 
 @ @ - 1 , 36 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - public class InputSuppressWarningsHolder { 
 - static final String UNUSED = " unused " ; 
 - 
 - @ SuppressWarnings ( UNUSED ) 
 - int a ; 
 - @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) 
 - int b ; 
 - @ SuppressWarnings ( com . puppycrawl . tools . checkstyle . checks . InputSuppressWarningsHolder . UNUSED ) 
 - int c ; 
 - @ SuppressWarnings ( value = UNUSED ) 
 - int d ; 
 - @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) 
 - int e ; 
 - @ SuppressWarnings ( value = com . puppycrawl . tools . checkstyle . checks . InputSuppressWarningsHolder . UNUSED ) 
 - int f ; 
 - @ SuppressWarnings ( ( 1 ! = 1 ) ? " " : " unused " ) 
 - int g ; 
 - @ SuppressWarnings ( " un " + " used " ) 
 - int h ; 
 - @ SuppressWarnings ( ( String ) " unused " ) 
 - int i ; 
 - @ SuppressWarnings ( { } ) 
 - int j ; 
 - @ SuppressWarnings ( { UNUSED } ) 
 - int k ; 
 - @ SuppressWarnings ( { " unused " , true ? " unused " : " " } ) 
 - int l ; 
 - } 
 - 
 - class CustomSuppressWarnings { 
 - @ SuppressWarnings 
 - private @ interface SuppressWarnings { 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder2 . java 
 deleted file mode 100644 
 index 77b0257 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder2 . java 
 + + + / dev / null 
 @ @ - 1 , 13 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - public class InputSuppressWarningsHolder2 
 - { 
 - public static class MyResource implements AutoCloseable { 
 - @ Override 
 - public void close ( ) throws Exception { } 
 - } 
 - 
 - public static void main ( String [ ] args ) throws Exception { 
 - try ( @ SuppressWarnings ( " all " ) final MyResource resource = new MyResource ( ) ) { } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder3 . java 
 deleted file mode 100644 
 index 6e30fd2 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder3 . java 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - public class InputSuppressWarningsHolder3 { 
 - 
 - @ SuppressWarnings ( ) 
 - int a ; 
 - private @ interface SuppressWarnings { 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder4 . java 
 deleted file mode 100644 
 index 35ab2a2 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder4 . java 
 + + + / dev / null 
 @ @ - 1 , 10 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - public class InputSuppressWarningsHolder4 { 
 - 
 - @ com . puppycrawl . tools . checkstyle . checks . CustomAnnotation ( ) 
 - int a ; 
 - 
 - } 
 - @ interface CustomAnnotation { 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder5 . java 
 deleted file mode 100644 
 index fbefdd4 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputSuppressWarningsHolder5 . java 
 + + + / dev / null 
 @ @ - 1 , 50 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - import java . lang . annotation . Target ; 
 - import java . util . List ; 
 - import java . util . Map ; 
 - 
 - 
 - public class InputSuppressWarningsHolder5 { 
 - 
 - public static Object foo1 ( @ SuppressWarnings ( " unsused " ) Object str ) { 
 - String myString = ( @ SuppressWarnings ( " unsused " ) String ) str ; 
 - Object object = new @ SuppressWarnings ( " unsused " ) Object ( ) ; 
 - try { 
 - return null ; 
 - 
 - } catch ( @ SuppressWarnings ( " unsused " ) Exception ex ) { 
 - return " " ; 
 - } 
 - } 
 - 
 - void foo2 ( ) throws @ SuppressWarnings ( " unsused " ) Exception { } 
 - 
 - public void foo3 ( ) { 
 - Map . @ SuppressWarnings ( " unsused " ) Entry entry ; 
 - MyObject myObject = new MyObject ( ) ; 
 - myObject . < @ SuppressWarnings ( " unsused " ) String > myMethod ( ) ; 
 - myObject . new @ SuppressWarnings ( " unsused " ) MyObject2 ( ) ; 
 - } 
 - 
 - public static < T > void foo4 ( Object str ) { 
 - List < @ SuppressWarnings ( " unsused " ) ? extends Comparable < T > > unchangeable ; 
 - } 
 - 
 - abstract class UnmodifiableList < T > 
 - implements @ SuppressWarnings ( " unsused " ) List < @ SuppressWarnings ( " unsused " ) T > { 
 - } 
 - 
 - class MyObject { 
 - 
 - public void myMethod ( ) { } ; 
 - 
 - class MyObject2 { } 
 - } 
 - 
 - @ Target ( ElementType . TYPE _ USE ) 
 - @ interface SuppressWarnings { 
 - String value ( ) ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder . java 
 new file mode 100644 
 index 0000000 . . 8e34d54 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder . java 
 @ @ - 0 , 0 + 1 , 36 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; 
 + 
 + public class InputSuppressWarningsHolder { 
 + static final String UNUSED = " unused " ; 
 + 
 + @ SuppressWarnings ( UNUSED ) 
 + int a ; 
 + @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) 
 + int b ; 
 + @ SuppressWarnings ( InputSuppressWarningsHolder . UNUSED ) 
 + int c ; 
 + @ SuppressWarnings ( value = UNUSED ) 
 + int d ; 
 + @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) 
 + int e ; 
 + @ SuppressWarnings ( value = InputSuppressWarningsHolder . UNUSED ) 
 + int f ; 
 + @ SuppressWarnings ( ( 1 ! = 1 ) ? " " : " unused " ) 
 + int g ; 
 + @ SuppressWarnings ( " un " + " used " ) 
 + int h ; 
 + @ SuppressWarnings ( ( String ) " unused " ) 
 + int i ; 
 + @ SuppressWarnings ( { } ) 
 + int j ; 
 + @ SuppressWarnings ( { UNUSED } ) 
 + int k ; 
 + @ SuppressWarnings ( { " unused " , true ? " unused " : " " } ) 
 + int l ; 
 + } 
 + 
 + class CustomSuppressWarnings { 
 + @ SuppressWarnings 
 + private @ interface SuppressWarnings { 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder2 . java 
 new file mode 100644 
 index 0000000 . . 72897d0 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder2 . java 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; 
 + 
 + public class InputSuppressWarningsHolder2 
 + { 
 + public static class MyResource implements AutoCloseable { 
 + @ Override 
 + public void close ( ) throws Exception { } 
 + } 
 + 
 + public static void main ( String [ ] args ) throws Exception { 
 + try ( @ SuppressWarnings ( " all " ) final MyResource resource = new MyResource ( ) ) { } 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder3 . java 
 new file mode 100644 
 index 0000000 . . b011092 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder3 . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; 
 + 
 + public class InputSuppressWarningsHolder3 { 
 + 
 + @ SuppressWarnings ( ) 
 + int a ; 
 + private @ interface SuppressWarnings { 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder4 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder4 . java 
 new file mode 100644 
 index 0000000 . . 0920433 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder4 . java 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; 
 + 
 + public class InputSuppressWarningsHolder4 { 
 + 
 + @ CustomAnnotation ( ) 
 + int a ; 
 + 
 + } 
 + @ interface CustomAnnotation { 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder5 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder5 . java 
 new file mode 100644 
 index 0000000 . . 2f0ebcf 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / misc / suppresswarnings / InputSuppressWarningsHolder5 . java 
 @ @ - 0 , 0 + 1 , 50 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . misc . suppresswarnings ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Target ; 
 + import java . util . List ; 
 + import java . util . Map ; 
 + 
 + 
 + public class InputSuppressWarningsHolder5 { 
 + 
 + public static Object foo1 ( @ SuppressWarnings ( " unsused " ) Object str ) { 
 + String myString = ( @ SuppressWarnings ( " unsused " ) String ) str ; 
 + Object object = new @ SuppressWarnings ( " unsused " ) Object ( ) ; 
 + try { 
 + return null ; 
 + 
 + } catch ( @ SuppressWarnings ( " unsused " ) Exception ex ) { 
 + return " " ; 
 + } 
 + } 
 + 
 + void foo2 ( ) throws @ SuppressWarnings ( " unsused " ) Exception { } 
 + 
 + public void foo3 ( ) { 
 + Map . @ SuppressWarnings ( " unsused " ) Entry entry ; 
 + MyObject myObject = new MyObject ( ) ; 
 + myObject . < @ SuppressWarnings ( " unsused " ) String > myMethod ( ) ; 
 + myObject . new @ SuppressWarnings ( " unsused " ) MyObject2 ( ) ; 
 + } 
 + 
 + public static < T > void foo4 ( Object str ) { 
 + List < @ SuppressWarnings ( " unsused " ) ? extends Comparable < T > > unchangeable ; 
 + } 
 + 
 + abstract class UnmodifiableList < T > 
 + implements @ SuppressWarnings ( " unsused " ) List < @ SuppressWarnings ( " unsused " ) T > { 
 + } 
 + 
 + class MyObject { 
 + 
 + public void myMethod ( ) { } ; 
 + 
 + class MyObject2 { } 
 + } 
 + 
 + @ Target ( ElementType . TYPE _ USE ) 
 + @ interface SuppressWarnings { 
 + String value ( ) ; 
 + } 
 + }
