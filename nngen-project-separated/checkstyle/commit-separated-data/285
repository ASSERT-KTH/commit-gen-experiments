BLEU SCORE: 0.09287528999566796

TEST MSG: Issue # 5750 : aligned javadoc / xdoc for CatchParameterName
GENERATED MSG: Issue # 2549 : Remove parameters validation from LocalVariableName

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java <nl> index 556eeba . . 9871c01 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java <nl> @ @ - 25 , 8 + 25 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> / * * <nl> * < p > <nl> * Checks that { @ code catch } parameter names conform to a format specified by the format property . <nl> - * The format is a { @ link java . util . regex . Pattern regular expression } and defaults to <nl> - * < strong > ^ ( e | t | ex | [ a - z ] [ a - z ] [ a - zA - Z ] + ) $ < / strong > . <nl> * < / p > <nl> * < p > <nl> * Default pattern has the following characteristic : <nl> @ @ - 42 , 6 + 40 , 12 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * < li > prohibits two letter abbreviations like { @ code ie } or { @ code ee } < / li > <nl> * < li > prohibits any other characters than letters < / li > <nl> * < / ul > <nl> + * < ul > <nl> + * < li > <nl> + * Property { @ code format } - Specifies valid identifiers . Default value is <nl> + * { @ code " ^ ( e | t | ex | [ a - z ] [ a - z ] [ a - zA - Z ] + ) $ " } . <nl> + * < / li > <nl> + * < / ul > <nl> * < p > <nl> * An example of how to configure the check is : <nl> * < / p > <nl> @ @ - 54 , 10 + 58 , 11 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * < / p > <nl> * < pre > <nl> * & lt ; module name = " CatchParameterName " & gt ; <nl> - * & lt ; property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / & gt ; <nl> + * & lt ; property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> * <nl> + * @ since 6 . 14 <nl> * / <nl> public class CatchParameterNameCheck extends AbstractNameCheck { <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> index a8b3a49 . . 79fa1f4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> @ @ - 105 , 6 + 105 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { <nl> / / suppression list <nl> | | ! " AbbreviationAsWordInName " . equals ( sectionName ) <nl> & & ! " AbstractClassName " . equals ( sectionName ) <nl> + & & ! " CatchParameterName " . equals ( sectionName ) <nl> ) { <nl> continue ; <nl> } <nl> diff - - git a / src / xdocs / checks . xml b / src / xdocs / checks . xml <nl> index 1175d10 . . a8a2838 100644 <nl> - - - a / src / xdocs / checks . xml <nl> + + + b / src / xdocs / checks . xml <nl> @ @ - 101 , 8 + 101 , 8 @ @ <nl> < / tr > <nl> < tr > <nl> < td > < a href = " config _ naming . html # CatchParameterName " > CatchParameterName < / a > < / td > <nl> - < td > Checks that catch parameter names conform to a format specified by the format <nl> - property . < / td > <nl> + < td > Checks that < code > catch < / code > parameter names conform to a format specified by the <nl> + format property . < / td > <nl> < / tr > <nl> < tr > <nl> < td > < a href = " config _ metrics . html # ClassDataAbstractionCoupling " > ClassDataAbstractionCoupling < / a > < / td > <nl> diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index 9fc1b24 . . 230c166 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 295 , 10 + 295 , 13 @ @ <nl> < / section > <nl> <nl> < section name = " CatchParameterName " > <nl> + < p > Since Checkstyle 6 . 14 < / p > <nl> < subsection name = " Description " > <nl> - < p > Since Checkstyle 6 . 14 < / p > <nl> < p > <nl> - Checks that catch parameter names conform to a format specified by the format property . <nl> + Checks that < code > catch < / code > parameter names conform to a format specified by the <nl> + format property . <nl> + < / p > <nl> + < p > <nl> Default pattern has the following characteristic : <nl> < / p > <nl> < ul > <nl> @ @ - 339 , 14 + 342 , 14 @ @ <nl> <nl> < subsection name = " Examples " > <nl> < p > <nl> - To configure the check : <nl> + An example of how to configure the check is : <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; CatchParameterName & quot ; / & gt ; <nl> < / source > <nl> < p > <nl> An example of how to configure the check for names that begin with <nl> - a lower case letter , followed by letters and digits is : <nl> + a lower case letter , followed by any letters or digits is : <nl> < / p > <nl> < source > <nl> & lt ; module name = " CatchParameterName " & gt ;
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 8cb6f2f . . d8db480 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1719 , 6 + 1719 , 7 @ @ <nl> < exclude > com / puppycrawl / tools / checkstyle / checks / coding / AbstractIllegalCheck . class < / exclude > <nl> < exclude > com / puppycrawl / tools / checkstyle / checks / coding / AbstractIllegalMethodCheck . class < / exclude > <nl> < exclude > com / puppycrawl / tools / checkstyle / checks / coding / AbstractNestedDepthCheck . class < / exclude > <nl> + < exclude > com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . class < / exclude > <nl> < / excludes > <nl> < / instrumentation > <nl> < / configuration > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . java <nl> index 6401de9 . . e0dbd7d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . java <nl> @ @ - 29 , 9 + 29 , 12 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * < / p > <nl> * <nl> * < p > This class extends { @ link AbstractNameCheck } < / p > <nl> - * <nl> + * @ deprecated Checkstyle will not support abstract checks anymore . Use <nl> + * { @ link AbstractNameCheck } instead . <nl> * @ author Travis Schneeberger <nl> + * @ noinspection AbstractClassNeverImplemented <nl> * / <nl> + @ Deprecated <nl> public abstract class AbstractTypeParameterNameCheck <nl> extends AbstractNameCheck { <nl>

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java 
 index 556eeba . . 9871c01 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / CatchParameterNameCheck . java 
 @ @ - 25 , 8 + 25 , 6 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 / * * 
 * < p > 
 * Checks that { @ code catch } parameter names conform to a format specified by the format property . 
 - * The format is a { @ link java . util . regex . Pattern regular expression } and defaults to 
 - * < strong > ^ ( e | t | ex | [ a - z ] [ a - z ] [ a - zA - Z ] + ) $ < / strong > . 
 * < / p > 
 * < p > 
 * Default pattern has the following characteristic : 
 @ @ - 42 , 6 + 40 , 12 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * < li > prohibits two letter abbreviations like { @ code ie } or { @ code ee } < / li > 
 * < li > prohibits any other characters than letters < / li > 
 * < / ul > 
 + * < ul > 
 + * < li > 
 + * Property { @ code format } - Specifies valid identifiers . Default value is 
 + * { @ code " ^ ( e | t | ex | [ a - z ] [ a - z ] [ a - zA - Z ] + ) $ " } . 
 + * < / li > 
 + * < / ul > 
 * < p > 
 * An example of how to configure the check is : 
 * < / p > 
 @ @ - 54 , 10 + 58 , 11 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * < / p > 
 * < pre > 
 * & lt ; module name = " CatchParameterName " & gt ; 
 - * & lt ; property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / & gt ; 
 + * & lt ; property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 * 
 + * @ since 6 . 14 
 * / 
 public class CatchParameterNameCheck extends AbstractNameCheck { 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 index a8b3a49 . . 79fa1f4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 @ @ - 105 , 6 + 105 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { 
 / / suppression list 
 | | ! " AbbreviationAsWordInName " . equals ( sectionName ) 
 & & ! " AbstractClassName " . equals ( sectionName ) 
 + & & ! " CatchParameterName " . equals ( sectionName ) 
 ) { 
 continue ; 
 } 
 diff - - git a / src / xdocs / checks . xml b / src / xdocs / checks . xml 
 index 1175d10 . . a8a2838 100644 
 - - - a / src / xdocs / checks . xml 
 + + + b / src / xdocs / checks . xml 
 @ @ - 101 , 8 + 101 , 8 @ @ 
 < / tr > 
 < tr > 
 < td > < a href = " config _ naming . html # CatchParameterName " > CatchParameterName < / a > < / td > 
 - < td > Checks that catch parameter names conform to a format specified by the format 
 - property . < / td > 
 + < td > Checks that < code > catch < / code > parameter names conform to a format specified by the 
 + format property . < / td > 
 < / tr > 
 < tr > 
 < td > < a href = " config _ metrics . html # ClassDataAbstractionCoupling " > ClassDataAbstractionCoupling < / a > < / td > 
 diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index 9fc1b24 . . 230c166 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 295 , 10 + 295 , 13 @ @ 
 < / section > 
 
 < section name = " CatchParameterName " > 
 + < p > Since Checkstyle 6 . 14 < / p > 
 < subsection name = " Description " > 
 - < p > Since Checkstyle 6 . 14 < / p > 
 < p > 
 - Checks that catch parameter names conform to a format specified by the format property . 
 + Checks that < code > catch < / code > parameter names conform to a format specified by the 
 + format property . 
 + < / p > 
 + < p > 
 Default pattern has the following characteristic : 
 < / p > 
 < ul > 
 @ @ - 339 , 14 + 342 , 14 @ @ 
 
 < subsection name = " Examples " > 
 < p > 
 - To configure the check : 
 + An example of how to configure the check is : 
 < / p > 
 < source > 
 & lt ; module name = & quot ; CatchParameterName & quot ; / & gt ; 
 < / source > 
 < p > 
 An example of how to configure the check for names that begin with 
 - a lower case letter , followed by letters and digits is : 
 + a lower case letter , followed by any letters or digits is : 
 < / p > 
 < source > 
 & lt ; module name = " CatchParameterName " & gt ;

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 8cb6f2f . . d8db480 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1719 , 6 + 1719 , 7 @ @ 
 < exclude > com / puppycrawl / tools / checkstyle / checks / coding / AbstractIllegalCheck . class < / exclude > 
 < exclude > com / puppycrawl / tools / checkstyle / checks / coding / AbstractIllegalMethodCheck . class < / exclude > 
 < exclude > com / puppycrawl / tools / checkstyle / checks / coding / AbstractNestedDepthCheck . class < / exclude > 
 + < exclude > com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . class < / exclude > 
 < / excludes > 
 < / instrumentation > 
 < / configuration > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . java 
 index 6401de9 . . e0dbd7d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractTypeParameterNameCheck . java 
 @ @ - 29 , 9 + 29 , 12 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * < / p > 
 * 
 * < p > This class extends { @ link AbstractNameCheck } < / p > 
 - * 
 + * @ deprecated Checkstyle will not support abstract checks anymore . Use 
 + * { @ link AbstractNameCheck } instead . 
 * @ author Travis Schneeberger 
 + * @ noinspection AbstractClassNeverImplemented 
 * / 
 + @ Deprecated 
 public abstract class AbstractTypeParameterNameCheck 
 extends AbstractNameCheck { 

