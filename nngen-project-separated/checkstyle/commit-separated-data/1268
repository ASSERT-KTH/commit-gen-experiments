BLEU SCORE: 0.02286956778061902

TEST MSG: Issue # 2729 : arrays brakets after generics in method references left part are supported now .
GENERATED MSG: Issue10 . Annotations finished

TEST DIFF (one line): diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / java . g b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / java . g <nl> index 7c76f19 . . 8e6e9f0 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / java . g <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / java . g <nl> @ @ - 493 , 7 + 493 , 7 @ @ annotationMemberValuePair ! <nl> <nl> annotationMemberValueInitializer <nl> : <nl> - annotationExpression | annotation | annotationMemberArrayInitializer <nl> + ( annotationExpression ) = > annotationExpression | annotation | annotationMemberArrayInitializer <nl> ; <nl> <nl> / / This is an initializer used to set up an annotation member array . <nl> @ @ - 519 , 7 + 519 , 7 @ @ annotationMemberArrayInitializer <nl> / / The two things that can initialize an annotation array element are a conditional expression <nl> / / and an annotation ( nested annotation array initialisers are not valid ) <nl> annotationMemberArrayValueInitializer <nl> - : annotationExpression <nl> + : ( annotationExpression ) = > annotationExpression <nl> | annotation <nl> ; <nl> <nl> @ @ - 1039 , 7 + 1039 , 7 @ @ traditionalStatement <nl> / / An expression statement . This could be a method call , <nl> / / assignment statement , or any other expression evaluated for <nl> / / side - effects . <nl> - | { LA ( 2 ) ! = COLON } ? expression ( SEMI ) ? <nl> + | ( { LA ( 2 ) ! = COLON } ? expression ( SEMI ) ? ) = > { LA ( 2 ) ! = COLON } ? expression ( SEMI ) ? <nl> <nl> / / class definition <nl> | m : modifiers ! classDefinition [ # m ] <nl> @ @ - 1426 , 7 + 1426 , 7 @ @ postfixExpression <nl> ( options { warnWhenFollowAmbig = false ; } : / / qualified id ( id . id . id . id . . . ) - - build the name <nl> DOT ^ <nl> ( ( typeArguments [ false ] ) ? <nl> - ( IDENT ( ( typeArguments [ false ] DOUBLE _ COLON ) = > typeArguments [ false ] ) ? <nl> + ( IDENT <nl> | " this " <nl> | " super " / / ClassName . super . field <nl> ) <nl> @ @ - 1480 , 7 + 1480 , 8 @ @ postfixExpression <nl> <nl> / / the basic element of an expression <nl> primaryExpression <nl> - : IDENT ( ( typeArguments [ false ] DOUBLE _ COLON ) = > typeArguments [ false ] ) ? <nl> + : ( typeSpec [ false ] DOUBLE _ COLON ) = > typeSpec [ false ] <nl> + | IDENT <nl> | constant <nl> | " true " <nl> | " false " <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java <nl> index 5f27420 . . 75ed798 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java <nl> @ @ - 65 , 4 + 65 , 31 @ @ public class MethodReferencesTest extends BaseCheckTestSupport { <nl> verify ( checkConfig , getNonCompilablePath ( " InputMethodReferences3 . java " ) , expected ) ; <nl> <nl> } <nl> + <nl> + @ Test <nl> + public void testArrayAfterGeneric ( ) <nl> + throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( MemberNameCheck . class ) ; <nl> + final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , getNonCompilablePath ( " InputMethodReferences4 . java " ) , expected ) ; <nl> + <nl> + } <nl> + <nl> + @ Test <nl> + public void testFromHiernate ( ) <nl> + throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( MemberNameCheck . class ) ; <nl> + final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , getNonCompilablePath ( " InputMethodReferences5 . java " ) , expected ) ; <nl> + <nl> + } <nl> + <nl> + @ Test <nl> + public void testFromSpring ( ) <nl> + throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( MemberNameCheck . class ) ; <nl> + final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , getNonCompilablePath ( " InputMethodReferences6 . java " ) , expected ) ; <nl> + <nl> + } <nl> } <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences4 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences4 . java <nl> new file mode 100644 <nl> index 0000000 . . 41373b0 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences4 . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + / / Compilable with Java8 <nl> + / / Issue # 2729 <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + import java . util . Arrays ; <nl> + <nl> + public class InputMethodReferences4 { <nl> + public void doSomething ( final Object . . . arguments ) { <nl> + Arrays . stream ( arguments ) <nl> + . map ( Object : : getClass ) <nl> + . toArray ( Class < ? > [ ] : : new ) ; <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences5 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences5 . java <nl> new file mode 100644 <nl> index 0000000 . . 6a90000 <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences5 . java <nl> @ @ - 0 , 0 + 1 , 27 @ @ <nl> + / / Compilable with Java8 <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . Target ; <nl> + <nl> + import static java . lang . annotation . ElementType . FIELD ; <nl> + import static java . lang . annotation . ElementType . METHOD ; <nl> + import static java . lang . annotation . RetentionPolicy . RUNTIME ; <nl> + <nl> + @ Target ( { METHOD , FIELD } ) <nl> + @ Retention ( RUNTIME ) <nl> + public @ interface InputMethodReferences5 { <nl> + JoinFormula formula ( ) default @ JoinFormula ( value = " " , referencedColumnName = " " ) ; <nl> + <nl> + JoinColumn column ( ) default @ JoinColumn ( ) ; <nl> + } <nl> + <nl> + @ interface JoinFormula { <nl> + String value ( ) ; <nl> + <nl> + String referencedColumnName ( ) ; <nl> + } <nl> + <nl> + @ interface JoinColumn { <nl> + <nl> + } <nl> diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences6 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences6 . java <nl> new file mode 100644 <nl> index 0000000 . . f05edef <nl> - - - / dev / null <nl> + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences6 . java <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + / / Compilable with Java8 <nl> + package com . puppycrawl . tools . checkstyle . grammars . java8 ; <nl> + <nl> + public final class InputMethodReferences6 { <nl> + <nl> + public void testMethod ( ) { <nl> + <nl> + @ SuppressWarnings ( " unused " ) <nl> + class MyClass { <nl> + public int doSomething ( ) { <nl> + return 0 ; <nl> + } <nl> + } <nl> + <nl> + } <nl> + <nl> + }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> index 9655dd9 . . fbae952 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> @ @ - 173 , 6 + 173 , 11 @ @ public class VariableDeclarationUsageDistanceCheck extends Check <nl> public static final String MSG _ KEY = " variable . declaration . usage . distance " ; <nl> <nl> / * * <nl> + * Warning message key . <nl> + * / <nl> + public static final String MSG _ KEY _ EXT = " variable . declaration . usage . distance . extend " ; <nl> + <nl> + / * * <nl> * Default value of distance between declaration of variable and its first <nl> * usage . <nl> * / <nl> @ @ - 275 , 8 + 280 , 14 @ @ public class VariableDeclarationUsageDistanceCheck extends Check <nl> if ( dist > mAllowedDistance <nl> & & ! isInitializationSequence ( variableUsageAst , variable . getText ( ) ) ) <nl> { <nl> - log ( variable . getLineNo ( ) , <nl> - MSG _ KEY , variable . getText ( ) , dist , mAllowedDistance ) ; <nl> + if ( mIgnoreFinal ) { <nl> + log ( variable . getLineNo ( ) , <nl> + MSG _ KEY _ EXT , variable . getText ( ) , dist , mAllowedDistance ) ; <nl> + } <nl> + else { <nl> + log ( variable . getLineNo ( ) , <nl> + MSG _ KEY , variable . getText ( ) , dist , mAllowedDistance ) ; <nl> + } <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties <nl> index 1abd0aa . . b9047f1 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties <nl> @ @ - 64 , 4 + 64 , 5 @ @ unnecessary . paren . return = Unnecessary parentheses around return value . <nl> unnecessary . paren . string = Unnecessary parentheses around string { 0 } . <nl> package . dir . mismatch = Package declaration does not match directory ' ' { 0 } ' ' . <nl> variable . declaration . usage . distance = Distance between variable ' ' { 0 } ' ' declaration and its first usage is { 1 } , but allowed { 2 } . <nl> + variable . declaration . usage . distance . extend = Distance between variable ' ' { 0 } ' ' declaration and its first usage is { 1 } , but allowed { 2 } . Consider to make that variable as final if you still need to store its value in advance ( before method calls that might do side effect on original value ) . <nl> overload . methods . declaration = Overload methods should not be split . Previous overloaded method located at line ' ' { 0 } ' ' . <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java <nl> index b7b41f5 . . a9db2be 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . VariableDeclarationUsageDistanceCheck . MSG _ KEY ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . coding . VariableDeclarationUsageDistanceCheck . MSG _ KEY _ EXT ; <nl> + <nl> import static java . text . MessageFormat . format ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 171 , 34 + 173 , 34 @ @ public class VariableDeclarationUsageDistanceCheckTest extends <nl> checkConfig . addAttribute ( " validateBetweenScopes " , " true " ) ; <nl> checkConfig . addAttribute ( " ignoreFinal " , " true " ) ; <nl> final String [ ] expected = { <nl> - " 30 : " + getCheckMessage ( MSG _ KEY , " a " , 2 , 1 ) , <nl> - " 38 : " + getCheckMessage ( MSG _ KEY , " temp " , 2 , 1 ) , <nl> - " 44 : " + getCheckMessage ( MSG _ KEY , " temp " , 2 , 1 ) , <nl> - " 57 : " + getCheckMessage ( MSG _ KEY , " count " , 2 , 1 ) , <nl> - " 71 : " + getCheckMessage ( MSG _ KEY , " count " , 4 , 1 ) , <nl> - " 96 : " + getCheckMessage ( MSG _ KEY , " arg " , 2 , 1 ) , <nl> - " 144 : " + getCheckMessage ( MSG _ KEY , " m " , 3 , 1 ) , <nl> - " 145 : " + getCheckMessage ( MSG _ KEY , " n " , 2 , 1 ) , <nl> - " 184 : " + getCheckMessage ( MSG _ KEY , " result " , 2 , 1 ) , <nl> - " 219 : " + getCheckMessage ( MSG _ KEY , " t " , 5 , 1 ) , <nl> - " 222 : " + getCheckMessage ( MSG _ KEY , " c " , 3 , 1 ) , <nl> - " 223 : " + getCheckMessage ( MSG _ KEY , " d2 " , 3 , 1 ) , <nl> - " 260 : " + getCheckMessage ( MSG _ KEY , " selected " , 2 , 1 ) , <nl> - " 261 : " + getCheckMessage ( MSG _ KEY , " model " , 2 , 1 ) , <nl> - " 287 : " + getCheckMessage ( MSG _ KEY , " sw " , 2 , 1 ) , <nl> - " 300 : " + getCheckMessage ( MSG _ KEY , " wh " , 2 , 1 ) , <nl> - " 343 : " + getCheckMessage ( MSG _ KEY , " green " , 2 , 1 ) , <nl> - " 344 : " + getCheckMessage ( MSG _ KEY , " blue " , 3 , 1 ) , <nl> - " 454 : " + getCheckMessage ( MSG _ KEY , " aOpt " , 3 , 1 ) , <nl> - " 455 : " + getCheckMessage ( MSG _ KEY , " bOpt " , 2 , 1 ) , <nl> - " 471 : " + getCheckMessage ( MSG _ KEY , " l1 " , 3 , 1 ) , <nl> - " 471 : " + getCheckMessage ( MSG _ KEY , " l2 " , 2 , 1 ) , <nl> - " 479 : " + getCheckMessage ( MSG _ KEY , " myOption " , 7 , 1 ) , <nl> - " 491 : " + getCheckMessage ( MSG _ KEY , " myOption " , 6 , 1 ) , <nl> - " 504 : " + getCheckMessage ( MSG _ KEY , " count " , 4 , 1 ) , <nl> - " 505 : " + getCheckMessage ( MSG _ KEY , " files " , 2 , 1 ) , <nl> - " 540 : " + getCheckMessage ( MSG _ KEY , " id " , 2 , 1 ) , <nl> - " 542 : " + getCheckMessage ( MSG _ KEY , " parentId " , 3 , 1 ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY _ EXT , " a " , 2 , 1 ) , <nl> + " 38 : " + getCheckMessage ( MSG _ KEY _ EXT , " temp " , 2 , 1 ) , <nl> + " 44 : " + getCheckMessage ( MSG _ KEY _ EXT , " temp " , 2 , 1 ) , <nl> + " 57 : " + getCheckMessage ( MSG _ KEY _ EXT , " count " , 2 , 1 ) , <nl> + " 71 : " + getCheckMessage ( MSG _ KEY _ EXT , " count " , 4 , 1 ) , <nl> + " 96 : " + getCheckMessage ( MSG _ KEY _ EXT , " arg " , 2 , 1 ) , <nl> + " 144 : " + getCheckMessage ( MSG _ KEY _ EXT , " m " , 3 , 1 ) , <nl> + " 145 : " + getCheckMessage ( MSG _ KEY _ EXT , " n " , 2 , 1 ) , <nl> + " 184 : " + getCheckMessage ( MSG _ KEY _ EXT , " result " , 2 , 1 ) , <nl> + " 219 : " + getCheckMessage ( MSG _ KEY _ EXT , " t " , 5 , 1 ) , <nl> + " 222 : " + getCheckMessage ( MSG _ KEY _ EXT , " c " , 3 , 1 ) , <nl> + " 223 : " + getCheckMessage ( MSG _ KEY _ EXT , " d2 " , 3 , 1 ) , <nl> + " 260 : " + getCheckMessage ( MSG _ KEY _ EXT , " selected " , 2 , 1 ) , <nl> + " 261 : " + getCheckMessage ( MSG _ KEY _ EXT , " model " , 2 , 1 ) , <nl> + " 287 : " + getCheckMessage ( MSG _ KEY _ EXT , " sw " , 2 , 1 ) , <nl> + " 300 : " + getCheckMessage ( MSG _ KEY _ EXT , " wh " , 2 , 1 ) , <nl> + " 343 : " + getCheckMessage ( MSG _ KEY _ EXT , " green " , 2 , 1 ) , <nl> + " 344 : " + getCheckMessage ( MSG _ KEY _ EXT , " blue " , 3 , 1 ) , <nl> + " 454 : " + getCheckMessage ( MSG _ KEY _ EXT , " aOpt " , 3 , 1 ) , <nl> + " 455 : " + getCheckMessage ( MSG _ KEY _ EXT , " bOpt " , 2 , 1 ) , <nl> + " 471 : " + getCheckMessage ( MSG _ KEY _ EXT , " l1 " , 3 , 1 ) , <nl> + " 471 : " + getCheckMessage ( MSG _ KEY _ EXT , " l2 " , 2 , 1 ) , <nl> + " 479 : " + getCheckMessage ( MSG _ KEY _ EXT , " myOption " , 7 , 1 ) , <nl> + " 491 : " + getCheckMessage ( MSG _ KEY _ EXT , " myOption " , 6 , 1 ) , <nl> + " 504 : " + getCheckMessage ( MSG _ KEY _ EXT , " count " , 4 , 1 ) , <nl> + " 505 : " + getCheckMessage ( MSG _ KEY _ EXT , " files " , 2 , 1 ) , <nl> + " 540 : " + getCheckMessage ( MSG _ KEY _ EXT , " id " , 2 , 1 ) , <nl> + " 542 : " + getCheckMessage ( MSG _ KEY _ EXT , " parentId " , 3 , 1 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " coding / InputVariableDeclarationUsageDistanceCheck . java " ) , expected ) ; <nl> }

TEST DIFF:
diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / java . g b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / java . g 
 index 7c76f19 . . 8e6e9f0 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / java . g 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / java . g 
 @ @ - 493 , 7 + 493 , 7 @ @ annotationMemberValuePair ! 
 
 annotationMemberValueInitializer 
 : 
 - annotationExpression | annotation | annotationMemberArrayInitializer 
 + ( annotationExpression ) = > annotationExpression | annotation | annotationMemberArrayInitializer 
 ; 
 
 / / This is an initializer used to set up an annotation member array . 
 @ @ - 519 , 7 + 519 , 7 @ @ annotationMemberArrayInitializer 
 / / The two things that can initialize an annotation array element are a conditional expression 
 / / and an annotation ( nested annotation array initialisers are not valid ) 
 annotationMemberArrayValueInitializer 
 - : annotationExpression 
 + : ( annotationExpression ) = > annotationExpression 
 | annotation 
 ; 
 
 @ @ - 1039 , 7 + 1039 , 7 @ @ traditionalStatement 
 / / An expression statement . This could be a method call , 
 / / assignment statement , or any other expression evaluated for 
 / / side - effects . 
 - | { LA ( 2 ) ! = COLON } ? expression ( SEMI ) ? 
 + | ( { LA ( 2 ) ! = COLON } ? expression ( SEMI ) ? ) = > { LA ( 2 ) ! = COLON } ? expression ( SEMI ) ? 
 
 / / class definition 
 | m : modifiers ! classDefinition [ # m ] 
 @ @ - 1426 , 7 + 1426 , 7 @ @ postfixExpression 
 ( options { warnWhenFollowAmbig = false ; } : / / qualified id ( id . id . id . id . . . ) - - build the name 
 DOT ^ 
 ( ( typeArguments [ false ] ) ? 
 - ( IDENT ( ( typeArguments [ false ] DOUBLE _ COLON ) = > typeArguments [ false ] ) ? 
 + ( IDENT 
 | " this " 
 | " super " / / ClassName . super . field 
 ) 
 @ @ - 1480 , 7 + 1480 , 8 @ @ postfixExpression 
 
 / / the basic element of an expression 
 primaryExpression 
 - : IDENT ( ( typeArguments [ false ] DOUBLE _ COLON ) = > typeArguments [ false ] ) ? 
 + : ( typeSpec [ false ] DOUBLE _ COLON ) = > typeSpec [ false ] 
 + | IDENT 
 | constant 
 | " true " 
 | " false " 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java 
 index 5f27420 . . 75ed798 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / java8 / MethodReferencesTest . java 
 @ @ - 65 , 4 + 65 , 31 @ @ public class MethodReferencesTest extends BaseCheckTestSupport { 
 verify ( checkConfig , getNonCompilablePath ( " InputMethodReferences3 . java " ) , expected ) ; 
 
 } 
 + 
 + @ Test 
 + public void testArrayAfterGeneric ( ) 
 + throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( MemberNameCheck . class ) ; 
 + final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , getNonCompilablePath ( " InputMethodReferences4 . java " ) , expected ) ; 
 + 
 + } 
 + 
 + @ Test 
 + public void testFromHiernate ( ) 
 + throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( MemberNameCheck . class ) ; 
 + final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , getNonCompilablePath ( " InputMethodReferences5 . java " ) , expected ) ; 
 + 
 + } 
 + 
 + @ Test 
 + public void testFromSpring ( ) 
 + throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( MemberNameCheck . class ) ; 
 + final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , getNonCompilablePath ( " InputMethodReferences6 . java " ) , expected ) ; 
 + 
 + } 
 } 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences4 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences4 . java 
 new file mode 100644 
 index 0000000 . . 41373b0 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences4 . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + / / Compilable with Java8 
 + / / Issue # 2729 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + import java . util . Arrays ; 
 + 
 + public class InputMethodReferences4 { 
 + public void doSomething ( final Object . . . arguments ) { 
 + Arrays . stream ( arguments ) 
 + . map ( Object : : getClass ) 
 + . toArray ( Class < ? > [ ] : : new ) ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences5 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences5 . java 
 new file mode 100644 
 index 0000000 . . 6a90000 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences5 . java 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + / / Compilable with Java8 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + import java . lang . annotation . Retention ; 
 + import java . lang . annotation . Target ; 
 + 
 + import static java . lang . annotation . ElementType . FIELD ; 
 + import static java . lang . annotation . ElementType . METHOD ; 
 + import static java . lang . annotation . RetentionPolicy . RUNTIME ; 
 + 
 + @ Target ( { METHOD , FIELD } ) 
 + @ Retention ( RUNTIME ) 
 + public @ interface InputMethodReferences5 { 
 + JoinFormula formula ( ) default @ JoinFormula ( value = " " , referencedColumnName = " " ) ; 
 + 
 + JoinColumn column ( ) default @ JoinColumn ( ) ; 
 + } 
 + 
 + @ interface JoinFormula { 
 + String value ( ) ; 
 + 
 + String referencedColumnName ( ) ; 
 + } 
 + 
 + @ interface JoinColumn { 
 + 
 + } 
 diff - - git a / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences6 . java b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences6 . java 
 new file mode 100644 
 index 0000000 . . f05edef 
 - - - / dev / null 
 + + + b / src / test / resources - noncompilable / com / puppycrawl / tools / checkstyle / grammars / java8 / InputMethodReferences6 . java 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + / / Compilable with Java8 
 + package com . puppycrawl . tools . checkstyle . grammars . java8 ; 
 + 
 + public final class InputMethodReferences6 { 
 + 
 + public void testMethod ( ) { 
 + 
 + @ SuppressWarnings ( " unused " ) 
 + class MyClass { 
 + public int doSomething ( ) { 
 + return 0 ; 
 + } 
 + } 
 + 
 + } 
 + 
 + }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 index 9655dd9 . . fbae952 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 @ @ - 173 , 6 + 173 , 11 @ @ public class VariableDeclarationUsageDistanceCheck extends Check 
 public static final String MSG _ KEY = " variable . declaration . usage . distance " ; 
 
 / * * 
 + * Warning message key . 
 + * / 
 + public static final String MSG _ KEY _ EXT = " variable . declaration . usage . distance . extend " ; 
 + 
 + / * * 
 * Default value of distance between declaration of variable and its first 
 * usage . 
 * / 
 @ @ - 275 , 8 + 280 , 14 @ @ public class VariableDeclarationUsageDistanceCheck extends Check 
 if ( dist > mAllowedDistance 
 & & ! isInitializationSequence ( variableUsageAst , variable . getText ( ) ) ) 
 { 
 - log ( variable . getLineNo ( ) , 
 - MSG _ KEY , variable . getText ( ) , dist , mAllowedDistance ) ; 
 + if ( mIgnoreFinal ) { 
 + log ( variable . getLineNo ( ) , 
 + MSG _ KEY _ EXT , variable . getText ( ) , dist , mAllowedDistance ) ; 
 + } 
 + else { 
 + log ( variable . getLineNo ( ) , 
 + MSG _ KEY , variable . getText ( ) , dist , mAllowedDistance ) ; 
 + } 
 } 
 } 
 } 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties 
 index 1abd0aa . . b9047f1 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / coding / messages . properties 
 @ @ - 64 , 4 + 64 , 5 @ @ unnecessary . paren . return = Unnecessary parentheses around return value . 
 unnecessary . paren . string = Unnecessary parentheses around string { 0 } . 
 package . dir . mismatch = Package declaration does not match directory ' ' { 0 } ' ' . 
 variable . declaration . usage . distance = Distance between variable ' ' { 0 } ' ' declaration and its first usage is { 1 } , but allowed { 2 } . 
 + variable . declaration . usage . distance . extend = Distance between variable ' ' { 0 } ' ' declaration and its first usage is { 1 } , but allowed { 2 } . Consider to make that variable as final if you still need to store its value in advance ( before method calls that might do side effect on original value ) . 
 overload . methods . declaration = Overload methods should not be split . Previous overloaded method located at line ' ' { 0 } ' ' . 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java 
 index b7b41f5 . . a9db2be 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheckTest . java 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . coding . VariableDeclarationUsageDistanceCheck . MSG _ KEY ; 
 + import static com . puppycrawl . tools . checkstyle . checks . coding . VariableDeclarationUsageDistanceCheck . MSG _ KEY _ EXT ; 
 + 
 import static java . text . MessageFormat . format ; 
 
 import org . junit . Test ; 
 @ @ - 171 , 34 + 173 , 34 @ @ public class VariableDeclarationUsageDistanceCheckTest extends 
 checkConfig . addAttribute ( " validateBetweenScopes " , " true " ) ; 
 checkConfig . addAttribute ( " ignoreFinal " , " true " ) ; 
 final String [ ] expected = { 
 - " 30 : " + getCheckMessage ( MSG _ KEY , " a " , 2 , 1 ) , 
 - " 38 : " + getCheckMessage ( MSG _ KEY , " temp " , 2 , 1 ) , 
 - " 44 : " + getCheckMessage ( MSG _ KEY , " temp " , 2 , 1 ) , 
 - " 57 : " + getCheckMessage ( MSG _ KEY , " count " , 2 , 1 ) , 
 - " 71 : " + getCheckMessage ( MSG _ KEY , " count " , 4 , 1 ) , 
 - " 96 : " + getCheckMessage ( MSG _ KEY , " arg " , 2 , 1 ) , 
 - " 144 : " + getCheckMessage ( MSG _ KEY , " m " , 3 , 1 ) , 
 - " 145 : " + getCheckMessage ( MSG _ KEY , " n " , 2 , 1 ) , 
 - " 184 : " + getCheckMessage ( MSG _ KEY , " result " , 2 , 1 ) , 
 - " 219 : " + getCheckMessage ( MSG _ KEY , " t " , 5 , 1 ) , 
 - " 222 : " + getCheckMessage ( MSG _ KEY , " c " , 3 , 1 ) , 
 - " 223 : " + getCheckMessage ( MSG _ KEY , " d2 " , 3 , 1 ) , 
 - " 260 : " + getCheckMessage ( MSG _ KEY , " selected " , 2 , 1 ) , 
 - " 261 : " + getCheckMessage ( MSG _ KEY , " model " , 2 , 1 ) , 
 - " 287 : " + getCheckMessage ( MSG _ KEY , " sw " , 2 , 1 ) , 
 - " 300 : " + getCheckMessage ( MSG _ KEY , " wh " , 2 , 1 ) , 
 - " 343 : " + getCheckMessage ( MSG _ KEY , " green " , 2 , 1 ) , 
 - " 344 : " + getCheckMessage ( MSG _ KEY , " blue " , 3 , 1 ) , 
 - " 454 : " + getCheckMessage ( MSG _ KEY , " aOpt " , 3 , 1 ) , 
 - " 455 : " + getCheckMessage ( MSG _ KEY , " bOpt " , 2 , 1 ) , 
 - " 471 : " + getCheckMessage ( MSG _ KEY , " l1 " , 3 , 1 ) , 
 - " 471 : " + getCheckMessage ( MSG _ KEY , " l2 " , 2 , 1 ) , 
 - " 479 : " + getCheckMessage ( MSG _ KEY , " myOption " , 7 , 1 ) , 
 - " 491 : " + getCheckMessage ( MSG _ KEY , " myOption " , 6 , 1 ) , 
 - " 504 : " + getCheckMessage ( MSG _ KEY , " count " , 4 , 1 ) , 
 - " 505 : " + getCheckMessage ( MSG _ KEY , " files " , 2 , 1 ) , 
 - " 540 : " + getCheckMessage ( MSG _ KEY , " id " , 2 , 1 ) , 
 - " 542 : " + getCheckMessage ( MSG _ KEY , " parentId " , 3 , 1 ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY _ EXT , " a " , 2 , 1 ) , 
 + " 38 : " + getCheckMessage ( MSG _ KEY _ EXT , " temp " , 2 , 1 ) , 
 + " 44 : " + getCheckMessage ( MSG _ KEY _ EXT , " temp " , 2 , 1 ) , 
 + " 57 : " + getCheckMessage ( MSG _ KEY _ EXT , " count " , 2 , 1 ) , 
 + " 71 : " + getCheckMessage ( MSG _ KEY _ EXT , " count " , 4 , 1 ) , 
 + " 96 : " + getCheckMessage ( MSG _ KEY _ EXT , " arg " , 2 , 1 ) , 
 + " 144 : " + getCheckMessage ( MSG _ KEY _ EXT , " m " , 3 , 1 ) , 
 + " 145 : " + getCheckMessage ( MSG _ KEY _ EXT , " n " , 2 , 1 ) , 
 + " 184 : " + getCheckMessage ( MSG _ KEY _ EXT , " result " , 2 , 1 ) , 
 + " 219 : " + getCheckMessage ( MSG _ KEY _ EXT , " t " , 5 , 1 ) , 
 + " 222 : " + getCheckMessage ( MSG _ KEY _ EXT , " c " , 3 , 1 ) , 
 + " 223 : " + getCheckMessage ( MSG _ KEY _ EXT , " d2 " , 3 , 1 ) , 
 + " 260 : " + getCheckMessage ( MSG _ KEY _ EXT , " selected " , 2 , 1 ) , 
 + " 261 : " + getCheckMessage ( MSG _ KEY _ EXT , " model " , 2 , 1 ) , 
 + " 287 : " + getCheckMessage ( MSG _ KEY _ EXT , " sw " , 2 , 1 ) , 
 + " 300 : " + getCheckMessage ( MSG _ KEY _ EXT , " wh " , 2 , 1 ) , 
 + " 343 : " + getCheckMessage ( MSG _ KEY _ EXT , " green " , 2 , 1 ) , 
 + " 344 : " + getCheckMessage ( MSG _ KEY _ EXT , " blue " , 3 , 1 ) , 
 + " 454 : " + getCheckMessage ( MSG _ KEY _ EXT , " aOpt " , 3 , 1 ) , 
 + " 455 : " + getCheckMessage ( MSG _ KEY _ EXT , " bOpt " , 2 , 1 ) , 
 + " 471 : " + getCheckMessage ( MSG _ KEY _ EXT , " l1 " , 3 , 1 ) , 
 + " 471 : " + getCheckMessage ( MSG _ KEY _ EXT , " l2 " , 2 , 1 ) , 
 + " 479 : " + getCheckMessage ( MSG _ KEY _ EXT , " myOption " , 7 , 1 ) , 
 + " 491 : " + getCheckMessage ( MSG _ KEY _ EXT , " myOption " , 6 , 1 ) , 
 + " 504 : " + getCheckMessage ( MSG _ KEY _ EXT , " count " , 4 , 1 ) , 
 + " 505 : " + getCheckMessage ( MSG _ KEY _ EXT , " files " , 2 , 1 ) , 
 + " 540 : " + getCheckMessage ( MSG _ KEY _ EXT , " id " , 2 , 1 ) , 
 + " 542 : " + getCheckMessage ( MSG _ KEY _ EXT , " parentId " , 3 , 1 ) , 
 } ; 
 verify ( checkConfig , getPath ( " coding / InputVariableDeclarationUsageDistanceCheck . java " ) , expected ) ; 
 }
