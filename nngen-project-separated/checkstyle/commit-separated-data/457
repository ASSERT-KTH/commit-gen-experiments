BLEU SCORE: 0.30620490882364876

TEST MSG: config : bump antlr4 to 4 . 7 . 1 with minor output extension for travis
GENERATED MSG: config : bump version antlr4 to 4 . 7

TEST DIFF (one line): diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh <nl> index 3755820 . . d286ce8 100755 <nl> - - - a / . ci / travis / travis . sh <nl> + + + b / . ci / travis / travis . sh <nl> @ @ - 25 , 6 + 25 , 7 @ @ versions ) <nl> grep - B 7 - A 7 " < nextVersion > " target / dependency - updates - report . xml | cat <nl> echo " New plugin versions : " <nl> grep - B 4 - A 7 " < nextVersion > " target / plugin - updates - report . xml | cat <nl> + echo " Verification is failed . " <nl> sleep 5s <nl> false <nl> else <nl> diff - - git a / pom . xml b / pom . xml <nl> index ee48974 . . 424496b 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 211 , 7 + 211 , 7 @ @ <nl> < project . build . sourceEncoding > UTF - 8 < / project . build . sourceEncoding > <nl> < project . reporting . outputEncoding > UTF - 8 < / project . reporting . outputEncoding > <nl> < projectVersion > $ { project . version } < / projectVersion > <nl> - < antlr4 . version > 4 . 7 < / antlr4 . version > <nl> + < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > <nl> < maven . site . plugin . version > 3 . 6 < / maven . site . plugin . version > <nl> < maven . findbugs . plugin . version > 3 . 0 . 5 < / maven . findbugs . plugin . version > <nl> < maven . spotbugs . plugin . version > 3 . 0 . 6 < / maven . spotbugs . plugin . version >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> index 5792a62 . . db2d166 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> @ @ - 361 , 7 + 361 , 7 @ @ public final class LocalizedMessage <nl> * @ param locale the locale to use for localization <nl> * / <nl> public static void setLocale ( Locale locale ) { <nl> - BUNDLE _ CACHE . clear ( ) ; <nl> + clearCache ( ) ; <nl> if ( Locale . ENGLISH . getLanguage ( ) . equals ( locale . getLanguage ( ) ) ) { <nl> sLocale = Locale . ROOT ; <nl> } <nl> @ @ - 392 , 12 + 392 , 12 @ @ public final class LocalizedMessage <nl> / * * <nl> * < p > <nl> * Custom ResourceBundle . Control implementation which allows explicitly read <nl> - * the properties files as UTF - 8 <nl> + * the properties files as UTF - 8 . <nl> * < / p > <nl> * <nl> * @ author < a href = " mailto : nesterenko - aleksey @ list . ru " > Aleksey Nesterenko < / a > <nl> * / <nl> - protected static class Utf8Control extends Control { <nl> + public static class Utf8Control extends Control { <nl> @ Override <nl> public ResourceBundle newBundle ( String aBaseName , Locale aLocale , String aFormat , <nl> ClassLoader aLoader , boolean aReload ) throws IOException { <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages _ zh . properties <nl> index 8bc1d70 . . 4782934 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages _ zh . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages _ zh . properties <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> indentation . error . multi = ' ' { 0 } ' ' 缩 进 了 { 1 } 个 缩 进 符 ， 应 为 以 下 缩 进 之 一 ： { 2 } 。 <nl> - indentation . child . error . multi = ' ' { 0 } ' ' 子 元 素 进 了 { 1 } 个 缩 进 符 ， 应 为 以 下 缩 进 之 一 ： { 2 } 。 <nl> + indentation . child . error . multi = ' ' { 0 } ' ' 子 元 素 缩 进 了 { 1 } 个 缩 进 符 ， 应 为 以 下 缩 进 之 一 ： { 2 } 。 <nl> indentation . error = ' ' { 0 } ' ' 缩 进 了 { 1 } 个 缩 进 符 ， 应 为 { 2 } 个 。 <nl> indentation . child . error = ' ' { 0 } ' ' 子 元 素 缩 进 了 { 1 } 个 缩 进 符 ， 应 为 { 2 } 个 。 <nl> comments . indentation . single = 注 释 应 与 第 { 0 } 行 代 码 同 样 缩 进 { 2 } 个 缩 进 符 ， 而 不 是 { 1 } 个 。 <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> index 19c95f8 . . 80dbb23 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> @ @ - 39 , 13 + 39 , 14 @ @ import java . util . HashMap ; <nl> import java . util . List ; <nl> import java . util . Locale ; <nl> import java . util . Map ; <nl> - import java . util . Properties ; <nl> + import java . util . ResourceBundle ; <nl> import java . util . stream . Collectors ; <nl> <nl> import com . google . common . collect . MapDifference ; <nl> import com . google . common . collect . MapDifference . ValueDifference ; <nl> import com . google . common . collect . Maps ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> <nl> public class BaseCheckTestSupport { <nl> protected final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; <nl> @ @ - 64 , 11 + 65 , 6 @ @ public class BaseCheckTestSupport { <nl> throws Exception { <nl> final DefaultConfiguration dc = createCheckerConfig ( checkConfig ) ; <nl> final Checker checker = new Checker ( ) ; <nl> - / / make sure the tests always run with default error messages ( language - invariant ) <nl> - / / so the tests don ' t fail in supported locales like German <nl> - final Locale locale = Locale . ROOT ; <nl> - checker . setLocaleCountry ( locale . getCountry ( ) ) ; <nl> - checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; <nl> checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> checker . configure ( dc ) ; <nl> checker . addListener ( new BriefUtLogger ( stream ) ) ; <nl> @ @ - 362 , 15 + 358 , 54 @ @ public class BaseCheckTestSupport { <nl> * @ param arguments the arguments of message in ' messages . properties ' file . <nl> * / <nl> protected String getCheckMessage ( String messageKey , Object . . . arguments ) { <nl> - final Properties pr = new Properties ( ) ; <nl> - try { <nl> - pr . load ( getClass ( ) . getResourceAsStream ( " messages . properties " ) ) ; <nl> - } <nl> - catch ( IOException ex ) { <nl> - return null ; <nl> - } <nl> - final MessageFormat formatter = new MessageFormat ( pr . getProperty ( messageKey ) , <nl> - Locale . ROOT ) ; <nl> + return internalGetCheckMessage ( getMessageBundle ( ) , messageKey , arguments ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Gets the check message ' as is ' from appropriate ' messages . properties ' <nl> + * file . <nl> + * <nl> + * @ param clazz the related check class . <nl> + * @ param messageKey the key of message in ' messages . properties ' file . <nl> + * @ param arguments the arguments of message in ' messages . properties ' file . <nl> + * / <nl> + protected String getCheckMessage ( <nl> + Class < ? > clazz , String messageKey , Object . . . arguments ) { <nl> + return internalGetCheckMessage ( getMessageBundle ( clazz . getName ( ) ) , messageKey , arguments ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Gets the check message ' as is ' from appropriate ' messages . properties ' <nl> + * file . <nl> + * <nl> + * @ param messageBundle the bundle name . <nl> + * @ param messageKey the key of message in ' messages . properties ' file . <nl> + * @ param arguments the arguments of message in ' messages . properties ' file . <nl> + * / <nl> + protected String internalGetCheckMessage ( <nl> + String messageBundle , String messageKey , Object . . . arguments ) { <nl> + final ResourceBundle resourceBundle = ResourceBundle . getBundle ( <nl> + messageBundle , <nl> + Locale . getDefault ( ) , <nl> + Thread . currentThread ( ) . getContextClassLoader ( ) , <nl> + new LocalizedMessage . Utf8Control ( ) ) ; <nl> + final String pattern = resourceBundle . getString ( messageKey ) ; <nl> + final MessageFormat formatter = new MessageFormat ( pattern , Locale . ROOT ) ; <nl> return formatter . format ( arguments ) ; <nl> } <nl> + <nl> + private String getMessageBundle ( ) { <nl> + final String className = getClass ( ) . getName ( ) ; <nl> + return getMessageBundle ( className ) ; <nl> + } <nl> + <nl> + private static String getMessageBundle ( String className ) { <nl> + final int endIndex = className . lastIndexOf ( ' . ' ) ; <nl> + final String messages = " messages " ; <nl> + if ( endIndex < 0 ) { <nl> + return messages ; <nl> + } <nl> + final String packageName = className . substring ( 0 , endIndex ) ; <nl> + return packageName + " . " + messages ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> index 2c09133 . . 87c1bef 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> @ @ - 767 , 9 + 767 , 6 @ @ public class CheckerTest extends BaseCheckTestSupport { <nl> checkerConfig . addAttribute ( " haltOnException " , " false " ) ; <nl> <nl> final Checker checker = new Checker ( ) ; <nl> - final Locale locale = Locale . ROOT ; <nl> - checker . setLocaleCountry ( locale . getCountry ( ) ) ; <nl> - checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; <nl> checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> checker . configure ( checkerConfig ) ; <nl> checker . addListener ( new BriefUtLogger ( stream ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> index 712f825 . . 9490d1c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> <nl> @ @ - 62 , 7 + 63 , 8 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { <nl> writer . write ( content ) ; <nl> } <nl> final String [ ] expected1 = { <nl> - " 1 : 45 : Name ' k ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , <nl> + " 1 : 45 : " + getCheckMessage ( ConstantNameCheck . class , <nl> + MSG _ INVALID _ PATTERN , " k " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , <nl> } ; <nl> verify ( checkConfig , file . getPath ( ) , expected1 ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java <nl> index 95f1f6f . . 48aa653 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . NewlineAtEndOfFileCheck . MSG _ KEY _ NO _ NEWLINE _ EOF ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . NewlineAtEndOfFileCheck . MSG _ KEY _ UNABLE _ OPEN ; <nl> import static java . util . Locale . ENGLISH ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> @ @ - 188 , 7 + 189 , 7 @ @ public class NewlineAtEndOfFileCheckTest <nl> final Set < LocalizedMessage > messages = check . process ( impossibleFile , lines ) ; <nl> assertEquals ( 1 , messages . size ( ) ) ; <nl> final Iterator < LocalizedMessage > iterator = messages . iterator ( ) ; <nl> - assertEquals ( " Unable to open ' ' . " , iterator . next ( ) . getMessage ( ) ) ; <nl> + assertEquals ( getCheckMessage ( MSG _ KEY _ UNABLE _ OPEN , " " ) , iterator . next ( ) . getMessage ( ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> index 82a03c7 . . fd2c339 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . TranslationCheck . MSG _ KEY ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . TranslationCheck . MSG _ KEY _ MISSING _ TRANSLATION _ FILE ; <nl> import static org . hamcrest . CoreMatchers . containsString ; <nl> import static org . hamcrest . CoreMatchers . endsWith ; <nl> import static org . junit . Assert . assertThat ; <nl> @ @ - 133 , 7 + 134 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> <nl> final String [ ] expected = { <nl> - " 0 : Properties file ' messages _ translation . properties ' is missing . " , <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " messages _ translation . properties " ) , <nl> } ; <nl> verify ( <nl> createChecker ( checkConfig ) , <nl> @ @ - 153 , 7 + 155 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> <nl> final String [ ] expected = { <nl> - " 0 : Properties file ' messages _ translation _ de . properties ' is missing . " , <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " messages _ translation _ de . properties " ) , <nl> } ; <nl> verify ( <nl> createChecker ( checkConfig ) , <nl> @ @ - 172 , 7 + 175 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> <nl> final String [ ] expected = { <nl> - " 0 : Properties file ' messages - translation . properties ' is missing . " , <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " messages - translation . properties " ) , <nl> } ; <nl> verify ( <nl> createChecker ( checkConfig ) , <nl> @ @ - 192 , 7 + 196 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> <nl> final String [ ] expected = { <nl> - " 0 : Properties file ' messages - translation _ tr . properties ' is missing . " , <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " messages - translation _ tr . properties " ) , <nl> } ; <nl> verify ( <nl> createChecker ( checkConfig ) , <nl> @ @ - 231 , 7 + 236 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> <nl> final String [ ] expected = { <nl> - " 0 : Properties file ' messages _ home _ de . properties ' is missing . " , <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " messages _ home _ de . properties " ) , <nl> } ; <nl> verify ( <nl> createChecker ( checkConfig ) , <nl> @ @ - 276 , 7 + 282 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> <nl> final String [ ] expected = { <nl> - " 0 : Properties file ' ButtonLabels _ ja . properties ' is missing . " , <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " ButtonLabels _ ja . properties " ) , <nl> } ; <nl> verify ( <nl> createChecker ( checkConfig ) , <nl> @ @ - 305 , 7 + 312 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> <nl> final String [ ] expected = { <nl> - " 0 : Properties file ' ButtonLabels _ ja . properties ' is missing . " , <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " ButtonLabels _ ja . properties " ) , <nl> } ; <nl> <nl> verify ( <nl> @ @ - 335 , 7 + 343 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> <nl> final String [ ] expected = { <nl> - " 0 : Properties file ' ButtonLabels _ ja . properties ' is missing . " , <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , <nl> + " ButtonLabels _ ja . properties " ) , <nl> } ; <nl> <nl> verify ( <nl> @ @ - 359 , 9 + 368 , 9 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> <nl> final String [ ] expected = { <nl> - " 0 : Properties file ' MyLabelsI18 _ fr . properties ' is missing . " , <nl> - " 0 : Properties file ' MyLabelsI18 _ ja . properties ' is missing . " , <nl> - } ; <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , " MyLabelsI18 _ fr . properties " ) , <nl> + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , " MyLabelsI18 _ ja . properties " ) , <nl> + } ; <nl> <nl> verify ( <nl> createChecker ( checkConfig ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> index 3052945 . . 4ab4979 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java <nl> @ @ - 30 , 7 + 30 , 6 @ @ import java . io . File ; <nl> import java . io . IOException ; <nl> import java . lang . reflect . InvocationTargetException ; <nl> import java . lang . reflect . Method ; <nl> - import java . util . Locale ; <nl> <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> @ @ - 255 , 9 + 254 , 6 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> checkerConfig . addAttribute ( " cacheFile " , temporaryFolder . newFile ( ) . getPath ( ) ) ; <nl> <nl> final Checker checker = new Checker ( ) ; <nl> - final Locale locale = Locale . ROOT ; <nl> - checker . setLocaleCountry ( locale . getCountry ( ) ) ; <nl> - checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; <nl> checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> checker . configure ( checkerConfig ) ; <nl> checker . addListener ( new BriefUtLogger ( stream ) ) ; <nl> @ @ - 282 , 9 + 278 , 6 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { <nl> checkerConfig . addAttribute ( " cacheFile " , temporaryFolder . newFile ( ) . getPath ( ) ) ; <nl> <nl> final Checker checker = new Checker ( ) ; <nl> - final Locale locale = Locale . ROOT ; <nl> - checker . setLocaleCountry ( locale . getCountry ( ) ) ; <nl> - checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; <nl> checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> checker . configure ( checkerConfig ) ; <nl> checker . addListener ( new BriefUtLogger ( stream ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> index cb638e8 . . 34838f0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> @ @ - 34 , 10 + 34 , 12 @ @ import java . io . FileInputStream ; <nl> import java . io . IOException ; <nl> import java . io . InputStreamReader ; <nl> import java . nio . charset . StandardCharsets ; <nl> + import java . text . MessageFormat ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . List ; <nl> import java . util . Locale ; <nl> + import java . util . ResourceBundle ; <nl> import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> <nl> @ @ - 49 , 6 + 51 , 7 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . AuditListener ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> / * * <nl> @ @ - 160 , 6 + 163 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> final IndentComment . . . linesWithWarn ) throws Exception { <nl> final Checker checker = createChecker ( config ) ; <nl> checker . addListener ( new IndentAudit ( linesWithWarn ) ) ; <nl> + checker . setLocaleCountry ( Locale . ROOT . getCountry ( ) ) ; <nl> + checker . setLocaleLanguage ( Locale . ROOT . getLanguage ( ) ) ; <nl> + checker . finishLocalSetup ( ) ; <nl> verify ( checker , new File [ ] { new File ( filePath ) } , filePath , expected ) ; <nl> } <nl> <nl> @ @ - 785 , 8 + 791 , 12 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> " 112 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " array initialization rcurly " , 6 , " 8 , 12 " ) , <nl> } ; <nl> <nl> + final Checker checker = createChecker ( checkConfig ) ; <nl> + checker . setLocaleCountry ( Locale . ROOT . getCountry ( ) ) ; <nl> + checker . setLocaleLanguage ( Locale . ROOT . getLanguage ( ) ) ; <nl> + checker . finishLocalSetup ( ) ; <nl> / / Test input for this test case is not checked due to issue # 693 . <nl> - verify ( checkConfig , fileName , expected ) ; <nl> + verify ( checker , fileName , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 1737 , 6 + 1747 , 19 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> verifyWarns ( checkConfig , fileName , expected ) ; <nl> } <nl> <nl> + @ Override <nl> + protected String internalGetCheckMessage ( <nl> + String messageBundle , String messageKey , Object . . . arguments ) { <nl> + final ResourceBundle resourceBundle = ResourceBundle . getBundle ( <nl> + messageBundle , <nl> + Locale . ROOT , <nl> + Thread . currentThread ( ) . getContextClassLoader ( ) , <nl> + new LocalizedMessage . Utf8Control ( ) ) ; <nl> + final String pattern = resourceBundle . getString ( messageKey ) ; <nl> + final MessageFormat formatter = new MessageFormat ( pattern , Locale . ROOT ) ; <nl> + return formatter . format ( arguments ) ; <nl> + } <nl> + <nl> private static final class IndentAudit implements AuditListener { <nl> private final IndentComment [ ] comments ; <nl> private int position ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> index 2b2a90c . . f989b96 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> @ @ - 20 , 8 + 20 , 8 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ JAVADOC _ MISSED _ HTML _ CLOSE ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ JAVADOC _ PARSE _ RULE _ ERROR ; <nl> import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ JAVADOC _ WRONG _ SINGLETON _ TAG ; <nl> - import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ KEY _ PARSE _ ERROR ; <nl> import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ KEY _ UNRECOGNIZED _ ANTLR _ ERROR ; <nl> import static java . util . Arrays . asList ; <nl> import static java . util . Collections . singletonList ; <nl> @ @ - 62 , 9 + 62 , 9 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { <nl> public void testNumberFormatException ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( TempCheck . class ) ; <nl> final String [ ] expected = { <nl> - " 3 : " + getCheckMessage ( MSG _ KEY _ PARSE _ ERROR , 52 , " no viable " <nl> - + " alternative at input ' < ul > < li > a ' { @ link EntityEntry } ( by way of { @ link # ; ' " <nl> - + " while parsing HTML _ TAG " ) , <nl> + " 3 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 52 , " no viable " <nl> + + " alternative at input ' < ul > < li > a ' { @ link EntityEntry } ( by way of { @ link # ; ' " , <nl> + " HTML _ TAG " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputTestNumberFormatException . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheckTest . java <nl> index 07c95ef . . 84d0861 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheckTest . java <nl> @ @ - 167 , 8 + 167 , 7 @ @ public class AbstractTypeAwareCheckTest extends BaseCheckTestSupport { <nl> } <nl> catch ( CheckstyleException ex ) { <nl> final IllegalStateException cause = ( IllegalStateException ) ex . getCause ( ) ; <nl> - assertEquals ( " Unable to get " <nl> - + " class information for @ throws tag ' InvalidExceptionName ' . " , <nl> + assertEquals ( getCheckMessage ( MSG _ CLASS _ INFO , " @ throws " , " InvalidExceptionName " ) , <nl> cause . getMessage ( ) ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocPackageCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocPackageCheckTest . java <nl> index 3775249 . . a4d263c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocPackageCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocPackageCheckTest . java <nl> @ @ - 105 , 7 + 105 , 7 @ @ public class JavadocPackageCheckTest <nl> public void testHtmlDisallowed ( ) throws Exception { <nl> final Configuration checkConfig = createCheckConfig ( JavadocPackageCheck . class ) ; <nl> final String [ ] expected = { <nl> - " 0 : Missing package - info . java file . " , <nl> + " 0 : " + getCheckMessage ( MSG _ PACKAGE _ INFO ) , <nl> } ; <nl> verify ( createChecker ( checkConfig ) , <nl> getPath ( " pkghtml " + File . separator + " InputIgnored . java " ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java <nl> index f0948c3 . . 8ddbb23 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . grammars ; <nl> <nl> + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; <nl> + <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> <nl> @ @ - 63 , 8 + 65 , 8 @ @ public class GeneratedJava14LexerTest <nl> createCheckConfig ( MemberNameCheck . class ) ; <nl> / / input is ' Ã Я ' <nl> final String [ ] expected = { <nl> - " 7 : 9 : Name ' " + ( char ) 0xC3 + ( char ) 0x042F <nl> - + " ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , <nl> + " 7 : 9 : " + getCheckMessage ( MemberNameCheck . class , MSG _ INVALID _ PATTERN , <nl> + " " + ( char ) 0xC3 + ( char ) 0x042F , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputGrammar . java " ) , expected ) ; <nl> }

TEST DIFF:
diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh 
 index 3755820 . . d286ce8 100755 
 - - - a / . ci / travis / travis . sh 
 + + + b / . ci / travis / travis . sh 
 @ @ - 25 , 6 + 25 , 7 @ @ versions ) 
 grep - B 7 - A 7 " < nextVersion > " target / dependency - updates - report . xml | cat 
 echo " New plugin versions : " 
 grep - B 4 - A 7 " < nextVersion > " target / plugin - updates - report . xml | cat 
 + echo " Verification is failed . " 
 sleep 5s 
 false 
 else 
 diff - - git a / pom . xml b / pom . xml 
 index ee48974 . . 424496b 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 211 , 7 + 211 , 7 @ @ 
 < project . build . sourceEncoding > UTF - 8 < / project . build . sourceEncoding > 
 < project . reporting . outputEncoding > UTF - 8 < / project . reporting . outputEncoding > 
 < projectVersion > $ { project . version } < / projectVersion > 
 - < antlr4 . version > 4 . 7 < / antlr4 . version > 
 + < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > 
 < maven . site . plugin . version > 3 . 6 < / maven . site . plugin . version > 
 < maven . findbugs . plugin . version > 3 . 0 . 5 < / maven . findbugs . plugin . version > 
 < maven . spotbugs . plugin . version > 3 . 0 . 6 < / maven . spotbugs . plugin . version >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 index 5792a62 . . db2d166 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 @ @ - 361 , 7 + 361 , 7 @ @ public final class LocalizedMessage 
 * @ param locale the locale to use for localization 
 * / 
 public static void setLocale ( Locale locale ) { 
 - BUNDLE _ CACHE . clear ( ) ; 
 + clearCache ( ) ; 
 if ( Locale . ENGLISH . getLanguage ( ) . equals ( locale . getLanguage ( ) ) ) { 
 sLocale = Locale . ROOT ; 
 } 
 @ @ - 392 , 12 + 392 , 12 @ @ public final class LocalizedMessage 
 / * * 
 * < p > 
 * Custom ResourceBundle . Control implementation which allows explicitly read 
 - * the properties files as UTF - 8 
 + * the properties files as UTF - 8 . 
 * < / p > 
 * 
 * @ author < a href = " mailto : nesterenko - aleksey @ list . ru " > Aleksey Nesterenko < / a > 
 * / 
 - protected static class Utf8Control extends Control { 
 + public static class Utf8Control extends Control { 
 @ Override 
 public ResourceBundle newBundle ( String aBaseName , Locale aLocale , String aFormat , 
 ClassLoader aLoader , boolean aReload ) throws IOException { 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages _ zh . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages _ zh . properties 
 index 8bc1d70 . . 4782934 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages _ zh . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / indentation / messages _ zh . properties 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 indentation . error . multi = ' ' { 0 } ' ' 缩 进 了 { 1 } 个 缩 进 符 ， 应 为 以 下 缩 进 之 一 ： { 2 } 。 
 - indentation . child . error . multi = ' ' { 0 } ' ' 子 元 素 进 了 { 1 } 个 缩 进 符 ， 应 为 以 下 缩 进 之 一 ： { 2 } 。 
 + indentation . child . error . multi = ' ' { 0 } ' ' 子 元 素 缩 进 了 { 1 } 个 缩 进 符 ， 应 为 以 下 缩 进 之 一 ： { 2 } 。 
 indentation . error = ' ' { 0 } ' ' 缩 进 了 { 1 } 个 缩 进 符 ， 应 为 { 2 } 个 。 
 indentation . child . error = ' ' { 0 } ' ' 子 元 素 缩 进 了 { 1 } 个 缩 进 符 ， 应 为 { 2 } 个 。 
 comments . indentation . single = 注 释 应 与 第 { 0 } 行 代 码 同 样 缩 进 { 2 } 个 缩 进 符 ， 而 不 是 { 1 } 个 。 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 index 19c95f8 . . 80dbb23 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 @ @ - 39 , 13 + 39 , 14 @ @ import java . util . HashMap ; 
 import java . util . List ; 
 import java . util . Locale ; 
 import java . util . Map ; 
 - import java . util . Properties ; 
 + import java . util . ResourceBundle ; 
 import java . util . stream . Collectors ; 
 
 import com . google . common . collect . MapDifference ; 
 import com . google . common . collect . MapDifference . ValueDifference ; 
 import com . google . common . collect . Maps ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 
 public class BaseCheckTestSupport { 
 protected final ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; 
 @ @ - 64 , 11 + 65 , 6 @ @ public class BaseCheckTestSupport { 
 throws Exception { 
 final DefaultConfiguration dc = createCheckerConfig ( checkConfig ) ; 
 final Checker checker = new Checker ( ) ; 
 - / / make sure the tests always run with default error messages ( language - invariant ) 
 - / / so the tests don ' t fail in supported locales like German 
 - final Locale locale = Locale . ROOT ; 
 - checker . setLocaleCountry ( locale . getCountry ( ) ) ; 
 - checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; 
 checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 checker . configure ( dc ) ; 
 checker . addListener ( new BriefUtLogger ( stream ) ) ; 
 @ @ - 362 , 15 + 358 , 54 @ @ public class BaseCheckTestSupport { 
 * @ param arguments the arguments of message in ' messages . properties ' file . 
 * / 
 protected String getCheckMessage ( String messageKey , Object . . . arguments ) { 
 - final Properties pr = new Properties ( ) ; 
 - try { 
 - pr . load ( getClass ( ) . getResourceAsStream ( " messages . properties " ) ) ; 
 - } 
 - catch ( IOException ex ) { 
 - return null ; 
 - } 
 - final MessageFormat formatter = new MessageFormat ( pr . getProperty ( messageKey ) , 
 - Locale . ROOT ) ; 
 + return internalGetCheckMessage ( getMessageBundle ( ) , messageKey , arguments ) ; 
 + } 
 + 
 + / * * 
 + * Gets the check message ' as is ' from appropriate ' messages . properties ' 
 + * file . 
 + * 
 + * @ param clazz the related check class . 
 + * @ param messageKey the key of message in ' messages . properties ' file . 
 + * @ param arguments the arguments of message in ' messages . properties ' file . 
 + * / 
 + protected String getCheckMessage ( 
 + Class < ? > clazz , String messageKey , Object . . . arguments ) { 
 + return internalGetCheckMessage ( getMessageBundle ( clazz . getName ( ) ) , messageKey , arguments ) ; 
 + } 
 + 
 + / * * 
 + * Gets the check message ' as is ' from appropriate ' messages . properties ' 
 + * file . 
 + * 
 + * @ param messageBundle the bundle name . 
 + * @ param messageKey the key of message in ' messages . properties ' file . 
 + * @ param arguments the arguments of message in ' messages . properties ' file . 
 + * / 
 + protected String internalGetCheckMessage ( 
 + String messageBundle , String messageKey , Object . . . arguments ) { 
 + final ResourceBundle resourceBundle = ResourceBundle . getBundle ( 
 + messageBundle , 
 + Locale . getDefault ( ) , 
 + Thread . currentThread ( ) . getContextClassLoader ( ) , 
 + new LocalizedMessage . Utf8Control ( ) ) ; 
 + final String pattern = resourceBundle . getString ( messageKey ) ; 
 + final MessageFormat formatter = new MessageFormat ( pattern , Locale . ROOT ) ; 
 return formatter . format ( arguments ) ; 
 } 
 + 
 + private String getMessageBundle ( ) { 
 + final String className = getClass ( ) . getName ( ) ; 
 + return getMessageBundle ( className ) ; 
 + } 
 + 
 + private static String getMessageBundle ( String className ) { 
 + final int endIndex = className . lastIndexOf ( ' . ' ) ; 
 + final String messages = " messages " ; 
 + if ( endIndex < 0 ) { 
 + return messages ; 
 + } 
 + final String packageName = className . substring ( 0 , endIndex ) ; 
 + return packageName + " . " + messages ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 index 2c09133 . . 87c1bef 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 @ @ - 767 , 9 + 767 , 6 @ @ public class CheckerTest extends BaseCheckTestSupport { 
 checkerConfig . addAttribute ( " haltOnException " , " false " ) ; 
 
 final Checker checker = new Checker ( ) ; 
 - final Locale locale = Locale . ROOT ; 
 - checker . setLocaleCountry ( locale . getCountry ( ) ) ; 
 - checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; 
 checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 checker . configure ( checkerConfig ) ; 
 checker . addListener ( new BriefUtLogger ( stream ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 index 712f825 . . 9490d1c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 
 @ @ - 62 , 7 + 63 , 8 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { 
 writer . write ( content ) ; 
 } 
 final String [ ] expected1 = { 
 - " 1 : 45 : Name ' k ' must match pattern ' ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ ' . " , 
 + " 1 : 45 : " + getCheckMessage ( ConstantNameCheck . class , 
 + MSG _ INVALID _ PATTERN , " k " , " ^ [ A - Z ] [ A - Z0 - 9 ] * ( _ [ A - Z0 - 9 ] + ) * $ " ) , 
 } ; 
 verify ( checkConfig , file . getPath ( ) , expected1 ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java 
 index 95f1f6f . . 48aa653 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 package com . puppycrawl . tools . checkstyle . checks ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . NewlineAtEndOfFileCheck . MSG _ KEY _ NO _ NEWLINE _ EOF ; 
 + import static com . puppycrawl . tools . checkstyle . checks . NewlineAtEndOfFileCheck . MSG _ KEY _ UNABLE _ OPEN ; 
 import static java . util . Locale . ENGLISH ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 @ @ - 188 , 7 + 189 , 7 @ @ public class NewlineAtEndOfFileCheckTest 
 final Set < LocalizedMessage > messages = check . process ( impossibleFile , lines ) ; 
 assertEquals ( 1 , messages . size ( ) ) ; 
 final Iterator < LocalizedMessage > iterator = messages . iterator ( ) ; 
 - assertEquals ( " Unable to open ' ' . " , iterator . next ( ) . getMessage ( ) ) ; 
 + assertEquals ( getCheckMessage ( MSG _ KEY _ UNABLE _ OPEN , " " ) , iterator . next ( ) . getMessage ( ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 index 82a03c7 . . fd2c339 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 package com . puppycrawl . tools . checkstyle . checks ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . TranslationCheck . MSG _ KEY ; 
 + import static com . puppycrawl . tools . checkstyle . checks . TranslationCheck . MSG _ KEY _ MISSING _ TRANSLATION _ FILE ; 
 import static org . hamcrest . CoreMatchers . containsString ; 
 import static org . hamcrest . CoreMatchers . endsWith ; 
 import static org . junit . Assert . assertThat ; 
 @ @ - 133 , 7 + 134 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { 
 } ; 
 
 final String [ ] expected = { 
 - " 0 : Properties file ' messages _ translation . properties ' is missing . " , 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " messages _ translation . properties " ) , 
 } ; 
 verify ( 
 createChecker ( checkConfig ) , 
 @ @ - 153 , 7 + 155 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { 
 } ; 
 
 final String [ ] expected = { 
 - " 0 : Properties file ' messages _ translation _ de . properties ' is missing . " , 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " messages _ translation _ de . properties " ) , 
 } ; 
 verify ( 
 createChecker ( checkConfig ) , 
 @ @ - 172 , 7 + 175 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { 
 } ; 
 
 final String [ ] expected = { 
 - " 0 : Properties file ' messages - translation . properties ' is missing . " , 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " messages - translation . properties " ) , 
 } ; 
 verify ( 
 createChecker ( checkConfig ) , 
 @ @ - 192 , 7 + 196 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { 
 } ; 
 
 final String [ ] expected = { 
 - " 0 : Properties file ' messages - translation _ tr . properties ' is missing . " , 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " messages - translation _ tr . properties " ) , 
 } ; 
 verify ( 
 createChecker ( checkConfig ) , 
 @ @ - 231 , 7 + 236 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { 
 } ; 
 
 final String [ ] expected = { 
 - " 0 : Properties file ' messages _ home _ de . properties ' is missing . " , 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " messages _ home _ de . properties " ) , 
 } ; 
 verify ( 
 createChecker ( checkConfig ) , 
 @ @ - 276 , 7 + 282 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { 
 } ; 
 
 final String [ ] expected = { 
 - " 0 : Properties file ' ButtonLabels _ ja . properties ' is missing . " , 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " ButtonLabels _ ja . properties " ) , 
 } ; 
 verify ( 
 createChecker ( checkConfig ) , 
 @ @ - 305 , 7 + 312 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { 
 } ; 
 
 final String [ ] expected = { 
 - " 0 : Properties file ' ButtonLabels _ ja . properties ' is missing . " , 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " ButtonLabels _ ja . properties " ) , 
 } ; 
 
 verify ( 
 @ @ - 335 , 7 + 343 , 8 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { 
 } ; 
 
 final String [ ] expected = { 
 - " 0 : Properties file ' ButtonLabels _ ja . properties ' is missing . " , 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , 
 + " ButtonLabels _ ja . properties " ) , 
 } ; 
 
 verify ( 
 @ @ - 359 , 9 + 368 , 9 @ @ public class TranslationCheckTest extends BaseCheckTestSupport { 
 } ; 
 
 final String [ ] expected = { 
 - " 0 : Properties file ' MyLabelsI18 _ fr . properties ' is missing . " , 
 - " 0 : Properties file ' MyLabelsI18 _ ja . properties ' is missing . " , 
 - } ; 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , " MyLabelsI18 _ fr . properties " ) , 
 + " 0 : " + getCheckMessage ( MSG _ KEY _ MISSING _ TRANSLATION _ FILE , " MyLabelsI18 _ ja . properties " ) , 
 + } ; 
 
 verify ( 
 createChecker ( checkConfig ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 index 3052945 . . 4ab4979 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheckTest . java 
 @ @ - 30 , 7 + 30 , 6 @ @ import java . io . File ; 
 import java . io . IOException ; 
 import java . lang . reflect . InvocationTargetException ; 
 import java . lang . reflect . Method ; 
 - import java . util . Locale ; 
 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 @ @ - 255 , 9 + 254 , 6 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { 
 checkerConfig . addAttribute ( " cacheFile " , temporaryFolder . newFile ( ) . getPath ( ) ) ; 
 
 final Checker checker = new Checker ( ) ; 
 - final Locale locale = Locale . ROOT ; 
 - checker . setLocaleCountry ( locale . getCountry ( ) ) ; 
 - checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; 
 checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 checker . configure ( checkerConfig ) ; 
 checker . addListener ( new BriefUtLogger ( stream ) ) ; 
 @ @ - 282 , 9 + 278 , 6 @ @ public class HeaderCheckTest extends BaseFileSetCheckTestSupport { 
 checkerConfig . addAttribute ( " cacheFile " , temporaryFolder . newFile ( ) . getPath ( ) ) ; 
 
 final Checker checker = new Checker ( ) ; 
 - final Locale locale = Locale . ROOT ; 
 - checker . setLocaleCountry ( locale . getCountry ( ) ) ; 
 - checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; 
 checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 checker . configure ( checkerConfig ) ; 
 checker . addListener ( new BriefUtLogger ( stream ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 index cb638e8 . . 34838f0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 @ @ - 34 , 10 + 34 , 12 @ @ import java . io . FileInputStream ; 
 import java . io . IOException ; 
 import java . io . InputStreamReader ; 
 import java . nio . charset . StandardCharsets ; 
 + import java . text . MessageFormat ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 import java . util . List ; 
 import java . util . Locale ; 
 + import java . util . ResourceBundle ; 
 import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 
 @ @ - 49 , 6 + 51 , 7 @ @ import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . AuditListener ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 + import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 / * * 
 @ @ - 160 , 6 + 163 , 9 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 final IndentComment . . . linesWithWarn ) throws Exception { 
 final Checker checker = createChecker ( config ) ; 
 checker . addListener ( new IndentAudit ( linesWithWarn ) ) ; 
 + checker . setLocaleCountry ( Locale . ROOT . getCountry ( ) ) ; 
 + checker . setLocaleLanguage ( Locale . ROOT . getLanguage ( ) ) ; 
 + checker . finishLocalSetup ( ) ; 
 verify ( checker , new File [ ] { new File ( filePath ) } , filePath , expected ) ; 
 } 
 
 @ @ - 785 , 8 + 791 , 12 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 " 112 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " array initialization rcurly " , 6 , " 8 , 12 " ) , 
 } ; 
 
 + final Checker checker = createChecker ( checkConfig ) ; 
 + checker . setLocaleCountry ( Locale . ROOT . getCountry ( ) ) ; 
 + checker . setLocaleLanguage ( Locale . ROOT . getLanguage ( ) ) ; 
 + checker . finishLocalSetup ( ) ; 
 / / Test input for this test case is not checked due to issue # 693 . 
 - verify ( checkConfig , fileName , expected ) ; 
 + verify ( checker , fileName , expected ) ; 
 } 
 
 @ Test 
 @ @ - 1737 , 6 + 1747 , 19 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 verifyWarns ( checkConfig , fileName , expected ) ; 
 } 
 
 + @ Override 
 + protected String internalGetCheckMessage ( 
 + String messageBundle , String messageKey , Object . . . arguments ) { 
 + final ResourceBundle resourceBundle = ResourceBundle . getBundle ( 
 + messageBundle , 
 + Locale . ROOT , 
 + Thread . currentThread ( ) . getContextClassLoader ( ) , 
 + new LocalizedMessage . Utf8Control ( ) ) ; 
 + final String pattern = resourceBundle . getString ( messageKey ) ; 
 + final MessageFormat formatter = new MessageFormat ( pattern , Locale . ROOT ) ; 
 + return formatter . format ( arguments ) ; 
 + } 
 + 
 private static final class IndentAudit implements AuditListener { 
 private final IndentComment [ ] comments ; 
 private int position ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 index 2b2a90c . . f989b96 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 @ @ - 20 , 8 + 20 , 8 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ JAVADOC _ MISSED _ HTML _ CLOSE ; 
 + import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ JAVADOC _ PARSE _ RULE _ ERROR ; 
 import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ JAVADOC _ WRONG _ SINGLETON _ TAG ; 
 - import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ KEY _ PARSE _ ERROR ; 
 import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . MSG _ KEY _ UNRECOGNIZED _ ANTLR _ ERROR ; 
 import static java . util . Arrays . asList ; 
 import static java . util . Collections . singletonList ; 
 @ @ - 62 , 9 + 62 , 9 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { 
 public void testNumberFormatException ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( TempCheck . class ) ; 
 final String [ ] expected = { 
 - " 3 : " + getCheckMessage ( MSG _ KEY _ PARSE _ ERROR , 52 , " no viable " 
 - + " alternative at input ' < ul > < li > a ' { @ link EntityEntry } ( by way of { @ link # ; ' " 
 - + " while parsing HTML _ TAG " ) , 
 + " 3 : " + getCheckMessage ( MSG _ JAVADOC _ PARSE _ RULE _ ERROR , 52 , " no viable " 
 + + " alternative at input ' < ul > < li > a ' { @ link EntityEntry } ( by way of { @ link # ; ' " , 
 + " HTML _ TAG " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputTestNumberFormatException . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheckTest . java 
 index 07c95ef . . 84d0861 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheckTest . java 
 @ @ - 167 , 8 + 167 , 7 @ @ public class AbstractTypeAwareCheckTest extends BaseCheckTestSupport { 
 } 
 catch ( CheckstyleException ex ) { 
 final IllegalStateException cause = ( IllegalStateException ) ex . getCause ( ) ; 
 - assertEquals ( " Unable to get " 
 - + " class information for @ throws tag ' InvalidExceptionName ' . " , 
 + assertEquals ( getCheckMessage ( MSG _ CLASS _ INFO , " @ throws " , " InvalidExceptionName " ) , 
 cause . getMessage ( ) ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocPackageCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocPackageCheckTest . java 
 index 3775249 . . a4d263c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocPackageCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocPackageCheckTest . java 
 @ @ - 105 , 7 + 105 , 7 @ @ public class JavadocPackageCheckTest 
 public void testHtmlDisallowed ( ) throws Exception { 
 final Configuration checkConfig = createCheckConfig ( JavadocPackageCheck . class ) ; 
 final String [ ] expected = { 
 - " 0 : Missing package - info . java file . " , 
 + " 0 : " + getCheckMessage ( MSG _ PACKAGE _ INFO ) , 
 } ; 
 verify ( createChecker ( checkConfig ) , 
 getPath ( " pkghtml " + File . separator + " InputIgnored . java " ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java 
 index f0948c3 . . 8ddbb23 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / GeneratedJava14LexerTest . java 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 
 package com . puppycrawl . tools . checkstyle . grammars ; 
 
 + import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; 
 + 
 import java . io . File ; 
 import java . io . IOException ; 
 
 @ @ - 63 , 8 + 65 , 8 @ @ public class GeneratedJava14LexerTest 
 createCheckConfig ( MemberNameCheck . class ) ; 
 / / input is ' Ã Я ' 
 final String [ ] expected = { 
 - " 7 : 9 : Name ' " + ( char ) 0xC3 + ( char ) 0x042F 
 - + " ' must match pattern ' ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ ' . " , 
 + " 7 : 9 : " + getCheckMessage ( MemberNameCheck . class , MSG _ INVALID _ PATTERN , 
 + " " + ( char ) 0xC3 + ( char ) 0x042F , " ^ [ a - z ] [ a - zA - Z0 - 9 ] * $ " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputGrammar . java " ) , expected ) ; 
 }
