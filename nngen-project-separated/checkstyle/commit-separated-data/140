BLEU SCORE: 0.049900497019368314

TEST MSG: Issue # 6241 : resolved teamcity 2018 . 3 violations
GENERATED MSG: Inline calls to simple getters . # 1555

TEST DIFF (one line): diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words <nl> index 47cc292 . . 96f6842 100644 <nl> - - - a / . ci / jsoref - spellchecker / whitelist . words <nl> + + + b / . ci / jsoref - spellchecker / whitelist . words <nl> @ @ - 1034 , 6 + 1034 , 7 @ @ RBRACK <nl> rcurly <nl> rdiachenko <nl> RDz <nl> + reactivex <nl> README <nl> Readonly <nl> rebasing <nl> @ @ - 1083 , 6 + 1084 , 7 @ @ ru <nl> ruleset <nl> Ruslan <nl> rw <nl> + rx <nl> sabaka <nl> Sameline <nl> saxonica <nl> diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index 7f97b3c . . 42aae28 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 1137 , 7 + 1137 , 9 @ @ <nl> enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " ClassOnlyUsedInOneModule " enabled = " true " level = " ERROR " <nl> enabled _ by _ default = " true " / > <nl> - < inspection _ tool class = " ClassOnlyUsedInOnePackage " enabled = " true " level = " ERROR " <nl> + < ! - - packages should be where we define . <nl> + we are a library project and other projects might use them . - - > <nl> + < inspection _ tool class = " ClassOnlyUsedInOnePackage " enabled = " false " level = " ERROR " <nl> enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " ClassReferencesSubclass " enabled = " true " level = " ERROR " <nl> enabled _ by _ default = " true " / > <nl> @ @ - 4952 , 6 + 4954 , 22 @ @ <nl> enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " UnsecureRandomNumberGeneration " enabled = " true " level = " ERROR " <nl> enabled _ by _ default = " true " / > <nl> + < inspection _ tool class = " UnstableApiUsage " enabled = " true " level = " WARNING " <nl> + enabled _ by _ default = " true " > <nl> + < option name = " unstableApiAnnotations " > <nl> + < set > <nl> + < ! - - removed guava ' s Beta . Unstable doesn ' t mean it isn ' t safe to use , just might <nl> + change between versions and isn ' t stable - - > <nl> + < option value = " io . reactivex . annotations . Beta " / > <nl> + < option value = " io . reactivex . annotations . Experimental " / > <nl> + < option value = " org . apache . http . annotation . Beta " / > <nl> + < option value = " org . gradle . api . Incubating " / > <nl> + < option value = " org . jetbrains . annotations . ApiStatus . Experimental " / > <nl> + < option value = " rx . annotations . Beta " / > <nl> + < option value = " rx . annotations . Experimental " / > <nl> + < / set > <nl> + < / option > <nl> + < / inspection _ tool > <nl> < inspection _ tool class = " UnterminatedStatementJS " enabled = " true " level = " ERROR " <nl> enabled _ by _ default = " true " > <nl> < option name = " ignoreSemicolonAtEndOfBlock " value = " true " / > <nl> diff - - git a / pom . xml b / pom . xml <nl> index 431be03 . . 5eb6252 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 835 , 7 + 835 , 7 @ @ <nl> < exclude > com . puppycrawl . tools . checkstyle . gui . ParseTreeTableModel * < / exclude > <nl> < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTableCellRenderer * < / exclude > <nl> < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTableModelAdapter * < / exclude > <nl> - < ! - - Deprecated classes - - > <nl> + < ! - - This class is in deprecation phase - - > <nl> < exclude > <nl> com . puppycrawl . tools . checkstyle . checks . naming . AbstractTypeParameterNameCheck <nl> < / exclude > <nl> @ @ - 2180 , 7 + 2180 , 7 @ @ <nl> < param > com . puppycrawl . tools . checkstyle . checks . naming . * < / param > <nl> < / targetTests > <nl> < excludedClasses > <nl> - < ! - - deprecated class - - > <nl> + < ! - - This class is in deprecation phase - - > <nl> < param > <nl> com . puppycrawl . tools . checkstyle . checks . naming . AbstractTypeParameterNameCheck <nl> < / param > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / AuditEventDefaultFormatter . java b / src / main / java / com / puppycrawl / tools / checkstyle / AuditEventDefaultFormatter . java <nl> index 4adb3ca . . ec7308c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / AuditEventDefaultFormatter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / AuditEventDefaultFormatter . java <nl> @ @ - 114 , 7 + 114 , 7 @ @ public class AuditEventDefaultFormatter implements AuditEventFormatter { <nl> checkFullName . lastIndexOf ( SUFFIX ) ) ; <nl> } <nl> else { <nl> - checkShortName = checkFullName . substring ( lastDotIndex + 1 , checkFullName . length ( ) ) ; <nl> + checkShortName = checkFullName . substring ( lastDotIndex + 1 ) ; <nl> } <nl> } <nl> return checkShortName ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> index 1b12f0d . . 272a4f9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> @ @ - 163 , 8 + 163 , 11 @ @ public final class ConfigurationLoader { <nl> } <nl> <nl> / * * <nl> - * Creates mapping between local resources and dtd ids . <nl> + * Creates mapping between local resources and dtd ids . This method can ' t be <nl> + * moved to inner class because it must stay static because it is called <nl> + * from constructor and inner class isn ' t static . <nl> * @ return map between local resources and dtd ids . <nl> + * @ noinspection MethodOnlyUsedFromInnerClass <nl> * / <nl> private static Map < String , String > createIdToResourceNameMap ( ) { <nl> final Map < String , String > map = new HashMap < > ( ) ; <nl> @ @ - 453 , 7 + 456 , 8 @ @ public final class ConfigurationLoader { <nl> <nl> / * * <nl> * Replaces { @ code $ { xxx } } style constructions in the given value <nl> - * with the string value of the corresponding data types . <nl> + * with the string value of the corresponding data types . This method must remain <nl> + * outside inner class for easier testing since inner class requires an instance . <nl> * <nl> * < p > Code copied from ant - <nl> * http : / / cvs . apache . org / viewcvs / jakarta - ant / src / main / org / apache / tools / ant / ProjectHelper . java <nl> @ @ - 471 , 7 + 475 , 7 @ @ public final class ConfigurationLoader { <nl> * @ throws CheckstyleException if the string contains an opening <nl> * { @ code $ { } without a closing <nl> * { @ code } } <nl> - * @ noinspection MethodWithMultipleReturnPoints <nl> + * @ noinspection MethodWithMultipleReturnPoints , MethodOnlyUsedFromInnerClass <nl> * / <nl> private static String replaceProperties ( <nl> String value , PropertyResolver props , String defaultValue ) <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> index 9152ae1 . . 72d9183 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java <nl> @ @ - 25 , 6 + 25 , 8 @ @ import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . LinkedHashSet ; <nl> import java . util . Map ; <nl> + import java . util . Map . Entry ; <nl> + import java . util . Optional ; <nl> import java . util . Set ; <nl> import java . util . stream . Collectors ; <nl> <nl> @ @ - 316 , 12 + 318 , 13 @ @ public class PackageObjectFactory implements ModuleFactory { <nl> * / <nl> public static String getShortFromFullModuleNames ( String fullName ) { <nl> String result = fullName ; <nl> - if ( NAME _ TO _ FULL _ MODULE _ NAME . containsValue ( fullName ) ) { <nl> - result = NAME _ TO _ FULL _ MODULE _ NAME <nl> - . entrySet ( ) <nl> - . stream ( ) <nl> - . filter ( entry - > entry . getValue ( ) . equals ( fullName ) ) <nl> - . findFirst ( ) . get ( ) . getKey ( ) ; <nl> + final Optional < Entry < String , String > > optional = NAME _ TO _ FULL _ MODULE _ NAME <nl> + . entrySet ( ) <nl> + . stream ( ) <nl> + . filter ( entry - > entry . getValue ( ) . equals ( fullName ) ) <nl> + . findFirst ( ) ; <nl> + if ( optional . isPresent ( ) ) { <nl> + result = optional . get ( ) . getKey ( ) ; <nl> } <nl> <nl> return result ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java <nl> index 68dfb87 . . 10b1292 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java <nl> @ @ - 22 , 7 + 22 , 6 @ @ package com . puppycrawl . tools . checkstyle ; <nl> import java . util . HashMap ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> - import java . util . stream . Collectors ; <nl> <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> @ @ - 77 , 7 + 76 , 7 @ @ public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWa <nl> new XpathQueryGenerator ( event , tabWidth ) ; <nl> final List < String > xpathQueries = xpathQueryGenerator . generate ( ) ; <nl> if ( ! xpathQueries . isEmpty ( ) ) { <nl> - final String query = xpathQueries . stream ( ) . collect ( Collectors . joining ( DELIMITER ) ) ; <nl> + final String query = String . join ( DELIMITER , xpathQueries ) ; <nl> MESSAGE _ QUERY _ MAP . put ( event . getLocalizedMessage ( ) , query ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> index b9c81b6 . . 26491a8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> @ @ - 283 , 6 + 283 , 11 @ @ public final class LocalizedMessage <nl> sourceClass , customMessage ) ; <nl> } <nl> <nl> + / * * <nl> + * Indicates whether some other object is " equal to " this one . <nl> + * Suppression on enumeration is needed so code stays consistent . <nl> + * @ noinspection EqualsCalledOnEnumConstant <nl> + * / <nl> / / - @ cs [ CyclomaticComplexity ] equals - a lot of fields to check . <nl> @ Override <nl> public boolean equals ( Object object ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> index f1e8459 . . d3c1a2a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> @ @ - 411 , 7 + 411 , 7 @ @ public class TranslationCheck extends AbstractFileSetCheck { <nl> } <nl> / / We use substring ( . . . ) instead of replace ( . . . ) , so that the regular expression does <nl> / / not have to be compiled each time it is used inside ' replace ' method . <nl> - final String removePattern = regexp . substring ( " ^ . + " . length ( ) , regexp . length ( ) ) ; <nl> + final String removePattern = regexp . substring ( " ^ . + " . length ( ) ) ; <nl> return fileName . replaceAll ( removePattern , " " ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index 110bc49 . . 180ea62 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 495 , 7 + 495 , 7 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> rcurly = child . getLastChild ( ) ; <nl> nextToken = ast ; <nl> } <nl> - else if ( tokenType = = TokenTypes . METHOD _ DEF ) { <nl> + else { <nl> lcurly = ast . findFirstToken ( TokenTypes . SLIST ) ; <nl> if ( lcurly ! = null ) { <nl> / / SLIST could be absent if method is abstract <nl> @ @ - 503 , 11 + 503 , 6 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> } <nl> nextToken = getNextToken ( ast ) ; <nl> } <nl> - else { <nl> - lcurly = ast . findFirstToken ( TokenTypes . SLIST ) ; <nl> - rcurly = lcurly . getLastChild ( ) ; <nl> - nextToken = getNextToken ( ast ) ; <nl> - } <nl> return new Details ( lcurly , rcurly , nextToken , false ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> index 17ef14f . . c3a3a9c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> @ @ - 828 , 8 + 828 , 7 @ @ public class VisibilityModifierCheck <nl> final List < String > shortNames = new ArrayList < > ( ) ; <nl> for ( String canonicalClassName : canonicalClassNames ) { <nl> final String shortClassName = canonicalClassName <nl> - . substring ( canonicalClassName . lastIndexOf ( ' . ' ) + 1 , <nl> - canonicalClassName . length ( ) ) ; <nl> + . substring ( canonicalClassName . lastIndexOf ( ' . ' ) + 1 ) ; <nl> shortNames . add ( shortClassName ) ; <nl> } <nl> return shortNames ; <nl> @ @ - 842 , 8 + 841 , 7 @ @ public class VisibilityModifierCheck <nl> * / <nl> private static String getClassShortName ( String canonicalClassName ) { <nl> return canonicalClassName <nl> - . substring ( canonicalClassName . lastIndexOf ( ' . ' ) + 1 , <nl> - canonicalClassName . length ( ) ) ; <nl> + . substring ( canonicalClassName . lastIndexOf ( ' . ' ) + 1 ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index 7a82a12 . . 499d810 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 87 , 7 + 87 , 6 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> * generally tend to be fine with non tight html . It can be set through config file if a check <nl> * is to log violation upon encountering non - tight HTML in javadoc . <nl> * <nl> - * @ see ParseStatus # firstNonTightHtmlTag <nl> * @ see ParseStatus # isNonTight ( ) <nl> * @ see < a href = " https : / / checkstyle . org / writingjavadocchecks . html # Tight - HTML _ rules " > <nl> * Tight HTML rules < / a > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> index e8d699c . . 49bf1e6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> @ @ - 156 , 10 + 156 , 9 @ @ class TagParser { <nl> <nl> / / Character . isJavaIdentifier . . . may not be a valid HTML <nl> / / identifier but is valid for generics <nl> - return column < text . length ( ) <nl> - & & ( Character . isJavaIdentifierStart ( text . charAt ( column ) ) <nl> - | | text . charAt ( column ) = = ' / ' ) <nl> - | | column > = text . length ( ) ; <nl> + return column > = text . length ( ) <nl> + | | Character . isJavaIdentifierStart ( text . charAt ( column ) ) <nl> + | | text . charAt ( column ) = = ' / ' ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilter . java <nl> index b704cec . . 45ac06e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilter . java <nl> @ @ - 290 , 6 + 290 , 11 @ @ public class SuppressWithPlainTextCommentFilter extends AutomaticBean implements <nl> } <nl> } <nl> <nl> + / * * <nl> + * Indicates whether some other object is " equal to " this one . <nl> + * Suppression on enumeration is needed so code stays consistent . <nl> + * @ noinspection EqualsCalledOnEnumConstant <nl> + * / <nl> @ Override <nl> public boolean equals ( Object other ) { <nl> if ( this = = other ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> index af0f5b4 . . 082be1d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> @ @ - 414 , 6 + 414 , 11 @ @ public class SuppressionCommentFilter <nl> return result ; <nl> } <nl> <nl> + / * * <nl> + * Indicates whether some other object is " equal to " this one . <nl> + * Suppression on enumeration is needed so code stays consistent . <nl> + * @ noinspection EqualsCalledOnEnumConstant <nl> + * / <nl> @ Override <nl> public boolean equals ( Object other ) { <nl> if ( this = = other ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java <nl> index 12d9a67 . . fdd9f47 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java <nl> @ @ - 109 , 14 + 109 , 6 @ @ public class TreeTableModelAdapter extends AbstractTableModel { <nl> } <nl> <nl> / * * <nl> - * Invokes fireTableDataChanged after all the pending events have been <nl> - * processed . SwingUtilities . invokeLater is used to handle this . <nl> - * / <nl> - private void delayedFireTableDataChanged ( ) { <nl> - SwingUtilities . invokeLater ( this : : fireTableDataChanged ) ; <nl> - } <nl> - <nl> - / * * <nl> * TreeExpansionListener that can update the table when tree changes . <nl> * / <nl> private class UpdatingTreeExpansionListener implements TreeExpansionListener { <nl> @ @ - 160 , 6 + 152 , 14 @ @ public class TreeTableModelAdapter extends AbstractTableModel { <nl> delayedFireTableDataChanged ( ) ; <nl> } <nl> <nl> + / * * <nl> + * Invokes fireTableDataChanged after all the pending events have been <nl> + * processed . SwingUtilities . invokeLater is used to handle this . <nl> + * / <nl> + private void delayedFireTableDataChanged ( ) { <nl> + SwingUtilities . invokeLater ( TreeTableModelAdapter . this : : fireTableDataChanged ) ; <nl> + } <nl> + <nl> } <nl> <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 17f3bbd . . 42bfb23 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 582 , 10 + 582 , 9 @ @ public class MainTest { <nl> . equals ( localizedMessage <nl> . substring ( 0 , localizedMessage . indexOf ( ' ' ) ) ) ; <nl> final boolean sameSuffix = <nl> - causeMessage . substring ( causeMessage . lastIndexOf ( ' ' ) , causeMessage . length ( ) ) <nl> + causeMessage . substring ( causeMessage . lastIndexOf ( ' ' ) ) <nl> . equals ( localizedMessage <nl> - . substring ( localizedMessage . lastIndexOf ( ' ' ) , <nl> - localizedMessage . length ( ) ) ) ; <nl> + . substring ( localizedMessage . lastIndexOf ( ' ' ) ) ) ; <nl> assertTrue ( " Invalid error message " , samePrefix | | sameSuffix ) ; <nl> assertTrue ( " Invalid error message " , causeMessage . contains ( " . ' " ) ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> index 90d16df . . ccc50e7 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> @ @ - 83 , 6 + 83 , 7 @ @ public class UniquePropertiesCheckTest extends AbstractModuleTestSupport { <nl> / * * <nl> * Tests the { @ link UniquePropertiesCheck # getLineNumber ( FileText , String ) } <nl> * method return value . <nl> + * @ noinspection JavadocReference Test javadocs should explain all . <nl> * / <nl> @ Test <nl> public void testNotFoundKey ( ) throws Exception { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllTestsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllTestsTest . java <nl> index 48e1c3a . . 4b8bdda 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllTestsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllTestsTest . java <nl> @ @ - 22 , 12 + 22 , 15 @ @ package com . puppycrawl . tools . checkstyle . internal ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . nio . file . Files ; <nl> + import java . nio . file . Path ; <nl> import java . nio . file . Paths ; <nl> import java . util . ArrayList ; <nl> import java . util . HashMap ; <nl> import java . util . List ; <nl> import java . util . Locale ; <nl> import java . util . Map ; <nl> + import java . util . function . Consumer ; <nl> + import java . util . stream . Stream ; <nl> <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> @ @ - 42 , 38 + 45 , 39 @ @ public class AllTestsTest { <nl> public void testAllInputsHaveTest ( ) throws Exception { <nl> final Map < String , List < String > > allTests = new HashMap < > ( ) ; <nl> <nl> - Files . walk ( Paths . get ( " src / test / java " ) ) <nl> - . forEach ( filePath - > { <nl> - grabAllTests ( allTests , filePath . toFile ( ) ) ; <nl> - } ) ; <nl> + walk ( Paths . get ( " src / test / java " ) , filePath - > { <nl> + grabAllTests ( allTests , filePath . toFile ( ) ) ; <nl> + } ) ; <nl> <nl> Assert . assertTrue ( " found tests " , ! allTests . keySet ( ) . isEmpty ( ) ) ; <nl> <nl> - Files . walk ( Paths . get ( " src / test / resources / com / puppycrawl " ) ) <nl> - . forEach ( filePath - > { <nl> - verifyInputFile ( allTests , filePath . toFile ( ) ) ; <nl> - } ) ; <nl> - Files . walk ( Paths . get ( " src / test / resources - noncompilable / com / puppycrawl " ) ) <nl> - . forEach ( filePath - > { <nl> - verifyInputFile ( allTests , filePath . toFile ( ) ) ; <nl> - } ) ; <nl> + walk ( Paths . get ( " src / test / resources / com / puppycrawl " ) , filePath - > { <nl> + verifyInputFile ( allTests , filePath . toFile ( ) ) ; <nl> + } ) ; <nl> + walk ( Paths . get ( " src / test / resources - noncompilable / com / puppycrawl " ) , filePath - > { <nl> + verifyInputFile ( allTests , filePath . toFile ( ) ) ; <nl> + } ) ; <nl> } <nl> <nl> @ Test <nl> public void testAllTestsHaveProductionCode ( ) throws Exception { <nl> final Map < String , List < String > > allTests = new HashMap < > ( ) ; <nl> <nl> - Files . walk ( Paths . get ( " src / main / java " ) ) <nl> - . forEach ( filePath - > { <nl> - grabAllFiles ( allTests , filePath . toFile ( ) ) ; <nl> - } ) ; <nl> + walk ( Paths . get ( " src / main / java " ) , filePath - > { <nl> + grabAllFiles ( allTests , filePath . toFile ( ) ) ; <nl> + } ) ; <nl> <nl> Assert . assertTrue ( " found tests " , ! allTests . keySet ( ) . isEmpty ( ) ) ; <nl> <nl> - Files . walk ( Paths . get ( " src / test / java " ) ) <nl> - . forEach ( filePath - > { <nl> - verifyHasProductionFile ( allTests , filePath . toFile ( ) ) ; <nl> - } ) ; <nl> + walk ( Paths . get ( " src / test / java " ) , filePath - > { <nl> + verifyHasProductionFile ( allTests , filePath . toFile ( ) ) ; <nl> + } ) ; <nl> + } <nl> + <nl> + private static void walk ( Path path , Consumer < Path > action ) throws IOException { <nl> + try ( Stream < Path > walk = Files . walk ( path ) ) { <nl> + walk . forEach ( action ) ; <nl> + } <nl> } <nl> <nl> private static void grabAllTests ( Map < String , List < String > > allTests , File file ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilTest . java <nl> index 827bde1 . . bacc5c2 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilTest . java <nl> @ @ - 149 , 7 + 149 , 7 @ @ public class TokenUtilTest { <nl> <nl> @ Test <nl> public void testTokenValueIncorrect2 ( ) throws Exception { <nl> - final Integer id = 0 ; <nl> + final int id = 0 ; <nl> String [ ] originalValue = null ; <nl> Field fieldToken = null ; <nl> try { <nl> @ @ - 276 , 7 + 276 , 7 @ @ public class TokenUtilTest { <nl> final Optional < DetailAST > result = TokenUtil . findFirstTokenByPredicate ( astForTest , <nl> ast - > " second " . equals ( ast . getText ( ) ) ) ; <nl> <nl> - assertEquals ( " Invalid second sibling " , secondSibling , result . get ( ) ) ; <nl> + assertEquals ( " Invalid second sibling " , secondSibling , result . orElse ( null ) ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> index ac316f1 . . d28fd36 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> @ @ - 389 , 18 + 389 , 18 @ @ public final class LocalizedMessage <nl> else { <nl> stream = aLoader . getResourceAsStream ( resourceName ) ; <nl> } <nl> - ResourceBundle bundle = null ; <nl> + ResourceBundle resourceBundle = null ; <nl> if ( stream ! = null ) { <nl> final Reader streamReader = new InputStreamReader ( stream , " UTF - 8 " ) ; <nl> try { <nl> / / Only this line is changed to make it to read properties files as UTF - 8 . <nl> - bundle = new PropertyResourceBundle ( streamReader ) ; <nl> + resourceBundle = new PropertyResourceBundle ( streamReader ) ; <nl> } <nl> finally { <nl> stream . close ( ) ; <nl> } <nl> } <nl> - return bundle ; <nl> + return resourceBundle ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> index 66e8233 . . ecf9e6f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java <nl> @ @ - 138 , 7 + 138 , 7 @ @ public class HiddenFieldCheck <nl> / * * Stack of sets of field names , <nl> * one for each class of a set of nested classes . <nl> * / <nl> - private FieldFrame currentFrame ; <nl> + private FieldFrame frame ; <nl> <nl> / * * Pattern for names of variables and parameters to ignore . * / <nl> private Pattern regexp ; <nl> @ @ - 190 , 7 + 190 , 7 @ @ public class HiddenFieldCheck <nl> <nl> @ Override <nl> public void beginTree ( DetailAST rootAST ) { <nl> - currentFrame = new FieldFrame ( null , true , null ) ; <nl> + frame = new FieldFrame ( null , true , null ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 232 , 7 + 232 , 7 @ @ public class HiddenFieldCheck <nl> else { <nl> frameName = null ; <nl> } <nl> - final FieldFrame frame = new FieldFrame ( currentFrame , isStaticInnerType , frameName ) ; <nl> + final FieldFrame newFrame = new FieldFrame ( frame , isStaticInnerType , frameName ) ; <nl> <nl> / / add fields to container <nl> final DetailAST objBlock = ast . findFirstToken ( TokenTypes . OBJBLOCK ) ; <nl> @ @ - 246 , 17 + 246 , 17 @ @ public class HiddenFieldCheck <nl> final DetailAST mods = <nl> child . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> if ( mods . branchContains ( TokenTypes . LITERAL _ STATIC ) ) { <nl> - frame . addStaticField ( name ) ; <nl> + newFrame . addStaticField ( name ) ; <nl> } <nl> else { <nl> - frame . addInstanceField ( name ) ; <nl> + newFrame . addInstanceField ( name ) ; <nl> } <nl> } <nl> child = child . getNextSibling ( ) ; <nl> } <nl> } <nl> / / push container <nl> - currentFrame = frame ; <nl> + frame = newFrame ; <nl> } <nl> <nl> @ Override <nl> @ @ - 265 , 7 + 265 , 7 @ @ public class HiddenFieldCheck <nl> | | ast . getType ( ) = = TokenTypes . ENUM _ DEF <nl> | | ast . getType ( ) = = TokenTypes . ENUM _ CONSTANT _ DEF ) { <nl> / / pop <nl> - currentFrame = currentFrame . getParent ( ) ; <nl> + frame = frame . getParent ( ) ; <nl> } <nl> } <nl> <nl> @ @ - 300 , 8 + 300 , 8 @ @ public class HiddenFieldCheck <nl> * @ return true if static or instance field <nl> * / <nl> private boolean isStaticOrOnstanceField ( DetailAST ast , String name ) { <nl> - return currentFrame . containsStaticField ( name ) <nl> - | | ! inStatic ( ast ) & & currentFrame . containsInstanceField ( name ) ; <nl> + return frame . containsStaticField ( name ) <nl> + | | ! inStatic ( ast ) & & frame . containsInstanceField ( name ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 384 , 7 + 384 , 7 @ @ public class HiddenFieldCheck <nl> final DetailAST typeAST = aMethodAST . findFirstToken ( TokenTypes . TYPE ) ; <nl> final String returnType = typeAST . getFirstChild ( ) . getText ( ) ; <nl> if ( typeAST . branchContains ( TokenTypes . LITERAL _ VOID ) <nl> - | | setterCanReturnItsClass & & currentFrame . embeddedIn ( returnType ) ) { <nl> + | | setterCanReturnItsClass & & frame . embeddedIn ( returnType ) ) { <nl> / / this method has signature <nl> / / <nl> / / void set $ { Name } ( $ { anyType } $ { name } )

TEST DIFF:
diff - - git a / . ci / jsoref - spellchecker / whitelist . words b / . ci / jsoref - spellchecker / whitelist . words 
 index 47cc292 . . 96f6842 100644 
 - - - a / . ci / jsoref - spellchecker / whitelist . words 
 + + + b / . ci / jsoref - spellchecker / whitelist . words 
 @ @ - 1034 , 6 + 1034 , 7 @ @ RBRACK 
 rcurly 
 rdiachenko 
 RDz 
 + reactivex 
 README 
 Readonly 
 rebasing 
 @ @ - 1083 , 6 + 1084 , 7 @ @ ru 
 ruleset 
 Ruslan 
 rw 
 + rx 
 sabaka 
 Sameline 
 saxonica 
 diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index 7f97b3c . . 42aae28 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 1137 , 7 + 1137 , 9 @ @ 
 enabled _ by _ default = " true " / > 
 < inspection _ tool class = " ClassOnlyUsedInOneModule " enabled = " true " level = " ERROR " 
 enabled _ by _ default = " true " / > 
 - < inspection _ tool class = " ClassOnlyUsedInOnePackage " enabled = " true " level = " ERROR " 
 + < ! - - packages should be where we define . 
 + we are a library project and other projects might use them . - - > 
 + < inspection _ tool class = " ClassOnlyUsedInOnePackage " enabled = " false " level = " ERROR " 
 enabled _ by _ default = " true " / > 
 < inspection _ tool class = " ClassReferencesSubclass " enabled = " true " level = " ERROR " 
 enabled _ by _ default = " true " / > 
 @ @ - 4952 , 6 + 4954 , 22 @ @ 
 enabled _ by _ default = " false " / > 
 < inspection _ tool class = " UnsecureRandomNumberGeneration " enabled = " true " level = " ERROR " 
 enabled _ by _ default = " true " / > 
 + < inspection _ tool class = " UnstableApiUsage " enabled = " true " level = " WARNING " 
 + enabled _ by _ default = " true " > 
 + < option name = " unstableApiAnnotations " > 
 + < set > 
 + < ! - - removed guava ' s Beta . Unstable doesn ' t mean it isn ' t safe to use , just might 
 + change between versions and isn ' t stable - - > 
 + < option value = " io . reactivex . annotations . Beta " / > 
 + < option value = " io . reactivex . annotations . Experimental " / > 
 + < option value = " org . apache . http . annotation . Beta " / > 
 + < option value = " org . gradle . api . Incubating " / > 
 + < option value = " org . jetbrains . annotations . ApiStatus . Experimental " / > 
 + < option value = " rx . annotations . Beta " / > 
 + < option value = " rx . annotations . Experimental " / > 
 + < / set > 
 + < / option > 
 + < / inspection _ tool > 
 < inspection _ tool class = " UnterminatedStatementJS " enabled = " true " level = " ERROR " 
 enabled _ by _ default = " true " > 
 < option name = " ignoreSemicolonAtEndOfBlock " value = " true " / > 
 diff - - git a / pom . xml b / pom . xml 
 index 431be03 . . 5eb6252 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 835 , 7 + 835 , 7 @ @ 
 < exclude > com . puppycrawl . tools . checkstyle . gui . ParseTreeTableModel * < / exclude > 
 < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTableCellRenderer * < / exclude > 
 < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTableModelAdapter * < / exclude > 
 - < ! - - Deprecated classes - - > 
 + < ! - - This class is in deprecation phase - - > 
 < exclude > 
 com . puppycrawl . tools . checkstyle . checks . naming . AbstractTypeParameterNameCheck 
 < / exclude > 
 @ @ - 2180 , 7 + 2180 , 7 @ @ 
 < param > com . puppycrawl . tools . checkstyle . checks . naming . * < / param > 
 < / targetTests > 
 < excludedClasses > 
 - < ! - - deprecated class - - > 
 + < ! - - This class is in deprecation phase - - > 
 < param > 
 com . puppycrawl . tools . checkstyle . checks . naming . AbstractTypeParameterNameCheck 
 < / param > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / AuditEventDefaultFormatter . java b / src / main / java / com / puppycrawl / tools / checkstyle / AuditEventDefaultFormatter . java 
 index 4adb3ca . . ec7308c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / AuditEventDefaultFormatter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / AuditEventDefaultFormatter . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class AuditEventDefaultFormatter implements AuditEventFormatter { 
 checkFullName . lastIndexOf ( SUFFIX ) ) ; 
 } 
 else { 
 - checkShortName = checkFullName . substring ( lastDotIndex + 1 , checkFullName . length ( ) ) ; 
 + checkShortName = checkFullName . substring ( lastDotIndex + 1 ) ; 
 } 
 } 
 return checkShortName ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 index 1b12f0d . . 272a4f9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 @ @ - 163 , 8 + 163 , 11 @ @ public final class ConfigurationLoader { 
 } 
 
 / * * 
 - * Creates mapping between local resources and dtd ids . 
 + * Creates mapping between local resources and dtd ids . This method can ' t be 
 + * moved to inner class because it must stay static because it is called 
 + * from constructor and inner class isn ' t static . 
 * @ return map between local resources and dtd ids . 
 + * @ noinspection MethodOnlyUsedFromInnerClass 
 * / 
 private static Map < String , String > createIdToResourceNameMap ( ) { 
 final Map < String , String > map = new HashMap < > ( ) ; 
 @ @ - 453 , 7 + 456 , 8 @ @ public final class ConfigurationLoader { 
 
 / * * 
 * Replaces { @ code $ { xxx } } style constructions in the given value 
 - * with the string value of the corresponding data types . 
 + * with the string value of the corresponding data types . This method must remain 
 + * outside inner class for easier testing since inner class requires an instance . 
 * 
 * < p > Code copied from ant - 
 * http : / / cvs . apache . org / viewcvs / jakarta - ant / src / main / org / apache / tools / ant / ProjectHelper . java 
 @ @ - 471 , 7 + 475 , 7 @ @ public final class ConfigurationLoader { 
 * @ throws CheckstyleException if the string contains an opening 
 * { @ code $ { } without a closing 
 * { @ code } } 
 - * @ noinspection MethodWithMultipleReturnPoints 
 + * @ noinspection MethodWithMultipleReturnPoints , MethodOnlyUsedFromInnerClass 
 * / 
 private static String replaceProperties ( 
 String value , PropertyResolver props , String defaultValue ) 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 index 9152ae1 . . 72d9183 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageObjectFactory . java 
 @ @ - 25 , 6 + 25 , 8 @ @ import java . util . Collections ; 
 import java . util . HashMap ; 
 import java . util . LinkedHashSet ; 
 import java . util . Map ; 
 + import java . util . Map . Entry ; 
 + import java . util . Optional ; 
 import java . util . Set ; 
 import java . util . stream . Collectors ; 
 
 @ @ - 316 , 12 + 318 , 13 @ @ public class PackageObjectFactory implements ModuleFactory { 
 * / 
 public static String getShortFromFullModuleNames ( String fullName ) { 
 String result = fullName ; 
 - if ( NAME _ TO _ FULL _ MODULE _ NAME . containsValue ( fullName ) ) { 
 - result = NAME _ TO _ FULL _ MODULE _ NAME 
 - . entrySet ( ) 
 - . stream ( ) 
 - . filter ( entry - > entry . getValue ( ) . equals ( fullName ) ) 
 - . findFirst ( ) . get ( ) . getKey ( ) ; 
 + final Optional < Entry < String , String > > optional = NAME _ TO _ FULL _ MODULE _ NAME 
 + . entrySet ( ) 
 + . stream ( ) 
 + . filter ( entry - > entry . getValue ( ) . equals ( fullName ) ) 
 + . findFirst ( ) ; 
 + if ( optional . isPresent ( ) ) { 
 + result = optional . get ( ) . getKey ( ) ; 
 } 
 
 return result ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java 
 index 68dfb87 . . 10b1292 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XpathFileGeneratorAstFilter . java 
 @ @ - 22 , 7 + 22 , 6 @ @ package com . puppycrawl . tools . checkstyle ; 
 import java . util . HashMap ; 
 import java . util . List ; 
 import java . util . Map ; 
 - import java . util . stream . Collectors ; 
 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 @ @ - 77 , 7 + 76 , 7 @ @ public class XpathFileGeneratorAstFilter extends AutomaticBean implements TreeWa 
 new XpathQueryGenerator ( event , tabWidth ) ; 
 final List < String > xpathQueries = xpathQueryGenerator . generate ( ) ; 
 if ( ! xpathQueries . isEmpty ( ) ) { 
 - final String query = xpathQueries . stream ( ) . collect ( Collectors . joining ( DELIMITER ) ) ; 
 + final String query = String . join ( DELIMITER , xpathQueries ) ; 
 MESSAGE _ QUERY _ MAP . put ( event . getLocalizedMessage ( ) , query ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 index b9c81b6 . . 26491a8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 @ @ - 283 , 6 + 283 , 11 @ @ public final class LocalizedMessage 
 sourceClass , customMessage ) ; 
 } 
 
 + / * * 
 + * Indicates whether some other object is " equal to " this one . 
 + * Suppression on enumeration is needed so code stays consistent . 
 + * @ noinspection EqualsCalledOnEnumConstant 
 + * / 
 / / - @ cs [ CyclomaticComplexity ] equals - a lot of fields to check . 
 @ Override 
 public boolean equals ( Object object ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 index f1e8459 . . d3c1a2a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 @ @ - 411 , 7 + 411 , 7 @ @ public class TranslationCheck extends AbstractFileSetCheck { 
 } 
 / / We use substring ( . . . ) instead of replace ( . . . ) , so that the regular expression does 
 / / not have to be compiled each time it is used inside ' replace ' method . 
 - final String removePattern = regexp . substring ( " ^ . + " . length ( ) , regexp . length ( ) ) ; 
 + final String removePattern = regexp . substring ( " ^ . + " . length ( ) ) ; 
 return fileName . replaceAll ( removePattern , " " ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index 110bc49 . . 180ea62 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 495 , 7 + 495 , 7 @ @ public class RightCurlyCheck extends AbstractCheck { 
 rcurly = child . getLastChild ( ) ; 
 nextToken = ast ; 
 } 
 - else if ( tokenType = = TokenTypes . METHOD _ DEF ) { 
 + else { 
 lcurly = ast . findFirstToken ( TokenTypes . SLIST ) ; 
 if ( lcurly ! = null ) { 
 / / SLIST could be absent if method is abstract 
 @ @ - 503 , 11 + 503 , 6 @ @ public class RightCurlyCheck extends AbstractCheck { 
 } 
 nextToken = getNextToken ( ast ) ; 
 } 
 - else { 
 - lcurly = ast . findFirstToken ( TokenTypes . SLIST ) ; 
 - rcurly = lcurly . getLastChild ( ) ; 
 - nextToken = getNextToken ( ast ) ; 
 - } 
 return new Details ( lcurly , rcurly , nextToken , false ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 index 17ef14f . . c3a3a9c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 @ @ - 828 , 8 + 828 , 7 @ @ public class VisibilityModifierCheck 
 final List < String > shortNames = new ArrayList < > ( ) ; 
 for ( String canonicalClassName : canonicalClassNames ) { 
 final String shortClassName = canonicalClassName 
 - . substring ( canonicalClassName . lastIndexOf ( ' . ' ) + 1 , 
 - canonicalClassName . length ( ) ) ; 
 + . substring ( canonicalClassName . lastIndexOf ( ' . ' ) + 1 ) ; 
 shortNames . add ( shortClassName ) ; 
 } 
 return shortNames ; 
 @ @ - 842 , 8 + 841 , 7 @ @ public class VisibilityModifierCheck 
 * / 
 private static String getClassShortName ( String canonicalClassName ) { 
 return canonicalClassName 
 - . substring ( canonicalClassName . lastIndexOf ( ' . ' ) + 1 , 
 - canonicalClassName . length ( ) ) ; 
 + . substring ( canonicalClassName . lastIndexOf ( ' . ' ) + 1 ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index 7a82a12 . . 499d810 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 87 , 7 + 87 , 6 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 * generally tend to be fine with non tight html . It can be set through config file if a check 
 * is to log violation upon encountering non - tight HTML in javadoc . 
 * 
 - * @ see ParseStatus # firstNonTightHtmlTag 
 * @ see ParseStatus # isNonTight ( ) 
 * @ see < a href = " https : / / checkstyle . org / writingjavadocchecks . html # Tight - HTML _ rules " > 
 * Tight HTML rules < / a > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 index e8d699c . . 49bf1e6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 @ @ - 156 , 10 + 156 , 9 @ @ class TagParser { 
 
 / / Character . isJavaIdentifier . . . may not be a valid HTML 
 / / identifier but is valid for generics 
 - return column < text . length ( ) 
 - & & ( Character . isJavaIdentifierStart ( text . charAt ( column ) ) 
 - | | text . charAt ( column ) = = ' / ' ) 
 - | | column > = text . length ( ) ; 
 + return column > = text . length ( ) 
 + | | Character . isJavaIdentifierStart ( text . charAt ( column ) ) 
 + | | text . charAt ( column ) = = ' / ' ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilter . java 
 index b704cec . . 45ac06e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithPlainTextCommentFilter . java 
 @ @ - 290 , 6 + 290 , 11 @ @ public class SuppressWithPlainTextCommentFilter extends AutomaticBean implements 
 } 
 } 
 
 + / * * 
 + * Indicates whether some other object is " equal to " this one . 
 + * Suppression on enumeration is needed so code stays consistent . 
 + * @ noinspection EqualsCalledOnEnumConstant 
 + * / 
 @ Override 
 public boolean equals ( Object other ) { 
 if ( this = = other ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 index af0f5b4 . . 082be1d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 @ @ - 414 , 6 + 414 , 11 @ @ public class SuppressionCommentFilter 
 return result ; 
 } 
 
 + / * * 
 + * Indicates whether some other object is " equal to " this one . 
 + * Suppression on enumeration is needed so code stays consistent . 
 + * @ noinspection EqualsCalledOnEnumConstant 
 + * / 
 @ Override 
 public boolean equals ( Object other ) { 
 if ( this = = other ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java 
 index 12d9a67 . . fdd9f47 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / TreeTableModelAdapter . java 
 @ @ - 109 , 14 + 109 , 6 @ @ public class TreeTableModelAdapter extends AbstractTableModel { 
 } 
 
 / * * 
 - * Invokes fireTableDataChanged after all the pending events have been 
 - * processed . SwingUtilities . invokeLater is used to handle this . 
 - * / 
 - private void delayedFireTableDataChanged ( ) { 
 - SwingUtilities . invokeLater ( this : : fireTableDataChanged ) ; 
 - } 
 - 
 - / * * 
 * TreeExpansionListener that can update the table when tree changes . 
 * / 
 private class UpdatingTreeExpansionListener implements TreeExpansionListener { 
 @ @ - 160 , 6 + 152 , 14 @ @ public class TreeTableModelAdapter extends AbstractTableModel { 
 delayedFireTableDataChanged ( ) ; 
 } 
 
 + / * * 
 + * Invokes fireTableDataChanged after all the pending events have been 
 + * processed . SwingUtilities . invokeLater is used to handle this . 
 + * / 
 + private void delayedFireTableDataChanged ( ) { 
 + SwingUtilities . invokeLater ( TreeTableModelAdapter . this : : fireTableDataChanged ) ; 
 + } 
 + 
 } 
 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 17f3bbd . . 42bfb23 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 582 , 10 + 582 , 9 @ @ public class MainTest { 
 . equals ( localizedMessage 
 . substring ( 0 , localizedMessage . indexOf ( ' ' ) ) ) ; 
 final boolean sameSuffix = 
 - causeMessage . substring ( causeMessage . lastIndexOf ( ' ' ) , causeMessage . length ( ) ) 
 + causeMessage . substring ( causeMessage . lastIndexOf ( ' ' ) ) 
 . equals ( localizedMessage 
 - . substring ( localizedMessage . lastIndexOf ( ' ' ) , 
 - localizedMessage . length ( ) ) ) ; 
 + . substring ( localizedMessage . lastIndexOf ( ' ' ) ) ) ; 
 assertTrue ( " Invalid error message " , samePrefix | | sameSuffix ) ; 
 assertTrue ( " Invalid error message " , causeMessage . contains ( " . ' " ) ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 index 90d16df . . ccc50e7 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 @ @ - 83 , 6 + 83 , 7 @ @ public class UniquePropertiesCheckTest extends AbstractModuleTestSupport { 
 / * * 
 * Tests the { @ link UniquePropertiesCheck # getLineNumber ( FileText , String ) } 
 * method return value . 
 + * @ noinspection JavadocReference Test javadocs should explain all . 
 * / 
 @ Test 
 public void testNotFoundKey ( ) throws Exception { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllTestsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllTestsTest . java 
 index 48e1c3a . . 4b8bdda 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllTestsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllTestsTest . java 
 @ @ - 22 , 12 + 22 , 15 @ @ package com . puppycrawl . tools . checkstyle . internal ; 
 import java . io . File ; 
 import java . io . IOException ; 
 import java . nio . file . Files ; 
 + import java . nio . file . Path ; 
 import java . nio . file . Paths ; 
 import java . util . ArrayList ; 
 import java . util . HashMap ; 
 import java . util . List ; 
 import java . util . Locale ; 
 import java . util . Map ; 
 + import java . util . function . Consumer ; 
 + import java . util . stream . Stream ; 
 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 @ @ - 42 , 38 + 45 , 39 @ @ public class AllTestsTest { 
 public void testAllInputsHaveTest ( ) throws Exception { 
 final Map < String , List < String > > allTests = new HashMap < > ( ) ; 
 
 - Files . walk ( Paths . get ( " src / test / java " ) ) 
 - . forEach ( filePath - > { 
 - grabAllTests ( allTests , filePath . toFile ( ) ) ; 
 - } ) ; 
 + walk ( Paths . get ( " src / test / java " ) , filePath - > { 
 + grabAllTests ( allTests , filePath . toFile ( ) ) ; 
 + } ) ; 
 
 Assert . assertTrue ( " found tests " , ! allTests . keySet ( ) . isEmpty ( ) ) ; 
 
 - Files . walk ( Paths . get ( " src / test / resources / com / puppycrawl " ) ) 
 - . forEach ( filePath - > { 
 - verifyInputFile ( allTests , filePath . toFile ( ) ) ; 
 - } ) ; 
 - Files . walk ( Paths . get ( " src / test / resources - noncompilable / com / puppycrawl " ) ) 
 - . forEach ( filePath - > { 
 - verifyInputFile ( allTests , filePath . toFile ( ) ) ; 
 - } ) ; 
 + walk ( Paths . get ( " src / test / resources / com / puppycrawl " ) , filePath - > { 
 + verifyInputFile ( allTests , filePath . toFile ( ) ) ; 
 + } ) ; 
 + walk ( Paths . get ( " src / test / resources - noncompilable / com / puppycrawl " ) , filePath - > { 
 + verifyInputFile ( allTests , filePath . toFile ( ) ) ; 
 + } ) ; 
 } 
 
 @ Test 
 public void testAllTestsHaveProductionCode ( ) throws Exception { 
 final Map < String , List < String > > allTests = new HashMap < > ( ) ; 
 
 - Files . walk ( Paths . get ( " src / main / java " ) ) 
 - . forEach ( filePath - > { 
 - grabAllFiles ( allTests , filePath . toFile ( ) ) ; 
 - } ) ; 
 + walk ( Paths . get ( " src / main / java " ) , filePath - > { 
 + grabAllFiles ( allTests , filePath . toFile ( ) ) ; 
 + } ) ; 
 
 Assert . assertTrue ( " found tests " , ! allTests . keySet ( ) . isEmpty ( ) ) ; 
 
 - Files . walk ( Paths . get ( " src / test / java " ) ) 
 - . forEach ( filePath - > { 
 - verifyHasProductionFile ( allTests , filePath . toFile ( ) ) ; 
 - } ) ; 
 + walk ( Paths . get ( " src / test / java " ) , filePath - > { 
 + verifyHasProductionFile ( allTests , filePath . toFile ( ) ) ; 
 + } ) ; 
 + } 
 + 
 + private static void walk ( Path path , Consumer < Path > action ) throws IOException { 
 + try ( Stream < Path > walk = Files . walk ( path ) ) { 
 + walk . forEach ( action ) ; 
 + } 
 } 
 
 private static void grabAllTests ( Map < String , List < String > > allTests , File file ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilTest . java 
 index 827bde1 . . bacc5c2 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilTest . java 
 @ @ - 149 , 7 + 149 , 7 @ @ public class TokenUtilTest { 
 
 @ Test 
 public void testTokenValueIncorrect2 ( ) throws Exception { 
 - final Integer id = 0 ; 
 + final int id = 0 ; 
 String [ ] originalValue = null ; 
 Field fieldToken = null ; 
 try { 
 @ @ - 276 , 7 + 276 , 7 @ @ public class TokenUtilTest { 
 final Optional < DetailAST > result = TokenUtil . findFirstTokenByPredicate ( astForTest , 
 ast - > " second " . equals ( ast . getText ( ) ) ) ; 
 
 - assertEquals ( " Invalid second sibling " , secondSibling , result . get ( ) ) ; 
 + assertEquals ( " Invalid second sibling " , secondSibling , result . orElse ( null ) ) ; 
 } 
 
 @ Test

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 index ac316f1 . . d28fd36 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 @ @ - 389 , 18 + 389 , 18 @ @ public final class LocalizedMessage 
 else { 
 stream = aLoader . getResourceAsStream ( resourceName ) ; 
 } 
 - ResourceBundle bundle = null ; 
 + ResourceBundle resourceBundle = null ; 
 if ( stream ! = null ) { 
 final Reader streamReader = new InputStreamReader ( stream , " UTF - 8 " ) ; 
 try { 
 / / Only this line is changed to make it to read properties files as UTF - 8 . 
 - bundle = new PropertyResourceBundle ( streamReader ) ; 
 + resourceBundle = new PropertyResourceBundle ( streamReader ) ; 
 } 
 finally { 
 stream . close ( ) ; 
 } 
 } 
 - return bundle ; 
 + return resourceBundle ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 index 66e8233 . . ecf9e6f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheck . java 
 @ @ - 138 , 7 + 138 , 7 @ @ public class HiddenFieldCheck 
 / * * Stack of sets of field names , 
 * one for each class of a set of nested classes . 
 * / 
 - private FieldFrame currentFrame ; 
 + private FieldFrame frame ; 
 
 / * * Pattern for names of variables and parameters to ignore . * / 
 private Pattern regexp ; 
 @ @ - 190 , 7 + 190 , 7 @ @ public class HiddenFieldCheck 
 
 @ Override 
 public void beginTree ( DetailAST rootAST ) { 
 - currentFrame = new FieldFrame ( null , true , null ) ; 
 + frame = new FieldFrame ( null , true , null ) ; 
 } 
 
 @ Override 
 @ @ - 232 , 7 + 232 , 7 @ @ public class HiddenFieldCheck 
 else { 
 frameName = null ; 
 } 
 - final FieldFrame frame = new FieldFrame ( currentFrame , isStaticInnerType , frameName ) ; 
 + final FieldFrame newFrame = new FieldFrame ( frame , isStaticInnerType , frameName ) ; 
 
 / / add fields to container 
 final DetailAST objBlock = ast . findFirstToken ( TokenTypes . OBJBLOCK ) ; 
 @ @ - 246 , 17 + 246 , 17 @ @ public class HiddenFieldCheck 
 final DetailAST mods = 
 child . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 if ( mods . branchContains ( TokenTypes . LITERAL _ STATIC ) ) { 
 - frame . addStaticField ( name ) ; 
 + newFrame . addStaticField ( name ) ; 
 } 
 else { 
 - frame . addInstanceField ( name ) ; 
 + newFrame . addInstanceField ( name ) ; 
 } 
 } 
 child = child . getNextSibling ( ) ; 
 } 
 } 
 / / push container 
 - currentFrame = frame ; 
 + frame = newFrame ; 
 } 
 
 @ Override 
 @ @ - 265 , 7 + 265 , 7 @ @ public class HiddenFieldCheck 
 | | ast . getType ( ) = = TokenTypes . ENUM _ DEF 
 | | ast . getType ( ) = = TokenTypes . ENUM _ CONSTANT _ DEF ) { 
 / / pop 
 - currentFrame = currentFrame . getParent ( ) ; 
 + frame = frame . getParent ( ) ; 
 } 
 } 
 
 @ @ - 300 , 8 + 300 , 8 @ @ public class HiddenFieldCheck 
 * @ return true if static or instance field 
 * / 
 private boolean isStaticOrOnstanceField ( DetailAST ast , String name ) { 
 - return currentFrame . containsStaticField ( name ) 
 - | | ! inStatic ( ast ) & & currentFrame . containsInstanceField ( name ) ; 
 + return frame . containsStaticField ( name ) 
 + | | ! inStatic ( ast ) & & frame . containsInstanceField ( name ) ; 
 } 
 
 / * * 
 @ @ - 384 , 7 + 384 , 7 @ @ public class HiddenFieldCheck 
 final DetailAST typeAST = aMethodAST . findFirstToken ( TokenTypes . TYPE ) ; 
 final String returnType = typeAST . getFirstChild ( ) . getText ( ) ; 
 if ( typeAST . branchContains ( TokenTypes . LITERAL _ VOID ) 
 - | | setterCanReturnItsClass & & currentFrame . embeddedIn ( returnType ) ) { 
 + | | setterCanReturnItsClass & & frame . embeddedIn ( returnType ) ) { 
 / / this method has signature 
 / / 
 / / void set $ { Name } ( $ { anyType } $ { name } )
