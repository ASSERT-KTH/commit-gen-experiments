BLEU SCORE: 0.0379680177759557

TEST MSG: minor : fix link to AbstractJavadocCheck . html # setJavadocTokens
GENERATED MSG: making Checker . getBasedir ( ) public ( rfe 1023004 )

TEST DIFF (one line): diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm <nl> index ff7dee5 . . 47c9cec 100644 <nl> - - - a / src / xdocs / writingjavadocchecks . xml . vm <nl> + + + b / src / xdocs / writingjavadocchecks . xml . vm <nl> @ @ - 521 , 7 + 521 , 7 @ @ java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gu <nl> < ul > <nl> <nl> < li > <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # setJavadocTokens - - " > <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # setJavadocTokens - java . lang . String . . . - " > <nl> setJavadocTokens ( ) < / a > - method then define actual set of tokens to run on . <nl> < / li > <nl> < li >
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java <nl> index 5c4dc9b . . aadbbd4 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java <nl> @ @ - 412 , 12 + 412 , 10 @ @ public class Checker extends AutomaticBean <nl> protected void fireAuditStarted ( ) <nl> { <nl> final AuditEvent evt = new AuditEvent ( this ) ; <nl> - if ( mFilters . accept ( evt ) ) { <nl> - final Iterator it = mListeners . iterator ( ) ; <nl> - while ( it . hasNext ( ) ) { <nl> - final AuditListener listener = ( AuditListener ) it . next ( ) ; <nl> - listener . auditStarted ( evt ) ; <nl> - } <nl> + final Iterator it = mListeners . iterator ( ) ; <nl> + while ( it . hasNext ( ) ) { <nl> + final AuditListener listener = ( AuditListener ) it . next ( ) ; <nl> + listener . auditStarted ( evt ) ; <nl> } <nl> } <nl> <nl> @ @ - 425 , 53 + 423 , 54 @ @ public class Checker extends AutomaticBean <nl> protected void fireAuditFinished ( ) <nl> { <nl> final AuditEvent evt = new AuditEvent ( this ) ; <nl> - if ( mFilters . accept ( evt ) ) { <nl> - final Iterator it = mListeners . iterator ( ) ; <nl> - while ( it . hasNext ( ) ) { <nl> - final AuditListener listener = ( AuditListener ) it . next ( ) ; <nl> - listener . auditFinished ( evt ) ; <nl> - } <nl> + final Iterator it = mListeners . iterator ( ) ; <nl> + while ( it . hasNext ( ) ) { <nl> + final AuditListener listener = ( AuditListener ) it . next ( ) ; <nl> + listener . auditFinished ( evt ) ; <nl> } <nl> } <nl> <nl> / * * <nl> * Notify all listeners about the beginning of a file audit . <nl> - * @ param aFileName the file to be audited <nl> + * <nl> + * @ param aFileName <nl> + * the file to be audited <nl> * / <nl> public void fireFileStarted ( String aFileName ) <nl> { <nl> final String stripped = getStrippedFileName ( aFileName ) ; <nl> final AuditEvent evt = new AuditEvent ( this , stripped ) ; <nl> - if ( mFilters . accept ( evt ) ) { <nl> - final Iterator it = mListeners . iterator ( ) ; <nl> - while ( it . hasNext ( ) ) { <nl> - final AuditListener listener = ( AuditListener ) it . next ( ) ; <nl> - listener . fileStarted ( evt ) ; <nl> - } <nl> + final Iterator it = mListeners . iterator ( ) ; <nl> + while ( it . hasNext ( ) ) { <nl> + final AuditListener listener = ( AuditListener ) it . next ( ) ; <nl> + listener . fileStarted ( evt ) ; <nl> } <nl> } <nl> <nl> / * * <nl> * Notify all listeners about the end of a file audit . <nl> - * @ param aFileName the audited file <nl> + * <nl> + * @ param aFileName <nl> + * the audited file <nl> * / <nl> public void fireFileFinished ( String aFileName ) <nl> { <nl> final String stripped = getStrippedFileName ( aFileName ) ; <nl> final AuditEvent evt = new AuditEvent ( this , stripped ) ; <nl> - if ( mFilters . accept ( evt ) ) { <nl> - final Iterator it = mListeners . iterator ( ) ; <nl> - while ( it . hasNext ( ) ) { <nl> - final AuditListener listener = ( AuditListener ) it . next ( ) ; <nl> - listener . fileFinished ( evt ) ; <nl> - } <nl> + final Iterator it = mListeners . iterator ( ) ; <nl> + while ( it . hasNext ( ) ) { <nl> + final AuditListener listener = ( AuditListener ) it . next ( ) ; <nl> + listener . fileFinished ( evt ) ; <nl> } <nl> } <nl> <nl> / * * <nl> * notify all listeners about the errors in a file . <nl> - * @ param aFileName the audited file <nl> - * @ param aErrors the audit errors from the file <nl> + * <nl> + * @ param aFileName <nl> + * the audited file <nl> + * @ param aErrors <nl> + * the audit errors from the file <nl> * / <nl> public void fireErrors ( String aFileName , LocalizedMessage [ ] aErrors ) <nl> { <nl> diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index 9e534b9 . . c5c1069 100755 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 10 , 6 + 10 , 19 @ @ <nl> <nl> < body > <nl> <nl> + < section name = " Release 4 . 0 " > <nl> + <nl> + < p > New features : < / p > <nl> + < p > Resolved bugs : < / p > <nl> + <nl> + < ul > <nl> + <nl> + < li > Fix bug with suppression filtering . ( bug 1080343 ) . < / li > <nl> + <nl> + < / ul > <nl> + <nl> + < / section > <nl> + <nl> < section name = " Release 3 . 5 " > <nl> <nl> < p > New features : < / p >

TEST DIFF:
diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm 
 index ff7dee5 . . 47c9cec 100644 
 - - - a / src / xdocs / writingjavadocchecks . xml . vm 
 + + + b / src / xdocs / writingjavadocchecks . xml . vm 
 @ @ - 521 , 7 + 521 , 7 @ @ java - cp checkstyle - $ { projectVersion } - all . jar com . puppycrawl . tools . checkstyle . gu 
 < ul > 
 
 < li > 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # setJavadocTokens - - " > 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # setJavadocTokens - java . lang . String . . . - " > 
 setJavadocTokens ( ) < / a > - method then define actual set of tokens to run on . 
 < / li > 
 < li >

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java 
 index 5c4dc9b . . aadbbd4 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java 
 @ @ - 412 , 12 + 412 , 10 @ @ public class Checker extends AutomaticBean 
 protected void fireAuditStarted ( ) 
 { 
 final AuditEvent evt = new AuditEvent ( this ) ; 
 - if ( mFilters . accept ( evt ) ) { 
 - final Iterator it = mListeners . iterator ( ) ; 
 - while ( it . hasNext ( ) ) { 
 - final AuditListener listener = ( AuditListener ) it . next ( ) ; 
 - listener . auditStarted ( evt ) ; 
 - } 
 + final Iterator it = mListeners . iterator ( ) ; 
 + while ( it . hasNext ( ) ) { 
 + final AuditListener listener = ( AuditListener ) it . next ( ) ; 
 + listener . auditStarted ( evt ) ; 
 } 
 } 
 
 @ @ - 425 , 53 + 423 , 54 @ @ public class Checker extends AutomaticBean 
 protected void fireAuditFinished ( ) 
 { 
 final AuditEvent evt = new AuditEvent ( this ) ; 
 - if ( mFilters . accept ( evt ) ) { 
 - final Iterator it = mListeners . iterator ( ) ; 
 - while ( it . hasNext ( ) ) { 
 - final AuditListener listener = ( AuditListener ) it . next ( ) ; 
 - listener . auditFinished ( evt ) ; 
 - } 
 + final Iterator it = mListeners . iterator ( ) ; 
 + while ( it . hasNext ( ) ) { 
 + final AuditListener listener = ( AuditListener ) it . next ( ) ; 
 + listener . auditFinished ( evt ) ; 
 } 
 } 
 
 / * * 
 * Notify all listeners about the beginning of a file audit . 
 - * @ param aFileName the file to be audited 
 + * 
 + * @ param aFileName 
 + * the file to be audited 
 * / 
 public void fireFileStarted ( String aFileName ) 
 { 
 final String stripped = getStrippedFileName ( aFileName ) ; 
 final AuditEvent evt = new AuditEvent ( this , stripped ) ; 
 - if ( mFilters . accept ( evt ) ) { 
 - final Iterator it = mListeners . iterator ( ) ; 
 - while ( it . hasNext ( ) ) { 
 - final AuditListener listener = ( AuditListener ) it . next ( ) ; 
 - listener . fileStarted ( evt ) ; 
 - } 
 + final Iterator it = mListeners . iterator ( ) ; 
 + while ( it . hasNext ( ) ) { 
 + final AuditListener listener = ( AuditListener ) it . next ( ) ; 
 + listener . fileStarted ( evt ) ; 
 } 
 } 
 
 / * * 
 * Notify all listeners about the end of a file audit . 
 - * @ param aFileName the audited file 
 + * 
 + * @ param aFileName 
 + * the audited file 
 * / 
 public void fireFileFinished ( String aFileName ) 
 { 
 final String stripped = getStrippedFileName ( aFileName ) ; 
 final AuditEvent evt = new AuditEvent ( this , stripped ) ; 
 - if ( mFilters . accept ( evt ) ) { 
 - final Iterator it = mListeners . iterator ( ) ; 
 - while ( it . hasNext ( ) ) { 
 - final AuditListener listener = ( AuditListener ) it . next ( ) ; 
 - listener . fileFinished ( evt ) ; 
 - } 
 + final Iterator it = mListeners . iterator ( ) ; 
 + while ( it . hasNext ( ) ) { 
 + final AuditListener listener = ( AuditListener ) it . next ( ) ; 
 + listener . fileFinished ( evt ) ; 
 } 
 } 
 
 / * * 
 * notify all listeners about the errors in a file . 
 - * @ param aFileName the audited file 
 - * @ param aErrors the audit errors from the file 
 + * 
 + * @ param aFileName 
 + * the audited file 
 + * @ param aErrors 
 + * the audit errors from the file 
 * / 
 public void fireErrors ( String aFileName , LocalizedMessage [ ] aErrors ) 
 { 
 diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index 9e534b9 . . c5c1069 100755 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 10 , 6 + 10 , 19 @ @ 
 
 < body > 
 
 + < section name = " Release 4 . 0 " > 
 + 
 + < p > New features : < / p > 
 + < p > Resolved bugs : < / p > 
 + 
 + < ul > 
 + 
 + < li > Fix bug with suppression filtering . ( bug 1080343 ) . < / li > 
 + 
 + < / ul > 
 + 
 + < / section > 
 + 
 < section name = " Release 3 . 5 " > 
 
 < p > New features : < / p >
