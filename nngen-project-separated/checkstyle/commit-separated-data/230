BLEU SCORE: 0.010122231330332757

TEST MSG: Issue # 4058 : Updated xdocs to denote that RightCurlyCheck does not process right curly brace of expression blocks
GENERATED MSG: Update the documentation .

TEST DIFF (one line): diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml <nl> index 1b2ac21 . . e9d1139 100644 <nl> - - - a / src / xdocs / config _ blocks . xml <nl> + + + b / src / xdocs / config _ blocks . xml <nl> @ @ - 867 , 6 + 867 , 8 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK <nl> method definitions , class definitions , constructor definitions , <nl> instance and static initialization blocks . <nl> The policy to verify is specified using the property < code > option < / code > . <nl> + For right curly brace of expression blocks please follow issue <nl> + < a href = " https : / / github . com / checkstyle / checkstyle / issues / 5945 " > # 5945 < / a > . <nl> < / p > <nl> < / subsection > <nl> <nl> diff - - git a / src / xdocs / property _ types . xml b / src / xdocs / property _ types . xml <nl> index 800950f . . 202bc9a 100644 <nl> - - - a / src / xdocs / property _ types . xml <nl> + + + b / src / xdocs / property _ types . xml <nl> @ @ - 313 , 8 + 313 , 10 @ @ <nl> < section name = " rcurly " > <nl> < p > <nl> This property represents the policy for checking the placement of a <nl> - right curly brace ( < code > ' } ' < / code > ) . The following table <nl> - describes the valid options : <nl> + right curly brace ( < code > ' } ' < / code > ) in blocks but not blocks of expressions . <nl> + For right curly brace of expression blocks please follow issue <nl> + < a href = " https : / / github . com / checkstyle / checkstyle / issues / 5945 " > # 5945 < / a > . The following <nl> + table describes the valid options : <nl> < / p > <nl> <nl> < table summary = " right curly options " >
NEAREST DIFF (one line): diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / tests / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> index e5a9b9f . . 6396368 100755 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> @ @ - 23 , 10 + 23 , 6 @ @ import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> import com . google . common . collect . Sets ; <nl> - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> - import com . puppycrawl . tools . checkstyle . api . AuditListener ; <nl> - import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> - import com . puppycrawl . tools . checkstyle . api . Filter ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> import java . io . File ; <nl> import java . util . TreeSet ; <nl> @ @ - 240 , 96 + 236 , 3 @ @ public class CheckerTest <nl> <nl> } <nl> } <nl> - <nl> - / / Utility classes <nl> - class DebugChecker extends Checker <nl> - { <nl> - public DebugChecker ( ) throws CheckstyleException <nl> - { <nl> - super ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void fireAuditFinished ( ) <nl> - { <nl> - super . fireAuditFinished ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void fireAuditStarted ( ) <nl> - { <nl> - super . fireAuditStarted ( ) ; <nl> - } <nl> - } <nl> - class DebugAuditAdapter implements AuditListener <nl> - { <nl> - / * * keeps track of the number of errors * / <nl> - private boolean mCalled ; <nl> - <nl> - public boolean wasCalled ( ) <nl> - { <nl> - return mCalled ; <nl> - } <nl> - <nl> - public void resetListener ( ) <nl> - { <nl> - mCalled = false ; <nl> - } <nl> - <nl> - / * * @ see AuditListener * / <nl> - public void addError ( AuditEvent aEvt ) <nl> - { <nl> - mCalled = true ; <nl> - } <nl> - <nl> - / * * @ see AuditListener * / <nl> - public void addException ( AuditEvent aEvt , Throwable aThrowable ) <nl> - { <nl> - mCalled = true ; <nl> - } <nl> - <nl> - / * * @ see AuditListener * / <nl> - public void auditStarted ( AuditEvent aEvt ) <nl> - { <nl> - mCalled = true ; <nl> - } <nl> - <nl> - / * * @ see AuditListener * / <nl> - public void fileStarted ( AuditEvent aEvt ) <nl> - { <nl> - mCalled = true ; <nl> - } <nl> - <nl> - / * * @ see AuditListener * / <nl> - public void auditFinished ( AuditEvent aEvt ) <nl> - { <nl> - mCalled = true ; <nl> - } <nl> - <nl> - / * * @ see AuditListener * / <nl> - public void fileFinished ( AuditEvent aEvt ) <nl> - { <nl> - mCalled = true ; <nl> - } <nl> - } <nl> - <nl> - class DebugFilter implements Filter <nl> - { <nl> - private boolean mCalled ; <nl> - <nl> - public boolean accept ( AuditEvent aEvent ) <nl> - { <nl> - mCalled = true ; <nl> - return true ; <nl> - } <nl> - <nl> - public boolean wasCalled ( ) <nl> - { <nl> - return mCalled ; <nl> - } <nl> - <nl> - public void resetFilter ( ) <nl> - { <nl> - mCalled = false ; <nl> - } <nl> - } <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java b / src / tests / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java <nl> new file mode 100644 <nl> index 0000000 . . 3a0108d <nl> - - - / dev / null <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java <nl> @ @ - 0 , 0 + 1 , 61 @ @ <nl> + / * <nl> + * To change this template , choose Tools | Templates <nl> + * and open the template in the editor . <nl> + * / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . api . AuditListener ; <nl> + <nl> + class DebugAuditAdapter implements AuditListener <nl> + { <nl> + / * * keeps track of the number of errors * / <nl> + private boolean mCalled ; <nl> + <nl> + public boolean wasCalled ( ) <nl> + { <nl> + return mCalled ; <nl> + } <nl> + <nl> + public void resetListener ( ) <nl> + { <nl> + mCalled = false ; <nl> + } <nl> + <nl> + / * * @ see AuditListener * / <nl> + public void addError ( AuditEvent aEvt ) <nl> + { <nl> + mCalled = true ; <nl> + } <nl> + <nl> + / * * @ see AuditListener * / <nl> + public void addException ( AuditEvent aEvt , Throwable aThrowable ) <nl> + { <nl> + mCalled = true ; <nl> + } <nl> + <nl> + / * * @ see AuditListener * / <nl> + public void auditStarted ( AuditEvent aEvt ) <nl> + { <nl> + mCalled = true ; <nl> + } <nl> + <nl> + / * * @ see AuditListener * / <nl> + public void fileStarted ( AuditEvent aEvt ) <nl> + { <nl> + mCalled = true ; <nl> + } <nl> + <nl> + / * * @ see AuditListener * / <nl> + public void auditFinished ( AuditEvent aEvt ) <nl> + { <nl> + mCalled = true ; <nl> + } <nl> + <nl> + / * * @ see AuditListener * / <nl> + public void fileFinished ( AuditEvent aEvt ) <nl> + { <nl> + mCalled = true ; <nl> + } <nl> + } <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / DebugChecker . java b / src / tests / com / puppycrawl / tools / checkstyle / DebugChecker . java <nl> new file mode 100644 <nl> index 0000000 . . a97421a <nl> - - - / dev / null <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / DebugChecker . java <nl> @ @ - 0 , 0 + 1 , 27 @ @ <nl> + / * <nl> + * To change this template , choose Tools | Templates <nl> + * and open the template in the editor . <nl> + * / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> + <nl> + class DebugChecker extends Checker <nl> + { <nl> + public DebugChecker ( ) throws CheckstyleException <nl> + { <nl> + } <nl> + <nl> + @ Override <nl> + public void fireAuditFinished ( ) <nl> + { <nl> + super . fireAuditFinished ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void fireAuditStarted ( ) <nl> + { <nl> + super . fireAuditStarted ( ) ; <nl> + } <nl> + } <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / DebugFilter . java b / src / tests / com / puppycrawl / tools / checkstyle / DebugFilter . java <nl> new file mode 100644 <nl> index 0000000 . . f9c66e7 <nl> - - - / dev / null <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / DebugFilter . java <nl> @ @ - 0 , 0 + 1 , 30 @ @ <nl> + / * <nl> + * To change this template , choose Tools | Templates <nl> + * and open the template in the editor . <nl> + * / <nl> + <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . api . Filter ; <nl> + <nl> + class DebugFilter implements Filter <nl> + { <nl> + private boolean mCalled ; <nl> + <nl> + public boolean accept ( AuditEvent aEvent ) <nl> + { <nl> + mCalled = true ; <nl> + return true ; <nl> + } <nl> + <nl> + public boolean wasCalled ( ) <nl> + { <nl> + return mCalled ; <nl> + } <nl> + <nl> + public void resetFilter ( ) <nl> + { <nl> + mCalled = false ; <nl> + } <nl> + } <nl> diff - - git a / suppressions . xml b / suppressions . xml <nl> index 8ebdc68 . . 1a3c71c 100755 <nl> - - - a / suppressions . xml <nl> + + + b / suppressions . xml <nl> @ @ - 32 , 6 + 32 , 8 @ @ <nl> < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > <nl> < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > <nl> < suppress checks = " MagicNumber " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > <nl> + < suppress checks = " MethodCount " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > <nl> + < suppress checks = " EqualsAvoidNull " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > <nl> <nl> < ! - - suppressions to remove over time - - > <nl> < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / >

TEST DIFF:
diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml 
 index 1b2ac21 . . e9d1139 100644 
 - - - a / src / xdocs / config _ blocks . xml 
 + + + b / src / xdocs / config _ blocks . xml 
 @ @ - 867 , 6 + 867 , 8 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK 
 method definitions , class definitions , constructor definitions , 
 instance and static initialization blocks . 
 The policy to verify is specified using the property < code > option < / code > . 
 + For right curly brace of expression blocks please follow issue 
 + < a href = " https : / / github . com / checkstyle / checkstyle / issues / 5945 " > # 5945 < / a > . 
 < / p > 
 < / subsection > 
 
 diff - - git a / src / xdocs / property _ types . xml b / src / xdocs / property _ types . xml 
 index 800950f . . 202bc9a 100644 
 - - - a / src / xdocs / property _ types . xml 
 + + + b / src / xdocs / property _ types . xml 
 @ @ - 313 , 8 + 313 , 10 @ @ 
 < section name = " rcurly " > 
 < p > 
 This property represents the policy for checking the placement of a 
 - right curly brace ( < code > ' } ' < / code > ) . The following table 
 - describes the valid options : 
 + right curly brace ( < code > ' } ' < / code > ) in blocks but not blocks of expressions . 
 + For right curly brace of expression blocks please follow issue 
 + < a href = " https : / / github . com / checkstyle / checkstyle / issues / 5945 " > # 5945 < / a > . The following 
 + table describes the valid options : 
 < / p > 
 
 < table summary = " right curly options " >

NEAREST DIFF:
diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / tests / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 index e5a9b9f . . 6396368 100755 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 @ @ - 23 , 10 + 23 , 6 @ @ import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 
 import com . google . common . collect . Sets ; 
 - import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 - import com . puppycrawl . tools . checkstyle . api . AuditListener ; 
 - import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 - import com . puppycrawl . tools . checkstyle . api . Filter ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 import java . io . File ; 
 import java . util . TreeSet ; 
 @ @ - 240 , 96 + 236 , 3 @ @ public class CheckerTest 
 
 } 
 } 
 - 
 - / / Utility classes 
 - class DebugChecker extends Checker 
 - { 
 - public DebugChecker ( ) throws CheckstyleException 
 - { 
 - super ( ) ; 
 - } 
 - 
 - @ Override 
 - public void fireAuditFinished ( ) 
 - { 
 - super . fireAuditFinished ( ) ; 
 - } 
 - 
 - @ Override 
 - public void fireAuditStarted ( ) 
 - { 
 - super . fireAuditStarted ( ) ; 
 - } 
 - } 
 - class DebugAuditAdapter implements AuditListener 
 - { 
 - / * * keeps track of the number of errors * / 
 - private boolean mCalled ; 
 - 
 - public boolean wasCalled ( ) 
 - { 
 - return mCalled ; 
 - } 
 - 
 - public void resetListener ( ) 
 - { 
 - mCalled = false ; 
 - } 
 - 
 - / * * @ see AuditListener * / 
 - public void addError ( AuditEvent aEvt ) 
 - { 
 - mCalled = true ; 
 - } 
 - 
 - / * * @ see AuditListener * / 
 - public void addException ( AuditEvent aEvt , Throwable aThrowable ) 
 - { 
 - mCalled = true ; 
 - } 
 - 
 - / * * @ see AuditListener * / 
 - public void auditStarted ( AuditEvent aEvt ) 
 - { 
 - mCalled = true ; 
 - } 
 - 
 - / * * @ see AuditListener * / 
 - public void fileStarted ( AuditEvent aEvt ) 
 - { 
 - mCalled = true ; 
 - } 
 - 
 - / * * @ see AuditListener * / 
 - public void auditFinished ( AuditEvent aEvt ) 
 - { 
 - mCalled = true ; 
 - } 
 - 
 - / * * @ see AuditListener * / 
 - public void fileFinished ( AuditEvent aEvt ) 
 - { 
 - mCalled = true ; 
 - } 
 - } 
 - 
 - class DebugFilter implements Filter 
 - { 
 - private boolean mCalled ; 
 - 
 - public boolean accept ( AuditEvent aEvent ) 
 - { 
 - mCalled = true ; 
 - return true ; 
 - } 
 - 
 - public boolean wasCalled ( ) 
 - { 
 - return mCalled ; 
 - } 
 - 
 - public void resetFilter ( ) 
 - { 
 - mCalled = false ; 
 - } 
 - } 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java b / src / tests / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java 
 new file mode 100644 
 index 0000000 . . 3a0108d 
 - - - / dev / null 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / DebugAuditAdapter . java 
 @ @ - 0 , 0 + 1 , 61 @ @ 
 + / * 
 + * To change this template , choose Tools | Templates 
 + * and open the template in the editor . 
 + * / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . api . AuditListener ; 
 + 
 + class DebugAuditAdapter implements AuditListener 
 + { 
 + / * * keeps track of the number of errors * / 
 + private boolean mCalled ; 
 + 
 + public boolean wasCalled ( ) 
 + { 
 + return mCalled ; 
 + } 
 + 
 + public void resetListener ( ) 
 + { 
 + mCalled = false ; 
 + } 
 + 
 + / * * @ see AuditListener * / 
 + public void addError ( AuditEvent aEvt ) 
 + { 
 + mCalled = true ; 
 + } 
 + 
 + / * * @ see AuditListener * / 
 + public void addException ( AuditEvent aEvt , Throwable aThrowable ) 
 + { 
 + mCalled = true ; 
 + } 
 + 
 + / * * @ see AuditListener * / 
 + public void auditStarted ( AuditEvent aEvt ) 
 + { 
 + mCalled = true ; 
 + } 
 + 
 + / * * @ see AuditListener * / 
 + public void fileStarted ( AuditEvent aEvt ) 
 + { 
 + mCalled = true ; 
 + } 
 + 
 + / * * @ see AuditListener * / 
 + public void auditFinished ( AuditEvent aEvt ) 
 + { 
 + mCalled = true ; 
 + } 
 + 
 + / * * @ see AuditListener * / 
 + public void fileFinished ( AuditEvent aEvt ) 
 + { 
 + mCalled = true ; 
 + } 
 + } 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / DebugChecker . java b / src / tests / com / puppycrawl / tools / checkstyle / DebugChecker . java 
 new file mode 100644 
 index 0000000 . . a97421a 
 - - - / dev / null 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / DebugChecker . java 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + / * 
 + * To change this template , choose Tools | Templates 
 + * and open the template in the editor . 
 + * / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 + 
 + class DebugChecker extends Checker 
 + { 
 + public DebugChecker ( ) throws CheckstyleException 
 + { 
 + } 
 + 
 + @ Override 
 + public void fireAuditFinished ( ) 
 + { 
 + super . fireAuditFinished ( ) ; 
 + } 
 + 
 + @ Override 
 + public void fireAuditStarted ( ) 
 + { 
 + super . fireAuditStarted ( ) ; 
 + } 
 + } 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / DebugFilter . java b / src / tests / com / puppycrawl / tools / checkstyle / DebugFilter . java 
 new file mode 100644 
 index 0000000 . . f9c66e7 
 - - - / dev / null 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / DebugFilter . java 
 @ @ - 0 , 0 + 1 , 30 @ @ 
 + / * 
 + * To change this template , choose Tools | Templates 
 + * and open the template in the editor . 
 + * / 
 + 
 + package com . puppycrawl . tools . checkstyle ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 + import com . puppycrawl . tools . checkstyle . api . Filter ; 
 + 
 + class DebugFilter implements Filter 
 + { 
 + private boolean mCalled ; 
 + 
 + public boolean accept ( AuditEvent aEvent ) 
 + { 
 + mCalled = true ; 
 + return true ; 
 + } 
 + 
 + public boolean wasCalled ( ) 
 + { 
 + return mCalled ; 
 + } 
 + 
 + public void resetFilter ( ) 
 + { 
 + mCalled = false ; 
 + } 
 + } 
 diff - - git a / suppressions . xml b / suppressions . xml 
 index 8ebdc68 . . 1a3c71c 100755 
 - - - a / suppressions . xml 
 + + + b / suppressions . xml 
 @ @ - 32 , 6 + 32 , 8 @ @ 
 < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > 
 < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > 
 < suppress checks = " MagicNumber " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > 
 + < suppress checks = " MethodCount " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > 
 + < suppress checks = " EqualsAvoidNull " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / > 
 
 < ! - - suppressions to remove over time - - > 
 < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] tests [ \ \ / ] " / >
