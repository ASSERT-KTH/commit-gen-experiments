BLEU SCORE: 0.04205516508352109

TEST MSG: Issue # 4927 : Use atomic counter to allow multi - thread access
GENERATED MSG: Added attributes maxErrors and maxWarnings to Ant task to allow finetuning of failure behaviour ( request 783538 )

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounter . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounter . java <nl> index dfa83e7 . . 93f2093 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounter . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> + import java . util . concurrent . atomic . AtomicInteger ; <nl> + <nl> / * * <nl> * An audit listener that counts how many { @ link AuditEvent AuditEvents } <nl> * of a given severity have been generated . <nl> @ @ - 30 , 7 + 32 , 7 @ @ public final class SeverityLevelCounter implements AuditListener { <nl> private final SeverityLevel level ; <nl> <nl> / * * Keeps track of the number of counted events . * / <nl> - private int count ; <nl> + private final AtomicInteger count = new AtomicInteger ( ) ; <nl> <nl> / * * <nl> * Creates a new counter . <nl> @ @ - 46 , 20 + 48 , 20 @ @ public final class SeverityLevelCounter implements AuditListener { <nl> @ Override <nl> public void addError ( AuditEvent event ) { <nl> if ( level = = event . getSeverityLevel ( ) ) { <nl> - count + + ; <nl> + count . incrementAndGet ( ) ; <nl> } <nl> } <nl> <nl> @ Override <nl> public void addException ( AuditEvent event , Throwable throwable ) { <nl> if ( level = = SeverityLevel . ERROR ) { <nl> - count + + ; <nl> + count . incrementAndGet ( ) ; <nl> } <nl> } <nl> <nl> @ Override <nl> public void auditStarted ( AuditEvent event ) { <nl> - count = 0 ; <nl> + count . set ( 0 ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 82 , 6 + 84 , 6 @ @ public final class SeverityLevelCounter implements AuditListener { <nl> * @ return the number of counted events since audit started . <nl> * / <nl> public int getCount ( ) { <nl> - return count ; <nl> + return count . get ( ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / docs / releasenotes . html b / docs / releasenotes . html <nl> index 92b2397 . . ad5ca14 100644 <nl> - - - a / docs / releasenotes . html <nl> + + + b / docs / releasenotes . html <nl> @ @ - 168 , 8 + 168 , 11 @ @ <nl> ( bug 890706 ) < / li > <nl> <nl> < li class = " body " > Conflict between ParenPad and <nl> - NoWhiteSpaceBefore when code uses empty for loop initializers . ( bug 895072 ) <nl> - < / li > <nl> + NoWhiteSpaceBefore when code uses empty for loop <nl> + initializers . ( bug 895072 ) < / li > <nl> + <nl> + < li class = " body " > Fixed JavadocStyleCheck to handle inline <nl> + javadoc tags correctly ( bug 897749 ) < / li > <nl> <nl> < / ul > <nl> <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> index 328a38c . . 13c621a 100755 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> @ @ - 185 , 17 + 185 , 12 @ @ public class JavadocStyleCheck <nl> final int textStart = findTextStart ( line ) ; <nl> <nl> if ( textStart ! = - 1 ) { <nl> - / / Look for Javadoc tag that ' s neither a @ link nor a <nl> - / / @ inheritDoc since they can appear <nl> - / / within the comment text . <nl> + / / Look for Javadoc tag that ' s not an inline tag <nl> + / / it can appear within the comment text . <nl> + / / Inline tags are denoted by curly braces : { @ tag } <nl> final int ndx = line . indexOf ( ' @ ' ) ; <nl> if ( ( ndx ! = - 1 ) <nl> - & & ! line . regionMatches ( ndx + 1 , " link " , 0 , " link " . length ( ) ) <nl> - & & ! line . regionMatches ( <nl> - ndx + 1 , <nl> - " inheritDoc " , <nl> - 0 , <nl> - " inheritDoc " . length ( ) ) ) <nl> + & & ( ndx = = 0 | | line . charAt ( ndx - 1 ) ! = ' { ' ) ) <nl> { <nl> foundTag = true ; <nl> line = line . substring ( 0 , ndx ) ; <nl> diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / InputJavadocStyleCheck . java b / src / testinputs / com / puppycrawl / tools / checkstyle / InputJavadocStyleCheck . java <nl> index e8a440e . . 769d8d6 100755 <nl> - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / InputJavadocStyleCheck . java <nl> + + + b / src / testinputs / com / puppycrawl / tools / checkstyle / InputJavadocStyleCheck . java <nl> @ @ - 198 , 4 + 198 , 7 @ @ public class InputJavadocStyleCheck <nl> private void method15 ( ) <nl> { / / should report unended first sentance ( check line number of the error ) <nl> } <nl> + <nl> + / * * Description of field : { @ value } . * / <nl> + public static final int dummy = 4911 ; <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounter . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounter . java 
 index dfa83e7 . . 93f2093 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounter . java 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 + import java . util . concurrent . atomic . AtomicInteger ; 
 + 
 / * * 
 * An audit listener that counts how many { @ link AuditEvent AuditEvents } 
 * of a given severity have been generated . 
 @ @ - 30 , 7 + 32 , 7 @ @ public final class SeverityLevelCounter implements AuditListener { 
 private final SeverityLevel level ; 
 
 / * * Keeps track of the number of counted events . * / 
 - private int count ; 
 + private final AtomicInteger count = new AtomicInteger ( ) ; 
 
 / * * 
 * Creates a new counter . 
 @ @ - 46 , 20 + 48 , 20 @ @ public final class SeverityLevelCounter implements AuditListener { 
 @ Override 
 public void addError ( AuditEvent event ) { 
 if ( level = = event . getSeverityLevel ( ) ) { 
 - count + + ; 
 + count . incrementAndGet ( ) ; 
 } 
 } 
 
 @ Override 
 public void addException ( AuditEvent event , Throwable throwable ) { 
 if ( level = = SeverityLevel . ERROR ) { 
 - count + + ; 
 + count . incrementAndGet ( ) ; 
 } 
 } 
 
 @ Override 
 public void auditStarted ( AuditEvent event ) { 
 - count = 0 ; 
 + count . set ( 0 ) ; 
 } 
 
 @ Override 
 @ @ - 82 , 6 + 84 , 6 @ @ public final class SeverityLevelCounter implements AuditListener { 
 * @ return the number of counted events since audit started . 
 * / 
 public int getCount ( ) { 
 - return count ; 
 + return count . get ( ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / docs / releasenotes . html b / docs / releasenotes . html 
 index 92b2397 . . ad5ca14 100644 
 - - - a / docs / releasenotes . html 
 + + + b / docs / releasenotes . html 
 @ @ - 168 , 8 + 168 , 11 @ @ 
 ( bug 890706 ) < / li > 
 
 < li class = " body " > Conflict between ParenPad and 
 - NoWhiteSpaceBefore when code uses empty for loop initializers . ( bug 895072 ) 
 - < / li > 
 + NoWhiteSpaceBefore when code uses empty for loop 
 + initializers . ( bug 895072 ) < / li > 
 + 
 + < li class = " body " > Fixed JavadocStyleCheck to handle inline 
 + javadoc tags correctly ( bug 897749 ) < / li > 
 
 < / ul > 
 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 index 328a38c . . 13c621a 100755 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 @ @ - 185 , 17 + 185 , 12 @ @ public class JavadocStyleCheck 
 final int textStart = findTextStart ( line ) ; 
 
 if ( textStart ! = - 1 ) { 
 - / / Look for Javadoc tag that ' s neither a @ link nor a 
 - / / @ inheritDoc since they can appear 
 - / / within the comment text . 
 + / / Look for Javadoc tag that ' s not an inline tag 
 + / / it can appear within the comment text . 
 + / / Inline tags are denoted by curly braces : { @ tag } 
 final int ndx = line . indexOf ( ' @ ' ) ; 
 if ( ( ndx ! = - 1 ) 
 - & & ! line . regionMatches ( ndx + 1 , " link " , 0 , " link " . length ( ) ) 
 - & & ! line . regionMatches ( 
 - ndx + 1 , 
 - " inheritDoc " , 
 - 0 , 
 - " inheritDoc " . length ( ) ) ) 
 + & & ( ndx = = 0 | | line . charAt ( ndx - 1 ) ! = ' { ' ) ) 
 { 
 foundTag = true ; 
 line = line . substring ( 0 , ndx ) ; 
 diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / InputJavadocStyleCheck . java b / src / testinputs / com / puppycrawl / tools / checkstyle / InputJavadocStyleCheck . java 
 index e8a440e . . 769d8d6 100755 
 - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / InputJavadocStyleCheck . java 
 + + + b / src / testinputs / com / puppycrawl / tools / checkstyle / InputJavadocStyleCheck . java 
 @ @ - 198 , 4 + 198 , 7 @ @ public class InputJavadocStyleCheck 
 private void method15 ( ) 
 { / / should report unended first sentance ( check line number of the error ) 
 } 
 + 
 + / * * Description of field : { @ value } . * / 
 + public static final int dummy = 4911 ; 
 }
