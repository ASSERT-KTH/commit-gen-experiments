BLEU SCORE: 0.08070022674930981

TEST MSG: Issue # 4630 : fixed exception in ModifiedControlVariable for enhanced for
GENERATED MSG: Issue # 3334 : fixed RequireThis when can ' t find end block token

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java <nl> index fc37faa . . 3926362 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java <nl> @ @ - 330 , 8 + 330 , 10 @ @ public final class ModifiedControlVariableCheck extends AbstractCheck { <nl> private void leaveForDef ( DetailAST ast ) { <nl> final DetailAST forInitAST = ast . findFirstToken ( TokenTypes . FOR _ INIT ) ; <nl> if ( forInitAST = = null ) { <nl> - / / this is for - each loop , just pop variables <nl> - getCurrentVariables ( ) . pop ( ) ; <nl> + if ( ! skipEnhancedForLoopVariable ) { <nl> + / / this is for - each loop , just pop variables <nl> + getCurrentVariables ( ) . pop ( ) ; <nl> + } <nl> } <nl> else { <nl> final Set < String > variablesManagedByForLoop = getVariablesManagedByForLoop ( ast ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java <nl> index 13f47e8 . . c894166 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java <nl> @ @ - 78 , 6 + 78 , 19 @ @ public class ModifiedControlVariableCheckTest <nl> } <nl> <nl> @ Test <nl> + public void testEnhancedForLoopVariable2 ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createModuleConfig ( ModifiedControlVariableCheck . class ) ; <nl> + checkConfig . addAttribute ( " skipEnhancedForLoopVariable " , " true " ) ; <nl> + <nl> + final String [ ] expected = { <nl> + " 14 : 18 : " + getCheckMessage ( MSG _ KEY , " i " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputModifiedControlVariableEnhancedForLoopVariable2 . java " ) , <nl> + expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testTokensNotNull ( ) { <nl> final ModifiedControlVariableCheck check = new ModifiedControlVariableCheck ( ) ; <nl> Assert . assertNotNull ( " Acceptable tokens should not be null " , check . getAcceptableTokens ( ) ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / modifiedcontrolvariable / InputModifiedControlVariableEnhancedForLoopVariable2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / modifiedcontrolvariable / InputModifiedControlVariableEnhancedForLoopVariable2 . java <nl> new file mode 100644 <nl> index 0000000 . . 9c46853 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / modifiedcontrolvariable / InputModifiedControlVariableEnhancedForLoopVariable2 . java <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding . modifiedcontrolvariable ; <nl> + <nl> + public class InputModifiedControlVariableEnhancedForLoopVariable2 { <nl> + void m ( int [ ] a ) { <nl> + for ( int i = 0 , j = 1 ; ; i + + , j + + ) { <nl> + for ( int k : a ) { <nl> + } <nl> + } <nl> + } <nl> + <nl> + void m2 ( int [ ] a ) { <nl> + for ( int i = 0 , j = 1 ; ; i + + , j + + ) { <nl> + for ( int k : a ) { <nl> + i + + ; <nl> + } <nl> + } <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm <nl> index e43ddcd . . 293fd84 100644 <nl> - - - a / src / xdocs / writingjavadocchecks . xml . vm <nl> + + + b / src / xdocs / writingjavadocchecks . xml . vm <nl> @ @ - 287 , 6 + 287 , 13 @ @ class MyCheck extends AbstractJavadocCheck { <nl> Void HTML elements : & lt ; AREA & gt ; , & lt ; BASE & gt ; , & lt ; BASEFONT & gt ; , & lt ; BR & gt ; , & lt ; COL & gt ; , & lt ; FRAME & gt ; , <nl> & lt ; HR & gt ; , & lt ; IMG & gt ; , & lt ; INPUT & gt ; , & lt ; ISINDEX & gt ; , & lt ; LINK & gt ; , & lt ; META & gt ; , & lt ; PARAM & gt ; . <nl> < / p > <nl> + <nl> + < p > <nl> + To make Checkstyle support HTML5 tags whose end tag is optional and HTML5 void elements we should update Javadoc Parser <nl> + bacause each element that breaks < a href = " # XHTML - style _ rules " > XHTML - style rules < / a > have to be defined in Javadoc grammar . <nl> + In future we should update Javadoc grammar if those tag lists extend ( new tags , new HTML standard , etc . ) . <nl> + < / p > <nl> + <nl> < p > <nl> If Checkstyle meets unknown tag ( for example HTML5 tag ) <nl> it doesn ' t fail and parses this tag as < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # HTML _ TAG " > HTML _ TAG < / a > Javadoc token type .

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java 
 index fc37faa . . 3926362 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java 
 @ @ - 330 , 8 + 330 , 10 @ @ public final class ModifiedControlVariableCheck extends AbstractCheck { 
 private void leaveForDef ( DetailAST ast ) { 
 final DetailAST forInitAST = ast . findFirstToken ( TokenTypes . FOR _ INIT ) ; 
 if ( forInitAST = = null ) { 
 - / / this is for - each loop , just pop variables 
 - getCurrentVariables ( ) . pop ( ) ; 
 + if ( ! skipEnhancedForLoopVariable ) { 
 + / / this is for - each loop , just pop variables 
 + getCurrentVariables ( ) . pop ( ) ; 
 + } 
 } 
 else { 
 final Set < String > variablesManagedByForLoop = getVariablesManagedByForLoop ( ast ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java 
 index 13f47e8 . . c894166 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheckTest . java 
 @ @ - 78 , 6 + 78 , 19 @ @ public class ModifiedControlVariableCheckTest 
 } 
 
 @ Test 
 + public void testEnhancedForLoopVariable2 ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createModuleConfig ( ModifiedControlVariableCheck . class ) ; 
 + checkConfig . addAttribute ( " skipEnhancedForLoopVariable " , " true " ) ; 
 + 
 + final String [ ] expected = { 
 + " 14 : 18 : " + getCheckMessage ( MSG _ KEY , " i " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputModifiedControlVariableEnhancedForLoopVariable2 . java " ) , 
 + expected ) ; 
 + } 
 + 
 + @ Test 
 public void testTokensNotNull ( ) { 
 final ModifiedControlVariableCheck check = new ModifiedControlVariableCheck ( ) ; 
 Assert . assertNotNull ( " Acceptable tokens should not be null " , check . getAcceptableTokens ( ) ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / modifiedcontrolvariable / InputModifiedControlVariableEnhancedForLoopVariable2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / modifiedcontrolvariable / InputModifiedControlVariableEnhancedForLoopVariable2 . java 
 new file mode 100644 
 index 0000000 . . 9c46853 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / modifiedcontrolvariable / InputModifiedControlVariableEnhancedForLoopVariable2 . java 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding . modifiedcontrolvariable ; 
 + 
 + public class InputModifiedControlVariableEnhancedForLoopVariable2 { 
 + void m ( int [ ] a ) { 
 + for ( int i = 0 , j = 1 ; ; i + + , j + + ) { 
 + for ( int k : a ) { 
 + } 
 + } 
 + } 
 + 
 + void m2 ( int [ ] a ) { 
 + for ( int i = 0 , j = 1 ; ; i + + , j + + ) { 
 + for ( int k : a ) { 
 + i + + ; 
 + } 
 + } 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm 
 index e43ddcd . . 293fd84 100644 
 - - - a / src / xdocs / writingjavadocchecks . xml . vm 
 + + + b / src / xdocs / writingjavadocchecks . xml . vm 
 @ @ - 287 , 6 + 287 , 13 @ @ class MyCheck extends AbstractJavadocCheck { 
 Void HTML elements : & lt ; AREA & gt ; , & lt ; BASE & gt ; , & lt ; BASEFONT & gt ; , & lt ; BR & gt ; , & lt ; COL & gt ; , & lt ; FRAME & gt ; , 
 & lt ; HR & gt ; , & lt ; IMG & gt ; , & lt ; INPUT & gt ; , & lt ; ISINDEX & gt ; , & lt ; LINK & gt ; , & lt ; META & gt ; , & lt ; PARAM & gt ; . 
 < / p > 
 + 
 + < p > 
 + To make Checkstyle support HTML5 tags whose end tag is optional and HTML5 void elements we should update Javadoc Parser 
 + bacause each element that breaks < a href = " # XHTML - style _ rules " > XHTML - style rules < / a > have to be defined in Javadoc grammar . 
 + In future we should update Javadoc grammar if those tag lists extend ( new tags , new HTML standard , etc . ) . 
 + < / p > 
 + 
 < p > 
 If Checkstyle meets unknown tag ( for example HTML5 tag ) 
 it doesn ' t fail and parses this tag as < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # HTML _ TAG " > HTML _ TAG < / a > Javadoc token type .
