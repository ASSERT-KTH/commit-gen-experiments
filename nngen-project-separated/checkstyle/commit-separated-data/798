BLEU SCORE: 0.09031247306005741

TEST MSG: Issue # 4314 : Package design cleanup
GENERATED MSG: Issue # 4314 : Split and Organize Checkstyle inputs by Test for checks in design package : MutableException

TEST DIFF (one line): diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputGregorianCalendar . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputGregorianCalendar . java <nl> deleted file mode 100644 <nl> index 629dc3b . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputGregorianCalendar . java <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - public class InputGregorianCalendar <nl> - { <nl> - class SubCalendar { <nl> - <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInner . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInner . java <nl> deleted file mode 100644 <nl> index 3459fe6 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInner . java <nl> + + + / dev / null <nl> @ @ - 1 , 79 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2001 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - / * * <nl> - * Tests having inner types <nl> - * @ author Oliver Burn <nl> - * * / <nl> - class InputInner <nl> - { <nl> - / / Ignore - two errors <nl> - class InnerInner2 <nl> - { <nl> - / / Ignore <nl> - public int fData ; <nl> - } <nl> - <nl> - / / Ignore - 2 errors <nl> - interface InnerInterface2 <nl> - { <nl> - / / Ignore - should be all upper case <nl> - String data = " zxzc " ; <nl> - <nl> - / / Ignore <nl> - class InnerInterfaceInnerClass <nl> - { <nl> - / / Ignore - need Javadoc and made private <nl> - public int rData ; <nl> - <nl> - / * * needs to be made private unless allowProtected . * / <nl> - protected int protectedVariable ; <nl> - <nl> - / * * needs to be made private unless allowPackage . * / <nl> - int packageVariable ; <nl> - } <nl> - } <nl> - <nl> - / * * demonstrate bug in handling static final * * / <nl> - protected static Object sWeird = new Object ( ) ; <nl> - / * * demonstrate bug in handling static final * * / <nl> - static Object sWeird2 = new Object ( ) ; <nl> - <nl> - / * * demonstrate bug in local final variable * / <nl> - public interface Inter <nl> - { <nl> - } <nl> - <nl> - public static void main ( ) <nl> - { <nl> - Inter m = new Inter ( ) <nl> - { <nl> - private static final int CDS = 1 ; <nl> - <nl> - private int ABC ; <nl> - } ; <nl> - } <nl> - <nl> - / * * annotation field incorrectly named . * / <nl> - @ interface InnerAnnotation <nl> - { <nl> - / * * Ignore - should be all upper case . * / <nl> - String data = " zxzc " ; <nl> - } <nl> - <nl> - / * * enum with public member variable * / <nl> - enum InnerEnum <nl> - { <nl> - / * * First constant * / <nl> - A , <nl> - <nl> - / * * Second constant * / <nl> - B ; <nl> - <nl> - / * * Should be private * / <nl> - public int someValue ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java <nl> deleted file mode 100644 <nl> index 32baec1 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - public class InputLocalAnnotations <nl> - { <nl> - public @ interface Rule { <nl> - <nl> - } <nl> - <nl> - public @ interface ClassRule { <nl> - <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierAnnotatedSameTypeName . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierAnnotatedSameTypeName . java <nl> index ea3c0dd . . 306098b 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierAnnotatedSameTypeName . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierAnnotatedSameTypeName . java <nl> @ @ - 2 , 8 + 2 , 8 @ @ package com . puppycrawl . tools . checkstyle . checks . design . visibilitymodifier ; <nl> <nl> import org . junit . rules . TemporaryFolder ; <nl> <nl> - import com . puppycrawl . tools . checkstyle . checks . design . InputLocalAnnotations . Rule ; <nl> - import com . puppycrawl . tools . checkstyle . checks . design . InputLocalAnnotations . ClassRule ; <nl> + import com . puppycrawl . tools . checkstyle . checks . design . visibilitymodifier . InputVisibilityModifierLocalAnnotations . Rule ; <nl> + import com . puppycrawl . tools . checkstyle . checks . design . visibilitymodifier . InputVisibilityModifierLocalAnnotations . ClassRule ; <nl> <nl> public class InputVisibilityModifierAnnotatedSameTypeName <nl> { <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierLocalAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierLocalAnnotations . java <nl> new file mode 100644 <nl> index 0000000 . . 6ad9a33 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierLocalAnnotations . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . design . visibilitymodifier ; <nl> + <nl> + public class InputVisibilityModifierLocalAnnotations <nl> + { <nl> + public @ interface Rule { <nl> + <nl> + } <nl> + <nl> + public @ interface ClassRule { <nl> + <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheckTest . java <nl> index 0204ba1 . . 5e6474d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheckTest . java <nl> @ @ - 35 , 7 + 35 , 9 @ @ public class NestedIfDepthCheckTest extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " coding " + File . separator + filename ) ; <nl> + + " coding " + File . separator <nl> + + " nestedifdepth " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputNestedIfDepth . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputNestedIfDepth . java <nl> deleted file mode 100644 <nl> index fec3324 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputNestedIfDepth . java <nl> + + + / dev / null <nl> @ @ - 1 , 64 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> - public class InputNestedIfDepth <nl> - { <nl> - void foo ( ) { <nl> - / / nesting = = 0 <nl> - if ( true ) { <nl> - } <nl> - <nl> - / / nesting = = 1 <nl> - if ( true ) { <nl> - if ( true ) { <nl> - } <nl> - } <nl> - <nl> - / / nesting = = 2 <nl> - if ( true ) { <nl> - if ( true ) { <nl> - if ( true ) { <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - void fooWithElse ( ) { <nl> - / / nesting = = 0 <nl> - if ( true ) { <nl> - } else { <nl> - } <nl> - <nl> - / / nesting = = 1 <nl> - if ( true ) { <nl> - if ( true ) { <nl> - } else { <nl> - } <nl> - } else { <nl> - if ( false ) { <nl> - } else { <nl> - } <nl> - } <nl> - <nl> - / / nesting = = 2 <nl> - if ( true ) { <nl> - if ( true ) { <nl> - if ( true ) { <nl> - } else { <nl> - } <nl> - } else { <nl> - if ( false ) { <nl> - } else { <nl> - } <nl> - } <nl> - } else { <nl> - if ( true ) { <nl> - if ( true ) { <nl> - } else { <nl> - } <nl> - } else { <nl> - if ( false ) { <nl> - } else { <nl> - } <nl> - } <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / nestedifdepth / InputNestedIfDepth . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / nestedifdepth / InputNestedIfDepth . java <nl> new file mode 100644 <nl> index 0000000 . . 29a8698 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / nestedifdepth / InputNestedIfDepth . java <nl> @ @ - 0 , 0 + 1 , 64 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . coding . nestedifdepth ; <nl> + public class InputNestedIfDepth <nl> + { <nl> + void foo ( ) { <nl> + / / nesting = = 0 <nl> + if ( true ) { <nl> + } <nl> + <nl> + / / nesting = = 1 <nl> + if ( true ) { <nl> + if ( true ) { <nl> + } <nl> + } <nl> + <nl> + / / nesting = = 2 <nl> + if ( true ) { <nl> + if ( true ) { <nl> + if ( true ) { <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + void fooWithElse ( ) { <nl> + / / nesting = = 0 <nl> + if ( true ) { <nl> + } else { <nl> + } <nl> + <nl> + / / nesting = = 1 <nl> + if ( true ) { <nl> + if ( true ) { <nl> + } else { <nl> + } <nl> + } else { <nl> + if ( false ) { <nl> + } else { <nl> + } <nl> + } <nl> + <nl> + / / nesting = = 2 <nl> + if ( true ) { <nl> + if ( true ) { <nl> + if ( true ) { <nl> + } else { <nl> + } <nl> + } else { <nl> + if ( false ) { <nl> + } else { <nl> + } <nl> + } <nl> + } else { <nl> + if ( true ) { <nl> + if ( true ) { <nl> + } else { <nl> + } <nl> + } else { <nl> + if ( false ) { <nl> + } else { <nl> + } <nl> + } <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputGregorianCalendar . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputGregorianCalendar . java 
 deleted file mode 100644 
 index 629dc3b . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputGregorianCalendar . java 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - public class InputGregorianCalendar 
 - { 
 - class SubCalendar { 
 - 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInner . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInner . java 
 deleted file mode 100644 
 index 3459fe6 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInner . java 
 + + + / dev / null 
 @ @ - 1 , 79 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2001 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - / * * 
 - * Tests having inner types 
 - * @ author Oliver Burn 
 - * * / 
 - class InputInner 
 - { 
 - / / Ignore - two errors 
 - class InnerInner2 
 - { 
 - / / Ignore 
 - public int fData ; 
 - } 
 - 
 - / / Ignore - 2 errors 
 - interface InnerInterface2 
 - { 
 - / / Ignore - should be all upper case 
 - String data = " zxzc " ; 
 - 
 - / / Ignore 
 - class InnerInterfaceInnerClass 
 - { 
 - / / Ignore - need Javadoc and made private 
 - public int rData ; 
 - 
 - / * * needs to be made private unless allowProtected . * / 
 - protected int protectedVariable ; 
 - 
 - / * * needs to be made private unless allowPackage . * / 
 - int packageVariable ; 
 - } 
 - } 
 - 
 - / * * demonstrate bug in handling static final * * / 
 - protected static Object sWeird = new Object ( ) ; 
 - / * * demonstrate bug in handling static final * * / 
 - static Object sWeird2 = new Object ( ) ; 
 - 
 - / * * demonstrate bug in local final variable * / 
 - public interface Inter 
 - { 
 - } 
 - 
 - public static void main ( ) 
 - { 
 - Inter m = new Inter ( ) 
 - { 
 - private static final int CDS = 1 ; 
 - 
 - private int ABC ; 
 - } ; 
 - } 
 - 
 - / * * annotation field incorrectly named . * / 
 - @ interface InnerAnnotation 
 - { 
 - / * * Ignore - should be all upper case . * / 
 - String data = " zxzc " ; 
 - } 
 - 
 - / * * enum with public member variable * / 
 - enum InnerEnum 
 - { 
 - / * * First constant * / 
 - A , 
 - 
 - / * * Second constant * / 
 - B ; 
 - 
 - / * * Should be private * / 
 - public int someValue ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java 
 deleted file mode 100644 
 index 32baec1 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java 
 + + + / dev / null 
 @ @ - 1 , 12 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - public class InputLocalAnnotations 
 - { 
 - public @ interface Rule { 
 - 
 - } 
 - 
 - public @ interface ClassRule { 
 - 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierAnnotatedSameTypeName . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierAnnotatedSameTypeName . java 
 index ea3c0dd . . 306098b 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierAnnotatedSameTypeName . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierAnnotatedSameTypeName . java 
 @ @ - 2 , 8 + 2 , 8 @ @ package com . puppycrawl . tools . checkstyle . checks . design . visibilitymodifier ; 
 
 import org . junit . rules . TemporaryFolder ; 
 
 - import com . puppycrawl . tools . checkstyle . checks . design . InputLocalAnnotations . Rule ; 
 - import com . puppycrawl . tools . checkstyle . checks . design . InputLocalAnnotations . ClassRule ; 
 + import com . puppycrawl . tools . checkstyle . checks . design . visibilitymodifier . InputVisibilityModifierLocalAnnotations . Rule ; 
 + import com . puppycrawl . tools . checkstyle . checks . design . visibilitymodifier . InputVisibilityModifierLocalAnnotations . ClassRule ; 
 
 public class InputVisibilityModifierAnnotatedSameTypeName 
 { 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierLocalAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierLocalAnnotations . java 
 new file mode 100644 
 index 0000000 . . 6ad9a33 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / visibilitymodifier / InputVisibilityModifierLocalAnnotations . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . design . visibilitymodifier ; 
 + 
 + public class InputVisibilityModifierLocalAnnotations 
 + { 
 + public @ interface Rule { 
 + 
 + } 
 + 
 + public @ interface ClassRule { 
 + 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheckTest . java 
 index 0204ba1 . . 5e6474d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheckTest . java 
 @ @ - 35 , 7 + 35 , 9 @ @ public class NestedIfDepthCheckTest extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " coding " + File . separator + filename ) ; 
 + + " coding " + File . separator 
 + + " nestedifdepth " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputNestedIfDepth . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputNestedIfDepth . java 
 deleted file mode 100644 
 index fec3324 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / InputNestedIfDepth . java 
 + + + / dev / null 
 @ @ - 1 , 64 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . coding ; 
 - public class InputNestedIfDepth 
 - { 
 - void foo ( ) { 
 - / / nesting = = 0 
 - if ( true ) { 
 - } 
 - 
 - / / nesting = = 1 
 - if ( true ) { 
 - if ( true ) { 
 - } 
 - } 
 - 
 - / / nesting = = 2 
 - if ( true ) { 
 - if ( true ) { 
 - if ( true ) { 
 - } 
 - } 
 - } 
 - } 
 - 
 - void fooWithElse ( ) { 
 - / / nesting = = 0 
 - if ( true ) { 
 - } else { 
 - } 
 - 
 - / / nesting = = 1 
 - if ( true ) { 
 - if ( true ) { 
 - } else { 
 - } 
 - } else { 
 - if ( false ) { 
 - } else { 
 - } 
 - } 
 - 
 - / / nesting = = 2 
 - if ( true ) { 
 - if ( true ) { 
 - if ( true ) { 
 - } else { 
 - } 
 - } else { 
 - if ( false ) { 
 - } else { 
 - } 
 - } 
 - } else { 
 - if ( true ) { 
 - if ( true ) { 
 - } else { 
 - } 
 - } else { 
 - if ( false ) { 
 - } else { 
 - } 
 - } 
 - } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / nestedifdepth / InputNestedIfDepth . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / nestedifdepth / InputNestedIfDepth . java 
 new file mode 100644 
 index 0000000 . . 29a8698 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / nestedifdepth / InputNestedIfDepth . java 
 @ @ - 0 , 0 + 1 , 64 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . coding . nestedifdepth ; 
 + public class InputNestedIfDepth 
 + { 
 + void foo ( ) { 
 + / / nesting = = 0 
 + if ( true ) { 
 + } 
 + 
 + / / nesting = = 1 
 + if ( true ) { 
 + if ( true ) { 
 + } 
 + } 
 + 
 + / / nesting = = 2 
 + if ( true ) { 
 + if ( true ) { 
 + if ( true ) { 
 + } 
 + } 
 + } 
 + } 
 + 
 + void fooWithElse ( ) { 
 + / / nesting = = 0 
 + if ( true ) { 
 + } else { 
 + } 
 + 
 + / / nesting = = 1 
 + if ( true ) { 
 + if ( true ) { 
 + } else { 
 + } 
 + } else { 
 + if ( false ) { 
 + } else { 
 + } 
 + } 
 + 
 + / / nesting = = 2 
 + if ( true ) { 
 + if ( true ) { 
 + if ( true ) { 
 + } else { 
 + } 
 + } else { 
 + if ( false ) { 
 + } else { 
 + } 
 + } 
 + } else { 
 + if ( true ) { 
 + if ( true ) { 
 + } else { 
 + } 
 + } else { 
 + if ( false ) { 
 + } else { 
 + } 
 + } 
 + } 
 + } 
 + }
