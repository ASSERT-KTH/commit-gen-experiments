BLEU SCORE: 0.08054496384843698

TEST MSG: minor : add placeholder for a new section in releasenotes . xml
GENERATED MSG: minor : fix for typo in release version

TEST DIFF (one line): diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index 4a0eeb9 . . 1ccc793 100644 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 15 , 6 + 15 , 8 @ @ <nl> <nl> < body > <nl> <nl> + < ! - - placeholder for a new section - - > <nl> + <nl> < section name = " Release 7 . 1 " > <nl> < p > New : < / p > <nl> < ul >
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> index eff44e9 . . 8ab9a05 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> @ @ - 26 , 9 + 26 , 12 @ @ import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> <nl> import java . lang . reflect . Method ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> <nl> import javax . tools . JavaFileObject ; <nl> <nl> + import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> import com . sun . javadoc . RootDoc ; <nl> @ @ - 57 , 19 + 60 , 26 @ @ public class TokenTypesDocletTest { <nl> @ Test <nl> public void testCheckOptions ( ) { <nl> Context context = new Context ( ) ; <nl> - Messager . preRegister ( context , " " ) ; <nl> + TestMessager testMessanger = new TestMessager ( context ) ; <nl> <nl> / / pass invalid options - empty array <nl> String [ ] [ ] options = new String [ 3 ] [ 1 ] ; <nl> - assertFalse ( TokenTypesDoclet . checkOptions ( options , Messager . instance0 ( context ) ) ) ; <nl> + assertFalse ( TokenTypesDoclet . checkOptions ( options , testMessanger ) ) ; <nl> <nl> / / pass valid options - array with one " - destfile " option <nl> options [ 0 ] [ 0 ] = " - destfile " ; <nl> - assertTrue ( TokenTypesDoclet . checkOptions ( options , Messager . instance0 ( context ) ) ) ; <nl> + assertTrue ( TokenTypesDoclet . checkOptions ( options , testMessanger ) ) ; <nl> <nl> / / pass invalid options - array with more than one " - destfile " option <nl> options [ 1 ] [ 0 ] = " - destfile " ; <nl> - assertFalse ( TokenTypesDoclet . checkOptions ( options , Messager . instance0 ( context ) ) ) ; <nl> + assertFalse ( TokenTypesDoclet . checkOptions ( options , testMessanger ) ) ; <nl> + <nl> + String [ ] expected = { <nl> + " Usage : javadoc - destfile file - doclet TokenTypesDoclet . . . " , <nl> + " Only one - destfile option allowed . " , <nl> + } ; <nl> + <nl> + Assert . assertArrayEquals ( expected , testMessanger . messages . toArray ( ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 157 , 4 + 167 , 18 @ @ public class TokenTypesDocletTest { <nl> } <nl> return result ; <nl> } <nl> + <nl> + private static class TestMessager extends Messager { <nl> + <nl> + private final List < String > messages = new ArrayList < > ( ) ; <nl> + <nl> + TestMessager ( Context context ) { <nl> + super ( context , " " ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void printError ( String message ) { <nl> + messages . add ( message ) ; <nl> + } <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index 4a0eeb9 . . 1ccc793 100644 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 15 , 6 + 15 , 8 @ @ 
 
 < body > 
 
 + < ! - - placeholder for a new section - - > 
 + 
 < section name = " Release 7 . 1 " > 
 < p > New : < / p > 
 < ul >

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 index eff44e9 . . 8ab9a05 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 @ @ - 26 , 9 + 26 , 12 @ @ import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 
 import java . lang . reflect . Method ; 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 
 import javax . tools . JavaFileObject ; 
 
 + import org . junit . Assert ; 
 import org . junit . Test ; 
 
 import com . sun . javadoc . RootDoc ; 
 @ @ - 57 , 19 + 60 , 26 @ @ public class TokenTypesDocletTest { 
 @ Test 
 public void testCheckOptions ( ) { 
 Context context = new Context ( ) ; 
 - Messager . preRegister ( context , " " ) ; 
 + TestMessager testMessanger = new TestMessager ( context ) ; 
 
 / / pass invalid options - empty array 
 String [ ] [ ] options = new String [ 3 ] [ 1 ] ; 
 - assertFalse ( TokenTypesDoclet . checkOptions ( options , Messager . instance0 ( context ) ) ) ; 
 + assertFalse ( TokenTypesDoclet . checkOptions ( options , testMessanger ) ) ; 
 
 / / pass valid options - array with one " - destfile " option 
 options [ 0 ] [ 0 ] = " - destfile " ; 
 - assertTrue ( TokenTypesDoclet . checkOptions ( options , Messager . instance0 ( context ) ) ) ; 
 + assertTrue ( TokenTypesDoclet . checkOptions ( options , testMessanger ) ) ; 
 
 / / pass invalid options - array with more than one " - destfile " option 
 options [ 1 ] [ 0 ] = " - destfile " ; 
 - assertFalse ( TokenTypesDoclet . checkOptions ( options , Messager . instance0 ( context ) ) ) ; 
 + assertFalse ( TokenTypesDoclet . checkOptions ( options , testMessanger ) ) ; 
 + 
 + String [ ] expected = { 
 + " Usage : javadoc - destfile file - doclet TokenTypesDoclet . . . " , 
 + " Only one - destfile option allowed . " , 
 + } ; 
 + 
 + Assert . assertArrayEquals ( expected , testMessanger . messages . toArray ( ) ) ; 
 } 
 
 @ Test 
 @ @ - 157 , 4 + 167 , 18 @ @ public class TokenTypesDocletTest { 
 } 
 return result ; 
 } 
 + 
 + private static class TestMessager extends Messager { 
 + 
 + private final List < String > messages = new ArrayList < > ( ) ; 
 + 
 + TestMessager ( Context context ) { 
 + super ( context , " " ) ; 
 + } 
 + 
 + @ Override 
 + public void printError ( String message ) { 
 + messages . add ( message ) ; 
 + } 
 + } 
 }
