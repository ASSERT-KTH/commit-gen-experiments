BLEU SCORE: 0.021476912089159066

TEST MSG: Issue # 3378 : Fixed TransaltionCheckTest to not depend on a specific ordering of non - deterministic APIs
GENERATED MSG: Use explicit charset in test code . # 1555

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> index 134feef . . 970f4e0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> @ @ - 31 , 12 + 31 , 14 @ @ import java . io . LineNumberReader ; <nl> import java . nio . charset . StandardCharsets ; <nl> import java . text . MessageFormat ; <nl> import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . List ; <nl> import java . util . Locale ; <nl> import java . util . Map ; <nl> import java . util . Properties ; <nl> + import java . util . stream . Collectors ; <nl> <nl> import com . google . common . base . Charsets ; <nl> import com . google . common . base . Predicate ; <nl> @ @ - 156 , 10 + 158 , 13 @ @ public class BaseCheckTestSupport { <nl> try ( LineNumberReader lnr = new LineNumberReader ( <nl> new InputStreamReader ( inputStream , StandardCharsets . UTF _ 8 ) ) ) { <nl> <nl> + final List < String > actuals = lnr . lines ( ) . limit ( expected . length ) <nl> + . sorted ( ) . collect ( Collectors . toList ( ) ) ; <nl> + Arrays . sort ( expected ) ; <nl> + <nl> for ( int i = 0 ; i < expected . length ; i + + ) { <nl> final String expectedResult = messageFileName + " : " + expected [ i ] ; <nl> - final String actual = lnr . readLine ( ) ; <nl> - assertEquals ( " error message " + i , expectedResult , actual ) ; <nl> + assertEquals ( " error message " + i , expectedResult , actuals . get ( i ) ) ; <nl> } <nl> <nl> assertEquals ( " unexpected output : " + lnr . readLine ( ) ,
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> index 9848685 . . d7e5a68 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ import java . io . LineNumberReader ; <nl> import java . io . OutputStream ; <nl> import java . io . PrintStream ; <nl> import java . io . UnsupportedEncodingException ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . Arrays ; <nl> import java . util . Collections ; <nl> import java . util . List ; <nl> @ @ - 130 , 7 + 131 , 7 @ @ public abstract class BaseCheckTestSupport <nl> final ByteArrayInputStream bais = <nl> new ByteArrayInputStream ( baos . toByteArray ( ) ) ; <nl> final LineNumberReader lnr = <nl> - new LineNumberReader ( new InputStreamReader ( bais ) ) ; <nl> + new LineNumberReader ( new InputStreamReader ( bais , StandardCharsets . UTF _ 8 ) ) ; <nl> <nl> for ( int i = 0 ; i < aExpected . length ; i + + ) { <nl> final String expected = aMessageFileName + " : " + aExpected [ i ] ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java <nl> index 9a74ca6 . . 8ea1428 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ import java . io . ByteArrayInputStream ; <nl> import java . io . File ; <nl> import java . io . InputStreamReader ; <nl> import java . io . LineNumberReader ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . Collections ; <nl> import java . util . List ; <nl> <nl> @ @ - 204 , 7 + 205 , 7 @ @ public class WriteTagCheckTest extends BaseCheckTestSupport { <nl> final ByteArrayInputStream bais = <nl> new ByteArrayInputStream ( baos . toByteArray ( ) ) ; <nl> final LineNumberReader lnr = <nl> - new LineNumberReader ( new InputStreamReader ( bais ) ) ; <nl> + new LineNumberReader ( new InputStreamReader ( bais , StandardCharsets . UTF _ 8 ) ) ; <nl> <nl> for ( int i = 0 ; i < expected . length ; i + + ) { <nl> final String expectedResult = messageFileName + " : " + expected [ i ] ;

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 index 134feef . . 970f4e0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 @ @ - 31 , 12 + 31 , 14 @ @ import java . io . LineNumberReader ; 
 import java . nio . charset . StandardCharsets ; 
 import java . text . MessageFormat ; 
 import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 import java . util . Collections ; 
 import java . util . HashMap ; 
 import java . util . List ; 
 import java . util . Locale ; 
 import java . util . Map ; 
 import java . util . Properties ; 
 + import java . util . stream . Collectors ; 
 
 import com . google . common . base . Charsets ; 
 import com . google . common . base . Predicate ; 
 @ @ - 156 , 10 + 158 , 13 @ @ public class BaseCheckTestSupport { 
 try ( LineNumberReader lnr = new LineNumberReader ( 
 new InputStreamReader ( inputStream , StandardCharsets . UTF _ 8 ) ) ) { 
 
 + final List < String > actuals = lnr . lines ( ) . limit ( expected . length ) 
 + . sorted ( ) . collect ( Collectors . toList ( ) ) ; 
 + Arrays . sort ( expected ) ; 
 + 
 for ( int i = 0 ; i < expected . length ; i + + ) { 
 final String expectedResult = messageFileName + " : " + expected [ i ] ; 
 - final String actual = lnr . readLine ( ) ; 
 - assertEquals ( " error message " + i , expectedResult , actual ) ; 
 + assertEquals ( " error message " + i , expectedResult , actuals . get ( i ) ) ; 
 } 
 
 assertEquals ( " unexpected output : " + lnr . readLine ( ) ,

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 index 9848685 . . d7e5a68 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 @ @ - 12 , 6 + 12 , 7 @ @ import java . io . LineNumberReader ; 
 import java . io . OutputStream ; 
 import java . io . PrintStream ; 
 import java . io . UnsupportedEncodingException ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . Arrays ; 
 import java . util . Collections ; 
 import java . util . List ; 
 @ @ - 130 , 7 + 131 , 7 @ @ public abstract class BaseCheckTestSupport 
 final ByteArrayInputStream bais = 
 new ByteArrayInputStream ( baos . toByteArray ( ) ) ; 
 final LineNumberReader lnr = 
 - new LineNumberReader ( new InputStreamReader ( bais ) ) ; 
 + new LineNumberReader ( new InputStreamReader ( bais , StandardCharsets . UTF _ 8 ) ) ; 
 
 for ( int i = 0 ; i < aExpected . length ; i + + ) { 
 final String expected = aMessageFileName + " : " + aExpected [ i ] ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java 
 index 9a74ca6 . . 8ea1428 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java 
 @ @ - 29 , 6 + 29 , 7 @ @ import java . io . ByteArrayInputStream ; 
 import java . io . File ; 
 import java . io . InputStreamReader ; 
 import java . io . LineNumberReader ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . Collections ; 
 import java . util . List ; 
 
 @ @ - 204 , 7 + 205 , 7 @ @ public class WriteTagCheckTest extends BaseCheckTestSupport { 
 final ByteArrayInputStream bais = 
 new ByteArrayInputStream ( baos . toByteArray ( ) ) ; 
 final LineNumberReader lnr = 
 - new LineNumberReader ( new InputStreamReader ( bais ) ) ; 
 + new LineNumberReader ( new InputStreamReader ( bais , StandardCharsets . UTF _ 8 ) ) ; 
 
 for ( int i = 0 ; i < expected . length ; i + + ) { 
 final String expectedResult = messageFileName + " : " + expected [ i ] ;
