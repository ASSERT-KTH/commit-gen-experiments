BLEU SCORE: 0.016087046643979717

TEST MSG: minor : add sponsoring badges
GENERATED MSG: additional fixed for HTML pages for Google and Sun configuration coverage

TEST DIFF (one line): diff - - git a / README . md b / README . md <nl> index 7be7f9c . . a9d4d5b 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 49 , 6 + 49 , 20 @ @ Questions and Answers from community : [ ! [ ] [ stackoverflow img ] ] [ stackoverflow ] <nl> <nl> Bugs and Feature requests ( not the questions ) : https : / / github . com / checkstyle / checkstyle / issues <nl> <nl> + <nl> + Support / Sponsor checkstyle <nl> + = = = = = = = = <nl> + <nl> + If you want to speed up fixing of issue and want to encourage somebody in <nl> + internet to resolve any issue : <nl> + [ ! [ ] [ bountysource img ] ] [ bountysource ] <nl> + [ ! [ ] [ salt . bountysource img ] ] [ salt . bountysource ] <nl> + [ ! [ ] [ flattr img ] ] [ flattr ] <nl> + [ ! [ ] [ liberapay img ] ] [ liberapay ] <nl> + [ ! [ ] [ backers . opencollective img ] ] [ backers . opencollective ] <nl> + [ ! [ ] [ sponsors . opencollective img ] ] [ sponsors . opencollective ] <nl> + <nl> + <nl> Licensing <nl> = = = = = = = = = <nl> <nl> @ @ - 124 , 5 + 138 , 20 @ @ directory . <nl> [ snyk ] : https : / / snyk . io / test / github / checkstyle / checkstyle : pom . xml ? targetFile = pom . xml <nl> [ snyk img ] : https : / / snyk . io / test / github / checkstyle / checkstyle / badge . svg <nl> <nl> + [ flattr ] : https : / / flattr . com / submit / auto ? fid = g39d10 & amp ; url = http % 3A % 2F % 2Fcheckstyle . sourceforge . net <nl> + [ flattr img ] : https : / / button . flattr . com / flattr - badge - large . png <nl> + <nl> + [ liberapay ] : https : / / liberapay . com / checkstyle / <nl> + [ liberapay img ] : https : / / liberapay . com / assets / widgets / donate . svg <nl> + <nl> + [ bountysource ] : https : / / www . bountysource . com / teams / checkstyle / issues <nl> + [ bountysource img ] : https : / / api . bountysource . com / badge / team ? team _ id = 3568 & style = bounties _ posted <nl> + <nl> + [ salt . bountysource ] : https : / / salt . bountysource . com / teams / checkstyle <nl> + [ salt . bountysource img ] : https : / / img . shields . io / bountysource / team / checkstyle / activity . svg ? label = salt . bountysource <nl> + <nl> + [ backers . opencollective ] : https : / / opencollective . com / checkstyle / <nl> + [ backers . opencollective img ] : https : / / opencollective . com / checkstyle / backers / badge . svg <nl> <nl> - <nl> + [ sponsors . opencollective ] : https : / / opencollective . com / checkstyle / <nl> + [ sponsors . opencollective img ] : https : / / opencollective . com / checkstyle / sponsors / badge . svg <nl> diff - - git a / src / xdocs / sponsoring . xml b / src / xdocs / sponsoring . xml <nl> index d625174 . . 1a4e8d9 100644 <nl> - - - a / src / xdocs / sponsoring . xml <nl> + + + b / src / xdocs / sponsoring . xml <nl> @ @ - 19 , 18 + 19 , 20 @ @ <nl> < section name = " Sponsoring " > <nl> <nl> < p > <nl> - If you want to speed up fixing of issue and want to encourage somebody in <nl> + If you want to speed up fixing of issue and want to encourage somebody on the <nl> internet to resolve any issue : <nl> < / p > <nl> <nl> < p > <nl> - < a href = " https : / / freedomsponsors . org / search / ? project _ name = checkstyle " > <nl> - freedomsponsors - checkstyle < / a > <nl> - < br / > <nl> - < a href = " https : / / www . bountysource . com / teams / checkstyle / issues " > bountysource - checkstyle < / a > <nl> + < a href = " https : / / www . bountysource . com / teams / checkstyle / issues " > <nl> + < img src = " https : / / api . bountysource . com / badge / team ? team _ id = 3568 & amp ; style = bounties _ posted " <nl> + alt = " bountysource " title = " bountysource " border = " 0 " / > <nl> + < / a > <nl> < br / > <nl> < a href = " https : / / salt . bountysource . com / teams / checkstyle " > <nl> - bountysource ( salt ) - checkstyle < / a > <nl> + < img src = " https : / / img . shields . io / bountysource / team / checkstyle / activity . svg ? label = salt . bountysource " <nl> + alt = " salt . bountysource " title = " salt . bountysource " border = " 0 " / > <nl> + < / a > <nl> < br / > <nl> < a href = " https : / / flattr . com / submit / auto ? fid = g39d10 & amp ; url = http % 3A % 2F % 2Fcheckstyle . sourceforge . net " <nl> target = " _ blank " > <nl> @ @ - 38 , 18 + 40 , 28 @ @ <nl> alt = " Flattr this " title = " Flattr this " border = " 0 " / > <nl> < / a > <nl> < br / > <nl> - Donate by < a href = " https : / / liberapay . com / checkstyle / " > Liberapay < / a > : <nl> - < script src = " https : / / liberapay . com / ~ 150680 / widgets / button . js " / > <nl> - < noscript > <nl> - < a href = " https : / / liberapay . com / ~ 150680 / donate " > <nl> - < img alt = " Donate using Liberapay " <nl> - src = " https : / / liberapay . com / assets / widgets / donate . svg " / > <nl> - < / a > <nl> - < / noscript > <nl> + < a href = " https : / / liberapay . com / checkstyle / " > <nl> + < img src = " https : / / liberapay . com / assets / widgets / donate . svg " <nl> + alt = " liberapay " title = " liberapay " border = " 0 " / > <nl> + < / a > <nl> + < br / > <nl> + < a href = " https : / / opencollective . com / checkstyle / " > <nl> + < img src = " https : / / opencollective . com / checkstyle / backers / badge . svg " <nl> + alt = " backers . opencollective " title = " backers . opencollective " border = " 0 " / > <nl> + < / a > <nl> + < br / > <nl> + < a href = " https : / / opencollective . com / checkstyle / " > <nl> + < img src = " https : / / opencollective . com / checkstyle / sponsors / badge . svg " <nl> + alt = " sponsors . opencollective " title = " backers . opencollective " border = " 0 " / > <nl> + < / a > <nl> < br / > <nl> < object type = " image / svg + xml " <nl> data = " https : / / opencollective . com / checkstyle / tiers / backer . svg ? avatarHeight = 76 & amp ; width = 600 " > <nl> < / object > <nl> + < br / > <nl> + < a href = " https : / / freedomsponsors . org / search / ? project _ name = checkstyle " > <nl> + freedomsponsors - checkstyle < / a > <nl> + < br / > <nl> < / p > <nl> <nl> < p >
NEAREST DIFF (one line): diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml <nl> index 4d6a4f4 . . a98193a 100755 <nl> - - - a / src / xdocs / config _ misc . xml <nl> + + + b / src / xdocs / config _ misc . xml <nl> @ @ - 13 , 14 + 13 , 14 @ @ <nl> < section name = " NewlineAtEndOfFile " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks whether files end with a new line . <nl> + Checks whether files end with a line separator . <nl> < / p > <nl> <nl> < p > <nl> Rationale : Any source files and text files in general should <nl> - end with a newline character , especially when using SCM <nl> + end with a line separator , especially when using source control management <nl> systems such as CVS . CVS will even print a warning when it <nl> - encounters a file that doesn ' t end with a newline . <nl> + encounters a file that doesn ' t end with a line separator . <nl> < / p > <nl> < / subsection > <nl> <nl> @ @ - 40 , 7 + 40 , 7 @ @ <nl> & quot ; crlf & quot ; ( Windows - style ) , & quot ; cr & quot ; <nl> ( Mac - style ) and & quot ; lf & quot ; ( Unix - style ) <nl> < / td > <nl> - < td > system default < / td > <nl> + < td > & quot ; system & quot ; < / td > <nl> < / tr > <nl> < tr > <nl> < td > fileExtensions < / td > <nl> @ @ - 70 , 7 + 70 , 7 @ @ <nl> < / source > <nl> <nl> < p > <nl> - To configure the check to work only on java , xml and python files : <nl> + To configure the check to work only on Java , XML and Python files : <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; NewlineAtEndOfFile & quot ; & gt ; <nl> @ @ - 99 , 7 + 99 , 7 @ @ <nl> it is a generic < a <nl> href = " http : / / java . sun . com / j2se / 1 . 4 . 2 / docs / api / java / util / regex / Pattern . html " > regular <nl> expression < / a > matcher on Java comments . To check for other <nl> - patterns in Java comments , set property format . <nl> + patterns in Java comments , set the < code > format < / code > property . <nl> < / p > <nl> < / subsection > <nl> <nl> @ @ - 113 , 7 + 113 , 7 @ @ <nl> < / tr > <nl> < tr > <nl> < td > format < / td > <nl> - < td > pattern to check < / td > <nl> + < td > Pattern to match comments against < / td > <nl> < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > <nl> < td > < code > TODO : < / code > < / td > <nl> < / tr > <nl> @ @ - 184 , 9 + 184 , 9 @ @ ok = OK <nl> < / source > <nl> <nl> < p > <nl> - The Translation check will find the typo in the german hello <nl> - key , the missing ok key in the default resource file and the <nl> - missing cancel key in the german resource file : <nl> + The Translation check will find the typo in the German < code > hello < / code > <nl> + key , the missing < code > ok < / code > key in the default resource file and the <nl> + missing < code > cancel < / code > key in the German resource file : <nl> < / p > <nl> < source > <nl> messages _ de . properties : Key ' hello ' missing . <nl> @ @ - 243 , 16 + 243 , 16 @ @ messages . properties : Key ' ok ' missing . <nl> < section name = " UncommentedMain " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks for uncommented main ( ) methods ( debugging leftovers ) . <nl> + Checks for uncommented main ( ) methods . <nl> < / p > <nl> <nl> < p > <nl> - Rationale : A main ( ) method is often used for debug <nl> + Rationale : A main ( ) method is often used for debugging <nl> purposes . When debugging is finished , developers often forget <nl> to remove the method , which changes the API and increases the <nl> - size of the resulting class / jar file . With the exception of <nl> + size of the resulting class or JAR file . With the exception of <nl> the real program entry points , all main ( ) methods should be <nl> - removed / commented out of the sources . <nl> + removed or commented out of the sources . <nl> < / p > <nl> < / subsection > <nl> <nl> @ @ - 266 , 7 + 266 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> < / tr > <nl> < tr > <nl> < td > excludedClasses < / td > <nl> - < td > pattern for qualified names of classes which are allowed <nl> + < td > Pattern for qualified names of classes which are allowed <nl> to have a main method . < / td > <nl> < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > <nl> < td > < code > ^ $ < / code > < / td > <nl> @ @ - 283 , 7 + 283 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> < / source > <nl> <nl> < p > <nl> - To configure the check to allow main method for all classes <nl> + To configure the check to allow the < code > main < / code > method for all classes <nl> with & quot ; Main & quot ; name : <nl> < / p > <nl> < source > <nl> @ @ - 310 , 14 + 310 , 14 @ @ messages . properties : Key ' ok ' missing . <nl> < subsection name = " Description " > <nl> < p > <nl> Checks that long constants are defined with an upper ell . That <nl> - is < code > ' L ' < / code > and not < code > ' l ' < / code > . This is in accordance to the Java <nl> + is < code > ' L ' < / code > and not < code > ' l ' < / code > . This is in accordance with the Java <nl> Language Specification , < a <nl> href = " http : / / java . sun . com / docs / books / jls / second _ edition / html / lexical . doc . html # 48282 " > <nl> Section 3 . 10 . 1 < / a > . <nl> < / p > <nl> <nl> < p > <nl> - looks a lot like < code > 1 < / code > . <nl> + The capital L looks a lot like < code > 1 < / code > . <nl> < / p > <nl> < / subsection > <nl> <nl> @ @ - 346 , 9 + 346 , 9 @ @ messages . properties : Key ' ok ' missing . <nl> < section name = " ArrayTypeStyle " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks the style of array type definitions . Some like Java - style : <nl> + Checks the style of array type definitions . Some like Java style : <nl> < code > public static void main ( String [ ] args ) < / code > and some like <nl> - C - style : public static void main ( String args [ ] ) <nl> + C style : public static void main ( String args [ ] ) <nl> < / p > <nl> < / subsection > <nl> <nl> @ @ - 405 , 8 + 405 , 8 @ @ messages . properties : Key ' ok ' missing . <nl> < section name = " FinalParameters " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Check that method / constructor / catch block parameters are <nl> - final . Interface and abstract methods are not checked - the final <nl> + Check that parameters for methods , constructors , and catch blocks are <nl> + final . Interface and abstract methods are not checked : the final <nl> keyword does not make sense for interface and abstract method <nl> parameters as there is no code that could modify the parameter . <nl> < / p > <nl> @ @ - 488 , 11 + 488 , 11 @ @ messages . properties : Key ' ok ' missing . <nl> <nl> < p > <nl> WARNING : This is a very powerful and flexible check , but , at the <nl> - same time , it is low level and very implementation dependent because <nl> + same time , it is low - level and very implementation - dependent because <nl> its results depend on the grammar we use to build abstract syntax <nl> - trees . Thus we recomend using other checks when they provide the <nl> - desired functionality . All in all , this check just works on the level <nl> - of an abstract tree and knows nothing about language structures . <nl> + trees . Thus we recommend using other checks when they provide the <nl> + desired functionality . Essentially , this check just works on the level <nl> + of an abstract syntax tree and knows nothing about language structures . <nl> < / p > <nl> < / subsection > <nl> <nl> @ @ - 553 , 13 + 553 , 13 @ @ messages . properties : Key ' ok ' missing . <nl> < / tr > <nl> < tr > <nl> < td > minimumMessage < / td > <nl> - < td > error message when minimum count not reached < / td > <nl> + < td > error message when the minimum count is not reached < / td > <nl> < td > < a href = " property _ types . html # string " > String < / a > < / td > <nl> < td > & quot ; descendant . token . min & quot ; < / td > <nl> < / tr > <nl> < tr > <nl> < td > maximumMessage < / td > <nl> - < td > error message when maximum count exceeded < / td > <nl> + < td > error message when the maximum count is exceeded < / td > <nl> < td > < a href = " property _ types . html # string " > String < / a > < / td > <nl> < td > & quot ; descendant . token . max & quot ; < / td > <nl> < / tr > <nl> @ @ - 617 , 7 + 617 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> < / source > <nl> <nl> < p > <nl> - Initialiser in for performs no setup ( use while instead ? ) : <nl> + The initialiser in < code > for < / code > performs no setup ( where a < code > while < / code > statement could be used instead ) : <nl> < / p > <nl> < source > <nl> & lt ; module name = " DescendantToken " & gt ; <nl> @ @ - 628 , 7 + 628 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> < / source > <nl> <nl> < p > <nl> - Condition in for performs no check : <nl> + The condition in < code > for < / code > performs no check : <nl> < / p > <nl> < source > <nl> & lt ; module name = " DescendantToken " & gt ; <nl> @ @ - 639 , 7 + 639 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> < / source > <nl> <nl> < p > <nl> - Switch within switch : <nl> + A switch within a switch : <nl> < / p > <nl> < source > <nl> & lt ; module name = " DescendantToken " & gt ; <nl> @ @ - 650 , 7 + 650 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> - < p > Return from within a catch or finally block : < / p > <nl> + < p > A return statement from within a catch or finally block : < / p > <nl> < source > <nl> & lt ; module name = " DescendantToken " & gt ; <nl> & lt ; property name = " tokens " value = " LITERAL _ FINALLY , LITERAL _ CATCH " / & gt ; <nl> @ @ - 659 , 7 + 659 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> - < p > Try within catch or finally block : < / p > <nl> + < p > A try statement within a catch or finally block : < / p > <nl> < source > <nl> & lt ; module name = " DescendantToken " & gt ; <nl> & lt ; property name = " tokens " value = " LITERAL _ CATCH , LITERAL _ FINALLY " / & gt ; <nl> @ @ - 707 , 7 + 707 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> - < p > Limit the number of exceptions a method can throw : < / p > <nl> + < p > Limits the number of exceptions a method can throw : < / p > <nl> < source > <nl> & lt ; module name = " DescendantToken " & gt ; <nl> & lt ; property name = " tokens " value = " LITERAL _ THROWS " / & gt ; <nl> @ @ - 716 , 7 + 716 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> - < p > Limit the number of expressions in a method : < / p > <nl> + < p > Limits the number of expressions in a method : < / p > <nl> < source > <nl> & lt ; module name = " DescendantToken " & gt ; <nl> & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; <nl> @ @ - 725 , 7 + 725 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> & lt ; / module & gt ; <nl> < / source > <nl> <nl> - < p > Disallow empty statements : < / p > <nl> + < p > Disallows empty statements : < / p > <nl> < source > <nl> & lt ; module name = " DescendantToken " & gt ; <nl> & lt ; property name = " tokens " value = " EMPTY _ STAT " / & gt ; <nl> @ @ - 764 , 16 + 764 , 16 @ @ messages . properties : Key ' ok ' missing . <nl> < section name = " Indentation " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks correct indentation of Java Code . <nl> + Checks correct indentation of Java code . <nl> < / p > <nl> <nl> < p > <nl> - The basic idea behind this is that while pretty printers are <nl> + The idea behind this is that while pretty printers are <nl> sometimes convenient for bulk reformats of legacy code , they often <nl> either aren ' t configurable enough or just can ' t anticipate how <nl> format should be done . Sometimes this is personal preference , other <nl> times it is practical experience . In any case , this check should <nl> - just ensure that a minimal set of indentation rules are followed . <nl> + just ensure that a minimal set of indentation rules is followed . <nl> < / p > <nl> < / subsection > <nl> <nl> @ @ - 793 , 7 + 793 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> < / tr > <nl> < tr > <nl> < td > braceAdjustment < / td > <nl> - < td > how far brace should be indented when on next line < / td > <nl> + < td > how far braces should be indented when on the next line < / td > <nl> < td > < a href = " property _ types . html # integer " > Integer < / a > < / td > <nl> < td > 0 < / td > <nl> < / tr > <nl> @ @ - 805 , 7 + 805 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> < / tr > <nl> < tr > <nl> < td > throwsIndent < / td > <nl> - < td > how far throws should be indented when on next line < / td > <nl> + < td > how far a throws clause should be indented when on next line < / td > <nl> < td > < a href = " property _ types . html # integer " > Integer < / a > < / td > <nl> < td > 4 < / td > <nl> < / tr > <nl> @ @ - 821 , 8 + 821 , 8 @ @ messages . properties : Key ' ok ' missing . <nl> < / source > <nl> <nl> < p > <nl> - To configure the check to enforce indentation style recommended by <nl> - Sun : <nl> + To configure the check to enforce the indentation style recommended by <nl> + Oracle : <nl> < / p > <nl> <nl> < source > <nl> @ @ - 849 , 15 + 849 , 15 @ @ messages . properties : Key ' ok ' missing . <nl> < subsection name = " Description " > <nl> < p > <nl> The check to ensure that requires that comments be the only thing on <nl> - a line . For the case of / / comments that means that the only thing <nl> + a line . For the case of < code > / / < / code > comments that means that the only thing <nl> that should precede it is whitespace . It doesn ' t check comments if <nl> - they do not end line , i . e . it accept the following : <nl> + they do not end a line ; for example , it accepts the following : <nl> < code > Thread . sleep ( 10 & lt ; some comment here & gt ; ) ; < / code > Format <nl> property is intended to deal with the " } / / while " example . <nl> < / p > <nl> <nl> < p > <nl> - Rationale : Steve McConnel in & quot ; Code Complete & quot ; suggests that <nl> + Rationale : Steve McConnel in < cite > Code Complete < / cite > suggests that <nl> endline comments are a bad practice . An end line comment would be <nl> one that is on the same line as actual code . For example : <nl> < / p > <nl> @ @ - 868 , 7 + 868 , 7 @ @ d = e / f ; / / Another comment for this line <nl> < / source > <nl> <nl> < p > <nl> - Quoting & quot ; Code Complete & quot ; for the justification : <nl> + Quoting < cite > Code Complete < / cite > for the justification : <nl> < / p > <nl> <nl> < ul > <nl> @ @ - 903 , 7 + 903 , 7 @ @ d = e / f ; / / Another comment for this line <nl> < / ul > <nl> <nl> < p > <nl> - His comments on being hard to maintain when the size of the line <nl> + McConnel ' s comments on being hard to maintain when the size of the line <nl> changes are even more important in the age of automated <nl> refactorings . <nl> < / p > <nl> @ @ - 919 , 15 + 919 , 15 @ @ d = e / f ; / / Another comment for this line <nl> < / tr > <nl> < tr > <nl> < td > format < / td > <nl> - < td > pattern for string allowed before comment . < / td > <nl> + < td > pattern for strings allowed before the comment < / td > <nl> < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > <nl> < td > < code > ^ [ \ \ s \ \ } \ \ ) ; ] * $ < / code > < / td > <nl> < / tr > <nl> < tr > <nl> < td > legalComment < / td > <nl> - < td > pattern for text of trailing comment which is allowed . ( this <nl> - patter will not be applied to multiline comments and text of <nl> - comment will be trimmed before matching ) < / td > <nl> + < td > pattern for text allowed in trailing comments . ( This <nl> + pattern will not be applied to multiline comments and the text of the <nl> + comment will be trimmed before matching . ) < / td > <nl> < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > <nl> < td > ( not set ) < / td > <nl> < / tr > <nl> @ @ - 980 , 7 + 980 , 7 @ @ d = e / f ; / / Another comment for this line <nl> < / p > <nl> < p > <nl> It differs from them in that it works in multiline mode . <nl> - It ' s regular expression can span multiple lines and it checks this <nl> + Its regular expression can span multiple lines and it checks this <nl> against the whole file at once . <nl> The others work in singleline mode . <nl> Their single or multiple regular expressions can only span one line . <nl> @ @ - 992 , 24 + 992 , 24 @ @ d = e / f ; / / Another comment for this line <nl> < / p > <nl> < p > In multiline mode . . . < / p > <nl> < ul > <nl> - < li > ^ means beginning of a line , as opposed to beginning of input . < / li > <nl> - < li > For beginning of input use \ A . < / li > <nl> - < li > $ means end of a line , as opposed to end of input . < / li > <nl> - < li > For end of input use \ Z . < / li > <nl> - < li > Each line in the file is terminated with a newline character . < / li > <nl> + < li > < code > ^ < / code > means the beginning of a line , as opposed to beginning of the input . < / li > <nl> + < li > For beginning of the input use < code > \ A < / code > . < / li > <nl> + < li > < code > $ < / code > means the end of a line , as opposed to the end of the input . < / li > <nl> + < li > For end of input use < code > \ Z < / code > . < / li > <nl> + < li > Each line in the file is terminated with a line feed character . < / li > <nl> < / ul > <nl> < p > <nl> - < b > Note : < / b > Not all regexp engines are created equal . Some provide extra <nl> + < b > Note : < / b > Not all regular expression engines are created equal . Some provide extra <nl> functions that others do not and some elements of the syntax may vary . <nl> This check makes use of the < a <nl> href = " http : / / java . sun . com / j2se / 1 . 4 . 2 / docs / api / java / util / regex / package - summary . html " > <nl> - java . util . regex package < / a > , please check its documentation for <nl> + java . util . regex package < / a > ; please check its documentation for <nl> details of how to construct a regular expression to achieve a particular <nl> goal . <nl> < / p > <nl> < p > <nl> < b > Note : < / b > When entering a regular expression as a parameter in the <nl> - xml config file you must also take into account the xml rules . e . g . if <nl> + xml config file you must also take into account the XML rules . e . g . if <nl> you want to match a & lt ; symbol you need to enter & amp ; lt ; . The regular <nl> expression should be entered on one line . <nl> < / p > <nl> @ @ - 1032 , 7 + 1032 , 7 @ @ d = e / f ; / / Another comment for this line <nl> < tr > <nl> < td > message < / td > <nl> < td > message which is used to notify about violations , <nl> - if empty then default ( hard - coded ) message is used . < / td > <nl> + if empty then the default ( hard - coded ) message is used . < / td > <nl> < td > < a href = " property _ types . html # string " > String < / a > < / td > <nl> < td > < code > & quot ; & quot ; < / code > ( empty ) < / td > <nl> < / tr >

TEST DIFF:
diff - - git a / README . md b / README . md 
 index 7be7f9c . . a9d4d5b 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 49 , 6 + 49 , 20 @ @ Questions and Answers from community : [ ! [ ] [ stackoverflow img ] ] [ stackoverflow ] 
 
 Bugs and Feature requests ( not the questions ) : https : / / github . com / checkstyle / checkstyle / issues 
 
 + 
 + Support / Sponsor checkstyle 
 + = = = = = = = = 
 + 
 + If you want to speed up fixing of issue and want to encourage somebody in 
 + internet to resolve any issue : 
 + [ ! [ ] [ bountysource img ] ] [ bountysource ] 
 + [ ! [ ] [ salt . bountysource img ] ] [ salt . bountysource ] 
 + [ ! [ ] [ flattr img ] ] [ flattr ] 
 + [ ! [ ] [ liberapay img ] ] [ liberapay ] 
 + [ ! [ ] [ backers . opencollective img ] ] [ backers . opencollective ] 
 + [ ! [ ] [ sponsors . opencollective img ] ] [ sponsors . opencollective ] 
 + 
 + 
 Licensing 
 = = = = = = = = = 
 
 @ @ - 124 , 5 + 138 , 20 @ @ directory . 
 [ snyk ] : https : / / snyk . io / test / github / checkstyle / checkstyle : pom . xml ? targetFile = pom . xml 
 [ snyk img ] : https : / / snyk . io / test / github / checkstyle / checkstyle / badge . svg 
 
 + [ flattr ] : https : / / flattr . com / submit / auto ? fid = g39d10 & amp ; url = http % 3A % 2F % 2Fcheckstyle . sourceforge . net 
 + [ flattr img ] : https : / / button . flattr . com / flattr - badge - large . png 
 + 
 + [ liberapay ] : https : / / liberapay . com / checkstyle / 
 + [ liberapay img ] : https : / / liberapay . com / assets / widgets / donate . svg 
 + 
 + [ bountysource ] : https : / / www . bountysource . com / teams / checkstyle / issues 
 + [ bountysource img ] : https : / / api . bountysource . com / badge / team ? team _ id = 3568 & style = bounties _ posted 
 + 
 + [ salt . bountysource ] : https : / / salt . bountysource . com / teams / checkstyle 
 + [ salt . bountysource img ] : https : / / img . shields . io / bountysource / team / checkstyle / activity . svg ? label = salt . bountysource 
 + 
 + [ backers . opencollective ] : https : / / opencollective . com / checkstyle / 
 + [ backers . opencollective img ] : https : / / opencollective . com / checkstyle / backers / badge . svg 
 
 - 
 + [ sponsors . opencollective ] : https : / / opencollective . com / checkstyle / 
 + [ sponsors . opencollective img ] : https : / / opencollective . com / checkstyle / sponsors / badge . svg 
 diff - - git a / src / xdocs / sponsoring . xml b / src / xdocs / sponsoring . xml 
 index d625174 . . 1a4e8d9 100644 
 - - - a / src / xdocs / sponsoring . xml 
 + + + b / src / xdocs / sponsoring . xml 
 @ @ - 19 , 18 + 19 , 20 @ @ 
 < section name = " Sponsoring " > 
 
 < p > 
 - If you want to speed up fixing of issue and want to encourage somebody in 
 + If you want to speed up fixing of issue and want to encourage somebody on the 
 internet to resolve any issue : 
 < / p > 
 
 < p > 
 - < a href = " https : / / freedomsponsors . org / search / ? project _ name = checkstyle " > 
 - freedomsponsors - checkstyle < / a > 
 - < br / > 
 - < a href = " https : / / www . bountysource . com / teams / checkstyle / issues " > bountysource - checkstyle < / a > 
 + < a href = " https : / / www . bountysource . com / teams / checkstyle / issues " > 
 + < img src = " https : / / api . bountysource . com / badge / team ? team _ id = 3568 & amp ; style = bounties _ posted " 
 + alt = " bountysource " title = " bountysource " border = " 0 " / > 
 + < / a > 
 < br / > 
 < a href = " https : / / salt . bountysource . com / teams / checkstyle " > 
 - bountysource ( salt ) - checkstyle < / a > 
 + < img src = " https : / / img . shields . io / bountysource / team / checkstyle / activity . svg ? label = salt . bountysource " 
 + alt = " salt . bountysource " title = " salt . bountysource " border = " 0 " / > 
 + < / a > 
 < br / > 
 < a href = " https : / / flattr . com / submit / auto ? fid = g39d10 & amp ; url = http % 3A % 2F % 2Fcheckstyle . sourceforge . net " 
 target = " _ blank " > 
 @ @ - 38 , 18 + 40 , 28 @ @ 
 alt = " Flattr this " title = " Flattr this " border = " 0 " / > 
 < / a > 
 < br / > 
 - Donate by < a href = " https : / / liberapay . com / checkstyle / " > Liberapay < / a > : 
 - < script src = " https : / / liberapay . com / ~ 150680 / widgets / button . js " / > 
 - < noscript > 
 - < a href = " https : / / liberapay . com / ~ 150680 / donate " > 
 - < img alt = " Donate using Liberapay " 
 - src = " https : / / liberapay . com / assets / widgets / donate . svg " / > 
 - < / a > 
 - < / noscript > 
 + < a href = " https : / / liberapay . com / checkstyle / " > 
 + < img src = " https : / / liberapay . com / assets / widgets / donate . svg " 
 + alt = " liberapay " title = " liberapay " border = " 0 " / > 
 + < / a > 
 + < br / > 
 + < a href = " https : / / opencollective . com / checkstyle / " > 
 + < img src = " https : / / opencollective . com / checkstyle / backers / badge . svg " 
 + alt = " backers . opencollective " title = " backers . opencollective " border = " 0 " / > 
 + < / a > 
 + < br / > 
 + < a href = " https : / / opencollective . com / checkstyle / " > 
 + < img src = " https : / / opencollective . com / checkstyle / sponsors / badge . svg " 
 + alt = " sponsors . opencollective " title = " backers . opencollective " border = " 0 " / > 
 + < / a > 
 < br / > 
 < object type = " image / svg + xml " 
 data = " https : / / opencollective . com / checkstyle / tiers / backer . svg ? avatarHeight = 76 & amp ; width = 600 " > 
 < / object > 
 + < br / > 
 + < a href = " https : / / freedomsponsors . org / search / ? project _ name = checkstyle " > 
 + freedomsponsors - checkstyle < / a > 
 + < br / > 
 < / p > 
 
 < p >

NEAREST DIFF:
diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml 
 index 4d6a4f4 . . a98193a 100755 
 - - - a / src / xdocs / config _ misc . xml 
 + + + b / src / xdocs / config _ misc . xml 
 @ @ - 13 , 14 + 13 , 14 @ @ 
 < section name = " NewlineAtEndOfFile " > 
 < subsection name = " Description " > 
 < p > 
 - Checks whether files end with a new line . 
 + Checks whether files end with a line separator . 
 < / p > 
 
 < p > 
 Rationale : Any source files and text files in general should 
 - end with a newline character , especially when using SCM 
 + end with a line separator , especially when using source control management 
 systems such as CVS . CVS will even print a warning when it 
 - encounters a file that doesn ' t end with a newline . 
 + encounters a file that doesn ' t end with a line separator . 
 < / p > 
 < / subsection > 
 
 @ @ - 40 , 7 + 40 , 7 @ @ 
 & quot ; crlf & quot ; ( Windows - style ) , & quot ; cr & quot ; 
 ( Mac - style ) and & quot ; lf & quot ; ( Unix - style ) 
 < / td > 
 - < td > system default < / td > 
 + < td > & quot ; system & quot ; < / td > 
 < / tr > 
 < tr > 
 < td > fileExtensions < / td > 
 @ @ - 70 , 7 + 70 , 7 @ @ 
 < / source > 
 
 < p > 
 - To configure the check to work only on java , xml and python files : 
 + To configure the check to work only on Java , XML and Python files : 
 < / p > 
 < source > 
 & lt ; module name = & quot ; NewlineAtEndOfFile & quot ; & gt ; 
 @ @ - 99 , 7 + 99 , 7 @ @ 
 it is a generic < a 
 href = " http : / / java . sun . com / j2se / 1 . 4 . 2 / docs / api / java / util / regex / Pattern . html " > regular 
 expression < / a > matcher on Java comments . To check for other 
 - patterns in Java comments , set property format . 
 + patterns in Java comments , set the < code > format < / code > property . 
 < / p > 
 < / subsection > 
 
 @ @ - 113 , 7 + 113 , 7 @ @ 
 < / tr > 
 < tr > 
 < td > format < / td > 
 - < td > pattern to check < / td > 
 + < td > Pattern to match comments against < / td > 
 < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > 
 < td > < code > TODO : < / code > < / td > 
 < / tr > 
 @ @ - 184 , 9 + 184 , 9 @ @ ok = OK 
 < / source > 
 
 < p > 
 - The Translation check will find the typo in the german hello 
 - key , the missing ok key in the default resource file and the 
 - missing cancel key in the german resource file : 
 + The Translation check will find the typo in the German < code > hello < / code > 
 + key , the missing < code > ok < / code > key in the default resource file and the 
 + missing < code > cancel < / code > key in the German resource file : 
 < / p > 
 < source > 
 messages _ de . properties : Key ' hello ' missing . 
 @ @ - 243 , 16 + 243 , 16 @ @ messages . properties : Key ' ok ' missing . 
 < section name = " UncommentedMain " > 
 < subsection name = " Description " > 
 < p > 
 - Checks for uncommented main ( ) methods ( debugging leftovers ) . 
 + Checks for uncommented main ( ) methods . 
 < / p > 
 
 < p > 
 - Rationale : A main ( ) method is often used for debug 
 + Rationale : A main ( ) method is often used for debugging 
 purposes . When debugging is finished , developers often forget 
 to remove the method , which changes the API and increases the 
 - size of the resulting class / jar file . With the exception of 
 + size of the resulting class or JAR file . With the exception of 
 the real program entry points , all main ( ) methods should be 
 - removed / commented out of the sources . 
 + removed or commented out of the sources . 
 < / p > 
 < / subsection > 
 
 @ @ - 266 , 7 + 266 , 7 @ @ messages . properties : Key ' ok ' missing . 
 < / tr > 
 < tr > 
 < td > excludedClasses < / td > 
 - < td > pattern for qualified names of classes which are allowed 
 + < td > Pattern for qualified names of classes which are allowed 
 to have a main method . < / td > 
 < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > 
 < td > < code > ^ $ < / code > < / td > 
 @ @ - 283 , 7 + 283 , 7 @ @ messages . properties : Key ' ok ' missing . 
 < / source > 
 
 < p > 
 - To configure the check to allow main method for all classes 
 + To configure the check to allow the < code > main < / code > method for all classes 
 with & quot ; Main & quot ; name : 
 < / p > 
 < source > 
 @ @ - 310 , 14 + 310 , 14 @ @ messages . properties : Key ' ok ' missing . 
 < subsection name = " Description " > 
 < p > 
 Checks that long constants are defined with an upper ell . That 
 - is < code > ' L ' < / code > and not < code > ' l ' < / code > . This is in accordance to the Java 
 + is < code > ' L ' < / code > and not < code > ' l ' < / code > . This is in accordance with the Java 
 Language Specification , < a 
 href = " http : / / java . sun . com / docs / books / jls / second _ edition / html / lexical . doc . html # 48282 " > 
 Section 3 . 10 . 1 < / a > . 
 < / p > 
 
 < p > 
 - looks a lot like < code > 1 < / code > . 
 + The capital L looks a lot like < code > 1 < / code > . 
 < / p > 
 < / subsection > 
 
 @ @ - 346 , 9 + 346 , 9 @ @ messages . properties : Key ' ok ' missing . 
 < section name = " ArrayTypeStyle " > 
 < subsection name = " Description " > 
 < p > 
 - Checks the style of array type definitions . Some like Java - style : 
 + Checks the style of array type definitions . Some like Java style : 
 < code > public static void main ( String [ ] args ) < / code > and some like 
 - C - style : public static void main ( String args [ ] ) 
 + C style : public static void main ( String args [ ] ) 
 < / p > 
 < / subsection > 
 
 @ @ - 405 , 8 + 405 , 8 @ @ messages . properties : Key ' ok ' missing . 
 < section name = " FinalParameters " > 
 < subsection name = " Description " > 
 < p > 
 - Check that method / constructor / catch block parameters are 
 - final . Interface and abstract methods are not checked - the final 
 + Check that parameters for methods , constructors , and catch blocks are 
 + final . Interface and abstract methods are not checked : the final 
 keyword does not make sense for interface and abstract method 
 parameters as there is no code that could modify the parameter . 
 < / p > 
 @ @ - 488 , 11 + 488 , 11 @ @ messages . properties : Key ' ok ' missing . 
 
 < p > 
 WARNING : This is a very powerful and flexible check , but , at the 
 - same time , it is low level and very implementation dependent because 
 + same time , it is low - level and very implementation - dependent because 
 its results depend on the grammar we use to build abstract syntax 
 - trees . Thus we recomend using other checks when they provide the 
 - desired functionality . All in all , this check just works on the level 
 - of an abstract tree and knows nothing about language structures . 
 + trees . Thus we recommend using other checks when they provide the 
 + desired functionality . Essentially , this check just works on the level 
 + of an abstract syntax tree and knows nothing about language structures . 
 < / p > 
 < / subsection > 
 
 @ @ - 553 , 13 + 553 , 13 @ @ messages . properties : Key ' ok ' missing . 
 < / tr > 
 < tr > 
 < td > minimumMessage < / td > 
 - < td > error message when minimum count not reached < / td > 
 + < td > error message when the minimum count is not reached < / td > 
 < td > < a href = " property _ types . html # string " > String < / a > < / td > 
 < td > & quot ; descendant . token . min & quot ; < / td > 
 < / tr > 
 < tr > 
 < td > maximumMessage < / td > 
 - < td > error message when maximum count exceeded < / td > 
 + < td > error message when the maximum count is exceeded < / td > 
 < td > < a href = " property _ types . html # string " > String < / a > < / td > 
 < td > & quot ; descendant . token . max & quot ; < / td > 
 < / tr > 
 @ @ - 617 , 7 + 617 , 7 @ @ messages . properties : Key ' ok ' missing . 
 < / source > 
 
 < p > 
 - Initialiser in for performs no setup ( use while instead ? ) : 
 + The initialiser in < code > for < / code > performs no setup ( where a < code > while < / code > statement could be used instead ) : 
 < / p > 
 < source > 
 & lt ; module name = " DescendantToken " & gt ; 
 @ @ - 628 , 7 + 628 , 7 @ @ messages . properties : Key ' ok ' missing . 
 < / source > 
 
 < p > 
 - Condition in for performs no check : 
 + The condition in < code > for < / code > performs no check : 
 < / p > 
 < source > 
 & lt ; module name = " DescendantToken " & gt ; 
 @ @ - 639 , 7 + 639 , 7 @ @ messages . properties : Key ' ok ' missing . 
 < / source > 
 
 < p > 
 - Switch within switch : 
 + A switch within a switch : 
 < / p > 
 < source > 
 & lt ; module name = " DescendantToken " & gt ; 
 @ @ - 650 , 7 + 650 , 7 @ @ messages . properties : Key ' ok ' missing . 
 & lt ; / module & gt ; 
 < / source > 
 
 - < p > Return from within a catch or finally block : < / p > 
 + < p > A return statement from within a catch or finally block : < / p > 
 < source > 
 & lt ; module name = " DescendantToken " & gt ; 
 & lt ; property name = " tokens " value = " LITERAL _ FINALLY , LITERAL _ CATCH " / & gt ; 
 @ @ - 659 , 7 + 659 , 7 @ @ messages . properties : Key ' ok ' missing . 
 & lt ; / module & gt ; 
 < / source > 
 
 - < p > Try within catch or finally block : < / p > 
 + < p > A try statement within a catch or finally block : < / p > 
 < source > 
 & lt ; module name = " DescendantToken " & gt ; 
 & lt ; property name = " tokens " value = " LITERAL _ CATCH , LITERAL _ FINALLY " / & gt ; 
 @ @ - 707 , 7 + 707 , 7 @ @ messages . properties : Key ' ok ' missing . 
 & lt ; / module & gt ; 
 < / source > 
 
 - < p > Limit the number of exceptions a method can throw : < / p > 
 + < p > Limits the number of exceptions a method can throw : < / p > 
 < source > 
 & lt ; module name = " DescendantToken " & gt ; 
 & lt ; property name = " tokens " value = " LITERAL _ THROWS " / & gt ; 
 @ @ - 716 , 7 + 716 , 7 @ @ messages . properties : Key ' ok ' missing . 
 & lt ; / module & gt ; 
 < / source > 
 
 - < p > Limit the number of expressions in a method : < / p > 
 + < p > Limits the number of expressions in a method : < / p > 
 < source > 
 & lt ; module name = " DescendantToken " & gt ; 
 & lt ; property name = " tokens " value = " METHOD _ DEF " / & gt ; 
 @ @ - 725 , 7 + 725 , 7 @ @ messages . properties : Key ' ok ' missing . 
 & lt ; / module & gt ; 
 < / source > 
 
 - < p > Disallow empty statements : < / p > 
 + < p > Disallows empty statements : < / p > 
 < source > 
 & lt ; module name = " DescendantToken " & gt ; 
 & lt ; property name = " tokens " value = " EMPTY _ STAT " / & gt ; 
 @ @ - 764 , 16 + 764 , 16 @ @ messages . properties : Key ' ok ' missing . 
 < section name = " Indentation " > 
 < subsection name = " Description " > 
 < p > 
 - Checks correct indentation of Java Code . 
 + Checks correct indentation of Java code . 
 < / p > 
 
 < p > 
 - The basic idea behind this is that while pretty printers are 
 + The idea behind this is that while pretty printers are 
 sometimes convenient for bulk reformats of legacy code , they often 
 either aren ' t configurable enough or just can ' t anticipate how 
 format should be done . Sometimes this is personal preference , other 
 times it is practical experience . In any case , this check should 
 - just ensure that a minimal set of indentation rules are followed . 
 + just ensure that a minimal set of indentation rules is followed . 
 < / p > 
 < / subsection > 
 
 @ @ - 793 , 7 + 793 , 7 @ @ messages . properties : Key ' ok ' missing . 
 < / tr > 
 < tr > 
 < td > braceAdjustment < / td > 
 - < td > how far brace should be indented when on next line < / td > 
 + < td > how far braces should be indented when on the next line < / td > 
 < td > < a href = " property _ types . html # integer " > Integer < / a > < / td > 
 < td > 0 < / td > 
 < / tr > 
 @ @ - 805 , 7 + 805 , 7 @ @ messages . properties : Key ' ok ' missing . 
 < / tr > 
 < tr > 
 < td > throwsIndent < / td > 
 - < td > how far throws should be indented when on next line < / td > 
 + < td > how far a throws clause should be indented when on next line < / td > 
 < td > < a href = " property _ types . html # integer " > Integer < / a > < / td > 
 < td > 4 < / td > 
 < / tr > 
 @ @ - 821 , 8 + 821 , 8 @ @ messages . properties : Key ' ok ' missing . 
 < / source > 
 
 < p > 
 - To configure the check to enforce indentation style recommended by 
 - Sun : 
 + To configure the check to enforce the indentation style recommended by 
 + Oracle : 
 < / p > 
 
 < source > 
 @ @ - 849 , 15 + 849 , 15 @ @ messages . properties : Key ' ok ' missing . 
 < subsection name = " Description " > 
 < p > 
 The check to ensure that requires that comments be the only thing on 
 - a line . For the case of / / comments that means that the only thing 
 + a line . For the case of < code > / / < / code > comments that means that the only thing 
 that should precede it is whitespace . It doesn ' t check comments if 
 - they do not end line , i . e . it accept the following : 
 + they do not end a line ; for example , it accepts the following : 
 < code > Thread . sleep ( 10 & lt ; some comment here & gt ; ) ; < / code > Format 
 property is intended to deal with the " } / / while " example . 
 < / p > 
 
 < p > 
 - Rationale : Steve McConnel in & quot ; Code Complete & quot ; suggests that 
 + Rationale : Steve McConnel in < cite > Code Complete < / cite > suggests that 
 endline comments are a bad practice . An end line comment would be 
 one that is on the same line as actual code . For example : 
 < / p > 
 @ @ - 868 , 7 + 868 , 7 @ @ d = e / f ; / / Another comment for this line 
 < / source > 
 
 < p > 
 - Quoting & quot ; Code Complete & quot ; for the justification : 
 + Quoting < cite > Code Complete < / cite > for the justification : 
 < / p > 
 
 < ul > 
 @ @ - 903 , 7 + 903 , 7 @ @ d = e / f ; / / Another comment for this line 
 < / ul > 
 
 < p > 
 - His comments on being hard to maintain when the size of the line 
 + McConnel ' s comments on being hard to maintain when the size of the line 
 changes are even more important in the age of automated 
 refactorings . 
 < / p > 
 @ @ - 919 , 15 + 919 , 15 @ @ d = e / f ; / / Another comment for this line 
 < / tr > 
 < tr > 
 < td > format < / td > 
 - < td > pattern for string allowed before comment . < / td > 
 + < td > pattern for strings allowed before the comment < / td > 
 < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > 
 < td > < code > ^ [ \ \ s \ \ } \ \ ) ; ] * $ < / code > < / td > 
 < / tr > 
 < tr > 
 < td > legalComment < / td > 
 - < td > pattern for text of trailing comment which is allowed . ( this 
 - patter will not be applied to multiline comments and text of 
 - comment will be trimmed before matching ) < / td > 
 + < td > pattern for text allowed in trailing comments . ( This 
 + pattern will not be applied to multiline comments and the text of the 
 + comment will be trimmed before matching . ) < / td > 
 < td > < a href = " property _ types . html # regexp " > regular expression < / a > < / td > 
 < td > ( not set ) < / td > 
 < / tr > 
 @ @ - 980 , 7 + 980 , 7 @ @ d = e / f ; / / Another comment for this line 
 < / p > 
 < p > 
 It differs from them in that it works in multiline mode . 
 - It ' s regular expression can span multiple lines and it checks this 
 + Its regular expression can span multiple lines and it checks this 
 against the whole file at once . 
 The others work in singleline mode . 
 Their single or multiple regular expressions can only span one line . 
 @ @ - 992 , 24 + 992 , 24 @ @ d = e / f ; / / Another comment for this line 
 < / p > 
 < p > In multiline mode . . . < / p > 
 < ul > 
 - < li > ^ means beginning of a line , as opposed to beginning of input . < / li > 
 - < li > For beginning of input use \ A . < / li > 
 - < li > $ means end of a line , as opposed to end of input . < / li > 
 - < li > For end of input use \ Z . < / li > 
 - < li > Each line in the file is terminated with a newline character . < / li > 
 + < li > < code > ^ < / code > means the beginning of a line , as opposed to beginning of the input . < / li > 
 + < li > For beginning of the input use < code > \ A < / code > . < / li > 
 + < li > < code > $ < / code > means the end of a line , as opposed to the end of the input . < / li > 
 + < li > For end of input use < code > \ Z < / code > . < / li > 
 + < li > Each line in the file is terminated with a line feed character . < / li > 
 < / ul > 
 < p > 
 - < b > Note : < / b > Not all regexp engines are created equal . Some provide extra 
 + < b > Note : < / b > Not all regular expression engines are created equal . Some provide extra 
 functions that others do not and some elements of the syntax may vary . 
 This check makes use of the < a 
 href = " http : / / java . sun . com / j2se / 1 . 4 . 2 / docs / api / java / util / regex / package - summary . html " > 
 - java . util . regex package < / a > , please check its documentation for 
 + java . util . regex package < / a > ; please check its documentation for 
 details of how to construct a regular expression to achieve a particular 
 goal . 
 < / p > 
 < p > 
 < b > Note : < / b > When entering a regular expression as a parameter in the 
 - xml config file you must also take into account the xml rules . e . g . if 
 + xml config file you must also take into account the XML rules . e . g . if 
 you want to match a & lt ; symbol you need to enter & amp ; lt ; . The regular 
 expression should be entered on one line . 
 < / p > 
 @ @ - 1032 , 7 + 1032 , 7 @ @ d = e / f ; / / Another comment for this line 
 < tr > 
 < td > message < / td > 
 < td > message which is used to notify about violations , 
 - if empty then default ( hard - coded ) message is used . < / td > 
 + if empty then the default ( hard - coded ) message is used . < / td > 
 < td > < a href = " property _ types . html # string " > String < / a > < / td > 
 < td > < code > & quot ; & quot ; < / code > ( empty ) < / td > 
 < / tr >
