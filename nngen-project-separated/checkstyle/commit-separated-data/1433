BLEU SCORE: 0.1437791910008819

TEST MSG: minor : build - helper - maven - plugin version bump to 1 . 10
GENERATED MSG: Update maven - enforcer - plugin to 1 . 4 for issue # 644

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 39de59f . . bab3e62 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 625 , 7 + 625 , 7 @ @ <nl> < plugin > <nl> < groupId > org . codehaus . mojo < / groupId > <nl> < artifactId > build - helper - maven - plugin < / artifactId > <nl> - < version > 1 . 9 . 1 < / version > <nl> + < version > 1 . 10 < / version > <nl> < executions > <nl> < execution > <nl> < id > add - source < / id >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java <nl> index 2d872b1 . . 870038c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java <nl> @ @ - 109 , 7 + 109 , 8 @ @ public class FinalLocalVariableCheck extends Check <nl> } <nl> case TokenTypes . VARIABLE _ DEF : <nl> if ( ( ast . getParent ( ) . getType ( ) ! = TokenTypes . OBJBLOCK ) <nl> - & & ( ast . getParent ( ) . getType ( ) ! = TokenTypes . FOR _ EACH _ CLAUSE ) ) <nl> + & & ( ast . getParent ( ) . getType ( ) ! = TokenTypes . FOR _ EACH _ CLAUSE ) <nl> + & & isFirstVariableInForInit ( ast ) ) <nl> { <nl> insertVariable ( ast ) ; <nl> } <nl> @ @ - 147 , 6 + 148 , 25 @ @ public class FinalLocalVariableCheck extends Check <nl> } <nl> <nl> / * * <nl> + * Checks if current variable is defined first in <nl> + * { @ link TokenTypes # FOR _ INIT for - loop init } , e . g . : <nl> + * < p > <nl> + * < code > <nl> + * for ( int i = 0 , j = 0 ; i < j ; i + + ) { . . . } <nl> + * < / code > <nl> + * < / p > <nl> + * < code > i < / code > is first variable in { @ link TokenTypes # FOR _ INIT for - loop init } <nl> + * @ param variableDef variable definition node . <nl> + * @ return true if variableDef is first variable in { @ link TokenTypes # FOR _ INIT for - loop init } <nl> + * / <nl> + private static boolean isFirstVariableInForInit ( DetailAST variableDef ) <nl> + { <nl> + return variableDef . getParent ( ) . getType ( ) ! = TokenTypes . FOR _ INIT <nl> + | | variableDef . getPreviousSibling ( ) = = null <nl> + | | variableDef . getPreviousSibling ( ) . getType ( ) ! = TokenTypes . COMMA ; <nl> + } <nl> + <nl> + / * * <nl> * Determines whether an AST is a descendant of an abstract or native method . <nl> * @ param ast the AST to check . <nl> * @ return true if ast is a descendant of an abstract or native method . <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheckTest . java <nl> index 48e83a8 . . a6b4ac5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheckTest . java <nl> @ @ - 82 , 4 + 82 , 17 @ @ public class FinalLocalVariableCheckTest <nl> } ; <nl> verify ( checkConfig , getPath ( " coding / InputFinalLocalVariableNativeMethods . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testFalsePositive ( ) throws Exception <nl> + { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( FinalLocalVariableCheck . class ) ; <nl> + checkConfig . addAttribute ( " tokens " , " VARIABLE _ DEF , PARAMETER _ DEF " ) ; <nl> + <nl> + final String [ ] expected = { <nl> + <nl> + } ; <nl> + verify ( checkConfig , getPath ( " coding / InputFinalLocalVariableCheckFalsePositive . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalLocalVariableCheckFalsePositive . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalLocalVariableCheckFalsePositive . java <nl> new file mode 100644 <nl> index 0000000 . . d1e9aca <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalLocalVariableCheckFalsePositive . java <nl> @ @ - 0 , 0 + 1 , 13 @ @ <nl> + package com . puppycrawl . tools . checkstyle . coding ; <nl> + <nl> + public class InputFinalLocalVariableCheckFalsePositive <nl> + { <nl> + public void method ( ) <nl> + { <nl> + final java . util . List < Object > list = new java . util . ArrayList < > ( ) ; <nl> + <nl> + for ( int i = 0 , s0 = list . size ( ) ; i < s0 ; i + + ) <nl> + { <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 39de59f . . bab3e62 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 625 , 7 + 625 , 7 @ @ 
 < plugin > 
 < groupId > org . codehaus . mojo < / groupId > 
 < artifactId > build - helper - maven - plugin < / artifactId > 
 - < version > 1 . 9 . 1 < / version > 
 + < version > 1 . 10 < / version > 
 < executions > 
 < execution > 
 < id > add - source < / id >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java 
 index 2d872b1 . . 870038c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java 
 @ @ - 109 , 7 + 109 , 8 @ @ public class FinalLocalVariableCheck extends Check 
 } 
 case TokenTypes . VARIABLE _ DEF : 
 if ( ( ast . getParent ( ) . getType ( ) ! = TokenTypes . OBJBLOCK ) 
 - & & ( ast . getParent ( ) . getType ( ) ! = TokenTypes . FOR _ EACH _ CLAUSE ) ) 
 + & & ( ast . getParent ( ) . getType ( ) ! = TokenTypes . FOR _ EACH _ CLAUSE ) 
 + & & isFirstVariableInForInit ( ast ) ) 
 { 
 insertVariable ( ast ) ; 
 } 
 @ @ - 147 , 6 + 148 , 25 @ @ public class FinalLocalVariableCheck extends Check 
 } 
 
 / * * 
 + * Checks if current variable is defined first in 
 + * { @ link TokenTypes # FOR _ INIT for - loop init } , e . g . : 
 + * < p > 
 + * < code > 
 + * for ( int i = 0 , j = 0 ; i < j ; i + + ) { . . . } 
 + * < / code > 
 + * < / p > 
 + * < code > i < / code > is first variable in { @ link TokenTypes # FOR _ INIT for - loop init } 
 + * @ param variableDef variable definition node . 
 + * @ return true if variableDef is first variable in { @ link TokenTypes # FOR _ INIT for - loop init } 
 + * / 
 + private static boolean isFirstVariableInForInit ( DetailAST variableDef ) 
 + { 
 + return variableDef . getParent ( ) . getType ( ) ! = TokenTypes . FOR _ INIT 
 + | | variableDef . getPreviousSibling ( ) = = null 
 + | | variableDef . getPreviousSibling ( ) . getType ( ) ! = TokenTypes . COMMA ; 
 + } 
 + 
 + / * * 
 * Determines whether an AST is a descendant of an abstract or native method . 
 * @ param ast the AST to check . 
 * @ return true if ast is a descendant of an abstract or native method . 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheckTest . java 
 index 48e83a8 . . a6b4ac5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheckTest . java 
 @ @ - 82 , 4 + 82 , 17 @ @ public class FinalLocalVariableCheckTest 
 } ; 
 verify ( checkConfig , getPath ( " coding / InputFinalLocalVariableNativeMethods . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testFalsePositive ( ) throws Exception 
 + { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( FinalLocalVariableCheck . class ) ; 
 + checkConfig . addAttribute ( " tokens " , " VARIABLE _ DEF , PARAMETER _ DEF " ) ; 
 + 
 + final String [ ] expected = { 
 + 
 + } ; 
 + verify ( checkConfig , getPath ( " coding / InputFinalLocalVariableCheckFalsePositive . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalLocalVariableCheckFalsePositive . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalLocalVariableCheckFalsePositive . java 
 new file mode 100644 
 index 0000000 . . d1e9aca 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalLocalVariableCheckFalsePositive . java 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + package com . puppycrawl . tools . checkstyle . coding ; 
 + 
 + public class InputFinalLocalVariableCheckFalsePositive 
 + { 
 + public void method ( ) 
 + { 
 + final java . util . List < Object > list = new java . util . ArrayList < > ( ) ; 
 + 
 + for ( int i = 0 , s0 = list . size ( ) ; i < s0 ; i + + ) 
 + { 
 + } 
 + } 
 + }
