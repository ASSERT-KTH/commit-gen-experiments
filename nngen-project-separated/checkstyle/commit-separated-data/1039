BLEU SCORE: 0.028398387225677897

TEST MSG: infra : Use launch . groovy for ' NoException ' testing ( Wercker )
GENERATED MSG: Issue # 2825 : distelliCI manifest file added

TEST DIFF (one line): diff - - git a / wercker . yml b / wercker . yml <nl> index 7688fc4 . . 5e5055a 100644 <nl> - - - a / wercker . yml <nl> + + + b / wercker . yml <nl> @ @ - 7 , 6 + 7 , 18 @ @ build : <nl> export MAVEN _ OPTS = " - Dmaven . repo . local = $ { WERCKER _ CACHE _ DIR } " <nl> mvn - version <nl> <nl> + - script : <nl> + name : install groovy <nl> + code : | - <nl> + if [ ! - d $ { WERCKER _ CACHE _ DIR } / groovy ] ; <nl> + then wget - O $ { WERCKER _ CACHE _ DIR } / groovy . zip https : / / dl . bintray . com / groovy / maven / apache - groovy - binary - 2 . 4 . 7 . zip ; <nl> + unzip $ { WERCKER _ CACHE _ DIR } / groovy . zip - d $ { WERCKER _ CACHE _ DIR } ; <nl> + mv $ { WERCKER _ CACHE _ DIR } / groovy - 2 . 4 . 7 $ { WERCKER _ CACHE _ DIR } / groovy <nl> + fi <nl> + export GROOVY _ HOME = $ { WERCKER _ CACHE _ DIR } / groovy <nl> + PATH = $ GROOVY _ HOME / bin : $ PATH <nl> + groovy - v <nl> + <nl> # unit tests ( oraclejdk8 ) <nl> - script : <nl> name : tests <nl> @ @ - 57 , 9 + 69 , 8 @ @ build : <nl> code : > <nl> rm - rf contribution <nl> & & git clone https : / / github . com / checkstyle / contribution & & cd contribution / checkstyle - tester <nl> - & & sed - i . ' ' ' s / projects - to - test - on . properties / projects - for - wercker . properties / ' launch . sh <nl> & & cd . . / . . / & & mvn clean install - DskipTests - DskipITs - Dcobertura . skip = true <nl> - Dpmd . skip = true - Dfindbugs . skip = true <nl> - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dxml . skip = true <nl> & & cd contribution / checkstyle - tester <nl> - & & . / launch . sh - Dcheckstyle . config . location = checks - nonjavadoc - error . xml <nl> + & & groovy . / launch . groovy projects - for - wercker . properties checks - nonjavadoc - error . xml
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> index 78d481e . . e87d341 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> @ @ - 219 , 7 + 219 , 8 @ @ public class TranslationCheck extends AbstractFileSetCheck { <nl> * @ param baseNameRegexp base name regexp pattern . <nl> * @ return set of ResourceBundles . <nl> * / <nl> - private Set < ResourceBundle > groupFilesIntoBundles ( Set < File > files , Pattern baseNameRegexp ) { <nl> + private static Set < ResourceBundle > groupFilesIntoBundles ( Set < File > files , <nl> + Pattern baseNameRegexp ) { <nl> final Set < ResourceBundle > resourceBundles = Sets . newHashSet ( ) ; <nl> for ( File currentFile : files ) { <nl> final String fileName = currentFile . getName ( ) ; <nl> @ @ - 297 , 7 + 298 , 7 @ @ public class TranslationCheck extends AbstractFileSetCheck { <nl> * @ return Guava ' s Optional of resource bundle ( present if target bundle is found ) . <nl> * / <nl> private static Optional < ResourceBundle > findBundle ( Set < ResourceBundle > bundles , <nl> - final ResourceBundle targetBundle ) { <nl> + ResourceBundle targetBundle ) { <nl> Optional < ResourceBundle > result = Optional . absent ( ) ; <nl> for ( ResourceBundle currentBundle : bundles ) { <nl> if ( targetBundle . getBaseName ( ) . equals ( currentBundle . getBaseName ( ) ) <nl> @ @ - 529 , 7 + 530 , 7 @ @ public class TranslationCheck extends AbstractFileSetCheck { <nl> * @ param fileNameRegexp file name regexp . <nl> * @ return true if a resource bundle contains a file which name matches file name regexp . <nl> * / <nl> - public boolean containsFile ( final String fileNameRegexp ) { <nl> + public boolean containsFile ( String fileNameRegexp ) { <nl> boolean containsFile = false ; <nl> for ( File currentFile : files ) { <nl> if ( Pattern . matches ( fileNameRegexp , currentFile . getName ( ) ) ) {

TEST DIFF:
diff - - git a / wercker . yml b / wercker . yml 
 index 7688fc4 . . 5e5055a 100644 
 - - - a / wercker . yml 
 + + + b / wercker . yml 
 @ @ - 7 , 6 + 7 , 18 @ @ build : 
 export MAVEN _ OPTS = " - Dmaven . repo . local = $ { WERCKER _ CACHE _ DIR } " 
 mvn - version 
 
 + - script : 
 + name : install groovy 
 + code : | - 
 + if [ ! - d $ { WERCKER _ CACHE _ DIR } / groovy ] ; 
 + then wget - O $ { WERCKER _ CACHE _ DIR } / groovy . zip https : / / dl . bintray . com / groovy / maven / apache - groovy - binary - 2 . 4 . 7 . zip ; 
 + unzip $ { WERCKER _ CACHE _ DIR } / groovy . zip - d $ { WERCKER _ CACHE _ DIR } ; 
 + mv $ { WERCKER _ CACHE _ DIR } / groovy - 2 . 4 . 7 $ { WERCKER _ CACHE _ DIR } / groovy 
 + fi 
 + export GROOVY _ HOME = $ { WERCKER _ CACHE _ DIR } / groovy 
 + PATH = $ GROOVY _ HOME / bin : $ PATH 
 + groovy - v 
 + 
 # unit tests ( oraclejdk8 ) 
 - script : 
 name : tests 
 @ @ - 57 , 9 + 69 , 8 @ @ build : 
 code : > 
 rm - rf contribution 
 & & git clone https : / / github . com / checkstyle / contribution & & cd contribution / checkstyle - tester 
 - & & sed - i . ' ' ' s / projects - to - test - on . properties / projects - for - wercker . properties / ' launch . sh 
 & & cd . . / . . / & & mvn clean install - DskipTests - DskipITs - Dcobertura . skip = true 
 - Dpmd . skip = true - Dfindbugs . skip = true 
 - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dxml . skip = true 
 & & cd contribution / checkstyle - tester 
 - & & . / launch . sh - Dcheckstyle . config . location = checks - nonjavadoc - error . xml 
 + & & groovy . / launch . groovy projects - for - wercker . properties checks - nonjavadoc - error . xml

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 index 78d481e . . e87d341 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 @ @ - 219 , 7 + 219 , 8 @ @ public class TranslationCheck extends AbstractFileSetCheck { 
 * @ param baseNameRegexp base name regexp pattern . 
 * @ return set of ResourceBundles . 
 * / 
 - private Set < ResourceBundle > groupFilesIntoBundles ( Set < File > files , Pattern baseNameRegexp ) { 
 + private static Set < ResourceBundle > groupFilesIntoBundles ( Set < File > files , 
 + Pattern baseNameRegexp ) { 
 final Set < ResourceBundle > resourceBundles = Sets . newHashSet ( ) ; 
 for ( File currentFile : files ) { 
 final String fileName = currentFile . getName ( ) ; 
 @ @ - 297 , 7 + 298 , 7 @ @ public class TranslationCheck extends AbstractFileSetCheck { 
 * @ return Guava ' s Optional of resource bundle ( present if target bundle is found ) . 
 * / 
 private static Optional < ResourceBundle > findBundle ( Set < ResourceBundle > bundles , 
 - final ResourceBundle targetBundle ) { 
 + ResourceBundle targetBundle ) { 
 Optional < ResourceBundle > result = Optional . absent ( ) ; 
 for ( ResourceBundle currentBundle : bundles ) { 
 if ( targetBundle . getBaseName ( ) . equals ( currentBundle . getBaseName ( ) ) 
 @ @ - 529 , 7 + 530 , 7 @ @ public class TranslationCheck extends AbstractFileSetCheck { 
 * @ param fileNameRegexp file name regexp . 
 * @ return true if a resource bundle contains a file which name matches file name regexp . 
 * / 
 - public boolean containsFile ( final String fileNameRegexp ) { 
 + public boolean containsFile ( String fileNameRegexp ) { 
 boolean containsFile = false ; 
 for ( File currentFile : files ) { 
 if ( Pattern . matches ( fileNameRegexp , currentFile . getName ( ) ) ) {
