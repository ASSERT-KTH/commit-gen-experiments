BLEU SCORE: 0.15106876986783843

TEST MSG: Issue # 6289 : added CONSTRUCTOR _ CALLS pitest mutator
GENERATED MSG: Issue # 6264 : added TRUE _ RETURNS pitest mutator

TEST DIFF (one line): diff - - git a / . ci / pitest . sh b / . ci / pitest . sh <nl> index 1a2475a . . e861ff8 100755 <nl> - - - a / . ci / pitest . sh <nl> + + + b / . ci / pitest . sh <nl> @ @ - 34 , 7 + 34 , 7 @ @ case $ 1 in <nl> pitest - annotation | pitest - design | pitest - header | pitest - imports \ <nl> | pitest - metrics | pitest - modifier | pitest - naming \ <nl> | pitest - regexp | pitest - sizes | pitest - whitespace | pitest - ant \ <nl> - | pitest - api | pitest - common | pitest - filters | pitest - main \ <nl> + | pitest - api | pitest - filters | pitest - main \ <nl> | pitest - packagenamesloader | pitest - tree - walker | pitest - utils \ <nl> | pitest - xpath | pitest - common - 2 | pitest - misc | pitest - blocks ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> @ @ - 42 , 6 + 42 , 14 @ @ pitest - annotation | pitest - design | pitest - header | pitest - imports \ <nl> checkPitestReport " $ { ignoredItems [ @ ] } " <nl> ; ; <nl> <nl> + pitest - common ) <nl> + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> + declare - a ignoredItems = ( <nl> + " PropertyCacheFile . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > resources . add ( new ExternalResource ( EXTERNAL _ RESOURCE _ KEY _ PREFIX + location , < / span > < / pre > < / td > < / tr > " <nl> + ) ; <nl> + checkPitestReport " $ { ignoredItems [ @ ] } " <nl> + ; ; <nl> + <nl> pitest - coding ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> declare - a ignoredItems = ( <nl> diff - - git a / pom . xml b / pom . xml <nl> index 9ec680f . . 0902ee8 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1778 , 6 + 1778 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 1848 , 6 + 1849 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 1890 , 6 + 1892 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 1932 , 6 + 1935 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 1974 , 6 + 1978 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2016 , 6 + 2021 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2058 , 6 + 2064 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2100 , 6 + 2107 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2142 , 6 + 2150 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2184 , 6 + 2193 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2226 , 6 + 2236 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2268 , 6 + 2279 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2316 , 6 + 2328 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2358 , 6 + 2371 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2400 , 6 + 2414 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2443 , 6 + 2458 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2485 , 6 + 2501 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2524 , 6 + 2541 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2595 , 6 + 2613 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2651 , 6 + 2670 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2690 , 6 + 2710 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2778 , 6 + 2799 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2833 , 6 + 2855 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2877 , 6 + 2900 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 2937 , 6 + 2961 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> @ @ - 3004 , 6 + 3029 , 7 @ @ <nl> < configuration > <nl> < mutators > <nl> < mutator > CONDITIONALS _ BOUNDARY < / mutator > <nl> + < mutator > CONSTRUCTOR _ CALLS < / mutator > <nl> < mutator > INCREMENTS < / mutator > <nl> < mutator > INVERT _ NEGS < / mutator > <nl> < mutator > MATH < / mutator > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index 0041c1e . . 5b7d95d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 593 , 7 + 593 , 7 @ @ public final class Main { <nl> <nl> / * * List of file to validate . * / <nl> @ Parameters ( arity = " 1 . . * " , description = " One or more source files to verify " ) <nl> - private final List < File > files = new ArrayList < > ( ) ; <nl> + private List < File > files ; <nl> <nl> / * * Config file location . * / <nl> @ Option ( names = " - c " , description = " Sets the check configuration file to use . " ) <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java <nl> index 29ffe7f . . 9714248 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java <nl> @ @ - 91 , 14 + 91 , 9 @ @ public class NewlineAtEndOfFileCheck <nl> * one of ' crlf ' , ' lf ' , ' cr ' , ' lf _ cr _ crlf ' or ' system ' <nl> * / <nl> public void setLineSeparator ( String lineSeparatorParam ) { <nl> - try { <nl> - lineSeparator = <nl> - Enum . valueOf ( LineSeparatorOption . class , lineSeparatorParam . trim ( ) <nl> - . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + lineSeparatorParam , iae ) ; <nl> - } <nl> + lineSeparator = <nl> + Enum . valueOf ( LineSeparatorOption . class , lineSeparatorParam . trim ( ) <nl> + . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> index 1a220ed . . 8fdbc68 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> @ @ - 88 , 12 + 88 , 7 @ @ public class EmptyBlockCheck <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = BlockOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = BlockOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> index fc8c3f1 . . caf5c7c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> @ @ - 117 , 12 + 117 , 7 @ @ public class LeftCurlyCheck <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = LeftCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = LeftCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index 180ea62 . . e0ceb89 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 114 , 12 + 114 , 7 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = RightCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = RightCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> index acc032c . . 79b3bec 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> @ @ - 261 , 12 + 261 , 7 @ @ public class ImportOrderCheck <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = ImportOrderOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = ImportOrderOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / AbstractParenPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / AbstractParenPadCheck . java <nl> index 93c0287 . . 51a2782 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / AbstractParenPadCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / AbstractParenPadCheck . java <nl> @ @ - 75 , 12 + 75 , 7 @ @ public abstract class AbstractParenPadCheck <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java <nl> index 1eeb1b6 . . 9abbf92 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java <nl> @ @ - 76 , 12 + 76 , 7 @ @ public class EmptyForInitializerPadCheck <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java <nl> index ae2fc1a . . 529198e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java <nl> @ @ - 76 , 12 + 76 , 7 @ @ public class EmptyForIteratorPadCheck <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheck . java <nl> index 94fe158 . . 32f04fc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheck . java <nl> @ @ - 164 , 12 + 164 , 7 @ @ public class MethodParamPadCheck <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java <nl> index 2156d92 . . a2ec51e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java <nl> @ @ - 115 , 12 + 115 , 7 @ @ public class OperatorWrapCheck <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = WrapOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = WrapOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java <nl> index 994f236 . . f437e8d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java <nl> @ @ - 105 , 12 + 105 , 7 @ @ public class SeparatorWrapCheck <nl> * @ throws IllegalArgumentException if unable to decode <nl> * / <nl> public void setOption ( String optionStr ) { <nl> - try { <nl> - option = WrapOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> - } <nl> - catch ( IllegalArgumentException iae ) { <nl> - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; <nl> - } <nl> + option = WrapOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java <nl> index 2589fc5 . . 6385c97 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java <nl> @ @ - 20 , 12 + 20 , 21 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . HiddenFieldCheck . MSG _ KEY ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + <nl> + import java . io . File ; <nl> + import java . util . Optional ; <nl> + import java . util . function . Predicate ; <nl> <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + import com . puppycrawl . tools . checkstyle . JavaParser ; <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> + import com . puppycrawl . tools . checkstyle . internal . utils . TestUtil ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> <nl> public class HiddenFieldCheckTest <nl> @ @ - 403 , 4 + 412 , 55 @ @ public class HiddenFieldCheckTest <nl> verify ( checkConfig , getPath ( " InputHiddenFieldReceiver . java " ) , expected ) ; <nl> } <nl> <nl> + / * * <nl> + * We cannot reproduce situation when visitToken is called and leaveToken is not . <nl> + * So , we have to use reflection to be sure that even in such situation <nl> + * state of the field will be cleared . <nl> + * <nl> + * @ throws Exception when code tested throws exception <nl> + * / <nl> + @ Test <nl> + public void testClearState ( ) throws Exception { <nl> + final HiddenFieldCheck check = new HiddenFieldCheck ( ) ; <nl> + final DetailAST root = JavaParser . parseFile ( new File ( getPath ( " InputHiddenField . java " ) ) , <nl> + JavaParser . Options . WITHOUT _ COMMENTS ) ; <nl> + final Optional < DetailAST > classDef = TestUtil . findTokenInAstByPredicate ( root , <nl> + ast - > ast . getType ( ) = = TokenTypes . CLASS _ DEF ) ; <nl> + <nl> + assertTrue ( " Ast should contain CLASS _ DEF " , classDef . isPresent ( ) ) ; <nl> + assertTrue ( " State is not cleared on beginTree " , <nl> + TestUtil . isStatefulFieldClearedDuringBeginTree ( check , classDef . get ( ) , " frame " , <nl> + new CheckIfStatefulFieldCleared ( ) ) ) ; <nl> + } <nl> + <nl> + private static class CheckIfStatefulFieldCleared implements Predicate < Object > { <nl> + <nl> + @ Override <nl> + public boolean test ( Object frame ) { <nl> + boolean result = frame ! = null ; <nl> + <nl> + / / verify object is cleared <nl> + if ( result ) { <nl> + final Class < ? > frameClass = frame . getClass ( ) ; <nl> + <nl> + try { <nl> + if ( TestUtil . getClassDeclaredField ( frameClass , " parent " ) . get ( frame ) ! = null <nl> + | | ! ( ( Boolean ) TestUtil . getClassDeclaredField ( frameClass , " staticType " ) <nl> + . get ( frame ) ) <nl> + | | TestUtil . getClassDeclaredField ( frameClass , " frameName " ) <nl> + . get ( frame ) ! = null ) { <nl> + result = false ; <nl> + } <nl> + } <nl> + catch ( NoSuchFieldException | IllegalArgumentException <nl> + | IllegalAccessException ex ) { <nl> + throw new IllegalStateException ( ex ) ; <nl> + } <nl> + } <nl> + <nl> + return result ; <nl> + } <nl> + <nl> + } <nl> + <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> index b058a21 . . aaddaf2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> @ @ - 297 , 7 + 297 , 8 @ @ public final class IllegalTypeCheck extends AbstractCheck { <nl> final DetailAST grandParentAST = parameterDef . getParent ( ) . getParent ( ) ; <nl> <nl> if ( grandParentAST . getType ( ) = = TokenTypes . METHOD _ DEF <nl> - & & isCheckedMethod ( grandParentAST ) ) { <nl> + & & isCheckedMethod ( grandParentAST ) <nl> + & & isVerifiable ( grandParentAST ) ) { <nl> checkClassName ( parameterDef ) ; <nl> } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java <nl> index 35d0a8f . . 6330579 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java <nl> @ @ - 32 , 4 + 32 , 7 @ @ public class InputIllegalTypeMemberModifiers { <nl> / / WARNING if memberModifiers is set and contains TokenTypes . LITERAL _ PROTECTED <nl> protected AbstractClass a1 = null ; <nl> public AbstractClass a2 = null ; <nl> + <nl> + / / NO WARNING if memberModifiers is set and does not contain TokenTypes . LITERAL _ PUBLIC <nl> + public void table5 ( java . util . TreeSet < Object > arg ) { } <nl> }

TEST DIFF:
diff - - git a / . ci / pitest . sh b / . ci / pitest . sh 
 index 1a2475a . . e861ff8 100755 
 - - - a / . ci / pitest . sh 
 + + + b / . ci / pitest . sh 
 @ @ - 34 , 7 + 34 , 7 @ @ case $ 1 in 
 pitest - annotation | pitest - design | pitest - header | pitest - imports \ 
 | pitest - metrics | pitest - modifier | pitest - naming \ 
 | pitest - regexp | pitest - sizes | pitest - whitespace | pitest - ant \ 
 - | pitest - api | pitest - common | pitest - filters | pitest - main \ 
 + | pitest - api | pitest - filters | pitest - main \ 
 | pitest - packagenamesloader | pitest - tree - walker | pitest - utils \ 
 | pitest - xpath | pitest - common - 2 | pitest - misc | pitest - blocks ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 @ @ - 42 , 6 + 42 , 14 @ @ pitest - annotation | pitest - design | pitest - header | pitest - imports \ 
 checkPitestReport " $ { ignoredItems [ @ ] } " 
 ; ; 
 
 + pitest - common ) 
 + mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 + declare - a ignoredItems = ( 
 + " PropertyCacheFile . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > resources . add ( new ExternalResource ( EXTERNAL _ RESOURCE _ KEY _ PREFIX + location , < / span > < / pre > < / td > < / tr > " 
 + ) ; 
 + checkPitestReport " $ { ignoredItems [ @ ] } " 
 + ; ; 
 + 
 pitest - coding ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 declare - a ignoredItems = ( 
 diff - - git a / pom . xml b / pom . xml 
 index 9ec680f . . 0902ee8 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1778 , 6 + 1778 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 1848 , 6 + 1849 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 1890 , 6 + 1892 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 1932 , 6 + 1935 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 1974 , 6 + 1978 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2016 , 6 + 2021 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2058 , 6 + 2064 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2100 , 6 + 2107 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2142 , 6 + 2150 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2184 , 6 + 2193 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2226 , 6 + 2236 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2268 , 6 + 2279 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2316 , 6 + 2328 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2358 , 6 + 2371 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2400 , 6 + 2414 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2443 , 6 + 2458 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2485 , 6 + 2501 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2524 , 6 + 2541 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2595 , 6 + 2613 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2651 , 6 + 2670 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2690 , 6 + 2710 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2778 , 6 + 2799 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2833 , 6 + 2855 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2877 , 6 + 2900 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 2937 , 6 + 2961 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 @ @ - 3004 , 6 + 3029 , 7 @ @ 
 < configuration > 
 < mutators > 
 < mutator > CONDITIONALS _ BOUNDARY < / mutator > 
 + < mutator > CONSTRUCTOR _ CALLS < / mutator > 
 < mutator > INCREMENTS < / mutator > 
 < mutator > INVERT _ NEGS < / mutator > 
 < mutator > MATH < / mutator > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index 0041c1e . . 5b7d95d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 593 , 7 + 593 , 7 @ @ public final class Main { 
 
 / * * List of file to validate . * / 
 @ Parameters ( arity = " 1 . . * " , description = " One or more source files to verify " ) 
 - private final List < File > files = new ArrayList < > ( ) ; 
 + private List < File > files ; 
 
 / * * Config file location . * / 
 @ Option ( names = " - c " , description = " Sets the check configuration file to use . " ) 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java 
 index 29ffe7f . . 9714248 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheck . java 
 @ @ - 91 , 14 + 91 , 9 @ @ public class NewlineAtEndOfFileCheck 
 * one of ' crlf ' , ' lf ' , ' cr ' , ' lf _ cr _ crlf ' or ' system ' 
 * / 
 public void setLineSeparator ( String lineSeparatorParam ) { 
 - try { 
 - lineSeparator = 
 - Enum . valueOf ( LineSeparatorOption . class , lineSeparatorParam . trim ( ) 
 - . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + lineSeparatorParam , iae ) ; 
 - } 
 + lineSeparator = 
 + Enum . valueOf ( LineSeparatorOption . class , lineSeparatorParam . trim ( ) 
 + . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 index 1a220ed . . 8fdbc68 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 @ @ - 88 , 12 + 88 , 7 @ @ public class EmptyBlockCheck 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = BlockOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = BlockOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 index fc8c3f1 . . caf5c7c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 @ @ - 117 , 12 + 117 , 7 @ @ public class LeftCurlyCheck 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = LeftCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = LeftCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index 180ea62 . . e0ceb89 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 114 , 12 + 114 , 7 @ @ public class RightCurlyCheck extends AbstractCheck { 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = RightCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = RightCurlyOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 index acc032c . . 79b3bec 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 @ @ - 261 , 12 + 261 , 7 @ @ public class ImportOrderCheck 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = ImportOrderOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = ImportOrderOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / AbstractParenPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / AbstractParenPadCheck . java 
 index 93c0287 . . 51a2782 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / AbstractParenPadCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / AbstractParenPadCheck . java 
 @ @ - 75 , 12 + 75 , 7 @ @ public abstract class AbstractParenPadCheck 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java 
 index 1eeb1b6 . . 9abbf92 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForInitializerPadCheck . java 
 @ @ - 76 , 12 + 76 , 7 @ @ public class EmptyForInitializerPadCheck 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java 
 index ae2fc1a . . 529198e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyForIteratorPadCheck . java 
 @ @ - 76 , 12 + 76 , 7 @ @ public class EmptyForIteratorPadCheck 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheck . java 
 index 94fe158 . . 32f04fc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / MethodParamPadCheck . java 
 @ @ - 164 , 12 + 164 , 7 @ @ public class MethodParamPadCheck 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = PadOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java 
 index 2156d92 . . a2ec51e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheck . java 
 @ @ - 115 , 12 + 115 , 7 @ @ public class OperatorWrapCheck 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = WrapOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = WrapOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java 
 index 994f236 . . f437e8d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SeparatorWrapCheck . java 
 @ @ - 105 , 12 + 105 , 7 @ @ public class SeparatorWrapCheck 
 * @ throws IllegalArgumentException if unable to decode 
 * / 
 public void setOption ( String optionStr ) { 
 - try { 
 - option = WrapOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 - } 
 - catch ( IllegalArgumentException iae ) { 
 - throw new IllegalArgumentException ( " unable to parse " + optionStr , iae ) ; 
 - } 
 + option = WrapOption . valueOf ( optionStr . trim ( ) . toUpperCase ( Locale . ENGLISH ) ) ; 
 } 
 
 @ Override 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java 
 index 2589fc5 . . 6385c97 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / HiddenFieldCheckTest . java 
 @ @ - 20 , 12 + 20 , 21 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . coding . HiddenFieldCheck . MSG _ KEY ; 
 + import static org . junit . Assert . assertTrue ; 
 + 
 + import java . io . File ; 
 + import java . util . Optional ; 
 + import java . util . function . Predicate ; 
 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + import com . puppycrawl . tools . checkstyle . JavaParser ; 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 + import com . puppycrawl . tools . checkstyle . internal . utils . TestUtil ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 
 public class HiddenFieldCheckTest 
 @ @ - 403 , 4 + 412 , 55 @ @ public class HiddenFieldCheckTest 
 verify ( checkConfig , getPath ( " InputHiddenFieldReceiver . java " ) , expected ) ; 
 } 
 
 + / * * 
 + * We cannot reproduce situation when visitToken is called and leaveToken is not . 
 + * So , we have to use reflection to be sure that even in such situation 
 + * state of the field will be cleared . 
 + * 
 + * @ throws Exception when code tested throws exception 
 + * / 
 + @ Test 
 + public void testClearState ( ) throws Exception { 
 + final HiddenFieldCheck check = new HiddenFieldCheck ( ) ; 
 + final DetailAST root = JavaParser . parseFile ( new File ( getPath ( " InputHiddenField . java " ) ) , 
 + JavaParser . Options . WITHOUT _ COMMENTS ) ; 
 + final Optional < DetailAST > classDef = TestUtil . findTokenInAstByPredicate ( root , 
 + ast - > ast . getType ( ) = = TokenTypes . CLASS _ DEF ) ; 
 + 
 + assertTrue ( " Ast should contain CLASS _ DEF " , classDef . isPresent ( ) ) ; 
 + assertTrue ( " State is not cleared on beginTree " , 
 + TestUtil . isStatefulFieldClearedDuringBeginTree ( check , classDef . get ( ) , " frame " , 
 + new CheckIfStatefulFieldCleared ( ) ) ) ; 
 + } 
 + 
 + private static class CheckIfStatefulFieldCleared implements Predicate < Object > { 
 + 
 + @ Override 
 + public boolean test ( Object frame ) { 
 + boolean result = frame ! = null ; 
 + 
 + / / verify object is cleared 
 + if ( result ) { 
 + final Class < ? > frameClass = frame . getClass ( ) ; 
 + 
 + try { 
 + if ( TestUtil . getClassDeclaredField ( frameClass , " parent " ) . get ( frame ) ! = null 
 + | | ! ( ( Boolean ) TestUtil . getClassDeclaredField ( frameClass , " staticType " ) 
 + . get ( frame ) ) 
 + | | TestUtil . getClassDeclaredField ( frameClass , " frameName " ) 
 + . get ( frame ) ! = null ) { 
 + result = false ; 
 + } 
 + } 
 + catch ( NoSuchFieldException | IllegalArgumentException 
 + | IllegalAccessException ex ) { 
 + throw new IllegalStateException ( ex ) ; 
 + } 
 + } 
 + 
 + return result ; 
 + } 
 + 
 + } 
 + 
 }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 index b058a21 . . aaddaf2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 @ @ - 297 , 7 + 297 , 8 @ @ public final class IllegalTypeCheck extends AbstractCheck { 
 final DetailAST grandParentAST = parameterDef . getParent ( ) . getParent ( ) ; 
 
 if ( grandParentAST . getType ( ) = = TokenTypes . METHOD _ DEF 
 - & & isCheckedMethod ( grandParentAST ) ) { 
 + & & isCheckedMethod ( grandParentAST ) 
 + & & isVerifiable ( grandParentAST ) ) { 
 checkClassName ( parameterDef ) ; 
 } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java 
 index 35d0a8f . . 6330579 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / illegaltype / InputIllegalTypeMemberModifiers . java 
 @ @ - 32 , 4 + 32 , 7 @ @ public class InputIllegalTypeMemberModifiers { 
 / / WARNING if memberModifiers is set and contains TokenTypes . LITERAL _ PROTECTED 
 protected AbstractClass a1 = null ; 
 public AbstractClass a2 = null ; 
 + 
 + / / NO WARNING if memberModifiers is set and does not contain TokenTypes . LITERAL _ PUBLIC 
 + public void table5 ( java . util . TreeSet < Object > arg ) { } 
 }
