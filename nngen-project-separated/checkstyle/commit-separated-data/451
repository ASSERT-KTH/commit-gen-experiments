BLEU SCORE: 0.050912128230977495

TEST MSG: Issue # 5154 : Incorrect indentation check for method preceded by annotation , with method parameter on separate line
GENERATED MSG: Issue # 3103 : removed duplicated validation by line wrapping

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> index f8af0a7 . . 39f2b9c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> @ @ - 262 , 7 + 262 , 8 @ @ public class LineWrappingHandler { <nl> if ( isCurrentNodeCloseAnnotationAloneInLine <nl> | | node . getType ( ) = = TokenTypes . AT <nl> & & ( parentNode . getParent ( ) . getType ( ) = = TokenTypes . MODIFIERS <nl> - | | parentNode . getParent ( ) . getType ( ) = = TokenTypes . ANNOTATIONS ) ) { <nl> + | | parentNode . getParent ( ) . getType ( ) = = TokenTypes . ANNOTATIONS ) <nl> + | | node . getLineNo ( ) = = atNode . getLineNo ( ) ) { <nl> logWarningMessage ( node , firstNodeIndent ) ; <nl> } <nl> else { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> index 4b30162 . . 91606fe 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> @ @ - 1746 , 6 + 1746 , 39 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testMethodPrecedeByAnnotationsWithParameterOnSeparateLine ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; <nl> + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " basicOffset " , " 2 " ) ; <nl> + checkConfig . addAttribute ( " braceAdjustment " , " 0 " ) ; <nl> + checkConfig . addAttribute ( " caseIndent " , " 2 " ) ; <nl> + checkConfig . addAttribute ( " throwsIndent " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " lineWrappingIndentation " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " arrayInitIndent " , " 2 " ) ; <nl> + final String fileName = <nl> + getPath ( " InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine . java " ) ; <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , fileName , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testAnnotationIncorrect ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; <nl> + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " basicOffset " , " 4 " ) ; <nl> + checkConfig . addAttribute ( " braceAdjustment " , " 0 " ) ; <nl> + checkConfig . addAttribute ( " lineWrappingIndentation " , " 4 " ) ; <nl> + final String fileName = <nl> + getPath ( " InputIndentationAnnotationIncorrect . java " ) ; <nl> + final String [ ] expected = { <nl> + " 11 : " + getCheckMessage ( MSG _ ERROR , " ( " , 4 , 8 ) , <nl> + " 14 : " + getCheckMessage ( MSG _ ERROR , " ( " , 8 , 12 ) , <nl> + " 19 : " + getCheckMessage ( MSG _ ERROR , " ( " , 4 , 8 ) , <nl> + } ; <nl> + verify ( checkConfig , fileName , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testInputAnnotationScopeIndentationCheck ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; <nl> checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationAnnotationIncorrect . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationAnnotationIncorrect . java <nl> new file mode 100644 <nl> index 0000000 . . 20d8784 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationAnnotationIncorrect . java <nl> @ @ - 0 , 0 + 1 , 24 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . indentation . indentation ; / / indent : 0 exp : 0 <nl> + <nl> + class InpuIndentationAnnotationIncorrect { / / indent : 0 exp : 0 <nl> + <nl> + public @ interface MyAnnotation1 { / / indent : 4 exp : 4 <nl> + String value ( ) ; / / indent : 8 exp : 8 <nl> + } / / indent : 4 exp : 4 <nl> + <nl> + @ MyAnnotation2 / / indent : 4 exp : 4 <nl> + @ MyAnnotation1 / / indent : 4 exp : 4 <nl> + ( value = " " ) / / indent : 4 exp : 8 <nl> + class innerClass { / / indent : 4 exp : 4 <nl> + @ MyAnnotation2 @ MyAnnotation1 / / indent : 8 exp : 8 <nl> + ( value = " " ) / / indent : 8 exp : 12 <nl> + public int a ; / / indent : 8 exp : 8 <nl> + } / / indent : 4 exp : 4 <nl> + <nl> + @ MyAnnotation2 @ MyAnnotation1 / / indent : 4 exp : 4 <nl> + ( value = " " ) / / indent : 4 exp : 8 <nl> + class InputIndentationAnnotationInnerClass { / / indent : 4 exp : 4 <nl> + <nl> + } / / indent : 4 exp : 4 <nl> + } / / indent : 0 exp : 0 <nl> + <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine . java <nl> new file mode 100644 <nl> index 0000000 . . b0ea5d2 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine . java <nl> @ @ - 0 , 0 + 1 , 20 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . indentation . indentation ; / / indent : 0 exp : 0 <nl> + <nl> + public class InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine { / / indent : 0 exp : 0 <nl> + <nl> + @ interface Annotation1 { / / indent : 2 exp : 2 <nl> + String field1 ( ) ; / / indent : 4 exp : 4 <nl> + String field2 ( ) ; / / indent : 4 exp : 4 <nl> + } / / indent : 2 exp : 2 <nl> + <nl> + @ interface Annotation2 { } ; / / indent : 2 exp : 2 <nl> + <nl> + @ Annotation1 ( field1 = " foo " , field2 = " bar " ) / / indent : 2 exp : 2 <nl> + public @ Annotation2 String method ( / / indent : 2 exp : 2 <nl> + String param / / indent : 6 exp : 6 <nl> + ) { / / indent : 2 exp : 2 <nl> + return null ; / / indent : 4 exp : 4 <nl> + } / / indent : 2 exp : 2 <nl> + <nl> + } / / indent : 0 exp : 0 <nl> +
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 345aaa5 . . 0b76e8b 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 266 , 7 + 266 , 7 @ @ <nl> < dependency > <nl> < groupId > nl . jqno . equalsverifier < / groupId > <nl> < artifactId > equalsverifier < / artifactId > <nl> - < version > 1 . 7 . 8 < / version > <nl> + < version > 2 . 0 . 1 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> index 1579dfb . . b90a39e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> @ @ - 425 , 12 + 425 , 14 @ @ public class SuppressionCommentFilter <nl> return Objects . equals ( line , tag . line ) <nl> & & Objects . equals ( column , tag . column ) <nl> & & Objects . equals ( reportingOn , tag . reportingOn ) <nl> - & & Objects . equals ( text , tag . text ) ; <nl> + & & Objects . equals ( text , tag . text ) <nl> + & & Objects . equals ( tagCheckRegexp , tag . tagCheckRegexp ) <nl> + & & Objects . equals ( tagMessageRegexp , tag . tagMessageRegexp ) ; <nl> } <nl> <nl> @ Override <nl> public int hashCode ( ) { <nl> - return Objects . hash ( text , line , column , reportingOn ) ; <nl> + return Objects . hash ( text , line , column , reportingOn , tagCheckRegexp , tagMessageRegexp ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> index 56556ce . . 21aea96 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> @ @ - 187 , 6 + 187 , 7 @ @ public class SuppressElementTest { <nl> public void testEqualsAndHashCode ( ) { <nl> EqualsVerifier . forClass ( SuppressElement . class ) <nl> . usingGetClass ( ) <nl> + . withIgnoredFields ( " fileRegexp " , " checkRegexp " , " columnFilter " , " lineFilter " ) <nl> . suppress ( Warning . NONFINAL _ FIELDS ) <nl> . verify ( ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> index ea1ecb8 . . e6c52dc 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java <nl> @ @ - 53 , 6 + 53 , 7 @ @ public class SuppressionFilterTest { <nl> EqualsVerifier <nl> . forClass ( SuppressionFilter . class ) <nl> . usingGetClass ( ) <nl> + . withIgnoredFields ( " file " , " optional " , " configuration " ) <nl> . suppress ( Warning . NONFINAL _ FIELDS ) <nl> . verify ( ) ; <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 index f8af0a7 . . 39f2b9c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 @ @ - 262 , 7 + 262 , 8 @ @ public class LineWrappingHandler { 
 if ( isCurrentNodeCloseAnnotationAloneInLine 
 | | node . getType ( ) = = TokenTypes . AT 
 & & ( parentNode . getParent ( ) . getType ( ) = = TokenTypes . MODIFIERS 
 - | | parentNode . getParent ( ) . getType ( ) = = TokenTypes . ANNOTATIONS ) ) { 
 + | | parentNode . getParent ( ) . getType ( ) = = TokenTypes . ANNOTATIONS ) 
 + | | node . getLineNo ( ) = = atNode . getLineNo ( ) ) { 
 logWarningMessage ( node , firstNodeIndent ) ; 
 } 
 else { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 index 4b30162 . . 91606fe 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 @ @ - 1746 , 6 + 1746 , 39 @ @ public class IndentationCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testMethodPrecedeByAnnotationsWithParameterOnSeparateLine ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; 
 + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 + checkConfig . addAttribute ( " basicOffset " , " 2 " ) ; 
 + checkConfig . addAttribute ( " braceAdjustment " , " 0 " ) ; 
 + checkConfig . addAttribute ( " caseIndent " , " 2 " ) ; 
 + checkConfig . addAttribute ( " throwsIndent " , " 4 " ) ; 
 + checkConfig . addAttribute ( " lineWrappingIndentation " , " 4 " ) ; 
 + checkConfig . addAttribute ( " arrayInitIndent " , " 2 " ) ; 
 + final String fileName = 
 + getPath ( " InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine . java " ) ; 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , fileName , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testAnnotationIncorrect ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; 
 + checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 + checkConfig . addAttribute ( " basicOffset " , " 4 " ) ; 
 + checkConfig . addAttribute ( " braceAdjustment " , " 0 " ) ; 
 + checkConfig . addAttribute ( " lineWrappingIndentation " , " 4 " ) ; 
 + final String fileName = 
 + getPath ( " InputIndentationAnnotationIncorrect . java " ) ; 
 + final String [ ] expected = { 
 + " 11 : " + getCheckMessage ( MSG _ ERROR , " ( " , 4 , 8 ) , 
 + " 14 : " + getCheckMessage ( MSG _ ERROR , " ( " , 8 , 12 ) , 
 + " 19 : " + getCheckMessage ( MSG _ ERROR , " ( " , 4 , 8 ) , 
 + } ; 
 + verify ( checkConfig , fileName , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testInputAnnotationScopeIndentationCheck ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( IndentationCheck . class ) ; 
 checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationAnnotationIncorrect . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationAnnotationIncorrect . java 
 new file mode 100644 
 index 0000000 . . 20d8784 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationAnnotationIncorrect . java 
 @ @ - 0 , 0 + 1 , 24 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . indentation . indentation ; / / indent : 0 exp : 0 
 + 
 + class InpuIndentationAnnotationIncorrect { / / indent : 0 exp : 0 
 + 
 + public @ interface MyAnnotation1 { / / indent : 4 exp : 4 
 + String value ( ) ; / / indent : 8 exp : 8 
 + } / / indent : 4 exp : 4 
 + 
 + @ MyAnnotation2 / / indent : 4 exp : 4 
 + @ MyAnnotation1 / / indent : 4 exp : 4 
 + ( value = " " ) / / indent : 4 exp : 8 
 + class innerClass { / / indent : 4 exp : 4 
 + @ MyAnnotation2 @ MyAnnotation1 / / indent : 8 exp : 8 
 + ( value = " " ) / / indent : 8 exp : 12 
 + public int a ; / / indent : 8 exp : 8 
 + } / / indent : 4 exp : 4 
 + 
 + @ MyAnnotation2 @ MyAnnotation1 / / indent : 4 exp : 4 
 + ( value = " " ) / / indent : 4 exp : 8 
 + class InputIndentationAnnotationInnerClass { / / indent : 4 exp : 4 
 + 
 + } / / indent : 4 exp : 4 
 + } / / indent : 0 exp : 0 
 + 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine . java 
 new file mode 100644 
 index 0000000 . . b0ea5d2 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / indentation / InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine . java 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . indentation . indentation ; / / indent : 0 exp : 0 
 + 
 + public class InputIndentationMethodPrecededByAnnotationWithParameterOnSeparateLine { / / indent : 0 exp : 0 
 + 
 + @ interface Annotation1 { / / indent : 2 exp : 2 
 + String field1 ( ) ; / / indent : 4 exp : 4 
 + String field2 ( ) ; / / indent : 4 exp : 4 
 + } / / indent : 2 exp : 2 
 + 
 + @ interface Annotation2 { } ; / / indent : 2 exp : 2 
 + 
 + @ Annotation1 ( field1 = " foo " , field2 = " bar " ) / / indent : 2 exp : 2 
 + public @ Annotation2 String method ( / / indent : 2 exp : 2 
 + String param / / indent : 6 exp : 6 
 + ) { / / indent : 2 exp : 2 
 + return null ; / / indent : 4 exp : 4 
 + } / / indent : 2 exp : 2 
 + 
 + } / / indent : 0 exp : 0 
 +

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 345aaa5 . . 0b76e8b 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 266 , 7 + 266 , 7 @ @ 
 < dependency > 
 < groupId > nl . jqno . equalsverifier < / groupId > 
 < artifactId > equalsverifier < / artifactId > 
 - < version > 1 . 7 . 8 < / version > 
 + < version > 2 . 0 . 1 < / version > 
 < scope > test < / scope > 
 < / dependency > 
 < dependency > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 index 1579dfb . . b90a39e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 @ @ - 425 , 12 + 425 , 14 @ @ public class SuppressionCommentFilter 
 return Objects . equals ( line , tag . line ) 
 & & Objects . equals ( column , tag . column ) 
 & & Objects . equals ( reportingOn , tag . reportingOn ) 
 - & & Objects . equals ( text , tag . text ) ; 
 + & & Objects . equals ( text , tag . text ) 
 + & & Objects . equals ( tagCheckRegexp , tag . tagCheckRegexp ) 
 + & & Objects . equals ( tagMessageRegexp , tag . tagMessageRegexp ) ; 
 } 
 
 @ Override 
 public int hashCode ( ) { 
 - return Objects . hash ( text , line , column , reportingOn ) ; 
 + return Objects . hash ( text , line , column , reportingOn , tagCheckRegexp , tagMessageRegexp ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 index 56556ce . . 21aea96 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 @ @ - 187 , 6 + 187 , 7 @ @ public class SuppressElementTest { 
 public void testEqualsAndHashCode ( ) { 
 EqualsVerifier . forClass ( SuppressElement . class ) 
 . usingGetClass ( ) 
 + . withIgnoredFields ( " fileRegexp " , " checkRegexp " , " columnFilter " , " lineFilter " ) 
 . suppress ( Warning . NONFINAL _ FIELDS ) 
 . verify ( ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 index ea1ecb8 . . e6c52dc 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionFilterTest . java 
 @ @ - 53 , 6 + 53 , 7 @ @ public class SuppressionFilterTest { 
 EqualsVerifier 
 . forClass ( SuppressionFilter . class ) 
 . usingGetClass ( ) 
 + . withIgnoredFields ( " file " , " optional " , " configuration " ) 
 . suppress ( Warning . NONFINAL _ FIELDS ) 
 . verify ( ) ; 
 }
