BLEU SCORE: 0.10552670315936319

TEST MSG: Issue # 2604 : Update regexp pattern for LocalVariableName
GENERATED MSG: Issue # 1566 : ModifiedControlVariable violations fixed

TEST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 9129694 . . 9692614 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 329 , 7 + 329 , 10 @ @ <nl> < module name = " ConstantName " / > <nl> < module name = " InterfaceTypeParameterName " / > <nl> < module name = " LocalFinalVariableName " / > <nl> - < module name = " LocalVariableName " / > <nl> + < module name = " LocalVariableName " > <nl> + < property name = " format " value = " ^ ( id ) | ( [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] + ) $ " / > <nl> + < property name = " allowOneCharVarInForLoop " value = " true " / > <nl> + < / module > <nl> < module name = " MemberName " > <nl> < property name = " format " value = " ^ ( id ) | ( [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] + ) $ " / > <nl> < / module > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java <nl> index 2149740 . . 4fe1fe8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java <nl> @ @ - 90 , 8 + 90 , 8 @ @ class PkgControl { <nl> / / If there won ' t be match so I am the best there is . <nl> finestMatch = this ; <nl> / / Check if any of the children match . <nl> - for ( PkgControl pc : children ) { <nl> - final PkgControl match = pc . locateFinest ( forPkg ) ; <nl> + for ( PkgControl child : children ) { <nl> + final PkgControl match = child . locateFinest ( forPkg ) ; <nl> if ( match ! = null ) { <nl> finestMatch = match ; <nl> break ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index c0db620 . . c475a6e 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 175 , 21 + 175 , 21 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> final String treeCacheKey = blockCommentNode . getLineNo ( ) + " : " <nl> + blockCommentNode . getColumnNo ( ) ; <nl> <nl> - ParseStatus ps ; <nl> + ParseStatus result ; <nl> <nl> if ( TREE _ CACHE . get ( ) . containsKey ( treeCacheKey ) ) { <nl> - ps = TREE _ CACHE . get ( ) . get ( treeCacheKey ) ; <nl> + result = TREE _ CACHE . get ( ) . get ( treeCacheKey ) ; <nl> } <nl> else { <nl> - ps = parseJavadocAsDetailNode ( blockCommentNode ) ; <nl> - TREE _ CACHE . get ( ) . put ( treeCacheKey , ps ) ; <nl> + result = parseJavadocAsDetailNode ( blockCommentNode ) ; <nl> + TREE _ CACHE . get ( ) . put ( treeCacheKey , result ) ; <nl> } <nl> <nl> - if ( ps . getParseErrorMessage ( ) = = null ) { <nl> - processTree ( ps . getTree ( ) ) ; <nl> + if ( result . getParseErrorMessage ( ) = = null ) { <nl> + processTree ( result . getTree ( ) ) ; <nl> } <nl> else { <nl> - final ParseErrorMessage parseErrorMessage = ps . getParseErrorMessage ( ) ; <nl> + final ParseErrorMessage parseErrorMessage = result . getParseErrorMessage ( ) ; <nl> log ( parseErrorMessage . getLineNumber ( ) , <nl> parseErrorMessage . getMessageKey ( ) , <nl> parseErrorMessage . getMessageArguments ( ) ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 39fab45 . . f579345 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 912 , 9 + 912 , 9 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> / / Now dump out all throws without tags : - unless <nl> / / the user has chosen to suppress these problems <nl> if ( ! allowMissingThrowsTags & & reportExpectedTags ) { <nl> - for ( ExceptionInfo ei : throwsList ) { <nl> - if ( ! ei . isFound ( ) ) { <nl> - final Token token = ei . getName ( ) ; <nl> + for ( ExceptionInfo exceptionInfo : throwsList ) { <nl> + if ( ! exceptionInfo . isFound ( ) ) { <nl> + final Token token = exceptionInfo . getName ( ) ; <nl> log ( token . getLineNo ( ) , token . getColumnNo ( ) , <nl> MSG _ EXPECTED _ TAG , <nl> JavadocTagInfo . THROWS . getText ( ) , token . getText ( ) ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> index 50b8b1e . . 1f4a6e8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> @ @ - 471 , 12 + 471 , 12 @ @ public class JavadocStyleCheck <nl> * / <nl> private static boolean isExtraHtml ( String token , Deque < HtmlTag > htmlStack ) { <nl> boolean isExtra = true ; <nl> - for ( final HtmlTag td : htmlStack ) { <nl> + for ( final HtmlTag tag : htmlStack ) { <nl> / / Loop , looking for tags that are closed . <nl> / / The loop is needed in case there are unclosed <nl> / / tags on the stack . In that case , the stack would <nl> / / not be empty , but this tag would still be extra . <nl> - if ( token . equalsIgnoreCase ( td . getId ( ) ) ) { <nl> + if ( token . equalsIgnoreCase ( tag . getId ( ) ) ) { <nl> isExtra = false ; <nl> break ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> index 427bd3b . . 5a53207 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> @ @ - 113 , 10 + 113 , 8 @ @ public class Checker extends AutomaticBean implements MessageDispatcher { <nl> / * * <nl> * Creates a new < code > Checker < / code > instance . <nl> * The instance needs to be contextualized and configured . <nl> - * <nl> - * @ throws CheckstyleException if an error occurs <nl> * / <nl> - public Checker ( ) throws CheckstyleException { <nl> + public Checker ( ) { <nl> addListener ( counter ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyResolver . java <nl> index 33686eb . . 65fbbaa 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyResolver . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyResolver . java <nl> @ @ - 19 , 8 + 19 , 6 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> - import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> - <nl> / * * <nl> * Resolves properties in module configurations . <nl> * <nl> @ @ - 36 , 8 + 34 , 6 @ @ public interface PropertyResolver { <nl> * Resolves a property name to it ' s value . <nl> * @ param name the name of the property . <nl> * @ return the value that is associated with < code > propertyName < / code > . <nl> - * @ throws CheckstyleException if the propertyName cannot be reolved <nl> * / <nl> - String resolve ( String name ) <nl> - throws CheckstyleException ; <nl> + String resolve ( String name ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> index 90d1df5 . . 00d158b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> @ @ - 417 , 13 + 417 , 9 @ @ public class CheckstyleAntTask extends Task { <nl> / * * <nl> * Return the list of listeners set in this task . <nl> * @ return the list of listeners . <nl> - * @ throws ClassNotFoundException if an error occurs <nl> - * @ throws InstantiationException if an error occurs <nl> - * @ throws IllegalAccessException if an error occurs <nl> * @ throws IOException if an error occurs <nl> * / <nl> - private AuditListener [ ] getListeners ( ) throws ClassNotFoundException , <nl> - InstantiationException , IllegalAccessException , IOException { <nl> + private AuditListener [ ] getListeners ( ) throws IOException { <nl> final int formatterCount = Math . max ( 1 , formatters . size ( ) ) ; <nl> <nl> final AuditListener [ ] listeners = new AuditListener [ formatterCount ] ;

TEST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 9129694 . . 9692614 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 329 , 7 + 329 , 10 @ @ 
 < module name = " ConstantName " / > 
 < module name = " InterfaceTypeParameterName " / > 
 < module name = " LocalFinalVariableName " / > 
 - < module name = " LocalVariableName " / > 
 + < module name = " LocalVariableName " > 
 + < property name = " format " value = " ^ ( id ) | ( [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] + ) $ " / > 
 + < property name = " allowOneCharVarInForLoop " value = " true " / > 
 + < / module > 
 < module name = " MemberName " > 
 < property name = " format " value = " ^ ( id ) | ( [ a - z ] [ a - z0 - 9 ] [ a - zA - Z0 - 9 ] + ) $ " / > 
 < / module > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java 
 index 2149740 . . 4fe1fe8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java 
 @ @ - 90 , 8 + 90 , 8 @ @ class PkgControl { 
 / / If there won ' t be match so I am the best there is . 
 finestMatch = this ; 
 / / Check if any of the children match . 
 - for ( PkgControl pc : children ) { 
 - final PkgControl match = pc . locateFinest ( forPkg ) ; 
 + for ( PkgControl child : children ) { 
 + final PkgControl match = child . locateFinest ( forPkg ) ; 
 if ( match ! = null ) { 
 finestMatch = match ; 
 break ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index c0db620 . . c475a6e 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 175 , 21 + 175 , 21 @ @ public abstract class AbstractJavadocCheck extends Check { 
 final String treeCacheKey = blockCommentNode . getLineNo ( ) + " : " 
 + blockCommentNode . getColumnNo ( ) ; 
 
 - ParseStatus ps ; 
 + ParseStatus result ; 
 
 if ( TREE _ CACHE . get ( ) . containsKey ( treeCacheKey ) ) { 
 - ps = TREE _ CACHE . get ( ) . get ( treeCacheKey ) ; 
 + result = TREE _ CACHE . get ( ) . get ( treeCacheKey ) ; 
 } 
 else { 
 - ps = parseJavadocAsDetailNode ( blockCommentNode ) ; 
 - TREE _ CACHE . get ( ) . put ( treeCacheKey , ps ) ; 
 + result = parseJavadocAsDetailNode ( blockCommentNode ) ; 
 + TREE _ CACHE . get ( ) . put ( treeCacheKey , result ) ; 
 } 
 
 - if ( ps . getParseErrorMessage ( ) = = null ) { 
 - processTree ( ps . getTree ( ) ) ; 
 + if ( result . getParseErrorMessage ( ) = = null ) { 
 + processTree ( result . getTree ( ) ) ; 
 } 
 else { 
 - final ParseErrorMessage parseErrorMessage = ps . getParseErrorMessage ( ) ; 
 + final ParseErrorMessage parseErrorMessage = result . getParseErrorMessage ( ) ; 
 log ( parseErrorMessage . getLineNumber ( ) , 
 parseErrorMessage . getMessageKey ( ) , 
 parseErrorMessage . getMessageArguments ( ) ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 39fab45 . . f579345 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 912 , 9 + 912 , 9 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 / / Now dump out all throws without tags : - unless 
 / / the user has chosen to suppress these problems 
 if ( ! allowMissingThrowsTags & & reportExpectedTags ) { 
 - for ( ExceptionInfo ei : throwsList ) { 
 - if ( ! ei . isFound ( ) ) { 
 - final Token token = ei . getName ( ) ; 
 + for ( ExceptionInfo exceptionInfo : throwsList ) { 
 + if ( ! exceptionInfo . isFound ( ) ) { 
 + final Token token = exceptionInfo . getName ( ) ; 
 log ( token . getLineNo ( ) , token . getColumnNo ( ) , 
 MSG _ EXPECTED _ TAG , 
 JavadocTagInfo . THROWS . getText ( ) , token . getText ( ) ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 index 50b8b1e . . 1f4a6e8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 @ @ - 471 , 12 + 471 , 12 @ @ public class JavadocStyleCheck 
 * / 
 private static boolean isExtraHtml ( String token , Deque < HtmlTag > htmlStack ) { 
 boolean isExtra = true ; 
 - for ( final HtmlTag td : htmlStack ) { 
 + for ( final HtmlTag tag : htmlStack ) { 
 / / Loop , looking for tags that are closed . 
 / / The loop is needed in case there are unclosed 
 / / tags on the stack . In that case , the stack would 
 / / not be empty , but this tag would still be extra . 
 - if ( token . equalsIgnoreCase ( td . getId ( ) ) ) { 
 + if ( token . equalsIgnoreCase ( tag . getId ( ) ) ) { 
 isExtra = false ; 
 break ; 
 }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 index 427bd3b . . 5a53207 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 @ @ - 113 , 10 + 113 , 8 @ @ public class Checker extends AutomaticBean implements MessageDispatcher { 
 / * * 
 * Creates a new < code > Checker < / code > instance . 
 * The instance needs to be contextualized and configured . 
 - * 
 - * @ throws CheckstyleException if an error occurs 
 * / 
 - public Checker ( ) throws CheckstyleException { 
 + public Checker ( ) { 
 addListener ( counter ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyResolver . java 
 index 33686eb . . 65fbbaa 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyResolver . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyResolver . java 
 @ @ - 19 , 8 + 19 , 6 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 - import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 - 
 / * * 
 * Resolves properties in module configurations . 
 * 
 @ @ - 36 , 8 + 34 , 6 @ @ public interface PropertyResolver { 
 * Resolves a property name to it ' s value . 
 * @ param name the name of the property . 
 * @ return the value that is associated with < code > propertyName < / code > . 
 - * @ throws CheckstyleException if the propertyName cannot be reolved 
 * / 
 - String resolve ( String name ) 
 - throws CheckstyleException ; 
 + String resolve ( String name ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 index 90d1df5 . . 00d158b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 @ @ - 417 , 13 + 417 , 9 @ @ public class CheckstyleAntTask extends Task { 
 / * * 
 * Return the list of listeners set in this task . 
 * @ return the list of listeners . 
 - * @ throws ClassNotFoundException if an error occurs 
 - * @ throws InstantiationException if an error occurs 
 - * @ throws IllegalAccessException if an error occurs 
 * @ throws IOException if an error occurs 
 * / 
 - private AuditListener [ ] getListeners ( ) throws ClassNotFoundException , 
 - InstantiationException , IllegalAccessException , IOException { 
 + private AuditListener [ ] getListeners ( ) throws IOException { 
 final int formatterCount = Math . max ( 1 , formatters . size ( ) ) ; 
 
 final AuditListener [ ] listeners = new AuditListener [ formatterCount ] ;
