BLEU SCORE: 0.03916449665002249

TEST MSG: Issue # 5177 : validation by xsd during build is missed for xml files that use packages _ 1 _ 0 . dtd
GENERATED MSG: Issue # 4341 : Copy dtds schemas from resources dir to target / site / dtds during pre - site phase

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 5bb2c4e . . 70f4bfc 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1046 , 9 + 1046 , 10 @ @ <nl> < systemId > http : / / maven . apache . org / xsd / decoration - 1 . 0 . 0 . xsd < / systemId > <nl> < / validationSet > <nl> < validationSet > <nl> - < dir > src / main / resources < / dir > <nl> + < dir > src / test / resources < / dir > <nl> < includes > <nl> - < include > checkstyle _ packages . xml < / include > <nl> + < include > com / puppycrawl / tools / checkstyle / packagenamesloader / InputPackageNamesLoaderFile . xml < / include > <nl> + < include > com / puppycrawl / tools / checkstyle / treewalker / InputTreeWalkerNotJava . xml < / include > <nl> < / includes > <nl> < systemId > src / main / resources / com / puppycrawl / tools / checkstyle / packages _ 1 _ 0 . dtd < / systemId > <nl> < / validationSet >
NEAREST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 527a7ff . . 35f715b 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 91 , 6 + 91 , 5 @ @ <nl> < suppress checks = " CyclomaticComplexity " files = " CustomImportOrderCheck \ . java " / > <nl> <nl> < ! - - Until https : / / github . com / checkstyle / checkstyle / issues / 3496 - - > <nl> - < suppress id = " returnCountMaxOne " files = " . * [ \ \ / ] api [ \ \ / ] | <nl> - | . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] " / > <nl> + < suppress id = " returnCountMaxOne " files = " . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] " / > <nl> < / suppressions > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java <nl> index 4b5c80a . . a414492 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java <nl> @ @ - 107 , 6 + 107 , 7 @ @ public abstract class AbstractLoader <nl> @ Override <nl> public InputSource resolveEntity ( String publicId , String systemId ) <nl> throws SAXException , IOException { <nl> + final InputSource inputSource ; <nl> if ( publicIdToResourceNameMap . keySet ( ) . contains ( publicId ) ) { <nl> final String dtdResourceName = <nl> publicIdToResourceNameMap . get ( publicId ) ; <nl> @ @ - 115 , 9 + 116 , 12 @ @ public abstract class AbstractLoader <nl> final InputStream dtdIs = <nl> loader . getResourceAsStream ( dtdResourceName ) ; <nl> <nl> - return new InputSource ( dtdIs ) ; <nl> + inputSource = new InputSource ( dtdIs ) ; <nl> } <nl> - return super . resolveEntity ( publicId , systemId ) ; <nl> + else { <nl> + inputSource = super . resolveEntity ( publicId , systemId ) ; <nl> + } <nl> + return inputSource ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java <nl> index ca17abe . . 8b8dc5c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java <nl> @ @ - 119 , 13 + 119 , 17 @ @ public abstract class AbstractViolationReporter <nl> * used by the module . <nl> * / <nl> private static String getMessageBundle ( final String className ) { <nl> + final String messageBundle ; <nl> final int endIndex = className . lastIndexOf ( ' . ' ) ; <nl> final String messages = " messages " ; <nl> if ( endIndex < 0 ) { <nl> - return messages ; <nl> + messageBundle = messages ; <nl> } <nl> - final String packageName = className . substring ( 0 , endIndex ) ; <nl> - return packageName + " . " + messages ; <nl> + else { <nl> + final String packageName = className . substring ( 0 , endIndex ) ; <nl> + messageBundle = packageName + " . " + messages ; <nl> + } <nl> + return messageBundle ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java <nl> index ebaab2e . . 0385b47 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java <nl> @ @ - 115 , 12 + 115 , 11 @ @ public final class AuditEvent <nl> * @ return the audit event severity level <nl> * / <nl> public SeverityLevel getSeverityLevel ( ) { <nl> - if ( localizedMessage = = null ) { <nl> - return SeverityLevel . INFO ; <nl> - } <nl> - else { <nl> - return localizedMessage . getSeverityLevel ( ) ; <nl> + SeverityLevel severityLevel = SeverityLevel . INFO ; <nl> + if ( localizedMessage ! = null ) { <nl> + severityLevel = localizedMessage . getSeverityLevel ( ) ; <nl> } <nl> + return severityLevel ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> index d464760 . . 976048c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> @ @ - 369 , 16 + 369 , 21 @ @ public final class FileContents implements CommentListener { <nl> * / <nl> private boolean hasIntersectionWithBlockComment ( int startLineNo , int startColNo , <nl> int endLineNo , int endColNo ) { <nl> + boolean hasIntersection = false ; <nl> / / Check C comments ( all comments should be checked ) <nl> final Collection < List < TextBlock > > values = clangComments . values ( ) ; <nl> for ( final List < TextBlock > row : values ) { <nl> for ( final TextBlock comment : row ) { <nl> if ( comment . intersects ( startLineNo , startColNo , endLineNo , endColNo ) ) { <nl> - return true ; <nl> + hasIntersection = true ; <nl> + break ; <nl> } <nl> } <nl> + if ( hasIntersection ) { <nl> + break ; <nl> + } <nl> } <nl> - return false ; <nl> + return hasIntersection ; <nl> } <nl> <nl> / * * <nl> @ @ - 391 , 15 + 396 , 17 @ @ public final class FileContents implements CommentListener { <nl> * / <nl> private boolean hasIntersectionWithSingleLineComment ( int startLineNo , int startColNo , <nl> int endLineNo , int endColNo ) { <nl> + boolean hasIntersection = false ; <nl> / / Check CPP comments ( line searching is possible ) <nl> for ( int lineNumber = startLineNo ; lineNumber < = endLineNo ; <nl> lineNumber + + ) { <nl> final TextBlock comment = cppComments . get ( lineNumber ) ; <nl> if ( comment ! = null & & comment . intersects ( startLineNo , startColNo , <nl> endLineNo , endColNo ) ) { <nl> - return true ; <nl> + hasIntersection = true ; <nl> + break ; <nl> } <nl> } <nl> - return false ; <nl> + return hasIntersection ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java <nl> index 5338165 . . b87507c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java <nl> @ @ - 229 , 12 + 229 , 14 @ @ public final class FileText extends AbstractList < String > { <nl> * @ return an object representing the denoted text file <nl> * / <nl> public static FileText fromLines ( File file , List < String > lines ) { <nl> + final FileText fileText ; <nl> if ( lines instanceof FileText ) { <nl> - return ( FileText ) lines ; <nl> + fileText = ( FileText ) lines ; <nl> } <nl> else { <nl> - return new FileText ( file , lines ) ; <nl> + fileText = new FileText ( file , lines ) ; <nl> } <nl> + return fileText ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java <nl> index 4070b59 . . 4ce1815 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java <nl> @ @ - 83 , 12 + 83 , 14 @ @ public class FilterSet <nl> <nl> @ Override <nl> public boolean accept ( AuditEvent event ) { <nl> + boolean result = true ; <nl> for ( Filter filter : filters ) { <nl> if ( ! filter . accept ( event ) ) { <nl> - return false ; <nl> + result = false ; <nl> + break ; <nl> } <nl> } <nl> - return true ; <nl> + return result ; <nl> } <nl> <nl> / * * Clears the FilterSet . * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java <nl> index a57798d . . c3f4900 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java <nl> @ @ - 62 , 12 + 62 , 14 @ @ public class LineColumn implements Comparable < LineColumn > { <nl> <nl> @ Override <nl> public int compareTo ( LineColumn lineColumn ) { <nl> + final int result ; <nl> if ( line = = lineColumn . line ) { <nl> - return Integer . compare ( column , lineColumn . column ) ; <nl> + result = Integer . compare ( column , lineColumn . column ) ; <nl> } <nl> else { <nl> - return Integer . compare ( line , lineColumn . line ) ; <nl> + result = Integer . compare ( line , lineColumn . line ) ; <nl> } <nl> + return result ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> index db2d166 . . 50f620b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> @ @ - 279 , 12 + 279 , 12 @ @ public final class LocalizedMessage <nl> * if there is no custom message <nl> * / <nl> private String getCustomMessage ( ) { <nl> - <nl> - if ( customMessage = = null ) { <nl> - return null ; <nl> + String message = null ; <nl> + if ( customMessage ! = null ) { <nl> + final MessageFormat formatter = new MessageFormat ( customMessage , Locale . ROOT ) ; <nl> + message = formatter . format ( args ) ; <nl> } <nl> - final MessageFormat formatter = new MessageFormat ( customMessage , Locale . ROOT ) ; <nl> - return formatter . format ( args ) ; <nl> + return message ; <nl> } <nl> <nl> / * *

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 5bb2c4e . . 70f4bfc 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1046 , 9 + 1046 , 10 @ @ 
 < systemId > http : / / maven . apache . org / xsd / decoration - 1 . 0 . 0 . xsd < / systemId > 
 < / validationSet > 
 < validationSet > 
 - < dir > src / main / resources < / dir > 
 + < dir > src / test / resources < / dir > 
 < includes > 
 - < include > checkstyle _ packages . xml < / include > 
 + < include > com / puppycrawl / tools / checkstyle / packagenamesloader / InputPackageNamesLoaderFile . xml < / include > 
 + < include > com / puppycrawl / tools / checkstyle / treewalker / InputTreeWalkerNotJava . xml < / include > 
 < / includes > 
 < systemId > src / main / resources / com / puppycrawl / tools / checkstyle / packages _ 1 _ 0 . dtd < / systemId > 
 < / validationSet >

NEAREST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 527a7ff . . 35f715b 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 91 , 6 + 91 , 5 @ @ 
 < suppress checks = " CyclomaticComplexity " files = " CustomImportOrderCheck \ . java " / > 
 
 < ! - - Until https : / / github . com / checkstyle / checkstyle / issues / 3496 - - > 
 - < suppress id = " returnCountMaxOne " files = " . * [ \ \ / ] api [ \ \ / ] | 
 - | . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] " / > 
 + < suppress id = " returnCountMaxOne " files = " . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] " / > 
 < / suppressions > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java 
 index 4b5c80a . . a414492 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractLoader . java 
 @ @ - 107 , 6 + 107 , 7 @ @ public abstract class AbstractLoader 
 @ Override 
 public InputSource resolveEntity ( String publicId , String systemId ) 
 throws SAXException , IOException { 
 + final InputSource inputSource ; 
 if ( publicIdToResourceNameMap . keySet ( ) . contains ( publicId ) ) { 
 final String dtdResourceName = 
 publicIdToResourceNameMap . get ( publicId ) ; 
 @ @ - 115 , 9 + 116 , 12 @ @ public abstract class AbstractLoader 
 final InputStream dtdIs = 
 loader . getResourceAsStream ( dtdResourceName ) ; 
 
 - return new InputSource ( dtdIs ) ; 
 + inputSource = new InputSource ( dtdIs ) ; 
 } 
 - return super . resolveEntity ( publicId , systemId ) ; 
 + else { 
 + inputSource = super . resolveEntity ( publicId , systemId ) ; 
 + } 
 + return inputSource ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java 
 index ca17abe . . 8b8dc5c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java 
 @ @ - 119 , 13 + 119 , 17 @ @ public abstract class AbstractViolationReporter 
 * used by the module . 
 * / 
 private static String getMessageBundle ( final String className ) { 
 + final String messageBundle ; 
 final int endIndex = className . lastIndexOf ( ' . ' ) ; 
 final String messages = " messages " ; 
 if ( endIndex < 0 ) { 
 - return messages ; 
 + messageBundle = messages ; 
 } 
 - final String packageName = className . substring ( 0 , endIndex ) ; 
 - return packageName + " . " + messages ; 
 + else { 
 + final String packageName = className . substring ( 0 , endIndex ) ; 
 + messageBundle = packageName + " . " + messages ; 
 + } 
 + return messageBundle ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java 
 index ebaab2e . . 0385b47 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AuditEvent . java 
 @ @ - 115 , 12 + 115 , 11 @ @ public final class AuditEvent 
 * @ return the audit event severity level 
 * / 
 public SeverityLevel getSeverityLevel ( ) { 
 - if ( localizedMessage = = null ) { 
 - return SeverityLevel . INFO ; 
 - } 
 - else { 
 - return localizedMessage . getSeverityLevel ( ) ; 
 + SeverityLevel severityLevel = SeverityLevel . INFO ; 
 + if ( localizedMessage ! = null ) { 
 + severityLevel = localizedMessage . getSeverityLevel ( ) ; 
 } 
 + return severityLevel ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 index d464760 . . 976048c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 @ @ - 369 , 16 + 369 , 21 @ @ public final class FileContents implements CommentListener { 
 * / 
 private boolean hasIntersectionWithBlockComment ( int startLineNo , int startColNo , 
 int endLineNo , int endColNo ) { 
 + boolean hasIntersection = false ; 
 / / Check C comments ( all comments should be checked ) 
 final Collection < List < TextBlock > > values = clangComments . values ( ) ; 
 for ( final List < TextBlock > row : values ) { 
 for ( final TextBlock comment : row ) { 
 if ( comment . intersects ( startLineNo , startColNo , endLineNo , endColNo ) ) { 
 - return true ; 
 + hasIntersection = true ; 
 + break ; 
 } 
 } 
 + if ( hasIntersection ) { 
 + break ; 
 + } 
 } 
 - return false ; 
 + return hasIntersection ; 
 } 
 
 / * * 
 @ @ - 391 , 15 + 396 , 17 @ @ public final class FileContents implements CommentListener { 
 * / 
 private boolean hasIntersectionWithSingleLineComment ( int startLineNo , int startColNo , 
 int endLineNo , int endColNo ) { 
 + boolean hasIntersection = false ; 
 / / Check CPP comments ( line searching is possible ) 
 for ( int lineNumber = startLineNo ; lineNumber < = endLineNo ; 
 lineNumber + + ) { 
 final TextBlock comment = cppComments . get ( lineNumber ) ; 
 if ( comment ! = null & & comment . intersects ( startLineNo , startColNo , 
 endLineNo , endColNo ) ) { 
 - return true ; 
 + hasIntersection = true ; 
 + break ; 
 } 
 } 
 - return false ; 
 + return hasIntersection ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java 
 index 5338165 . . b87507c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileText . java 
 @ @ - 229 , 12 + 229 , 14 @ @ public final class FileText extends AbstractList < String > { 
 * @ return an object representing the denoted text file 
 * / 
 public static FileText fromLines ( File file , List < String > lines ) { 
 + final FileText fileText ; 
 if ( lines instanceof FileText ) { 
 - return ( FileText ) lines ; 
 + fileText = ( FileText ) lines ; 
 } 
 else { 
 - return new FileText ( file , lines ) ; 
 + fileText = new FileText ( file , lines ) ; 
 } 
 + return fileText ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java 
 index 4070b59 . . 4ce1815 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java 
 @ @ - 83 , 12 + 83 , 14 @ @ public class FilterSet 
 
 @ Override 
 public boolean accept ( AuditEvent event ) { 
 + boolean result = true ; 
 for ( Filter filter : filters ) { 
 if ( ! filter . accept ( event ) ) { 
 - return false ; 
 + result = false ; 
 + break ; 
 } 
 } 
 - return true ; 
 + return result ; 
 } 
 
 / * * Clears the FilterSet . * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java 
 index a57798d . . c3f4900 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LineColumn . java 
 @ @ - 62 , 12 + 62 , 14 @ @ public class LineColumn implements Comparable < LineColumn > { 
 
 @ Override 
 public int compareTo ( LineColumn lineColumn ) { 
 + final int result ; 
 if ( line = = lineColumn . line ) { 
 - return Integer . compare ( column , lineColumn . column ) ; 
 + result = Integer . compare ( column , lineColumn . column ) ; 
 } 
 else { 
 - return Integer . compare ( line , lineColumn . line ) ; 
 + result = Integer . compare ( line , lineColumn . line ) ; 
 } 
 + return result ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 index db2d166 . . 50f620b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 @ @ - 279 , 12 + 279 , 12 @ @ public final class LocalizedMessage 
 * if there is no custom message 
 * / 
 private String getCustomMessage ( ) { 
 - 
 - if ( customMessage = = null ) { 
 - return null ; 
 + String message = null ; 
 + if ( customMessage ! = null ) { 
 + final MessageFormat formatter = new MessageFormat ( customMessage , Locale . ROOT ) ; 
 + message = formatter . format ( args ) ; 
 } 
 - final MessageFormat formatter = new MessageFormat ( customMessage , Locale . ROOT ) ; 
 - return formatter . format ( args ) ; 
 + return message ; 
 } 
 
 / * *
