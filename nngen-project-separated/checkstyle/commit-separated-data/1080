BLEU SCORE: 0.012589193610827863

TEST MSG: Issue # 3476 : Improve escaped unicode chars detection for AvoidEscapedUnicodeCharacters
GENERATED MSG: Move tests which cause compilation problem in Eclipse 4 . 2 . 2 to non - compilable folder , issue # 1351 .

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> index 393081c . . ac68e7b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> @ @ - 129 , 6 + 129 , 9 @ @ public class AvoidEscapedUnicodeCharactersCheck <nl> Pattern . compile ( " ^ ( ( \ \ \ \ u ) [ a - fA - F0 - 9 ] { 4 } " <nl> + " | | \ \ \ \ b | \ \ \ \ t | \ \ \ \ n | \ \ \ \ f | \ \ \ \ r | \ \ \ \ | \ " | \ ' ) + $ " ) ; <nl> <nl> + / * * Regular expression for escaped backslash . * / <nl> + private static final Pattern ESCAPED _ BACKSLASH = Pattern . compile ( " \ \ \ \ \ \ \ \ " ) ; <nl> + <nl> / * * Regular expression for non - printable unicode chars . * / <nl> private static final Pattern NON _ PRINTABLE _ CHARS = Pattern . compile ( " \ \ \ \ u1680 | \ \ \ \ u2028 " <nl> + " | \ \ \ \ u2029 | \ \ \ \ u205 ( f | F ) | \ \ \ \ u3000 | \ \ \ \ u2007 | \ \ \ \ u2000 | \ \ \ \ u200 ( a | A ) " <nl> @ @ - 242 , 7 + 245 , 9 @ @ public class AvoidEscapedUnicodeCharactersCheck <nl> * @ return true if literal has Unicode chars . <nl> * / <nl> private static boolean hasUnicodeChar ( String literal ) { <nl> - return UNICODE _ REGEXP . matcher ( literal ) . find ( ) ; <nl> + final String literalWithoutEscapedBackslashes = <nl> + ESCAPED _ BACKSLASH . matcher ( literal ) . replaceAll ( " " ) ; <nl> + return UNICODE _ REGEXP . matcher ( literalWithoutEscapedBackslashes ) . find ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheckTest . java <nl> index 563e673 . . 4407f54 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheckTest . java <nl> @ @ - 87 , 6 + 87 , 7 @ @ public class AvoidEscapedUnicodeCharactersCheckTest extends BaseCheckTestSupport <nl> " 93 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 94 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 98 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 104 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputAvoidEscapedUnicodeCharacters . java " ) , expected ) ; <nl> } <nl> @ @ - 127 , 6 + 128 , 7 @ @ public class AvoidEscapedUnicodeCharactersCheckTest extends BaseCheckTestSupport <nl> " 92 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 94 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 98 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 104 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputAvoidEscapedUnicodeCharacters . java " ) , expected ) ; <nl> } <nl> @ @ - 156 , 6 + 158 , 7 @ @ public class AvoidEscapedUnicodeCharactersCheckTest extends BaseCheckTestSupport <nl> " 82 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 92 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 98 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 104 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputAvoidEscapedUnicodeCharacters . java " ) , expected ) ; <nl> } <nl> @ @ - 209 , 6 + 212 , 7 @ @ public class AvoidEscapedUnicodeCharactersCheckTest extends BaseCheckTestSupport <nl> " 93 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 94 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 98 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 104 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputAvoidEscapedUnicodeCharacters . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputAvoidEscapedUnicodeCharacters . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputAvoidEscapedUnicodeCharacters . java <nl> index 63bbb97 . . f4f7509 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputAvoidEscapedUnicodeCharacters . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputAvoidEscapedUnicodeCharacters . java <nl> @ @ - 54 , 13 + 54 , 13 @ @ public class InputAvoidEscapedUnicodeCharacters { <nl> 	 	 	 throw new AssertionError ( ) ; <nl> 	 	 } <nl> 	 } <nl> - 	 	 <nl> + <nl> 	 	 static final String WHITESPACE _ TABLE = " " <nl> 	 	 	 	 + " \ u2002 \ u3000 \ r \ u0085 \ u200A \ u2005 \ u2000 \ u3000 \ \ " <nl> 	 	 	 	 + " \ u2029 \ u000B \ u3000 \ u2008 \ u2003 \ u205F \ u3000 \ u1680 " <nl> 	 	 	 	 + " \ u0009 \ u0020 \ u2006 \ u2001 \ u202F \ u00A0 \ u000C \ u2009 " <nl> 	 	 	 	 + " \ u3000 \ u2004 \ u3000 \ u3000 \ u2028 \ n \ u2007 \ u3000 " ; <nl> - 	 <nl> + <nl> 	 public boolean matches ( char c ) { <nl> 	 switch ( c ) { <nl> 	 case ' \ t ' : <nl> @ @ - 96 , 4 + 96 , 10 @ @ public class InputAvoidEscapedUnicodeCharacters { <nl> 	 	 } <nl> 	 } <nl> 	 private String unitAbbrev9 = " \ u03bcs " ; / * comment * / int i ; <nl> + <nl> + 	 private String notAUnicodeEscaped1 = " \ \ u1234 " ; <nl> + <nl> + 	 private String notAUnicodeEscaped2 = " \ \ \ \ u1234 " ; <nl> + <nl> + 	 private String onlyEscaped = " \ \ \ u1234 " ; <nl> }
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index c69414b . . 7146ed7 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 830 , 7 + 830 , 7 @ @ <nl> < regex > < pattern > . * . checks . indentation . ImportHandler < / pattern > < branchRate > 50 < / branchRate > < lineRate > 87 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . IndentationCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . IndexHandler < / pattern > < branchRate > 100 < / branchRate > < lineRate > 75 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . indentation . LineWrappingHandler < / pattern > < branchRate > 87 < / branchRate > < lineRate > 91 < / lineRate > < / regex > <nl> + < regex > < pattern > . * . checks . indentation . LineWrappingHandler < / pattern > < branchRate > 87 < / branchRate > < lineRate > 95 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . MethodCallHandler < / pattern > < branchRate > 63 < / branchRate > < lineRate > 87 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . MethodCallLineWrapHandler < / pattern > < branchRate > 0 < / branchRate > < lineRate > 0 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . indentation . MethodDefHandler < / pattern > < branchRate > 87 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> index 7be5dc7 . . de13c3b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> @ @ - 83 , 21 + 83 , 6 @ @ public class LineWrappingHandler { <nl> } <nl> <nl> / * * <nl> - * @ return correct indentation for current expression . <nl> - * / <nl> - protected int getCurrentIndentation ( ) { <nl> - return firstNode . getColumnNo ( ) + indentLevel ; <nl> - } <nl> - <nl> - / * * <nl> - * Getter for firstNode field <nl> - * @ return firstNode field <nl> - * / <nl> - protected final DetailAST getFirstNode ( ) { <nl> - return firstNode ; <nl> - } <nl> - <nl> - / * * <nl> * Getter for lastNode field <nl> * @ return lastNode field <nl> * / <nl> @ @ - 106 , 14 + 91 , 6 @ @ public class LineWrappingHandler { <nl> } <nl> <nl> / * * <nl> - * Getter for indentLevel field <nl> - * @ return indentLevel field <nl> - * / <nl> - protected final int getIndentLevel ( ) { <nl> - return indentLevel ; <nl> - } <nl> - <nl> - / * * <nl> * Checks line wrapping into expressions and definitions . <nl> * / <nl> public void checkIndentation ( ) {

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 index 393081c . . ac68e7b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 @ @ - 129 , 6 + 129 , 9 @ @ public class AvoidEscapedUnicodeCharactersCheck 
 Pattern . compile ( " ^ ( ( \ \ \ \ u ) [ a - fA - F0 - 9 ] { 4 } " 
 + " | | \ \ \ \ b | \ \ \ \ t | \ \ \ \ n | \ \ \ \ f | \ \ \ \ r | \ \ \ \ | \ " | \ ' ) + $ " ) ; 
 
 + / * * Regular expression for escaped backslash . * / 
 + private static final Pattern ESCAPED _ BACKSLASH = Pattern . compile ( " \ \ \ \ \ \ \ \ " ) ; 
 + 
 / * * Regular expression for non - printable unicode chars . * / 
 private static final Pattern NON _ PRINTABLE _ CHARS = Pattern . compile ( " \ \ \ \ u1680 | \ \ \ \ u2028 " 
 + " | \ \ \ \ u2029 | \ \ \ \ u205 ( f | F ) | \ \ \ \ u3000 | \ \ \ \ u2007 | \ \ \ \ u2000 | \ \ \ \ u200 ( a | A ) " 
 @ @ - 242 , 7 + 245 , 9 @ @ public class AvoidEscapedUnicodeCharactersCheck 
 * @ return true if literal has Unicode chars . 
 * / 
 private static boolean hasUnicodeChar ( String literal ) { 
 - return UNICODE _ REGEXP . matcher ( literal ) . find ( ) ; 
 + final String literalWithoutEscapedBackslashes = 
 + ESCAPED _ BACKSLASH . matcher ( literal ) . replaceAll ( " " ) ; 
 + return UNICODE _ REGEXP . matcher ( literalWithoutEscapedBackslashes ) . find ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheckTest . java 
 index 563e673 . . 4407f54 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheckTest . java 
 @ @ - 87 , 6 + 87 , 7 @ @ public class AvoidEscapedUnicodeCharactersCheckTest extends BaseCheckTestSupport 
 " 93 : " + getCheckMessage ( MSG _ KEY ) , 
 " 94 : " + getCheckMessage ( MSG _ KEY ) , 
 " 98 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 104 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputAvoidEscapedUnicodeCharacters . java " ) , expected ) ; 
 } 
 @ @ - 127 , 6 + 128 , 7 @ @ public class AvoidEscapedUnicodeCharactersCheckTest extends BaseCheckTestSupport 
 " 92 : " + getCheckMessage ( MSG _ KEY ) , 
 " 94 : " + getCheckMessage ( MSG _ KEY ) , 
 " 98 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 104 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputAvoidEscapedUnicodeCharacters . java " ) , expected ) ; 
 } 
 @ @ - 156 , 6 + 158 , 7 @ @ public class AvoidEscapedUnicodeCharactersCheckTest extends BaseCheckTestSupport 
 " 82 : " + getCheckMessage ( MSG _ KEY ) , 
 " 92 : " + getCheckMessage ( MSG _ KEY ) , 
 " 98 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 104 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputAvoidEscapedUnicodeCharacters . java " ) , expected ) ; 
 } 
 @ @ - 209 , 6 + 212 , 7 @ @ public class AvoidEscapedUnicodeCharactersCheckTest extends BaseCheckTestSupport 
 " 93 : " + getCheckMessage ( MSG _ KEY ) , 
 " 94 : " + getCheckMessage ( MSG _ KEY ) , 
 " 98 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 104 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputAvoidEscapedUnicodeCharacters . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputAvoidEscapedUnicodeCharacters . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputAvoidEscapedUnicodeCharacters . java 
 index 63bbb97 . . f4f7509 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputAvoidEscapedUnicodeCharacters . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / InputAvoidEscapedUnicodeCharacters . java 
 @ @ - 54 , 13 + 54 , 13 @ @ public class InputAvoidEscapedUnicodeCharacters { 
 	 	 	 throw new AssertionError ( ) ; 
 	 	 } 
 	 } 
 - 	 	 
 + 
 	 	 static final String WHITESPACE _ TABLE = " " 
 	 	 	 	 + " \ u2002 \ u3000 \ r \ u0085 \ u200A \ u2005 \ u2000 \ u3000 \ \ " 
 	 	 	 	 + " \ u2029 \ u000B \ u3000 \ u2008 \ u2003 \ u205F \ u3000 \ u1680 " 
 	 	 	 	 + " \ u0009 \ u0020 \ u2006 \ u2001 \ u202F \ u00A0 \ u000C \ u2009 " 
 	 	 	 	 + " \ u3000 \ u2004 \ u3000 \ u3000 \ u2028 \ n \ u2007 \ u3000 " ; 
 - 	 
 + 
 	 public boolean matches ( char c ) { 
 	 switch ( c ) { 
 	 case ' \ t ' : 
 @ @ - 96 , 4 + 96 , 10 @ @ public class InputAvoidEscapedUnicodeCharacters { 
 	 	 } 
 	 } 
 	 private String unitAbbrev9 = " \ u03bcs " ; / * comment * / int i ; 
 + 
 + 	 private String notAUnicodeEscaped1 = " \ \ u1234 " ; 
 + 
 + 	 private String notAUnicodeEscaped2 = " \ \ \ \ u1234 " ; 
 + 
 + 	 private String onlyEscaped = " \ \ \ u1234 " ; 
 }

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index c69414b . . 7146ed7 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 830 , 7 + 830 , 7 @ @ 
 < regex > < pattern > . * . checks . indentation . ImportHandler < / pattern > < branchRate > 50 < / branchRate > < lineRate > 87 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . IndentationCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . IndexHandler < / pattern > < branchRate > 100 < / branchRate > < lineRate > 75 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . indentation . LineWrappingHandler < / pattern > < branchRate > 87 < / branchRate > < lineRate > 91 < / lineRate > < / regex > 
 + < regex > < pattern > . * . checks . indentation . LineWrappingHandler < / pattern > < branchRate > 87 < / branchRate > < lineRate > 95 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . MethodCallHandler < / pattern > < branchRate > 63 < / branchRate > < lineRate > 87 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . MethodCallLineWrapHandler < / pattern > < branchRate > 0 < / branchRate > < lineRate > 0 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . indentation . MethodDefHandler < / pattern > < branchRate > 87 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 index 7be5dc7 . . de13c3b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 @ @ - 83 , 21 + 83 , 6 @ @ public class LineWrappingHandler { 
 } 
 
 / * * 
 - * @ return correct indentation for current expression . 
 - * / 
 - protected int getCurrentIndentation ( ) { 
 - return firstNode . getColumnNo ( ) + indentLevel ; 
 - } 
 - 
 - / * * 
 - * Getter for firstNode field 
 - * @ return firstNode field 
 - * / 
 - protected final DetailAST getFirstNode ( ) { 
 - return firstNode ; 
 - } 
 - 
 - / * * 
 * Getter for lastNode field 
 * @ return lastNode field 
 * / 
 @ @ - 106 , 14 + 91 , 6 @ @ public class LineWrappingHandler { 
 } 
 
 / * * 
 - * Getter for indentLevel field 
 - * @ return indentLevel field 
 - * / 
 - protected final int getIndentLevel ( ) { 
 - return indentLevel ; 
 - } 
 - 
 - / * * 
 * Checks line wrapping into expressions and definitions . 
 * / 
 public void checkIndentation ( ) {
