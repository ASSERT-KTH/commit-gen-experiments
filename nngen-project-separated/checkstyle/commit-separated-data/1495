BLEU SCORE: 0.04767707020457096

TEST MSG: Issue # 1551 : Fix FinalLocalVariable violations in checkstyle
GENERATED MSG: Remove unused assignments . # 1555

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java <nl> index 7941730 . . 414550b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java <nl> @ @ - 132 , 7 + 132 , 7 @ @ public final class PackageNamesLoader <nl> public static Set < String > getPackageNames ( ClassLoader classLoader ) <nl> throws CheckstyleException { <nl> <nl> - Set < String > result ; <nl> + final Set < String > result ; <nl> try { <nl> / / create the loader outside the loop to prevent PackageObjectFactory <nl> / / being created anew for each file <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> index 08ef8b9 . . fb5ee5e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> @ @ - 345 , 7 + 345 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> + " files " , Project . MSG _ INFO ) ; <nl> log ( " Using configuration " + configLocation , Project . MSG _ VERBOSE ) ; <nl> <nl> - int numErrs ; <nl> + final int numErrs ; <nl> <nl> try { <nl> final long processingStartTime = System . currentTimeMillis ( ) ; <nl> @ @ - 380 , 7 + 380 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> * @ return new instance of { @ code Checker } <nl> * / <nl> private Checker createChecker ( ) { <nl> - Checker checker ; <nl> + final Checker checker ; <nl> try { <nl> final Properties props = createOverridingProperties ( ) ; <nl> final Configuration config = <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index cf423bb . . 50af412 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 306 , 7 + 306 , 7 @ @ public class SuppressWarningsHolder <nl> * @ return get target of annotation <nl> * / <nl> private static DetailAST getAnnotationTarget ( DetailAST ast ) { <nl> - DetailAST targetAST ; <nl> + final DetailAST targetAST ; <nl> final DetailAST parentAST = ast . getParent ( ) ; <nl> switch ( parentAST . getType ( ) ) { <nl> case TokenTypes . MODIFIERS : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> index 878d587 . . 95c09a3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java <nl> @ @ - 143 , 7 + 143 , 7 @ @ final class ImportControlLoader extends AbstractLoader { <nl> * @ throws CheckstyleException if an error occurs . <nl> * / <nl> static PkgControl load ( final URI uri ) throws CheckstyleException { <nl> - InputStream inputStream ; <nl> + final InputStream inputStream ; <nl> try { <nl> inputStream = uri . toURL ( ) . openStream ( ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> index 70bdd86 . . dfcee3c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> @ @ - 333 , 7 + 333 , 7 @ @ public class SuppressWithNearbyCommentFilter <nl> } <nl> format = CommonUtils . fillTemplateWithStringsByRegexp ( <nl> filter . influenceFormat , text , filter . commentRegexp ) ; <nl> - int influence ; <nl> + final int influence ; <nl> try { <nl> if ( CommonUtils . startsWithChar ( format , ' + ' ) ) { <nl> format = format . substring ( 1 ) ;
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index d17344d . . f280995 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1104 , 11 + 1104 , 6 @ @ <nl> < regex > < pattern > . * . checks . coding . SimplifyBooleanReturnCheck < / pattern > < branchRate > 83 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . coding . VariableDeclarationUsageDistanceCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 98 < / lineRate > < / regex > <nl> <nl> - < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck \ $ . * < / pattern > < branchRate > 50 < / branchRate > < lineRate > 68 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . javadoc . AtclauseOrderCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 88 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . javadoc . WriteTagCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 91 < / lineRate > < / regex > <nl> - <nl> < regex > < pattern > . * . checks . header . AbstractHeaderCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 87 < / lineRate > < / regex > <nl> <nl> < regex > < pattern > . * . checks . regexp . CommentSuppressor < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index c1fedce . . 67ee9d6 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 19 , 10 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> <nl> - import java . io . ByteArrayInputStream ; <nl> import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> - import java . nio . charset . Charset ; <nl> import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> @ @ - 33 , 7 + 30 , 6 @ @ import org . antlr . v4 . runtime . CommonTokenStream ; <nl> import org . antlr . v4 . runtime . ParserRuleContext ; <nl> import org . antlr . v4 . runtime . RecognitionException ; <nl> import org . antlr . v4 . runtime . Recognizer ; <nl> - import org . antlr . v4 . runtime . RuleContext ; <nl> import org . antlr . v4 . runtime . Token ; <nl> import org . antlr . v4 . runtime . misc . ParseCancellationException ; <nl> import org . antlr . v4 . runtime . tree . ParseTree ; <nl> @ @ - 213 , 12 + 209 , 6 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> try { <nl> parseTree = parseJavadocAsParseTree ( javadocComment ) ; <nl> } <nl> - catch ( IOException e ) { <nl> - / / Antlr can not initiate its ANTLRInputStream <nl> - parseErrorMessage = new ParseErrorMessage ( javadocCommentAst . getLineNo ( ) , <nl> - PARSE _ ERROR _ MESSAGE _ KEY , <nl> - javadocCommentAst . getColumnNo ( ) , e . getMessage ( ) ) ; <nl> - } <nl> catch ( ParseCancellationException e ) { <nl> / / If syntax error occurs then message is printed by error listener <nl> / / and parser throws this runtime exception to stop parsing . <nl> @ @ - 355 , 7 + 345 , 8 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> final ParseTree parent = node . getParent ( ) ; <nl> final int childCount = parent . getChildCount ( ) ; <nl> <nl> - for ( int i = 0 ; i < childCount ; i + + ) { <nl> + int i = 0 ; <nl> + while ( true ) { <nl> final ParseTree currentNode = parent . getChild ( i ) ; <nl> if ( currentNode . equals ( node ) ) { <nl> if ( i = = childCount - 1 ) { <nl> @ @ - 363 , 8 + 354 , 8 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> } <nl> return parent . getChild ( i + 1 ) ; <nl> } <nl> + i + + ; <nl> } <nl> - return null ; <nl> } <nl> <nl> / * * <nl> @ @ - 442 , 12 + 433 , 8 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> * @ throws IOException <nl> * errors in ANTLRInputStream <nl> * / <nl> - private ParseTree parseJavadocAsParseTree ( String blockComment ) <nl> - throws IOException { <nl> - final Charset utf8Charset = Charset . forName ( " UTF - 8 " ) ; <nl> - final InputStream in = new ByteArrayInputStream ( blockComment . getBytes ( utf8Charset ) ) ; <nl> - <nl> - final ANTLRInputStream input = new ANTLRInputStream ( in ) ; <nl> + private ParseTree parseJavadocAsParseTree ( String blockComment ) { <nl> + final ANTLRInputStream input = new ANTLRInputStream ( blockComment ) ; <nl> <nl> final JavadocLexer lexer = new JavadocLexer ( input ) ; <nl> <nl> @ @ - 493 , 10 + 480 , 6 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> private void walk ( DetailNode root ) { <nl> final int [ ] defaultTokenTypes = getDefaultJavadocTokens ( ) ; <nl> <nl> - if ( defaultTokenTypes = = null ) { <nl> - return ; <nl> - } <nl> - <nl> DetailNode curNode = root ; <nl> while ( curNode ! = null ) { <nl> final boolean waitsFor = Ints . contains ( defaultTokenTypes , curNode . getType ( ) ) ; <nl> @ @ - 525 , 29 + 508 , 24 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> * / <nl> static class DescriptiveErrorListener extends BaseErrorListener { <nl> / * * <nl> - * Parse error while token recognition . <nl> - * / <nl> - private static final String JAVADOC _ PARSE _ TOKEN _ ERROR = " javadoc . parse . token . error " ; <nl> - <nl> - / * * <nl> - * Parse error while rule recognition . <nl> - * / <nl> - private static final String JAVADOC _ PARSE _ RULE _ ERROR = " javadoc . parse . rule . error " ; <nl> - <nl> - / * * <nl> * Message key of error message . Missed close HTML tag breaks structure <nl> * of parse tree , so parser stops parsing and generates such error <nl> * message . This case is special because parser prints error like <nl> * { @ code " no viable alternative at input ' b \ n * \ n ' " } and it is not <nl> * clear that error is about missed close HTML tag . <nl> * / <nl> - private static final String JAVADOC _ MISSED _ HTML _ CLOSE = " javadoc . missed . html . close " ; <nl> + static final String JAVADOC _ MISSED _ HTML _ CLOSE = " javadoc . missed . html . close " ; <nl> <nl> / * * <nl> * Message key of error message . <nl> * / <nl> - private static final String JAVADOC _ WRONG _ SINGLETON _ TAG = <nl> - " javadoc . wrong . singleton . html . tag " ; <nl> + static final String JAVADOC _ WRONG _ SINGLETON _ TAG = <nl> + " javadoc . wrong . singleton . html . tag " ; <nl> + <nl> + / * * <nl> + * Parse error while rule recognition . <nl> + * / <nl> + private static final String JAVADOC _ PARSE _ RULE _ ERROR = " javadoc . parse . rule . error " ; <nl> <nl> / * * <nl> * Offset is line number of beginning of the Javadoc comment . Log <nl> @ @ - 607 , 20 + 585 , 13 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> throw new ParseCancellationException ( ) ; <nl> } <nl> else { <nl> - final RuleContext ruleContext = ex . getCtx ( ) ; <nl> - if ( ruleContext ! = null ) { <nl> - final int ruleIndex = ex . getCtx ( ) . getRuleIndex ( ) ; <nl> - final String ruleName = recognizer . getRuleNames ( ) [ ruleIndex ] ; <nl> - final String upperCaseRuleName = CaseFormat . UPPER _ CAMEL . to ( <nl> - CaseFormat . UPPER _ UNDERSCORE , ruleName ) ; <nl> - <nl> - errorMessage = new ParseErrorMessage ( lineNumber , <nl> - JAVADOC _ PARSE _ RULE _ ERROR , charPositionInLine , msg , upperCaseRuleName ) ; <nl> - } <nl> - else { <nl> - errorMessage = new ParseErrorMessage ( lineNumber , JAVADOC _ PARSE _ TOKEN _ ERROR , <nl> - charPositionInLine , msg , charPositionInLine ) ; <nl> - } <nl> + final int ruleIndex = ex . getCtx ( ) . getRuleIndex ( ) ; <nl> + final String ruleName = recognizer . getRuleNames ( ) [ ruleIndex ] ; <nl> + final String upperCaseRuleName = CaseFormat . UPPER _ CAMEL . to ( <nl> + CaseFormat . UPPER _ UNDERSCORE , ruleName ) ; <nl> + <nl> + errorMessage = new ParseErrorMessage ( lineNumber , <nl> + JAVADOC _ PARSE _ RULE _ ERROR , charPositionInLine , msg , upperCaseRuleName ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties <nl> index ccc6b4c . . 7e59866 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties <nl> @ @ - 1 , 6 + 1 , 5 @ @ <nl> javadoc . parse . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } <nl> javadoc . unrecognized . antlr . error = Javadoc comment at column { 0 } has parse error . Unrecognized error from ANTLR parser : { 1 } <nl> - javadoc . parse . token . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } <nl> javadoc . parse . rule . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } while parsing { 2 } <nl> javadoc . missed . html . close = Javadoc comment at column { 0 } has parse error . Missed HTML close tag ' ' { 1 } ' ' . Sometimes it means that close tag missed for one of previous tags . <nl> javadoc . wrong . singleton . html . tag = Javadoc comment at column { 0 } has parse error . It is forbidden to close singleton HTML tags . Tag : { 1 } . <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> index a663850 . . a02d6a3 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> @ @ - 19 , 12 + 19 , 17 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> <nl> + import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . DescriptiveErrorListener . JAVADOC _ MISSED _ HTML _ CLOSE ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . DescriptiveErrorListener . JAVADOC _ WRONG _ SINGLETON _ TAG ; <nl> import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . PARSE _ ERROR _ MESSAGE _ KEY ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . UNRECOGNIZED _ ANTLR _ ERROR _ MESSAGE _ KEY ; <nl> <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> + import com . puppycrawl . tools . checkstyle . Checker ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailNode ; <nl> <nl> public class AbstractJavadocCheckTest extends BaseCheckTestSupport { <nl> @ @ - 52 , 4 + 57 , 39 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { <nl> } ; <nl> verify ( checkConfig , getPath ( " javadoc / InputTestNumberFomatException . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testCustomTag ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( TempCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 4 : " + getCheckMessage ( UNRECOGNIZED _ ANTLR _ ERROR _ MESSAGE _ KEY , 4 , " null " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " javadoc / InputCustomTag . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testParsingErrors ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( TempCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 4 : " + getCheckMessage ( JAVADOC _ MISSED _ HTML _ CLOSE , 4 , " unclosedTag " ) , <nl> + " 8 : " + getCheckMessage ( JAVADOC _ WRONG _ SINGLETON _ TAG , 35 , " img " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " javadoc / InputParsingErrors . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testWithMultipleChecks ( ) throws Exception { <nl> + final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " configuration " ) ; <nl> + final DefaultConfiguration checksConfig = createCheckConfig ( TreeWalker . class ) ; <nl> + checksConfig . addChild ( createCheckConfig ( AtclauseOrderCheck . class ) ) ; <nl> + checksConfig . addChild ( createCheckConfig ( JavadocParagraphCheck . class ) ) ; <nl> + checkerConfig . addChild ( checksConfig ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> + checker . configure ( checkerConfig ) ; <nl> + <nl> + final String [ ] expected = { <nl> + } ; <nl> + verify ( checker , getPath ( " javadoc / InputCorrectJavaDocParagraphCheck . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputCustomTag . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputCustomTag . java <nl> new file mode 100644 <nl> index 0000000 . . 6a0560d <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputCustomTag . java <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + package com . puppycrawl . tools . checkstyle . javadoc ; <nl> + <nl> + public class InputCustomTag { <nl> + / * * <nl> + * { @ customTag } <nl> + * / <nl> + void customTag ( ) { } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputParsingErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputParsingErrors . java <nl> new file mode 100644 <nl> index 0000000 . . 850fa00 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputParsingErrors . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + package com . puppycrawl . tools . checkstyle . javadoc ; <nl> + <nl> + / * * <nl> + * < unclosedTag > <nl> + * / <nl> + class InputParsingErrors { <nl> + / * * <nl> + * < img src = " singletonTag " / > < / img > <nl> + * / <nl> + void singletonTag ( ) { <nl> + } <nl> + }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java 
 index 7941730 . . 414550b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java 
 @ @ - 132 , 7 + 132 , 7 @ @ public final class PackageNamesLoader 
 public static Set < String > getPackageNames ( ClassLoader classLoader ) 
 throws CheckstyleException { 
 
 - Set < String > result ; 
 + final Set < String > result ; 
 try { 
 / / create the loader outside the loop to prevent PackageObjectFactory 
 / / being created anew for each file 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 index 08ef8b9 . . fb5ee5e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 @ @ - 345 , 7 + 345 , 7 @ @ public class CheckstyleAntTask extends Task { 
 + " files " , Project . MSG _ INFO ) ; 
 log ( " Using configuration " + configLocation , Project . MSG _ VERBOSE ) ; 
 
 - int numErrs ; 
 + final int numErrs ; 
 
 try { 
 final long processingStartTime = System . currentTimeMillis ( ) ; 
 @ @ - 380 , 7 + 380 , 7 @ @ public class CheckstyleAntTask extends Task { 
 * @ return new instance of { @ code Checker } 
 * / 
 private Checker createChecker ( ) { 
 - Checker checker ; 
 + final Checker checker ; 
 try { 
 final Properties props = createOverridingProperties ( ) ; 
 final Configuration config = 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index cf423bb . . 50af412 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 306 , 7 + 306 , 7 @ @ public class SuppressWarningsHolder 
 * @ return get target of annotation 
 * / 
 private static DetailAST getAnnotationTarget ( DetailAST ast ) { 
 - DetailAST targetAST ; 
 + final DetailAST targetAST ; 
 final DetailAST parentAST = ast . getParent ( ) ; 
 switch ( parentAST . getType ( ) ) { 
 case TokenTypes . MODIFIERS : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 index 878d587 . . 95c09a3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoader . java 
 @ @ - 143 , 7 + 143 , 7 @ @ final class ImportControlLoader extends AbstractLoader { 
 * @ throws CheckstyleException if an error occurs . 
 * / 
 static PkgControl load ( final URI uri ) throws CheckstyleException { 
 - InputStream inputStream ; 
 + final InputStream inputStream ; 
 try { 
 inputStream = uri . toURL ( ) . openStream ( ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 index 70bdd86 . . dfcee3c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 @ @ - 333 , 7 + 333 , 7 @ @ public class SuppressWithNearbyCommentFilter 
 } 
 format = CommonUtils . fillTemplateWithStringsByRegexp ( 
 filter . influenceFormat , text , filter . commentRegexp ) ; 
 - int influence ; 
 + final int influence ; 
 try { 
 if ( CommonUtils . startsWithChar ( format , ' + ' ) ) { 
 format = format . substring ( 1 ) ;

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index d17344d . . f280995 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1104 , 11 + 1104 , 6 @ @ 
 < regex > < pattern > . * . checks . coding . SimplifyBooleanReturnCheck < / pattern > < branchRate > 83 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . coding . VariableDeclarationUsageDistanceCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 98 < / lineRate > < / regex > 
 
 - < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck \ $ . * < / pattern > < branchRate > 50 < / branchRate > < lineRate > 68 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . javadoc . AtclauseOrderCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 88 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . javadoc . WriteTagCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 91 < / lineRate > < / regex > 
 - 
 < regex > < pattern > . * . checks . header . AbstractHeaderCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 87 < / lineRate > < / regex > 
 
 < regex > < pattern > . * . checks . regexp . CommentSuppressor < / pattern > < branchRate > 75 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index c1fedce . . 67ee9d6 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 19 , 10 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 
 - import java . io . ByteArrayInputStream ; 
 import java . io . IOException ; 
 - import java . io . InputStream ; 
 - import java . nio . charset . Charset ; 
 import java . util . HashMap ; 
 import java . util . Map ; 
 
 @ @ - 33 , 7 + 30 , 6 @ @ import org . antlr . v4 . runtime . CommonTokenStream ; 
 import org . antlr . v4 . runtime . ParserRuleContext ; 
 import org . antlr . v4 . runtime . RecognitionException ; 
 import org . antlr . v4 . runtime . Recognizer ; 
 - import org . antlr . v4 . runtime . RuleContext ; 
 import org . antlr . v4 . runtime . Token ; 
 import org . antlr . v4 . runtime . misc . ParseCancellationException ; 
 import org . antlr . v4 . runtime . tree . ParseTree ; 
 @ @ - 213 , 12 + 209 , 6 @ @ public abstract class AbstractJavadocCheck extends Check { 
 try { 
 parseTree = parseJavadocAsParseTree ( javadocComment ) ; 
 } 
 - catch ( IOException e ) { 
 - / / Antlr can not initiate its ANTLRInputStream 
 - parseErrorMessage = new ParseErrorMessage ( javadocCommentAst . getLineNo ( ) , 
 - PARSE _ ERROR _ MESSAGE _ KEY , 
 - javadocCommentAst . getColumnNo ( ) , e . getMessage ( ) ) ; 
 - } 
 catch ( ParseCancellationException e ) { 
 / / If syntax error occurs then message is printed by error listener 
 / / and parser throws this runtime exception to stop parsing . 
 @ @ - 355 , 7 + 345 , 8 @ @ public abstract class AbstractJavadocCheck extends Check { 
 final ParseTree parent = node . getParent ( ) ; 
 final int childCount = parent . getChildCount ( ) ; 
 
 - for ( int i = 0 ; i < childCount ; i + + ) { 
 + int i = 0 ; 
 + while ( true ) { 
 final ParseTree currentNode = parent . getChild ( i ) ; 
 if ( currentNode . equals ( node ) ) { 
 if ( i = = childCount - 1 ) { 
 @ @ - 363 , 8 + 354 , 8 @ @ public abstract class AbstractJavadocCheck extends Check { 
 } 
 return parent . getChild ( i + 1 ) ; 
 } 
 + i + + ; 
 } 
 - return null ; 
 } 
 
 / * * 
 @ @ - 442 , 12 + 433 , 8 @ @ public abstract class AbstractJavadocCheck extends Check { 
 * @ throws IOException 
 * errors in ANTLRInputStream 
 * / 
 - private ParseTree parseJavadocAsParseTree ( String blockComment ) 
 - throws IOException { 
 - final Charset utf8Charset = Charset . forName ( " UTF - 8 " ) ; 
 - final InputStream in = new ByteArrayInputStream ( blockComment . getBytes ( utf8Charset ) ) ; 
 - 
 - final ANTLRInputStream input = new ANTLRInputStream ( in ) ; 
 + private ParseTree parseJavadocAsParseTree ( String blockComment ) { 
 + final ANTLRInputStream input = new ANTLRInputStream ( blockComment ) ; 
 
 final JavadocLexer lexer = new JavadocLexer ( input ) ; 
 
 @ @ - 493 , 10 + 480 , 6 @ @ public abstract class AbstractJavadocCheck extends Check { 
 private void walk ( DetailNode root ) { 
 final int [ ] defaultTokenTypes = getDefaultJavadocTokens ( ) ; 
 
 - if ( defaultTokenTypes = = null ) { 
 - return ; 
 - } 
 - 
 DetailNode curNode = root ; 
 while ( curNode ! = null ) { 
 final boolean waitsFor = Ints . contains ( defaultTokenTypes , curNode . getType ( ) ) ; 
 @ @ - 525 , 29 + 508 , 24 @ @ public abstract class AbstractJavadocCheck extends Check { 
 * / 
 static class DescriptiveErrorListener extends BaseErrorListener { 
 / * * 
 - * Parse error while token recognition . 
 - * / 
 - private static final String JAVADOC _ PARSE _ TOKEN _ ERROR = " javadoc . parse . token . error " ; 
 - 
 - / * * 
 - * Parse error while rule recognition . 
 - * / 
 - private static final String JAVADOC _ PARSE _ RULE _ ERROR = " javadoc . parse . rule . error " ; 
 - 
 - / * * 
 * Message key of error message . Missed close HTML tag breaks structure 
 * of parse tree , so parser stops parsing and generates such error 
 * message . This case is special because parser prints error like 
 * { @ code " no viable alternative at input ' b \ n * \ n ' " } and it is not 
 * clear that error is about missed close HTML tag . 
 * / 
 - private static final String JAVADOC _ MISSED _ HTML _ CLOSE = " javadoc . missed . html . close " ; 
 + static final String JAVADOC _ MISSED _ HTML _ CLOSE = " javadoc . missed . html . close " ; 
 
 / * * 
 * Message key of error message . 
 * / 
 - private static final String JAVADOC _ WRONG _ SINGLETON _ TAG = 
 - " javadoc . wrong . singleton . html . tag " ; 
 + static final String JAVADOC _ WRONG _ SINGLETON _ TAG = 
 + " javadoc . wrong . singleton . html . tag " ; 
 + 
 + / * * 
 + * Parse error while rule recognition . 
 + * / 
 + private static final String JAVADOC _ PARSE _ RULE _ ERROR = " javadoc . parse . rule . error " ; 
 
 / * * 
 * Offset is line number of beginning of the Javadoc comment . Log 
 @ @ - 607 , 20 + 585 , 13 @ @ public abstract class AbstractJavadocCheck extends Check { 
 throw new ParseCancellationException ( ) ; 
 } 
 else { 
 - final RuleContext ruleContext = ex . getCtx ( ) ; 
 - if ( ruleContext ! = null ) { 
 - final int ruleIndex = ex . getCtx ( ) . getRuleIndex ( ) ; 
 - final String ruleName = recognizer . getRuleNames ( ) [ ruleIndex ] ; 
 - final String upperCaseRuleName = CaseFormat . UPPER _ CAMEL . to ( 
 - CaseFormat . UPPER _ UNDERSCORE , ruleName ) ; 
 - 
 - errorMessage = new ParseErrorMessage ( lineNumber , 
 - JAVADOC _ PARSE _ RULE _ ERROR , charPositionInLine , msg , upperCaseRuleName ) ; 
 - } 
 - else { 
 - errorMessage = new ParseErrorMessage ( lineNumber , JAVADOC _ PARSE _ TOKEN _ ERROR , 
 - charPositionInLine , msg , charPositionInLine ) ; 
 - } 
 + final int ruleIndex = ex . getCtx ( ) . getRuleIndex ( ) ; 
 + final String ruleName = recognizer . getRuleNames ( ) [ ruleIndex ] ; 
 + final String upperCaseRuleName = CaseFormat . UPPER _ CAMEL . to ( 
 + CaseFormat . UPPER _ UNDERSCORE , ruleName ) ; 
 + 
 + errorMessage = new ParseErrorMessage ( lineNumber , 
 + JAVADOC _ PARSE _ RULE _ ERROR , charPositionInLine , msg , upperCaseRuleName ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties 
 index ccc6b4c . . 7e59866 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties 
 @ @ - 1 , 6 + 1 , 5 @ @ 
 javadoc . parse . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } 
 javadoc . unrecognized . antlr . error = Javadoc comment at column { 0 } has parse error . Unrecognized error from ANTLR parser : { 1 } 
 - javadoc . parse . token . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } 
 javadoc . parse . rule . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } while parsing { 2 } 
 javadoc . missed . html . close = Javadoc comment at column { 0 } has parse error . Missed HTML close tag ' ' { 1 } ' ' . Sometimes it means that close tag missed for one of previous tags . 
 javadoc . wrong . singleton . html . tag = Javadoc comment at column { 0 } has parse error . It is forbidden to close singleton HTML tags . Tag : { 1 } . 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 index a663850 . . a02d6a3 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 @ @ - 19 , 12 + 19 , 17 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 
 + import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . DescriptiveErrorListener . JAVADOC _ MISSED _ HTML _ CLOSE ; 
 + import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . DescriptiveErrorListener . JAVADOC _ WRONG _ SINGLETON _ TAG ; 
 import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . PARSE _ ERROR _ MESSAGE _ KEY ; 
 + import static com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck . UNRECOGNIZED _ ANTLR _ ERROR _ MESSAGE _ KEY ; 
 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 + import com . puppycrawl . tools . checkstyle . Checker ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 import com . puppycrawl . tools . checkstyle . api . DetailNode ; 
 
 public class AbstractJavadocCheckTest extends BaseCheckTestSupport { 
 @ @ - 52 , 4 + 57 , 39 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { 
 } ; 
 verify ( checkConfig , getPath ( " javadoc / InputTestNumberFomatException . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testCustomTag ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( TempCheck . class ) ; 
 + final String [ ] expected = { 
 + " 4 : " + getCheckMessage ( UNRECOGNIZED _ ANTLR _ ERROR _ MESSAGE _ KEY , 4 , " null " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " javadoc / InputCustomTag . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testParsingErrors ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( TempCheck . class ) ; 
 + final String [ ] expected = { 
 + " 4 : " + getCheckMessage ( JAVADOC _ MISSED _ HTML _ CLOSE , 4 , " unclosedTag " ) , 
 + " 8 : " + getCheckMessage ( JAVADOC _ WRONG _ SINGLETON _ TAG , 35 , " img " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " javadoc / InputParsingErrors . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testWithMultipleChecks ( ) throws Exception { 
 + final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " configuration " ) ; 
 + final DefaultConfiguration checksConfig = createCheckConfig ( TreeWalker . class ) ; 
 + checksConfig . addChild ( createCheckConfig ( AtclauseOrderCheck . class ) ) ; 
 + checksConfig . addChild ( createCheckConfig ( JavadocParagraphCheck . class ) ) ; 
 + checkerConfig . addChild ( checksConfig ) ; 
 + final Checker checker = new Checker ( ) ; 
 + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 + checker . configure ( checkerConfig ) ; 
 + 
 + final String [ ] expected = { 
 + } ; 
 + verify ( checker , getPath ( " javadoc / InputCorrectJavaDocParagraphCheck . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputCustomTag . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputCustomTag . java 
 new file mode 100644 
 index 0000000 . . 6a0560d 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputCustomTag . java 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + package com . puppycrawl . tools . checkstyle . javadoc ; 
 + 
 + public class InputCustomTag { 
 + / * * 
 + * { @ customTag } 
 + * / 
 + void customTag ( ) { } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputParsingErrors . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputParsingErrors . java 
 new file mode 100644 
 index 0000000 . . 850fa00 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / InputParsingErrors . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + package com . puppycrawl . tools . checkstyle . javadoc ; 
 + 
 + / * * 
 + * < unclosedTag > 
 + * / 
 + class InputParsingErrors { 
 + / * * 
 + * < img src = " singletonTag " / > < / img > 
 + * / 
 + void singletonTag ( ) { 
 + } 
 + }
