BLEU SCORE: 0.041961149062965476

TEST MSG: Issue # 6531 : aligned javadoc / xdoc for SuppressWarnings
GENERATED MSG: NoLineWrap # 173

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java <nl> index 5a31318 . . bcb6218 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java <nl> @ @ - 32 , 62 + 32 , 95 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> / * * <nl> * < p > <nl> * This check allows you to specify what warnings that <nl> - * { @ link SuppressWarnings SuppressWarnings } is not <nl> - * allowed to suppress . You can also specify a list <nl> - * of TokenTypes that the configured warning ( s ) cannot <nl> - * be suppressed on . <nl> + * & # 64 ; SuppressWarnings is not allowed to suppress . <nl> + * You can also specify a list of TokenTypes that <nl> + * the configured warning ( s ) cannot be suppressed on . <nl> * < / p > <nl> - * <nl> * < p > <nl> - * The { @ link # setFormat warnings } property is a <nl> - * regex pattern . Any warning being suppressed matching <nl> - * this pattern will be flagged . <nl> + * Limitations : This check does not consider conditionals <nl> + * inside the & # 64 ; SuppressWarnings annotation . <nl> * < / p > <nl> - * <nl> * < p > <nl> - * By default , any warning specified will be disallowed on <nl> - * all legal TokenTypes unless otherwise specified via <nl> - * the <nl> - * { @ link AbstractCheck # setTokens ( String [ ] ) tokens } <nl> - * property . <nl> - * <nl> - * Also , by default warnings that are empty strings or all <nl> - * whitespace ( regex : ^ $ | ^ \ s + $ ) are flagged . By specifying , <nl> - * the format property these defaults no longer apply . <nl> - * < / p > <nl> - * <nl> - * < p > Limitations : This check does not consider conditionals <nl> - * inside the SuppressWarnings annotation . < br > <nl> * For example : <nl> * { @ code @ SuppressWarnings ( ( false ) ? ( true ) ? " unchecked " : " foo " : " unused " ) } . <nl> * According to the above example , the " unused " warning is being suppressed <nl> * not the " unchecked " or " foo " warnings . All of these warnings will be <nl> * considered and matched against regardless of what the conditional <nl> * evaluates to . <nl> - * < br > <nl> * The check also does not support code like { @ code @ SuppressWarnings ( " un " + " used " ) } , <nl> * { @ code @ SuppressWarnings ( ( String ) " unused " ) } or <nl> * { @ code @ SuppressWarnings ( { ( ' u ' + ( char ) ' n ' ) + ( " " + ( " used " + ( String ) " " ) ) , } ) } . <nl> * < / p > <nl> - * <nl> + * < p > <nl> + * By default , any warning specified will be disallowed on <nl> + * all legal TokenTypes unless otherwise specified via <nl> + * the tokens property . <nl> + * < / p > <nl> + * < p > <nl> + * Also , by default warnings that are empty strings or all <nl> + * whitespace ( regex : ^ $ | ^ \ s + $ ) are flagged . By specifying , <nl> + * the format property these defaults no longer apply . <nl> + * < / p > <nl> * < p > This check can be configured so that the " unchecked " <nl> * and " unused " warnings cannot be suppressed on <nl> * anything but variable and parameter declarations . <nl> * See below of an example . <nl> * < / p > <nl> - * <nl> + * < ul > <nl> + * < li > <nl> + * Property { @ code format } - Specify the RegExp to match against warnings . Any warning <nl> + * being suppressed matching this pattern will be flagged . <nl> + * Default value is { @ code " ^ \ s * + $ " } . <nl> + * < / li > <nl> + * < li > <nl> + * Property { @ code tokens } - tokens to check <nl> + * Default value is : <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > <nl> + * CLASS _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > <nl> + * INTERFACE _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > <nl> + * ENUM _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ DEF " > <nl> + * ANNOTATION _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ FIELD _ DEF " > <nl> + * ANNOTATION _ FIELD _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ CONSTANT _ DEF " > <nl> + * ENUM _ CONSTANT _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # PARAMETER _ DEF " > <nl> + * PARAMETER _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > <nl> + * VARIABLE _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > <nl> + * METHOD _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CTOR _ DEF " > <nl> + * CTOR _ DEF < / a > . <nl> + * < / li > <nl> + * < / ul > <nl> + * < p > <nl> + * To configure the check : <nl> + * < / p > <nl> + * < pre > <nl> + * & lt ; module name = & quot ; SuppressWarnings & quot ; / & gt ; <nl> + * < / pre > <nl> + * < p > <nl> + * To configure the check so that the " unchecked " and " unused " <nl> + * warnings cannot be suppressed on anything but variable and parameter declarations . <nl> + * < / p > <nl> * < pre > <nl> * & lt ; module name = & quot ; SuppressWarnings & quot ; & gt ; <nl> - * & lt ; property name = & quot ; format & quot ; <nl> - * value = & quot ; ^ unchecked $ | ^ unused $ & quot ; / & gt ; <nl> - * & lt ; property name = & quot ; tokens & quot ; <nl> - * value = & quot ; <nl> - * CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , <nl> - * ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF , <nl> - * ENUM _ CONSTANT _ DEF , METHOD _ DEF , CTOR _ DEF <nl> - * & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; format & quot ; <nl> + * value = & quot ; ^ unchecked $ | ^ unused $ & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; tokens & quot ; <nl> + * value = & quot ; <nl> + * CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , <nl> + * ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF , <nl> + * ENUM _ CONSTANT _ DEF , METHOD _ DEF , CTOR _ DEF <nl> + * & quot ; / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> + * <nl> + * @ since 5 . 0 <nl> * / <nl> @ StatelessCheck <nl> public class SuppressWarningsCheck extends AbstractCheck { <nl> @ @ - 109 , 11 + 142 , 15 @ @ public class SuppressWarningsCheck extends AbstractCheck { <nl> private static final String FQ _ SUPPRESS _ WARNINGS = <nl> " java . lang . " + SUPPRESS _ WARNINGS ; <nl> <nl> - / * * The regexp to match against . * / <nl> + / * * <nl> + * Specify the RegExp to match against warnings . Any warning <nl> + * being suppressed matching this pattern will be flagged . <nl> + * / <nl> private Pattern format = Pattern . compile ( " ^ \ \ s * + $ " ) ; <nl> <nl> / * * <nl> - * Set the format for the specified regular expression . <nl> + * Setter to specify the RegExp to match against warnings . Any warning <nl> + * being suppressed matching this pattern will be flagged . <nl> * @ param pattern the new pattern <nl> * / <nl> public final void setFormat ( Pattern pattern ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> index cbc1081 . . eddcad6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> @ @ - 95 , 6 + 95 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { <nl> " PackageName " , <nl> " ParameterName " , <nl> " StaticVariableName " , <nl> + " SuppressWarnings " , <nl> " TypeName " , <nl> } ; <nl> <nl> diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml <nl> index 397858f . . e4abe9d 100644 <nl> - - - a / src / xdocs / config _ annotation . xml <nl> + + + b / src / xdocs / config _ annotation . xml <nl> @ @ - 797 , 26 + 797 , 44 @ @ public static final int COUNTER = 10 ; / / violation as javadoc exists <nl> < / section > <nl> <nl> < section name = " SuppressWarnings " > <nl> + < p > Since Checkstyle 5 . 0 < / p > <nl> < subsection name = " Description " id = " SuppressWarnings _ Description " > <nl> - < p > Since Checkstyle 5 . 0 < / p > <nl> < p > This check allows you to specify what warnings that <nl> - SuppressWarnings is not allowed to suppress . <nl> + @ SuppressWarnings is not allowed to suppress . <nl> You can also specify a list of TokenTypes that <nl> - the configured warning ( s ) cannot be suppressed on . < / p > <nl> - <nl> + the configured warning ( s ) cannot be suppressed on . <nl> + < / p > <nl> < p > <nl> Limitations : This check does not consider conditionals <nl> - inside the SuppressWarnings annotation . < br / > <nl> - For example : @ SuppressWarnings ( ( false ) ? ( true ) ? " unchecked " : " foo " : " unused " ) <nl> + inside the @ SuppressWarnings annotation . <nl> + < / p > <nl> + < p > <nl> + For example : <nl> + < code > @ SuppressWarnings ( ( false ) ? ( true ) ? " unchecked " : " foo " : " unused " ) < / code > . <nl> According to the above example , the " unused " warning is being suppressed <nl> not the " unchecked " or " foo " warnings . All of these warnings will be <nl> considered and matched against regardless of what the conditional <nl> evaluates to . <nl> - < br / > <nl> The check also does not support code like < code > @ SuppressWarnings ( " un " + " used " ) < / code > , <nl> < code > @ SuppressWarnings ( ( String ) " unused " ) < / code > or <nl> < code > @ SuppressWarnings ( { ( ' u ' + ( char ) ' n ' ) + ( " " + ( " used " + ( String ) " " ) ) , } ) < / code > . <nl> < / p > <nl> + < p > <nl> + By default , any warning specified will be disallowed on <nl> + all legal TokenTypes unless otherwise specified via <nl> + the tokens property . <nl> + < / p > <nl> + < p > <nl> + Also , by default warnings that are empty strings or all <nl> + whitespace ( regex : ^ $ | ^ \ s + $ ) are flagged . By specifying , <nl> + the format property these defaults no longer apply . <nl> + < / p > <nl> + < p > <nl> + This check can be configured so that the " unchecked " <nl> + and " unused " warnings cannot be suppressed on <nl> + anything but variable and parameter declarations . <nl> + See below of an example . <nl> + < / p > <nl> < / subsection > <nl> < subsection name = " Properties " id = " SuppressWarnings _ Properties " > <nl> < table > <nl> @ @ - 830 , 7 + 848 , 7 @ @ public static final int COUNTER = 10 ; / / violation as javadoc exists <nl> < tr > <nl> < td > format < / td > <nl> < td > <nl> - The warnings property is a regex pattern . Any warning <nl> + Specify the RegExp to match against warnings . Any warning <nl> being suppressed matching this pattern will be flagged . <nl> < / td > <nl> < td >
NEAREST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index 6ad4227 . . e8336d4 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 3 , 4 + 3 , 5 @ @ jdk : <nl> - openjdk6 <nl> - openjdk7 <nl> - oraclejdk7 <nl> + - oraclejdk8 <nl> install : mvn clean package

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java 
 index 5a31318 . . bcb6218 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / SuppressWarningsCheck . java 
 @ @ - 32 , 62 + 32 , 95 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 / * * 
 * < p > 
 * This check allows you to specify what warnings that 
 - * { @ link SuppressWarnings SuppressWarnings } is not 
 - * allowed to suppress . You can also specify a list 
 - * of TokenTypes that the configured warning ( s ) cannot 
 - * be suppressed on . 
 + * & # 64 ; SuppressWarnings is not allowed to suppress . 
 + * You can also specify a list of TokenTypes that 
 + * the configured warning ( s ) cannot be suppressed on . 
 * < / p > 
 - * 
 * < p > 
 - * The { @ link # setFormat warnings } property is a 
 - * regex pattern . Any warning being suppressed matching 
 - * this pattern will be flagged . 
 + * Limitations : This check does not consider conditionals 
 + * inside the & # 64 ; SuppressWarnings annotation . 
 * < / p > 
 - * 
 * < p > 
 - * By default , any warning specified will be disallowed on 
 - * all legal TokenTypes unless otherwise specified via 
 - * the 
 - * { @ link AbstractCheck # setTokens ( String [ ] ) tokens } 
 - * property . 
 - * 
 - * Also , by default warnings that are empty strings or all 
 - * whitespace ( regex : ^ $ | ^ \ s + $ ) are flagged . By specifying , 
 - * the format property these defaults no longer apply . 
 - * < / p > 
 - * 
 - * < p > Limitations : This check does not consider conditionals 
 - * inside the SuppressWarnings annotation . < br > 
 * For example : 
 * { @ code @ SuppressWarnings ( ( false ) ? ( true ) ? " unchecked " : " foo " : " unused " ) } . 
 * According to the above example , the " unused " warning is being suppressed 
 * not the " unchecked " or " foo " warnings . All of these warnings will be 
 * considered and matched against regardless of what the conditional 
 * evaluates to . 
 - * < br > 
 * The check also does not support code like { @ code @ SuppressWarnings ( " un " + " used " ) } , 
 * { @ code @ SuppressWarnings ( ( String ) " unused " ) } or 
 * { @ code @ SuppressWarnings ( { ( ' u ' + ( char ) ' n ' ) + ( " " + ( " used " + ( String ) " " ) ) , } ) } . 
 * < / p > 
 - * 
 + * < p > 
 + * By default , any warning specified will be disallowed on 
 + * all legal TokenTypes unless otherwise specified via 
 + * the tokens property . 
 + * < / p > 
 + * < p > 
 + * Also , by default warnings that are empty strings or all 
 + * whitespace ( regex : ^ $ | ^ \ s + $ ) are flagged . By specifying , 
 + * the format property these defaults no longer apply . 
 + * < / p > 
 * < p > This check can be configured so that the " unchecked " 
 * and " unused " warnings cannot be suppressed on 
 * anything but variable and parameter declarations . 
 * See below of an example . 
 * < / p > 
 - * 
 + * < ul > 
 + * < li > 
 + * Property { @ code format } - Specify the RegExp to match against warnings . Any warning 
 + * being suppressed matching this pattern will be flagged . 
 + * Default value is { @ code " ^ \ s * + $ " } . 
 + * < / li > 
 + * < li > 
 + * Property { @ code tokens } - tokens to check 
 + * Default value is : 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > 
 + * CLASS _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > 
 + * INTERFACE _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > 
 + * ENUM _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ DEF " > 
 + * ANNOTATION _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ANNOTATION _ FIELD _ DEF " > 
 + * ANNOTATION _ FIELD _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ CONSTANT _ DEF " > 
 + * ENUM _ CONSTANT _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # PARAMETER _ DEF " > 
 + * PARAMETER _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > 
 + * VARIABLE _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > 
 + * METHOD _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CTOR _ DEF " > 
 + * CTOR _ DEF < / a > . 
 + * < / li > 
 + * < / ul > 
 + * < p > 
 + * To configure the check : 
 + * < / p > 
 + * < pre > 
 + * & lt ; module name = & quot ; SuppressWarnings & quot ; / & gt ; 
 + * < / pre > 
 + * < p > 
 + * To configure the check so that the " unchecked " and " unused " 
 + * warnings cannot be suppressed on anything but variable and parameter declarations . 
 + * < / p > 
 * < pre > 
 * & lt ; module name = & quot ; SuppressWarnings & quot ; & gt ; 
 - * & lt ; property name = & quot ; format & quot ; 
 - * value = & quot ; ^ unchecked $ | ^ unused $ & quot ; / & gt ; 
 - * & lt ; property name = & quot ; tokens & quot ; 
 - * value = & quot ; 
 - * CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , 
 - * ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF , 
 - * ENUM _ CONSTANT _ DEF , METHOD _ DEF , CTOR _ DEF 
 - * & quot ; / & gt ; 
 + * & lt ; property name = & quot ; format & quot ; 
 + * value = & quot ; ^ unchecked $ | ^ unused $ & quot ; / & gt ; 
 + * & lt ; property name = & quot ; tokens & quot ; 
 + * value = & quot ; 
 + * CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , 
 + * ANNOTATION _ DEF , ANNOTATION _ FIELD _ DEF , 
 + * ENUM _ CONSTANT _ DEF , METHOD _ DEF , CTOR _ DEF 
 + * & quot ; / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 + * 
 + * @ since 5 . 0 
 * / 
 @ StatelessCheck 
 public class SuppressWarningsCheck extends AbstractCheck { 
 @ @ - 109 , 11 + 142 , 15 @ @ public class SuppressWarningsCheck extends AbstractCheck { 
 private static final String FQ _ SUPPRESS _ WARNINGS = 
 " java . lang . " + SUPPRESS _ WARNINGS ; 
 
 - / * * The regexp to match against . * / 
 + / * * 
 + * Specify the RegExp to match against warnings . Any warning 
 + * being suppressed matching this pattern will be flagged . 
 + * / 
 private Pattern format = Pattern . compile ( " ^ \ \ s * + $ " ) ; 
 
 / * * 
 - * Set the format for the specified regular expression . 
 + * Setter to specify the RegExp to match against warnings . Any warning 
 + * being suppressed matching this pattern will be flagged . 
 * @ param pattern the new pattern 
 * / 
 public final void setFormat ( Pattern pattern ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 index cbc1081 . . eddcad6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 @ @ - 95 , 6 + 95 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { 
 " PackageName " , 
 " ParameterName " , 
 " StaticVariableName " , 
 + " SuppressWarnings " , 
 " TypeName " , 
 } ; 
 
 diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml 
 index 397858f . . e4abe9d 100644 
 - - - a / src / xdocs / config _ annotation . xml 
 + + + b / src / xdocs / config _ annotation . xml 
 @ @ - 797 , 26 + 797 , 44 @ @ public static final int COUNTER = 10 ; / / violation as javadoc exists 
 < / section > 
 
 < section name = " SuppressWarnings " > 
 + < p > Since Checkstyle 5 . 0 < / p > 
 < subsection name = " Description " id = " SuppressWarnings _ Description " > 
 - < p > Since Checkstyle 5 . 0 < / p > 
 < p > This check allows you to specify what warnings that 
 - SuppressWarnings is not allowed to suppress . 
 + @ SuppressWarnings is not allowed to suppress . 
 You can also specify a list of TokenTypes that 
 - the configured warning ( s ) cannot be suppressed on . < / p > 
 - 
 + the configured warning ( s ) cannot be suppressed on . 
 + < / p > 
 < p > 
 Limitations : This check does not consider conditionals 
 - inside the SuppressWarnings annotation . < br / > 
 - For example : @ SuppressWarnings ( ( false ) ? ( true ) ? " unchecked " : " foo " : " unused " ) 
 + inside the @ SuppressWarnings annotation . 
 + < / p > 
 + < p > 
 + For example : 
 + < code > @ SuppressWarnings ( ( false ) ? ( true ) ? " unchecked " : " foo " : " unused " ) < / code > . 
 According to the above example , the " unused " warning is being suppressed 
 not the " unchecked " or " foo " warnings . All of these warnings will be 
 considered and matched against regardless of what the conditional 
 evaluates to . 
 - < br / > 
 The check also does not support code like < code > @ SuppressWarnings ( " un " + " used " ) < / code > , 
 < code > @ SuppressWarnings ( ( String ) " unused " ) < / code > or 
 < code > @ SuppressWarnings ( { ( ' u ' + ( char ) ' n ' ) + ( " " + ( " used " + ( String ) " " ) ) , } ) < / code > . 
 < / p > 
 + < p > 
 + By default , any warning specified will be disallowed on 
 + all legal TokenTypes unless otherwise specified via 
 + the tokens property . 
 + < / p > 
 + < p > 
 + Also , by default warnings that are empty strings or all 
 + whitespace ( regex : ^ $ | ^ \ s + $ ) are flagged . By specifying , 
 + the format property these defaults no longer apply . 
 + < / p > 
 + < p > 
 + This check can be configured so that the " unchecked " 
 + and " unused " warnings cannot be suppressed on 
 + anything but variable and parameter declarations . 
 + See below of an example . 
 + < / p > 
 < / subsection > 
 < subsection name = " Properties " id = " SuppressWarnings _ Properties " > 
 < table > 
 @ @ - 830 , 7 + 848 , 7 @ @ public static final int COUNTER = 10 ; / / violation as javadoc exists 
 < tr > 
 < td > format < / td > 
 < td > 
 - The warnings property is a regex pattern . Any warning 
 + Specify the RegExp to match against warnings . Any warning 
 being suppressed matching this pattern will be flagged . 
 < / td > 
 < td >

NEAREST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index 6ad4227 . . e8336d4 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 3 , 4 + 3 , 5 @ @ jdk : 
 - openjdk6 
 - openjdk7 
 - oraclejdk7 
 + - oraclejdk8 
 install : mvn clean package
