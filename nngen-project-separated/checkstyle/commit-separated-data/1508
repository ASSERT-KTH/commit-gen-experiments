BLEU SCORE: 0.028398387225677897

TEST MSG: Issue # 2268 : require all checks appear in checkstyle _ checks . xml
GENERATED MSG: Changed to make the XML be validated using the DTD . The

TEST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 691b502 . . 2d4e38e 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 375 , 6 + 375 , 7 @ @ <nl> - - > <nl> < property name = " severity " value = " ignore " / > <nl> < / module > <nl> + < module name = " FileContentsHolder " / > <nl> < / module > <nl> < module name = " Translation " > <nl> < property name = " requiredTranslations " value = " de , fr , fi , es , pt , ja , tr " / > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java <nl> index f52c240 . . 7e53d5d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java <nl> @ @ - 53 , 6 + 53 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . Filter ; <nl> import com . puppycrawl . tools . checkstyle . checks . imports . ImportControlCheck ; <nl> <nl> public class AllChecksTest extends BaseCheckTestSupport { <nl> + private static final String CONFIG _ PATH = " config " + File . separator <nl> + + " checkstyle _ checks . xml " ; <nl> <nl> @ Test <nl> public void testAllChecksWithDefaultConfiguration ( ) throws Exception { <nl> @ @ - 151 , 10 + 153 , 9 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testAllChecksAreReferencedInConfigFile ( ) throws Exception { <nl> - final String configFilePath = " config / checkstyle _ checks . xml " ; <nl> final Set < Class < ? > > checksFromClassPath = getCheckstyleChecks ( ) ; <nl> final Set < String > checksReferencedInConfig = <nl> - getCheckStyleChecksReferencedInConfig ( configFilePath ) ; <nl> + getCheckStyleChecksReferencedInConfig ( CONFIG _ PATH ) ; <nl> final Set < String > checksNames = getSimpleNames ( checksFromClassPath ) ; <nl> <nl> for ( String check : checksNames ) { <nl> @ @ - 185 , 6 + 186 , 23 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> } <nl> } <nl> <nl> + @ Test <nl> + public void testAllCheckstyleModulesInCheckstyleConfig ( ) throws Exception { <nl> + final Set < String > configChecks = getCheckStyleChecksReferencedInConfig ( CONFIG _ PATH ) ; <nl> + <nl> + for ( String moduleName : getSimpleNames ( getCheckstyleModules ( ) ) ) { <nl> + if ( " SuppressionCommentFilter " . equals ( moduleName ) <nl> + | | " SeverityMatchFilter " . equals ( moduleName ) <nl> + | | " SuppressWithNearbyCommentFilter " . equals ( moduleName ) <nl> + | | " SuppressWarningsFilter " . equals ( moduleName ) ) { <nl> + continue ; <nl> + } <nl> + <nl> + Assert . assertTrue ( " checkstyle _ checks . xml is missing module : " + moduleName , <nl> + configChecks . contains ( moduleName ) ) ; <nl> + } <nl> + } <nl> + <nl> / * * <nl> * Gets the checkstyle ' s non abstract checks . <nl> * @ return the set of checkstyle ' s non abstract check classes . <nl> @ @ - 261 , 7 + 279 , 8 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> final String className = loadedClass . getSimpleName ( ) ; <nl> return isCheckstyleNonAbstractCheck ( loadedClass , className ) <nl> | | isFilterModule ( loadedClass , className ) <nl> - | | " SuppressWarningsHolder " . equals ( className ) ; <nl> + | | " SuppressWarningsHolder " . equals ( className ) <nl> + | | " FileContentsHolder " . equals ( className ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 332 , 8 + 351 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { <nl> final Element module = ( Element ) currentNode ; <nl> final String checkName = module . getAttribute ( " name " ) ; <nl> if ( ! " Checker " . equals ( checkName ) <nl> - & & ! " TreeWalker " . equals ( checkName ) <nl> - & & ! " SuppressionFilter " . equals ( checkName ) ) { <nl> + & & ! " TreeWalker " . equals ( checkName ) ) { <nl> checksReferencedInCheckstyleChecksXML . add ( checkName ) ; <nl> } <nl> } <nl> diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml <nl> index eb21bcf . . 7a4c3f3 100755 <nl> - - - a / src / xdocs / config _ misc . xml <nl> + + + b / src / xdocs / config _ misc . xml <nl> @ @ - 398 , 7 + 398 , 7 @ @ messages . properties : Key ' ok ' missing . <nl> Sun Style < / a > <nl> < / li > <nl> < li > <nl> - < a href = " https : / / github . com / checkstyle / checkstyle / blob / master / config / checkstyle _ checks . xml # L379 " > <nl> + < a href = " https : / / github . com / checkstyle / checkstyle / blob / master / config / checkstyle _ checks . xml # L380 " > <nl> Checkstyle Style < / a > <nl> < / li > <nl> < / ul > <nl> @ @ - 1549 , 6 + 1549 , 12 @ @ String unitAbbrev = " \ u03bc \ u03bc \ u03bc " ; <nl> < / subsection > <nl> <nl> < subsection name = " Example of Usage " > <nl> + < ul > <nl> + < li > <nl> + < a href = " https : / / github . com / checkstyle / checkstyle / blob / master / config / checkstyle _ checks . xml # L378 " > <nl> + Checkstyle Style < / a > <nl> + < / li > <nl> + < / ul > <nl> < / subsection > <nl> <nl> < subsection name = " Package " >
NEAREST DIFF (one line): diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java b / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java <nl> index 7c84f9c . . 64e0ef7 100644 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java <nl> @ @ - 36 , 8 + 36 , 7 @ @ public abstract class BaseCheckTestCase <nl> public static DefaultConfiguration createCheckConfig ( Class aClazz ) <nl> { <nl> final DefaultConfiguration checkConfig = <nl> - new DefaultConfiguration ( " test " ) ; <nl> - checkConfig . addAttribute ( " classname " , aClazz . getName ( ) ) ; <nl> + new DefaultConfiguration ( aClazz . getName ( ) ) ; <nl> return checkConfig ; <nl> } <nl>

TEST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 691b502 . . 2d4e38e 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 375 , 6 + 375 , 7 @ @ 
 - - > 
 < property name = " severity " value = " ignore " / > 
 < / module > 
 + < module name = " FileContentsHolder " / > 
 < / module > 
 < module name = " Translation " > 
 < property name = " requiredTranslations " value = " de , fr , fi , es , pt , ja , tr " / > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java 
 index f52c240 . . 7e53d5d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AllChecksTest . java 
 @ @ - 53 , 6 + 53 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . Filter ; 
 import com . puppycrawl . tools . checkstyle . checks . imports . ImportControlCheck ; 
 
 public class AllChecksTest extends BaseCheckTestSupport { 
 + private static final String CONFIG _ PATH = " config " + File . separator 
 + + " checkstyle _ checks . xml " ; 
 
 @ Test 
 public void testAllChecksWithDefaultConfiguration ( ) throws Exception { 
 @ @ - 151 , 10 + 153 , 9 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testAllChecksAreReferencedInConfigFile ( ) throws Exception { 
 - final String configFilePath = " config / checkstyle _ checks . xml " ; 
 final Set < Class < ? > > checksFromClassPath = getCheckstyleChecks ( ) ; 
 final Set < String > checksReferencedInConfig = 
 - getCheckStyleChecksReferencedInConfig ( configFilePath ) ; 
 + getCheckStyleChecksReferencedInConfig ( CONFIG _ PATH ) ; 
 final Set < String > checksNames = getSimpleNames ( checksFromClassPath ) ; 
 
 for ( String check : checksNames ) { 
 @ @ - 185 , 6 + 186 , 23 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 } 
 } 
 
 + @ Test 
 + public void testAllCheckstyleModulesInCheckstyleConfig ( ) throws Exception { 
 + final Set < String > configChecks = getCheckStyleChecksReferencedInConfig ( CONFIG _ PATH ) ; 
 + 
 + for ( String moduleName : getSimpleNames ( getCheckstyleModules ( ) ) ) { 
 + if ( " SuppressionCommentFilter " . equals ( moduleName ) 
 + | | " SeverityMatchFilter " . equals ( moduleName ) 
 + | | " SuppressWithNearbyCommentFilter " . equals ( moduleName ) 
 + | | " SuppressWarningsFilter " . equals ( moduleName ) ) { 
 + continue ; 
 + } 
 + 
 + Assert . assertTrue ( " checkstyle _ checks . xml is missing module : " + moduleName , 
 + configChecks . contains ( moduleName ) ) ; 
 + } 
 + } 
 + 
 / * * 
 * Gets the checkstyle ' s non abstract checks . 
 * @ return the set of checkstyle ' s non abstract check classes . 
 @ @ - 261 , 7 + 279 , 8 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 final String className = loadedClass . getSimpleName ( ) ; 
 return isCheckstyleNonAbstractCheck ( loadedClass , className ) 
 | | isFilterModule ( loadedClass , className ) 
 - | | " SuppressWarningsHolder " . equals ( className ) ; 
 + | | " SuppressWarningsHolder " . equals ( className ) 
 + | | " FileContentsHolder " . equals ( className ) ; 
 } 
 
 / * * 
 @ @ - 332 , 8 + 351 , 7 @ @ public class AllChecksTest extends BaseCheckTestSupport { 
 final Element module = ( Element ) currentNode ; 
 final String checkName = module . getAttribute ( " name " ) ; 
 if ( ! " Checker " . equals ( checkName ) 
 - & & ! " TreeWalker " . equals ( checkName ) 
 - & & ! " SuppressionFilter " . equals ( checkName ) ) { 
 + & & ! " TreeWalker " . equals ( checkName ) ) { 
 checksReferencedInCheckstyleChecksXML . add ( checkName ) ; 
 } 
 } 
 diff - - git a / src / xdocs / config _ misc . xml b / src / xdocs / config _ misc . xml 
 index eb21bcf . . 7a4c3f3 100755 
 - - - a / src / xdocs / config _ misc . xml 
 + + + b / src / xdocs / config _ misc . xml 
 @ @ - 398 , 7 + 398 , 7 @ @ messages . properties : Key ' ok ' missing . 
 Sun Style < / a > 
 < / li > 
 < li > 
 - < a href = " https : / / github . com / checkstyle / checkstyle / blob / master / config / checkstyle _ checks . xml # L379 " > 
 + < a href = " https : / / github . com / checkstyle / checkstyle / blob / master / config / checkstyle _ checks . xml # L380 " > 
 Checkstyle Style < / a > 
 < / li > 
 < / ul > 
 @ @ - 1549 , 6 + 1549 , 12 @ @ String unitAbbrev = " \ u03bc \ u03bc \ u03bc " ; 
 < / subsection > 
 
 < subsection name = " Example of Usage " > 
 + < ul > 
 + < li > 
 + < a href = " https : / / github . com / checkstyle / checkstyle / blob / master / config / checkstyle _ checks . xml # L378 " > 
 + Checkstyle Style < / a > 
 + < / li > 
 + < / ul > 
 < / subsection > 
 
 < subsection name = " Package " >

NEAREST DIFF:
diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java b / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java 
 index 7c84f9c . . 64e0ef7 100644 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java 
 @ @ - 36 , 8 + 36 , 7 @ @ public abstract class BaseCheckTestCase 
 public static DefaultConfiguration createCheckConfig ( Class aClazz ) 
 { 
 final DefaultConfiguration checkConfig = 
 - new DefaultConfiguration ( " test " ) ; 
 - checkConfig . addAttribute ( " classname " , aClazz . getName ( ) ) ; 
 + new DefaultConfiguration ( aClazz . getName ( ) ) ; 
 return checkConfig ; 
 } 

