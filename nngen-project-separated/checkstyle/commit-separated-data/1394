BLEU SCORE: 0.014199193612838947

TEST MSG: Issue # 2661 : Enforce ForbidCCommentsInMethodsCheck of sevntu - checkstyle over Checkstyle source code
GENERATED MSG: Patch from Oleg Sukhodolsky to add MissingSwitchDefaultCheck to check that a

TEST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index c6f6668 . . 5658e2e 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 22 , 5 + 22 , 6 @ @ <nl> < module name = " ForbidThrowAnonymousExceptionsCheck " / > <nl> < module name = " ForbidReturnInFinallyBlock " / > <nl> < module name = " ForbidInstantiation " / > <nl> + < module name = " ForbidCCommentsInMethods " / > <nl> < / module > <nl> < / module > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> index b54ac07 . . 79ac056 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> @ @ - 327 , 41 + 327 , 36 @ @ public class FallThroughCheck extends Check { <nl> final int endLineNo = nextCase . getLineNo ( ) ; <nl> final int endColNo = nextCase . getColumnNo ( ) ; <nl> <nl> - / * <nl> - * Remember : The lines number returned from the AST is 1 - based , but <nl> - * the lines number in this array are 0 - based . So you will often <nl> - * see a " lineNo - 1 " etc . <nl> - * / <nl> + / / Remember : The lines number returned from the AST is 1 - based , but <nl> + / / the lines number in this array are 0 - based . So you will often <nl> + / / see a " lineNo - 1 " etc . <nl> final String [ ] lines = getLines ( ) ; <nl> <nl> - / * <nl> - * Handle : <nl> - * case 1 : <nl> - * / + FALLTHRU + / case 2 : <nl> - * . . . . <nl> - * and <nl> - * switch ( i ) { <nl> - * default : <nl> - * / + FALLTHRU + / } <nl> - * / <nl> + / / Handle : <nl> + / / case 1 : <nl> + / / / + FALLTHRU + / case 2 : <nl> + / / . . . . <nl> + / / and <nl> + / / switch ( i ) { <nl> + / / default : <nl> + / / / + FALLTHRU + / } <nl> + / / <nl> final String linePart = lines [ endLineNo - 1 ] . substring ( 0 , endColNo ) ; <nl> if ( matchesComment ( regExp , linePart , endLineNo ) ) { <nl> allThroughComment = true ; <nl> } <nl> else { <nl> - / * <nl> - * Handle : <nl> - * case 1 : <nl> - * . . . . . <nl> - * / / FALLTHRU <nl> - * case 2 : <nl> - * . . . . <nl> - * and <nl> - * switch ( i ) { <nl> - * default : <nl> - * / / FALLTHRU <nl> - * } <nl> - * / <nl> + / / Handle : <nl> + / / case 1 : <nl> + / / . . . . . <nl> + / / / / FALLTHRU <nl> + / / case 2 : <nl> + / / . . . . <nl> + / / and <nl> + / / switch ( i ) { <nl> + / / default : <nl> + / / / / FALLTHRU <nl> + / / } <nl> final int startLineNo = currentCase . getLineNo ( ) ; <nl> for ( int i = endLineNo - 2 ; i > startLineNo - 1 ; i - - ) { <nl> if ( ! lines [ i ] . trim ( ) . isEmpty ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> index 1f4a6e8 . . 2c9d0e1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java <nl> @ @ - 195 , 10 + 195 , 10 @ @ public class JavadocStyleCheck <nl> * / <nl> private void checkComment ( final DetailAST ast , final TextBlock comment ) { <nl> if ( comment = = null ) { <nl> - / * checking for missing docs in JavadocStyleCheck is not consistent <nl> - with the rest of CheckStyle . . . Even though , I didn ' t think it <nl> - made sense to make another check just to ensure that the <nl> - package - info . java file actually contains package Javadocs . * / <nl> + / / checking for missing docs in JavadocStyleCheck is not consistent <nl> + / / with the rest of CheckStyle . . . Even though , I didn ' t think it <nl> + / / made sense to make another check just to ensure that the <nl> + / / package - info . java file actually contains package Javadocs . <nl> if ( getFileContents ( ) . inPackageInfo ( ) ) { <nl> log ( ast . getLineNo ( ) , JAVADOC _ MISSING ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / docs / releasenotes . html b / docs / releasenotes . html <nl> index 6bf8888 . . 0cccd80 100644 <nl> - - - a / docs / releasenotes . html <nl> + + + b / docs / releasenotes . html <nl> @ @ - 101 , 8 + 101 , 13 @ @ <nl> < p class = " body " > <nl> Resolved bugs : <nl> < / p > <nl> - < ul > <nl> - < li class = " body " > False alarms from RightCurly module for code that does not have braces in if - then - else ( bug 689836 ) . < / li > <nl> + 	 < ul > <nl> + 	 <nl> + 	 < li class = " body " > False alarms from RightCurly module for code that <nl> + does not have braces in if - then - else ( bug 689836 ) . < / li > <nl> + <nl> + 	 < li class = " body " > Grammar incorrectly defaulting unqualified floating point literals to be float , when they should be double ( bug 713716 ) . < / li > <nl> + <nl> < li class = " body " > & quot ; threadsafe & quot ; was treated as a Java keyword , resulting in parser errors for <nl> sources that use it as an identifier ( bug 710319 ) . < / li > <nl> < li class = " body " > ConfigurationLoader was not public ( only relevant for IDE plugin authors ) . < / li > <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / java . g b / src / checkstyle / com / puppycrawl / tools / checkstyle / java . g <nl> index 9c7d73c . . 56e165d 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / java . g <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / java . g <nl> @ @ - 1154 , 11 + 1154 , 11 @ @ NUM _ INT <nl> : ' . ' { _ ttype = DOT ; } <nl> ( 	 ( ' 0 ' . . ' 9 ' ) + ( EXPONENT ) ? ( f1 : FLOAT _ SUFFIX { t = f1 ; } ) ? <nl> { <nl> - 	 	 	 	 if ( t ! = null & & t . getText ( ) . toUpperCase ( ) . indexOf ( ' D ' ) > = 0 ) { <nl> - 	 _ ttype = NUM _ DOUBLE ; <nl> + 	 	 	 	 if ( t ! = null & & t . getText ( ) . toUpperCase ( ) . indexOf ( ' F ' ) > = 0 ) { <nl> + 	 _ ttype = NUM _ FLOAT ; <nl> 	 	 	 	 } <nl> 	 	 	 	 else { <nl> - 	 _ ttype = NUM _ FLOAT ; <nl> + 	 _ ttype = NUM _ DOUBLE ; / / assume double <nl> 	 	 	 	 } <nl> 	 	 	 	 } <nl> ) ? <nl> @ @ - 1189 , 11 + 1189 , 11 @ @ NUM _ INT <nl> | f4 : FLOAT _ SUFFIX { t = f4 ; } <nl> ) <nl> { <nl> - 	 	 	 if ( t ! = null & & t . getText ( ) . toUpperCase ( ) . indexOf ( ' D ' ) > = 0 ) { <nl> - _ ttype = NUM _ DOUBLE ; <nl> + 	 	 	 if ( t ! = null & & t . getText ( ) . toUpperCase ( ) . indexOf ( ' F ' ) > = 0 ) { <nl> + _ ttype = NUM _ FLOAT ; <nl> 	 	 	 } <nl> else { <nl> - _ ttype = NUM _ FLOAT ; <nl> + 	 	 _ ttype = NUM _ DOUBLE ; / / assume double <nl> 	 	 	 } <nl> 	 	 	 } <nl> ) ?

TEST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index c6f6668 . . 5658e2e 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 22 , 5 + 22 , 6 @ @ 
 < module name = " ForbidThrowAnonymousExceptionsCheck " / > 
 < module name = " ForbidReturnInFinallyBlock " / > 
 < module name = " ForbidInstantiation " / > 
 + < module name = " ForbidCCommentsInMethods " / > 
 < / module > 
 < / module > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 index b54ac07 . . 79ac056 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 @ @ - 327 , 41 + 327 , 36 @ @ public class FallThroughCheck extends Check { 
 final int endLineNo = nextCase . getLineNo ( ) ; 
 final int endColNo = nextCase . getColumnNo ( ) ; 
 
 - / * 
 - * Remember : The lines number returned from the AST is 1 - based , but 
 - * the lines number in this array are 0 - based . So you will often 
 - * see a " lineNo - 1 " etc . 
 - * / 
 + / / Remember : The lines number returned from the AST is 1 - based , but 
 + / / the lines number in this array are 0 - based . So you will often 
 + / / see a " lineNo - 1 " etc . 
 final String [ ] lines = getLines ( ) ; 
 
 - / * 
 - * Handle : 
 - * case 1 : 
 - * / + FALLTHRU + / case 2 : 
 - * . . . . 
 - * and 
 - * switch ( i ) { 
 - * default : 
 - * / + FALLTHRU + / } 
 - * / 
 + / / Handle : 
 + / / case 1 : 
 + / / / + FALLTHRU + / case 2 : 
 + / / . . . . 
 + / / and 
 + / / switch ( i ) { 
 + / / default : 
 + / / / + FALLTHRU + / } 
 + / / 
 final String linePart = lines [ endLineNo - 1 ] . substring ( 0 , endColNo ) ; 
 if ( matchesComment ( regExp , linePart , endLineNo ) ) { 
 allThroughComment = true ; 
 } 
 else { 
 - / * 
 - * Handle : 
 - * case 1 : 
 - * . . . . . 
 - * / / FALLTHRU 
 - * case 2 : 
 - * . . . . 
 - * and 
 - * switch ( i ) { 
 - * default : 
 - * / / FALLTHRU 
 - * } 
 - * / 
 + / / Handle : 
 + / / case 1 : 
 + / / . . . . . 
 + / / / / FALLTHRU 
 + / / case 2 : 
 + / / . . . . 
 + / / and 
 + / / switch ( i ) { 
 + / / default : 
 + / / / / FALLTHRU 
 + / / } 
 final int startLineNo = currentCase . getLineNo ( ) ; 
 for ( int i = endLineNo - 2 ; i > startLineNo - 1 ; i - - ) { 
 if ( ! lines [ i ] . trim ( ) . isEmpty ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 index 1f4a6e8 . . 2c9d0e1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocStyleCheck . java 
 @ @ - 195 , 10 + 195 , 10 @ @ public class JavadocStyleCheck 
 * / 
 private void checkComment ( final DetailAST ast , final TextBlock comment ) { 
 if ( comment = = null ) { 
 - / * checking for missing docs in JavadocStyleCheck is not consistent 
 - with the rest of CheckStyle . . . Even though , I didn ' t think it 
 - made sense to make another check just to ensure that the 
 - package - info . java file actually contains package Javadocs . * / 
 + / / checking for missing docs in JavadocStyleCheck is not consistent 
 + / / with the rest of CheckStyle . . . Even though , I didn ' t think it 
 + / / made sense to make another check just to ensure that the 
 + / / package - info . java file actually contains package Javadocs . 
 if ( getFileContents ( ) . inPackageInfo ( ) ) { 
 log ( ast . getLineNo ( ) , JAVADOC _ MISSING ) ; 
 }

NEAREST DIFF:
diff - - git a / docs / releasenotes . html b / docs / releasenotes . html 
 index 6bf8888 . . 0cccd80 100644 
 - - - a / docs / releasenotes . html 
 + + + b / docs / releasenotes . html 
 @ @ - 101 , 8 + 101 , 13 @ @ 
 < p class = " body " > 
 Resolved bugs : 
 < / p > 
 - < ul > 
 - < li class = " body " > False alarms from RightCurly module for code that does not have braces in if - then - else ( bug 689836 ) . < / li > 
 + 	 < ul > 
 + 	 
 + 	 < li class = " body " > False alarms from RightCurly module for code that 
 + does not have braces in if - then - else ( bug 689836 ) . < / li > 
 + 
 + 	 < li class = " body " > Grammar incorrectly defaulting unqualified floating point literals to be float , when they should be double ( bug 713716 ) . < / li > 
 + 
 < li class = " body " > & quot ; threadsafe & quot ; was treated as a Java keyword , resulting in parser errors for 
 sources that use it as an identifier ( bug 710319 ) . < / li > 
 < li class = " body " > ConfigurationLoader was not public ( only relevant for IDE plugin authors ) . < / li > 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / java . g b / src / checkstyle / com / puppycrawl / tools / checkstyle / java . g 
 index 9c7d73c . . 56e165d 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / java . g 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / java . g 
 @ @ - 1154 , 11 + 1154 , 11 @ @ NUM _ INT 
 : ' . ' { _ ttype = DOT ; } 
 ( 	 ( ' 0 ' . . ' 9 ' ) + ( EXPONENT ) ? ( f1 : FLOAT _ SUFFIX { t = f1 ; } ) ? 
 { 
 - 	 	 	 	 if ( t ! = null & & t . getText ( ) . toUpperCase ( ) . indexOf ( ' D ' ) > = 0 ) { 
 - 	 _ ttype = NUM _ DOUBLE ; 
 + 	 	 	 	 if ( t ! = null & & t . getText ( ) . toUpperCase ( ) . indexOf ( ' F ' ) > = 0 ) { 
 + 	 _ ttype = NUM _ FLOAT ; 
 	 	 	 	 } 
 	 	 	 	 else { 
 - 	 _ ttype = NUM _ FLOAT ; 
 + 	 _ ttype = NUM _ DOUBLE ; / / assume double 
 	 	 	 	 } 
 	 	 	 	 } 
 ) ? 
 @ @ - 1189 , 11 + 1189 , 11 @ @ NUM _ INT 
 | f4 : FLOAT _ SUFFIX { t = f4 ; } 
 ) 
 { 
 - 	 	 	 if ( t ! = null & & t . getText ( ) . toUpperCase ( ) . indexOf ( ' D ' ) > = 0 ) { 
 - _ ttype = NUM _ DOUBLE ; 
 + 	 	 	 if ( t ! = null & & t . getText ( ) . toUpperCase ( ) . indexOf ( ' F ' ) > = 0 ) { 
 + _ ttype = NUM _ FLOAT ; 
 	 	 	 } 
 else { 
 - _ ttype = NUM _ FLOAT ; 
 + 	 	 _ ttype = NUM _ DOUBLE ; / / assume double 
 	 	 	 } 
 	 	 	 } 
 ) ?
