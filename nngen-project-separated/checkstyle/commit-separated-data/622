BLEU SCORE: 0.09287528999566796

TEST MSG: Issue # 4563 : fixed stackoverflow with DetailAST . setParent
GENERATED MSG: Issue # 1243 : Output stream has to be closed

TEST DIFF (one line): diff - - git a / config / sevntu _ suppressions . xml b / config / sevntu _ suppressions . xml <nl> index c1bac04 . . 8a6b5ba 100644 <nl> - - - a / config / sevntu _ suppressions . xml <nl> + + + b / config / sevntu _ suppressions . xml <nl> @ @ - 31 , 4 + 31 , 8 @ @ <nl> and do not have coverage problems due to imports from java . util . stream . - - > <nl> < suppress id = " ForbidInterfacesImportFromJavaUtilStream " <nl> files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> + <nl> + < ! - - Tone down the checking for test code - - > <nl> + < suppress checks = " ForbidCertainImports " <nl> + files = " DetailASTTest \ . java " / > <nl> < / suppressions > <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 5dca0c7 . . cd4ebb1 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 32 , 7 + 32 , 7 @ @ <nl> < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " MagicNumber " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " AvoidStaticImport " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> - < suppress checks = " ClassDataAbstractionCoupling " files = " [ \ \ / ] IndentationCheckTest . java $ | [ \ \ / ] SuppressWithNearbyCommentFilterTest . java $ | [ \ \ / ] SuppressionCommentFilterTest . java $ " / > <nl> + < suppress checks = " ClassDataAbstractionCoupling " files = " [ \ \ / ] IndentationCheckTest . java $ | [ \ \ / ] SuppressWithNearbyCommentFilterTest . java $ | [ \ \ / ] SuppressionCommentFilterTest . java | [ \ \ / ] DetailASTTest . java $ " / > <nl> < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > <nl> < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ | [ \ \ / ] AbstractModuleTestSupport . java $ " / > <nl> < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java <nl> index 74f9e76 . . bd9ba2f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java <nl> @ @ - 199 , 13 + 199 , 17 @ @ public final class DetailAST extends CommonASTWithHiddenTokens { <nl> * @ param parent the parent token <nl> * / <nl> private void setParent ( DetailAST parent ) { <nl> - clearBranchTokenTypes ( ) ; <nl> - this . parent = parent ; <nl> - final DetailAST nextSibling = getNextSibling ( ) ; <nl> - if ( nextSibling ! = null ) { <nl> - nextSibling . setParent ( parent ) ; <nl> - nextSibling . previousSibling = this ; <nl> - } <nl> + DetailAST instance = this ; <nl> + do { <nl> + instance . clearBranchTokenTypes ( ) ; <nl> + instance . parent = parent ; <nl> + final DetailAST nextSibling = instance . getNextSibling ( ) ; <nl> + if ( nextSibling ! = null ) { <nl> + nextSibling . previousSibling = instance ; <nl> + } <nl> + <nl> + instance = nextSibling ; <nl> + } while ( instance ! = null ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> index eae69ec . . 78f630e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> @ @ - 23 , 8 + 23 , 12 @ @ import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNotSame ; <nl> import static org . junit . Assert . assertNull ; <nl> <nl> + import java . io . BufferedWriter ; <nl> import java . io . File ; <nl> + import java . io . FileOutputStream ; <nl> + import java . io . OutputStreamWriter ; <nl> import java . lang . reflect . Method ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . text . MessageFormat ; <nl> import java . util . Arrays ; <nl> import java . util . BitSet ; <nl> @ @ - 32 , 16 + 36 , 30 @ @ import java . util . List ; <nl> import java . util . Locale ; <nl> import java . util . function . Consumer ; <nl> <nl> + import org . junit . Rule ; <nl> import org . junit . Test ; <nl> + import org . junit . rules . TemporaryFolder ; <nl> import org . powermock . reflect . Whitebox ; <nl> <nl> + import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; <nl> + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> import com . puppycrawl . tools . checkstyle . TreeWalker ; <nl> + import com . puppycrawl . tools . checkstyle . checks . TodoCommentCheck ; <nl> + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> / * * <nl> * TestCase to check DetailAST . <nl> * @ author Oliver Burn <nl> * / <nl> - public class DetailASTTest { <nl> + public class DetailASTTest extends AbstractModuleTestSupport { <nl> + @ Rule <nl> + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> + <nl> + @ Override <nl> + protected String getPackageLocation ( ) { <nl> + return " com / puppycrawl / tools / checkstyle / api " ; <nl> + } <nl> + <nl> private static Method getSetParentMethod ( ) throws Exception { <nl> final Class < DetailAST > detailAstClass = DetailAST . class ; <nl> final Method setParentMethod = <nl> @ @ - 199 , 6 + 217 , 25 @ @ public class DetailASTTest { <nl> assertEquals ( " Invalid child " , newSibling , child . getNextSibling ( ) ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testManyComments ( ) throws Exception { <nl> + final File file = temporaryFolder . newFile ( " InputDetailASTManyComments . java " ) ; <nl> + <nl> + try ( BufferedWriter bw = new BufferedWriter ( new OutputStreamWriter ( <nl> + new FileOutputStream ( file ) , StandardCharsets . UTF _ 8 ) ) ) { <nl> + bw . write ( " class C { \ n " ) ; <nl> + for ( int i = 0 ; i < = 30000 ; i + + ) { <nl> + bw . write ( " / / " + i + " \ n " ) ; <nl> + } <nl> + bw . write ( " } \ n " ) ; <nl> + } <nl> + <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( TodoCommentCheck . class ) ; <nl> + <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , file . getAbsolutePath ( ) , expected ) ; <nl> + } <nl> + <nl> / * * <nl> * There are asserts in checkNode , but idea does not see them <nl> * @ noinspection JUnitTestMethodWithNoAssertions
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java <nl> index f12c401 . . 6a98cc4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java <nl> @ @ - 103 , 7 + 103 , 7 @ @ public abstract class Check extends AbstractViolationReporter { <nl> * @ return the set of token names <nl> * / <nl> public final Set < String > getTokenNames ( ) { <nl> - return tokens ; <nl> + return Collections . unmodifiableSet ( tokens ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> index 812f1de . . 5ea239a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> @ @ - 230 , 7 + 230 , 7 @ @ public final class FileContents implements CommentListener { <nl> * @ return an object containing the full text of the file <nl> * / <nl> public FileText getText ( ) { <nl> - return text ; <nl> + return new FileText ( text ) ; <nl> } <nl> <nl> / * * @ return the lines in the file * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java <nl> index 16a39b9 . . 682073d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> + import java . util . Collections ; <nl> import java . util . Objects ; <nl> import java . util . Set ; <nl> <nl> @ @ - 56 , 7 + 57 , 7 @ @ public class FilterSet <nl> * @ return the Filters of the filter set . <nl> * / <nl> public Set < Filter > getFilters ( ) { <nl> - return filters ; <nl> + return Collections . unmodifiableSet ( filters ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java <nl> index e5d6eb8 . . 5cbab3f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> <nl> import com . google . common . collect . HashMultiset ; <nl> + import com . google . common . collect . ImmutableMultiset ; <nl> import com . google . common . collect . Multiset ; <nl> import com . google . common . collect . Multiset . Entry ; <nl> import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; <nl> @ @ - 148 , 7 + 149 , 7 @ @ public class UniquePropertiesCheck extends AbstractFileSetCheck { <nl> } <nl> <nl> public Multiset < String > getDuplicatedStrings ( ) { <nl> - return duplicatedStrings ; <nl> + return ImmutableMultiset . copyOf ( duplicatedStrings ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java <nl> index e05eeae . . eef176c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> <nl> + import java . util . Collections ; <nl> import java . util . List ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> @ @ - 50 , 7 + 51 , 7 @ @ public final class JavadocTags { <nl> * @ return validTags field <nl> * / <nl> public List < JavadocTag > getValidTags ( ) { <nl> - return validTags ; <nl> + return Collections . unmodifiableList ( validTags ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 58 , 6 + 59 , 6 @ @ public final class JavadocTags { <nl> * @ return invalidTags field <nl> * / <nl> public List < InvalidJavadocTag > getInvalidTags ( ) { <nl> - return invalidTags ; <nl> + return Collections . unmodifiableList ( invalidTags ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java <nl> index 84e74db . . c6c99df 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . filters ; <nl> <nl> + import java . util . Collections ; <nl> import java . util . Objects ; <nl> import java . util . Set ; <nl> import java . util . StringTokenizer ; <nl> @ @ - 78 , 7 + 79 , 7 @ @ class CSVFilter implements IntFilter { <nl> * @ return the IntFilters of the filter set . <nl> * / <nl> protected Set < IntFilter > getFilters ( ) { <nl> - return filters ; <nl> + return Collections . unmodifiableSet ( filters ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> index b027761 . . e983923 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import java . awt . event . KeyEvent ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> import java . util . List ; <nl> import java . util . TooManyListenersException ; <nl> <nl> @ @ - 213 , 7 + 214 , 7 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> <nl> public List < Integer > getLines2position ( ) { <nl> - return lines2position ; <nl> + return Collections . unmodifiableList ( lines2position ) ; <nl> } <nl> <nl> / * *

TEST DIFF:
diff - - git a / config / sevntu _ suppressions . xml b / config / sevntu _ suppressions . xml 
 index c1bac04 . . 8a6b5ba 100644 
 - - - a / config / sevntu _ suppressions . xml 
 + + + b / config / sevntu _ suppressions . xml 
 @ @ - 31 , 4 + 31 , 8 @ @ 
 and do not have coverage problems due to imports from java . util . stream . - - > 
 < suppress id = " ForbidInterfacesImportFromJavaUtilStream " 
 files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 + 
 + < ! - - Tone down the checking for test code - - > 
 + < suppress checks = " ForbidCertainImports " 
 + files = " DetailASTTest \ . java " / > 
 < / suppressions > 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 5dca0c7 . . cd4ebb1 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 32 , 7 + 32 , 7 @ @ 
 < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " MagicNumber " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " AvoidStaticImport " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 - < suppress checks = " ClassDataAbstractionCoupling " files = " [ \ \ / ] IndentationCheckTest . java $ | [ \ \ / ] SuppressWithNearbyCommentFilterTest . java $ | [ \ \ / ] SuppressionCommentFilterTest . java $ " / > 
 + < suppress checks = " ClassDataAbstractionCoupling " files = " [ \ \ / ] IndentationCheckTest . java $ | [ \ \ / ] SuppressWithNearbyCommentFilterTest . java $ | [ \ \ / ] SuppressionCommentFilterTest . java | [ \ \ / ] DetailASTTest . java $ " / > 
 < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > 
 < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ | [ \ \ / ] AbstractModuleTestSupport . java $ " / > 
 < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java 
 index 74f9e76 . . bd9ba2f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / DetailAST . java 
 @ @ - 199 , 13 + 199 , 17 @ @ public final class DetailAST extends CommonASTWithHiddenTokens { 
 * @ param parent the parent token 
 * / 
 private void setParent ( DetailAST parent ) { 
 - clearBranchTokenTypes ( ) ; 
 - this . parent = parent ; 
 - final DetailAST nextSibling = getNextSibling ( ) ; 
 - if ( nextSibling ! = null ) { 
 - nextSibling . setParent ( parent ) ; 
 - nextSibling . previousSibling = this ; 
 - } 
 + DetailAST instance = this ; 
 + do { 
 + instance . clearBranchTokenTypes ( ) ; 
 + instance . parent = parent ; 
 + final DetailAST nextSibling = instance . getNextSibling ( ) ; 
 + if ( nextSibling ! = null ) { 
 + nextSibling . previousSibling = instance ; 
 + } 
 + 
 + instance = nextSibling ; 
 + } while ( instance ! = null ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 index eae69ec . . 78f630e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 @ @ - 23 , 8 + 23 , 12 @ @ import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertNotSame ; 
 import static org . junit . Assert . assertNull ; 
 
 + import java . io . BufferedWriter ; 
 import java . io . File ; 
 + import java . io . FileOutputStream ; 
 + import java . io . OutputStreamWriter ; 
 import java . lang . reflect . Method ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . text . MessageFormat ; 
 import java . util . Arrays ; 
 import java . util . BitSet ; 
 @ @ - 32 , 16 + 36 , 30 @ @ import java . util . List ; 
 import java . util . Locale ; 
 import java . util . function . Consumer ; 
 
 + import org . junit . Rule ; 
 import org . junit . Test ; 
 + import org . junit . rules . TemporaryFolder ; 
 import org . powermock . reflect . Whitebox ; 
 
 + import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; 
 + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 import com . puppycrawl . tools . checkstyle . TreeWalker ; 
 + import com . puppycrawl . tools . checkstyle . checks . TodoCommentCheck ; 
 + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 / * * 
 * TestCase to check DetailAST . 
 * @ author Oliver Burn 
 * / 
 - public class DetailASTTest { 
 + public class DetailASTTest extends AbstractModuleTestSupport { 
 + @ Rule 
 + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 + 
 + @ Override 
 + protected String getPackageLocation ( ) { 
 + return " com / puppycrawl / tools / checkstyle / api " ; 
 + } 
 + 
 private static Method getSetParentMethod ( ) throws Exception { 
 final Class < DetailAST > detailAstClass = DetailAST . class ; 
 final Method setParentMethod = 
 @ @ - 199 , 6 + 217 , 25 @ @ public class DetailASTTest { 
 assertEquals ( " Invalid child " , newSibling , child . getNextSibling ( ) ) ; 
 } 
 
 + @ Test 
 + public void testManyComments ( ) throws Exception { 
 + final File file = temporaryFolder . newFile ( " InputDetailASTManyComments . java " ) ; 
 + 
 + try ( BufferedWriter bw = new BufferedWriter ( new OutputStreamWriter ( 
 + new FileOutputStream ( file ) , StandardCharsets . UTF _ 8 ) ) ) { 
 + bw . write ( " class C { \ n " ) ; 
 + for ( int i = 0 ; i < = 30000 ; i + + ) { 
 + bw . write ( " / / " + i + " \ n " ) ; 
 + } 
 + bw . write ( " } \ n " ) ; 
 + } 
 + 
 + final DefaultConfiguration checkConfig = createModuleConfig ( TodoCommentCheck . class ) ; 
 + 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , file . getAbsolutePath ( ) , expected ) ; 
 + } 
 + 
 / * * 
 * There are asserts in checkNode , but idea does not see them 
 * @ noinspection JUnitTestMethodWithNoAssertions

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java 
 index f12c401 . . 6a98cc4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / Check . java 
 @ @ - 103 , 7 + 103 , 7 @ @ public abstract class Check extends AbstractViolationReporter { 
 * @ return the set of token names 
 * / 
 public final Set < String > getTokenNames ( ) { 
 - return tokens ; 
 + return Collections . unmodifiableSet ( tokens ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 index 812f1de . . 5ea239a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 @ @ - 230 , 7 + 230 , 7 @ @ public final class FileContents implements CommentListener { 
 * @ return an object containing the full text of the file 
 * / 
 public FileText getText ( ) { 
 - return text ; 
 + return new FileText ( text ) ; 
 } 
 
 / * * @ return the lines in the file * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java 
 index 16a39b9 . . 682073d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FilterSet . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 + import java . util . Collections ; 
 import java . util . Objects ; 
 import java . util . Set ; 
 
 @ @ - 56 , 7 + 57 , 7 @ @ public class FilterSet 
 * @ return the Filters of the filter set . 
 * / 
 public Set < Filter > getFilters ( ) { 
 - return filters ; 
 + return Collections . unmodifiableSet ( filters ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java 
 index e5d6eb8 . . 5cbab3f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheck . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 
 import com . google . common . collect . HashMultiset ; 
 + import com . google . common . collect . ImmutableMultiset ; 
 import com . google . common . collect . Multiset ; 
 import com . google . common . collect . Multiset . Entry ; 
 import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; 
 @ @ - 148 , 7 + 149 , 7 @ @ public class UniquePropertiesCheck extends AbstractFileSetCheck { 
 } 
 
 public Multiset < String > getDuplicatedStrings ( ) { 
 - return duplicatedStrings ; 
 + return ImmutableMultiset . copyOf ( duplicatedStrings ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java 
 index e05eeae . . eef176c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTags . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 
 + import java . util . Collections ; 
 import java . util . List ; 
 
 import com . google . common . collect . ImmutableList ; 
 @ @ - 50 , 7 + 51 , 7 @ @ public final class JavadocTags { 
 * @ return validTags field 
 * / 
 public List < JavadocTag > getValidTags ( ) { 
 - return validTags ; 
 + return Collections . unmodifiableList ( validTags ) ; 
 } 
 
 / * * 
 @ @ - 58 , 6 + 59 , 6 @ @ public final class JavadocTags { 
 * @ return invalidTags field 
 * / 
 public List < InvalidJavadocTag > getInvalidTags ( ) { 
 - return invalidTags ; 
 + return Collections . unmodifiableList ( invalidTags ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java 
 index 84e74db . . c6c99df 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / CSVFilter . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . filters ; 
 
 + import java . util . Collections ; 
 import java . util . Objects ; 
 import java . util . Set ; 
 import java . util . StringTokenizer ; 
 @ @ - 78 , 7 + 79 , 7 @ @ class CSVFilter implements IntFilter { 
 * @ return the IntFilters of the filter set . 
 * / 
 protected Set < IntFilter > getFilters ( ) { 
 - return filters ; 
 + return Collections . unmodifiableSet ( filters ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 index b027761 . . e983923 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import java . awt . event . KeyEvent ; 
 import java . io . File ; 
 import java . io . IOException ; 
 import java . util . ArrayList ; 
 + import java . util . Collections ; 
 import java . util . List ; 
 import java . util . TooManyListenersException ; 
 
 @ @ - 213 , 7 + 214 , 7 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 
 public List < Integer > getLines2position ( ) { 
 - return lines2position ; 
 + return Collections . unmodifiableList ( lines2position ) ; 
 } 
 
 / * *
