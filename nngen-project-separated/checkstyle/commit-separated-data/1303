BLEU SCORE: 0.041961149062965476

TEST MSG: Issue # 2889 : Adds skipNoJavadoc option to MissingDeprecated check
GENERATED MSG: extention for SingleJavadocLine , # 1063

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> index 76dfc47 . . 0701a37 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> @ @ - 70 , 6 + 70 , 30 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * & lt ; module name = " JavadocDeprecated " / & gt ; <nl> * < / pre > <nl> * <nl> + * < p > <nl> + * In addition you can configure this check with skipNoJavadoc <nl> + * option to allow it to ignore cases when JavaDoc is missing , <nl> + * but still warns when JavaDoc is present but either <nl> + * { @ link Deprecated Deprecated } is missing from JavaDoc or <nl> + * { @ link Deprecated Deprecated } is missing from the element . <nl> + * To configure this check to allow it use : <nl> + * < / p > <nl> + * <nl> + * < pre > & lt ; property name = " skipNoJavadoc " value = " true " / & gt ; < / pre > <nl> + * <nl> + * < p > Examples of validating source code with skipNoJavadoc : < / p > <nl> + * <nl> + * < pre > <nl> + * < code > <nl> + * { @ literal @ } deprecated <nl> + * public static final int MY _ CONST = 123456 ; / / no violation <nl> + * <nl> + * & # 47 ; * * This javadoc is missing deprecated tag . * & # 47 ; <nl> + * { @ literal @ } deprecated <nl> + * public static final int COUNTER = 10 ; / / violation as javadoc exists <nl> + * < / code > <nl> + * < / pre > <nl> + * <nl> * @ author Travis Schneeberger <nl> * / <nl> public final class MissingDeprecatedCheck extends AbstractCheck { <nl> @ @ - 116 , 6 + 140 , 17 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { <nl> / * * Multiline finished at next Javadoc . * / <nl> private static final String NEXT _ TAG = " @ " ; <nl> <nl> + / * * Is deprecated element valid without javadoc . * / <nl> + private boolean skipNoJavadoc ; <nl> + <nl> + / * * <nl> + * Set skipJavadoc value . <nl> + * @ param skipNoJavadoc user ' s value of skipJavadoc <nl> + * / <nl> + public void setSkipNoJavadoc ( boolean skipNoJavadoc ) { <nl> + this . skipNoJavadoc = skipNoJavadoc ; <nl> + } <nl> + <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> return getAcceptableTokens ( ) ; <nl> @ @ - 152 , 7 + 187 , 7 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { <nl> <nl> final boolean containsJavadocTag = containsJavadocTag ( javadoc ) ; <nl> <nl> - if ( containsAnnotation ^ containsJavadocTag ) { <nl> + if ( containsAnnotation ^ containsJavadocTag & & ! ( skipNoJavadoc & & javadoc = = null ) ) { <nl> log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ MISSING _ DEPRECATED ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java <nl> index fda0cde . . 956b17e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java <nl> @ @ - 169 , 4 + 169 , 17 @ @ public class MissingDeprecatedCheckTest extends BaseCheckTestSupport { <nl> <nl> verify ( checkConfig , getPath ( " InputMissingDeprecated2 . java " ) , expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testSkipNoJavadocOption ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( MissingDeprecatedCheck . class ) ; <nl> + checkConfig . addAttribute ( " skipNoJavadoc " , " true " ) ; <nl> + <nl> + final String [ ] expected = { <nl> + " 10 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ MISSING _ DEPRECATED ) , <nl> + " 26 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ MISSING _ DEPRECATED ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputMissingDeprecatedSkipNoJavadoc . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputMissingDeprecatedSkipNoJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputMissingDeprecatedSkipNoJavadoc . java <nl> new file mode 100644 <nl> index 0000000 . . 971576a <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputMissingDeprecatedSkipNoJavadoc . java <nl> @ @ - 0 , 0 + 1 , 27 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + <nl> + public class InputMissingDeprecatedSkipNoJavadoc { <nl> + @ Deprecated <nl> + public static final int MY _ CONST = 123456 ; <nl> + <nl> + / * * <nl> + * Useless comment . <nl> + * / <nl> + @ Deprecated <nl> + public static final int MY _ CONST2 = 234567 ; <nl> + <nl> + / * * <nl> + * Useless comment . <nl> + * <nl> + * @ deprecated Not for public use . <nl> + * / <nl> + @ Deprecated <nl> + public static final int MY _ CONST3 = 345678 ; <nl> + <nl> + / * * <nl> + * Useless comment . <nl> + * <nl> + * @ deprecated Not for public use . <nl> + * / <nl> + public static final int MY _ CONST4 = 345678 ; <nl> + } <nl> diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml <nl> index e97e405 . . 0176a31 100644 <nl> - - - a / src / xdocs / config _ annotation . xml <nl> + + + b / src / xdocs / config _ annotation . xml <nl> @ @ - 313 , 9 + 313 , 45 @ @ public String getNameIfPresent ( ) { . . . } <nl> present and the @ deprecated Javadoc tag is present when <nl> either is present . < / p > <nl> < / subsection > <nl> + < subsection name = " Properties " > <nl> + < table > <nl> + < tr > <nl> + < th > name < / th > <nl> + < th > description < / th > <nl> + < th > type < / th > <nl> + < th > default value < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > skipNoJavadoc < / td > <nl> + < td > When this property is set to true check ignore cases <nl> + when JavaDoc is missing , but still warns when JavaDoc is <nl> + present but either @ deprecated is missing from JavaDoc or <nl> + @ deprecated is missing from the element . <nl> + < / td > <nl> + < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > <nl> + < td > false < / td > <nl> + < / tr > <nl> + < / table > <nl> + < / subsection > <nl> < subsection name = " Examples " > <nl> < p > To configure the check : < / p > <nl> - < source > & lt ; module name = & quot ; MissingDeprecated & quot ; / & gt ; <nl> + < source > <nl> + & lt ; module name = & quot ; MissingDeprecated & quot ; / & gt ; <nl> + < / source > <nl> + < p > In addition you can configure this check with skipNoJavadoc option : < / p > <nl> + < source > <nl> + & lt ; module name = & quot ; MissingDeprecated & quot ; & gt ; <nl> + & lt ; property name = " skipNoJavadoc " value = " true " / & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> + < p > Examples of validating source code with skipNoJavadoc : < / p > <nl> + < source > <nl> + @ deprecated <nl> + public static final int MY _ CONST = 123456 ; / / no violation <nl> + <nl> + / * * This javadoc is missing deprecated tag . * / <nl> + @ deprecated <nl> + public static final int COUNTER = 10 ; / / violation as javadoc exists <nl> < / source > <nl> < / subsection > <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 449e1e4 . . 96432ce 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 232 , 7 + 232 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * / <nl> public void setAllowedAnnotations ( String userAnnotations ) { <nl> final List < String > annotations = new ArrayList < > ( ) ; <nl> - Collections . addAll ( annotations , userAnnotations . split ( " , " ) ) ; <nl> + final String [ ] sAnnotations = userAnnotations . split ( " , " ) ; <nl> + for ( int i = 0 ; i < sAnnotations . length ; i + + ) { <nl> + sAnnotations [ i ] = sAnnotations [ i ] . trim ( ) ; <nl> + } <nl> + <nl> + Collections . addAll ( annotations , sAnnotations ) ; <nl> allowedAnnotations = annotations ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> index dab1b35 . . c1ecfc4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> @ @ - 68 , 6 + 68 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void allowedAnnotationsTest ( ) throws Exception { <nl> + <nl> + DefaultConfiguration config = createCheckConfig ( JavadocMethodCheck . class ) ; <nl> + config . addAttribute ( " allowedAnnotations " , " Override , ThisIsOk , \ t \ n \ t ThisIsOkToo " ) ; <nl> + final String [ ] expected = { } ; <nl> + verify ( config , getPath ( " javadoc / AllowedAnnotations . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testTags ( ) throws Exception { <nl> final String [ ] expected = { <nl> " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java <nl> new file mode 100644 <nl> index 0000000 . . aace735 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java <nl> @ @ - 0 , 0 + 1 , 39 @ @ <nl> + package com . puppycrawl . tools . checkstyle . javadoc ; <nl> + <nl> + / * * <nl> + * Some javadoc . <nl> + * / <nl> + public class AllowedAnnotations implements SomeInterface { <nl> + <nl> + @ ThisIsOk <nl> + public void allowed1 ( ) { } <nl> + <nl> + @ ThisIsOkToo <nl> + public void allowed2 ( ) { } <nl> + <nl> + @ com . puppycrawl . tools . checkstyle . javadoc . ThisIsOk <nl> + public void allowed3 ( ) { } <nl> + <nl> + @ Override <nl> + public void method ( ) { } <nl> + } <nl> + <nl> + / * * <nl> + * Documented . <nl> + * / <nl> + interface SomeInterface { <nl> + / * * <nl> + * Documented . <nl> + * / <nl> + void method ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Some javadoc . <nl> + * / <nl> + @ interface ThisIsOk { } <nl> + <nl> + / * * <nl> + * Some javadoc . <nl> + * / <nl> + @ interface ThisIsOkToo { }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 index 76dfc47 . . 0701a37 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 @ @ - 70 , 6 + 70 , 30 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * & lt ; module name = " JavadocDeprecated " / & gt ; 
 * < / pre > 
 * 
 + * < p > 
 + * In addition you can configure this check with skipNoJavadoc 
 + * option to allow it to ignore cases when JavaDoc is missing , 
 + * but still warns when JavaDoc is present but either 
 + * { @ link Deprecated Deprecated } is missing from JavaDoc or 
 + * { @ link Deprecated Deprecated } is missing from the element . 
 + * To configure this check to allow it use : 
 + * < / p > 
 + * 
 + * < pre > & lt ; property name = " skipNoJavadoc " value = " true " / & gt ; < / pre > 
 + * 
 + * < p > Examples of validating source code with skipNoJavadoc : < / p > 
 + * 
 + * < pre > 
 + * < code > 
 + * { @ literal @ } deprecated 
 + * public static final int MY _ CONST = 123456 ; / / no violation 
 + * 
 + * & # 47 ; * * This javadoc is missing deprecated tag . * & # 47 ; 
 + * { @ literal @ } deprecated 
 + * public static final int COUNTER = 10 ; / / violation as javadoc exists 
 + * < / code > 
 + * < / pre > 
 + * 
 * @ author Travis Schneeberger 
 * / 
 public final class MissingDeprecatedCheck extends AbstractCheck { 
 @ @ - 116 , 6 + 140 , 17 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { 
 / * * Multiline finished at next Javadoc . * / 
 private static final String NEXT _ TAG = " @ " ; 
 
 + / * * Is deprecated element valid without javadoc . * / 
 + private boolean skipNoJavadoc ; 
 + 
 + / * * 
 + * Set skipJavadoc value . 
 + * @ param skipNoJavadoc user ' s value of skipJavadoc 
 + * / 
 + public void setSkipNoJavadoc ( boolean skipNoJavadoc ) { 
 + this . skipNoJavadoc = skipNoJavadoc ; 
 + } 
 + 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 return getAcceptableTokens ( ) ; 
 @ @ - 152 , 7 + 187 , 7 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { 
 
 final boolean containsJavadocTag = containsJavadocTag ( javadoc ) ; 
 
 - if ( containsAnnotation ^ containsJavadocTag ) { 
 + if ( containsAnnotation ^ containsJavadocTag & & ! ( skipNoJavadoc & & javadoc = = null ) ) { 
 log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ MISSING _ DEPRECATED ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java 
 index fda0cde . . 956b17e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java 
 @ @ - 169 , 4 + 169 , 17 @ @ public class MissingDeprecatedCheckTest extends BaseCheckTestSupport { 
 
 verify ( checkConfig , getPath ( " InputMissingDeprecated2 . java " ) , expected ) ; 
 } 
 + 
 + @ Test 
 + public void testSkipNoJavadocOption ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( MissingDeprecatedCheck . class ) ; 
 + checkConfig . addAttribute ( " skipNoJavadoc " , " true " ) ; 
 + 
 + final String [ ] expected = { 
 + " 10 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ MISSING _ DEPRECATED ) , 
 + " 26 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ MISSING _ DEPRECATED ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputMissingDeprecatedSkipNoJavadoc . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputMissingDeprecatedSkipNoJavadoc . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputMissingDeprecatedSkipNoJavadoc . java 
 new file mode 100644 
 index 0000000 . . 971576a 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputMissingDeprecatedSkipNoJavadoc . java 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + 
 + public class InputMissingDeprecatedSkipNoJavadoc { 
 + @ Deprecated 
 + public static final int MY _ CONST = 123456 ; 
 + 
 + / * * 
 + * Useless comment . 
 + * / 
 + @ Deprecated 
 + public static final int MY _ CONST2 = 234567 ; 
 + 
 + / * * 
 + * Useless comment . 
 + * 
 + * @ deprecated Not for public use . 
 + * / 
 + @ Deprecated 
 + public static final int MY _ CONST3 = 345678 ; 
 + 
 + / * * 
 + * Useless comment . 
 + * 
 + * @ deprecated Not for public use . 
 + * / 
 + public static final int MY _ CONST4 = 345678 ; 
 + } 
 diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml 
 index e97e405 . . 0176a31 100644 
 - - - a / src / xdocs / config _ annotation . xml 
 + + + b / src / xdocs / config _ annotation . xml 
 @ @ - 313 , 9 + 313 , 45 @ @ public String getNameIfPresent ( ) { . . . } 
 present and the @ deprecated Javadoc tag is present when 
 either is present . < / p > 
 < / subsection > 
 + < subsection name = " Properties " > 
 + < table > 
 + < tr > 
 + < th > name < / th > 
 + < th > description < / th > 
 + < th > type < / th > 
 + < th > default value < / th > 
 + < / tr > 
 + < tr > 
 + < td > skipNoJavadoc < / td > 
 + < td > When this property is set to true check ignore cases 
 + when JavaDoc is missing , but still warns when JavaDoc is 
 + present but either @ deprecated is missing from JavaDoc or 
 + @ deprecated is missing from the element . 
 + < / td > 
 + < td > < a href = " property _ types . html # boolean " > boolean < / a > < / td > 
 + < td > false < / td > 
 + < / tr > 
 + < / table > 
 + < / subsection > 
 < subsection name = " Examples " > 
 < p > To configure the check : < / p > 
 - < source > & lt ; module name = & quot ; MissingDeprecated & quot ; / & gt ; 
 + < source > 
 + & lt ; module name = & quot ; MissingDeprecated & quot ; / & gt ; 
 + < / source > 
 + < p > In addition you can configure this check with skipNoJavadoc option : < / p > 
 + < source > 
 + & lt ; module name = & quot ; MissingDeprecated & quot ; & gt ; 
 + & lt ; property name = " skipNoJavadoc " value = " true " / & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 + < p > Examples of validating source code with skipNoJavadoc : < / p > 
 + < source > 
 + @ deprecated 
 + public static final int MY _ CONST = 123456 ; / / no violation 
 + 
 + / * * This javadoc is missing deprecated tag . * / 
 + @ deprecated 
 + public static final int COUNTER = 10 ; / / violation as javadoc exists 
 < / source > 
 < / subsection > 


NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 449e1e4 . . 96432ce 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 232 , 7 + 232 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * / 
 public void setAllowedAnnotations ( String userAnnotations ) { 
 final List < String > annotations = new ArrayList < > ( ) ; 
 - Collections . addAll ( annotations , userAnnotations . split ( " , " ) ) ; 
 + final String [ ] sAnnotations = userAnnotations . split ( " , " ) ; 
 + for ( int i = 0 ; i < sAnnotations . length ; i + + ) { 
 + sAnnotations [ i ] = sAnnotations [ i ] . trim ( ) ; 
 + } 
 + 
 + Collections . addAll ( annotations , sAnnotations ) ; 
 allowedAnnotations = annotations ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 index dab1b35 . . c1ecfc4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 @ @ - 68 , 6 + 68 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void allowedAnnotationsTest ( ) throws Exception { 
 + 
 + DefaultConfiguration config = createCheckConfig ( JavadocMethodCheck . class ) ; 
 + config . addAttribute ( " allowedAnnotations " , " Override , ThisIsOk , \ t \ n \ t ThisIsOkToo " ) ; 
 + final String [ ] expected = { } ; 
 + verify ( config , getPath ( " javadoc / AllowedAnnotations . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testTags ( ) throws Exception { 
 final String [ ] expected = { 
 " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java 
 new file mode 100644 
 index 0000000 . . aace735 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java 
 @ @ - 0 , 0 + 1 , 39 @ @ 
 + package com . puppycrawl . tools . checkstyle . javadoc ; 
 + 
 + / * * 
 + * Some javadoc . 
 + * / 
 + public class AllowedAnnotations implements SomeInterface { 
 + 
 + @ ThisIsOk 
 + public void allowed1 ( ) { } 
 + 
 + @ ThisIsOkToo 
 + public void allowed2 ( ) { } 
 + 
 + @ com . puppycrawl . tools . checkstyle . javadoc . ThisIsOk 
 + public void allowed3 ( ) { } 
 + 
 + @ Override 
 + public void method ( ) { } 
 + } 
 + 
 + / * * 
 + * Documented . 
 + * / 
 + interface SomeInterface { 
 + / * * 
 + * Documented . 
 + * / 
 + void method ( ) ; 
 + } 
 + 
 + / * * 
 + * Some javadoc . 
 + * / 
 + @ interface ThisIsOk { } 
 + 
 + / * * 
 + * Some javadoc . 
 + * / 
 + @ interface ThisIsOkToo { }
