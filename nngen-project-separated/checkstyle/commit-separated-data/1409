BLEU SCORE: 0.024455939372403628

TEST MSG: Issue # 2080 : resolving ' TestNG fail ( ) without message ' TCBuild = 436
GENERATED MSG: Use multi - catch in test code . # 1555

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java <nl> index b87d296 . . 36c7bb8 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java <nl> @ @ - 94 , 7 + 94 , 7 @ @ public class TokenUtilsTest { <nl> } <nl> <nl> TokenUtils . getTokenName ( id ) ; <nl> - fail ( ) ; <nl> + fail ( " IllegalArgumentException is expected " ) ; <nl> } <nl> catch ( IllegalArgumentException expected ) { <nl> / / restoring original value , to let other tests pass
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> index ad79b54 . . 551a253 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> @ @ - 36 , 6 + 36 , 7 @ @ import java . util . Properties ; <nl> <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> + import org . mockito . Mockito ; <nl> import org . powermock . core . classloader . annotations . PrepareForTest ; <nl> import org . powermock . modules . junit4 . PowerMockRunner ; <nl> import org . xml . sax . Attributes ; <nl> @ @ - 452 , 16 + 453 , 12 @ @ public class ConfigurationLoaderTest { <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> public void testLoadConfiguration _ URISyntaxException ( ) throws CheckstyleException { <nl> - mockStatic ( ConfigurationLoader . class ) ; <nl> + mockStatic ( ConfigurationLoader . class , Mockito . CALLS _ REAL _ METHODS ) ; <nl> <nl> PropertiesExpander expander = new PropertiesExpander ( new Properties ( ) ) ; <nl> <nl> when ( ConfigurationLoader . class . getResource ( " config _ with _ ignore . xml " ) ) <nl> . thenThrow ( URISyntaxException . class ) ; <nl> - when ( ConfigurationLoader . loadConfiguration ( " config _ with _ ignore . xml " , <nl> - expander , <nl> - true ) ) <nl> - . thenCallRealMethod ( ) ; <nl> <nl> try { <nl> ConfigurationLoader . loadConfiguration ( <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoaderTest . java <nl> index 8ffc002 . . 72594dd 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoaderTest . java <nl> @ @ - 26 , 31 + 26 , 39 @ @ import static org . powermock . api . mockito . PowerMockito . mock ; <nl> import static org . powermock . api . mockito . PowerMockito . mockStatic ; <nl> import static org . powermock . api . mockito . PowerMockito . when ; <nl> <nl> - import java . io . FileNotFoundException ; <nl> import java . io . IOException ; <nl> + import java . lang . reflect . Method ; <nl> import java . net . HttpURLConnection ; <nl> import java . net . URISyntaxException ; <nl> import java . net . URL ; <nl> import java . util . regex . PatternSyntaxException ; <nl> <nl> import org . junit . Assume ; <nl> + import org . junit . Rule ; <nl> import org . junit . Test ; <nl> + import org . junit . rules . ExpectedException ; <nl> import org . junit . runner . RunWith ; <nl> + import org . mockito . Mockito ; <nl> import org . powermock . core . classloader . annotations . PrepareForTest ; <nl> import org . powermock . modules . junit4 . PowerMockRunner ; <nl> - import org . powermock . reflect . Whitebox ; <nl> import org . xml . sax . InputSource ; <nl> <nl> + import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . FilterSet ; <nl> <nl> / * * <nl> * Tests SuppressionsLoader . <nl> * @ author Rick Giles <nl> + * @ author < a href = " mailto : andreyselkin @ gmail . com " > Andrei Selkin < / a > <nl> * / <nl> @ RunWith ( PowerMockRunner . class ) <nl> @ PrepareForTest ( { SuppressionsLoader . class , SuppressionsLoaderTest . class } ) <nl> - public class SuppressionsLoaderTest { <nl> + public class SuppressionsLoaderTest extends BaseCheckTestSupport { <nl> + <nl> + @ Rule <nl> + public ExpectedException thrown = ExpectedException . none ( ) ; <nl> + <nl> @ Test <nl> public void testNoSuppressions ( ) <nl> throws CheckstyleException { <nl> @ @ - 189 , 43 + 197 , 35 @ @ public class SuppressionsLoaderTest { <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> public void testUnableToFindSuppressions ( ) throws Exception { <nl> - mockStatic ( SuppressionsLoader . class ) ; <nl> + Class < SuppressionsLoader > loaderClass = SuppressionsLoader . class ; <nl> + Method loadSuppressions = <nl> + loaderClass . getDeclaredMethod ( " loadSuppressions " , InputSource . class , String . class ) ; <nl> + loadSuppressions . setAccessible ( true ) ; <nl> <nl> - String fileName = " suppressions _ none . xml " ; <nl> - InputSource source = mock ( InputSource . class ) ; <nl> + String sourceName = " suppressions _ none . xml " ; <nl> + InputSource inputSource = new InputSource ( sourceName ) ; <nl> <nl> - when ( source . getByteStream ( ) ) . thenThrow ( FileNotFoundException . class ) ; <nl> - when ( SuppressionsLoader . class , " loadSuppressions " , source , fileName ) . thenCallRealMethod ( ) ; <nl> + thrown . expect ( CheckstyleException . class ) ; <nl> + thrown . expectMessage ( " unable to find " + sourceName ) ; <nl> <nl> - try { <nl> - Whitebox . invokeMethod ( SuppressionsLoader . class , " loadSuppressions " , source , fileName ) ; <nl> - fail ( " Exception is expected " ) ; <nl> - } <nl> - catch ( CheckstyleException ex ) { <nl> - assertTrue ( ex . getCause ( ) instanceof FileNotFoundException ) ; <nl> - assertEquals ( " unable to find " + fileName , ex . getMessage ( ) ) ; <nl> - } <nl> + loadSuppressions . invoke ( loaderClass , inputSource , sourceName ) ; <nl> } <nl> <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> public void testUnableToReadSuppressions ( ) throws Exception { <nl> - mockStatic ( SuppressionsLoader . class ) ; <nl> + Class < SuppressionsLoader > loaderClass = SuppressionsLoader . class ; <nl> + Method loadSuppressions = <nl> + loaderClass . getDeclaredMethod ( " loadSuppressions " , InputSource . class , String . class ) ; <nl> + loadSuppressions . setAccessible ( true ) ; <nl> <nl> - String fileName = " suppressions _ none . xml " ; <nl> - InputSource source = mock ( InputSource . class ) ; <nl> + String sourceName = " suppressions _ none . xml " ; <nl> + InputSource inputSource = new InputSource ( ) ; <nl> <nl> - when ( source . getByteStream ( ) ) . thenThrow ( IOException . class ) ; <nl> - when ( SuppressionsLoader . class , " loadSuppressions " , source , fileName ) . thenCallRealMethod ( ) ; <nl> + thrown . expect ( CheckstyleException . class ) ; <nl> + thrown . expectMessage ( " unable to read " + sourceName ) ; <nl> <nl> - try { <nl> - Whitebox . invokeMethod ( SuppressionsLoader . class , " loadSuppressions " , source , fileName ) ; <nl> - fail ( " Exception is expected " ) ; <nl> - } <nl> - catch ( CheckstyleException ex ) { <nl> - assertTrue ( ex . getCause ( ) instanceof IOException ) ; <nl> - assertEquals ( " unable to read " + fileName , ex . getMessage ( ) ) ; <nl> - } <nl> + loadSuppressions . invoke ( loaderClass , inputSource , sourceName ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 273 , 15 + 273 , 12 @ @ public class SuppressionsLoaderTest { <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> public void testloadSuppressionsURISyntaxException ( ) throws Exception { <nl> - mockStatic ( SuppressionsLoader . class ) ; <nl> - <nl> URL configUrl = mock ( URL . class ) ; <nl> String fileName = " suppressions _ none . xml " ; <nl> <nl> - when ( SuppressionsLoader . class . getResource ( fileName ) ) . thenReturn ( configUrl ) ; <nl> when ( configUrl . toURI ( ) ) . thenThrow ( URISyntaxException . class ) ; <nl> - when ( SuppressionsLoader . loadSuppressions ( fileName ) ) <nl> - . thenCallRealMethod ( ) ; <nl> + mockStatic ( SuppressionsLoader . class , Mockito . CALLS _ REAL _ METHODS ) ; <nl> + when ( SuppressionsLoader . class . getResource ( fileName ) ) . thenReturn ( configUrl ) ; <nl> <nl> try { <nl> SuppressionsLoader . loadSuppressions ( fileName ) ;

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java 
 index b87d296 . . 36c7bb8 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java 
 @ @ - 94 , 7 + 94 , 7 @ @ public class TokenUtilsTest { 
 } 
 
 TokenUtils . getTokenName ( id ) ; 
 - fail ( ) ; 
 + fail ( " IllegalArgumentException is expected " ) ; 
 } 
 catch ( IllegalArgumentException expected ) { 
 / / restoring original value , to let other tests pass

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 index ad79b54 . . 551a253 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 @ @ - 36 , 6 + 36 , 7 @ @ import java . util . Properties ; 
 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 + import org . mockito . Mockito ; 
 import org . powermock . core . classloader . annotations . PrepareForTest ; 
 import org . powermock . modules . junit4 . PowerMockRunner ; 
 import org . xml . sax . Attributes ; 
 @ @ - 452 , 16 + 453 , 12 @ @ public class ConfigurationLoaderTest { 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 public void testLoadConfiguration _ URISyntaxException ( ) throws CheckstyleException { 
 - mockStatic ( ConfigurationLoader . class ) ; 
 + mockStatic ( ConfigurationLoader . class , Mockito . CALLS _ REAL _ METHODS ) ; 
 
 PropertiesExpander expander = new PropertiesExpander ( new Properties ( ) ) ; 
 
 when ( ConfigurationLoader . class . getResource ( " config _ with _ ignore . xml " ) ) 
 . thenThrow ( URISyntaxException . class ) ; 
 - when ( ConfigurationLoader . loadConfiguration ( " config _ with _ ignore . xml " , 
 - expander , 
 - true ) ) 
 - . thenCallRealMethod ( ) ; 
 
 try { 
 ConfigurationLoader . loadConfiguration ( 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoaderTest . java 
 index 8ffc002 . . 72594dd 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressionsLoaderTest . java 
 @ @ - 26 , 31 + 26 , 39 @ @ import static org . powermock . api . mockito . PowerMockito . mock ; 
 import static org . powermock . api . mockito . PowerMockito . mockStatic ; 
 import static org . powermock . api . mockito . PowerMockito . when ; 
 
 - import java . io . FileNotFoundException ; 
 import java . io . IOException ; 
 + import java . lang . reflect . Method ; 
 import java . net . HttpURLConnection ; 
 import java . net . URISyntaxException ; 
 import java . net . URL ; 
 import java . util . regex . PatternSyntaxException ; 
 
 import org . junit . Assume ; 
 + import org . junit . Rule ; 
 import org . junit . Test ; 
 + import org . junit . rules . ExpectedException ; 
 import org . junit . runner . RunWith ; 
 + import org . mockito . Mockito ; 
 import org . powermock . core . classloader . annotations . PrepareForTest ; 
 import org . powermock . modules . junit4 . PowerMockRunner ; 
 - import org . powermock . reflect . Whitebox ; 
 import org . xml . sax . InputSource ; 
 
 + import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . FilterSet ; 
 
 / * * 
 * Tests SuppressionsLoader . 
 * @ author Rick Giles 
 + * @ author < a href = " mailto : andreyselkin @ gmail . com " > Andrei Selkin < / a > 
 * / 
 @ RunWith ( PowerMockRunner . class ) 
 @ PrepareForTest ( { SuppressionsLoader . class , SuppressionsLoaderTest . class } ) 
 - public class SuppressionsLoaderTest { 
 + public class SuppressionsLoaderTest extends BaseCheckTestSupport { 
 + 
 + @ Rule 
 + public ExpectedException thrown = ExpectedException . none ( ) ; 
 + 
 @ Test 
 public void testNoSuppressions ( ) 
 throws CheckstyleException { 
 @ @ - 189 , 43 + 197 , 35 @ @ public class SuppressionsLoaderTest { 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 public void testUnableToFindSuppressions ( ) throws Exception { 
 - mockStatic ( SuppressionsLoader . class ) ; 
 + Class < SuppressionsLoader > loaderClass = SuppressionsLoader . class ; 
 + Method loadSuppressions = 
 + loaderClass . getDeclaredMethod ( " loadSuppressions " , InputSource . class , String . class ) ; 
 + loadSuppressions . setAccessible ( true ) ; 
 
 - String fileName = " suppressions _ none . xml " ; 
 - InputSource source = mock ( InputSource . class ) ; 
 + String sourceName = " suppressions _ none . xml " ; 
 + InputSource inputSource = new InputSource ( sourceName ) ; 
 
 - when ( source . getByteStream ( ) ) . thenThrow ( FileNotFoundException . class ) ; 
 - when ( SuppressionsLoader . class , " loadSuppressions " , source , fileName ) . thenCallRealMethod ( ) ; 
 + thrown . expect ( CheckstyleException . class ) ; 
 + thrown . expectMessage ( " unable to find " + sourceName ) ; 
 
 - try { 
 - Whitebox . invokeMethod ( SuppressionsLoader . class , " loadSuppressions " , source , fileName ) ; 
 - fail ( " Exception is expected " ) ; 
 - } 
 - catch ( CheckstyleException ex ) { 
 - assertTrue ( ex . getCause ( ) instanceof FileNotFoundException ) ; 
 - assertEquals ( " unable to find " + fileName , ex . getMessage ( ) ) ; 
 - } 
 + loadSuppressions . invoke ( loaderClass , inputSource , sourceName ) ; 
 } 
 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 public void testUnableToReadSuppressions ( ) throws Exception { 
 - mockStatic ( SuppressionsLoader . class ) ; 
 + Class < SuppressionsLoader > loaderClass = SuppressionsLoader . class ; 
 + Method loadSuppressions = 
 + loaderClass . getDeclaredMethod ( " loadSuppressions " , InputSource . class , String . class ) ; 
 + loadSuppressions . setAccessible ( true ) ; 
 
 - String fileName = " suppressions _ none . xml " ; 
 - InputSource source = mock ( InputSource . class ) ; 
 + String sourceName = " suppressions _ none . xml " ; 
 + InputSource inputSource = new InputSource ( ) ; 
 
 - when ( source . getByteStream ( ) ) . thenThrow ( IOException . class ) ; 
 - when ( SuppressionsLoader . class , " loadSuppressions " , source , fileName ) . thenCallRealMethod ( ) ; 
 + thrown . expect ( CheckstyleException . class ) ; 
 + thrown . expectMessage ( " unable to read " + sourceName ) ; 
 
 - try { 
 - Whitebox . invokeMethod ( SuppressionsLoader . class , " loadSuppressions " , source , fileName ) ; 
 - fail ( " Exception is expected " ) ; 
 - } 
 - catch ( CheckstyleException ex ) { 
 - assertTrue ( ex . getCause ( ) instanceof IOException ) ; 
 - assertEquals ( " unable to read " + fileName , ex . getMessage ( ) ) ; 
 - } 
 + loadSuppressions . invoke ( loaderClass , inputSource , sourceName ) ; 
 } 
 
 @ Test 
 @ @ - 273 , 15 + 273 , 12 @ @ public class SuppressionsLoaderTest { 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 public void testloadSuppressionsURISyntaxException ( ) throws Exception { 
 - mockStatic ( SuppressionsLoader . class ) ; 
 - 
 URL configUrl = mock ( URL . class ) ; 
 String fileName = " suppressions _ none . xml " ; 
 
 - when ( SuppressionsLoader . class . getResource ( fileName ) ) . thenReturn ( configUrl ) ; 
 when ( configUrl . toURI ( ) ) . thenThrow ( URISyntaxException . class ) ; 
 - when ( SuppressionsLoader . loadSuppressions ( fileName ) ) 
 - . thenCallRealMethod ( ) ; 
 + mockStatic ( SuppressionsLoader . class , Mockito . CALLS _ REAL _ METHODS ) ; 
 + when ( SuppressionsLoader . class . getResource ( fileName ) ) . thenReturn ( configUrl ) ; 
 
 try { 
 SuppressionsLoader . loadSuppressions ( fileName ) ;
