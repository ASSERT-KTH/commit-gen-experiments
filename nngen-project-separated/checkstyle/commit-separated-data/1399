BLEU SCORE: 0.7825422900366437

TEST MSG: Issue # 2661 : Enforce TernaryPerExpressionCount of sevntu - checkstyle over Checkstyle source code
GENERATED MSG: Issue # 2661 : Enforce EmptyPublicCtorInClassCheck of sevntu - checkstyle over Checkstyle source code

TEST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index 9d93632 . . 2d2d6dd 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 12 , 5 + 12 , 6 @ @ <nl> < module name = " CauseParameterInException " / > <nl> < module name = " NameConventionForJunit4TestClassesCheck " / > <nl> < module name = " EmptyPublicCtorInClassCheck " / > <nl> + < module name = " TernaryPerExpressionCount " / > <nl> < / module > <nl> < / module >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> index f017a41 . . 1e5125e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java <nl> @ @ - 215 , 10 + 215 , 7 @ @ public class GenericWhitespaceCheck extends Check { <nl> log ( ast . getLineNo ( ) , after , WS _ FOLLOWED , CLOSE _ ANGLE _ BRACKET ) ; <nl> } <nl> } <nl> - else if ( ! Character . isWhitespace ( charAfter ) <nl> - & & charAfter ! = ' ( ' & & charAfter ! = ' ) ' <nl> - & & charAfter ! = ' , ' & & charAfter ! = ' [ ' <nl> - & & charAfter ! = ' . ' & & charAfter ! = ' : ' ) { <nl> + else if ( ! isCharacterValidAfterGenericEnd ( charAfter ) ) { <nl> log ( ast . getLineNo ( ) , after , WS _ ILLEGAL _ FOLLOW , CLOSE _ ANGLE _ BRACKET ) ; <nl> } <nl> } <nl> @ @ - 303 , 4 + 300 , 16 @ @ public class GenericWhitespaceCheck extends Check { <nl> } <nl> return true ; <nl> } <nl> + <nl> + / * * <nl> + * Checks whether given character is valid to be right after generic ends <nl> + * @ param charAfter character to check <nl> + * @ return checks if given character is valid <nl> + * / <nl> + private static boolean isCharacterValidAfterGenericEnd ( char charAfter ) { <nl> + return Character . isWhitespace ( charAfter ) <nl> + | | charAfter = = ' ( ' | | charAfter = = ' ) ' <nl> + | | charAfter = = ' , ' | | charAfter = = ' [ ' <nl> + | | charAfter = = ' . ' | | charAfter = = ' : ' ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index 9d93632 . . 2d2d6dd 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 12 , 5 + 12 , 6 @ @ 
 < module name = " CauseParameterInException " / > 
 < module name = " NameConventionForJunit4TestClassesCheck " / > 
 < module name = " EmptyPublicCtorInClassCheck " / > 
 + < module name = " TernaryPerExpressionCount " / > 
 < / module > 
 < / module >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 index f017a41 . . 1e5125e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / GenericWhitespaceCheck . java 
 @ @ - 215 , 10 + 215 , 7 @ @ public class GenericWhitespaceCheck extends Check { 
 log ( ast . getLineNo ( ) , after , WS _ FOLLOWED , CLOSE _ ANGLE _ BRACKET ) ; 
 } 
 } 
 - else if ( ! Character . isWhitespace ( charAfter ) 
 - & & charAfter ! = ' ( ' & & charAfter ! = ' ) ' 
 - & & charAfter ! = ' , ' & & charAfter ! = ' [ ' 
 - & & charAfter ! = ' . ' & & charAfter ! = ' : ' ) { 
 + else if ( ! isCharacterValidAfterGenericEnd ( charAfter ) ) { 
 log ( ast . getLineNo ( ) , after , WS _ ILLEGAL _ FOLLOW , CLOSE _ ANGLE _ BRACKET ) ; 
 } 
 } 
 @ @ - 303 , 4 + 300 , 16 @ @ public class GenericWhitespaceCheck extends Check { 
 } 
 return true ; 
 } 
 + 
 + / * * 
 + * Checks whether given character is valid to be right after generic ends 
 + * @ param charAfter character to check 
 + * @ return checks if given character is valid 
 + * / 
 + private static boolean isCharacterValidAfterGenericEnd ( char charAfter ) { 
 + return Character . isWhitespace ( charAfter ) 
 + | | charAfter = = ' ( ' | | charAfter = = ' ) ' 
 + | | charAfter = = ' , ' | | charAfter = = ' [ ' 
 + | | charAfter = = ' . ' | | charAfter = = ' : ' ; 
 + } 
 }
