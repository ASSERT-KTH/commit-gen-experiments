BLEU SCORE: 0.014199193612838947

TEST MSG: Issue # 957 : fix for InteliJ inspection violations , fix for declaration order
GENERATED MSG: Made Checker & Configuration public so they can be used outside the package .

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java <nl> index a763e50 . . 9a13818 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . AbstractViolationReporter ; <nl> * Options for a detector . <nl> * @ author Oliver Burn <nl> * / <nl> - final class DetectorOptions { <nl> + public final class DetectorOptions { <nl> / * * <nl> * Flags to compile a regular expression with . <nl> * See { @ link Pattern # flags ( ) } . <nl> @ @ - 58 , 6 + 58 , 15 @ @ final class DetectorOptions { <nl> private DetectorOptions ( ) { } <nl> <nl> / * * <nl> + * Returns new Builder object . <nl> + * @ return Builder object . <nl> + * @ noinspection ReturnOfInnerClass <nl> + * / <nl> + public static Builder newBuilder ( ) { <nl> + return new DetectorOptions ( ) . new Builder ( ) ; <nl> + } <nl> + <nl> + / * * <nl> * Format of the regular expression . <nl> * @ return format of the regular expression . <nl> * / <nl> @ @ - 122 , 14 + 131 , 6 @ @ final class DetectorOptions { <nl> return pattern ; <nl> } <nl> <nl> - / * * <nl> - * Returns new Builder object . <nl> - * @ return Builder object . <nl> - * / <nl> - static Builder newBuilder ( ) { <nl> - return new DetectorOptions ( ) . new Builder ( ) ; <nl> - } <nl> - <nl> / * * Class which implements Builder pattern to build DetectorOptions instance . * / <nl> public final class Builder { <nl> <nl> @ @ - 137 , 8 + 138 , 9 @ @ final class DetectorOptions { <nl> * Specifies the violation reporter and returns Builder object . <nl> * @ param val for reporting violations . <nl> * @ return Builder object . <nl> + * @ noinspection ReturnOfInnerClass <nl> * / <nl> - Builder reporter ( AbstractViolationReporter val ) { <nl> + public Builder reporter ( AbstractViolationReporter val ) { <nl> reporter = val ; <nl> return this ; <nl> } <nl> @ @ - 148 , 8 + 150 , 9 @ @ final class DetectorOptions { <nl> * and returns Builder object . <nl> * @ param val the format to use when matching lines . <nl> * @ return Builder object . <nl> + * @ noinspection ReturnOfInnerClass <nl> * / <nl> - Builder compileFlags ( int val ) { <nl> + public Builder compileFlags ( int val ) { <nl> compileFlags = val ; <nl> return this ; <nl> } <nl> @ @ - 158 , 8 + 161 , 9 @ @ final class DetectorOptions { <nl> * Specifies the format to use when matching lines and returns Builder object . <nl> * @ param val the format to use when matching lines . <nl> * @ return Builder object . <nl> + * @ noinspection ReturnOfInnerClass <nl> * / <nl> - Builder format ( String val ) { <nl> + public Builder format ( String val ) { <nl> format = val ; <nl> return this ; <nl> } <nl> @ @ - 168 , 8 + 172 , 9 @ @ final class DetectorOptions { <nl> * Specifies message to use when reporting a match and returns Builder object . <nl> * @ param val message to use when reporting a match . <nl> * @ return Builder object . <nl> + * @ noinspection ReturnOfInnerClass <nl> * / <nl> - Builder message ( String val ) { <nl> + public Builder message ( String val ) { <nl> message = val ; <nl> return this ; <nl> } <nl> @ @ - 178 , 8 + 183 , 9 @ @ final class DetectorOptions { <nl> * Specifies the minimum allowed number of detections and returns Builder object . <nl> * @ param val the minimum allowed number of detections . <nl> * @ return Builder object . <nl> + * @ noinspection ReturnOfInnerClass <nl> * / <nl> - Builder minimum ( int val ) { <nl> + public Builder minimum ( int val ) { <nl> minimum = val ; <nl> return this ; <nl> } <nl> @ @ - 188 , 8 + 194 , 9 @ @ final class DetectorOptions { <nl> * Specifies the maximum allowed number of detections and returns Builder object . <nl> * @ param val the maximum allowed number of detections . <nl> * @ return Builder object . <nl> + * @ noinspection ReturnOfInnerClass <nl> * / <nl> - Builder maximum ( int val ) { <nl> + public Builder maximum ( int val ) { <nl> maximum = val ; <nl> return this ; <nl> } <nl> @ @ - 198 , 8 + 205 , 9 @ @ final class DetectorOptions { <nl> * Specifies whether to ignore case when matching and returns Builder object . <nl> * @ param val whether to ignore case when matching . <nl> * @ return Builder object . <nl> + * @ noinspection ReturnOfInnerClass <nl> * / <nl> - Builder ignoreCase ( boolean val ) { <nl> + public Builder ignoreCase ( boolean val ) { <nl> ignoreCase = val ; <nl> return this ; <nl> } <nl> @ @ - 208 , 8 + 216 , 9 @ @ final class DetectorOptions { <nl> * Specifies the suppressor to use and returns Builder object . <nl> * @ param val the suppressor to use . <nl> * @ return current instance <nl> + * @ noinspection ReturnOfInnerClass <nl> * / <nl> - Builder suppressor ( MatchSuppressor val ) { <nl> + public Builder suppressor ( MatchSuppressor val ) { <nl> suppressor = val ; <nl> return this ; <nl> } <nl> @ @ - 218 , 7 + 227 , 7 @ @ final class DetectorOptions { <nl> * Returns new DetectorOptions instance . <nl> * @ return DetectorOptions instance . <nl> * / <nl> - DetectorOptions build ( ) { <nl> + public DetectorOptions build ( ) { <nl> message = ObjectUtils . defaultIfNull ( message , " " ) ; <nl> suppressor = ObjectUtils . defaultIfNull ( suppressor , NeverSuppress . INSTANCE ) ; <nl> return DetectorOptions . this ;
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java <nl> index 7c3ac1f . . 5d23d0b 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java <nl> @ @ - 31 , 7 + 31 , 6 @ @ import java . io . PrintStream ; <nl> import java . io . Reader ; <nl> import java . util . ArrayList ; <nl> import java . util . Iterator ; <nl> - import java . util . Properties ; <nl> import org . apache . regexp . RESyntaxException ; <nl> <nl> / * * <nl> @ @ - 39 , 12 + 38 , 9 @ @ import org . apache . regexp . RESyntaxException ; <nl> * @ author < a href = " mailto : oliver @ puppycrawl . com " > Oliver Burn < / a > <nl> * @ author < a href = " mailto : stephane . bailliez @ wanadoo . fr " > Stephane Bailliez < / a > <nl> * / <nl> - class Checker <nl> + public class Checker <nl> implements Defn <nl> { <nl> - / * * printstream to log to * * / <nl> - private final PrintStream mLog ; <nl> - <nl> / * * cache file * * / <nl> private final PropertyCacheFile mCache ; <nl> <nl> @ @ - 57 , 17 + 53 , 16 @ @ class Checker <nl> * @ param aLog the PrintStream to log messages to <nl> * @ throws RESyntaxException unable to create a regexp object <nl> * * / <nl> - Checker ( Configuration aConfig , PrintStream aLog ) <nl> + public Checker ( Configuration aConfig , PrintStream aLog ) <nl> throws RESyntaxException <nl> { <nl> - mLog = aLog ; <nl> mCache = new PropertyCacheFile ( aConfig . getCacheFile ( ) , aLog ) ; <nl> final Verifier v = new VerifierImpl ( aConfig ) ; <nl> VerifierSingleton . setInstance ( v ) ; <nl> } <nl> <nl> / * * Cleans up the object * * / <nl> - void destroy ( ) <nl> + public void destroy ( ) <nl> { <nl> mCache . destroy ( ) ; <nl> <nl> @ @ - 96 , 7 + 91 , 7 @ @ class Checker <nl> * Add the listener that will be used to receive events from the audit <nl> * @ param aListener the nosy thing <nl> * / <nl> - void addListener ( AuditListener aListener ) <nl> + public void addListener ( AuditListener aListener ) <nl> { <nl> mListeners . add ( aListener ) ; <nl> } <nl> @ @ - 109 , 7 + 104 , 7 @ @ class Checker <nl> * @ return the total number of errors found <nl> * @ see destroy ( ) <nl> * / <nl> - int process ( String [ ] aFiles ) <nl> + public int process ( String [ ] aFiles ) <nl> { <nl> int total = 0 ; <nl> fireAuditStarted ( ) ; <nl> @ @ - 233 , 28 + 228 , 6 @ @ class Checker <nl> jtp . compilationUnit ( aAST ) ; <nl> } <nl> <nl> - / * * <nl> - * @ return the header lines specified by a file in the supplied properties <nl> - * set . If no file specified , or unable to read specified file , then an <nl> - * empty list is returned . Errors are reported . <nl> - * @ param aProps the property set to get the file name from <nl> - * * / <nl> - private String [ ] getHeaderLines ( Properties aProps ) <nl> - { <nl> - String [ ] retVal = new String [ ] { } ; <nl> - final String fname = aProps . getProperty ( HEADER _ FILE _ PROP ) ; <nl> - if ( fname ! = null ) { <nl> - try { <nl> - retVal = getLines ( fname ) ; <nl> - } <nl> - catch ( IOException ioe ) { <nl> - mLog . println ( " Unable to read ' " + fname + " ' , got ' " + <nl> - ioe . getMessage ( ) + " ' . Ignoring . " ) ; <nl> - } <nl> - } <nl> - return retVal ; <nl> - } <nl> - <nl> / * * notify all listeners about the audit start * / <nl> protected void fireAuditStarted ( ) <nl> { <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / Configuration . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / Configuration . java <nl> index a2446df . . 387d422 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / Configuration . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / Configuration . java <nl> @ @ - 141 , 7 + 141 , 7 @ @ class Configuration <nl> * @ throws FileNotFoundException if an error occurs <nl> * @ throws IOException if an error occurs <nl> * / <nl> - Configuration ( Properties aProps , PrintStream aLog ) <nl> + public Configuration ( Properties aProps , PrintStream aLog ) <nl> throws RESyntaxException , FileNotFoundException , IOException <nl> { <nl> setParamPat ( aProps . getProperty ( PARAMETER _ PATTERN _ PROP , <nl> @ @ - 202 , 7 + 202 , 7 @ @ class Configuration <nl> * <nl> * @ throws IllegalStateException if an error occurs <nl> * / <nl> - Configuration ( ) <nl> + public Configuration ( ) <nl> throws IllegalStateException <nl> { <nl> try { <nl> @ @ - 225 , 169 + 225 , 169 @ @ class Configuration <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> <nl> / * * @ return pattern to match parameters * * / <nl> - String getParamPat ( ) <nl> + public String getParamPat ( ) <nl> { <nl> return mParamPat ; <nl> } <nl> <nl> / * * @ return regexp to match parameters * * / <nl> - RE getParamRegexp ( ) <nl> + public RE getParamRegexp ( ) <nl> { <nl> return mParamRegexp ; <nl> } <nl> <nl> / * * @ return pattern to match static variables * * / <nl> - String getStaticPat ( ) <nl> + public String getStaticPat ( ) <nl> { <nl> return mStaticPat ; <nl> } <nl> <nl> / * * @ return regexp to match static variables * * / <nl> - RE getStaticRegexp ( ) <nl> + public RE getStaticRegexp ( ) <nl> { <nl> return mStaticRegexp ; <nl> } <nl> <nl> / * * @ return pattern to match static final variables * * / <nl> - String getStaticFinalPat ( ) <nl> + public String getStaticFinalPat ( ) <nl> { <nl> return mStaticFinalPat ; <nl> } <nl> <nl> / * * @ return regexp to match static final variables * * / <nl> - RE getStaticFinalRegexp ( ) <nl> + public RE getStaticFinalRegexp ( ) <nl> { <nl> return mStaticFinalRegexp ; <nl> } <nl> <nl> / * * @ return pattern to match member variables * * / <nl> - String getMemberPat ( ) <nl> + public String getMemberPat ( ) <nl> { <nl> return mMemberPat ; <nl> } <nl> <nl> / * * @ return regexp to match member variables * * / <nl> - RE getMemberRegexp ( ) <nl> + public RE getMemberRegexp ( ) <nl> { <nl> return mMemberRegexp ; <nl> } <nl> <nl> / * * @ return pattern to match public member variables * * / <nl> - String getPublicMemberPat ( ) <nl> + public String getPublicMemberPat ( ) <nl> { <nl> return mPublicMemberPat ; <nl> } <nl> <nl> / * * @ return regexp to match public member variables * * / <nl> - RE getPublicMemberRegexp ( ) <nl> + public RE getPublicMemberRegexp ( ) <nl> { <nl> return mPublicMemberRegexp ; <nl> } <nl> <nl> / * * @ return pattern to match type names * * / <nl> - String getTypePat ( ) <nl> + public String getTypePat ( ) <nl> { <nl> return mTypePat ; <nl> } <nl> <nl> / * * @ return regexp to match type names * * / <nl> - RE getTypeRegexp ( ) <nl> + public RE getTypeRegexp ( ) <nl> { <nl> return mTypeRegexp ; <nl> } <nl> <nl> / * * @ return the maximum line length * * / <nl> - int getMaxLineLength ( ) <nl> + public int getMaxLineLength ( ) <nl> { <nl> return mMaxLineLength ; <nl> } <nl> <nl> / * * @ return the maximum method length * * / <nl> - int getMaxMethodLength ( ) <nl> + public int getMaxMethodLength ( ) <nl> { <nl> return mMaxMethodLength ; <nl> } <nl> <nl> / * * @ return the maximum constructor length * * / <nl> - int getMaxConstructorLength ( ) <nl> + public int getMaxConstructorLength ( ) <nl> { <nl> return mMaxConstructorLength ; <nl> } <nl> <nl> / * * @ return the maximum file length * * / <nl> - int getMaxFileLength ( ) <nl> + public int getMaxFileLength ( ) <nl> { <nl> return mMaxFileLength ; <nl> } <nl> <nl> / * * @ return whether to allow tabs * * / <nl> - boolean isAllowTabs ( ) <nl> + public boolean isAllowTabs ( ) <nl> { <nl> return mAllowTabs ; <nl> } <nl> <nl> / * * @ return whether to allow protected data * * / <nl> - boolean isAllowProtected ( ) <nl> + public boolean isAllowProtected ( ) <nl> { <nl> return mAllowProtected ; <nl> } <nl> <nl> / * * @ return whether to allow having no author tag * * / <nl> - boolean isAllowNoAuthor ( ) <nl> + public boolean isAllowNoAuthor ( ) <nl> { <nl> return mAllowNoAuthor ; <nl> } <nl> <nl> / * * @ return whether to relax javadoc checking * * / <nl> - boolean isRelaxJavadoc ( ) <nl> + public boolean isRelaxJavadoc ( ) <nl> { <nl> return mRelaxJavadoc ; <nl> } <nl> <nl> / * * @ return whether to ignore javadoc checking * * / <nl> - boolean isIgnoreJavadoc ( ) <nl> + public boolean isIgnoreJavadoc ( ) <nl> { <nl> return mIgnoreJavadoc ; <nl> } <nl> <nl> / * * @ return whether to process imports * * / <nl> - boolean isIgnoreImports ( ) <nl> + public boolean isIgnoreImports ( ) <nl> { <nl> return mIgnoreImports ; <nl> } <nl> <nl> / * * @ return whether to ignore checks for whitespace * * / <nl> - boolean isIgnoreWhitespace ( ) <nl> + public boolean isIgnoreWhitespace ( ) <nl> { <nl> return mIgnoreWhitespace ; <nl> } <nl> <nl> / * * @ return whether to ignore checks for braces * * / <nl> - boolean isIgnoreBraces ( ) <nl> + public boolean isIgnoreBraces ( ) <nl> { <nl> return mIgnoreBraces ; <nl> } <nl> <nl> / * * @ return whether to ignore max line length for import statements * * / <nl> - boolean isIgnoreImportLength ( ) <nl> + public boolean isIgnoreImportLength ( ) <nl> { <nl> return mIgnoreImportLength ; <nl> } <nl> <nl> / * * @ return the header lines to check for * * / <nl> - String [ ] getHeaderLines ( ) <nl> + public String [ ] getHeaderLines ( ) <nl> { <nl> return mHeaderLines ; <nl> } <nl> <nl> / * * @ return line number to ignore in header * * / <nl> - int getHeaderIgnoreLineNo ( ) <nl> + public int getHeaderIgnoreLineNo ( ) <nl> { <nl> return mHeaderIgnoreLineNo ; <nl> } <nl> <nl> / * * @ return the name of the cache file * * / <nl> - String getCacheFile ( ) <nl> + public String getCacheFile ( ) <nl> { <nl> return mCacheFile ; <nl> } <nl> @ @ - 400 , 7 + 400 , 7 @ @ class Configuration <nl> * @ param aParamPat pattern to match parameters <nl> * @ throws RESyntaxException if an error occurs <nl> * / <nl> - void setParamPat ( String aParamPat ) <nl> + public void setParamPat ( String aParamPat ) <nl> throws RESyntaxException <nl> { <nl> mParamRegexp = new RE ( aParamPat ) ; <nl> @ @ - 411 , 7 + 411 , 7 @ @ class Configuration <nl> * @ param aStaticPat pattern to match static variables <nl> * @ throws RESyntaxException if an error occurs <nl> * / <nl> - void setStaticPat ( String aStaticPat ) <nl> + public void setStaticPat ( String aStaticPat ) <nl> throws RESyntaxException <nl> { <nl> mStaticRegexp = new RE ( aStaticPat ) ; <nl> @ @ - 422 , 7 + 422 , 7 @ @ class Configuration <nl> * @ param aStaticFinalPat pattern to match static final variables <nl> * @ throws RESyntaxException if an error occurs <nl> * / <nl> - void setStaticFinalPat ( String aStaticFinalPat ) <nl> + public void setStaticFinalPat ( String aStaticFinalPat ) <nl> throws RESyntaxException <nl> { <nl> mStaticFinalRegexp = new RE ( aStaticFinalPat ) ; <nl> @ @ - 433 , 7 + 433 , 7 @ @ class Configuration <nl> * @ param aMemberPat pattern to match member variables <nl> * @ throws RESyntaxException if an error occurs <nl> * / <nl> - void setMemberPat ( String aMemberPat ) <nl> + public void setMemberPat ( String aMemberPat ) <nl> throws RESyntaxException <nl> { <nl> mMemberRegexp = new RE ( aMemberPat ) ; <nl> @ @ - 444 , 7 + 444 , 7 @ @ class Configuration <nl> * @ param aPublicMemberPat pattern to match public member variables <nl> * @ throws RESyntaxException if an error occurs <nl> * / <nl> - void setPublicMemberPat ( String aPublicMemberPat ) <nl> + public void setPublicMemberPat ( String aPublicMemberPat ) <nl> throws RESyntaxException <nl> { <nl> mPublicMemberRegexp = new RE ( aPublicMemberPat ) ; <nl> @ @ - 455 , 7 + 455 , 7 @ @ class Configuration <nl> * @ param aTypePat pattern to match type names <nl> * @ throws RESyntaxException if an error occurs <nl> * / <nl> - void setTypePat ( String aTypePat ) <nl> + public void setTypePat ( String aTypePat ) <nl> throws RESyntaxException <nl> { <nl> mTypeRegexp = new RE ( aTypePat ) ; <nl> @ @ - 465 , 7 + 465 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aMaxLineLength the maximum line length <nl> * / <nl> - void setMaxLineLength ( int aMaxLineLength ) <nl> + public void setMaxLineLength ( int aMaxLineLength ) <nl> { <nl> mMaxLineLength = aMaxLineLength ; <nl> } <nl> @ @ - 473 , 7 + 473 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aMaxMethodLength the maximum method length <nl> * / <nl> - void setMaxMethodLength ( int aMaxMethodLength ) <nl> + public void setMaxMethodLength ( int aMaxMethodLength ) <nl> { <nl> mMaxMethodLength = aMaxMethodLength ; <nl> } <nl> @ @ - 481 , 7 + 481 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aMaxConstructorLength the maximum constructor length <nl> * / <nl> - void setMaxConstructorLength ( int aMaxConstructorLength ) <nl> + public void setMaxConstructorLength ( int aMaxConstructorLength ) <nl> { <nl> mMaxConstructorLength = aMaxConstructorLength ; <nl> } <nl> @ @ - 489 , 7 + 489 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aMaxFileLength the maximum file length <nl> * / <nl> - void setMaxFileLength ( int aMaxFileLength ) <nl> + public void setMaxFileLength ( int aMaxFileLength ) <nl> { <nl> mMaxFileLength = aMaxFileLength ; <nl> } <nl> @ @ - 497 , 7 + 497 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aIgnoreImportLength whether to allow tabs <nl> * / <nl> - void setIgnoreImportLength ( boolean aIgnoreImportLength ) <nl> + public void setIgnoreImportLength ( boolean aIgnoreImportLength ) <nl> { <nl> mIgnoreImportLength = aIgnoreImportLength ; <nl> } <nl> @ @ - 505 , 7 + 505 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aAllowTabs whether to allow tabs <nl> * / <nl> - void setAllowTabs ( boolean aAllowTabs ) <nl> + public void setAllowTabs ( boolean aAllowTabs ) <nl> { <nl> mAllowTabs = aAllowTabs ; <nl> } <nl> @ @ - 513 , 7 + 513 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aAllowProtected whether to allow protected data <nl> * / <nl> - void setAllowProtected ( boolean aAllowProtected ) <nl> + public void setAllowProtected ( boolean aAllowProtected ) <nl> { <nl> mAllowProtected = aAllowProtected ; <nl> } <nl> @ @ - 521 , 7 + 521 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aAllowNoAuthor whether to allow having no author tag <nl> * / <nl> - void setAllowNoAuthor ( boolean aAllowNoAuthor ) <nl> + public void setAllowNoAuthor ( boolean aAllowNoAuthor ) <nl> { <nl> mAllowNoAuthor = aAllowNoAuthor ; <nl> } <nl> @ @ - 529 , 7 + 529 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aRelaxJavadoc whether to relax javadoc checking <nl> * / <nl> - void setRelaxJavadoc ( boolean aRelaxJavadoc ) <nl> + public void setRelaxJavadoc ( boolean aRelaxJavadoc ) <nl> { <nl> mRelaxJavadoc = aRelaxJavadoc ; <nl> } <nl> @ @ - 537 , 7 + 537 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aIgnoreJavadoc whether to ignore javadoc checking <nl> * / <nl> - void setIgnoreJavadoc ( boolean aIgnoreJavadoc ) <nl> + public void setIgnoreJavadoc ( boolean aIgnoreJavadoc ) <nl> { <nl> mIgnoreJavadoc = aIgnoreJavadoc ; <nl> } <nl> @ @ - 545 , 7 + 545 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aIgnoreImports whether to process imports <nl> * / <nl> - void setIgnoreImports ( boolean aIgnoreImports ) <nl> + public void setIgnoreImports ( boolean aIgnoreImports ) <nl> { <nl> mIgnoreImports = aIgnoreImports ; <nl> } <nl> @ @ - 553 , 7 + 553 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aTo whether to ignore checks for whitespace <nl> * / <nl> - void setIgnoreWhitespace ( boolean aTo ) <nl> + public void setIgnoreWhitespace ( boolean aTo ) <nl> { <nl> mIgnoreWhitespace = aTo ; <nl> } <nl> @ @ - 561 , 7 + 561 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aTo whether to ignore checks for braces <nl> * / <nl> - void setIgnoreBraces ( boolean aTo ) <nl> + public void setIgnoreBraces ( boolean aTo ) <nl> { <nl> mIgnoreBraces = aTo ; <nl> } <nl> @ @ - 571 , 7 + 571 , 7 @ @ class Configuration <nl> * @ throws FileNotFoundException if an error occurs <nl> * @ throws IOException if an error occurs <nl> * / <nl> - void setHeaderFile ( String aFileName ) <nl> + public void setHeaderFile ( String aFileName ) <nl> throws FileNotFoundException , IOException <nl> { <nl> final LineNumberReader lnr = <nl> @ @ - 590 , 7 + 590 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aHeaderIgnoreLineNo line number to ignore in header <nl> * / <nl> - void setHeaderIgnoreLineNo ( int aHeaderIgnoreLineNo ) <nl> + public void setHeaderIgnoreLineNo ( int aHeaderIgnoreLineNo ) <nl> { <nl> mHeaderIgnoreLineNo = aHeaderIgnoreLineNo ; <nl> } <nl> @ @ - 598 , 7 + 598 , 7 @ @ class Configuration <nl> / * * <nl> * @ param aCacheFile name of cache file <nl> * / <nl> - void setCacheFile ( String aCacheFile ) <nl> + public void setCacheFile ( String aCacheFile ) <nl> { <nl> mCacheFile = aCacheFile ; <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java 
 index a763e50 . . 9a13818 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java 
 @ @ - 29 , 7 + 29 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . AbstractViolationReporter ; 
 * Options for a detector . 
 * @ author Oliver Burn 
 * / 
 - final class DetectorOptions { 
 + public final class DetectorOptions { 
 / * * 
 * Flags to compile a regular expression with . 
 * See { @ link Pattern # flags ( ) } . 
 @ @ - 58 , 6 + 58 , 15 @ @ final class DetectorOptions { 
 private DetectorOptions ( ) { } 
 
 / * * 
 + * Returns new Builder object . 
 + * @ return Builder object . 
 + * @ noinspection ReturnOfInnerClass 
 + * / 
 + public static Builder newBuilder ( ) { 
 + return new DetectorOptions ( ) . new Builder ( ) ; 
 + } 
 + 
 + / * * 
 * Format of the regular expression . 
 * @ return format of the regular expression . 
 * / 
 @ @ - 122 , 14 + 131 , 6 @ @ final class DetectorOptions { 
 return pattern ; 
 } 
 
 - / * * 
 - * Returns new Builder object . 
 - * @ return Builder object . 
 - * / 
 - static Builder newBuilder ( ) { 
 - return new DetectorOptions ( ) . new Builder ( ) ; 
 - } 
 - 
 / * * Class which implements Builder pattern to build DetectorOptions instance . * / 
 public final class Builder { 
 
 @ @ - 137 , 8 + 138 , 9 @ @ final class DetectorOptions { 
 * Specifies the violation reporter and returns Builder object . 
 * @ param val for reporting violations . 
 * @ return Builder object . 
 + * @ noinspection ReturnOfInnerClass 
 * / 
 - Builder reporter ( AbstractViolationReporter val ) { 
 + public Builder reporter ( AbstractViolationReporter val ) { 
 reporter = val ; 
 return this ; 
 } 
 @ @ - 148 , 8 + 150 , 9 @ @ final class DetectorOptions { 
 * and returns Builder object . 
 * @ param val the format to use when matching lines . 
 * @ return Builder object . 
 + * @ noinspection ReturnOfInnerClass 
 * / 
 - Builder compileFlags ( int val ) { 
 + public Builder compileFlags ( int val ) { 
 compileFlags = val ; 
 return this ; 
 } 
 @ @ - 158 , 8 + 161 , 9 @ @ final class DetectorOptions { 
 * Specifies the format to use when matching lines and returns Builder object . 
 * @ param val the format to use when matching lines . 
 * @ return Builder object . 
 + * @ noinspection ReturnOfInnerClass 
 * / 
 - Builder format ( String val ) { 
 + public Builder format ( String val ) { 
 format = val ; 
 return this ; 
 } 
 @ @ - 168 , 8 + 172 , 9 @ @ final class DetectorOptions { 
 * Specifies message to use when reporting a match and returns Builder object . 
 * @ param val message to use when reporting a match . 
 * @ return Builder object . 
 + * @ noinspection ReturnOfInnerClass 
 * / 
 - Builder message ( String val ) { 
 + public Builder message ( String val ) { 
 message = val ; 
 return this ; 
 } 
 @ @ - 178 , 8 + 183 , 9 @ @ final class DetectorOptions { 
 * Specifies the minimum allowed number of detections and returns Builder object . 
 * @ param val the minimum allowed number of detections . 
 * @ return Builder object . 
 + * @ noinspection ReturnOfInnerClass 
 * / 
 - Builder minimum ( int val ) { 
 + public Builder minimum ( int val ) { 
 minimum = val ; 
 return this ; 
 } 
 @ @ - 188 , 8 + 194 , 9 @ @ final class DetectorOptions { 
 * Specifies the maximum allowed number of detections and returns Builder object . 
 * @ param val the maximum allowed number of detections . 
 * @ return Builder object . 
 + * @ noinspection ReturnOfInnerClass 
 * / 
 - Builder maximum ( int val ) { 
 + public Builder maximum ( int val ) { 
 maximum = val ; 
 return this ; 
 } 
 @ @ - 198 , 8 + 205 , 9 @ @ final class DetectorOptions { 
 * Specifies whether to ignore case when matching and returns Builder object . 
 * @ param val whether to ignore case when matching . 
 * @ return Builder object . 
 + * @ noinspection ReturnOfInnerClass 
 * / 
 - Builder ignoreCase ( boolean val ) { 
 + public Builder ignoreCase ( boolean val ) { 
 ignoreCase = val ; 
 return this ; 
 } 
 @ @ - 208 , 8 + 216 , 9 @ @ final class DetectorOptions { 
 * Specifies the suppressor to use and returns Builder object . 
 * @ param val the suppressor to use . 
 * @ return current instance 
 + * @ noinspection ReturnOfInnerClass 
 * / 
 - Builder suppressor ( MatchSuppressor val ) { 
 + public Builder suppressor ( MatchSuppressor val ) { 
 suppressor = val ; 
 return this ; 
 } 
 @ @ - 218 , 7 + 227 , 7 @ @ final class DetectorOptions { 
 * Returns new DetectorOptions instance . 
 * @ return DetectorOptions instance . 
 * / 
 - DetectorOptions build ( ) { 
 + public DetectorOptions build ( ) { 
 message = ObjectUtils . defaultIfNull ( message , " " ) ; 
 suppressor = ObjectUtils . defaultIfNull ( suppressor , NeverSuppress . INSTANCE ) ; 
 return DetectorOptions . this ;

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java 
 index 7c3ac1f . . 5d23d0b 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java 
 @ @ - 31 , 7 + 31 , 6 @ @ import java . io . PrintStream ; 
 import java . io . Reader ; 
 import java . util . ArrayList ; 
 import java . util . Iterator ; 
 - import java . util . Properties ; 
 import org . apache . regexp . RESyntaxException ; 
 
 / * * 
 @ @ - 39 , 12 + 38 , 9 @ @ import org . apache . regexp . RESyntaxException ; 
 * @ author < a href = " mailto : oliver @ puppycrawl . com " > Oliver Burn < / a > 
 * @ author < a href = " mailto : stephane . bailliez @ wanadoo . fr " > Stephane Bailliez < / a > 
 * / 
 - class Checker 
 + public class Checker 
 implements Defn 
 { 
 - / * * printstream to log to * * / 
 - private final PrintStream mLog ; 
 - 
 / * * cache file * * / 
 private final PropertyCacheFile mCache ; 
 
 @ @ - 57 , 17 + 53 , 16 @ @ class Checker 
 * @ param aLog the PrintStream to log messages to 
 * @ throws RESyntaxException unable to create a regexp object 
 * * / 
 - Checker ( Configuration aConfig , PrintStream aLog ) 
 + public Checker ( Configuration aConfig , PrintStream aLog ) 
 throws RESyntaxException 
 { 
 - mLog = aLog ; 
 mCache = new PropertyCacheFile ( aConfig . getCacheFile ( ) , aLog ) ; 
 final Verifier v = new VerifierImpl ( aConfig ) ; 
 VerifierSingleton . setInstance ( v ) ; 
 } 
 
 / * * Cleans up the object * * / 
 - void destroy ( ) 
 + public void destroy ( ) 
 { 
 mCache . destroy ( ) ; 
 
 @ @ - 96 , 7 + 91 , 7 @ @ class Checker 
 * Add the listener that will be used to receive events from the audit 
 * @ param aListener the nosy thing 
 * / 
 - void addListener ( AuditListener aListener ) 
 + public void addListener ( AuditListener aListener ) 
 { 
 mListeners . add ( aListener ) ; 
 } 
 @ @ - 109 , 7 + 104 , 7 @ @ class Checker 
 * @ return the total number of errors found 
 * @ see destroy ( ) 
 * / 
 - int process ( String [ ] aFiles ) 
 + public int process ( String [ ] aFiles ) 
 { 
 int total = 0 ; 
 fireAuditStarted ( ) ; 
 @ @ - 233 , 28 + 228 , 6 @ @ class Checker 
 jtp . compilationUnit ( aAST ) ; 
 } 
 
 - / * * 
 - * @ return the header lines specified by a file in the supplied properties 
 - * set . If no file specified , or unable to read specified file , then an 
 - * empty list is returned . Errors are reported . 
 - * @ param aProps the property set to get the file name from 
 - * * / 
 - private String [ ] getHeaderLines ( Properties aProps ) 
 - { 
 - String [ ] retVal = new String [ ] { } ; 
 - final String fname = aProps . getProperty ( HEADER _ FILE _ PROP ) ; 
 - if ( fname ! = null ) { 
 - try { 
 - retVal = getLines ( fname ) ; 
 - } 
 - catch ( IOException ioe ) { 
 - mLog . println ( " Unable to read ' " + fname + " ' , got ' " + 
 - ioe . getMessage ( ) + " ' . Ignoring . " ) ; 
 - } 
 - } 
 - return retVal ; 
 - } 
 - 
 / * * notify all listeners about the audit start * / 
 protected void fireAuditStarted ( ) 
 { 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / Configuration . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / Configuration . java 
 index a2446df . . 387d422 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / Configuration . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / Configuration . java 
 @ @ - 141 , 7 + 141 , 7 @ @ class Configuration 
 * @ throws FileNotFoundException if an error occurs 
 * @ throws IOException if an error occurs 
 * / 
 - Configuration ( Properties aProps , PrintStream aLog ) 
 + public Configuration ( Properties aProps , PrintStream aLog ) 
 throws RESyntaxException , FileNotFoundException , IOException 
 { 
 setParamPat ( aProps . getProperty ( PARAMETER _ PATTERN _ PROP , 
 @ @ - 202 , 7 + 202 , 7 @ @ class Configuration 
 * 
 * @ throws IllegalStateException if an error occurs 
 * / 
 - Configuration ( ) 
 + public Configuration ( ) 
 throws IllegalStateException 
 { 
 try { 
 @ @ - 225 , 169 + 225 , 169 @ @ class Configuration 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 / * * @ return pattern to match parameters * * / 
 - String getParamPat ( ) 
 + public String getParamPat ( ) 
 { 
 return mParamPat ; 
 } 
 
 / * * @ return regexp to match parameters * * / 
 - RE getParamRegexp ( ) 
 + public RE getParamRegexp ( ) 
 { 
 return mParamRegexp ; 
 } 
 
 / * * @ return pattern to match static variables * * / 
 - String getStaticPat ( ) 
 + public String getStaticPat ( ) 
 { 
 return mStaticPat ; 
 } 
 
 / * * @ return regexp to match static variables * * / 
 - RE getStaticRegexp ( ) 
 + public RE getStaticRegexp ( ) 
 { 
 return mStaticRegexp ; 
 } 
 
 / * * @ return pattern to match static final variables * * / 
 - String getStaticFinalPat ( ) 
 + public String getStaticFinalPat ( ) 
 { 
 return mStaticFinalPat ; 
 } 
 
 / * * @ return regexp to match static final variables * * / 
 - RE getStaticFinalRegexp ( ) 
 + public RE getStaticFinalRegexp ( ) 
 { 
 return mStaticFinalRegexp ; 
 } 
 
 / * * @ return pattern to match member variables * * / 
 - String getMemberPat ( ) 
 + public String getMemberPat ( ) 
 { 
 return mMemberPat ; 
 } 
 
 / * * @ return regexp to match member variables * * / 
 - RE getMemberRegexp ( ) 
 + public RE getMemberRegexp ( ) 
 { 
 return mMemberRegexp ; 
 } 
 
 / * * @ return pattern to match public member variables * * / 
 - String getPublicMemberPat ( ) 
 + public String getPublicMemberPat ( ) 
 { 
 return mPublicMemberPat ; 
 } 
 
 / * * @ return regexp to match public member variables * * / 
 - RE getPublicMemberRegexp ( ) 
 + public RE getPublicMemberRegexp ( ) 
 { 
 return mPublicMemberRegexp ; 
 } 
 
 / * * @ return pattern to match type names * * / 
 - String getTypePat ( ) 
 + public String getTypePat ( ) 
 { 
 return mTypePat ; 
 } 
 
 / * * @ return regexp to match type names * * / 
 - RE getTypeRegexp ( ) 
 + public RE getTypeRegexp ( ) 
 { 
 return mTypeRegexp ; 
 } 
 
 / * * @ return the maximum line length * * / 
 - int getMaxLineLength ( ) 
 + public int getMaxLineLength ( ) 
 { 
 return mMaxLineLength ; 
 } 
 
 / * * @ return the maximum method length * * / 
 - int getMaxMethodLength ( ) 
 + public int getMaxMethodLength ( ) 
 { 
 return mMaxMethodLength ; 
 } 
 
 / * * @ return the maximum constructor length * * / 
 - int getMaxConstructorLength ( ) 
 + public int getMaxConstructorLength ( ) 
 { 
 return mMaxConstructorLength ; 
 } 
 
 / * * @ return the maximum file length * * / 
 - int getMaxFileLength ( ) 
 + public int getMaxFileLength ( ) 
 { 
 return mMaxFileLength ; 
 } 
 
 / * * @ return whether to allow tabs * * / 
 - boolean isAllowTabs ( ) 
 + public boolean isAllowTabs ( ) 
 { 
 return mAllowTabs ; 
 } 
 
 / * * @ return whether to allow protected data * * / 
 - boolean isAllowProtected ( ) 
 + public boolean isAllowProtected ( ) 
 { 
 return mAllowProtected ; 
 } 
 
 / * * @ return whether to allow having no author tag * * / 
 - boolean isAllowNoAuthor ( ) 
 + public boolean isAllowNoAuthor ( ) 
 { 
 return mAllowNoAuthor ; 
 } 
 
 / * * @ return whether to relax javadoc checking * * / 
 - boolean isRelaxJavadoc ( ) 
 + public boolean isRelaxJavadoc ( ) 
 { 
 return mRelaxJavadoc ; 
 } 
 
 / * * @ return whether to ignore javadoc checking * * / 
 - boolean isIgnoreJavadoc ( ) 
 + public boolean isIgnoreJavadoc ( ) 
 { 
 return mIgnoreJavadoc ; 
 } 
 
 / * * @ return whether to process imports * * / 
 - boolean isIgnoreImports ( ) 
 + public boolean isIgnoreImports ( ) 
 { 
 return mIgnoreImports ; 
 } 
 
 / * * @ return whether to ignore checks for whitespace * * / 
 - boolean isIgnoreWhitespace ( ) 
 + public boolean isIgnoreWhitespace ( ) 
 { 
 return mIgnoreWhitespace ; 
 } 
 
 / * * @ return whether to ignore checks for braces * * / 
 - boolean isIgnoreBraces ( ) 
 + public boolean isIgnoreBraces ( ) 
 { 
 return mIgnoreBraces ; 
 } 
 
 / * * @ return whether to ignore max line length for import statements * * / 
 - boolean isIgnoreImportLength ( ) 
 + public boolean isIgnoreImportLength ( ) 
 { 
 return mIgnoreImportLength ; 
 } 
 
 / * * @ return the header lines to check for * * / 
 - String [ ] getHeaderLines ( ) 
 + public String [ ] getHeaderLines ( ) 
 { 
 return mHeaderLines ; 
 } 
 
 / * * @ return line number to ignore in header * * / 
 - int getHeaderIgnoreLineNo ( ) 
 + public int getHeaderIgnoreLineNo ( ) 
 { 
 return mHeaderIgnoreLineNo ; 
 } 
 
 / * * @ return the name of the cache file * * / 
 - String getCacheFile ( ) 
 + public String getCacheFile ( ) 
 { 
 return mCacheFile ; 
 } 
 @ @ - 400 , 7 + 400 , 7 @ @ class Configuration 
 * @ param aParamPat pattern to match parameters 
 * @ throws RESyntaxException if an error occurs 
 * / 
 - void setParamPat ( String aParamPat ) 
 + public void setParamPat ( String aParamPat ) 
 throws RESyntaxException 
 { 
 mParamRegexp = new RE ( aParamPat ) ; 
 @ @ - 411 , 7 + 411 , 7 @ @ class Configuration 
 * @ param aStaticPat pattern to match static variables 
 * @ throws RESyntaxException if an error occurs 
 * / 
 - void setStaticPat ( String aStaticPat ) 
 + public void setStaticPat ( String aStaticPat ) 
 throws RESyntaxException 
 { 
 mStaticRegexp = new RE ( aStaticPat ) ; 
 @ @ - 422 , 7 + 422 , 7 @ @ class Configuration 
 * @ param aStaticFinalPat pattern to match static final variables 
 * @ throws RESyntaxException if an error occurs 
 * / 
 - void setStaticFinalPat ( String aStaticFinalPat ) 
 + public void setStaticFinalPat ( String aStaticFinalPat ) 
 throws RESyntaxException 
 { 
 mStaticFinalRegexp = new RE ( aStaticFinalPat ) ; 
 @ @ - 433 , 7 + 433 , 7 @ @ class Configuration 
 * @ param aMemberPat pattern to match member variables 
 * @ throws RESyntaxException if an error occurs 
 * / 
 - void setMemberPat ( String aMemberPat ) 
 + public void setMemberPat ( String aMemberPat ) 
 throws RESyntaxException 
 { 
 mMemberRegexp = new RE ( aMemberPat ) ; 
 @ @ - 444 , 7 + 444 , 7 @ @ class Configuration 
 * @ param aPublicMemberPat pattern to match public member variables 
 * @ throws RESyntaxException if an error occurs 
 * / 
 - void setPublicMemberPat ( String aPublicMemberPat ) 
 + public void setPublicMemberPat ( String aPublicMemberPat ) 
 throws RESyntaxException 
 { 
 mPublicMemberRegexp = new RE ( aPublicMemberPat ) ; 
 @ @ - 455 , 7 + 455 , 7 @ @ class Configuration 
 * @ param aTypePat pattern to match type names 
 * @ throws RESyntaxException if an error occurs 
 * / 
 - void setTypePat ( String aTypePat ) 
 + public void setTypePat ( String aTypePat ) 
 throws RESyntaxException 
 { 
 mTypeRegexp = new RE ( aTypePat ) ; 
 @ @ - 465 , 7 + 465 , 7 @ @ class Configuration 
 / * * 
 * @ param aMaxLineLength the maximum line length 
 * / 
 - void setMaxLineLength ( int aMaxLineLength ) 
 + public void setMaxLineLength ( int aMaxLineLength ) 
 { 
 mMaxLineLength = aMaxLineLength ; 
 } 
 @ @ - 473 , 7 + 473 , 7 @ @ class Configuration 
 / * * 
 * @ param aMaxMethodLength the maximum method length 
 * / 
 - void setMaxMethodLength ( int aMaxMethodLength ) 
 + public void setMaxMethodLength ( int aMaxMethodLength ) 
 { 
 mMaxMethodLength = aMaxMethodLength ; 
 } 
 @ @ - 481 , 7 + 481 , 7 @ @ class Configuration 
 / * * 
 * @ param aMaxConstructorLength the maximum constructor length 
 * / 
 - void setMaxConstructorLength ( int aMaxConstructorLength ) 
 + public void setMaxConstructorLength ( int aMaxConstructorLength ) 
 { 
 mMaxConstructorLength = aMaxConstructorLength ; 
 } 
 @ @ - 489 , 7 + 489 , 7 @ @ class Configuration 
 / * * 
 * @ param aMaxFileLength the maximum file length 
 * / 
 - void setMaxFileLength ( int aMaxFileLength ) 
 + public void setMaxFileLength ( int aMaxFileLength ) 
 { 
 mMaxFileLength = aMaxFileLength ; 
 } 
 @ @ - 497 , 7 + 497 , 7 @ @ class Configuration 
 / * * 
 * @ param aIgnoreImportLength whether to allow tabs 
 * / 
 - void setIgnoreImportLength ( boolean aIgnoreImportLength ) 
 + public void setIgnoreImportLength ( boolean aIgnoreImportLength ) 
 { 
 mIgnoreImportLength = aIgnoreImportLength ; 
 } 
 @ @ - 505 , 7 + 505 , 7 @ @ class Configuration 
 / * * 
 * @ param aAllowTabs whether to allow tabs 
 * / 
 - void setAllowTabs ( boolean aAllowTabs ) 
 + public void setAllowTabs ( boolean aAllowTabs ) 
 { 
 mAllowTabs = aAllowTabs ; 
 } 
 @ @ - 513 , 7 + 513 , 7 @ @ class Configuration 
 / * * 
 * @ param aAllowProtected whether to allow protected data 
 * / 
 - void setAllowProtected ( boolean aAllowProtected ) 
 + public void setAllowProtected ( boolean aAllowProtected ) 
 { 
 mAllowProtected = aAllowProtected ; 
 } 
 @ @ - 521 , 7 + 521 , 7 @ @ class Configuration 
 / * * 
 * @ param aAllowNoAuthor whether to allow having no author tag 
 * / 
 - void setAllowNoAuthor ( boolean aAllowNoAuthor ) 
 + public void setAllowNoAuthor ( boolean aAllowNoAuthor ) 
 { 
 mAllowNoAuthor = aAllowNoAuthor ; 
 } 
 @ @ - 529 , 7 + 529 , 7 @ @ class Configuration 
 / * * 
 * @ param aRelaxJavadoc whether to relax javadoc checking 
 * / 
 - void setRelaxJavadoc ( boolean aRelaxJavadoc ) 
 + public void setRelaxJavadoc ( boolean aRelaxJavadoc ) 
 { 
 mRelaxJavadoc = aRelaxJavadoc ; 
 } 
 @ @ - 537 , 7 + 537 , 7 @ @ class Configuration 
 / * * 
 * @ param aIgnoreJavadoc whether to ignore javadoc checking 
 * / 
 - void setIgnoreJavadoc ( boolean aIgnoreJavadoc ) 
 + public void setIgnoreJavadoc ( boolean aIgnoreJavadoc ) 
 { 
 mIgnoreJavadoc = aIgnoreJavadoc ; 
 } 
 @ @ - 545 , 7 + 545 , 7 @ @ class Configuration 
 / * * 
 * @ param aIgnoreImports whether to process imports 
 * / 
 - void setIgnoreImports ( boolean aIgnoreImports ) 
 + public void setIgnoreImports ( boolean aIgnoreImports ) 
 { 
 mIgnoreImports = aIgnoreImports ; 
 } 
 @ @ - 553 , 7 + 553 , 7 @ @ class Configuration 
 / * * 
 * @ param aTo whether to ignore checks for whitespace 
 * / 
 - void setIgnoreWhitespace ( boolean aTo ) 
 + public void setIgnoreWhitespace ( boolean aTo ) 
 { 
 mIgnoreWhitespace = aTo ; 
 } 
 @ @ - 561 , 7 + 561 , 7 @ @ class Configuration 
 / * * 
 * @ param aTo whether to ignore checks for braces 
 * / 
 - void setIgnoreBraces ( boolean aTo ) 
 + public void setIgnoreBraces ( boolean aTo ) 
 { 
 mIgnoreBraces = aTo ; 
 } 
 @ @ - 571 , 7 + 571 , 7 @ @ class Configuration 
 * @ throws FileNotFoundException if an error occurs 
 * @ throws IOException if an error occurs 
 * / 
 - void setHeaderFile ( String aFileName ) 
 + public void setHeaderFile ( String aFileName ) 
 throws FileNotFoundException , IOException 
 { 
 final LineNumberReader lnr = 
 @ @ - 590 , 7 + 590 , 7 @ @ class Configuration 
 / * * 
 * @ param aHeaderIgnoreLineNo line number to ignore in header 
 * / 
 - void setHeaderIgnoreLineNo ( int aHeaderIgnoreLineNo ) 
 + public void setHeaderIgnoreLineNo ( int aHeaderIgnoreLineNo ) 
 { 
 mHeaderIgnoreLineNo = aHeaderIgnoreLineNo ; 
 } 
 @ @ - 598 , 7 + 598 , 7 @ @ class Configuration 
 / * * 
 * @ param aCacheFile name of cache file 
 * / 
 - void setCacheFile ( String aCacheFile ) 
 + public void setCacheFile ( String aCacheFile ) 
 { 
 mCacheFile = aCacheFile ; 
 }
