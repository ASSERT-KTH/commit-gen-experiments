BLEU SCORE: 0.025831124391916538

TEST MSG: minor : Jenkins pipeline : timestamps , retries , volumes cleanup
GENERATED MSG: Issue # 5953 : Setup ' mvn compile ' and ' mvn package ' builds in Jenkins

TEST DIFF (one line): diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index 9fe5386 . . 0d86c91 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 43 , 18 + 43 , 28 @ @ def getCauseDescription ( def build ) { <nl> return getCause ( build ) . shortDescription <nl> } <nl> <nl> - / / See more about Hyper container size at https : / / hyper . sh / pricing . html <nl> + / / See more about Hyper container sizes at https : / / hyper . sh / pricing . html <nl> def runOnHyper ( HyperSize size , String mavenOpts , String command ) { <nl> <nl> String name = UUID . randomUUID ( ) <nl> <nl> - dir ( " $ { WORKSPACE } / " ) { <nl> - sh " hyper run - - name ' $ { name } ' - - size = $ { size . toString ( ) } - - cidfile $ { name } . cid " + <nl> - " - - noauto - volume - - restart = no - - rm - i - e MAVEN _ OPTS = ' $ { mavenOpts } ' " + <nl> - " - v \ $ ( pwd ) : / usr / local / checkstyle / " + <nl> - " checkstyle / maven - builder - image : jdk - 8u162b12 - maven - 3 . 5 . 3 - groovy - 2 . 4 . 15 " + <nl> - " bash - c ' $ { command } ' " <nl> + image = ' checkstyle / maven - builder - image : jdk - 8u162b12 - maven - 3 . 5 . 3 - groovy - 2 . 4 . 15 ' <nl> + containerTTL = 1800 / / sec <nl> + <nl> + echo GREEN ( " To try this build locally , execute the following command : [ $ command ] " ) <nl> + <nl> + / / 1 . Start empty Hyper container with timeout and let it put it ' s id to the file for further use <nl> + retry ( 3 ) { <nl> + sh " hyper - l = warn run - d - - name ' $ { name } ' - - size = $ { size . toString ( ) } - - cidfile $ { name } . cid " + <nl> + " - - noauto - volume - - restart = no - v \ $ ( pwd ) : / usr / local / checkstyle / " + <nl> + " - e MAVEN _ OPTS = ' $ { mavenOpts } ' $ { image } sleep ' $ { containerTTL } ' " <nl> } <nl> + <nl> + / / 2 . Run the build command inside the container <nl> + sh " hyper - l = info exec - i ' $ { name } ' bash - c ' $ { command } ' " <nl> + <nl> + / / 3 . Cleanup the container as soon as after build finish <nl> + sh " hyper rm - fv ' $ { name } ' | cat " <nl> } <nl> <nl> def runOnHyperS4 ( String command ) { <nl> @ @ - 77 , 6 + 87 , 7 @ @ pipeline { <nl> <nl> options { <nl> ansiColor ( ' xterm ' ) <nl> + timestamps ( ) <nl> } <nl> <nl> stages { <nl> @ @ - 136 , 7 + 147 , 7 @ @ pipeline { <nl> post { <nl> always { <nl> / / Cleanup any Hyper . sh containers left by the build , if any <nl> - sh " ls | grep ' . cid ' | xargs - I { } bash - c ' cat { } ; echo ' | xargs - I { } hyper rm - f { } | : " <nl> + sh " ls | grep ' . cid ' | xargs - I { } bash - c ' cat { } ; echo ' | xargs - I { } hyper rm - fv { } | cat " <nl> <nl> / / Clean up workspace <nl> deleteDir ( )
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> index 343559c . . a3789c6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> @ @ - 29 , 10 + 29 , 14 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtil ; <nl> <nl> / * * <nl> * < p > <nl> - * Checks that method and { @ code catch } parameter names conform to a format specified <nl> + * Checks that method parameter names conform to a format specified <nl> * by the format property . By using { @ code accessModifiers } property it is possible <nl> * to specify different formats for methods at different visibility levels . <nl> * < / p > <nl> + * < p > <nl> + * To validate { @ code catch } parameters please use <nl> + * < a href = " # CatchParameterName " > CatchParameterName < / a > . <nl> + * < / p > <nl> * < ul > <nl> * < li > <nl> * Property { @ code format } - Specifies valid identifiers . Default value is <nl> diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index a618714 . . 98b985a 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 1362 , 10 + 1362 , 14 @ @ class MyClass { <nl> < p > Since Checkstyle 3 . 0 < / p > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks that method and < code > catch < / code > parameter names conform to a format specified <nl> + Checks that method parameter names conform to a format specified <nl> by the format property . By using < code > accessModifiers < / code > property it is possible <nl> to specify different formats for methods at different visibility levels . <nl> < / p > <nl> + < p > <nl> + To validate < code > catch < / code > parameters please use <nl> + < a href = " # CatchParameterName " > CatchParameterName < / a > . <nl> + < / p > <nl> < / subsection > <nl> <nl> < subsection name = " Properties " >

TEST DIFF:
diff - - git a / Jenkinsfile b / Jenkinsfile 
 index 9fe5386 . . 0d86c91 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 43 , 18 + 43 , 28 @ @ def getCauseDescription ( def build ) { 
 return getCause ( build ) . shortDescription 
 } 
 
 - / / See more about Hyper container size at https : / / hyper . sh / pricing . html 
 + / / See more about Hyper container sizes at https : / / hyper . sh / pricing . html 
 def runOnHyper ( HyperSize size , String mavenOpts , String command ) { 
 
 String name = UUID . randomUUID ( ) 
 
 - dir ( " $ { WORKSPACE } / " ) { 
 - sh " hyper run - - name ' $ { name } ' - - size = $ { size . toString ( ) } - - cidfile $ { name } . cid " + 
 - " - - noauto - volume - - restart = no - - rm - i - e MAVEN _ OPTS = ' $ { mavenOpts } ' " + 
 - " - v \ $ ( pwd ) : / usr / local / checkstyle / " + 
 - " checkstyle / maven - builder - image : jdk - 8u162b12 - maven - 3 . 5 . 3 - groovy - 2 . 4 . 15 " + 
 - " bash - c ' $ { command } ' " 
 + image = ' checkstyle / maven - builder - image : jdk - 8u162b12 - maven - 3 . 5 . 3 - groovy - 2 . 4 . 15 ' 
 + containerTTL = 1800 / / sec 
 + 
 + echo GREEN ( " To try this build locally , execute the following command : [ $ command ] " ) 
 + 
 + / / 1 . Start empty Hyper container with timeout and let it put it ' s id to the file for further use 
 + retry ( 3 ) { 
 + sh " hyper - l = warn run - d - - name ' $ { name } ' - - size = $ { size . toString ( ) } - - cidfile $ { name } . cid " + 
 + " - - noauto - volume - - restart = no - v \ $ ( pwd ) : / usr / local / checkstyle / " + 
 + " - e MAVEN _ OPTS = ' $ { mavenOpts } ' $ { image } sleep ' $ { containerTTL } ' " 
 } 
 + 
 + / / 2 . Run the build command inside the container 
 + sh " hyper - l = info exec - i ' $ { name } ' bash - c ' $ { command } ' " 
 + 
 + / / 3 . Cleanup the container as soon as after build finish 
 + sh " hyper rm - fv ' $ { name } ' | cat " 
 } 
 
 def runOnHyperS4 ( String command ) { 
 @ @ - 77 , 6 + 87 , 7 @ @ pipeline { 
 
 options { 
 ansiColor ( ' xterm ' ) 
 + timestamps ( ) 
 } 
 
 stages { 
 @ @ - 136 , 7 + 147 , 7 @ @ pipeline { 
 post { 
 always { 
 / / Cleanup any Hyper . sh containers left by the build , if any 
 - sh " ls | grep ' . cid ' | xargs - I { } bash - c ' cat { } ; echo ' | xargs - I { } hyper rm - f { } | : " 
 + sh " ls | grep ' . cid ' | xargs - I { } bash - c ' cat { } ; echo ' | xargs - I { } hyper rm - fv { } | cat " 
 
 / / Clean up workspace 
 deleteDir ( )

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 index 343559c . . a3789c6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 @ @ - 29 , 10 + 29 , 14 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtil ; 
 
 / * * 
 * < p > 
 - * Checks that method and { @ code catch } parameter names conform to a format specified 
 + * Checks that method parameter names conform to a format specified 
 * by the format property . By using { @ code accessModifiers } property it is possible 
 * to specify different formats for methods at different visibility levels . 
 * < / p > 
 + * < p > 
 + * To validate { @ code catch } parameters please use 
 + * < a href = " # CatchParameterName " > CatchParameterName < / a > . 
 + * < / p > 
 * < ul > 
 * < li > 
 * Property { @ code format } - Specifies valid identifiers . Default value is 
 diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index a618714 . . 98b985a 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 1362 , 10 + 1362 , 14 @ @ class MyClass { 
 < p > Since Checkstyle 3 . 0 < / p > 
 < subsection name = " Description " > 
 < p > 
 - Checks that method and < code > catch < / code > parameter names conform to a format specified 
 + Checks that method parameter names conform to a format specified 
 by the format property . By using < code > accessModifiers < / code > property it is possible 
 to specify different formats for methods at different visibility levels . 
 < / p > 
 + < p > 
 + To validate < code > catch < / code > parameters please use 
 + < a href = " # CatchParameterName " > CatchParameterName < / a > . 
 + < / p > 
 < / subsection > 
 
 < subsection name = " Properties " >
