BLEU SCORE: 0.0334950357084578

TEST MSG: minor : change constructor assertion to return result
GENERATED MSG: Issue # 4592 : Added more tests which extend AbstractPathTestSupport and AbstractModuleTestSupport

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> index c90447b . . c01a3df 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> @ @ - 19 , 7 + 19 , 8 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> + import static org . junit . Assert . assertTrue ; <nl> <nl> import java . io . File ; <nl> import java . nio . charset . StandardCharsets ; <nl> @ @ - 42 , 7 + 43 , 8 @ @ public class AstTreeStringPrinterTest extends AbstractTreeTestSupport { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( AstTreeStringPrinter . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( AstTreeStringPrinter . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java <nl> index 995f1b0 . . 1f67890 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java <nl> @ @ - 19 , 13 + 19 , 15 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> + import static org . junit . Assert . assertTrue ; <nl> <nl> import org . junit . Test ; <nl> <nl> public class DefinitionsTest { <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( Definitions . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( Definitions . class , true ) ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java <nl> index db681e3 . . 0b4bcd2 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java <nl> @ @ - 23 , 8 + 23 , 9 @ @ import static com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . MSG _ JAVADO <nl> import static com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . MSG _ JAVADOC _ PARSE _ RULE _ ERROR ; <nl> import static com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . MSG _ JAVADOC _ WRONG _ SINGLETON _ TAG ; <nl> import static com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . ParseErrorMessage ; <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertTrue ; <nl> <nl> import java . io . File ; <nl> import java . lang . reflect . Method ; <nl> @ @ - 52 , 7 + 53 , 8 @ @ public class DetailNodeTreeStringPrinterTest extends AbstractTreeTestSupport { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( DetailNodeTreeStringPrinter . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( DetailNodeTreeStringPrinter . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index e96438e . . 9eb923c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertNotEquals ; <nl> @ @ - 163 , 7 + 163 , 8 @ @ public class MainTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( Main . class , false ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( Main . class , false ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java <nl> index 790096f . . cf12e18 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> @ @ - 50 , 8 + 50 , 8 @ @ public class AbstractLoaderTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( <nl> - AbstractLoader . FeaturesForVerySecureJavaInstallations . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , isUtilsClassHasPrivateConstructor ( <nl> + AbstractLoader . FeaturesForVerySecureJavaInstallations . class , true ) ) ; <nl> } <nl> <nl> private static final class DummyLoader extends AbstractLoader { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java <nl> index 190565c . . 6d5419c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java <nl> @ @ - 19 , 13 + 19 , 15 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> + import static org . junit . Assert . assertTrue ; <nl> <nl> import org . junit . Test ; <nl> <nl> public class JavadocTokenTypesTest { <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( JavadocTokenTypes . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( JavadocTokenTypes . class , true ) ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java <nl> index ae5924b . . 0c79e2d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java <nl> @ @ - 19 , 8 + 19 , 9 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertTrue ; <nl> <nl> import org . junit . Test ; <nl> <nl> @ @ - 56 , 6 + 57 , 7 @ @ public class TokenTypesTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( TokenTypes . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( TokenTypes . class , true ) ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> index 4c8f912 . . 87801cf 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> @ @ - 212 , 7 + 212 , 8 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { <nl> <nl> @ Test <nl> public void testBlockCommentPositionHasPrivateConstr ( ) throws Exception { <nl> - TestUtils . assertUtilsClassHasPrivateConstructor ( BlockCommentPosition . class , true ) ; <nl> + Assert . assertTrue ( " Constructor is not private " , <nl> + TestUtils . isUtilsClassHasPrivateConstructor ( BlockCommentPosition . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java <nl> index 0ad4fc3 . . 85684be 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . javadoc . utils ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertTrue ; <nl> <nl> import java . util . List ; <nl> <nl> @ @ - 34 , 7 + 35 , 8 @ @ public class BlockTagUtilsTest { <nl> <nl> @ Test <nl> public void testHasPrivateConstructor ( ) throws Exception { <nl> - TestUtils . assertUtilsClassHasPrivateConstructor ( BlockTagUtils . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + TestUtils . isUtilsClassHasPrivateConstructor ( BlockTagUtils . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java <nl> index da925c8 . . c46300e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java <nl> @ @ - 36 , 7 + 36 , 8 @ @ public class InlineTagUtilsTest { <nl> <nl> @ Test <nl> public void testHasPrivateConstructor ( ) throws Exception { <nl> - TestUtils . assertUtilsClassHasPrivateConstructor ( InlineTagUtils . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + TestUtils . isUtilsClassHasPrivateConstructor ( InlineTagUtils . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> index c2eafe1 . . 244777a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . doclets ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> @ @ - 53 , 7 + 53 , 8 @ @ public class TokenTypesDocletTest extends AbstractPathTestSupport { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( TokenTypesDoclet . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( TokenTypesDoclet . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java <nl> index 602d3fc . . 8ad6444 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java <nl> @ @ - 30 , 8 + 30 , 6 @ @ import java . util . Optional ; <nl> import java . util . Set ; <nl> import java . util . function . Predicate ; <nl> <nl> - import org . junit . Assert ; <nl> - <nl> import antlr . ANTLRException ; <nl> import com . puppycrawl . tools . checkstyle . PackageNamesLoader ; <nl> import com . puppycrawl . tools . checkstyle . PackageObjectFactory ; <nl> @ @ - 52 , 17 + 50 , 23 @ @ public final class TestUtils { <nl> * @ param checkConstructorIsPrivate flag to skip check for private visibility , it is useful <nl> * for Classes that are mocked by PowerMockRunner that make <nl> * private c - tors as public <nl> + * @ return true if constructor is expected . <nl> * @ noinspection BooleanParameter <nl> * / <nl> - public static void assertUtilsClassHasPrivateConstructor ( final Class < ? > utilClass , <nl> + public static boolean isUtilsClassHasPrivateConstructor ( final Class < ? > utilClass , <nl> boolean checkConstructorIsPrivate ) <nl> throws ReflectiveOperationException { <nl> final Constructor < ? > constructor = utilClass . getDeclaredConstructor ( ) ; <nl> + final boolean result ; <nl> if ( checkConstructorIsPrivate & & ! Modifier . isPrivate ( constructor . getModifiers ( ) ) ) { <nl> - Assert . fail ( " Constructor is not private " ) ; <nl> + result = false ; <nl> + } <nl> + else { <nl> + constructor . setAccessible ( true ) ; <nl> + constructor . newInstance ( ) ; <nl> + result = true ; <nl> } <nl> - constructor . setAccessible ( true ) ; <nl> - constructor . newInstance ( ) ; <nl> + return result ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java <nl> index 0371dc4 . . c548129 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . utils ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> @ @ - 36 , 7 + 36 , 7 @ @ public class AnnotationUtilityTest { <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> try { <nl> - assertUtilsClassHasPrivateConstructor ( AnnotationUtility . class , true ) ; <nl> + isUtilsClassHasPrivateConstructor ( AnnotationUtility . class , true ) ; <nl> } <nl> catch ( InvocationTargetException ex ) { <nl> assertEquals ( " Invalid exception message " , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java <nl> index 764180d . . 2c119a1 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java <nl> @ @ - 19 , 8 + 19 , 8 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . utils ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> import static com . puppycrawl . tools . checkstyle . internal . TestUtils . findTokenInAstByPredicate ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static com . puppycrawl . tools . checkstyle . internal . TestUtils . parseFile ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> @ @ - 50 , 7 + 50 , 8 @ @ public class CheckUtilsTest extends AbstractPathTestSupport { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( CheckUtils . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( CheckUtils . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java <nl> index 1e786e8 . . 85538ed 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . utils ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertSame ; <nl> @ @ - 54 , 7 + 54 , 8 @ @ public class CommonUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( CommonUtils . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( CommonUtils . class , true ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java <nl> index 127463e . . 598eb60 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . utils ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> @ @ - 221 , 7 + 221 , 8 @ @ public class JavadocUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( JavadocUtils . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( JavadocUtils . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java <nl> index bf92f2b . . 9a0696b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . utils ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> @ @ - 46 , 7 + 46 , 8 @ @ public class ModuleReflectionUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( ModuleReflectionUtils . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( ModuleReflectionUtils . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java <nl> index ee08054 . . 9a72d56 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . utils ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> @ @ - 34 , 7 + 34 , 8 @ @ public class ScopeUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( ScopeUtils . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( ScopeUtils . class , true ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java <nl> index 5b06e97 . . c3e62a8 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . utils ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> @ @ - 38 , 7 + 38 , 8 @ @ public class TokenUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( TokenUtils . class , true ) ; <nl> + assertTrue ( " Constructor is not private " , <nl> + isUtilsClassHasPrivateConstructor ( TokenUtils . class , true ) ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index a6918a9 . . 24a0850 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 152 , 7 + 152 , 7 @ @ <nl> < module name = " SuppressWarnings " > <nl> < property name = " format " value = " ^ ( ( ? ! unchecked | deprecation | rawtypes ) . ) * $ " / > <nl> < message key = " suppressed . warning . not . allowed " <nl> - value = " The warning ' ' { 0 } ' ' cannot be suppressed at this location . If you try to suppress IntelliJ IDEA inspection , please use javadoc block tag @ noinspection " <nl> + value = " The warning ' ' { 0 } ' ' cannot be suppressed at this location . Only few javac warnings are allowed to suppress . If try to suppress checkstyle / pmd / . . . . . violation please do this in their config file . If you try to suppress IntelliJ IDEA inspection , please use javadoc block tag @ noinspection " <nl> / > <nl> < / module > <nl> < module name = " SuppressWarningsHolder " / >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 index c90447b . . c01a3df 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 @ @ - 19 , 7 + 19 , 8 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 + import static org . junit . Assert . assertTrue ; 
 
 import java . io . File ; 
 import java . nio . charset . StandardCharsets ; 
 @ @ - 42 , 7 + 43 , 8 @ @ public class AstTreeStringPrinterTest extends AbstractTreeTestSupport { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( AstTreeStringPrinter . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( AstTreeStringPrinter . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java 
 index 995f1b0 . . 1f67890 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java 
 @ @ - 19 , 13 + 19 , 15 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 + import static org . junit . Assert . assertTrue ; 
 
 import org . junit . Test ; 
 
 public class DefinitionsTest { 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( Definitions . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( Definitions . class , true ) ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java 
 index db681e3 . . 0b4bcd2 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java 
 @ @ - 23 , 8 + 23 , 9 @ @ import static com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . MSG _ JAVADO 
 import static com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . MSG _ JAVADOC _ PARSE _ RULE _ ERROR ; 
 import static com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . MSG _ JAVADOC _ WRONG _ SINGLETON _ TAG ; 
 import static com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . ParseErrorMessage ; 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 + import static org . junit . Assert . assertTrue ; 
 
 import java . io . File ; 
 import java . lang . reflect . Method ; 
 @ @ - 52 , 7 + 53 , 8 @ @ public class DetailNodeTreeStringPrinterTest extends AbstractTreeTestSupport { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( DetailNodeTreeStringPrinter . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( DetailNodeTreeStringPrinter . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index e96438e . . 9eb923c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertNotEquals ; 
 @ @ - 163 , 7 + 163 , 8 @ @ public class MainTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( Main . class , false ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( Main . class , false ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java 
 index 790096f . . cf12e18 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 
 @ @ - 50 , 8 + 50 , 8 @ @ public class AbstractLoaderTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( 
 - AbstractLoader . FeaturesForVerySecureJavaInstallations . class , true ) ; 
 + assertTrue ( " Constructor is not private " , isUtilsClassHasPrivateConstructor ( 
 + AbstractLoader . FeaturesForVerySecureJavaInstallations . class , true ) ) ; 
 } 
 
 private static final class DummyLoader extends AbstractLoader { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java 
 index 190565c . . 6d5419c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java 
 @ @ - 19 , 13 + 19 , 15 @ @ 
 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 + import static org . junit . Assert . assertTrue ; 
 
 import org . junit . Test ; 
 
 public class JavadocTokenTypesTest { 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( JavadocTokenTypes . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( JavadocTokenTypes . class , true ) ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java 
 index ae5924b . . 0c79e2d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java 
 @ @ - 19 , 8 + 19 , 9 @ @ 
 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 + import static org . junit . Assert . assertTrue ; 
 
 import org . junit . Test ; 
 
 @ @ - 56 , 6 + 57 , 7 @ @ public class TokenTypesTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( TokenTypes . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( TokenTypes . class , true ) ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 index 4c8f912 . . 87801cf 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 @ @ - 212 , 7 + 212 , 8 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { 
 
 @ Test 
 public void testBlockCommentPositionHasPrivateConstr ( ) throws Exception { 
 - TestUtils . assertUtilsClassHasPrivateConstructor ( BlockCommentPosition . class , true ) ; 
 + Assert . assertTrue ( " Constructor is not private " , 
 + TestUtils . isUtilsClassHasPrivateConstructor ( BlockCommentPosition . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java 
 index 0ad4fc3 . . 85684be 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . javadoc . utils ; 
 
 import static org . junit . Assert . assertEquals ; 
 + import static org . junit . Assert . assertTrue ; 
 
 import java . util . List ; 
 
 @ @ - 34 , 7 + 35 , 8 @ @ public class BlockTagUtilsTest { 
 
 @ Test 
 public void testHasPrivateConstructor ( ) throws Exception { 
 - TestUtils . assertUtilsClassHasPrivateConstructor ( BlockTagUtils . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + TestUtils . isUtilsClassHasPrivateConstructor ( BlockTagUtils . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java 
 index da925c8 . . c46300e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java 
 @ @ - 36 , 7 + 36 , 8 @ @ public class InlineTagUtilsTest { 
 
 @ Test 
 public void testHasPrivateConstructor ( ) throws Exception { 
 - TestUtils . assertUtilsClassHasPrivateConstructor ( InlineTagUtils . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + TestUtils . isUtilsClassHasPrivateConstructor ( InlineTagUtils . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 index c2eafe1 . . 244777a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . doclets ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 @ @ - 53 , 7 + 53 , 8 @ @ public class TokenTypesDocletTest extends AbstractPathTestSupport { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( TokenTypesDoclet . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( TokenTypesDoclet . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java 
 index 602d3fc . . 8ad6444 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java 
 @ @ - 30 , 8 + 30 , 6 @ @ import java . util . Optional ; 
 import java . util . Set ; 
 import java . util . function . Predicate ; 
 
 - import org . junit . Assert ; 
 - 
 import antlr . ANTLRException ; 
 import com . puppycrawl . tools . checkstyle . PackageNamesLoader ; 
 import com . puppycrawl . tools . checkstyle . PackageObjectFactory ; 
 @ @ - 52 , 17 + 50 , 23 @ @ public final class TestUtils { 
 * @ param checkConstructorIsPrivate flag to skip check for private visibility , it is useful 
 * for Classes that are mocked by PowerMockRunner that make 
 * private c - tors as public 
 + * @ return true if constructor is expected . 
 * @ noinspection BooleanParameter 
 * / 
 - public static void assertUtilsClassHasPrivateConstructor ( final Class < ? > utilClass , 
 + public static boolean isUtilsClassHasPrivateConstructor ( final Class < ? > utilClass , 
 boolean checkConstructorIsPrivate ) 
 throws ReflectiveOperationException { 
 final Constructor < ? > constructor = utilClass . getDeclaredConstructor ( ) ; 
 + final boolean result ; 
 if ( checkConstructorIsPrivate & & ! Modifier . isPrivate ( constructor . getModifiers ( ) ) ) { 
 - Assert . fail ( " Constructor is not private " ) ; 
 + result = false ; 
 + } 
 + else { 
 + constructor . setAccessible ( true ) ; 
 + constructor . newInstance ( ) ; 
 + result = true ; 
 } 
 - constructor . setAccessible ( true ) ; 
 - constructor . newInstance ( ) ; 
 + return result ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java 
 index 0371dc4 . . c548129 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . utils ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 
 @ @ - 36 , 7 + 36 , 7 @ @ public class AnnotationUtilityTest { 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 try { 
 - assertUtilsClassHasPrivateConstructor ( AnnotationUtility . class , true ) ; 
 + isUtilsClassHasPrivateConstructor ( AnnotationUtility . class , true ) ; 
 } 
 catch ( InvocationTargetException ex ) { 
 assertEquals ( " Invalid exception message " , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java 
 index 764180d . . 2c119a1 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java 
 @ @ - 19 , 8 + 19 , 8 @ @ 
 
 package com . puppycrawl . tools . checkstyle . utils ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 import static com . puppycrawl . tools . checkstyle . internal . TestUtils . findTokenInAstByPredicate ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static com . puppycrawl . tools . checkstyle . internal . TestUtils . parseFile ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 @ @ - 50 , 7 + 50 , 8 @ @ public class CheckUtilsTest extends AbstractPathTestSupport { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( CheckUtils . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( CheckUtils . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java 
 index 1e786e8 . . 85538ed 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . utils ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertSame ; 
 @ @ - 54 , 7 + 54 , 8 @ @ public class CommonUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( CommonUtils . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( CommonUtils . class , true ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java 
 index 127463e . . 598eb60 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . utils ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 @ @ - 221 , 7 + 221 , 8 @ @ public class JavadocUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( JavadocUtils . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( JavadocUtils . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java 
 index bf92f2b . . 9a0696b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . utils ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 
 @ @ - 46 , 7 + 46 , 8 @ @ public class ModuleReflectionUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( ModuleReflectionUtils . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( ModuleReflectionUtils . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java 
 index ee08054 . . 9a72d56 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . utils ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 @ @ - 34 , 7 + 34 , 8 @ @ public class ScopeUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( ScopeUtils . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( ScopeUtils . class , true ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java 
 index 5b06e97 . . c3e62a8 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . utils ; 
 
 - import static com . puppycrawl . tools . checkstyle . internal . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + import static com . puppycrawl . tools . checkstyle . internal . TestUtils . isUtilsClassHasPrivateConstructor ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 @ @ - 38 , 7 + 38 , 8 @ @ public class TokenUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( TokenUtils . class , true ) ; 
 + assertTrue ( " Constructor is not private " , 
 + isUtilsClassHasPrivateConstructor ( TokenUtils . class , true ) ) ; 
 } 
 
 @ Test

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index a6918a9 . . 24a0850 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 152 , 7 + 152 , 7 @ @ 
 < module name = " SuppressWarnings " > 
 < property name = " format " value = " ^ ( ( ? ! unchecked | deprecation | rawtypes ) . ) * $ " / > 
 < message key = " suppressed . warning . not . allowed " 
 - value = " The warning ' ' { 0 } ' ' cannot be suppressed at this location . If you try to suppress IntelliJ IDEA inspection , please use javadoc block tag @ noinspection " 
 + value = " The warning ' ' { 0 } ' ' cannot be suppressed at this location . Only few javac warnings are allowed to suppress . If try to suppress checkstyle / pmd / . . . . . violation please do this in their config file . If you try to suppress IntelliJ IDEA inspection , please use javadoc block tag @ noinspection " 
 / > 
 < / module > 
 < module name = " SuppressWarningsHolder " / >
