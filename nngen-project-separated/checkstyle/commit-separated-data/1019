BLEU SCORE: 0.06959578721753987

TEST MSG: config : travis deploy as refactored to use ' - Pno - validations '
GENERATED MSG: minor : ' - Dxml . skip = true ' was added to deploy stage

TEST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index 95c4567 . . 49f9056 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 306 , 7 + 306 , 5 @ @ after _ success : <nl> & & $ DEPLOY = = ' true ' <nl> ] ] ; <nl> then <nl> - mvn - s config / deploy - settings . xml deploy \ <nl> - - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true \ <nl> - - Dcobertura . skip = true - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dxml . skip = true ; <nl> + mvn - s config / deploy - settings . xml - Pno - validations deploy ; <nl> fi
NEAREST DIFF (one line): diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 <nl> index e91b710 . . 4f2efe9 100755 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 <nl> @ @ - 80 , 7 + 80 , 7 @ @ JAVADOC _ INLINE _ TAG _ END : ' } ' { insideJavadocInlineTag > 0 } ? <nl> { insideJavadocInlineTag - - ; recognizeXmlTags = true ; } <nl> ; <nl> <nl> - CUSTOM _ NAME : ' @ ' [ a - zA - Z0 - 9 ] + { isJavadocTagAvailable } ? ; <nl> + CUSTOM _ NAME : ' @ ' [ a - zA - Z0 - 9 : . _ - ] + { isJavadocTagAvailable } ? ; <nl> <nl> LITERAL _ INCLUDE : ' include ' { previousToPreviousTokenType = = SERIAL _ LITERAL } ? ; <nl> LITERAL _ EXCLUDE : ' exclude ' { previousToPreviousTokenType = = SERIAL _ LITERAL } ? ; <nl> @ @ - 223 , 7 + 223 , 7 @ @ LINK _ LITERAL : ' @ link ' - > pushMode ( seeLink ) ; <nl> LINKPLAIN _ LITERAL : ' @ linkplain ' - > pushMode ( seeLink ) ; <nl> LITERAL _ LITERAL : ' @ literal ' { recognizeXmlTags = false ; } - > mode ( code ) ; <nl> VALUE _ LITERAL : ' @ value ' - > pushMode ( value ) ; <nl> - CustomName1 : ' @ ' [ a - zA - Z0 - 9 ] + - > type ( CUSTOM _ NAME ) , mode ( DEFAULT _ MODE ) ; <nl> + CustomName1 : ' @ ' [ a - zA - Z0 - 9 : . _ - ] + - > type ( CUSTOM _ NAME ) , mode ( DEFAULT _ MODE ) ; <nl> Char6 : . - > type ( CHAR ) , mode ( DEFAULT _ MODE ) ; <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> mode code ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> index d7d92ab . . 9d2c865 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> @ @ - 278 , 6 + 278 , 15 @ @ public class JavadocParseTreeTest { <nl> compareTrees ( expectedTree , generatedTree ) ; <nl> } <nl> <nl> + @ Test <nl> + public void dotCharacterInCustomTags ( ) <nl> + throws IOException { <nl> + final String filename = getDocPath ( " InputCustomTagWithDot . txt " ) ; <nl> + final ParseTree generatedTree = parseJavadoc ( getFileContent ( new File ( filename ) ) ) ; <nl> + final ParseTree expectedTree = ParseTreeBuilder . treeCustomTagWithDot ( ) ; <nl> + compareTrees ( expectedTree , generatedTree ) ; <nl> + } <nl> + <nl> private void compareTrees ( ParseTree first , ParseTree second ) { <nl> Assert . assertEquals ( first . toStringTree ( parser ) , second . toStringTree ( parser ) ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java <nl> index b3a0930 . . b7dee47 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java <nl> @ @ - 5715 , 5 + 5715 , 61 @ @ final class ParseTreeBuilder { <nl> javadocContext0 . addChild ( eof0 ) ; <nl> return javadocContext0 ; <nl> } <nl> + <nl> + public static ParseTree treeCustomTagWithDot ( ) <nl> + { <nl> + JavadocContext javadocContext0 = new JavadocContext ( null , 0 ) ; <nl> + JavadocTagContext javadocTagContext0 = new JavadocTagContext ( javadocContext0 , 0 ) ; <nl> + CommonToken customName0 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ ejb : bean " ) ; <nl> + javadocTagContext0 . addChild ( customName0 ) ; <nl> + CommonToken newline0 = new CommonToken ( JavadocTokenTypes . NEWLINE , LINE _ SEPARATOR ) ; <nl> + javadocTagContext0 . addChild ( newline0 ) ; <nl> + javadocContext0 . addChild ( javadocTagContext0 ) ; <nl> + JavadocTagContext javadocTagContext1 = new JavadocTagContext ( javadocContext0 , 0 ) ; <nl> + CommonToken customName1 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ hibernate . property " ) ; <nl> + javadocTagContext1 . addChild ( customName1 ) ; <nl> + CommonToken ws0 = new CommonToken ( JavadocTokenTypes . WS , " " ) ; <nl> + javadocTagContext1 . addChild ( ws0 ) ; <nl> + DescriptionContext descriptionContext0 = new DescriptionContext ( javadocTagContext1 , 0 ) ; <nl> + TextContext textContext0 = new TextContext ( descriptionContext0 , 0 ) ; <nl> + CommonToken char0 = new CommonToken ( JavadocTokenTypes . CHAR , " m " ) ; <nl> + textContext0 . addChild ( char0 ) ; <nl> + CommonToken char1 = new CommonToken ( JavadocTokenTypes . CHAR , " y " ) ; <nl> + textContext0 . addChild ( char1 ) ; <nl> + CommonToken char2 = new CommonToken ( JavadocTokenTypes . CHAR , " p " ) ; <nl> + textContext0 . addChild ( char2 ) ; <nl> + CommonToken char3 = new CommonToken ( JavadocTokenTypes . CHAR , " r " ) ; <nl> + textContext0 . addChild ( char3 ) ; <nl> + CommonToken char4 = new CommonToken ( JavadocTokenTypes . CHAR , " o " ) ; <nl> + textContext0 . addChild ( char4 ) ; <nl> + CommonToken char5 = new CommonToken ( JavadocTokenTypes . CHAR , " p " ) ; <nl> + textContext0 . addChild ( char5 ) ; <nl> + CommonToken char6 = new CommonToken ( JavadocTokenTypes . CHAR , " e " ) ; <nl> + textContext0 . addChild ( char6 ) ; <nl> + CommonToken char7 = new CommonToken ( JavadocTokenTypes . CHAR , " r " ) ; <nl> + textContext0 . addChild ( char7 ) ; <nl> + CommonToken char8 = new CommonToken ( JavadocTokenTypes . CHAR , " t " ) ; <nl> + textContext0 . addChild ( char8 ) ; <nl> + CommonToken char9 = new CommonToken ( JavadocTokenTypes . CHAR , " y " ) ; <nl> + textContext0 . addChild ( char9 ) ; <nl> + descriptionContext0 . addChild ( textContext0 ) ; <nl> + CommonToken newline1 = new CommonToken ( JavadocTokenTypes . NEWLINE , LINE _ SEPARATOR ) ; <nl> + descriptionContext0 . addChild ( newline1 ) ; <nl> + javadocTagContext1 . addChild ( descriptionContext0 ) ; <nl> + javadocContext0 . addChild ( javadocTagContext1 ) ; <nl> + JavadocTagContext javadocTagContext2 = new JavadocTagContext ( javadocContext0 , 0 ) ; <nl> + CommonToken customName2 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ weblogic . cache - ref " ) ; <nl> + javadocTagContext2 . addChild ( customName2 ) ; <nl> + CommonToken newline2 = new CommonToken ( JavadocTokenTypes . NEWLINE , LINE _ SEPARATOR ) ; <nl> + javadocTagContext2 . addChild ( newline2 ) ; <nl> + javadocContext0 . addChild ( javadocTagContext2 ) ; <nl> + JavadocTagContext javadocTagContext3 = new JavadocTagContext ( javadocContext0 , 0 ) ; <nl> + CommonToken customName3 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ my _ tag " ) ; <nl> + javadocTagContext3 . addChild ( customName3 ) ; <nl> + javadocContext0 . addChild ( javadocTagContext3 ) ; <nl> + CommonToken eof0 = new CommonToken ( JavadocTokenTypes . EOF , " < EOF > " ) ; <nl> + javadocContext0 . addChild ( eof0 ) ; <nl> + return javadocContext0 ; <nl> + } <nl> <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputCustomTagWithDot . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputCustomTagWithDot . txt <nl> new file mode 100644 <nl> index 0000000 . . 8401dfe <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputCustomTagWithDot . txt <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + @ ejb : bean <nl> + @ hibernate . property myproperty <nl> + @ weblogic . cache - ref <nl> + @ my _ tag <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index 95c4567 . . 49f9056 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 306 , 7 + 306 , 5 @ @ after _ success : 
 & & $ DEPLOY = = ' true ' 
 ] ] ; 
 then 
 - mvn - s config / deploy - settings . xml deploy \ 
 - - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true \ 
 - - Dcobertura . skip = true - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true - Dxml . skip = true ; 
 + mvn - s config / deploy - settings . xml - Pno - validations deploy ; 
 fi

NEAREST DIFF:
diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 
 index e91b710 . . 4f2efe9 100755 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocLexer . g4 
 @ @ - 80 , 7 + 80 , 7 @ @ JAVADOC _ INLINE _ TAG _ END : ' } ' { insideJavadocInlineTag > 0 } ? 
 { insideJavadocInlineTag - - ; recognizeXmlTags = true ; } 
 ; 
 
 - CUSTOM _ NAME : ' @ ' [ a - zA - Z0 - 9 ] + { isJavadocTagAvailable } ? ; 
 + CUSTOM _ NAME : ' @ ' [ a - zA - Z0 - 9 : . _ - ] + { isJavadocTagAvailable } ? ; 
 
 LITERAL _ INCLUDE : ' include ' { previousToPreviousTokenType = = SERIAL _ LITERAL } ? ; 
 LITERAL _ EXCLUDE : ' exclude ' { previousToPreviousTokenType = = SERIAL _ LITERAL } ? ; 
 @ @ - 223 , 7 + 223 , 7 @ @ LINK _ LITERAL : ' @ link ' - > pushMode ( seeLink ) ; 
 LINKPLAIN _ LITERAL : ' @ linkplain ' - > pushMode ( seeLink ) ; 
 LITERAL _ LITERAL : ' @ literal ' { recognizeXmlTags = false ; } - > mode ( code ) ; 
 VALUE _ LITERAL : ' @ value ' - > pushMode ( value ) ; 
 - CustomName1 : ' @ ' [ a - zA - Z0 - 9 ] + - > type ( CUSTOM _ NAME ) , mode ( DEFAULT _ MODE ) ; 
 + CustomName1 : ' @ ' [ a - zA - Z0 - 9 : . _ - ] + - > type ( CUSTOM _ NAME ) , mode ( DEFAULT _ MODE ) ; 
 Char6 : . - > type ( CHAR ) , mode ( DEFAULT _ MODE ) ; 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 mode code ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 index d7d92ab . . 9d2c865 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 @ @ - 278 , 6 + 278 , 15 @ @ public class JavadocParseTreeTest { 
 compareTrees ( expectedTree , generatedTree ) ; 
 } 
 
 + @ Test 
 + public void dotCharacterInCustomTags ( ) 
 + throws IOException { 
 + final String filename = getDocPath ( " InputCustomTagWithDot . txt " ) ; 
 + final ParseTree generatedTree = parseJavadoc ( getFileContent ( new File ( filename ) ) ) ; 
 + final ParseTree expectedTree = ParseTreeBuilder . treeCustomTagWithDot ( ) ; 
 + compareTrees ( expectedTree , generatedTree ) ; 
 + } 
 + 
 private void compareTrees ( ParseTree first , ParseTree second ) { 
 Assert . assertEquals ( first . toStringTree ( parser ) , second . toStringTree ( parser ) ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java 
 index b3a0930 . . b7dee47 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java 
 @ @ - 5715 , 5 + 5715 , 61 @ @ final class ParseTreeBuilder { 
 javadocContext0 . addChild ( eof0 ) ; 
 return javadocContext0 ; 
 } 
 + 
 + public static ParseTree treeCustomTagWithDot ( ) 
 + { 
 + JavadocContext javadocContext0 = new JavadocContext ( null , 0 ) ; 
 + JavadocTagContext javadocTagContext0 = new JavadocTagContext ( javadocContext0 , 0 ) ; 
 + CommonToken customName0 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ ejb : bean " ) ; 
 + javadocTagContext0 . addChild ( customName0 ) ; 
 + CommonToken newline0 = new CommonToken ( JavadocTokenTypes . NEWLINE , LINE _ SEPARATOR ) ; 
 + javadocTagContext0 . addChild ( newline0 ) ; 
 + javadocContext0 . addChild ( javadocTagContext0 ) ; 
 + JavadocTagContext javadocTagContext1 = new JavadocTagContext ( javadocContext0 , 0 ) ; 
 + CommonToken customName1 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ hibernate . property " ) ; 
 + javadocTagContext1 . addChild ( customName1 ) ; 
 + CommonToken ws0 = new CommonToken ( JavadocTokenTypes . WS , " " ) ; 
 + javadocTagContext1 . addChild ( ws0 ) ; 
 + DescriptionContext descriptionContext0 = new DescriptionContext ( javadocTagContext1 , 0 ) ; 
 + TextContext textContext0 = new TextContext ( descriptionContext0 , 0 ) ; 
 + CommonToken char0 = new CommonToken ( JavadocTokenTypes . CHAR , " m " ) ; 
 + textContext0 . addChild ( char0 ) ; 
 + CommonToken char1 = new CommonToken ( JavadocTokenTypes . CHAR , " y " ) ; 
 + textContext0 . addChild ( char1 ) ; 
 + CommonToken char2 = new CommonToken ( JavadocTokenTypes . CHAR , " p " ) ; 
 + textContext0 . addChild ( char2 ) ; 
 + CommonToken char3 = new CommonToken ( JavadocTokenTypes . CHAR , " r " ) ; 
 + textContext0 . addChild ( char3 ) ; 
 + CommonToken char4 = new CommonToken ( JavadocTokenTypes . CHAR , " o " ) ; 
 + textContext0 . addChild ( char4 ) ; 
 + CommonToken char5 = new CommonToken ( JavadocTokenTypes . CHAR , " p " ) ; 
 + textContext0 . addChild ( char5 ) ; 
 + CommonToken char6 = new CommonToken ( JavadocTokenTypes . CHAR , " e " ) ; 
 + textContext0 . addChild ( char6 ) ; 
 + CommonToken char7 = new CommonToken ( JavadocTokenTypes . CHAR , " r " ) ; 
 + textContext0 . addChild ( char7 ) ; 
 + CommonToken char8 = new CommonToken ( JavadocTokenTypes . CHAR , " t " ) ; 
 + textContext0 . addChild ( char8 ) ; 
 + CommonToken char9 = new CommonToken ( JavadocTokenTypes . CHAR , " y " ) ; 
 + textContext0 . addChild ( char9 ) ; 
 + descriptionContext0 . addChild ( textContext0 ) ; 
 + CommonToken newline1 = new CommonToken ( JavadocTokenTypes . NEWLINE , LINE _ SEPARATOR ) ; 
 + descriptionContext0 . addChild ( newline1 ) ; 
 + javadocTagContext1 . addChild ( descriptionContext0 ) ; 
 + javadocContext0 . addChild ( javadocTagContext1 ) ; 
 + JavadocTagContext javadocTagContext2 = new JavadocTagContext ( javadocContext0 , 0 ) ; 
 + CommonToken customName2 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ weblogic . cache - ref " ) ; 
 + javadocTagContext2 . addChild ( customName2 ) ; 
 + CommonToken newline2 = new CommonToken ( JavadocTokenTypes . NEWLINE , LINE _ SEPARATOR ) ; 
 + javadocTagContext2 . addChild ( newline2 ) ; 
 + javadocContext0 . addChild ( javadocTagContext2 ) ; 
 + JavadocTagContext javadocTagContext3 = new JavadocTagContext ( javadocContext0 , 0 ) ; 
 + CommonToken customName3 = new CommonToken ( JavadocTokenTypes . CUSTOM _ NAME , " @ my _ tag " ) ; 
 + javadocTagContext3 . addChild ( customName3 ) ; 
 + javadocContext0 . addChild ( javadocTagContext3 ) ; 
 + CommonToken eof0 = new CommonToken ( JavadocTokenTypes . EOF , " < EOF > " ) ; 
 + javadocContext0 . addChild ( eof0 ) ; 
 + return javadocContext0 ; 
 + } 
 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputCustomTagWithDot . txt b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputCustomTagWithDot . txt 
 new file mode 100644 
 index 0000000 . . 8401dfe 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / grammars / javadoc / javadocTags / InputCustomTagWithDot . txt 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + @ ejb : bean 
 + @ hibernate . property myproperty 
 + @ weblogic . cache - ref 
 + @ my _ tag 
 \ No newline at end of file
