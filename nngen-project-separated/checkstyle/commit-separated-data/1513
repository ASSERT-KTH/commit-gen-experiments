BLEU SCORE: 0.04278179264606696

TEST MSG: Issue # 2421 : removed unneeded suppressions
GENERATED MSG: Restricted suppression for gui - package , issue # 1555

TEST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 09a6f36 . . 502084b 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 50 , 16 + 50 , 6 @ @ <nl> < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ " / > <nl> < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> <nl> - < ! - - Suppressions to remove over time for sure - - > <nl> - < suppress checks = " SeparatorWrap " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > <nl> - <nl> - < ! - - <nl> - Turn off all checks for Generated and Test code . Fixes issues with using <nl> - Eclipse plug - in . <nl> - - - > <nl> - < suppress checks = " . " files = " . * [ \ \ / ] grammars [ \ \ / ] Generated [ a - zA - Z ] * \ . java " / > <nl> - < suppress checks = " . " files = " . * [ \ \ / ] grammars [ \ \ / ] Generated [ a - zA - Z ] * \ . java " / > <nl> - <nl> < ! - - Classes FileDrop , Main , ParseTreeInfoPanel from gui - package contain Magic Numbers . <nl> The Check generates too many violations , fixing them will make code unmanageable . - - > <nl> < suppress checks = " MagicNumber " files = " . * [ \ \ / ] checkstyle [ \ \ / ] gui [ \ \ / ] " / >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> index c8530e7 . . d3f8f49 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> @ @ - 173 , 7 + 173 , 7 @ @ public class ExplicitInitializationCheck extends Check { <nl> case TokenTypes . NUM _ INT : <nl> case TokenTypes . NUM _ LONG : <nl> final String text = expr . getText ( ) ; <nl> - return 0 = = CheckUtils . parseFloat ( text , type ) ; <nl> + return 0 . 0 = = CheckUtils . parseFloat ( text , type ) ; <nl> default : <nl> return false ; <nl> }

TEST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 09a6f36 . . 502084b 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 50 , 16 + 50 , 6 @ @ 
 < suppress checks = " VisibilityModifier " files = " [ \ \ / ] BaseCheckTestSupport . java $ " / > 
 < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 
 - < ! - - Suppressions to remove over time for sure - - > 
 - < suppress checks = " SeparatorWrap " files = " . * [ \ \ / ] src [ \ \ / ] it [ \ \ / ] " / > 
 - 
 - < ! - - 
 - Turn off all checks for Generated and Test code . Fixes issues with using 
 - Eclipse plug - in . 
 - - - > 
 - < suppress checks = " . " files = " . * [ \ \ / ] grammars [ \ \ / ] Generated [ a - zA - Z ] * \ . java " / > 
 - < suppress checks = " . " files = " . * [ \ \ / ] grammars [ \ \ / ] Generated [ a - zA - Z ] * \ . java " / > 
 - 
 < ! - - Classes FileDrop , Main , ParseTreeInfoPanel from gui - package contain Magic Numbers . 
 The Check generates too many violations , fixing them will make code unmanageable . - - > 
 < suppress checks = " MagicNumber " files = " . * [ \ \ / ] checkstyle [ \ \ / ] gui [ \ \ / ] " / >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 index c8530e7 . . d3f8f49 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 @ @ - 173 , 7 + 173 , 7 @ @ public class ExplicitInitializationCheck extends Check { 
 case TokenTypes . NUM _ INT : 
 case TokenTypes . NUM _ LONG : 
 final String text = expr . getText ( ) ; 
 - return 0 = = CheckUtils . parseFloat ( text , type ) ; 
 + return 0 . 0 = = CheckUtils . parseFloat ( text , type ) ; 
 default : 
 return false ; 
 }
