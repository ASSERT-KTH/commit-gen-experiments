BLEU SCORE: 0.5156626918239822

TEST MSG: Issue # 5283 : resolve problem with pitest caused by previous commit
GENERATED MSG: Issue # 5283 : resolve problem with covbertura on appveyor

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / FilterUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / FilterUtils . java <nl> index e1c89b2 . . 1a4ef3d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / FilterUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / FilterUtils . java <nl> @ @ - 55 , 8 + 55 , 7 @ @ public final class FilterUtils { <nl> suppressionSourceExists = false ; <nl> } <nl> finally { <nl> - final boolean closed = closeQuietlyWithResult ( sourceInput ) ; <nl> - suppressionSourceExists = suppressionSourceExists & & closed ; <nl> + suppressionSourceExists = closeQuietlyWithResult ( sourceInput , suppressionSourceExists ) ; <nl> } <nl> return suppressionSourceExists ; <nl> } <nl> @ @ - 65 , 10 + 64 , 12 @ @ public final class FilterUtils { <nl> * Close input . <nl> * This method is required till https : / / github . com / cobertura / cobertura / issues / 170 <nl> * @ param sourceInput stream to close <nl> + * @ param suppressionSourceExists previous state of flag <nl> * @ return result of close operation <nl> * / <nl> - private static boolean closeQuietlyWithResult ( InputStream sourceInput ) { <nl> - boolean closed = true ; <nl> + private static boolean closeQuietlyWithResult ( InputStream sourceInput , <nl> + boolean suppressionSourceExists ) { <nl> + boolean closed = suppressionSourceExists ; <nl> if ( sourceInput ! = null ) { <nl> try { <nl> sourceInput . close ( ) ;
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 6c0d565 . . 5bf837f 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 257 , 7 + 257 , 11 @ @ <nl> < property name = " tokens " value = " LITERAL _ VOLATILE " / > <nl> < property name = " tokens " value = " LITERAL _ ASSERT " / > <nl> < / module > <nl> - < module name = " IllegalTokenText " / > <nl> + < module name = " IllegalTokenText " > <nl> + < property name = " tokens " value = " STRING _ LITERAL " / > <nl> + < property name = " format " value = " ^ ( US - ASCII | ISO - 8859 - 1 | UTF - 8 | UTF - 16BE | UTF - 16LE | UTF - 16 ) $ " / > <nl> + < property name = " ignoreCase " value = " true " / > <nl> + < / module > <nl> < module name = " IllegalType " / > <nl> < module name = " InnerAssignment " / > <nl> < module name = " MagicNumber " / > <nl> diff - - git a / config / import - control . xml b / config / import - control . xml <nl> index 150caca . . 0dfe037 100644 <nl> - - - a / config / import - control . xml <nl> + + + b / config / import - control . xml <nl> @ @ - 123 , 7 + 123 , 7 @ @ <nl> < / subpackage > <nl> < subpackage name = " header " > <nl> < allow class = " java . nio . charset . Charset " local - only = " true " / > <nl> - <nl> + < allow class = " java . nio . charset . StandardCharsets " local - only = " true " / > <nl> < ! - - allowed till https : / / github . com / checkstyle / checkstyle / issues / 3455 - - > <nl> < allow class = " com . google . common . io . Closeables " local - only = " true " / > <nl> < / subpackage > <nl> @ @ - 170 , 6 + 170 , 7 @ @ <nl> local - only = " true " / > <nl> < allow class = " com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser " local - only = " true " / > <nl> < allow class = " com . google . common . collect . ImmutableList " local - only = " true " / > <nl> + < allow class = " java . nio . charset . StandardCharsets " local - only = " true " / > <nl> < / subpackage > <nl> <nl> < subpackage name = " xpath " > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java <nl> index c27e8f1 . . cb33d34 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . Locale ; <nl> import java . util . regex . Pattern ; <nl> <nl> @ @ - 234 , 7 + 235 , 7 @ @ public final class AstTreeStringPrinter { <nl> private static DetailAST parseFile ( File file , PrintOptions withComments ) <nl> throws IOException , CheckstyleException { <nl> final FileText text = new FileText ( file . getAbsoluteFile ( ) , <nl> - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; <nl> return parseFileText ( text , withComments ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> index a0e67d0 . . add8901 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import java . io . PrintWriter ; <nl> import java . io . StringWriter ; <nl> import java . io . UnsupportedEncodingException ; <nl> import java . nio . charset . Charset ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . ArrayList ; <nl> import java . util . HashSet ; <nl> import java . util . List ; <nl> @ @ - 124 , 7 + 125 , 7 @ @ public class Checker extends AutomaticBean implements MessageDispatcher , RootMod <nl> private SeverityLevel severityLevel = SeverityLevel . ERROR ; <nl> <nl> / * * Name of a charset . * / <nl> - private String charset = System . getProperty ( " file . encoding " , " UTF - 8 " ) ; <nl> + private String charset = System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> <nl> / * * Cache file . * * / <nl> private PropertyCacheFile cache ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java <nl> index 515ed5c . . b1bc7d9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> + import java . nio . charset . StandardCharsets ; <nl> <nl> import com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . ParseErrorMessage ; <nl> import com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . ParseStatus ; <nl> @ @ - 169 , 7 + 170 , 7 @ @ public final class DetailNodeTreeStringPrinter { <nl> * / <nl> private static DetailNode parseFile ( File file ) throws IOException { <nl> final FileText text = new FileText ( file . getAbsoluteFile ( ) , <nl> - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; <nl> return parseJavadocAsDetailNode ( text . getFullText ( ) . toString ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> index b4eca49 . . 12b9a52 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import java . io . Reader ; <nl> import java . io . Serializable ; <nl> import java . net . URL ; <nl> import java . net . URLConnection ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . text . MessageFormat ; <nl> import java . util . Arrays ; <nl> import java . util . Collections ; <nl> @ @ - 519 , 7 + 520 , 8 @ @ public final class LocalizedMessage <nl> } <nl> ResourceBundle resourceBundle = null ; <nl> if ( stream ! = null ) { <nl> - final Reader streamReader = new InputStreamReader ( stream , " UTF - 8 " ) ; <nl> + final Reader streamReader = new InputStreamReader ( stream , <nl> + StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> try { <nl> / / Only this line is changed to make it to read properties files as UTF - 8 . <nl> resourceBundle = new PropertyResourceBundle ( streamReader ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java <nl> index d29da48 . . 3b06139 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import java . io . StringReader ; <nl> import java . io . UnsupportedEncodingException ; <nl> import java . net . URI ; <nl> import java . nio . charset . Charset ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . ArrayList ; <nl> import java . util . Collections ; <nl> import java . util . List ; <nl> @ @ - 57 , 7 + 58 , 7 @ @ public abstract class AbstractHeaderCheck extends AbstractFileSetCheck <nl> private URI headerFile ; <nl> <nl> / * * Name of a charset to use for loading the header from a file . * / <nl> - private String charset = System . getProperty ( " file . encoding " , " UTF - 8 " ) ; <nl> + private String charset = System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> <nl> / * * <nl> * Hook method for post processing header lines . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> index a33a61b . . cf7d881 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . gui ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . ArrayList ; <nl> import java . util . List ; <nl> import java . util . Locale ; <nl> @ @ - 267 , 6 + 268 , 6 @ @ public class MainFrameModel { <nl> * / <nl> private static FileText getFileText ( File file ) throws IOException { <nl> return new FileText ( file . getAbsoluteFile ( ) , <nl> - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java <nl> index daadeec . . 6dfc261 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java <nl> @ @ - 150 , 7 + 150 , 7 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport <nl> new DefaultConfiguration ( " configuration " ) ; <nl> final DefaultConfiguration twConf = createModuleConfig ( TreeWalker . class ) ; <nl> / / make sure that the tests always run with this charset <nl> - dc . addAttribute ( " charset " , " UTF - 8 " ) ; <nl> + dc . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> dc . addChild ( twConf ) ; <nl> twConf . addChild ( config ) ; <nl> return dc ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> index 00b631b . . 7d3660c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> @ @ - 75 , 7 + 75 , 7 @ @ public class AstTreeStringPrinterTest extends AbstractTreeTestSupport { <nl> public void testPrintAst ( ) throws Exception { <nl> final FileText text = new FileText ( <nl> new File ( getPath ( " InputAstTreeStringPrinterComments . java " ) ) . getAbsoluteFile ( ) , <nl> - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; <nl> final String actual = AstTreeStringPrinter . printAst ( text , <nl> AstTreeStringPrinter . PrintOptions . WITHOUT _ COMMENTS ) ; <nl> final String expected = new String ( Files . readAllBytes ( Paths . get ( <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> index dc7a6a5 . . 4af3cf8 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> @ @ - 272 , 7 + 272 , 7 @ @ public class CheckerTest extends AbstractModuleTestSupport { <nl> @ Test <nl> public void testFileExtensions ( ) throws Exception { <nl> final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " configuration " ) ; <nl> - checkerConfig . addAttribute ( " charset " , " UTF - 8 " ) ; <nl> + checkerConfig . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> checkerConfig . addAttribute ( " cacheFile " , temporaryFolder . newFile ( ) . getPath ( ) ) ; <nl> <nl> final Checker checker = new Checker ( ) ; <nl> @ @ - 309 , 7 + 309 , 7 @ @ public class CheckerTest extends AbstractModuleTestSupport { <nl> @ Test <nl> public void testIgnoredFileExtensions ( ) throws Exception { <nl> final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " configuration " ) ; <nl> - checkerConfig . addAttribute ( " charset " , " UTF - 8 " ) ; <nl> + checkerConfig . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> checkerConfig . addAttribute ( " cacheFile " , temporaryFolder . newFile ( ) . getPath ( ) ) ; <nl> <nl> final Checker checker = new Checker ( ) ; <nl> @ @ - 406 , 7 + 406 , 8 @ @ public class CheckerTest extends AbstractModuleTestSupport { <nl> <nl> final Context context = ( Context ) Whitebox . getInternalState ( checker , " childContext " ) ; <nl> assertEquals ( " Charset was different than expected " , <nl> - System . getProperty ( " file . encoding " , " UTF - 8 " ) , context . get ( " charset " ) ) ; <nl> + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) , <nl> + context . get ( " charset " ) ) ; <nl> assertEquals ( " Was used unsufficient classloader " , <nl> contextClassLoader , context . get ( " classLoader " ) ) ; <nl> assertEquals ( " Severity is set to unexpected value " , <nl> @ @ - 493 , 7 + 494 , 7 @ @ public class CheckerTest extends AbstractModuleTestSupport { <nl> treeWalkerConfig . addChild ( checkConfig ) ; <nl> <nl> final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " checkstyleConfig " ) ; <nl> - checkerConfig . addAttribute ( " charset " , " UTF - 8 " ) ; <nl> + checkerConfig . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> checkerConfig . addChild ( treeWalkerConfig ) ; <nl> <nl> final File cacheFile = temporaryFolder . newFile ( ) ; <nl> @ @ - 562 , 7 + 563 , 7 @ @ public class CheckerTest extends AbstractModuleTestSupport { <nl> @ Test <nl> public void testClearExistingCache ( ) throws Exception { <nl> final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " myConfig " ) ; <nl> - checkerConfig . addAttribute ( " charset " , " UTF - 8 " ) ; <nl> + checkerConfig . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> final File cacheFile = temporaryFolder . newFile ( ) ; <nl> checkerConfig . addAttribute ( " cacheFile " , cacheFile . getPath ( ) ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java <nl> index 1f9b801 . . 654da10 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import static org . mockito . Mockito . verify ; <nl> import java . io . ByteArrayOutputStream ; <nl> import java . io . OutputStream ; <nl> import java . io . UnsupportedEncodingException ; <nl> + import java . nio . charset . StandardCharsets ; <nl> <nl> import org . junit . Test ; <nl> <nl> @ @ - 44 , 7 + 45 , 7 @ @ public class DefaultLoggerTest { <nl> final DefaultLogger dl = new DefaultLogger ( infoStream , true , errorStream , true ) ; <nl> dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; <nl> dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; <nl> - final String output = errorStream . toString ( " UTF - 8 " ) ; <nl> + final String output = errorStream . toString ( StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , <nl> Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . ADD _ EXCEPTION _ MESSAGE , <nl> new String [ ] { " myfile " } , null , <nl> @ @ - 76 , 7 + 77 , 7 @ @ public class DefaultLoggerTest { <nl> dl . auditStarted ( null ) ; <nl> dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; <nl> dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; <nl> - final String output = errorStream . toString ( " UTF - 8 " ) ; <nl> + final String output = errorStream . toString ( StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , <nl> Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . ADD _ EXCEPTION _ MESSAGE , <nl> new String [ ] { " myfile " } , null , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> index 8733343 . . a8c745c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> @ @ - 31 , 7 + 31 , 6 @ @ import java . io . FileOutputStream ; <nl> import java . io . OutputStreamWriter ; <nl> import java . io . Writer ; <nl> import java . lang . reflect . Method ; <nl> - import java . nio . charset . Charset ; <nl> import java . nio . charset . StandardCharsets ; <nl> import java . nio . file . Files ; <nl> import java . util . ArrayList ; <nl> @ @ - 572 , 7 + 571 , 7 @ @ public class TreeWalkerTest extends AbstractModuleTestSupport { <nl> <nl> assertTrue ( " External resource is not present in cache " , <nl> new String ( Files . readAllBytes ( cacheFile . toPath ( ) ) , <nl> - Charset . forName ( " UTF - 8 " ) ) . contains ( <nl> + StandardCharsets . UTF _ 8 ) . contains ( <nl> " InputTreeWalkerSuppressionXpathFilter . xml " ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> index 7fd78d1 . . 2e2081f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> @ @ - 272 , 7 + 272 , 7 @ @ public class DetailASTTest extends AbstractModuleTestSupport { <nl> <nl> private static void checkFile ( String filename ) throws Exception { <nl> final FileText text = new FileText ( new File ( filename ) , <nl> - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; <nl> final FileContents contents = new FileContents ( text ) ; <nl> final DetailAST rootAST = TreeWalker . parse ( contents ) ; <nl> if ( rootAST ! = null ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java <nl> index 2c84a1d . . af5d93c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java <nl> @ @ - 30 , 6 + 30 , 7 @ @ import static org . powermock . api . mockito . PowerMockito . verifyStatic ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . io . Reader ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . Locale ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 70 , 7 + 71 , 7 @ @ public class FileTextTest extends AbstractPathTestSupport { <nl> doNothing ( ) . when ( Closeables . class ) ; <nl> Closeables . closeQuietly ( any ( Reader . class ) ) ; <nl> <nl> - final String charsetName = " ISO - 8859 - 1 " ; <nl> + final String charsetName = StandardCharsets . ISO _ 8859 _ 1 . name ( ) ; <nl> final FileText fileText = new FileText ( new File ( getPath ( " InputFileTextImportControl . xml " ) ) , <nl> charsetName ) ; <nl> assertEquals ( " Invalid charset name " , charsetName , fileText . getCharset ( ) . name ( ) ) ; <nl> @ @ - 81 , 7 + 82 , 7 @ @ public class FileTextTest extends AbstractPathTestSupport { <nl> <nl> @ Test <nl> public void testLineColumnBeforeCopyConstructor ( ) throws IOException { <nl> - final String charsetName = " ISO - 8859 - 1 " ; <nl> + final String charsetName = StandardCharsets . ISO _ 8859 _ 1 . name ( ) ; <nl> final FileText fileText = new FileText ( new File ( getPath ( " InputFileTextImportControl . xml " ) ) , <nl> charsetName ) ; <nl> final LineColumn lineColumn = fileText . lineColumn ( 100 ) ; <nl> @ @ - 91 , 7 + 92 , 7 @ @ public class FileTextTest extends AbstractPathTestSupport { <nl> <nl> @ Test <nl> public void testLineColumnAfterCopyConstructor ( ) throws IOException { <nl> - final String charsetName = " ISO - 8859 - 1 " ; <nl> + final String charsetName = StandardCharsets . ISO _ 8859 _ 1 . name ( ) ; <nl> final FileText fileText = new FileText ( new File ( getPath ( " InputFileTextImportControl . xml " ) ) , <nl> charsetName ) ; <nl> final FileText copy = new FileText ( fileText ) ; <nl> @ @ - 107 , 7 + 108 , 7 @ @ public class FileTextTest extends AbstractPathTestSupport { <nl> <nl> @ Test <nl> public void testLineColumnAtTheStartOfFile ( ) throws IOException { <nl> - final String charsetName = " ISO - 8859 - 1 " ; <nl> + final String charsetName = StandardCharsets . ISO _ 8859 _ 1 . name ( ) ; <nl> final FileText fileText = new FileText ( new File ( getPath ( " InputFileTextImportControl . xml " ) ) , <nl> charsetName ) ; <nl> final FileText copy = new FileText ( fileText ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java <nl> index db4eb88 . . 0a49c29 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . IllegalInstantiationCheck . MSG _ KEY ; <nl> <nl> import java . io . File ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . SortedSet ; <nl> <nl> import org . junit . Assert ; <nl> @ @ - 152 , 7 + 153 , 8 @ @ public class IllegalInstantiationCheckTest <nl> <nl> final IllegalInstantiationCheck check = new IllegalInstantiationCheck ( ) ; <nl> final File inputFile = new File ( getNonCompilablePath ( " InputIllegalInstantiationLang . java " ) ) ; <nl> - check . setFileContents ( new FileContents ( new FileText ( inputFile , " UTF - 8 " ) ) ) ; <nl> + check . setFileContents ( new FileContents ( new FileText ( inputFile , <nl> + StandardCharsets . UTF _ 8 . name ( ) ) ) ) ; <nl> check . configure ( createModuleConfig ( IllegalInstantiationCheck . class ) ) ; <nl> check . setClasses ( " java . lang . Boolean " ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> index 2075b8d . . ad7762a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> <nl> import java . io . File ; <nl> - import java . nio . charset . Charset ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . nio . file . Files ; <nl> <nl> import org . junit . Rule ; <nl> @ @ - 351 , 7 + 351 , 7 @ @ public class ImportControlCheckTest extends AbstractModuleTestSupport { <nl> <nl> assertTrue ( " External resourse is not present in cache " , <nl> new String ( Files . readAllBytes ( cacheFile . toPath ( ) ) , <nl> - Charset . forName ( " UTF - 8 " ) ) . contains ( " InputImportControlOneRegExp . xml " ) ) ; <nl> + StandardCharsets . UTF _ 8 ) . contains ( " InputImportControlOneRegExp . xml " ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> index e95b4fa . . 824d05a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> @ @ - 185 , 7 + 185 , 8 @ @ public class TokenTypesDocletTest extends AbstractPathTestSupport { <nl> final Method getRootDocImpl = getMethodGetRootDocImplByReflection ( ) ; <nl> final RootDoc rootDoc ; <nl> if ( System . getProperty ( " java . version " ) . startsWith ( " 1 . 7 . " ) ) { <nl> - rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , " UTF - 8 " , <nl> + rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , <nl> + StandardCharsets . UTF _ 8 . name ( ) , <nl> new ModifierFilter ( ModifierFilter . ALL _ ACCESS ) , <nl> names . toList ( ) , <nl> options . toList ( ) , <nl> @ @ - 195 , 7 + 196 , 8 @ @ public class TokenTypesDocletTest extends AbstractPathTestSupport { <nl> false , false , false ) ; <nl> } <nl> else { <nl> - rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , " UTF - 8 " , <nl> + rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , <nl> + StandardCharsets . UTF _ 8 . name ( ) , <nl> new ModifierFilter ( ModifierFilter . ALL _ ACCESS ) , <nl> names . toList ( ) , <nl> options . toList ( ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / AstRegressionTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / AstRegressionTest . java <nl> index ab656d5 . . b6bc2ed 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / AstRegressionTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / AstRegressionTest . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ import java . io . InputStream ; <nl> import java . lang . reflect . Constructor ; <nl> import java . lang . reflect . InvocationTargetException ; <nl> import java . lang . reflect . Method ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . Arrays ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 217 , 7 + 218 , 8 @ @ public class AstRegressionTest extends AbstractTreeTestSupport { <nl> AstTreeStringPrinter . PrintOptions withComments ) throws Exception { <nl> final File expectedFile = new File ( expectedTextPrintFileName ) ; <nl> final String expectedContents = new FileText ( expectedFile , System . getProperty ( <nl> - " file . encoding " , " UTF - 8 " ) ) . getFullText ( ) . toString ( ) . replace ( " \ r " , " " ) ; <nl> + " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) <nl> + . getFullText ( ) . toString ( ) . replace ( " \ r " , " " ) ; <nl> <nl> final FileText actualFileContents = new FileText ( new File ( " " ) , <nl> Arrays . asList ( actualJava . split ( " \ \ n | \ \ r \ \ n ? " ) ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentationTest . java <nl> index 5fd81e0 . . afd5a7f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentationTest . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> package com . puppycrawl . tools . checkstyle . gui ; <nl> <nl> import java . io . File ; <nl> + import java . nio . charset . StandardCharsets ; <nl> <nl> import org . junit . Assert ; <nl> import org . junit . Before ; <nl> @ @ - 48 , 7 + 49 , 9 @ @ public class ParseTreeTablePresentationTest extends AbstractPathTestSupport { <nl> <nl> private static DetailAST parseFile ( File file ) throws Exception { <nl> final FileContents contents = new FileContents ( <nl> - new FileText ( file . getAbsoluteFile ( ) , System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ) ; <nl> + new FileText ( file . getAbsoluteFile ( ) , <nl> + System . getProperty ( " file . encoding " , <nl> + StandardCharsets . UTF _ 8 . name ( ) ) ) ) ; <nl> return TreeWalker . parseWithComments ( contents ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / TestUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / TestUtil . java <nl> index 07afd91 . . 1c5d8cc 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / TestUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / TestUtil . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import java . io . IOException ; <nl> import java . lang . reflect . Constructor ; <nl> import java . lang . reflect . Field ; <nl> import java . lang . reflect . Modifier ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . util . Arrays ; <nl> import java . util . Optional ; <nl> import java . util . Set ; <nl> @ @ - 151 , 7 + 152 , 7 @ @ public final class TestUtil { <nl> * @ throws ANTLRException if parser or lexer failed <nl> * / <nl> public static DetailAST parseFile ( File file ) throws IOException , ANTLRException { <nl> - final FileText text = new FileText ( file . getAbsoluteFile ( ) , " UTF - 8 " ) ; <nl> + final FileText text = new FileText ( file . getAbsoluteFile ( ) , StandardCharsets . UTF _ 8 . name ( ) ) ; <nl> final FileContents contents = new FileContents ( text ) ; <nl> return parseWithComments ( contents ) ; <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / FilterUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / FilterUtils . java 
 index e1c89b2 . . 1a4ef3d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / FilterUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / FilterUtils . java 
 @ @ - 55 , 8 + 55 , 7 @ @ public final class FilterUtils { 
 suppressionSourceExists = false ; 
 } 
 finally { 
 - final boolean closed = closeQuietlyWithResult ( sourceInput ) ; 
 - suppressionSourceExists = suppressionSourceExists & & closed ; 
 + suppressionSourceExists = closeQuietlyWithResult ( sourceInput , suppressionSourceExists ) ; 
 } 
 return suppressionSourceExists ; 
 } 
 @ @ - 65 , 10 + 64 , 12 @ @ public final class FilterUtils { 
 * Close input . 
 * This method is required till https : / / github . com / cobertura / cobertura / issues / 170 
 * @ param sourceInput stream to close 
 + * @ param suppressionSourceExists previous state of flag 
 * @ return result of close operation 
 * / 
 - private static boolean closeQuietlyWithResult ( InputStream sourceInput ) { 
 - boolean closed = true ; 
 + private static boolean closeQuietlyWithResult ( InputStream sourceInput , 
 + boolean suppressionSourceExists ) { 
 + boolean closed = suppressionSourceExists ; 
 if ( sourceInput ! = null ) { 
 try { 
 sourceInput . close ( ) ;

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 6c0d565 . . 5bf837f 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 257 , 7 + 257 , 11 @ @ 
 < property name = " tokens " value = " LITERAL _ VOLATILE " / > 
 < property name = " tokens " value = " LITERAL _ ASSERT " / > 
 < / module > 
 - < module name = " IllegalTokenText " / > 
 + < module name = " IllegalTokenText " > 
 + < property name = " tokens " value = " STRING _ LITERAL " / > 
 + < property name = " format " value = " ^ ( US - ASCII | ISO - 8859 - 1 | UTF - 8 | UTF - 16BE | UTF - 16LE | UTF - 16 ) $ " / > 
 + < property name = " ignoreCase " value = " true " / > 
 + < / module > 
 < module name = " IllegalType " / > 
 < module name = " InnerAssignment " / > 
 < module name = " MagicNumber " / > 
 diff - - git a / config / import - control . xml b / config / import - control . xml 
 index 150caca . . 0dfe037 100644 
 - - - a / config / import - control . xml 
 + + + b / config / import - control . xml 
 @ @ - 123 , 7 + 123 , 7 @ @ 
 < / subpackage > 
 < subpackage name = " header " > 
 < allow class = " java . nio . charset . Charset " local - only = " true " / > 
 - 
 + < allow class = " java . nio . charset . StandardCharsets " local - only = " true " / > 
 < ! - - allowed till https : / / github . com / checkstyle / checkstyle / issues / 3455 - - > 
 < allow class = " com . google . common . io . Closeables " local - only = " true " / > 
 < / subpackage > 
 @ @ - 170 , 6 + 170 , 7 @ @ 
 local - only = " true " / > 
 < allow class = " com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser " local - only = " true " / > 
 < allow class = " com . google . common . collect . ImmutableList " local - only = " true " / > 
 + < allow class = " java . nio . charset . StandardCharsets " local - only = " true " / > 
 < / subpackage > 
 
 < subpackage name = " xpath " > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java 
 index c27e8f1 . . cb33d34 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinter . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . Locale ; 
 import java . util . regex . Pattern ; 
 
 @ @ - 234 , 7 + 235 , 7 @ @ public final class AstTreeStringPrinter { 
 private static DetailAST parseFile ( File file , PrintOptions withComments ) 
 throws IOException , CheckstyleException { 
 final FileText text = new FileText ( file . getAbsoluteFile ( ) , 
 - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; 
 return parseFileText ( text , withComments ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 index a0e67d0 . . add8901 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import java . io . PrintWriter ; 
 import java . io . StringWriter ; 
 import java . io . UnsupportedEncodingException ; 
 import java . nio . charset . Charset ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . ArrayList ; 
 import java . util . HashSet ; 
 import java . util . List ; 
 @ @ - 124 , 7 + 125 , 7 @ @ public class Checker extends AutomaticBean implements MessageDispatcher , RootMod 
 private SeverityLevel severityLevel = SeverityLevel . ERROR ; 
 
 / * * Name of a charset . * / 
 - private String charset = System . getProperty ( " file . encoding " , " UTF - 8 " ) ; 
 + private String charset = System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ; 
 
 / * * Cache file . * * / 
 private PropertyCacheFile cache ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java 
 index 515ed5c . . b1bc7d9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinter . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 + import java . nio . charset . StandardCharsets ; 
 
 import com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . ParseErrorMessage ; 
 import com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . ParseStatus ; 
 @ @ - 169 , 7 + 170 , 7 @ @ public final class DetailNodeTreeStringPrinter { 
 * / 
 private static DetailNode parseFile ( File file ) throws IOException { 
 final FileText text = new FileText ( file . getAbsoluteFile ( ) , 
 - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; 
 return parseJavadocAsDetailNode ( text . getFullText ( ) . toString ( ) ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 index b4eca49 . . 12b9a52 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessage . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import java . io . Reader ; 
 import java . io . Serializable ; 
 import java . net . URL ; 
 import java . net . URLConnection ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . text . MessageFormat ; 
 import java . util . Arrays ; 
 import java . util . Collections ; 
 @ @ - 519 , 7 + 520 , 8 @ @ public final class LocalizedMessage 
 } 
 ResourceBundle resourceBundle = null ; 
 if ( stream ! = null ) { 
 - final Reader streamReader = new InputStreamReader ( stream , " UTF - 8 " ) ; 
 + final Reader streamReader = new InputStreamReader ( stream , 
 + StandardCharsets . UTF _ 8 . name ( ) ) ; 
 try { 
 / / Only this line is changed to make it to read properties files as UTF - 8 . 
 resourceBundle = new PropertyResourceBundle ( streamReader ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java 
 index d29da48 . . 3b06139 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / AbstractHeaderCheck . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import java . io . StringReader ; 
 import java . io . UnsupportedEncodingException ; 
 import java . net . URI ; 
 import java . nio . charset . Charset ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . ArrayList ; 
 import java . util . Collections ; 
 import java . util . List ; 
 @ @ - 57 , 7 + 58 , 7 @ @ public abstract class AbstractHeaderCheck extends AbstractFileSetCheck 
 private URI headerFile ; 
 
 / * * Name of a charset to use for loading the header from a file . * / 
 - private String charset = System . getProperty ( " file . encoding " , " UTF - 8 " ) ; 
 + private String charset = System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ; 
 
 / * * 
 * Hook method for post processing header lines . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 index a33a61b . . cf7d881 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package com . puppycrawl . tools . checkstyle . gui ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 import java . util . Locale ; 
 @ @ - 267 , 6 + 268 , 6 @ @ public class MainFrameModel { 
 * / 
 private static FileText getFileText ( File file ) throws IOException { 
 return new FileText ( file . getAbsoluteFile ( ) , 
 - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java 
 index daadeec . . 6dfc261 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AbstractModuleTestSupport . java 
 @ @ - 150 , 7 + 150 , 7 @ @ public abstract class AbstractModuleTestSupport extends AbstractPathTestSupport 
 new DefaultConfiguration ( " configuration " ) ; 
 final DefaultConfiguration twConf = createModuleConfig ( TreeWalker . class ) ; 
 / / make sure that the tests always run with this charset 
 - dc . addAttribute ( " charset " , " UTF - 8 " ) ; 
 + dc . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; 
 dc . addChild ( twConf ) ; 
 twConf . addChild ( config ) ; 
 return dc ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 index 00b631b . . 7d3660c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 @ @ - 75 , 7 + 75 , 7 @ @ public class AstTreeStringPrinterTest extends AbstractTreeTestSupport { 
 public void testPrintAst ( ) throws Exception { 
 final FileText text = new FileText ( 
 new File ( getPath ( " InputAstTreeStringPrinterComments . java " ) ) . getAbsoluteFile ( ) , 
 - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; 
 final String actual = AstTreeStringPrinter . printAst ( text , 
 AstTreeStringPrinter . PrintOptions . WITHOUT _ COMMENTS ) ; 
 final String expected = new String ( Files . readAllBytes ( Paths . get ( 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 index dc7a6a5 . . 4af3cf8 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 @ @ - 272 , 7 + 272 , 7 @ @ public class CheckerTest extends AbstractModuleTestSupport { 
 @ Test 
 public void testFileExtensions ( ) throws Exception { 
 final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " configuration " ) ; 
 - checkerConfig . addAttribute ( " charset " , " UTF - 8 " ) ; 
 + checkerConfig . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; 
 checkerConfig . addAttribute ( " cacheFile " , temporaryFolder . newFile ( ) . getPath ( ) ) ; 
 
 final Checker checker = new Checker ( ) ; 
 @ @ - 309 , 7 + 309 , 7 @ @ public class CheckerTest extends AbstractModuleTestSupport { 
 @ Test 
 public void testIgnoredFileExtensions ( ) throws Exception { 
 final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " configuration " ) ; 
 - checkerConfig . addAttribute ( " charset " , " UTF - 8 " ) ; 
 + checkerConfig . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; 
 checkerConfig . addAttribute ( " cacheFile " , temporaryFolder . newFile ( ) . getPath ( ) ) ; 
 
 final Checker checker = new Checker ( ) ; 
 @ @ - 406 , 7 + 406 , 8 @ @ public class CheckerTest extends AbstractModuleTestSupport { 
 
 final Context context = ( Context ) Whitebox . getInternalState ( checker , " childContext " ) ; 
 assertEquals ( " Charset was different than expected " , 
 - System . getProperty ( " file . encoding " , " UTF - 8 " ) , context . get ( " charset " ) ) ; 
 + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) , 
 + context . get ( " charset " ) ) ; 
 assertEquals ( " Was used unsufficient classloader " , 
 contextClassLoader , context . get ( " classLoader " ) ) ; 
 assertEquals ( " Severity is set to unexpected value " , 
 @ @ - 493 , 7 + 494 , 7 @ @ public class CheckerTest extends AbstractModuleTestSupport { 
 treeWalkerConfig . addChild ( checkConfig ) ; 
 
 final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " checkstyleConfig " ) ; 
 - checkerConfig . addAttribute ( " charset " , " UTF - 8 " ) ; 
 + checkerConfig . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; 
 checkerConfig . addChild ( treeWalkerConfig ) ; 
 
 final File cacheFile = temporaryFolder . newFile ( ) ; 
 @ @ - 562 , 7 + 563 , 7 @ @ public class CheckerTest extends AbstractModuleTestSupport { 
 @ Test 
 public void testClearExistingCache ( ) throws Exception { 
 final DefaultConfiguration checkerConfig = new DefaultConfiguration ( " myConfig " ) ; 
 - checkerConfig . addAttribute ( " charset " , " UTF - 8 " ) ; 
 + checkerConfig . addAttribute ( " charset " , StandardCharsets . UTF _ 8 . name ( ) ) ; 
 final File cacheFile = temporaryFolder . newFile ( ) ; 
 checkerConfig . addAttribute ( " cacheFile " , cacheFile . getPath ( ) ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java 
 index 1f9b801 . . 654da10 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import static org . mockito . Mockito . verify ; 
 import java . io . ByteArrayOutputStream ; 
 import java . io . OutputStream ; 
 import java . io . UnsupportedEncodingException ; 
 + import java . nio . charset . StandardCharsets ; 
 
 import org . junit . Test ; 
 
 @ @ - 44 , 7 + 45 , 7 @ @ public class DefaultLoggerTest { 
 final DefaultLogger dl = new DefaultLogger ( infoStream , true , errorStream , true ) ; 
 dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; 
 dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; 
 - final String output = errorStream . toString ( " UTF - 8 " ) ; 
 + final String output = errorStream . toString ( StandardCharsets . UTF _ 8 . name ( ) ) ; 
 final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , 
 Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . ADD _ EXCEPTION _ MESSAGE , 
 new String [ ] { " myfile " } , null , 
 @ @ - 76 , 7 + 77 , 7 @ @ public class DefaultLoggerTest { 
 dl . auditStarted ( null ) ; 
 dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; 
 dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; 
 - final String output = errorStream . toString ( " UTF - 8 " ) ; 
 + final String output = errorStream . toString ( StandardCharsets . UTF _ 8 . name ( ) ) ; 
 final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , 
 Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . ADD _ EXCEPTION _ MESSAGE , 
 new String [ ] { " myfile " } , null , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 index 8733343 . . a8c745c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 @ @ - 31 , 7 + 31 , 6 @ @ import java . io . FileOutputStream ; 
 import java . io . OutputStreamWriter ; 
 import java . io . Writer ; 
 import java . lang . reflect . Method ; 
 - import java . nio . charset . Charset ; 
 import java . nio . charset . StandardCharsets ; 
 import java . nio . file . Files ; 
 import java . util . ArrayList ; 
 @ @ - 572 , 7 + 571 , 7 @ @ public class TreeWalkerTest extends AbstractModuleTestSupport { 
 
 assertTrue ( " External resource is not present in cache " , 
 new String ( Files . readAllBytes ( cacheFile . toPath ( ) ) , 
 - Charset . forName ( " UTF - 8 " ) ) . contains ( 
 + StandardCharsets . UTF _ 8 ) . contains ( 
 " InputTreeWalkerSuppressionXpathFilter . xml " ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 index 7fd78d1 . . 2e2081f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 @ @ - 272 , 7 + 272 , 7 @ @ public class DetailASTTest extends AbstractModuleTestSupport { 
 
 private static void checkFile ( String filename ) throws Exception { 
 final FileText text = new FileText ( new File ( filename ) , 
 - System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 + System . getProperty ( " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) ; 
 final FileContents contents = new FileContents ( text ) ; 
 final DetailAST rootAST = TreeWalker . parse ( contents ) ; 
 if ( rootAST ! = null ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java 
 index 2c84a1d . . af5d93c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java 
 @ @ - 30 , 6 + 30 , 7 @ @ import static org . powermock . api . mockito . PowerMockito . verifyStatic ; 
 import java . io . File ; 
 import java . io . IOException ; 
 import java . io . Reader ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . Locale ; 
 
 import org . junit . Test ; 
 @ @ - 70 , 7 + 71 , 7 @ @ public class FileTextTest extends AbstractPathTestSupport { 
 doNothing ( ) . when ( Closeables . class ) ; 
 Closeables . closeQuietly ( any ( Reader . class ) ) ; 
 
 - final String charsetName = " ISO - 8859 - 1 " ; 
 + final String charsetName = StandardCharsets . ISO _ 8859 _ 1 . name ( ) ; 
 final FileText fileText = new FileText ( new File ( getPath ( " InputFileTextImportControl . xml " ) ) , 
 charsetName ) ; 
 assertEquals ( " Invalid charset name " , charsetName , fileText . getCharset ( ) . name ( ) ) ; 
 @ @ - 81 , 7 + 82 , 7 @ @ public class FileTextTest extends AbstractPathTestSupport { 
 
 @ Test 
 public void testLineColumnBeforeCopyConstructor ( ) throws IOException { 
 - final String charsetName = " ISO - 8859 - 1 " ; 
 + final String charsetName = StandardCharsets . ISO _ 8859 _ 1 . name ( ) ; 
 final FileText fileText = new FileText ( new File ( getPath ( " InputFileTextImportControl . xml " ) ) , 
 charsetName ) ; 
 final LineColumn lineColumn = fileText . lineColumn ( 100 ) ; 
 @ @ - 91 , 7 + 92 , 7 @ @ public class FileTextTest extends AbstractPathTestSupport { 
 
 @ Test 
 public void testLineColumnAfterCopyConstructor ( ) throws IOException { 
 - final String charsetName = " ISO - 8859 - 1 " ; 
 + final String charsetName = StandardCharsets . ISO _ 8859 _ 1 . name ( ) ; 
 final FileText fileText = new FileText ( new File ( getPath ( " InputFileTextImportControl . xml " ) ) , 
 charsetName ) ; 
 final FileText copy = new FileText ( fileText ) ; 
 @ @ - 107 , 7 + 108 , 7 @ @ public class FileTextTest extends AbstractPathTestSupport { 
 
 @ Test 
 public void testLineColumnAtTheStartOfFile ( ) throws IOException { 
 - final String charsetName = " ISO - 8859 - 1 " ; 
 + final String charsetName = StandardCharsets . ISO _ 8859 _ 1 . name ( ) ; 
 final FileText fileText = new FileText ( new File ( getPath ( " InputFileTextImportControl . xml " ) ) , 
 charsetName ) ; 
 final FileText copy = new FileText ( fileText ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java 
 index db4eb88 . . 0a49c29 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalInstantiationCheckTest . java 
 @ @ - 22 , 6 + 22 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 import static com . puppycrawl . tools . checkstyle . checks . coding . IllegalInstantiationCheck . MSG _ KEY ; 
 
 import java . io . File ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . SortedSet ; 
 
 import org . junit . Assert ; 
 @ @ - 152 , 7 + 153 , 8 @ @ public class IllegalInstantiationCheckTest 
 
 final IllegalInstantiationCheck check = new IllegalInstantiationCheck ( ) ; 
 final File inputFile = new File ( getNonCompilablePath ( " InputIllegalInstantiationLang . java " ) ) ; 
 - check . setFileContents ( new FileContents ( new FileText ( inputFile , " UTF - 8 " ) ) ) ; 
 + check . setFileContents ( new FileContents ( new FileText ( inputFile , 
 + StandardCharsets . UTF _ 8 . name ( ) ) ) ) ; 
 check . configure ( createModuleConfig ( IllegalInstantiationCheck . class ) ) ; 
 check . setClasses ( " java . lang . Boolean " ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 index 2075b8d . . ad7762a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheckTest . java 
 @ @ - 27 , 7 + 27 , 7 @ @ import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 
 import java . io . File ; 
 - import java . nio . charset . Charset ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . nio . file . Files ; 
 
 import org . junit . Rule ; 
 @ @ - 351 , 7 + 351 , 7 @ @ public class ImportControlCheckTest extends AbstractModuleTestSupport { 
 
 assertTrue ( " External resourse is not present in cache " , 
 new String ( Files . readAllBytes ( cacheFile . toPath ( ) ) , 
 - Charset . forName ( " UTF - 8 " ) ) . contains ( " InputImportControlOneRegExp . xml " ) ) ; 
 + StandardCharsets . UTF _ 8 ) . contains ( " InputImportControlOneRegExp . xml " ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 index e95b4fa . . 824d05a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 @ @ - 185 , 7 + 185 , 8 @ @ public class TokenTypesDocletTest extends AbstractPathTestSupport { 
 final Method getRootDocImpl = getMethodGetRootDocImplByReflection ( ) ; 
 final RootDoc rootDoc ; 
 if ( System . getProperty ( " java . version " ) . startsWith ( " 1 . 7 . " ) ) { 
 - rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , " UTF - 8 " , 
 + rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , 
 + StandardCharsets . UTF _ 8 . name ( ) , 
 new ModifierFilter ( ModifierFilter . ALL _ ACCESS ) , 
 names . toList ( ) , 
 options . toList ( ) , 
 @ @ - 195 , 7 + 196 , 8 @ @ public class TokenTypesDocletTest extends AbstractPathTestSupport { 
 false , false , false ) ; 
 } 
 else { 
 - rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , " UTF - 8 " , 
 + rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , 
 + StandardCharsets . UTF _ 8 . name ( ) , 
 new ModifierFilter ( ModifierFilter . ALL _ ACCESS ) , 
 names . toList ( ) , 
 options . toList ( ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / AstRegressionTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / AstRegressionTest . java 
 index ab656d5 . . b6bc2ed 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / AstRegressionTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / AstRegressionTest . java 
 @ @ - 29 , 6 + 29 , 7 @ @ import java . io . InputStream ; 
 import java . lang . reflect . Constructor ; 
 import java . lang . reflect . InvocationTargetException ; 
 import java . lang . reflect . Method ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . Arrays ; 
 
 import org . junit . Test ; 
 @ @ - 217 , 7 + 218 , 8 @ @ public class AstRegressionTest extends AbstractTreeTestSupport { 
 AstTreeStringPrinter . PrintOptions withComments ) throws Exception { 
 final File expectedFile = new File ( expectedTextPrintFileName ) ; 
 final String expectedContents = new FileText ( expectedFile , System . getProperty ( 
 - " file . encoding " , " UTF - 8 " ) ) . getFullText ( ) . toString ( ) . replace ( " \ r " , " " ) ; 
 + " file . encoding " , StandardCharsets . UTF _ 8 . name ( ) ) ) 
 + . getFullText ( ) . toString ( ) . replace ( " \ r " , " " ) ; 
 
 final FileText actualFileContents = new FileText ( new File ( " " ) , 
 Arrays . asList ( actualJava . split ( " \ \ n | \ \ r \ \ n ? " ) ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentationTest . java 
 index 5fd81e0 . . afd5a7f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentationTest . java 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 package com . puppycrawl . tools . checkstyle . gui ; 
 
 import java . io . File ; 
 + import java . nio . charset . StandardCharsets ; 
 
 import org . junit . Assert ; 
 import org . junit . Before ; 
 @ @ - 48 , 7 + 49 , 9 @ @ public class ParseTreeTablePresentationTest extends AbstractPathTestSupport { 
 
 private static DetailAST parseFile ( File file ) throws Exception { 
 final FileContents contents = new FileContents ( 
 - new FileText ( file . getAbsoluteFile ( ) , System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ) ; 
 + new FileText ( file . getAbsoluteFile ( ) , 
 + System . getProperty ( " file . encoding " , 
 + StandardCharsets . UTF _ 8 . name ( ) ) ) ) ; 
 return TreeWalker . parseWithComments ( contents ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / TestUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / TestUtil . java 
 index 07afd91 . . 1c5d8cc 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / TestUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / utils / TestUtil . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import java . io . IOException ; 
 import java . lang . reflect . Constructor ; 
 import java . lang . reflect . Field ; 
 import java . lang . reflect . Modifier ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . util . Arrays ; 
 import java . util . Optional ; 
 import java . util . Set ; 
 @ @ - 151 , 7 + 152 , 7 @ @ public final class TestUtil { 
 * @ throws ANTLRException if parser or lexer failed 
 * / 
 public static DetailAST parseFile ( File file ) throws IOException , ANTLRException { 
 - final FileText text = new FileText ( file . getAbsoluteFile ( ) , " UTF - 8 " ) ; 
 + final FileText text = new FileText ( file . getAbsoluteFile ( ) , StandardCharsets . UTF _ 8 . name ( ) ) ; 
 final FileContents contents = new FileContents ( text ) ; 
 return parseWithComments ( contents ) ; 
 }
