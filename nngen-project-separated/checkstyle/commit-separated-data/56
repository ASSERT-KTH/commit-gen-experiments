BLEU SCORE: 0.041961149062965476

TEST MSG: Issue # 6542 : expand resource validation to IT resources
GENERATED MSG: spelling : it tests

TEST DIFF (one line): diff - - git a / config / ant - phase - verify . xml b / config / ant - phase - verify . xml <nl> index 50f2b90 . . 59a6e40 100644 <nl> - - - a / config / ant - phase - verify . xml <nl> + + + b / config / ant - phase - verify . xml <nl> @ @ - 137 , 7 + 137 , 8 @ @ <nl> executeIgnoredModules = " true " <nl> > <nl> < path > <nl> - < fileset dir = " src " includes = " test / resources / * * / * , test / resources - noncompilable / * * / * " > <nl> + < fileset dir = " src " <nl> + includes = " it / resources / * * / * , test / resources / * * / * , test / resources - noncompilable / * * / * " > <nl> < ! - - bad syntax , permanent exclude - - > <nl> < exclude name = " * * / InputAstTreeStringPrinter . java " / > <nl> < exclude name = " * * / InputSuppressionsStringPrinter . java " / > <nl> diff - - git a / config / checkstyle _ resources _ suppressions . xml b / config / checkstyle _ resources _ suppressions . xml <nl> index bf36351 . . 2fdb2bb 100644 <nl> - - - a / config / checkstyle _ resources _ suppressions . xml <nl> + + + b / config / checkstyle _ resources _ suppressions . xml <nl> @ @ - 52 , 10 + 52 , 8 @ @ <nl> <nl> < ! - - intentional problem for testing - - > <nl> < suppress checks = " OuterTypeFilename " <nl> - files = " outertypefilename [ \ \ / ] InputOuterTypeFilename1a \ . java " / > <nl> + files = " [ \ \ / ] InputOuterType . * \ . java " / > <nl> < suppress checks = " OuterTypeFilename " <nl> - files = " outertypefilename [ \ \ / ] InputOuterTypeFilename5 \ . java " / > <nl> - < suppress checks = " OuterTypeFilename " <nl> - files = " outertypefilename [ \ \ / ] InputOuterTypeFilenameNoPublic \ . java " / > <nl> + files = " rule522typenames [ \ \ / ] InputTypeName \ . java " / > <nl> <nl> < / suppressions > <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java <nl> index 8cdb72d . . 9b0fc8b 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class ClassTypeParameterNameTest extends AbstractModuleTestSupport { <nl> final Map < String , String > messages = configuration . getMessages ( ) ; <nl> <nl> final String [ ] expected = { <nl> - " 5 : 31 : " + getCheckMessage ( messages , MSG _ KEY , " t " , format ) , <nl> + " 5 : 36 : " + getCheckMessage ( messages , MSG _ KEY , " t " , format ) , <nl> " 13 : 14 : " + getCheckMessage ( messages , MSG _ KEY , " foo " , format ) , <nl> " 27 : 24 : " + getCheckMessage ( messages , MSG _ KEY , " $ foo " , format ) , <nl> } ; <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule53camelcase / AbbreviationAsWordInNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule53camelcase / AbbreviationAsWordInNameTest . java <nl> index 0a96d8b . . 4d2b574 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule53camelcase / AbbreviationAsWordInNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule53camelcase / AbbreviationAsWordInNameTest . java <nl> @ @ - 42 , 12 + 42 , 12 @ @ public class AbbreviationAsWordInNameTest extends AbstractModuleTestSupport { <nl> final int maxCapitalCount = 2 ; <nl> <nl> final String [ ] expected = { <nl> - " 52 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , <nl> - " 54 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , <nl> - " 60 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , <nl> - " 62 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , <nl> - " 69 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , <nl> - " 71 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , <nl> + " 53 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , <nl> + " 55 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , <nl> + " 61 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , <nl> + " 63 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , <nl> + " 71 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , <nl> + " 73 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , <nl> } ; <nl> <nl> final String filePath = getPath ( " InputAbbreviationAsWordInTypeNameCheck . java " ) ; <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule341onetoplevel / InputOneTopLevelClassBad1 . java b / src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule341onetoplevel / InputOneTopLevelClassBad1 . java <nl> index d4474a9 . . bcbf88f 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule341onetoplevel / InputOneTopLevelClassBad1 . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule341onetoplevel / InputOneTopLevelClassBad1 . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> package com . google . checkstyle . test . chapter3filestructure . rule341onetoplevel ; <nl> <nl> - class Foo { } / / ok <nl> + class InputOneTopLevelClassBad1 { } / / ok <nl> enum FooEnum { } / / warn <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlock . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlock . java <nl> index 624be9f . . 4a7786d 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlock . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlock . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ import java . io . * ; <nl> import java . awt . Dimension ; <nl> import java . awt . Color ; <nl> <nl> - class Block { <nl> + class InputEmptyBlock { <nl> boolean flag ; <nl> void doSm ( ) { } <nl> void foo ( ) { <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockBasic . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockBasic . java <nl> index 3f4bc68 . . 2936524 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockBasic . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockBasic . java <nl> @ @ - 8 , 13 + 8 , 13 @ @ import java . io . * ; <nl> import java . awt . Dimension ; <nl> import java . awt . Color ; <nl> <nl> - class UpdateClass <nl> + class InputEmptyBlockBasic <nl> { <nl> static { } / / ok <nl> <nl> public void fooMethod ( ) <nl> { <nl> - UpdateClass r = new UpdateClass ( ) ; <nl> + InputEmptyBlockBasic r = new InputEmptyBlockBasic ( ) ; <nl> int a = 1 ; <nl> if ( a = = 1 ) { } / / warn <nl> char [ ] s = { ' 1 ' , ' 2 ' } ; <nl> @ @ - 39 , 9 + 39 , 9 @ @ class UpdateClass <nl> <nl> class IO <nl> { <nl> - public UpdateClass read ( ) <nl> + public InputEmptyBlockBasic read ( ) <nl> { <nl> - return new UpdateClass ( ) ; <nl> + return new InputEmptyBlockBasic ( ) ; <nl> } <nl> } <nl> class Empty { } / / ok <nl> @ @ - 63 , 7 + 63 , 7 @ @ class WithInner <nl> { <nl> private void withEmpty ( ) <nl> { <nl> - UpdateClass r = new UpdateClass ( ) ; <nl> + InputEmptyBlockBasic r = new InputEmptyBlockBasic ( ) ; <nl> int a = 1 ; <nl> if ( a = = 1 ) { } / / warn <nl> char [ ] s = { ' 1 ' , ' 2 ' } ; <nl> @ @ - 93 , 7 + 93 , 7 @ @ class WithAnon <nl> public void emptyMethod ( ) { } <nl> <nl> public void fooEmpty ( ) { <nl> - UpdateClass r = new UpdateClass ( ) ; <nl> + InputEmptyBlockBasic r = new InputEmptyBlockBasic ( ) ; <nl> int a = 1 ; <nl> if ( a = = 1 ) { } / / warn <nl> char [ ] s = { ' 1 ' , ' 2 ' } ; <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockCatch . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockCatch . java <nl> index 563101b . . b6ba9ec 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockCatch . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockCatch . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ import java . io . * ; <nl> import java . awt . Dimension ; <nl> import java . awt . Color ; <nl> <nl> - class Catch { <nl> + class InputEmptyBlockCatch { <nl> boolean flag ; <nl> void doSm ( ) { } <nl> void foo ( ) { <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectFieldAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectFieldAndParameter . java <nl> index 3258b19 . . dcdb341 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectFieldAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectFieldAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule42blockindentation ; / / indent : 0 exp : 0 <nl> <nl> - class FooFieldClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectFieldAndParameter { / / indent : 0 exp : 0 <nl> <nl> boolean flag = conditionFirst ( " Loooooooooooooooooong " , new / / indent : 2 exp : 2 <nl> SecondFieldLongNam2 ( " Loooooooooooooooooog " ) . / / indent : 6 exp : 6 <nl> @ @ - 124 , 3 + 124 , 4 @ @ class SecondFieldLongNam2 { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooFieldClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectForAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectForAndParameter . java <nl> index 315ef33 . . 3f252ed 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectForAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectForAndParameter . java <nl> @ @ - 6 , 7 + 6 , 7 @ @ import java . util . Iterator ; / / indent : 0 exp : 0 <nl> import java . util . List ; / / indent : 0 exp : 0 <nl> import java . util . Map ; / / indent : 0 exp : 0 <nl> <nl> - class FooForClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectForAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 110 , 3 + 110 , 4 @ @ class SecondForClassWithLongName1 / / indent : 0 exp : 0 <nl> return null ; / / indent : 4 exp : 4 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooForClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectIfAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectIfAndParameter . java <nl> index 324efbf . . 837c0b8 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectIfAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectIfAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule42blockindentation ; / / indent : 0 exp : 0 <nl> <nl> - class FooIfClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectIfAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 141 , 3 + 141 , 4 @ @ class SecondClassLongNam3 { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooIfClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectReturnAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectReturnAndParameter . java <nl> index f6a8fe7 . . 66ae234 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectReturnAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectReturnAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule42blockindentation ; / / indent : 0 exp : 0 <nl> <nl> - class FooReturnClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectReturnAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 140 , 3 + 140 , 4 @ @ class SecondClassLongNam4 { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooReturnClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectWhileDoWhileAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectWhileDoWhileAndParameter . java <nl> index cac6932 . . 08b13d2 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectWhileDoWhileAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectWhileDoWhileAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule42blockindentation ; / / indent : 0 exp : 0 <nl> <nl> - class FooWhileClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectWhileDoWhileAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 218 , 3 + 218 , 4 @ @ class SecondWhileLongNam1 { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooWhileClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectFieldAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectFieldAndParameter . java <nl> index 92dabbc . . 49f2982 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectFieldAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectFieldAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule452indentcontinuationlines ; / / indent : 0 exp : 0 <nl> <nl> - class FooFieldClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectFieldAndParameter { / / indent : 0 exp : 0 <nl> <nl> boolean flag = conditionFirst ( " Loooooooooooooooooong " , new / / indent : 2 exp : 2 <nl> SecondFieldWithName ( " Loooooooooooooooooog " ) . / / indent : 6 exp : 6 <nl> @ @ - 124 , 3 + 124 , 4 @ @ class SecondFieldWithName { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooFieldClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectForAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectForAndParameter . java <nl> index 2470d9a . . a9ce244 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectForAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectForAndParameter . java <nl> @ @ - 6 , 7 + 6 , 7 @ @ import java . util . Iterator ; / / indent : 0 exp : 0 <nl> import java . util . List ; / / indent : 0 exp : 0 <nl> import java . util . Map ; / / indent : 0 exp : 0 <nl> <nl> - class FooForClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectForAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 110 , 3 + 110 , 4 @ @ class SecondForClassWithLongName / / indent : 0 exp : 0 <nl> return null ; / / indent : 4 exp : 4 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooForClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectIfAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectIfAndParameter . java <nl> index 3d76f41 . . 101e496 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectIfAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectIfAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule452indentcontinuationlines ; / / indent : 0 exp : 0 <nl> <nl> - class FooIfClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectIfAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 141 , 3 + 141 , 4 @ @ class SecondClassLongNam8 { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooIfClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectReturnAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectReturnAndParameter . java <nl> index 53346b6 . . 0d101db 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectReturnAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectReturnAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule452indentcontinuationlines ; / / indent : 0 exp : 0 <nl> <nl> - class FooReturnClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectReturnAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 140 , 3 + 140 , 4 @ @ class SecondClassLongName { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooReturnClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectWhileDoWhileAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectWhileDoWhileAndParameter . java <nl> index c20a961 . . 854af60 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectWhileDoWhileAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectWhileDoWhileAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule452indentcontinuationlines ; / / indent : 0 exp : 0 <nl> <nl> - class FooWhileClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectWhileDoWhileAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 218 , 3 + 218 , 4 @ @ class SecondWhileLongName { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooWhileClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java <nl> index 9bf408b . . 9e95e95 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java <nl> @ @ - 4 , 7 + 4 , 7 @ @ package com . google . checkstyle . test . chapter4formatting . rule462horizontalwhitespac <nl> * Class for testing whitespace issues . <nl> * error missing author tag <nl> * * / <nl> - class InputWhitespace <nl> + class InputWhitespaceAroundBasic <nl> { <nl> / * * warn * * / <nl> private int mVar1 = 1 ; / / warn <nl> @ @ - 185 , 7 + 185 , 7 @ @ class InputWhitespace <nl> / * * bug 806243 ( NoWhitespaceBeforeCheck error for anonymous inner class ) * / <nl> void bug806243 ( ) <nl> { <nl> - Object o = new InputWhitespace ( ) { <nl> + Object o = new InputWhitespaceAroundBasic ( ) { <nl> private int j ; <nl> / / ^ whitespace <nl> } ; <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectFieldAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectFieldAndParameter . java <nl> index 100ab31 . . 57ce596 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectFieldAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectFieldAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule4841indentation ; / / indent : 0 exp : 0 <nl> <nl> - class FooFieldClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectFieldAndParameter { / / indent : 0 exp : 0 <nl> <nl> boolean flag = conditionFirst ( " Loooooooooooooooooong " , new / / indent : 2 exp : 2 <nl> SecondFieldLongName ( " Loooooooooooooooooog " ) . / / indent : 6 exp : 6 <nl> @ @ - 124 , 3 + 124 , 4 @ @ class SecondFieldLongName { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooFieldClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectForAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectForAndParameter . java <nl> index 764c548 . . 3862985 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectForAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectForAndParameter . java <nl> @ @ - 6 , 7 + 6 , 7 @ @ import java . util . Iterator ; / / indent : 0 exp : 0 <nl> import java . util . List ; / / indent : 0 exp : 0 <nl> import java . util . Map ; / / indent : 0 exp : 0 <nl> <nl> - class FooForClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectForAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 110 , 3 + 110 , 4 @ @ class SecondForLongName / / indent : 0 exp : 0 <nl> return null ; / / indent : 4 exp : 4 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooForClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectIfAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectIfAndParameter . java <nl> index 8853284 . . 81a0436 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectIfAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectIfAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule4841indentation ; / / indent : 0 exp : 0 <nl> <nl> - class FooIfClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectIfAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 141 , 3 + 141 , 4 @ @ class SecondClassLongNam6 { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooIfClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectReturnAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectReturnAndParameter . java <nl> index 3e06ddf . . ac56e42 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectReturnAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectReturnAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule4841indentation ; / / indent : 0 exp : 0 <nl> <nl> - class FooReturnClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectReturnAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 140 , 3 + 140 , 4 @ @ class SecondClassLongName { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooReturnClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectWhileDoWhileAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectWhileDoWhileAndParameter . java <nl> index 8762d6d . . 655dd05 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectWhileDoWhileAndParameter . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectWhileDoWhileAndParameter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter4formatting . rule4841indentation ; / / indent : 0 exp : 0 <nl> <nl> - class FooWhileClass { / / indent : 0 exp : 0 <nl> + class InputIndentationCorrectWhileDoWhileAndParameter { / / indent : 0 exp : 0 <nl> <nl> String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 <nl> return " String " ; / / indent : 4 exp : 4 <nl> @ @ - 218 , 3 + 218 , 4 @ @ class SecondWhileLongName { / / indent : 0 exp : 0 <nl> + " oongString " ) ; / / indent : 8 exp : 8 <nl> } / / indent : 2 exp : 2 <nl> } / / indent : 0 exp : 0 <nl> + class FooWhileClass { } / / indent : 0 exp : 0 <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java <nl> index f8c08df . . c6f515e 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; <nl> import java . io . * ; <nl> <nl> - final class InputSimple <nl> + final class InputMemberNameSimple <nl> { <nl> <nl> public static final int badConstant = 2 ; <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java <nl> index a3e2d4e . . 55c5e81 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java <nl> @ @ - 4 , 7 + 4 , 7 @ @ import java . io . * ; <nl> import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> - class InputOneCharInitVarName <nl> + class InputLocalVariableNameOneCharVarName <nl> { <nl> public void fooMethod ( ) <nl> { <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java <nl> index 8a60123 . . 7983a7d 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; <nl> <nl> - final class InputSimple <nl> + final class InputLocalVariableNameSimple <nl> { <nl> public static final int badConstant = 2 ; <nl> <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java <nl> index b8869f9 . . d4e9ac3 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java <nl> @ @ - 2 , 7 + 2 , 7 @ @ package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; <nl> <nl> import java . io . Serializable ; <nl> <nl> - class InputTypeParameterName < t > / / warn <nl> + class InputClassTypeParameterName < t > / / warn <nl> { <nl> public < TT > void foo ( ) { } <nl> <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java <nl> index 4eb0a78 . . 1baa502 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java <nl> @ @ - 2 , 7 + 2 , 7 @ @ package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; <nl> <nl> import java . io . Serializable ; <nl> <nl> - class InputTypeParameterName1 < t > <nl> + class InputMethodTypeParameterName < t > <nl> { <nl> public < TT > void foo ( ) { } <nl> <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule53camelcase / InputAbbreviationAsWordInTypeNameCheck . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule53camelcase / InputAbbreviationAsWordInTypeNameCheck . java <nl> index 4e38dad . . d3635b1 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule53camelcase / InputAbbreviationAsWordInTypeNameCheck . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule53camelcase / InputAbbreviationAsWordInTypeNameCheck . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter5naming . rule53camelcase ; <nl> <nl> - class AbbreviationsCorrect { <nl> + class InputAbbreviationAsWordInTypeNameCheck { <nl> <nl> int newCustomerId ; <nl> <nl> @ @ - 29 , 7 + 29 , 8 @ @ class AbbreviationsCorrect { <nl> void YoutubeImporter ( ) { } <nl> } <nl> <nl> - AbbreviationsCorrect anonymousGood = new AbbreviationsCorrect ( ) { <nl> + InputAbbreviationAsWordInTypeNameCheck anonymousGood <nl> + = new InputAbbreviationAsWordInTypeNameCheck ( ) { <nl> <nl> int newCustomerId ; <nl> <nl> @ @ - 62 , 7 + 63 , 8 @ @ class AbbreviationsIncorrect { <nl> void XMLHTTPRequest ( ) { } / / warn <nl> } <nl> <nl> - AbbreviationsCorrect anonymousBad = new AbbreviationsCorrect ( ) { <nl> + InputAbbreviationAsWordInTypeNameCheck anonymousBad <nl> + = new InputAbbreviationAsWordInTypeNameCheck ( ) { <nl> <nl> int newCustomerID ; <nl> <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule62donotignoreexceptions / InputEmptyBlockCatch . java b / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule62donotignoreexceptions / InputEmptyBlockCatch . java <nl> index e6c4d05 . . a42de83 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule62donotignoreexceptions / InputEmptyBlockCatch . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule62donotignoreexceptions / InputEmptyBlockCatch . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ import java . io . * ; <nl> import java . awt . Dimension ; <nl> import java . awt . Color ; <nl> <nl> - class Catch { <nl> + class InputEmptyBlockCatch { <nl> boolean flag ; <nl> void doSm ( ) { } <nl> void foo ( ) { <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule64finalizers / InputNoFinalizeExtend . java b / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule64finalizers / InputNoFinalizeExtend . java <nl> index 75c0035 . . 31ddde9 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule64finalizers / InputNoFinalizeExtend . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule64finalizers / InputNoFinalizeExtend . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter6programpractice . rule64finalizers ; <nl> <nl> - class NormalFinalizer { <nl> + class InputNoFinalizeExtend { <nl> <nl> public static void doStuff ( ) { <nl> / / This method do some stuff <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule711generalform / InputSingleLineJavadocCheck . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule711generalform / InputSingleLineJavadocCheck . java <nl> index be66710 . . 4051bee 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule711generalform / InputSingleLineJavadocCheck . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule711generalform / InputSingleLineJavadocCheck . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . google . checkstyle . test . chapter7javadoc . rule711generalform ; <nl> <nl> - class Foo { <nl> + class InputSingleLineJavadocCheck { <nl> <nl> 	 / * * As of JDK 1 . 1 , replaced by { @ link # setBounds ( int , int , int , int ) } * / / / warn <nl> void foo1 ( ) { } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule712paragraphs / InputIncorrectJavadocParagraphCheck . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule712paragraphs / InputIncorrectJavadocParagraphCheck . java <nl> index 1b4b180 . . 0af32e7 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule712paragraphs / InputIncorrectJavadocParagraphCheck . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule712paragraphs / InputIncorrectJavadocParagraphCheck . java <nl> @ @ - 6 , 7 + 6 , 7 @ @ package com . google . checkstyle . test . chapter7javadoc . rule712paragraphs ; <nl> * / ^ WARN / Some Javadoc . < p > / / warn <nl> * <nl> * / <nl> - class InputCorrectJavaDocParagraphCheck1 { <nl> + class InputIncorrectJavadocParagraphCheck { <nl> <nl> / * * <nl> * Some Javadoc . < P > / / warn <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputCorrectAtClauseOrderCheck . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputCorrectAtClauseOrderCheck . java <nl> index 5d820a4 . . d79c24c 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputCorrectAtClauseOrderCheck . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputCorrectAtClauseOrderCheck . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Serializable ; <nl> * @ since Some javadoc . <nl> * @ deprecated Some javadoc . <nl> * / <nl> - class WithAnnotations implements Serializable <nl> + class InputCorrectAtClauseOrderCheck implements Serializable <nl> { <nl> <nl> / * * <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputIncorrectAtClauseOrderCheck . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputIncorrectAtClauseOrderCheck . java <nl> index 9ca960d . . 9422626 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputIncorrectAtClauseOrderCheck . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputIncorrectAtClauseOrderCheck . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Serializable ; <nl> * @ see Some javadoc . <nl> * @ author max <nl> * / <nl> - class WithAnnotations12 implements Serializable <nl> + class InputIncorrectAtClauseOrderCheck implements Serializable <nl> { <nl> / * * <nl> * The client ' s first name . <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputJavaDocTagContinuationIndentation . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputJavaDocTagContinuationIndentation . java <nl> index 35d174f . . a2771d1 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputJavaDocTagContinuationIndentation . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputJavaDocTagContinuationIndentation . java <nl> @ @ - 14 , 7 + 14 , 7 @ @ import java . io . Serializable ; <nl> * @ author max <nl> * Some javadoc . <nl> * / <nl> - class JavaDocTagContinuationIndentation implements Serializable <nl> + class InputJavaDocTagContinuationIndentation implements Serializable <nl> { <nl> 	 / * * <nl> * The client ' s first name . <nl> diff - - git a / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotFollowed . java b / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotFollowed . java <nl> index 3064ddf . . fa04b7a 100644 <nl> - - - a / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotFollowed . java <nl> + + + b / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotFollowed . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - package org . checkstyle . suppressionxpathfilter . whitespaceafter ; <nl> + package org . checkstyle . suppressionxpathfilter . whitespacearound ; <nl> <nl> public class SuppressionXpathRegressionWhitespaceAroundNotFollowed { <nl> int bad = 0 ; / / warn <nl> diff - - git a / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotPreceded . java b / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotPreceded . java <nl> index f117b7a . . 358f5af 100644 <nl> - - - a / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotPreceded . java <nl> + + + b / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotPreceded . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - package org . checkstyle . suppressionxpathfilter . whitespaceafter ; <nl> + package org . checkstyle . suppressionxpathfilter . whitespacearound ; <nl> <nl> public class SuppressionXpathRegressionWhitespaceAroundNotPreceded { <nl> int bad = 0 ; / / warn
NEAREST DIFF (one line): diff - - git a / src / xdocs / writingfilefilters . xml b / src / xdocs / writingfilefilters . xml <nl> index 5657623 . . fce1df3 100644 <nl> - - - a / src / xdocs / writingfilefilters . xml <nl> + + + b / src / xdocs / writingfilefilters . xml <nl> @ @ - 74 , 24 + 74 , 24 @ @ public class FilesBeforeExecutionFileFilter <nl> extends AutomaticBean <nl> implements BeforeExecutionFileFilter <nl> { <nl> - private Pattern mFileRegexp ; <nl> - <nl> - public FilesBeforeExecutionFileFilter ( ) <nl> - throws PatternSyntaxException <nl> - { <nl> - setFiles ( " ^ $ " ) ; <nl> - } <nl> - <nl> - public boolean accept ( String uri ) <nl> - { <nl> - return ( ( uri = = null ) | | ! mFileRegexp . matcher ( uri ) . find ( ) ) ; <nl> - } <nl> - <nl> - public void setFiles ( String aFilesPattern ) <nl> - throws PatternSyntaxException <nl> - { <nl> - mFileRegexp = Utils . getPattern ( aFilesPattern ) ; <nl> - } <nl> + private Pattern mFileRegexp ; <nl> + <nl> + public FilesBeforeExecutionFileFilter ( ) <nl> + throws PatternSyntaxException <nl> + { <nl> + setFiles ( " ^ $ " ) ; <nl> + } <nl> + <nl> + public boolean accept ( String uri ) <nl> + { <nl> + return ( ( uri = = null ) | | ! mFileRegexp . matcher ( uri ) . find ( ) ) ; <nl> + } <nl> + <nl> + public void setFiles ( String aFilesPattern ) <nl> + throws PatternSyntaxException <nl> + { <nl> + mFileRegexp = Utils . getPattern ( aFilesPattern ) ; <nl> + } <nl> } <nl> < / source > <nl> < / section > <nl> @ @ - 110 , 7 + 110 , 7 @ @ public class FilesBeforeExecutionFileFilter <nl> <nl> < source > <nl> & lt ; module name = & quot ; com . mycompany . filters . FilesBeforeExecutionFileFilter & quot ; & gt ; <nl> - & lt ; property name = & quot ; files & quot ; value = & quot ; Generated & quot ; / & gt ; <nl> + & lt ; property name = & quot ; files & quot ; value = & quot ; Generated & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < / section > <nl> diff - - git a / src / xdocs / writingfilters . xml b / src / xdocs / writingfilters . xml <nl> index e71f151 . . 20ef3b3 100644 <nl> - - - a / src / xdocs / writingfilters . xml <nl> + + + b / src / xdocs / writingfilters . xml <nl> @ @ - 78 , 25 + 78 , 25 @ @ public class FilesFilter <nl> extends AutomaticBean <nl> implements Filter <nl> { <nl> - private Pattern mFileRegexp ; <nl> - <nl> - public FilesFilter ( ) <nl> - throws PatternSyntaxException <nl> - { <nl> - setFiles ( " ^ $ " ) ; <nl> - } <nl> - <nl> - public boolean accept ( AuditEvent aEvent ) <nl> - { <nl> - final String fileName = aEvent . getFileName ( ) ; <nl> - return ( ( fileName = = null ) | | ! mFileRegexp . matcher ( fileName ) . find ( ) ) ; <nl> - } <nl> - <nl> - public void setFiles ( String aFilesPattern ) <nl> - throws PatternSyntaxException <nl> - { <nl> - mFileRegexp = Utils . getPattern ( aFilesPattern ) ; <nl> - } <nl> + private Pattern mFileRegexp ; <nl> + <nl> + public FilesFilter ( ) <nl> + throws PatternSyntaxException <nl> + { <nl> + setFiles ( " ^ $ " ) ; <nl> + } <nl> + <nl> + public boolean accept ( AuditEvent aEvent ) <nl> + { <nl> + final String fileName = aEvent . getFileName ( ) ; <nl> + return ( ( fileName = = null ) | | ! mFileRegexp . matcher ( fileName ) . find ( ) ) ; <nl> + } <nl> + <nl> + public void setFiles ( String aFilesPattern ) <nl> + throws PatternSyntaxException <nl> + { <nl> + mFileRegexp = Utils . getPattern ( aFilesPattern ) ; <nl> + } <nl> } <nl> < / source > <nl> < / section > <nl> @ @ - 121 , 7 + 121 , 7 @ @ public class FilesFilter <nl> <nl> < source > <nl> & lt ; module name = & quot ; com . mycompany . filters . FilesFilter & quot ; & gt ; <nl> - & lt ; property name = & quot ; files & quot ; value = & quot ; Generated & quot ; / & gt ; <nl> + & lt ; property name = & quot ; files & quot ; value = & quot ; Generated & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> < / section >

TEST DIFF:
diff - - git a / config / ant - phase - verify . xml b / config / ant - phase - verify . xml 
 index 50f2b90 . . 59a6e40 100644 
 - - - a / config / ant - phase - verify . xml 
 + + + b / config / ant - phase - verify . xml 
 @ @ - 137 , 7 + 137 , 8 @ @ 
 executeIgnoredModules = " true " 
 > 
 < path > 
 - < fileset dir = " src " includes = " test / resources / * * / * , test / resources - noncompilable / * * / * " > 
 + < fileset dir = " src " 
 + includes = " it / resources / * * / * , test / resources / * * / * , test / resources - noncompilable / * * / * " > 
 < ! - - bad syntax , permanent exclude - - > 
 < exclude name = " * * / InputAstTreeStringPrinter . java " / > 
 < exclude name = " * * / InputSuppressionsStringPrinter . java " / > 
 diff - - git a / config / checkstyle _ resources _ suppressions . xml b / config / checkstyle _ resources _ suppressions . xml 
 index bf36351 . . 2fdb2bb 100644 
 - - - a / config / checkstyle _ resources _ suppressions . xml 
 + + + b / config / checkstyle _ resources _ suppressions . xml 
 @ @ - 52 , 10 + 52 , 8 @ @ 
 
 < ! - - intentional problem for testing - - > 
 < suppress checks = " OuterTypeFilename " 
 - files = " outertypefilename [ \ \ / ] InputOuterTypeFilename1a \ . java " / > 
 + files = " [ \ \ / ] InputOuterType . * \ . java " / > 
 < suppress checks = " OuterTypeFilename " 
 - files = " outertypefilename [ \ \ / ] InputOuterTypeFilename5 \ . java " / > 
 - < suppress checks = " OuterTypeFilename " 
 - files = " outertypefilename [ \ \ / ] InputOuterTypeFilenameNoPublic \ . java " / > 
 + files = " rule522typenames [ \ \ / ] InputTypeName \ . java " / > 
 
 < / suppressions > 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java 
 index 8cdb72d . . 9b0fc8b 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public class ClassTypeParameterNameTest extends AbstractModuleTestSupport { 
 final Map < String , String > messages = configuration . getMessages ( ) ; 
 
 final String [ ] expected = { 
 - " 5 : 31 : " + getCheckMessage ( messages , MSG _ KEY , " t " , format ) , 
 + " 5 : 36 : " + getCheckMessage ( messages , MSG _ KEY , " t " , format ) , 
 " 13 : 14 : " + getCheckMessage ( messages , MSG _ KEY , " foo " , format ) , 
 " 27 : 24 : " + getCheckMessage ( messages , MSG _ KEY , " $ foo " , format ) , 
 } ; 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule53camelcase / AbbreviationAsWordInNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule53camelcase / AbbreviationAsWordInNameTest . java 
 index 0a96d8b . . 4d2b574 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule53camelcase / AbbreviationAsWordInNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule53camelcase / AbbreviationAsWordInNameTest . java 
 @ @ - 42 , 12 + 42 , 12 @ @ public class AbbreviationAsWordInNameTest extends AbstractModuleTestSupport { 
 final int maxCapitalCount = 2 ; 
 
 final String [ ] expected = { 
 - " 52 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , 
 - " 54 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , 
 - " 60 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , 
 - " 62 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , 
 - " 69 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , 
 - " 71 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , 
 + " 53 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , 
 + " 55 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , 
 + " 61 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , 
 + " 63 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , 
 + " 71 : " + getWarningMessage ( " supportsIPv6OnIOS " , maxCapitalCount ) , 
 + " 73 : " + getWarningMessage ( " XMLHTTPRequest " , maxCapitalCount ) , 
 } ; 
 
 final String filePath = getPath ( " InputAbbreviationAsWordInTypeNameCheck . java " ) ; 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule341onetoplevel / InputOneTopLevelClassBad1 . java b / src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule341onetoplevel / InputOneTopLevelClassBad1 . java 
 index d4474a9 . . bcbf88f 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule341onetoplevel / InputOneTopLevelClassBad1 . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter3filestructure / rule341onetoplevel / InputOneTopLevelClassBad1 . java 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 package com . google . checkstyle . test . chapter3filestructure . rule341onetoplevel ; 
 
 - class Foo { } / / ok 
 + class InputOneTopLevelClassBad1 { } / / ok 
 enum FooEnum { } / / warn 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlock . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlock . java 
 index 624be9f . . 4a7786d 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlock . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlock . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import java . io . * ; 
 import java . awt . Dimension ; 
 import java . awt . Color ; 
 
 - class Block { 
 + class InputEmptyBlock { 
 boolean flag ; 
 void doSm ( ) { } 
 void foo ( ) { 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockBasic . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockBasic . java 
 index 3f4bc68 . . 2936524 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockBasic . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockBasic . java 
 @ @ - 8 , 13 + 8 , 13 @ @ import java . io . * ; 
 import java . awt . Dimension ; 
 import java . awt . Color ; 
 
 - class UpdateClass 
 + class InputEmptyBlockBasic 
 { 
 static { } / / ok 
 
 public void fooMethod ( ) 
 { 
 - UpdateClass r = new UpdateClass ( ) ; 
 + InputEmptyBlockBasic r = new InputEmptyBlockBasic ( ) ; 
 int a = 1 ; 
 if ( a = = 1 ) { } / / warn 
 char [ ] s = { ' 1 ' , ' 2 ' } ; 
 @ @ - 39 , 9 + 39 , 9 @ @ class UpdateClass 
 
 class IO 
 { 
 - public UpdateClass read ( ) 
 + public InputEmptyBlockBasic read ( ) 
 { 
 - return new UpdateClass ( ) ; 
 + return new InputEmptyBlockBasic ( ) ; 
 } 
 } 
 class Empty { } / / ok 
 @ @ - 63 , 7 + 63 , 7 @ @ class WithInner 
 { 
 private void withEmpty ( ) 
 { 
 - UpdateClass r = new UpdateClass ( ) ; 
 + InputEmptyBlockBasic r = new InputEmptyBlockBasic ( ) ; 
 int a = 1 ; 
 if ( a = = 1 ) { } / / warn 
 char [ ] s = { ' 1 ' , ' 2 ' } ; 
 @ @ - 93 , 7 + 93 , 7 @ @ class WithAnon 
 public void emptyMethod ( ) { } 
 
 public void fooEmpty ( ) { 
 - UpdateClass r = new UpdateClass ( ) ; 
 + InputEmptyBlockBasic r = new InputEmptyBlockBasic ( ) ; 
 int a = 1 ; 
 if ( a = = 1 ) { } / / warn 
 char [ ] s = { ' 1 ' , ' 2 ' } ; 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockCatch . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockCatch . java 
 index 563101b . . b6ba9ec 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockCatch . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule413emptyblocks / InputEmptyBlockCatch . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import java . io . * ; 
 import java . awt . Dimension ; 
 import java . awt . Color ; 
 
 - class Catch { 
 + class InputEmptyBlockCatch { 
 boolean flag ; 
 void doSm ( ) { } 
 void foo ( ) { 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectFieldAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectFieldAndParameter . java 
 index 3258b19 . . dcdb341 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectFieldAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectFieldAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule42blockindentation ; / / indent : 0 exp : 0 
 
 - class FooFieldClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectFieldAndParameter { / / indent : 0 exp : 0 
 
 boolean flag = conditionFirst ( " Loooooooooooooooooong " , new / / indent : 2 exp : 2 
 SecondFieldLongNam2 ( " Loooooooooooooooooog " ) . / / indent : 6 exp : 6 
 @ @ - 124 , 3 + 124 , 4 @ @ class SecondFieldLongNam2 { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooFieldClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectForAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectForAndParameter . java 
 index 315ef33 . . 3f252ed 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectForAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectForAndParameter . java 
 @ @ - 6 , 7 + 6 , 7 @ @ import java . util . Iterator ; / / indent : 0 exp : 0 
 import java . util . List ; / / indent : 0 exp : 0 
 import java . util . Map ; / / indent : 0 exp : 0 
 
 - class FooForClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectForAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 110 , 3 + 110 , 4 @ @ class SecondForClassWithLongName1 / / indent : 0 exp : 0 
 return null ; / / indent : 4 exp : 4 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooForClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectIfAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectIfAndParameter . java 
 index 324efbf . . 837c0b8 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectIfAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectIfAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule42blockindentation ; / / indent : 0 exp : 0 
 
 - class FooIfClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectIfAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 141 , 3 + 141 , 4 @ @ class SecondClassLongNam3 { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooIfClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectReturnAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectReturnAndParameter . java 
 index f6a8fe7 . . 66ae234 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectReturnAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectReturnAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule42blockindentation ; / / indent : 0 exp : 0 
 
 - class FooReturnClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectReturnAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 140 , 3 + 140 , 4 @ @ class SecondClassLongNam4 { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooReturnClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectWhileDoWhileAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectWhileDoWhileAndParameter . java 
 index cac6932 . . 08b13d2 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectWhileDoWhileAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule42blockindentation / InputIndentationCorrectWhileDoWhileAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule42blockindentation ; / / indent : 0 exp : 0 
 
 - class FooWhileClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectWhileDoWhileAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 218 , 3 + 218 , 4 @ @ class SecondWhileLongNam1 { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooWhileClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectFieldAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectFieldAndParameter . java 
 index 92dabbc . . 49f2982 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectFieldAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectFieldAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule452indentcontinuationlines ; / / indent : 0 exp : 0 
 
 - class FooFieldClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectFieldAndParameter { / / indent : 0 exp : 0 
 
 boolean flag = conditionFirst ( " Loooooooooooooooooong " , new / / indent : 2 exp : 2 
 SecondFieldWithName ( " Loooooooooooooooooog " ) . / / indent : 6 exp : 6 
 @ @ - 124 , 3 + 124 , 4 @ @ class SecondFieldWithName { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooFieldClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectForAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectForAndParameter . java 
 index 2470d9a . . a9ce244 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectForAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectForAndParameter . java 
 @ @ - 6 , 7 + 6 , 7 @ @ import java . util . Iterator ; / / indent : 0 exp : 0 
 import java . util . List ; / / indent : 0 exp : 0 
 import java . util . Map ; / / indent : 0 exp : 0 
 
 - class FooForClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectForAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 110 , 3 + 110 , 4 @ @ class SecondForClassWithLongName / / indent : 0 exp : 0 
 return null ; / / indent : 4 exp : 4 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooForClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectIfAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectIfAndParameter . java 
 index 3d76f41 . . 101e496 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectIfAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectIfAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule452indentcontinuationlines ; / / indent : 0 exp : 0 
 
 - class FooIfClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectIfAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 141 , 3 + 141 , 4 @ @ class SecondClassLongNam8 { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooIfClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectReturnAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectReturnAndParameter . java 
 index 53346b6 . . 0d101db 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectReturnAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectReturnAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule452indentcontinuationlines ; / / indent : 0 exp : 0 
 
 - class FooReturnClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectReturnAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 140 , 3 + 140 , 4 @ @ class SecondClassLongName { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooReturnClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectWhileDoWhileAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectWhileDoWhileAndParameter . java 
 index c20a961 . . 854af60 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectWhileDoWhileAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule452indentcontinuationlines / InputIndentationCorrectWhileDoWhileAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule452indentcontinuationlines ; / / indent : 0 exp : 0 
 
 - class FooWhileClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectWhileDoWhileAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 218 , 3 + 218 , 4 @ @ class SecondWhileLongName { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooWhileClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java 
 index 9bf408b . . 9e95e95 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java 
 @ @ - 4 , 7 + 4 , 7 @ @ package com . google . checkstyle . test . chapter4formatting . rule462horizontalwhitespac 
 * Class for testing whitespace issues . 
 * error missing author tag 
 * * / 
 - class InputWhitespace 
 + class InputWhitespaceAroundBasic 
 { 
 / * * warn * * / 
 private int mVar1 = 1 ; / / warn 
 @ @ - 185 , 7 + 185 , 7 @ @ class InputWhitespace 
 / * * bug 806243 ( NoWhitespaceBeforeCheck error for anonymous inner class ) * / 
 void bug806243 ( ) 
 { 
 - Object o = new InputWhitespace ( ) { 
 + Object o = new InputWhitespaceAroundBasic ( ) { 
 private int j ; 
 / / ^ whitespace 
 } ; 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectFieldAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectFieldAndParameter . java 
 index 100ab31 . . 57ce596 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectFieldAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectFieldAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule4841indentation ; / / indent : 0 exp : 0 
 
 - class FooFieldClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectFieldAndParameter { / / indent : 0 exp : 0 
 
 boolean flag = conditionFirst ( " Loooooooooooooooooong " , new / / indent : 2 exp : 2 
 SecondFieldLongName ( " Loooooooooooooooooog " ) . / / indent : 6 exp : 6 
 @ @ - 124 , 3 + 124 , 4 @ @ class SecondFieldLongName { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooFieldClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectForAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectForAndParameter . java 
 index 764c548 . . 3862985 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectForAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectForAndParameter . java 
 @ @ - 6 , 7 + 6 , 7 @ @ import java . util . Iterator ; / / indent : 0 exp : 0 
 import java . util . List ; / / indent : 0 exp : 0 
 import java . util . Map ; / / indent : 0 exp : 0 
 
 - class FooForClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectForAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 110 , 3 + 110 , 4 @ @ class SecondForLongName / / indent : 0 exp : 0 
 return null ; / / indent : 4 exp : 4 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooForClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectIfAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectIfAndParameter . java 
 index 8853284 . . 81a0436 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectIfAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectIfAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule4841indentation ; / / indent : 0 exp : 0 
 
 - class FooIfClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectIfAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 141 , 3 + 141 , 4 @ @ class SecondClassLongNam6 { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooIfClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectReturnAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectReturnAndParameter . java 
 index 3e06ddf . . ac56e42 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectReturnAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectReturnAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule4841indentation ; / / indent : 0 exp : 0 
 
 - class FooReturnClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectReturnAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 140 , 3 + 140 , 4 @ @ class SecondClassLongName { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooReturnClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectWhileDoWhileAndParameter . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectWhileDoWhileAndParameter . java 
 index 8762d6d . . 655dd05 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectWhileDoWhileAndParameter . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule4841indentation / InputIndentationCorrectWhileDoWhileAndParameter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter4formatting . rule4841indentation ; / / indent : 0 exp : 0 
 
 - class FooWhileClass { / / indent : 0 exp : 0 
 + class InputIndentationCorrectWhileDoWhileAndParameter { / / indent : 0 exp : 0 
 
 String getString ( int someInt , String someString ) { / / indent : 2 exp : 2 
 return " String " ; / / indent : 4 exp : 4 
 @ @ - 218 , 3 + 218 , 4 @ @ class SecondWhileLongName { / / indent : 0 exp : 0 
 + " oongString " ) ; / / indent : 8 exp : 8 
 } / / indent : 2 exp : 2 
 } / / indent : 0 exp : 0 
 + class FooWhileClass { } / / indent : 0 exp : 0 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java 
 index f8c08df . . c6f515e 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; 
 import java . io . * ; 
 
 - final class InputSimple 
 + final class InputMemberNameSimple 
 { 
 
 public static final int badConstant = 2 ; 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java 
 index a3e2d4e . . 55c5e81 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java 
 @ @ - 4 , 7 + 4 , 7 @ @ import java . io . * ; 
 import java . util . HashMap ; 
 import java . util . Map ; 
 
 - class InputOneCharInitVarName 
 + class InputLocalVariableNameOneCharVarName 
 { 
 public void fooMethod ( ) 
 { 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java 
 index 8a60123 . . 7983a7d 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; 
 
 - final class InputSimple 
 + final class InputLocalVariableNameSimple 
 { 
 public static final int badConstant = 2 ; 
 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java 
 index b8869f9 . . d4e9ac3 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; 
 
 import java . io . Serializable ; 
 
 - class InputTypeParameterName < t > / / warn 
 + class InputClassTypeParameterName < t > / / warn 
 { 
 public < TT > void foo ( ) { } 
 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java 
 index 4eb0a78 . . 1baa502 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; 
 
 import java . io . Serializable ; 
 
 - class InputTypeParameterName1 < t > 
 + class InputMethodTypeParameterName < t > 
 { 
 public < TT > void foo ( ) { } 
 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule53camelcase / InputAbbreviationAsWordInTypeNameCheck . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule53camelcase / InputAbbreviationAsWordInTypeNameCheck . java 
 index 4e38dad . . d3635b1 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule53camelcase / InputAbbreviationAsWordInTypeNameCheck . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule53camelcase / InputAbbreviationAsWordInTypeNameCheck . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter5naming . rule53camelcase ; 
 
 - class AbbreviationsCorrect { 
 + class InputAbbreviationAsWordInTypeNameCheck { 
 
 int newCustomerId ; 
 
 @ @ - 29 , 7 + 29 , 8 @ @ class AbbreviationsCorrect { 
 void YoutubeImporter ( ) { } 
 } 
 
 - AbbreviationsCorrect anonymousGood = new AbbreviationsCorrect ( ) { 
 + InputAbbreviationAsWordInTypeNameCheck anonymousGood 
 + = new InputAbbreviationAsWordInTypeNameCheck ( ) { 
 
 int newCustomerId ; 
 
 @ @ - 62 , 7 + 63 , 8 @ @ class AbbreviationsIncorrect { 
 void XMLHTTPRequest ( ) { } / / warn 
 } 
 
 - AbbreviationsCorrect anonymousBad = new AbbreviationsCorrect ( ) { 
 + InputAbbreviationAsWordInTypeNameCheck anonymousBad 
 + = new InputAbbreviationAsWordInTypeNameCheck ( ) { 
 
 int newCustomerID ; 
 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule62donotignoreexceptions / InputEmptyBlockCatch . java b / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule62donotignoreexceptions / InputEmptyBlockCatch . java 
 index e6c4d05 . . a42de83 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule62donotignoreexceptions / InputEmptyBlockCatch . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule62donotignoreexceptions / InputEmptyBlockCatch . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import java . io . * ; 
 import java . awt . Dimension ; 
 import java . awt . Color ; 
 
 - class Catch { 
 + class InputEmptyBlockCatch { 
 boolean flag ; 
 void doSm ( ) { } 
 void foo ( ) { 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule64finalizers / InputNoFinalizeExtend . java b / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule64finalizers / InputNoFinalizeExtend . java 
 index 75c0035 . . 31ddde9 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule64finalizers / InputNoFinalizeExtend . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter6programpractice / rule64finalizers / InputNoFinalizeExtend . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter6programpractice . rule64finalizers ; 
 
 - class NormalFinalizer { 
 + class InputNoFinalizeExtend { 
 
 public static void doStuff ( ) { 
 / / This method do some stuff 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule711generalform / InputSingleLineJavadocCheck . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule711generalform / InputSingleLineJavadocCheck . java 
 index be66710 . . 4051bee 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule711generalform / InputSingleLineJavadocCheck . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule711generalform / InputSingleLineJavadocCheck . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . google . checkstyle . test . chapter7javadoc . rule711generalform ; 
 
 - class Foo { 
 + class InputSingleLineJavadocCheck { 
 
 	 / * * As of JDK 1 . 1 , replaced by { @ link # setBounds ( int , int , int , int ) } * / / / warn 
 void foo1 ( ) { } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule712paragraphs / InputIncorrectJavadocParagraphCheck . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule712paragraphs / InputIncorrectJavadocParagraphCheck . java 
 index 1b4b180 . . 0af32e7 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule712paragraphs / InputIncorrectJavadocParagraphCheck . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule712paragraphs / InputIncorrectJavadocParagraphCheck . java 
 @ @ - 6 , 7 + 6 , 7 @ @ package com . google . checkstyle . test . chapter7javadoc . rule712paragraphs ; 
 * / ^ WARN / Some Javadoc . < p > / / warn 
 * 
 * / 
 - class InputCorrectJavaDocParagraphCheck1 { 
 + class InputIncorrectJavadocParagraphCheck { 
 
 / * * 
 * Some Javadoc . < P > / / warn 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputCorrectAtClauseOrderCheck . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputCorrectAtClauseOrderCheck . java 
 index 5d820a4 . . d79c24c 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputCorrectAtClauseOrderCheck . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputCorrectAtClauseOrderCheck . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Serializable ; 
 * @ since Some javadoc . 
 * @ deprecated Some javadoc . 
 * / 
 - class WithAnnotations implements Serializable 
 + class InputCorrectAtClauseOrderCheck implements Serializable 
 { 
 
 / * * 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputIncorrectAtClauseOrderCheck . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputIncorrectAtClauseOrderCheck . java 
 index 9ca960d . . 9422626 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputIncorrectAtClauseOrderCheck . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputIncorrectAtClauseOrderCheck . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Serializable ; 
 * @ see Some javadoc . 
 * @ author max 
 * / 
 - class WithAnnotations12 implements Serializable 
 + class InputIncorrectAtClauseOrderCheck implements Serializable 
 { 
 / * * 
 * The client ' s first name . 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputJavaDocTagContinuationIndentation . java b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputJavaDocTagContinuationIndentation . java 
 index 35d174f . . a2771d1 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputJavaDocTagContinuationIndentation . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter7javadoc / rule713atclauses / InputJavaDocTagContinuationIndentation . java 
 @ @ - 14 , 7 + 14 , 7 @ @ import java . io . Serializable ; 
 * @ author max 
 * Some javadoc . 
 * / 
 - class JavaDocTagContinuationIndentation implements Serializable 
 + class InputJavaDocTagContinuationIndentation implements Serializable 
 { 
 	 / * * 
 * The client ' s first name . 
 diff - - git a / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotFollowed . java b / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotFollowed . java 
 index 3064ddf . . fa04b7a 100644 
 - - - a / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotFollowed . java 
 + + + b / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotFollowed . java 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - package org . checkstyle . suppressionxpathfilter . whitespaceafter ; 
 + package org . checkstyle . suppressionxpathfilter . whitespacearound ; 
 
 public class SuppressionXpathRegressionWhitespaceAroundNotFollowed { 
 int bad = 0 ; / / warn 
 diff - - git a / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotPreceded . java b / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotPreceded . java 
 index f117b7a . . 358f5af 100644 
 - - - a / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotPreceded . java 
 + + + b / src / it / resources / org / checkstyle / suppressionxpathfilter / whitespacearound / SuppressionXpathRegressionWhitespaceAroundNotPreceded . java 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - package org . checkstyle . suppressionxpathfilter . whitespaceafter ; 
 + package org . checkstyle . suppressionxpathfilter . whitespacearound ; 
 
 public class SuppressionXpathRegressionWhitespaceAroundNotPreceded { 
 int bad = 0 ; / / warn

NEAREST DIFF:
diff - - git a / src / xdocs / writingfilefilters . xml b / src / xdocs / writingfilefilters . xml 
 index 5657623 . . fce1df3 100644 
 - - - a / src / xdocs / writingfilefilters . xml 
 + + + b / src / xdocs / writingfilefilters . xml 
 @ @ - 74 , 24 + 74 , 24 @ @ public class FilesBeforeExecutionFileFilter 
 extends AutomaticBean 
 implements BeforeExecutionFileFilter 
 { 
 - private Pattern mFileRegexp ; 
 - 
 - public FilesBeforeExecutionFileFilter ( ) 
 - throws PatternSyntaxException 
 - { 
 - setFiles ( " ^ $ " ) ; 
 - } 
 - 
 - public boolean accept ( String uri ) 
 - { 
 - return ( ( uri = = null ) | | ! mFileRegexp . matcher ( uri ) . find ( ) ) ; 
 - } 
 - 
 - public void setFiles ( String aFilesPattern ) 
 - throws PatternSyntaxException 
 - { 
 - mFileRegexp = Utils . getPattern ( aFilesPattern ) ; 
 - } 
 + private Pattern mFileRegexp ; 
 + 
 + public FilesBeforeExecutionFileFilter ( ) 
 + throws PatternSyntaxException 
 + { 
 + setFiles ( " ^ $ " ) ; 
 + } 
 + 
 + public boolean accept ( String uri ) 
 + { 
 + return ( ( uri = = null ) | | ! mFileRegexp . matcher ( uri ) . find ( ) ) ; 
 + } 
 + 
 + public void setFiles ( String aFilesPattern ) 
 + throws PatternSyntaxException 
 + { 
 + mFileRegexp = Utils . getPattern ( aFilesPattern ) ; 
 + } 
 } 
 < / source > 
 < / section > 
 @ @ - 110 , 7 + 110 , 7 @ @ public class FilesBeforeExecutionFileFilter 
 
 < source > 
 & lt ; module name = & quot ; com . mycompany . filters . FilesBeforeExecutionFileFilter & quot ; & gt ; 
 - & lt ; property name = & quot ; files & quot ; value = & quot ; Generated & quot ; / & gt ; 
 + & lt ; property name = & quot ; files & quot ; value = & quot ; Generated & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < / section > 
 diff - - git a / src / xdocs / writingfilters . xml b / src / xdocs / writingfilters . xml 
 index e71f151 . . 20ef3b3 100644 
 - - - a / src / xdocs / writingfilters . xml 
 + + + b / src / xdocs / writingfilters . xml 
 @ @ - 78 , 25 + 78 , 25 @ @ public class FilesFilter 
 extends AutomaticBean 
 implements Filter 
 { 
 - private Pattern mFileRegexp ; 
 - 
 - public FilesFilter ( ) 
 - throws PatternSyntaxException 
 - { 
 - setFiles ( " ^ $ " ) ; 
 - } 
 - 
 - public boolean accept ( AuditEvent aEvent ) 
 - { 
 - final String fileName = aEvent . getFileName ( ) ; 
 - return ( ( fileName = = null ) | | ! mFileRegexp . matcher ( fileName ) . find ( ) ) ; 
 - } 
 - 
 - public void setFiles ( String aFilesPattern ) 
 - throws PatternSyntaxException 
 - { 
 - mFileRegexp = Utils . getPattern ( aFilesPattern ) ; 
 - } 
 + private Pattern mFileRegexp ; 
 + 
 + public FilesFilter ( ) 
 + throws PatternSyntaxException 
 + { 
 + setFiles ( " ^ $ " ) ; 
 + } 
 + 
 + public boolean accept ( AuditEvent aEvent ) 
 + { 
 + final String fileName = aEvent . getFileName ( ) ; 
 + return ( ( fileName = = null ) | | ! mFileRegexp . matcher ( fileName ) . find ( ) ) ; 
 + } 
 + 
 + public void setFiles ( String aFilesPattern ) 
 + throws PatternSyntaxException 
 + { 
 + mFileRegexp = Utils . getPattern ( aFilesPattern ) ; 
 + } 
 } 
 < / source > 
 < / section > 
 @ @ - 121 , 7 + 121 , 7 @ @ public class FilesFilter 
 
 < source > 
 & lt ; module name = & quot ; com . mycompany . filters . FilesFilter & quot ; & gt ; 
 - & lt ; property name = & quot ; files & quot ; value = & quot ; Generated & quot ; / & gt ; 
 + & lt ; property name = & quot ; files & quot ; value = & quot ; Generated & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 < / section >
