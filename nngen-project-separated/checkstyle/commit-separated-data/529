BLEU SCORE: 0.04814971807094068

TEST MSG: Issue # 4675 : reverting some coverage to make build stable on my laptop , see # 5141 for details
GENERATED MSG: Issue # 5007 : increase coverage of pitest - checks - design to 100 %

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index d0de66a . . ab253c9 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1670 , 7 + 1670 , 7 @ @ <nl> < param > com . puppycrawl . tools . checkstyle . checks . UniquePropertiesCheckTest < / param > <nl> < param > com . puppycrawl . tools . checkstyle . checks . UpperEllCheckTest < / param > <nl> < / targetTests > <nl> - < mutationThreshold > 100 < / mutationThreshold > <nl> + < mutationThreshold > 99 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> diff - - git a / shippable . yml b / shippable . yml <nl> index 0de4d91 . . 5cd48b1 100644 <nl> - - - a / shippable . yml <nl> + + + b / shippable . yml <nl> @ @ - 14 , 7 + 14 , 7 @ @ env : <nl> - PROFILE = " - Ppitest - checks - regexp , no - validations " ; POST _ ACTION = check _ survived <nl> - PROFILE = " - Ppitest - checks - sizes , no - validations " ; POST _ ACTION = check _ survived <nl> - PROFILE = " - Ppitest - checks - whitespace , no - validations " ; POST _ ACTION = check _ survived _ whitespace <nl> - - PROFILE = " - Ppitest - checks - misc , no - validations " ; POST _ ACTION = check _ survived <nl> + - PROFILE = " - Ppitest - checks - misc , no - validations " ; POST _ ACTION = check _ survived _ misc <nl> - PROFILE = " - Ppitest - checks - blocks , no - validations " ; POST _ ACTION = check _ survived _ blocks <nl> - PROFILE = " - Ppitest - checks - coding , no - validations " ; POST _ ACTION = check _ survived _ coding <nl> - PROFILE = " - Ppitest - checks - design , no - validations " ; POST _ ACTION = check _ survived <nl> @ @ - 66 , 6 + 66 , 11 @ @ build : <nl> echo " Survived items found in reports , build will be failed " <nl> exit 1 <nl> fi <nl> + if [ [ $ POST _ ACTION = = ' check _ survived _ misc ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " TranslationCheck . * " target / | cat | wc - l ) > 0 ] ] ; then <nl> + echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " TranslationCheck . * " target / | cat ) <nl> + echo " Survived items found in reports , build will be failed " <nl> + exit 1 <nl> + fi <nl> if [ [ $ POST _ ACTION = = ' check _ survived _ blocks ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " LeftCurlyCheck . * " target / | cat | wc - l ) > 0 ] ] ; then <nl> echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " LeftCurlyCheck . * " target / | cat ) <nl> echo " Survived items found in reports , build will be failed " <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> index e50fb40 . . 408ec6f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java <nl> @ @ - 21 , 7 + 21 , 6 @ @ package com . puppycrawl . tools . checkstyle . checks ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . TranslationCheck . MSG _ KEY ; <nl> import static com . puppycrawl . tools . checkstyle . checks . TranslationCheck . MSG _ KEY _ MISSING _ TRANSLATION _ FILE ; <nl> - import static java . util . Locale . ENGLISH ; <nl> import static org . hamcrest . CoreMatchers . containsString ; <nl> import static org . hamcrest . CoreMatchers . endsWith ; <nl> import static org . junit . Assert . assertEquals ; <nl> @ @ - 43 , 11 + 42 , 8 @ @ import java . io . InputStream ; <nl> import java . lang . reflect . Field ; <nl> import java . lang . reflect . Method ; <nl> import java . nio . charset . StandardCharsets ; <nl> - import java . nio . file . Files ; <nl> - import java . nio . file . Paths ; <nl> import java . util . Collection ; <nl> import java . util . Collections ; <nl> - import java . util . Locale ; <nl> import java . util . Set ; <nl> import java . util . SortedSet ; <nl> <nl> @ @ - 168 , 27 + 164 , 6 @ @ public class TranslationCheckTest extends AbstractModuleTestSupport { <nl> verify ( checker , propertyFiles , ImmutableMap . of ( <nl> getPath ( " " ) , Collections . singletonList ( line + firstErrorMessage ) , <nl> translationProps , Collections . singletonList ( line + secondErrorMessage ) ) ) ; <nl> - <nl> - final String osName = System . getProperty ( " os . name " ) . toLowerCase ( ENGLISH ) ; <nl> - String expectedLogOutput ; <nl> - <nl> - / / till https : / / github . com / checkstyle / checkstyle / issues / 5103 <nl> - if ( osName . startsWith ( " windows " ) ) { <nl> - expectedLogOutput = readFile ( " OutputTranslationCheckWindows . xml " ) ; <nl> - } <nl> - else if ( osName . startsWith ( " linux " ) ) { <nl> - expectedLogOutput = readFile ( " OutputTranslationCheckLinux . xml " ) ; <nl> - } <nl> - else { <nl> - expectedLogOutput = readFile ( " OutputTranslationCheckMacOS . xml " ) ; <nl> - } <nl> - <nl> - expectedLogOutput = expectedLogOutput . replace ( " path _ to _ file " , getPackageAbsolutePath ( ) ) ; <nl> - expectedLogOutput = String . format ( Locale . getDefault ( ) , expectedLogOutput , <nl> - firstErrorMessage , secondErrorMessage ) . replace ( " ' " , " & apos ; " ) ; <nl> - <nl> - assertEquals ( " Unexpected log output " , expectedLogOutput , <nl> - out . toString ( StandardCharsets . UTF _ 8 . name ( ) ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 574 , 13 + 549 , 4 @ @ public class TranslationCheckTest extends AbstractModuleTestSupport { <nl> exceptionMessage , endsWith ( " [ TranslationCheck ] " ) ) ; <nl> } <nl> } <nl> - <nl> - private String readFile ( String fileName ) throws IOException { <nl> - return new String ( Files . readAllBytes ( Paths . get ( getPath ( fileName ) ) ) , <nl> - StandardCharsets . UTF _ 8 ) ; <nl> - } <nl> - <nl> - private String getPackageAbsolutePath ( ) throws IOException { <nl> - return new File ( getPath ( " " ) ) . getAbsolutePath ( ) ; <nl> - } <nl> }
NEAREST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index a63525d . . 10da55d 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 2130 , 6 + 2130 , 8 @ @ <nl> < option value = " FieldNotUsedInToString " / > <nl> < ! - - till # 4805 - - > <nl> < option value = " HtmlTagCanBeJavadocTag " / > <nl> + < ! - - WeakerAccess reports ' can be protected ' that we can not change - - > <nl> + < option value = " WeakerAccess " / > <nl> < ! - - we need to work with AntClassLoader , there is no way to avoid this - - > <nl> < option value = " ClassLoaderInstantiation " / > <nl> < ! - - There are asserts in DetailASTTest # checkNode , but idea does not see them - - > <nl> @ @ - 2488 , 7 + 2490 , 13 @ @ <nl> < inspection _ tool class = " WaitOrAwaitWithoutTimeout " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " WaitWhileHoldingTwoLocks " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " WaitWithoutCorrespondingNotify " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > <nl> - < inspection _ tool class = " WeakerAccess " enabled = " false " level = " WARNING " enabled _ by _ default = " false " > <nl> + < inspection _ tool class = " WeakerAccess " enabled = " true " level = " WARNING " enabled _ by _ default = " false " > <nl> + < scope name = " Production " level = " WARNING " enabled = " true " > <nl> + < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ MEMBERS " value = " false " / > <nl> + < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ TOP _ CLASSES " value = " false " / > <nl> + < option name = " SUGGEST _ PRIVATE _ FOR _ INNERS " value = " false " / > <nl> + < disabledExtension id = " junit " / > <nl> + < / scope > <nl> < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ MEMBERS " value = " true " / > <nl> < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ TOP _ CLASSES " value = " true " / > <nl> < option name = " SUGGEST _ PRIVATE _ FOR _ INNERS " value = " false " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> index d801dd5 . . e110b02 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> @ @ - 113 , 7 + 113 , 7 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { <nl> * @ param closeErrorAfterUse auditFinished should close errorStream <nl> * @ param messageFormatter formatter for the log message . <nl> * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> - * @ noinspection BooleanParameter <nl> + * @ noinspection BooleanParameter , WeakerAccess <nl> * / <nl> @ Deprecated <nl> public DefaultLogger ( OutputStream infoStream , <nl> @ @ - 170 , 6 + 170 , 7 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { <nl> * @ param errorStream the { @ code OutputStream } for error messages <nl> * @ param errorStreamOptions if { @ code CLOSE } error should be closed in auditFinished ( ) <nl> * @ param messageFormatter formatter for the log message . <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public DefaultLogger ( OutputStream infoStream , <nl> OutputStreamOptions infoStreamOptions , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractCheck . java <nl> index 7e0fdd6 . . 430257d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractCheck . java <nl> @ @ - 93 , 6 + 93 , 7 @ @ public abstract class AbstractCheck extends AbstractViolationReporter { <nl> / * * <nl> * Adds a set of tokens the check is interested in . <nl> * @ param strRep the string representation of the tokens interested in <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public final void setTokens ( String . . . strRep ) { <nl> Collections . addAll ( tokens , strRep ) ; <nl> @ @ - 198 , 6 + 199 , 7 @ @ public abstract class AbstractCheck extends AbstractViolationReporter { <nl> / * * <nl> * Returns the file contents associated with the tree . <nl> * @ return the file contents <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public final FileContents getFileContents ( ) { <nl> return fileContents ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java <nl> index 48e46a8 . . 1739b6b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java <nl> @ @ - 41 , 6 + 41 , 7 @ @ public abstract class AbstractViolationReporter <nl> * @ return the severity level <nl> * @ see SeverityLevel <nl> * @ see LocalizedMessage # getSeverityLevel <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public final SeverityLevel getSeverityLevel ( ) { <nl> return severityLevel ; <nl> @ @ - 61 , 6 + 62 , 7 @ @ public abstract class AbstractViolationReporter <nl> * Get the severity level ' s name . <nl> * <nl> * @ return the check ' s severity level name . <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public final String getSeverity ( ) { <nl> return severityLevel . getName ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index fde157a . . 7c61b09 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ public class SuppressWarningsHolder <nl> * suppression { @ code " checkstyle : fallthrough " } or { @ code " checkstyle : FallThrough " } . <nl> * To suppress the warning in both tools , just use { @ code " fallthrough " } . <nl> * / <nl> - public static final String CHECKSTYLE _ PREFIX = " checkstyle : " ; <nl> + private static final String CHECKSTYLE _ PREFIX = " checkstyle : " ; <nl> <nl> / * * Java . lang namespace prefix , which is stripped from SuppressWarnings * / <nl> private static final String JAVA _ LANG _ PREFIX = " java . lang . " ; <nl> @ @ - 117 , 7 + 117 , 7 @ @ public class SuppressWarningsHolder <nl> * name ) <nl> * @ param checkAlias the alias used in { @ link SuppressWarnings } annotations <nl> * / <nl> - public static void registerAlias ( String sourceName , String checkAlias ) { <nl> + private static void registerAlias ( String sourceName , String checkAlias ) { <nl> CHECK _ ALIAS _ MAP . put ( sourceName , checkAlias ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> index a630b44 . . 6f4b14b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java <nl> @ @ - 414 , 6 + 414 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { <nl> / * * <nl> * Set the list of illegal variable types . <nl> * @ param classNames array of illegal variable types <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public void setIllegalClassNames ( String . . . classNames ) { <nl> illegalClassNames . clear ( ) ; <nl> @ @ - 423 , 6 + 424 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { <nl> / * * <nl> * Set the list of ignore method names . <nl> * @ param methodNames array of ignored method names <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public void setIgnoredMethodNames ( String . . . methodNames ) { <nl> ignoredMethodNames . clear ( ) ; <nl> @ @ - 432 , 6 + 434 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { <nl> / * * <nl> * Set the list of legal abstract class names . <nl> * @ param classNames array of legal abstract class names <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public void setLegalAbstractClassNames ( String . . . classNames ) { <nl> legalAbstractClassNames . clear ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java <nl> index 41924b2 . . 3004816 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java <nl> @ @ - 88 , 6 + 88 , 7 @ @ public class MultipleStringLiteralsCheck extends AbstractCheck { <nl> * Sets regular expression pattern for ignored strings . <nl> * @ param ignoreStringsRegexp <nl> * regular expression pattern for ignored strings <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public final void setIgnoreStringsRegexp ( Pattern ignoreStringsRegexp ) { <nl> if ( ignoreStringsRegexp = = null | | ignoreStringsRegexp . pattern ( ) . isEmpty ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java <nl> index 1cb24d1 . . 8e530da 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java <nl> @ @ - 67 , 7 + 67 , 7 @ @ public class HeaderCheck extends AbstractHeaderCheck { <nl> * @ param line the line contents <nl> * @ return true if and only if the line matches the required header line <nl> * / <nl> - protected boolean isMatch ( int lineNumber , String line ) { <nl> + private boolean isMatch ( int lineNumber , String line ) { <nl> / / skip lines we are meant to ignore <nl> return isIgnoreLine ( lineNumber + 1 ) <nl> | | getHeaderLines ( ) . get ( lineNumber ) . equals ( line ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java <nl> index 2139af4 . . ccf109d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java <nl> @ @ - 99 , 6 + 99 , 7 @ @ public class IllegalImportCheck <nl> / * * <nl> * Set the list of illegal packages . <nl> * @ param from array of illegal packages <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public final void setIllegalPkgs ( String . . . from ) { <nl> illegalPkgs = from . clone ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> index 433802d . . 833d12e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> @ @ - 77 , 6 + 77 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * value is returned . <nl> * <nl> * @ return the expected indentation amount <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public final IndentLevel getIndent ( ) { <nl> if ( indent = = null ) { <nl> @ @ - 102 , 6 + 103 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * type ) <nl> * <nl> * @ return suggested indentation for child <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public IndentLevel getSuggestedChildIndent ( AbstractExpressionHandler child ) { <nl> return new IndentLevel ( getIndent ( ) , getBasicOffset ( ) ) ; <nl> @ @ - 181 , 6 + 183 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * @ param ast2 the second expression <nl> * <nl> * @ return true if they are , false otherwise <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public static boolean areOnSameLine ( DetailAST ast1 , DetailAST ast2 ) { <nl> return ast1 . getLineNo ( ) = = ast2 . getLineNo ( ) ; <nl> @ @ - 191 , 6 + 194 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * which represents first symbol for this sub - tree in file . <nl> * @ param ast a root of sub - tree in which the search should be performed . <nl> * @ return a token which occurs first in the file . <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public static DetailAST getFirstToken ( DetailAST ast ) { <nl> DetailAST first = ast ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> index 4628087 . . f4a020e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> @ @ - 63 , 6 + 63 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> * @ param name the name of the handler <nl> * @ param ast the abstract syntax tree <nl> * @ param parent the parent handler <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public BlockParentHandler ( IndentationCheck indentCheck , <nl> String name , DetailAST ast , AbstractExpressionHandler parent ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> index 6ad00c6 . . 1b891aa 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java <nl> @ @ - 103 , 7 + 103 , 7 @ @ public class LineWrappingHandler { <nl> * @ param lastNode Last node to examine inclusively . <nl> * @ param indentLevel Indentation all wrapped lines should use . <nl> * / <nl> - public void checkIndentation ( DetailAST firstNode , DetailAST lastNode , int indentLevel ) { <nl> + private void checkIndentation ( DetailAST firstNode , DetailAST lastNode , int indentLevel ) { <nl> checkIndentation ( firstNode , lastNode , indentLevel , <nl> - 1 , LineWrappingOptions . IGNORE _ FIRST _ LINE ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java <nl> index e5940f5 . . ddfd264 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java <nl> @ @ - 46 , 7 + 46 , 7 @ @ public class TryHandler extends BlockParentHandler { <nl> * <nl> * @ return DetailAst left parenthesis of try with resources <nl> * / <nl> - protected DetailAST getTryResLparen ( ) { <nl> + private DetailAST getTryResLparen ( ) { <nl> return getMainAst ( ) . getFirstChild ( ) . getFirstChild ( ) ; <nl> } <nl> <nl> @ @ - 55 , 7 + 55 , 7 @ @ public class TryHandler extends BlockParentHandler { <nl> * <nl> * @ return DetailAst right parenthesis of try with resources <nl> * / <nl> - protected DetailAST getTryResRparen ( ) { <nl> + private DetailAST getTryResRparen ( ) { <nl> return getMainAst ( ) . getFirstChild ( ) . getLastChild ( ) ; <nl> } <nl> <nl> @ @ - 86 , 7 + 86 , 7 @ @ public class TryHandler extends BlockParentHandler { <nl> * @ param parenAst lparen or rparen ast to check <nl> * @ param subType name to be used in log message <nl> * / <nl> - protected void checkTryResParen ( final DetailAST parenAst , <nl> + private void checkTryResParen ( final DetailAST parenAst , <nl> final String subType ) { <nl> if ( isOnStartOfLine ( parenAst ) ) { <nl> final IndentLevel expectedIdent = new IndentLevel ( getIndent ( ) , 0 , <nl> @ @ - 123 , 7 + 123 , 7 @ @ public class TryHandler extends BlockParentHandler { <nl> * <nl> * @ param resourcesSpecAst Resource specification ast <nl> * / <nl> - protected void checkTryResources ( final DetailAST resourcesSpecAst ) { <nl> + private void checkTryResources ( final DetailAST resourcesSpecAst ) { <nl> final DetailAST resourcesAst = resourcesSpecAst . findFirstToken ( TokenTypes . RESOURCES ) ; <nl> final int indetation = getIndent ( ) . getFirstIndentLevel ( ) <nl> + getIndentCheck ( ) . getLineWrappingIndentation ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 8c8ec30 . . 47ae0d4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 419 , 7 + 419 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * @ param ast the tree node for the method or constructor . <nl> * @ return True if this method or constructor doesn ' t need Javadoc . <nl> * / <nl> - protected boolean isMissingJavadocAllowed ( final DetailAST ast ) { <nl> + private boolean isMissingJavadocAllowed ( final DetailAST ast ) { <nl> return allowMissingJavadoc <nl> | | allowMissingPropertyJavadoc <nl> & & ( CheckUtils . isSetterMethod ( ast ) | | CheckUtils . isGetterMethod ( ast ) ) <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java <nl> index 2502e03 . . 05af770 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java <nl> @ @ - 200 , 7 + 200 , 7 @ @ public class WriteTagCheck <nl> * <nl> * @ see java . text . MessageFormat <nl> * / <nl> - protected final void logTag ( int line , String tagName , String tagValue ) { <nl> + private void logTag ( int line , String tagName , String tagValue ) { <nl> final String originalSeverity = getSeverity ( ) ; <nl> setSeverity ( tagSeverity . getName ( ) ) ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> index ea6eb59 . . 85a387b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java <nl> @ @ - 127 , 13 + 127 , 14 @ @ public class SuppressWithNearbyCommentFilter <nl> * Returns FileContents for this filter . <nl> * @ return the FileContents for this filter . <nl> * / <nl> - public FileContents getFileContents ( ) { <nl> + private FileContents getFileContents ( ) { <nl> return fileContentsReference . get ( ) ; <nl> } <nl> <nl> / * * <nl> * Set the FileContents for this filter . <nl> * @ param fileContents the FileContents for this filter . <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public void setFileContents ( FileContents fileContents ) { <nl> fileContentsReference = new WeakReference < > ( fileContents ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> index 015a384 . . e871395 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java <nl> @ @ - 131 , 13 + 131 , 14 @ @ public class SuppressionCommentFilter <nl> * Returns FileContents for this filter . <nl> * @ return the FileContents for this filter . <nl> * / <nl> - public FileContents getFileContents ( ) { <nl> + private FileContents getFileContents ( ) { <nl> return fileContentsReference . get ( ) ; <nl> } <nl> <nl> / * * <nl> * Set the FileContents for this filter . <nl> * @ param fileContents the FileContents for this filter . <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public void setFileContents ( FileContents fileContents ) { <nl> fileContentsReference = new WeakReference < > ( fileContents ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> index e8f0ec0 . . a33a61b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java <nl> @ @ - 240 , 7 + 240 , 7 @ @ public class MainFrameModel { <nl> * @ throws IOException if the file could not be read . <nl> * @ throws ANTLRException if the file is not a Java source . <nl> * / <nl> - public DetailAST parseFile ( File file ) throws IOException , ANTLRException { <nl> + private static DetailAST parseFile ( File file ) throws IOException , ANTLRException { <nl> final FileText fileText = getFileText ( file ) ; <nl> final FileContents contents = new FileContents ( fileText ) ; <nl> return TreeWalker . parse ( contents ) ; <nl> @ @ - 253 , 7 + 253 , 7 @ @ public class MainFrameModel { <nl> * @ throws IOException if the file could not be read . <nl> * @ throws ANTLRException if the file is not a Java source . <nl> * / <nl> - public DetailAST parseFileWithComments ( File file ) throws IOException , ANTLRException { <nl> + private static DetailAST parseFileWithComments ( File file ) throws IOException , ANTLRException { <nl> final FileText fileText = getFileText ( file ) ; <nl> final FileContents contents = new FileContents ( fileText ) ; <nl> return TreeWalker . parseWithComments ( contents ) ; <nl> @ @ - 265 , 7 + 265 , 7 @ @ public class MainFrameModel { <nl> * @ return the FileText . <nl> * @ throws IOException if the file could not be read . <nl> * / <nl> - public FileText getFileText ( File file ) throws IOException { <nl> + private static FileText getFileText ( File file ) throws IOException { <nl> return new FileText ( file . getAbsoluteFile ( ) , <nl> System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> index 7d63e60 . . b744167 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> @ @ - 410 , 7 + 410 , 7 @ @ public final class JavadocUtils { <nl> * @ param blockComment Block comment AST <nl> * @ return true if Javadoc is in right place <nl> * / <nl> - public static boolean isCorrectJavadocPosition ( DetailAST blockComment ) { <nl> + private static boolean isCorrectJavadocPosition ( DetailAST blockComment ) { <nl> return BlockCommentPosition . isOnClass ( blockComment ) <nl> | | BlockCommentPosition . isOnInterface ( blockComment ) <nl> | | BlockCommentPosition . isOnEnum ( blockComment ) <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java <nl> index 23136eb . . 1f9b801 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java <nl> @ @ - 33 , 6 + 33 , 7 @ @ import org . junit . Test ; <nl> import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> public class DefaultLoggerTest { <nl> <nl> @ @ - 45 , 7 + 46 , 7 @ @ public class DefaultLoggerTest { <nl> dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; <nl> final String output = errorStream . toString ( " UTF - 8 " ) ; <nl> final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , <nl> - Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . addException " , <nl> + Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . ADD _ EXCEPTION _ MESSAGE , <nl> new String [ ] { " myfile " } , null , <nl> getClass ( ) , null ) ; <nl> <nl> @ @ - 72 , 16 + 73 , 30 @ @ public class DefaultLoggerTest { <nl> final DefaultLogger dl = new DefaultLogger ( infoStream , <nl> AutomaticBean . OutputStreamOptions . CLOSE , errorStream , <nl> AutomaticBean . OutputStreamOptions . CLOSE ) ; <nl> + dl . auditStarted ( null ) ; <nl> dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; <nl> dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; <nl> final String output = errorStream . toString ( " UTF - 8 " ) ; <nl> final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , <nl> - Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . addException " , <nl> + Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . ADD _ EXCEPTION _ MESSAGE , <nl> new String [ ] { " myfile " } , null , <nl> getClass ( ) , null ) ; <nl> + final LocalizedMessage startMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . AUDIT _ STARTED _ MESSAGE , <nl> + CommonUtils . EMPTY _ STRING _ ARRAY , null , <nl> + getClass ( ) , null ) ; <nl> + final LocalizedMessage finishMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . AUDIT _ FINISHED _ MESSAGE , <nl> + CommonUtils . EMPTY _ STRING _ ARRAY , null , <nl> + getClass ( ) , null ) ; <nl> <nl> verify ( infoStream , times ( 1 ) ) . close ( ) ; <nl> verify ( errorStream , times ( 1 ) ) . close ( ) ; <nl> + final String infoOutput = infoStream . toString ( ) ; <nl> + assertTrue ( " Message should contain exception info , but was " + infoOutput , <nl> + infoOutput . contains ( startMessage . getMessage ( ) ) ) ; <nl> + assertTrue ( " Message should contain exception info , but was " + infoOutput , <nl> + infoOutput . contains ( finishMessage . getMessage ( ) ) ) ; <nl> assertTrue ( " Message should contain exception info , but was " + output , <nl> output . contains ( addExceptionMessage . getMessage ( ) ) ) ; <nl> assertTrue ( " Message should contain exception info , but was " + output , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index b41bb3d . . 351effa 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 123 , 7 + 123 , 7 @ @ public class MainTest { <nl> getClass ( ) , null ) ; <nl> <nl> private final LocalizedMessage errorCounterOneMessage = new LocalizedMessage ( 0 , <nl> - Definitions . CHECKSTYLE _ BUNDLE , " Main . errorCounter " , <nl> + Definitions . CHECKSTYLE _ BUNDLE , Main . ERROR _ COUNTER , <nl> new String [ ] { String . valueOf ( 1 ) } , null , getClass ( ) , null ) ; <nl> <nl> private static String getPath ( String filename ) { <nl> @ @ - 338 , 7 + 338 , 7 @ @ public class MainTest { <nl> exit . expectSystemExitWithStatus ( 2 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> final LocalizedMessage errorCounterTwoMessage = new LocalizedMessage ( 0 , <nl> - Definitions . CHECKSTYLE _ BUNDLE , " Main . errorCounter " , <nl> + Definitions . CHECKSTYLE _ BUNDLE , Main . ERROR _ COUNTER , <nl> new String [ ] { String . valueOf ( 2 ) } , null , getClass ( ) , null ) ; <nl> final LocalizedMessage invalidPatternMessageMain = new LocalizedMessage ( 0 , <nl> " com . puppycrawl . tools . checkstyle . checks . naming . messages " , <nl> @ @ - 510 , 8 + 510 , 16 @ @ public class MainTest { <nl> / / We do separate validation for message as in Windows <nl> / / disk drive letter appear in message , <nl> / / so we skip that drive letter for compatibility issues <nl> + final LocalizedMessage loadPropertiesMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , Main . LOAD _ PROPERTIES _ EXCEPTION , <nl> + new String [ ] { " " } , null , getClass ( ) , null ) ; <nl> + final String causeMessage = ex . getCause ( ) . getLocalizedMessage ( ) ; <nl> + assertTrue ( " Invalid error message " , <nl> + causeMessage . substring ( 0 , causeMessage . lastIndexOf ( ' ' ) ) <nl> + . startsWith ( loadPropertiesMessage . getMessage ( ) <nl> + . substring ( 0 , causeMessage . lastIndexOf ( ' ' ) ) ) ) ; <nl> assertTrue ( " Invalid error message " , <nl> - ex . getCause ( ) . getLocalizedMessage ( ) . contains ( " : invalid " ) ) ; <nl> + causeMessage . contains ( " : invalid " ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 526 , 7 + 534 , 7 @ @ public class MainTest { <nl> } <nl> catch ( InvocationTargetException ex ) { <nl> final LocalizedMessage loadPropertiesMessage = new LocalizedMessage ( 0 , <nl> - Definitions . CHECKSTYLE _ BUNDLE , " Main . createListener " , <nl> + Definitions . CHECKSTYLE _ BUNDLE , Main . CREATE _ LISTENER _ EXCEPTION , <nl> new String [ ] { " myformat " , " plain " , " xml " } , null , getClass ( ) , null ) ; <nl> assertEquals ( " Invalid error message " , <nl> loadPropertiesMessage . getMessage ( ) , ex . getCause ( ) . getLocalizedMessage ( ) ) ; <nl> @ @ - 551 , 7 + 559 , 7 @ @ public class MainTest { <nl> } <nl> catch ( InvocationTargetException ex ) { <nl> final LocalizedMessage createListenerMessage = new LocalizedMessage ( 0 , <nl> - Definitions . CHECKSTYLE _ BUNDLE , " Main . createListener " , <nl> + Definitions . CHECKSTYLE _ BUNDLE , Main . CREATE _ LISTENER _ EXCEPTION , <nl> new String [ ] { " myformat " , " plain " , " xml " } , null , getClass ( ) , null ) ; <nl> assertEquals ( " Invalid error message " , <nl> createListenerMessage . getMessage ( ) , ex . getCause ( ) . getLocalizedMessage ( ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ThreadModeSettingsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ThreadModeSettingsTest . java <nl> index 243b16c . . efe2875 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ThreadModeSettingsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ThreadModeSettingsTest . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public class ThreadModeSettingsTest { <nl> final ThreadModeSettings configuration = new ThreadModeSettings ( 2 , 2 ) ; <nl> <nl> try { <nl> - configuration . resolveName ( " Checker " ) ; <nl> + configuration . resolveName ( ThreadModeSettings . CHECKER _ MODULE _ NAME ) ; <nl> fail ( " An exception is expected " ) ; <nl> } <nl> catch ( IllegalArgumentException ex ) { <nl> @ @ - 57 , 7 + 57 , 8 @ @ public class ThreadModeSettingsTest { <nl> public void testResolveCheckerInSingleThreadMode ( ) throws Exception { <nl> final ThreadModeSettings singleThreadMode = ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ; <nl> <nl> - assertEquals ( " Invalid name resolved " , " Checker " , singleThreadMode . resolveName ( " Checker " ) ) ; <nl> + assertEquals ( " Invalid name resolved " , ThreadModeSettings . CHECKER _ MODULE _ NAME , <nl> + singleThreadMode . resolveName ( ThreadModeSettings . CHECKER _ MODULE _ NAME ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 65 , 7 + 66 , 7 @ @ public class ThreadModeSettingsTest { <nl> final ThreadModeSettings configuration = new ThreadModeSettings ( 2 , 2 ) ; <nl> <nl> try { <nl> - configuration . resolveName ( " TreeWalker " ) ; <nl> + configuration . resolveName ( ThreadModeSettings . TREE _ WALKER _ MODULE _ NAME ) ; <nl> } <nl> catch ( IllegalArgumentException ex ) { <nl> assertEquals ( " Invalid exception message " , <nl> @ @ - 77 , 8 + 78 , 10 @ @ public class ThreadModeSettingsTest { <nl> @ Test <nl> public void testResolveTreeWalkerInSingleThreadMode ( ) throws Exception { <nl> final ThreadModeSettings singleThreadMode = ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ; <nl> - final String actual = singleThreadMode . resolveName ( " TreeWalker " ) ; <nl> - assertThat ( " Invalid name resolved : " + actual , actual , is ( " TreeWalker " ) ) ; <nl> + final String actual = <nl> + singleThreadMode . resolveName ( ThreadModeSettings . TREE _ WALKER _ MODULE _ NAME ) ; <nl> + assertThat ( " Invalid name resolved : " + actual , <nl> + actual , is ( ThreadModeSettings . TREE _ WALKER _ MODULE _ NAME ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java <nl> index 4640317 . . 1e2e037 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java <nl> @ @ - 200 , 7 + 200 , 7 @ @ public class SuppressWarningsHolderTest extends AbstractModuleTestSupport { <nl> final Configuration checkConfig = createModuleConfig ( SuppressWarningsHolder . class ) ; <nl> <nl> final String [ ] expected = { <nl> - " 11 : " + getCheckMessage ( " suppress . warnings . invalid . target " ) , <nl> + " 11 : " + getCheckMessage ( SuppressWarningsHolder . MSG _ KEY ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " InputSuppressWarningsHolder2 . java " ) , expected ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheckTest . java <nl> index 70fccb8 . . 5802639 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheckTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . naming ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . naming . PackageNameCheck . MSG _ KEY ; <nl> import static org . junit . Assert . assertArrayEquals ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 54 , 7 + 54 , 7 @ @ public class PackageNameCheckTest <nl> final String pattern = " [ A - Z ] + " ; <nl> <nl> final String [ ] expected = { <nl> - " 6 : 9 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , <nl> + " 6 : 9 : " + getCheckMessage ( MSG _ KEY , <nl> " com . puppycrawl . tools . checkstyle . checks . naming . packagename " , pattern ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputPackageNameSimple . java " ) , expected ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineCheckTest . java <nl> index d5b9e98 . . fcff45f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineCheckTest . java <nl> @ @ - 19 , 8 + 19 , 8 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . regexp ; <nl> <nl> - import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . MSG _ REGEXP _ EXCEEDED ; <nl> - import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . MSG _ REGEXP _ MINIMUM ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . regexp . SinglelineDetector . MSG _ REGEXP _ EXCEEDED ; <nl> + import static com . puppycrawl . tools . checkstyle . checks . regexp . SinglelineDetector . MSG _ REGEXP _ MINIMUM ; <nl> <nl> import org . junit . Before ; <nl> import org . junit . Test ;

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index d0de66a . . ab253c9 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1670 , 7 + 1670 , 7 @ @ 
 < param > com . puppycrawl . tools . checkstyle . checks . UniquePropertiesCheckTest < / param > 
 < param > com . puppycrawl . tools . checkstyle . checks . UpperEllCheckTest < / param > 
 < / targetTests > 
 - < mutationThreshold > 100 < / mutationThreshold > 
 + < mutationThreshold > 99 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 diff - - git a / shippable . yml b / shippable . yml 
 index 0de4d91 . . 5cd48b1 100644 
 - - - a / shippable . yml 
 + + + b / shippable . yml 
 @ @ - 14 , 7 + 14 , 7 @ @ env : 
 - PROFILE = " - Ppitest - checks - regexp , no - validations " ; POST _ ACTION = check _ survived 
 - PROFILE = " - Ppitest - checks - sizes , no - validations " ; POST _ ACTION = check _ survived 
 - PROFILE = " - Ppitest - checks - whitespace , no - validations " ; POST _ ACTION = check _ survived _ whitespace 
 - - PROFILE = " - Ppitest - checks - misc , no - validations " ; POST _ ACTION = check _ survived 
 + - PROFILE = " - Ppitest - checks - misc , no - validations " ; POST _ ACTION = check _ survived _ misc 
 - PROFILE = " - Ppitest - checks - blocks , no - validations " ; POST _ ACTION = check _ survived _ blocks 
 - PROFILE = " - Ppitest - checks - coding , no - validations " ; POST _ ACTION = check _ survived _ coding 
 - PROFILE = " - Ppitest - checks - design , no - validations " ; POST _ ACTION = check _ survived 
 @ @ - 66 , 6 + 66 , 11 @ @ build : 
 echo " Survived items found in reports , build will be failed " 
 exit 1 
 fi 
 + if [ [ $ POST _ ACTION = = ' check _ survived _ misc ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " TranslationCheck . * " target / | cat | wc - l ) > 0 ] ] ; then 
 + echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " TranslationCheck . * " target / | cat ) 
 + echo " Survived items found in reports , build will be failed " 
 + exit 1 
 + fi 
 if [ [ $ POST _ ACTION = = ' check _ survived _ blocks ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " LeftCurlyCheck . * " target / | cat | wc - l ) > 0 ] ] ; then 
 echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " LeftCurlyCheck . * " target / | cat ) 
 echo " Survived items found in reports , build will be failed " 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 index e50fb40 . . 408ec6f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheckTest . java 
 @ @ - 21 , 7 + 21 , 6 @ @ package com . puppycrawl . tools . checkstyle . checks ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . TranslationCheck . MSG _ KEY ; 
 import static com . puppycrawl . tools . checkstyle . checks . TranslationCheck . MSG _ KEY _ MISSING _ TRANSLATION _ FILE ; 
 - import static java . util . Locale . ENGLISH ; 
 import static org . hamcrest . CoreMatchers . containsString ; 
 import static org . hamcrest . CoreMatchers . endsWith ; 
 import static org . junit . Assert . assertEquals ; 
 @ @ - 43 , 11 + 42 , 8 @ @ import java . io . InputStream ; 
 import java . lang . reflect . Field ; 
 import java . lang . reflect . Method ; 
 import java . nio . charset . StandardCharsets ; 
 - import java . nio . file . Files ; 
 - import java . nio . file . Paths ; 
 import java . util . Collection ; 
 import java . util . Collections ; 
 - import java . util . Locale ; 
 import java . util . Set ; 
 import java . util . SortedSet ; 
 
 @ @ - 168 , 27 + 164 , 6 @ @ public class TranslationCheckTest extends AbstractModuleTestSupport { 
 verify ( checker , propertyFiles , ImmutableMap . of ( 
 getPath ( " " ) , Collections . singletonList ( line + firstErrorMessage ) , 
 translationProps , Collections . singletonList ( line + secondErrorMessage ) ) ) ; 
 - 
 - final String osName = System . getProperty ( " os . name " ) . toLowerCase ( ENGLISH ) ; 
 - String expectedLogOutput ; 
 - 
 - / / till https : / / github . com / checkstyle / checkstyle / issues / 5103 
 - if ( osName . startsWith ( " windows " ) ) { 
 - expectedLogOutput = readFile ( " OutputTranslationCheckWindows . xml " ) ; 
 - } 
 - else if ( osName . startsWith ( " linux " ) ) { 
 - expectedLogOutput = readFile ( " OutputTranslationCheckLinux . xml " ) ; 
 - } 
 - else { 
 - expectedLogOutput = readFile ( " OutputTranslationCheckMacOS . xml " ) ; 
 - } 
 - 
 - expectedLogOutput = expectedLogOutput . replace ( " path _ to _ file " , getPackageAbsolutePath ( ) ) ; 
 - expectedLogOutput = String . format ( Locale . getDefault ( ) , expectedLogOutput , 
 - firstErrorMessage , secondErrorMessage ) . replace ( " ' " , " & apos ; " ) ; 
 - 
 - assertEquals ( " Unexpected log output " , expectedLogOutput , 
 - out . toString ( StandardCharsets . UTF _ 8 . name ( ) ) ) ; 
 } 
 
 @ Test 
 @ @ - 574 , 13 + 549 , 4 @ @ public class TranslationCheckTest extends AbstractModuleTestSupport { 
 exceptionMessage , endsWith ( " [ TranslationCheck ] " ) ) ; 
 } 
 } 
 - 
 - private String readFile ( String fileName ) throws IOException { 
 - return new String ( Files . readAllBytes ( Paths . get ( getPath ( fileName ) ) ) , 
 - StandardCharsets . UTF _ 8 ) ; 
 - } 
 - 
 - private String getPackageAbsolutePath ( ) throws IOException { 
 - return new File ( getPath ( " " ) ) . getAbsolutePath ( ) ; 
 - } 
 }

NEAREST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index a63525d . . 10da55d 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 2130 , 6 + 2130 , 8 @ @ 
 < option value = " FieldNotUsedInToString " / > 
 < ! - - till # 4805 - - > 
 < option value = " HtmlTagCanBeJavadocTag " / > 
 + < ! - - WeakerAccess reports ' can be protected ' that we can not change - - > 
 + < option value = " WeakerAccess " / > 
 < ! - - we need to work with AntClassLoader , there is no way to avoid this - - > 
 < option value = " ClassLoaderInstantiation " / > 
 < ! - - There are asserts in DetailASTTest # checkNode , but idea does not see them - - > 
 @ @ - 2488 , 7 + 2490 , 13 @ @ 
 < inspection _ tool class = " WaitOrAwaitWithoutTimeout " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " WaitWhileHoldingTwoLocks " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " WaitWithoutCorrespondingNotify " enabled = " true " level = " WARNING " enabled _ by _ default = " true " / > 
 - < inspection _ tool class = " WeakerAccess " enabled = " false " level = " WARNING " enabled _ by _ default = " false " > 
 + < inspection _ tool class = " WeakerAccess " enabled = " true " level = " WARNING " enabled _ by _ default = " false " > 
 + < scope name = " Production " level = " WARNING " enabled = " true " > 
 + < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ MEMBERS " value = " false " / > 
 + < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ TOP _ CLASSES " value = " false " / > 
 + < option name = " SUGGEST _ PRIVATE _ FOR _ INNERS " value = " false " / > 
 + < disabledExtension id = " junit " / > 
 + < / scope > 
 < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ MEMBERS " value = " true " / > 
 < option name = " SUGGEST _ PACKAGE _ LOCAL _ FOR _ TOP _ CLASSES " value = " true " / > 
 < option name = " SUGGEST _ PRIVATE _ FOR _ INNERS " value = " false " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 index d801dd5 . . e110b02 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 @ @ - 113 , 7 + 113 , 7 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { 
 * @ param closeErrorAfterUse auditFinished should close errorStream 
 * @ param messageFormatter formatter for the log message . 
 * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 - * @ noinspection BooleanParameter 
 + * @ noinspection BooleanParameter , WeakerAccess 
 * / 
 @ Deprecated 
 public DefaultLogger ( OutputStream infoStream , 
 @ @ - 170 , 6 + 170 , 7 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { 
 * @ param errorStream the { @ code OutputStream } for error messages 
 * @ param errorStreamOptions if { @ code CLOSE } error should be closed in auditFinished ( ) 
 * @ param messageFormatter formatter for the log message . 
 + * @ noinspection WeakerAccess 
 * / 
 public DefaultLogger ( OutputStream infoStream , 
 OutputStreamOptions infoStreamOptions , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractCheck . java 
 index 7e0fdd6 . . 430257d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractCheck . java 
 @ @ - 93 , 6 + 93 , 7 @ @ public abstract class AbstractCheck extends AbstractViolationReporter { 
 / * * 
 * Adds a set of tokens the check is interested in . 
 * @ param strRep the string representation of the tokens interested in 
 + * @ noinspection WeakerAccess 
 * / 
 public final void setTokens ( String . . . strRep ) { 
 Collections . addAll ( tokens , strRep ) ; 
 @ @ - 198 , 6 + 199 , 7 @ @ public abstract class AbstractCheck extends AbstractViolationReporter { 
 / * * 
 * Returns the file contents associated with the tree . 
 * @ return the file contents 
 + * @ noinspection WeakerAccess 
 * / 
 public final FileContents getFileContents ( ) { 
 return fileContents ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java 
 index 48e46a8 . . 1739b6b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AbstractViolationReporter . java 
 @ @ - 41 , 6 + 41 , 7 @ @ public abstract class AbstractViolationReporter 
 * @ return the severity level 
 * @ see SeverityLevel 
 * @ see LocalizedMessage # getSeverityLevel 
 + * @ noinspection WeakerAccess 
 * / 
 public final SeverityLevel getSeverityLevel ( ) { 
 return severityLevel ; 
 @ @ - 61 , 6 + 62 , 7 @ @ public abstract class AbstractViolationReporter 
 * Get the severity level ' s name . 
 * 
 * @ return the check ' s severity level name . 
 + * @ noinspection WeakerAccess 
 * / 
 public final String getSeverity ( ) { 
 return severityLevel . getName ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index fde157a . . 7c61b09 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 53 , 7 + 53 , 7 @ @ public class SuppressWarningsHolder 
 * suppression { @ code " checkstyle : fallthrough " } or { @ code " checkstyle : FallThrough " } . 
 * To suppress the warning in both tools , just use { @ code " fallthrough " } . 
 * / 
 - public static final String CHECKSTYLE _ PREFIX = " checkstyle : " ; 
 + private static final String CHECKSTYLE _ PREFIX = " checkstyle : " ; 
 
 / * * Java . lang namespace prefix , which is stripped from SuppressWarnings * / 
 private static final String JAVA _ LANG _ PREFIX = " java . lang . " ; 
 @ @ - 117 , 7 + 117 , 7 @ @ public class SuppressWarningsHolder 
 * name ) 
 * @ param checkAlias the alias used in { @ link SuppressWarnings } annotations 
 * / 
 - public static void registerAlias ( String sourceName , String checkAlias ) { 
 + private static void registerAlias ( String sourceName , String checkAlias ) { 
 CHECK _ ALIAS _ MAP . put ( sourceName , checkAlias ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 index a630b44 . . 6f4b14b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalTypeCheck . java 
 @ @ - 414 , 6 + 414 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { 
 / * * 
 * Set the list of illegal variable types . 
 * @ param classNames array of illegal variable types 
 + * @ noinspection WeakerAccess 
 * / 
 public void setIllegalClassNames ( String . . . classNames ) { 
 illegalClassNames . clear ( ) ; 
 @ @ - 423 , 6 + 424 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { 
 / * * 
 * Set the list of ignore method names . 
 * @ param methodNames array of ignored method names 
 + * @ noinspection WeakerAccess 
 * / 
 public void setIgnoredMethodNames ( String . . . methodNames ) { 
 ignoredMethodNames . clear ( ) ; 
 @ @ - 432 , 6 + 434 , 7 @ @ public final class IllegalTypeCheck extends AbstractCheck { 
 / * * 
 * Set the list of legal abstract class names . 
 * @ param classNames array of legal abstract class names 
 + * @ noinspection WeakerAccess 
 * / 
 public void setLegalAbstractClassNames ( String . . . classNames ) { 
 legalAbstractClassNames . clear ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java 
 index 41924b2 . . 3004816 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java 
 @ @ - 88 , 6 + 88 , 7 @ @ public class MultipleStringLiteralsCheck extends AbstractCheck { 
 * Sets regular expression pattern for ignored strings . 
 * @ param ignoreStringsRegexp 
 * regular expression pattern for ignored strings 
 + * @ noinspection WeakerAccess 
 * / 
 public final void setIgnoreStringsRegexp ( Pattern ignoreStringsRegexp ) { 
 if ( ignoreStringsRegexp = = null | | ignoreStringsRegexp . pattern ( ) . isEmpty ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java 
 index 1cb24d1 . . 8e530da 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / header / HeaderCheck . java 
 @ @ - 67 , 7 + 67 , 7 @ @ public class HeaderCheck extends AbstractHeaderCheck { 
 * @ param line the line contents 
 * @ return true if and only if the line matches the required header line 
 * / 
 - protected boolean isMatch ( int lineNumber , String line ) { 
 + private boolean isMatch ( int lineNumber , String line ) { 
 / / skip lines we are meant to ignore 
 return isIgnoreLine ( lineNumber + 1 ) 
 | | getHeaderLines ( ) . get ( lineNumber ) . equals ( line ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java 
 index 2139af4 . . ccf109d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java 
 @ @ - 99 , 6 + 99 , 7 @ @ public class IllegalImportCheck 
 / * * 
 * Set the list of illegal packages . 
 * @ param from array of illegal packages 
 + * @ noinspection WeakerAccess 
 * / 
 public final void setIllegalPkgs ( String . . . from ) { 
 illegalPkgs = from . clone ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 index 433802d . . 833d12e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 @ @ - 77 , 6 + 77 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * value is returned . 
 * 
 * @ return the expected indentation amount 
 + * @ noinspection WeakerAccess 
 * / 
 public final IndentLevel getIndent ( ) { 
 if ( indent = = null ) { 
 @ @ - 102 , 6 + 103 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * type ) 
 * 
 * @ return suggested indentation for child 
 + * @ noinspection WeakerAccess 
 * / 
 public IndentLevel getSuggestedChildIndent ( AbstractExpressionHandler child ) { 
 return new IndentLevel ( getIndent ( ) , getBasicOffset ( ) ) ; 
 @ @ - 181 , 6 + 183 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * @ param ast2 the second expression 
 * 
 * @ return true if they are , false otherwise 
 + * @ noinspection WeakerAccess 
 * / 
 public static boolean areOnSameLine ( DetailAST ast1 , DetailAST ast2 ) { 
 return ast1 . getLineNo ( ) = = ast2 . getLineNo ( ) ; 
 @ @ - 191 , 6 + 194 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * which represents first symbol for this sub - tree in file . 
 * @ param ast a root of sub - tree in which the search should be performed . 
 * @ return a token which occurs first in the file . 
 + * @ noinspection WeakerAccess 
 * / 
 public static DetailAST getFirstToken ( DetailAST ast ) { 
 DetailAST first = ast ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 index 4628087 . . f4a020e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 @ @ - 63 , 6 + 63 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 * @ param name the name of the handler 
 * @ param ast the abstract syntax tree 
 * @ param parent the parent handler 
 + * @ noinspection WeakerAccess 
 * / 
 public BlockParentHandler ( IndentationCheck indentCheck , 
 String name , DetailAST ast , AbstractExpressionHandler parent ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 index 6ad00c6 . . 1b891aa 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LineWrappingHandler . java 
 @ @ - 103 , 7 + 103 , 7 @ @ public class LineWrappingHandler { 
 * @ param lastNode Last node to examine inclusively . 
 * @ param indentLevel Indentation all wrapped lines should use . 
 * / 
 - public void checkIndentation ( DetailAST firstNode , DetailAST lastNode , int indentLevel ) { 
 + private void checkIndentation ( DetailAST firstNode , DetailAST lastNode , int indentLevel ) { 
 checkIndentation ( firstNode , lastNode , indentLevel , 
 - 1 , LineWrappingOptions . IGNORE _ FIRST _ LINE ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java 
 index e5940f5 . . ddfd264 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java 
 @ @ - 46 , 7 + 46 , 7 @ @ public class TryHandler extends BlockParentHandler { 
 * 
 * @ return DetailAst left parenthesis of try with resources 
 * / 
 - protected DetailAST getTryResLparen ( ) { 
 + private DetailAST getTryResLparen ( ) { 
 return getMainAst ( ) . getFirstChild ( ) . getFirstChild ( ) ; 
 } 
 
 @ @ - 55 , 7 + 55 , 7 @ @ public class TryHandler extends BlockParentHandler { 
 * 
 * @ return DetailAst right parenthesis of try with resources 
 * / 
 - protected DetailAST getTryResRparen ( ) { 
 + private DetailAST getTryResRparen ( ) { 
 return getMainAst ( ) . getFirstChild ( ) . getLastChild ( ) ; 
 } 
 
 @ @ - 86 , 7 + 86 , 7 @ @ public class TryHandler extends BlockParentHandler { 
 * @ param parenAst lparen or rparen ast to check 
 * @ param subType name to be used in log message 
 * / 
 - protected void checkTryResParen ( final DetailAST parenAst , 
 + private void checkTryResParen ( final DetailAST parenAst , 
 final String subType ) { 
 if ( isOnStartOfLine ( parenAst ) ) { 
 final IndentLevel expectedIdent = new IndentLevel ( getIndent ( ) , 0 , 
 @ @ - 123 , 7 + 123 , 7 @ @ public class TryHandler extends BlockParentHandler { 
 * 
 * @ param resourcesSpecAst Resource specification ast 
 * / 
 - protected void checkTryResources ( final DetailAST resourcesSpecAst ) { 
 + private void checkTryResources ( final DetailAST resourcesSpecAst ) { 
 final DetailAST resourcesAst = resourcesSpecAst . findFirstToken ( TokenTypes . RESOURCES ) ; 
 final int indetation = getIndent ( ) . getFirstIndentLevel ( ) 
 + getIndentCheck ( ) . getLineWrappingIndentation ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 8c8ec30 . . 47ae0d4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 419 , 7 + 419 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * @ param ast the tree node for the method or constructor . 
 * @ return True if this method or constructor doesn ' t need Javadoc . 
 * / 
 - protected boolean isMissingJavadocAllowed ( final DetailAST ast ) { 
 + private boolean isMissingJavadocAllowed ( final DetailAST ast ) { 
 return allowMissingJavadoc 
 | | allowMissingPropertyJavadoc 
 & & ( CheckUtils . isSetterMethod ( ast ) | | CheckUtils . isGetterMethod ( ast ) ) 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java 
 index 2502e03 . . 05af770 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java 
 @ @ - 200 , 7 + 200 , 7 @ @ public class WriteTagCheck 
 * 
 * @ see java . text . MessageFormat 
 * / 
 - protected final void logTag ( int line , String tagName , String tagValue ) { 
 + private void logTag ( int line , String tagName , String tagValue ) { 
 final String originalSeverity = getSeverity ( ) ; 
 setSeverity ( tagSeverity . getName ( ) ) ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 index ea6eb59 . . 85a387b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressWithNearbyCommentFilter . java 
 @ @ - 127 , 13 + 127 , 14 @ @ public class SuppressWithNearbyCommentFilter 
 * Returns FileContents for this filter . 
 * @ return the FileContents for this filter . 
 * / 
 - public FileContents getFileContents ( ) { 
 + private FileContents getFileContents ( ) { 
 return fileContentsReference . get ( ) ; 
 } 
 
 / * * 
 * Set the FileContents for this filter . 
 * @ param fileContents the FileContents for this filter . 
 + * @ noinspection WeakerAccess 
 * / 
 public void setFileContents ( FileContents fileContents ) { 
 fileContentsReference = new WeakReference < > ( fileContents ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 index 015a384 . . e871395 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filters / SuppressionCommentFilter . java 
 @ @ - 131 , 13 + 131 , 14 @ @ public class SuppressionCommentFilter 
 * Returns FileContents for this filter . 
 * @ return the FileContents for this filter . 
 * / 
 - public FileContents getFileContents ( ) { 
 + private FileContents getFileContents ( ) { 
 return fileContentsReference . get ( ) ; 
 } 
 
 / * * 
 * Set the FileContents for this filter . 
 * @ param fileContents the FileContents for this filter . 
 + * @ noinspection WeakerAccess 
 * / 
 public void setFileContents ( FileContents fileContents ) { 
 fileContentsReference = new WeakReference < > ( fileContents ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 index e8f0ec0 . . a33a61b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / MainFrameModel . java 
 @ @ - 240 , 7 + 240 , 7 @ @ public class MainFrameModel { 
 * @ throws IOException if the file could not be read . 
 * @ throws ANTLRException if the file is not a Java source . 
 * / 
 - public DetailAST parseFile ( File file ) throws IOException , ANTLRException { 
 + private static DetailAST parseFile ( File file ) throws IOException , ANTLRException { 
 final FileText fileText = getFileText ( file ) ; 
 final FileContents contents = new FileContents ( fileText ) ; 
 return TreeWalker . parse ( contents ) ; 
 @ @ - 253 , 7 + 253 , 7 @ @ public class MainFrameModel { 
 * @ throws IOException if the file could not be read . 
 * @ throws ANTLRException if the file is not a Java source . 
 * / 
 - public DetailAST parseFileWithComments ( File file ) throws IOException , ANTLRException { 
 + private static DetailAST parseFileWithComments ( File file ) throws IOException , ANTLRException { 
 final FileText fileText = getFileText ( file ) ; 
 final FileContents contents = new FileContents ( fileText ) ; 
 return TreeWalker . parseWithComments ( contents ) ; 
 @ @ - 265 , 7 + 265 , 7 @ @ public class MainFrameModel { 
 * @ return the FileText . 
 * @ throws IOException if the file could not be read . 
 * / 
 - public FileText getFileText ( File file ) throws IOException { 
 + private static FileText getFileText ( File file ) throws IOException { 
 return new FileText ( file . getAbsoluteFile ( ) , 
 System . getProperty ( " file . encoding " , " UTF - 8 " ) ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 index 7d63e60 . . b744167 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 @ @ - 410 , 7 + 410 , 7 @ @ public final class JavadocUtils { 
 * @ param blockComment Block comment AST 
 * @ return true if Javadoc is in right place 
 * / 
 - public static boolean isCorrectJavadocPosition ( DetailAST blockComment ) { 
 + private static boolean isCorrectJavadocPosition ( DetailAST blockComment ) { 
 return BlockCommentPosition . isOnClass ( blockComment ) 
 | | BlockCommentPosition . isOnInterface ( blockComment ) 
 | | BlockCommentPosition . isOnEnum ( blockComment ) 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java 
 index 23136eb . . 1f9b801 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefaultLoggerTest . java 
 @ @ - 33 , 6 + 33 , 7 @ @ import org . junit . Test ; 
 import com . puppycrawl . tools . checkstyle . api . AuditEvent ; 
 import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 public class DefaultLoggerTest { 
 
 @ @ - 45 , 7 + 46 , 7 @ @ public class DefaultLoggerTest { 
 dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; 
 final String output = errorStream . toString ( " UTF - 8 " ) ; 
 final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , 
 - Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . addException " , 
 + Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . ADD _ EXCEPTION _ MESSAGE , 
 new String [ ] { " myfile " } , null , 
 getClass ( ) , null ) ; 
 
 @ @ - 72 , 16 + 73 , 30 @ @ public class DefaultLoggerTest { 
 final DefaultLogger dl = new DefaultLogger ( infoStream , 
 AutomaticBean . OutputStreamOptions . CLOSE , errorStream , 
 AutomaticBean . OutputStreamOptions . CLOSE ) ; 
 + dl . auditStarted ( null ) ; 
 dl . addException ( new AuditEvent ( 5000 , " myfile " ) , new IllegalStateException ( " upsss " ) ) ; 
 dl . auditFinished ( new AuditEvent ( 6000 , " myfile " ) ) ; 
 final String output = errorStream . toString ( " UTF - 8 " ) ; 
 final LocalizedMessage addExceptionMessage = new LocalizedMessage ( 0 , 
 - Definitions . CHECKSTYLE _ BUNDLE , " DefaultLogger . addException " , 
 + Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . ADD _ EXCEPTION _ MESSAGE , 
 new String [ ] { " myfile " } , null , 
 getClass ( ) , null ) ; 
 + final LocalizedMessage startMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . AUDIT _ STARTED _ MESSAGE , 
 + CommonUtils . EMPTY _ STRING _ ARRAY , null , 
 + getClass ( ) , null ) ; 
 + final LocalizedMessage finishMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , DefaultLogger . AUDIT _ FINISHED _ MESSAGE , 
 + CommonUtils . EMPTY _ STRING _ ARRAY , null , 
 + getClass ( ) , null ) ; 
 
 verify ( infoStream , times ( 1 ) ) . close ( ) ; 
 verify ( errorStream , times ( 1 ) ) . close ( ) ; 
 + final String infoOutput = infoStream . toString ( ) ; 
 + assertTrue ( " Message should contain exception info , but was " + infoOutput , 
 + infoOutput . contains ( startMessage . getMessage ( ) ) ) ; 
 + assertTrue ( " Message should contain exception info , but was " + infoOutput , 
 + infoOutput . contains ( finishMessage . getMessage ( ) ) ) ; 
 assertTrue ( " Message should contain exception info , but was " + output , 
 output . contains ( addExceptionMessage . getMessage ( ) ) ) ; 
 assertTrue ( " Message should contain exception info , but was " + output , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index b41bb3d . . 351effa 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 123 , 7 + 123 , 7 @ @ public class MainTest { 
 getClass ( ) , null ) ; 
 
 private final LocalizedMessage errorCounterOneMessage = new LocalizedMessage ( 0 , 
 - Definitions . CHECKSTYLE _ BUNDLE , " Main . errorCounter " , 
 + Definitions . CHECKSTYLE _ BUNDLE , Main . ERROR _ COUNTER , 
 new String [ ] { String . valueOf ( 1 ) } , null , getClass ( ) , null ) ; 
 
 private static String getPath ( String filename ) { 
 @ @ - 338 , 7 + 338 , 7 @ @ public class MainTest { 
 exit . expectSystemExitWithStatus ( 2 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 final LocalizedMessage errorCounterTwoMessage = new LocalizedMessage ( 0 , 
 - Definitions . CHECKSTYLE _ BUNDLE , " Main . errorCounter " , 
 + Definitions . CHECKSTYLE _ BUNDLE , Main . ERROR _ COUNTER , 
 new String [ ] { String . valueOf ( 2 ) } , null , getClass ( ) , null ) ; 
 final LocalizedMessage invalidPatternMessageMain = new LocalizedMessage ( 0 , 
 " com . puppycrawl . tools . checkstyle . checks . naming . messages " , 
 @ @ - 510 , 8 + 510 , 16 @ @ public class MainTest { 
 / / We do separate validation for message as in Windows 
 / / disk drive letter appear in message , 
 / / so we skip that drive letter for compatibility issues 
 + final LocalizedMessage loadPropertiesMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , Main . LOAD _ PROPERTIES _ EXCEPTION , 
 + new String [ ] { " " } , null , getClass ( ) , null ) ; 
 + final String causeMessage = ex . getCause ( ) . getLocalizedMessage ( ) ; 
 + assertTrue ( " Invalid error message " , 
 + causeMessage . substring ( 0 , causeMessage . lastIndexOf ( ' ' ) ) 
 + . startsWith ( loadPropertiesMessage . getMessage ( ) 
 + . substring ( 0 , causeMessage . lastIndexOf ( ' ' ) ) ) ) ; 
 assertTrue ( " Invalid error message " , 
 - ex . getCause ( ) . getLocalizedMessage ( ) . contains ( " : invalid " ) ) ; 
 + causeMessage . contains ( " : invalid " ) ) ; 
 } 
 } 
 
 @ @ - 526 , 7 + 534 , 7 @ @ public class MainTest { 
 } 
 catch ( InvocationTargetException ex ) { 
 final LocalizedMessage loadPropertiesMessage = new LocalizedMessage ( 0 , 
 - Definitions . CHECKSTYLE _ BUNDLE , " Main . createListener " , 
 + Definitions . CHECKSTYLE _ BUNDLE , Main . CREATE _ LISTENER _ EXCEPTION , 
 new String [ ] { " myformat " , " plain " , " xml " } , null , getClass ( ) , null ) ; 
 assertEquals ( " Invalid error message " , 
 loadPropertiesMessage . getMessage ( ) , ex . getCause ( ) . getLocalizedMessage ( ) ) ; 
 @ @ - 551 , 7 + 559 , 7 @ @ public class MainTest { 
 } 
 catch ( InvocationTargetException ex ) { 
 final LocalizedMessage createListenerMessage = new LocalizedMessage ( 0 , 
 - Definitions . CHECKSTYLE _ BUNDLE , " Main . createListener " , 
 + Definitions . CHECKSTYLE _ BUNDLE , Main . CREATE _ LISTENER _ EXCEPTION , 
 new String [ ] { " myformat " , " plain " , " xml " } , null , getClass ( ) , null ) ; 
 assertEquals ( " Invalid error message " , 
 createListenerMessage . getMessage ( ) , ex . getCause ( ) . getLocalizedMessage ( ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ThreadModeSettingsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ThreadModeSettingsTest . java 
 index 243b16c . . efe2875 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ThreadModeSettingsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ThreadModeSettingsTest . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public class ThreadModeSettingsTest { 
 final ThreadModeSettings configuration = new ThreadModeSettings ( 2 , 2 ) ; 
 
 try { 
 - configuration . resolveName ( " Checker " ) ; 
 + configuration . resolveName ( ThreadModeSettings . CHECKER _ MODULE _ NAME ) ; 
 fail ( " An exception is expected " ) ; 
 } 
 catch ( IllegalArgumentException ex ) { 
 @ @ - 57 , 7 + 57 , 8 @ @ public class ThreadModeSettingsTest { 
 public void testResolveCheckerInSingleThreadMode ( ) throws Exception { 
 final ThreadModeSettings singleThreadMode = ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ; 
 
 - assertEquals ( " Invalid name resolved " , " Checker " , singleThreadMode . resolveName ( " Checker " ) ) ; 
 + assertEquals ( " Invalid name resolved " , ThreadModeSettings . CHECKER _ MODULE _ NAME , 
 + singleThreadMode . resolveName ( ThreadModeSettings . CHECKER _ MODULE _ NAME ) ) ; 
 } 
 
 @ Test 
 @ @ - 65 , 7 + 66 , 7 @ @ public class ThreadModeSettingsTest { 
 final ThreadModeSettings configuration = new ThreadModeSettings ( 2 , 2 ) ; 
 
 try { 
 - configuration . resolveName ( " TreeWalker " ) ; 
 + configuration . resolveName ( ThreadModeSettings . TREE _ WALKER _ MODULE _ NAME ) ; 
 } 
 catch ( IllegalArgumentException ex ) { 
 assertEquals ( " Invalid exception message " , 
 @ @ - 77 , 8 + 78 , 10 @ @ public class ThreadModeSettingsTest { 
 @ Test 
 public void testResolveTreeWalkerInSingleThreadMode ( ) throws Exception { 
 final ThreadModeSettings singleThreadMode = ThreadModeSettings . SINGLE _ THREAD _ MODE _ INSTANCE ; 
 - final String actual = singleThreadMode . resolveName ( " TreeWalker " ) ; 
 - assertThat ( " Invalid name resolved : " + actual , actual , is ( " TreeWalker " ) ) ; 
 + final String actual = 
 + singleThreadMode . resolveName ( ThreadModeSettings . TREE _ WALKER _ MODULE _ NAME ) ; 
 + assertThat ( " Invalid name resolved : " + actual , 
 + actual , is ( ThreadModeSettings . TREE _ WALKER _ MODULE _ NAME ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java 
 index 4640317 . . 1e2e037 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolderTest . java 
 @ @ - 200 , 7 + 200 , 7 @ @ public class SuppressWarningsHolderTest extends AbstractModuleTestSupport { 
 final Configuration checkConfig = createModuleConfig ( SuppressWarningsHolder . class ) ; 
 
 final String [ ] expected = { 
 - " 11 : " + getCheckMessage ( " suppress . warnings . invalid . target " ) , 
 + " 11 : " + getCheckMessage ( SuppressWarningsHolder . MSG _ KEY ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " InputSuppressWarningsHolder2 . java " ) , expected ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheckTest . java 
 index 70fccb8 . . 5802639 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheckTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . naming ; 
 
 - import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; 
 + import static com . puppycrawl . tools . checkstyle . checks . naming . PackageNameCheck . MSG _ KEY ; 
 import static org . junit . Assert . assertArrayEquals ; 
 
 import org . junit . Test ; 
 @ @ - 54 , 7 + 54 , 7 @ @ public class PackageNameCheckTest 
 final String pattern = " [ A - Z ] + " ; 
 
 final String [ ] expected = { 
 - " 6 : 9 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , 
 + " 6 : 9 : " + getCheckMessage ( MSG _ KEY , 
 " com . puppycrawl . tools . checkstyle . checks . naming . packagename " , pattern ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputPackageNameSimple . java " ) , expected ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineCheckTest . java 
 index d5b9e98 . . fcff45f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineCheckTest . java 
 @ @ - 19 , 8 + 19 , 8 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . regexp ; 
 
 - import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . MSG _ REGEXP _ EXCEEDED ; 
 - import static com . puppycrawl . tools . checkstyle . checks . regexp . MultilineDetector . MSG _ REGEXP _ MINIMUM ; 
 + import static com . puppycrawl . tools . checkstyle . checks . regexp . SinglelineDetector . MSG _ REGEXP _ EXCEEDED ; 
 + import static com . puppycrawl . tools . checkstyle . checks . regexp . SinglelineDetector . MSG _ REGEXP _ MINIMUM ; 
 
 import org . junit . Before ; 
 import org . junit . Test ;
