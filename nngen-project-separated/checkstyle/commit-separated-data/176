BLEU SCORE: 0.09864703138979415

TEST MSG: Issue # 5832 : Add javadoc and xdoc Example for AbstractClassName
GENERATED MSG: Issue # 5750 : aligned javadoc / xdoc for MethodTypeParameterNameCheck

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> index 48d2cb5 . . 7d3450f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java <nl> @ @ - 55 , 13 + 55 , 18 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * The following example shows how to configure the { @ code AbstractClassName } to <nl> * checks names , but ignore missing { @ code abstract } modifiers : <nl> * < / p > <nl> - * <nl> + * < p > Configuration : < / p > <nl> * < pre > <nl> * & lt ; module name = " AbstractClassName " & gt ; <nl> * & lt ; property name = " ignoreModifier " value = " true " / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> - * <nl> + * < p > Example : < / p > <nl> + * < pre > <nl> + * abstract class AbstractFirstClass { } / / OK <nl> + * abstract class SecondClass { } / / violation , it should match the pattern " ^ Abstract . + $ " <nl> + * class AbstractThirdClass { } / / OK , no " abstract " modifier <nl> + * < / pre > <nl> * @ since 3 . 2 <nl> * / <nl> @ StatelessCheck <nl> diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index d5cefb1 . . 03adf10 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 270 , 11 + 270 , 18 @ @ <nl> < code > AbstractClassName < / code > to checks names , but ignore <nl> missing < code > abstract < / code > modifiers : <nl> < / p > <nl> + < p > Configuration : < / p > <nl> < source > <nl> & lt ; module name = & quot ; AbstractClassName & quot ; & gt ; <nl> & lt ; property name = & quot ; ignoreModifier & quot ; value = & quot ; true & quot ; / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> + < p > Example : < / p > <nl> + < pre > <nl> + abstract class AbstractFirstClass { } / / OK <nl> + abstract class SecondClass { } / / violation , it should match the pattern " ^ Abstract . + $ " <nl> + class AbstractThirdClass { } / / OK , no " abstract " modifier <nl> + < / pre > <nl> < / subsection > <nl> <nl> < subsection name = " Example of Usage " id = " AbstractClassName _ Example _ of _ Usage " >
NEAREST DIFF (one line): diff - - git a / buddy . yml b / buddy . yml <nl> index afef64d . . 288efea 100644 <nl> - - - a / buddy . yml <nl> + + + b / buddy . yml <nl> @ @ - 2 , 7 + 2 , 6 @ @ <nl> trigger _ mode : " ON _ EVERY _ PUSH " <nl> ref _ name : " master " <nl> ref _ type : " BRANCH " <nl> - clone _ depth : 1 <nl> actions : <nl> - action : " Execute : . / . ci / travis / travis . sh versions " <nl> type : " BUILD " <nl> @ @ - 21 , 7 + 20 , 6 @ @ <nl> trigger _ mode : " ON _ EVERY _ PUSH " <nl> ref _ name : " master " <nl> ref _ type : " BRANCH " <nl> - clone _ depth : 1 <nl> actions : <nl> - action : " Execute : . / . ci / travis / travis . sh releasenotes - gen " <nl> type : " BUILD " <nl> @ @ - 41 , 7 + 39 , 6 @ @ <nl> # trigger _ mode : " ON _ EVERY _ PUSH " <nl> # ref _ name : " master " <nl> # ref _ type : " BRANCH " <nl> - # clone _ depth : 1 <nl> # actions : <nl> # - action : " Execute : . / . ci / travis / travis . sh check - chmod " <nl> # type : " BUILD " <nl> @ @ - 62 , 7 + 59 , 6 @ @ <nl> # trigger _ mode : " ON _ EVERY _ PUSH " <nl> # ref _ name : " master " <nl> # ref _ type : " BRANCH " <nl> - # clone _ depth : 1 <nl> # actions : <nl> # - action : " Execute : . / . ci / test - spelling - unknown - words . sh " <nl> # type : " BUILD "

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 index 48d2cb5 . . 7d3450f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AbstractClassNameCheck . java 
 @ @ - 55 , 13 + 55 , 18 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * The following example shows how to configure the { @ code AbstractClassName } to 
 * checks names , but ignore missing { @ code abstract } modifiers : 
 * < / p > 
 - * 
 + * < p > Configuration : < / p > 
 * < pre > 
 * & lt ; module name = " AbstractClassName " & gt ; 
 * & lt ; property name = " ignoreModifier " value = " true " / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 - * 
 + * < p > Example : < / p > 
 + * < pre > 
 + * abstract class AbstractFirstClass { } / / OK 
 + * abstract class SecondClass { } / / violation , it should match the pattern " ^ Abstract . + $ " 
 + * class AbstractThirdClass { } / / OK , no " abstract " modifier 
 + * < / pre > 
 * @ since 3 . 2 
 * / 
 @ StatelessCheck 
 diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index d5cefb1 . . 03adf10 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 270 , 11 + 270 , 18 @ @ 
 < code > AbstractClassName < / code > to checks names , but ignore 
 missing < code > abstract < / code > modifiers : 
 < / p > 
 + < p > Configuration : < / p > 
 < source > 
 & lt ; module name = & quot ; AbstractClassName & quot ; & gt ; 
 & lt ; property name = & quot ; ignoreModifier & quot ; value = & quot ; true & quot ; / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 + < p > Example : < / p > 
 + < pre > 
 + abstract class AbstractFirstClass { } / / OK 
 + abstract class SecondClass { } / / violation , it should match the pattern " ^ Abstract . + $ " 
 + class AbstractThirdClass { } / / OK , no " abstract " modifier 
 + < / pre > 
 < / subsection > 
 
 < subsection name = " Example of Usage " id = " AbstractClassName _ Example _ of _ Usage " >

NEAREST DIFF:
diff - - git a / buddy . yml b / buddy . yml 
 index afef64d . . 288efea 100644 
 - - - a / buddy . yml 
 + + + b / buddy . yml 
 @ @ - 2 , 7 + 2 , 6 @ @ 
 trigger _ mode : " ON _ EVERY _ PUSH " 
 ref _ name : " master " 
 ref _ type : " BRANCH " 
 - clone _ depth : 1 
 actions : 
 - action : " Execute : . / . ci / travis / travis . sh versions " 
 type : " BUILD " 
 @ @ - 21 , 7 + 20 , 6 @ @ 
 trigger _ mode : " ON _ EVERY _ PUSH " 
 ref _ name : " master " 
 ref _ type : " BRANCH " 
 - clone _ depth : 1 
 actions : 
 - action : " Execute : . / . ci / travis / travis . sh releasenotes - gen " 
 type : " BUILD " 
 @ @ - 41 , 7 + 39 , 6 @ @ 
 # trigger _ mode : " ON _ EVERY _ PUSH " 
 # ref _ name : " master " 
 # ref _ type : " BRANCH " 
 - # clone _ depth : 1 
 # actions : 
 # - action : " Execute : . / . ci / travis / travis . sh check - chmod " 
 # type : " BUILD " 
 @ @ - 62 , 7 + 59 , 6 @ @ 
 # trigger _ mode : " ON _ EVERY _ PUSH " 
 # ref _ name : " master " 
 # ref _ type : " BRANCH " 
 - # clone _ depth : 1 
 # actions : 
 # - action : " Execute : . / . ci / test - spelling - unknown - words . sh " 
 # type : " BUILD "
