BLEU SCORE: 0.026279617104084448

TEST MSG: Issue # 5003 : increase coverage of pitest - checks - whitespace to 99 %
GENERATED MSG: Fix typos in code and Javadoc . # 1555

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 2df268c . . 37c60a7 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 2072 , 7 + 2072 , 7 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . checks . whitespace . * < / param > <nl> < / targetTests > <nl> - < mutationThreshold > 98 < / mutationThreshold > <nl> + < mutationThreshold > 99 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> index fee232a . . 0c837a4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> @ @ - 388 , 7 + 388 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { <nl> } <nl> / / ident and lastTypeNode lay on one line <nl> else { <nl> - if ( ident . getColumnNo ( ) > ast . getColumnNo ( ) <nl> + if ( ident . getColumnNo ( ) > = ast . getColumnNo ( ) + 1 <nl> | | lastTypeNode . getColumnNo ( ) > ident . getColumnNo ( ) ) { <nl> previousElement = lastTypeNode ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java <nl> index 23d492d . . 6805d3c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java <nl> @ @ - 140 , 12 + 140 , 17 @ @ public class SingleSpaceSeparatorCheck extends AbstractCheck { <nl> while ( sibling ! = null ) { <nl> final int columnNo = sibling . getColumnNo ( ) - 1 ; <nl> <nl> - if ( columnNo > = 0 <nl> + / / in such expression : " j = 123 " , placed at the start of the string index of the second <nl> + / / space character will be : 2 = 0 ( j ) + 1 ( whitespace ) + 1 ( whitespace ) . It is a minimal <nl> + / / possible index for the second whitespace between non - whitespace characters . <nl> + final int minSecondWhitespaceColumnNo = 2 ; <nl> + <nl> + if ( columnNo > = minSecondWhitespaceColumnNo <nl> & & ! isTextSeparatedCorrectlyFromPrevious ( getLine ( sibling . getLineNo ( ) - 1 ) , <nl> columnNo ) ) { <nl> log ( sibling . getLineNo ( ) , columnNo , MSG _ KEY ) ; <nl> } <nl> - if ( sibling . getChildCount ( ) > 0 ) { <nl> + if ( sibling . getChildCount ( ) > = 1 ) { <nl> visitEachToken ( sibling . getFirstChild ( ) ) ; <nl> } <nl> <nl> @ @ - 212 , 8 + 217 , 7 @ @ public class SingleSpaceSeparatorCheck extends AbstractCheck { <nl> * { @ code columnNo } . <nl> * / <nl> private static boolean isPrecededByMultipleWhitespaces ( String line , int columnNo ) { <nl> - return columnNo > = 1 <nl> - & & Character . isWhitespace ( line . charAt ( columnNo ) ) <nl> + return Character . isWhitespace ( line . charAt ( columnNo ) ) <nl> & & Character . isWhitespace ( line . charAt ( columnNo - 1 ) ) ; <nl> } <nl> <nl> @ @ - 239 , 7 + 243 , 7 @ @ public class SingleSpaceSeparatorCheck extends AbstractCheck { <nl> * text on the { @ code line } . <nl> * / <nl> private static boolean isFirstInLine ( String line , int columnNo ) { <nl> - return CommonUtils . isBlank ( line . substring ( 0 , columnNo + 1 ) ) ; <nl> + return CommonUtils . isBlank ( line . substring ( 0 , columnNo ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java <nl> index ed7e56d . . 0581b23 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . whitespace . SingleSpaceSeparatorCheck . MSG _ KEY ; <nl> + import static org . junit . Assert . assertArrayEquals ; <nl> <nl> import org . junit . Test ; <nl> <nl> @ @ - 42 , 6 + 43 , 14 @ @ public class SingleSpaceSeparatorCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testGetAcceptableTokens ( ) { <nl> + final SingleSpaceSeparatorCheck check = new SingleSpaceSeparatorCheck ( ) ; <nl> + <nl> + assertArrayEquals ( " Invalid acceptable tockens " , <nl> + CommonUtils . EMPTY _ INT _ ARRAY , check . getAcceptableTokens ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testSpaceErrors ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; <nl> @ @ - 102 , 6 + 111 , 40 @ @ public class SingleSpaceSeparatorCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testSpaceErrorsInChildNodes ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 5 : 15 : " + getCheckMessage ( MSG _ KEY ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorChildNodes . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testMinColumnNo ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; <nl> + checkConfig . addAttribute ( " validateComments " , String . valueOf ( true ) ) ; <nl> + final String [ ] expected = { <nl> + " 5 : 3 : " + getCheckMessage ( MSG _ KEY ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorMinColumnNo . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testWhitespaceInStartOfTheLine ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 5 : 6 : " + getCheckMessage ( MSG _ KEY ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorStartOfTheLine . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testSpaceErrorsIfCommentsIgnored ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorChildNodes . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorChildNodes . java <nl> new file mode 100644 <nl> index 0000000 . . 3afd53f <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorChildNodes . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; <nl> + <nl> + public class InputSingleSpaceSeparatorChildNodes { <nl> + int j = 0 ; <nl> + int i = 1 + j ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorMinColumnNo . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorMinColumnNo . java <nl> new file mode 100644 <nl> index 0000000 . . 7239ae0 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorMinColumnNo . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; <nl> + <nl> + public class InputSingleSpaceSeparatorMinColumnNo { <nl> + int <nl> + j = 0 ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorStartOfTheLine . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorStartOfTheLine . java <nl> new file mode 100644 <nl> index 0000000 . . 9d990a8 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorStartOfTheLine . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; <nl> + <nl> + public class InputSingleSpaceSeparatorStartOfTheLine { <nl> + int <nl> + i = 0 ; <nl> + }
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> index f3415ce . . a36aee0 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java <nl> @ @ - 19 , 22 + 19 , 22 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> <nl> public class ConfigurationBuilder extends BaseCheckTestSupport { <nl> <nl> + 	 private static final String XML _ NAME = " / google _ checks . xml " ; <nl> + <nl> 	 private final File root ; <nl> <nl> 	 private final List < File > files = new ArrayList < > ( ) ; <nl> <nl> 	 Configuration config ; <nl> - 	 <nl> + <nl> 	 URL url ; <nl> - 	 <nl> - 	 final String xmlName = " / google _ checks . xml " ; <nl> - 	 <nl> + <nl> 	 final Pattern warnPattern = Utils . createPattern ( " . * [ ] * / / [ ] * warn [ ] * | / [ * ] warn [ * ] / " ) ; <nl> <nl> 	 public ConfigurationBuilder ( File aROOT ) <nl> 	 	 	 throws CheckstyleException , IOException { <nl> 	 	 root = aROOT ; <nl> - 	 	 config = getConfigurationFromXML ( xmlName , System . getProperties ( ) ) ; <nl> + 	 	 config = getConfigurationFromXML ( XML _ NAME , System . getProperties ( ) ) ; <nl> 	 	 listFiles ( files , root , " java " ) ; <nl> 	 } <nl>

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 2df268c . . 37c60a7 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 2072 , 7 + 2072 , 7 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . checks . whitespace . * < / param > 
 < / targetTests > 
 - < mutationThreshold > 98 < / mutationThreshold > 
 + < mutationThreshold > 99 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 index fee232a . . 0c837a4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 @ @ - 388 , 7 + 388 , 7 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { 
 } 
 / / ident and lastTypeNode lay on one line 
 else { 
 - if ( ident . getColumnNo ( ) > ast . getColumnNo ( ) 
 + if ( ident . getColumnNo ( ) > = ast . getColumnNo ( ) + 1 
 | | lastTypeNode . getColumnNo ( ) > ident . getColumnNo ( ) ) { 
 previousElement = lastTypeNode ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java 
 index 23d492d . . 6805d3c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheck . java 
 @ @ - 140 , 12 + 140 , 17 @ @ public class SingleSpaceSeparatorCheck extends AbstractCheck { 
 while ( sibling ! = null ) { 
 final int columnNo = sibling . getColumnNo ( ) - 1 ; 
 
 - if ( columnNo > = 0 
 + / / in such expression : " j = 123 " , placed at the start of the string index of the second 
 + / / space character will be : 2 = 0 ( j ) + 1 ( whitespace ) + 1 ( whitespace ) . It is a minimal 
 + / / possible index for the second whitespace between non - whitespace characters . 
 + final int minSecondWhitespaceColumnNo = 2 ; 
 + 
 + if ( columnNo > = minSecondWhitespaceColumnNo 
 & & ! isTextSeparatedCorrectlyFromPrevious ( getLine ( sibling . getLineNo ( ) - 1 ) , 
 columnNo ) ) { 
 log ( sibling . getLineNo ( ) , columnNo , MSG _ KEY ) ; 
 } 
 - if ( sibling . getChildCount ( ) > 0 ) { 
 + if ( sibling . getChildCount ( ) > = 1 ) { 
 visitEachToken ( sibling . getFirstChild ( ) ) ; 
 } 
 
 @ @ - 212 , 8 + 217 , 7 @ @ public class SingleSpaceSeparatorCheck extends AbstractCheck { 
 * { @ code columnNo } . 
 * / 
 private static boolean isPrecededByMultipleWhitespaces ( String line , int columnNo ) { 
 - return columnNo > = 1 
 - & & Character . isWhitespace ( line . charAt ( columnNo ) ) 
 + return Character . isWhitespace ( line . charAt ( columnNo ) ) 
 & & Character . isWhitespace ( line . charAt ( columnNo - 1 ) ) ; 
 } 
 
 @ @ - 239 , 7 + 243 , 7 @ @ public class SingleSpaceSeparatorCheck extends AbstractCheck { 
 * text on the { @ code line } . 
 * / 
 private static boolean isFirstInLine ( String line , int columnNo ) { 
 - return CommonUtils . isBlank ( line . substring ( 0 , columnNo + 1 ) ) ; 
 + return CommonUtils . isBlank ( line . substring ( 0 , columnNo ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java 
 index ed7e56d . . 0581b23 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / SingleSpaceSeparatorCheckTest . java 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . whitespace . SingleSpaceSeparatorCheck . MSG _ KEY ; 
 + import static org . junit . Assert . assertArrayEquals ; 
 
 import org . junit . Test ; 
 
 @ @ - 42 , 6 + 43 , 14 @ @ public class SingleSpaceSeparatorCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testGetAcceptableTokens ( ) { 
 + final SingleSpaceSeparatorCheck check = new SingleSpaceSeparatorCheck ( ) ; 
 + 
 + assertArrayEquals ( " Invalid acceptable tockens " , 
 + CommonUtils . EMPTY _ INT _ ARRAY , check . getAcceptableTokens ( ) ) ; 
 + } 
 + 
 + @ Test 
 public void testSpaceErrors ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; 
 @ @ - 102 , 6 + 111 , 40 @ @ public class SingleSpaceSeparatorCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testSpaceErrorsInChildNodes ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; 
 + final String [ ] expected = { 
 + " 5 : 15 : " + getCheckMessage ( MSG _ KEY ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorChildNodes . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testMinColumnNo ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; 
 + checkConfig . addAttribute ( " validateComments " , String . valueOf ( true ) ) ; 
 + final String [ ] expected = { 
 + " 5 : 3 : " + getCheckMessage ( MSG _ KEY ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorMinColumnNo . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testWhitespaceInStartOfTheLine ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; 
 + final String [ ] expected = { 
 + " 5 : 6 : " + getCheckMessage ( MSG _ KEY ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputSingleSpaceSeparatorStartOfTheLine . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testSpaceErrorsIfCommentsIgnored ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createModuleConfig ( SingleSpaceSeparatorCheck . class ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorChildNodes . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorChildNodes . java 
 new file mode 100644 
 index 0000000 . . 3afd53f 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorChildNodes . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; 
 + 
 + public class InputSingleSpaceSeparatorChildNodes { 
 + int j = 0 ; 
 + int i = 1 + j ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorMinColumnNo . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorMinColumnNo . java 
 new file mode 100644 
 index 0000000 . . 7239ae0 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorMinColumnNo . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; 
 + 
 + public class InputSingleSpaceSeparatorMinColumnNo { 
 + int 
 + j = 0 ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorStartOfTheLine . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorStartOfTheLine . java 
 new file mode 100644 
 index 0000000 . . 9d990a8 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / singlespaceseparator / InputSingleSpaceSeparatorStartOfTheLine . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace . singlespaceseparator ; 
 + 
 + public class InputSingleSpaceSeparatorStartOfTheLine { 
 + int 
 + i = 0 ; 
 + }

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 index f3415ce . . a36aee0 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / ConfigurationBuilder . java 
 @ @ - 19 , 22 + 19 , 22 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 
 public class ConfigurationBuilder extends BaseCheckTestSupport { 
 
 + 	 private static final String XML _ NAME = " / google _ checks . xml " ; 
 + 
 	 private final File root ; 
 
 	 private final List < File > files = new ArrayList < > ( ) ; 
 
 	 Configuration config ; 
 - 	 
 + 
 	 URL url ; 
 - 	 
 - 	 final String xmlName = " / google _ checks . xml " ; 
 - 	 
 + 
 	 final Pattern warnPattern = Utils . createPattern ( " . * [ ] * / / [ ] * warn [ ] * | / [ * ] warn [ * ] / " ) ; 
 
 	 public ConfigurationBuilder ( File aROOT ) 
 	 	 	 throws CheckstyleException , IOException { 
 	 	 root = aROOT ; 
 - 	 	 config = getConfigurationFromXML ( xmlName , System . getProperties ( ) ) ; 
 + 	 	 config = getConfigurationFromXML ( XML _ NAME , System . getProperties ( ) ) ; 
 	 	 listFiles ( files , root , " java " ) ; 
 	 } 

