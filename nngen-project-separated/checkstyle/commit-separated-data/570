BLEU SCORE: 0.012079826799606154

TEST MSG: Issue # 3891 : reorganized PropertyCacheFileTest inputs
GENERATED MSG: Indentation input , check on java8 source , moved to resources - noncompilable folder

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> index 66a9cce . . b7a43c6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> @ @ - 72 , 11 + 72 , 16 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> @ RunWith ( PowerMockRunner . class ) <nl> @ PrepareForTest ( { PropertyCacheFile . class , ByteStreams . class , <nl> CommonUtils . class , Closeables . class , Flushables . class } ) <nl> - public class PropertyCacheFileTest { <nl> + public class PropertyCacheFileTest extends AbstractPathTestSupport { <nl> <nl> @ Rule <nl> public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> <nl> + @ Override <nl> + protected String getPackageLocation ( ) { <nl> + return " com / puppycrawl / tools / checkstyle / propertycachefile " ; <nl> + } <nl> + <nl> @ Test <nl> public void testCtor ( ) { <nl> try { <nl> @ @ - 149 , 7 + 154 , 7 @ @ public class PropertyCacheFileTest { <nl> <nl> final Configuration config = new DefaultConfiguration ( " myName " ) ; <nl> final PropertyCacheFile cache = new PropertyCacheFile ( config , <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / cache . tmp " ) ; <nl> + getPath ( " InputPropertyCacheFile " ) ) ; <nl> cache . load ( ) ; <nl> <nl> final String hash = cache . get ( PropertyCacheFile . CONFIG _ HASH _ KEY ) ; <nl> @ @ - 217 , 8 + 222 , 7 @ @ public class PropertyCacheFileTest { <nl> cache . load ( ) ; <nl> <nl> final Set < String > resources = new HashSet < > ( ) ; <nl> - final String pathToResource = <nl> - " src / test / resources / com / puppycrawl / tools / checkstyle / externalResourse . tmp " ; <nl> + final String pathToResource = getPath ( " InputPropertyCacheFileExternal . properties " ) ; <nl> resources . add ( pathToResource ) ; <nl> cache . putExternalResources ( resources ) ; <nl> <nl> @ @ - 264 , 7 + 268 , 7 @ @ public class PropertyCacheFileTest { <nl> <nl> / / apply new external resource to clear cache <nl> final Set < String > resources = new HashSet < > ( ) ; <nl> - final String resource = " / com / puppycrawl / tools / checkstyle / java . header " ; <nl> + final String resource = getPath ( " InputPropertyCacheFile . header " ) ; <nl> resources . add ( resource ) ; <nl> cache . putExternalResources ( resources ) ; <nl> <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / cache . tmp b / src / test / resources / com / puppycrawl / tools / checkstyle / cache . tmp <nl> deleted file mode 100644 <nl> index 7b89edb . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / cache . tmp <nl> + + + / dev / null <nl> @ @ - 1 + 0 , 0 @ @ <nl> - key = value <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / externalResourse . tmp b / src / test / resources / com / puppycrawl / tools / checkstyle / externalResourse . tmp <nl> deleted file mode 100644 <nl> index 7b89edb . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / externalResourse . tmp <nl> + + + / dev / null <nl> @ @ - 1 + 0 , 0 @ @ <nl> - key = value <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / java . header b / src / test / resources / com / puppycrawl / tools / checkstyle / java . header <nl> deleted file mode 100644 <nl> index 3399e3b . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / java . header <nl> + + + / dev / null <nl> @ @ - 1 , 4 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2001 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile <nl> new file mode 100644 <nl> index 0000000 . . 7b89edb <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile <nl> @ @ - 0 , 0 + 1 @ @ <nl> + key = value <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile . header b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile . header <nl> new file mode 100644 <nl> index 0000000 . . 3399e3b <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile . header <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFileExternal . properties b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFileExternal . properties <nl> new file mode 100644 <nl> index 0000000 . . 7b89edb <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFileExternal . properties <nl> @ @ - 0 , 0 + 1 @ @ <nl> + key = value
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index ade34d7 . . 228194e 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 55 , 6 + 55 , 17 @ @ import com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser ; <nl> public abstract class AbstractJavadocCheck extends Check <nl> { <nl> / * * <nl> + * Error message key for common javadoc errors . <nl> + * / <nl> + private static final String PARSE _ ERROR _ MESSAGE _ KEY = " javadoc . parse . error " ; <nl> + <nl> + / * * <nl> + * Unrecognized error from antlr parser <nl> + * / <nl> + private static final String UNRECOGNIZED _ ANTLR _ ERROR _ MESSAGE _ KEY = <nl> + " javadoc . unrecognized . antlr . error " ; <nl> + <nl> + / * * <nl> * key is " line : column " <nl> * value is DetailNode tree <nl> * / <nl> @ @ - 115 , 24 + 126 , 40 @ @ public abstract class AbstractJavadocCheck extends Check <nl> { <nl> } <nl> <nl> + / * * <nl> + * Defined final to not allow JavadocChecks to change default tokens . <nl> + * @ return default tokens <nl> + * / <nl> @ Override <nl> public final int [ ] getDefaultTokens ( ) <nl> { <nl> return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; <nl> } <nl> <nl> + / * * <nl> + * Defined final to not allow JavadocChecks to change acceptable tokens . <nl> + * @ return acceptable tokens <nl> + * / <nl> @ Override <nl> public final int [ ] getAcceptableTokens ( ) <nl> { <nl> return super . getAcceptableTokens ( ) ; <nl> } <nl> <nl> + / * * <nl> + * Defined final to not allow JavadocChecks to change required tokens . <nl> + * @ return required tokens <nl> + * / <nl> @ Override <nl> public final int [ ] getRequiredTokens ( ) <nl> { <nl> return super . getRequiredTokens ( ) ; <nl> } <nl> <nl> + / * * <nl> + * Defined final because all JavadocChecks require comment nodes . <nl> + * @ return true <nl> + * / <nl> @ Override <nl> public final boolean isCommentNodesRequired ( ) <nl> { <nl> @ @ - 142 , 6 + 169 , 7 @ @ public abstract class AbstractJavadocCheck extends Check <nl> @ Override <nl> public final void beginTree ( DetailAST aRootAST ) <nl> { <nl> + TREE _ CACHE . clear ( ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 217 , 7 + 245 , 7 @ @ public abstract class AbstractJavadocCheck extends Check <nl> catch ( IOException e ) { <nl> / / Antlr can not initiate its ANTLRInputStream <nl> parseErrorMessage = new ParseErrorMessage ( aJavadocCommentAst . getLineNo ( ) , <nl> - " javadoc . parse . error " , <nl> + PARSE _ ERROR _ MESSAGE _ KEY , <nl> aJavadocCommentAst . getColumnNo ( ) , e . getMessage ( ) ) ; <nl> } <nl> catch ( ParseCancellationException e ) { <nl> @ @ - 225 , 6 + 253 , 13 @ @ public abstract class AbstractJavadocCheck extends Check <nl> / / and parser throws this runtime exception to stop parsing . <nl> / / Just stop processing current Javadoc comment . <nl> parseErrorMessage = mErrorListener . getErrorMessage ( ) ; <nl> + <nl> + / / There are cases when antlr error listener does not handle syntax error <nl> + if ( parseErrorMessage = = null ) { <nl> + parseErrorMessage = new ParseErrorMessage ( aJavadocCommentAst . getLineNo ( ) , <nl> + UNRECOGNIZED _ ANTLR _ ERROR _ MESSAGE _ KEY , <nl> + aJavadocCommentAst . getColumnNo ( ) , e . getMessage ( ) ) ; <nl> + } <nl> } <nl> <nl> if ( parseErrorMessage = = null ) { <nl> diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties <nl> index eea7a35 . . 1976b3a 100644 <nl> - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties <nl> + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties <nl> @ @ - 1 , 3 + 1 , 5 @ @ <nl> + javadoc . parse . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } <nl> + javadoc . unrecognized . antlr . error = Javadoc comment at column { 0 } has parse error . Unrecognized error from ANTLR parser : { 1 } <nl> javadoc . parse . token . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } <nl> javadoc . parse . rule . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } while parsing { 2 } <nl> javadoc . missed . html . close = Javadoc comment at column { 0 } has parse error . Missed HTML close tag ' ' { 1 } ' ' . Sometimes it means that close tag missed for one of previous tags .

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 index 66a9cce . . b7a43c6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 @ @ - 72 , 11 + 72 , 16 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 @ RunWith ( PowerMockRunner . class ) 
 @ PrepareForTest ( { PropertyCacheFile . class , ByteStreams . class , 
 CommonUtils . class , Closeables . class , Flushables . class } ) 
 - public class PropertyCacheFileTest { 
 + public class PropertyCacheFileTest extends AbstractPathTestSupport { 
 
 @ Rule 
 public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 
 + @ Override 
 + protected String getPackageLocation ( ) { 
 + return " com / puppycrawl / tools / checkstyle / propertycachefile " ; 
 + } 
 + 
 @ Test 
 public void testCtor ( ) { 
 try { 
 @ @ - 149 , 7 + 154 , 7 @ @ public class PropertyCacheFileTest { 
 
 final Configuration config = new DefaultConfiguration ( " myName " ) ; 
 final PropertyCacheFile cache = new PropertyCacheFile ( config , 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / cache . tmp " ) ; 
 + getPath ( " InputPropertyCacheFile " ) ) ; 
 cache . load ( ) ; 
 
 final String hash = cache . get ( PropertyCacheFile . CONFIG _ HASH _ KEY ) ; 
 @ @ - 217 , 8 + 222 , 7 @ @ public class PropertyCacheFileTest { 
 cache . load ( ) ; 
 
 final Set < String > resources = new HashSet < > ( ) ; 
 - final String pathToResource = 
 - " src / test / resources / com / puppycrawl / tools / checkstyle / externalResourse . tmp " ; 
 + final String pathToResource = getPath ( " InputPropertyCacheFileExternal . properties " ) ; 
 resources . add ( pathToResource ) ; 
 cache . putExternalResources ( resources ) ; 
 
 @ @ - 264 , 7 + 268 , 7 @ @ public class PropertyCacheFileTest { 
 
 / / apply new external resource to clear cache 
 final Set < String > resources = new HashSet < > ( ) ; 
 - final String resource = " / com / puppycrawl / tools / checkstyle / java . header " ; 
 + final String resource = getPath ( " InputPropertyCacheFile . header " ) ; 
 resources . add ( resource ) ; 
 cache . putExternalResources ( resources ) ; 
 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / cache . tmp b / src / test / resources / com / puppycrawl / tools / checkstyle / cache . tmp 
 deleted file mode 100644 
 index 7b89edb . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / cache . tmp 
 + + + / dev / null 
 @ @ - 1 + 0 , 0 @ @ 
 - key = value 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / externalResourse . tmp b / src / test / resources / com / puppycrawl / tools / checkstyle / externalResourse . tmp 
 deleted file mode 100644 
 index 7b89edb . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / externalResourse . tmp 
 + + + / dev / null 
 @ @ - 1 + 0 , 0 @ @ 
 - key = value 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / java . header b / src / test / resources / com / puppycrawl / tools / checkstyle / java . header 
 deleted file mode 100644 
 index 3399e3b . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / java . header 
 + + + / dev / null 
 @ @ - 1 , 4 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2001 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile 
 new file mode 100644 
 index 0000000 . . 7b89edb 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile 
 @ @ - 0 , 0 + 1 @ @ 
 + key = value 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile . header b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile . header 
 new file mode 100644 
 index 0000000 . . 3399e3b 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFile . header 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFileExternal . properties b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFileExternal . properties 
 new file mode 100644 
 index 0000000 . . 7b89edb 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / propertycachefile / InputPropertyCacheFileExternal . properties 
 @ @ - 0 , 0 + 1 @ @ 
 + key = value

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index ade34d7 . . 228194e 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 55 , 6 + 55 , 17 @ @ import com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser ; 
 public abstract class AbstractJavadocCheck extends Check 
 { 
 / * * 
 + * Error message key for common javadoc errors . 
 + * / 
 + private static final String PARSE _ ERROR _ MESSAGE _ KEY = " javadoc . parse . error " ; 
 + 
 + / * * 
 + * Unrecognized error from antlr parser 
 + * / 
 + private static final String UNRECOGNIZED _ ANTLR _ ERROR _ MESSAGE _ KEY = 
 + " javadoc . unrecognized . antlr . error " ; 
 + 
 + / * * 
 * key is " line : column " 
 * value is DetailNode tree 
 * / 
 @ @ - 115 , 24 + 126 , 40 @ @ public abstract class AbstractJavadocCheck extends Check 
 { 
 } 
 
 + / * * 
 + * Defined final to not allow JavadocChecks to change default tokens . 
 + * @ return default tokens 
 + * / 
 @ Override 
 public final int [ ] getDefaultTokens ( ) 
 { 
 return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; 
 } 
 
 + / * * 
 + * Defined final to not allow JavadocChecks to change acceptable tokens . 
 + * @ return acceptable tokens 
 + * / 
 @ Override 
 public final int [ ] getAcceptableTokens ( ) 
 { 
 return super . getAcceptableTokens ( ) ; 
 } 
 
 + / * * 
 + * Defined final to not allow JavadocChecks to change required tokens . 
 + * @ return required tokens 
 + * / 
 @ Override 
 public final int [ ] getRequiredTokens ( ) 
 { 
 return super . getRequiredTokens ( ) ; 
 } 
 
 + / * * 
 + * Defined final because all JavadocChecks require comment nodes . 
 + * @ return true 
 + * / 
 @ Override 
 public final boolean isCommentNodesRequired ( ) 
 { 
 @ @ - 142 , 6 + 169 , 7 @ @ public abstract class AbstractJavadocCheck extends Check 
 @ Override 
 public final void beginTree ( DetailAST aRootAST ) 
 { 
 + TREE _ CACHE . clear ( ) ; 
 } 
 
 @ Override 
 @ @ - 217 , 7 + 245 , 7 @ @ public abstract class AbstractJavadocCheck extends Check 
 catch ( IOException e ) { 
 / / Antlr can not initiate its ANTLRInputStream 
 parseErrorMessage = new ParseErrorMessage ( aJavadocCommentAst . getLineNo ( ) , 
 - " javadoc . parse . error " , 
 + PARSE _ ERROR _ MESSAGE _ KEY , 
 aJavadocCommentAst . getColumnNo ( ) , e . getMessage ( ) ) ; 
 } 
 catch ( ParseCancellationException e ) { 
 @ @ - 225 , 6 + 253 , 13 @ @ public abstract class AbstractJavadocCheck extends Check 
 / / and parser throws this runtime exception to stop parsing . 
 / / Just stop processing current Javadoc comment . 
 parseErrorMessage = mErrorListener . getErrorMessage ( ) ; 
 + 
 + / / There are cases when antlr error listener does not handle syntax error 
 + if ( parseErrorMessage = = null ) { 
 + parseErrorMessage = new ParseErrorMessage ( aJavadocCommentAst . getLineNo ( ) , 
 + UNRECOGNIZED _ ANTLR _ ERROR _ MESSAGE _ KEY , 
 + aJavadocCommentAst . getColumnNo ( ) , e . getMessage ( ) ) ; 
 + } 
 } 
 
 if ( parseErrorMessage = = null ) { 
 diff - - git a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties 
 index eea7a35 . . 1976b3a 100644 
 - - - a / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties 
 + + + b / src / main / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / messages . properties 
 @ @ - 1 , 3 + 1 , 5 @ @ 
 + javadoc . parse . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } 
 + javadoc . unrecognized . antlr . error = Javadoc comment at column { 0 } has parse error . Unrecognized error from ANTLR parser : { 1 } 
 javadoc . parse . token . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } 
 javadoc . parse . rule . error = Javadoc comment at column { 0 } has parse error . Details : { 1 } while parsing { 2 } 
 javadoc . missed . html . close = Javadoc comment at column { 0 } has parse error . Missed HTML close tag ' ' { 1 } ' ' . Sometimes it means that close tag missed for one of previous tags .
