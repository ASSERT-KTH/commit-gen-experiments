BLEU SCORE: 0.6147881529512643

TEST MSG: [ maven - release - plugin ] rollback the release of checkstyle - 7 . 3
GENERATED MSG: [ maven - release - plugin ] prepare release checkstyle - 7 . 3

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index f5253bc . . ea66658 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 22 , 7 + 22 , 7 @ @ <nl> <nl> < groupId > com . puppycrawl . tools < / groupId > <nl> < artifactId > checkstyle < / artifactId > <nl> - < version > 7 . 3 < / version > <nl> + < version > 7 . 3 - SNAPSHOT < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > checkstyle < / name >
NEAREST DIFF (one line): diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundEmptyTypesAndCycles . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundEmptyTypesAndCycles . java <nl> index b27e0e0 . . 1a6ee9c 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundEmptyTypesAndCycles . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundEmptyTypesAndCycles . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ class myFoo <nl> private void foo ( ) <nl> { <nl> int i = 0 ; <nl> - String [ ] [ ] x = { { " foo " } } ; <nl> + String [ ] [ ] x = { { " foo " } } ; <nl> for ( int first = 0 ; first < 5 ; first + + ) { } / / ok <nl> int j = 0 ; <nl> while ( j = = 1 ) { } / / ok <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> index 8bf4d05 . . cc49cb3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> @ @ - 251 , 6 + 251 , 7 @ @ public class WhitespaceAroundCheck extends AbstractCheck { <nl> public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . ASSIGN , <nl> + TokenTypes . ARRAY _ INIT , <nl> TokenTypes . BAND , <nl> TokenTypes . BAND _ ASSIGN , <nl> TokenTypes . BOR , <nl> @ @ - 448 , 6 + 449 , 7 @ @ public class WhitespaceAroundCheck extends AbstractCheck { <nl> private static boolean shouldCheckSeparationFromNextToken ( DetailAST ast , char nextChar ) { <nl> return ! ( ast . getType ( ) = = TokenTypes . LITERAL _ RETURN <nl> & & ast . getFirstChild ( ) . getType ( ) = = TokenTypes . SEMI ) <nl> + & & ast . getType ( ) ! = TokenTypes . ARRAY _ INIT <nl> & & ! isAnonymousInnerClassEnd ( ast . getType ( ) , nextChar ) <nl> & & ! isPartOfDoubleBraceInitializerForNextToken ( ast ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java <nl> index 32e6df8 . . f10b1ca 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java <nl> @ @ - 148 , 6 + 148 , 23 @ @ public class WhitespaceAroundCheckTest <nl> } <nl> <nl> @ Test <nl> + public void testIt5 ( ) <nl> + throws Exception { <nl> + checkConfig . addAttribute ( " tokens " , " ARRAY _ INIT " ) ; <nl> + final String [ ] expected = { <nl> + " 7 : 39 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , <nl> + " 11 : 37 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , <nl> + " 13 : 56 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , <nl> + " 21 : 42 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , <nl> + " 21 : 59 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , <nl> + " 23 : 40 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , <nl> + " 23 : 41 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , <nl> + " 27 : 46 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " InputWhitespaceAroundArrayInitialization . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testGenericsTokensAreFlagged ( ) <nl> throws Exception { <nl> final String [ ] expected = { <nl> @ @ - 251 , 6 + 268 , 7 @ @ public class WhitespaceAroundCheckTest <nl> final int [ ] actual = whitespaceAroundCheckObj . getAcceptableTokens ( ) ; <nl> final int [ ] expected = { <nl> TokenTypes . ASSIGN , <nl> + TokenTypes . ARRAY _ INIT , <nl> TokenTypes . BAND , <nl> TokenTypes . BAND _ ASSIGN , <nl> TokenTypes . BOR , <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyTypesAndCycles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyTypesAndCycles . java <nl> index 0309eca . . c2b00a2 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyTypesAndCycles . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyTypesAndCycles . java <nl> @ @ - 23 , 7 + 23 , 7 @ @ class myFoo <nl> 	 private void foo ( ) <nl> 	 { <nl> 	 	 int i = 0 ; <nl> - 	 	 String [ ] [ ] x = { { " foo " } } ; <nl> + 	 	 String [ ] [ ] x = { { " foo " } } ; <nl> 	 	 int len = 0 ; <nl> 	 	 String sequence = null ; <nl> 	 	 for ( int first = 0 ; first < len & & matches ( sequence . charAt ( first ) ) ; first + + ) { } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputWhitespaceAroundArrayInitialization . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputWhitespaceAroundArrayInitialization . java <nl> new file mode 100644 <nl> index 0000000 . . c996e3a <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputWhitespaceAroundArrayInitialization . java <nl> @ @ - 0 , 0 + 1 , 33 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> + <nl> + public class InputWhitespaceAroundArrayInitialization { <nl> + <nl> + public void arrayInitTest ( ) { <nl> + <nl> + final int [ ] COLORS = new int [ ] { 5 } ; / / missing WS before " { " <nl> + <nl> + final int [ ] COLORS1 = new int [ ] { 5 } ; / / valid <nl> + <nl> + final String [ ] [ ] COLORS2 = { { " Green " } , { " Red " } } ; / / missing WS before inner array <nl> + <nl> + final String [ ] [ ] COLORS21 = { { " Green " , " Red " } , { " White " } } ; / / missing WS between " , " and " { " <nl> + <nl> + final String [ ] [ ] COLORS22 = { { " White " , " Yellow " } , { " Pink " } } ; / / valid <nl> + <nl> + final String [ ] [ ] [ ] COLORS31 = { { { " Black " , " Blue " } , { " Gray " , " White " } } , <nl> + 	 	 { { " Green " , " Brown " , " Magneta " } } , <nl> + 	 	 { { " Red " , " Purple " , " Violet " } } } ; / / valid <nl> + <nl> + final String [ ] [ ] [ ] COLORS32 = { { { " Red " , " Green " } , { " Pink " } } } ; / / missing WS before " { " Red " " and " , { " Pink " " <nl> + <nl> + final String [ ] [ ] [ ] COLORS33 = { { { " White " } } } ; / / missing WS before " { " <nl> + <nl> + final String [ ] [ ] [ ] [ ] COLORS41 = { { { { " Orange " } , { " Green " } } , { { " Purple " } } } , { { { " Yellow " } } } } ; / / valid <nl> + <nl> + final String [ ] [ ] [ ] [ ] COLORS42 = { { { { " White " , " Blue " } , / / missing WS between " { " <nl> + { " Gray " , " Black " } , } , } , <nl> + { { { " Red " } } } } ; <nl> + <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml <nl> index c8f83d7 . . 5eefaa2 100644 <nl> - - - a / src / xdocs / config _ whitespace . xml <nl> + + + b / src / xdocs / config _ whitespace . xml <nl> @ @ - 2048 , 6 + 2048 , 7 @ @ new Properties ( ) { { <nl> < td > <nl> subset of tokens <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ASSIGN " > ASSIGN < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ARRAY _ INIT " > ARRAY _ INIT < / a > , <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # BAND " > BAND < / a > , <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # BAND _ ASSIGN " > BAND _ ASSIGN < / a > , <nl> < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # BOR " > BOR < / a > ,

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index f5253bc . . ea66658 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 22 , 7 + 22 , 7 @ @ 
 
 < groupId > com . puppycrawl . tools < / groupId > 
 < artifactId > checkstyle < / artifactId > 
 - < version > 7 . 3 < / version > 
 + < version > 7 . 3 - SNAPSHOT < / version > 
 < packaging > jar < / packaging > 
 
 < name > checkstyle < / name >

NEAREST DIFF:
diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundEmptyTypesAndCycles . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundEmptyTypesAndCycles . java 
 index b27e0e0 . . 1a6ee9c 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundEmptyTypesAndCycles . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundEmptyTypesAndCycles . java 
 @ @ - 8 , 7 + 8 , 7 @ @ class myFoo 
 private void foo ( ) 
 { 
 int i = 0 ; 
 - String [ ] [ ] x = { { " foo " } } ; 
 + String [ ] [ ] x = { { " foo " } } ; 
 for ( int first = 0 ; first < 5 ; first + + ) { } / / ok 
 int j = 0 ; 
 while ( j = = 1 ) { } / / ok 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 index 8bf4d05 . . cc49cb3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 @ @ - 251 , 6 + 251 , 7 @ @ public class WhitespaceAroundCheck extends AbstractCheck { 
 public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { 
 TokenTypes . ASSIGN , 
 + TokenTypes . ARRAY _ INIT , 
 TokenTypes . BAND , 
 TokenTypes . BAND _ ASSIGN , 
 TokenTypes . BOR , 
 @ @ - 448 , 6 + 449 , 7 @ @ public class WhitespaceAroundCheck extends AbstractCheck { 
 private static boolean shouldCheckSeparationFromNextToken ( DetailAST ast , char nextChar ) { 
 return ! ( ast . getType ( ) = = TokenTypes . LITERAL _ RETURN 
 & & ast . getFirstChild ( ) . getType ( ) = = TokenTypes . SEMI ) 
 + & & ast . getType ( ) ! = TokenTypes . ARRAY _ INIT 
 & & ! isAnonymousInnerClassEnd ( ast . getType ( ) , nextChar ) 
 & & ! isPartOfDoubleBraceInitializerForNextToken ( ast ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java 
 index 32e6df8 . . f10b1ca 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheckTest . java 
 @ @ - 148 , 6 + 148 , 23 @ @ public class WhitespaceAroundCheckTest 
 } 
 
 @ Test 
 + public void testIt5 ( ) 
 + throws Exception { 
 + checkConfig . addAttribute ( " tokens " , " ARRAY _ INIT " ) ; 
 + final String [ ] expected = { 
 + " 7 : 39 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , 
 + " 11 : 37 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , 
 + " 13 : 56 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , 
 + " 21 : 42 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , 
 + " 21 : 59 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , 
 + " 23 : 40 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , 
 + " 23 : 41 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , 
 + " 27 : 46 : " + getCheckMessage ( MSG _ WS _ NOT _ PRECEDED , " { " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " InputWhitespaceAroundArrayInitialization . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testGenericsTokensAreFlagged ( ) 
 throws Exception { 
 final String [ ] expected = { 
 @ @ - 251 , 6 + 268 , 7 @ @ public class WhitespaceAroundCheckTest 
 final int [ ] actual = whitespaceAroundCheckObj . getAcceptableTokens ( ) ; 
 final int [ ] expected = { 
 TokenTypes . ASSIGN , 
 + TokenTypes . ARRAY _ INIT , 
 TokenTypes . BAND , 
 TokenTypes . BAND _ ASSIGN , 
 TokenTypes . BOR , 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyTypesAndCycles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyTypesAndCycles . java 
 index 0309eca . . c2b00a2 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyTypesAndCycles . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputEmptyTypesAndCycles . java 
 @ @ - 23 , 7 + 23 , 7 @ @ class myFoo 
 	 private void foo ( ) 
 	 { 
 	 	 int i = 0 ; 
 - 	 	 String [ ] [ ] x = { { " foo " } } ; 
 + 	 	 String [ ] [ ] x = { { " foo " } } ; 
 	 	 int len = 0 ; 
 	 	 String sequence = null ; 
 	 	 for ( int first = 0 ; first < len & & matches ( sequence . charAt ( first ) ) ; first + + ) { } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputWhitespaceAroundArrayInitialization . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputWhitespaceAroundArrayInitialization . java 
 new file mode 100644 
 index 0000000 . . c996e3a 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputWhitespaceAroundArrayInitialization . java 
 @ @ - 0 , 0 + 1 , 33 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 + 
 + public class InputWhitespaceAroundArrayInitialization { 
 + 
 + public void arrayInitTest ( ) { 
 + 
 + final int [ ] COLORS = new int [ ] { 5 } ; / / missing WS before " { " 
 + 
 + final int [ ] COLORS1 = new int [ ] { 5 } ; / / valid 
 + 
 + final String [ ] [ ] COLORS2 = { { " Green " } , { " Red " } } ; / / missing WS before inner array 
 + 
 + final String [ ] [ ] COLORS21 = { { " Green " , " Red " } , { " White " } } ; / / missing WS between " , " and " { " 
 + 
 + final String [ ] [ ] COLORS22 = { { " White " , " Yellow " } , { " Pink " } } ; / / valid 
 + 
 + final String [ ] [ ] [ ] COLORS31 = { { { " Black " , " Blue " } , { " Gray " , " White " } } , 
 + 	 	 { { " Green " , " Brown " , " Magneta " } } , 
 + 	 	 { { " Red " , " Purple " , " Violet " } } } ; / / valid 
 + 
 + final String [ ] [ ] [ ] COLORS32 = { { { " Red " , " Green " } , { " Pink " } } } ; / / missing WS before " { " Red " " and " , { " Pink " " 
 + 
 + final String [ ] [ ] [ ] COLORS33 = { { { " White " } } } ; / / missing WS before " { " 
 + 
 + final String [ ] [ ] [ ] [ ] COLORS41 = { { { { " Orange " } , { " Green " } } , { { " Purple " } } } , { { { " Yellow " } } } } ; / / valid 
 + 
 + final String [ ] [ ] [ ] [ ] COLORS42 = { { { { " White " , " Blue " } , / / missing WS between " { " 
 + { " Gray " , " Black " } , } , } , 
 + { { { " Red " } } } } ; 
 + 
 + } 
 + 
 + } 
 diff - - git a / src / xdocs / config _ whitespace . xml b / src / xdocs / config _ whitespace . xml 
 index c8f83d7 . . 5eefaa2 100644 
 - - - a / src / xdocs / config _ whitespace . xml 
 + + + b / src / xdocs / config _ whitespace . xml 
 @ @ - 2048 , 6 + 2048 , 7 @ @ new Properties ( ) { { 
 < td > 
 subset of tokens 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ASSIGN " > ASSIGN < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ARRAY _ INIT " > ARRAY _ INIT < / a > , 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # BAND " > BAND < / a > , 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # BAND _ ASSIGN " > BAND _ ASSIGN < / a > , 
 < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # BOR " > BOR < / a > ,
