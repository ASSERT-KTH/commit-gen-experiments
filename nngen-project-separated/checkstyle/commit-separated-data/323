BLEU SCORE: 0.1777835117834348

TEST MSG: Issue # 5603 : Use category / java / design in the PMD config
GENERATED MSG: Issue # 5603 : Migrate to PMD6

TEST DIFF (one line): diff - - git a / config / pmd - main . xml b / config / pmd - main . xml <nl> index 7c05c75 . . 2eac599 100644 <nl> - - - a / config / pmd - main . xml <nl> + + + b / config / pmd - main . xml <nl> @ @ - 11 , 14 + 11 , 6 @ @ <nl> < exclude - pattern > . * / src / test / . * < / exclude - pattern > <nl> < rule ref = " config / pmd . xml " / > <nl> <nl> - < rule ref = " rulesets / java / unusedcode . xml / UnusedPrivateMethod " > <nl> - < properties > <nl> - < ! - - generates false - positives on private methods called within a file - - > <nl> - < property name = " violationSuppressXPath " value = " <nl> - / / MethodDeclaration [ @ Name = ' countTokens ' and . . / . . / . . [ @ Image = ' DescendantTokenCheck ' ] ] <nl> - | / / MethodDeclaration [ @ Name = ' getHashCodeBasedOnObjectContent ' and . . / . . / . . [ @ Image = ' PropertyCacheFile ' ] ] " / > <nl> - < / properties > <nl> - < / rule > <nl> < rule ref = " rulesets / java / basic . xml / CollapsibleIfStatements " > <nl> < properties > <nl> < ! - - till https : / / github . com / hcoles / pitest / issues / 377 - - > <nl> diff - - git a / config / pmd - test . xml b / config / pmd - test . xml <nl> index b778a81 . . 730cbad 100644 <nl> - - - a / config / pmd - test . xml <nl> + + + b / config / pmd - test . xml <nl> @ @ - 32 , 8 + 32 , 6 @ @ <nl> < exclude name = " ExcessivePublicCount " / > <nl> < ! - - we have too much UTs for each main class , it is better to keep all tests in one file to ease navigation and search for test - - > <nl> < exclude name = " ExcessiveClassLength " / > <nl> - < ! - - we want to keep it all in one place - - > <nl> - < exclude name = " NcssTypeCount " / > <nl> < ! - - we want to avoid wide throws signature , it is just test - - > <nl> < exclude name = " AvoidCatchingGenericException " / > <nl> < ! - - we do not want invest extra time to make logic ideal in test method , may be later . . . - - > <nl> @ @ - 44 , 49 + 42 , 61 @ @ <nl> < exclude name = " NonThreadSafeSingleton " / > <nl> < / rule > <nl> <nl> - < rule ref = " rulesets / java / codesize . xml / NcssMethodCount " > <nl> + < rule ref = " category / java / design . xml / NcssCount " > <nl> < properties > <nl> - < ! - - ' testTokenNumbering ' method is simple but long as it recheck each token one by one - - > <nl> - < ! - - ' testNospaceWithComplexInput ' it is intended to keep all in one method . - - > <nl> - < ! - - Method ` testTokenValues ` in JavadocTokenTypes contains several asserts as it checks each token explicitly - - > <nl> - < ! - - XdocsPagesTest is a complicated list of different checks - - > <nl> - < property name = " violationSuppressXPath " value = " <nl> - / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavaTokenTypesTest ' ] / / MethodDeclarator [ @ Image = ' testTokenNumbering ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadCheckTest ' ] / / MethodDeclarator [ @ Image = ' testNospaceWithComplexInput ' ] <nl> - | / / MethodDeclaration [ @ Name = ' testTokenValues ' and . . / . . / . . [ @ Image = ' JavadocTokenTypesTest ' ] ] <nl> - | / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedValue ' and . . / . . / . . [ @ Image = ' XdocsPagesTest ' ] ] " / > <nl> + < ! - - We want to keep it all in one place . - - > <nl> + < property name = " classReportLevel " value = " 1000 " / > <nl> + < ! - - A big enough value to satisfy the most cases . - - > <nl> + < property name = " methodReportLevel " value = " 100 " / > <nl> + < ! - - GeneratedJavaTokenTypesTest . testTokenNumbering ' is simple but long as it recheck <nl> + each token one by one . <nl> + JavadocTokenTypesTest . TokenValues contains several asserts as it checks each <nl> + token explicitly . <nl> + XdocsPagesTest . getModulePropertyExpectedTypeName is a complicated list of <nl> + different checks . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenValues ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavaTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenNumbering ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedTypeName ' ] " / > <nl> < / properties > <nl> < / rule > <nl> <nl> - < rule ref = " rulesets / java / codesize . xml / ExcessiveMethodLength " > <nl> + < rule ref = " category / java / design . xml / ExcessiveMethodLength " > <nl> < properties > <nl> - < ! - - ' testTokenNumbering ' method is simple but long as it recheck each token one by one - - > <nl> - < ! - - ' testNospaceWithComplexInput ' it is intended to keep all in one method . - - > <nl> - < ! - - Method ` testTokenValues ` in JavadocTokenTypes contains several asserts as it checks each token explicitly - - > <nl> - < ! - - XdocsPagesTest is a complicated list of different checks - - > <nl> + < ! - - GeneratedJavaTokenTypesTest . testTokenNumbering ' is simple but long as it recheck <nl> + each token one by one . <nl> + ParenPadCheckTest . testNospaceWithComplexInput is intended to keep all in one <nl> + method . <nl> + JavadocTokenTypesTest . TokenValues contains several asserts as it checks each <nl> + token explicitly . <nl> + XdocsPagesTest . getModulePropertyExpectedTypeName is a complicated list of <nl> + different checks . - - > <nl> < property name = " violationSuppressXPath " value = " <nl> - / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavaTokenTypesTest ' ] / / MethodDeclarator [ @ Image = ' testTokenNumbering ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadCheckTest ' ] / / MethodDeclarator [ @ Image = ' testNospaceWithComplexInput ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadTest ' ] / / MethodDeclarator [ @ Image = ' testMethodParen ' ] <nl> - | / / MethodDeclaration [ @ Name = ' testTokenValues ' and . . / . . / . . [ @ Image = ' JavadocTokenTypesTest ' ] ] <nl> - | / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedTypeName ' and . . / . . / . . [ @ Image = ' XdocsPagesTest ' ] ] " / > <nl> + / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavaTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenNumbering ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadCheckTest ' ] / / MethodDeclaration [ @ Name = ' testNospaceWithComplexInput ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadTest ' ] / / MethodDeclaration [ @ Name = ' testMethodParen ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenValues ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedTypeName ' ] " / > <nl> < / properties > <nl> < / rule > <nl> <nl> - < rule ref = " rulesets / java / junit . xml / JUnitTestsShouldIncludeAssert " > <nl> - < ! - - pmd cannot find assert if it is located in private method of this class called from the test <nl> - method or method of another class - - > <nl> + < rule ref = " category / java / bestpractices . xml / JUnitTestsShouldIncludeAssert " > <nl> + < ! - - PMD cannot find assert if it is located in private method of this class called from <nl> + the test method or method of another class . - - > <nl> < properties > <nl> - < ! - - in AllChecksTest , AstRegressionTest , DetailASTTest and ImportControlCheckTest <nl> - pmd does not find asserts in private methods of the test class called from the test method - - > <nl> - < ! - - in MainTest pmd does not find asserts in lambdas called in the method exit . checkAssertionAfterwards - - > <nl> - < ! - - in FilterSetTest , LineColumnTest , LocalizedMessageTest , CsvFilterTest , IntMatchFilterTest <nl> - IntRangeFilterTest , SuppressElementTest , SuppressWithNearbyCommentFilterTest <nl> - SuppressWithPlainTextCommentFilterTest , SuppressionCommentFilterTest , SuppressionFilterTest <nl> - SuppressionXpathFilterTest , XpathFilterTest pmd does not accept <nl> - nl . jqno . equalsverifier . EqualsVerifier # . verify ( ) as correctness check method - - > <nl> - < ! - - in AstRegressionTest pmd does not find asserts in inner classes methods called from the test method - - > <nl> - < ! - - in XdocsPagesTest pmd does not find asserts in lambdas - - > <nl> + < ! - - In AllChecksTest , AstRegressionTest , DetailASTTest and ImportControlCheckTest <nl> + PMD does not find asserts in private methods of the test class called from the <nl> + test method . <nl> + In MainTest PMD does not find asserts in lambdas called in the method <nl> + exit . checkAssertionAfterwards . <nl> + In FilterSetTest , LineColumnTest , LocalizedMessageTest , CsvFilterTest , <nl> + IntMatchFilterTest , IntRangeFilterTest , SuppressElementTest , <nl> + SuppressWithNearbyCommentFilterTest , SuppressWithPlainTextCommentFilterTest , <nl> + SuppressionCommentFilterTest , SuppressionFilterTest , SuppressionXpathFilterTest , <nl> + XpathFilterTest PMD does not accept nl . jqno . equalsverifier . EqualsVerifier . verify <nl> + as correctness check method . <nl> + In AstRegressionTest PMD does not find asserts in inner classes methods called <nl> + from the test method . <nl> + In XdocsPagesTest PMD does not find asserts in lambdas . - - > <nl> < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' AllChecksTest ' <nl> or @ Image = ' AstRegressionTest ' or @ Image = ' DetailASTTest ' <nl> or @ Image = ' ImportControlCheckTest ' ] / / PrimaryPrefix / Name [ @ Image = ' verify ' ] <nl> @ @ - 97 , 7 + 107 , 7 @ @ <nl> or @ Image = ' SuppressWithNearbyCommentFilterTest ' or @ Image = ' SuppressionCommentFilterTest ' <nl> or @ Image = ' SuppressionFilterTest ' or @ Image = ' SuppressionXpathFilterTest ' <nl> or @ Image = ' SuppressWithPlainTextCommentFilterTest ' or @ Image = ' XpathFilterTest ' ] / / PrimarySuffix [ @ Image = ' verify ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclarator [ @ Image = ' testAllChecksPresentOnAvailableChecksPage ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclaration [ @ Name = ' testAllChecksPresentOnAvailableChecksPage ' ] <nl> " / > <nl> < / properties > <nl> < / rule > <nl> @ @ - 109 , 20 + 119 , 22 @ @ <nl> < / properties > <nl> < / rule > <nl> <nl> - < rule ref = " rulesets / java / migrating . xml / JUnit4TestShouldUseBeforeAnnotation " > <nl> + < rule ref = " category / java / bestpractices . xml / JUnit4TestShouldUseBeforeAnnotation " > <nl> < properties > <nl> - < ! - - false positive - - > <nl> + < ! - - A false positive . - - > <nl> < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' CommitValidationTest ' ] " / > <nl> < / properties > <nl> < / rule > <nl> - < rule ref = " rulesets / java / junit . xml / JUnitTestContainsTooManyAsserts " > <nl> + < rule ref = " category / java / bestpractices . xml / JUnitTestContainsTooManyAsserts " > <nl> < properties > <nl> < property name = " maximumAsserts " value = " 11 " / > <nl> - < ! - - Methods ` testTokenNumbers ` and ` testRuleNumbers ` in GeneratedJavadocTokenTypesTest contain several asserts as they check each token and each rule explicitly - - > <nl> - < ! - - Method ` testTokenValues ` in JavadocTokenTypes contains several asserts as it checks each token explicitly - - > <nl> - < property name = " violationSuppressXPath " value = " <nl> - / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavadocTokenTypesTest ' ] <nl> - | / / MethodDeclaration [ @ Name = ' testTokenValues ' and . . / . . / . . [ @ Image = ' JavadocTokenTypesTest ' ] ] " / > <nl> + < ! - - GeneratedJavadocTokenTypesTest . testTokenNumbers and <nl> + GeneratedJavadocTokenTypesTest . testRuleNumbers contains several asserts <nl> + as they check each token and each rule explicitly . <nl> + JavadocTokenTypes . testTokenValues contains several asserts as it checks each <nl> + token explicitly . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenValues ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavadocTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenNumbers ' or @ Name = ' testRuleNumbers ' ] " / > <nl> < / properties > <nl> < / rule > <nl> <nl> @ @ - 134 , 14 + 146 , 4 @ @ <nl> < / properties > <nl> < / rule > <nl> <nl> - < rule ref = " rulesets / java / unusedcode . xml / UnusedPrivateMethod " > <nl> - < properties > <nl> - < ! - - generates false - positives on private methods called within a file - - > <nl> - < property name = " violationSuppressXPath " value = " <nl> - / / ClassOrInterfaceDeclaration [ @ Image = ' IndentationCheckTest ' ] / / MethodDeclarator [ @ Image = ' verifyWarns ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWarningsFilterTest ' ] / / MethodDeclarator [ @ Image = ' verifySuppressed ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWithNearbyCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' verifySuppressed ' ] <nl> - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressionCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' verifySuppressed ' ] " / > <nl> - < / properties > <nl> - < / rule > <nl> < / ruleset > <nl> diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 5cf62b6 . . 58c23cf 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 70 , 29 + 70 , 54 @ @ <nl> <nl> < rule ref = " rulesets / java / basic . xml " / > <nl> < rule ref = " rulesets / java / braces . xml " / > <nl> - < rule ref = " rulesets / java / codesize . xml " > <nl> - < ! - - we are using CyclomaticComplexity - - > <nl> - < exclude name = " ModifiedCyclomaticComplexity " / > <nl> - < ! - - we are using CyclomaticComplexity - - > <nl> - < exclude name = " StdCyclomaticComplexity " / > <nl> - < / rule > <nl> <nl> - < rule ref = " rulesets / java / codesize . xml / NcssCount " > <nl> + < rule ref = " category / java / design . xml " > <nl> + < ! - - Too much false - positives on the check classes . <nl> + We do not follow the philosophy of complete encapsulation , we like data classes <nl> + ( preferable immutable ) to transfer content from one part to another . <nl> + There is no way to configure the rule ( it has no properties ) . - - > <nl> + < exclude name = " DataClass " / > <nl> + < ! - - Too much alarms on the check classes , we will never move logic out of the check , <nl> + each check is an independent logic container . - - > <nl> + < exclude name = " GodClass " / > <nl> + < ! - - Too many violations , will be suppressed until we find out how use these metrics . - - > <nl> + < exclude name = " LawOfDemeter " / > <nl> + < / rule > <nl> + < rule ref = " category / java / design . xml / AvoidCatchingGenericException " > <nl> + < properties > <nl> + < ! - - There is no other way to deliver the filename that was under processing . <nl> + See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] / / MethodDeclaration [ @ Name = ' processFiles ' ] " / > <nl> + < / properties > <nl> + < / rule > <nl> + < rule ref = " category / java / design . xml / AvoidThrowingRawExceptionTypes " > <nl> + < properties > <nl> + < ! - - There is no other way to deliver the filename that was under processing . <nl> + See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] / / MethodDeclaration [ @ Name = ' processFiles ' ] " / > <nl> + < / properties > <nl> + < / rule > <nl> + < rule ref = " category / java / design . xml / CouplingBetweenObjects " > <nl> + < properties > <nl> + < ! - - I do not see any problem , looks like a false positive . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' HandlerFactory ' ] " / > <nl> + < / properties > <nl> + < / rule > <nl> + < rule ref = " category / java / design . xml / NcssCount " > <nl> < properties > <nl> < property name = " methodReportLevel " value = " 32 " / > <nl> - < ! - - The classes Main , PackageObjectFactory , CheckstyleAntTask , RequireThisCheck , <nl> + < ! - - Main , PackageObjectFactory , CheckstyleAntTask , RequireThisCheck , HandlerFactory , <nl> VariableDeclarationUsageDistanceCheck , CommentsIndentationCheck , JavadocMethodCheck , <nl> - HandlerFactory are big and should not be split without a good reason . <nl> - The test classes should be one whole piece of code . <nl> + are big and should not be split without a good reason . <nl> The methods visitToken / leaveToken are a big SWITCH block with a number of IF blocks . <nl> If we split the block to several methods it will damage the readability . <nl> - The methods XMLLogger . encode , FallThroughCheck . isTerminated , ElementNode . iterateAxis , <nl> + XMLLogger . encode , FallThroughCheck . isTerminated , ElementNode . iterateAxis , <nl> NoWhitespaceAfterCheck . getArrayDeclaratorPreviousElement are also huge switches , <nl> they has to be monolithic . - - > <nl> < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' <nl> or @ Image = ' PackageObjectFactory ' or @ Image = ' CheckstyleAntTask ' or @ Image = ' RequireThisCheck ' <nl> or @ Image = ' VariableDeclarationUsageDistanceCheck ' or @ Image = ' CommentsIndentationCheck ' <nl> - or @ Image = ' JavadocMethodCheck ' or @ Image = ' HandlerFactory ' or ends - with ( @ Image , ' Test ' ) ] <nl> + or @ Image = ' JavadocMethodCheck ' or @ Image = ' HandlerFactory ' ] <nl> | / / ClassOrInterfaceDeclaration [ @ Image = ' XMLLogger ' ] / / MethodDeclaration [ @ Name = ' encode ' ] <nl> | / / ClassOrInterfaceDeclaration [ @ Image = ' LeftCurlyCheck ' or @ Image = ' FinalLocalVariableCheck ' <nl> or @ Image = ' ImportOrderCheck ' or @ Image = ' NPathComplexityCheck ' ] / / MethodDeclaration [ @ Name = ' visitToken ' ] <nl> @ @ - 104 , 66 + 129 , 82 @ @ <nl> " / > <nl> < / properties > <nl> < / rule > <nl> - <nl> - < rule ref = " rulesets / java / codesize . xml / CyclomaticComplexity " > <nl> + < rule ref = " category / java / design . xml / CyclomaticComplexity " > <nl> < properties > <nl> < property name = " classReportLevel " value = " 76 " / > <nl> < property name = " methodReportLevel " value = " 11 " / > <nl> - < ! - - DeclarationOrder - ' visitToken ' has just big SWITCH block which contains IF blocks . <nl> - If we split the block to several methods it will damage readability . <nl> - validateCli is not reasonable to split as encapsulation of logic will be damaged <nl> - getDetails - huge Switch , it has to be monolithic <nl> - JavadocMethodCheck , JavadocStyleCheck , JavadocUtils . getJavadocTags ( ) - deprecated <nl> - FinalLocalVariableCheck . visitToken ( ) - it is just big switch , not could be done <nl> - GenericWhitespaceCheck . processSingleGeneric ( ) - it contains a lot of similar to each other and very simple condition <nl> - VariableDeclarationUsageDistanceCheck , CustomImportOrderCheck - it is not OK to have such a complicated logic need to be refactored . <nl> - - - > <nl> - < property name = " violationSuppressXPath " value = " / / DeclarationOrder [ @ Name = ' visitToken ' ] and / / MethodDeclaration [ @ Name = ' validateCli ' and . . / . . / . . [ @ Image = ' Main ' ] ] | / / MethodDeclaration [ @ Name = ' processSingleGeneric ' and . . / . . / . . [ @ Image = ' GenericWhitespaceCheck ' ] ] | / / MethodDeclaration [ @ Name = ' visitToken ' and . . / . . / . . [ @ Image = ' FinalLocalVariableCheck ' ] ] | / / MethodDeclaration [ @ Name = ' getJavadocTags ' and . . / . . / . . [ @ Image = ' JavadocUtils ' ] ] | / / MethodDeclaration [ @ Name = ' getDetails ' and . . / . . / . . [ @ Image = ' RightCurlyCheck ' ] ] | / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocMethodCheck ' or @ Image = ' JavadocStyleCheck ' or @ Image = ' VariableDeclarationUsageDistanceCheck ' or @ Image = ' CustomImportOrderCheck ' ] " / > <nl> - < / properties > <nl> - < / rule > <nl> - < rule ref = " rulesets / java / codesize . xml / NPathComplexity " > <nl> - < properties > <nl> - < ! - - JavadocMethodCheck - deprecated <nl> - WhitespaceAroundCheck . isNotRelevantSituation - npath = 216 , but additional extraction <nl> - of expression to separate method does not make sense as it will <nl> - damage encapsulation of that check . <nl> - - - > <nl> - < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' isNotRelevantSituation ' and . . / . . / . . [ @ Image = ' WhitespaceAroundCheck ' ] ] | / / MethodDeclaration [ @ Name = ' validateCli ' and . . / . . / . . [ @ Image = ' Main ' ] ] | / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocMethodCheck ' or @ Image = ' JavadocStyleCheck ' ] " / > <nl> + < ! - - RequireThisCheck , VariableDeclarationUsageDistanceCheck , XdocsPagesTest , <nl> + JavadocMethodCheck and CommentsIndentationCheck are big classes and should not <nl> + be split without a good reason . <nl> + Main . validateCli is not reasonable to split as encapsulation of the logic will be <nl> + damaged . <nl> + * . visitToken are a big SWITCH block with a number of IF blocks . <nl> + If we split the block to several methods it will damage the readability . <nl> + JavadocStyleCheck is deprecated . <nl> + SuppressWarningsHolder . getAcceptableParent , FallThroughCheck . isTerminated , <nl> + ElementNode . iterateAxis , RootNode . iterateAxis are also huge switches , <nl> + they has to be monolithic . <nl> + CustomImportOrderCheck . finishImportList , CustomImportOrderCheck . getImportGroup are <nl> + validated by checkstyle version of Npath , we think that pmd is wrong here . <nl> + Checker . processFiles is validated by checkstyle version of Npath , we think that pmd is <nl> + wrong here . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' RequireThisCheck ' <nl> + or @ Image = ' VariableDeclarationUsageDistanceCheck ' or @ Image = ' XdocsPagesTest ' <nl> + or @ Image = ' JavadocMethodCheck ' or @ Image = ' CommentsIndentationCheck ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' ] / / MethodDeclaration [ @ Name = ' validateCli ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] / / MethodDeclaration [ @ Name = ' processFiles ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' FallThroughCheck ' ] / / MethodDeclaration [ @ Name = ' isTerminated ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWarningsHolder ' ] / / MethodDeclaration [ @ Name = ' getAcceptableParent ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' CustomImportOrderCheck ' ] / / MethodDeclaration [ @ Name = ' finishImportList ' or @ Name = ' getImportGroup ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocStyleCheck ' ] / / MethodDeclaration [ @ Name = ' checkHtmlTags ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' ElementNode ' or @ Image = ' RootNode ' ] / / MethodDeclaration [ @ Name = ' iterateAxis ' ] <nl> + | / / ClassOrInterfaceDeclaration [ @ Image = ' NPathComplexityCheck ' <nl> + or @ Image = ' EmptyLineSeparatorCheck ' or @ Image = ' LeftCurlyCheck ' or @ Image = ' ImportOrderCheck ' <nl> + or @ Image = ' DeclarationOrderCheck ' or @ Image = ' MissingOverrideCheck ' <nl> + or @ Image = ' FinalLocalVariableCheck ' or @ Image = ' ModifiedControlVariableCheck ' <nl> + or @ Image = ' ParameterAssignmentCheck ' or @ Image = ' UnnecessaryParenthesesCheck ' <nl> + or @ Image = ' AbstractClassCouplingCheck ' or @ Image = ' BooleanExpressionComplexityCheck ' <nl> + or @ Image = ' ParenPadCheck ' ] / / MethodDeclaration [ @ Name = ' visitToken ' ] " / > <nl> < / properties > <nl> < / rule > <nl> - < rule ref = " rulesets / java / codesize . xml / TooManyFields " > <nl> + < rule ref = " category / java / design . xml / TooManyFields " > <nl> < properties > <nl> - < ! - - Unable to split fields out of class . - - > <nl> + < ! - - Unable to split fields out of the class . - - > <nl> < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] " / > <nl> < / properties > <nl> < / rule > <nl> - < rule ref = " rulesets / java / codesize . xml / TooManyMethods " > <nl> + < rule ref = " category / java / design . xml / TooManyMethods " > <nl> < properties > <nl> < property name = " maxmethods " value = " 20 " / > <nl> - < ! - - Reducing the number of methods in RequireThisCheck requires making excess hierarchy or duplicating code , or making existing methods too complex . - - > <nl> - < ! - - PackageObjectFactory has many boilerplate methods . - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' RequireThisCheck ' or @ Image = ' PackageObjectFactory ' ] " / > <nl> + < ! - - Reducing the number of methods in RequireThisCheck requires making an excessive hierarchy <nl> + or duplicating the code , or making existing methods too complex . <nl> + The class PackageObjectFactory has many boilerplate methods . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' RequireThisCheck ' <nl> + or @ Image = ' PackageObjectFactory ' ] " / > <nl> < / properties > <nl> < / rule > <nl> - < rule ref = " rulesets / java / codesize . xml / ExcessiveClassLength " > <nl> + < rule ref = " category / java / design . xml / ExcessiveClassLength " > <nl> < properties > <nl> - < ! - - * TokenTypes are special classes that a big due to a lot of description comments - - > <nl> - < ! - - JavadocMethodCheck is deprecated class , till it is redone to use JavadocAst - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypes ' or @ Image = ' TokenTypes ' or @ Image = ' JavadocMethodCheck ' or @ Image = ' RequireThisCheck ' ] " / > <nl> + < ! - - * TokenTypes are special classes that are big due to a lot of description comments . <nl> + JavadocMethodCheck is a deprecated class , till it is redone to use JavadocAst . <nl> + RequireThisCheck has to work with and identify many frames . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypes ' <nl> + or @ Image = ' TokenTypes ' or @ Image = ' JavadocMethodCheck ' or @ Image = ' RequireThisCheck ' ] " / > <nl> < / properties > <nl> < / rule > <nl> - < rule ref = " rulesets / java / codesize . xml / ExcessiveMethodLength " > <nl> + < rule ref = " category / java / design . xml / ExcessiveParameterList " > <nl> < properties > <nl> - < ! - - JavadocMethodCheck is deprecated class , till it is redone to use JavadocAst - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocMethodCheck ' ] " / > <nl> - < ! - - getDetails ( ) method is a huge SWITCH , it has to be monolithic - - > <nl> - < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' getDetails ' and . . / . . / . . [ @ Image = ' RightCurlyCheck ' ] ] " / > <nl> + < ! - - The class LocalizedMessage has a constructor with many parameters by design . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' LocalizedMessage ' ] " / > <nl> < / properties > <nl> < / rule > <nl> - < rule ref = " rulesets / java / codesize . xml / ExcessiveParameterList " > <nl> + < rule ref = " category / java / design . xml / ExcessiveImports " > <nl> < properties > <nl> - < ! - - LocalizedMessage class has constructor with many parameters - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' LocalizedMessage ' ] " / > <nl> + < ! - - Main actively uses Checkstyle , logging and command line parsing API . <nl> + CheckstyleAntTask integrates Checkstyle with Ant . <nl> + Checker collects external resource locations and sets up the configuration . - - > <nl> + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' <nl> + or @ Image = ' Checker ' or @ Image = ' CheckstyleAntTask ' ] " / > <nl> < / properties > <nl> < / rule > <nl> <nl> @ @ - 215 , 25 + 256 , 6 @ @ <nl> < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' AutomaticBean ' ] " / > <nl> < / properties > <nl> < / rule > <nl> - < rule ref = " rulesets / java / coupling . xml " > <nl> - < ! - - produce too much violations , suppressed till we figure out how useful that metrics - - > <nl> - < exclude name = " LawOfDemeter " / > <nl> - < ! - - this rule is for managing import , we have special Check for that - - > <nl> - < exclude name = " LoosePackageCoupling " / > <nl> - < / rule > <nl> - < rule ref = " rulesets / java / coupling . xml / ExcessiveImports " > <nl> - < properties > <nl> - < ! - - TreeWalker integrates Checkstyle and antlr and CheckstyleAntTask integrates Checkstyle <nl> - with Ant . Checker collects external resource locations and setup configuration . - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' CheckstyleAntTask ' or @ Image = ' Checker ' or @ Image = ' Main ' ] " / > <nl> - < / properties > <nl> - < / rule > <nl> - < rule ref = " rulesets / java / coupling . xml / CouplingBetweenObjects " > <nl> - < properties > <nl> - < ! - - I do not see any problem , looks like false positive - - > <nl> - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' HandlerFactory ' ] " / > <nl> - < / properties > <nl> - < / rule > <nl> <nl> < rule ref = " rulesets / java / design . xml " > <nl> < ! - - extra final modifier does not make code more secure in that cases - - > <nl> @ @ - 372 , 20 + 394 , 6 @ @ <nl> < ! - - not configurable , decreases readability - - > <nl> < exclude name = " UseStringBufferForStringAppends " / > <nl> < / rule > <nl> - < rule ref = " rulesets / java / strictexception . xml / AvoidCatchingGenericException " > <nl> - < properties > <nl> - < ! - - There is no other way to deliver filename that was under processing . <nl> - See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > <nl> - < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' processFiles ' and . . / . . / . . [ @ Image = ' Checker ' ] ] " / > <nl> - < / properties > <nl> - < / rule > <nl> - < rule ref = " rulesets / java / strictexception . xml / AvoidThrowingRawExceptionTypes " > <nl> - < properties > <nl> - < ! - - There is no other way to deliver filename that was under processing . <nl> - See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > <nl> - < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' processFiles ' and . . / . . / . . [ @ Image = ' Checker ' ] ] " / > <nl> - < / properties > <nl> - < / rule > <nl> <nl> < rule ref = " rulesets / java / strings . xml " / > <nl> < rule ref = " rulesets / java / strings . xml / AvoidDuplicateLiterals " > <nl> @ @ - 395 , 7 + 403 , 6 @ @ <nl> < property name = " skipAnnotations " value = " true " / > <nl> < / properties > <nl> < / rule > <nl> - < rule ref = " rulesets / java / typeresolution . xml " / > <nl> < rule ref = " rulesets / java / unnecessary . xml " / > <nl> <nl> < / ruleset >
NEAREST DIFF (one line): diff - - git a / . ci / shippable . sh b / . ci / shippable . sh <nl> index 352aa86 . . 4df5f06 100755 <nl> - - - a / . ci / shippable . sh <nl> + + + b / . ci / shippable . sh <nl> @ @ - 85 , 10 + 85 , 6 @ @ pitest - checkstyle - common ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> # Format of ignored items : < report _ name > : < survived line > <nl> declare - a ignoredItems = ( <nl> - " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > + & # 34 ; - & # 34 ; + ex . getMessage ( ) , ex ) ; < / span > < / pre > < / td > < / tr > " <nl> - " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > catch ( final CheckstyleException ex ) { < / span > < / pre > < / td > < / tr > " <nl> - " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > throw ex ; < / span > < / pre > < / td > < / tr > " <nl> - " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > throw new CheckstyleException ( & # 34 ; cannot initialize module & # 34 ; + name < / span > < / pre > < / td > < / tr > " <nl> " DefaultConfiguration . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > attributeMap . put ( attributeName , current + & # 34 ; , & # 34 ; + value ) ; < / span > < / pre > < / td > < / tr > " <nl> ) ; <nl> checkPitestReport " $ { ignoredItems [ @ ] } " <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> index 960f8c5 . . 05cfab5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java <nl> @ @ - 444 , 6 + 444 , 22 @ @ public class CheckerTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testSetupChildInvalidProperty ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( HiddenFieldCheck . class ) ; <nl> + checkConfig . addAttribute ( " $ $ No such property " , null ) ; <nl> + try { <nl> + createChecker ( checkConfig ) ; <nl> + fail ( " Exception is expected " ) ; <nl> + } <nl> + catch ( CheckstyleException ex ) { <nl> + assertEquals ( " Error message is not expected " , <nl> + " cannot initialize module com . puppycrawl . tools . checkstyle . TreeWalker " <nl> + + " - Property ' $ $ No such property ' in module " + checkConfig . getName ( ) <nl> + + " does not exist , please check the documentation " , ex . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> public void testSetupChildListener ( ) throws Exception { <nl> final Checker checker = new Checker ( ) ; <nl> final PackageObjectFactory factory = new PackageObjectFactory ( <nl> @ @ - 842 , 6 + 858 , 21 @ @ public class CheckerTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testHaltOnException ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createModuleConfig ( CheckWhichThrowsError . class ) ; <nl> + final String filePath = getPath ( " InputChecker . java " ) ; <nl> + try { <nl> + verify ( checkConfig , filePath ) ; <nl> + fail ( " Exception is expected " ) ; <nl> + } <nl> + catch ( CheckstyleException ex ) { <nl> + assertEquals ( " Error message is not expected " , <nl> + " Exception was thrown while processing " + filePath , ex . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> public void testHaltOnExceptionOff ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createModuleConfig ( CheckWhichThrowsError . class ) ;

TEST DIFF:
diff - - git a / config / pmd - main . xml b / config / pmd - main . xml 
 index 7c05c75 . . 2eac599 100644 
 - - - a / config / pmd - main . xml 
 + + + b / config / pmd - main . xml 
 @ @ - 11 , 14 + 11 , 6 @ @ 
 < exclude - pattern > . * / src / test / . * < / exclude - pattern > 
 < rule ref = " config / pmd . xml " / > 
 
 - < rule ref = " rulesets / java / unusedcode . xml / UnusedPrivateMethod " > 
 - < properties > 
 - < ! - - generates false - positives on private methods called within a file - - > 
 - < property name = " violationSuppressXPath " value = " 
 - / / MethodDeclaration [ @ Name = ' countTokens ' and . . / . . / . . [ @ Image = ' DescendantTokenCheck ' ] ] 
 - | / / MethodDeclaration [ @ Name = ' getHashCodeBasedOnObjectContent ' and . . / . . / . . [ @ Image = ' PropertyCacheFile ' ] ] " / > 
 - < / properties > 
 - < / rule > 
 < rule ref = " rulesets / java / basic . xml / CollapsibleIfStatements " > 
 < properties > 
 < ! - - till https : / / github . com / hcoles / pitest / issues / 377 - - > 
 diff - - git a / config / pmd - test . xml b / config / pmd - test . xml 
 index b778a81 . . 730cbad 100644 
 - - - a / config / pmd - test . xml 
 + + + b / config / pmd - test . xml 
 @ @ - 32 , 8 + 32 , 6 @ @ 
 < exclude name = " ExcessivePublicCount " / > 
 < ! - - we have too much UTs for each main class , it is better to keep all tests in one file to ease navigation and search for test - - > 
 < exclude name = " ExcessiveClassLength " / > 
 - < ! - - we want to keep it all in one place - - > 
 - < exclude name = " NcssTypeCount " / > 
 < ! - - we want to avoid wide throws signature , it is just test - - > 
 < exclude name = " AvoidCatchingGenericException " / > 
 < ! - - we do not want invest extra time to make logic ideal in test method , may be later . . . - - > 
 @ @ - 44 , 49 + 42 , 61 @ @ 
 < exclude name = " NonThreadSafeSingleton " / > 
 < / rule > 
 
 - < rule ref = " rulesets / java / codesize . xml / NcssMethodCount " > 
 + < rule ref = " category / java / design . xml / NcssCount " > 
 < properties > 
 - < ! - - ' testTokenNumbering ' method is simple but long as it recheck each token one by one - - > 
 - < ! - - ' testNospaceWithComplexInput ' it is intended to keep all in one method . - - > 
 - < ! - - Method ` testTokenValues ` in JavadocTokenTypes contains several asserts as it checks each token explicitly - - > 
 - < ! - - XdocsPagesTest is a complicated list of different checks - - > 
 - < property name = " violationSuppressXPath " value = " 
 - / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavaTokenTypesTest ' ] / / MethodDeclarator [ @ Image = ' testTokenNumbering ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadCheckTest ' ] / / MethodDeclarator [ @ Image = ' testNospaceWithComplexInput ' ] 
 - | / / MethodDeclaration [ @ Name = ' testTokenValues ' and . . / . . / . . [ @ Image = ' JavadocTokenTypesTest ' ] ] 
 - | / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedValue ' and . . / . . / . . [ @ Image = ' XdocsPagesTest ' ] ] " / > 
 + < ! - - We want to keep it all in one place . - - > 
 + < property name = " classReportLevel " value = " 1000 " / > 
 + < ! - - A big enough value to satisfy the most cases . - - > 
 + < property name = " methodReportLevel " value = " 100 " / > 
 + < ! - - GeneratedJavaTokenTypesTest . testTokenNumbering ' is simple but long as it recheck 
 + each token one by one . 
 + JavadocTokenTypesTest . TokenValues contains several asserts as it checks each 
 + token explicitly . 
 + XdocsPagesTest . getModulePropertyExpectedTypeName is a complicated list of 
 + different checks . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenValues ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavaTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenNumbering ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedTypeName ' ] " / > 
 < / properties > 
 < / rule > 
 
 - < rule ref = " rulesets / java / codesize . xml / ExcessiveMethodLength " > 
 + < rule ref = " category / java / design . xml / ExcessiveMethodLength " > 
 < properties > 
 - < ! - - ' testTokenNumbering ' method is simple but long as it recheck each token one by one - - > 
 - < ! - - ' testNospaceWithComplexInput ' it is intended to keep all in one method . - - > 
 - < ! - - Method ` testTokenValues ` in JavadocTokenTypes contains several asserts as it checks each token explicitly - - > 
 - < ! - - XdocsPagesTest is a complicated list of different checks - - > 
 + < ! - - GeneratedJavaTokenTypesTest . testTokenNumbering ' is simple but long as it recheck 
 + each token one by one . 
 + ParenPadCheckTest . testNospaceWithComplexInput is intended to keep all in one 
 + method . 
 + JavadocTokenTypesTest . TokenValues contains several asserts as it checks each 
 + token explicitly . 
 + XdocsPagesTest . getModulePropertyExpectedTypeName is a complicated list of 
 + different checks . - - > 
 < property name = " violationSuppressXPath " value = " 
 - / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavaTokenTypesTest ' ] / / MethodDeclarator [ @ Image = ' testTokenNumbering ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadCheckTest ' ] / / MethodDeclarator [ @ Image = ' testNospaceWithComplexInput ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadTest ' ] / / MethodDeclarator [ @ Image = ' testMethodParen ' ] 
 - | / / MethodDeclaration [ @ Name = ' testTokenValues ' and . . / . . / . . [ @ Image = ' JavadocTokenTypesTest ' ] ] 
 - | / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedTypeName ' and . . / . . / . . [ @ Image = ' XdocsPagesTest ' ] ] " / > 
 + / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavaTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenNumbering ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadCheckTest ' ] / / MethodDeclaration [ @ Name = ' testNospaceWithComplexInput ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' ParenPadTest ' ] / / MethodDeclaration [ @ Name = ' testMethodParen ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenValues ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclaration [ @ Name = ' getModulePropertyExpectedTypeName ' ] " / > 
 < / properties > 
 < / rule > 
 
 - < rule ref = " rulesets / java / junit . xml / JUnitTestsShouldIncludeAssert " > 
 - < ! - - pmd cannot find assert if it is located in private method of this class called from the test 
 - method or method of another class - - > 
 + < rule ref = " category / java / bestpractices . xml / JUnitTestsShouldIncludeAssert " > 
 + < ! - - PMD cannot find assert if it is located in private method of this class called from 
 + the test method or method of another class . - - > 
 < properties > 
 - < ! - - in AllChecksTest , AstRegressionTest , DetailASTTest and ImportControlCheckTest 
 - pmd does not find asserts in private methods of the test class called from the test method - - > 
 - < ! - - in MainTest pmd does not find asserts in lambdas called in the method exit . checkAssertionAfterwards - - > 
 - < ! - - in FilterSetTest , LineColumnTest , LocalizedMessageTest , CsvFilterTest , IntMatchFilterTest 
 - IntRangeFilterTest , SuppressElementTest , SuppressWithNearbyCommentFilterTest 
 - SuppressWithPlainTextCommentFilterTest , SuppressionCommentFilterTest , SuppressionFilterTest 
 - SuppressionXpathFilterTest , XpathFilterTest pmd does not accept 
 - nl . jqno . equalsverifier . EqualsVerifier # . verify ( ) as correctness check method - - > 
 - < ! - - in AstRegressionTest pmd does not find asserts in inner classes methods called from the test method - - > 
 - < ! - - in XdocsPagesTest pmd does not find asserts in lambdas - - > 
 + < ! - - In AllChecksTest , AstRegressionTest , DetailASTTest and ImportControlCheckTest 
 + PMD does not find asserts in private methods of the test class called from the 
 + test method . 
 + In MainTest PMD does not find asserts in lambdas called in the method 
 + exit . checkAssertionAfterwards . 
 + In FilterSetTest , LineColumnTest , LocalizedMessageTest , CsvFilterTest , 
 + IntMatchFilterTest , IntRangeFilterTest , SuppressElementTest , 
 + SuppressWithNearbyCommentFilterTest , SuppressWithPlainTextCommentFilterTest , 
 + SuppressionCommentFilterTest , SuppressionFilterTest , SuppressionXpathFilterTest , 
 + XpathFilterTest PMD does not accept nl . jqno . equalsverifier . EqualsVerifier . verify 
 + as correctness check method . 
 + In AstRegressionTest PMD does not find asserts in inner classes methods called 
 + from the test method . 
 + In XdocsPagesTest PMD does not find asserts in lambdas . - - > 
 < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' AllChecksTest ' 
 or @ Image = ' AstRegressionTest ' or @ Image = ' DetailASTTest ' 
 or @ Image = ' ImportControlCheckTest ' ] / / PrimaryPrefix / Name [ @ Image = ' verify ' ] 
 @ @ - 97 , 7 + 107 , 7 @ @ 
 or @ Image = ' SuppressWithNearbyCommentFilterTest ' or @ Image = ' SuppressionCommentFilterTest ' 
 or @ Image = ' SuppressionFilterTest ' or @ Image = ' SuppressionXpathFilterTest ' 
 or @ Image = ' SuppressWithPlainTextCommentFilterTest ' or @ Image = ' XpathFilterTest ' ] / / PrimarySuffix [ @ Image = ' verify ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclarator [ @ Image = ' testAllChecksPresentOnAvailableChecksPage ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' XdocsPagesTest ' ] / / MethodDeclaration [ @ Name = ' testAllChecksPresentOnAvailableChecksPage ' ] 
 " / > 
 < / properties > 
 < / rule > 
 @ @ - 109 , 20 + 119 , 22 @ @ 
 < / properties > 
 < / rule > 
 
 - < rule ref = " rulesets / java / migrating . xml / JUnit4TestShouldUseBeforeAnnotation " > 
 + < rule ref = " category / java / bestpractices . xml / JUnit4TestShouldUseBeforeAnnotation " > 
 < properties > 
 - < ! - - false positive - - > 
 + < ! - - A false positive . - - > 
 < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' CommitValidationTest ' ] " / > 
 < / properties > 
 < / rule > 
 - < rule ref = " rulesets / java / junit . xml / JUnitTestContainsTooManyAsserts " > 
 + < rule ref = " category / java / bestpractices . xml / JUnitTestContainsTooManyAsserts " > 
 < properties > 
 < property name = " maximumAsserts " value = " 11 " / > 
 - < ! - - Methods ` testTokenNumbers ` and ` testRuleNumbers ` in GeneratedJavadocTokenTypesTest contain several asserts as they check each token and each rule explicitly - - > 
 - < ! - - Method ` testTokenValues ` in JavadocTokenTypes contains several asserts as it checks each token explicitly - - > 
 - < property name = " violationSuppressXPath " value = " 
 - / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavadocTokenTypesTest ' ] 
 - | / / MethodDeclaration [ @ Name = ' testTokenValues ' and . . / . . / . . [ @ Image = ' JavadocTokenTypesTest ' ] ] " / > 
 + < ! - - GeneratedJavadocTokenTypesTest . testTokenNumbers and 
 + GeneratedJavadocTokenTypesTest . testRuleNumbers contains several asserts 
 + as they check each token and each rule explicitly . 
 + JavadocTokenTypes . testTokenValues contains several asserts as it checks each 
 + token explicitly . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenValues ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' GeneratedJavadocTokenTypesTest ' ] / / MethodDeclaration [ @ Name = ' testTokenNumbers ' or @ Name = ' testRuleNumbers ' ] " / > 
 < / properties > 
 < / rule > 
 
 @ @ - 134 , 14 + 146 , 4 @ @ 
 < / properties > 
 < / rule > 
 
 - < rule ref = " rulesets / java / unusedcode . xml / UnusedPrivateMethod " > 
 - < properties > 
 - < ! - - generates false - positives on private methods called within a file - - > 
 - < property name = " violationSuppressXPath " value = " 
 - / / ClassOrInterfaceDeclaration [ @ Image = ' IndentationCheckTest ' ] / / MethodDeclarator [ @ Image = ' verifyWarns ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWarningsFilterTest ' ] / / MethodDeclarator [ @ Image = ' verifySuppressed ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWithNearbyCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' verifySuppressed ' ] 
 - | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressionCommentFilterTest ' ] / / MethodDeclarator [ @ Image = ' verifySuppressed ' ] " / > 
 - < / properties > 
 - < / rule > 
 < / ruleset > 
 diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 5cf62b6 . . 58c23cf 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 70 , 29 + 70 , 54 @ @ 
 
 < rule ref = " rulesets / java / basic . xml " / > 
 < rule ref = " rulesets / java / braces . xml " / > 
 - < rule ref = " rulesets / java / codesize . xml " > 
 - < ! - - we are using CyclomaticComplexity - - > 
 - < exclude name = " ModifiedCyclomaticComplexity " / > 
 - < ! - - we are using CyclomaticComplexity - - > 
 - < exclude name = " StdCyclomaticComplexity " / > 
 - < / rule > 
 
 - < rule ref = " rulesets / java / codesize . xml / NcssCount " > 
 + < rule ref = " category / java / design . xml " > 
 + < ! - - Too much false - positives on the check classes . 
 + We do not follow the philosophy of complete encapsulation , we like data classes 
 + ( preferable immutable ) to transfer content from one part to another . 
 + There is no way to configure the rule ( it has no properties ) . - - > 
 + < exclude name = " DataClass " / > 
 + < ! - - Too much alarms on the check classes , we will never move logic out of the check , 
 + each check is an independent logic container . - - > 
 + < exclude name = " GodClass " / > 
 + < ! - - Too many violations , will be suppressed until we find out how use these metrics . - - > 
 + < exclude name = " LawOfDemeter " / > 
 + < / rule > 
 + < rule ref = " category / java / design . xml / AvoidCatchingGenericException " > 
 + < properties > 
 + < ! - - There is no other way to deliver the filename that was under processing . 
 + See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] / / MethodDeclaration [ @ Name = ' processFiles ' ] " / > 
 + < / properties > 
 + < / rule > 
 + < rule ref = " category / java / design . xml / AvoidThrowingRawExceptionTypes " > 
 + < properties > 
 + < ! - - There is no other way to deliver the filename that was under processing . 
 + See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] / / MethodDeclaration [ @ Name = ' processFiles ' ] " / > 
 + < / properties > 
 + < / rule > 
 + < rule ref = " category / java / design . xml / CouplingBetweenObjects " > 
 + < properties > 
 + < ! - - I do not see any problem , looks like a false positive . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' HandlerFactory ' ] " / > 
 + < / properties > 
 + < / rule > 
 + < rule ref = " category / java / design . xml / NcssCount " > 
 < properties > 
 < property name = " methodReportLevel " value = " 32 " / > 
 - < ! - - The classes Main , PackageObjectFactory , CheckstyleAntTask , RequireThisCheck , 
 + < ! - - Main , PackageObjectFactory , CheckstyleAntTask , RequireThisCheck , HandlerFactory , 
 VariableDeclarationUsageDistanceCheck , CommentsIndentationCheck , JavadocMethodCheck , 
 - HandlerFactory are big and should not be split without a good reason . 
 - The test classes should be one whole piece of code . 
 + are big and should not be split without a good reason . 
 The methods visitToken / leaveToken are a big SWITCH block with a number of IF blocks . 
 If we split the block to several methods it will damage the readability . 
 - The methods XMLLogger . encode , FallThroughCheck . isTerminated , ElementNode . iterateAxis , 
 + XMLLogger . encode , FallThroughCheck . isTerminated , ElementNode . iterateAxis , 
 NoWhitespaceAfterCheck . getArrayDeclaratorPreviousElement are also huge switches , 
 they has to be monolithic . - - > 
 < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' 
 or @ Image = ' PackageObjectFactory ' or @ Image = ' CheckstyleAntTask ' or @ Image = ' RequireThisCheck ' 
 or @ Image = ' VariableDeclarationUsageDistanceCheck ' or @ Image = ' CommentsIndentationCheck ' 
 - or @ Image = ' JavadocMethodCheck ' or @ Image = ' HandlerFactory ' or ends - with ( @ Image , ' Test ' ) ] 
 + or @ Image = ' JavadocMethodCheck ' or @ Image = ' HandlerFactory ' ] 
 | / / ClassOrInterfaceDeclaration [ @ Image = ' XMLLogger ' ] / / MethodDeclaration [ @ Name = ' encode ' ] 
 | / / ClassOrInterfaceDeclaration [ @ Image = ' LeftCurlyCheck ' or @ Image = ' FinalLocalVariableCheck ' 
 or @ Image = ' ImportOrderCheck ' or @ Image = ' NPathComplexityCheck ' ] / / MethodDeclaration [ @ Name = ' visitToken ' ] 
 @ @ - 104 , 66 + 129 , 82 @ @ 
 " / > 
 < / properties > 
 < / rule > 
 - 
 - < rule ref = " rulesets / java / codesize . xml / CyclomaticComplexity " > 
 + < rule ref = " category / java / design . xml / CyclomaticComplexity " > 
 < properties > 
 < property name = " classReportLevel " value = " 76 " / > 
 < property name = " methodReportLevel " value = " 11 " / > 
 - < ! - - DeclarationOrder - ' visitToken ' has just big SWITCH block which contains IF blocks . 
 - If we split the block to several methods it will damage readability . 
 - validateCli is not reasonable to split as encapsulation of logic will be damaged 
 - getDetails - huge Switch , it has to be monolithic 
 - JavadocMethodCheck , JavadocStyleCheck , JavadocUtils . getJavadocTags ( ) - deprecated 
 - FinalLocalVariableCheck . visitToken ( ) - it is just big switch , not could be done 
 - GenericWhitespaceCheck . processSingleGeneric ( ) - it contains a lot of similar to each other and very simple condition 
 - VariableDeclarationUsageDistanceCheck , CustomImportOrderCheck - it is not OK to have such a complicated logic need to be refactored . 
 - - - > 
 - < property name = " violationSuppressXPath " value = " / / DeclarationOrder [ @ Name = ' visitToken ' ] and / / MethodDeclaration [ @ Name = ' validateCli ' and . . / . . / . . [ @ Image = ' Main ' ] ] | / / MethodDeclaration [ @ Name = ' processSingleGeneric ' and . . / . . / . . [ @ Image = ' GenericWhitespaceCheck ' ] ] | / / MethodDeclaration [ @ Name = ' visitToken ' and . . / . . / . . [ @ Image = ' FinalLocalVariableCheck ' ] ] | / / MethodDeclaration [ @ Name = ' getJavadocTags ' and . . / . . / . . [ @ Image = ' JavadocUtils ' ] ] | / / MethodDeclaration [ @ Name = ' getDetails ' and . . / . . / . . [ @ Image = ' RightCurlyCheck ' ] ] | / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocMethodCheck ' or @ Image = ' JavadocStyleCheck ' or @ Image = ' VariableDeclarationUsageDistanceCheck ' or @ Image = ' CustomImportOrderCheck ' ] " / > 
 - < / properties > 
 - < / rule > 
 - < rule ref = " rulesets / java / codesize . xml / NPathComplexity " > 
 - < properties > 
 - < ! - - JavadocMethodCheck - deprecated 
 - WhitespaceAroundCheck . isNotRelevantSituation - npath = 216 , but additional extraction 
 - of expression to separate method does not make sense as it will 
 - damage encapsulation of that check . 
 - - - > 
 - < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' isNotRelevantSituation ' and . . / . . / . . [ @ Image = ' WhitespaceAroundCheck ' ] ] | / / MethodDeclaration [ @ Name = ' validateCli ' and . . / . . / . . [ @ Image = ' Main ' ] ] | / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocMethodCheck ' or @ Image = ' JavadocStyleCheck ' ] " / > 
 + < ! - - RequireThisCheck , VariableDeclarationUsageDistanceCheck , XdocsPagesTest , 
 + JavadocMethodCheck and CommentsIndentationCheck are big classes and should not 
 + be split without a good reason . 
 + Main . validateCli is not reasonable to split as encapsulation of the logic will be 
 + damaged . 
 + * . visitToken are a big SWITCH block with a number of IF blocks . 
 + If we split the block to several methods it will damage the readability . 
 + JavadocStyleCheck is deprecated . 
 + SuppressWarningsHolder . getAcceptableParent , FallThroughCheck . isTerminated , 
 + ElementNode . iterateAxis , RootNode . iterateAxis are also huge switches , 
 + they has to be monolithic . 
 + CustomImportOrderCheck . finishImportList , CustomImportOrderCheck . getImportGroup are 
 + validated by checkstyle version of Npath , we think that pmd is wrong here . 
 + Checker . processFiles is validated by checkstyle version of Npath , we think that pmd is 
 + wrong here . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' RequireThisCheck ' 
 + or @ Image = ' VariableDeclarationUsageDistanceCheck ' or @ Image = ' XdocsPagesTest ' 
 + or @ Image = ' JavadocMethodCheck ' or @ Image = ' CommentsIndentationCheck ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' ] / / MethodDeclaration [ @ Name = ' validateCli ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] / / MethodDeclaration [ @ Name = ' processFiles ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' FallThroughCheck ' ] / / MethodDeclaration [ @ Name = ' isTerminated ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' SuppressWarningsHolder ' ] / / MethodDeclaration [ @ Name = ' getAcceptableParent ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' CustomImportOrderCheck ' ] / / MethodDeclaration [ @ Name = ' finishImportList ' or @ Name = ' getImportGroup ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocStyleCheck ' ] / / MethodDeclaration [ @ Name = ' checkHtmlTags ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' ElementNode ' or @ Image = ' RootNode ' ] / / MethodDeclaration [ @ Name = ' iterateAxis ' ] 
 + | / / ClassOrInterfaceDeclaration [ @ Image = ' NPathComplexityCheck ' 
 + or @ Image = ' EmptyLineSeparatorCheck ' or @ Image = ' LeftCurlyCheck ' or @ Image = ' ImportOrderCheck ' 
 + or @ Image = ' DeclarationOrderCheck ' or @ Image = ' MissingOverrideCheck ' 
 + or @ Image = ' FinalLocalVariableCheck ' or @ Image = ' ModifiedControlVariableCheck ' 
 + or @ Image = ' ParameterAssignmentCheck ' or @ Image = ' UnnecessaryParenthesesCheck ' 
 + or @ Image = ' AbstractClassCouplingCheck ' or @ Image = ' BooleanExpressionComplexityCheck ' 
 + or @ Image = ' ParenPadCheck ' ] / / MethodDeclaration [ @ Name = ' visitToken ' ] " / > 
 < / properties > 
 < / rule > 
 - < rule ref = " rulesets / java / codesize . xml / TooManyFields " > 
 + < rule ref = " category / java / design . xml / TooManyFields " > 
 < properties > 
 - < ! - - Unable to split fields out of class . - - > 
 + < ! - - Unable to split fields out of the class . - - > 
 < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Checker ' ] " / > 
 < / properties > 
 < / rule > 
 - < rule ref = " rulesets / java / codesize . xml / TooManyMethods " > 
 + < rule ref = " category / java / design . xml / TooManyMethods " > 
 < properties > 
 < property name = " maxmethods " value = " 20 " / > 
 - < ! - - Reducing the number of methods in RequireThisCheck requires making excess hierarchy or duplicating code , or making existing methods too complex . - - > 
 - < ! - - PackageObjectFactory has many boilerplate methods . - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' RequireThisCheck ' or @ Image = ' PackageObjectFactory ' ] " / > 
 + < ! - - Reducing the number of methods in RequireThisCheck requires making an excessive hierarchy 
 + or duplicating the code , or making existing methods too complex . 
 + The class PackageObjectFactory has many boilerplate methods . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' RequireThisCheck ' 
 + or @ Image = ' PackageObjectFactory ' ] " / > 
 < / properties > 
 < / rule > 
 - < rule ref = " rulesets / java / codesize . xml / ExcessiveClassLength " > 
 + < rule ref = " category / java / design . xml / ExcessiveClassLength " > 
 < properties > 
 - < ! - - * TokenTypes are special classes that a big due to a lot of description comments - - > 
 - < ! - - JavadocMethodCheck is deprecated class , till it is redone to use JavadocAst - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypes ' or @ Image = ' TokenTypes ' or @ Image = ' JavadocMethodCheck ' or @ Image = ' RequireThisCheck ' ] " / > 
 + < ! - - * TokenTypes are special classes that are big due to a lot of description comments . 
 + JavadocMethodCheck is a deprecated class , till it is redone to use JavadocAst . 
 + RequireThisCheck has to work with and identify many frames . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocTokenTypes ' 
 + or @ Image = ' TokenTypes ' or @ Image = ' JavadocMethodCheck ' or @ Image = ' RequireThisCheck ' ] " / > 
 < / properties > 
 < / rule > 
 - < rule ref = " rulesets / java / codesize . xml / ExcessiveMethodLength " > 
 + < rule ref = " category / java / design . xml / ExcessiveParameterList " > 
 < properties > 
 - < ! - - JavadocMethodCheck is deprecated class , till it is redone to use JavadocAst - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' JavadocMethodCheck ' ] " / > 
 - < ! - - getDetails ( ) method is a huge SWITCH , it has to be monolithic - - > 
 - < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' getDetails ' and . . / . . / . . [ @ Image = ' RightCurlyCheck ' ] ] " / > 
 + < ! - - The class LocalizedMessage has a constructor with many parameters by design . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' LocalizedMessage ' ] " / > 
 < / properties > 
 < / rule > 
 - < rule ref = " rulesets / java / codesize . xml / ExcessiveParameterList " > 
 + < rule ref = " category / java / design . xml / ExcessiveImports " > 
 < properties > 
 - < ! - - LocalizedMessage class has constructor with many parameters - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' LocalizedMessage ' ] " / > 
 + < ! - - Main actively uses Checkstyle , logging and command line parsing API . 
 + CheckstyleAntTask integrates Checkstyle with Ant . 
 + Checker collects external resource locations and sets up the configuration . - - > 
 + < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' Main ' 
 + or @ Image = ' Checker ' or @ Image = ' CheckstyleAntTask ' ] " / > 
 < / properties > 
 < / rule > 
 
 @ @ - 215 , 25 + 256 , 6 @ @ 
 < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' AutomaticBean ' ] " / > 
 < / properties > 
 < / rule > 
 - < rule ref = " rulesets / java / coupling . xml " > 
 - < ! - - produce too much violations , suppressed till we figure out how useful that metrics - - > 
 - < exclude name = " LawOfDemeter " / > 
 - < ! - - this rule is for managing import , we have special Check for that - - > 
 - < exclude name = " LoosePackageCoupling " / > 
 - < / rule > 
 - < rule ref = " rulesets / java / coupling . xml / ExcessiveImports " > 
 - < properties > 
 - < ! - - TreeWalker integrates Checkstyle and antlr and CheckstyleAntTask integrates Checkstyle 
 - with Ant . Checker collects external resource locations and setup configuration . - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' CheckstyleAntTask ' or @ Image = ' Checker ' or @ Image = ' Main ' ] " / > 
 - < / properties > 
 - < / rule > 
 - < rule ref = " rulesets / java / coupling . xml / CouplingBetweenObjects " > 
 - < properties > 
 - < ! - - I do not see any problem , looks like false positive - - > 
 - < property name = " violationSuppressXPath " value = " / / ClassOrInterfaceDeclaration [ @ Image = ' HandlerFactory ' ] " / > 
 - < / properties > 
 - < / rule > 
 
 < rule ref = " rulesets / java / design . xml " > 
 < ! - - extra final modifier does not make code more secure in that cases - - > 
 @ @ - 372 , 20 + 394 , 6 @ @ 
 < ! - - not configurable , decreases readability - - > 
 < exclude name = " UseStringBufferForStringAppends " / > 
 < / rule > 
 - < rule ref = " rulesets / java / strictexception . xml / AvoidCatchingGenericException " > 
 - < properties > 
 - < ! - - There is no other way to deliver filename that was under processing . 
 - See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > 
 - < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' processFiles ' and . . / . . / . . [ @ Image = ' Checker ' ] ] " / > 
 - < / properties > 
 - < / rule > 
 - < rule ref = " rulesets / java / strictexception . xml / AvoidThrowingRawExceptionTypes " > 
 - < properties > 
 - < ! - - There is no other way to deliver filename that was under processing . 
 - See https : / / github . com / checkstyle / checkstyle / issues / 2285 - - > 
 - < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' processFiles ' and . . / . . / . . [ @ Image = ' Checker ' ] ] " / > 
 - < / properties > 
 - < / rule > 
 
 < rule ref = " rulesets / java / strings . xml " / > 
 < rule ref = " rulesets / java / strings . xml / AvoidDuplicateLiterals " > 
 @ @ - 395 , 7 + 403 , 6 @ @ 
 < property name = " skipAnnotations " value = " true " / > 
 < / properties > 
 < / rule > 
 - < rule ref = " rulesets / java / typeresolution . xml " / > 
 < rule ref = " rulesets / java / unnecessary . xml " / > 
 
 < / ruleset >

NEAREST DIFF:
diff - - git a / . ci / shippable . sh b / . ci / shippable . sh 
 index 352aa86 . . 4df5f06 100755 
 - - - a / . ci / shippable . sh 
 + + + b / . ci / shippable . sh 
 @ @ - 85 , 10 + 85 , 6 @ @ pitest - checkstyle - common ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 # Format of ignored items : < report _ name > : < survived line > 
 declare - a ignoredItems = ( 
 - " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > + & # 34 ; - & # 34 ; + ex . getMessage ( ) , ex ) ; < / span > < / pre > < / td > < / tr > " 
 - " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > catch ( final CheckstyleException ex ) { < / span > < / pre > < / td > < / tr > " 
 - " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > throw ex ; < / span > < / pre > < / td > < / tr > " 
 - " Checker . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > throw new CheckstyleException ( & # 34 ; cannot initialize module & # 34 ; + name < / span > < / pre > < / td > < / tr > " 
 " DefaultConfiguration . java . html : < td class = ' uncovered ' > < pre > < span class = ' ' > attributeMap . put ( attributeName , current + & # 34 ; , & # 34 ; + value ) ; < / span > < / pre > < / td > < / tr > " 
 ) ; 
 checkPitestReport " $ { ignoredItems [ @ ] } " 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 index 960f8c5 . . 05cfab5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / CheckerTest . java 
 @ @ - 444 , 6 + 444 , 22 @ @ public class CheckerTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testSetupChildInvalidProperty ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( HiddenFieldCheck . class ) ; 
 + checkConfig . addAttribute ( " $ $ No such property " , null ) ; 
 + try { 
 + createChecker ( checkConfig ) ; 
 + fail ( " Exception is expected " ) ; 
 + } 
 + catch ( CheckstyleException ex ) { 
 + assertEquals ( " Error message is not expected " , 
 + " cannot initialize module com . puppycrawl . tools . checkstyle . TreeWalker " 
 + + " - Property ' $ $ No such property ' in module " + checkConfig . getName ( ) 
 + + " does not exist , please check the documentation " , ex . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 public void testSetupChildListener ( ) throws Exception { 
 final Checker checker = new Checker ( ) ; 
 final PackageObjectFactory factory = new PackageObjectFactory ( 
 @ @ - 842 , 6 + 858 , 21 @ @ public class CheckerTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testHaltOnException ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createModuleConfig ( CheckWhichThrowsError . class ) ; 
 + final String filePath = getPath ( " InputChecker . java " ) ; 
 + try { 
 + verify ( checkConfig , filePath ) ; 
 + fail ( " Exception is expected " ) ; 
 + } 
 + catch ( CheckstyleException ex ) { 
 + assertEquals ( " Error message is not expected " , 
 + " Exception was thrown while processing " + filePath , ex . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 public void testHaltOnExceptionOff ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createModuleConfig ( CheckWhichThrowsError . class ) ;
