BLEU SCORE: 0.05816635421147513

TEST MSG: Issue # 4581 : Reorganize token methods in javadoc and modifier folders and miscellaneous checks
GENERATED MSG: Issue # 2661 : Enforce WhitespaceBeforeArrayInitializer of sevntu - checkstyle over Checkstyle source code

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ArrayTypeStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ArrayTypeStyleCheck . java <nl> index 9a034bb . . 91427fd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ArrayTypeStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ArrayTypeStyleCheck . java <nl> @ @ - 45 , 17 + 45 , 17 @ @ public class ArrayTypeStyleCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . ARRAY _ DECLARATOR } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . ARRAY _ DECLARATOR } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> index 80c4257 . . f221ef5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> @ @ - 213 , 17 + 213 , 17 @ @ public class AvoidEscapedUnicodeCharactersCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . STRING _ LITERAL , TokenTypes . CHAR _ LITERAL } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . STRING _ LITERAL , TokenTypes . CHAR _ LITERAL } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / DescendantTokenCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / DescendantTokenCheck . java <nl> index d34b5d0 . . 8a00332 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / DescendantTokenCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / DescendantTokenCheck . java <nl> @ @ - 218 , 7 + 218 , 7 @ @ public class DescendantTokenCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java <nl> index 973ea2d . . 30fee9a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java <nl> @ @ - 60 , 20 + 60 , 22 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . CLASS _ DEF , TokenTypes . INTERFACE _ DEF , <nl> - TokenTypes . ENUM _ DEF , TokenTypes . ANNOTATION _ DEF , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . CLASS _ DEF , <nl> + TokenTypes . INTERFACE _ DEF , <nl> + TokenTypes . ENUM _ DEF , <nl> + TokenTypes . ANNOTATION _ DEF , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 0f9370a . . 43d3f29 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 202 , 17 + 202 , 17 @ @ public class SuppressWarningsHolder <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . ANNOTATION } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . ANNOTATION } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TodoCommentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TodoCommentCheck . java <nl> index 964e01a . . 51a1238 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TodoCommentCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TodoCommentCheck . java <nl> @ @ - 82 , 17 + 82 , 17 @ @ public class TodoCommentCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . COMMENT _ CONTENT } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . COMMENT _ CONTENT } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java <nl> index 4d719f6 . . 312c346 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java <nl> @ @ - 131 , 12 + 131 , 12 @ @ public class TrailingCommentCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java <nl> index fa0028c . . 2dab720 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java <nl> @ @ - 69 , 21 + 69 , 21 @ @ public class UncommentedMainCheck <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . METHOD _ DEF , <nl> - TokenTypes . CLASS _ DEF , <nl> - TokenTypes . PACKAGE _ DEF , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . METHOD _ DEF , <nl> + TokenTypes . CLASS _ DEF , <nl> + TokenTypes . PACKAGE _ DEF , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheck . java <nl> index 45b4528 . . 1ed5771 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheck . java <nl> @ @ - 59 , 17 + 59 , 17 @ @ public class UpperEllCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . NUM _ LONG } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . NUM _ LONG } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index acbb11f . . 4450019 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 246 , 17 + 246 , 17 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> * / <nl> @ Override <nl> public final int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public final int [ ] getAcceptableTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public final int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java <nl> index 5717812 . . 32a3111 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java <nl> @ @ - 93 , 17 + 93 , 17 @ @ public class ModifierOrderCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . MODIFIERS } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . MODIFIERS } ; <nl> } <nl> <nl> @ Override
NEAREST DIFF (one line): diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index 0dbda1e . . 9651d4f 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 1034 , 6 + 1034 , 15 @ @ public boolean equals ( Object o ) { <nl> & lt ; property name = " ignoreOverridden " value = " true " / & gt ; <nl> & lt ; / module & gt ; <nl> < / source > <nl> + < p > <nl> + An example of how to configure the check for names that begin with <nl> + a lower case letter , followed by letters and digits is : <nl> + < / p > <nl> + < source > <nl> + & lt ; module name = " ParameterName " & gt ; <nl> + & lt ; property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / & gt ; <nl> + & lt ; / module & gt ; <nl> + < / source > <nl> < / subsection > <nl> <nl> < subsection name = " Example of Usage " >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ArrayTypeStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ArrayTypeStyleCheck . java 
 index 9a034bb . . 91427fd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ArrayTypeStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ArrayTypeStyleCheck . java 
 @ @ - 45 , 17 + 45 , 17 @ @ public class ArrayTypeStyleCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . ARRAY _ DECLARATOR } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . ARRAY _ DECLARATOR } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 index 80c4257 . . f221ef5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 @ @ - 213 , 17 + 213 , 17 @ @ public class AvoidEscapedUnicodeCharactersCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . STRING _ LITERAL , TokenTypes . CHAR _ LITERAL } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . STRING _ LITERAL , TokenTypes . CHAR _ LITERAL } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / DescendantTokenCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / DescendantTokenCheck . java 
 index d34b5d0 . . 8a00332 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / DescendantTokenCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / DescendantTokenCheck . java 
 @ @ - 218 , 7 + 218 , 7 @ @ public class DescendantTokenCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java 
 index 973ea2d . . 30fee9a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / OuterTypeFilenameCheck . java 
 @ @ - 60 , 20 + 60 , 22 @ @ public class OuterTypeFilenameCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . CLASS _ DEF , TokenTypes . INTERFACE _ DEF , 
 - TokenTypes . ENUM _ DEF , TokenTypes . ANNOTATION _ DEF , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . CLASS _ DEF , 
 + TokenTypes . INTERFACE _ DEF , 
 + TokenTypes . ENUM _ DEF , 
 + TokenTypes . ANNOTATION _ DEF , 
 + } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 0f9370a . . 43d3f29 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 202 , 17 + 202 , 17 @ @ public class SuppressWarningsHolder 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . ANNOTATION } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . ANNOTATION } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TodoCommentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TodoCommentCheck . java 
 index 964e01a . . 51a1238 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TodoCommentCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TodoCommentCheck . java 
 @ @ - 82 , 17 + 82 , 17 @ @ public class TodoCommentCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . COMMENT _ CONTENT } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . COMMENT _ CONTENT } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java 
 index 4d719f6 . . 312c346 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java 
 @ @ - 131 , 12 + 131 , 12 @ @ public class TrailingCommentCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java 
 index fa0028c . . 2dab720 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java 
 @ @ - 69 , 21 + 69 , 21 @ @ public class UncommentedMainCheck 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . METHOD _ DEF , 
 - TokenTypes . CLASS _ DEF , 
 - TokenTypes . PACKAGE _ DEF , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . METHOD _ DEF , 
 + TokenTypes . CLASS _ DEF , 
 + TokenTypes . PACKAGE _ DEF , 
 + } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheck . java 
 index 45b4528 . . 1ed5771 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheck . java 
 @ @ - 59 , 17 + 59 , 17 @ @ public class UpperEllCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . NUM _ LONG } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . NUM _ LONG } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index acbb11f . . 4450019 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 246 , 17 + 246 , 17 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 * / 
 @ Override 
 public final int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public final int [ ] getAcceptableTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public final int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java 
 index 5717812 . . 32a3111 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / ModifierOrderCheck . java 
 @ @ - 93 , 17 + 93 , 17 @ @ public class ModifierOrderCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . MODIFIERS } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . MODIFIERS } ; 
 } 
 
 @ Override

NEAREST DIFF:
diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index 0dbda1e . . 9651d4f 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 1034 , 6 + 1034 , 15 @ @ public boolean equals ( Object o ) { 
 & lt ; property name = " ignoreOverridden " value = " true " / & gt ; 
 & lt ; / module & gt ; 
 < / source > 
 + < p > 
 + An example of how to configure the check for names that begin with 
 + a lower case letter , followed by letters and digits is : 
 + < / p > 
 + < source > 
 + & lt ; module name = " ParameterName " & gt ; 
 + & lt ; property name = " format " value = " ^ [ a - z ] [ a - zA - Z0 - 9 ] + $ " / & gt ; 
 + & lt ; / module & gt ; 
 + < / source > 
 < / subsection > 
 
 < subsection name = " Example of Usage " >
