BLEU SCORE: 0.02085799585464663

TEST MSG: Issue # 5948 : removed lambda support from RightCurlyCheck
GENERATED MSG: Fix RightCurlyCheck with same option not to rise expression in single - line blocks - issue # 1416

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index b701efa . . 110bc49 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 51 , 7 + 51 , 6 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtil ; <nl> * { @ link TokenTypes # LITERAL _ DO LITERAL _ DO } . <nl> * { @ link TokenTypes # STATIC _ INIT STATIC _ INIT } . <nl> * { @ link TokenTypes # INSTANCE _ INIT INSTANCE _ INIT } . <nl> - * { @ link TokenTypes # LAMBDA LAMBDA } . <nl> * < / p > <nl> * < p > <nl> * < b > shouldStartLine < / b > - does the check need to check <nl> @ @ - 158 , 7 + 157 , 6 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> TokenTypes . LITERAL _ DO , <nl> TokenTypes . STATIC _ INIT , <nl> TokenTypes . INSTANCE _ INIT , <nl> - TokenTypes . LAMBDA , <nl> } ; <nl> } <nl> <nl> @ @ - 396 , 9 + 394 , 6 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> case TokenTypes . LITERAL _ FOR : <nl> details = getDetailsForLoops ( ast ) ; <nl> break ; <nl> - case TokenTypes . LAMBDA : <nl> - details = getDetailsForLambda ( ast ) ; <nl> - break ; <nl> default : <nl> details = getDetailsForOthers ( ast ) ; <nl> break ; <nl> @ @ - 545 , 27 + 540 , 6 @ @ public class RightCurlyCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * Collects validation details for Lambdas . <nl> - * @ param ast a { @ code DetailAST } value <nl> - * @ return an object containing all details to make a validation <nl> - * / <nl> - private static Details getDetailsForLambda ( DetailAST ast ) { <nl> - final DetailAST lcurly = ast . findFirstToken ( TokenTypes . SLIST ) ; <nl> - boolean shouldCheckLastRcurly = false ; <nl> - DetailAST nextToken = getNextToken ( ast ) ; <nl> - if ( nextToken . getType ( ) ! = TokenTypes . RPAREN <nl> - & & nextToken . getType ( ) ! = TokenTypes . COMMA ) { <nl> - shouldCheckLastRcurly = true ; <nl> - nextToken = getNextToken ( nextToken ) ; <nl> - } <nl> - DetailAST rcurly = null ; <nl> - if ( lcurly ! = null ) { <nl> - rcurly = lcurly . getLastChild ( ) ; <nl> - } <nl> - return new Details ( lcurly , rcurly , nextToken , shouldCheckLastRcurly ) ; <nl> - } <nl> - <nl> - / * * <nl> * Finds next token after the given one . <nl> * @ param ast the given node . <nl> * @ return the token which represents next lexical item . <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> index 951666f . . ce16b78 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> @ @ - 375 , 13 + 375 , 7 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { <nl> public void testRightCurlyIsAloneLambda ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( RightCurlyCheck . class ) ; <nl> checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE . toString ( ) ) ; <nl> - checkConfig . addAttribute ( " tokens " , " LAMBDA " ) ; <nl> - final String [ ] expected = { <nl> - " 14 : 74 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 74 ) , <nl> - " 17 : 49 : " + getCheckMessage ( MSG _ KEY _ LINE _ NEW , " } " , 49 ) , <nl> - " 35 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , <nl> - " 45 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , <nl> - } ; <nl> + final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , getPath ( " InputRightCurlyAloneLambda . java " ) , expected ) ; <nl> } <nl> <nl> @ @ - 390 , 13 + 384 , 7 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( RightCurlyCheck . class ) ; <nl> checkConfig . addAttribute ( " option " , <nl> RightCurlyOption . ALONE _ OR _ SINGLELINE . toString ( ) ) ; <nl> - checkConfig . addAttribute ( " tokens " , " LAMBDA " ) ; <nl> - final String [ ] expected = { <nl> - " 17 : 49 : " + getCheckMessage ( MSG _ KEY _ LINE _ NEW , " } " , 49 ) , <nl> - " 35 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , <nl> - " 45 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , <nl> - " 47 : 54 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 54 ) , <nl> - } ; <nl> + final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , <nl> getPath ( " InputRightCurlyAloneOrSinglelineLambda . java " ) , expected ) ; <nl> } <nl> @ @ - 405 , 15 + 393 , 7 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { <nl> public void testRightCurlyIsSameLambda ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createModuleConfig ( RightCurlyCheck . class ) ; <nl> checkConfig . addAttribute ( " option " , RightCurlyOption . SAME . toString ( ) ) ; <nl> - checkConfig . addAttribute ( " tokens " , " LAMBDA " ) ; <nl> - final String [ ] expected = { <nl> - " 17 : 49 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ BEFORE , " } " , 49 ) , <nl> - " 35 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , <nl> - " 40 : 13 : " + getCheckMessage ( MSG _ KEY _ LINE _ SAME , " } " , 13 ) , <nl> - " 53 : 30 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ BEFORE , " } " , 30 ) , <nl> - " 68 : 20 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ BEFORE , " } " , 20 ) , <nl> - " 73 : 20 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ BEFORE , " } " , 20 ) , <nl> - } ; <nl> + final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , <nl> getPath ( " InputRightCurlySameLambda . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> index 27480db . . b9b4cbe 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java <nl> @ @ - 169 , 9 + 169 , 6 @ @ public class AllChecksTest extends AbstractModuleTestSupport { <nl> " ELLIPSIS " , <nl> / / these are covered by GenericWhitespaceCheck <nl> " WILDCARD _ TYPE " , " GENERIC _ END " , " GENERIC _ START " ) . collect ( Collectors . toSet ( ) ) ) ; <nl> - CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " RightCurly " , Stream . of ( <nl> - / / Until https : / / github . com / checkstyle / checkstyle / issues / 4177 <nl> - " LAMBDA " ) . collect ( Collectors . toSet ( ) ) ) ; <nl> <nl> / / google <nl> GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " AnnotationLocation " , Stream . of ( <nl> @ @ - 237 , 9 + 234 , 6 @ @ public class AllChecksTest extends AbstractModuleTestSupport { <nl> / / state of the configuration when test was made until <nl> / / https : / / github . com / checkstyle / checkstyle / issues / 4122 <nl> " COLON " , " TYPE _ EXTENSION _ AND " ) . collect ( Collectors . toSet ( ) ) ) ; <nl> - GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " RightCurly " , Stream . of ( <nl> - / / Until https : / / github . com / checkstyle / checkstyle / issues / 4178 <nl> - " LAMBDA " ) . collect ( Collectors . toSet ( ) ) ) ; <nl> GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " NoWhitespaceBefore " , Stream . of ( <nl> / / google uses GenericWhitespace for this behavior <nl> " GENERIC _ START " , " GENERIC _ END " ) . collect ( Collectors . toSet ( ) ) ) ; <nl> diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml <nl> index 8a34f0a . . 641ebe7 100644 <nl> - - - a / src / xdocs / config _ blocks . xml <nl> + + + b / src / xdocs / config _ blocks . xml <nl> @ @ - 946 , 10 + 946 , 7 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK <nl> STATIC _ INIT < / a > , <nl> < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INSTANCE _ INIT " > <nl> - INSTANCE _ INIT < / a > , <nl> - < a <nl> - href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LAMBDA " > <nl> - LAMBDA < / a > . < / td > <nl> + INSTANCE _ INIT < / a > . < / td > <nl> <nl> < td > < a <nl> href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ TRY " >
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java <nl> index ab4239d . . acc3444 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java <nl> @ @ - 13 , 9 + 13 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . checks . OuterTypeFilenameCheck ; <nl> <nl> public class OuterTypeFilenameTest extends BaseCheckTestSupport { <nl> - <nl> + <nl> static ConfigurationBuilder builder ; <nl> - <nl> + <nl> @ BeforeClass <nl> public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { <nl> builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> @ @ - 24 , 39 + 24 , 37 @ @ public class OuterTypeFilenameTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void outerTypeFilenameTest _ 1 ( ) throws IOException , Exception { <nl> <nl> - String msg = getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) ; <nl> - <nl> final String [ ] expected = { } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; <nl> String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 1 " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> - } <nl> - <nl> + } <nl> + <nl> @ Test <nl> public void outerTypeFilenameTest _ 2 ( ) throws IOException , Exception { <nl> - <nl> + <nl> final String [ ] expected = { } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; <nl> String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 2 " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> public void outerTypeFilenameTest _ 3 ( ) throws IOException , Exception { <nl> - <nl> + <nl> final String [ ] expected = { <nl> - " 3 : " + getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) , <nl> + " 3 : " + getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) , <nl> } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; <nl> String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 3 " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java <nl> index bb56a48 . . 158f23a 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java <nl> @ @ - 14 , 9 + 14 , 9 @ @ import com . puppycrawl . tools . checkstyle . checks . sizes . LineLengthCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . whitespace . NoLineWrapCheck ; <nl> <nl> public class NoLineWrapTest extends BaseCheckTestSupport { <nl> - <nl> + <nl> static ConfigurationBuilder builder ; <nl> - <nl> + <nl> @ BeforeClass <nl> public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { <nl> builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> @ @ - 24 , 29 + 24 , 27 @ @ public class NoLineWrapTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void badLineWrapTest ( ) throws IOException , Exception { <nl> - <nl> - String msg = getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) ; <nl> <nl> final String [ ] expected = { <nl> " 1 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " package " ) , <nl> - " 6 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) , <nl> + " 6 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) , <nl> } ; <nl> <nl> Configuration checkConfig = builder . getCheckConfig ( " NoLineWrap " ) ; <nl> String filePath = builder . getFilePath ( " NoLineWrap _ Bad " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> public void goodLineWrapTest ( ) throws IOException , Exception { <nl> - <nl> + <nl> final String [ ] expected = { } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " NoLineWrap " ) ; <nl> String filePath = builder . getFilePath ( " NoLineWrap _ Good " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> @ @ - 68 , 7 + 66 , 7 @ @ public class NoLineWrapTest extends BaseCheckTestSupport { <nl> <nl> Configuration checkConfig = builder . getCheckConfig ( " LineLength " ) ; <nl> String filePath = builder . getFilePath ( " LineLengthInput2 " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java <nl> index 10d3ef4 . . c5b1f30 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java <nl> @ @ - 13 , 9 + 13 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . checks . coding . VariableDeclarationUsageDistanceCheck ; <nl> <nl> public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { <nl> - <nl> + <nl> static ConfigurationBuilder builder ; <nl> - <nl> + <nl> @ BeforeClass <nl> public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { <nl> builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> @ @ - 23 , 8 + 23 , 7 @ @ public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void arrayTypeStyleTest ( ) throws IOException , Exception { <nl> - <nl> - String msg = " variable . declaration . usage . distance " ; <nl> + <nl> String msgExt = " variable . declaration . usage . distance . extend " ; <nl> Class < VariableDeclarationUsageDistanceCheck > clazz = VariableDeclarationUsageDistanceCheck . class ; <nl> <nl> @ @ - 34 , 10 + 33 , 10 @ @ public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { <nl> " 479 : " + getCheckMessage ( clazz , msgExt , " myOption " , 7 , 3 ) , <nl> " 491 : " + getCheckMessage ( clazz , msgExt , " myOption " , 6 , 3 ) , <nl> } ; <nl> - <nl> + <nl> Configuration checkConfig = builder . getCheckConfig ( " VariableDeclarationUsageDistance " ) ; <nl> String filePath = builder . getFilePath ( " InputVariableDeclarationUsageDistanceCheck " ) ; <nl> - <nl> + <nl> Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> index ced1d68 . . be5ac33 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> @ @ - 127 , 8 + 127 , 7 @ @ public class PackageNamesLoaderTest { <nl> when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenReturn ( enumer ) ; <nl> <nl> try { <nl> - final Set < String > packageNames = PackageNamesLoader <nl> - . getPackageNames ( classLoader ) ; <nl> + PackageNamesLoader . getPackageNames ( classLoader ) ; <nl> fail ( ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> @ @ - 152 , 8 + 151 , 7 @ @ public class PackageNamesLoaderTest { <nl> when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenReturn ( enumer ) ; <nl> <nl> try { <nl> - final Set < String > packageNames = PackageNamesLoader <nl> - . getPackageNames ( classLoader ) ; <nl> + PackageNamesLoader . getPackageNames ( classLoader ) ; <nl> fail ( ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java <nl> index 8af77f5 . . 3605ea6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ public class PropertiesExpanderTest { <nl> <nl> @ Test ( expected = IllegalArgumentException . class ) <nl> public void testCtorException ( ) throws CheckstyleException { <nl> - PropertiesExpander object = new PropertiesExpander ( null ) ; <nl> + new PropertiesExpander ( null ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> index c511be2 . . b46b201 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> import static org . powermock . api . mockito . PowerMockito . mockStatic ; <nl> import static org . powermock . api . mockito . PowerMockito . when ; <nl> - import static org . powermock . api . support . membermodification . MemberMatcher . method ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> @ @ - 58 , 20 + 57 , 20 @ @ public class PropertyCacheFileTest { <nl> file . setReadable ( true , false ) ; <nl> file . setWritable ( false , false ) ; <nl> <nl> - PropertyCacheFile cache = new PropertyCacheFile ( config , file . getAbsolutePath ( ) ) ; <nl> + new PropertyCacheFile ( config , file . getAbsolutePath ( ) ) ; <nl> } <nl> <nl> @ Test <nl> public void testCtor ( ) throws IOException { <nl> try { <nl> - PropertyCacheFile cache = new PropertyCacheFile ( null , " " ) ; <nl> + new PropertyCacheFile ( null , " " ) ; <nl> } <nl> catch ( IllegalArgumentException ex ) { <nl> assertEquals ( " config can not be null " , ex . getMessage ( ) ) ; <nl> } <nl> try { <nl> Configuration config = new DefaultConfiguration ( " myname " ) ; <nl> - PropertyCacheFile cache = new PropertyCacheFile ( config , null ) ; <nl> + new PropertyCacheFile ( config , null ) ; <nl> } <nl> catch ( IllegalArgumentException ex ) { <nl> assertEquals ( " fileName can not be null " , ex . getMessage ( ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> index 28b8525 . . 572715b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class XMLLoggerTest { <nl> @ Test <nl> public void testEncode ( ) <nl> throws IOException { <nl> - final XMLLogger logger = new XMLLogger ( outStream , false ) ; <nl> + new XMLLogger ( outStream , false ) ; <nl> final String [ ] [ ] encodings = { <nl> { " < " , " & lt ; " } , <nl> { " > " , " & gt ; " } , <nl> @ @ - 72 , 7 + 72 , 7 @ @ public class XMLLoggerTest { <nl> @ Test <nl> public void testIsReference ( ) <nl> throws IOException { <nl> - final XMLLogger logger = new XMLLogger ( outStream , false ) ; <nl> + new XMLLogger ( outStream , false ) ; <nl> final String [ ] reference = { <nl> " & # 0 ; " , <nl> " & # x0 ; " , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> index 922d722 . . 9192678 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java <nl> @ @ - 68 , 8 + 68 , 6 @ @ public class DetailASTTest { <nl> public void testSetSiblingNull ( ) { <nl> final DetailAST root = new DetailAST ( ) ; <nl> final DetailAST firstLevelA = new DetailAST ( ) ; <nl> - final DetailAST firstLevelB = new DetailAST ( ) ; <nl> - final DetailAST secondLevelA = new DetailAST ( ) ; <nl> <nl> root . setFirstChild ( firstLevelA ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java <nl> index a7e7072 . . 4f8b652 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class FileTextTest { <nl> / / just to make UT coverage 100 % <nl> String charsetName = " STRANGE _ CHARSET " ; <nl> try { <nl> - FileText o = new FileText ( new File ( " any name " ) , charsetName ) ; <nl> + new FileText ( new File ( " any name " ) , charsetName ) ; <nl> fail ( ) ; <nl> } <nl> catch ( UnsupportedEncodingException e ) { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> index ecd438f . . ab4e105 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> @ @ - 73 , 7 + 73 , 6 @ @ public class LocalizedMessageTest { <nl> <nl> ClassLoader classloader = mock ( ClassLoader . class ) ; <nl> String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; <nl> - String urlPath = " file : com / puppycrawl / tools / checkstyle / checks / coding / messages . properties " ; <nl> final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; <nl> when ( mockConnection . getInputStream ( ) ) . thenReturn ( <nl> new ByteArrayInputStream ( new byte [ ] { } ) ) ; <nl> @ @ - 92 , 7 + 91 , 6 @ @ public class LocalizedMessageTest { <nl> <nl> ClassLoader classloader = mock ( ClassLoader . class ) ; <nl> String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; <nl> - String urlPath = " file : com / puppycrawl / tools / checkstyle / checks / coding / messages . properties " ; <nl> <nl> URL url = getMockUrl ( null ) ; <nl> when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java <nl> index 023d2a1 . . d530ac4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ public class SeverityLevelCounterTest { <nl> <nl> @ Test ( expected = IllegalArgumentException . class ) <nl> public void testCtorException ( ) { <nl> - final SeverityLevelCounter o = new SeverityLevelCounter ( null ) ; <nl> + new SeverityLevelCounter ( null ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> index 7eae052 . . 18daf6f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> @ @ - 74 , 7 + 74 , 6 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { <nl> * / <nl> @ Test <nl> public void testNotFoundKey ( ) throws Exception { <nl> - final UniquePropertiesCheck check = new UniquePropertiesCheck ( ) ; <nl> final List < String > testStrings = new ArrayList < > ( 3 ) ; <nl> testStrings . add ( " " ) ; <nl> testStrings . add ( " 0 = 0 " ) ;

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index b701efa . . 110bc49 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 51 , 7 + 51 , 6 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtil ; 
 * { @ link TokenTypes # LITERAL _ DO LITERAL _ DO } . 
 * { @ link TokenTypes # STATIC _ INIT STATIC _ INIT } . 
 * { @ link TokenTypes # INSTANCE _ INIT INSTANCE _ INIT } . 
 - * { @ link TokenTypes # LAMBDA LAMBDA } . 
 * < / p > 
 * < p > 
 * < b > shouldStartLine < / b > - does the check need to check 
 @ @ - 158 , 7 + 157 , 6 @ @ public class RightCurlyCheck extends AbstractCheck { 
 TokenTypes . LITERAL _ DO , 
 TokenTypes . STATIC _ INIT , 
 TokenTypes . INSTANCE _ INIT , 
 - TokenTypes . LAMBDA , 
 } ; 
 } 
 
 @ @ - 396 , 9 + 394 , 6 @ @ public class RightCurlyCheck extends AbstractCheck { 
 case TokenTypes . LITERAL _ FOR : 
 details = getDetailsForLoops ( ast ) ; 
 break ; 
 - case TokenTypes . LAMBDA : 
 - details = getDetailsForLambda ( ast ) ; 
 - break ; 
 default : 
 details = getDetailsForOthers ( ast ) ; 
 break ; 
 @ @ - 545 , 27 + 540 , 6 @ @ public class RightCurlyCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * Collects validation details for Lambdas . 
 - * @ param ast a { @ code DetailAST } value 
 - * @ return an object containing all details to make a validation 
 - * / 
 - private static Details getDetailsForLambda ( DetailAST ast ) { 
 - final DetailAST lcurly = ast . findFirstToken ( TokenTypes . SLIST ) ; 
 - boolean shouldCheckLastRcurly = false ; 
 - DetailAST nextToken = getNextToken ( ast ) ; 
 - if ( nextToken . getType ( ) ! = TokenTypes . RPAREN 
 - & & nextToken . getType ( ) ! = TokenTypes . COMMA ) { 
 - shouldCheckLastRcurly = true ; 
 - nextToken = getNextToken ( nextToken ) ; 
 - } 
 - DetailAST rcurly = null ; 
 - if ( lcurly ! = null ) { 
 - rcurly = lcurly . getLastChild ( ) ; 
 - } 
 - return new Details ( lcurly , rcurly , nextToken , shouldCheckLastRcurly ) ; 
 - } 
 - 
 - / * * 
 * Finds next token after the given one . 
 * @ param ast the given node . 
 * @ return the token which represents next lexical item . 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 index 951666f . . ce16b78 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 @ @ - 375 , 13 + 375 , 7 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { 
 public void testRightCurlyIsAloneLambda ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( RightCurlyCheck . class ) ; 
 checkConfig . addAttribute ( " option " , RightCurlyOption . ALONE . toString ( ) ) ; 
 - checkConfig . addAttribute ( " tokens " , " LAMBDA " ) ; 
 - final String [ ] expected = { 
 - " 14 : 74 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 74 ) , 
 - " 17 : 49 : " + getCheckMessage ( MSG _ KEY _ LINE _ NEW , " } " , 49 ) , 
 - " 35 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , 
 - " 45 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , 
 - } ; 
 + final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , getPath ( " InputRightCurlyAloneLambda . java " ) , expected ) ; 
 } 
 
 @ @ - 390 , 13 + 384 , 7 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { 
 final DefaultConfiguration checkConfig = createModuleConfig ( RightCurlyCheck . class ) ; 
 checkConfig . addAttribute ( " option " , 
 RightCurlyOption . ALONE _ OR _ SINGLELINE . toString ( ) ) ; 
 - checkConfig . addAttribute ( " tokens " , " LAMBDA " ) ; 
 - final String [ ] expected = { 
 - " 17 : 49 : " + getCheckMessage ( MSG _ KEY _ LINE _ NEW , " } " , 49 ) , 
 - " 35 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , 
 - " 45 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , 
 - " 47 : 54 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 54 ) , 
 - } ; 
 + final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , 
 getPath ( " InputRightCurlyAloneOrSinglelineLambda . java " ) , expected ) ; 
 } 
 @ @ - 405 , 15 + 393 , 7 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { 
 public void testRightCurlyIsSameLambda ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createModuleConfig ( RightCurlyCheck . class ) ; 
 checkConfig . addAttribute ( " option " , RightCurlyOption . SAME . toString ( ) ) ; 
 - checkConfig . addAttribute ( " tokens " , " LAMBDA " ) ; 
 - final String [ ] expected = { 
 - " 17 : 49 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ BEFORE , " } " , 49 ) , 
 - " 35 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , 
 - " 40 : 13 : " + getCheckMessage ( MSG _ KEY _ LINE _ SAME , " } " , 13 ) , 
 - " 53 : 30 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ BEFORE , " } " , 30 ) , 
 - " 68 : 20 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ BEFORE , " } " , 20 ) , 
 - " 73 : 20 : " + getCheckMessage ( MSG _ KEY _ LINE _ BREAK _ BEFORE , " } " , 20 ) , 
 - } ; 
 + final String [ ] expected = CommonUtil . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , 
 getPath ( " InputRightCurlySameLambda . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 index 27480db . . b9b4cbe 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / AllChecksTest . java 
 @ @ - 169 , 9 + 169 , 6 @ @ public class AllChecksTest extends AbstractModuleTestSupport { 
 " ELLIPSIS " , 
 / / these are covered by GenericWhitespaceCheck 
 " WILDCARD _ TYPE " , " GENERIC _ END " , " GENERIC _ START " ) . collect ( Collectors . toSet ( ) ) ) ; 
 - CHECKSTYLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " RightCurly " , Stream . of ( 
 - / / Until https : / / github . com / checkstyle / checkstyle / issues / 4177 
 - " LAMBDA " ) . collect ( Collectors . toSet ( ) ) ) ; 
 
 / / google 
 GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " AnnotationLocation " , Stream . of ( 
 @ @ - 237 , 9 + 234 , 6 @ @ public class AllChecksTest extends AbstractModuleTestSupport { 
 / / state of the configuration when test was made until 
 / / https : / / github . com / checkstyle / checkstyle / issues / 4122 
 " COLON " , " TYPE _ EXTENSION _ AND " ) . collect ( Collectors . toSet ( ) ) ) ; 
 - GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " RightCurly " , Stream . of ( 
 - / / Until https : / / github . com / checkstyle / checkstyle / issues / 4178 
 - " LAMBDA " ) . collect ( Collectors . toSet ( ) ) ) ; 
 GOOGLE _ TOKENS _ IN _ CONFIG _ TO _ IGNORE . put ( " NoWhitespaceBefore " , Stream . of ( 
 / / google uses GenericWhitespace for this behavior 
 " GENERIC _ START " , " GENERIC _ END " ) . collect ( Collectors . toSet ( ) ) ) ; 
 diff - - git a / src / xdocs / config _ blocks . xml b / src / xdocs / config _ blocks . xml 
 index 8a34f0a . . 641ebe7 100644 
 - - - a / src / xdocs / config _ blocks . xml 
 + + + b / src / xdocs / config _ blocks . xml 
 @ @ - 946 , 10 + 946 , 7 @ @ for ( int i = 0 ; i & lt ; 10 ; value . incrementValue ( ) ) ; / / OK 
 STATIC _ INIT < / a > , 
 < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INSTANCE _ INIT " > 
 - INSTANCE _ INIT < / a > , 
 - < a 
 - href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LAMBDA " > 
 - LAMBDA < / a > . < / td > 
 + INSTANCE _ INIT < / a > . < / td > 
 
 < td > < a 
 href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # LITERAL _ TRY " >

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java 
 index ab4239d . . acc3444 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter2filebasic / rule21filename / OuterTypeFilenameTest . java 
 @ @ - 13 , 9 + 13 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . checks . OuterTypeFilenameCheck ; 
 
 public class OuterTypeFilenameTest extends BaseCheckTestSupport { 
 - 
 + 
 static ConfigurationBuilder builder ; 
 - 
 + 
 @ BeforeClass 
 public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { 
 builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 @ @ - 24 , 39 + 24 , 37 @ @ public class OuterTypeFilenameTest extends BaseCheckTestSupport { 
 @ Test 
 public void outerTypeFilenameTest _ 1 ( ) throws IOException , Exception { 
 
 - String msg = getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) ; 
 - 
 final String [ ] expected = { } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; 
 String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 1 " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 - } 
 - 
 + } 
 + 
 @ Test 
 public void outerTypeFilenameTest _ 2 ( ) throws IOException , Exception { 
 - 
 + 
 final String [ ] expected = { } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; 
 String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 2 " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 - 
 + 
 @ Test 
 public void outerTypeFilenameTest _ 3 ( ) throws IOException , Exception { 
 - 
 + 
 final String [ ] expected = { 
 - " 3 : " + getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) , 
 + " 3 : " + getCheckMessage ( OuterTypeFilenameCheck . class , " type . file . mismatch " ) , 
 } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " OuterTypeFilename " ) ; 
 String filePath = builder . getFilePath ( " OuterTypeFilenameInput _ 3 " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java 
 index bb56a48 . . 158f23a 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter3filestructure / rule332nolinewrap / NoLineWrapTest . java 
 @ @ - 14 , 9 + 14 , 9 @ @ import com . puppycrawl . tools . checkstyle . checks . sizes . LineLengthCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . whitespace . NoLineWrapCheck ; 
 
 public class NoLineWrapTest extends BaseCheckTestSupport { 
 - 
 + 
 static ConfigurationBuilder builder ; 
 - 
 + 
 @ BeforeClass 
 public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { 
 builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 @ @ - 24 , 29 + 24 , 27 @ @ public class NoLineWrapTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void badLineWrapTest ( ) throws IOException , Exception { 
 - 
 - String msg = getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) ; 
 
 final String [ ] expected = { 
 " 1 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " package " ) , 
 - " 6 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) , 
 + " 6 : " + getCheckMessage ( NoLineWrapCheck . class , " no . line . wrap " , " import " ) , 
 } ; 
 
 Configuration checkConfig = builder . getCheckConfig ( " NoLineWrap " ) ; 
 String filePath = builder . getFilePath ( " NoLineWrap _ Bad " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 - 
 + 
 @ Test 
 public void goodLineWrapTest ( ) throws IOException , Exception { 
 - 
 + 
 final String [ ] expected = { } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " NoLineWrap " ) ; 
 String filePath = builder . getFilePath ( " NoLineWrap _ Good " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 @ @ - 68 , 7 + 66 , 7 @ @ public class NoLineWrapTest extends BaseCheckTestSupport { 
 
 Configuration checkConfig = builder . getCheckConfig ( " LineLength " ) ; 
 String filePath = builder . getFilePath ( " LineLengthInput2 " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java 
 index 10d3ef4 . . c5b1f30 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule4822variabledistance / VariableDeclarationUsageDistanceTest . java 
 @ @ - 13 , 9 + 13 , 9 @ @ import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . checks . coding . VariableDeclarationUsageDistanceCheck ; 
 
 public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { 
 - 
 + 
 static ConfigurationBuilder builder ; 
 - 
 + 
 @ BeforeClass 
 public static void setConfigurationBuilder ( ) throws CheckstyleException , IOException { 
 builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 @ @ - 23 , 8 + 23 , 7 @ @ public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void arrayTypeStyleTest ( ) throws IOException , Exception { 
 - 
 - String msg = " variable . declaration . usage . distance " ; 
 + 
 String msgExt = " variable . declaration . usage . distance . extend " ; 
 Class < VariableDeclarationUsageDistanceCheck > clazz = VariableDeclarationUsageDistanceCheck . class ; 
 
 @ @ - 34 , 10 + 33 , 10 @ @ public class VariableDeclarationUsageDistanceTest extends BaseCheckTestSupport { 
 " 479 : " + getCheckMessage ( clazz , msgExt , " myOption " , 7 , 3 ) , 
 " 491 : " + getCheckMessage ( clazz , msgExt , " myOption " , 6 , 3 ) , 
 } ; 
 - 
 + 
 Configuration checkConfig = builder . getCheckConfig ( " VariableDeclarationUsageDistance " ) ; 
 String filePath = builder . getFilePath ( " InputVariableDeclarationUsageDistanceCheck " ) ; 
 - 
 + 
 Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 index ced1d68 . . be5ac33 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 @ @ - 127 , 8 + 127 , 7 @ @ public class PackageNamesLoaderTest { 
 when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenReturn ( enumer ) ; 
 
 try { 
 - final Set < String > packageNames = PackageNamesLoader 
 - . getPackageNames ( classLoader ) ; 
 + PackageNamesLoader . getPackageNames ( classLoader ) ; 
 fail ( ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 @ @ - 152 , 8 + 151 , 7 @ @ public class PackageNamesLoaderTest { 
 when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenReturn ( enumer ) ; 
 
 try { 
 - final Set < String > packageNames = PackageNamesLoader 
 - . getPackageNames ( classLoader ) ; 
 + PackageNamesLoader . getPackageNames ( classLoader ) ; 
 fail ( ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java 
 index 8af77f5 . . 3605ea6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertiesExpanderTest . java 
 @ @ - 27 , 7 + 27 , 7 @ @ public class PropertiesExpanderTest { 
 
 @ Test ( expected = IllegalArgumentException . class ) 
 public void testCtorException ( ) throws CheckstyleException { 
 - PropertiesExpander object = new PropertiesExpander ( null ) ; 
 + new PropertiesExpander ( null ) ; 
 } 
 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 index c511be2 . . b46b201 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 @ @ - 25 , 7 + 25 , 6 @ @ import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 import static org . powermock . api . mockito . PowerMockito . mockStatic ; 
 import static org . powermock . api . mockito . PowerMockito . when ; 
 - import static org . powermock . api . support . membermodification . MemberMatcher . method ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 @ @ - 58 , 20 + 57 , 20 @ @ public class PropertyCacheFileTest { 
 file . setReadable ( true , false ) ; 
 file . setWritable ( false , false ) ; 
 
 - PropertyCacheFile cache = new PropertyCacheFile ( config , file . getAbsolutePath ( ) ) ; 
 + new PropertyCacheFile ( config , file . getAbsolutePath ( ) ) ; 
 } 
 
 @ Test 
 public void testCtor ( ) throws IOException { 
 try { 
 - PropertyCacheFile cache = new PropertyCacheFile ( null , " " ) ; 
 + new PropertyCacheFile ( null , " " ) ; 
 } 
 catch ( IllegalArgumentException ex ) { 
 assertEquals ( " config can not be null " , ex . getMessage ( ) ) ; 
 } 
 try { 
 Configuration config = new DefaultConfiguration ( " myname " ) ; 
 - PropertyCacheFile cache = new PropertyCacheFile ( config , null ) ; 
 + new PropertyCacheFile ( config , null ) ; 
 } 
 catch ( IllegalArgumentException ex ) { 
 assertEquals ( " fileName can not be null " , ex . getMessage ( ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 index 28b8525 . . 572715b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class XMLLoggerTest { 
 @ Test 
 public void testEncode ( ) 
 throws IOException { 
 - final XMLLogger logger = new XMLLogger ( outStream , false ) ; 
 + new XMLLogger ( outStream , false ) ; 
 final String [ ] [ ] encodings = { 
 { " < " , " & lt ; " } , 
 { " > " , " & gt ; " } , 
 @ @ - 72 , 7 + 72 , 7 @ @ public class XMLLoggerTest { 
 @ Test 
 public void testIsReference ( ) 
 throws IOException { 
 - final XMLLogger logger = new XMLLogger ( outStream , false ) ; 
 + new XMLLogger ( outStream , false ) ; 
 final String [ ] reference = { 
 " & # 0 ; " , 
 " & # x0 ; " , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 index 922d722 . . 9192678 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / DetailASTTest . java 
 @ @ - 68 , 8 + 68 , 6 @ @ public class DetailASTTest { 
 public void testSetSiblingNull ( ) { 
 final DetailAST root = new DetailAST ( ) ; 
 final DetailAST firstLevelA = new DetailAST ( ) ; 
 - final DetailAST firstLevelB = new DetailAST ( ) ; 
 - final DetailAST secondLevelA = new DetailAST ( ) ; 
 
 root . setFirstChild ( firstLevelA ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java 
 index a7e7072 . . 4f8b652 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / FileTextTest . java 
 @ @ - 35 , 7 + 35 , 7 @ @ public class FileTextTest { 
 / / just to make UT coverage 100 % 
 String charsetName = " STRANGE _ CHARSET " ; 
 try { 
 - FileText o = new FileText ( new File ( " any name " ) , charsetName ) ; 
 + new FileText ( new File ( " any name " ) , charsetName ) ; 
 fail ( ) ; 
 } 
 catch ( UnsupportedEncodingException e ) { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 index ecd438f . . ab4e105 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 @ @ - 73 , 7 + 73 , 6 @ @ public class LocalizedMessageTest { 
 
 ClassLoader classloader = mock ( ClassLoader . class ) ; 
 String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; 
 - String urlPath = " file : com / puppycrawl / tools / checkstyle / checks / coding / messages . properties " ; 
 final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; 
 when ( mockConnection . getInputStream ( ) ) . thenReturn ( 
 new ByteArrayInputStream ( new byte [ ] { } ) ) ; 
 @ @ - 92 , 7 + 91 , 6 @ @ public class LocalizedMessageTest { 
 
 ClassLoader classloader = mock ( ClassLoader . class ) ; 
 String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; 
 - String urlPath = " file : com / puppycrawl / tools / checkstyle / checks / coding / messages . properties " ; 
 
 URL url = getMockUrl ( null ) ; 
 when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java 
 index 023d2a1 . . d530ac4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / SeverityLevelCounterTest . java 
 @ @ - 26 , 7 + 26 , 7 @ @ public class SeverityLevelCounterTest { 
 
 @ Test ( expected = IllegalArgumentException . class ) 
 public void testCtorException ( ) { 
 - final SeverityLevelCounter o = new SeverityLevelCounter ( null ) ; 
 + new SeverityLevelCounter ( null ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 index 7eae052 . . 18daf6f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 @ @ - 74 , 7 + 74 , 6 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { 
 * / 
 @ Test 
 public void testNotFoundKey ( ) throws Exception { 
 - final UniquePropertiesCheck check = new UniquePropertiesCheck ( ) ; 
 final List < String > testStrings = new ArrayList < > ( 3 ) ; 
 testStrings . add ( " " ) ; 
 testStrings . add ( " 0 = 0 " ) ;
