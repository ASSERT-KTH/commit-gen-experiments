BLEU SCORE: 0.04065425428798724

TEST MSG: minor : removal of completely dead and without clear relationship to checkstyle tools
GENERATED MSG: update list of tools to include Sonar

TEST DIFF (one line): diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm <nl> index ac2a378 . . af2fdb8 100644 <nl> - - - a / src / xdocs / index . xml . vm <nl> + + + b / src / xdocs / index . xml . vm <nl> @ @ - 339 , 48 + 339 , 18 @ @ <nl> < th > Remarks < / th > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > <nl> - < td > Mark Lussier < / td > <nl> - < td > <nl> - < a href = " http : / / jetstyle . sourceforge . net / " > JetStyle Project Page < / a > <nl> - < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td / > <nl> - < td > < a href = " http : / / jcoderz . github . io / " > jCoderZ < / a > < / td > <nl> - < td > <nl> - < a href = " https : / / github . com / jCoderZ / fawkez - code - report " > fawkez - code - report < / a > <nl> - < / td > <nl> - < td > Combines multiple tools ( CheckStyle , findbugs , PMD , Cobertura , etc . ) < / td > <nl> - < / tr > <nl> - < tr > <nl> < td > < a href = " https : / / www . bluej . org / " > BlueJ < / a > < / td > <nl> < td > Rick Giles < / td > <nl> < td > < a href = " http : / / bluejcheckstyle . sourceforge . net / " > bluejcheckstyle home page < / a > < / td > <nl> < td / > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> - < td > Marco van Meegen < / td > <nl> - < td > <nl> - < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a > <nl> - < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> < td > < a href = " http : / / qalab . sourceforge . net / " > QALab < / a > < / td > <nl> < td > Benoit Xhenseval < / td > <nl> < td > < a href = " http : / / qalab . sourceforge . net / " > QALab Home Page < / a > < / td > <nl> < td > Supports tracking Checkstyle statistics over time . < / td > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > <nl> - < td > Paul Goulbourn < / td > <nl> - < td > < a href = " http : / / nbcheckstyle . sourceforge . net " > nbCheckStyle < / a > < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> < td > < a href = " https : / / vim . sourceforge . io / " > Vim editor < / a > < / td > <nl> < td > Xandy Johnson < / td > <nl> < td > < a href = " https : / / vim . sourceforge . io / scripts / script . php ? script _ id = 448 " > Plugin Homepage < / a > < / td >
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java <nl> index 2a43948 . . a730d84 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java <nl> @ @ - 80 , 7 + 80 , 7 @ @ public final class PackageNamesLoader <nl> Attributes aAtts ) <nl> throws SAXException <nl> { <nl> - if ( aQName . equals ( " package " ) ) { <nl> + if ( " package " . equals ( aQName ) ) { <nl> / / push package name <nl> final String name = aAtts . getValue ( " name " ) ; <nl> if ( name = = null ) { <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java <nl> index 5ae53d1 . . 7bbbe88 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java <nl> @ @ - 52 , 16 + 52 , 16 @ @ public class HideUtilityClassConstructorCheck extends Check <nl> boolean hasPublicCtor = false ; <nl> <nl> while ( child ! = null ) { <nl> - int type = child . getType ( ) ; <nl> + final int type = child . getType ( ) ; <nl> if ( type = = TokenTypes . METHOD _ DEF <nl> | | type = = TokenTypes . VARIABLE _ DEF ) <nl> { <nl> hasMethodOrField = true ; <nl> final DetailAST modifiers = <nl> child . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - boolean isStatic = <nl> + final boolean isStatic = <nl> modifiers . branchContains ( TokenTypes . LITERAL _ STATIC ) ; <nl> - boolean isPrivate = <nl> + final boolean isPrivate = <nl> modifiers . branchContains ( TokenTypes . LITERAL _ PRIVATE ) ; <nl> <nl> if ( ! isStatic & & ! isPrivate ) { <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / duplicates / StrictDuplicateCodeCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / duplicates / StrictDuplicateCodeCheck . java <nl> index 8b2a542 . . 6b2e833 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / duplicates / StrictDuplicateCodeCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / duplicates / StrictDuplicateCodeCheck . java <nl> @ @ - 368 , 7 + 368 , 7 @ @ public final class StrictDuplicateCodeCheck extends AbstractFileSetCheck <nl> for ( int iLine = 0 ; iLine < iBlockCount ; iLine + + ) { <nl> <nl> final int iSum = iLineBlockChecksums [ iLine ] ; <nl> - int [ ] jLines = jChecksumInfo . findLinesWithChecksum ( iSum ) ; <nl> + final int [ ] jLines = jChecksumInfo . findLinesWithChecksum ( iSum ) ; <nl> / / detailed analysis only if the iLine block occurs in jFile at all <nl> if ( jLines . length > 0 ) { <nl> findDuplicateFromLine ( aI , aJ , iLine , jLines , ignorePairs ) ; <nl> @ @ - 420 , 10 + 420 , 11 @ @ public final class StrictDuplicateCodeCheck extends AbstractFileSetCheck <nl> } <nl> } <nl> <nl> - int duplicateLines = verifiyDuplicateLines ( aI , aJ , aILine , jLine ) ; <nl> + final int duplicateLines = <nl> + verifiyDuplicateLines ( aI , aJ , aILine , jLine ) ; <nl> if ( duplicateLines > = mMin ) { <nl> reportDuplicate ( duplicateLines , aILine , mFiles . get ( aJ ) , jLine ) ; <nl> - int extend = duplicateLines - mMin ; <nl> + final int extend = duplicateLines - mMin ; <nl> for ( int i = 0 ; i < extend ; i + + ) { <nl> final int offset = ( i + 1 ) ; <nl> aIgnore . put ( aILine + offset , jLine + offset ) ; <nl> @ @ - 499 , 7 + 500 , 7 @ @ public final class StrictDuplicateCodeCheck extends AbstractFileSetCheck <nl> * / <nl> private String [ ] getTrimmed ( String [ ] aLines ) <nl> { <nl> - String [ ] ret = new String [ aLines . length ] ; <nl> + final String [ ] ret = new String [ aLines . length ] ; <nl> for ( int i = 0 ; i < ret . length ; i + + ) { <nl> ret [ i ] = aLines [ i ] . trim ( ) ; <nl> } <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / header / CrossLanguageRegexpHeaderCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / header / CrossLanguageRegexpHeaderCheck . java <nl> index 4dfea66 . . 30de51b 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / header / CrossLanguageRegexpHeaderCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / header / CrossLanguageRegexpHeaderCheck . java <nl> @ @ - 127 , 12 + 127 , 12 @ @ public final class CrossLanguageRegexpHeaderCheck extends AbstractFileSetCheck <nl> final RegexpHeaderChecker regexpHeaderChecker = <nl> new RegexpHeaderChecker ( <nl> mHeaderInfo , new FileSetCheckViolationMonitor ( ) ) ; <nl> - List < File > files = filter ( aFiles ) ; <nl> + final List < File > files = filter ( aFiles ) ; <nl> for ( final File file : files ) { <nl> final String path = file . getPath ( ) ; <nl> msgDispatcher . fireFileStarted ( path ) ; <nl> try { <nl> - String [ ] lines = Utils . getLines ( path ) ; <nl> + final String [ ] lines = Utils . getLines ( path ) ; <nl> regexpHeaderChecker . checkLines ( lines ) ; <nl> } <nl> catch ( IOException ex ) { <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java <nl> index 48787e4 . . 0ef20c2 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java <nl> @ @ - 192 , 7 + 192 , 7 @ @ public abstract class AbstractComplexityCheck <nl> * / <nl> private void leaveMethodDef ( DetailAST aAST ) <nl> { <nl> - BigInteger max = BigInteger . valueOf ( mMax ) ; <nl> + final BigInteger max = BigInteger . valueOf ( mMax ) ; <nl> if ( mCurrentValue . compareTo ( max ) > 0 ) { <nl> log ( aAST , getMessageID ( ) , mCurrentValue , max ) ; <nl> } <nl> diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SeverityMatchFilter . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SeverityMatchFilter . java <nl> index 4658609 . . d2cb420 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SeverityMatchFilter . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SeverityMatchFilter . java <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class SeverityMatchFilter <nl> / * * { @ inheritDoc } * / <nl> public boolean accept ( AuditEvent aEvent ) <nl> { <nl> - boolean result = mSeverityLevel . equals ( aEvent . getSeverityLevel ( ) ) ; <nl> + final boolean result = mSeverityLevel . equals ( aEvent . getSeverityLevel ( ) ) ; <nl> if ( mAcceptOnMatch ) { <nl> return result ; <nl> }

TEST DIFF:
diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm 
 index ac2a378 . . af2fdb8 100644 
 - - - a / src / xdocs / index . xml . vm 
 + + + b / src / xdocs / index . xml . vm 
 @ @ - 339 , 48 + 339 , 18 @ @ 
 < th > Remarks < / th > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > 
 - < td > Mark Lussier < / td > 
 - < td > 
 - < a href = " http : / / jetstyle . sourceforge . net / " > JetStyle Project Page < / a > 
 - < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td / > 
 - < td > < a href = " http : / / jcoderz . github . io / " > jCoderZ < / a > < / td > 
 - < td > 
 - < a href = " https : / / github . com / jCoderZ / fawkez - code - report " > fawkez - code - report < / a > 
 - < / td > 
 - < td > Combines multiple tools ( CheckStyle , findbugs , PMD , Cobertura , etc . ) < / td > 
 - < / tr > 
 - < tr > 
 < td > < a href = " https : / / www . bluej . org / " > BlueJ < / a > < / td > 
 < td > Rick Giles < / td > 
 < td > < a href = " http : / / bluejcheckstyle . sourceforge . net / " > bluejcheckstyle home page < / a > < / td > 
 < td / > 
 < / tr > 
 < tr > 
 - < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 - < td > Marco van Meegen < / td > 
 - < td > 
 - < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a > 
 - < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 < td > < a href = " http : / / qalab . sourceforge . net / " > QALab < / a > < / td > 
 < td > Benoit Xhenseval < / td > 
 < td > < a href = " http : / / qalab . sourceforge . net / " > QALab Home Page < / a > < / td > 
 < td > Supports tracking Checkstyle statistics over time . < / td > 
 < / tr > 
 < tr > 
 - < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > 
 - < td > Paul Goulbourn < / td > 
 - < td > < a href = " http : / / nbcheckstyle . sourceforge . net " > nbCheckStyle < / a > < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 < td > < a href = " https : / / vim . sourceforge . io / " > Vim editor < / a > < / td > 
 < td > Xandy Johnson < / td > 
 < td > < a href = " https : / / vim . sourceforge . io / scripts / script . php ? script _ id = 448 " > Plugin Homepage < / a > < / td >

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java 
 index 2a43948 . . a730d84 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / PackageNamesLoader . java 
 @ @ - 80 , 7 + 80 , 7 @ @ public final class PackageNamesLoader 
 Attributes aAtts ) 
 throws SAXException 
 { 
 - if ( aQName . equals ( " package " ) ) { 
 + if ( " package " . equals ( aQName ) ) { 
 / / push package name 
 final String name = aAtts . getValue ( " name " ) ; 
 if ( name = = null ) { 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java 
 index 5ae53d1 . . 7bbbe88 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / design / HideUtilityClassConstructorCheck . java 
 @ @ - 52 , 16 + 52 , 16 @ @ public class HideUtilityClassConstructorCheck extends Check 
 boolean hasPublicCtor = false ; 
 
 while ( child ! = null ) { 
 - int type = child . getType ( ) ; 
 + final int type = child . getType ( ) ; 
 if ( type = = TokenTypes . METHOD _ DEF 
 | | type = = TokenTypes . VARIABLE _ DEF ) 
 { 
 hasMethodOrField = true ; 
 final DetailAST modifiers = 
 child . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - boolean isStatic = 
 + final boolean isStatic = 
 modifiers . branchContains ( TokenTypes . LITERAL _ STATIC ) ; 
 - boolean isPrivate = 
 + final boolean isPrivate = 
 modifiers . branchContains ( TokenTypes . LITERAL _ PRIVATE ) ; 
 
 if ( ! isStatic & & ! isPrivate ) { 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / duplicates / StrictDuplicateCodeCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / duplicates / StrictDuplicateCodeCheck . java 
 index 8b2a542 . . 6b2e833 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / duplicates / StrictDuplicateCodeCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / duplicates / StrictDuplicateCodeCheck . java 
 @ @ - 368 , 7 + 368 , 7 @ @ public final class StrictDuplicateCodeCheck extends AbstractFileSetCheck 
 for ( int iLine = 0 ; iLine < iBlockCount ; iLine + + ) { 
 
 final int iSum = iLineBlockChecksums [ iLine ] ; 
 - int [ ] jLines = jChecksumInfo . findLinesWithChecksum ( iSum ) ; 
 + final int [ ] jLines = jChecksumInfo . findLinesWithChecksum ( iSum ) ; 
 / / detailed analysis only if the iLine block occurs in jFile at all 
 if ( jLines . length > 0 ) { 
 findDuplicateFromLine ( aI , aJ , iLine , jLines , ignorePairs ) ; 
 @ @ - 420 , 10 + 420 , 11 @ @ public final class StrictDuplicateCodeCheck extends AbstractFileSetCheck 
 } 
 } 
 
 - int duplicateLines = verifiyDuplicateLines ( aI , aJ , aILine , jLine ) ; 
 + final int duplicateLines = 
 + verifiyDuplicateLines ( aI , aJ , aILine , jLine ) ; 
 if ( duplicateLines > = mMin ) { 
 reportDuplicate ( duplicateLines , aILine , mFiles . get ( aJ ) , jLine ) ; 
 - int extend = duplicateLines - mMin ; 
 + final int extend = duplicateLines - mMin ; 
 for ( int i = 0 ; i < extend ; i + + ) { 
 final int offset = ( i + 1 ) ; 
 aIgnore . put ( aILine + offset , jLine + offset ) ; 
 @ @ - 499 , 7 + 500 , 7 @ @ public final class StrictDuplicateCodeCheck extends AbstractFileSetCheck 
 * / 
 private String [ ] getTrimmed ( String [ ] aLines ) 
 { 
 - String [ ] ret = new String [ aLines . length ] ; 
 + final String [ ] ret = new String [ aLines . length ] ; 
 for ( int i = 0 ; i < ret . length ; i + + ) { 
 ret [ i ] = aLines [ i ] . trim ( ) ; 
 } 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / header / CrossLanguageRegexpHeaderCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / header / CrossLanguageRegexpHeaderCheck . java 
 index 4dfea66 . . 30de51b 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / header / CrossLanguageRegexpHeaderCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / header / CrossLanguageRegexpHeaderCheck . java 
 @ @ - 127 , 12 + 127 , 12 @ @ public final class CrossLanguageRegexpHeaderCheck extends AbstractFileSetCheck 
 final RegexpHeaderChecker regexpHeaderChecker = 
 new RegexpHeaderChecker ( 
 mHeaderInfo , new FileSetCheckViolationMonitor ( ) ) ; 
 - List < File > files = filter ( aFiles ) ; 
 + final List < File > files = filter ( aFiles ) ; 
 for ( final File file : files ) { 
 final String path = file . getPath ( ) ; 
 msgDispatcher . fireFileStarted ( path ) ; 
 try { 
 - String [ ] lines = Utils . getLines ( path ) ; 
 + final String [ ] lines = Utils . getLines ( path ) ; 
 regexpHeaderChecker . checkLines ( lines ) ; 
 } 
 catch ( IOException ex ) { 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java 
 index 48787e4 . . 0ef20c2 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractComplexityCheck . java 
 @ @ - 192 , 7 + 192 , 7 @ @ public abstract class AbstractComplexityCheck 
 * / 
 private void leaveMethodDef ( DetailAST aAST ) 
 { 
 - BigInteger max = BigInteger . valueOf ( mMax ) ; 
 + final BigInteger max = BigInteger . valueOf ( mMax ) ; 
 if ( mCurrentValue . compareTo ( max ) > 0 ) { 
 log ( aAST , getMessageID ( ) , mCurrentValue , max ) ; 
 } 
 diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SeverityMatchFilter . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SeverityMatchFilter . java 
 index 4658609 . . d2cb420 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SeverityMatchFilter . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / filters / SeverityMatchFilter . java 
 @ @ - 64 , 7 + 64 , 7 @ @ public class SeverityMatchFilter 
 / * * { @ inheritDoc } * / 
 public boolean accept ( AuditEvent aEvent ) 
 { 
 - boolean result = mSeverityLevel . equals ( aEvent . getSeverityLevel ( ) ) ; 
 + final boolean result = mSeverityLevel . equals ( aEvent . getSeverityLevel ( ) ) ; 
 if ( mAcceptOnMatch ) { 
 return result ; 
 }
