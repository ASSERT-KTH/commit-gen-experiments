BLEU SCORE: 0.6828335704817795

TEST MSG: Issue # 3496 : Enforce ReturnCount max = 1 in com . puppycrawl . tools . checkstyle . checks . javadoc
GENERATED MSG: Issue # 3496 : Enforce ReturnCount max = 1 in com . puppycrawl . tools . checkstyle . checks and com . puppycrawl . tools . checkstyle

TEST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 2d23421 . . a7a8c44 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 92 , 5 + 92 , 5 @ @ <nl> <nl> < ! - - Until https : / / github . com / checkstyle / checkstyle / issues / 3496 - - > <nl> < suppress id = " returnCountMaxOne " files = " . * [ \ \ / ] ant [ \ \ / ] | . * [ \ \ / ] filters [ \ \ / ] | . * [ \ \ / ] api [ \ \ / ] | . * [ \ \ / ] annotation [ \ \ / ] | <nl> - | . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] | . * [ \ \ / ] javadoc [ \ \ / ] " / > <nl> + | . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] " / > <nl> < / suppressions > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 9de035b . . 4fc35fa 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 365 , 6 + 365 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * @ return Some javadoc . <nl> * / <nl> private boolean hasAllowedAnnotations ( DetailAST methodDef ) { <nl> + boolean result = false ; <nl> final DetailAST modifiersNode = methodDef . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> DetailAST annotationNode = modifiersNode . findFirstToken ( TokenTypes . ANNOTATION ) ; <nl> while ( annotationNode ! = null & & annotationNode . getType ( ) = = TokenTypes . ANNOTATION ) { <nl> @ @ - 374 , 11 + 375 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> . findFirstToken ( TokenTypes . IDENT ) ; <nl> } <nl> if ( allowedAnnotations . contains ( identNode . getText ( ) ) ) { <nl> - return true ; <nl> + result = true ; <nl> + break ; <nl> } <nl> annotationNode = annotationNode . getNextSibling ( ) ; <nl> } <nl> - return false ; <nl> + return result ; <nl> } <nl> <nl> / * * <nl> @ @ - 445 , 16 + 447 , 17 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * @ return true if given method name matches the regex . <nl> * / <nl> private boolean matchesSkipRegex ( DetailAST methodDef ) { <nl> + boolean result = false ; <nl> if ( ignoreMethodNamesRegex ! = null ) { <nl> final DetailAST ident = methodDef . findFirstToken ( TokenTypes . IDENT ) ; <nl> final String methodName = ident . getText ( ) ; <nl> <nl> final Matcher matcher = ignoreMethodNamesRegex . matcher ( methodName ) ; <nl> if ( matcher . matches ( ) ) { <nl> - return true ; <nl> + result = true ; <nl> } <nl> } <nl> - return false ; <nl> + return result ; <nl> } <nl> <nl> / * * <nl> @ @ - 517 , 20 + 520 , 20 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * @ param tags the list of Javadoc tags associated with the construct <nl> * @ return true if the construct has a short circuit tag . <nl> * / <nl> - private boolean hasShortCircuitTag ( final DetailAST ast , <nl> - final List < JavadocTag > tags ) { <nl> + private boolean hasShortCircuitTag ( final DetailAST ast , final List < JavadocTag > tags ) { <nl> + boolean result = true ; <nl> / / Check if it contains { @ inheritDoc } tag <nl> - if ( tags . size ( ) ! = 1 <nl> - | | ! tags . get ( 0 ) . isInheritDocTag ( ) ) { <nl> - return false ; <nl> + if ( tags . size ( ) = = 1 <nl> + & & tags . get ( 0 ) . isInheritDocTag ( ) ) { <nl> + / / Invalid if private , a constructor , or a static method <nl> + if ( ! JavadocTagInfo . INHERIT _ DOC . isValidOn ( ast ) ) { <nl> + log ( ast , MSG _ INVALID _ INHERIT _ DOC ) ; <nl> + } <nl> } <nl> - <nl> - / / Invalid if private , a constructor , or a static method <nl> - if ( ! JavadocTagInfo . INHERIT _ DOC . isValidOn ( ast ) ) { <nl> - log ( ast , MSG _ INVALID _ INHERIT _ DOC ) ; <nl> + else { <nl> + result = false ; <nl> } <nl> - <nl> - return true ; <nl> + return result ; <nl> } <nl> <nl> / * * <nl> @ @ - 543 , 14 + 546 , 15 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * / <nl> private static Scope calculateScope ( final DetailAST ast ) { <nl> final DetailAST mods = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - final Scope declaredScope = ScopeUtils . getScopeFromMods ( mods ) ; <nl> + final Scope scope ; <nl> <nl> if ( ScopeUtils . isInInterfaceOrAnnotationBlock ( ast ) ) { <nl> - return Scope . PUBLIC ; <nl> + scope = Scope . PUBLIC ; <nl> } <nl> else { <nl> - return declaredScope ; <nl> + scope = ScopeUtils . getScopeFromMods ( mods ) ; <nl> } <nl> + return scope ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocNodeImpl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocNodeImpl . java <nl> index 1e8a14d . . 6067020 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocNodeImpl . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocNodeImpl . java <nl> @ @ - 94 , 12 + 94 , 11 @ @ public class JavadocNodeImpl implements DetailNode { <nl> <nl> @ Override <nl> public DetailNode [ ] getChildren ( ) { <nl> - if ( children = = null ) { <nl> - return EMPTY _ DETAIL _ NODE _ ARRAY ; <nl> - } <nl> - else { <nl> - return Arrays . copyOf ( children , children . length ) ; <nl> + DetailNode [ ] nodeChildren = EMPTY _ DETAIL _ NODE _ ARRAY ; <nl> + if ( children ! = null ) { <nl> + nodeChildren = Arrays . copyOf ( children , children . length ) ; <nl> } <nl> + return nodeChildren ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java <nl> index 127af77 . . 2de211f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java <nl> @ @ - 194 , 17 + 194 , 18 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { <nl> * @ return true , if line is empty line . <nl> * / <nl> private static boolean isEmptyLine ( DetailNode newLine ) { <nl> + boolean result = false ; <nl> DetailNode previousSibling = JavadocUtils . getPreviousSibling ( newLine ) ; <nl> - if ( previousSibling = = null <nl> - | | previousSibling . getParent ( ) . getType ( ) ! = JavadocTokenTypes . JAVADOC ) { <nl> - return false ; <nl> - } <nl> - if ( previousSibling . getType ( ) = = JavadocTokenTypes . TEXT <nl> - & & previousSibling . getText ( ) . trim ( ) . isEmpty ( ) ) { <nl> - previousSibling = JavadocUtils . getPreviousSibling ( previousSibling ) ; <nl> + if ( previousSibling ! = null <nl> + & & previousSibling . getParent ( ) . getType ( ) = = JavadocTokenTypes . JAVADOC ) { <nl> + if ( previousSibling . getType ( ) = = JavadocTokenTypes . TEXT <nl> + & & previousSibling . getText ( ) . trim ( ) . isEmpty ( ) ) { <nl> + previousSibling = JavadocUtils . getPreviousSibling ( previousSibling ) ; <nl> + } <nl> + result = previousSibling ! = null <nl> + & & previousSibling . getType ( ) = = JavadocTokenTypes . LEADING _ ASTERISK ; <nl> } <nl> - return previousSibling ! = null <nl> - & & previousSibling . getType ( ) = = JavadocTokenTypes . LEADING _ ASTERISK ; <nl> + return result ; <nl> } <nl> <nl> / * * <nl> @ @ - 213 , 6 + 214 , 7 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { <nl> * @ return true , if line with paragraph tag is first line in javadoc . <nl> * / <nl> private static boolean isFirstParagraph ( DetailNode paragraphTag ) { <nl> + boolean result = true ; <nl> DetailNode previousNode = JavadocUtils . getPreviousSibling ( paragraphTag ) ; <nl> while ( previousNode ! = null ) { <nl> if ( previousNode . getType ( ) = = JavadocTokenTypes . TEXT <nl> @ @ - 220 , 11 + 222 , 12 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { <nl> | | previousNode . getType ( ) ! = JavadocTokenTypes . LEADING _ ASTERISK <nl> & & previousNode . getType ( ) ! = JavadocTokenTypes . NEWLINE <nl> & & previousNode . getType ( ) ! = JavadocTokenTypes . TEXT ) { <nl> - return false ; <nl> + result = false ; <nl> + break ; <nl> } <nl> previousNode = JavadocUtils . getPreviousSibling ( previousNode ) ; <nl> } <nl> - return true ; <nl> + return result ; <nl> } <nl> <nl> / * * <nl> @ @ - 250 , 16 + 253 , 18 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { <nl> * @ return true , if NEWLINE node is a last node in javadoc . <nl> * / <nl> private static boolean isLastEmptyLine ( DetailNode newLine ) { <nl> + boolean result = true ; <nl> DetailNode nextNode = JavadocUtils . getNextSibling ( newLine ) ; <nl> while ( nextNode ! = null & & nextNode . getType ( ) ! = JavadocTokenTypes . JAVADOC _ TAG ) { <nl> if ( nextNode . getType ( ) = = JavadocTokenTypes . TEXT <nl> & & ! nextNode . getText ( ) . trim ( ) . isEmpty ( ) <nl> | | nextNode . getType ( ) = = JavadocTokenTypes . HTML _ ELEMENT ) { <nl> - return false ; <nl> + result = false ; <nl> + break ; <nl> } <nl> nextNode = JavadocUtils . getNextSibling ( nextNode ) ; <nl> } <nl> - return true ; <nl> + return result ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java <nl> index ad33346 . . 4c55ba3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java <nl> @ @ - 129 , 13 + 129 , 15 @ @ public class JavadocTagContinuationIndentationCheck extends AbstractJavadocCheck <nl> * @ return true , if description node is a description of in - line tag . <nl> * / <nl> private static boolean isInlineDescription ( DetailNode description ) { <nl> + boolean isInline = false ; <nl> DetailNode inlineTag = description . getParent ( ) ; <nl> while ( inlineTag ! = null ) { <nl> if ( inlineTag . getType ( ) = = JavadocTokenTypes . JAVADOC _ INLINE _ TAG ) { <nl> - return true ; <nl> + isInline = true ; <nl> + break ; <nl> } <nl> inlineTag = inlineTag . getParent ( ) ; <nl> } <nl> - return false ; <nl> + return isInline ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java <nl> index 5aab1cf . . 719eaf0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java <nl> @ @ - 130 , 31 + 130 , 21 @ @ public class JavadocVariableCheck <nl> * @ return whether we should check a given node . <nl> * / <nl> private boolean shouldCheck ( final DetailAST ast ) { <nl> - if ( ScopeUtils . isInCodeBlock ( ast ) | | isIgnored ( ast ) ) { <nl> - return false ; <nl> - } <nl> - <nl> - final Scope customScope ; <nl> - if ( ast . getType ( ) = = TokenTypes . ENUM _ CONSTANT _ DEF ) { <nl> - customScope = Scope . PUBLIC ; <nl> - } <nl> - else { <nl> - final DetailAST mods = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> - final Scope declaredScope = ScopeUtils . getScopeFromMods ( mods ) ; <nl> - <nl> - if ( ScopeUtils . isInInterfaceOrAnnotationBlock ( ast ) ) { <nl> - customScope = Scope . PUBLIC ; <nl> + boolean result = false ; <nl> + if ( ! ScopeUtils . isInCodeBlock ( ast ) & & ! isIgnored ( ast ) ) { <nl> + Scope customScope = Scope . PUBLIC ; <nl> + if ( ast . getType ( ) ! = TokenTypes . ENUM _ CONSTANT _ DEF <nl> + & & ! ScopeUtils . isInInterfaceOrAnnotationBlock ( ast ) ) { <nl> + final DetailAST mods = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> + customScope = ScopeUtils . getScopeFromMods ( mods ) ; <nl> } <nl> - else { <nl> - customScope = declaredScope ; <nl> - } <nl> - } <nl> <nl> - final Scope surroundingScope = ScopeUtils . getSurroundingScope ( ast ) ; <nl> - <nl> - return customScope . isIn ( scope ) & & surroundingScope . isIn ( scope ) <nl> - & & ( excludeScope = = null <nl> - | | ! customScope . isIn ( excludeScope ) <nl> - | | ! surroundingScope . isIn ( excludeScope ) ) ; <nl> + final Scope surroundingScope = ScopeUtils . getSurroundingScope ( ast ) ; <nl> + result = customScope . isIn ( scope ) & & surroundingScope . isIn ( scope ) <nl> + & & ( excludeScope = = null <nl> + | | ! customScope . isIn ( excludeScope ) <nl> + | | ! surroundingScope . isIn ( excludeScope ) ) ; <nl> + } <nl> + return result ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> index a35a341 . . 6b4d4bb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java <nl> @ @ - 169 , 28 + 169 , 29 @ @ class TagParser { <nl> * @ return id for given tag <nl> * / <nl> private static String getTagId ( String [ ] javadocText , Point tagStart ) { <nl> + String tagId = " " ; <nl> int column = tagStart . getColumnNo ( ) + 1 ; <nl> String text = javadocText [ tagStart . getLineNo ( ) ] ; <nl> - if ( column > = text . length ( ) ) { <nl> - return " " ; <nl> - } <nl> + if ( column < text . length ( ) ) { <nl> <nl> - if ( text . charAt ( column ) = = ' / ' ) { <nl> - column + + ; <nl> - } <nl> + if ( text . charAt ( column ) = = ' / ' ) { <nl> + column + + ; <nl> + } <nl> <nl> - text = text . substring ( column ) . trim ( ) ; <nl> - int position = 0 ; <nl> + text = text . substring ( column ) . trim ( ) ; <nl> + int position = 0 ; <nl> <nl> - / / Character . isJavaIdentifier . . . may not be a valid HTML <nl> - / / identifier but is valid for generics <nl> - while ( position < text . length ( ) <nl> - & & ( Character . isJavaIdentifierStart ( text . charAt ( position ) ) <nl> - | | Character . isJavaIdentifierPart ( text . charAt ( position ) ) ) ) { <nl> - position + + ; <nl> - } <nl> + / / Character . isJavaIdentifier . . . may not be a valid HTML <nl> + / / identifier but is valid for generics <nl> + while ( position < text . length ( ) <nl> + & & ( Character . isJavaIdentifierStart ( text . charAt ( position ) ) <nl> + | | Character . isJavaIdentifierPart ( text . charAt ( position ) ) ) ) { <nl> + position + + ; <nl> + } <nl> <nl> - return text . substring ( 0 , position ) ; <nl> + tagId = text . substring ( 0 , position ) ; <nl> + } <nl> + return tagId ; <nl> } <nl> <nl> / * *
NEAREST DIFF (one line): diff - - git a / . ci / run - link - check - plugin . sh b / . ci / run - link - check - plugin . sh <nl> index ce27f18 . . 0090d36 100755 <nl> - - - a / . ci / run - link - check - plugin . sh <nl> + + + b / . ci / run - link - check - plugin . sh <nl> @ @ - 7 , 6 + 7 , 7 @ @ mvn - - version <nl> curl - I https : / / sourceforge . net / projects / checkstyle / <nl> mvn clean site - Dcheckstyle . ant . skip = true - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true - Dcheckstyle . skip = true <nl> echo " - - - - - - - - - - - - grep of linkcheck . html - - BEGIN " <nl> + # " grep . . . | cat " is required command is running in " set - e " mode and grep could return exit code 1 if nothing is matching <nl> grep externalLink target / site / linkcheck . html | cat <nl> echo " - - - - - - - - - - - - grep of linkcheck . html - - END " <nl> RESULT = $ ( grep externalLink target / site / linkcheck . html | grep - v ' Read timed out ' | wc - l )

TEST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 2d23421 . . a7a8c44 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 92 , 5 + 92 , 5 @ @ 
 
 < ! - - Until https : / / github . com / checkstyle / checkstyle / issues / 3496 - - > 
 < suppress id = " returnCountMaxOne " files = " . * [ \ \ / ] ant [ \ \ / ] | . * [ \ \ / ] filters [ \ \ / ] | . * [ \ \ / ] api [ \ \ / ] | . * [ \ \ / ] annotation [ \ \ / ] | 
 - | . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] | . * [ \ \ / ] javadoc [ \ \ / ] " / > 
 + | . * [ \ \ / ] coding [ \ \ / ] | . * [ \ \ / ] indentation [ \ \ / ] " / > 
 < / suppressions > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 9de035b . . 4fc35fa 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 365 , 6 + 365 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * @ return Some javadoc . 
 * / 
 private boolean hasAllowedAnnotations ( DetailAST methodDef ) { 
 + boolean result = false ; 
 final DetailAST modifiersNode = methodDef . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 DetailAST annotationNode = modifiersNode . findFirstToken ( TokenTypes . ANNOTATION ) ; 
 while ( annotationNode ! = null & & annotationNode . getType ( ) = = TokenTypes . ANNOTATION ) { 
 @ @ - 374 , 11 + 375 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 . findFirstToken ( TokenTypes . IDENT ) ; 
 } 
 if ( allowedAnnotations . contains ( identNode . getText ( ) ) ) { 
 - return true ; 
 + result = true ; 
 + break ; 
 } 
 annotationNode = annotationNode . getNextSibling ( ) ; 
 } 
 - return false ; 
 + return result ; 
 } 
 
 / * * 
 @ @ - 445 , 16 + 447 , 17 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * @ return true if given method name matches the regex . 
 * / 
 private boolean matchesSkipRegex ( DetailAST methodDef ) { 
 + boolean result = false ; 
 if ( ignoreMethodNamesRegex ! = null ) { 
 final DetailAST ident = methodDef . findFirstToken ( TokenTypes . IDENT ) ; 
 final String methodName = ident . getText ( ) ; 
 
 final Matcher matcher = ignoreMethodNamesRegex . matcher ( methodName ) ; 
 if ( matcher . matches ( ) ) { 
 - return true ; 
 + result = true ; 
 } 
 } 
 - return false ; 
 + return result ; 
 } 
 
 / * * 
 @ @ - 517 , 20 + 520 , 20 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * @ param tags the list of Javadoc tags associated with the construct 
 * @ return true if the construct has a short circuit tag . 
 * / 
 - private boolean hasShortCircuitTag ( final DetailAST ast , 
 - final List < JavadocTag > tags ) { 
 + private boolean hasShortCircuitTag ( final DetailAST ast , final List < JavadocTag > tags ) { 
 + boolean result = true ; 
 / / Check if it contains { @ inheritDoc } tag 
 - if ( tags . size ( ) ! = 1 
 - | | ! tags . get ( 0 ) . isInheritDocTag ( ) ) { 
 - return false ; 
 + if ( tags . size ( ) = = 1 
 + & & tags . get ( 0 ) . isInheritDocTag ( ) ) { 
 + / / Invalid if private , a constructor , or a static method 
 + if ( ! JavadocTagInfo . INHERIT _ DOC . isValidOn ( ast ) ) { 
 + log ( ast , MSG _ INVALID _ INHERIT _ DOC ) ; 
 + } 
 } 
 - 
 - / / Invalid if private , a constructor , or a static method 
 - if ( ! JavadocTagInfo . INHERIT _ DOC . isValidOn ( ast ) ) { 
 - log ( ast , MSG _ INVALID _ INHERIT _ DOC ) ; 
 + else { 
 + result = false ; 
 } 
 - 
 - return true ; 
 + return result ; 
 } 
 
 / * * 
 @ @ - 543 , 14 + 546 , 15 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * / 
 private static Scope calculateScope ( final DetailAST ast ) { 
 final DetailAST mods = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - final Scope declaredScope = ScopeUtils . getScopeFromMods ( mods ) ; 
 + final Scope scope ; 
 
 if ( ScopeUtils . isInInterfaceOrAnnotationBlock ( ast ) ) { 
 - return Scope . PUBLIC ; 
 + scope = Scope . PUBLIC ; 
 } 
 else { 
 - return declaredScope ; 
 + scope = ScopeUtils . getScopeFromMods ( mods ) ; 
 } 
 + return scope ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocNodeImpl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocNodeImpl . java 
 index 1e8a14d . . 6067020 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocNodeImpl . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocNodeImpl . java 
 @ @ - 94 , 12 + 94 , 11 @ @ public class JavadocNodeImpl implements DetailNode { 
 
 @ Override 
 public DetailNode [ ] getChildren ( ) { 
 - if ( children = = null ) { 
 - return EMPTY _ DETAIL _ NODE _ ARRAY ; 
 - } 
 - else { 
 - return Arrays . copyOf ( children , children . length ) ; 
 + DetailNode [ ] nodeChildren = EMPTY _ DETAIL _ NODE _ ARRAY ; 
 + if ( children ! = null ) { 
 + nodeChildren = Arrays . copyOf ( children , children . length ) ; 
 } 
 + return nodeChildren ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java 
 index 127af77 . . 2de211f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java 
 @ @ - 194 , 17 + 194 , 18 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { 
 * @ return true , if line is empty line . 
 * / 
 private static boolean isEmptyLine ( DetailNode newLine ) { 
 + boolean result = false ; 
 DetailNode previousSibling = JavadocUtils . getPreviousSibling ( newLine ) ; 
 - if ( previousSibling = = null 
 - | | previousSibling . getParent ( ) . getType ( ) ! = JavadocTokenTypes . JAVADOC ) { 
 - return false ; 
 - } 
 - if ( previousSibling . getType ( ) = = JavadocTokenTypes . TEXT 
 - & & previousSibling . getText ( ) . trim ( ) . isEmpty ( ) ) { 
 - previousSibling = JavadocUtils . getPreviousSibling ( previousSibling ) ; 
 + if ( previousSibling ! = null 
 + & & previousSibling . getParent ( ) . getType ( ) = = JavadocTokenTypes . JAVADOC ) { 
 + if ( previousSibling . getType ( ) = = JavadocTokenTypes . TEXT 
 + & & previousSibling . getText ( ) . trim ( ) . isEmpty ( ) ) { 
 + previousSibling = JavadocUtils . getPreviousSibling ( previousSibling ) ; 
 + } 
 + result = previousSibling ! = null 
 + & & previousSibling . getType ( ) = = JavadocTokenTypes . LEADING _ ASTERISK ; 
 } 
 - return previousSibling ! = null 
 - & & previousSibling . getType ( ) = = JavadocTokenTypes . LEADING _ ASTERISK ; 
 + return result ; 
 } 
 
 / * * 
 @ @ - 213 , 6 + 214 , 7 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { 
 * @ return true , if line with paragraph tag is first line in javadoc . 
 * / 
 private static boolean isFirstParagraph ( DetailNode paragraphTag ) { 
 + boolean result = true ; 
 DetailNode previousNode = JavadocUtils . getPreviousSibling ( paragraphTag ) ; 
 while ( previousNode ! = null ) { 
 if ( previousNode . getType ( ) = = JavadocTokenTypes . TEXT 
 @ @ - 220 , 11 + 222 , 12 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { 
 | | previousNode . getType ( ) ! = JavadocTokenTypes . LEADING _ ASTERISK 
 & & previousNode . getType ( ) ! = JavadocTokenTypes . NEWLINE 
 & & previousNode . getType ( ) ! = JavadocTokenTypes . TEXT ) { 
 - return false ; 
 + result = false ; 
 + break ; 
 } 
 previousNode = JavadocUtils . getPreviousSibling ( previousNode ) ; 
 } 
 - return true ; 
 + return result ; 
 } 
 
 / * * 
 @ @ - 250 , 16 + 253 , 18 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { 
 * @ return true , if NEWLINE node is a last node in javadoc . 
 * / 
 private static boolean isLastEmptyLine ( DetailNode newLine ) { 
 + boolean result = true ; 
 DetailNode nextNode = JavadocUtils . getNextSibling ( newLine ) ; 
 while ( nextNode ! = null & & nextNode . getType ( ) ! = JavadocTokenTypes . JAVADOC _ TAG ) { 
 if ( nextNode . getType ( ) = = JavadocTokenTypes . TEXT 
 & & ! nextNode . getText ( ) . trim ( ) . isEmpty ( ) 
 | | nextNode . getType ( ) = = JavadocTokenTypes . HTML _ ELEMENT ) { 
 - return false ; 
 + result = false ; 
 + break ; 
 } 
 nextNode = JavadocUtils . getNextSibling ( nextNode ) ; 
 } 
 - return true ; 
 + return result ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java 
 index ad33346 . . 4c55ba3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java 
 @ @ - 129 , 13 + 129 , 15 @ @ public class JavadocTagContinuationIndentationCheck extends AbstractJavadocCheck 
 * @ return true , if description node is a description of in - line tag . 
 * / 
 private static boolean isInlineDescription ( DetailNode description ) { 
 + boolean isInline = false ; 
 DetailNode inlineTag = description . getParent ( ) ; 
 while ( inlineTag ! = null ) { 
 if ( inlineTag . getType ( ) = = JavadocTokenTypes . JAVADOC _ INLINE _ TAG ) { 
 - return true ; 
 + isInline = true ; 
 + break ; 
 } 
 inlineTag = inlineTag . getParent ( ) ; 
 } 
 - return false ; 
 + return isInline ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java 
 index 5aab1cf . . 719eaf0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java 
 @ @ - 130 , 31 + 130 , 21 @ @ public class JavadocVariableCheck 
 * @ return whether we should check a given node . 
 * / 
 private boolean shouldCheck ( final DetailAST ast ) { 
 - if ( ScopeUtils . isInCodeBlock ( ast ) | | isIgnored ( ast ) ) { 
 - return false ; 
 - } 
 - 
 - final Scope customScope ; 
 - if ( ast . getType ( ) = = TokenTypes . ENUM _ CONSTANT _ DEF ) { 
 - customScope = Scope . PUBLIC ; 
 - } 
 - else { 
 - final DetailAST mods = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 - final Scope declaredScope = ScopeUtils . getScopeFromMods ( mods ) ; 
 - 
 - if ( ScopeUtils . isInInterfaceOrAnnotationBlock ( ast ) ) { 
 - customScope = Scope . PUBLIC ; 
 + boolean result = false ; 
 + if ( ! ScopeUtils . isInCodeBlock ( ast ) & & ! isIgnored ( ast ) ) { 
 + Scope customScope = Scope . PUBLIC ; 
 + if ( ast . getType ( ) ! = TokenTypes . ENUM _ CONSTANT _ DEF 
 + & & ! ScopeUtils . isInInterfaceOrAnnotationBlock ( ast ) ) { 
 + final DetailAST mods = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 + customScope = ScopeUtils . getScopeFromMods ( mods ) ; 
 } 
 - else { 
 - customScope = declaredScope ; 
 - } 
 - } 
 
 - final Scope surroundingScope = ScopeUtils . getSurroundingScope ( ast ) ; 
 - 
 - return customScope . isIn ( scope ) & & surroundingScope . isIn ( scope ) 
 - & & ( excludeScope = = null 
 - | | ! customScope . isIn ( excludeScope ) 
 - | | ! surroundingScope . isIn ( excludeScope ) ) ; 
 + final Scope surroundingScope = ScopeUtils . getSurroundingScope ( ast ) ; 
 + result = customScope . isIn ( scope ) & & surroundingScope . isIn ( scope ) 
 + & & ( excludeScope = = null 
 + | | ! customScope . isIn ( excludeScope ) 
 + | | ! surroundingScope . isIn ( excludeScope ) ) ; 
 + } 
 + return result ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 index a35a341 . . 6b4d4bb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / TagParser . java 
 @ @ - 169 , 28 + 169 , 29 @ @ class TagParser { 
 * @ return id for given tag 
 * / 
 private static String getTagId ( String [ ] javadocText , Point tagStart ) { 
 + String tagId = " " ; 
 int column = tagStart . getColumnNo ( ) + 1 ; 
 String text = javadocText [ tagStart . getLineNo ( ) ] ; 
 - if ( column > = text . length ( ) ) { 
 - return " " ; 
 - } 
 + if ( column < text . length ( ) ) { 
 
 - if ( text . charAt ( column ) = = ' / ' ) { 
 - column + + ; 
 - } 
 + if ( text . charAt ( column ) = = ' / ' ) { 
 + column + + ; 
 + } 
 
 - text = text . substring ( column ) . trim ( ) ; 
 - int position = 0 ; 
 + text = text . substring ( column ) . trim ( ) ; 
 + int position = 0 ; 
 
 - / / Character . isJavaIdentifier . . . may not be a valid HTML 
 - / / identifier but is valid for generics 
 - while ( position < text . length ( ) 
 - & & ( Character . isJavaIdentifierStart ( text . charAt ( position ) ) 
 - | | Character . isJavaIdentifierPart ( text . charAt ( position ) ) ) ) { 
 - position + + ; 
 - } 
 + / / Character . isJavaIdentifier . . . may not be a valid HTML 
 + / / identifier but is valid for generics 
 + while ( position < text . length ( ) 
 + & & ( Character . isJavaIdentifierStart ( text . charAt ( position ) ) 
 + | | Character . isJavaIdentifierPart ( text . charAt ( position ) ) ) ) { 
 + position + + ; 
 + } 
 
 - return text . substring ( 0 , position ) ; 
 + tagId = text . substring ( 0 , position ) ; 
 + } 
 + return tagId ; 
 } 
 
 / * *

NEAREST DIFF:
diff - - git a / . ci / run - link - check - plugin . sh b / . ci / run - link - check - plugin . sh 
 index ce27f18 . . 0090d36 100755 
 - - - a / . ci / run - link - check - plugin . sh 
 + + + b / . ci / run - link - check - plugin . sh 
 @ @ - 7 , 6 + 7 , 7 @ @ mvn - - version 
 curl - I https : / / sourceforge . net / projects / checkstyle / 
 mvn clean site - Dcheckstyle . ant . skip = true - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true - Dcheckstyle . skip = true 
 echo " - - - - - - - - - - - - grep of linkcheck . html - - BEGIN " 
 + # " grep . . . | cat " is required command is running in " set - e " mode and grep could return exit code 1 if nothing is matching 
 grep externalLink target / site / linkcheck . html | cat 
 echo " - - - - - - - - - - - - grep of linkcheck . html - - END " 
 RESULT = $ ( grep externalLink target / site / linkcheck . html | grep - v ' Read timed out ' | wc - l )
