BLEU SCORE: 0.010009398039350843

TEST MSG: infra : appveyor can now execute any tasks we want in CI , defined in Matrix . Powershell can not be used to run actual command as it works badly in case some nativecommand do error - output as ANTLR do , so we have to use cmd
GENERATED MSG: reorganization of build sequence to speedup build failure , as verify stage is most common mistakes

TEST DIFF (one line): diff - - git a / appveyor . yml b / appveyor . yml <nl> index da5f4e7 . . f0a0f6d 100644 <nl> - - - a / appveyor . yml <nl> + + + b / appveyor . yml <nl> @ @ - 23 , 32 + 23 , 75 @ @ install : <nl> - cmd : git config - - global core . autocrlf <nl> - cmd : mvn - - version <nl> - cmd : java - version <nl> + - cmd : ' % CYG _ BIN % - qnNdO - R % CYG _ ROOT % - s % CYG _ MIRROR % - l % CYG _ CACHE % - P hg ' <nl> + <nl> cache : <nl> - C : \ maven \ <nl> - C : \ Users \ appveyor \ . m2 <nl> + - C : \ cygwin \ var \ cache \ setup <nl> <nl> matrix : <nl> fast _ finish : true <nl> <nl> environment : <nl> + global : <nl> + CYG _ BIN : C : \ cygwin \ setup - x86 . exe <nl> + CYG _ ROOT : C : \ cygwin <nl> + CYG _ CACHE : C : \ cygwin \ var \ cache \ setup <nl> + CYG _ MIRROR : http : / / cygwin . mirror . constant . com <nl> + CMD1 : " " <nl> + CMD2 : " " <nl> + CMD3 : " " <nl> + CMD4 : " " <nl> + CMD5 : " " <nl> + CMD6 : " " <nl> + CMD7 : " " <nl> + CMD8 : " " <nl> + CMD9 : " " <nl> + CMD10 : " " <nl> + # We do matrix as Appveyor could fail to finish simple " mvn verify " <nl> + # if he loose maven cache ( happens from time to time ) <nl> matrix : <nl> # checkstyle and sevntu . checkstyle <nl> - JAVA _ HOME : C : \ Program Files \ Java \ jdk1 . 8 . 0 <nl> - CMD : mvn - e verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true <nl> + DESC : " checkstyle and sevntu . checkstyle " <nl> + CMD1 : " mvn - e verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " <nl> # verify without checkstyle <nl> - JAVA _ HOME : C : \ Program Files \ Java \ jdk1 . 8 . 0 <nl> - CMD : mvn - e verify - Dcheckstyle . ant . skip = true <nl> + DESC : " verify without checkstyle " <nl> + CMD1 : " mvn - e verify - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true " <nl> # site , without verify <nl> - JAVA _ HOME : C : \ Program Files \ Java \ jdk1 . 8 . 0 <nl> - CMD : mvn - e site - Dlinkcheck . skip = true - Dmaven . javadoc . skip = true - DskipTests - DskipITs - Dcobertura . skip = true - Dpmd . skip = true - Dfindbugs . skip = true - Dcheckstyle . ant . skip = true <nl> + DESC : " site , without verify " <nl> + CMD1 : " mvn - e site - Dlinkcheck . skip = true - Dmaven . javadoc . skip = true - DskipTests " <nl> + CMD2 : " - DskipITs - Dcobertura . skip = true - Dpmd . skip = true - Dfindbugs . skip = true " <nl> + CMD3 : " - Dcheckstyle . ant . skip = true " <nl> + # checkstyle - tester <nl> + - JAVA _ HOME : C : \ Program Files \ Java \ jdk1 . 8 . 0 <nl> + DESC : " checkstyle - tester on guava " <nl> + CMD1 : " mvn clean install - DskipTests - DskipITs - Dcobertura . skip = true " <nl> + CMD2 : " - Dpmd . skip = true - Dfindbugs . skip = true - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true " <nl> + CMD3 : " & & git clone - q - - depth = 10 - - branch = master " <nl> + CMD4 : " https : / / github . com / checkstyle / contribution C : \ \ projects \ \ checkstyle \ \ contribution " <nl> + CMD5 : " & & cd contribution \ \ checkstyle - tester " <nl> + CMD6 : " & & move / Y projects - for - travis . properties projects - to - test - on . properties " <nl> + CMD7 : " & & C : \ \ cygwin \ \ bin \ \ bash . exe - lc " <nl> + CMD8 : " \ " cd $ APPVEYOR _ BUILD _ FOLDER / contribution / checkstyle - tester / ; " <nl> + CMD9 : " . / launch . sh - Dcheckstyle . config . location = checks - nonjavadoc - error . xml \ " " <nl> <nl> build _ script : <nl> - - ps : $ PSVersionTable <nl> - - ps : $ cmdline = get - content env : CMD <nl> - - ps : $ cmdline = " try { ` $ ErrorActionPreference = ' Stop ' ; $ ( $ cmdline ) ; if ( ` $ ? ) { } else { Exit 1 } } catch { } " <nl> - - ps : $ cmdline = $ cmdline . replace ( ' - D ' , ' ` - D ' ) <nl> - # We can not use Invoke - Expression as ANTLR write all in error log and error log is highlighted in Appveyor as RED - too scary <nl> - # - ps : Invoke - Expression $ cmdline - ErrorAction SilentlyContinue <nl> - - ps : $ cmdline | Out - File command . ps1 <nl> - - ps : get - content command . ps1 <nl> - - ps : " & . \ \ command . ps1 " <nl> + - ps : > <nl> + ( get - content env : CMD1 ) <nl> + + ( get - content env : CMD2 ) <nl> + + ( get - content env : CMD3 ) <nl> + + ( get - content env : CMD4 ) <nl> + + ( get - content env : CMD5 ) <nl> + + ( get - content env : CMD6 ) <nl> + + ( get - content env : CMD7 ) <nl> + + ( get - content env : CMD8 ) <nl> + + ( get - content env : CMD9 ) <nl> + + ( get - content env : CMD10 ) <nl> + | Out - File appveyor . cmd - encoding ASCII <nl> + - ps : get - content appveyor . cmd <nl> + # We need to use cmd there as ps1 is failing each time error output appear from any command line <nl> + - appveyor . cmd
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> index 4fa2cfe . . 2a58105 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> @ @ - 229 , 7 + 229 , 9 @ @ public abstract class AbstractSuperCheck <nl> } <nl> final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; <nl> final String name = nameAST . getText ( ) ; <nl> - if ( ! getMethodName ( ) . equals ( name ) ) { <nl> + final DetailAST modifiersAST = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> + if ( ! getMethodName ( ) . equals ( name ) <nl> + | | modifiersAST . branchContains ( TokenTypes . LITERAL _ NATIVE ) ) { <nl> return false ; <nl> } <nl> final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java <nl> index 1c74215 . . 023c369 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> / * * <nl> * < p > <nl> * Checks that an overriding clone ( ) method invokes super . clone ( ) . <nl> + * Does not check native methods , as they have no possible java defined implementation . <nl> * < / p > <nl> * < p > <nl> * Reference : < a <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java <nl> index 893f265 . . 2301bde 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> / * * <nl> * < p > <nl> * Checks that an overriding finalize ( ) method invokes super . finalize ( ) . <nl> + * Does not check native methods , as they have no possible java defined implementation . <nl> * < / p > <nl> * < p > <nl> * Reference : < a <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java <nl> index e8812ba . . cfcf311 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java <nl> @ @ - 43 , 6 + 43 , 7 @ @ public class NoCloneCheckTest <nl> " 39 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 52 : " + getCheckMessage ( MSG _ KEY ) , <nl> " 60 : " + getCheckMessage ( MSG _ KEY ) , <nl> + " 98 : " + getCheckMessage ( MSG _ KEY ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> index b7a24a7 . . 0da4711 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> @ @ - 106 , 6 + 106 , 7 @ @ public class OneTopLevelClassCheckTest extends BaseCheckTestSupport { <nl> " 58 : " + getCheckMessage ( MSG _ KEY , " CloneWithTypeArgumentsAndNoSuper " ) , <nl> " 67 : " + getCheckMessage ( MSG _ KEY , " MyClassWithGenericSuperMethod " ) , <nl> " 84 : " + getCheckMessage ( MSG _ KEY , " AnotherClass " ) , <nl> + " 97 : " + getCheckMessage ( MSG _ KEY , " NativeTest " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java <nl> index 707669f . . ca858c5 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java <nl> @ @ - 93 , 3 + 93 , 7 @ @ class AnotherClass { <nl> 	 return null ; <nl> } <nl> } <nl> + <nl> + class NativeTest { <nl> + public native Object clone ( ) ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java <nl> index a7ed92b . . cd734dd 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java <nl> @ @ - 51 , 3 + 51 , 7 @ @ class MyClassWithGenericSuperMethod1 <nl> <nl> } <nl> } <nl> + <nl> + class TestNative { <nl> + public native void finalize ( ) ; <nl> + } <nl> diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml <nl> index 454589a . . 23d6bdd 100644 <nl> - - - a / src / xdocs / config _ coding . xml <nl> + + + b / src / xdocs / config _ coding . xml <nl> @ @ - 1564 , 8 + 1564 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) <nl> < section name = " SuperClone " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks that an overriding < code > clone ( ) < / code > method <nl> - invokes < code > super . clone ( ) < / code > . <nl> + Checks that an overriding < code > clone ( ) < / code > method invokes <nl> + < code > super . clone ( ) < / code > . Does not check native methods , as <nl> + they have no possible java defined implementation . <nl> < / p > <nl> <nl> < p > <nl> @ @ - 1599 , 8 + 1600 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) <nl> < section name = " SuperFinalize " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Checks that an overriding < code > finalize ( ) < / code > <nl> - method invokes < code > super . finalize ( ) < / code > . <nl> + Checks that an overriding < code > finalize ( ) < / code > method invokes <nl> + < code > super . finalize ( ) < / code > . Does not check native methods , as <nl> + they have no possible java defined implementation . <nl> < / p > <nl> <nl> < p >

TEST DIFF:
diff - - git a / appveyor . yml b / appveyor . yml 
 index da5f4e7 . . f0a0f6d 100644 
 - - - a / appveyor . yml 
 + + + b / appveyor . yml 
 @ @ - 23 , 32 + 23 , 75 @ @ install : 
 - cmd : git config - - global core . autocrlf 
 - cmd : mvn - - version 
 - cmd : java - version 
 + - cmd : ' % CYG _ BIN % - qnNdO - R % CYG _ ROOT % - s % CYG _ MIRROR % - l % CYG _ CACHE % - P hg ' 
 + 
 cache : 
 - C : \ maven \ 
 - C : \ Users \ appveyor \ . m2 
 + - C : \ cygwin \ var \ cache \ setup 
 
 matrix : 
 fast _ finish : true 
 
 environment : 
 + global : 
 + CYG _ BIN : C : \ cygwin \ setup - x86 . exe 
 + CYG _ ROOT : C : \ cygwin 
 + CYG _ CACHE : C : \ cygwin \ var \ cache \ setup 
 + CYG _ MIRROR : http : / / cygwin . mirror . constant . com 
 + CMD1 : " " 
 + CMD2 : " " 
 + CMD3 : " " 
 + CMD4 : " " 
 + CMD5 : " " 
 + CMD6 : " " 
 + CMD7 : " " 
 + CMD8 : " " 
 + CMD9 : " " 
 + CMD10 : " " 
 + # We do matrix as Appveyor could fail to finish simple " mvn verify " 
 + # if he loose maven cache ( happens from time to time ) 
 matrix : 
 # checkstyle and sevntu . checkstyle 
 - JAVA _ HOME : C : \ Program Files \ Java \ jdk1 . 8 . 0 
 - CMD : mvn - e verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true 
 + DESC : " checkstyle and sevntu . checkstyle " 
 + CMD1 : " mvn - e verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dcobertura . skip = true " 
 # verify without checkstyle 
 - JAVA _ HOME : C : \ Program Files \ Java \ jdk1 . 8 . 0 
 - CMD : mvn - e verify - Dcheckstyle . ant . skip = true 
 + DESC : " verify without checkstyle " 
 + CMD1 : " mvn - e verify - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true " 
 # site , without verify 
 - JAVA _ HOME : C : \ Program Files \ Java \ jdk1 . 8 . 0 
 - CMD : mvn - e site - Dlinkcheck . skip = true - Dmaven . javadoc . skip = true - DskipTests - DskipITs - Dcobertura . skip = true - Dpmd . skip = true - Dfindbugs . skip = true - Dcheckstyle . ant . skip = true 
 + DESC : " site , without verify " 
 + CMD1 : " mvn - e site - Dlinkcheck . skip = true - Dmaven . javadoc . skip = true - DskipTests " 
 + CMD2 : " - DskipITs - Dcobertura . skip = true - Dpmd . skip = true - Dfindbugs . skip = true " 
 + CMD3 : " - Dcheckstyle . ant . skip = true " 
 + # checkstyle - tester 
 + - JAVA _ HOME : C : \ Program Files \ Java \ jdk1 . 8 . 0 
 + DESC : " checkstyle - tester on guava " 
 + CMD1 : " mvn clean install - DskipTests - DskipITs - Dcobertura . skip = true " 
 + CMD2 : " - Dpmd . skip = true - Dfindbugs . skip = true - Dcheckstyle . ant . skip = true - Dcheckstyle . skip = true " 
 + CMD3 : " & & git clone - q - - depth = 10 - - branch = master " 
 + CMD4 : " https : / / github . com / checkstyle / contribution C : \ \ projects \ \ checkstyle \ \ contribution " 
 + CMD5 : " & & cd contribution \ \ checkstyle - tester " 
 + CMD6 : " & & move / Y projects - for - travis . properties projects - to - test - on . properties " 
 + CMD7 : " & & C : \ \ cygwin \ \ bin \ \ bash . exe - lc " 
 + CMD8 : " \ " cd $ APPVEYOR _ BUILD _ FOLDER / contribution / checkstyle - tester / ; " 
 + CMD9 : " . / launch . sh - Dcheckstyle . config . location = checks - nonjavadoc - error . xml \ " " 
 
 build _ script : 
 - - ps : $ PSVersionTable 
 - - ps : $ cmdline = get - content env : CMD 
 - - ps : $ cmdline = " try { ` $ ErrorActionPreference = ' Stop ' ; $ ( $ cmdline ) ; if ( ` $ ? ) { } else { Exit 1 } } catch { } " 
 - - ps : $ cmdline = $ cmdline . replace ( ' - D ' , ' ` - D ' ) 
 - # We can not use Invoke - Expression as ANTLR write all in error log and error log is highlighted in Appveyor as RED - too scary 
 - # - ps : Invoke - Expression $ cmdline - ErrorAction SilentlyContinue 
 - - ps : $ cmdline | Out - File command . ps1 
 - - ps : get - content command . ps1 
 - - ps : " & . \ \ command . ps1 " 
 + - ps : > 
 + ( get - content env : CMD1 ) 
 + + ( get - content env : CMD2 ) 
 + + ( get - content env : CMD3 ) 
 + + ( get - content env : CMD4 ) 
 + + ( get - content env : CMD5 ) 
 + + ( get - content env : CMD6 ) 
 + + ( get - content env : CMD7 ) 
 + + ( get - content env : CMD8 ) 
 + + ( get - content env : CMD9 ) 
 + + ( get - content env : CMD10 ) 
 + | Out - File appveyor . cmd - encoding ASCII 
 + - ps : get - content appveyor . cmd 
 + # We need to use cmd there as ps1 is failing each time error output appear from any command line 
 + - appveyor . cmd

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 index 4fa2cfe . . 2a58105 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 @ @ - 229 , 7 + 229 , 9 @ @ public abstract class AbstractSuperCheck 
 } 
 final DetailAST nameAST = ast . findFirstToken ( TokenTypes . IDENT ) ; 
 final String name = nameAST . getText ( ) ; 
 - if ( ! getMethodName ( ) . equals ( name ) ) { 
 + final DetailAST modifiersAST = ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 + if ( ! getMethodName ( ) . equals ( name ) 
 + | | modifiersAST . branchContains ( TokenTypes . LITERAL _ NATIVE ) ) { 
 return false ; 
 } 
 final DetailAST params = ast . findFirstToken ( TokenTypes . PARAMETERS ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java 
 index 1c74215 . . 023c369 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperCloneCheck . java 
 @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 / * * 
 * < p > 
 * Checks that an overriding clone ( ) method invokes super . clone ( ) . 
 + * Does not check native methods , as they have no possible java defined implementation . 
 * < / p > 
 * < p > 
 * Reference : < a 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java 
 index 893f265 . . 2301bde 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SuperFinalizeCheck . java 
 @ @ - 23 , 6 + 23 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . coding ; 
 / * * 
 * < p > 
 * Checks that an overriding finalize ( ) method invokes super . finalize ( ) . 
 + * Does not check native methods , as they have no possible java defined implementation . 
 * < / p > 
 * < p > 
 * Reference : < a 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java 
 index e8812ba . . cfcf311 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheckTest . java 
 @ @ - 43 , 6 + 43 , 7 @ @ public class NoCloneCheckTest 
 " 39 : " + getCheckMessage ( MSG _ KEY ) , 
 " 52 : " + getCheckMessage ( MSG _ KEY ) , 
 " 60 : " + getCheckMessage ( MSG _ KEY ) , 
 + " 98 : " + getCheckMessage ( MSG _ KEY ) , 
 } ; 
 verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 index b7a24a7 . . 0da4711 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 @ @ - 106 , 6 + 106 , 7 @ @ public class OneTopLevelClassCheckTest extends BaseCheckTestSupport { 
 " 58 : " + getCheckMessage ( MSG _ KEY , " CloneWithTypeArgumentsAndNoSuper " ) , 
 " 67 : " + getCheckMessage ( MSG _ KEY , " MyClassWithGenericSuperMethod " ) , 
 " 84 : " + getCheckMessage ( MSG _ KEY , " AnotherClass " ) , 
 + " 97 : " + getCheckMessage ( MSG _ KEY , " NativeTest " ) , 
 } ; 
 verify ( checkConfig , getPath ( " coding " + File . separator + " InputClone . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java 
 index 707669f . . ca858c5 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputClone . java 
 @ @ - 93 , 3 + 93 , 7 @ @ class AnotherClass { 
 	 return null ; 
 } 
 } 
 + 
 + class NativeTest { 
 + public native Object clone ( ) ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java 
 index a7ed92b . . cd734dd 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputFinalize . java 
 @ @ - 51 , 3 + 51 , 7 @ @ class MyClassWithGenericSuperMethod1 
 
 } 
 } 
 + 
 + class TestNative { 
 + public native void finalize ( ) ; 
 + } 
 diff - - git a / src / xdocs / config _ coding . xml b / src / xdocs / config _ coding . xml 
 index 454589a . . 23d6bdd 100644 
 - - - a / src / xdocs / config _ coding . xml 
 + + + b / src / xdocs / config _ coding . xml 
 @ @ - 1564 , 8 + 1564 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) 
 < section name = " SuperClone " > 
 < subsection name = " Description " > 
 < p > 
 - Checks that an overriding < code > clone ( ) < / code > method 
 - invokes < code > super . clone ( ) < / code > . 
 + Checks that an overriding < code > clone ( ) < / code > method invokes 
 + < code > super . clone ( ) < / code > . Does not check native methods , as 
 + they have no possible java defined implementation . 
 < / p > 
 
 < p > 
 @ @ - 1599 , 8 + 1600 , 9 @ @ if ( & quot ; something & quot ; . equals ( x ) ) 
 < section name = " SuperFinalize " > 
 < subsection name = " Description " > 
 < p > 
 - Checks that an overriding < code > finalize ( ) < / code > 
 - method invokes < code > super . finalize ( ) < / code > . 
 + Checks that an overriding < code > finalize ( ) < / code > method invokes 
 + < code > super . finalize ( ) < / code > . Does not check native methods , as 
 + they have no possible java defined implementation . 
 < / p > 
 
 < p >
