BLEU SCORE: 0.5093330917854971

TEST MSG: Issue # 4581 : Reorganize token methods in remaining checks
GENERATED MSG: Issue # 4581 : Reorganize token methods in blocks , design , metrics folders

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> index 43858f3 . . d76d4a6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java <nl> @ @ - 156 , 11 + 156 , 16 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getRequiredTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . INTERFACE _ DEF , <nl> TokenTypes . CLASS _ DEF , <nl> @ @ - 175 , 11 + 180 , 6 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> - public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> public void visitToken ( final DetailAST ast ) { <nl> final TextBlock javadoc = <nl> getFileContents ( ) . getJavadocBefore ( ast . getLineNo ( ) ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheck . java <nl> index 14e496d . . 9bfffb7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheck . java <nl> @ @ - 43 , 17 + 43 , 17 @ @ public class NoFinalizerCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . METHOD _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . METHOD _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheck . java <nl> index 09af8fb . . b7a18ba 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheck . java <nl> @ @ - 57 , 17 + 57 , 17 @ @ public final class InterfaceIsTypeCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . INTERFACE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . INTERFACE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . INTERFACE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java <nl> index 6a68c7f . . d0f966c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java <nl> @ @ - 79 , 17 + 79 , 17 @ @ public final class MutableExceptionCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . VARIABLE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . VARIABLE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . VARIABLE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> index 93bbbb2 . . 2736626 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> @ @ - 78 , 21 + 78 , 19 @ @ public final class ThrowsCountCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . LITERAL _ THROWS , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . LITERAL _ THROWS , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . LITERAL _ THROWS , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheck . java <nl> index 8ed6559 . . 588c62a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheck . java <nl> @ @ - 57 , 19 + 57 , 19 @ @ public class InterfaceTypeParameterNameCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . TYPE _ PARAMETER , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . TYPE _ PARAMETER , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java <nl> index 8406f7e . . e4af680 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java <nl> @ @ - 97 , 19 + 97 , 19 @ @ public class LocalVariableNameCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . VARIABLE _ DEF , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . VARIABLE _ DEF , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheck . java <nl> index f3ac6bf . . 1f8aeec 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheck . java <nl> @ @ - 57 , 19 + 57 , 19 @ @ public class MethodTypeParameterNameCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . TYPE _ PARAMETER , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . TYPE _ PARAMETER , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheck . java <nl> index 16a92a4 . . 8d9425e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheck . java <nl> @ @ - 174 , 17 + 174 , 17 @ @ public class RegexpCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheck . java <nl> index a99449d . . 4c9234f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheck . java <nl> @ @ - 47 , 17 + 47 , 17 @ @ public class RegexpSinglelineJavaCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java <nl> index 119b499 . . 61bf2e7 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java <nl> @ @ - 39 , 6 + 39 , 26 @ @ public class MissingDeprecatedCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testGetAcceptableTokens ( ) { <nl> + final MissingDeprecatedCheck missingDeprecatedCheck = <nl> + new MissingDeprecatedCheck ( ) ; <nl> + final int [ ] expected = { <nl> + TokenTypes . INTERFACE _ DEF , <nl> + TokenTypes . CLASS _ DEF , <nl> + TokenTypes . ANNOTATION _ DEF , <nl> + TokenTypes . ENUM _ DEF , <nl> + TokenTypes . METHOD _ DEF , <nl> + TokenTypes . CTOR _ DEF , <nl> + TokenTypes . VARIABLE _ DEF , <nl> + TokenTypes . ENUM _ CONSTANT _ DEF , <nl> + TokenTypes . ANNOTATION _ FIELD _ DEF , <nl> + } ; <nl> + <nl> + assertArrayEquals ( " Default acceptable tokens are invalid " , <nl> + expected , missingDeprecatedCheck . getAcceptableTokens ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testGetRequiredTokens ( ) { <nl> final MissingDeprecatedCheck checkObj = new MissingDeprecatedCheck ( ) ; <nl> final int [ ] expected = { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheckTest . java <nl> index 4dc7328 . . 7051459 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheckTest . java <nl> @ @ - 20 , 11 + 20 , 13 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . coding ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . coding . NoFinalizerCheck . MSG _ KEY ; <nl> + import static org . junit . Assert . assertArrayEquals ; <nl> <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> / * * <nl> @ @ - 41 , 6 + 43 , 16 @ @ public class NoFinalizerCheckTest <nl> } <nl> <nl> @ Test <nl> + public void testGetAcceptableTokens ( ) { <nl> + final NoFinalizerCheck noFinalizerCheck = <nl> + new NoFinalizerCheck ( ) ; <nl> + final int [ ] expected = { TokenTypes . METHOD _ DEF } ; <nl> + <nl> + assertArrayEquals ( " Default acceptable tokens are invalid " , <nl> + expected , noFinalizerCheck . getAcceptableTokens ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testHasFinalizer ( ) <nl> throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheckTest . java <nl> index 21f0b4f . . 5373e65 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheckTest . java <nl> @ @ - 37 , 7 + 37 , 17 @ @ public class InterfaceTypeParameterNameCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testGetInterfaceRequiredTokens ( ) { <nl> + public void testGetAcceptableTokens ( ) { <nl> + final InterfaceTypeParameterNameCheck interfaceTypeParameterNameCheck = <nl> + new InterfaceTypeParameterNameCheck ( ) ; <nl> + final int [ ] expected = { TokenTypes . TYPE _ PARAMETER } ; <nl> + <nl> + assertArrayEquals ( " Default acceptable tokens are invalid " , <nl> + expected , interfaceTypeParameterNameCheck . getAcceptableTokens ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testGetRequiredTokens ( ) { <nl> final InterfaceTypeParameterNameCheck checkObj = <nl> new InterfaceTypeParameterNameCheck ( ) ; <nl> final int [ ] expected = { TokenTypes . TYPE _ PARAMETER } ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java <nl> index f5d2c68 . . 2b8a01b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java <nl> @ @ - 20 , 11 + 20 , 13 @ @ <nl> package com . puppycrawl . tools . checkstyle . checks . naming ; <nl> <nl> import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; <nl> + import static org . junit . Assert . assertArrayEquals ; <nl> <nl> import org . junit . Test ; <nl> <nl> import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> public class LocalVariableNameCheckTest <nl> @ @ - 36 , 6 + 38 , 15 @ @ public class LocalVariableNameCheckTest <nl> } <nl> <nl> @ Test <nl> + public void testGetAcceptableTokens ( ) { <nl> + final LocalVariableNameCheck localVariableNameCheck = new LocalVariableNameCheck ( ) ; <nl> + final int [ ] expected = { TokenTypes . VARIABLE _ DEF } ; <nl> + <nl> + assertArrayEquals ( " Default acceptable tokens are invalid " , <nl> + expected , localVariableNameCheck . getAcceptableTokens ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testDefault ( ) <nl> throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheckTest . java <nl> index dfc64a4 . . 5c80b43 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheckTest . java <nl> @ @ - 37 , 7 + 37 , 17 @ @ public class MethodTypeParameterNameCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testGetMethodRequiredTokens ( ) { <nl> + public void testGetAcceptableTokens ( ) { <nl> + final MethodTypeParameterNameCheck methodTypeParameterNameCheck = <nl> + new MethodTypeParameterNameCheck ( ) ; <nl> + final int [ ] expected = { TokenTypes . TYPE _ PARAMETER } ; <nl> + <nl> + assertArrayEquals ( " Default acceptable tokens are invalid " , <nl> + expected , methodTypeParameterNameCheck . getAcceptableTokens ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testGetRequiredTokens ( ) { <nl> final MethodTypeParameterNameCheck checkObj = <nl> new MethodTypeParameterNameCheck ( ) ; <nl> final int [ ] expected = { TokenTypes . TYPE _ PARAMETER } ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheckTest . java <nl> index 9684b3e . . ffb5c40 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheckTest . java <nl> @ @ - 38 , 10 + 38 , 18 @ @ public class RegexpCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testGetAcceptableTokens ( ) { <nl> + final RegexpCheck regexpCheck = new RegexpCheck ( ) ; <nl> + assertArrayEquals ( <nl> + " RegexpCheck # getAcceptableTokens should return empty array by default " , <nl> + CommonUtils . EMPTY _ INT _ ARRAY , regexpCheck . getAcceptableTokens ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testGetRequiredTokens ( ) { <nl> final RegexpCheck checkObj = new RegexpCheck ( ) ; <nl> assertArrayEquals ( <nl> - " RegexpCheck # getRequiredTockens should return empty array by default " , <nl> + " RegexpCheck # getRequiredTokens should return empty array by default " , <nl> CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheckTest . java <nl> index e34c606 . . b64d94e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheckTest . java <nl> @ @ - 37 , 6 + 37 , 14 @ @ public class RegexpSinglelineJavaCheckTest extends AbstractModuleTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testGetAcceptableTokens ( ) { <nl> + final RegexpSinglelineJavaCheck regexpSinglelineJavaCheck = <nl> + new RegexpSinglelineJavaCheck ( ) ; <nl> + assertArrayEquals ( " Default acceptable tokens are invalid " , <nl> + CommonUtils . EMPTY _ INT _ ARRAY , regexpSinglelineJavaCheck . getAcceptableTokens ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testGetRequiredTokens ( ) { <nl> final RegexpSinglelineJavaCheck checkObj = new RegexpSinglelineJavaCheck ( ) ; <nl> assertArrayEquals ( " Default required tokens are invalid " ,
NEAREST DIFF (one line): diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh <nl> index 6bf6ab6 . . 474703c 100755 <nl> - - - a / . ci / travis / travis . sh <nl> + + + b / . ci / travis / travis . sh <nl> @ @ - 24 , 7 + 24 , 9 @ @ assembly - run - all - jar ) <nl> ; ; <nl> <nl> sonarqube ) <nl> - if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi <nl> + # token could be generated at https : / / sonarcloud . io / account / security / <nl> + # executon on local : SONAR _ TOKEN = xxxxxxxxxx . / . ci / travis / travis . sh sonarqube <nl> + if [ [ $ TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi <nl> export MAVEN _ OPTS = ' - Xmx2000m ' <nl> mvn clean package cobertura : cobertura sonar : sonar \ <nl> - Dsonar . host . url = https : / / sonarqube . com \ <nl> diff - - git a / . travis . yml b / . travis . yml <nl> index c7e7c87 . . ee0a9c8 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 163 , 11 + 163 , 11 @ @ matrix : <nl> - DESC = " MacOS verify , site , assembly " <nl> - CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & mvn package - Dlinkcheck . skip = true & & mvn package - Passembly " <nl> <nl> - # https : / / sonarqube . com ( oraclejdk8 ) disabled till https : / / github . com / checkstyle / checkstyle / issues / 5175 <nl> - # - jdk : oraclejdk8 <nl> - # env : <nl> - # - DESC = " sonarqube . com " <nl> - # - CMD = " . / . ci / travis / travis . sh sonarqube " <nl> + # https : / / sonarqube . com ( oraclejdk8 ) <nl> + - jdk : oraclejdk8 <nl> + env : <nl> + - DESC = " sonarqube . com " <nl> + - CMD = " . / . ci / travis / travis . sh sonarqube " <nl> <nl> # No error testing - simple - binary - encoding <nl> - jdk : oraclejdk8 <nl> diff - - git a / pom . xml b / pom . xml <nl> index 0338b3b . . 5bb2c4e 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 230 , 6 + 230 , 7 @ @ <nl> < pitest . plugin . timeout . factor > 10 < / pitest . plugin . timeout . factor > <nl> < pitest . plugin . timeout . constant > 50000 < / pitest . plugin . timeout . constant > <nl> < pitest . plugin . threads > 4 < / pitest . plugin . threads > <nl> + < sonar . test . exclusions > * * / test / resources / * * / * , * * / it / resources / * * / * < / sonar . test . exclusions > <nl> < / properties > <nl> <nl> < ! - - that repositories are required for testing plugin ' s snapshot version - - >

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 index 43858f3 . . d76d4a6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheck . java 
 @ @ - 156 , 11 + 156 , 16 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getRequiredTokens ( ) { 
 return new int [ ] { 
 TokenTypes . INTERFACE _ DEF , 
 TokenTypes . CLASS _ DEF , 
 @ @ - 175 , 11 + 180 , 6 @ @ public final class MissingDeprecatedCheck extends AbstractCheck { 
 } 
 
 @ Override 
 - public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 - } 
 - 
 - @ Override 
 public void visitToken ( final DetailAST ast ) { 
 final TextBlock javadoc = 
 getFileContents ( ) . getJavadocBefore ( ast . getLineNo ( ) ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheck . java 
 index 14e496d . . 9bfffb7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheck . java 
 @ @ - 43 , 17 + 43 , 17 @ @ public class NoFinalizerCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . METHOD _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . METHOD _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheck . java 
 index 09af8fb . . b7a18ba 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheck . java 
 @ @ - 57 , 17 + 57 , 17 @ @ public final class InterfaceIsTypeCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . INTERFACE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . INTERFACE _ DEF } ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . INTERFACE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java 
 index 6a68c7f . . d0f966c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java 
 @ @ - 79 , 17 + 79 , 17 @ @ public final class MutableExceptionCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . VARIABLE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . VARIABLE _ DEF } ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . VARIABLE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 index 93bbbb2 . . 2736626 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 @ @ - 78 , 21 + 78 , 19 @ @ public final class ThrowsCountCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . LITERAL _ THROWS , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . LITERAL _ THROWS , 
 + } ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . LITERAL _ THROWS , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheck . java 
 index 8ed6559 . . 588c62a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheck . java 
 @ @ - 57 , 19 + 57 , 19 @ @ public class InterfaceTypeParameterNameCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . TYPE _ PARAMETER , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . TYPE _ PARAMETER , 
 + } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java 
 index 8406f7e . . e4af680 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java 
 @ @ - 97 , 19 + 97 , 19 @ @ public class LocalVariableNameCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . VARIABLE _ DEF , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . VARIABLE _ DEF , 
 + } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheck . java 
 index f3ac6bf . . 1f8aeec 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheck . java 
 @ @ - 57 , 19 + 57 , 19 @ @ public class MethodTypeParameterNameCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . TYPE _ PARAMETER , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . TYPE _ PARAMETER , 
 + } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheck . java 
 index 16a92a4 . . 8d9425e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheck . java 
 @ @ - 174 , 17 + 174 , 17 @ @ public class RegexpCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return CommonUtils . EMPTY _ INT _ ARRAY ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheck . java 
 index a99449d . . 4c9234f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheck . java 
 @ @ - 47 , 17 + 47 , 17 @ @ public class RegexpSinglelineJavaCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return CommonUtils . EMPTY _ INT _ ARRAY ; 
 } 
 
 @ Override 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java 
 index 119b499 . . 61bf2e7 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java 
 @ @ - 39 , 6 + 39 , 26 @ @ public class MissingDeprecatedCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testGetAcceptableTokens ( ) { 
 + final MissingDeprecatedCheck missingDeprecatedCheck = 
 + new MissingDeprecatedCheck ( ) ; 
 + final int [ ] expected = { 
 + TokenTypes . INTERFACE _ DEF , 
 + TokenTypes . CLASS _ DEF , 
 + TokenTypes . ANNOTATION _ DEF , 
 + TokenTypes . ENUM _ DEF , 
 + TokenTypes . METHOD _ DEF , 
 + TokenTypes . CTOR _ DEF , 
 + TokenTypes . VARIABLE _ DEF , 
 + TokenTypes . ENUM _ CONSTANT _ DEF , 
 + TokenTypes . ANNOTATION _ FIELD _ DEF , 
 + } ; 
 + 
 + assertArrayEquals ( " Default acceptable tokens are invalid " , 
 + expected , missingDeprecatedCheck . getAcceptableTokens ( ) ) ; 
 + } 
 + 
 + @ Test 
 public void testGetRequiredTokens ( ) { 
 final MissingDeprecatedCheck checkObj = new MissingDeprecatedCheck ( ) ; 
 final int [ ] expected = { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheckTest . java 
 index 4dc7328 . . 7051459 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / coding / NoFinalizerCheckTest . java 
 @ @ - 20 , 11 + 20 , 13 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . coding ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . coding . NoFinalizerCheck . MSG _ KEY ; 
 + import static org . junit . Assert . assertArrayEquals ; 
 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 / * * 
 @ @ - 41 , 6 + 43 , 16 @ @ public class NoFinalizerCheckTest 
 } 
 
 @ Test 
 + public void testGetAcceptableTokens ( ) { 
 + final NoFinalizerCheck noFinalizerCheck = 
 + new NoFinalizerCheck ( ) ; 
 + final int [ ] expected = { TokenTypes . METHOD _ DEF } ; 
 + 
 + assertArrayEquals ( " Default acceptable tokens are invalid " , 
 + expected , noFinalizerCheck . getAcceptableTokens ( ) ) ; 
 + } 
 + 
 + @ Test 
 public void testHasFinalizer ( ) 
 throws Exception { 
 final DefaultConfiguration checkConfig = 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheckTest . java 
 index 21f0b4f . . 5373e65 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / InterfaceTypeParameterNameCheckTest . java 
 @ @ - 37 , 7 + 37 , 17 @ @ public class InterfaceTypeParameterNameCheckTest 
 } 
 
 @ Test 
 - public void testGetInterfaceRequiredTokens ( ) { 
 + public void testGetAcceptableTokens ( ) { 
 + final InterfaceTypeParameterNameCheck interfaceTypeParameterNameCheck = 
 + new InterfaceTypeParameterNameCheck ( ) ; 
 + final int [ ] expected = { TokenTypes . TYPE _ PARAMETER } ; 
 + 
 + assertArrayEquals ( " Default acceptable tokens are invalid " , 
 + expected , interfaceTypeParameterNameCheck . getAcceptableTokens ( ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testGetRequiredTokens ( ) { 
 final InterfaceTypeParameterNameCheck checkObj = 
 new InterfaceTypeParameterNameCheck ( ) ; 
 final int [ ] expected = { TokenTypes . TYPE _ PARAMETER } ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java 
 index f5d2c68 . . 2b8a01b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java 
 @ @ - 20 , 11 + 20 , 13 @ @ 
 package com . puppycrawl . tools . checkstyle . checks . naming ; 
 
 import static com . puppycrawl . tools . checkstyle . checks . naming . AbstractNameCheck . MSG _ INVALID _ PATTERN ; 
 + import static org . junit . Assert . assertArrayEquals ; 
 
 import org . junit . Test ; 
 
 import com . puppycrawl . tools . checkstyle . AbstractModuleTestSupport ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 public class LocalVariableNameCheckTest 
 @ @ - 36 , 6 + 38 , 15 @ @ public class LocalVariableNameCheckTest 
 } 
 
 @ Test 
 + public void testGetAcceptableTokens ( ) { 
 + final LocalVariableNameCheck localVariableNameCheck = new LocalVariableNameCheck ( ) ; 
 + final int [ ] expected = { TokenTypes . VARIABLE _ DEF } ; 
 + 
 + assertArrayEquals ( " Default acceptable tokens are invalid " , 
 + expected , localVariableNameCheck . getAcceptableTokens ( ) ) ; 
 + } 
 + 
 + @ Test 
 public void testDefault ( ) 
 throws Exception { 
 final DefaultConfiguration checkConfig = 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheckTest . java 
 index dfc64a4 . . 5c80b43 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / MethodTypeParameterNameCheckTest . java 
 @ @ - 37 , 7 + 37 , 17 @ @ public class MethodTypeParameterNameCheckTest 
 } 
 
 @ Test 
 - public void testGetMethodRequiredTokens ( ) { 
 + public void testGetAcceptableTokens ( ) { 
 + final MethodTypeParameterNameCheck methodTypeParameterNameCheck = 
 + new MethodTypeParameterNameCheck ( ) ; 
 + final int [ ] expected = { TokenTypes . TYPE _ PARAMETER } ; 
 + 
 + assertArrayEquals ( " Default acceptable tokens are invalid " , 
 + expected , methodTypeParameterNameCheck . getAcceptableTokens ( ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testGetRequiredTokens ( ) { 
 final MethodTypeParameterNameCheck checkObj = 
 new MethodTypeParameterNameCheck ( ) ; 
 final int [ ] expected = { TokenTypes . TYPE _ PARAMETER } ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheckTest . java 
 index 9684b3e . . ffb5c40 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpCheckTest . java 
 @ @ - 38 , 10 + 38 , 18 @ @ public class RegexpCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testGetAcceptableTokens ( ) { 
 + final RegexpCheck regexpCheck = new RegexpCheck ( ) ; 
 + assertArrayEquals ( 
 + " RegexpCheck # getAcceptableTokens should return empty array by default " , 
 + CommonUtils . EMPTY _ INT _ ARRAY , regexpCheck . getAcceptableTokens ( ) ) ; 
 + } 
 + 
 + @ Test 
 public void testGetRequiredTokens ( ) { 
 final RegexpCheck checkObj = new RegexpCheck ( ) ; 
 assertArrayEquals ( 
 - " RegexpCheck # getRequiredTockens should return empty array by default " , 
 + " RegexpCheck # getRequiredTokens should return empty array by default " , 
 CommonUtils . EMPTY _ INT _ ARRAY , checkObj . getRequiredTokens ( ) ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheckTest . java 
 index e34c606 . . b64d94e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpSinglelineJavaCheckTest . java 
 @ @ - 37 , 6 + 37 , 14 @ @ public class RegexpSinglelineJavaCheckTest extends AbstractModuleTestSupport { 
 } 
 
 @ Test 
 + public void testGetAcceptableTokens ( ) { 
 + final RegexpSinglelineJavaCheck regexpSinglelineJavaCheck = 
 + new RegexpSinglelineJavaCheck ( ) ; 
 + assertArrayEquals ( " Default acceptable tokens are invalid " , 
 + CommonUtils . EMPTY _ INT _ ARRAY , regexpSinglelineJavaCheck . getAcceptableTokens ( ) ) ; 
 + } 
 + 
 + @ Test 
 public void testGetRequiredTokens ( ) { 
 final RegexpSinglelineJavaCheck checkObj = new RegexpSinglelineJavaCheck ( ) ; 
 assertArrayEquals ( " Default required tokens are invalid " ,

NEAREST DIFF:
diff - - git a / . ci / travis / travis . sh b / . ci / travis / travis . sh 
 index 6bf6ab6 . . 474703c 100755 
 - - - a / . ci / travis / travis . sh 
 + + + b / . ci / travis / travis . sh 
 @ @ - 24 , 7 + 24 , 9 @ @ assembly - run - all - jar ) 
 ; ; 
 
 sonarqube ) 
 - if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi 
 + # token could be generated at https : / / sonarcloud . io / account / security / 
 + # executon on local : SONAR _ TOKEN = xxxxxxxxxx . / . ci / travis / travis . sh sonarqube 
 + if [ [ $ TRAVIS _ PULL _ REQUEST & & $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi 
 export MAVEN _ OPTS = ' - Xmx2000m ' 
 mvn clean package cobertura : cobertura sonar : sonar \ 
 - Dsonar . host . url = https : / / sonarqube . com \ 
 diff - - git a / . travis . yml b / . travis . yml 
 index c7e7c87 . . ee0a9c8 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 163 , 11 + 163 , 11 @ @ matrix : 
 - DESC = " MacOS verify , site , assembly " 
 - CMD = " export JAVA _ HOME = $ ( / usr / libexec / java _ home ) & & mvn package - Dlinkcheck . skip = true & & mvn package - Passembly " 
 
 - # https : / / sonarqube . com ( oraclejdk8 ) disabled till https : / / github . com / checkstyle / checkstyle / issues / 5175 
 - # - jdk : oraclejdk8 
 - # env : 
 - # - DESC = " sonarqube . com " 
 - # - CMD = " . / . ci / travis / travis . sh sonarqube " 
 + # https : / / sonarqube . com ( oraclejdk8 ) 
 + - jdk : oraclejdk8 
 + env : 
 + - DESC = " sonarqube . com " 
 + - CMD = " . / . ci / travis / travis . sh sonarqube " 
 
 # No error testing - simple - binary - encoding 
 - jdk : oraclejdk8 
 diff - - git a / pom . xml b / pom . xml 
 index 0338b3b . . 5bb2c4e 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 230 , 6 + 230 , 7 @ @ 
 < pitest . plugin . timeout . factor > 10 < / pitest . plugin . timeout . factor > 
 < pitest . plugin . timeout . constant > 50000 < / pitest . plugin . timeout . constant > 
 < pitest . plugin . threads > 4 < / pitest . plugin . threads > 
 + < sonar . test . exclusions > * * / test / resources / * * / * , * * / it / resources / * * / * < / sonar . test . exclusions > 
 < / properties > 
 
 < ! - - that repositories are required for testing plugin ' s snapshot version - - >
