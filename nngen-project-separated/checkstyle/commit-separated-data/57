BLEU SCORE: 0.021240520413055804

TEST MSG: Issue # 6446 : fixed AnnotationMemberValuePair in AnnotationUseStyleCheck
GENERATED MSG: Issue # 5916 : simplify inputs to resolve eclipse errror ' The value for annotation attribute must be a constant expression '

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> index 47f751e . . 680a6cf 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> @ @ - 492 , 6 + 492 , 7 @ @ public final class AnnotationUseStyleCheck extends AbstractCheck { <nl> } <nl> else if ( parenExists <nl> & & ! ast . branchContains ( TokenTypes . EXPR ) <nl> + & & ! ast . branchContains ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) <nl> & & ! ast . branchContains ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ) { <nl> log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java <nl> index eddd87d . . 8365254 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java <nl> @ @ - 78 , 6 + 78 , 26 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { <nl> AnnotationUseStyleCheck . ClosingParens . ALWAYS , option ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testDefault ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationUseStyleCheck . class ) ; <nl> + final String [ ] expected = { <nl> + " 5 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , <nl> + " 13 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> + " 20 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> + " 33 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> + " 41 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , <nl> + " 43 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , <nl> + " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , <nl> + " 71 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> + " 75 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> + " 77 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; <nl> + } <nl> + <nl> / * * <nl> * Test that annotation parens are always present . <nl> * / <nl> @ @ - 91 , 6 + 111 , 8 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { <nl> " 3 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , <nl> " 18 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , <nl> " 23 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , <nl> + " 71 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , <nl> + " 73 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; <nl> @ @ - 109 , 6 + 131 , 9 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { <nl> " 13 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> " 30 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> " 33 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> + " 71 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> + " 75 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> + " 77 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; <nl> @ @ - 143 , 6 + 168 , 8 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { <nl> " 43 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , <nl> " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , <nl> " 67 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , <nl> + " 73 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , <nl> + " 77 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java <nl> index 6717b50 . . e8714e5 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java <nl> @ @ - 54 , 7 + 54 , 7 @ @ enum E { <nl> } <nl> <nl> @ interface Another { <nl> - String [ ] value ( ) ; <nl> + String [ ] value ( ) default { } ; <nl> @ Another ( { " foo " , " bar " } ) / / compact style <nl> String value1 ( ) default " " ; <nl> } <nl> @ @ - 67 , 3 + 67 , 16 @ @ class Closing { <nl> @ SuppressWarnings ( value = UN _ U ) <nl> int d ; <nl> } <nl> + <nl> + @ AnnotationWithAnnotationValue ( @ Another ) <nl> + class Example1 { } <nl> + @ AnnotationWithAnnotationValue ( value = @ Another ) <nl> + class Example2 { } <nl> + @ AnnotationWithAnnotationValue ( @ Another ( ) ) <nl> + class Example3 { } <nl> + @ AnnotationWithAnnotationValue ( value = @ Another ( ) ) <nl> + class Example4 { } <nl> + <nl> + @ interface AnnotationWithAnnotationValue { <nl> + Another value ( ) ; <nl> + }
NEAREST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index 692cb02 . . f8ad0ab 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 75 , 9 + 75 , 9 @ @ matrix : <nl> <nl> # site <nl> - jdk : oraclejdk8 <nl> - env : <nl> - - DESC = " site without validations " <nl> - - CMD = " . / . ci / travis / travis . sh site " <nl> + env : <nl> + - DESC = " site without validations " <nl> + - CMD = " . / . ci / travis / travis . sh site " <nl> <nl> # unit tests in German locale ( oraclejdk8 ) <nl> - jdk : oraclejdk8

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 index 47f751e . . 680a6cf 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 @ @ - 492 , 6 + 492 , 7 @ @ public final class AnnotationUseStyleCheck extends AbstractCheck { 
 } 
 else if ( parenExists 
 & & ! ast . branchContains ( TokenTypes . EXPR ) 
 + & & ! ast . branchContains ( TokenTypes . ANNOTATION _ MEMBER _ VALUE _ PAIR ) 
 & & ! ast . branchContains ( TokenTypes . ANNOTATION _ ARRAY _ INIT ) ) { 
 log ( ast . getLineNo ( ) , MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java 
 index eddd87d . . 8365254 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheckTest . java 
 @ @ - 78 , 6 + 78 , 26 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { 
 AnnotationUseStyleCheck . ClosingParens . ALWAYS , option ) ; 
 } 
 
 + @ Test 
 + public void testDefault ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createModuleConfig ( AnnotationUseStyleCheck . class ) ; 
 + final String [ ] expected = { 
 + " 5 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , 
 + " 13 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 + " 20 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 + " 33 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 + " 41 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , 
 + " 43 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , 
 + " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT _ NO _ ARRAY " ) , 
 + " 71 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 + " 75 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 + " 77 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; 
 + } 
 + 
 / * * 
 * Test that annotation parens are always present . 
 * / 
 @ @ - 91 , 6 + 111 , 8 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { 
 " 3 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , 
 " 18 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , 
 " 23 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , 
 + " 71 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , 
 + " 73 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ MISSING ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; 
 @ @ - 109 , 6 + 131 , 9 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { 
 " 13 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 " 30 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 " 33 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 + " 71 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 + " 75 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 + " 77 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ PARENS _ PRESENT ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; 
 @ @ - 143 , 6 + 168 , 8 @ @ public class AnnotationUseStyleCheckTest extends AbstractModuleTestSupport { 
 " 43 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , 
 " 47 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , 
 " 67 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , 
 + " 73 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , 
 + " 77 : " + getCheckMessage ( MSG _ KEY _ ANNOTATION _ INCORRECT _ STYLE , " COMPACT " ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " InputAnnotationUseStyleDifferentStyles . java " ) , expected ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java 
 index 6717b50 . . e8714e5 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / annotationusestyle / InputAnnotationUseStyleDifferentStyles . java 
 @ @ - 54 , 7 + 54 , 7 @ @ enum E { 
 } 
 
 @ interface Another { 
 - String [ ] value ( ) ; 
 + String [ ] value ( ) default { } ; 
 @ Another ( { " foo " , " bar " } ) / / compact style 
 String value1 ( ) default " " ; 
 } 
 @ @ - 67 , 3 + 67 , 16 @ @ class Closing { 
 @ SuppressWarnings ( value = UN _ U ) 
 int d ; 
 } 
 + 
 + @ AnnotationWithAnnotationValue ( @ Another ) 
 + class Example1 { } 
 + @ AnnotationWithAnnotationValue ( value = @ Another ) 
 + class Example2 { } 
 + @ AnnotationWithAnnotationValue ( @ Another ( ) ) 
 + class Example3 { } 
 + @ AnnotationWithAnnotationValue ( value = @ Another ( ) ) 
 + class Example4 { } 
 + 
 + @ interface AnnotationWithAnnotationValue { 
 + Another value ( ) ; 
 + }

NEAREST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index 692cb02 . . f8ad0ab 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 75 , 9 + 75 , 9 @ @ matrix : 
 
 # site 
 - jdk : oraclejdk8 
 - env : 
 - - DESC = " site without validations " 
 - - CMD = " . / . ci / travis / travis . sh site " 
 + env : 
 + - DESC = " site without validations " 
 + - CMD = " . / . ci / travis / travis . sh site " 
 
 # unit tests in German locale ( oraclejdk8 ) 
 - jdk : oraclejdk8
