BLEU SCORE: 0.05816635421147513

TEST MSG: Issue # 4399 : increase coverage of pitest - checkstyle main profile to 100 %
GENERATED MSG: Issue # 2080 : Fix typos in code

TEST DIFF (one line): diff - - git a / config / pmd - main . xml b / config / pmd - main . xml <nl> index 70929fd . . 7c05c75 100644 <nl> - - - a / config / pmd - main . xml <nl> + + + b / config / pmd - main . xml <nl> @ @ - 19 , 4 + 19 , 11 @ @ <nl> | / / MethodDeclaration [ @ Name = ' getHashCodeBasedOnObjectContent ' and . . / . . / . . [ @ Image = ' PropertyCacheFile ' ] ] " / > <nl> < / properties > <nl> < / rule > <nl> + < rule ref = " rulesets / java / basic . xml / CollapsibleIfStatements " > <nl> + < properties > <nl> + < ! - - till https : / / github . com / hcoles / pitest / issues / 377 - - > <nl> + < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' main ' and . . / . . / . . [ @ Image = ' Main ' ] ] " / > <nl> + < / properties > <nl> + < / rule > <nl> + <nl> < / ruleset > <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 965bd06 . . 50f22ba 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 49 , 6 + 49 , 7 @ @ <nl> < suppress checks = " ExecutableStatementCount " files = " . * GeneratedJavaTokenTypesTest \ . java " / > <nl> < suppress checks = " JavaNCSS " files = " . * GeneratedJavaTokenTypesTest \ . java " / > <nl> < suppress checks = " ExecutableStatementCount " files = " . * IllegalInstantiationCheckTest \ . java " / > <nl> + < suppress checks = " ExecutableStatementCount " files = " . * Main \ . java " / > <nl> <nl> < suppress checks = " . " files = " . * JavadocTokenTypes \ . java " / > <nl> < suppress checks = " . " files = " . * ParseTreeBuilder \ . java " / > <nl> diff - - git a / pom . xml b / pom . xml <nl> index feef8b2 . . f81666f 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 2091 , 23 + 2091 , 6 @ @ <nl> < targetTests > <nl> < param > com . puppycrawl . tools . checkstyle . MainTest < / param > <nl> < / targetTests > <nl> - < excludedMethods > <nl> - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > <nl> - < param > main < / param > <nl> - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > <nl> - < param > createListener < / param > <nl> - < / excludedMethods > <nl> - < avoidCallsTo > <nl> - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > <nl> - < avoidCallsTo > com . google . common . io . Closeables < / avoidCallsTo > <nl> - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > <nl> - < avoidCallsTo > com . puppycrawl . tools . checkstyle . utils . CommonUtils < / avoidCallsTo > <nl> - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > <nl> - < avoidCallsTo > com . puppycrawl . tools . checkstyle . api . RootModule < / avoidCallsTo > <nl> - < ! - - add default suppressions - - > <nl> - < avoidCallsTo > org . apache . commons . logging < / avoidCallsTo > <nl> - < avoidCallsTo > java . util . logging < / avoidCallsTo > <nl> - < / avoidCallsTo > <nl> < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index 5198806 . . df2e0d2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 226 , 11 + 226 , 14 @ @ public final class Main { <nl> } <nl> finally { <nl> / / return exit code base on validation of Checker <nl> - if ( errorCounter ! = 0 & & ! cliViolations ) { <nl> - final LocalizedMessage errorCounterMessage = new LocalizedMessage ( 0 , <nl> - Definitions . CHECKSTYLE _ BUNDLE , ERROR _ COUNTER , <nl> - new String [ ] { String . valueOf ( errorCounter ) } , null , Main . class , null ) ; <nl> - System . out . println ( errorCounterMessage . getMessage ( ) ) ; <nl> + / / two ifs exist till https : / / github . com / hcoles / pitest / issues / 377 <nl> + if ( errorCounter ! = 0 ) { <nl> + if ( ! cliViolations ) { <nl> + final LocalizedMessage errorCounterMessage = new LocalizedMessage ( 0 , <nl> + Definitions . CHECKSTYLE _ BUNDLE , ERROR _ COUNTER , <nl> + new String [ ] { String . valueOf ( errorCounter ) } , null , Main . class , null ) ; <nl> + System . out . println ( errorCounterMessage . getMessage ( ) ) ; <nl> + } <nl> } <nl> if ( exitStatus ! = 0 ) { <nl> System . exit ( exitStatus ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> index 1fb4a05 . . 6dc83e9 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class AstTreeStringPrinterTest extends AbstractTreeTestSupport { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( AstTreeStringPrinter . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( AstTreeStringPrinter . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java <nl> index 5235e7a . . 995f1b0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java <nl> @ @ - 26 , 6 + 26 , 6 @ @ import org . junit . Test ; <nl> public class DefinitionsTest { <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( Definitions . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( Definitions . class , true ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java <nl> index ec74142 . . c2879c7 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ public class DetailNodeTreeStringPrinterTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( DetailNodeTreeStringPrinter . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( DetailNodeTreeStringPrinter . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index b08e787 . . 9d9c99f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 25 , 11 + 25 , 18 @ @ import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertNotEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> + import static org . mockito . Matchers . any ; <nl> + import static org . mockito . Mockito . times ; <nl> + import static org . powermock . api . mockito . PowerMockito . doNothing ; <nl> import static org . powermock . api . mockito . PowerMockito . mock ; <nl> + import static org . powermock . api . mockito . PowerMockito . mockStatic ; <nl> + import static org . powermock . api . mockito . PowerMockito . verifyStatic ; <nl> import static org . powermock . api . mockito . PowerMockito . when ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + import java . io . OutputStream ; <nl> import java . lang . reflect . InvocationTargetException ; <nl> import java . lang . reflect . Method ; <nl> import java . nio . charset . StandardCharsets ; <nl> @ @ - 52 , 11 + 59 , 18 @ @ import org . junit . contrib . java . lang . system . ExpectedSystemExit ; <nl> import org . junit . contrib . java . lang . system . SystemErrRule ; <nl> import org . junit . contrib . java . lang . system . SystemOutRule ; <nl> import org . junit . rules . TemporaryFolder ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . powermock . core . classloader . annotations . PrepareForTest ; <nl> + import org . powermock . modules . junit4 . PowerMockRunner ; <nl> <nl> + import com . google . common . io . Closeables ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; <nl> + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> + @ RunWith ( PowerMockRunner . class ) <nl> + @ PrepareForTest ( { Main . class , CommonUtils . class , Closeables . class } ) <nl> public class MainTest { <nl> private static final String USAGE = String . format ( Locale . ROOT , <nl> " usage : java com . puppycrawl . tools . checkstyle . Main [ options ] - c < config . xml > " <nl> @ @ - 148 , 7 + 162 , 7 @ @ public class MainTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( Main . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( Main . class , false ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 387 , 8 + 401 , 11 @ @ public class MainTest { <nl> } <nl> <nl> @ Test <nl> - public void testExistingTargetFilePlainOutputProperties ( ) <nl> - throws Exception { <nl> + public void testExistingTargetFilePlainOutputProperties ( ) throws Exception { <nl> + mockStatic ( Closeables . class ) ; <nl> + doNothing ( ) . when ( Closeables . class ) ; <nl> + Closeables . closeQuietly ( any ( InputStream . class ) ) ; <nl> + <nl> / / exit . expectSystemExitWithStatus ( 0 ) ; <nl> exit . checkAssertionAfterwards ( ( ) - > { <nl> assertEquals ( auditStartMessage . getMessage ( ) + EOL <nl> @ @ - 398 , 6 + 415 , 9 @ @ public class MainTest { <nl> Main . main ( " - c " , getPath ( " InputMainConfig - classname - prop . xml " ) , <nl> " - p " , getPath ( " InputMainMycheckstyle . properties " ) , <nl> getPath ( " InputMain . java " ) ) ; <nl> + <nl> + verifyStatic ( times ( 2 ) ) ; <nl> + Closeables . closeQuietly ( any ( InputStream . class ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 511 , 6 + 531 , 10 @ @ public class MainTest { <nl> <nl> @ Test <nl> public void testCreateListenerWithLocationIllegalStateException ( ) throws Exception { <nl> + mockStatic ( CommonUtils . class ) ; <nl> + doNothing ( ) . when ( CommonUtils . class ) ; <nl> + CommonUtils . close ( any ( OutputStream . class ) ) ; <nl> + <nl> final Method method = Main . class . getDeclaredMethod ( " createListener " , String . class , <nl> String . class ) ; <nl> method . setAccessible ( true ) ; <nl> @ @ - 530 , 6 + 554 , 9 @ @ public class MainTest { <nl> / / method creates output folder <nl> FileUtils . deleteQuietly ( new File ( outDir ) ) ; <nl> } <nl> + <nl> + verifyStatic ( times ( 1 ) ) ; <nl> + CommonUtils . close ( any ( OutputStream . class ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 840 , 6 + 867 , 7 @ @ public class MainTest { <nl> } ) ; <nl> Main . main ( " - c " , getPath ( " InputMainConfig - custom - root - module . xml " ) , <nl> getPath ( " InputMain . java " ) ) ; <nl> + assertTrue ( TestRootModuleChecker . isDestroyed ( ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java <nl> index ea56f9e . . 790096f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java <nl> @ @ - 51 , 7 + 51 , 7 @ @ public class AbstractLoaderTest { <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> assertUtilsClassHasPrivateConstructor ( <nl> - AbstractLoader . FeaturesForVerySecureJavaInstallations . class ) ; <nl> + AbstractLoader . FeaturesForVerySecureJavaInstallations . class , true ) ; <nl> } <nl> <nl> private static final class DummyLoader extends AbstractLoader { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java <nl> index 45c6354 . . 190565c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java <nl> @ @ - 26 , 6 + 26 , 6 @ @ import org . junit . Test ; <nl> public class JavadocTokenTypesTest { <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( JavadocTokenTypes . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( JavadocTokenTypes . class , true ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java <nl> index e4979f1 . . 051aea2 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java <nl> @ @ - 36 , 6 + 36 , 6 @ @ public class TokenTypesTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( TokenTypes . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( TokenTypes . class , true ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> index ac2ddef . . 41bc438 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> @ @ - 170 , 7 + 170 , 7 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { <nl> <nl> @ Test <nl> public void testBlockCommentPositionHasPrivateConstr ( ) throws Exception { <nl> - TestUtils . assertUtilsClassHasPrivateConstructor ( BlockCommentPosition . class ) ; <nl> + TestUtils . assertUtilsClassHasPrivateConstructor ( BlockCommentPosition . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java <nl> index d9522e6 . . 0ad4fc3 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java <nl> @ @ - 34 , 7 + 34 , 7 @ @ public class BlockTagUtilsTest { <nl> <nl> @ Test <nl> public void testHasPrivateConstructor ( ) throws Exception { <nl> - TestUtils . assertUtilsClassHasPrivateConstructor ( BlockTagUtils . class ) ; <nl> + TestUtils . assertUtilsClassHasPrivateConstructor ( BlockTagUtils . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java <nl> index 14b9d00 . . 224fdb0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ public class InlineTagUtilsTest { <nl> <nl> @ Test <nl> public void testHasPrivateConstructor ( ) throws Exception { <nl> - TestUtils . assertUtilsClassHasPrivateConstructor ( InlineTagUtils . class ) ; <nl> + TestUtils . assertUtilsClassHasPrivateConstructor ( InlineTagUtils . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> index 9bed1b9 . . 5b07c4d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> @ @ - 51 , 7 + 51 , 7 @ @ public class TokenTypesDocletTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( TokenTypesDoclet . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( TokenTypesDoclet . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java <nl> index 11f6e35 . . 57e5a2b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java <nl> @ @ - 47 , 10 + 47 , 11 @ @ public final class TestUtils { <nl> / * * <nl> * Verifies that utils class has private constructor and invokes it to satisfy code coverage . <nl> * / <nl> - public static void assertUtilsClassHasPrivateConstructor ( final Class < ? > utilClass ) <nl> + public static void assertUtilsClassHasPrivateConstructor ( final Class < ? > utilClass , <nl> + boolean checkConstructorIsPrivate ) <nl> throws ReflectiveOperationException { <nl> final Constructor < ? > constructor = utilClass . getDeclaredConstructor ( ) ; <nl> - if ( ! Modifier . isPrivate ( constructor . getModifiers ( ) ) ) { <nl> + if ( checkConstructorIsPrivate & & ! Modifier . isPrivate ( constructor . getModifiers ( ) ) ) { <nl> Assert . fail ( " Constructor is not private " ) ; <nl> } <nl> constructor . setAccessible ( true ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java <nl> index 7f298ff . . 0371dc4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ public class AnnotationUtilityTest { <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> try { <nl> - assertUtilsClassHasPrivateConstructor ( AnnotationUtility . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( AnnotationUtility . class , true ) ; <nl> } <nl> catch ( InvocationTargetException ex ) { <nl> assertEquals ( " Invalid exception message " , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java <nl> index d7d521e . . 37715df 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public class CheckUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( CheckUtils . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( CheckUtils . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java <nl> index e5919dc . . 6745440 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java <nl> @ @ - 54 , 7 + 54 , 7 @ @ public class CommonUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( CommonUtils . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( CommonUtils . class , true ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java <nl> index abcb225 . . 3bc8ab3 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java <nl> @ @ - 217 , 7 + 217 , 7 @ @ public class JavadocUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( JavadocUtils . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( JavadocUtils . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java <nl> index c8bd363 . . bc2ce91 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public class ModuleReflectionUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( ModuleReflectionUtils . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( ModuleReflectionUtils . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java <nl> index 724e984 . . dc5490e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java <nl> @ @ - 34 , 7 + 34 , 7 @ @ public class ScopeUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( ScopeUtils . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( ScopeUtils . class , true ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java <nl> index 97b0c1e . . cf3f4b0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java <nl> @ @ - 38 , 7 + 38 , 7 @ @ public class TokenUtilsTest { <nl> <nl> @ Test <nl> public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> - assertUtilsClassHasPrivateConstructor ( TokenUtils . class ) ; <nl> + assertUtilsClassHasPrivateConstructor ( TokenUtils . class , true ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index ae4ec79 . . 089ed64 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 346 , 6 + 346 , 7 @ @ <nl> < module name = " SingleLineJavadoc " / > <nl> < module name = " JavadocTagContinuationIndentation " / > <nl> < module name = " JavadocParagraph " / > <nl> + < module name = " WriteTag " / > <nl> <nl> < ! - - <nl> All Checks bellow are our futute plan to enforce over our code . <nl> @ @ - 356 , 9 + 357 , 6 @ @ <nl> < module name = " SummaryJavadoc " > <nl> < property name = " severity " value = " ignore " / > <nl> < / module > <nl> - < module name = " WriteTag " > <nl> - < property name = " severity " value = " ignore " / > <nl> - < / module > <nl> <nl> < module name = " MissingCtor " > <nl> < ! - - <nl> diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 2c7cee0 . . cd8d97c 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 38 , 6 + 38 , 7 @ @ <nl> < suppress checks = " MethodCount " files = " [ \ \ / ] IndentationCheckTest . java $ " / > <nl> < suppress checks = " MethodCount " files = " [ \ \ / ] MainTest . java $ " / > <nl> < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > <nl> + < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> <nl> < ! - - suppressions to remove over time - - > <nl> < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java <nl> index b6055a3 . . df92965 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java <nl> @ @ - 248 , 6 + 248 , 9 @ @ class FileDrop { <nl> void filesDropped ( File . . . files ) ; <nl> } <nl> <nl> + / * * <nl> + * Listener and handler for file drop target events . <nl> + * / <nl> private class FileDropTargetListener extends DropTargetAdapter { <nl> / * * Target component to drop to . * / <nl> private final Component component ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> index 8e76bdb . . 224933c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java <nl> @ @ - 259 , 6 + 259 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> } <nl> <nl> + / * * <nl> + * Filter for Java files . <nl> + * / <nl> private static class JavaFileFilter extends FileFilter { <nl> @ Override <nl> public boolean accept ( File file ) { <nl> @ @ - 274 , 6 + 277 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> } <nl> <nl> + / * * <nl> + * Handler for file selection action events . <nl> + * / <nl> private class FileSelectionAction extends AbstractAction { <nl> / * * <nl> * Serial ID . <nl> @ @ - 300 , 6 + 306 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> } <nl> <nl> + / * * <nl> + * Handler for reload action events . <nl> + * / <nl> private class ReloadAction extends AbstractAction { <nl> / * * <nl> * Serial UID . <nl> @ @ - 320 , 6 + 329 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { <nl> } <nl> } <nl> <nl> + / * * <nl> + * Listener and handler for file dropped events . <nl> + * / <nl> private class FileDropListener implements FileDrop . Listener { <nl> / * * Scroll pane . * / <nl> private final JScrollPane scrollPane ;

TEST DIFF:
diff - - git a / config / pmd - main . xml b / config / pmd - main . xml 
 index 70929fd . . 7c05c75 100644 
 - - - a / config / pmd - main . xml 
 + + + b / config / pmd - main . xml 
 @ @ - 19 , 4 + 19 , 11 @ @ 
 | / / MethodDeclaration [ @ Name = ' getHashCodeBasedOnObjectContent ' and . . / . . / . . [ @ Image = ' PropertyCacheFile ' ] ] " / > 
 < / properties > 
 < / rule > 
 + < rule ref = " rulesets / java / basic . xml / CollapsibleIfStatements " > 
 + < properties > 
 + < ! - - till https : / / github . com / hcoles / pitest / issues / 377 - - > 
 + < property name = " violationSuppressXPath " value = " / / MethodDeclaration [ @ Name = ' main ' and . . / . . / . . [ @ Image = ' Main ' ] ] " / > 
 + < / properties > 
 + < / rule > 
 + 
 < / ruleset > 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 965bd06 . . 50f22ba 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 49 , 6 + 49 , 7 @ @ 
 < suppress checks = " ExecutableStatementCount " files = " . * GeneratedJavaTokenTypesTest \ . java " / > 
 < suppress checks = " JavaNCSS " files = " . * GeneratedJavaTokenTypesTest \ . java " / > 
 < suppress checks = " ExecutableStatementCount " files = " . * IllegalInstantiationCheckTest \ . java " / > 
 + < suppress checks = " ExecutableStatementCount " files = " . * Main \ . java " / > 
 
 < suppress checks = " . " files = " . * JavadocTokenTypes \ . java " / > 
 < suppress checks = " . " files = " . * ParseTreeBuilder \ . java " / > 
 diff - - git a / pom . xml b / pom . xml 
 index feef8b2 . . f81666f 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 2091 , 23 + 2091 , 6 @ @ 
 < targetTests > 
 < param > com . puppycrawl . tools . checkstyle . MainTest < / param > 
 < / targetTests > 
 - < excludedMethods > 
 - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > 
 - < param > main < / param > 
 - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > 
 - < param > createListener < / param > 
 - < / excludedMethods > 
 - < avoidCallsTo > 
 - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > 
 - < avoidCallsTo > com . google . common . io . Closeables < / avoidCallsTo > 
 - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > 
 - < avoidCallsTo > com . puppycrawl . tools . checkstyle . utils . CommonUtils < / avoidCallsTo > 
 - < ! - - till https : / / github . com / checkstyle / checkstyle / issues / 4399 - - > 
 - < avoidCallsTo > com . puppycrawl . tools . checkstyle . api . RootModule < / avoidCallsTo > 
 - < ! - - add default suppressions - - > 
 - < avoidCallsTo > org . apache . commons . logging < / avoidCallsTo > 
 - < avoidCallsTo > java . util . logging < / avoidCallsTo > 
 - < / avoidCallsTo > 
 < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index 5198806 . . df2e0d2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 226 , 11 + 226 , 14 @ @ public final class Main { 
 } 
 finally { 
 / / return exit code base on validation of Checker 
 - if ( errorCounter ! = 0 & & ! cliViolations ) { 
 - final LocalizedMessage errorCounterMessage = new LocalizedMessage ( 0 , 
 - Definitions . CHECKSTYLE _ BUNDLE , ERROR _ COUNTER , 
 - new String [ ] { String . valueOf ( errorCounter ) } , null , Main . class , null ) ; 
 - System . out . println ( errorCounterMessage . getMessage ( ) ) ; 
 + / / two ifs exist till https : / / github . com / hcoles / pitest / issues / 377 
 + if ( errorCounter ! = 0 ) { 
 + if ( ! cliViolations ) { 
 + final LocalizedMessage errorCounterMessage = new LocalizedMessage ( 0 , 
 + Definitions . CHECKSTYLE _ BUNDLE , ERROR _ COUNTER , 
 + new String [ ] { String . valueOf ( errorCounter ) } , null , Main . class , null ) ; 
 + System . out . println ( errorCounterMessage . getMessage ( ) ) ; 
 + } 
 } 
 if ( exitStatus ! = 0 ) { 
 System . exit ( exitStatus ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 index 1fb4a05 . . 6dc83e9 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / AstTreeStringPrinterTest . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public class AstTreeStringPrinterTest extends AbstractTreeTestSupport { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( AstTreeStringPrinter . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( AstTreeStringPrinter . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java 
 index 5235e7a . . 995f1b0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DefinitionsTest . java 
 @ @ - 26 , 6 + 26 , 6 @ @ import org . junit . Test ; 
 public class DefinitionsTest { 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( Definitions . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( Definitions . class , true ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java 
 index ec74142 . . c2879c7 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / DetailNodeTreeStringPrinterTest . java 
 @ @ - 45 , 7 + 45 , 7 @ @ public class DetailNodeTreeStringPrinterTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( DetailNodeTreeStringPrinter . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( DetailNodeTreeStringPrinter . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index b08e787 . . 9d9c99f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 25 , 11 + 25 , 18 @ @ import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertNotEquals ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 + import static org . mockito . Matchers . any ; 
 + import static org . mockito . Mockito . times ; 
 + import static org . powermock . api . mockito . PowerMockito . doNothing ; 
 import static org . powermock . api . mockito . PowerMockito . mock ; 
 + import static org . powermock . api . mockito . PowerMockito . mockStatic ; 
 + import static org . powermock . api . mockito . PowerMockito . verifyStatic ; 
 import static org . powermock . api . mockito . PowerMockito . when ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 + import java . io . InputStream ; 
 + import java . io . OutputStream ; 
 import java . lang . reflect . InvocationTargetException ; 
 import java . lang . reflect . Method ; 
 import java . nio . charset . StandardCharsets ; 
 @ @ - 52 , 11 + 59 , 18 @ @ import org . junit . contrib . java . lang . system . ExpectedSystemExit ; 
 import org . junit . contrib . java . lang . system . SystemErrRule ; 
 import org . junit . contrib . java . lang . system . SystemOutRule ; 
 import org . junit . rules . TemporaryFolder ; 
 + import org . junit . runner . RunWith ; 
 + import org . powermock . core . classloader . annotations . PrepareForTest ; 
 + import org . powermock . modules . junit4 . PowerMockRunner ; 
 
 + import com . google . common . io . Closeables ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 import com . puppycrawl . tools . checkstyle . api . LocalizedMessage ; 
 + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 + @ RunWith ( PowerMockRunner . class ) 
 + @ PrepareForTest ( { Main . class , CommonUtils . class , Closeables . class } ) 
 public class MainTest { 
 private static final String USAGE = String . format ( Locale . ROOT , 
 " usage : java com . puppycrawl . tools . checkstyle . Main [ options ] - c < config . xml > " 
 @ @ - 148 , 7 + 162 , 7 @ @ public class MainTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( Main . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( Main . class , false ) ; 
 } 
 
 @ Test 
 @ @ - 387 , 8 + 401 , 11 @ @ public class MainTest { 
 } 
 
 @ Test 
 - public void testExistingTargetFilePlainOutputProperties ( ) 
 - throws Exception { 
 + public void testExistingTargetFilePlainOutputProperties ( ) throws Exception { 
 + mockStatic ( Closeables . class ) ; 
 + doNothing ( ) . when ( Closeables . class ) ; 
 + Closeables . closeQuietly ( any ( InputStream . class ) ) ; 
 + 
 / / exit . expectSystemExitWithStatus ( 0 ) ; 
 exit . checkAssertionAfterwards ( ( ) - > { 
 assertEquals ( auditStartMessage . getMessage ( ) + EOL 
 @ @ - 398 , 6 + 415 , 9 @ @ public class MainTest { 
 Main . main ( " - c " , getPath ( " InputMainConfig - classname - prop . xml " ) , 
 " - p " , getPath ( " InputMainMycheckstyle . properties " ) , 
 getPath ( " InputMain . java " ) ) ; 
 + 
 + verifyStatic ( times ( 2 ) ) ; 
 + Closeables . closeQuietly ( any ( InputStream . class ) ) ; 
 } 
 
 @ Test 
 @ @ - 511 , 6 + 531 , 10 @ @ public class MainTest { 
 
 @ Test 
 public void testCreateListenerWithLocationIllegalStateException ( ) throws Exception { 
 + mockStatic ( CommonUtils . class ) ; 
 + doNothing ( ) . when ( CommonUtils . class ) ; 
 + CommonUtils . close ( any ( OutputStream . class ) ) ; 
 + 
 final Method method = Main . class . getDeclaredMethod ( " createListener " , String . class , 
 String . class ) ; 
 method . setAccessible ( true ) ; 
 @ @ - 530 , 6 + 554 , 9 @ @ public class MainTest { 
 / / method creates output folder 
 FileUtils . deleteQuietly ( new File ( outDir ) ) ; 
 } 
 + 
 + verifyStatic ( times ( 1 ) ) ; 
 + CommonUtils . close ( any ( OutputStream . class ) ) ; 
 } 
 
 @ Test 
 @ @ - 840 , 6 + 867 , 7 @ @ public class MainTest { 
 } ) ; 
 Main . main ( " - c " , getPath ( " InputMainConfig - custom - root - module . xml " ) , 
 getPath ( " InputMain . java " ) ) ; 
 + assertTrue ( TestRootModuleChecker . isDestroyed ( ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java 
 index ea56f9e . . 790096f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractLoaderTest . java 
 @ @ - 51 , 7 + 51 , 7 @ @ public class AbstractLoaderTest { 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 assertUtilsClassHasPrivateConstructor ( 
 - AbstractLoader . FeaturesForVerySecureJavaInstallations . class ) ; 
 + AbstractLoader . FeaturesForVerySecureJavaInstallations . class , true ) ; 
 } 
 
 private static final class DummyLoader extends AbstractLoader { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java 
 index 45c6354 . . 190565c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypesTest . java 
 @ @ - 26 , 6 + 26 , 6 @ @ import org . junit . Test ; 
 public class JavadocTokenTypesTest { 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( JavadocTokenTypes . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( JavadocTokenTypes . class , true ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java 
 index e4979f1 . . 051aea2 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / TokenTypesTest . java 
 @ @ - 36 , 6 + 36 , 6 @ @ public class TokenTypesTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( TokenTypes . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( TokenTypes . class , true ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 index ac2ddef . . 41bc438 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 @ @ - 170 , 7 + 170 , 7 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { 
 
 @ Test 
 public void testBlockCommentPositionHasPrivateConstr ( ) throws Exception { 
 - TestUtils . assertUtilsClassHasPrivateConstructor ( BlockCommentPosition . class ) ; 
 + TestUtils . assertUtilsClassHasPrivateConstructor ( BlockCommentPosition . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java 
 index d9522e6 . . 0ad4fc3 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / BlockTagUtilsTest . java 
 @ @ - 34 , 7 + 34 , 7 @ @ public class BlockTagUtilsTest { 
 
 @ Test 
 public void testHasPrivateConstructor ( ) throws Exception { 
 - TestUtils . assertUtilsClassHasPrivateConstructor ( BlockTagUtils . class ) ; 
 + TestUtils . assertUtilsClassHasPrivateConstructor ( BlockTagUtils . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java 
 index 14b9d00 . . 224fdb0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / utils / InlineTagUtilsTest . java 
 @ @ - 36 , 7 + 36 , 7 @ @ public class InlineTagUtilsTest { 
 
 @ Test 
 public void testHasPrivateConstructor ( ) throws Exception { 
 - TestUtils . assertUtilsClassHasPrivateConstructor ( InlineTagUtils . class ) ; 
 + TestUtils . assertUtilsClassHasPrivateConstructor ( InlineTagUtils . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 index 9bed1b9 . . 5b07c4d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 @ @ - 51 , 7 + 51 , 7 @ @ public class TokenTypesDocletTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( TokenTypesDoclet . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( TokenTypesDoclet . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java 
 index 11f6e35 . . 57e5a2b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java 
 @ @ - 47 , 10 + 47 , 11 @ @ public final class TestUtils { 
 / * * 
 * Verifies that utils class has private constructor and invokes it to satisfy code coverage . 
 * / 
 - public static void assertUtilsClassHasPrivateConstructor ( final Class < ? > utilClass ) 
 + public static void assertUtilsClassHasPrivateConstructor ( final Class < ? > utilClass , 
 + boolean checkConstructorIsPrivate ) 
 throws ReflectiveOperationException { 
 final Constructor < ? > constructor = utilClass . getDeclaredConstructor ( ) ; 
 - if ( ! Modifier . isPrivate ( constructor . getModifiers ( ) ) ) { 
 + if ( checkConstructorIsPrivate & & ! Modifier . isPrivate ( constructor . getModifiers ( ) ) ) { 
 Assert . fail ( " Constructor is not private " ) ; 
 } 
 constructor . setAccessible ( true ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java 
 index 7f298ff . . 0371dc4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / AnnotationUtilityTest . java 
 @ @ - 36 , 7 + 36 , 7 @ @ public class AnnotationUtilityTest { 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 try { 
 - assertUtilsClassHasPrivateConstructor ( AnnotationUtility . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( AnnotationUtility . class , true ) ; 
 } 
 catch ( InvocationTargetException ex ) { 
 assertEquals ( " Invalid exception message " , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java 
 index d7d521e . . 37715df 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CheckUtilsTest . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public class CheckUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( CheckUtils . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( CheckUtils . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java 
 index e5919dc . . 6745440 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / CommonUtilsTest . java 
 @ @ - 54 , 7 + 54 , 7 @ @ public class CommonUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( CommonUtils . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( CommonUtils . class , true ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java 
 index abcb225 . . 3bc8ab3 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtilsTest . java 
 @ @ - 217 , 7 + 217 , 7 @ @ public class JavadocUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( JavadocUtils . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( JavadocUtils . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java 
 index c8bd363 . . bc2ce91 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ModuleReflectionUtilsTest . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public class ModuleReflectionUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( ModuleReflectionUtils . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( ModuleReflectionUtils . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java 
 index 724e984 . . dc5490e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtilsTest . java 
 @ @ - 34 , 7 + 34 , 7 @ @ public class ScopeUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( ScopeUtils . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( ScopeUtils . class , true ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java 
 index 97b0c1e . . cf3f4b0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / TokenUtilsTest . java 
 @ @ - 38 , 7 + 38 , 7 @ @ public class TokenUtilsTest { 
 
 @ Test 
 public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 - assertUtilsClassHasPrivateConstructor ( TokenUtils . class ) ; 
 + assertUtilsClassHasPrivateConstructor ( TokenUtils . class , true ) ; 
 } 
 
 @ Test

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index ae4ec79 . . 089ed64 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 346 , 6 + 346 , 7 @ @ 
 < module name = " SingleLineJavadoc " / > 
 < module name = " JavadocTagContinuationIndentation " / > 
 < module name = " JavadocParagraph " / > 
 + < module name = " WriteTag " / > 
 
 < ! - - 
 All Checks bellow are our futute plan to enforce over our code . 
 @ @ - 356 , 9 + 357 , 6 @ @ 
 < module name = " SummaryJavadoc " > 
 < property name = " severity " value = " ignore " / > 
 < / module > 
 - < module name = " WriteTag " > 
 - < property name = " severity " value = " ignore " / > 
 - < / module > 
 
 < module name = " MissingCtor " > 
 < ! - - 
 diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 2c7cee0 . . cd8d97c 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 38 , 6 + 38 , 7 @ @ 
 < suppress checks = " MethodCount " files = " [ \ \ / ] IndentationCheckTest . java $ " / > 
 < suppress checks = " MethodCount " files = " [ \ \ / ] MainTest . java $ " / > 
 < suppress checks = " EqualsAvoidNull " files = " [ \ \ / ] Int . * FilterTest . java $ " / > 
 + < suppress checks = " WriteTag " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 
 < ! - - suppressions to remove over time - - > 
 < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java 
 index b6055a3 . . df92965 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / FileDrop . java 
 @ @ - 248 , 6 + 248 , 9 @ @ class FileDrop { 
 void filesDropped ( File . . . files ) ; 
 } 
 
 + / * * 
 + * Listener and handler for file drop target events . 
 + * / 
 private class FileDropTargetListener extends DropTargetAdapter { 
 / * * Target component to drop to . * / 
 private final Component component ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 index 8e76bdb . . 224933c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeInfoPanel . java 
 @ @ - 259 , 6 + 259 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 } 
 
 + / * * 
 + * Filter for Java files . 
 + * / 
 private static class JavaFileFilter extends FileFilter { 
 @ Override 
 public boolean accept ( File file ) { 
 @ @ - 274 , 6 + 277 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 } 
 
 + / * * 
 + * Handler for file selection action events . 
 + * / 
 private class FileSelectionAction extends AbstractAction { 
 / * * 
 * Serial ID . 
 @ @ - 300 , 6 + 306 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 } 
 
 + / * * 
 + * Handler for reload action events . 
 + * / 
 private class ReloadAction extends AbstractAction { 
 / * * 
 * Serial UID . 
 @ @ - 320 , 6 + 329 , 9 @ @ public class ParseTreeInfoPanel extends JPanel { 
 } 
 } 
 
 + / * * 
 + * Listener and handler for file dropped events . 
 + * / 
 private class FileDropListener implements FileDrop . Listener { 
 / * * Scroll pane . * / 
 private final JScrollPane scrollPane ;
