BLEU SCORE: 0.8408964152537145

TEST MSG: infra : debug info for travis build 3
GENERATED MSG: infra : debug info for travis build 2

TEST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index e8ecc97 . . 7a35d9d 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 239 , 8 + 239 , 8 @ @ matrix : <nl> - CMD0 = " if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi " <nl> - CMD1 = " & & git clone https : / / github . com / checkstyle / contribution & & cd contribution / releasenotes - xdoc - builder " <nl> - CMD2 = " & & mvn clean compile package " <nl> - - CMD3 = " & & cd . . / . . / & & git tag & & git log & & git rev - list - - tags - - header - - max - count = 1 " <nl> - - CMD4 = " & & LATEST _ RELEASE _ TAG = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) ) " <nl> + - CMD3 = " & & cd . . / . . / & & git clone https : / / github . com / checkstyle / checkstyle & & cd checkstyle " <nl> + - CMD4 = " & & LATEST _ RELEASE _ TAG = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) ) & & cd . . / " <nl> - CMD5 = " & & CS _ RELEASE _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec | sed ' s / - SNAPSHOT / / ' ) " <nl> - CMD6 = " & & java - jar contribution / releasenotes - xdoc - builder / target / releasenotes - xdoc - builder - 1 . 0 - all . jar " <nl> - CMD7 = " - localRepoPath . - startRef \ $ LATEST _ RELEASE _ TAG - releaseNumber \ $ CS _ RELEASE _ VERSION - authToken $ GITHUB _ AUTH _ TOKEN "
NEAREST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 955a817 . . d3617de 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 320 , 7 + 320 , 7 @ @ <nl> < module name = " AbbreviationAsWordInName " > <nl> < property name = " ignoreFinal " value = " false " / > <nl> < property name = " allowedAbbreviationLength " value = " 1 " / > <nl> - < property name = " allowedAbbreviations " value = " AST , CPP , RTE , RE , CSV " / > <nl> + < property name = " allowedAbbreviations " value = " AST , CPP , RTE , CSV " / > <nl> < / module > <nl> < module name = " AbstractClassName " / > <nl> < module name = " ClassTypeParameterName " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java <nl> index 50803ba . . 4b0326b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java <nl> @ @ - 87 , 9 + 87 , 9 @ @ public class WriteTagCheck <nl> public static final String TAG _ FORMAT = " type . tagFormat " ; <nl> <nl> / * * Compiled regexp to match tag . * * / <nl> - private Pattern tagRE ; <nl> + private Pattern tagRegExp ; <nl> / * * Compiled regexp to match tag content . * * / <nl> - private Pattern tagFormatRE ; <nl> + private Pattern tagFormatRegExp ; <nl> <nl> / * * Regexp to match tag . * / <nl> private String tag ; <nl> @ @ - 104 , 7 + 104 , 7 @ @ public class WriteTagCheck <nl> * / <nl> public void setTag ( String tag ) { <nl> this . tag = tag ; <nl> - tagRE = CommonUtils . createPattern ( tag + " \ \ s * ( . * $ ) " ) ; <nl> + tagRegExp = CommonUtils . createPattern ( tag + " \ \ s * ( . * $ ) " ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 113 , 7 + 113 , 7 @ @ public class WriteTagCheck <nl> * / <nl> public void setTagFormat ( String format ) { <nl> tagFormat = format ; <nl> - tagFormatRE = CommonUtils . createPattern ( format ) ; <nl> + tagFormatRegExp = CommonUtils . createPattern ( format ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 174 , 19 + 174 , 19 @ @ public class WriteTagCheck <nl> * @ param comment the Javadoc comment for the type definition . <nl> * / <nl> private void checkTag ( int lineNo , String . . . comment ) { <nl> - if ( tagRE = = null ) { <nl> + if ( tagRegExp = = null ) { <nl> return ; <nl> } <nl> <nl> int tagCount = 0 ; <nl> for ( int i = 0 ; i < comment . length ; i + + ) { <nl> final String commentValue = comment [ i ] ; <nl> - final Matcher matcher = tagRE . matcher ( commentValue ) ; <nl> + final Matcher matcher = tagRegExp . matcher ( commentValue ) ; <nl> if ( matcher . find ( ) ) { <nl> tagCount + = 1 ; <nl> final int contentStart = matcher . start ( 1 ) ; <nl> final String content = commentValue . substring ( contentStart ) ; <nl> - if ( tagFormatRE = = null | | tagFormatRE . matcher ( content ) . find ( ) ) { <nl> + if ( tagFormatRegExp = = null | | tagFormatRegExp . matcher ( content ) . find ( ) ) { <nl> logTag ( lineNo + i - comment . length , tag , content ) ; <nl> } <nl> else {

TEST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index e8ecc97 . . 7a35d9d 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 239 , 8 + 239 , 8 @ @ matrix : 
 - CMD0 = " if [ [ $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi " 
 - CMD1 = " & & git clone https : / / github . com / checkstyle / contribution & & cd contribution / releasenotes - xdoc - builder " 
 - CMD2 = " & & mvn clean compile package " 
 - - CMD3 = " & & cd . . / . . / & & git tag & & git log & & git rev - list - - tags - - header - - max - count = 1 " 
 - - CMD4 = " & & LATEST _ RELEASE _ TAG = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) ) " 
 + - CMD3 = " & & cd . . / . . / & & git clone https : / / github . com / checkstyle / checkstyle & & cd checkstyle " 
 + - CMD4 = " & & LATEST _ RELEASE _ TAG = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) ) & & cd . . / " 
 - CMD5 = " & & CS _ RELEASE _ VERSION = $ ( mvn - q - Dexec . executable = ' echo ' - Dexec . args = ' $ { project . version } ' - - non - recursive org . codehaus . mojo : exec - maven - plugin : 1 . 3 . 1 : exec | sed ' s / - SNAPSHOT / / ' ) " 
 - CMD6 = " & & java - jar contribution / releasenotes - xdoc - builder / target / releasenotes - xdoc - builder - 1 . 0 - all . jar " 
 - CMD7 = " - localRepoPath . - startRef \ $ LATEST _ RELEASE _ TAG - releaseNumber \ $ CS _ RELEASE _ VERSION - authToken $ GITHUB _ AUTH _ TOKEN "

NEAREST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 955a817 . . d3617de 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 320 , 7 + 320 , 7 @ @ 
 < module name = " AbbreviationAsWordInName " > 
 < property name = " ignoreFinal " value = " false " / > 
 < property name = " allowedAbbreviationLength " value = " 1 " / > 
 - < property name = " allowedAbbreviations " value = " AST , CPP , RTE , RE , CSV " / > 
 + < property name = " allowedAbbreviations " value = " AST , CPP , RTE , CSV " / > 
 < / module > 
 < module name = " AbstractClassName " / > 
 < module name = " ClassTypeParameterName " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java 
 index 50803ba . . 4b0326b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheck . java 
 @ @ - 87 , 9 + 87 , 9 @ @ public class WriteTagCheck 
 public static final String TAG _ FORMAT = " type . tagFormat " ; 
 
 / * * Compiled regexp to match tag . * * / 
 - private Pattern tagRE ; 
 + private Pattern tagRegExp ; 
 / * * Compiled regexp to match tag content . * * / 
 - private Pattern tagFormatRE ; 
 + private Pattern tagFormatRegExp ; 
 
 / * * Regexp to match tag . * / 
 private String tag ; 
 @ @ - 104 , 7 + 104 , 7 @ @ public class WriteTagCheck 
 * / 
 public void setTag ( String tag ) { 
 this . tag = tag ; 
 - tagRE = CommonUtils . createPattern ( tag + " \ \ s * ( . * $ ) " ) ; 
 + tagRegExp = CommonUtils . createPattern ( tag + " \ \ s * ( . * $ ) " ) ; 
 } 
 
 / * * 
 @ @ - 113 , 7 + 113 , 7 @ @ public class WriteTagCheck 
 * / 
 public void setTagFormat ( String format ) { 
 tagFormat = format ; 
 - tagFormatRE = CommonUtils . createPattern ( format ) ; 
 + tagFormatRegExp = CommonUtils . createPattern ( format ) ; 
 } 
 
 / * * 
 @ @ - 174 , 19 + 174 , 19 @ @ public class WriteTagCheck 
 * @ param comment the Javadoc comment for the type definition . 
 * / 
 private void checkTag ( int lineNo , String . . . comment ) { 
 - if ( tagRE = = null ) { 
 + if ( tagRegExp = = null ) { 
 return ; 
 } 
 
 int tagCount = 0 ; 
 for ( int i = 0 ; i < comment . length ; i + + ) { 
 final String commentValue = comment [ i ] ; 
 - final Matcher matcher = tagRE . matcher ( commentValue ) ; 
 + final Matcher matcher = tagRegExp . matcher ( commentValue ) ; 
 if ( matcher . find ( ) ) { 
 tagCount + = 1 ; 
 final int contentStart = matcher . start ( 1 ) ; 
 final String content = commentValue . substring ( contentStart ) ; 
 - if ( tagFormatRE = = null | | tagFormatRE . matcher ( content ) . find ( ) ) { 
 + if ( tagFormatRegExp = = null | | tagFormatRegExp . matcher ( content ) . find ( ) ) { 
 logTag ( lineNo + i - comment . length , tag , content ) ; 
 } 
 else {
