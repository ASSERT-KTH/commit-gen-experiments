BLEU SCORE: 0.037954847898457066

TEST MSG: Issue # 5516 : Jacoco code coverage report
GENERATED MSG: Created JaCoCo profile of pom . xml , issue # 1173

TEST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index 05bc34e . . e3b7a5a 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 41 , 6 + 41 , 12 @ @ matrix : <nl> - DESC = " checkstyle and sevntu - checkstyle " <nl> - CMD = " export MAVEN _ OPTS = ' - Xmx2000m ' & & mvn - e clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dspotbugs . skip = true - Dcobertura . skip = true " <nl> <nl> + # jacoco ( oraclejdk8 ) <nl> + - jdk : oraclejdk8 <nl> + env : <nl> + - DESC = " jacoco " <nl> + - CMD = " export MAVEN _ OPTS = ' - Xmx2000m ' & & mvn - e clean verify - Pno - validations - Pjacoco - check - DskipTests = false " <nl> + <nl> # cobertura and codecov ( oraclejdk8 ) <nl> - jdk : oraclejdk8 <nl> env : <nl> diff - - git a / pom . xml b / pom . xml <nl> index 402e3b0 . . c268679 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1610 , 6 + 1610 , 260 @ @ <nl> < / profile > <nl> <nl> < profile > <nl> + < id > jacoco - check < / id > <nl> + < build > <nl> + < plugins > <nl> + < plugin > <nl> + < groupId > org . jacoco < / groupId > <nl> + < artifactId > jacoco - maven - plugin < / artifactId > <nl> + < version > $ { maven . jacoco . plugin . version } < / version > <nl> + < executions > <nl> + < execution > <nl> + < id > default - instrument < / id > <nl> + < goals > <nl> + < goal > instrument < / goal > <nl> + < / goals > <nl> + < phase > test - compile < / phase > <nl> + < / execution > <nl> + < execution > <nl> + < id > default - restore - instrumented - classes < / id > <nl> + < goals > <nl> + < goal > restore - instrumented - classes < / goal > <nl> + < / goals > <nl> + < / execution > <nl> + < execution > <nl> + < id > default - report < / id > <nl> + < phase > site < / phase > <nl> + < goals > <nl> + < goal > report < / goal > <nl> + < / goals > <nl> + < / execution > <nl> + < execution > <nl> + < id > default - check < / id > <nl> + < goals > <nl> + < goal > check < / goal > <nl> + < / goals > <nl> + < configuration > <nl> + < dataFile > $ { project . build . directory } / jacoco / jacoco . exec < / dataFile > <nl> + < rules > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < excludes > <nl> + < ! - - Terence Parr , The Definitive ANTLR 4 Reference , 2 . 4 Building Language Applications Using Parse Trees : <nl> + " To better support access to the elements within specific nodes , ANTLR generates <nl> + a RuleNode subclass for each rule . . . . Given this description of the concrete types , we could write <nl> + code by hand to perform a depth - first walk of the tree . We could perform whatever actions we <nl> + wanted as we discovered and finished nodes . Typical operations are things such as <nl> + computing results , updating data structures , or generating output . " <nl> + We don ' t need these classes as we use only ParseTree methods for walking . - - > <nl> + < exclude > com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaRecognizer < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaLexer < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser * < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocLexer < / exclude > <nl> + < ! - - Swing related classes - - > <nl> + < exclude > com . puppycrawl . tools . checkstyle . gui . BaseCellEditor * < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . gui . CodeSelector < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTable * < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . gui . ListToTreeSelectionModelWrapper * < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . gui . Main * < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . gui . MainFrame * < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . gui . ParseTreeTableModel * < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTableCellRenderer * < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTableModelAdapter * < / exclude > <nl> + < ! - - Deprecated classes - - > <nl> + < exclude > com . puppycrawl . tools . checkstyle . checks . naming . AbstractTypeParameterNameCheck < / exclude > <nl> + < ! - - Classes with their own config - - > <nl> + < exclude > com . puppycrawl . tools . checkstyle . checks . javadoc . ClassResolver < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . utils . JavadocUtils < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . PackageNamesLoader < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . Main < / exclude > <nl> + < exclude > com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . JavadocParserErrorStrategy < / exclude > <nl> + < / excludes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 1 . 00 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 1 . 00 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < includes > <nl> + < include > com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaRecognizer < / include > <nl> + < / includes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 96 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 73 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < includes > <nl> + < include > com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaLexer < / include > <nl> + < / includes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 96 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 79 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < includes > <nl> + < include > com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser < / include > <nl> + < / includes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 54 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 44 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < includes > <nl> + < include > com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocLexer < / include > <nl> + < / includes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 84 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 64 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < includes > <nl> + < include > com . puppycrawl . tools . checkstyle . checks . javadoc . ClassResolver < / include > <nl> + < / includes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 98 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 1 . 00 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < includes > <nl> + < include > com . puppycrawl . tools . checkstyle . utils . JavadocUtils < / include > <nl> + < / includes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 99 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 98 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < includes > <nl> + < include > com . puppycrawl . tools . checkstyle . PackageNamesLoader < / include > <nl> + < / includes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 97 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 1 . 00 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < includes > <nl> + < include > com . puppycrawl . tools . checkstyle . Main < / include > <nl> + < / includes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 99 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 1 . 00 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < rule > <nl> + < element > CLASS < / element > <nl> + < includes > <nl> + < include > com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . JavadocParserErrorStrategy < / include > <nl> + < / includes > <nl> + < limits > <nl> + < limit > <nl> + < counter > LINE < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 0 . 50 < / minimum > <nl> + < / limit > <nl> + < limit > <nl> + < counter > BRANCH < / counter > <nl> + < value > COVEREDRATIO < / value > <nl> + < minimum > 1 . 00 < / minimum > <nl> + < / limit > <nl> + < / limits > <nl> + < / rule > <nl> + < / rules > <nl> + < / configuration > <nl> + < / execution > <nl> + < / executions > <nl> + < / plugin > <nl> + < / plugins > <nl> + < / build > <nl> + < / profile > <nl> + <nl> + < profile > <nl> < id > cobertura - check < / id > <nl> < activation > <nl> < jdk > [ 1 . 8 , ) < / jdk >
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 6edd09e . . 5679d45 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1106 , 7 + 1106 , 6 @ @ <nl> < regex > < pattern > . * . checks . AbstractOptionCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 80 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . AbstractTypeAwareCheck < / pattern > < branchRate > 87 < / branchRate > < lineRate > 84 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . AbstractTypeAwareCheck \ $ . * < / pattern > < branchRate > 50 < / branchRate > < lineRate > 80 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . checks . CheckUtils < / pattern > < branchRate > 91 < / branchRate > < lineRate > 97 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . ClassResolver < / pattern > < branchRate > 85 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . AbstractDeclarationCollector < / pattern > < branchRate > 94 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . NewlineAtEndOfFileCheck < / pattern > < branchRate > 83 < / branchRate > < lineRate > 88 < / lineRate > < / regex > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / CheckUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / CheckUtilsTest . java <nl> new file mode 100644 <nl> index 0000000 . . bba8ea4 <nl> - - - / dev / null <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / CheckUtilsTest . java <nl> @ @ - 0 , 0 + 1 , 124 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / checkstyle : Checks Java source code for adherence to a set of rules . <nl> + / / Copyright ( C ) 2001 - 2015 the original author or authors . <nl> + / / <nl> + / / This library is free software ; you can redistribute it and / or <nl> + / / modify it under the terms of the GNU Lesser General Public <nl> + / / License as published by the Free Software Foundation ; either <nl> + / / version 2 . 1 of the License , or ( at your option ) any later version . <nl> + / / <nl> + / / This library is distributed in the hope that it will be useful , <nl> + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + / / Lesser General Public License for more details . <nl> + / / <nl> + / / You should have received a copy of the GNU Lesser General Public <nl> + / / License along with this library ; if not , write to the Free Software <nl> + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + package com . puppycrawl . tools . checkstyle . checks ; <nl> + <nl> + import static com . puppycrawl . tools . checkstyle . TestUtils . assertUtilsClassHasPrivateConstructor ; <nl> + <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> + <nl> + public class CheckUtilsTest { <nl> + <nl> + @ Test <nl> + public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { <nl> + try { <nl> + assertUtilsClassHasPrivateConstructor ( CheckUtils . class ) ; <nl> + Assert . fail ( ) ; <nl> + } <nl> + catch ( InvocationTargetException ex ) { <nl> + Assert . assertTrue ( ex . getCause ( ) instanceof UnsupportedOperationException ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> + public void testParseDouble ( ) throws Exception { <nl> + CheckUtils . parseDouble ( " 1 _ 02 " , TokenTypes . ASSIGN ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testElseWithCurly ( ) throws Exception { <nl> + DetailAST ast = new DetailAST ( ) ; <nl> + ast . setType ( TokenTypes . ASSIGN ) ; <nl> + ast . setText ( " ASSIGN " ) ; <nl> + Assert . assertFalse ( CheckUtils . isElseIf ( ast ) ) ; <nl> + <nl> + DetailAST parentAst = new DetailAST ( ) ; <nl> + parentAst . setType ( TokenTypes . LCURLY ) ; <nl> + parentAst . setText ( " LCURLY " ) ; <nl> + <nl> + DetailAST ifAst = new DetailAST ( ) ; <nl> + ifAst . setType ( TokenTypes . LITERAL _ IF ) ; <nl> + ifAst . setText ( " IF " ) ; <nl> + parentAst . addChild ( ifAst ) ; <nl> + <nl> + Assert . assertFalse ( CheckUtils . isElseIf ( ifAst ) ) ; <nl> + <nl> + DetailAST parentAst2 = new DetailAST ( ) ; <nl> + parentAst2 . setType ( TokenTypes . SLIST ) ; <nl> + parentAst2 . setText ( " SLIST " ) ; <nl> + <nl> + parentAst2 . addChild ( ifAst ) ; <nl> + <nl> + Assert . assertFalse ( CheckUtils . isElseIf ( ifAst ) ) ; <nl> + <nl> + DetailAST elseAst = new DetailAST ( ) ; <nl> + elseAst . setType ( TokenTypes . LITERAL _ ELSE ) ; <nl> + <nl> + elseAst . setFirstChild ( ifAst ) ; <nl> + Assert . assertTrue ( CheckUtils . isElseIf ( ifAst ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testEquals ( ) throws Exception { <nl> + DetailAST litStatic = new DetailAST ( ) ; <nl> + litStatic . setType ( TokenTypes . LITERAL _ STATIC ) ; <nl> + <nl> + DetailAST modifiers = new DetailAST ( ) ; <nl> + modifiers . setType ( TokenTypes . MODIFIERS ) ; <nl> + modifiers . addChild ( litStatic ) ; <nl> + <nl> + DetailAST metDef = new DetailAST ( ) ; <nl> + metDef . setType ( TokenTypes . METHOD _ DEF ) ; <nl> + metDef . addChild ( modifiers ) ; <nl> + <nl> + Assert . assertFalse ( CheckUtils . isEqualsMethod ( metDef ) ) ; <nl> + <nl> + metDef . removeChildren ( ) ; <nl> + <nl> + DetailAST metName = new DetailAST ( ) ; <nl> + metName . setType ( TokenTypes . IDENT ) ; <nl> + metName . setText ( " equals " ) ; <nl> + metDef . addChild ( metName ) ; <nl> + <nl> + DetailAST modifiers2 = new DetailAST ( ) ; <nl> + modifiers2 . setType ( TokenTypes . MODIFIERS ) ; <nl> + metDef . addChild ( modifiers2 ) ; <nl> + <nl> + DetailAST parameter1 = new DetailAST ( ) ; <nl> + DetailAST parameter2 = new DetailAST ( ) ; <nl> + <nl> + DetailAST parameters = new DetailAST ( ) ; <nl> + parameters . setType ( TokenTypes . PARAMETERS ) ; <nl> + <nl> + parameters . addChild ( parameter2 ) ; <nl> + <nl> + parameters . addChild ( parameter1 ) ; <nl> + metDef . addChild ( parameters ) ; <nl> + <nl> + Assert . assertFalse ( CheckUtils . isEqualsMethod ( metDef ) ) ; <nl> + <nl> + } <nl> + <nl> + }

TEST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index 05bc34e . . e3b7a5a 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 41 , 6 + 41 , 12 @ @ matrix : 
 - DESC = " checkstyle and sevntu - checkstyle " 
 - CMD = " export MAVEN _ OPTS = ' - Xmx2000m ' & & mvn - e clean verify - DskipTests - DskipITs - Dpmd . skip = true - Dfindbugs . skip = true - Dspotbugs . skip = true - Dcobertura . skip = true " 
 
 + # jacoco ( oraclejdk8 ) 
 + - jdk : oraclejdk8 
 + env : 
 + - DESC = " jacoco " 
 + - CMD = " export MAVEN _ OPTS = ' - Xmx2000m ' & & mvn - e clean verify - Pno - validations - Pjacoco - check - DskipTests = false " 
 + 
 # cobertura and codecov ( oraclejdk8 ) 
 - jdk : oraclejdk8 
 env : 
 diff - - git a / pom . xml b / pom . xml 
 index 402e3b0 . . c268679 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1610 , 6 + 1610 , 260 @ @ 
 < / profile > 
 
 < profile > 
 + < id > jacoco - check < / id > 
 + < build > 
 + < plugins > 
 + < plugin > 
 + < groupId > org . jacoco < / groupId > 
 + < artifactId > jacoco - maven - plugin < / artifactId > 
 + < version > $ { maven . jacoco . plugin . version } < / version > 
 + < executions > 
 + < execution > 
 + < id > default - instrument < / id > 
 + < goals > 
 + < goal > instrument < / goal > 
 + < / goals > 
 + < phase > test - compile < / phase > 
 + < / execution > 
 + < execution > 
 + < id > default - restore - instrumented - classes < / id > 
 + < goals > 
 + < goal > restore - instrumented - classes < / goal > 
 + < / goals > 
 + < / execution > 
 + < execution > 
 + < id > default - report < / id > 
 + < phase > site < / phase > 
 + < goals > 
 + < goal > report < / goal > 
 + < / goals > 
 + < / execution > 
 + < execution > 
 + < id > default - check < / id > 
 + < goals > 
 + < goal > check < / goal > 
 + < / goals > 
 + < configuration > 
 + < dataFile > $ { project . build . directory } / jacoco / jacoco . exec < / dataFile > 
 + < rules > 
 + < rule > 
 + < element > CLASS < / element > 
 + < excludes > 
 + < ! - - Terence Parr , The Definitive ANTLR 4 Reference , 2 . 4 Building Language Applications Using Parse Trees : 
 + " To better support access to the elements within specific nodes , ANTLR generates 
 + a RuleNode subclass for each rule . . . . Given this description of the concrete types , we could write 
 + code by hand to perform a depth - first walk of the tree . We could perform whatever actions we 
 + wanted as we discovered and finished nodes . Typical operations are things such as 
 + computing results , updating data structures , or generating output . " 
 + We don ' t need these classes as we use only ParseTree methods for walking . - - > 
 + < exclude > com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaRecognizer < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaLexer < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser * < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocLexer < / exclude > 
 + < ! - - Swing related classes - - > 
 + < exclude > com . puppycrawl . tools . checkstyle . gui . BaseCellEditor * < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . gui . CodeSelector < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTable * < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . gui . ListToTreeSelectionModelWrapper * < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . gui . Main * < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . gui . MainFrame * < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . gui . ParseTreeTableModel * < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTableCellRenderer * < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . gui . TreeTableModelAdapter * < / exclude > 
 + < ! - - Deprecated classes - - > 
 + < exclude > com . puppycrawl . tools . checkstyle . checks . naming . AbstractTypeParameterNameCheck < / exclude > 
 + < ! - - Classes with their own config - - > 
 + < exclude > com . puppycrawl . tools . checkstyle . checks . javadoc . ClassResolver < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . utils . JavadocUtils < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . PackageNamesLoader < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . Main < / exclude > 
 + < exclude > com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . JavadocParserErrorStrategy < / exclude > 
 + < / excludes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 1 . 00 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 1 . 00 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < rule > 
 + < element > CLASS < / element > 
 + < includes > 
 + < include > com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaRecognizer < / include > 
 + < / includes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 96 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 73 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < rule > 
 + < element > CLASS < / element > 
 + < includes > 
 + < include > com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaLexer < / include > 
 + < / includes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 96 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 79 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < rule > 
 + < element > CLASS < / element > 
 + < includes > 
 + < include > com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser < / include > 
 + < / includes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 54 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 44 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < rule > 
 + < element > CLASS < / element > 
 + < includes > 
 + < include > com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocLexer < / include > 
 + < / includes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 84 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 64 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < rule > 
 + < element > CLASS < / element > 
 + < includes > 
 + < include > com . puppycrawl . tools . checkstyle . checks . javadoc . ClassResolver < / include > 
 + < / includes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 98 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 1 . 00 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < rule > 
 + < element > CLASS < / element > 
 + < includes > 
 + < include > com . puppycrawl . tools . checkstyle . utils . JavadocUtils < / include > 
 + < / includes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 99 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 98 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < rule > 
 + < element > CLASS < / element > 
 + < includes > 
 + < include > com . puppycrawl . tools . checkstyle . PackageNamesLoader < / include > 
 + < / includes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 97 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 1 . 00 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < rule > 
 + < element > CLASS < / element > 
 + < includes > 
 + < include > com . puppycrawl . tools . checkstyle . Main < / include > 
 + < / includes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 99 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 1 . 00 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < rule > 
 + < element > CLASS < / element > 
 + < includes > 
 + < include > com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . JavadocParserErrorStrategy < / include > 
 + < / includes > 
 + < limits > 
 + < limit > 
 + < counter > LINE < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 0 . 50 < / minimum > 
 + < / limit > 
 + < limit > 
 + < counter > BRANCH < / counter > 
 + < value > COVEREDRATIO < / value > 
 + < minimum > 1 . 00 < / minimum > 
 + < / limit > 
 + < / limits > 
 + < / rule > 
 + < / rules > 
 + < / configuration > 
 + < / execution > 
 + < / executions > 
 + < / plugin > 
 + < / plugins > 
 + < / build > 
 + < / profile > 
 + 
 + < profile > 
 < id > cobertura - check < / id > 
 < activation > 
 < jdk > [ 1 . 8 , ) < / jdk >

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 6edd09e . . 5679d45 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1106 , 7 + 1106 , 6 @ @ 
 < regex > < pattern > . * . checks . AbstractOptionCheck < / pattern > < branchRate > 100 < / branchRate > < lineRate > 80 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . AbstractTypeAwareCheck < / pattern > < branchRate > 87 < / branchRate > < lineRate > 84 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . AbstractTypeAwareCheck \ $ . * < / pattern > < branchRate > 50 < / branchRate > < lineRate > 80 < / lineRate > < / regex > 
 - < regex > < pattern > . * . checks . CheckUtils < / pattern > < branchRate > 91 < / branchRate > < lineRate > 97 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . ClassResolver < / pattern > < branchRate > 85 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . AbstractDeclarationCollector < / pattern > < branchRate > 94 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . NewlineAtEndOfFileCheck < / pattern > < branchRate > 83 < / branchRate > < lineRate > 88 < / lineRate > < / regex > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / CheckUtilsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / CheckUtilsTest . java 
 new file mode 100644 
 index 0000000 . . bba8ea4 
 - - - / dev / null 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / CheckUtilsTest . java 
 @ @ - 0 , 0 + 1 , 124 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / checkstyle : Checks Java source code for adherence to a set of rules . 
 + / / Copyright ( C ) 2001 - 2015 the original author or authors . 
 + / / 
 + / / This library is free software ; you can redistribute it and / or 
 + / / modify it under the terms of the GNU Lesser General Public 
 + / / License as published by the Free Software Foundation ; either 
 + / / version 2 . 1 of the License , or ( at your option ) any later version . 
 + / / 
 + / / This library is distributed in the hope that it will be useful , 
 + / / but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + / / MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + / / Lesser General Public License for more details . 
 + / / 
 + / / You should have received a copy of the GNU Lesser General Public 
 + / / License along with this library ; if not , write to the Free Software 
 + / / Foundation , Inc . , 59 Temple Place , Suite 330 , Boston , MA 02111 - 1307 USA 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + package com . puppycrawl . tools . checkstyle . checks ; 
 + 
 + import static com . puppycrawl . tools . checkstyle . TestUtils . assertUtilsClassHasPrivateConstructor ; 
 + 
 + import java . lang . reflect . InvocationTargetException ; 
 + 
 + import org . junit . Assert ; 
 + import org . junit . Test ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 + 
 + public class CheckUtilsTest { 
 + 
 + @ Test 
 + public void testIsProperUtilsClass ( ) throws ReflectiveOperationException { 
 + try { 
 + assertUtilsClassHasPrivateConstructor ( CheckUtils . class ) ; 
 + Assert . fail ( ) ; 
 + } 
 + catch ( InvocationTargetException ex ) { 
 + Assert . assertTrue ( ex . getCause ( ) instanceof UnsupportedOperationException ) ; 
 + } 
 + } 
 + 
 + @ Test 
 + public void testParseDouble ( ) throws Exception { 
 + CheckUtils . parseDouble ( " 1 _ 02 " , TokenTypes . ASSIGN ) ; 
 + } 
 + 
 + @ Test 
 + public void testElseWithCurly ( ) throws Exception { 
 + DetailAST ast = new DetailAST ( ) ; 
 + ast . setType ( TokenTypes . ASSIGN ) ; 
 + ast . setText ( " ASSIGN " ) ; 
 + Assert . assertFalse ( CheckUtils . isElseIf ( ast ) ) ; 
 + 
 + DetailAST parentAst = new DetailAST ( ) ; 
 + parentAst . setType ( TokenTypes . LCURLY ) ; 
 + parentAst . setText ( " LCURLY " ) ; 
 + 
 + DetailAST ifAst = new DetailAST ( ) ; 
 + ifAst . setType ( TokenTypes . LITERAL _ IF ) ; 
 + ifAst . setText ( " IF " ) ; 
 + parentAst . addChild ( ifAst ) ; 
 + 
 + Assert . assertFalse ( CheckUtils . isElseIf ( ifAst ) ) ; 
 + 
 + DetailAST parentAst2 = new DetailAST ( ) ; 
 + parentAst2 . setType ( TokenTypes . SLIST ) ; 
 + parentAst2 . setText ( " SLIST " ) ; 
 + 
 + parentAst2 . addChild ( ifAst ) ; 
 + 
 + Assert . assertFalse ( CheckUtils . isElseIf ( ifAst ) ) ; 
 + 
 + DetailAST elseAst = new DetailAST ( ) ; 
 + elseAst . setType ( TokenTypes . LITERAL _ ELSE ) ; 
 + 
 + elseAst . setFirstChild ( ifAst ) ; 
 + Assert . assertTrue ( CheckUtils . isElseIf ( ifAst ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testEquals ( ) throws Exception { 
 + DetailAST litStatic = new DetailAST ( ) ; 
 + litStatic . setType ( TokenTypes . LITERAL _ STATIC ) ; 
 + 
 + DetailAST modifiers = new DetailAST ( ) ; 
 + modifiers . setType ( TokenTypes . MODIFIERS ) ; 
 + modifiers . addChild ( litStatic ) ; 
 + 
 + DetailAST metDef = new DetailAST ( ) ; 
 + metDef . setType ( TokenTypes . METHOD _ DEF ) ; 
 + metDef . addChild ( modifiers ) ; 
 + 
 + Assert . assertFalse ( CheckUtils . isEqualsMethod ( metDef ) ) ; 
 + 
 + metDef . removeChildren ( ) ; 
 + 
 + DetailAST metName = new DetailAST ( ) ; 
 + metName . setType ( TokenTypes . IDENT ) ; 
 + metName . setText ( " equals " ) ; 
 + metDef . addChild ( metName ) ; 
 + 
 + DetailAST modifiers2 = new DetailAST ( ) ; 
 + modifiers2 . setType ( TokenTypes . MODIFIERS ) ; 
 + metDef . addChild ( modifiers2 ) ; 
 + 
 + DetailAST parameter1 = new DetailAST ( ) ; 
 + DetailAST parameter2 = new DetailAST ( ) ; 
 + 
 + DetailAST parameters = new DetailAST ( ) ; 
 + parameters . setType ( TokenTypes . PARAMETERS ) ; 
 + 
 + parameters . addChild ( parameter2 ) ; 
 + 
 + parameters . addChild ( parameter1 ) ; 
 + metDef . addChild ( parameters ) ; 
 + 
 + Assert . assertFalse ( CheckUtils . isEqualsMethod ( metDef ) ) ; 
 + 
 + } 
 + 
 + }
