BLEU SCORE: 0.8801117367933934

TEST MSG: config : bump equalsverifier to 2 . 3 . 2
GENERATED MSG: config : bump equalsverifier to 2 . 3 . 1

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 8541a39 . . 0f8369c 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 295 , 7 + 295 , 7 @ @ <nl> < dependency > <nl> < groupId > nl . jqno . equalsverifier < / groupId > <nl> < artifactId > equalsverifier < / artifactId > <nl> - < version > 2 . 3 . 1 < / version > <nl> + < version > 2 . 3 . 2 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency >
NEAREST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index c66fe41 . . cce766a 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 983 , 7 + 983 , 7 @ @ <nl> < inspection _ tool class = " HtmlFormInputWithoutLabel " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " HtmlNonExistentInternetResource " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " HtmlPresentationalElement " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> - < inspection _ tool class = " HtmlTagCanBeJavadocTag " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> + < inspection _ tool class = " HtmlTagCanBeJavadocTag " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " HtmlUnknownAnchorTarget " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " HtmlUnknownAttribute " enabled = " true " level = " ERROR " enabled _ by _ default = " true " > <nl> < option name = " myValues " > <nl> @ @ - 2122 , 6 + 2122 , 8 @ @ <nl> < option value = " CallToSimpleGetterFromWithinClass " / > <nl> < ! - - violations in DetailAST will be addressed further - - > <nl> < option value = " FieldNotUsedInToString " / > <nl> + < ! - - till # 4805 - - > <nl> + < option value = " HtmlTagCanBeJavadocTag " / > <nl> < / list > <nl> < / option > <nl> < / inspection _ tool > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> index e806827 . . 3a14fcc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java <nl> @ @ - 83 , 7 + 83 , 7 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { <nl> } <nl> <nl> / * * <nl> - * Creates a new < code > DefaultLogger < / code > instance . <nl> + * Creates a new { @ code DefaultLogger } instance . <nl> * @ param infoStream the { @ code OutputStream } for info messages . <nl> * @ param closeInfoAfterUse auditFinished should close infoStream . <nl> * @ param errorStream the { @ code OutputStream } for error messages . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> index 7d21d3a . . 790b4b9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> @ @ - 30 , 6 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaTokenTypes ; <nl> * <nl> * @ author Oliver Burn <nl> * @ author < a href = " mailto : dobratzp @ ele . uri . edu " > Peter Dobratz < / a > <nl> + * @ noinspection HtmlTagCanBeJavadocTag <nl> * / <nl> public final class TokenTypes { <nl> / / The following three types are never part of an AST , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> index 38f2d37 . . 51a1afa 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java <nl> @ @ - 34 , 7 + 34 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * < p > <nl> * Restrict using < a href = <nl> * " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 3 " > <nl> - * Unicode escapes < / a > ( such as < code > & # 92 ; u221e < / code > ) . <nl> + * Unicode escapes < / a > ( such as { @ code & # 92 ; u221e } ) . <nl> * It is possible to allow using escapes for <nl> * < a href = " https : / / en . wiktionary . org / wiki / Appendix : Control _ characters " > <nl> * non - printable ( control ) characters < / a > . <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> index 6b89662 . . beb5622 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * Checks that any combination of String literals <nl> * is on the left side of an equals ( ) comparison . <nl> * Also checks for String literals assigned to some field <nl> - * ( such as < code > someString . equals ( anotherString = " text " ) < / code > ) . <nl> + * ( such as { @ code someString . equals ( anotherString = " text " ) } ) . <nl> * <nl> * < p > Rationale : Calling the equals ( ) method on String literals <nl> * will avoid a potential NullPointerException . Also , it is <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java <nl> index 6a0f1c6 . . 256db31 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java <nl> @ @ - 33 , 7 + 33 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; <nl> * < p > <nl> * Checks that class which has only private ctors <nl> * is declared as final . Doesn ' t check for classes nested in interfaces <nl> - * or annotations , as they are always < code > final < / code > there . <nl> + * or annotations , as they are always { @ code final } there . <nl> * < / p > <nl> * < p > <nl> * An example of how to configure the check is : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> index 31b8a72 . . 9232557 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> @ @ - 81 , 13 + 81 , 13 @ @ public class MethodCallHandler extends AbstractExpressionHandler { <nl> * Checks if ast2 is a chained method call that starts on the same level as ast1 ends . <nl> * In other words , if the right paren of ast1 is on the same level as the lparen of ast2 : <nl> * <nl> - * < code > <nl> + * { @ code <nl> * value . methodOne ( <nl> * argument1 <nl> * ) . methodTwo ( <nl> * argument2 <nl> * ) ; <nl> - * < / code > <nl> + * } <nl> * <nl> * @ param ast1 Ast1 <nl> * @ param ast2 Ast2 <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java <nl> index 719eaf0 . . c572dca 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; <nl> <nl> / * * <nl> - * Checks that a variable has Javadoc comment . Ignores < code > serialVersionUID < / code > fields . <nl> + * Checks that a variable has Javadoc comment . Ignores { @ code serialVersionUID } fields . <nl> * <nl> * @ author Oliver Burn <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> index 34552c5 . . 3a0f98a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> @ @ - 29 , 19 + 29 , 19 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> / * * <nl> * Checks for redundant modifiers in interface and annotation definitions , <nl> - * final modifier on methods of final classes , inner < code > interface < / code > <nl> - * declarations that are declared as < code > static < / code > , non public class <nl> + * final modifier on methods of final classes , inner { @ code interface } <nl> + * declarations that are declared as { @ code static } , non public class <nl> * constructors and enum constructors , nested enum definitions that are declared <nl> - * as < code > static < / code > . <nl> + * as { @ code static } . <nl> * <nl> - * < p > Interfaces by definition are abstract so the < code > abstract < / code > <nl> + * < p > Interfaces by definition are abstract so the { @ code abstract } <nl> * modifier on the interface is redundant . <nl> * <nl> * < p > Classes inside of interfaces by definition are public and static , <nl> - * so the < code > public < / code > and < code > static < / code > modifiers <nl> + * so the { @ code public } and { @ code static } modifiers <nl> * on the inner classes are redundant . On the other hand , classes <nl> * inside of interfaces can be abstract or non abstract . <nl> - * So , < code > abstract < / code > modifier is allowed . <nl> + * So , { @ code abstract } modifier is allowed . <nl> * <nl> * < p > Fields in interfaces and annotations are automatically <nl> * public , static and final , so these modifiers are redundant as <nl> @ @ - 52 , 8 + 52 , 8 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * annotation fields are automatically public and abstract . < / p > <nl> * <nl> * < p > Enums by definition are static implicit subclasses of java . lang . Enum & # 60 ; E & # 62 ; . <nl> - * So , the < code > static < / code > modifier on the enums is redundant . In addition , <nl> - * if enum is inside of interface , < code > public < / code > modifier is also redundant . < / p > <nl> + * So , the { @ code static } modifier on the enums is redundant . In addition , <nl> + * if enum is inside of interface , { @ code public } modifier is also redundant . < / p > <nl> * <nl> * < p > Enums can also contain abstract methods and methods which can be overridden by the declared <nl> * enumeration fields . <nl> @ @ - 74 , 7 + 74 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> * < p > Since these methods can be overridden in these situations , the final methods are not <nl> * marked as redundant even though they can ' t be extended by other classes / enums . < / p > <nl> * <nl> - * < p > Final classes by definition cannot be extended so the < code > final < / code > <nl> + * < p > Final classes by definition cannot be extended so the { @ code final } <nl> * modifier on the method of a final class is redundant . <nl> * <nl> * < p > Public modifier for constructors in non - public non - protected classes <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> index 9872387 . . 931e9c5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; <nl> <nl> / * * <nl> * < p > <nl> - * Checks that method and < code > catch < / code > parameter names conform to a format specified <nl> + * Checks that method and { @ code catch } parameter names conform to a format specified <nl> * by the format property . The format is a <nl> * { @ link java . util . regex . Pattern regular expression } <nl> * and defaults to <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java <nl> index 0c5f6db . . 080bb73 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java <nl> @ @ - 519 , 7 + 519 , 7 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { <nl> * started from 1 for parameter values <nl> * @ param startLine number of the first line in the range <nl> * @ param endLine number of the second line in the range <nl> - * @ return < code > true < / code > if found any blank line within the range , < code > false < / code > <nl> + * @ return { @ code true } if found any blank line within the range , { @ code false } <nl> * otherwise <nl> * / <nl> private boolean hasEmptyLine ( int startLine , int endLine ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filefilters / BeforeExecutionExclusionFileFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filefilters / BeforeExecutionExclusionFileFilter . java <nl> index 9f853d3 . . 39dea8f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filefilters / BeforeExecutionExclusionFileFilter . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filefilters / BeforeExecutionExclusionFileFilter . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . BeforeExecutionFileFilter ; <nl> <nl> / * * <nl> * < p > <nl> - * File filter < code > BeforeExecutionExclusionFileFilter < / code > decides which files should be <nl> + * File filter { @ code BeforeExecutionExclusionFileFilter } decides which files should be <nl> * excluded from being processed by the utility . <nl> * < / p > <nl> * <nl> @ @ - 35 , 8 + 35 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . BeforeExecutionFileFilter ; <nl> * checked for violations . Users could have files that are in these sub - directories that shouldn ' t <nl> * be processed with their checkstyle configuration for various reasons , one of which is a valid <nl> * Java file that won ' t pass Checkstyle ' s parser . When Checkstyle tries to parse a Java file and <nl> - * fails , it will throw an < code > Exception < / code > and halt parsing any more files for violations . <nl> - * An example of a valid Java file Checkstyle can ' t parse is JDK 9 ' s < code > module - info . java < / code > . <nl> + * fails , it will throw an { @ code Exception } and halt parsing any more files for violations . <nl> + * An example of a valid Java file Checkstyle can ' t parse is JDK 9 ' s { @ code module - info . java } . <nl> * This file filter will exclude these problem files from being parsed , allowing the rest of the <nl> * files to run normal and be validated . <nl> * < / p > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java <nl> index bb3c87b . . edb43df 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java <nl> @ @ - 219 , 15 + 219 , 15 @ @ public class ParseTreeTablePresentation { <nl> } <nl> <nl> / * * <nl> - * Return the index of child in parent . If either < code > parent < / code > <nl> - * or < code > child < / code > is < code > null < / code > , returns - 1 . <nl> - * If either < code > parent < / code > or < code > child < / code > don ' t <nl> + * Return the index of child in parent . If either { @ code parent } <nl> + * or { @ code child } is { @ code null } , returns - 1 . <nl> + * If either { @ code parent } or { @ code child } don ' t <nl> * belong to this tree model , returns - 1 . <nl> * <nl> * @ param parent a node in the tree , obtained from this data source . <nl> * @ param child the node we are interested in . <nl> * @ return the index of the child in the parent , or - 1 if either <nl> - * < code > child < / code > or < code > parent < / code > are < code > null < / code > <nl> + * { @ code child } or { @ code parent } are { @ code null } <nl> * or don ' t belong to this tree model . <nl> * / <nl> public int getIndexOfChild ( Object parent , Object child ) {

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 8541a39 . . 0f8369c 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 295 , 7 + 295 , 7 @ @ 
 < dependency > 
 < groupId > nl . jqno . equalsverifier < / groupId > 
 < artifactId > equalsverifier < / artifactId > 
 - < version > 2 . 3 . 1 < / version > 
 + < version > 2 . 3 . 2 < / version > 
 < scope > test < / scope > 
 < / dependency > 
 < dependency >

NEAREST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index c66fe41 . . cce766a 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 983 , 7 + 983 , 7 @ @ 
 < inspection _ tool class = " HtmlFormInputWithoutLabel " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " HtmlNonExistentInternetResource " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " HtmlPresentationalElement " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 - < inspection _ tool class = " HtmlTagCanBeJavadocTag " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 + < inspection _ tool class = " HtmlTagCanBeJavadocTag " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " HtmlUnknownAnchorTarget " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " HtmlUnknownAttribute " enabled = " true " level = " ERROR " enabled _ by _ default = " true " > 
 < option name = " myValues " > 
 @ @ - 2122 , 6 + 2122 , 8 @ @ 
 < option value = " CallToSimpleGetterFromWithinClass " / > 
 < ! - - violations in DetailAST will be addressed further - - > 
 < option value = " FieldNotUsedInToString " / > 
 + < ! - - till # 4805 - - > 
 + < option value = " HtmlTagCanBeJavadocTag " / > 
 < / list > 
 < / option > 
 < / inspection _ tool > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 index e806827 . . 3a14fcc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / DefaultLogger . java 
 @ @ - 83 , 7 + 83 , 7 @ @ public class DefaultLogger extends AutomaticBean implements AuditListener { 
 } 
 
 / * * 
 - * Creates a new < code > DefaultLogger < / code > instance . 
 + * Creates a new { @ code DefaultLogger } instance . 
 * @ param infoStream the { @ code OutputStream } for info messages . 
 * @ param closeInfoAfterUse auditFinished should close infoStream . 
 * @ param errorStream the { @ code OutputStream } for error messages . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 index 7d21d3a . . 790b4b9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 @ @ - 30 , 6 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . grammars . GeneratedJavaTokenTypes ; 
 * 
 * @ author Oliver Burn 
 * @ author < a href = " mailto : dobratzp @ ele . uri . edu " > Peter Dobratz < / a > 
 + * @ noinspection HtmlTagCanBeJavadocTag 
 * / 
 public final class TokenTypes { 
 / / The following three types are never part of an AST , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 index 38f2d37 . . 51a1afa 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AvoidEscapedUnicodeCharactersCheck . java 
 @ @ - 34 , 7 + 34 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * < p > 
 * Restrict using < a href = 
 * " http : / / docs . oracle . com / javase / specs / jls / se8 / html / jls - 3 . html # jls - 3 . 3 " > 
 - * Unicode escapes < / a > ( such as < code > & # 92 ; u221e < / code > ) . 
 + * Unicode escapes < / a > ( such as { @ code & # 92 ; u221e } ) . 
 * It is possible to allow using escapes for 
 * < a href = " https : / / en . wiktionary . org / wiki / Appendix : Control _ characters " > 
 * non - printable ( control ) characters < / a > . 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 index 6b89662 . . beb5622 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 @ @ - 31 , 7 + 31 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * Checks that any combination of String literals 
 * is on the left side of an equals ( ) comparison . 
 * Also checks for String literals assigned to some field 
 - * ( such as < code > someString . equals ( anotherString = " text " ) < / code > ) . 
 + * ( such as { @ code someString . equals ( anotherString = " text " ) } ) . 
 * 
 * < p > Rationale : Calling the equals ( ) method on String literals 
 * will avoid a potential NullPointerException . Also , it is 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java 
 index 6a0f1c6 . . 256db31 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java 
 @ @ - 33 , 7 + 33 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; 
 * < p > 
 * Checks that class which has only private ctors 
 * is declared as final . Doesn ' t check for classes nested in interfaces 
 - * or annotations , as they are always < code > final < / code > there . 
 + * or annotations , as they are always { @ code final } there . 
 * < / p > 
 * < p > 
 * An example of how to configure the check is : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 index 31b8a72 . . 9232557 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 @ @ - 81 , 13 + 81 , 13 @ @ public class MethodCallHandler extends AbstractExpressionHandler { 
 * Checks if ast2 is a chained method call that starts on the same level as ast1 ends . 
 * In other words , if the right paren of ast1 is on the same level as the lparen of ast2 : 
 * 
 - * < code > 
 + * { @ code 
 * value . methodOne ( 
 * argument1 
 * ) . methodTwo ( 
 * argument2 
 * ) ; 
 - * < / code > 
 + * } 
 * 
 * @ param ast1 Ast1 
 * @ param ast2 Ast2 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java 
 index 719eaf0 . . c572dca 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocVariableCheck . java 
 @ @ - 30 , 7 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; 
 
 / * * 
 - * Checks that a variable has Javadoc comment . Ignores < code > serialVersionUID < / code > fields . 
 + * Checks that a variable has Javadoc comment . Ignores { @ code serialVersionUID } fields . 
 * 
 * @ author Oliver Burn 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 index 34552c5 . . 3a0f98a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 @ @ - 29 , 19 + 29 , 19 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 / * * 
 * Checks for redundant modifiers in interface and annotation definitions , 
 - * final modifier on methods of final classes , inner < code > interface < / code > 
 - * declarations that are declared as < code > static < / code > , non public class 
 + * final modifier on methods of final classes , inner { @ code interface } 
 + * declarations that are declared as { @ code static } , non public class 
 * constructors and enum constructors , nested enum definitions that are declared 
 - * as < code > static < / code > . 
 + * as { @ code static } . 
 * 
 - * < p > Interfaces by definition are abstract so the < code > abstract < / code > 
 + * < p > Interfaces by definition are abstract so the { @ code abstract } 
 * modifier on the interface is redundant . 
 * 
 * < p > Classes inside of interfaces by definition are public and static , 
 - * so the < code > public < / code > and < code > static < / code > modifiers 
 + * so the { @ code public } and { @ code static } modifiers 
 * on the inner classes are redundant . On the other hand , classes 
 * inside of interfaces can be abstract or non abstract . 
 - * So , < code > abstract < / code > modifier is allowed . 
 + * So , { @ code abstract } modifier is allowed . 
 * 
 * < p > Fields in interfaces and annotations are automatically 
 * public , static and final , so these modifiers are redundant as 
 @ @ - 52 , 8 + 52 , 8 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * annotation fields are automatically public and abstract . < / p > 
 * 
 * < p > Enums by definition are static implicit subclasses of java . lang . Enum & # 60 ; E & # 62 ; . 
 - * So , the < code > static < / code > modifier on the enums is redundant . In addition , 
 - * if enum is inside of interface , < code > public < / code > modifier is also redundant . < / p > 
 + * So , the { @ code static } modifier on the enums is redundant . In addition , 
 + * if enum is inside of interface , { @ code public } modifier is also redundant . < / p > 
 * 
 * < p > Enums can also contain abstract methods and methods which can be overridden by the declared 
 * enumeration fields . 
 @ @ - 74 , 7 + 74 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 * < p > Since these methods can be overridden in these situations , the final methods are not 
 * marked as redundant even though they can ' t be extended by other classes / enums . < / p > 
 * 
 - * < p > Final classes by definition cannot be extended so the < code > final < / code > 
 + * < p > Final classes by definition cannot be extended so the { @ code final } 
 * modifier on the method of a final class is redundant . 
 * 
 * < p > Public modifier for constructors in non - public non - protected classes 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 index 9872387 . . 931e9c5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ParameterNameCheck . java 
 @ @ - 29 , 7 + 29 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; 
 
 / * * 
 * < p > 
 - * Checks that method and < code > catch < / code > parameter names conform to a format specified 
 + * Checks that method and { @ code catch } parameter names conform to a format specified 
 * by the format property . The format is a 
 * { @ link java . util . regex . Pattern regular expression } 
 * and defaults to 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java 
 index 0c5f6db . . 080bb73 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / EmptyLineSeparatorCheck . java 
 @ @ - 519 , 7 + 519 , 7 @ @ public class EmptyLineSeparatorCheck extends AbstractCheck { 
 * started from 1 for parameter values 
 * @ param startLine number of the first line in the range 
 * @ param endLine number of the second line in the range 
 - * @ return < code > true < / code > if found any blank line within the range , < code > false < / code > 
 + * @ return { @ code true } if found any blank line within the range , { @ code false } 
 * otherwise 
 * / 
 private boolean hasEmptyLine ( int startLine , int endLine ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / filefilters / BeforeExecutionExclusionFileFilter . java b / src / main / java / com / puppycrawl / tools / checkstyle / filefilters / BeforeExecutionExclusionFileFilter . java 
 index 9f853d3 . . 39dea8f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / filefilters / BeforeExecutionExclusionFileFilter . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / filefilters / BeforeExecutionExclusionFileFilter . java 
 @ @ - 26 , 7 + 26 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . BeforeExecutionFileFilter ; 
 
 / * * 
 * < p > 
 - * File filter < code > BeforeExecutionExclusionFileFilter < / code > decides which files should be 
 + * File filter { @ code BeforeExecutionExclusionFileFilter } decides which files should be 
 * excluded from being processed by the utility . 
 * < / p > 
 * 
 @ @ - 35 , 8 + 35 , 8 @ @ import com . puppycrawl . tools . checkstyle . api . BeforeExecutionFileFilter ; 
 * checked for violations . Users could have files that are in these sub - directories that shouldn ' t 
 * be processed with their checkstyle configuration for various reasons , one of which is a valid 
 * Java file that won ' t pass Checkstyle ' s parser . When Checkstyle tries to parse a Java file and 
 - * fails , it will throw an < code > Exception < / code > and halt parsing any more files for violations . 
 - * An example of a valid Java file Checkstyle can ' t parse is JDK 9 ' s < code > module - info . java < / code > . 
 + * fails , it will throw an { @ code Exception } and halt parsing any more files for violations . 
 + * An example of a valid Java file Checkstyle can ' t parse is JDK 9 ' s { @ code module - info . java } . 
 * This file filter will exclude these problem files from being parsed , allowing the rest of the 
 * files to run normal and be validated . 
 * < / p > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java 
 index bb3c87b . . edb43df 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTablePresentation . java 
 @ @ - 219 , 15 + 219 , 15 @ @ public class ParseTreeTablePresentation { 
 } 
 
 / * * 
 - * Return the index of child in parent . If either < code > parent < / code > 
 - * or < code > child < / code > is < code > null < / code > , returns - 1 . 
 - * If either < code > parent < / code > or < code > child < / code > don ' t 
 + * Return the index of child in parent . If either { @ code parent } 
 + * or { @ code child } is { @ code null } , returns - 1 . 
 + * If either { @ code parent } or { @ code child } don ' t 
 * belong to this tree model , returns - 1 . 
 * 
 * @ param parent a node in the tree , obtained from this data source . 
 * @ param child the node we are interested in . 
 * @ return the index of the child in the parent , or - 1 if either 
 - * < code > child < / code > or < code > parent < / code > are < code > null < / code > 
 + * { @ code child } or { @ code parent } are { @ code null } 
 * or don ' t belong to this tree model . 
 * / 
 public int getIndexOfChild ( Object parent , Object child ) {
