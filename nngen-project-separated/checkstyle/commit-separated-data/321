BLEU SCORE: 0.7825422900366437

TEST MSG: Issue # 5603 : Use category / java / performance in the PMD config
GENERATED MSG: Issue # 5603 : Use category / java / bestpractices in the PMD config

TEST DIFF (one line): diff - - git a / config / pmd . xml b / config / pmd . xml <nl> index 9050348 . . ddfb2da 100644 <nl> - - - a / config / pmd . xml <nl> + + + b / config / pmd . xml <nl> @ @ - 99 , 6 + 99 , 13 @ @ <nl> < ! - - Till https : / / github . com / checkstyle / checkstyle / issues / 5680 - - > <nl> < exclude name = " UseProperClassLoader " / > <nl> < / rule > <nl> + < rule ref = " category / java / errorprone . xml / AvoidDuplicateLiterals " > <nl> + < properties > <nl> + < ! - - Annotations like ' @ SuppressWarnings ' don ' t need to be checked , it is better to keep their <nl> + strings connected to the annotation instead of separating . - - > <nl> + < property name = " skipAnnotations " value = " true " / > <nl> + < / properties > <nl> + < / rule > <nl> < rule ref = " category / java / errorprone . xml / EmptyCatchBlock " > <nl> < properties > <nl> < property name = " allowCommentedBlocks " value = " true " / > <nl> @ @ - 251 , 6 + 258 , 27 @ @ <nl> < / properties > <nl> < / rule > <nl> <nl> + < rule ref = " category / java / performance . xml " > <nl> + < ! - - Produces more false positives than real problems . - - > <nl> + < exclude name = " AvoidInstantiatingObjectsInLoops " / > <nl> + < ! - - Conflicts with the ToArrayCallWithZeroLengthArrayArgument check from the Idea . <nl> + This rule is based on a study by Aleksey Shipil ё v <nl> + https : / / shipilev . net / blog / 2016 / arrays - wisdom - ancients / <nl> + However , in modern JVM the result is different : <nl> + Benchmark ( size ) ( type ) Mode Cnt Score Error Units <nl> + simple 1000 arraylist avgt 15 400 . 156 4 . 154 ns / op <nl> + sized 1000 arraylist avgt 15 1051 . 462 26 . 820 ns / op <nl> + zero 1000 arraylist avgt 15 743 . 794 27 . 400 ns / op <nl> + simple 1000 hashset avgt 15 4728 . 179 130 . 822 ns / op <nl> + sized 1000 hashset avgt 15 4960 . 655 179 . 637 ns / op <nl> + zero 1000 hashset avgt 15 5101 . 816 159 . 180 ns / op <nl> + The advantages of this rule are questionable , and the flaws are obvious . <nl> + - - > <nl> + < exclude name = " OptimizableToArrayCall " / > <nl> + < ! - - Not configurable , decreases readability . - - > <nl> + < exclude name = " UseStringBufferForStringAppends " / > <nl> + < / rule > <nl> + <nl> < rule ref = " rulesets / java / comments . xml " > <nl> < ! - - < exclude name = " CommentRequired " / > - - > <nl> < ! - - we use class comments as source for xdoc files , so content is big and that is by design - - > <nl> @ @ - 377 , 8 + 405 , 6 @ @ <nl> < / properties > <nl> < / rule > <nl> <nl> - < rule ref = " rulesets / java / migrating . xml " / > <nl> - <nl> < rule name = " CheckstyleCustomShortVariable " <nl> message = " Avoid variables with short names that shorter than 2 symbols : { 0 } " <nl> language = " java " <nl> @ @ - 403 , 24 + 429 , 4 @ @ <nl> < / properties > <nl> < / rule > <nl> <nl> - < rule ref = " rulesets / java / optimizations . xml " > <nl> - < ! - - produces more false - positives than real problems - - > <nl> - < exclude name = " AvoidInstantiatingObjectsInLoops " / > <nl> - < ! - - pollutes code with modifiers - - > <nl> - < exclude name = " LocalVariableCouldBeFinal " / > <nl> - < ! - - pollutes code with modifiers - - > <nl> - < exclude name = " MethodArgumentCouldBeFinal " / > <nl> - < ! - - not configurable , decreases readability - - > <nl> - < exclude name = " UseStringBufferForStringAppends " / > <nl> - < / rule > <nl> - <nl> - < rule ref = " rulesets / java / strings . xml " / > <nl> - < rule ref = " rulesets / java / strings . xml / AvoidDuplicateLiterals " > <nl> - < properties > <nl> - < ! - - Annotations like ' @ SuppressWarnings ' don ' t need to be checked , it is better to keep their strings <nl> - connected to the annotation instead of separating . - - > <nl> - < property name = " skipAnnotations " value = " true " / > <nl> - < / properties > <nl> - < / rule > <nl> - <nl> < / ruleset >
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 2f707aa . . ac1118a 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 201 , 7 + 201 , 6 @ @ <nl> < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > <nl> < maven . site . plugin . version > 3 . 7 < / maven . site . plugin . version > <nl> < maven . spotbugs . plugin . version > 3 . 1 . 3 < / maven . spotbugs . plugin . version > <nl> - < maven . pmd . plugin . version > 3 . 9 . 0 < / maven . pmd . plugin . version > <nl> < maven . pmd . plugin . version > 3 . 8 < / maven . pmd . plugin . version > <nl> < pmd . version > 5 . 8 . 1 < / pmd . version > <nl> < maven . jacoco . plugin . version > 0 . 8 . 0 < / maven . jacoco . plugin . version >

TEST DIFF:
diff - - git a / config / pmd . xml b / config / pmd . xml 
 index 9050348 . . ddfb2da 100644 
 - - - a / config / pmd . xml 
 + + + b / config / pmd . xml 
 @ @ - 99 , 6 + 99 , 13 @ @ 
 < ! - - Till https : / / github . com / checkstyle / checkstyle / issues / 5680 - - > 
 < exclude name = " UseProperClassLoader " / > 
 < / rule > 
 + < rule ref = " category / java / errorprone . xml / AvoidDuplicateLiterals " > 
 + < properties > 
 + < ! - - Annotations like ' @ SuppressWarnings ' don ' t need to be checked , it is better to keep their 
 + strings connected to the annotation instead of separating . - - > 
 + < property name = " skipAnnotations " value = " true " / > 
 + < / properties > 
 + < / rule > 
 < rule ref = " category / java / errorprone . xml / EmptyCatchBlock " > 
 < properties > 
 < property name = " allowCommentedBlocks " value = " true " / > 
 @ @ - 251 , 6 + 258 , 27 @ @ 
 < / properties > 
 < / rule > 
 
 + < rule ref = " category / java / performance . xml " > 
 + < ! - - Produces more false positives than real problems . - - > 
 + < exclude name = " AvoidInstantiatingObjectsInLoops " / > 
 + < ! - - Conflicts with the ToArrayCallWithZeroLengthArrayArgument check from the Idea . 
 + This rule is based on a study by Aleksey Shipil ё v 
 + https : / / shipilev . net / blog / 2016 / arrays - wisdom - ancients / 
 + However , in modern JVM the result is different : 
 + Benchmark ( size ) ( type ) Mode Cnt Score Error Units 
 + simple 1000 arraylist avgt 15 400 . 156 4 . 154 ns / op 
 + sized 1000 arraylist avgt 15 1051 . 462 26 . 820 ns / op 
 + zero 1000 arraylist avgt 15 743 . 794 27 . 400 ns / op 
 + simple 1000 hashset avgt 15 4728 . 179 130 . 822 ns / op 
 + sized 1000 hashset avgt 15 4960 . 655 179 . 637 ns / op 
 + zero 1000 hashset avgt 15 5101 . 816 159 . 180 ns / op 
 + The advantages of this rule are questionable , and the flaws are obvious . 
 + - - > 
 + < exclude name = " OptimizableToArrayCall " / > 
 + < ! - - Not configurable , decreases readability . - - > 
 + < exclude name = " UseStringBufferForStringAppends " / > 
 + < / rule > 
 + 
 < rule ref = " rulesets / java / comments . xml " > 
 < ! - - < exclude name = " CommentRequired " / > - - > 
 < ! - - we use class comments as source for xdoc files , so content is big and that is by design - - > 
 @ @ - 377 , 8 + 405 , 6 @ @ 
 < / properties > 
 < / rule > 
 
 - < rule ref = " rulesets / java / migrating . xml " / > 
 - 
 < rule name = " CheckstyleCustomShortVariable " 
 message = " Avoid variables with short names that shorter than 2 symbols : { 0 } " 
 language = " java " 
 @ @ - 403 , 24 + 429 , 4 @ @ 
 < / properties > 
 < / rule > 
 
 - < rule ref = " rulesets / java / optimizations . xml " > 
 - < ! - - produces more false - positives than real problems - - > 
 - < exclude name = " AvoidInstantiatingObjectsInLoops " / > 
 - < ! - - pollutes code with modifiers - - > 
 - < exclude name = " LocalVariableCouldBeFinal " / > 
 - < ! - - pollutes code with modifiers - - > 
 - < exclude name = " MethodArgumentCouldBeFinal " / > 
 - < ! - - not configurable , decreases readability - - > 
 - < exclude name = " UseStringBufferForStringAppends " / > 
 - < / rule > 
 - 
 - < rule ref = " rulesets / java / strings . xml " / > 
 - < rule ref = " rulesets / java / strings . xml / AvoidDuplicateLiterals " > 
 - < properties > 
 - < ! - - Annotations like ' @ SuppressWarnings ' don ' t need to be checked , it is better to keep their strings 
 - connected to the annotation instead of separating . - - > 
 - < property name = " skipAnnotations " value = " true " / > 
 - < / properties > 
 - < / rule > 
 - 
 < / ruleset >

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 2f707aa . . ac1118a 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 201 , 7 + 201 , 6 @ @ 
 < antlr4 . version > 4 . 7 . 1 < / antlr4 . version > 
 < maven . site . plugin . version > 3 . 7 < / maven . site . plugin . version > 
 < maven . spotbugs . plugin . version > 3 . 1 . 3 < / maven . spotbugs . plugin . version > 
 - < maven . pmd . plugin . version > 3 . 9 . 0 < / maven . pmd . plugin . version > 
 < maven . pmd . plugin . version > 3 . 8 < / maven . pmd . plugin . version > 
 < pmd . version > 5 . 8 . 1 < / pmd . version > 
 < maven . jacoco . plugin . version > 0 . 8 . 0 < / maven . jacoco . plugin . version >
