BLEU SCORE: 0.061685854102812354

TEST MSG: infra : minor fix for Travis badge
GENERATED MSG: infra : update for appveyor to have an label that show OS type

TEST DIFF (one line): diff - - git a / README . md b / README . md <nl> index d6e4743 . . c0502c1 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 62 , 7 + 62 , 7 @ @ these packages are in the file named " LICENSE . apache20 " in this <nl> directory . <nl> <nl> [ travis ] : http : / / travis - ci . org / checkstyle / checkstyle <nl> - [ travis img ] : https : / / img . shields . io / travis / checkstyle / checkstyle / master . svg ? & label = Linux % 26Mac <nl> + [ travis img ] : https : / / img . shields . io / travis / checkstyle / checkstyle / master . svg ? label = Linux % 26Mac <nl> <nl> [ appveyor ] : https : / / ci . appveyor . com / project / checkstyle / checkstyle <nl> [ appveyor img ] : https : / / img . shields . io / appveyor / ci / checkstyle / checkstyle . svg ? label = Windows
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TextBlock . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TextBlock . java <nl> index 5634495 . . 4b594a5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TextBlock . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TextBlock . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> / * * <nl> - * A block of text from an inputfile that does not necessarily <nl> + * A block of text from an input file that does not necessarily <nl> * have any grammatical structure . <nl> * <nl> * @ author lkuehne <nl> @ @ - 36 , 28 + 36 , 28 @ @ public interface TextBlock { <nl> String [ ] getText ( ) ; <nl> <nl> / * * <nl> - * The line in the inputfile where the text block starts . <nl> + * The line in the input file where the text block starts . <nl> * Counting starts from 1 . <nl> * @ return first line of the text block <nl> * / <nl> int getStartLineNo ( ) ; <nl> <nl> / * * <nl> - * The last line of the text block in the inputfile . <nl> + * The last line of the text block in the input file . <nl> * Counting starts from 1 . <nl> * @ return last line of the text block <nl> * / <nl> int getEndLineNo ( ) ; <nl> <nl> / * * <nl> - * The column in the inputfile where the text block starts . <nl> + * The column in the input file where the text block starts . <nl> * Counting starts from 0 . <nl> * @ return first line of the text block <nl> * / <nl> int getStartColNo ( ) ; <nl> <nl> / * * <nl> - * The column in the inputfile where the text block ends . <nl> + * The column in the input file where the text block ends . <nl> * Counting starts from 0 . <nl> * @ return last line of the text block <nl> * / <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> index 8d76b03 . . 2238bab 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java <nl> @ @ - 2798 , 7 + 2798 , 7 @ @ public final class TokenTypes { <nl> * < pre > <nl> * SOME _ CONSTANT ( 1 ) <nl> * { <nl> - * public void someMethodOverridenFromMainBody ( ) <nl> + * public void someMethodOverriddenFromMainBody ( ) <nl> * { <nl> * } <nl> * } <nl> @ @ - 2828 , 7 + 2828 , 7 @ @ public final class TokenTypes { <nl> * + - - TYPE <nl> * | <nl> * + - - LITERAL _ void ( void ) <nl> - * + - - IDENT ( someMethodOverridenFromMainBody ) <nl> + * + - - IDENT ( someMethodOverriddenFromMainBody ) <nl> * + - - LPAREN ( ( ) <nl> * + - - PARAMETERS <nl> * + - - RPAREN ( ) ) <nl> @ @ - 3323 , 10 + 3323 , 10 @ @ public final class TokenTypes { <nl> public static final int LAMBDA = GeneratedJavaTokenTypes . LAMBDA ; <nl> <nl> / * * <nl> - * Begining of single line comment : ' / / ' . <nl> + * Beginning of single line comment : ' / / ' . <nl> * <nl> * < pre > <nl> - * + - - SINLE _ LINE _ COMMENT <nl> + * + - - SINGLE _ LINE _ COMMENT <nl> * | <nl> * + - - COMMENT _ CONTENT <nl> * < / pre > <nl> @ @ - 3335 , 7 + 3335 , 7 @ @ public final class TokenTypes { <nl> GeneratedJavaTokenTypes . SINGLE _ LINE _ COMMENT ; <nl> <nl> / * * <nl> - * Begining of block comment : ' / * ' . <nl> + * Beginning of block comment : ' / * ' . <nl> * <nl> * < pre > <nl> * + - - BLOCK _ COMMENT _ BEGIN <nl> @ @ - 3364 , 7 + 3364 , 7 @ @ public final class TokenTypes { <nl> * Text of single - line or block comment . <nl> * <nl> * < pre > <nl> - * + - - SINLE _ LINE _ COMMENT <nl> + * + - - SINGLE _ LINE _ COMMENT <nl> * | <nl> * + - - COMMENT _ CONTENT <nl> * < / pre > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 16df4e8 . . 8b51b17 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 229 , 7 + 229 , 7 @ @ public class SuppressWarningsHolder <nl> for ( String value : values ) { <nl> String checkName = value ; <nl> / / strip off the checkstyle - only prefix if present <nl> - checkName = removeChecktylePrefixIfExests ( checkName ) ; <nl> + checkName = removeCheckstylePrefixIfExists ( checkName ) ; <nl> entries . add ( new Entry ( checkName , firstLine , firstColumn , <nl> lastLine , lastColumn ) ) ; <nl> } <nl> @ @ - 244 , 7 + 244 , 7 @ @ public class SuppressWarningsHolder <nl> * - name of the check <nl> * @ return check name without prefix <nl> * / <nl> - private static String removeChecktylePrefixIfExests ( String checkName ) { <nl> + private static String removeCheckstylePrefixIfExists ( String checkName ) { <nl> String result = checkName ; <nl> if ( checkName . startsWith ( CHECKSTYLE _ PREFIX ) ) { <nl> result = checkName . substring ( CHECKSTYLE _ PREFIX . length ( ) ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> index a722e08 . . 8b14272 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> @ @ - 213 , 7 + 213 , 7 @ @ public class TranslationCheck <nl> <nl> / * * <nl> * Helper method to log an io exception . <nl> - * @ param ex the exception that occured <nl> + * @ param ex the exception that occurred <nl> * @ param file the file that could not be processed <nl> * / <nl> private void logIOException ( IOException ex , File file ) { <nl> @ @ - 234 , 7 + 234 , 7 @ @ public class TranslationCheck <nl> final SortedSet < LocalizedMessage > messages = Sets . newTreeSet ( ) ; <nl> messages . add ( message ) ; <nl> getMessageDispatcher ( ) . fireErrors ( file . getPath ( ) , messages ) ; <nl> - LOG . debug ( " IOException occured . " , ex ) ; <nl> + LOG . debug ( " IOException occurred . " , ex ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java <nl> index 768ce61 . . 31758a7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java <nl> @ @ - 222 , 8 + 222 , 8 @ @ public class UncommentedMainCheck <nl> final DetailAST params = method . findFirstToken ( TokenTypes . PARAMETERS ) ; <nl> <nl> if ( params . getChildCount ( ) = = 1 ) { <nl> - final DetailAST paratype = params . getFirstChild ( ) . findFirstToken ( TokenTypes . TYPE ) ; <nl> - final DetailAST arrayDecl = paratype . findFirstToken ( TokenTypes . ARRAY _ DECLARATOR ) ; <nl> + final DetailAST parameterType = params . getFirstChild ( ) . findFirstToken ( TokenTypes . TYPE ) ; <nl> + final DetailAST arrayDecl = parameterType . findFirstToken ( TokenTypes . ARRAY _ DECLARATOR ) ; <nl> <nl> if ( arrayDecl ! = null ) { <nl> final DetailAST arrayType = arrayDecl . getFirstChild ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> index 53982ff . . 007f6c8 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> @ @ - 64 , 8 + 64 , 8 @ @ public class LocalizedMessageTest { <nl> <nl> @ Test <nl> public void testBundleReloadUrlNull ( ) throws IOException { <nl> - LocalizedMessage . UTF8Control cntrl = new LocalizedMessage . UTF8Control ( ) ; <nl> - cntrl . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> + LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; <nl> + control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> Locale . ENGLISH , " java . class " , <nl> Thread . currentThread ( ) . getContextClassLoader ( ) , true ) ; <nl> } <nl> @ @ - 82 , 8 + 82 , 8 @ @ public class LocalizedMessageTest { <nl> String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; <nl> when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; <nl> <nl> - LocalizedMessage . UTF8Control cntrl = new LocalizedMessage . UTF8Control ( ) ; <nl> - cntrl . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> + LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; <nl> + control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> Locale . ENGLISH , " java . class " , <nl> classloader , true ) ; <nl> } <nl> @ @ - 97 , 8 + 97 , 8 @ @ public class LocalizedMessageTest { <nl> URL url = getMockUrl ( null ) ; <nl> when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; <nl> <nl> - LocalizedMessage . UTF8Control cntrl = new LocalizedMessage . UTF8Control ( ) ; <nl> - cntrl . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> + LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; <nl> + control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> Locale . ENGLISH , " java . class " , <nl> classloader , true ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java <nl> index 993a131 . . dfb196a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java <nl> @ @ - 136 , 7 + 136 , 7 @ @ public class ClassResolverTest { <nl> ClassResolver classResolver = PowerMockito . spy ( new ClassResolver ( Thread <nl> . currentThread ( ) . getContextClassLoader ( ) , " " , imports ) ) ; <nl> <nl> - PowerMockito . doThrow ( new ClassNotFoundException ( " excpected exception " ) ) <nl> + PowerMockito . doThrow ( new ClassNotFoundException ( " expected exception " ) ) <nl> . when ( classResolver , " safeLoad " , anyObject ( ) ) ; <nl> PowerMockito . doReturn ( true ) . when ( classResolver , " isLoadable " , anyObject ( ) ) ; <nl> <nl> @ @ - 147 , 7 + 147 , 7 @ @ public class ClassResolverTest { <nl> catch ( IllegalStateException e ) { <nl> / / expected <nl> assertTrue ( e . getCause ( ) instanceof ClassNotFoundException ) ; <nl> - assertTrue ( e . getMessage ( ) . endsWith ( " excpected exception " ) ) ; <nl> + assertTrue ( e . getMessage ( ) . endsWith ( " expected exception " ) ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java <nl> index 4a37974 . . 914fffb 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java <nl> @ @ - 169 , 8 + 169 , 8 @ @ public class NewlineAtEndOfFileCheckTest <nl> File impossibleFile = new File ( " " ) ; <nl> Set < LocalizedMessage > messages = check . process ( impossibleFile , Lists . newArrayList ( " txt " ) ) ; <nl> assertEquals ( 1 , messages . size ( ) ) ; <nl> - Iterator < LocalizedMessage > iter = messages . iterator ( ) ; <nl> - assertEquals ( " Unable to open ' ' . " , iter . next ( ) . getMessage ( ) ) ; <nl> + Iterator < LocalizedMessage > iterator = messages . iterator ( ) ; <nl> + assertEquals ( " Unable to open ' ' . " , iterator . next ( ) . getMessage ( ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> index e74a679 . . 10cc58a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java <nl> @ @ - 99 , 7 + 99 , 7 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { <nl> } <nl> <nl> / * * <nl> - * Tests IO exception , that can orrur during reading of properties file . <nl> + * Tests IO exception , that can occur during reading of properties file . <nl> * / <nl> @ Test <nl> public void testIOException ( ) throws Exception { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheckTest . java <nl> index d31fe4f . . c1d083f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheckTest . java <nl> @ @ - 51 , 7 + 51 , 7 @ @ public class UpperEllCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testAcceptableTockens ( ) { <nl> + public void testAcceptableTokens ( ) { <nl> int [ ] expected = { TokenTypes . NUM _ LONG } ; <nl> UpperEllCheck check = new UpperEllCheck ( ) ; <nl> int [ ] actual = check . getAcceptableTokens ( ) ;

TEST DIFF:
diff - - git a / README . md b / README . md 
 index d6e4743 . . c0502c1 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 62 , 7 + 62 , 7 @ @ these packages are in the file named " LICENSE . apache20 " in this 
 directory . 
 
 [ travis ] : http : / / travis - ci . org / checkstyle / checkstyle 
 - [ travis img ] : https : / / img . shields . io / travis / checkstyle / checkstyle / master . svg ? & label = Linux % 26Mac 
 + [ travis img ] : https : / / img . shields . io / travis / checkstyle / checkstyle / master . svg ? label = Linux % 26Mac 
 
 [ appveyor ] : https : / / ci . appveyor . com / project / checkstyle / checkstyle 
 [ appveyor img ] : https : / / img . shields . io / appveyor / ci / checkstyle / checkstyle . svg ? label = Windows

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TextBlock . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TextBlock . java 
 index 5634495 . . 4b594a5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TextBlock . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TextBlock . java 
 @ @ - 20 , 7 + 20 , 7 @ @ 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 / * * 
 - * A block of text from an inputfile that does not necessarily 
 + * A block of text from an input file that does not necessarily 
 * have any grammatical structure . 
 * 
 * @ author lkuehne 
 @ @ - 36 , 28 + 36 , 28 @ @ public interface TextBlock { 
 String [ ] getText ( ) ; 
 
 / * * 
 - * The line in the inputfile where the text block starts . 
 + * The line in the input file where the text block starts . 
 * Counting starts from 1 . 
 * @ return first line of the text block 
 * / 
 int getStartLineNo ( ) ; 
 
 / * * 
 - * The last line of the text block in the inputfile . 
 + * The last line of the text block in the input file . 
 * Counting starts from 1 . 
 * @ return last line of the text block 
 * / 
 int getEndLineNo ( ) ; 
 
 / * * 
 - * The column in the inputfile where the text block starts . 
 + * The column in the input file where the text block starts . 
 * Counting starts from 0 . 
 * @ return first line of the text block 
 * / 
 int getStartColNo ( ) ; 
 
 / * * 
 - * The column in the inputfile where the text block ends . 
 + * The column in the input file where the text block ends . 
 * Counting starts from 0 . 
 * @ return last line of the text block 
 * / 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 index 8d76b03 . . 2238bab 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / TokenTypes . java 
 @ @ - 2798 , 7 + 2798 , 7 @ @ public final class TokenTypes { 
 * < pre > 
 * SOME _ CONSTANT ( 1 ) 
 * { 
 - * public void someMethodOverridenFromMainBody ( ) 
 + * public void someMethodOverriddenFromMainBody ( ) 
 * { 
 * } 
 * } 
 @ @ - 2828 , 7 + 2828 , 7 @ @ public final class TokenTypes { 
 * + - - TYPE 
 * | 
 * + - - LITERAL _ void ( void ) 
 - * + - - IDENT ( someMethodOverridenFromMainBody ) 
 + * + - - IDENT ( someMethodOverriddenFromMainBody ) 
 * + - - LPAREN ( ( ) 
 * + - - PARAMETERS 
 * + - - RPAREN ( ) ) 
 @ @ - 3323 , 10 + 3323 , 10 @ @ public final class TokenTypes { 
 public static final int LAMBDA = GeneratedJavaTokenTypes . LAMBDA ; 
 
 / * * 
 - * Begining of single line comment : ' / / ' . 
 + * Beginning of single line comment : ' / / ' . 
 * 
 * < pre > 
 - * + - - SINLE _ LINE _ COMMENT 
 + * + - - SINGLE _ LINE _ COMMENT 
 * | 
 * + - - COMMENT _ CONTENT 
 * < / pre > 
 @ @ - 3335 , 7 + 3335 , 7 @ @ public final class TokenTypes { 
 GeneratedJavaTokenTypes . SINGLE _ LINE _ COMMENT ; 
 
 / * * 
 - * Begining of block comment : ' / * ' . 
 + * Beginning of block comment : ' / * ' . 
 * 
 * < pre > 
 * + - - BLOCK _ COMMENT _ BEGIN 
 @ @ - 3364 , 7 + 3364 , 7 @ @ public final class TokenTypes { 
 * Text of single - line or block comment . 
 * 
 * < pre > 
 - * + - - SINLE _ LINE _ COMMENT 
 + * + - - SINGLE _ LINE _ COMMENT 
 * | 
 * + - - COMMENT _ CONTENT 
 * < / pre > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 16df4e8 . . 8b51b17 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 229 , 7 + 229 , 7 @ @ public class SuppressWarningsHolder 
 for ( String value : values ) { 
 String checkName = value ; 
 / / strip off the checkstyle - only prefix if present 
 - checkName = removeChecktylePrefixIfExests ( checkName ) ; 
 + checkName = removeCheckstylePrefixIfExists ( checkName ) ; 
 entries . add ( new Entry ( checkName , firstLine , firstColumn , 
 lastLine , lastColumn ) ) ; 
 } 
 @ @ - 244 , 7 + 244 , 7 @ @ public class SuppressWarningsHolder 
 * - name of the check 
 * @ return check name without prefix 
 * / 
 - private static String removeChecktylePrefixIfExests ( String checkName ) { 
 + private static String removeCheckstylePrefixIfExists ( String checkName ) { 
 String result = checkName ; 
 if ( checkName . startsWith ( CHECKSTYLE _ PREFIX ) ) { 
 result = checkName . substring ( CHECKSTYLE _ PREFIX . length ( ) ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 index a722e08 . . 8b14272 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 @ @ - 213 , 7 + 213 , 7 @ @ public class TranslationCheck 
 
 / * * 
 * Helper method to log an io exception . 
 - * @ param ex the exception that occured 
 + * @ param ex the exception that occurred 
 * @ param file the file that could not be processed 
 * / 
 private void logIOException ( IOException ex , File file ) { 
 @ @ - 234 , 7 + 234 , 7 @ @ public class TranslationCheck 
 final SortedSet < LocalizedMessage > messages = Sets . newTreeSet ( ) ; 
 messages . add ( message ) ; 
 getMessageDispatcher ( ) . fireErrors ( file . getPath ( ) , messages ) ; 
 - LOG . debug ( " IOException occured . " , ex ) ; 
 + LOG . debug ( " IOException occurred . " , ex ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java 
 index 768ce61 . . 31758a7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / UncommentedMainCheck . java 
 @ @ - 222 , 8 + 222 , 8 @ @ public class UncommentedMainCheck 
 final DetailAST params = method . findFirstToken ( TokenTypes . PARAMETERS ) ; 
 
 if ( params . getChildCount ( ) = = 1 ) { 
 - final DetailAST paratype = params . getFirstChild ( ) . findFirstToken ( TokenTypes . TYPE ) ; 
 - final DetailAST arrayDecl = paratype . findFirstToken ( TokenTypes . ARRAY _ DECLARATOR ) ; 
 + final DetailAST parameterType = params . getFirstChild ( ) . findFirstToken ( TokenTypes . TYPE ) ; 
 + final DetailAST arrayDecl = parameterType . findFirstToken ( TokenTypes . ARRAY _ DECLARATOR ) ; 
 
 if ( arrayDecl ! = null ) { 
 final DetailAST arrayType = arrayDecl . getFirstChild ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 index 53982ff . . 007f6c8 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 @ @ - 64 , 8 + 64 , 8 @ @ public class LocalizedMessageTest { 
 
 @ Test 
 public void testBundleReloadUrlNull ( ) throws IOException { 
 - LocalizedMessage . UTF8Control cntrl = new LocalizedMessage . UTF8Control ( ) ; 
 - cntrl . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 + LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; 
 + control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 Locale . ENGLISH , " java . class " , 
 Thread . currentThread ( ) . getContextClassLoader ( ) , true ) ; 
 } 
 @ @ - 82 , 8 + 82 , 8 @ @ public class LocalizedMessageTest { 
 String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; 
 when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; 
 
 - LocalizedMessage . UTF8Control cntrl = new LocalizedMessage . UTF8Control ( ) ; 
 - cntrl . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 + LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; 
 + control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 Locale . ENGLISH , " java . class " , 
 classloader , true ) ; 
 } 
 @ @ - 97 , 8 + 97 , 8 @ @ public class LocalizedMessageTest { 
 URL url = getMockUrl ( null ) ; 
 when ( classloader . getResource ( resource ) ) . thenReturn ( url ) ; 
 
 - LocalizedMessage . UTF8Control cntrl = new LocalizedMessage . UTF8Control ( ) ; 
 - cntrl . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 + LocalizedMessage . UTF8Control control = new LocalizedMessage . UTF8Control ( ) ; 
 + control . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 Locale . ENGLISH , " java . class " , 
 classloader , true ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java 
 index 993a131 . . dfb196a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / ClassResolverTest . java 
 @ @ - 136 , 7 + 136 , 7 @ @ public class ClassResolverTest { 
 ClassResolver classResolver = PowerMockito . spy ( new ClassResolver ( Thread 
 . currentThread ( ) . getContextClassLoader ( ) , " " , imports ) ) ; 
 
 - PowerMockito . doThrow ( new ClassNotFoundException ( " excpected exception " ) ) 
 + PowerMockito . doThrow ( new ClassNotFoundException ( " expected exception " ) ) 
 . when ( classResolver , " safeLoad " , anyObject ( ) ) ; 
 PowerMockito . doReturn ( true ) . when ( classResolver , " isLoadable " , anyObject ( ) ) ; 
 
 @ @ - 147 , 7 + 147 , 7 @ @ public class ClassResolverTest { 
 catch ( IllegalStateException e ) { 
 / / expected 
 assertTrue ( e . getCause ( ) instanceof ClassNotFoundException ) ; 
 - assertTrue ( e . getMessage ( ) . endsWith ( " excpected exception " ) ) ; 
 + assertTrue ( e . getMessage ( ) . endsWith ( " expected exception " ) ) ; 
 } 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java 
 index 4a37974 . . 914fffb 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java 
 @ @ - 169 , 8 + 169 , 8 @ @ public class NewlineAtEndOfFileCheckTest 
 File impossibleFile = new File ( " " ) ; 
 Set < LocalizedMessage > messages = check . process ( impossibleFile , Lists . newArrayList ( " txt " ) ) ; 
 assertEquals ( 1 , messages . size ( ) ) ; 
 - Iterator < LocalizedMessage > iter = messages . iterator ( ) ; 
 - assertEquals ( " Unable to open ' ' . " , iter . next ( ) . getMessage ( ) ) ; 
 + Iterator < LocalizedMessage > iterator = messages . iterator ( ) ; 
 + assertEquals ( " Unable to open ' ' . " , iterator . next ( ) . getMessage ( ) ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 index e74a679 . . 10cc58a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UniquePropertiesCheckTest . java 
 @ @ - 99 , 7 + 99 , 7 @ @ public class UniquePropertiesCheckTest extends BaseFileSetCheckTestSupport { 
 } 
 
 / * * 
 - * Tests IO exception , that can orrur during reading of properties file . 
 + * Tests IO exception , that can occur during reading of properties file . 
 * / 
 @ Test 
 public void testIOException ( ) throws Exception { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheckTest . java 
 index d31fe4f . . c1d083f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / UpperEllCheckTest . java 
 @ @ - 51 , 7 + 51 , 7 @ @ public class UpperEllCheckTest 
 } 
 
 @ Test 
 - public void testAcceptableTockens ( ) { 
 + public void testAcceptableTokens ( ) { 
 int [ ] expected = { TokenTypes . NUM _ LONG } ; 
 UpperEllCheck check = new UpperEllCheck ( ) ; 
 int [ ] actual = check . getAcceptableTokens ( ) ;
