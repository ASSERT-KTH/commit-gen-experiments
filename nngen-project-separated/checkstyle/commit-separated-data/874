BLEU SCORE: 0.017110488113633058

TEST MSG: Issue # 3072 : Add mvn check for non main files
GENERATED MSG: Changed to make the XML be validated using the DTD . The

TEST DIFF (one line): diff - - git a / config / checkstyle _ non _ main _ files _ checks . xml b / config / checkstyle _ non _ main _ files _ checks . xml <nl> new file mode 100644 <nl> index 0000000 . . d4a884a <nl> - - - / dev / null <nl> + + + b / config / checkstyle _ non _ main _ files _ checks . xml <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + < ! DOCTYPE module PUBLIC <nl> + " - / / Puppy Crawl / / DTD Check Configuration 1 . 3 / / EN " <nl> + " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 3 . dtd " > <nl> + <nl> + < module name = " Checker " > <nl> + < property name = " charset " value = " UTF - 8 " / > <nl> + <nl> + < ! - - Hard coded until https : / / issues . apache . org / jira / browse / MCHECKSTYLE - 332 is released . - - > <nl> + < property name = " cacheFile " value = " target / cache _ non _ main _ files " / > <nl> + <nl> + < ! - - Suppresions for resources - - > <nl> + < module name = " SuppressionFilter " > <nl> + < property name = " file " value = " $ { project . basedir } / config / checkstyle _ non _ main _ files _ suppressions . xml " / > <nl> + < / module > <nl> + < ! - - Miscellaneous - - > <nl> + < module name = " NewlineAtEndOfFile " / > <nl> + < / module > <nl> diff - - git a / config / checkstyle _ non _ main _ files _ suppressions . xml b / config / checkstyle _ non _ main _ files _ suppressions . xml <nl> new file mode 100644 <nl> index 0000000 . . 8789492 <nl> - - - / dev / null <nl> + + + b / config / checkstyle _ non _ main _ files _ suppressions . xml <nl> @ @ - 0 , 0 + 1 , 28 @ @ <nl> + < ? xml version = " 1 . 0 " ? > <nl> + <nl> + < ! DOCTYPE suppressions PUBLIC <nl> + " - / / Puppy Crawl / / DTD Suppressions 1 . 1 / / EN " <nl> + " http : / / www . puppycrawl . com / dtds / suppressions _ 1 _ 1 . dtd " > <nl> + <nl> + < suppressions > <nl> + <nl> + < ! - - Input files for NewlineAtEndOfFileCheckTest , intentional no new line at the end . - - > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * Newline . * AtEndOfFile \ . java " / > <nl> + <nl> + < ! - - Intentional no new line at the end . - - > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] InputFullOfSinglelineComments \ . java " / > <nl> + <nl> + < ! - - Grammar specific input file , should have exact structure to reproduce the case . - - > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] InputEmbeddedNullChar \ . java " / > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] javadoc [ \ \ / ] InputLeadingAsterisks \ . txt " / > <nl> + <nl> + < ! - - Javadoc files should not have new line by design ( on purpose ) . - - > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] javadoc [ \ \ / ] htmlTags [ \ \ / ] . * " / > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] javadoc [ \ \ / ] javadocTags [ \ \ / ] . * " / > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] astprinter [ \ \ / ] InputJavadocComment \ . javadoc " / > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] astprinter [ \ \ / ] InputJavadocWithError \ . javadoc " / > <nl> + <nl> + < ! - - Empty file cannot have any new line at the end . - - > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] checks [ \ \ / ] InputEmptyFile \ . txt " / > <nl> + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] InputRegressionEmptyAst \ . txt " / > <nl> + < / suppressions > <nl> diff - - git a / pom . xml b / pom . xml <nl> index f533d98 . . 5e2c591 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 472 , 22 + 472 , 42 @ @ <nl> < / dependencies > <nl> < ! - - Specifying configuration here will take effect on the execution of " mvn checkstyle : checkstyle " , <nl> but will not take effect on the execution of " mvn site " - - > <nl> - < configuration > <nl> - < configLocation > $ { project . basedir } / config / checkstyle _ sevntu _ checks . xml < / configLocation > <nl> - < failOnViolation > true < / failOnViolation > <nl> - < includeResources > false < / includeResources > <nl> - < includeTestResources > false < / includeTestResources > <nl> - < logViolationsToConsole > true < / logViolationsToConsole > <nl> - < maxAllowedViolations > 0 < / maxAllowedViolations > <nl> - < violationSeverity > error < / violationSeverity > <nl> - < propertyExpansion > project . basedir = $ { project . basedir } < / propertyExpansion > <nl> - < sourceDirectory > $ { project . basedir } / src < / sourceDirectory > <nl> - < excludes > * * / it / resources / * * / * , * * / test / resources / * * / * , * * / test / resources - noncompilable / * * / * < / excludes > <nl> - < / configuration > <nl> < executions > <nl> < execution > <nl> < id > sevntu - checkstyle - check < / id > <nl> < phase > verify < / phase > <nl> + < configuration > <nl> + < configLocation > $ { project . basedir } / config / checkstyle _ sevntu _ checks . xml < / configLocation > <nl> + < failOnViolation > true < / failOnViolation > <nl> + < includeResources > false < / includeResources > <nl> + < includeTestResources > false < / includeTestResources > <nl> + < logViolationsToConsole > true < / logViolationsToConsole > <nl> + < maxAllowedViolations > 0 < / maxAllowedViolations > <nl> + < violationSeverity > error < / violationSeverity > <nl> + < propertyExpansion > project . basedir = $ { project . basedir } < / propertyExpansion > <nl> + < sourceDirectory > $ { project . basedir } / src < / sourceDirectory > <nl> + < excludes > * * / it / resources / * * / * , * * / test / resources / * * / * , * * / test / resources - noncompilable / * * / * < / excludes > <nl> + < / configuration > <nl> + < goals > <nl> + < goal > check < / goal > <nl> + < / goals > <nl> + < / execution > <nl> + < execution > <nl> + < id > checkstyle - non - main - check < / id > <nl> + < phase > verify < / phase > <nl> + < configuration > <nl> + < configLocation > $ { project . basedir } / config / checkstyle _ non _ main _ files _ checks . xml < / configLocation > <nl> + < failOnViolation > true < / failOnViolation > <nl> + < includeResources > false < / includeResources > <nl> + < includeTestResources > true < / includeTestResources > <nl> + < logViolationsToConsole > true < / logViolationsToConsole > <nl> + < maxAllowedViolations > 0 < / maxAllowedViolations > <nl> + < violationSeverity > error < / violationSeverity > <nl> + < propertyExpansion > project . basedir = $ { project . basedir } < / propertyExpansion > <nl> + < sourceDirectory > $ { project . basedir } < / sourceDirectory > <nl> + < includes > * * / * < / includes > <nl> + < excludes > src / main / * * / * , src / test / java / * * / * , src / site / resources / images / * * / * , target / * * / * , bin / * * / * , . git / * * / * , . idea / * * / * , . settings / * * / * , . checkstyle / * * / * , . DS _ Store / * * / * , . nondex / * * / * , . pmd / * * / * , . fbExcludeFilterFile / * * / * , . externalToolBuilders / * * / * , . pmdruleset . xml , nbactions . xml , nb - configuration . xml , * . iml < / excludes > <nl> + < / configuration > <nl> < goals > <nl> < goal > check < / goal > <nl> < / goals >
NEAREST DIFF (one line): diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java b / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java <nl> index 7c84f9c . . 64e0ef7 100644 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java <nl> @ @ - 36 , 8 + 36 , 7 @ @ public abstract class BaseCheckTestCase <nl> public static DefaultConfiguration createCheckConfig ( Class aClazz ) <nl> { <nl> final DefaultConfiguration checkConfig = <nl> - new DefaultConfiguration ( " test " ) ; <nl> - checkConfig . addAttribute ( " classname " , aClazz . getName ( ) ) ; <nl> + new DefaultConfiguration ( aClazz . getName ( ) ) ; <nl> return checkConfig ; <nl> } <nl>

TEST DIFF:
diff - - git a / config / checkstyle _ non _ main _ files _ checks . xml b / config / checkstyle _ non _ main _ files _ checks . xml 
 new file mode 100644 
 index 0000000 . . d4a884a 
 - - - / dev / null 
 + + + b / config / checkstyle _ non _ main _ files _ checks . xml 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + < ! DOCTYPE module PUBLIC 
 + " - / / Puppy Crawl / / DTD Check Configuration 1 . 3 / / EN " 
 + " http : / / www . puppycrawl . com / dtds / configuration _ 1 _ 3 . dtd " > 
 + 
 + < module name = " Checker " > 
 + < property name = " charset " value = " UTF - 8 " / > 
 + 
 + < ! - - Hard coded until https : / / issues . apache . org / jira / browse / MCHECKSTYLE - 332 is released . - - > 
 + < property name = " cacheFile " value = " target / cache _ non _ main _ files " / > 
 + 
 + < ! - - Suppresions for resources - - > 
 + < module name = " SuppressionFilter " > 
 + < property name = " file " value = " $ { project . basedir } / config / checkstyle _ non _ main _ files _ suppressions . xml " / > 
 + < / module > 
 + < ! - - Miscellaneous - - > 
 + < module name = " NewlineAtEndOfFile " / > 
 + < / module > 
 diff - - git a / config / checkstyle _ non _ main _ files _ suppressions . xml b / config / checkstyle _ non _ main _ files _ suppressions . xml 
 new file mode 100644 
 index 0000000 . . 8789492 
 - - - / dev / null 
 + + + b / config / checkstyle _ non _ main _ files _ suppressions . xml 
 @ @ - 0 , 0 + 1 , 28 @ @ 
 + < ? xml version = " 1 . 0 " ? > 
 + 
 + < ! DOCTYPE suppressions PUBLIC 
 + " - / / Puppy Crawl / / DTD Suppressions 1 . 1 / / EN " 
 + " http : / / www . puppycrawl . com / dtds / suppressions _ 1 _ 1 . dtd " > 
 + 
 + < suppressions > 
 + 
 + < ! - - Input files for NewlineAtEndOfFileCheckTest , intentional no new line at the end . - - > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * Newline . * AtEndOfFile \ . java " / > 
 + 
 + < ! - - Intentional no new line at the end . - - > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] comments [ \ \ / ] InputFullOfSinglelineComments \ . java " / > 
 + 
 + < ! - - Grammar specific input file , should have exact structure to reproduce the case . - - > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] InputEmbeddedNullChar \ . java " / > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] javadoc [ \ \ / ] InputLeadingAsterisks \ . txt " / > 
 + 
 + < ! - - Javadoc files should not have new line by design ( on purpose ) . - - > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] javadoc [ \ \ / ] htmlTags [ \ \ / ] . * " / > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] javadoc [ \ \ / ] javadocTags [ \ \ / ] . * " / > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] astprinter [ \ \ / ] InputJavadocComment \ . javadoc " / > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] astprinter [ \ \ / ] InputJavadocWithError \ . javadoc " / > 
 + 
 + < ! - - Empty file cannot have any new line at the end . - - > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] checks [ \ \ / ] InputEmptyFile \ . txt " / > 
 + < suppress checks = " NewlineAtEndOfFile " files = " [ \ \ / ] test [ \ \ / ] . * [ \ \ / ] grammars [ \ \ / ] InputRegressionEmptyAst \ . txt " / > 
 + < / suppressions > 
 diff - - git a / pom . xml b / pom . xml 
 index f533d98 . . 5e2c591 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 472 , 22 + 472 , 42 @ @ 
 < / dependencies > 
 < ! - - Specifying configuration here will take effect on the execution of " mvn checkstyle : checkstyle " , 
 but will not take effect on the execution of " mvn site " - - > 
 - < configuration > 
 - < configLocation > $ { project . basedir } / config / checkstyle _ sevntu _ checks . xml < / configLocation > 
 - < failOnViolation > true < / failOnViolation > 
 - < includeResources > false < / includeResources > 
 - < includeTestResources > false < / includeTestResources > 
 - < logViolationsToConsole > true < / logViolationsToConsole > 
 - < maxAllowedViolations > 0 < / maxAllowedViolations > 
 - < violationSeverity > error < / violationSeverity > 
 - < propertyExpansion > project . basedir = $ { project . basedir } < / propertyExpansion > 
 - < sourceDirectory > $ { project . basedir } / src < / sourceDirectory > 
 - < excludes > * * / it / resources / * * / * , * * / test / resources / * * / * , * * / test / resources - noncompilable / * * / * < / excludes > 
 - < / configuration > 
 < executions > 
 < execution > 
 < id > sevntu - checkstyle - check < / id > 
 < phase > verify < / phase > 
 + < configuration > 
 + < configLocation > $ { project . basedir } / config / checkstyle _ sevntu _ checks . xml < / configLocation > 
 + < failOnViolation > true < / failOnViolation > 
 + < includeResources > false < / includeResources > 
 + < includeTestResources > false < / includeTestResources > 
 + < logViolationsToConsole > true < / logViolationsToConsole > 
 + < maxAllowedViolations > 0 < / maxAllowedViolations > 
 + < violationSeverity > error < / violationSeverity > 
 + < propertyExpansion > project . basedir = $ { project . basedir } < / propertyExpansion > 
 + < sourceDirectory > $ { project . basedir } / src < / sourceDirectory > 
 + < excludes > * * / it / resources / * * / * , * * / test / resources / * * / * , * * / test / resources - noncompilable / * * / * < / excludes > 
 + < / configuration > 
 + < goals > 
 + < goal > check < / goal > 
 + < / goals > 
 + < / execution > 
 + < execution > 
 + < id > checkstyle - non - main - check < / id > 
 + < phase > verify < / phase > 
 + < configuration > 
 + < configLocation > $ { project . basedir } / config / checkstyle _ non _ main _ files _ checks . xml < / configLocation > 
 + < failOnViolation > true < / failOnViolation > 
 + < includeResources > false < / includeResources > 
 + < includeTestResources > true < / includeTestResources > 
 + < logViolationsToConsole > true < / logViolationsToConsole > 
 + < maxAllowedViolations > 0 < / maxAllowedViolations > 
 + < violationSeverity > error < / violationSeverity > 
 + < propertyExpansion > project . basedir = $ { project . basedir } < / propertyExpansion > 
 + < sourceDirectory > $ { project . basedir } < / sourceDirectory > 
 + < includes > * * / * < / includes > 
 + < excludes > src / main / * * / * , src / test / java / * * / * , src / site / resources / images / * * / * , target / * * / * , bin / * * / * , . git / * * / * , . idea / * * / * , . settings / * * / * , . checkstyle / * * / * , . DS _ Store / * * / * , . nondex / * * / * , . pmd / * * / * , . fbExcludeFilterFile / * * / * , . externalToolBuilders / * * / * , . pmdruleset . xml , nbactions . xml , nb - configuration . xml , * . iml < / excludes > 
 + < / configuration > 
 < goals > 
 < goal > check < / goal > 
 < / goals >

NEAREST DIFF:
diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java b / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java 
 index 7c84f9c . . 64e0ef7 100644 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / BaseCheckTestCase . java 
 @ @ - 36 , 8 + 36 , 7 @ @ public abstract class BaseCheckTestCase 
 public static DefaultConfiguration createCheckConfig ( Class aClazz ) 
 { 
 final DefaultConfiguration checkConfig = 
 - new DefaultConfiguration ( " test " ) ; 
 - checkConfig . addAttribute ( " classname " , aClazz . getName ( ) ) ; 
 + new DefaultConfiguration ( aClazz . getName ( ) ) ; 
 return checkConfig ; 
 } 

