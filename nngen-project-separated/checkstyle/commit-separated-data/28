BLEU SCORE: 0.008491822537255894

TEST MSG: Issue # 6367 : Improve pitest coverage for RightCurly
GENERATED MSG: Fix bug at RightCurlyCheck : curly brace ' } ' should be on line by itself not reported for method with annotation , issue # 1014 .

TEST DIFF (one line): diff - - git a / . ci / pitest . sh b / . ci / pitest . sh <nl> index 18fd82f . . f9e488f 100755 <nl> - - - a / . ci / pitest . sh <nl> + + + b / . ci / pitest . sh <nl> @ @ - 204 , 7 + 204 , 6 @ @ pitest - ant ) <nl> pitest - blocks ) <nl> mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; <nl> declare - a ignoredItems = ( <nl> - " RightCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; details . nextToken . getType ( ) = = TokenTypes . RCURLY < / span > < / pre > < / td > < / tr > " <nl> " RightCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; tokenAfterNextToken . getType ( ) = = TokenTypes . SEMI < / span > < / pre > < / td > < / tr > " <nl> " RightCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( tokenType = = TokenTypes . LITERAL _ CATCH ) { < / span > < / pre > < / td > < / tr > " <nl> " RightCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( tokenType = = TokenTypes . LITERAL _ IF ) { < / span > < / pre > < / td > < / tr > " <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> index 1229ed3 . . 261e5f7 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java <nl> @ @ - 440 , 6 + 440 , 7 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { <nl> " 61 : 42 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 42 ) , <nl> " 63 : 43 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 43 ) , <nl> " 67 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , <nl> + " 74 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputRightCurlyAlone . java " ) , <nl> expected ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / rightcurly / InputRightCurlyAlone . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / rightcurly / InputRightCurlyAlone . java <nl> index d3a3296 . . 3aa4f80 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / rightcurly / InputRightCurlyAlone . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / rightcurly / InputRightCurlyAlone . java <nl> @ @ - 65 , 4 + 65 , 13 @ @ public class InputRightCurlyAlone { <nl> class TestClass3 { <nl> private int field ; <nl> } ; / / violation <nl> + <nl> + void method6 ( int a ) { <nl> + java . util . Map < String , String > map3 = new java . util . LinkedHashMap < String , String > ( ) { { <nl> + put ( " Hello " , " World " ) ; <nl> + put ( " first " , " second " ) ; <nl> + put ( " polygene " , " lubricants " ) ; <nl> + } { } ; / / violation <nl> + } ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> index 7b5865e . . 13818f1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java <nl> @ @ - 159 , 7 + 159 , 7 @ @ public class ClassResolver { <nl> safeLoad ( name ) ; <nl> return true ; <nl> } <nl> - catch ( final ClassNotFoundException e ) { <nl> + catch ( final ClassNotFoundException | NoClassDefFoundError e ) { <nl> return false ; <nl> } <nl> } <nl> @ @ - 170 , 9 + 170 , 10 @ @ public class ClassResolver { <nl> * @ param name name of the class to load <nl> * @ return the < code > Class < / code > for the specified class <nl> * @ throws ClassNotFoundException if an error occurs <nl> + * @ throws NoClassDefFoundError if an error occurs <nl> * / <nl> public Class < ? > safeLoad ( String name ) <nl> - throws ClassNotFoundException { <nl> + throws ClassNotFoundException , NoClassDefFoundError { <nl> / / The next line will load the class using the specified class <nl> / / loader . The magic is having the " false " parameter . This means the <nl> / / class will not be initialised . Very , very important .

TEST DIFF:
diff - - git a / . ci / pitest . sh b / . ci / pitest . sh 
 index 18fd82f . . f9e488f 100755 
 - - - a / . ci / pitest . sh 
 + + + b / . ci / pitest . sh 
 @ @ - 204 , 7 + 204 , 6 @ @ pitest - ant ) 
 pitest - blocks ) 
 mvn - e - P $ 1 clean test org . pitest : pitest - maven : mutationCoverage ; 
 declare - a ignoredItems = ( 
 - " RightCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; details . nextToken . getType ( ) = = TokenTypes . RCURLY < / span > < / pre > < / td > < / tr > " 
 " RightCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > & # 38 ; & # 38 ; tokenAfterNextToken . getType ( ) = = TokenTypes . SEMI < / span > < / pre > < / td > < / tr > " 
 " RightCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > else if ( tokenType = = TokenTypes . LITERAL _ CATCH ) { < / span > < / pre > < / td > < / tr > " 
 " RightCurlyCheck . java . html : < td class = ' covered ' > < pre > < span class = ' survived ' > if ( tokenType = = TokenTypes . LITERAL _ IF ) { < / span > < / pre > < / td > < / tr > " 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 index 1229ed3 . . 261e5f7 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheckTest . java 
 @ @ - 440 , 6 + 440 , 7 @ @ public class RightCurlyCheckTest extends AbstractModuleTestSupport { 
 " 61 : 42 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 42 ) , 
 " 63 : 43 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 43 ) , 
 " 67 : 5 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 5 ) , 
 + " 74 : 9 : " + getCheckMessage ( MSG _ KEY _ LINE _ ALONE , " } " , 9 ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputRightCurlyAlone . java " ) , 
 expected ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / rightcurly / InputRightCurlyAlone . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / rightcurly / InputRightCurlyAlone . java 
 index d3a3296 . . 3aa4f80 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / rightcurly / InputRightCurlyAlone . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / rightcurly / InputRightCurlyAlone . java 
 @ @ - 65 , 4 + 65 , 13 @ @ public class InputRightCurlyAlone { 
 class TestClass3 { 
 private int field ; 
 } ; / / violation 
 + 
 + void method6 ( int a ) { 
 + java . util . Map < String , String > map3 = new java . util . LinkedHashMap < String , String > ( ) { { 
 + put ( " Hello " , " World " ) ; 
 + put ( " first " , " second " ) ; 
 + put ( " polygene " , " lubricants " ) ; 
 + } { } ; / / violation 
 + } ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 index 7b5865e . . 13818f1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / ClassResolver . java 
 @ @ - 159 , 7 + 159 , 7 @ @ public class ClassResolver { 
 safeLoad ( name ) ; 
 return true ; 
 } 
 - catch ( final ClassNotFoundException e ) { 
 + catch ( final ClassNotFoundException | NoClassDefFoundError e ) { 
 return false ; 
 } 
 } 
 @ @ - 170 , 9 + 170 , 10 @ @ public class ClassResolver { 
 * @ param name name of the class to load 
 * @ return the < code > Class < / code > for the specified class 
 * @ throws ClassNotFoundException if an error occurs 
 + * @ throws NoClassDefFoundError if an error occurs 
 * / 
 public Class < ? > safeLoad ( String name ) 
 - throws ClassNotFoundException { 
 + throws ClassNotFoundException , NoClassDefFoundError { 
 / / The next line will load the class using the specified class 
 / / loader . The magic is having the " false " parameter . This means the 
 / / class will not be initialised . Very , very important .
