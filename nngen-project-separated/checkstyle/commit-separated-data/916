BLEU SCORE: 0.30126344037064623

TEST MSG: Issue # 3929 : Modified OperatorWrapCheckTest . java and moved its input files to operatorwrap subdirectory
GENERATED MSG: Issue # 3900 : Modified TypecastParenPadCheckTest . java and moved its test - files to a subdir

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java <nl> index 6c4e477 . . 645b433 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java <nl> @ @ - 47 , 7 + 47 , 9 @ @ public class OperatorWrapCheckTest <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " whitespace " + File . separator + filename ) ; <nl> + + " whitespace " + File . separator <nl> + + " operatorwrap " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 60 , 7 + 62 , 7 @ @ public class OperatorWrapCheckTest <nl> " 48 : 30 : " + getCheckMessage ( MSG _ LINE _ NEW , " & " ) , <nl> " 61 : 30 : " + getCheckMessage ( MSG _ LINE _ NEW , " & " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 72 , 7 + 74 , 7 @ @ public class OperatorWrapCheckTest <nl> " 24 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " & & " ) , <nl> " 29 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " & & " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 82 , 7 + 84 , 7 @ @ public class OperatorWrapCheckTest <nl> final String [ ] expected = { <nl> " 33 : 33 : " + getCheckMessage ( MSG _ LINE _ NEW , " : : " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 94 , 7 + 96 , 7 @ @ public class OperatorWrapCheckTest <nl> " 31 : 21 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " : : " ) , <nl> " 36 : 21 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " : : " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 105 , 7 + 107 , 7 @ @ public class OperatorWrapCheckTest <nl> final String [ ] expected = { <nl> " 42 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " = " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 115 , 7 + 117 , 7 @ @ public class OperatorWrapCheckTest <nl> try { <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; <nl> fail ( " exception expected " ) ; <nl> } <nl> catch ( CheckstyleException ex ) { <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputOpWrap . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputOpWrap . java <nl> deleted file mode 100644 <nl> index c89231b . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputOpWrap . java <nl> + + + / dev / null <nl> @ @ - 1 , 82 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2001 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> - <nl> - import java . util . Arrays ; <nl> - <nl> - / * * <nl> - * Test case for detecting operator wrapping . <nl> - * @ author Lars K � hne <nl> - * * / <nl> - class InputOpWrap <nl> - { <nl> - void test ( ) <nl> - { <nl> - int x = 1 + <nl> - 2 - <nl> - 3 <nl> - - <nl> - 4 ; <nl> - x = x + 2 ; <nl> - boolean y = true <nl> - & & <nl> - false ; <nl> - y = true & & <nl> - false ; <nl> - y = false <nl> - & & true ; <nl> - Arrays . sort ( null , String <nl> - : : <nl> - compareToIgnoreCase ) ; <nl> - Arrays . sort ( null , String : : <nl> - compareToIgnoreCase ) ; <nl> - Arrays . sort ( null , String <nl> - : : compareToIgnoreCase ) ; <nl> - } <nl> - <nl> - void testAssignment ( ) <nl> - { <nl> - int x <nl> - = 0 ; / / error when checking assignment operators with EOL wrap option <nl> - int y = <nl> - 0 ; <nl> - } <nl> - <nl> - < <nl> - T extends Comparable & <nl> - java . io . Serializable <nl> - > <nl> - void testGenerics1 ( ) <nl> - { <nl> - Comparable <nl> - < <nl> - String <nl> - > <nl> - c = new String ( ) ; <nl> - } <nl> - } <nl> - <nl> - class badCase2 < T extends Foo & <nl> - Bar > { <nl> - } <nl> - <nl> - class goodCase < T extends Foo & Bar > { <nl> - } <nl> - <nl> - class Switch { <nl> - public void test ( int i , int j ) { <nl> - switch ( j ) { <nl> - case 7 : <nl> - return ; <nl> - } <nl> - switch ( i ) { <nl> - case 1 : <nl> - break ; <nl> - default : <nl> - ; <nl> - } <nl> - for ( int k : new int [ ] { 1 , 2 , 3 } ) { } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / operatorwrap / InputOperatorWrap . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / operatorwrap / InputOperatorWrap . java <nl> new file mode 100644 <nl> index 0000000 . . 3b457bc <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / operatorwrap / InputOperatorWrap . java <nl> @ @ - 0 , 0 + 1 , 82 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . whitespace ; <nl> + <nl> + import java . util . Arrays ; <nl> + <nl> + / * * <nl> + * Test case for detecting operator wrapping . <nl> + * @ author Lars K � hne <nl> + * * / <nl> + class InputOperatorWrap <nl> + { <nl> + void test ( ) <nl> + { <nl> + int x = 1 + <nl> + 2 - <nl> + 3 <nl> + - <nl> + 4 ; <nl> + x = x + 2 ; <nl> + boolean y = true <nl> + & & <nl> + false ; <nl> + y = true & & <nl> + false ; <nl> + y = false <nl> + & & true ; <nl> + Arrays . sort ( null , String <nl> + : : <nl> + compareToIgnoreCase ) ; <nl> + Arrays . sort ( null , String : : <nl> + compareToIgnoreCase ) ; <nl> + Arrays . sort ( null , String <nl> + : : compareToIgnoreCase ) ; <nl> + } <nl> + <nl> + void testAssignment ( ) <nl> + { <nl> + int x <nl> + = 0 ; / / error when checking assignment operators with EOL wrap option <nl> + int y = <nl> + 0 ; <nl> + } <nl> + <nl> + < <nl> + T extends Comparable & <nl> + java . io . Serializable <nl> + > <nl> + void testGenerics1 ( ) <nl> + { <nl> + Comparable <nl> + < <nl> + String <nl> + > <nl> + c = new String ( ) ; <nl> + } <nl> + } <nl> + <nl> + class badCase2 < T extends Foo & <nl> + Bar > { <nl> + } <nl> + <nl> + class goodCase < T extends Foo & Bar > { <nl> + } <nl> + <nl> + class Switch { <nl> + public void test ( int i , int j ) { <nl> + switch ( j ) { <nl> + case 7 : <nl> + return ; <nl> + } <nl> + switch ( i ) { <nl> + case 1 : <nl> + break ; <nl> + default : <nl> + ; <nl> + } <nl> + for ( int k : new int [ ] { 1 , 2 , 3 } ) { } <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm <nl> index 46e2299 . . 2809831 100644 <nl> - - - a / src / xdocs / index . xml . vm <nl> + + + b / src / xdocs / index . xml . vm <nl> @ @ - 168 , 14 + 168 , 14 @ @ <nl> < / td > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> < td > David Schneider < / td > <nl> < td > <nl> < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home Page < / a > <nl> < / td > <nl> < td > <nl> In 2007 was awarded <nl> - < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > <nl> + < a href = " https : / / eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > <nl> Best Open Source Eclipse - based Developer tool <nl> < / a > . <nl> < / td > <nl> @ @ - 201 , 7 + 201 , 7 @ @ <nl> < td / > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> < td > Roman Ivanov < / td > <nl> < td > <nl> < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > <nl> @ @ - 344 , 7 + 344 , 7 @ @ <nl> < td / > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> < td > Marco van Meegen < / td > <nl> < td > <nl> < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java 
 index 6c4e477 . . 645b433 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / OperatorWrapCheckTest . java 
 @ @ - 47 , 7 + 47 , 9 @ @ public class OperatorWrapCheckTest 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " whitespace " + File . separator + filename ) ; 
 + + " whitespace " + File . separator 
 + + " operatorwrap " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 @ @ - 60 , 7 + 62 , 7 @ @ public class OperatorWrapCheckTest 
 " 48 : 30 : " + getCheckMessage ( MSG _ LINE _ NEW , " & " ) , 
 " 61 : 30 : " + getCheckMessage ( MSG _ LINE _ NEW , " & " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 72 , 7 + 74 , 7 @ @ public class OperatorWrapCheckTest 
 " 24 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " & & " ) , 
 " 29 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " & & " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 82 , 7 + 84 , 7 @ @ public class OperatorWrapCheckTest 
 final String [ ] expected = { 
 " 33 : 33 : " + getCheckMessage ( MSG _ LINE _ NEW , " : : " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 94 , 7 + 96 , 7 @ @ public class OperatorWrapCheckTest 
 " 31 : 21 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " : : " ) , 
 " 36 : 21 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " : : " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 105 , 7 + 107 , 7 @ @ public class OperatorWrapCheckTest 
 final String [ ] expected = { 
 " 42 : 13 : " + getCheckMessage ( MSG _ LINE _ PREVIOUS , " = " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 115 , 7 + 117 , 7 @ @ public class OperatorWrapCheckTest 
 try { 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 
 - verify ( checkConfig , getPath ( " InputOpWrap . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputOperatorWrap . java " ) , expected ) ; 
 fail ( " exception expected " ) ; 
 } 
 catch ( CheckstyleException ex ) { 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputOpWrap . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputOpWrap . java 
 deleted file mode 100644 
 index c89231b . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / InputOpWrap . java 
 + + + / dev / null 
 @ @ - 1 , 82 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2001 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 - 
 - import java . util . Arrays ; 
 - 
 - / * * 
 - * Test case for detecting operator wrapping . 
 - * @ author Lars K � hne 
 - * * / 
 - class InputOpWrap 
 - { 
 - void test ( ) 
 - { 
 - int x = 1 + 
 - 2 - 
 - 3 
 - - 
 - 4 ; 
 - x = x + 2 ; 
 - boolean y = true 
 - & & 
 - false ; 
 - y = true & & 
 - false ; 
 - y = false 
 - & & true ; 
 - Arrays . sort ( null , String 
 - : : 
 - compareToIgnoreCase ) ; 
 - Arrays . sort ( null , String : : 
 - compareToIgnoreCase ) ; 
 - Arrays . sort ( null , String 
 - : : compareToIgnoreCase ) ; 
 - } 
 - 
 - void testAssignment ( ) 
 - { 
 - int x 
 - = 0 ; / / error when checking assignment operators with EOL wrap option 
 - int y = 
 - 0 ; 
 - } 
 - 
 - < 
 - T extends Comparable & 
 - java . io . Serializable 
 - > 
 - void testGenerics1 ( ) 
 - { 
 - Comparable 
 - < 
 - String 
 - > 
 - c = new String ( ) ; 
 - } 
 - } 
 - 
 - class badCase2 < T extends Foo & 
 - Bar > { 
 - } 
 - 
 - class goodCase < T extends Foo & Bar > { 
 - } 
 - 
 - class Switch { 
 - public void test ( int i , int j ) { 
 - switch ( j ) { 
 - case 7 : 
 - return ; 
 - } 
 - switch ( i ) { 
 - case 1 : 
 - break ; 
 - default : 
 - ; 
 - } 
 - for ( int k : new int [ ] { 1 , 2 , 3 } ) { } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / operatorwrap / InputOperatorWrap . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / operatorwrap / InputOperatorWrap . java 
 new file mode 100644 
 index 0000000 . . 3b457bc 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / operatorwrap / InputOperatorWrap . java 
 @ @ - 0 , 0 + 1 , 82 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . whitespace ; 
 + 
 + import java . util . Arrays ; 
 + 
 + / * * 
 + * Test case for detecting operator wrapping . 
 + * @ author Lars K � hne 
 + * * / 
 + class InputOperatorWrap 
 + { 
 + void test ( ) 
 + { 
 + int x = 1 + 
 + 2 - 
 + 3 
 + - 
 + 4 ; 
 + x = x + 2 ; 
 + boolean y = true 
 + & & 
 + false ; 
 + y = true & & 
 + false ; 
 + y = false 
 + & & true ; 
 + Arrays . sort ( null , String 
 + : : 
 + compareToIgnoreCase ) ; 
 + Arrays . sort ( null , String : : 
 + compareToIgnoreCase ) ; 
 + Arrays . sort ( null , String 
 + : : compareToIgnoreCase ) ; 
 + } 
 + 
 + void testAssignment ( ) 
 + { 
 + int x 
 + = 0 ; / / error when checking assignment operators with EOL wrap option 
 + int y = 
 + 0 ; 
 + } 
 + 
 + < 
 + T extends Comparable & 
 + java . io . Serializable 
 + > 
 + void testGenerics1 ( ) 
 + { 
 + Comparable 
 + < 
 + String 
 + > 
 + c = new String ( ) ; 
 + } 
 + } 
 + 
 + class badCase2 < T extends Foo & 
 + Bar > { 
 + } 
 + 
 + class goodCase < T extends Foo & Bar > { 
 + } 
 + 
 + class Switch { 
 + public void test ( int i , int j ) { 
 + switch ( j ) { 
 + case 7 : 
 + return ; 
 + } 
 + switch ( i ) { 
 + case 1 : 
 + break ; 
 + default : 
 + ; 
 + } 
 + for ( int k : new int [ ] { 1 , 2 , 3 } ) { } 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm 
 index 46e2299 . . 2809831 100644 
 - - - a / src / xdocs / index . xml . vm 
 + + + b / src / xdocs / index . xml . vm 
 @ @ - 168 , 14 + 168 , 14 @ @ 
 < / td > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 < td > David Schneider < / td > 
 < td > 
 < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home Page < / a > 
 < / td > 
 < td > 
 In 2007 was awarded 
 - < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > 
 + < a href = " https : / / eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > 
 Best Open Source Eclipse - based Developer tool 
 < / a > . 
 < / td > 
 @ @ - 201 , 7 + 201 , 7 @ @ 
 < td / > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 < td > Roman Ivanov < / td > 
 < td > 
 < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > 
 @ @ - 344 , 7 + 344 , 7 @ @ 
 < td / > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 < td > Marco van Meegen < / td > 
 < td > 
 < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a >
