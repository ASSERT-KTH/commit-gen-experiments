BLEU SCORE: 0.014199193612838947

TEST MSG: Issue # 2661 : Enforce SingleSpaceSeparatorCheck of sevntu - checkstyle over Checkstyle source code
GENERATED MSG: Fix for typos in Javadoc

TEST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index 08df603 . . d24a831 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 52 , 5 + 52 , 8 @ @ <nl> < property name = " targetConstantTypes " value = " LITERAL _ NULL , LITERAL _ TRUE , LITERAL _ FALSE , NUM _ INT , NUM _ DOUBLE , NUM _ LONG , NUM _ FLOAT " / > <nl> < / module > <nl> < module name = " EitherLogOrThrowCheck " / > <nl> + < module name = " SingleSpaceSeparator " > <nl> + < metadata name = " validateCommentNodes " value = " false " / > <nl> + < / module > <nl> < / module > <nl> < / module > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> index 01879e9 . . 2c46115 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> @ @ - 197 , 7 + 197 , 7 @ @ public abstract class AbstractTypeAwareCheck extends Check { <nl> * / <nl> protected static boolean isSubclass ( Class < ? > child , Class < ? > parent ) { <nl> return parent ! = null & & child ! = null <nl> - & & parent . isAssignableFrom ( child ) ; <nl> + & & parent . isAssignableFrom ( child ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> index fff37eb . . 01fb1f4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java <nl> @ @ - 255 , 7 + 255 , 7 @ @ public class TranslationCheck <nl> boolean missing = false ; <nl> for ( File file : filesInResourceBundle ) { <nl> final String currentFileName = file . getPath ( ) ; <nl> - missing = ! currentFileName . equals ( fileName ) ; <nl> + missing = ! currentFileName . equals ( fileName ) ; <nl> if ( ! missing ) { <nl> break ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java <nl> index d5f6207 . . 02332c0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java <nl> @ @ - 140 , 7 + 140 , 7 @ @ public final class MutableExceptionCheck extends Check { <nl> ast . findFirstToken ( TokenTypes . MODIFIERS ) ; <nl> <nl> if ( modifiersAST . findFirstToken ( TokenTypes . FINAL ) = = null ) { <nl> - log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , <nl> + log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , <nl> ast . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> index 06e6e28 . . 35a484b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> @ @ - 129 , 7 + 129 , 7 @ @ public final class ThrowsCountCheck extends Check { <nl> / / Account for all the commas ! <nl> final int count = ( ast . getChildCount ( ) + 1 ) / 2 ; <nl> if ( count > max ) { <nl> - log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , <nl> + log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , <nl> count , max ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> index 87bb0e3 . . a9ef8a4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> @ @ - 234 , 7 + 234 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> destributed = true ; <nl> } <nl> } <nl> - return destributed ; <nl> + return destributed ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java <nl> index 4b7f97f . . a0bf701 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java <nl> @ @ - 84 , 7 + 84 , 7 @ @ public class ConstantNameCheck <nl> final boolean isStatic = modifiersAST . branchContains ( TokenTypes . LITERAL _ STATIC ) ; <nl> final boolean isFinal = modifiersAST . branchContains ( TokenTypes . FINAL ) ; <nl> <nl> - if ( isStatic & & isFinal & & shouldCheckInScope ( modifiersAST ) <nl> + if ( isStatic & & isFinal & & shouldCheckInScope ( modifiersAST ) <nl> | | ScopeUtils . isInAnnotationBlock ( ast ) <nl> | | ScopeUtils . isInInterfaceOrAnnotationBlock ( ast ) <nl> & & ! ScopeUtils . isInCodeBlock ( ast ) ) {
NEAREST DIFF (one line): diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java <nl> index c48aa8e . . 073540d 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . puppycrawl . tools . checkstyle . coding ; <nl> <nl> - import test . OverloadInput ; <nl> + <nl> <nl> class OverloadInput <nl> {

TEST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index 08df603 . . d24a831 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 52 , 5 + 52 , 8 @ @ 
 < property name = " targetConstantTypes " value = " LITERAL _ NULL , LITERAL _ TRUE , LITERAL _ FALSE , NUM _ INT , NUM _ DOUBLE , NUM _ LONG , NUM _ FLOAT " / > 
 < / module > 
 < module name = " EitherLogOrThrowCheck " / > 
 + < module name = " SingleSpaceSeparator " > 
 + < metadata name = " validateCommentNodes " value = " false " / > 
 + < / module > 
 < / module > 
 < / module > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 index 01879e9 . . 2c46115 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 @ @ - 197 , 7 + 197 , 7 @ @ public abstract class AbstractTypeAwareCheck extends Check { 
 * / 
 protected static boolean isSubclass ( Class < ? > child , Class < ? > parent ) { 
 return parent ! = null & & child ! = null 
 - & & parent . isAssignableFrom ( child ) ; 
 + & & parent . isAssignableFrom ( child ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 index fff37eb . . 01fb1f4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TranslationCheck . java 
 @ @ - 255 , 7 + 255 , 7 @ @ public class TranslationCheck 
 boolean missing = false ; 
 for ( File file : filesInResourceBundle ) { 
 final String currentFileName = file . getPath ( ) ; 
 - missing = ! currentFileName . equals ( fileName ) ; 
 + missing = ! currentFileName . equals ( fileName ) ; 
 if ( ! missing ) { 
 break ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java 
 index d5f6207 . . 02332c0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / MutableExceptionCheck . java 
 @ @ - 140 , 7 + 140 , 7 @ @ public final class MutableExceptionCheck extends Check { 
 ast . findFirstToken ( TokenTypes . MODIFIERS ) ; 
 
 if ( modifiersAST . findFirstToken ( TokenTypes . FINAL ) = = null ) { 
 - log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , 
 + log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , 
 ast . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 index 06e6e28 . . 35a484b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 @ @ - 129 , 7 + 129 , 7 @ @ public final class ThrowsCountCheck extends Check { 
 / / Account for all the commas ! 
 final int count = ( ast . getChildCount ( ) + 1 ) / 2 ; 
 if ( count > max ) { 
 - log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , 
 + log ( ast . getLineNo ( ) , ast . getColumnNo ( ) , MSG _ KEY , 
 count , max ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 index 87bb0e3 . . a9ef8a4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 @ @ - 234 , 7 + 234 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 destributed = true ; 
 } 
 } 
 - return destributed ; 
 + return destributed ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java 
 index 4b7f97f . . a0bf701 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / ConstantNameCheck . java 
 @ @ - 84 , 7 + 84 , 7 @ @ public class ConstantNameCheck 
 final boolean isStatic = modifiersAST . branchContains ( TokenTypes . LITERAL _ STATIC ) ; 
 final boolean isFinal = modifiersAST . branchContains ( TokenTypes . FINAL ) ; 
 
 - if ( isStatic & & isFinal & & shouldCheckInScope ( modifiersAST ) 
 + if ( isStatic & & isFinal & & shouldCheckInScope ( modifiersAST ) 
 | | ScopeUtils . isInAnnotationBlock ( ast ) 
 | | ScopeUtils . isInInterfaceOrAnnotationBlock ( ast ) 
 & & ! ScopeUtils . isInCodeBlock ( ast ) ) {

NEAREST DIFF:
diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java 
 index c48aa8e . . 073540d 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / coding / InputOverloadMethodsDeclarationOrder . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . puppycrawl . tools . checkstyle . coding ; 
 
 - import test . OverloadInput ; 
 + 
 
 class OverloadInput 
 {
