BLEU SCORE: 0.04484347726929453

TEST MSG: Issue # 5750 : aligned javadoc / xdoc for AnnotationLocation
GENERATED MSG: Issue # 3117 : Add ability to differentiate annotation placement in foreach , for loops , parameter definition

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> index 698e9fd . . 888d8ba 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> @ @ - 27 , 123 + 27 , 139 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; <nl> import com . puppycrawl . tools . checkstyle . utils . TokenUtil ; <nl> <nl> / * * <nl> + * < p > <nl> * Check location of annotation on language elements . <nl> * By default , Check enforce to locate annotations immediately after <nl> * documentation block and before target element , annotation should be located <nl> * on separate line from target element . <nl> + * < / p > <nl> * < p > <nl> * Attention : Annotations among modifiers are ignored ( looks like false - negative ) <nl> - * as there might be a problem with annotations for return types . <nl> + * as there might be a problem with annotations for return types : <nl> * < / p > <nl> - * < pre > public @ Nullable Long getStartTimeOrNull ( ) { . . . } < / pre > . <nl> + * < pre > public @ Nullable Long getStartTimeOrNull ( ) { . . . } < / pre > <nl> * < p > <nl> * Such annotations are better to keep close to type . <nl> * Due to limitations , Checkstyle can not examine the target of an annotation . <nl> * < / p > <nl> - * <nl> * < p > <nl> * Example : <nl> * < / p > <nl> - * <nl> * < pre > <nl> * & # 64 ; Override <nl> * & # 64 ; Nullable <nl> * public String getNameIfPresent ( ) { . . . } <nl> * < / pre > <nl> - * <nl> - * < p > <nl> - * The check has the following options : <nl> - * < / p > <nl> * < ul > <nl> - * < li > allowSamelineMultipleAnnotations - to allow annotation to be located on <nl> - * the same line as the target element . Default value is false . <nl> + * < li > <nl> + * Property { @ code allowSamelineMultipleAnnotations } - Allow annotation ( s ) to be located on <nl> + * the same line as target element . <nl> + * Default value is { @ code false } . <nl> * < / li > <nl> - * <nl> * < li > <nl> - * allowSamelineSingleParameterlessAnnotation - to allow single parameterless <nl> - * annotation to be located on the same line as the target element . Default value is false . <nl> + * Property { @ code allowSamelineSingleParameterlessAnnotation } - Allow single parameterless <nl> + * annotation to be located on the same line as target element . <nl> + * Default value is { @ code true } . <nl> + * < / li > <nl> + * < li > <nl> + * Property { @ code allowSamelineParameterizedAnnotation } - Allow one and only parameterized <nl> + * annotation to be located on the same line as target element . <nl> + * Default value is { @ code false } . <nl> * < / li > <nl> - * <nl> * < li > <nl> - * allowSamelineParameterizedAnnotation - to allow parameterized annotation <nl> - * to be located on the same line as the target element . Default value is false . <nl> + * Property { @ code tokens } - tokens to check <nl> + * Default value is : <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > <nl> + * CLASS _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > <nl> + * INTERFACE _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # PACKAGE _ DEF " > <nl> + * PACKAGE _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ CONSTANT _ DEF " > <nl> + * ENUM _ CONSTANT _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > <nl> + * ENUM _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > <nl> + * METHOD _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CTOR _ DEF " > <nl> + * CTOR _ DEF < / a > , <nl> + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > <nl> + * VARIABLE _ DEF < / a > . <nl> * < / li > <nl> * < / ul > <nl> - * < br > <nl> * < p > <nl> - * Example to allow single parameterless annotation on the same line : <nl> + * Example to allow multiple annotations on the same line <nl> * < / p > <nl> * < pre > <nl> - * & # 64 ; Override public int hashCode ( ) { . . . } <nl> + * & # 64 ; SuppressWarnings ( " deprecation " ) & # 64 ; Mock DataLoader loader ; / / no violations <nl> * < / pre > <nl> - * <nl> - * < p > Use the following configuration : <nl> + * < p > <nl> + * Use the following configuration : <nl> + * < / p > <nl> * < pre > <nl> * & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; <nl> - * value = & quot ; true & quot ; / & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; <nl> - * / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; true & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; <nl> + * value = & quot ; false & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> - * < br > <nl> * < p > <nl> - * Example to allow multiple parameterized annotations on the same line : <nl> + * Example to allow one single parameterless annotation on the same line <nl> * < / p > <nl> * < pre > <nl> - * & # 64 ; SuppressWarnings ( " deprecation " ) & # 64 ; Mock DataLoader loader ; <nl> + * & # 64 ; Override public int hashCode ( ) { . . . } / / no violations <nl> + * & # 64 ; SuppressWarnings ( " deprecation " ) public int foo ( ) { . . . } / / violation <nl> * < / pre > <nl> - * <nl> - * < p > Use the following configuration : <nl> + * < p > <nl> + * Use the following configuration : <nl> + * < / p > <nl> * < pre > <nl> * & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; true & quot ; / & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; <nl> - * value = & quot ; true & quot ; / & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; true & quot ; <nl> - * / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; <nl> + * value = & quot ; true & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> - * < br > <nl> * < p > <nl> - * Example to allow multiple parameterless annotations on the same line : <nl> + * Example to allow only one and only parameterized annotation on the same line <nl> * < / p > <nl> * < pre > <nl> - * & # 64 ; Partial & # 64 ; Mock DataLoader loader ; <nl> + * & # 64 ; SuppressWarnings ( " deprecation " ) DataLoader loader ; / / no violations <nl> + * & # 64 ; Mock DataLoader loader ; / / violation <nl> * < / pre > <nl> - * <nl> - * < p > Use the following configuration : <nl> + * < p > <nl> + * Use the following configuration : <nl> + * < / p > <nl> * < pre > <nl> * & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; true & quot ; / & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; <nl> - * value = & quot ; true & quot ; / & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; <nl> - * / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; <nl> + * value = & quot ; false & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; true & quot ; / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> - * < br > <nl> * < p > <nl> - * The following example demonstrates how the check validates annotation of method parameters , <nl> + * The following example demonstrates how the check validates annotations of method parameters , <nl> * catch parameters , foreach , for - loop variable definitions . <nl> * < / p > <nl> - * <nl> - * < p > Configuration : <nl> + * < p > <nl> + * Configuration : <nl> + * < / p > <nl> * < pre > <nl> * & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; <nl> - * value = & quot ; false & quot ; / & gt ; <nl> - * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; <nl> - * / & gt ; <nl> - * & lt ; property name = & quot ; tokens & quot ; value = & quot ; VARIABLE _ DEF , PARAMETER _ DEF & quot ; / & gt ; <nl> - * & lt ; / module & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; <nl> + * value = & quot ; false & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; / & gt ; <nl> + * & lt ; property name = & quot ; tokens & quot ; value = & quot ; VARIABLE _ DEF , PARAMETER _ DEF & quot ; / & gt ; <nl> + * & lt ; / module & gt ; <nl> * < / pre > <nl> - * <nl> - * < p > Code example <nl> - * { @ code <nl> - * . . . <nl> + * < p > <nl> + * Code example : <nl> + * < / p > <nl> + * < pre > <nl> * public void test ( & # 64 ; MyAnnotation String s ) { / / OK <nl> * . . . <nl> * for ( & # 64 ; MyAnnotation char c : s . toCharArray ( ) ) { . . . } / / OK <nl> @ @ - 156 , 8 + 172 , 9 @ @ import com . puppycrawl . tools . checkstyle . utils . TokenUtil ; <nl> * MathOperation c = ( & # 64 ; MyAnnotation int a , & # 64 ; MyAnnotation int b ) - & gt ; a + b ; / / OK <nl> * . . . <nl> * } <nl> - * } <nl> + * < / pre > <nl> * <nl> + * @ since 6 . 0 <nl> * / <nl> @ StatelessCheck <nl> public class AnnotationLocationCheck extends AbstractCheck { <nl> @ @ - 180 , 25 + 197 , 26 @ @ public class AnnotationLocationCheck extends AbstractCheck { <nl> TokenTypes . FOR _ INIT , } ; <nl> <nl> / * * <nl> - * If true , it allows single prameterless annotation to be located on the same line as <nl> + * Allow single parameterless annotation to be located on the same line as <nl> * target element . <nl> * / <nl> private boolean allowSamelineSingleParameterlessAnnotation = true ; <nl> <nl> / * * <nl> - * If true , it allows parameterized annotation to be located on the same line as <nl> + * Allow one and only parameterized annotation to be located on the same line as <nl> * target element . <nl> * / <nl> private boolean allowSamelineParameterizedAnnotation ; <nl> <nl> / * * <nl> - * If true , it allows annotation to be located on the same line as <nl> + * Allow annotation ( s ) to be located on the same line as <nl> * target element . <nl> * / <nl> private boolean allowSamelineMultipleAnnotations ; <nl> <nl> / * * <nl> - * Sets if allow same line single parameterless annotation . <nl> + * Setter to allow single parameterless annotation to be located on the same line as <nl> + * target element . <nl> * @ param allow User ' s value of allowSamelineSingleParameterlessAnnotation . <nl> * / <nl> public final void setAllowSamelineSingleParameterlessAnnotation ( boolean allow ) { <nl> @ @ - 206 , 7 + 224 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * Sets if allow parameterized annotation to be located on the same line as <nl> + * Setter to allow one and only parameterized annotation to be located on the same line as <nl> * target element . <nl> * @ param allow User ' s value of allowSamelineParameterizedAnnotation . <nl> * / <nl> @ @ - 215 , 7 + 233 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * Sets if allow annotation to be located on the same line as <nl> + * Setter to allow annotation ( s ) to be located on the same line as <nl> * target element . <nl> * @ param allow User ' s value of allowSamelineMultipleAnnotations . <nl> * / <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> index 63b64d2 . . 132b291 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java <nl> @ @ - 70 , 6 + 70 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { <nl> private static final String [ ] COMPATIBLE _ CHECKS = { <nl> " AbbreviationAsWordInName " , <nl> " AbstractClassName " , <nl> + " AnnotationLocation " , <nl> " AtclauseOrder " , <nl> " CatchParameterName " , <nl> " ClassMemberImpliedModifier " , <nl> diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml <nl> index de2ce32 . . abc4836 100644 <nl> - - - a / src / xdocs / config _ annotation . xml <nl> + + + b / src / xdocs / config _ annotation . xml <nl> @ @ - 23 , 8 + 23 , 8 @ @ <nl> < / section > <nl> <nl> < section name = " AnnotationLocation " > <nl> + < p > Since Checkstyle 6 . 0 < / p > <nl> < subsection name = " Description " id = " AnnotationLocation _ Description " > <nl> - < p > Since Checkstyle 6 . 0 < / p > <nl> < p > <nl> Check location of annotation on language elements . <nl> By default , Check enforce to locate annotations immediately after documentation block <nl> @ @ - 33 , 10 + 33 , 12 @ @ <nl> < / p > <nl> < p > <nl> Attention : Annotations among modifiers are ignored ( looks like false - negative ) <nl> - as there might be a problem with annotations for return types <nl> - < source > public @ Nullable Long getStartTimeOrNull ( ) { . . . } < / source > <nl> + as there might be a problem with annotations for return types : <nl> + < / p > <nl> + < source > public @ Nullable Long getStartTimeOrNull ( ) { . . . } < / source > <nl> + < p > <nl> Such annotations are better to keep close to type . <nl> - Due to limitations Checkstyle can not examine target of annotation . <nl> + Due to limitations , Checkstyle can not examine the target of an annotation . <nl> < / p > <nl> < p > <nl> Example : <nl> @ @ - 59 , 14 + 61 , 14 @ @ public String getNameIfPresent ( ) { . . . } <nl> < / tr > <nl> < tr > <nl> < td > allowSamelineMultipleAnnotations < / td > <nl> - < td > To allow annotation ( s ) to be located on the same line as target element . < / td > <nl> + < td > Allow annotation ( s ) to be located on the same line as target element . < / td > <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> < td > < code > false < / code > < / td > <nl> < td > 6 . 0 < / td > <nl> < / tr > <nl> < tr > <nl> < td > allowSamelineSingleParameterlessAnnotation < / td > <nl> - < td > To allow single parameterless annotation to be located on the same line as <nl> + < td > Allow single parameterless annotation to be located on the same line as <nl> target element . < / td > <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> < td > < code > true < / code > < / td > <nl> @ @ - 74 , 7 + 76 , 7 @ @ public String getNameIfPresent ( ) { . . . } <nl> < / tr > <nl> < tr > <nl> < td > allowSamelineParameterizedAnnotation < / td > <nl> - < td > To allow one and only parameterized annotation to be located on the same line as <nl> + < td > Allow one and only parameterized annotation to be located on the same line as <nl> target element . < / td > <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> < td > < code > false < / code > < / td > <nl> @ @ - 140 , 7 + 142 , 7 @ @ public String getNameIfPresent ( ) { . . . } <nl> @ SuppressWarnings ( " deprecation " ) @ Mock DataLoader loader ; / / no violations <nl> < / source > <nl> < p > <nl> - Use following configuration : <nl> + Use the following configuration : <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; <nl> @ @ - 158 , 7 + 160 , 7 @ @ public String getNameIfPresent ( ) { . . . } <nl> @ SuppressWarnings ( " deprecation " ) public int foo ( ) { . . . } / / violation <nl> < / source > <nl> < p > <nl> - Use following configuration : <nl> + Use the following configuration : <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; <nl> @ @ - 176 , 7 + 178 , 7 @ @ public String getNameIfPresent ( ) { . . . } <nl> @ Mock DataLoader loader ; / / violation <nl> < / source > <nl> < p > <nl> - Use following configuration : <nl> + Use the following configuration : <nl> < / p > <nl> < source > <nl> & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ;
NEAREST DIFF (one line): diff - - git a / release . sh b / release . sh <nl> index ff03fe8 . . 5aab303 100755 <nl> - - - a / release . sh <nl> + + + b / release . sh <nl> @ @ - 1 , 14 + 1 , 15 @ @ <nl> # ! / usr / bin / bash <nl> set - e <nl> <nl> + # Make sure you prepared your PC for automative deployment <nl> # https : / / github . com / checkstyle / checkstyle / wiki / How - to - make - a - release <nl> <nl> SF _ USER = romanivanov <nl> - RELEASE = 6 . 19 <nl> + RELEASE = $ ( xmlstarlet sel - N pom = http : / / maven . apache . org / POM / 4 . 0 . 0 - t - m pom : project - v pom : version pom . xml | sed " s / - SNAPSHOT / / " ) <nl> PREV _ RELEASE = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) | sed " s / checkstyle - / / " ) <nl> <nl> - echo " PREVIOUS RELESE version : " $ PREV _ RELEASE <nl> - echo " RELESE version : " $ RELEASE <nl> + echo " PREVIOUS RELEASE version : " $ PREV _ RELEASE <nl> + echo " RELEASE version : " $ RELEASE <nl> <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> echo " Please provide password for $ SF _ USER , checkstyle @ shell . sourceforge . net "

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 index 698e9fd . . 888d8ba 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 @ @ - 27 , 123 + 27 , 139 @ @ import com . puppycrawl . tools . checkstyle . utils . CommonUtil ; 
 import com . puppycrawl . tools . checkstyle . utils . TokenUtil ; 
 
 / * * 
 + * < p > 
 * Check location of annotation on language elements . 
 * By default , Check enforce to locate annotations immediately after 
 * documentation block and before target element , annotation should be located 
 * on separate line from target element . 
 + * < / p > 
 * < p > 
 * Attention : Annotations among modifiers are ignored ( looks like false - negative ) 
 - * as there might be a problem with annotations for return types . 
 + * as there might be a problem with annotations for return types : 
 * < / p > 
 - * < pre > public @ Nullable Long getStartTimeOrNull ( ) { . . . } < / pre > . 
 + * < pre > public @ Nullable Long getStartTimeOrNull ( ) { . . . } < / pre > 
 * < p > 
 * Such annotations are better to keep close to type . 
 * Due to limitations , Checkstyle can not examine the target of an annotation . 
 * < / p > 
 - * 
 * < p > 
 * Example : 
 * < / p > 
 - * 
 * < pre > 
 * & # 64 ; Override 
 * & # 64 ; Nullable 
 * public String getNameIfPresent ( ) { . . . } 
 * < / pre > 
 - * 
 - * < p > 
 - * The check has the following options : 
 - * < / p > 
 * < ul > 
 - * < li > allowSamelineMultipleAnnotations - to allow annotation to be located on 
 - * the same line as the target element . Default value is false . 
 + * < li > 
 + * Property { @ code allowSamelineMultipleAnnotations } - Allow annotation ( s ) to be located on 
 + * the same line as target element . 
 + * Default value is { @ code false } . 
 * < / li > 
 - * 
 * < li > 
 - * allowSamelineSingleParameterlessAnnotation - to allow single parameterless 
 - * annotation to be located on the same line as the target element . Default value is false . 
 + * Property { @ code allowSamelineSingleParameterlessAnnotation } - Allow single parameterless 
 + * annotation to be located on the same line as target element . 
 + * Default value is { @ code true } . 
 + * < / li > 
 + * < li > 
 + * Property { @ code allowSamelineParameterizedAnnotation } - Allow one and only parameterized 
 + * annotation to be located on the same line as target element . 
 + * Default value is { @ code false } . 
 * < / li > 
 - * 
 * < li > 
 - * allowSamelineParameterizedAnnotation - to allow parameterized annotation 
 - * to be located on the same line as the target element . Default value is false . 
 + * Property { @ code tokens } - tokens to check 
 + * Default value is : 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CLASS _ DEF " > 
 + * CLASS _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # INTERFACE _ DEF " > 
 + * INTERFACE _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # PACKAGE _ DEF " > 
 + * PACKAGE _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ CONSTANT _ DEF " > 
 + * ENUM _ CONSTANT _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # ENUM _ DEF " > 
 + * ENUM _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # METHOD _ DEF " > 
 + * METHOD _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # CTOR _ DEF " > 
 + * CTOR _ DEF < / a > , 
 + * < a href = " https : / / checkstyle . org / apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > 
 + * VARIABLE _ DEF < / a > . 
 * < / li > 
 * < / ul > 
 - * < br > 
 * < p > 
 - * Example to allow single parameterless annotation on the same line : 
 + * Example to allow multiple annotations on the same line 
 * < / p > 
 * < pre > 
 - * & # 64 ; Override public int hashCode ( ) { . . . } 
 + * & # 64 ; SuppressWarnings ( " deprecation " ) & # 64 ; Mock DataLoader loader ; / / no violations 
 * < / pre > 
 - * 
 - * < p > Use the following configuration : 
 + * < p > 
 + * Use the following configuration : 
 + * < / p > 
 * < pre > 
 * & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; 
 - * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; 
 - * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; 
 - * value = & quot ; true & quot ; / & gt ; 
 - * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; 
 - * / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; true & quot ; / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; 
 + * value = & quot ; false & quot ; / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 - * < br > 
 * < p > 
 - * Example to allow multiple parameterized annotations on the same line : 
 + * Example to allow one single parameterless annotation on the same line 
 * < / p > 
 * < pre > 
 - * & # 64 ; SuppressWarnings ( " deprecation " ) & # 64 ; Mock DataLoader loader ; 
 + * & # 64 ; Override public int hashCode ( ) { . . . } / / no violations 
 + * & # 64 ; SuppressWarnings ( " deprecation " ) public int foo ( ) { . . . } / / violation 
 * < / pre > 
 - * 
 - * < p > Use the following configuration : 
 + * < p > 
 + * Use the following configuration : 
 + * < / p > 
 * < pre > 
 * & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; 
 - * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; true & quot ; / & gt ; 
 - * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; 
 - * value = & quot ; true & quot ; / & gt ; 
 - * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; true & quot ; 
 - * / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; 
 + * value = & quot ; true & quot ; / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 - * < br > 
 * < p > 
 - * Example to allow multiple parameterless annotations on the same line : 
 + * Example to allow only one and only parameterized annotation on the same line 
 * < / p > 
 * < pre > 
 - * & # 64 ; Partial & # 64 ; Mock DataLoader loader ; 
 + * & # 64 ; SuppressWarnings ( " deprecation " ) DataLoader loader ; / / no violations 
 + * & # 64 ; Mock DataLoader loader ; / / violation 
 * < / pre > 
 - * 
 - * < p > Use the following configuration : 
 + * < p > 
 + * Use the following configuration : 
 + * < / p > 
 * < pre > 
 * & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; 
 - * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; true & quot ; / & gt ; 
 - * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; 
 - * value = & quot ; true & quot ; / & gt ; 
 - * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; 
 - * / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; 
 + * value = & quot ; false & quot ; / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; true & quot ; / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 - * < br > 
 * < p > 
 - * The following example demonstrates how the check validates annotation of method parameters , 
 + * The following example demonstrates how the check validates annotations of method parameters , 
 * catch parameters , foreach , for - loop variable definitions . 
 * < / p > 
 - * 
 - * < p > Configuration : 
 + * < p > 
 + * Configuration : 
 + * < / p > 
 * < pre > 
 * & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; 
 - * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; 
 - * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; 
 - * value = & quot ; false & quot ; / & gt ; 
 - * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; 
 - * / & gt ; 
 - * & lt ; property name = & quot ; tokens & quot ; value = & quot ; VARIABLE _ DEF , PARAMETER _ DEF & quot ; / & gt ; 
 - * & lt ; / module & gt ; 
 + * & lt ; property name = & quot ; allowSamelineMultipleAnnotations & quot ; value = & quot ; false & quot ; / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineSingleParameterlessAnnotation & quot ; 
 + * value = & quot ; false & quot ; / & gt ; 
 + * & lt ; property name = & quot ; allowSamelineParameterizedAnnotation & quot ; value = & quot ; false & quot ; / & gt ; 
 + * & lt ; property name = & quot ; tokens & quot ; value = & quot ; VARIABLE _ DEF , PARAMETER _ DEF & quot ; / & gt ; 
 + * & lt ; / module & gt ; 
 * < / pre > 
 - * 
 - * < p > Code example 
 - * { @ code 
 - * . . . 
 + * < p > 
 + * Code example : 
 + * < / p > 
 + * < pre > 
 * public void test ( & # 64 ; MyAnnotation String s ) { / / OK 
 * . . . 
 * for ( & # 64 ; MyAnnotation char c : s . toCharArray ( ) ) { . . . } / / OK 
 @ @ - 156 , 8 + 172 , 9 @ @ import com . puppycrawl . tools . checkstyle . utils . TokenUtil ; 
 * MathOperation c = ( & # 64 ; MyAnnotation int a , & # 64 ; MyAnnotation int b ) - & gt ; a + b ; / / OK 
 * . . . 
 * } 
 - * } 
 + * < / pre > 
 * 
 + * @ since 6 . 0 
 * / 
 @ StatelessCheck 
 public class AnnotationLocationCheck extends AbstractCheck { 
 @ @ - 180 , 25 + 197 , 26 @ @ public class AnnotationLocationCheck extends AbstractCheck { 
 TokenTypes . FOR _ INIT , } ; 
 
 / * * 
 - * If true , it allows single prameterless annotation to be located on the same line as 
 + * Allow single parameterless annotation to be located on the same line as 
 * target element . 
 * / 
 private boolean allowSamelineSingleParameterlessAnnotation = true ; 
 
 / * * 
 - * If true , it allows parameterized annotation to be located on the same line as 
 + * Allow one and only parameterized annotation to be located on the same line as 
 * target element . 
 * / 
 private boolean allowSamelineParameterizedAnnotation ; 
 
 / * * 
 - * If true , it allows annotation to be located on the same line as 
 + * Allow annotation ( s ) to be located on the same line as 
 * target element . 
 * / 
 private boolean allowSamelineMultipleAnnotations ; 
 
 / * * 
 - * Sets if allow same line single parameterless annotation . 
 + * Setter to allow single parameterless annotation to be located on the same line as 
 + * target element . 
 * @ param allow User ' s value of allowSamelineSingleParameterlessAnnotation . 
 * / 
 public final void setAllowSamelineSingleParameterlessAnnotation ( boolean allow ) { 
 @ @ - 206 , 7 + 224 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * Sets if allow parameterized annotation to be located on the same line as 
 + * Setter to allow one and only parameterized annotation to be located on the same line as 
 * target element . 
 * @ param allow User ' s value of allowSamelineParameterizedAnnotation . 
 * / 
 @ @ - 215 , 7 + 233 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * Sets if allow annotation to be located on the same line as 
 + * Setter to allow annotation ( s ) to be located on the same line as 
 * target element . 
 * @ param allow User ' s value of allowSamelineMultipleAnnotations . 
 * / 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 index 63b64d2 . . 132b291 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XdocsJavaDocsTest . java 
 @ @ - 70 , 6 + 70 , 7 @ @ public class XdocsJavaDocsTest extends AbstractModuleTestSupport { 
 private static final String [ ] COMPATIBLE _ CHECKS = { 
 " AbbreviationAsWordInName " , 
 " AbstractClassName " , 
 + " AnnotationLocation " , 
 " AtclauseOrder " , 
 " CatchParameterName " , 
 " ClassMemberImpliedModifier " , 
 diff - - git a / src / xdocs / config _ annotation . xml b / src / xdocs / config _ annotation . xml 
 index de2ce32 . . abc4836 100644 
 - - - a / src / xdocs / config _ annotation . xml 
 + + + b / src / xdocs / config _ annotation . xml 
 @ @ - 23 , 8 + 23 , 8 @ @ 
 < / section > 
 
 < section name = " AnnotationLocation " > 
 + < p > Since Checkstyle 6 . 0 < / p > 
 < subsection name = " Description " id = " AnnotationLocation _ Description " > 
 - < p > Since Checkstyle 6 . 0 < / p > 
 < p > 
 Check location of annotation on language elements . 
 By default , Check enforce to locate annotations immediately after documentation block 
 @ @ - 33 , 10 + 33 , 12 @ @ 
 < / p > 
 < p > 
 Attention : Annotations among modifiers are ignored ( looks like false - negative ) 
 - as there might be a problem with annotations for return types 
 - < source > public @ Nullable Long getStartTimeOrNull ( ) { . . . } < / source > 
 + as there might be a problem with annotations for return types : 
 + < / p > 
 + < source > public @ Nullable Long getStartTimeOrNull ( ) { . . . } < / source > 
 + < p > 
 Such annotations are better to keep close to type . 
 - Due to limitations Checkstyle can not examine target of annotation . 
 + Due to limitations , Checkstyle can not examine the target of an annotation . 
 < / p > 
 < p > 
 Example : 
 @ @ - 59 , 14 + 61 , 14 @ @ public String getNameIfPresent ( ) { . . . } 
 < / tr > 
 < tr > 
 < td > allowSamelineMultipleAnnotations < / td > 
 - < td > To allow annotation ( s ) to be located on the same line as target element . < / td > 
 + < td > Allow annotation ( s ) to be located on the same line as target element . < / td > 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 < td > < code > false < / code > < / td > 
 < td > 6 . 0 < / td > 
 < / tr > 
 < tr > 
 < td > allowSamelineSingleParameterlessAnnotation < / td > 
 - < td > To allow single parameterless annotation to be located on the same line as 
 + < td > Allow single parameterless annotation to be located on the same line as 
 target element . < / td > 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 < td > < code > true < / code > < / td > 
 @ @ - 74 , 7 + 76 , 7 @ @ public String getNameIfPresent ( ) { . . . } 
 < / tr > 
 < tr > 
 < td > allowSamelineParameterizedAnnotation < / td > 
 - < td > To allow one and only parameterized annotation to be located on the same line as 
 + < td > Allow one and only parameterized annotation to be located on the same line as 
 target element . < / td > 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 < td > < code > false < / code > < / td > 
 @ @ - 140 , 7 + 142 , 7 @ @ public String getNameIfPresent ( ) { . . . } 
 @ SuppressWarnings ( " deprecation " ) @ Mock DataLoader loader ; / / no violations 
 < / source > 
 < p > 
 - Use following configuration : 
 + Use the following configuration : 
 < / p > 
 < source > 
 & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; 
 @ @ - 158 , 7 + 160 , 7 @ @ public String getNameIfPresent ( ) { . . . } 
 @ SuppressWarnings ( " deprecation " ) public int foo ( ) { . . . } / / violation 
 < / source > 
 < p > 
 - Use following configuration : 
 + Use the following configuration : 
 < / p > 
 < source > 
 & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ; 
 @ @ - 176 , 7 + 178 , 7 @ @ public String getNameIfPresent ( ) { . . . } 
 @ Mock DataLoader loader ; / / violation 
 < / source > 
 < p > 
 - Use following configuration : 
 + Use the following configuration : 
 < / p > 
 < source > 
 & lt ; module name = & quot ; AnnotationLocation & quot ; & gt ;

NEAREST DIFF:
diff - - git a / release . sh b / release . sh 
 index ff03fe8 . . 5aab303 100755 
 - - - a / release . sh 
 + + + b / release . sh 
 @ @ - 1 , 14 + 1 , 15 @ @ 
 # ! / usr / bin / bash 
 set - e 
 
 + # Make sure you prepared your PC for automative deployment 
 # https : / / github . com / checkstyle / checkstyle / wiki / How - to - make - a - release 
 
 SF _ USER = romanivanov 
 - RELEASE = 6 . 19 
 + RELEASE = $ ( xmlstarlet sel - N pom = http : / / maven . apache . org / POM / 4 . 0 . 0 - t - m pom : project - v pom : version pom . xml | sed " s / - SNAPSHOT / / " ) 
 PREV _ RELEASE = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) | sed " s / checkstyle - / / " ) 
 
 - echo " PREVIOUS RELESE version : " $ PREV _ RELEASE 
 - echo " RELESE version : " $ RELEASE 
 + echo " PREVIOUS RELEASE version : " $ PREV _ RELEASE 
 + echo " RELEASE version : " $ RELEASE 
 
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 echo " Please provide password for $ SF _ USER , checkstyle @ shell . sourceforge . net "
