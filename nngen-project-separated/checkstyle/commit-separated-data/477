BLEU SCORE: 0.04767707020457096

TEST MSG: Issue # 4169 : Javadoc on annotation fields support
GENERATED MSG: extention for SingleJavadocLine , # 1063

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java <nl> index f35404e . . 5d49342 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java <nl> @ @ - 36 , 6 + 36 , 18 @ @ public final class BlockCommentPosition { <nl> } <nl> <nl> / * * <nl> + * Node is on type definition . <nl> + * @ param blockComment DetailAST <nl> + * @ return true if node is before class , interface , enum or annotation . <nl> + * / <nl> + public static boolean isOnType ( DetailAST blockComment ) { <nl> + return isOnClass ( blockComment ) <nl> + | | isOnInterface ( blockComment ) <nl> + | | isOnEnum ( blockComment ) <nl> + | | isOnAnnotationDef ( blockComment ) ; <nl> + } <nl> + <nl> + / * * <nl> * Node is on class definition . <nl> * @ param blockComment DetailAST <nl> * @ return true if node is before class <nl> @ @ - 80 , 6 + 92 , 20 @ @ public final class BlockCommentPosition { <nl> } <nl> <nl> / * * <nl> + * Node is on type member declaration . <nl> + * @ param blockComment DetailAST <nl> + * @ return true if node is before method , field , constructor , enum constant <nl> + * or annotation field <nl> + * / <nl> + public static boolean isOnMember ( DetailAST blockComment ) { <nl> + return isOnMethod ( blockComment ) <nl> + | | isOnField ( blockComment ) <nl> + | | isOnConstructor ( blockComment ) <nl> + | | isOnEnumConstant ( blockComment ) <nl> + | | isOnAnnotationField ( blockComment ) ; <nl> + } <nl> + <nl> + / * * <nl> * Node is on method declaration . <nl> * @ param blockComment DetailAST <nl> * @ return true if node is before method <nl> @ @ - 130 , 6 + 156 , 17 @ @ public final class BlockCommentPosition { <nl> } <nl> <nl> / * * <nl> + * Node is on annotation field declaration . <nl> + * @ param blockComment DetailAST <nl> + * @ return true if node is before annotation field <nl> + * / <nl> + public static boolean isOnAnnotationField ( DetailAST blockComment ) { <nl> + return isOnPlainClassMember ( blockComment , TokenTypes . ANNOTATION _ FIELD _ DEF ) <nl> + | | isOnTokenWithModifiers ( blockComment , TokenTypes . ANNOTATION _ FIELD _ DEF ) <nl> + | | isOnTokenWithAnnotation ( blockComment , TokenTypes . ANNOTATION _ FIELD _ DEF ) ; <nl> + } <nl> + <nl> + / * * <nl> * Checks that block comment is on specified token without any modifiers . <nl> * @ param blockComment block comment start DetailAST <nl> * @ param parentTokenType parent token type <nl> @ @ - 179 , 11 + 216 , 16 @ @ public final class BlockCommentPosition { <nl> * @ return true if block comment is on specified token without modifiers <nl> * / <nl> private static boolean isOnPlainClassMember ( DetailAST blockComment , int memberType ) { <nl> - return blockComment . getParent ( ) ! = null <nl> - & & blockComment . getParent ( ) . getType ( ) = = TokenTypes . TYPE <nl> - & & blockComment . getParent ( ) . getParent ( ) . getType ( ) = = memberType <nl> + DetailAST parent = blockComment . getParent ( ) ; <nl> + / / type could be in fully qualified form , so we go up to Type token <nl> + while ( parent ! = null & & parent . getType ( ) = = TokenTypes . DOT ) { <nl> + parent = parent . getParent ( ) ; <nl> + } <nl> + return parent ! = null <nl> + & & parent . getType ( ) = = TokenTypes . TYPE <nl> + & & parent . getParent ( ) . getType ( ) = = memberType <nl> / / previous parent sibling is always TokenTypes . MODIFIERS <nl> - & & blockComment . getParent ( ) . getPreviousSibling ( ) . getChildCount ( ) = = 0 ; <nl> + & & parent . getPreviousSibling ( ) . getChildCount ( ) = = 0 ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> index b744167 . . 782f1ef 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> @ @ - 30 , 6 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailNode ; <nl> import com . puppycrawl . tools . checkstyle . api . JavadocTokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . api . TextBlock ; <nl> + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . checks . javadoc . InvalidJavadocTag ; <nl> import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTag ; <nl> import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTagInfo ; <nl> @ @ - 400 , 24 + 401 , 40 @ @ public final class JavadocUtils { <nl> <nl> / * * <nl> * Checks Javadoc comment it ' s in right place . <nl> - * From Javadoc util documentation : <nl> + * < p > From Javadoc util documentation : <nl> * " Placement of comments - Documentation comments are recognized only when placed <nl> - * immediately before class , interface , constructor , method , or field <nl> + * immediately before class , interface , constructor , method , field or annotation field <nl> * declarations - - see the class example , method example , and field example . <nl> - * Documentation comments placed in the body of a method are ignored . Only one <nl> - * documentation comment per declaration statement is recognized by the Javadoc tool . " <nl> + * Documentation comments placed in the body of a method are ignored . " < / p > <nl> + * < p > If there are many documentation comments per declaration statement , <nl> + * only the last one will be recognized . < / p > <nl> * <nl> * @ param blockComment Block comment AST <nl> * @ return true if Javadoc is in right place <nl> + * @ see < a href = " https : / / docs . oracle . com / javase / 8 / docs / technotes / tools / unix / javadoc . html " > <nl> + * Javadoc util documentation < / a > <nl> * / <nl> private static boolean isCorrectJavadocPosition ( DetailAST blockComment ) { <nl> - return BlockCommentPosition . isOnClass ( blockComment ) <nl> - | | BlockCommentPosition . isOnInterface ( blockComment ) <nl> - | | BlockCommentPosition . isOnEnum ( blockComment ) <nl> - | | BlockCommentPosition . isOnMethod ( blockComment ) <nl> - | | BlockCommentPosition . isOnField ( blockComment ) <nl> - | | BlockCommentPosition . isOnConstructor ( blockComment ) <nl> - | | BlockCommentPosition . isOnEnumConstant ( blockComment ) <nl> - | | BlockCommentPosition . isOnAnnotationDef ( blockComment ) ; <nl> + / / We must be sure that after this one there are no other documentation comments . <nl> + DetailAST sibling = blockComment . getNextSibling ( ) ; <nl> + while ( sibling ! = null ) { <nl> + if ( sibling . getType ( ) = = TokenTypes . BLOCK _ COMMENT _ BEGIN ) { <nl> + if ( isJavadocComment ( getBlockCommentContent ( sibling ) ) ) { <nl> + / / Found another javadoc comment , so this one should be ignored . <nl> + break ; <nl> + } <nl> + sibling = sibling . getNextSibling ( ) ; <nl> + } <nl> + else if ( sibling . getType ( ) = = TokenTypes . SINGLE _ LINE _ COMMENT ) { <nl> + sibling = sibling . getNextSibling ( ) ; <nl> + } <nl> + else { <nl> + / / Annotation , declaration or modifier is here . Do not check further . <nl> + sibling = null ; <nl> + } <nl> + } <nl> + return sibling = = null <nl> + & & ( BlockCommentPosition . isOnType ( blockComment ) <nl> + | | BlockCommentPosition . isOnMember ( blockComment ) ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> index 2873e03 . . 0123980 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> @ @ - 47 , 6 + 47 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . JavadocTokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . internal . utils . TestUtil ; <nl> import com . puppycrawl . tools . checkstyle . utils . BlockCommentPosition ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> + import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; <nl> <nl> public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { <nl> <nl> @ @ - 180 , 7 + 181 , 7 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { <nl> final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , getPath ( " InputAbstractJavadocPosition . java " ) , expected ) ; <nl> assertEquals ( " Invalid number of javadocs " , <nl> - 58 , JavadocCatchCheck . javadocsNumber ) ; <nl> + 65 , JavadocCatchCheck . javadocsNumber ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 192 , 7 + 193 , 7 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { <nl> verify ( checkConfig , <nl> getPath ( " InputAbstractJavadocPositionWithSinglelineComments . java " ) , expected ) ; <nl> assertEquals ( " Invalid number of javadocs " , <nl> - 58 , JavadocCatchCheck . javadocsNumber ) ; <nl> + 65 , JavadocCatchCheck . javadocsNumber ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 485 , 6 + 486 , 9 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { <nl> @ Override <nl> public void visitJavadocToken ( DetailNode ast ) { <nl> assertEquals ( ast . toString ( ) , " JAVADOC " , ast . getText ( ) ) ; <nl> + final DetailNode text = JavadocUtils . findFirstToken ( ast , JavadocTokenTypes . TEXT ) ; <nl> + Assert . assertNotNull ( " Empty javadoc text at " + ast , text ) ; <nl> + assertEquals ( ast . toString ( ) , " Javadoc " , text . getText ( ) ) ; <nl> javadocsNumber + + ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java <nl> index 0c8df79 . . dfc1c9d 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java <nl> @ @ - 41 , 7 + 41 , 7 @ @ public class BlockCommentPositionTest extends AbstractPathTestSupport { <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnClass . java " , <nl> BlockCommentPosition : : isOnClass , 3 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnMethod . java " , <nl> - BlockCommentPosition : : isOnMethod , 3 ) , <nl> + BlockCommentPosition : : isOnMethod , 4 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnField . java " , <nl> BlockCommentPosition : : isOnField , 3 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnEnum . java " , <nl> @ @ - 53 , 7 + 53 , 10 @ @ public class BlockCommentPositionTest extends AbstractPathTestSupport { <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnAnnotation . java " , <nl> BlockCommentPosition : : isOnAnnotationDef , 3 ) , <nl> new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnEnumMember . java " , <nl> - BlockCommentPosition : : isOnEnumConstant , 2 ) <nl> + BlockCommentPosition : : isOnEnumConstant , 2 ) , <nl> + new BlockCommentPositionTestMetadata ( <nl> + " InputBlockCommentPositionOnAnnotationField . java " , <nl> + BlockCommentPosition : : isOnAnnotationField , 4 ) <nl> ) ; <nl> <nl> for ( BlockCommentPositionTestMetadata metadata : metadataList ) { <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPosition . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPosition . java <nl> index c83a607 . . 258c511 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPosition . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPosition . java <nl> @ @ - 95 , 6 + 95 , 11 @ @ class GGG { <nl> 	 void / * * nope * / a / * * nope * / ( @ Component / * * nope * / int / * * nope * / a / * * nope * / ) / * * nope * / { / * * nope * / } / * * nope * / <nl> } <nl> <nl> + class HHH { <nl> + 	 / * * Javadoc * / <nl> + 	 java . lang . String / * * nope * / a / * * nope * / ( ) / * * nope * / { / * * nope * / return null ; / * * nope * / } / * * nope * / <nl> + } <nl> + <nl> / / / / / / / / / / / / / / / / <nl> / / INTERFACES / / <nl> / / / / / / / / / / / / / / / / <nl> @ @ - 229 , 7 + 234 , 14 @ @ enum CCCCCCC { <nl> } <nl> <nl> / * * Javadoc * / <nl> - @ interface / * * nope * / MyAnnotation / * * nope * / { / * * nope * / <nl> + @ interface / * * nope * / MyAnnotation / * * nope * / { <nl> + 	 / * * Javadoc * / <nl> + 	 @ Component / * * nope * / abstract / * * nope * / String / * * nope * / val1 ( ) / * * nope * / default / * * nope * / " " ; <nl> + 	 / * * Javadoc * / <nl> + 	 abstract / * * nope * / String / * * nope * / val2 ( ) / * * nope * / ; <nl> + 	 / * * Javadoc * / <nl> + 	 java . lang . String / * * nope * / val3 ( ) / * * nope * / ; <nl> + 	 / * * nope * / <nl> } <nl> <nl> class MyTemp1 { <nl> @ @ - 239 , 3 + 251 , 28 @ @ class MyTemp1 { <nl> } <nl> <nl> / * * nope * / <nl> + / * noise * / <nl> + / * * nope * / <nl> + / * * Javadoc * / <nl> + / / noise <nl> + @ Component <nl> + / * noise * / <nl> + interface MultipleJavadoc { <nl> + 	 / * * nope * / <nl> + 	 / * noise * / <nl> + 	 / * * nope * / <nl> + 	 / * * Javadoc * / <nl> + 	 / * noise * / <nl> + 	 public / * * nope * / int method ( ) ; <nl> + 	 / * * nope * / <nl> + 	 / * noise * / <nl> + 	 / * * nope * / <nl> + 	 / * * Javadoc * / <nl> + 	 / / noise <nl> + 	 @ Deprecated <nl> + 	 / / noise <nl> + 	 / * * nope * / <nl> + 	 public / * * nope * / void method2 ( ) ; <nl> + } <nl> + <nl> + / * * nope * / <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPositionWithSinglelineComments . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPositionWithSinglelineComments . java <nl> index c95e470 . . 3f320c1 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPositionWithSinglelineComments . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPositionWithSinglelineComments . java <nl> @ @ - 95 , 6 + 95 , 11 @ @ class LKJ { <nl> 	 void / * * nope * / a / * * nope * / ( @ Component2 / * * nope * / int / * * nope * / a / * * nope * / ) / * * nope * / { / * * nope * / } / * * nope * / <nl> } <nl> <nl> + class LKM { <nl> + 	 / * * Javadoc * / / / noise <nl> + 	 java . lang . String / * * nope * / a / * * nope * / ( / * * nope * / ) / * * nope * / { / * * nope * / return null ; / * * nope * / } / * * nope * / <nl> + } <nl> + <nl> / / / / / / / / / / / / / / / / <nl> / / INTERFACES / / <nl> / / / / / / / / / / / / / / / / <nl> @ @ - 230 , 7 + 235 , 14 @ @ enum XXXXXXX { <nl> } <nl> <nl> / * * Javadoc * / / / noise <nl> - @ interface / * * nope * / MyAnnotation2 / * * nope * / { / * * nope * / <nl> + @ interface / * * nope * / MyAnnotation2 / * * nope * / { <nl> + 	 / * * Javadoc * / / / noise <nl> + 	 @ Component2 / * * nope * / abstract / * * nope * / String / * * nope * / val1 ( ) / * * nope * / default / * * nope * / " " ; <nl> + 	 / * * Javadoc * / / / noise <nl> + 	 abstract / * * nope * / String / * * nope * / val2 ( ) / * * nope * / ; <nl> + 	 / * * Javadoc * / / / noise <nl> + 	 java . lang . String / * * nope * / val3 ( ) / * * nope * / ; <nl> + 	 / * * nope * / <nl> } <nl> <nl> class MyTemp2 { <nl> @ @ - 239 , 4 + 251 , 16 @ @ class MyTemp2 { <nl> 	 } <nl> } <nl> <nl> + / * * nope * / / * noise * / / * * nope * / / * * Javadoc * / / / noise <nl> + interface MultipleJavadocs2 { <nl> + 	 / * * nope * / / * noise * / / * * nope * / / * * Javadoc * / / / noise <nl> + 	 int method ( ) ; <nl> + 	 / * * nope * / / * noise * / / * * nope * / / * * Javadoc * / / / noise <nl> + 	 @ Deprecated <nl> + 	 / * * nope * / / * noise * / / * * nope * / / / noise <nl> + 	 public <nl> + 	 / * * nope * / / * noise * / / * * nope * / / / noise <nl> + 	 void method2 ( ) ; <nl> + } <nl> + <nl> / * * nope * / <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnAnnotationField . java b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnAnnotationField . java <nl> new file mode 100644 <nl> index 0000000 . . 80577e1 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnAnnotationField . java <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + package com . puppycrawl . tools . checkstyle . utils . blockcommentposition ; <nl> + <nl> + public @ interface InputBlockCommentPositionOnAnnotationField { <nl> + / * * <nl> + * I ' m a javadoc <nl> + * / <nl> + String value ( ) default " " ; <nl> + <nl> + / * * <nl> + * I ' m a javadoc <nl> + * / <nl> + abstract String value1 ( ) default " " ; <nl> + <nl> + / * * <nl> + * I ' m a javadoc <nl> + * / <nl> + @ Deprecated <nl> + String value2 ( ) default " " ; <nl> + <nl> + / * * <nl> + * I ' m a javadoc <nl> + * / <nl> + @ Deprecated <nl> + abstract String value3 ( ) default " " ; <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java <nl> index e2b5a0b . . 06e4f4d 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java <nl> @ @ - 22 , 4 + 22 , 11 @ @ public class InputBlockCommentPositionOnMethod { <nl> int method2 ( ) { <nl> return 0 ; <nl> } <nl> + <nl> + / * * <nl> + * I ' m a javadoc <nl> + * / <nl> + java . lang . String method3 ( ) { <nl> + return null ; <nl> + } <nl> } <nl> diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm <nl> index b07b52d . . 209cbe6 100644 <nl> - - - a / src / xdocs / writingjavadocchecks . xml . vm <nl> + + + b / src / xdocs / writingjavadocchecks . xml . vm <nl> @ @ - 23 , 25 + 23 , 74 @ @ <nl> <nl> < section name = " What is Javadoc comment " > <nl> < p > <nl> - Javadoc comment is multiline comment < code > / * * / < / code > that starts with < b > * < / b > character and placed above class definition , interface definition , enum definition , method definition or field definition . <nl> + Javadoc comment is a multiline comment < code > / * * / < / code > that starts with the < b > * < / b > <nl> + character and placed above the class definition , interface definition , enum definition , <nl> + method definition or field definition . <nl> + If an annotation precedes any of the definitions listed above , then the javadoc comment <nl> + should be placed before the annotation . <nl> + If several multiline comments with javadoc identifiers are placed sequentially , only <nl> + the one closest to the definition , right above it , with the javadoc identifier will be used . <nl> + < / p > <nl> + < p > <nl> + Javadoc comments should contain : a short summary ( the first sentence ) , an optional <nl> + documentation section , an optional tag section . <nl> + The first sentence has a special meaning and should be clear , punchy , short , and is ended by <nl> + a period symbol . <nl> + Immediately after the first sentence , the main description could begin , which may be followed <nl> + by the tag section . <nl> + The tag section starts with the first block tag , which is defined by the first < code > @ < / code > <nl> + character that begins a line ( ignoring leading asterisks , white space , and leading separator <nl> + < code > / * * < / code > ) . <nl> + < / p > <nl> < p > For example , here is java file : < / p > <nl> < source > < ! [ CDATA [ <nl> / * * <nl> * My < b > class < / b > . <nl> - * @ see AbstractClass <nl> + * <nl> + * @ see Annotation <nl> * / <nl> public class MyClass { <nl> <nl> + / * * Not a javadoc ( ignored ) . * / <nl> + <nl> + / * * <nl> + * Doubles the value . <nl> + * The long and detailed explanation what the method does . <nl> + * <nl> + * @ param value for doubling . <nl> + * @ return double value . <nl> + * / <nl> + <nl> + / * <nl> + Multiline comment ( ignored ) . <nl> + * / <nl> + @ Annotation <nl> + / * * Extra javadoc ( ignored ) . * / <nl> + / / Single line comment ( ignored ) . <nl> + public int method ( int value ) { <nl> + / * * Inner javadoc ( ignored ) . * / <nl> + return value * 2 ; <nl> + } <nl> } <nl> ] ] > < / source > <nl> - Javadoc content is : <nl> + < p > Javadoc content for the MyClass will be : < / p > <nl> < source > < ! [ CDATA [ <nl> - * My < b > class < / b > . <nl> - * @ see AbstractClass <nl> + My < b > class < / b > . <nl> + <nl> + @ see Annotation <nl> ] ] > < / source > <nl> - < / p > <nl> + < p > Javadoc content for the MyClass . method will be : < / p > <nl> + < source > < ! [ CDATA [ <nl> + Doubles the value . <nl> + The long and detailed explanation what the method does . <nl> + <nl> + @ param value for doubling . <nl> + @ return double value . <nl> + ] ] > < / source > <nl> + < p > <nl> Attention that java comment starts with < code > / * < / code > , following with Identificator of comment type . Javadoc Identificator is < code > * < / code > . All symbols after Javadoc Identificator till < code > * / < / code > are part of javadoc comment . <nl> - < p > Please note that javadoc - like ( miltiline comment with javdoc identificator ) comment inside a method is not a javadoc comment and skipped by <nl> + < / p > <nl> + < p > Please note that javadoc - like ( miltiline comment with javdoc identificator ) comment inside a method is not a javadoc comment and skipped by <nl> Sun / Oracle javadoc tool and by our javadoc comment matcher , but such comment will be in AST . <nl> < / p > <nl> < p > In internet you can find different types of documentation
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 449e1e4 . . 96432ce 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 232 , 7 + 232 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * / <nl> public void setAllowedAnnotations ( String userAnnotations ) { <nl> final List < String > annotations = new ArrayList < > ( ) ; <nl> - Collections . addAll ( annotations , userAnnotations . split ( " , " ) ) ; <nl> + final String [ ] sAnnotations = userAnnotations . split ( " , " ) ; <nl> + for ( int i = 0 ; i < sAnnotations . length ; i + + ) { <nl> + sAnnotations [ i ] = sAnnotations [ i ] . trim ( ) ; <nl> + } <nl> + <nl> + Collections . addAll ( annotations , sAnnotations ) ; <nl> allowedAnnotations = annotations ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> index dab1b35 . . c1ecfc4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> @ @ - 68 , 6 + 68 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void allowedAnnotationsTest ( ) throws Exception { <nl> + <nl> + DefaultConfiguration config = createCheckConfig ( JavadocMethodCheck . class ) ; <nl> + config . addAttribute ( " allowedAnnotations " , " Override , ThisIsOk , \ t \ n \ t ThisIsOkToo " ) ; <nl> + final String [ ] expected = { } ; <nl> + verify ( config , getPath ( " javadoc / AllowedAnnotations . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testTags ( ) throws Exception { <nl> final String [ ] expected = { <nl> " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java <nl> new file mode 100644 <nl> index 0000000 . . aace735 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java <nl> @ @ - 0 , 0 + 1 , 39 @ @ <nl> + package com . puppycrawl . tools . checkstyle . javadoc ; <nl> + <nl> + / * * <nl> + * Some javadoc . <nl> + * / <nl> + public class AllowedAnnotations implements SomeInterface { <nl> + <nl> + @ ThisIsOk <nl> + public void allowed1 ( ) { } <nl> + <nl> + @ ThisIsOkToo <nl> + public void allowed2 ( ) { } <nl> + <nl> + @ com . puppycrawl . tools . checkstyle . javadoc . ThisIsOk <nl> + public void allowed3 ( ) { } <nl> + <nl> + @ Override <nl> + public void method ( ) { } <nl> + } <nl> + <nl> + / * * <nl> + * Documented . <nl> + * / <nl> + interface SomeInterface { <nl> + / * * <nl> + * Documented . <nl> + * / <nl> + void method ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Some javadoc . <nl> + * / <nl> + @ interface ThisIsOk { } <nl> + <nl> + / * * <nl> + * Some javadoc . <nl> + * / <nl> + @ interface ThisIsOkToo { }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java 
 index f35404e . . 5d49342 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPosition . java 
 @ @ - 36 , 6 + 36 , 18 @ @ public final class BlockCommentPosition { 
 } 
 
 / * * 
 + * Node is on type definition . 
 + * @ param blockComment DetailAST 
 + * @ return true if node is before class , interface , enum or annotation . 
 + * / 
 + public static boolean isOnType ( DetailAST blockComment ) { 
 + return isOnClass ( blockComment ) 
 + | | isOnInterface ( blockComment ) 
 + | | isOnEnum ( blockComment ) 
 + | | isOnAnnotationDef ( blockComment ) ; 
 + } 
 + 
 + / * * 
 * Node is on class definition . 
 * @ param blockComment DetailAST 
 * @ return true if node is before class 
 @ @ - 80 , 6 + 92 , 20 @ @ public final class BlockCommentPosition { 
 } 
 
 / * * 
 + * Node is on type member declaration . 
 + * @ param blockComment DetailAST 
 + * @ return true if node is before method , field , constructor , enum constant 
 + * or annotation field 
 + * / 
 + public static boolean isOnMember ( DetailAST blockComment ) { 
 + return isOnMethod ( blockComment ) 
 + | | isOnField ( blockComment ) 
 + | | isOnConstructor ( blockComment ) 
 + | | isOnEnumConstant ( blockComment ) 
 + | | isOnAnnotationField ( blockComment ) ; 
 + } 
 + 
 + / * * 
 * Node is on method declaration . 
 * @ param blockComment DetailAST 
 * @ return true if node is before method 
 @ @ - 130 , 6 + 156 , 17 @ @ public final class BlockCommentPosition { 
 } 
 
 / * * 
 + * Node is on annotation field declaration . 
 + * @ param blockComment DetailAST 
 + * @ return true if node is before annotation field 
 + * / 
 + public static boolean isOnAnnotationField ( DetailAST blockComment ) { 
 + return isOnPlainClassMember ( blockComment , TokenTypes . ANNOTATION _ FIELD _ DEF ) 
 + | | isOnTokenWithModifiers ( blockComment , TokenTypes . ANNOTATION _ FIELD _ DEF ) 
 + | | isOnTokenWithAnnotation ( blockComment , TokenTypes . ANNOTATION _ FIELD _ DEF ) ; 
 + } 
 + 
 + / * * 
 * Checks that block comment is on specified token without any modifiers . 
 * @ param blockComment block comment start DetailAST 
 * @ param parentTokenType parent token type 
 @ @ - 179 , 11 + 216 , 16 @ @ public final class BlockCommentPosition { 
 * @ return true if block comment is on specified token without modifiers 
 * / 
 private static boolean isOnPlainClassMember ( DetailAST blockComment , int memberType ) { 
 - return blockComment . getParent ( ) ! = null 
 - & & blockComment . getParent ( ) . getType ( ) = = TokenTypes . TYPE 
 - & & blockComment . getParent ( ) . getParent ( ) . getType ( ) = = memberType 
 + DetailAST parent = blockComment . getParent ( ) ; 
 + / / type could be in fully qualified form , so we go up to Type token 
 + while ( parent ! = null & & parent . getType ( ) = = TokenTypes . DOT ) { 
 + parent = parent . getParent ( ) ; 
 + } 
 + return parent ! = null 
 + & & parent . getType ( ) = = TokenTypes . TYPE 
 + & & parent . getParent ( ) . getType ( ) = = memberType 
 / / previous parent sibling is always TokenTypes . MODIFIERS 
 - & & blockComment . getParent ( ) . getPreviousSibling ( ) . getChildCount ( ) = = 0 ; 
 + & & parent . getPreviousSibling ( ) . getChildCount ( ) = = 0 ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 index b744167 . . 782f1ef 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 @ @ - 30 , 6 + 30 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . DetailNode ; 
 import com . puppycrawl . tools . checkstyle . api . JavadocTokenTypes ; 
 import com . puppycrawl . tools . checkstyle . api . TextBlock ; 
 + import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . checks . javadoc . InvalidJavadocTag ; 
 import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTag ; 
 import com . puppycrawl . tools . checkstyle . checks . javadoc . JavadocTagInfo ; 
 @ @ - 400 , 24 + 401 , 40 @ @ public final class JavadocUtils { 
 
 / * * 
 * Checks Javadoc comment it ' s in right place . 
 - * From Javadoc util documentation : 
 + * < p > From Javadoc util documentation : 
 * " Placement of comments - Documentation comments are recognized only when placed 
 - * immediately before class , interface , constructor , method , or field 
 + * immediately before class , interface , constructor , method , field or annotation field 
 * declarations - - see the class example , method example , and field example . 
 - * Documentation comments placed in the body of a method are ignored . Only one 
 - * documentation comment per declaration statement is recognized by the Javadoc tool . " 
 + * Documentation comments placed in the body of a method are ignored . " < / p > 
 + * < p > If there are many documentation comments per declaration statement , 
 + * only the last one will be recognized . < / p > 
 * 
 * @ param blockComment Block comment AST 
 * @ return true if Javadoc is in right place 
 + * @ see < a href = " https : / / docs . oracle . com / javase / 8 / docs / technotes / tools / unix / javadoc . html " > 
 + * Javadoc util documentation < / a > 
 * / 
 private static boolean isCorrectJavadocPosition ( DetailAST blockComment ) { 
 - return BlockCommentPosition . isOnClass ( blockComment ) 
 - | | BlockCommentPosition . isOnInterface ( blockComment ) 
 - | | BlockCommentPosition . isOnEnum ( blockComment ) 
 - | | BlockCommentPosition . isOnMethod ( blockComment ) 
 - | | BlockCommentPosition . isOnField ( blockComment ) 
 - | | BlockCommentPosition . isOnConstructor ( blockComment ) 
 - | | BlockCommentPosition . isOnEnumConstant ( blockComment ) 
 - | | BlockCommentPosition . isOnAnnotationDef ( blockComment ) ; 
 + / / We must be sure that after this one there are no other documentation comments . 
 + DetailAST sibling = blockComment . getNextSibling ( ) ; 
 + while ( sibling ! = null ) { 
 + if ( sibling . getType ( ) = = TokenTypes . BLOCK _ COMMENT _ BEGIN ) { 
 + if ( isJavadocComment ( getBlockCommentContent ( sibling ) ) ) { 
 + / / Found another javadoc comment , so this one should be ignored . 
 + break ; 
 + } 
 + sibling = sibling . getNextSibling ( ) ; 
 + } 
 + else if ( sibling . getType ( ) = = TokenTypes . SINGLE _ LINE _ COMMENT ) { 
 + sibling = sibling . getNextSibling ( ) ; 
 + } 
 + else { 
 + / / Annotation , declaration or modifier is here . Do not check further . 
 + sibling = null ; 
 + } 
 + } 
 + return sibling = = null 
 + & & ( BlockCommentPosition . isOnType ( blockComment ) 
 + | | BlockCommentPosition . isOnMember ( blockComment ) ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 index 2873e03 . . 0123980 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 @ @ - 47 , 6 + 47 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . JavadocTokenTypes ; 
 import com . puppycrawl . tools . checkstyle . internal . utils . TestUtil ; 
 import com . puppycrawl . tools . checkstyle . utils . BlockCommentPosition ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 + import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; 
 
 public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { 
 
 @ @ - 180 , 7 + 181 , 7 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { 
 final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , getPath ( " InputAbstractJavadocPosition . java " ) , expected ) ; 
 assertEquals ( " Invalid number of javadocs " , 
 - 58 , JavadocCatchCheck . javadocsNumber ) ; 
 + 65 , JavadocCatchCheck . javadocsNumber ) ; 
 } 
 
 @ Test 
 @ @ - 192 , 7 + 193 , 7 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { 
 verify ( checkConfig , 
 getPath ( " InputAbstractJavadocPositionWithSinglelineComments . java " ) , expected ) ; 
 assertEquals ( " Invalid number of javadocs " , 
 - 58 , JavadocCatchCheck . javadocsNumber ) ; 
 + 65 , JavadocCatchCheck . javadocsNumber ) ; 
 } 
 
 @ Test 
 @ @ - 485 , 6 + 486 , 9 @ @ public class AbstractJavadocCheckTest extends AbstractModuleTestSupport { 
 @ Override 
 public void visitJavadocToken ( DetailNode ast ) { 
 assertEquals ( ast . toString ( ) , " JAVADOC " , ast . getText ( ) ) ; 
 + final DetailNode text = JavadocUtils . findFirstToken ( ast , JavadocTokenTypes . TEXT ) ; 
 + Assert . assertNotNull ( " Empty javadoc text at " + ast , text ) ; 
 + assertEquals ( ast . toString ( ) , " Javadoc " , text . getText ( ) ) ; 
 javadocsNumber + + ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java 
 index 0c8df79 . . dfc1c9d 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / utils / BlockCommentPositionTest . java 
 @ @ - 41 , 7 + 41 , 7 @ @ public class BlockCommentPositionTest extends AbstractPathTestSupport { 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnClass . java " , 
 BlockCommentPosition : : isOnClass , 3 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnMethod . java " , 
 - BlockCommentPosition : : isOnMethod , 3 ) , 
 + BlockCommentPosition : : isOnMethod , 4 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnField . java " , 
 BlockCommentPosition : : isOnField , 3 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnEnum . java " , 
 @ @ - 53 , 7 + 53 , 10 @ @ public class BlockCommentPositionTest extends AbstractPathTestSupport { 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnAnnotation . java " , 
 BlockCommentPosition : : isOnAnnotationDef , 3 ) , 
 new BlockCommentPositionTestMetadata ( " InputBlockCommentPositionOnEnumMember . java " , 
 - BlockCommentPosition : : isOnEnumConstant , 2 ) 
 + BlockCommentPosition : : isOnEnumConstant , 2 ) , 
 + new BlockCommentPositionTestMetadata ( 
 + " InputBlockCommentPositionOnAnnotationField . java " , 
 + BlockCommentPosition : : isOnAnnotationField , 4 ) 
 ) ; 
 
 for ( BlockCommentPositionTestMetadata metadata : metadataList ) { 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPosition . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPosition . java 
 index c83a607 . . 258c511 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPosition . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPosition . java 
 @ @ - 95 , 6 + 95 , 11 @ @ class GGG { 
 	 void / * * nope * / a / * * nope * / ( @ Component / * * nope * / int / * * nope * / a / * * nope * / ) / * * nope * / { / * * nope * / } / * * nope * / 
 } 
 
 + class HHH { 
 + 	 / * * Javadoc * / 
 + 	 java . lang . String / * * nope * / a / * * nope * / ( ) / * * nope * / { / * * nope * / return null ; / * * nope * / } / * * nope * / 
 + } 
 + 
 / / / / / / / / / / / / / / / / 
 / / INTERFACES / / 
 / / / / / / / / / / / / / / / / 
 @ @ - 229 , 7 + 234 , 14 @ @ enum CCCCCCC { 
 } 
 
 / * * Javadoc * / 
 - @ interface / * * nope * / MyAnnotation / * * nope * / { / * * nope * / 
 + @ interface / * * nope * / MyAnnotation / * * nope * / { 
 + 	 / * * Javadoc * / 
 + 	 @ Component / * * nope * / abstract / * * nope * / String / * * nope * / val1 ( ) / * * nope * / default / * * nope * / " " ; 
 + 	 / * * Javadoc * / 
 + 	 abstract / * * nope * / String / * * nope * / val2 ( ) / * * nope * / ; 
 + 	 / * * Javadoc * / 
 + 	 java . lang . String / * * nope * / val3 ( ) / * * nope * / ; 
 + 	 / * * nope * / 
 } 
 
 class MyTemp1 { 
 @ @ - 239 , 3 + 251 , 28 @ @ class MyTemp1 { 
 } 
 
 / * * nope * / 
 + / * noise * / 
 + / * * nope * / 
 + / * * Javadoc * / 
 + / / noise 
 + @ Component 
 + / * noise * / 
 + interface MultipleJavadoc { 
 + 	 / * * nope * / 
 + 	 / * noise * / 
 + 	 / * * nope * / 
 + 	 / * * Javadoc * / 
 + 	 / * noise * / 
 + 	 public / * * nope * / int method ( ) ; 
 + 	 / * * nope * / 
 + 	 / * noise * / 
 + 	 / * * nope * / 
 + 	 / * * Javadoc * / 
 + 	 / / noise 
 + 	 @ Deprecated 
 + 	 / / noise 
 + 	 / * * nope * / 
 + 	 public / * * nope * / void method2 ( ) ; 
 + } 
 + 
 + / * * nope * / 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPositionWithSinglelineComments . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPositionWithSinglelineComments . java 
 index c95e470 . . 3f320c1 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPositionWithSinglelineComments . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / abstractjavadoc / InputAbstractJavadocPositionWithSinglelineComments . java 
 @ @ - 95 , 6 + 95 , 11 @ @ class LKJ { 
 	 void / * * nope * / a / * * nope * / ( @ Component2 / * * nope * / int / * * nope * / a / * * nope * / ) / * * nope * / { / * * nope * / } / * * nope * / 
 } 
 
 + class LKM { 
 + 	 / * * Javadoc * / / / noise 
 + 	 java . lang . String / * * nope * / a / * * nope * / ( / * * nope * / ) / * * nope * / { / * * nope * / return null ; / * * nope * / } / * * nope * / 
 + } 
 + 
 / / / / / / / / / / / / / / / / 
 / / INTERFACES / / 
 / / / / / / / / / / / / / / / / 
 @ @ - 230 , 7 + 235 , 14 @ @ enum XXXXXXX { 
 } 
 
 / * * Javadoc * / / / noise 
 - @ interface / * * nope * / MyAnnotation2 / * * nope * / { / * * nope * / 
 + @ interface / * * nope * / MyAnnotation2 / * * nope * / { 
 + 	 / * * Javadoc * / / / noise 
 + 	 @ Component2 / * * nope * / abstract / * * nope * / String / * * nope * / val1 ( ) / * * nope * / default / * * nope * / " " ; 
 + 	 / * * Javadoc * / / / noise 
 + 	 abstract / * * nope * / String / * * nope * / val2 ( ) / * * nope * / ; 
 + 	 / * * Javadoc * / / / noise 
 + 	 java . lang . String / * * nope * / val3 ( ) / * * nope * / ; 
 + 	 / * * nope * / 
 } 
 
 class MyTemp2 { 
 @ @ - 239 , 4 + 251 , 16 @ @ class MyTemp2 { 
 	 } 
 } 
 
 + / * * nope * / / * noise * / / * * nope * / / * * Javadoc * / / / noise 
 + interface MultipleJavadocs2 { 
 + 	 / * * nope * / / * noise * / / * * nope * / / * * Javadoc * / / / noise 
 + 	 int method ( ) ; 
 + 	 / * * nope * / / * noise * / / * * nope * / / * * Javadoc * / / / noise 
 + 	 @ Deprecated 
 + 	 / * * nope * / / * noise * / / * * nope * / / / noise 
 + 	 public 
 + 	 / * * nope * / / * noise * / / * * nope * / / / noise 
 + 	 void method2 ( ) ; 
 + } 
 + 
 / * * nope * / 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnAnnotationField . java b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnAnnotationField . java 
 new file mode 100644 
 index 0000000 . . 80577e1 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnAnnotationField . java 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + package com . puppycrawl . tools . checkstyle . utils . blockcommentposition ; 
 + 
 + public @ interface InputBlockCommentPositionOnAnnotationField { 
 + / * * 
 + * I ' m a javadoc 
 + * / 
 + String value ( ) default " " ; 
 + 
 + / * * 
 + * I ' m a javadoc 
 + * / 
 + abstract String value1 ( ) default " " ; 
 + 
 + / * * 
 + * I ' m a javadoc 
 + * / 
 + @ Deprecated 
 + String value2 ( ) default " " ; 
 + 
 + / * * 
 + * I ' m a javadoc 
 + * / 
 + @ Deprecated 
 + abstract String value3 ( ) default " " ; 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java 
 index e2b5a0b . . 06e4f4d 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / utils / blockcommentposition / InputBlockCommentPositionOnMethod . java 
 @ @ - 22 , 4 + 22 , 11 @ @ public class InputBlockCommentPositionOnMethod { 
 int method2 ( ) { 
 return 0 ; 
 } 
 + 
 + / * * 
 + * I ' m a javadoc 
 + * / 
 + java . lang . String method3 ( ) { 
 + return null ; 
 + } 
 } 
 diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm 
 index b07b52d . . 209cbe6 100644 
 - - - a / src / xdocs / writingjavadocchecks . xml . vm 
 + + + b / src / xdocs / writingjavadocchecks . xml . vm 
 @ @ - 23 , 25 + 23 , 74 @ @ 
 
 < section name = " What is Javadoc comment " > 
 < p > 
 - Javadoc comment is multiline comment < code > / * * / < / code > that starts with < b > * < / b > character and placed above class definition , interface definition , enum definition , method definition or field definition . 
 + Javadoc comment is a multiline comment < code > / * * / < / code > that starts with the < b > * < / b > 
 + character and placed above the class definition , interface definition , enum definition , 
 + method definition or field definition . 
 + If an annotation precedes any of the definitions listed above , then the javadoc comment 
 + should be placed before the annotation . 
 + If several multiline comments with javadoc identifiers are placed sequentially , only 
 + the one closest to the definition , right above it , with the javadoc identifier will be used . 
 + < / p > 
 + < p > 
 + Javadoc comments should contain : a short summary ( the first sentence ) , an optional 
 + documentation section , an optional tag section . 
 + The first sentence has a special meaning and should be clear , punchy , short , and is ended by 
 + a period symbol . 
 + Immediately after the first sentence , the main description could begin , which may be followed 
 + by the tag section . 
 + The tag section starts with the first block tag , which is defined by the first < code > @ < / code > 
 + character that begins a line ( ignoring leading asterisks , white space , and leading separator 
 + < code > / * * < / code > ) . 
 + < / p > 
 < p > For example , here is java file : < / p > 
 < source > < ! [ CDATA [ 
 / * * 
 * My < b > class < / b > . 
 - * @ see AbstractClass 
 + * 
 + * @ see Annotation 
 * / 
 public class MyClass { 
 
 + / * * Not a javadoc ( ignored ) . * / 
 + 
 + / * * 
 + * Doubles the value . 
 + * The long and detailed explanation what the method does . 
 + * 
 + * @ param value for doubling . 
 + * @ return double value . 
 + * / 
 + 
 + / * 
 + Multiline comment ( ignored ) . 
 + * / 
 + @ Annotation 
 + / * * Extra javadoc ( ignored ) . * / 
 + / / Single line comment ( ignored ) . 
 + public int method ( int value ) { 
 + / * * Inner javadoc ( ignored ) . * / 
 + return value * 2 ; 
 + } 
 } 
 ] ] > < / source > 
 - Javadoc content is : 
 + < p > Javadoc content for the MyClass will be : < / p > 
 < source > < ! [ CDATA [ 
 - * My < b > class < / b > . 
 - * @ see AbstractClass 
 + My < b > class < / b > . 
 + 
 + @ see Annotation 
 ] ] > < / source > 
 - < / p > 
 + < p > Javadoc content for the MyClass . method will be : < / p > 
 + < source > < ! [ CDATA [ 
 + Doubles the value . 
 + The long and detailed explanation what the method does . 
 + 
 + @ param value for doubling . 
 + @ return double value . 
 + ] ] > < / source > 
 + < p > 
 Attention that java comment starts with < code > / * < / code > , following with Identificator of comment type . Javadoc Identificator is < code > * < / code > . All symbols after Javadoc Identificator till < code > * / < / code > are part of javadoc comment . 
 - < p > Please note that javadoc - like ( miltiline comment with javdoc identificator ) comment inside a method is not a javadoc comment and skipped by 
 + < / p > 
 + < p > Please note that javadoc - like ( miltiline comment with javdoc identificator ) comment inside a method is not a javadoc comment and skipped by 
 Sun / Oracle javadoc tool and by our javadoc comment matcher , but such comment will be in AST . 
 < / p > 
 < p > In internet you can find different types of documentation

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 449e1e4 . . 96432ce 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 232 , 7 + 232 , 12 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * / 
 public void setAllowedAnnotations ( String userAnnotations ) { 
 final List < String > annotations = new ArrayList < > ( ) ; 
 - Collections . addAll ( annotations , userAnnotations . split ( " , " ) ) ; 
 + final String [ ] sAnnotations = userAnnotations . split ( " , " ) ; 
 + for ( int i = 0 ; i < sAnnotations . length ; i + + ) { 
 + sAnnotations [ i ] = sAnnotations [ i ] . trim ( ) ; 
 + } 
 + 
 + Collections . addAll ( annotations , sAnnotations ) ; 
 allowedAnnotations = annotations ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 index dab1b35 . . c1ecfc4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 @ @ - 68 , 6 + 68 , 15 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void allowedAnnotationsTest ( ) throws Exception { 
 + 
 + DefaultConfiguration config = createCheckConfig ( JavadocMethodCheck . class ) ; 
 + config . addAttribute ( " allowedAnnotations " , " Override , ThisIsOk , \ t \ n \ t ThisIsOkToo " ) ; 
 + final String [ ] expected = { } ; 
 + verify ( config , getPath ( " javadoc / AllowedAnnotations . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testTags ( ) throws Exception { 
 final String [ ] expected = { 
 " 14 : 5 : " + getCheckMessage ( MSG _ JAVADOC _ MISSING ) , 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java 
 new file mode 100644 
 index 0000000 . . aace735 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / javadoc / AllowedAnnotations . java 
 @ @ - 0 , 0 + 1 , 39 @ @ 
 + package com . puppycrawl . tools . checkstyle . javadoc ; 
 + 
 + / * * 
 + * Some javadoc . 
 + * / 
 + public class AllowedAnnotations implements SomeInterface { 
 + 
 + @ ThisIsOk 
 + public void allowed1 ( ) { } 
 + 
 + @ ThisIsOkToo 
 + public void allowed2 ( ) { } 
 + 
 + @ com . puppycrawl . tools . checkstyle . javadoc . ThisIsOk 
 + public void allowed3 ( ) { } 
 + 
 + @ Override 
 + public void method ( ) { } 
 + } 
 + 
 + / * * 
 + * Documented . 
 + * / 
 + interface SomeInterface { 
 + / * * 
 + * Documented . 
 + * / 
 + void method ( ) ; 
 + } 
 + 
 + / * * 
 + * Some javadoc . 
 + * / 
 + @ interface ThisIsOk { } 
 + 
 + / * * 
 + * Some javadoc . 
 + * / 
 + @ interface ThisIsOkToo { }
