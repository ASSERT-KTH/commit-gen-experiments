BLEU SCORE: 0.026177801443623635

TEST MSG: Issue # 3301 : update suppress comment
GENERATED MSG: minor : intelijidea inspection ( ' throw ' inside ' finally ' block ) is disabled till # 3301

TEST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index 5919b10 . . 2e80502 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 2122 , 7 + 2122 , 7 @ @ <nl> < inspection _ tool class = " ThrowCaughtLocally " enabled = " false " level = " ERROR " enabled _ by _ default = " false " > <nl> < option name = " ignoreRethrownExceptions " value = " false " / > <nl> < / inspection _ tool > <nl> - < ! - - disabled till https : / / github . com / checkstyle / checkstyle / issues / 3301 - - > <nl> + < ! - - disabled till we switch to jacoco that support try - with - resources - - > <nl> < inspection _ tool class = " ThrowFromFinallyBlock " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > <nl> < inspection _ tool class = " ThrowFromFinallyBlockJS " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > <nl> < inspection _ tool class = " ThrowableInstanceNeverThrown " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java <nl> index 3deac47 . . 49c0f22 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java <nl> @ @ - 78 , 11 + 78 , 6 @ @ public class ArrayInitHandler extends BlockParentHandler { <nl> } <nl> <nl> @ Override <nl> - protected boolean shouldStartWithRCurly ( ) { <nl> - return false ; <nl> - } <nl> - <nl> - @ Override <nl> protected boolean canChildrenBeNested ( ) { <nl> return true ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> index e86f501 . . 3f55957 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> @ @ - 171 , 15 + 171 , 6 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> } <nl> <nl> / * * <nl> - * Determines if the right curly brace must be at the start of the line . <nl> - * <nl> - * @ return true <nl> - * / <nl> - protected boolean shouldStartWithRCurly ( ) { <nl> - return true ; <nl> - } <nl> - <nl> - / * * <nl> * Determines if child elements within the expression may be nested . <nl> * <nl> * @ return false <nl> @ @ - 192 , 15 + 183 , 11 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> * Check the indentation of the right curly brace . <nl> * / <nl> protected void checkRCurly ( ) { <nl> - / / the rcurly can either be at the correct indentation , or <nl> - / / on the same line as the lcurly <nl> - final DetailAST lcurly = getLCurly ( ) ; <nl> final DetailAST rcurly = getRCurly ( ) ; <nl> final int rcurlyPos = expandedTabsColumnNo ( rcurly ) ; <nl> <nl> if ( ! curlyIndent ( ) . isAcceptable ( rcurlyPos ) <nl> - & & ( shouldStartWithRCurly ( ) | | isOnStartOfLine ( rcurly ) ) <nl> - & & ! areOnSameLine ( rcurly , lcurly ) ) { <nl> + & & isOnStartOfLine ( rcurly ) ) { <nl> logError ( rcurly , " rcurly " , rcurlyPos , curlyIndent ( ) ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> index c4f4969 . . 4785834 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> @ @ - 1039 , 7 + 1039 , 6 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> <nl> " 225 : " + getCheckMessage ( MSG _ ERROR , " if " , 10 , 12 ) , <nl> " 229 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " if " , 18 , 20 ) , <nl> - " 233 : " + getCheckMessage ( MSG _ ERROR , " if rcurly " , 40 , 8 ) , <nl> " 240 : " + getCheckMessage ( MSG _ ERROR , " if rparen " , 10 , 8 ) , <nl> " 245 : " + getCheckMessage ( MSG _ ERROR , " if rparen " , 6 , 8 ) , <nl> " 251 : " + getCheckMessage ( MSG _ ERROR , " if lparen " , 6 , 8 ) , <nl> @ @ - 1112 , 9 + 1111 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; <nl> checkConfig . addAttribute ( " throwsIndent " , " 4 " ) ; <nl> final String fileName = getPath ( " InputInvalidAnonymousClassIndent . java " ) ; <nl> - final String [ ] expected = { <nl> - " 28 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " method def rcurly " , 17 , " 12 , 16 " ) , <nl> - } ; <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> verifyWarns ( checkConfig , fileName , expected ) ; <nl> } <nl> <nl> @ @ - 1153 , 7 + 1150 , 6 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> " 70 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 10 , 12 ) , <nl> " 71 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 14 , 16 ) , <nl> " 72 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 10 , 12 ) , <nl> - " 77 : " + getCheckMessage ( MSG _ ERROR , " for rcurly " , 39 , 8 ) , <nl> " 81 : " + getCheckMessage ( MSG _ ERROR , " for rparen " , 12 , 8 ) , <nl> } ; <nl> verifyWarns ( checkConfig , fileName , expected ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidAnonymousClassIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidAnonymousClassIndent . java <nl> index 5e84c1e . . b2d5e7e 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidAnonymousClassIndent . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidAnonymousClassIndent . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ public class InputInvalidAnonymousClassIndent { / / indent : 0 exp : 0 <nl> return new Thread ( ) ; / / indent : 20 exp : 20 <nl> } else { / / indent : 16 exp : 16 <nl> return new Thread ( ) ; / / indent : 20 exp : 20 <nl> - } } } ) ; / / indent : 16 ioffset : 1 exp : 12 , 16 warn <nl> + } } } ) ; / / indent : 16 exp : 16 <nl> return ; / / indent : 8 exp : 8 <nl> } / / indent : 4 exp : 4 <nl> } / / indent : 0 exp : 0 <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidForIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidForIndent . java <nl> index a8ef88b . . 4f7776c 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidForIndent . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidForIndent . java <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class InputInvalidForIndent { / / indent : 0 exp : 0 <nl> } / / indent : 8 exp : 8 <nl> <nl> for ( int i = 0 ; i < 10 ; i + + ) { / / indent : 8 exp : 8 <nl> - System . getProperty ( " foo " ) ; } / / indent : 12 ioffset : 27 exp : 8 warn <nl> + System . getProperty ( " foo " ) ; } / / indent : 12 exp : 12 <nl> <nl> for ( int i = 0 ; / / indent : 8 exp : 8 <nl> i < 10 ; i + + / / indent : 12 exp : > = 12 <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidIfIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidIfIndent . java <nl> index b58081a . . f33f8a6 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidIfIndent . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidIfIndent . java <nl> @ @ - 230 , 7 + 230 , 7 @ @ System . getProperty ( " blah " ) ; / / indent : 0 exp : 12 warn <nl> } / / indent : 16 exp : 16 <nl> <nl> if ( test ) { / / indent : 8 exp : 8 <nl> - System . getProperty ( " blah " ) ; } / / indent : 12 ioffset : 28 exp : 8 warn <nl> + System . getProperty ( " blah " ) ; } / / indent : 12 exp : 12 <nl> } / / indent : 4 exp : 4 <nl> <nl> public void parenIfTest ( ) { / / indent : 4 exp : 4

TEST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index 5919b10 . . 2e80502 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 2122 , 7 + 2122 , 7 @ @ 
 < inspection _ tool class = " ThrowCaughtLocally " enabled = " false " level = " ERROR " enabled _ by _ default = " false " > 
 < option name = " ignoreRethrownExceptions " value = " false " / > 
 < / inspection _ tool > 
 - < ! - - disabled till https : / / github . com / checkstyle / checkstyle / issues / 3301 - - > 
 + < ! - - disabled till we switch to jacoco that support try - with - resources - - > 
 < inspection _ tool class = " ThrowFromFinallyBlock " enabled = " false " level = " ERROR " enabled _ by _ default = " false " / > 
 < inspection _ tool class = " ThrowFromFinallyBlockJS " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / > 
 < inspection _ tool class = " ThrowableInstanceNeverThrown " enabled = " true " level = " ERROR " enabled _ by _ default = " true " / >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java 
 index 3deac47 . . 49c0f22 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / ArrayInitHandler . java 
 @ @ - 78 , 11 + 78 , 6 @ @ public class ArrayInitHandler extends BlockParentHandler { 
 } 
 
 @ Override 
 - protected boolean shouldStartWithRCurly ( ) { 
 - return false ; 
 - } 
 - 
 - @ Override 
 protected boolean canChildrenBeNested ( ) { 
 return true ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 index e86f501 . . 3f55957 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 @ @ - 171 , 15 + 171 , 6 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 } 
 
 / * * 
 - * Determines if the right curly brace must be at the start of the line . 
 - * 
 - * @ return true 
 - * / 
 - protected boolean shouldStartWithRCurly ( ) { 
 - return true ; 
 - } 
 - 
 - / * * 
 * Determines if child elements within the expression may be nested . 
 * 
 * @ return false 
 @ @ - 192 , 15 + 183 , 11 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 * Check the indentation of the right curly brace . 
 * / 
 protected void checkRCurly ( ) { 
 - / / the rcurly can either be at the correct indentation , or 
 - / / on the same line as the lcurly 
 - final DetailAST lcurly = getLCurly ( ) ; 
 final DetailAST rcurly = getRCurly ( ) ; 
 final int rcurlyPos = expandedTabsColumnNo ( rcurly ) ; 
 
 if ( ! curlyIndent ( ) . isAcceptable ( rcurlyPos ) 
 - & & ( shouldStartWithRCurly ( ) | | isOnStartOfLine ( rcurly ) ) 
 - & & ! areOnSameLine ( rcurly , lcurly ) ) { 
 + & & isOnStartOfLine ( rcurly ) ) { 
 logError ( rcurly , " rcurly " , rcurlyPos , curlyIndent ( ) ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 index c4f4969 . . 4785834 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 @ @ - 1039 , 7 + 1039 , 6 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 
 " 225 : " + getCheckMessage ( MSG _ ERROR , " if " , 10 , 12 ) , 
 " 229 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " if " , 18 , 20 ) , 
 - " 233 : " + getCheckMessage ( MSG _ ERROR , " if rcurly " , 40 , 8 ) , 
 " 240 : " + getCheckMessage ( MSG _ ERROR , " if rparen " , 10 , 8 ) , 
 " 245 : " + getCheckMessage ( MSG _ ERROR , " if rparen " , 6 , 8 ) , 
 " 251 : " + getCheckMessage ( MSG _ ERROR , " if lparen " , 6 , 8 ) , 
 @ @ - 1112 , 9 + 1111 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " tabWidth " , " 4 " ) ; 
 checkConfig . addAttribute ( " throwsIndent " , " 4 " ) ; 
 final String fileName = getPath ( " InputInvalidAnonymousClassIndent . java " ) ; 
 - final String [ ] expected = { 
 - " 28 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " method def rcurly " , 17 , " 12 , 16 " ) , 
 - } ; 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 verifyWarns ( checkConfig , fileName , expected ) ; 
 } 
 
 @ @ - 1153 , 7 + 1150 , 6 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 " 70 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 10 , 12 ) , 
 " 71 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 14 , 16 ) , 
 " 72 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " for " , 10 , 12 ) , 
 - " 77 : " + getCheckMessage ( MSG _ ERROR , " for rcurly " , 39 , 8 ) , 
 " 81 : " + getCheckMessage ( MSG _ ERROR , " for rparen " , 12 , 8 ) , 
 } ; 
 verifyWarns ( checkConfig , fileName , expected ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidAnonymousClassIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidAnonymousClassIndent . java 
 index 5e84c1e . . b2d5e7e 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidAnonymousClassIndent . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidAnonymousClassIndent . java 
 @ @ - 25 , 7 + 25 , 7 @ @ public class InputInvalidAnonymousClassIndent { / / indent : 0 exp : 0 
 return new Thread ( ) ; / / indent : 20 exp : 20 
 } else { / / indent : 16 exp : 16 
 return new Thread ( ) ; / / indent : 20 exp : 20 
 - } } } ) ; / / indent : 16 ioffset : 1 exp : 12 , 16 warn 
 + } } } ) ; / / indent : 16 exp : 16 
 return ; / / indent : 8 exp : 8 
 } / / indent : 4 exp : 4 
 } / / indent : 0 exp : 0 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidForIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidForIndent . java 
 index a8ef88b . . 4f7776c 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidForIndent . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidForIndent . java 
 @ @ - 74 , 7 + 74 , 7 @ @ public class InputInvalidForIndent { / / indent : 0 exp : 0 
 } / / indent : 8 exp : 8 
 
 for ( int i = 0 ; i < 10 ; i + + ) { / / indent : 8 exp : 8 
 - System . getProperty ( " foo " ) ; } / / indent : 12 ioffset : 27 exp : 8 warn 
 + System . getProperty ( " foo " ) ; } / / indent : 12 exp : 12 
 
 for ( int i = 0 ; / / indent : 8 exp : 8 
 i < 10 ; i + + / / indent : 12 exp : > = 12 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidIfIndent . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidIfIndent . java 
 index b58081a . . f33f8a6 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidIfIndent . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / indentation / InputInvalidIfIndent . java 
 @ @ - 230 , 7 + 230 , 7 @ @ System . getProperty ( " blah " ) ; / / indent : 0 exp : 12 warn 
 } / / indent : 16 exp : 16 
 
 if ( test ) { / / indent : 8 exp : 8 
 - System . getProperty ( " blah " ) ; } / / indent : 12 ioffset : 28 exp : 8 warn 
 + System . getProperty ( " blah " ) ; } / / indent : 12 exp : 12 
 } / / indent : 4 exp : 4 
 
 public void parenIfTest ( ) { / / indent : 4 exp : 4
