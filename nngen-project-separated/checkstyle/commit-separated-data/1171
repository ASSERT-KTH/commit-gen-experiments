BLEU SCORE: 0.23217460403031903

TEST MSG: Issue # 410 : Terms into links
GENERATED MSG: Issue # 410 : ' XHTML - style rules ' section

TEST DIFF (one line): diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm <nl> index 2d6691a . . 1590468 100644 <nl> - - - a / src / xdocs / writingjavadocchecks . xml . vm <nl> + + + b / src / xdocs / writingjavadocchecks . xml . vm <nl> @ @ - 53 , 14 + 53 , 14 @ @ public class MyClass { <nl> Checkstyle can not parse something that looks like an HTML , so limitation appear . <nl> < / p > <nl> < p > <nl> - The comment should be written in < a href = " # XHTML - style _ rules " > XHTML - style < / a > to build nested AST Tree that most Checks expect . This means that every HTML tag should have matching end HTML tag or it is a void tag . <nl> + The comment should be written in < a href = " # XHTML - style _ rules " > XHTML - style < / a > to build nested AST Tree that most Checks expect . This means that every HTML tag should have matching end HTML tag or it is a < a href = " https : / / www . w3 . org / TR / html - markup / syntax . html # void - element " > void element < / a > . <nl> < / p > <nl> < p > <nl> The only exceptions are HTML 4 tags whose end tag is optional , so , Checkstyle won ' t show error about missing end tag , however , it leads to broken XHTML structure and as result leads to <nl> not - nested content of the HTML tags in Abstract Syntax Tree of the Javadoc comment . <nl> < br / > <nl> In other words if HTML tags are not closed Javadoc grammar cannot determine content of these tags , <nl> - so structure of the parse tree will not be nested like it is while using XHTML - style code . <nl> + so structure of the parse tree will not be nested like it is while using < a href = " # XHTML - style _ rules " > XHTML - style < / a > code . <nl> It is done just to not fail on every Javadoc comment , because there are tons of using unclosed tags , etc . <nl> < / p > <nl> < p > <nl> @ @ - 71 , 7 + 71 , 7 @ @ public class MyClass { <nl> < section name = " XHTML - style rules " > <nl> < ul > <nl> < li > Document Structure elements ( DOCTYPE , & lt ; html & gt ; , & lt ; body & gt ; , etc ) are not mandatory . < / li > <nl> - < li > Elements must always be closed , except HTML4 elements whose end tag is optional and HTML4 void elements . See < a href = " # HTML _ Code _ In _ Javadoc _ Comments " > HTML Code In Javadoc Comments < / a > section < / li > <nl> + < li > Elements must always be closed , except HTML4 elements whose end tag is optional and HTML4 < a href = " https : / / www . w3 . org / TR / html - markup / syntax . html # void - element " > void elements < / a > . See < a href = " # HTML _ Code _ In _ Javadoc _ Comments " > HTML Code In Javadoc Comments < / a > section < / li > <nl> < li > XHTML elements can be either in lowercase or in uppercase < / li > <nl> < li > Attribute names can be either in lowercase or in uppercase < / li > <nl> < li > Attribute values can be either quoted or not be quoted < / li > <nl> @ @ - 290 , 7 + 290 , 7 @ @ class MyCheck extends AbstractJavadocCheck { <nl> < p > <nl> If Checkstyle meets unknown tag ( for example HTML5 tag ) <nl> it doesn ' t fail and parses this tag as < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # HTML _ TAG " > HTML _ TAG < / a > Javadoc token type . <nl> - Just follow XHTML - style rules to make Checkstyle javadoc parser make nested AST , even though tags are unknown . <nl> + Just follow < a href = " # XHTML - style _ rules " > XHTML - style rules < / a > to make Checkstyle javadoc parser make nested AST , even though tags are unknown . <nl> <nl> < source > < ! [ CDATA [ <nl> < audio > < source src = " horse . ogg " type = " audio / ogg " / > < / audio > <nl> @ @ - 344 , 7 + 344 , 7 @ @ JAVADOC - > < audio > < source src = " horse . ogg " type = " audio / ogg " / > < / audio > < EOF > [ 0 : 0 ] <nl> < tr > <nl> < td > <nl> 1 ) Unclosed paragraph HTML tag . As you see in the tree , content of the paragraph tag is not nested to this tag . <nl> - That is because HTML tags are not closed by pair tag & lt ; / p & gt ; , and Checkstyle requires XHTML - style code to predictably parse Javadoc comments . <nl> + That is because HTML tags are not closed by pair tag & lt ; / p & gt ; , and Checkstyle requires < a href = " # XHTML - style _ rules " > XHTML - style < / a > code to predictably parse Javadoc comments . <nl> < / td > <nl> < td > <nl> 2 ) Here is correct version with open and closed HTML tags .
NEAREST DIFF (one line): diff - - git a / . travis . yml b / . travis . yml <nl> index 52af448 . . d17e6dc 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 343 , 7 + 343 , 8 @ @ matrix : <nl> # testing of PR format <nl> - env : <nl> - DESC = " test Issue ref in PR description " <nl> - - CMD0 = " if [ [ ! $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi " <nl> + - CMD _ = " set - e " <nl> + - CMD0 = " & & if [ [ ! $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi " <nl> - CMD1 = " & & LINK _ COMMITS = https : / / api . github . com / repos / checkstyle / checkstyle / pulls / $ TRAVIS _ PULL _ REQUEST / commits " <nl> - CMD2 = " & & COMMITS = \ $ ( curl - s - H ' Authorization : token $ GITHUB _ AUTH _ TOKEN ' \ $ LINK _ COMMITS | jq ' . [ 0 ] | . commit . message ' ) " <nl> - CMD3 = " & & echo ' Messages from github : ' \ $ { COMMITS : 0 : 60 } . . . " <nl> @ @ - 368 , 7 + 369 , 7 @ @ matrix : <nl> - CMD22 = " else " <nl> - CMD23 = " echo ' PR validation failed . ' & & false ; " <nl> - CMD24 = " fi " <nl> - - CMD = $ CMD0 $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 $ CMD8 $ CMD9 $ CMD10 $ CMD11 $ CMD12 $ CMD13 $ CMD14 $ CMD15 <nl> + - CMD = $ CMD _ $ CMD0 $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 $ CMD8 $ CMD9 $ CMD10 $ CMD11 $ CMD12 $ CMD13 $ CMD14 $ CMD15 <nl> - CMD = $ CMD $ CMD16 $ CMD17 $ CMD18 $ CMD19 $ CMD20 $ CMD21 $ CMD22 $ CMD23 $ CMD24 <nl> - COVERAGE _ CMD = " " <nl>

TEST DIFF:
diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm 
 index 2d6691a . . 1590468 100644 
 - - - a / src / xdocs / writingjavadocchecks . xml . vm 
 + + + b / src / xdocs / writingjavadocchecks . xml . vm 
 @ @ - 53 , 14 + 53 , 14 @ @ public class MyClass { 
 Checkstyle can not parse something that looks like an HTML , so limitation appear . 
 < / p > 
 < p > 
 - The comment should be written in < a href = " # XHTML - style _ rules " > XHTML - style < / a > to build nested AST Tree that most Checks expect . This means that every HTML tag should have matching end HTML tag or it is a void tag . 
 + The comment should be written in < a href = " # XHTML - style _ rules " > XHTML - style < / a > to build nested AST Tree that most Checks expect . This means that every HTML tag should have matching end HTML tag or it is a < a href = " https : / / www . w3 . org / TR / html - markup / syntax . html # void - element " > void element < / a > . 
 < / p > 
 < p > 
 The only exceptions are HTML 4 tags whose end tag is optional , so , Checkstyle won ' t show error about missing end tag , however , it leads to broken XHTML structure and as result leads to 
 not - nested content of the HTML tags in Abstract Syntax Tree of the Javadoc comment . 
 < br / > 
 In other words if HTML tags are not closed Javadoc grammar cannot determine content of these tags , 
 - so structure of the parse tree will not be nested like it is while using XHTML - style code . 
 + so structure of the parse tree will not be nested like it is while using < a href = " # XHTML - style _ rules " > XHTML - style < / a > code . 
 It is done just to not fail on every Javadoc comment , because there are tons of using unclosed tags , etc . 
 < / p > 
 < p > 
 @ @ - 71 , 7 + 71 , 7 @ @ public class MyClass { 
 < section name = " XHTML - style rules " > 
 < ul > 
 < li > Document Structure elements ( DOCTYPE , & lt ; html & gt ; , & lt ; body & gt ; , etc ) are not mandatory . < / li > 
 - < li > Elements must always be closed , except HTML4 elements whose end tag is optional and HTML4 void elements . See < a href = " # HTML _ Code _ In _ Javadoc _ Comments " > HTML Code In Javadoc Comments < / a > section < / li > 
 + < li > Elements must always be closed , except HTML4 elements whose end tag is optional and HTML4 < a href = " https : / / www . w3 . org / TR / html - markup / syntax . html # void - element " > void elements < / a > . See < a href = " # HTML _ Code _ In _ Javadoc _ Comments " > HTML Code In Javadoc Comments < / a > section < / li > 
 < li > XHTML elements can be either in lowercase or in uppercase < / li > 
 < li > Attribute names can be either in lowercase or in uppercase < / li > 
 < li > Attribute values can be either quoted or not be quoted < / li > 
 @ @ - 290 , 7 + 290 , 7 @ @ class MyCheck extends AbstractJavadocCheck { 
 < p > 
 If Checkstyle meets unknown tag ( for example HTML5 tag ) 
 it doesn ' t fail and parses this tag as < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # HTML _ TAG " > HTML _ TAG < / a > Javadoc token type . 
 - Just follow XHTML - style rules to make Checkstyle javadoc parser make nested AST , even though tags are unknown . 
 + Just follow < a href = " # XHTML - style _ rules " > XHTML - style rules < / a > to make Checkstyle javadoc parser make nested AST , even though tags are unknown . 
 
 < source > < ! [ CDATA [ 
 < audio > < source src = " horse . ogg " type = " audio / ogg " / > < / audio > 
 @ @ - 344 , 7 + 344 , 7 @ @ JAVADOC - > < audio > < source src = " horse . ogg " type = " audio / ogg " / > < / audio > < EOF > [ 0 : 0 ] 
 < tr > 
 < td > 
 1 ) Unclosed paragraph HTML tag . As you see in the tree , content of the paragraph tag is not nested to this tag . 
 - That is because HTML tags are not closed by pair tag & lt ; / p & gt ; , and Checkstyle requires XHTML - style code to predictably parse Javadoc comments . 
 + That is because HTML tags are not closed by pair tag & lt ; / p & gt ; , and Checkstyle requires < a href = " # XHTML - style _ rules " > XHTML - style < / a > code to predictably parse Javadoc comments . 
 < / td > 
 < td > 
 2 ) Here is correct version with open and closed HTML tags .

NEAREST DIFF:
diff - - git a / . travis . yml b / . travis . yml 
 index 52af448 . . d17e6dc 100644 
 - - - a / . travis . yml 
 + + + b / . travis . yml 
 @ @ - 343 , 7 + 343 , 8 @ @ matrix : 
 # testing of PR format 
 - env : 
 - DESC = " test Issue ref in PR description " 
 - - CMD0 = " if [ [ ! $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi " 
 + - CMD _ = " set - e " 
 + - CMD0 = " & & if [ [ ! $ TRAVIS _ PULL _ REQUEST = ~ ^ ( [ 0 - 9 ] * ) $ ] ] ; then exit 0 ; fi " 
 - CMD1 = " & & LINK _ COMMITS = https : / / api . github . com / repos / checkstyle / checkstyle / pulls / $ TRAVIS _ PULL _ REQUEST / commits " 
 - CMD2 = " & & COMMITS = \ $ ( curl - s - H ' Authorization : token $ GITHUB _ AUTH _ TOKEN ' \ $ LINK _ COMMITS | jq ' . [ 0 ] | . commit . message ' ) " 
 - CMD3 = " & & echo ' Messages from github : ' \ $ { COMMITS : 0 : 60 } . . . " 
 @ @ - 368 , 7 + 369 , 7 @ @ matrix : 
 - CMD22 = " else " 
 - CMD23 = " echo ' PR validation failed . ' & & false ; " 
 - CMD24 = " fi " 
 - - CMD = $ CMD0 $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 $ CMD8 $ CMD9 $ CMD10 $ CMD11 $ CMD12 $ CMD13 $ CMD14 $ CMD15 
 + - CMD = $ CMD _ $ CMD0 $ CMD1 $ CMD2 $ CMD3 $ CMD4 $ CMD5 $ CMD6 $ CMD7 $ CMD8 $ CMD9 $ CMD10 $ CMD11 $ CMD12 $ CMD13 $ CMD14 $ CMD15 
 - CMD = $ CMD $ CMD16 $ CMD17 $ CMD18 $ CMD19 $ CMD20 $ CMD21 $ CMD22 $ CMD23 $ CMD24 
 - COVERAGE _ CMD = " " 

