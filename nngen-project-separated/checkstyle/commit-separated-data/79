BLEU SCORE: 0.05816635421147516

TEST MSG: Issue # 6381 : Incorrect warning for empty lambda bodies with google _ checks . xml
GENERATED MSG: Issue # 3951 : update related config and ITs of METHOD _ REF option of SeparatorWrap

TEST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index b7ac7d4 . . 86c3cdb 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 6 , 7 + 6 , 7 @ @ <nl> <nl> < suppressions > <nl> < ! - - can ' t split long messages between lines - - > <nl> - < suppress checks = " RegexpSingleline " files = " google _ checks \ . xml " lines = " 37 , 77 " / > <nl> + < suppress checks = " RegexpSingleline " files = " google _ checks \ . xml " lines = " 37 , 78 " / > <nl> <nl> < suppress checks = " FileLength " <nl> files = " TokenTypes . java | IndentationCheckTest . java " <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java <nl> index 7017fae . . e0765e4 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java <nl> @ @ - 64 , 7 + 64 , 6 @ @ public class WhitespaceAroundTest extends AbstractModuleTestSupport { <nl> " 150 : 20 : " + getCheckMessage ( messages , msgPreceded , " : " ) , <nl> " 249 : 14 : " + getCheckMessage ( messages , msgPreceded , " - > " ) , <nl> " 250 : 15 : " + getCheckMessage ( messages , msgFollowed , " - > " ) , <nl> - " 250 : 17 : " + getCheckMessage ( messages , msgPreceded , " { " ) , <nl> } ; <nl> <nl> final String filePath = getPath ( " InputWhitespaceAroundBasic . java " ) ; <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java <nl> index 27824e1 . . 9bf408b 100644 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java <nl> @ @ - 248 , 7 + 248 , 8 @ @ class NewGoogleOperators <nl> <nl> l = ( ) - > { } ; / / warn <nl> l = ( ) - > { } ; / / warn <nl> - l = ( ) - > { } ; <nl> + l = ( ) - > { } ; / / ok <nl> + l = ( ) - > { } ; / / ok <nl> <nl> java . util . Arrays . sort ( null , String : : compareToIgnoreCase ) ; <nl> java . util . Arrays . sort ( null , String : : compareToIgnoreCase ) ; <nl> diff - - git a / src / main / resources / google _ checks . xml b / src / main / resources / google _ checks . xml <nl> index 2ad6787 . . 5cf003d 100644 <nl> - - - a / src / main / resources / google _ checks . xml <nl> + + + b / src / main / resources / google _ checks . xml <nl> @ @ - 70 , 6 + 70 , 7 @ @ <nl> < / module > <nl> < module name = " WhitespaceAround " > <nl> < property name = " allowEmptyConstructors " value = " true " / > <nl> + < property name = " allowEmptyLambdas " value = " true " / > <nl> < property name = " allowEmptyMethods " value = " true " / > <nl> < property name = " allowEmptyTypes " value = " true " / > <nl> < property name = " allowEmptyLoops " value = " true " / >
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / AvoidNestedBlocksCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / AvoidNestedBlocksCheckTest . java <nl> index 172e003 . . e3ef07c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / AvoidNestedBlocksCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / AvoidNestedBlocksCheckTest . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ public class AvoidNestedBlocksCheckTest <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " blocks " + File . separator + filename ) ; <nl> + + " blocks " + File . separator + " avoidnestedblocks " + File . separator + filename ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class AvoidNestedBlocksCheckTest <nl> " 50 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NESTED ) , <nl> " 58 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NESTED ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputNestedBlocks . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputAvoidNestedBlocksDefault . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 72 , 7 + 72 , 7 @ @ public class AvoidNestedBlocksCheckTest <nl> " 44 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NESTED ) , <nl> " 58 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NESTED ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputNestedBlocks . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputAvoidNestedBlocksDefault . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputNestedBlocks . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputNestedBlocks . java <nl> deleted file mode 100644 <nl> index d071961 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputNestedBlocks . java <nl> + + + / dev / null <nl> @ @ - 1 , 63 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2001 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks . blocks ; <nl> - <nl> - / * * <nl> - * Test case for finding nested blocks . <nl> - * @ author lkuehne <nl> - * * / <nl> - class InputNestedBlocks <nl> - { <nl> - static <nl> - { / / OK <nl> - } <nl> - <nl> - public void method ( ) <nl> - { <nl> - int x = 0 ; <nl> - <nl> - / / if ( condition that is not important anymore ) <nl> - { / / nested block , should be marked <nl> - int z = 1 ; <nl> - int y = z ; <nl> - } <nl> - <nl> - if ( x = = 1 ) <nl> - { / / OK <nl> - x = 2 ; <nl> - } <nl> - <nl> - / / case statements are a bit complicated , <nl> - / / they do not have its own variable scope by default . <nl> - / / Hence it may be OK in some development teams to allow <nl> - / / nested blocks if they are the complete case body . <nl> - switch ( x ) <nl> - { <nl> - case 0 : <nl> - / / OK <nl> - x = 3 ; <nl> - break ; <nl> - case 1 : <nl> - / / Not OK , SLIST is not complete case body <nl> - { <nl> - x = 1 ; <nl> - } <nl> - break ; <nl> - case 2 : <nl> - / / OK if allowInSwitchCase is true , SLIST is complete case body <nl> - { <nl> - x = 1 ; <nl> - break ; <nl> - } <nl> - case 3 : / / test fallthrough <nl> - default : <nl> - / / Not OK , SLIST is not complete case body <nl> - System . identityHashCode ( " Hello " ) ; <nl> - { <nl> - x = 2 ; <nl> - } <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / avoidnestedblocks / InputAvoidNestedBlocksDefault . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / avoidnestedblocks / InputAvoidNestedBlocksDefault . java <nl> new file mode 100644 <nl> index 0000000 . . 0b8d543 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / avoidnestedblocks / InputAvoidNestedBlocksDefault . java <nl> @ @ - 0 , 0 + 1 , 63 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . blocks . avoidnestedblocks ; <nl> + <nl> + / * * <nl> + * Test case for finding nested blocks . <nl> + * @ author lkuehne <nl> + * * / <nl> + class InputAvoidNestedBlocksDefault <nl> + { <nl> + static <nl> + { / / OK <nl> + } <nl> + <nl> + public void method ( ) <nl> + { <nl> + int x = 0 ; <nl> + <nl> + / / if ( condition that is not important anymore ) <nl> + { / / nested block , should be marked <nl> + int z = 1 ; <nl> + int y = z ; <nl> + } <nl> + <nl> + if ( x = = 1 ) <nl> + { / / OK <nl> + x = 2 ; <nl> + } <nl> + <nl> + / / case statements are a bit complicated , <nl> + / / they do not have its own variable scope by default . <nl> + / / Hence it may be OK in some development teams to allow <nl> + / / nested blocks if they are the complete case body . <nl> + switch ( x ) <nl> + { <nl> + case 0 : <nl> + / / OK <nl> + x = 3 ; <nl> + break ; <nl> + case 1 : <nl> + / / Not OK , SLIST is not complete case body <nl> + { <nl> + x = 1 ; <nl> + } <nl> + break ; <nl> + case 2 : <nl> + / / OK if allowInSwitchCase is true , SLIST is complete case body <nl> + { <nl> + x = 1 ; <nl> + break ; <nl> + } <nl> + case 3 : / / test fallthrough <nl> + default : <nl> + / / Not OK , SLIST is not complete case body <nl> + System . identityHashCode ( " Hello " ) ; <nl> + { <nl> + x = 2 ; <nl> + } <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index b7ac7d4 . . 86c3cdb 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 6 , 7 + 6 , 7 @ @ 
 
 < suppressions > 
 < ! - - can ' t split long messages between lines - - > 
 - < suppress checks = " RegexpSingleline " files = " google _ checks \ . xml " lines = " 37 , 77 " / > 
 + < suppress checks = " RegexpSingleline " files = " google _ checks \ . xml " lines = " 37 , 78 " / > 
 
 < suppress checks = " FileLength " 
 files = " TokenTypes . java | IndentationCheckTest . java " 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java 
 index 7017fae . . e0765e4 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / WhitespaceAroundTest . java 
 @ @ - 64 , 7 + 64 , 6 @ @ public class WhitespaceAroundTest extends AbstractModuleTestSupport { 
 " 150 : 20 : " + getCheckMessage ( messages , msgPreceded , " : " ) , 
 " 249 : 14 : " + getCheckMessage ( messages , msgPreceded , " - > " ) , 
 " 250 : 15 : " + getCheckMessage ( messages , msgFollowed , " - > " ) , 
 - " 250 : 17 : " + getCheckMessage ( messages , msgPreceded , " { " ) , 
 } ; 
 
 final String filePath = getPath ( " InputWhitespaceAroundBasic . java " ) ; 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java 
 index 27824e1 . . 9bf408b 100644 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter4formatting / rule462horizontalwhitespace / InputWhitespaceAroundBasic . java 
 @ @ - 248 , 7 + 248 , 8 @ @ class NewGoogleOperators 
 
 l = ( ) - > { } ; / / warn 
 l = ( ) - > { } ; / / warn 
 - l = ( ) - > { } ; 
 + l = ( ) - > { } ; / / ok 
 + l = ( ) - > { } ; / / ok 
 
 java . util . Arrays . sort ( null , String : : compareToIgnoreCase ) ; 
 java . util . Arrays . sort ( null , String : : compareToIgnoreCase ) ; 
 diff - - git a / src / main / resources / google _ checks . xml b / src / main / resources / google _ checks . xml 
 index 2ad6787 . . 5cf003d 100644 
 - - - a / src / main / resources / google _ checks . xml 
 + + + b / src / main / resources / google _ checks . xml 
 @ @ - 70 , 6 + 70 , 7 @ @ 
 < / module > 
 < module name = " WhitespaceAround " > 
 < property name = " allowEmptyConstructors " value = " true " / > 
 + < property name = " allowEmptyLambdas " value = " true " / > 
 < property name = " allowEmptyMethods " value = " true " / > 
 < property name = " allowEmptyTypes " value = " true " / > 
 < property name = " allowEmptyLoops " value = " true " / >

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / AvoidNestedBlocksCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / AvoidNestedBlocksCheckTest . java 
 index 172e003 . . e3ef07c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / AvoidNestedBlocksCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / AvoidNestedBlocksCheckTest . java 
 @ @ - 36 , 7 + 36 , 7 @ @ public class AvoidNestedBlocksCheckTest 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " blocks " + File . separator + filename ) ; 
 + + " blocks " + File . separator + " avoidnestedblocks " + File . separator + filename ) ; 
 } 
 
 @ Test 
 @ @ - 57 , 7 + 57 , 7 @ @ public class AvoidNestedBlocksCheckTest 
 " 50 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NESTED ) , 
 " 58 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NESTED ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputNestedBlocks . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputAvoidNestedBlocksDefault . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 72 , 7 + 72 , 7 @ @ public class AvoidNestedBlocksCheckTest 
 " 44 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NESTED ) , 
 " 58 : 17 : " + getCheckMessage ( MSG _ KEY _ BLOCK _ NESTED ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputNestedBlocks . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputAvoidNestedBlocksDefault . java " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputNestedBlocks . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputNestedBlocks . java 
 deleted file mode 100644 
 index d071961 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / InputNestedBlocks . java 
 + + + / dev / null 
 @ @ - 1 , 63 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2001 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks . blocks ; 
 - 
 - / * * 
 - * Test case for finding nested blocks . 
 - * @ author lkuehne 
 - * * / 
 - class InputNestedBlocks 
 - { 
 - static 
 - { / / OK 
 - } 
 - 
 - public void method ( ) 
 - { 
 - int x = 0 ; 
 - 
 - / / if ( condition that is not important anymore ) 
 - { / / nested block , should be marked 
 - int z = 1 ; 
 - int y = z ; 
 - } 
 - 
 - if ( x = = 1 ) 
 - { / / OK 
 - x = 2 ; 
 - } 
 - 
 - / / case statements are a bit complicated , 
 - / / they do not have its own variable scope by default . 
 - / / Hence it may be OK in some development teams to allow 
 - / / nested blocks if they are the complete case body . 
 - switch ( x ) 
 - { 
 - case 0 : 
 - / / OK 
 - x = 3 ; 
 - break ; 
 - case 1 : 
 - / / Not OK , SLIST is not complete case body 
 - { 
 - x = 1 ; 
 - } 
 - break ; 
 - case 2 : 
 - / / OK if allowInSwitchCase is true , SLIST is complete case body 
 - { 
 - x = 1 ; 
 - break ; 
 - } 
 - case 3 : / / test fallthrough 
 - default : 
 - / / Not OK , SLIST is not complete case body 
 - System . identityHashCode ( " Hello " ) ; 
 - { 
 - x = 2 ; 
 - } 
 - } 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / avoidnestedblocks / InputAvoidNestedBlocksDefault . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / avoidnestedblocks / InputAvoidNestedBlocksDefault . java 
 new file mode 100644 
 index 0000000 . . 0b8d543 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / blocks / avoidnestedblocks / InputAvoidNestedBlocksDefault . java 
 @ @ - 0 , 0 + 1 , 63 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . blocks . avoidnestedblocks ; 
 + 
 + / * * 
 + * Test case for finding nested blocks . 
 + * @ author lkuehne 
 + * * / 
 + class InputAvoidNestedBlocksDefault 
 + { 
 + static 
 + { / / OK 
 + } 
 + 
 + public void method ( ) 
 + { 
 + int x = 0 ; 
 + 
 + / / if ( condition that is not important anymore ) 
 + { / / nested block , should be marked 
 + int z = 1 ; 
 + int y = z ; 
 + } 
 + 
 + if ( x = = 1 ) 
 + { / / OK 
 + x = 2 ; 
 + } 
 + 
 + / / case statements are a bit complicated , 
 + / / they do not have its own variable scope by default . 
 + / / Hence it may be OK in some development teams to allow 
 + / / nested blocks if they are the complete case body . 
 + switch ( x ) 
 + { 
 + case 0 : 
 + / / OK 
 + x = 3 ; 
 + break ; 
 + case 1 : 
 + / / Not OK , SLIST is not complete case body 
 + { 
 + x = 1 ; 
 + } 
 + break ; 
 + case 2 : 
 + / / OK if allowInSwitchCase is true , SLIST is complete case body 
 + { 
 + x = 1 ; 
 + break ; 
 + } 
 + case 3 : / / test fallthrough 
 + default : 
 + / / Not OK , SLIST is not complete case body 
 + System . identityHashCode ( " Hello " ) ; 
 + { 
 + x = 2 ; 
 + } 
 + } 
 + } 
 + }
