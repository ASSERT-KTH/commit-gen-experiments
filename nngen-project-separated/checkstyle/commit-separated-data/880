BLEU SCORE: 0.04027248192421852

TEST MSG: Pull # 4126 : Fix typo in @ serialField javadoc tag validation
GENERATED MSG: Fix various typos . # 1555

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfo . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfo . java <nl> index 9389dc9 . . 5dec86a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfo . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfo . java <nl> @ @ - 265 , 7 + 265 , 7 @ @ public enum JavadocTagInfo { <nl> <nl> return astType = = TokenTypes . VARIABLE _ DEF <nl> & & varType . getFirstChild ( ) . getType ( ) = = TokenTypes . ARRAY _ DECLARATOR <nl> - & & " ObjectStreafield " . equals ( varType . getFirstChild ( ) . getText ( ) ) ; <nl> + & & " ObjectStreamField " . equals ( varType . getFirstChild ( ) . getText ( ) ) ; <nl> } <nl> } , <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfoTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfoTest . java <nl> index 211f91a . . ba1ef59 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfoTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfoTest . java <nl> @ @ - 297 , 7 + 297 , 7 @ @ public class JavadocTagInfoTest { <nl> ast . setFirstChild ( astChild ) ; <nl> final DetailAST astChild2 = new DetailAST ( ) ; <nl> astChild2 . setType ( TokenTypes . ARRAY _ DECLARATOR ) ; <nl> - astChild2 . setText ( " ObjectStreafield " ) ; <nl> + astChild2 . setText ( " ObjectStreamField " ) ; <nl> astChild . setFirstChild ( astChild2 ) ; <nl> <nl> final int [ ] validTypes = {
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> index 2bfce71 . . f461cdb 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> package com . google . checkstyle . test . base ; <nl> <nl> + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> + <nl> import java . io . File ; <nl> import java . util . List ; <nl> <nl> @ @ - 22 , 6 + 24 , 6 @ @ public class ConfigValidationTest extends BaseCheckTestSupport { <nl> <nl> / / runs over all input files ; <nl> / / as severity level is " warning " , no errors expected <nl> - verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , new String [ 0 ] , null ) ; <nl> + verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , EMPTY _ STRING _ ARRAY , null ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> index 37d6caf . . 44a98ff 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ BYTE _ ARRAY ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNotEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> @ @ - 115 , 7 + 116 , 7 @ @ public class PackageNamesLoaderTest { <nl> <nl> final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; <nl> when ( mockConnection . getInputStream ( ) ) . thenReturn ( <nl> - new ByteArrayInputStream ( new byte [ ] { } ) ) ; <nl> + new ByteArrayInputStream ( EMPTY _ BYTE _ ARRAY ) ) ; <nl> <nl> URL url = getMockUrl ( mockConnection ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> index f57183f . . 509c333 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . api ; <nl> <nl> + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ BYTE _ ARRAY ; <nl> + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ OBJECT _ ARRAY ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . powermock . api . mockito . PowerMockito . mock ; <nl> import static org . powermock . api . mockito . PowerMockito . when ; <nl> @ @ - 74 , 7 + 76 , 7 @ @ public class LocalizedMessageTest { <nl> ClassLoader classloader = mock ( ClassLoader . class ) ; <nl> final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; <nl> when ( mockConnection . getInputStream ( ) ) . thenReturn ( <nl> - new ByteArrayInputStream ( new byte [ ] { } ) ) ; <nl> + new ByteArrayInputStream ( EMPTY _ BYTE _ ARRAY ) ) ; <nl> <nl> URL url = getMockUrl ( mockConnection ) ; <nl> String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; <nl> @ @ - 139 , 7 + 141 , 7 @ @ public class LocalizedMessageTest { <nl> <nl> private static LocalizedMessage createSampleLocalizedMessage ( ) { <nl> return new LocalizedMessage ( 0 , " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> - " empty . statement " , new Object [ ] { } , " module " , LocalizedMessage . class , null ) ; <nl> + " empty . statement " , EMPTY _ OBJECT _ ARRAY , " module " , LocalizedMessage . class , null ) ; <nl> } <nl> <nl> @ After

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfo . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfo . java 
 index 9389dc9 . . 5dec86a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfo . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfo . java 
 @ @ - 265 , 7 + 265 , 7 @ @ public enum JavadocTagInfo { 
 
 return astType = = TokenTypes . VARIABLE _ DEF 
 & & varType . getFirstChild ( ) . getType ( ) = = TokenTypes . ARRAY _ DECLARATOR 
 - & & " ObjectStreafield " . equals ( varType . getFirstChild ( ) . getText ( ) ) ; 
 + & & " ObjectStreamField " . equals ( varType . getFirstChild ( ) . getText ( ) ) ; 
 } 
 } , 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfoTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfoTest . java 
 index 211f91a . . ba1ef59 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfoTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagInfoTest . java 
 @ @ - 297 , 7 + 297 , 7 @ @ public class JavadocTagInfoTest { 
 ast . setFirstChild ( astChild ) ; 
 final DetailAST astChild2 = new DetailAST ( ) ; 
 astChild2 . setType ( TokenTypes . ARRAY _ DECLARATOR ) ; 
 - astChild2 . setText ( " ObjectStreafield " ) ; 
 + astChild2 . setText ( " ObjectStreamField " ) ; 
 astChild . setFirstChild ( astChild2 ) ; 
 
 final int [ ] validTypes = {

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 index 2bfce71 . . f461cdb 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package com . google . checkstyle . test . base ; 
 
 + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 + 
 import java . io . File ; 
 import java . util . List ; 
 
 @ @ - 22 , 6 + 24 , 6 @ @ public class ConfigValidationTest extends BaseCheckTestSupport { 
 
 / / runs over all input files ; 
 / / as severity level is " warning " , no errors expected 
 - verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , new String [ 0 ] , null ) ; 
 + verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , EMPTY _ STRING _ ARRAY , null ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 index 37d6caf . . 44a98ff 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package com . puppycrawl . tools . checkstyle ; 
 
 + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ BYTE _ ARRAY ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertNotEquals ; 
 import static org . junit . Assert . assertTrue ; 
 @ @ - 115 , 7 + 116 , 7 @ @ public class PackageNamesLoaderTest { 
 
 final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; 
 when ( mockConnection . getInputStream ( ) ) . thenReturn ( 
 - new ByteArrayInputStream ( new byte [ ] { } ) ) ; 
 + new ByteArrayInputStream ( EMPTY _ BYTE _ ARRAY ) ) ; 
 
 URL url = getMockUrl ( mockConnection ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 index f57183f . . 509c333 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 
 package com . puppycrawl . tools . checkstyle . api ; 
 
 + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ BYTE _ ARRAY ; 
 + import static org . apache . commons . lang3 . ArrayUtils . EMPTY _ OBJECT _ ARRAY ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . powermock . api . mockito . PowerMockito . mock ; 
 import static org . powermock . api . mockito . PowerMockito . when ; 
 @ @ - 74 , 7 + 76 , 7 @ @ public class LocalizedMessageTest { 
 ClassLoader classloader = mock ( ClassLoader . class ) ; 
 final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; 
 when ( mockConnection . getInputStream ( ) ) . thenReturn ( 
 - new ByteArrayInputStream ( new byte [ ] { } ) ) ; 
 + new ByteArrayInputStream ( EMPTY _ BYTE _ ARRAY ) ) ; 
 
 URL url = getMockUrl ( mockConnection ) ; 
 String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; 
 @ @ - 139 , 7 + 141 , 7 @ @ public class LocalizedMessageTest { 
 
 private static LocalizedMessage createSampleLocalizedMessage ( ) { 
 return new LocalizedMessage ( 0 , " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 - " empty . statement " , new Object [ ] { } , " module " , LocalizedMessage . class , null ) ; 
 + " empty . statement " , EMPTY _ OBJECT _ ARRAY , " module " , LocalizedMessage . class , null ) ; 
 } 
 
 @ After
