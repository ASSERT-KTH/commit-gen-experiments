BLEU SCORE: 0.018977423949228533

TEST MSG: minor : remove Check suffix in SuppressionXpathFilter Description
GENERATED MSG: added releasenotes for old releases , rewrote 2 . 2 releasenotes

TEST DIFF (one line): diff - - git a / src / xdocs / config _ filters . xml b / src / xdocs / config _ filters . xml <nl> index 613aed1 . . 22e37ef 100644 <nl> - - - a / src / xdocs / config _ filters . xml <nl> + + + b / src / xdocs / config _ filters . xml <nl> @ @ - 664 , 91 + 664 , 91 @ @ public class UserService { <nl> checks : <nl> < / p > <nl> < ul > <nl> - < li > AbstractClassNameCheck < / li > <nl> - < li > AnonInnerLengthCheck < / li > <nl> - < li > ArrayTypeStyleCheck < / li > <nl> - < li > AvoidInlineConditionalsCheck < / li > <nl> - < li > AvoidNestedBlocksCheck < / li > <nl> - < li > BooleanExpressionComplexityCheck < / li > <nl> - < li > CatchParameterNameCheck < / li > <nl> - < li > ClassDataAbstractionCouplingCheck < / li > <nl> - < li > ClassFanOutComplexityCheck < / li > <nl> - < li > ClassMemberImpliedModifierCheck < / li > <nl> - < li > ClassTypeParameterNameCheck < / li > <nl> - < li > ConstantNameCheck < / li > <nl> - < li > CovariantEqualsCheck < / li > <nl> - < li > CyclomaticComplexityCheck < / li > <nl> - < li > DeclarationOrderCheck < / li > <nl> - < li > DefaultComesLastCheck < / li > <nl> - < li > DescendantTokenCheck < / li > <nl> - < li > DesignForExtensionCheck < / li > <nl> - < li > EmptyBlockCheck < / li > <nl> - < li > EmptyStatementCheck < / li > <nl> - < li > EqualsAvoidNullCheck < / li > <nl> - < li > EqualsHashCodeCheck < / li > <nl> - < li > ExecutableStatementCountCheck < / li > <nl> - < li > ExplicitInitializationCheck < / li > <nl> - < li > FallThroughCheck < / li > <nl> - < li > FinalLocalVariableCheck < / li > <nl> - < li > FinalParametersCheck < / li > <nl> - < li > HiddenFieldCheck < / li > <nl> - < li > HideUtilityClassConstructorCheck < / li > <nl> - < li > IllegalInstantiationCheck < / li > <nl> - < li > IllegalTokenCheck < / li > <nl> - < li > IllegalTokenTextCheck < / li > <nl> - < li > IllegalTypeCheck < / li > <nl> - < li > InnerAssignmentCheck < / li > <nl> - < li > InnerTypeLastCheck < / li > <nl> - < li > InterfaceTypeParameterNameCheck < / li > <nl> - < li > JavadocVariableCheck < / li > <nl> - < li > JavaNCSSCheck < / li > <nl> - < li > IllegalImportCheck < / li > <nl> - < li > IllegalThrowsCheck < / li > <nl> - < li > ImportControlCheck < / li > <nl> - < li > LeftCurlyCheck < / li > <nl> - < li > LocalFinalVariableNameCheck < / li > <nl> - < li > LocalVariableNameCheck < / li > <nl> - < li > MagicNumberCheck < / li > <nl> - < li > MemberNameCheck < / li > <nl> - < li > MethodLengthCheck < / li > <nl> - < li > MethodNameCheck < / li > <nl> - < li > MethodParamPadCheck < / li > <nl> - < li > MethodTypeParameterNameCheck < / li > <nl> - < li > ModifiedControlVariableCheck < / li > <nl> - < li > ModifierOrderCheck < / li > <nl> - < li > MultipleStringLiteralsCheck < / li > <nl> - < li > MultipleVariableDeclarationsCheck < / li > <nl> - < li > MutableExceptionCheck < / li > <nl> - < li > NestedForDepthCheck < / li > <nl> - < li > NestedIfDepthCheck < / li > <nl> - < li > NestedTryDepthCheck < / li > <nl> - < li > NPathComplexityCheck < / li > <nl> - < li > OneStatementPerLineCheck < / li > <nl> - < li > OperatorWrapCheck < / li > <nl> - < li > OuterTypeNumberCheck < / li > <nl> - < li > PackageNameCheck < / li > <nl> - < li > ParameterAssignmentCheck < / li > <nl> - < li > ParameterNameCheck < / li > <nl> - < li > ParameterNumberCheck < / li > <nl> - < li > ParenPadCheck < / li > <nl> - < li > RedundantImportCheck < / li > <nl> - < li > RedundantModifierCheck < / li > <nl> - < li > RequireThisCheck < / li > <nl> - < li > ReturnCountCheck < / li > <nl> - < li > RightCurlyCheck < / li > <nl> - < li > SeparatorWrapCheck < / li > <nl> - < li > SimplifyBooleanExpressionCheck < / li > <nl> - < li > SimplifyBooleanReturnCheck < / li > <nl> - < li > StaticVariableNameCheck < / li > <nl> - < li > StringLiteralEqualityCheck < / li > <nl> - < li > SuperCloneCheck < / li > <nl> - < li > SuperFinalizeCheck < / li > <nl> - < li > SuppressWarningsCheck < / li > <nl> - < li > ThrowsCountCheck < / li > <nl> - < li > TypecastParenPadCheck < / li > <nl> - < li > TypeNameCheck < / li > <nl> - < li > UnusedImportsCheck < / li > <nl> - < li > VisibilityModifierCheck < / li > <nl> + < li > AbstractClassName < / li > <nl> + < li > AnonInnerLength < / li > <nl> + < li > ArrayTypeStyle < / li > <nl> + < li > AvoidInlineConditionals < / li > <nl> + < li > AvoidNestedBlocks < / li > <nl> + < li > BooleanExpressionComplexity < / li > <nl> + < li > CatchParameterName < / li > <nl> + < li > ClassDataAbstractionCoupling < / li > <nl> + < li > ClassFanOutComplexity < / li > <nl> + < li > ClassMemberImpliedModifier < / li > <nl> + < li > ClassTypeParameterName < / li > <nl> + < li > ConstantName < / li > <nl> + < li > CovariantEquals < / li > <nl> + < li > CyclomaticComplexity < / li > <nl> + < li > DeclarationOrder < / li > <nl> + < li > DefaultComesLast < / li > <nl> + < li > DescendantToken < / li > <nl> + < li > DesignForExtension < / li > <nl> + < li > EmptyBlock < / li > <nl> + < li > EmptyStatement < / li > <nl> + < li > EqualsAvoidNull < / li > <nl> + < li > EqualsHashCode < / li > <nl> + < li > ExecutableStatementCount < / li > <nl> + < li > ExplicitInitialization < / li > <nl> + < li > FallThrough < / li > <nl> + < li > FinalLocalVariable < / li > <nl> + < li > FinalParameters < / li > <nl> + < li > HiddenField < / li > <nl> + < li > HideUtilityClassConstructor < / li > <nl> + < li > IllegalInstantiation < / li > <nl> + < li > IllegalToken < / li > <nl> + < li > IllegalTokenText < / li > <nl> + < li > IllegalType < / li > <nl> + < li > InnerAssignment < / li > <nl> + < li > InnerTypeLast < / li > <nl> + < li > InterfaceTypeParameterName < / li > <nl> + < li > JavadocVariable < / li > <nl> + < li > JavaNCSS < / li > <nl> + < li > IllegalImport < / li > <nl> + < li > IllegalThrows < / li > <nl> + < li > ImportControl < / li > <nl> + < li > LeftCurly < / li > <nl> + < li > LocalFinalVariableName < / li > <nl> + < li > LocalVariableName < / li > <nl> + < li > MagicNumber < / li > <nl> + < li > MemberName < / li > <nl> + < li > MethodLength < / li > <nl> + < li > MethodName < / li > <nl> + < li > MethodParamPad < / li > <nl> + < li > MethodTypeParameterName < / li > <nl> + < li > ModifiedControlVariable < / li > <nl> + < li > ModifierOrder < / li > <nl> + < li > MultipleStringLiterals < / li > <nl> + < li > MultipleVariableDeclarations < / li > <nl> + < li > MutableException < / li > <nl> + < li > NestedForDepth < / li > <nl> + < li > NestedIfDepth < / li > <nl> + < li > NestedTryDepth < / li > <nl> + < li > NPathComplexity < / li > <nl> + < li > OneStatementPerLine < / li > <nl> + < li > OperatorWrap < / li > <nl> + < li > OuterTypeNumber < / li > <nl> + < li > PackageName < / li > <nl> + < li > ParameterAssignment < / li > <nl> + < li > ParameterName < / li > <nl> + < li > ParameterNumber < / li > <nl> + < li > ParenPad < / li > <nl> + < li > RedundantImport < / li > <nl> + < li > RedundantModifier < / li > <nl> + < li > RequireThis < / li > <nl> + < li > ReturnCount < / li > <nl> + < li > RightCurly < / li > <nl> + < li > SeparatorWrap < / li > <nl> + < li > SimplifyBooleanExpression < / li > <nl> + < li > SimplifyBooleanReturn < / li > <nl> + < li > StaticVariableName < / li > <nl> + < li > StringLiteralEquality < / li > <nl> + < li > SuperClone < / li > <nl> + < li > SuperFinalize < / li > <nl> + < li > SuppressWarnings < / li > <nl> + < li > ThrowsCount < / li > <nl> + < li > TypecastParenPad < / li > <nl> + < li > TypeName < / li > <nl> + < li > UnusedImports < / li > <nl> + < li > VisibilityModifier < / li > <nl> < / ul > <nl> < p > <nl> Note , that support for other Checks will be available after resolving
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java <nl> index 0629eb9 . . 8eb18dd 100644 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java <nl> @ @ - 186 , 13 + 186 , 12 @ @ public class Checker <nl> try { <nl> fireFileStarted ( aFileName ) ; <nl> final String [ ] lines = getLines ( aFileName ) ; <nl> - VerifierSingleton . getInstance ( ) . clearMessages ( ) ; <nl> - VerifierSingleton . getInstance ( ) . setLines ( lines ) ; <nl> try { <nl> / / try the 1 . 4 grammar first , this will succeed for <nl> / / all code that compiles without any warnings in JDK 1 . 4 , <nl> / / that should cover most cases <nl> - <nl> + VerifierSingleton . getInstance ( ) . clearMessages ( ) ; <nl> + VerifierSingleton . getInstance ( ) . setLines ( lines ) ; <nl> final Reader sar = new StringArrayReader ( lines ) ; <nl> final GeneratedJava14Lexer jl = new GeneratedJava14Lexer ( sar ) ; <nl> jl . setFilename ( aFileName ) ; <nl> @ @ - 209 , 6 + 208 , 8 @ @ public class Checker <nl> / / and not as a keyword <nl> <nl> / / Arghh - the pain - duplicate code ! <nl> + VerifierSingleton . getInstance ( ) . clearMessages ( ) ; <nl> + VerifierSingleton . getInstance ( ) . setLines ( lines ) ; <nl> final Reader sar = new StringArrayReader ( lines ) ; <nl> final GeneratedJavaLexer jl = new GeneratedJavaLexer ( sar ) ; <nl> jl . setFilename ( aFileName ) ; <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / InputAssertIdentifier . java b / src / tests / com / puppycrawl / tools / checkstyle / InputAssertIdentifier . java <nl> index 617f5d3 . . 8457894 100644 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / InputAssertIdentifier . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / InputAssertIdentifier . java <nl> @ @ - 4 , 6 + 4 , 8 @ @ <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> package com . puppycrawl . tools . checkstyle ; <nl> <nl> + import java . util . Properties ; <nl> + <nl> / * * <nl> * Test case for assert handling fallback . <nl> * This file uses " assert " is as an identifier , so the default grammar <nl> @ @ - 17 , 5 + 19 , 6 @ @ class InputAssertIdentifier <nl> { <nl> int assert = 1 ; <nl> int a = assert ; <nl> + final Properties p = null ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / xdocs / config _ filters . xml b / src / xdocs / config _ filters . xml 
 index 613aed1 . . 22e37ef 100644 
 - - - a / src / xdocs / config _ filters . xml 
 + + + b / src / xdocs / config _ filters . xml 
 @ @ - 664 , 91 + 664 , 91 @ @ public class UserService { 
 checks : 
 < / p > 
 < ul > 
 - < li > AbstractClassNameCheck < / li > 
 - < li > AnonInnerLengthCheck < / li > 
 - < li > ArrayTypeStyleCheck < / li > 
 - < li > AvoidInlineConditionalsCheck < / li > 
 - < li > AvoidNestedBlocksCheck < / li > 
 - < li > BooleanExpressionComplexityCheck < / li > 
 - < li > CatchParameterNameCheck < / li > 
 - < li > ClassDataAbstractionCouplingCheck < / li > 
 - < li > ClassFanOutComplexityCheck < / li > 
 - < li > ClassMemberImpliedModifierCheck < / li > 
 - < li > ClassTypeParameterNameCheck < / li > 
 - < li > ConstantNameCheck < / li > 
 - < li > CovariantEqualsCheck < / li > 
 - < li > CyclomaticComplexityCheck < / li > 
 - < li > DeclarationOrderCheck < / li > 
 - < li > DefaultComesLastCheck < / li > 
 - < li > DescendantTokenCheck < / li > 
 - < li > DesignForExtensionCheck < / li > 
 - < li > EmptyBlockCheck < / li > 
 - < li > EmptyStatementCheck < / li > 
 - < li > EqualsAvoidNullCheck < / li > 
 - < li > EqualsHashCodeCheck < / li > 
 - < li > ExecutableStatementCountCheck < / li > 
 - < li > ExplicitInitializationCheck < / li > 
 - < li > FallThroughCheck < / li > 
 - < li > FinalLocalVariableCheck < / li > 
 - < li > FinalParametersCheck < / li > 
 - < li > HiddenFieldCheck < / li > 
 - < li > HideUtilityClassConstructorCheck < / li > 
 - < li > IllegalInstantiationCheck < / li > 
 - < li > IllegalTokenCheck < / li > 
 - < li > IllegalTokenTextCheck < / li > 
 - < li > IllegalTypeCheck < / li > 
 - < li > InnerAssignmentCheck < / li > 
 - < li > InnerTypeLastCheck < / li > 
 - < li > InterfaceTypeParameterNameCheck < / li > 
 - < li > JavadocVariableCheck < / li > 
 - < li > JavaNCSSCheck < / li > 
 - < li > IllegalImportCheck < / li > 
 - < li > IllegalThrowsCheck < / li > 
 - < li > ImportControlCheck < / li > 
 - < li > LeftCurlyCheck < / li > 
 - < li > LocalFinalVariableNameCheck < / li > 
 - < li > LocalVariableNameCheck < / li > 
 - < li > MagicNumberCheck < / li > 
 - < li > MemberNameCheck < / li > 
 - < li > MethodLengthCheck < / li > 
 - < li > MethodNameCheck < / li > 
 - < li > MethodParamPadCheck < / li > 
 - < li > MethodTypeParameterNameCheck < / li > 
 - < li > ModifiedControlVariableCheck < / li > 
 - < li > ModifierOrderCheck < / li > 
 - < li > MultipleStringLiteralsCheck < / li > 
 - < li > MultipleVariableDeclarationsCheck < / li > 
 - < li > MutableExceptionCheck < / li > 
 - < li > NestedForDepthCheck < / li > 
 - < li > NestedIfDepthCheck < / li > 
 - < li > NestedTryDepthCheck < / li > 
 - < li > NPathComplexityCheck < / li > 
 - < li > OneStatementPerLineCheck < / li > 
 - < li > OperatorWrapCheck < / li > 
 - < li > OuterTypeNumberCheck < / li > 
 - < li > PackageNameCheck < / li > 
 - < li > ParameterAssignmentCheck < / li > 
 - < li > ParameterNameCheck < / li > 
 - < li > ParameterNumberCheck < / li > 
 - < li > ParenPadCheck < / li > 
 - < li > RedundantImportCheck < / li > 
 - < li > RedundantModifierCheck < / li > 
 - < li > RequireThisCheck < / li > 
 - < li > ReturnCountCheck < / li > 
 - < li > RightCurlyCheck < / li > 
 - < li > SeparatorWrapCheck < / li > 
 - < li > SimplifyBooleanExpressionCheck < / li > 
 - < li > SimplifyBooleanReturnCheck < / li > 
 - < li > StaticVariableNameCheck < / li > 
 - < li > StringLiteralEqualityCheck < / li > 
 - < li > SuperCloneCheck < / li > 
 - < li > SuperFinalizeCheck < / li > 
 - < li > SuppressWarningsCheck < / li > 
 - < li > ThrowsCountCheck < / li > 
 - < li > TypecastParenPadCheck < / li > 
 - < li > TypeNameCheck < / li > 
 - < li > UnusedImportsCheck < / li > 
 - < li > VisibilityModifierCheck < / li > 
 + < li > AbstractClassName < / li > 
 + < li > AnonInnerLength < / li > 
 + < li > ArrayTypeStyle < / li > 
 + < li > AvoidInlineConditionals < / li > 
 + < li > AvoidNestedBlocks < / li > 
 + < li > BooleanExpressionComplexity < / li > 
 + < li > CatchParameterName < / li > 
 + < li > ClassDataAbstractionCoupling < / li > 
 + < li > ClassFanOutComplexity < / li > 
 + < li > ClassMemberImpliedModifier < / li > 
 + < li > ClassTypeParameterName < / li > 
 + < li > ConstantName < / li > 
 + < li > CovariantEquals < / li > 
 + < li > CyclomaticComplexity < / li > 
 + < li > DeclarationOrder < / li > 
 + < li > DefaultComesLast < / li > 
 + < li > DescendantToken < / li > 
 + < li > DesignForExtension < / li > 
 + < li > EmptyBlock < / li > 
 + < li > EmptyStatement < / li > 
 + < li > EqualsAvoidNull < / li > 
 + < li > EqualsHashCode < / li > 
 + < li > ExecutableStatementCount < / li > 
 + < li > ExplicitInitialization < / li > 
 + < li > FallThrough < / li > 
 + < li > FinalLocalVariable < / li > 
 + < li > FinalParameters < / li > 
 + < li > HiddenField < / li > 
 + < li > HideUtilityClassConstructor < / li > 
 + < li > IllegalInstantiation < / li > 
 + < li > IllegalToken < / li > 
 + < li > IllegalTokenText < / li > 
 + < li > IllegalType < / li > 
 + < li > InnerAssignment < / li > 
 + < li > InnerTypeLast < / li > 
 + < li > InterfaceTypeParameterName < / li > 
 + < li > JavadocVariable < / li > 
 + < li > JavaNCSS < / li > 
 + < li > IllegalImport < / li > 
 + < li > IllegalThrows < / li > 
 + < li > ImportControl < / li > 
 + < li > LeftCurly < / li > 
 + < li > LocalFinalVariableName < / li > 
 + < li > LocalVariableName < / li > 
 + < li > MagicNumber < / li > 
 + < li > MemberName < / li > 
 + < li > MethodLength < / li > 
 + < li > MethodName < / li > 
 + < li > MethodParamPad < / li > 
 + < li > MethodTypeParameterName < / li > 
 + < li > ModifiedControlVariable < / li > 
 + < li > ModifierOrder < / li > 
 + < li > MultipleStringLiterals < / li > 
 + < li > MultipleVariableDeclarations < / li > 
 + < li > MutableException < / li > 
 + < li > NestedForDepth < / li > 
 + < li > NestedIfDepth < / li > 
 + < li > NestedTryDepth < / li > 
 + < li > NPathComplexity < / li > 
 + < li > OneStatementPerLine < / li > 
 + < li > OperatorWrap < / li > 
 + < li > OuterTypeNumber < / li > 
 + < li > PackageName < / li > 
 + < li > ParameterAssignment < / li > 
 + < li > ParameterName < / li > 
 + < li > ParameterNumber < / li > 
 + < li > ParenPad < / li > 
 + < li > RedundantImport < / li > 
 + < li > RedundantModifier < / li > 
 + < li > RequireThis < / li > 
 + < li > ReturnCount < / li > 
 + < li > RightCurly < / li > 
 + < li > SeparatorWrap < / li > 
 + < li > SimplifyBooleanExpression < / li > 
 + < li > SimplifyBooleanReturn < / li > 
 + < li > StaticVariableName < / li > 
 + < li > StringLiteralEquality < / li > 
 + < li > SuperClone < / li > 
 + < li > SuperFinalize < / li > 
 + < li > SuppressWarnings < / li > 
 + < li > ThrowsCount < / li > 
 + < li > TypecastParenPad < / li > 
 + < li > TypeName < / li > 
 + < li > UnusedImports < / li > 
 + < li > VisibilityModifier < / li > 
 < / ul > 
 < p > 
 Note , that support for other Checks will be available after resolving

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java 
 index 0629eb9 . . 8eb18dd 100644 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / Checker . java 
 @ @ - 186 , 13 + 186 , 12 @ @ public class Checker 
 try { 
 fireFileStarted ( aFileName ) ; 
 final String [ ] lines = getLines ( aFileName ) ; 
 - VerifierSingleton . getInstance ( ) . clearMessages ( ) ; 
 - VerifierSingleton . getInstance ( ) . setLines ( lines ) ; 
 try { 
 / / try the 1 . 4 grammar first , this will succeed for 
 / / all code that compiles without any warnings in JDK 1 . 4 , 
 / / that should cover most cases 
 - 
 + VerifierSingleton . getInstance ( ) . clearMessages ( ) ; 
 + VerifierSingleton . getInstance ( ) . setLines ( lines ) ; 
 final Reader sar = new StringArrayReader ( lines ) ; 
 final GeneratedJava14Lexer jl = new GeneratedJava14Lexer ( sar ) ; 
 jl . setFilename ( aFileName ) ; 
 @ @ - 209 , 6 + 208 , 8 @ @ public class Checker 
 / / and not as a keyword 
 
 / / Arghh - the pain - duplicate code ! 
 + VerifierSingleton . getInstance ( ) . clearMessages ( ) ; 
 + VerifierSingleton . getInstance ( ) . setLines ( lines ) ; 
 final Reader sar = new StringArrayReader ( lines ) ; 
 final GeneratedJavaLexer jl = new GeneratedJavaLexer ( sar ) ; 
 jl . setFilename ( aFileName ) ; 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / InputAssertIdentifier . java b / src / tests / com / puppycrawl / tools / checkstyle / InputAssertIdentifier . java 
 index 617f5d3 . . 8457894 100644 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / InputAssertIdentifier . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / InputAssertIdentifier . java 
 @ @ - 4 , 6 + 4 , 8 @ @ 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 package com . puppycrawl . tools . checkstyle ; 
 
 + import java . util . Properties ; 
 + 
 / * * 
 * Test case for assert handling fallback . 
 * This file uses " assert " is as an identifier , so the default grammar 
 @ @ - 17 , 5 + 19 , 6 @ @ class InputAssertIdentifier 
 { 
 int assert = 1 ; 
 int a = assert ; 
 + final Properties p = null ; 
 } 
 }
