BLEU SCORE: 0.033864985683445356

TEST MSG: doc : extend javadoc for JavadocTokenTypes . RULE _ TYPES _ OFFSET
GENERATED MSG: Issue # 1566 : JavadocStyle violation fixed

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java <nl> index 22786dc . . 954cb3e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java <nl> @ @ - 1230 , 13 + 1230 , 22 @ @ public final class JavadocTokenTypes { <nl> * / <nl> public static final int EOF = Recognizer . EOF ; <nl> <nl> - / * * Rule types offset . * / <nl> - private static final int RULE _ TYPES _ OFFSET = 10000 ; <nl> - <nl> / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / <nl> / / - - - - - - - JAVADOC TAGS DEPENDING ON RULE TYPES OFFSET - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / <nl> / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / <nl> <nl> + / * * Rule types offset . <nl> + * RULE _ TYPES _ OFFSET constant is used to split lexer tokens types and parser rules types . <nl> + * We need unique numbers for all tokens , <nl> + * ANTLR do not need this and that is why this types are mixed by used values . <nl> + * All values we can take a look at <nl> + * target / generated - sources / antlr / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . java <nl> + * For example : LEADING _ ASTERISK = 1 and RULE _ htmlElement = 1 . <nl> + * RULE _ TYPES _ OFFSET required to shift parser rules , <nl> + * to let them not overlap with types that have prefix " RULE _ " . <nl> + * / <nl> + private static final int RULE _ TYPES _ OFFSET = 10000 ; <nl> + <nl> / * * <nl> * Root node of any Javadoc comment . <nl> * Last child is always { @ link # EOF } .
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> index 18f1c8f . . f3bb88a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> @ @ - 87 , 16 + 87 , 16 @ @ public class IndentationCheck extends Check { <nl> private int basicOffset = DEFAULT _ INDENTATION ; <nl> <nl> / * * How much to indent a case label * / <nl> - private int caseIndentationAmount = DEFAULT _ INDENTATION ; <nl> + private int caseIndent = DEFAULT _ INDENTATION ; <nl> <nl> / * * How far brace should be indented when on next line * / <nl> private int braceAdjustment ; <nl> <nl> / * * How far throws should be indented when on next line * / <nl> - private int throwsIndentationAmount = DEFAULT _ INDENTATION ; <nl> + private int throwsIndent = DEFAULT _ INDENTATION ; <nl> <nl> / * * How much to indent an array initialization when on next line * / <nl> - private int arrayInitIndentationAmount = DEFAULT _ INDENTATION ; <nl> + private int arrayInitIndent = DEFAULT _ INDENTATION ; <nl> <nl> / * * How far continuation line should be indented when line - wrapping is present * / <nl> private int lineWrappingIndentation = DEFAULT _ INDENTATION ; <nl> @ @ - 172 , 7 + 172 , 7 @ @ public class IndentationCheck extends Check { <nl> * @ param amount the case indentation level <nl> * / <nl> public void setCaseIndent ( int amount ) { <nl> - caseIndentationAmount = amount ; <nl> + caseIndent = amount ; <nl> } <nl> <nl> / * * <nl> @ @ - 181 , 7 + 181 , 7 @ @ public class IndentationCheck extends Check { <nl> * @ return the case indentation level <nl> * / <nl> public int getCaseIndent ( ) { <nl> - return caseIndentationAmount ; <nl> + return caseIndent ; <nl> } <nl> <nl> / * * <nl> @ @ - 190 , 7 + 190 , 7 @ @ public class IndentationCheck extends Check { <nl> * @ param throwsIndent the throws indentation level <nl> * / <nl> public void setThrowsIndent ( int throwsIndent ) { <nl> - throwsIndentationAmount = throwsIndent ; <nl> + this . throwsIndent = throwsIndent ; <nl> } <nl> <nl> / * * <nl> @ @ - 199 , 7 + 199 , 7 @ @ public class IndentationCheck extends Check { <nl> * @ return the throws indentation level <nl> * / <nl> public int getThrowsIndent ( ) { <nl> - return throwsIndentationAmount ; <nl> + return throwsIndent ; <nl> } <nl> <nl> / * * <nl> @ @ - 208 , 7 + 208 , 7 @ @ public class IndentationCheck extends Check { <nl> * @ param arrayInitIndent the array initialisation indentation level <nl> * / <nl> public void setArrayInitIndent ( int arrayInitIndent ) { <nl> - arrayInitIndentationAmount = arrayInitIndent ; <nl> + this . arrayInitIndent = arrayInitIndent ; <nl> } <nl> <nl> / * * <nl> @ @ - 217 , 7 + 217 , 7 @ @ public class IndentationCheck extends Check { <nl> * @ return the initialisation indentation level <nl> * / <nl> public int getArrayInitIndent ( ) { <nl> - return arrayInitIndentationAmount ; <nl> + return arrayInitIndent ; <nl> } <nl> <nl> / * *

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java 
 index 22786dc . . 954cb3e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java 
 @ @ - 1230 , 13 + 1230 , 22 @ @ public final class JavadocTokenTypes { 
 * / 
 public static final int EOF = Recognizer . EOF ; 
 
 - / * * Rule types offset . * / 
 - private static final int RULE _ TYPES _ OFFSET = 10000 ; 
 - 
 / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / 
 / / - - - - - - - JAVADOC TAGS DEPENDING ON RULE TYPES OFFSET - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / 
 / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / 
 
 + / * * Rule types offset . 
 + * RULE _ TYPES _ OFFSET constant is used to split lexer tokens types and parser rules types . 
 + * We need unique numbers for all tokens , 
 + * ANTLR do not need this and that is why this types are mixed by used values . 
 + * All values we can take a look at 
 + * target / generated - sources / antlr / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParser . java 
 + * For example : LEADING _ ASTERISK = 1 and RULE _ htmlElement = 1 . 
 + * RULE _ TYPES _ OFFSET required to shift parser rules , 
 + * to let them not overlap with types that have prefix " RULE _ " . 
 + * / 
 + private static final int RULE _ TYPES _ OFFSET = 10000 ; 
 + 
 / * * 
 * Root node of any Javadoc comment . 
 * Last child is always { @ link # EOF } .

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 index 18f1c8f . . f3bb88a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 @ @ - 87 , 16 + 87 , 16 @ @ public class IndentationCheck extends Check { 
 private int basicOffset = DEFAULT _ INDENTATION ; 
 
 / * * How much to indent a case label * / 
 - private int caseIndentationAmount = DEFAULT _ INDENTATION ; 
 + private int caseIndent = DEFAULT _ INDENTATION ; 
 
 / * * How far brace should be indented when on next line * / 
 private int braceAdjustment ; 
 
 / * * How far throws should be indented when on next line * / 
 - private int throwsIndentationAmount = DEFAULT _ INDENTATION ; 
 + private int throwsIndent = DEFAULT _ INDENTATION ; 
 
 / * * How much to indent an array initialization when on next line * / 
 - private int arrayInitIndentationAmount = DEFAULT _ INDENTATION ; 
 + private int arrayInitIndent = DEFAULT _ INDENTATION ; 
 
 / * * How far continuation line should be indented when line - wrapping is present * / 
 private int lineWrappingIndentation = DEFAULT _ INDENTATION ; 
 @ @ - 172 , 7 + 172 , 7 @ @ public class IndentationCheck extends Check { 
 * @ param amount the case indentation level 
 * / 
 public void setCaseIndent ( int amount ) { 
 - caseIndentationAmount = amount ; 
 + caseIndent = amount ; 
 } 
 
 / * * 
 @ @ - 181 , 7 + 181 , 7 @ @ public class IndentationCheck extends Check { 
 * @ return the case indentation level 
 * / 
 public int getCaseIndent ( ) { 
 - return caseIndentationAmount ; 
 + return caseIndent ; 
 } 
 
 / * * 
 @ @ - 190 , 7 + 190 , 7 @ @ public class IndentationCheck extends Check { 
 * @ param throwsIndent the throws indentation level 
 * / 
 public void setThrowsIndent ( int throwsIndent ) { 
 - throwsIndentationAmount = throwsIndent ; 
 + this . throwsIndent = throwsIndent ; 
 } 
 
 / * * 
 @ @ - 199 , 7 + 199 , 7 @ @ public class IndentationCheck extends Check { 
 * @ return the throws indentation level 
 * / 
 public int getThrowsIndent ( ) { 
 - return throwsIndentationAmount ; 
 + return throwsIndent ; 
 } 
 
 / * * 
 @ @ - 208 , 7 + 208 , 7 @ @ public class IndentationCheck extends Check { 
 * @ param arrayInitIndent the array initialisation indentation level 
 * / 
 public void setArrayInitIndent ( int arrayInitIndent ) { 
 - arrayInitIndentationAmount = arrayInitIndent ; 
 + this . arrayInitIndent = arrayInitIndent ; 
 } 
 
 / * * 
 @ @ - 217 , 7 + 217 , 7 @ @ public class IndentationCheck extends Check { 
 * @ return the initialisation indentation level 
 * / 
 public int getArrayInitIndent ( ) { 
 - return arrayInitIndentationAmount ; 
 + return arrayInitIndent ; 
 } 
 
 / * *
