BLEU SCORE: 0.049900497019368314

TEST MSG: Issue # 2987 : Allow JUnit ClassRule to be public
GENERATED MSG: Solution to Magic Number is not detected properly # 1266

TEST DIFF (one line): diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml <nl> index a8b2fe9 . . 1b48e16 100644 <nl> - - - a / config / intellij - idea - inspections . xml <nl> + + + b / config / intellij - idea - inspections . xml <nl> @ @ - 1648 , 6 + 1648 , 7 @ @ <nl> < option name = " ignorableAnnotations " > <nl> < value > <nl> < item value = " org . junit . Rule " / > <nl> + < item value = " org . junit . ClassRule " / > <nl> < / value > <nl> < / option > <nl> < / inspection _ tool > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> index 019947b . . 9f878e6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> @ @ - 58 , 6 + 58 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; <nl> * < / p > <nl> * < ul > <nl> * < li > org . junit . Rule < / li > <nl> + * < li > org . junit . ClassRule < / li > <nl> * < li > com . google . common . annotations . VisibleForTesting < / li > <nl> * < / ul > <nl> * < p > <nl> @ @ - 268 , 6 + 269 , 7 @ @ public class VisibilityModifierCheck <nl> / * * Default ignore annotations canonical names . * / <nl> private static final List < String > DEFAULT _ IGNORE _ ANNOTATIONS = ImmutableList . of ( <nl> " org . junit . Rule " , <nl> + " org . junit . ClassRule " , <nl> " com . google . common . annotations . VisibleForTesting " <nl> ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheckTest . java <nl> index 8d3dfb5 . . f9fe4ed 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheckTest . java <nl> @ @ - 198 , 12 + 198 , 12 @ @ public class VisibilityModifierCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( VisibilityModifierCheck . class ) ; <nl> final String [ ] expected = { <nl> - " 39 : 19 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPublic " ) , <nl> - " 42 : 12 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPackage " ) , <nl> - " 45 : 22 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedProtected " ) , <nl> - " 47 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , <nl> - " 48 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , <nl> - " 49 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , <nl> + " 40 : 19 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPublic " ) , <nl> + " 43 : 12 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPackage " ) , <nl> + " 46 : 22 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedProtected " ) , <nl> + " 48 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , <nl> + " 49 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , <nl> + " 50 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputAnnotatedVisibility . java " ) , expected ) ; <nl> } <nl> @ @ - 216 , 17 + 216 , 19 @ @ public class VisibilityModifierCheckTest <nl> " com . puppycrawl . tools . checkstyle . checks . design . " <nl> + " InputAnnotatedVisibility . CustomAnnotation " ) ; <nl> final String [ ] expected = { <nl> - " 15 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , <nl> - " 18 : 28 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitRule " ) , <nl> - " 21 : 19 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPublic " ) , <nl> - " 24 : 12 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPackage " ) , <nl> - " 27 : 22 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedProtected " ) , <nl> - " 30 : 19 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPublic " ) , <nl> - " 33 : 12 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPackage " ) , <nl> - " 36 : 22 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedProtected " ) , <nl> - " 47 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , <nl> - " 48 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , <nl> - " 49 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , <nl> + " 16 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , <nl> + " 19 : 28 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitRule " ) , <nl> + " 22 : 19 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPublic " ) , <nl> + " 25 : 12 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPackage " ) , <nl> + " 28 : 22 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedProtected " ) , <nl> + " 31 : 19 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPublic " ) , <nl> + " 34 : 12 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPackage " ) , <nl> + " 37 : 22 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedProtected " ) , <nl> + " 48 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , <nl> + " 49 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , <nl> + " 50 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , <nl> + " 59 : 35 : " + getCheckMessage ( MSG _ KEY , " publicJUnitClassRule " ) , <nl> + " 62 : 35 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitClassRule " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputAnnotatedVisibility . java " ) , expected ) ; <nl> } <nl> @ @ - 237 , 20 + 239 , 22 @ @ public class VisibilityModifierCheckTest <nl> createCheckConfig ( VisibilityModifierCheck . class ) ; <nl> checkConfig . addAttribute ( " ignoreAnnotationCanonicalNames " , " " ) ; <nl> final String [ ] expected = { <nl> - " 15 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , <nl> - " 18 : 28 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitRule " ) , <nl> - " 21 : 19 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPublic " ) , <nl> - " 24 : 12 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPackage " ) , <nl> - " 27 : 22 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedProtected " ) , <nl> - " 30 : 19 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPublic " ) , <nl> - " 33 : 12 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPackage " ) , <nl> - " 36 : 22 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedProtected " ) , <nl> - " 39 : 19 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPublic " ) , <nl> - " 42 : 12 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPackage " ) , <nl> - " 45 : 22 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedProtected " ) , <nl> - " 47 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , <nl> - " 48 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , <nl> - " 49 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , <nl> + " 16 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , <nl> + " 19 : 28 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitRule " ) , <nl> + " 22 : 19 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPublic " ) , <nl> + " 25 : 12 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPackage " ) , <nl> + " 28 : 22 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedProtected " ) , <nl> + " 31 : 19 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPublic " ) , <nl> + " 34 : 12 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPackage " ) , <nl> + " 37 : 22 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedProtected " ) , <nl> + " 40 : 19 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPublic " ) , <nl> + " 43 : 12 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPackage " ) , <nl> + " 46 : 22 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedProtected " ) , <nl> + " 48 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , <nl> + " 49 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , <nl> + " 50 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , <nl> + " 59 : 35 : " + getCheckMessage ( MSG _ KEY , " publicJUnitClassRule " ) , <nl> + " 62 : 35 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitClassRule " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputAnnotatedVisibility . java " ) , expected ) ; <nl> } <nl> @ @ - 260 , 7 + 264 , 8 @ @ public class VisibilityModifierCheckTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( VisibilityModifierCheck . class ) ; <nl> final String [ ] expected = { <nl> - " 10 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , <nl> + " 11 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , <nl> + " 14 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitClassRule " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputAnnotatedVisibilitySameTypeName . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibility . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibility . java <nl> index 7b704d2 . . 914f759 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibility . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibility . java <nl> @ @ - 2 , 6 + 2 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . design ; <nl> <nl> import com . google . common . annotations . VisibleForTesting ; <nl> <nl> + import org . junit . ClassRule ; <nl> import org . junit . Rule ; <nl> import org . junit . rules . TemporaryFolder ; <nl> <nl> @ @ - 53 , 4 + 54 , 10 @ @ public class InputAnnotatedVisibility { <nl> @ Target ( value = { ElementType . FIELD } ) <nl> public @ interface CustomAnnotation { <nl> } <nl> + <nl> + @ ClassRule <nl> + public static TemporaryFolder publicJUnitClassRule = new TemporaryFolder ( ) ; <nl> + <nl> + @ org . junit . ClassRule <nl> + public static TemporaryFolder fqPublicJUnitClassRule = new TemporaryFolder ( ) ; <nl> } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibilitySameTypeName . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibilitySameTypeName . java <nl> index 17d811b . . e418697 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibilitySameTypeName . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibilitySameTypeName . java <nl> @ @ - 3 , 9 + 3 , 13 @ @ package com . puppycrawl . tools . checkstyle . checks . design ; <nl> import org . junit . rules . TemporaryFolder ; <nl> <nl> import com . puppycrawl . tools . checkstyle . checks . design . InputLocalAnnotations . Rule ; <nl> + import com . puppycrawl . tools . checkstyle . checks . design . InputLocalAnnotations . ClassRule ; <nl> <nl> public class InputAnnotatedVisibilitySameTypeName <nl> { <nl> @ Rule <nl> public TemporaryFolder publicJUnitRule = new TemporaryFolder ( ) ; <nl> + <nl> + @ ClassRule <nl> + public TemporaryFolder publicJUnitClassRule = new TemporaryFolder ( ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java <nl> index ec093a3 . . 32baec1 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java <nl> @ @ - 5 , 4 + 5 , 8 @ @ public class InputLocalAnnotations <nl> public @ interface Rule { <nl> <nl> } <nl> + <nl> + public @ interface ClassRule { <nl> + <nl> + } <nl> } <nl> diff - - git a / src / xdocs / config _ design . xml b / src / xdocs / config _ design . xml <nl> index 4c2a5e1 . . 9df8e77 100644 <nl> - - - a / src / xdocs / config _ design . xml <nl> + + + b / src / xdocs / config _ design . xml <nl> @ @ - 857 , 7 + 857 , 7 @ @ public class Foo { <nl> < td > ignoreAnnotationCanonicalNames < / td > <nl> < td > ignore annotations canonical names < / td > <nl> < td > < a href = " property _ types . html # stringSet " > String Set < / a > < / td > <nl> - < td > org . junit . Rule , com . google . common . annotations . VisibleForTesting < / td > <nl> + < td > org . junit . Rule , org . junit . ClassRule , com . google . common . annotations . VisibleForTesting < / td > <nl> < / tr > <nl> < / table > <nl> < / subsection > <nl> @ @ - 971 , 7 + 971 , 7 @ @ class SomeClass <nl> < / source > <nl> <nl> < p > <nl> - To configure the Check passing fields annotated with @ org . junit . Rule and <nl> + To configure the Check passing fields annotated with @ org . junit . Rule , @ org . junit . ClassRule and <nl> @ com . google . common . annotations . VisibleForTesting annotations : <nl> < / p > <nl> < source > <nl> @ @ - 985 , 6 + 985 , 8 @ @ class SomeClass <nl> { <nl> @ org . junit . Rule <nl> public TemporaryFolder publicJUnitRule = new TemporaryFolder ( ) ; / / no warning <nl> + @ org . junit . ClassRule <nl> + public static TemporaryFolder publicJUnitClassRule = new TemporaryFolder ( ) ; / / no warning <nl> @ com . google . common . annotations . VisibleForTesting <nl> public String testString = " " ; / / no warning <nl> }
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index cb610c1 . . caa89d2 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1135 , 8 + 1135 , 6 @ @ <nl> < regex > < pattern > . * . checks . header . RegexpHeaderCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 94 < / lineRate > < / regex > <nl> <nl> <nl> - < regex > < pattern > . * . checks . imports . CustomImportOrderCheck < / pattern > < branchRate > 98 < / branchRate > < lineRate > 100 < / lineRate > < / regex > <nl> - <nl> < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck \ $ . * < / pattern > < branchRate > 50 < / branchRate > < lineRate > 68 < / lineRate > < / regex > <nl> < regex > < pattern > . * . checks . javadoc . AtclauseOrderCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 88 < / lineRate > < / regex > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> index 0b64ab9 . . 5e1c60a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> @ @ - 370 , 7 + 370 , 7 @ @ public class CustomImportOrderCheck extends Check { <nl> if ( customImportOrderRules . size ( ) > groupNumber + 1 ) { <nl> final String nextGroup = getNextImportGroup ( groupNumber + 1 ) ; <nl> if ( importGroup . equals ( nextGroup ) ) { <nl> - if ( separateLineBetweenGroups & & previousImport ! = null <nl> + if ( separateLineBetweenGroups <nl> & & ! hasEmptyLineBefore ( importObject . getLineNumber ( ) ) ) { <nl> log ( importObject . getLineNumber ( ) , MSG _ LINE _ SEPARATOR , <nl> fullImportIdent ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java <nl> index 7eb052f . . d497128 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java <nl> @ @ - 208 , 6 + 208 , 22 @ @ public class CustomImportOrderCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> + public void testWithoutLineSeparator2 ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( CustomImportOrderCheck . class ) ; <nl> + checkConfig . addAttribute ( " separateLineBetweenGroups " , " false " ) ; <nl> + checkConfig . addAttribute ( " customImportOrderRules " , <nl> + " STATIC # # # STANDARD _ JAVA _ PACKAGE " ) ; <nl> + checkConfig . addAttribute ( " sortImportsInGroupAlphabetically " , " true " ) ; <nl> + final String [ ] expected = { <nl> + " 4 : " + getCheckMessage ( MSG _ LEX , " java . io . File . createTempFile " ) , <nl> + } ; <nl> + <nl> + verify ( checkConfig , getPath ( " imports " + File . separator <nl> + + " InputCustomImportOrder _ NoSeparator . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testNoValid ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( CustomImportOrderCheck . class ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputCustomImportOrder _ NoSeparator . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputCustomImportOrder _ NoSeparator . java <nl> new file mode 100644 <nl> index 0000000 . . 4b528bc <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputCustomImportOrder _ NoSeparator . java <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + package java . util . concurrent ; <nl> + import static java . awt . Button . ABORT ; <nl> + import static javax . swing . WindowConstants . * ; <nl> + import static java . io . File . createTempFile ; <nl> + import java . util . * ; <nl> + import java . util . StringTokenizer ; <nl> + import com . puppycrawl . tools . * ; <nl> + import com . * ; <nl> + import org . apache . * ; <nl> + <nl> + public class InputCustomImportOrder _ NoSeparator { <nl> + }

TEST DIFF:
diff - - git a / config / intellij - idea - inspections . xml b / config / intellij - idea - inspections . xml 
 index a8b2fe9 . . 1b48e16 100644 
 - - - a / config / intellij - idea - inspections . xml 
 + + + b / config / intellij - idea - inspections . xml 
 @ @ - 1648 , 6 + 1648 , 7 @ @ 
 < option name = " ignorableAnnotations " > 
 < value > 
 < item value = " org . junit . Rule " / > 
 + < item value = " org . junit . ClassRule " / > 
 < / value > 
 < / option > 
 < / inspection _ tool > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 index 019947b . . 9f878e6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 @ @ - 58 , 6 + 58 , 7 @ @ import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; 
 * < / p > 
 * < ul > 
 * < li > org . junit . Rule < / li > 
 + * < li > org . junit . ClassRule < / li > 
 * < li > com . google . common . annotations . VisibleForTesting < / li > 
 * < / ul > 
 * < p > 
 @ @ - 268 , 6 + 269 , 7 @ @ public class VisibilityModifierCheck 
 / * * Default ignore annotations canonical names . * / 
 private static final List < String > DEFAULT _ IGNORE _ ANNOTATIONS = ImmutableList . of ( 
 " org . junit . Rule " , 
 + " org . junit . ClassRule " , 
 " com . google . common . annotations . VisibleForTesting " 
 ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheckTest . java 
 index 8d3dfb5 . . f9fe4ed 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheckTest . java 
 @ @ - 198 , 12 + 198 , 12 @ @ public class VisibilityModifierCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( VisibilityModifierCheck . class ) ; 
 final String [ ] expected = { 
 - " 39 : 19 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPublic " ) , 
 - " 42 : 12 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPackage " ) , 
 - " 45 : 22 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedProtected " ) , 
 - " 47 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , 
 - " 48 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , 
 - " 49 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , 
 + " 40 : 19 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPublic " ) , 
 + " 43 : 12 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPackage " ) , 
 + " 46 : 22 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedProtected " ) , 
 + " 48 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , 
 + " 49 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , 
 + " 50 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputAnnotatedVisibility . java " ) , expected ) ; 
 } 
 @ @ - 216 , 17 + 216 , 19 @ @ public class VisibilityModifierCheckTest 
 " com . puppycrawl . tools . checkstyle . checks . design . " 
 + " InputAnnotatedVisibility . CustomAnnotation " ) ; 
 final String [ ] expected = { 
 - " 15 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , 
 - " 18 : 28 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitRule " ) , 
 - " 21 : 19 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPublic " ) , 
 - " 24 : 12 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPackage " ) , 
 - " 27 : 22 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedProtected " ) , 
 - " 30 : 19 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPublic " ) , 
 - " 33 : 12 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPackage " ) , 
 - " 36 : 22 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedProtected " ) , 
 - " 47 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , 
 - " 48 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , 
 - " 49 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , 
 + " 16 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , 
 + " 19 : 28 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitRule " ) , 
 + " 22 : 19 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPublic " ) , 
 + " 25 : 12 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPackage " ) , 
 + " 28 : 22 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedProtected " ) , 
 + " 31 : 19 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPublic " ) , 
 + " 34 : 12 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPackage " ) , 
 + " 37 : 22 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedProtected " ) , 
 + " 48 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , 
 + " 49 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , 
 + " 50 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , 
 + " 59 : 35 : " + getCheckMessage ( MSG _ KEY , " publicJUnitClassRule " ) , 
 + " 62 : 35 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitClassRule " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputAnnotatedVisibility . java " ) , expected ) ; 
 } 
 @ @ - 237 , 20 + 239 , 22 @ @ public class VisibilityModifierCheckTest 
 createCheckConfig ( VisibilityModifierCheck . class ) ; 
 checkConfig . addAttribute ( " ignoreAnnotationCanonicalNames " , " " ) ; 
 final String [ ] expected = { 
 - " 15 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , 
 - " 18 : 28 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitRule " ) , 
 - " 21 : 19 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPublic " ) , 
 - " 24 : 12 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPackage " ) , 
 - " 27 : 22 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedProtected " ) , 
 - " 30 : 19 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPublic " ) , 
 - " 33 : 12 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPackage " ) , 
 - " 36 : 22 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedProtected " ) , 
 - " 39 : 19 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPublic " ) , 
 - " 42 : 12 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPackage " ) , 
 - " 45 : 22 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedProtected " ) , 
 - " 47 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , 
 - " 48 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , 
 - " 49 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , 
 + " 16 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , 
 + " 19 : 28 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitRule " ) , 
 + " 22 : 19 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPublic " ) , 
 + " 25 : 12 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedPackage " ) , 
 + " 28 : 22 : " + getCheckMessage ( MSG _ KEY , " googleCommonsAnnotatedProtected " ) , 
 + " 31 : 19 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPublic " ) , 
 + " 34 : 12 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedPackage " ) , 
 + " 37 : 22 : " + getCheckMessage ( MSG _ KEY , " fqGoogleCommonsAnnotatedProtected " ) , 
 + " 40 : 19 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPublic " ) , 
 + " 43 : 12 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedPackage " ) , 
 + " 46 : 22 : " + getCheckMessage ( MSG _ KEY , " customAnnotatedProtected " ) , 
 + " 48 : 19 : " + getCheckMessage ( MSG _ KEY , " unannotatedPublic " ) , 
 + " 49 : 12 : " + getCheckMessage ( MSG _ KEY , " unannotatedPackage " ) , 
 + " 50 : 22 : " + getCheckMessage ( MSG _ KEY , " unannotatedProtected " ) , 
 + " 59 : 35 : " + getCheckMessage ( MSG _ KEY , " publicJUnitClassRule " ) , 
 + " 62 : 35 : " + getCheckMessage ( MSG _ KEY , " fqPublicJUnitClassRule " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputAnnotatedVisibility . java " ) , expected ) ; 
 } 
 @ @ - 260 , 7 + 264 , 8 @ @ public class VisibilityModifierCheckTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( VisibilityModifierCheck . class ) ; 
 final String [ ] expected = { 
 - " 10 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , 
 + " 11 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitRule " ) , 
 + " 14 : 28 : " + getCheckMessage ( MSG _ KEY , " publicJUnitClassRule " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputAnnotatedVisibilitySameTypeName . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibility . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibility . java 
 index 7b704d2 . . 914f759 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibility . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibility . java 
 @ @ - 2 , 6 + 2 , 7 @ @ package com . puppycrawl . tools . checkstyle . checks . design ; 
 
 import com . google . common . annotations . VisibleForTesting ; 
 
 + import org . junit . ClassRule ; 
 import org . junit . Rule ; 
 import org . junit . rules . TemporaryFolder ; 
 
 @ @ - 53 , 4 + 54 , 10 @ @ public class InputAnnotatedVisibility { 
 @ Target ( value = { ElementType . FIELD } ) 
 public @ interface CustomAnnotation { 
 } 
 + 
 + @ ClassRule 
 + public static TemporaryFolder publicJUnitClassRule = new TemporaryFolder ( ) ; 
 + 
 + @ org . junit . ClassRule 
 + public static TemporaryFolder fqPublicJUnitClassRule = new TemporaryFolder ( ) ; 
 } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibilitySameTypeName . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibilitySameTypeName . java 
 index 17d811b . . e418697 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibilitySameTypeName . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputAnnotatedVisibilitySameTypeName . java 
 @ @ - 3 , 9 + 3 , 13 @ @ package com . puppycrawl . tools . checkstyle . checks . design ; 
 import org . junit . rules . TemporaryFolder ; 
 
 import com . puppycrawl . tools . checkstyle . checks . design . InputLocalAnnotations . Rule ; 
 + import com . puppycrawl . tools . checkstyle . checks . design . InputLocalAnnotations . ClassRule ; 
 
 public class InputAnnotatedVisibilitySameTypeName 
 { 
 @ Rule 
 public TemporaryFolder publicJUnitRule = new TemporaryFolder ( ) ; 
 + 
 + @ ClassRule 
 + public TemporaryFolder publicJUnitClassRule = new TemporaryFolder ( ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java 
 index ec093a3 . . 32baec1 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputLocalAnnotations . java 
 @ @ - 5 , 4 + 5 , 8 @ @ public class InputLocalAnnotations 
 public @ interface Rule { 
 
 } 
 + 
 + public @ interface ClassRule { 
 + 
 + } 
 } 
 diff - - git a / src / xdocs / config _ design . xml b / src / xdocs / config _ design . xml 
 index 4c2a5e1 . . 9df8e77 100644 
 - - - a / src / xdocs / config _ design . xml 
 + + + b / src / xdocs / config _ design . xml 
 @ @ - 857 , 7 + 857 , 7 @ @ public class Foo { 
 < td > ignoreAnnotationCanonicalNames < / td > 
 < td > ignore annotations canonical names < / td > 
 < td > < a href = " property _ types . html # stringSet " > String Set < / a > < / td > 
 - < td > org . junit . Rule , com . google . common . annotations . VisibleForTesting < / td > 
 + < td > org . junit . Rule , org . junit . ClassRule , com . google . common . annotations . VisibleForTesting < / td > 
 < / tr > 
 < / table > 
 < / subsection > 
 @ @ - 971 , 7 + 971 , 7 @ @ class SomeClass 
 < / source > 
 
 < p > 
 - To configure the Check passing fields annotated with @ org . junit . Rule and 
 + To configure the Check passing fields annotated with @ org . junit . Rule , @ org . junit . ClassRule and 
 @ com . google . common . annotations . VisibleForTesting annotations : 
 < / p > 
 < source > 
 @ @ - 985 , 6 + 985 , 8 @ @ class SomeClass 
 { 
 @ org . junit . Rule 
 public TemporaryFolder publicJUnitRule = new TemporaryFolder ( ) ; / / no warning 
 + @ org . junit . ClassRule 
 + public static TemporaryFolder publicJUnitClassRule = new TemporaryFolder ( ) ; / / no warning 
 @ com . google . common . annotations . VisibleForTesting 
 public String testString = " " ; / / no warning 
 }

NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index cb610c1 . . caa89d2 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1135 , 8 + 1135 , 6 @ @ 
 < regex > < pattern > . * . checks . header . RegexpHeaderCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 94 < / lineRate > < / regex > 
 
 
 - < regex > < pattern > . * . checks . imports . CustomImportOrderCheck < / pattern > < branchRate > 98 < / branchRate > < lineRate > 100 < / lineRate > < / regex > 
 - 
 < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck < / pattern > < branchRate > 90 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . javadoc . AbstractJavadocCheck \ $ . * < / pattern > < branchRate > 50 < / branchRate > < lineRate > 68 < / lineRate > < / regex > 
 < regex > < pattern > . * . checks . javadoc . AtclauseOrderCheck < / pattern > < branchRate > 88 < / branchRate > < lineRate > 88 < / lineRate > < / regex > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 index 0b64ab9 . . 5e1c60a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 @ @ - 370 , 7 + 370 , 7 @ @ public class CustomImportOrderCheck extends Check { 
 if ( customImportOrderRules . size ( ) > groupNumber + 1 ) { 
 final String nextGroup = getNextImportGroup ( groupNumber + 1 ) ; 
 if ( importGroup . equals ( nextGroup ) ) { 
 - if ( separateLineBetweenGroups & & previousImport ! = null 
 + if ( separateLineBetweenGroups 
 & & ! hasEmptyLineBefore ( importObject . getLineNumber ( ) ) ) { 
 log ( importObject . getLineNumber ( ) , MSG _ LINE _ SEPARATOR , 
 fullImportIdent ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java 
 index 7eb052f . . d497128 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java 
 @ @ - 208 , 6 + 208 , 22 @ @ public class CustomImportOrderCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 + public void testWithoutLineSeparator2 ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( CustomImportOrderCheck . class ) ; 
 + checkConfig . addAttribute ( " separateLineBetweenGroups " , " false " ) ; 
 + checkConfig . addAttribute ( " customImportOrderRules " , 
 + " STATIC # # # STANDARD _ JAVA _ PACKAGE " ) ; 
 + checkConfig . addAttribute ( " sortImportsInGroupAlphabetically " , " true " ) ; 
 + final String [ ] expected = { 
 + " 4 : " + getCheckMessage ( MSG _ LEX , " java . io . File . createTempFile " ) , 
 + } ; 
 + 
 + verify ( checkConfig , getPath ( " imports " + File . separator 
 + + " InputCustomImportOrder _ NoSeparator . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 public void testNoValid ( ) throws Exception { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( CustomImportOrderCheck . class ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputCustomImportOrder _ NoSeparator . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputCustomImportOrder _ NoSeparator . java 
 new file mode 100644 
 index 0000000 . . 4b528bc 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputCustomImportOrder _ NoSeparator . java 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + package java . util . concurrent ; 
 + import static java . awt . Button . ABORT ; 
 + import static javax . swing . WindowConstants . * ; 
 + import static java . io . File . createTempFile ; 
 + import java . util . * ; 
 + import java . util . StringTokenizer ; 
 + import com . puppycrawl . tools . * ; 
 + import com . * ; 
 + import org . apache . * ; 
 + 
 + public class InputCustomImportOrder _ NoSeparator { 
 + }
