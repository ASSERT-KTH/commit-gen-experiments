BLEU SCORE: 0.037477767366779206

TEST MSG: Issue # 3175 : fixed sevntu violations in test and it
GENERATED MSG: minor : removed exceptions not actually thrown

TEST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index cb31167 . . 7e1b661 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 99 , 7 + 99 , 7 @ @ <nl> < property name = " ignoreConstructor " value = " true " / > <nl> < property name = " ignoreField " value = " true " / > <nl> < property name = " ignoreMethod " value = " true " / > <nl> - < property name = " ignorePattern " value = " ^ * \ * * [ ^ ] + $ " / > <nl> + < property name = " ignorePattern " value = " ^ ( * \ * * [ ^ ] + ) | ( ( package | import ) . * ) $ " / > <nl> < / module > <nl> < module name = " AvoidHidingCauseException " / > <nl> < module name = " MultipleStringLiteralsExtended " > <nl> diff - - git a / config / sevntu _ suppressions . xml b / config / sevntu _ suppressions . xml <nl> index 3406ac6 . . 307bced 100644 <nl> - - - a / config / sevntu _ suppressions . xml <nl> + + + b / config / sevntu _ suppressions . xml <nl> @ @ - 11 , 6 + 11 , 8 @ @ <nl> files = " JavadocStyleCheck \ . java | AbstractTypeAwareCheck \ . java | XMLLogger \ . java " / > <nl> < suppress checks = " MultipleStringLiteralsExtended " <nl> files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> + < suppress checks = " LineLengthExtended " <nl> + files = " ParseTreeBuilder \ . java " / > <nl> <nl> < ! - - Override methods from base class . <nl> Issue : https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / issues / 166 - - > <nl> @ @ - 45 , 4 + 47 , 8 @ @ <nl> < suppress checks = " CustomDeclarationOrder " <nl> files = " AbstractViolationReporter . java " <nl> lines = " 152 , 164 " / > <nl> + <nl> + < ! - - Tone down the checking for test code - - > <nl> + < suppress checks = " CauseParameterInException | ForbidCCommentsInMethods | IllegalCatchExtended " <nl> + files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < / suppressions > <nl> \ No newline at end of file <nl> diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> index be3c04f . . 9788672 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> @ @ - 143 , 8 + 143 , 8 @ @ public class BaseCheckTestSupport { <nl> parseInt = parseInt . substring ( 0 , parseInt . indexOf ( ' : ' ) ) ; <nl> final int lineNumber = Integer . parseInt ( parseInt ) ; <nl> assertTrue ( " input file is expected to have a warning comment on line number " <nl> - + lineNumber , theWarnings . remove ( ( Integer ) lineNumber ) <nl> - | | previousLineNumber = = lineNumber ) ; <nl> + + lineNumber , previousLineNumber = = lineNumber <nl> + | | theWarnings . remove ( ( Integer ) lineNumber ) ) ; <nl> previousLineNumber = lineNumber ; <nl> } <nl> <nl> diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java <nl> index 52479b5 . . 9398dcf 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java <nl> @ @ - 59 , 10 + 59 , 6 @ @ public class BaseIndentationCheckSupport extends BaseCheckTestSupport { <nl> return getLinesWithWarnAndCheckComments ( fileName , TAB _ WIDTH ) ; <nl> } <nl> <nl> - private enum CommentType { <nl> - MULTILEVEL , SINGLE _ LEVEL , NON _ STRICT _ LEVEL , UNKNOWN <nl> - } <nl> - <nl> private static Integer [ ] getLinesWithWarnAndCheckComments ( String aFileName , <nl> final int tabWidth ) <nl> throws IOException { <nl> @ @ - 213 , 4 + 209 , 8 @ @ public class BaseIndentationCheckSupport extends BaseCheckTestSupport { <nl> } <nl> return 0 ; <nl> } <nl> + <nl> + private enum CommentType { <nl> + MULTILEVEL , SINGLE _ LEVEL , NON _ STRICT _ LEVEL , UNKNOWN <nl> + } <nl> } <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule43onestatement / OneStatementPerLineTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule43onestatement / OneStatementPerLineTest . java <nl> index e93ed89 . . 06f73c1 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule43onestatement / OneStatementPerLineTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule43onestatement / OneStatementPerLineTest . java <nl> @ @ - 80 , 7 + 80 , 7 @ @ public class OneStatementPerLineTest extends BaseCheckTestSupport { <nl> " multiple . statements . line " ) ; <nl> <nl> final String [ ] expected = { <nl> - " 32 : 6 : " + msg , <nl> + " 32 : 6 : " + msg , <nl> " 37 : 58 : " + msg , <nl> " 38 : 58 : " + msg , <nl> " 38 : 74 : " + msg , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> index 1629bef . . 6143f68 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> @ @ - 132 , 7 + 132 , 7 @ @ public class BaseCheckTestSupport { <nl> String . . . expected ) <nl> throws Exception { <nl> verify ( checker , <nl> - new File [ ] { new File ( processedFilename ) } , <nl> + new File [ ] { new File ( processedFilename ) } , <nl> messageFileName , expected ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 18d9d2c . . c6f349e 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 631 , 7 + 631 , 7 @ @ public class MainTest { <nl> + " Checkstyle ends with 1 errors . % n " ) ; <nl> assertEquals ( expectedExceptionMessage , systemOut . getLog ( ) ) ; <nl> <nl> - final String exceptionFirstLine = String . format ( Locale . ROOT , <nl> + final String exceptionFirstLine = String . format ( Locale . ROOT , <nl> " com . puppycrawl . tools . checkstyle . api . " <nl> + " CheckstyleException : Exception was thrown while processing " <nl> + new File ( getNonCompilablePath ( " InputIncorrectClass . java " ) ) . getPath ( ) <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> index 41c1eaa . . 2feb02f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> @ @ - 253 , 7 + 253 , 7 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . SINGLE _ LINE _ COMMENT } ; <nl> + return new int [ ] { TokenTypes . SINGLE _ LINE _ COMMENT } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractCheckTest . java <nl> index 384ea5d . . 518cee3 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractCheckTest . java <nl> @ @ - 57 , 17 + 57 , 17 @ @ public class AbstractCheckTest { <nl> final AbstractCheck check = new AbstractCheck ( ) { <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> } <nl> } ; <nl> / / Eventually it will become clear abstract method <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / CheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / CheckTest . java <nl> index 36b8609 . . 9b82a15 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / CheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / CheckTest . java <nl> @ @ - 22 , 6 + 22 , 8 @ @ package com . puppycrawl . tools . checkstyle . api ; <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> + <nl> public class CheckTest { <nl> @ SuppressWarnings ( " deprecation " ) <nl> @ Test <nl> @ @ - 29 , 7 + 31 , 7 @ @ public class CheckTest { <nl> final Object module = new Check ( ) { <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return null ; <nl> + return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> } <nl> } ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java <nl> index 2333de8 . . 68d9ea4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java <nl> @ @ - 189 , 7 + 189 , 7 @ @ public class NewlineAtEndOfFileCheckTest <nl> . getDeclaredMethod ( " endsWithNewline " , RandomAccessFile . class ) ; <nl> method . setAccessible ( true ) ; <nl> final RandomAccessFile file = mock ( RandomAccessFile . class ) ; <nl> - when ( file . length ( ) ) . thenReturn ( 2000000L ) ; <nl> + when ( file . length ( ) ) . thenReturn ( 2 _ 000 _ 000L ) ; <nl> try { <nl> method . invoke ( new NewlineAtEndOfFileCheck ( ) , file ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java <nl> index b3c6f1f . . de66502 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public class MissingDeprecatedCheckTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testGetRequiredTokens ( ) { <nl> - final MissingDeprecatedCheck checkObj = new MissingDeprecatedCheck ( ) ; <nl> + final MissingDeprecatedCheck checkObj = new MissingDeprecatedCheck ( ) ; <nl> final int [ ] expected = { <nl> TokenTypes . INTERFACE _ DEF , <nl> TokenTypes . CLASS _ DEF , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> index b9fc9f6 . . e92bf47 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ public class OneTopLevelClassCheckTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testAcceptableTokens ( ) { <nl> - final OneTopLevelClassCheck check = new OneTopLevelClassCheck ( ) ; <nl> + final OneTopLevelClassCheck check = new OneTopLevelClassCheck ( ) ; <nl> check . getAcceptableTokens ( ) ; <nl> / / ZERO tokens as Check do Traverse of Tree himself , he does not need to subscribed to <nl> / / Tokens <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java <nl> index 6913c8e . . f570fb4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testGetRequiredTokens ( ) { <nl> - final IllegalImportCheck checkObj = new IllegalImportCheck ( ) ; <nl> + final IllegalImportCheck checkObj = new IllegalImportCheck ( ) ; <nl> final int [ ] expected = { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; <nl> assertArrayEquals ( expected , checkObj . getRequiredTokens ( ) ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> index 852a43d . . c4f4969 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java <nl> @ @ - 321 , 7 + 321 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> <nl> final String [ ] expected = { <nl> " 19 : " + getCheckMessage ( MSG _ ERROR , " ) " , 16 , 0 ) , <nl> - " 22 : " + getCheckMessage ( MSG _ ERROR , " ) " , 8 , 4 ) , <nl> + " 22 : " + getCheckMessage ( MSG _ ERROR , " ) " , 8 , 4 ) , <nl> } ; <nl> <nl> verifyWarns ( checkConfig , <nl> @ @ - 1583 , 7 + 1583 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { <nl> " 20 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " method def " , 16 , 4 ) , <nl> " 21 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " method def modifier " , 24 , " 18 , 20 , 22 " ) , <nl> " 23 : " + getCheckMessage ( MSG _ CHILD _ ERROR _ MULTI , " method def " , 32 , " 20 , 22 , 24 " ) , <nl> - " 24 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " method def rcurly " , 24 , " 18 , 20 , 22 " ) , <nl> + " 24 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " method def rcurly " , 24 , " 18 , 20 , 22 " ) , <nl> " 26 : " + getCheckMessage ( MSG _ ERROR , " method def rcurly " , 8 , 2 ) , <nl> } ; <nl> verifyWarns ( checkConfig , getPath ( " InputAnonymousClassInMethod . java " ) , expected ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> index c083a0c . . b2ae65b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> @ @ - 198 , 7 + 198 , 7 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { <nl> <nl> @ Override <nl> public int [ ] getDefaultJavadocTokens ( ) { <nl> - return new int [ ] { JavadocTokenTypes . JAVADOC } ; <nl> + return new int [ ] { JavadocTokenTypes . JAVADOC } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / NPathComplexityCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / NPathComplexityCheckTest . java <nl> index 9437f33 . . eba7895 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / NPathComplexityCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / NPathComplexityCheckTest . java <nl> @ @ - 71 , 7 + 71 , 7 @ @ public class NPathComplexityCheckTest extends BaseCheckTestSupport { <nl> <nl> checkConfig . addAttribute ( " max " , " 0 " ) ; <nl> <nl> - final long largerThanMaxInt = 3486784401L ; <nl> + final long largerThanMaxInt = 3 _ 486 _ 784 _ 401L ; <nl> <nl> final String [ ] expected = { <nl> " 9 : 5 : " + getCheckMessage ( MSG _ KEY , largerThanMaxInt , 0 ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> index bffcc61 . . 2c01aed 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> @ @ - 130 , 7 + 130 , 7 @ @ public class RedundantModifierCheckTest <nl> createCheckConfig ( RedundantModifierCheck . class ) ; <nl> <nl> final String [ ] expected = { <nl> - " 18 : 5 : " + getCheckMessage ( MSG _ KEY , " public " ) , <nl> + " 18 : 5 : " + getCheckMessage ( MSG _ KEY , " public " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputRedundantPublicModifierInNotPublicClass . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java <nl> index 7bc4ca3 . . 58b3718 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java <nl> @ @ - 50 , 7 + 50 , 7 @ @ public class AbbreviationAsWordInNameCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " ignoreOverriddenMethods " , " true " ) ; <nl> <nl> final String [ ] expected = { <nl> - " 9 : " + getWarningMessage ( " FactoryWithBADNAme " , expectedCapitalCount ) , <nl> + " 9 : " + getWarningMessage ( " FactoryWithBADNAme " , expectedCapitalCount ) , <nl> " 12 : " + getWarningMessage ( " AbstractCLASSName " , expectedCapitalCount ) , <nl> " 32 : " + getWarningMessage ( " AbstractINNERRClass " , expectedCapitalCount ) , <nl> " 37 : " + getWarningMessage ( " WellNamedFACTORY " , expectedCapitalCount ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java <nl> index 33e141e . . e0372f1 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java <nl> @ @ - 62 , 7 + 62 , 7 @ @ public class LineLengthCheckTest extends BaseCheckTestSupport { <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( LineLengthCheck . class ) ; <nl> checkConfig . addAttribute ( " max " , " 80 " ) ; <nl> - checkConfig . addAttribute ( " ignorePattern " , " ^ . * is OK . * regexp . * $ " ) ; <nl> + checkConfig . addAttribute ( " ignorePattern " , " ^ . * is OK . * regexp . * $ " ) ; <nl> final String [ ] expected = { <nl> " 18 : " + getCheckMessage ( MSG _ KEY , 80 , 81 ) , <nl> " 145 : " + getCheckMessage ( MSG _ KEY , 80 , 83 ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> index e892f5a . . ec34de0 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> @ @ - 92 , 8 + 92 , 8 @ @ public class TokenTypesDocletTest { <nl> / / a lot of different places , must not be changed and an int value is used to encrypt <nl> / / a token type . <nl> final ListBuffer < String [ ] > options = new ListBuffer < > ( ) ; <nl> - options . add ( new String [ ] { " - doclet " , " TokenTypesDoclet " } ) ; <nl> - options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; <nl> + options . add ( new String [ ] { " - doclet " , " TokenTypesDoclet " } ) ; <nl> + options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; <nl> <nl> final ListBuffer < String > names = new ListBuffer < > ( ) ; <nl> names . add ( getPath ( " InputTokenTypesDocletNotConstants . java " ) ) ; <nl> @ @ - 109 , 7 + 109 , 7 @ @ public class TokenTypesDocletTest { <nl> @ Test <nl> public void testEmptyJavadoc ( ) throws Exception { <nl> final ListBuffer < String [ ] > options = new ListBuffer < > ( ) ; <nl> - options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; <nl> + options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; <nl> <nl> final ListBuffer < String > names = new ListBuffer < > ( ) ; <nl> names . add ( getPath ( " InputTokenTypesDocletEmptyJavadoc . java " ) ) ; <nl> @ @ - 133 , 7 + 133 , 7 @ @ public class TokenTypesDocletTest { <nl> @ Test <nl> public void testCorrect ( ) throws Exception { <nl> final ListBuffer < String [ ] > options = new ListBuffer < > ( ) ; <nl> - options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; <nl> + options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; <nl> <nl> final ListBuffer < String > names = new ListBuffer < > ( ) ; <nl> names . add ( getPath ( " InputTokenTypesDocletCorrect . java " ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java <nl> index 43e6c34 . . 5fbe174 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { <nl> <nl> @ Test <nl> public void testToString ( ) { <nl> - final Comment comment = new Comment ( new String [ ] { " value " } , 1 , 2 , 3 ) ; <nl> + final Comment comment = new Comment ( new String [ ] { " value " } , 1 , 2 , 3 ) ; <nl> Assert . assertEquals ( " Comment [ 2 : 1 - 2 : 3 ] " , comment . toString ( ) ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> index 0061d4b . . ff6e4ee 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java <nl> @ @ - 38 , 8 + 38 , 8 @ @ import com . google . common . base . Charsets ; <nl> import com . google . common . io . Files ; <nl> <nl> public class JavadocParseTreeTest { <nl> - private JavadocParser parser ; <nl> private final BaseErrorListener errorListener = new FailOnErrorListener ( ) ; <nl> + private JavadocParser parser ; <nl> <nl> private ParseTree parseJavadoc ( String aBlockComment ) <nl> throws IOException { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java <nl> index 452fe82 . . 0e974dd 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java <nl> @ @ - 58 , 7 + 58 , 7 @ @ import com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser . TrTagOpenC <nl> * It is located in ' contribution ' repository : <nl> * < a href = " https : / / github . com / checkstyle / contribution / blob / master / javadoc - expected - tree - generator / ExpectedParseTreeGenerator . java " > Link < / a > <nl> * / <nl> - @ Generated ( " ExpectedParseTreeGenerator " ) <nl> + @ Generated ( value = " ExpectedParseTreeGenerator " ) <nl> / / @ formatter : off <nl> final class ParseTreeBuilder { <nl> private static final String LINE _ SEPARATOR = System . getProperty ( " line . separator " ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> index 08a3fbb . . 7a84dcc 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> @ @ - 278 , 7 + 278 , 7 @ @ public final class CheckUtil { <nl> } <nl> <nl> public static String getTokenText ( int [ ] tokens , int . . . subtractions ) { <nl> - if ( Arrays . equals ( tokens , TokenUtils . getAllTokenIds ( ) ) & & subtractions . length = = 0 ) { <nl> + if ( subtractions . length = = 0 & & Arrays . equals ( tokens , TokenUtils . getAllTokenIds ( ) ) ) { <nl> return " TokenTypes . " ; <nl> } <nl> else { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> index ec133c7 . . c41e09a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> @ @ - 92 , 10 + 92 , 6 @ @ public class CommitValidationTest { <nl> <nl> private static final int PREVIOUS _ COMMITS _ TO _ CHECK _ COUNT = 10 ; <nl> <nl> - private enum CommitsResolutionMode { <nl> - BY _ COUNTER , BY _ LAST _ COMMIT _ AUTHOR <nl> - } <nl> - <nl> private static final CommitsResolutionMode COMMITS _ RESOLUTION _ MODE = <nl> CommitsResolutionMode . BY _ LAST _ COMMIT _ AUTHOR ; <nl> <nl> @ @ - 220 , 8 + 216 , 8 @ @ public class CommitValidationTest { <nl> commits . add ( lastCommit ) ; <nl> <nl> boolean wasLastCheckedCommitAuthorSameAsLastCommit = true ; <nl> - while ( previousCommitsIterator . hasNext ( ) <nl> - & & wasLastCheckedCommitAuthorSameAsLastCommit ) { <nl> + while ( wasLastCheckedCommitAuthorSameAsLastCommit <nl> + & & previousCommitsIterator . hasNext ( ) ) { <nl> final RevCommit currentCommit = previousCommitsIterator . next ( ) ; <nl> final String currentCommitAuthor = currentCommit . getAuthorIdent ( ) . getName ( ) ; <nl> if ( currentCommitAuthor . equals ( lastCommitAuthor ) ) { <nl> @ @ - 251 , 6 + 247 , 10 @ @ public class CommitValidationTest { <nl> + getRulesForCommitMessageFormatting ( ) ; <nl> } <nl> <nl> + private enum CommitsResolutionMode { <nl> + BY _ COUNTER , BY _ LAST _ COMMIT _ AUTHOR <nl> + } <nl> + <nl> private static class RevCommitsPair { <nl> private final Iterator < RevCommit > first ; <nl> private final Iterator < RevCommit > second ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> index 6e8737f . . 38a0345 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> @ @ - 159 , 12 + 159 , 9 @ @ public class XDocsPagesTest { <nl> . replace ( " . . . " , " " ) . trim ( ) ; <nl> <nl> if ( unserializedSource . charAt ( 0 ) ! = ' < ' <nl> - | | unserializedSource . charAt ( unserializedSource . length ( ) - 1 ) ! = ' > ' ) { <nl> - continue ; <nl> - } <nl> - <nl> - / / no dtd testing yet <nl> - if ( unserializedSource . contains ( " < ! " ) ) { <nl> + | | unserializedSource . charAt ( unserializedSource . length ( ) - 1 ) ! = ' > ' <nl> + / / no dtd testing yet <nl> + | | unserializedSource . contains ( " < ! " ) ) { <nl> continue ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java <nl> index e7e6640 . . 52479b5 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java <nl> @ @ - 126 , 7 + 126 , 7 @ @ public class BaseIndentationCheckSupport extends BaseCheckTestSupport { <nl> final int indentInComment = getIndentFromComment ( comment ) ; <nl> final boolean isWarnComment = isWarnComment ( comment ) ; <nl> <nl> - boolean result ; <nl> + final boolean result ; <nl> final CommentType type = getCommentType ( comment ) ; <nl> switch ( type ) { <nl> case MULTILEVEL : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> index b1f78ca . . be1187b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java <nl> @ @ - 324 , 8 + 324 , 8 @ @ public final class Main { <nl> throws FileNotFoundException { <nl> <nl> / / setup the output stream <nl> - OutputStream out ; <nl> - boolean closeOutputStream ; <nl> + final OutputStream out ; <nl> + final boolean closeOutputStream ; <nl> if ( outputLocation = = null ) { <nl> out = System . out ; <nl> closeOutputStream = false ; <nl> @ @ - 336 , 7 + 336 , 7 @ @ public final class Main { <nl> } <nl> <nl> / / setup a listener <nl> - AuditListener listener ; <nl> + final AuditListener listener ; <nl> if ( XML _ FORMAT _ NAME . equals ( format ) ) { <nl> listener = new XMLLogger ( out , closeOutputStream ) ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> index c374015 . . 3f277df 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> @ @ - 327 , 7 + 327 , 7 @ @ public final class TreeWalker <nl> * / <nl> private void notifyBegin ( DetailAST rootAST , FileContents contents , <nl> AstState astState ) { <nl> - Set < Check > checks ; <nl> + final Set < Check > checks ; <nl> <nl> if ( astState = = AstState . WITH _ COMMENTS ) { <nl> checks = commentChecks ; <nl> @ @ - 348 , 7 + 348 , 7 @ @ public final class TreeWalker <nl> * @ param astState state of AST . <nl> * / <nl> private void notifyEnd ( DetailAST rootAST , AstState astState ) { <nl> - Set < Check > checks ; <nl> + final Set < Check > checks ; <nl> <nl> if ( astState = = AstState . WITH _ COMMENTS ) { <nl> checks = commentChecks ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> index b7d4d3a . . 1fd69d7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> @ @ - 225 , 7 + 225 , 7 @ @ public class XMLLogger <nl> * / <nl> private static String encodeAmpersand ( String value , int ampPosition ) { <nl> final int nextSemi = value . indexOf ( ' ; ' , ampPosition ) ; <nl> - String result ; <nl> + final String result ; <nl> if ( nextSemi < 0 <nl> | | ! isReference ( value . substring ( ampPosition , nextSemi + 1 ) ) ) { <nl> result = " & amp ; " ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> index c8e585e . . cd763b1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> @ @ - 176 , 7 + 176 , 7 @ @ public final class FileContents implements CommentListener { <nl> * * / <nl> private String [ ] extractCComment ( int startLineNo , int startColNo , <nl> int endLineNo , int endColNo ) { <nl> - String [ ] returnValue ; <nl> + final String [ ] returnValue ; <nl> if ( startLineNo = = endLineNo ) { <nl> returnValue = new String [ 1 ] ; <nl> returnValue [ 0 ] = line ( startLineNo - 1 ) . substring ( startColNo , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> index 88b902f . . e1ea60c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java <nl> @ @ - 333 , 7 + 333 , 7 @ @ public class SuppressWarningsHolder <nl> * @ return returns ast - parent of given <nl> * / <nl> private static DetailAST getAcceptableParent ( DetailAST child ) { <nl> - DetailAST result ; <nl> + final DetailAST result ; <nl> final DetailAST parent = child . getParent ( ) ; <nl> switch ( parent . getType ( ) ) { <nl> case TokenTypes . ANNOTATION _ DEF : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java <nl> index 0d107ec . . 647a357 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java <nl> @ @ - 166 , 8 + 166 , 8 @ @ public class TrailingCommentCheck extends Check { <nl> <nl> for ( Integer lineNo : lines ) { <nl> final String line = getLines ( ) [ lineNo - 1 ] ; <nl> - String lineBefore ; <nl> - TextBlock comment ; <nl> + final String lineBefore ; <nl> + final TextBlock comment ; <nl> if ( cppComments . containsKey ( lineNo ) ) { <nl> comment = cppComments . get ( lineNo ) ; <nl> lineBefore = line . substring ( 0 , comment . getStartColNo ( ) ) ; <nl> @ @ - 197 , 7 + 197 , 7 @ @ public class TrailingCommentCheck extends Check { <nl> * @ return true if the comment if legal . <nl> * / <nl> private boolean isLegalComment ( final TextBlock comment ) { <nl> - boolean legal ; <nl> + final boolean legal ; <nl> <nl> / / multi - line comment can not be legal <nl> if ( legalComment = = null | | comment . getStartLineNo ( ) ! = comment . getEndLineNo ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> index 7c2641a . . 566cb25 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> @ @ - 153 , 7 + 153 , 7 @ @ public class EmptyBlockCheck <nl> <nl> if ( leftCurly ! = null ) { <nl> if ( option = = BlockOption . STMT ) { <nl> - boolean emptyBlock ; <nl> + final boolean emptyBlock ; <nl> if ( leftCurly . getType ( ) = = TokenTypes . LCURLY ) { <nl> emptyBlock = leftCurly . getNextSibling ( ) . getType ( ) ! = TokenTypes . CASE _ GROUP ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> index e0ddd02 . . 0735850 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java <nl> @ @ - 177 , 7 + 177 , 7 @ @ public class LeftCurlyCheck <nl> <nl> @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> - DetailAST startToken ; <nl> + final DetailAST startToken ; <nl> DetailAST brace ; <nl> <nl> switch ( ast . getType ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> index 312f29f . . 104985e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java <nl> @ @ - 265 , 7 + 265 , 7 @ @ public class NeedBracesCheck extends Check { <nl> * @ return true if current statement is single - line statement . <nl> * / <nl> private static boolean isSingleLineStatement ( DetailAST statement ) { <nl> - boolean result ; <nl> + final boolean result ; <nl> <nl> switch ( statement . getType ( ) ) { <nl> case TokenTypes . LITERAL _ IF : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> index e67fe37 . . 7d7ce5b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java <nl> @ @ - 318 , 7 + 318 , 7 @ @ public class RightCurlyCheck extends Check { <nl> / / Attempt to locate the tokens to do the check <nl> boolean shouldCheckLastRcurly = false ; <nl> DetailAST rcurly = null ; <nl> - DetailAST lcurly ; <nl> + final DetailAST lcurly ; <nl> DetailAST nextToken ; <nl> <nl> switch ( ast . getType ( ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> index ee65cf5 . . 336bfc9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> @ @ - 376 , 7 + 376 , 7 @ @ public class EqualsAvoidNullCheck extends Check { <nl> * @ return true if the object is of String type . <nl> * / <nl> private boolean isCalledOnStringFieldOrVariable ( DetailAST objCalledOn ) { <nl> - boolean result ; <nl> + final boolean result ; <nl> final DetailAST previousSiblingAst = objCalledOn . getPreviousSibling ( ) ; <nl> if ( previousSiblingAst = = null ) { <nl> result = isStringFieldOrVariable ( objCalledOn ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> index 6afc7d6 . . 7aa191b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> @ @ - 161 , 7 + 161 , 7 @ @ public class FallThroughCheck extends Check { <nl> * / <nl> private boolean isTerminated ( final DetailAST ast , boolean useBreak , <nl> boolean useContinue ) { <nl> - boolean terminated ; <nl> + final boolean terminated ; <nl> <nl> switch ( ast . getType ( ) ) { <nl> case TokenTypes . LITERAL _ RETURN : <nl> @ @ - 249 , 7 + 249 , 7 @ @ public class FallThroughCheck extends Check { <nl> * @ return true if loop is terminated . <nl> * / <nl> private boolean checkLoop ( final DetailAST ast ) { <nl> - DetailAST loopBody ; <nl> + final DetailAST loopBody ; <nl> if ( ast . getType ( ) = = TokenTypes . LITERAL _ DO ) { <nl> final DetailAST lparen = ast . findFirstToken ( TokenTypes . DO _ WHILE ) ; <nl> loopBody = lparen . getPreviousSibling ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> index eb536f3 . . 3b12dd0 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> @ @ - 508 , 7 + 508 , 7 @ @ public class RequireThisCheck extends Check { <nl> * @ return whether it was found . <nl> * / <nl> protected AbstractFrame getIfContains ( DetailAST nameToFind , boolean lookForMethod ) { <nl> - AbstractFrame frame ; <nl> + final AbstractFrame frame ; <nl> <nl> if ( ! lookForMethod <nl> & & containsFieldOrVariable ( nameToFind ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> index 42ba85f . . ed9116d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> @ @ - 268 , 7 + 268 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { <nl> <nl> if ( ! isVariableMatchesIgnorePattern ( variable . getText ( ) ) ) { <nl> final DetailAST semicolonAst = ast . getNextSibling ( ) ; <nl> - Entry < DetailAST , Integer > entry ; <nl> + final Entry < DetailAST , Integer > entry ; <nl> if ( validateBetweenScopes ) { <nl> entry = calculateDistanceBetweenScopes ( semicolonAst , variable ) ; <nl> } <nl> @ @ - 572 , 7 + 572 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { <nl> DetailAST firstNodeInsideBlock = null ; <nl> <nl> if ( ! isVariableInOperatorExpr ( block , variable ) ) { <nl> - DetailAST currentNode ; <nl> + final DetailAST currentNode ; <nl> <nl> / / Find currentNode for DO - WHILE block . <nl> if ( block . getType ( ) = = TokenTypes . LITERAL _ DO ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> index 998f1ef . . 4bb90f7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java <nl> @ @ - 163 , 7 + 163 , 7 @ @ public final class ThrowsCountCheck extends Check { <nl> * / <nl> private static String getAnnotationName ( DetailAST annotation ) { <nl> final DetailAST dotAst = annotation . findFirstToken ( TokenTypes . DOT ) ; <nl> - String name ; <nl> + final String name ; <nl> if ( dotAst = = null ) { <nl> name = annotation . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> index ed557e0 . . 7af4444 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java <nl> @ @ - 649 , 7 + 649 , 7 @ @ public class VisibilityModifierCheck <nl> * @ return String representation of given type ' s name . <nl> * / <nl> private static String getTypeName ( DetailAST type , boolean isCanonicalName ) { <nl> - String typeName ; <nl> + final String typeName ; <nl> if ( isCanonicalName ) { <nl> typeName = getCanonicalName ( type ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> index 51e21c6 . . f9a2949 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java <nl> @ @ - 249 , 7 + 249 , 7 @ @ public class ImportOrderCheck <nl> for ( int i = 0 ; i < packageGroups . length ; i + + ) { <nl> String pkg = packageGroups [ i ] ; <nl> final StringBuilder pkgBuilder = new StringBuilder ( pkg ) ; <nl> - Pattern grp ; <nl> + final Pattern grp ; <nl> <nl> / / if the pkg name is the wildcard , make it match zero chars <nl> / / from any name , so it will always be used as last resort . <nl> @ @ - 532 , 7 + 532 , 7 @ @ public class ImportOrderCheck <nl> * / <nl> private static int compare ( String string1 , String string2 , <nl> boolean caseSensitive ) { <nl> - int result ; <nl> + final int result ; <nl> if ( caseSensitive ) { <nl> result = string1 . compareTo ( string2 ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java <nl> index 0046a82 . . 9354442 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java <nl> @ @ - 112 , 7 + 112 , 7 @ @ class PkgControl { <nl> * @ return an { @ link AccessResult } . <nl> * / <nl> AccessResult checkAccess ( final String forImport , final String inPkg ) { <nl> - AccessResult result ; <nl> + final AccessResult result ; <nl> final AccessResult returnValue = localCheckAccess ( forImport , inPkg ) ; <nl> if ( returnValue ! = AccessResult . UNKNOWN ) { <nl> result = returnValue ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> index ada165b . . 5224acc 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> @ @ - 565 , 7 + 565 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> * @ return token which begins the line . <nl> * / <nl> private static DetailAST findTokenWhichBeginsTheLine ( DetailAST root ) { <nl> - DetailAST tokenWhichBeginsTheLine ; <nl> + final DetailAST tokenWhichBeginsTheLine ; <nl> if ( isUsingOfObjectReferenceToInvokeMethod ( root ) ) { <nl> tokenWhichBeginsTheLine = findStartTokenOfMethodCallChain ( root ) ; <nl> } <nl> @ @ - 726 , 7 + 726 , 7 @ @ public class CommentsIndentationCheck extends Check { <nl> * / <nl> private static boolean areSameLevelIndented ( DetailAST comment , DetailAST prevStmt , <nl> DetailAST nextStmt ) { <nl> - boolean result ; <nl> + final boolean result ; <nl> if ( prevStmt = = null ) { <nl> result = comment . getColumnNo ( ) = = nextStmt . getColumnNo ( ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> index ab72c52 . . 1cbe5c4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> @ @ - 137 , 7 + 137 , 7 @ @ public class HandlerFactory { <nl> * / <nl> public AbstractExpressionHandler getHandler ( IndentationCheck indentCheck , <nl> DetailAST ast , AbstractExpressionHandler parent ) { <nl> - AbstractExpressionHandler resultHandler ; <nl> + final AbstractExpressionHandler resultHandler ; <nl> final AbstractExpressionHandler handler = <nl> createdHandlers . get ( ast ) ; <nl> if ( handler ! = null ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> index c4c2b1e . . 3d1267e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public class MethodCallHandler extends AbstractExpressionHandler { <nl> <nl> @ Override <nl> protected IndentLevel getIndentImpl ( ) { <nl> - IndentLevel indentLevel ; <nl> + final IndentLevel indentLevel ; <nl> / / if inside a method call ' s params , this could be part of <nl> / / an expression , so get the previous line ' s start <nl> if ( getParent ( ) instanceof MethodCallHandler ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index 833c6ed . . 05b4195 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 180 , 7 + 180 , 7 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> final String treeCacheKey = blockCommentNode . getLineNo ( ) + " : " <nl> + blockCommentNode . getColumnNo ( ) ; <nl> <nl> - ParseStatus result ; <nl> + final ParseStatus result ; <nl> <nl> if ( TREE _ CACHE . get ( ) . containsKey ( treeCacheKey ) ) { <nl> result = TREE _ CACHE . get ( ) . get ( treeCacheKey ) ; <nl> @ @ - 418 , 7 + 418 , 7 @ @ public abstract class AbstractJavadocCheck extends Check { <nl> * @ return token type from JavadocTokenTypes <nl> * / <nl> private static int getTokenType ( ParseTree node ) { <nl> - int tokenType ; <nl> + final int tokenType ; <nl> <nl> if ( node . getChildCount ( ) = = 0 ) { <nl> tokenType = ( ( TerminalNode ) node ) . getSymbol ( ) . getType ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> index 0c2275b . . 5e0088a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java <nl> @ @ - 395 , 7 + 395 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { <nl> * @ return Some javadoc . <nl> * / <nl> private static int getMethodsNumberOfLine ( DetailAST methodDef ) { <nl> - int numberOfLines ; <nl> + final int numberOfLines ; <nl> final DetailAST lcurly = methodDef . getLastChild ( ) ; <nl> final DetailAST rcurly = lcurly . getLastChild ( ) ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java <nl> index 95f6808 . . 342d2b7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java <nl> @ @ - 339 , 7 + 339 , 7 @ @ public class JavaNCSSCheck extends Check { <nl> * @ return true if the expression is countable , false otherwise <nl> * / <nl> private static boolean isExpressionCountable ( DetailAST ast ) { <nl> - boolean countable ; <nl> + final boolean countable ; <nl> <nl> / / count expressions only if they are direct child to a slist ( method <nl> / / body , for loop . . . ) <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> index 7f45995 . . a2d2170 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> @ @ - 145 , 7 + 145 , 7 @ @ public class NoWhitespaceAfterCheck extends Check { <nl> * @ return node before ast . <nl> * / <nl> private static DetailAST getWhitespaceFollowedNode ( DetailAST ast ) { <nl> - DetailAST whitespaceFollowedAst ; <nl> + final DetailAST whitespaceFollowedAst ; <nl> switch ( ast . getType ( ) ) { <nl> case TokenTypes . TYPECAST : <nl> whitespaceFollowedAst = ast . findFirstToken ( TokenTypes . RPAREN ) ; <nl> @ @ - 277 , 7 + 277 , 7 @ @ public class NoWhitespaceAfterCheck extends Check { <nl> * @ return previous node by text order . <nl> * / <nl> private static DetailAST getIndexOpPreviousElement ( DetailAST ast ) { <nl> - DetailAST result ; <nl> + final DetailAST result ; <nl> final DetailAST firstChild = ast . getFirstChild ( ) ; <nl> if ( firstChild . getType ( ) = = TokenTypes . INDEX _ OP ) { <nl> / / second or higher array index <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java <nl> index a059727 . . 141ad4a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java <nl> @ @ - 104 , 7 + 104 , 7 @ @ public class ParseTreeTableModel implements TreeModel { <nl> * @ return the type for column number { @ code column } . <nl> * / <nl> public Class < ? > getColumnClass ( int column ) { <nl> - Class < ? > columnClass ; <nl> + final Class < ? > columnClass ; <nl> <nl> switch ( column ) { <nl> case 0 : <nl> @ @ - 136 , 7 + 136 , 7 @ @ public class ParseTreeTableModel implements TreeModel { <nl> * / <nl> public Object getValueAt ( Object node , int column ) { <nl> final DetailAST ast = ( DetailAST ) node ; <nl> - Object value ; <nl> + final Object value ; <nl> <nl> switch ( column ) { <nl> case 1 : <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> index d824c56 . . efe03db 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java <nl> @ @ - 439 , 7 + 439 , 7 @ @ public final class JavadocUtils { <nl> * @ return name , of the javadocTagSection ' s tag . <nl> * / <nl> public static String getTagName ( DetailNode javadocTagSection ) { <nl> - String javadocTagName ; <nl> + final String javadocTagName ; <nl> if ( javadocTagSection . getType ( ) = = JavadocTokenTypes . JAVADOC _ INLINE _ TAG ) { <nl> javadocTagName = getNextSibling ( <nl> getFirstChild ( javadocTagSection ) ) . getText ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> index 94e6cf4 . . e892f5a 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java <nl> @ @ - 149 , 7 + 149 , 7 @ @ public class TokenTypesDocletTest { <nl> private static RootDoc getRootDoc ( JavadocTool javadocTool , ListBuffer < String [ ] > options , <nl> ListBuffer < String > names ) throws Exception { <nl> final Method getRootDocImpl = getMethodGetRootDocImplByReflection ( ) ; <nl> - RootDoc rootDoc ; <nl> + final RootDoc rootDoc ; <nl> if ( System . getProperty ( " java . version " ) . startsWith ( " 1 . 7 . " ) ) { <nl> rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , " UTF - 8 " , <nl> new ModifierFilter ( ModifierFilter . ALL _ ACCESS ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java <nl> index 645a795 . . a03adf6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java <nl> @ @ - 56 , 7 + 56 , 7 @ @ class CompareTreesWithComments extends Check { <nl> } <nl> <nl> private static boolean isAstEquals ( DetailAST expected , DetailAST actual ) { <nl> - boolean result ; <nl> + final boolean result ; <nl> if ( expected = = actual ) { <nl> result = true ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> index 848cca9 . . 95727df 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java <nl> @ @ - 138 , 7 + 138 , 7 @ @ public class CommitValidationTest { <nl> } <nl> <nl> private static List < RevCommit > getCommitsToCheck ( ) throws Exception { <nl> - List < RevCommit > commits ; <nl> + final List < RevCommit > commits ; <nl> try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { <nl> final RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; <nl> if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { <nl> @ @ - 168 , 8 + 168 , 8 @ @ public class CommitValidationTest { <nl> RevCommitsPair revCommitIteratorPair ; <nl> <nl> try ( RevWalk revWalk = new RevWalk ( repo ) ) { <nl> - Iterator < RevCommit > first ; <nl> - Iterator < RevCommit > second ; <nl> + final Iterator < RevCommit > first ; <nl> + final Iterator < RevCommit > second ; <nl> final ObjectId headId = repo . resolve ( Constants . HEAD ) ; <nl> final RevCommit headCommit = revWalk . parseCommit ( headId ) ; <nl>

TEST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index cb31167 . . 7e1b661 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 99 , 7 + 99 , 7 @ @ 
 < property name = " ignoreConstructor " value = " true " / > 
 < property name = " ignoreField " value = " true " / > 
 < property name = " ignoreMethod " value = " true " / > 
 - < property name = " ignorePattern " value = " ^ * \ * * [ ^ ] + $ " / > 
 + < property name = " ignorePattern " value = " ^ ( * \ * * [ ^ ] + ) | ( ( package | import ) . * ) $ " / > 
 < / module > 
 < module name = " AvoidHidingCauseException " / > 
 < module name = " MultipleStringLiteralsExtended " > 
 diff - - git a / config / sevntu _ suppressions . xml b / config / sevntu _ suppressions . xml 
 index 3406ac6 . . 307bced 100644 
 - - - a / config / sevntu _ suppressions . xml 
 + + + b / config / sevntu _ suppressions . xml 
 @ @ - 11 , 6 + 11 , 8 @ @ 
 files = " JavadocStyleCheck \ . java | AbstractTypeAwareCheck \ . java | XMLLogger \ . java " / > 
 < suppress checks = " MultipleStringLiteralsExtended " 
 files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 + < suppress checks = " LineLengthExtended " 
 + files = " ParseTreeBuilder \ . java " / > 
 
 < ! - - Override methods from base class . 
 Issue : https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / issues / 166 - - > 
 @ @ - 45 , 4 + 47 , 8 @ @ 
 < suppress checks = " CustomDeclarationOrder " 
 files = " AbstractViolationReporter . java " 
 lines = " 152 , 164 " / > 
 + 
 + < ! - - Tone down the checking for test code - - > 
 + < suppress checks = " CauseParameterInException | ForbidCCommentsInMethods | IllegalCatchExtended " 
 + files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < / suppressions > 
 \ No newline at end of file 
 diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 index be3c04f . . 9788672 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 @ @ - 143 , 8 + 143 , 8 @ @ public class BaseCheckTestSupport { 
 parseInt = parseInt . substring ( 0 , parseInt . indexOf ( ' : ' ) ) ; 
 final int lineNumber = Integer . parseInt ( parseInt ) ; 
 assertTrue ( " input file is expected to have a warning comment on line number " 
 - + lineNumber , theWarnings . remove ( ( Integer ) lineNumber ) 
 - | | previousLineNumber = = lineNumber ) ; 
 + + lineNumber , previousLineNumber = = lineNumber 
 + | | theWarnings . remove ( ( Integer ) lineNumber ) ) ; 
 previousLineNumber = lineNumber ; 
 } 
 
 diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java 
 index 52479b5 . . 9398dcf 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java 
 @ @ - 59 , 10 + 59 , 6 @ @ public class BaseIndentationCheckSupport extends BaseCheckTestSupport { 
 return getLinesWithWarnAndCheckComments ( fileName , TAB _ WIDTH ) ; 
 } 
 
 - private enum CommentType { 
 - MULTILEVEL , SINGLE _ LEVEL , NON _ STRICT _ LEVEL , UNKNOWN 
 - } 
 - 
 private static Integer [ ] getLinesWithWarnAndCheckComments ( String aFileName , 
 final int tabWidth ) 
 throws IOException { 
 @ @ - 213 , 4 + 209 , 8 @ @ public class BaseIndentationCheckSupport extends BaseCheckTestSupport { 
 } 
 return 0 ; 
 } 
 + 
 + private enum CommentType { 
 + MULTILEVEL , SINGLE _ LEVEL , NON _ STRICT _ LEVEL , UNKNOWN 
 + } 
 } 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule43onestatement / OneStatementPerLineTest . java b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule43onestatement / OneStatementPerLineTest . java 
 index e93ed89 . . 06f73c1 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter4formatting / rule43onestatement / OneStatementPerLineTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter4formatting / rule43onestatement / OneStatementPerLineTest . java 
 @ @ - 80 , 7 + 80 , 7 @ @ public class OneStatementPerLineTest extends BaseCheckTestSupport { 
 " multiple . statements . line " ) ; 
 
 final String [ ] expected = { 
 - " 32 : 6 : " + msg , 
 + " 32 : 6 : " + msg , 
 " 37 : 58 : " + msg , 
 " 38 : 58 : " + msg , 
 " 38 : 74 : " + msg , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 index 1629bef . . 6143f68 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 @ @ - 132 , 7 + 132 , 7 @ @ public class BaseCheckTestSupport { 
 String . . . expected ) 
 throws Exception { 
 verify ( checker , 
 - new File [ ] { new File ( processedFilename ) } , 
 + new File [ ] { new File ( processedFilename ) } , 
 messageFileName , expected ) ; 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 18d9d2c . . c6f349e 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 631 , 7 + 631 , 7 @ @ public class MainTest { 
 + " Checkstyle ends with 1 errors . % n " ) ; 
 assertEquals ( expectedExceptionMessage , systemOut . getLog ( ) ) ; 
 
 - final String exceptionFirstLine = String . format ( Locale . ROOT , 
 + final String exceptionFirstLine = String . format ( Locale . ROOT , 
 " com . puppycrawl . tools . checkstyle . api . " 
 + " CheckstyleException : Exception was thrown while processing " 
 + new File ( getNonCompilablePath ( " InputIncorrectClass . java " ) ) . getPath ( ) 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 index 41c1eaa . . 2feb02f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 @ @ - 253 , 7 + 253 , 7 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . SINGLE _ LINE _ COMMENT } ; 
 + return new int [ ] { TokenTypes . SINGLE _ LINE _ COMMENT } ; 
 } 
 
 @ Override 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractCheckTest . java 
 index 384ea5d . . 518cee3 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / AbstractCheckTest . java 
 @ @ - 57 , 17 + 57 , 17 @ @ public class AbstractCheckTest { 
 final AbstractCheck check = new AbstractCheck ( ) { 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return CommonUtils . EMPTY _ INT _ ARRAY ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return CommonUtils . EMPTY _ INT _ ARRAY ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + return CommonUtils . EMPTY _ INT _ ARRAY ; 
 } 
 } ; 
 / / Eventually it will become clear abstract method 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / CheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / CheckTest . java 
 index 36b8609 . . 9b82a15 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / CheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / CheckTest . java 
 @ @ - 22 , 6 + 22 , 8 @ @ package com . puppycrawl . tools . checkstyle . api ; 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 
 + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 + 
 public class CheckTest { 
 @ SuppressWarnings ( " deprecation " ) 
 @ Test 
 @ @ - 29 , 7 + 31 , 7 @ @ public class CheckTest { 
 final Object module = new Check ( ) { 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return null ; 
 + return CommonUtils . EMPTY _ INT _ ARRAY ; 
 } 
 } ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java 
 index 2333de8 . . 68d9ea4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / NewlineAtEndOfFileCheckTest . java 
 @ @ - 189 , 7 + 189 , 7 @ @ public class NewlineAtEndOfFileCheckTest 
 . getDeclaredMethod ( " endsWithNewline " , RandomAccessFile . class ) ; 
 method . setAccessible ( true ) ; 
 final RandomAccessFile file = mock ( RandomAccessFile . class ) ; 
 - when ( file . length ( ) ) . thenReturn ( 2000000L ) ; 
 + when ( file . length ( ) ) . thenReturn ( 2 _ 000 _ 000L ) ; 
 try { 
 method . invoke ( new NewlineAtEndOfFileCheck ( ) , file ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java 
 index b3c6f1f . . de66502 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / MissingDeprecatedCheckTest . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public class MissingDeprecatedCheckTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testGetRequiredTokens ( ) { 
 - final MissingDeprecatedCheck checkObj = new MissingDeprecatedCheck ( ) ; 
 + final MissingDeprecatedCheck checkObj = new MissingDeprecatedCheck ( ) ; 
 final int [ ] expected = { 
 TokenTypes . INTERFACE _ DEF , 
 TokenTypes . CLASS _ DEF , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 index b9fc9f6 . . e92bf47 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / OneTopLevelClassCheckTest . java 
 @ @ - 53 , 7 + 53 , 7 @ @ public class OneTopLevelClassCheckTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testAcceptableTokens ( ) { 
 - final OneTopLevelClassCheck check = new OneTopLevelClassCheck ( ) ; 
 + final OneTopLevelClassCheck check = new OneTopLevelClassCheck ( ) ; 
 check . getAcceptableTokens ( ) ; 
 / / ZERO tokens as Check do Traverse of Tree himself , he does not need to subscribed to 
 / / Tokens 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java 
 index 6913c8e . . f570fb4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testGetRequiredTokens ( ) { 
 - final IllegalImportCheck checkObj = new IllegalImportCheck ( ) ; 
 + final IllegalImportCheck checkObj = new IllegalImportCheck ( ) ; 
 final int [ ] expected = { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; 
 assertArrayEquals ( expected , checkObj . getRequiredTokens ( ) ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 index 852a43d . . c4f4969 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheckTest . java 
 @ @ - 321 , 7 + 321 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 
 final String [ ] expected = { 
 " 19 : " + getCheckMessage ( MSG _ ERROR , " ) " , 16 , 0 ) , 
 - " 22 : " + getCheckMessage ( MSG _ ERROR , " ) " , 8 , 4 ) , 
 + " 22 : " + getCheckMessage ( MSG _ ERROR , " ) " , 8 , 4 ) , 
 } ; 
 
 verifyWarns ( checkConfig , 
 @ @ - 1583 , 7 + 1583 , 7 @ @ public class IndentationCheckTest extends BaseCheckTestSupport { 
 " 20 : " + getCheckMessage ( MSG _ CHILD _ ERROR , " method def " , 16 , 4 ) , 
 " 21 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " method def modifier " , 24 , " 18 , 20 , 22 " ) , 
 " 23 : " + getCheckMessage ( MSG _ CHILD _ ERROR _ MULTI , " method def " , 32 , " 20 , 22 , 24 " ) , 
 - " 24 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " method def rcurly " , 24 , " 18 , 20 , 22 " ) , 
 + " 24 : " + getCheckMessage ( MSG _ ERROR _ MULTI , " method def rcurly " , 24 , " 18 , 20 , 22 " ) , 
 " 26 : " + getCheckMessage ( MSG _ ERROR , " method def rcurly " , 8 , 2 ) , 
 } ; 
 verifyWarns ( checkConfig , getPath ( " InputAnonymousClassInMethod . java " ) , expected ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 index c083a0c . . b2ae65b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 @ @ - 198 , 7 + 198 , 7 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { 
 
 @ Override 
 public int [ ] getDefaultJavadocTokens ( ) { 
 - return new int [ ] { JavadocTokenTypes . JAVADOC } ; 
 + return new int [ ] { JavadocTokenTypes . JAVADOC } ; 
 } 
 
 @ Override 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / NPathComplexityCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / NPathComplexityCheckTest . java 
 index 9437f33 . . eba7895 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / NPathComplexityCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / metrics / NPathComplexityCheckTest . java 
 @ @ - 71 , 7 + 71 , 7 @ @ public class NPathComplexityCheckTest extends BaseCheckTestSupport { 
 
 checkConfig . addAttribute ( " max " , " 0 " ) ; 
 
 - final long largerThanMaxInt = 3486784401L ; 
 + final long largerThanMaxInt = 3 _ 486 _ 784 _ 401L ; 
 
 final String [ ] expected = { 
 " 9 : 5 : " + getCheckMessage ( MSG _ KEY , largerThanMaxInt , 0 ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 index bffcc61 . . 2c01aed 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 @ @ - 130 , 7 + 130 , 7 @ @ public class RedundantModifierCheckTest 
 createCheckConfig ( RedundantModifierCheck . class ) ; 
 
 final String [ ] expected = { 
 - " 18 : 5 : " + getCheckMessage ( MSG _ KEY , " public " ) , 
 + " 18 : 5 : " + getCheckMessage ( MSG _ KEY , " public " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputRedundantPublicModifierInNotPublicClass . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java 
 index 7bc4ca3 . . 58b3718 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / AbbreviationAsWordInNameCheckTest . java 
 @ @ - 50 , 7 + 50 , 7 @ @ public class AbbreviationAsWordInNameCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " ignoreOverriddenMethods " , " true " ) ; 
 
 final String [ ] expected = { 
 - " 9 : " + getWarningMessage ( " FactoryWithBADNAme " , expectedCapitalCount ) , 
 + " 9 : " + getWarningMessage ( " FactoryWithBADNAme " , expectedCapitalCount ) , 
 " 12 : " + getWarningMessage ( " AbstractCLASSName " , expectedCapitalCount ) , 
 " 32 : " + getWarningMessage ( " AbstractINNERRClass " , expectedCapitalCount ) , 
 " 37 : " + getWarningMessage ( " WellNamedFACTORY " , expectedCapitalCount ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java 
 index 33e141e . . e0372f1 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / LineLengthCheckTest . java 
 @ @ - 62 , 7 + 62 , 7 @ @ public class LineLengthCheckTest extends BaseCheckTestSupport { 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( LineLengthCheck . class ) ; 
 checkConfig . addAttribute ( " max " , " 80 " ) ; 
 - checkConfig . addAttribute ( " ignorePattern " , " ^ . * is OK . * regexp . * $ " ) ; 
 + checkConfig . addAttribute ( " ignorePattern " , " ^ . * is OK . * regexp . * $ " ) ; 
 final String [ ] expected = { 
 " 18 : " + getCheckMessage ( MSG _ KEY , 80 , 81 ) , 
 " 145 : " + getCheckMessage ( MSG _ KEY , 80 , 83 ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 index e892f5a . . ec34de0 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 @ @ - 92 , 8 + 92 , 8 @ @ public class TokenTypesDocletTest { 
 / / a lot of different places , must not be changed and an int value is used to encrypt 
 / / a token type . 
 final ListBuffer < String [ ] > options = new ListBuffer < > ( ) ; 
 - options . add ( new String [ ] { " - doclet " , " TokenTypesDoclet " } ) ; 
 - options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; 
 + options . add ( new String [ ] { " - doclet " , " TokenTypesDoclet " } ) ; 
 + options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; 
 
 final ListBuffer < String > names = new ListBuffer < > ( ) ; 
 names . add ( getPath ( " InputTokenTypesDocletNotConstants . java " ) ) ; 
 @ @ - 109 , 7 + 109 , 7 @ @ public class TokenTypesDocletTest { 
 @ Test 
 public void testEmptyJavadoc ( ) throws Exception { 
 final ListBuffer < String [ ] > options = new ListBuffer < > ( ) ; 
 - options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; 
 + options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; 
 
 final ListBuffer < String > names = new ListBuffer < > ( ) ; 
 names . add ( getPath ( " InputTokenTypesDocletEmptyJavadoc . java " ) ) ; 
 @ @ - 133 , 7 + 133 , 7 @ @ public class TokenTypesDocletTest { 
 @ Test 
 public void testCorrect ( ) throws Exception { 
 final ListBuffer < String [ ] > options = new ListBuffer < > ( ) ; 
 - options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; 
 + options . add ( new String [ ] { " - destfile " , " target / tokentypes . properties " } ) ; 
 
 final ListBuffer < String > names = new ListBuffer < > ( ) ; 
 names . add ( getPath ( " InputTokenTypesDocletCorrect . java " ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java 
 index 43e6c34 . . 5fbe174 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CommentsTest . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { 
 
 @ Test 
 public void testToString ( ) { 
 - final Comment comment = new Comment ( new String [ ] { " value " } , 1 , 2 , 3 ) ; 
 + final Comment comment = new Comment ( new String [ ] { " value " } , 1 , 2 , 3 ) ; 
 Assert . assertEquals ( " Comment [ 2 : 1 - 2 : 3 ] " , comment . toString ( ) ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 index 0061d4b . . ff6e4ee 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / JavadocParseTreeTest . java 
 @ @ - 38 , 8 + 38 , 8 @ @ import com . google . common . base . Charsets ; 
 import com . google . common . io . Files ; 
 
 public class JavadocParseTreeTest { 
 - private JavadocParser parser ; 
 private final BaseErrorListener errorListener = new FailOnErrorListener ( ) ; 
 + private JavadocParser parser ; 
 
 private ParseTree parseJavadoc ( String aBlockComment ) 
 throws IOException { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java 
 index 452fe82 . . 0e974dd 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / javadoc / ParseTreeBuilder . java 
 @ @ - 58 , 7 + 58 , 7 @ @ import com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser . TrTagOpenC 
 * It is located in ' contribution ' repository : 
 * < a href = " https : / / github . com / checkstyle / contribution / blob / master / javadoc - expected - tree - generator / ExpectedParseTreeGenerator . java " > Link < / a > 
 * / 
 - @ Generated ( " ExpectedParseTreeGenerator " ) 
 + @ Generated ( value = " ExpectedParseTreeGenerator " ) 
 / / @ formatter : off 
 final class ParseTreeBuilder { 
 private static final String LINE _ SEPARATOR = System . getProperty ( " line . separator " ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 index 08a3fbb . . 7a84dcc 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 @ @ - 278 , 7 + 278 , 7 @ @ public final class CheckUtil { 
 } 
 
 public static String getTokenText ( int [ ] tokens , int . . . subtractions ) { 
 - if ( Arrays . equals ( tokens , TokenUtils . getAllTokenIds ( ) ) & & subtractions . length = = 0 ) { 
 + if ( subtractions . length = = 0 & & Arrays . equals ( tokens , TokenUtils . getAllTokenIds ( ) ) ) { 
 return " TokenTypes . " ; 
 } 
 else { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 index ec133c7 . . c41e09a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 @ @ - 92 , 10 + 92 , 6 @ @ public class CommitValidationTest { 
 
 private static final int PREVIOUS _ COMMITS _ TO _ CHECK _ COUNT = 10 ; 
 
 - private enum CommitsResolutionMode { 
 - BY _ COUNTER , BY _ LAST _ COMMIT _ AUTHOR 
 - } 
 - 
 private static final CommitsResolutionMode COMMITS _ RESOLUTION _ MODE = 
 CommitsResolutionMode . BY _ LAST _ COMMIT _ AUTHOR ; 
 
 @ @ - 220 , 8 + 216 , 8 @ @ public class CommitValidationTest { 
 commits . add ( lastCommit ) ; 
 
 boolean wasLastCheckedCommitAuthorSameAsLastCommit = true ; 
 - while ( previousCommitsIterator . hasNext ( ) 
 - & & wasLastCheckedCommitAuthorSameAsLastCommit ) { 
 + while ( wasLastCheckedCommitAuthorSameAsLastCommit 
 + & & previousCommitsIterator . hasNext ( ) ) { 
 final RevCommit currentCommit = previousCommitsIterator . next ( ) ; 
 final String currentCommitAuthor = currentCommit . getAuthorIdent ( ) . getName ( ) ; 
 if ( currentCommitAuthor . equals ( lastCommitAuthor ) ) { 
 @ @ - 251 , 6 + 247 , 10 @ @ public class CommitValidationTest { 
 + getRulesForCommitMessageFormatting ( ) ; 
 } 
 
 + private enum CommitsResolutionMode { 
 + BY _ COUNTER , BY _ LAST _ COMMIT _ AUTHOR 
 + } 
 + 
 private static class RevCommitsPair { 
 private final Iterator < RevCommit > first ; 
 private final Iterator < RevCommit > second ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 index 6e8737f . . 38a0345 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 @ @ - 159 , 12 + 159 , 9 @ @ public class XDocsPagesTest { 
 . replace ( " . . . " , " " ) . trim ( ) ; 
 
 if ( unserializedSource . charAt ( 0 ) ! = ' < ' 
 - | | unserializedSource . charAt ( unserializedSource . length ( ) - 1 ) ! = ' > ' ) { 
 - continue ; 
 - } 
 - 
 - / / no dtd testing yet 
 - if ( unserializedSource . contains ( " < ! " ) ) { 
 + | | unserializedSource . charAt ( unserializedSource . length ( ) - 1 ) ! = ' > ' 
 + / / no dtd testing yet 
 + | | unserializedSource . contains ( " < ! " ) ) { 
 continue ; 
 } 


NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java 
 index e7e6640 . . 52479b5 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / BaseIndentationCheckSupport . java 
 @ @ - 126 , 7 + 126 , 7 @ @ public class BaseIndentationCheckSupport extends BaseCheckTestSupport { 
 final int indentInComment = getIndentFromComment ( comment ) ; 
 final boolean isWarnComment = isWarnComment ( comment ) ; 
 
 - boolean result ; 
 + final boolean result ; 
 final CommentType type = getCommentType ( comment ) ; 
 switch ( type ) { 
 case MULTILEVEL : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 index b1f78ca . . be1187b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Main . java 
 @ @ - 324 , 8 + 324 , 8 @ @ public final class Main { 
 throws FileNotFoundException { 
 
 / / setup the output stream 
 - OutputStream out ; 
 - boolean closeOutputStream ; 
 + final OutputStream out ; 
 + final boolean closeOutputStream ; 
 if ( outputLocation = = null ) { 
 out = System . out ; 
 closeOutputStream = false ; 
 @ @ - 336 , 7 + 336 , 7 @ @ public final class Main { 
 } 
 
 / / setup a listener 
 - AuditListener listener ; 
 + final AuditListener listener ; 
 if ( XML _ FORMAT _ NAME . equals ( format ) ) { 
 listener = new XMLLogger ( out , closeOutputStream ) ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 index c374015 . . 3f277df 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 @ @ - 327 , 7 + 327 , 7 @ @ public final class TreeWalker 
 * / 
 private void notifyBegin ( DetailAST rootAST , FileContents contents , 
 AstState astState ) { 
 - Set < Check > checks ; 
 + final Set < Check > checks ; 
 
 if ( astState = = AstState . WITH _ COMMENTS ) { 
 checks = commentChecks ; 
 @ @ - 348 , 7 + 348 , 7 @ @ public final class TreeWalker 
 * @ param astState state of AST . 
 * / 
 private void notifyEnd ( DetailAST rootAST , AstState astState ) { 
 - Set < Check > checks ; 
 + final Set < Check > checks ; 
 
 if ( astState = = AstState . WITH _ COMMENTS ) { 
 checks = commentChecks ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 index b7d4d3a . . 1fd69d7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 @ @ - 225 , 7 + 225 , 7 @ @ public class XMLLogger 
 * / 
 private static String encodeAmpersand ( String value , int ampPosition ) { 
 final int nextSemi = value . indexOf ( ' ; ' , ampPosition ) ; 
 - String result ; 
 + final String result ; 
 if ( nextSemi < 0 
 | | ! isReference ( value . substring ( ampPosition , nextSemi + 1 ) ) ) { 
 result = " & amp ; " ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 index c8e585e . . cd763b1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 @ @ - 176 , 7 + 176 , 7 @ @ public final class FileContents implements CommentListener { 
 * * / 
 private String [ ] extractCComment ( int startLineNo , int startColNo , 
 int endLineNo , int endColNo ) { 
 - String [ ] returnValue ; 
 + final String [ ] returnValue ; 
 if ( startLineNo = = endLineNo ) { 
 returnValue = new String [ 1 ] ; 
 returnValue [ 0 ] = line ( startLineNo - 1 ) . substring ( startColNo , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 index 88b902f . . e1ea60c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / SuppressWarningsHolder . java 
 @ @ - 333 , 7 + 333 , 7 @ @ public class SuppressWarningsHolder 
 * @ return returns ast - parent of given 
 * / 
 private static DetailAST getAcceptableParent ( DetailAST child ) { 
 - DetailAST result ; 
 + final DetailAST result ; 
 final DetailAST parent = child . getParent ( ) ; 
 switch ( parent . getType ( ) ) { 
 case TokenTypes . ANNOTATION _ DEF : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java 
 index 0d107ec . . 647a357 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / TrailingCommentCheck . java 
 @ @ - 166 , 8 + 166 , 8 @ @ public class TrailingCommentCheck extends Check { 
 
 for ( Integer lineNo : lines ) { 
 final String line = getLines ( ) [ lineNo - 1 ] ; 
 - String lineBefore ; 
 - TextBlock comment ; 
 + final String lineBefore ; 
 + final TextBlock comment ; 
 if ( cppComments . containsKey ( lineNo ) ) { 
 comment = cppComments . get ( lineNo ) ; 
 lineBefore = line . substring ( 0 , comment . getStartColNo ( ) ) ; 
 @ @ - 197 , 7 + 197 , 7 @ @ public class TrailingCommentCheck extends Check { 
 * @ return true if the comment if legal . 
 * / 
 private boolean isLegalComment ( final TextBlock comment ) { 
 - boolean legal ; 
 + final boolean legal ; 
 
 / / multi - line comment can not be legal 
 if ( legalComment = = null | | comment . getStartLineNo ( ) ! = comment . getEndLineNo ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 index 7c2641a . . 566cb25 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 @ @ - 153 , 7 + 153 , 7 @ @ public class EmptyBlockCheck 
 
 if ( leftCurly ! = null ) { 
 if ( option = = BlockOption . STMT ) { 
 - boolean emptyBlock ; 
 + final boolean emptyBlock ; 
 if ( leftCurly . getType ( ) = = TokenTypes . LCURLY ) { 
 emptyBlock = leftCurly . getNextSibling ( ) . getType ( ) ! = TokenTypes . CASE _ GROUP ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 index e0ddd02 . . 0735850 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheck . java 
 @ @ - 177 , 7 + 177 , 7 @ @ public class LeftCurlyCheck 
 
 @ Override 
 public void visitToken ( DetailAST ast ) { 
 - DetailAST startToken ; 
 + final DetailAST startToken ; 
 DetailAST brace ; 
 
 switch ( ast . getType ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 index 312f29f . . 104985e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / NeedBracesCheck . java 
 @ @ - 265 , 7 + 265 , 7 @ @ public class NeedBracesCheck extends Check { 
 * @ return true if current statement is single - line statement . 
 * / 
 private static boolean isSingleLineStatement ( DetailAST statement ) { 
 - boolean result ; 
 + final boolean result ; 
 
 switch ( statement . getType ( ) ) { 
 case TokenTypes . LITERAL _ IF : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 index e67fe37 . . 7d7ce5b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / RightCurlyCheck . java 
 @ @ - 318 , 7 + 318 , 7 @ @ public class RightCurlyCheck extends Check { 
 / / Attempt to locate the tokens to do the check 
 boolean shouldCheckLastRcurly = false ; 
 DetailAST rcurly = null ; 
 - DetailAST lcurly ; 
 + final DetailAST lcurly ; 
 DetailAST nextToken ; 
 
 switch ( ast . getType ( ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 index ee65cf5 . . 336bfc9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 @ @ - 376 , 7 + 376 , 7 @ @ public class EqualsAvoidNullCheck extends Check { 
 * @ return true if the object is of String type . 
 * / 
 private boolean isCalledOnStringFieldOrVariable ( DetailAST objCalledOn ) { 
 - boolean result ; 
 + final boolean result ; 
 final DetailAST previousSiblingAst = objCalledOn . getPreviousSibling ( ) ; 
 if ( previousSiblingAst = = null ) { 
 result = isStringFieldOrVariable ( objCalledOn ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 index 6afc7d6 . . 7aa191b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 @ @ - 161 , 7 + 161 , 7 @ @ public class FallThroughCheck extends Check { 
 * / 
 private boolean isTerminated ( final DetailAST ast , boolean useBreak , 
 boolean useContinue ) { 
 - boolean terminated ; 
 + final boolean terminated ; 
 
 switch ( ast . getType ( ) ) { 
 case TokenTypes . LITERAL _ RETURN : 
 @ @ - 249 , 7 + 249 , 7 @ @ public class FallThroughCheck extends Check { 
 * @ return true if loop is terminated . 
 * / 
 private boolean checkLoop ( final DetailAST ast ) { 
 - DetailAST loopBody ; 
 + final DetailAST loopBody ; 
 if ( ast . getType ( ) = = TokenTypes . LITERAL _ DO ) { 
 final DetailAST lparen = ast . findFirstToken ( TokenTypes . DO _ WHILE ) ; 
 loopBody = lparen . getPreviousSibling ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 index eb536f3 . . 3b12dd0 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 @ @ - 508 , 7 + 508 , 7 @ @ public class RequireThisCheck extends Check { 
 * @ return whether it was found . 
 * / 
 protected AbstractFrame getIfContains ( DetailAST nameToFind , boolean lookForMethod ) { 
 - AbstractFrame frame ; 
 + final AbstractFrame frame ; 
 
 if ( ! lookForMethod 
 & & containsFieldOrVariable ( nameToFind ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 index 42ba85f . . ed9116d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 @ @ - 268 , 7 + 268 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { 
 
 if ( ! isVariableMatchesIgnorePattern ( variable . getText ( ) ) ) { 
 final DetailAST semicolonAst = ast . getNextSibling ( ) ; 
 - Entry < DetailAST , Integer > entry ; 
 + final Entry < DetailAST , Integer > entry ; 
 if ( validateBetweenScopes ) { 
 entry = calculateDistanceBetweenScopes ( semicolonAst , variable ) ; 
 } 
 @ @ - 572 , 7 + 572 , 7 @ @ public class VariableDeclarationUsageDistanceCheck extends Check { 
 DetailAST firstNodeInsideBlock = null ; 
 
 if ( ! isVariableInOperatorExpr ( block , variable ) ) { 
 - DetailAST currentNode ; 
 + final DetailAST currentNode ; 
 
 / / Find currentNode for DO - WHILE block . 
 if ( block . getType ( ) = = TokenTypes . LITERAL _ DO ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 index 998f1ef . . 4bb90f7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / ThrowsCountCheck . java 
 @ @ - 163 , 7 + 163 , 7 @ @ public final class ThrowsCountCheck extends Check { 
 * / 
 private static String getAnnotationName ( DetailAST annotation ) { 
 final DetailAST dotAst = annotation . findFirstToken ( TokenTypes . DOT ) ; 
 - String name ; 
 + final String name ; 
 if ( dotAst = = null ) { 
 name = annotation . findFirstToken ( TokenTypes . IDENT ) . getText ( ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 index ed557e0 . . 7af4444 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / VisibilityModifierCheck . java 
 @ @ - 649 , 7 + 649 , 7 @ @ public class VisibilityModifierCheck 
 * @ return String representation of given type ' s name . 
 * / 
 private static String getTypeName ( DetailAST type , boolean isCanonicalName ) { 
 - String typeName ; 
 + final String typeName ; 
 if ( isCanonicalName ) { 
 typeName = getCanonicalName ( type ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 index 51e21c6 . . f9a2949 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportOrderCheck . java 
 @ @ - 249 , 7 + 249 , 7 @ @ public class ImportOrderCheck 
 for ( int i = 0 ; i < packageGroups . length ; i + + ) { 
 String pkg = packageGroups [ i ] ; 
 final StringBuilder pkgBuilder = new StringBuilder ( pkg ) ; 
 - Pattern grp ; 
 + final Pattern grp ; 
 
 / / if the pkg name is the wildcard , make it match zero chars 
 / / from any name , so it will always be used as last resort . 
 @ @ - 532 , 7 + 532 , 7 @ @ public class ImportOrderCheck 
 * / 
 private static int compare ( String string1 , String string2 , 
 boolean caseSensitive ) { 
 - int result ; 
 + final int result ; 
 if ( caseSensitive ) { 
 result = string1 . compareTo ( string2 ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java 
 index 0046a82 . . 9354442 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / PkgControl . java 
 @ @ - 112 , 7 + 112 , 7 @ @ class PkgControl { 
 * @ return an { @ link AccessResult } . 
 * / 
 AccessResult checkAccess ( final String forImport , final String inPkg ) { 
 - AccessResult result ; 
 + final AccessResult result ; 
 final AccessResult returnValue = localCheckAccess ( forImport , inPkg ) ; 
 if ( returnValue ! = AccessResult . UNKNOWN ) { 
 result = returnValue ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 index ada165b . . 5224acc 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 @ @ - 565 , 7 + 565 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 * @ return token which begins the line . 
 * / 
 private static DetailAST findTokenWhichBeginsTheLine ( DetailAST root ) { 
 - DetailAST tokenWhichBeginsTheLine ; 
 + final DetailAST tokenWhichBeginsTheLine ; 
 if ( isUsingOfObjectReferenceToInvokeMethod ( root ) ) { 
 tokenWhichBeginsTheLine = findStartTokenOfMethodCallChain ( root ) ; 
 } 
 @ @ - 726 , 7 + 726 , 7 @ @ public class CommentsIndentationCheck extends Check { 
 * / 
 private static boolean areSameLevelIndented ( DetailAST comment , DetailAST prevStmt , 
 DetailAST nextStmt ) { 
 - boolean result ; 
 + final boolean result ; 
 if ( prevStmt = = null ) { 
 result = comment . getColumnNo ( ) = = nextStmt . getColumnNo ( ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 index ab72c52 . . 1cbe5c4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 @ @ - 137 , 7 + 137 , 7 @ @ public class HandlerFactory { 
 * / 
 public AbstractExpressionHandler getHandler ( IndentationCheck indentCheck , 
 DetailAST ast , AbstractExpressionHandler parent ) { 
 - AbstractExpressionHandler resultHandler ; 
 + final AbstractExpressionHandler resultHandler ; 
 final AbstractExpressionHandler handler = 
 createdHandlers . get ( ast ) ; 
 if ( handler ! = null ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 index c4c2b1e . . 3d1267e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public class MethodCallHandler extends AbstractExpressionHandler { 
 
 @ Override 
 protected IndentLevel getIndentImpl ( ) { 
 - IndentLevel indentLevel ; 
 + final IndentLevel indentLevel ; 
 / / if inside a method call ' s params , this could be part of 
 / / an expression , so get the previous line ' s start 
 if ( getParent ( ) instanceof MethodCallHandler ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index 833c6ed . . 05b4195 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 180 , 7 + 180 , 7 @ @ public abstract class AbstractJavadocCheck extends Check { 
 final String treeCacheKey = blockCommentNode . getLineNo ( ) + " : " 
 + blockCommentNode . getColumnNo ( ) ; 
 
 - ParseStatus result ; 
 + final ParseStatus result ; 
 
 if ( TREE _ CACHE . get ( ) . containsKey ( treeCacheKey ) ) { 
 result = TREE _ CACHE . get ( ) . get ( treeCacheKey ) ; 
 @ @ - 418 , 7 + 418 , 7 @ @ public abstract class AbstractJavadocCheck extends Check { 
 * @ return token type from JavadocTokenTypes 
 * / 
 private static int getTokenType ( ParseTree node ) { 
 - int tokenType ; 
 + final int tokenType ; 
 
 if ( node . getChildCount ( ) = = 0 ) { 
 tokenType = ( ( TerminalNode ) node ) . getSymbol ( ) . getType ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 index 0c2275b . . 5e0088a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheck . java 
 @ @ - 395 , 7 + 395 , 7 @ @ public class JavadocMethodCheck extends AbstractTypeAwareCheck { 
 * @ return Some javadoc . 
 * / 
 private static int getMethodsNumberOfLine ( DetailAST methodDef ) { 
 - int numberOfLines ; 
 + final int numberOfLines ; 
 final DetailAST lcurly = methodDef . getLastChild ( ) ; 
 final DetailAST rcurly = lcurly . getLastChild ( ) ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java 
 index 95f6808 . . 342d2b7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / JavaNCSSCheck . java 
 @ @ - 339 , 7 + 339 , 7 @ @ public class JavaNCSSCheck extends Check { 
 * @ return true if the expression is countable , false otherwise 
 * / 
 private static boolean isExpressionCountable ( DetailAST ast ) { 
 - boolean countable ; 
 + final boolean countable ; 
 
 / / count expressions only if they are direct child to a slist ( method 
 / / body , for loop . . . ) 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 index 7f45995 . . a2d2170 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 @ @ - 145 , 7 + 145 , 7 @ @ public class NoWhitespaceAfterCheck extends Check { 
 * @ return node before ast . 
 * / 
 private static DetailAST getWhitespaceFollowedNode ( DetailAST ast ) { 
 - DetailAST whitespaceFollowedAst ; 
 + final DetailAST whitespaceFollowedAst ; 
 switch ( ast . getType ( ) ) { 
 case TokenTypes . TYPECAST : 
 whitespaceFollowedAst = ast . findFirstToken ( TokenTypes . RPAREN ) ; 
 @ @ - 277 , 7 + 277 , 7 @ @ public class NoWhitespaceAfterCheck extends Check { 
 * @ return previous node by text order . 
 * / 
 private static DetailAST getIndexOpPreviousElement ( DetailAST ast ) { 
 - DetailAST result ; 
 + final DetailAST result ; 
 final DetailAST firstChild = ast . getFirstChild ( ) ; 
 if ( firstChild . getType ( ) = = TokenTypes . INDEX _ OP ) { 
 / / second or higher array index 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java 
 index a059727 . . 141ad4a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / gui / ParseTreeTableModel . java 
 @ @ - 104 , 7 + 104 , 7 @ @ public class ParseTreeTableModel implements TreeModel { 
 * @ return the type for column number { @ code column } . 
 * / 
 public Class < ? > getColumnClass ( int column ) { 
 - Class < ? > columnClass ; 
 + final Class < ? > columnClass ; 
 
 switch ( column ) { 
 case 0 : 
 @ @ - 136 , 7 + 136 , 7 @ @ public class ParseTreeTableModel implements TreeModel { 
 * / 
 public Object getValueAt ( Object node , int column ) { 
 final DetailAST ast = ( DetailAST ) node ; 
 - Object value ; 
 + final Object value ; 
 
 switch ( column ) { 
 case 1 : 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 index d824c56 . . efe03db 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / JavadocUtils . java 
 @ @ - 439 , 7 + 439 , 7 @ @ public final class JavadocUtils { 
 * @ return name , of the javadocTagSection ' s tag . 
 * / 
 public static String getTagName ( DetailNode javadocTagSection ) { 
 - String javadocTagName ; 
 + final String javadocTagName ; 
 if ( javadocTagSection . getType ( ) = = JavadocTokenTypes . JAVADOC _ INLINE _ TAG ) { 
 javadocTagName = getNextSibling ( 
 getFirstChild ( javadocTagSection ) ) . getText ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 index 94e6cf4 . . e892f5a 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / doclets / TokenTypesDocletTest . java 
 @ @ - 149 , 7 + 149 , 7 @ @ public class TokenTypesDocletTest { 
 private static RootDoc getRootDoc ( JavadocTool javadocTool , ListBuffer < String [ ] > options , 
 ListBuffer < String > names ) throws Exception { 
 final Method getRootDocImpl = getMethodGetRootDocImplByReflection ( ) ; 
 - RootDoc rootDoc ; 
 + final RootDoc rootDoc ; 
 if ( System . getProperty ( " java . version " ) . startsWith ( " 1 . 7 . " ) ) { 
 rootDoc = ( RootDoc ) getRootDocImpl . invoke ( javadocTool , " " , " UTF - 8 " , 
 new ModifierFilter ( ModifierFilter . ALL _ ACCESS ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java 
 index 645a795 . . a03adf6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / grammars / comments / CompareTreesWithComments . java 
 @ @ - 56 , 7 + 56 , 7 @ @ class CompareTreesWithComments extends Check { 
 } 
 
 private static boolean isAstEquals ( DetailAST expected , DetailAST actual ) { 
 - boolean result ; 
 + final boolean result ; 
 if ( expected = = actual ) { 
 result = true ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 index 848cca9 . . 95727df 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CommitValidationTest . java 
 @ @ - 138 , 7 + 138 , 7 @ @ public class CommitValidationTest { 
 } 
 
 private static List < RevCommit > getCommitsToCheck ( ) throws Exception { 
 - List < RevCommit > commits ; 
 + final List < RevCommit > commits ; 
 try ( Repository repo = new FileRepositoryBuilder ( ) . findGitDir ( ) . build ( ) ) { 
 final RevCommitsPair revCommitsPair = resolveRevCommitsPair ( repo ) ; 
 if ( COMMITS _ RESOLUTION _ MODE = = CommitsResolutionMode . BY _ COUNTER ) { 
 @ @ - 168 , 8 + 168 , 8 @ @ public class CommitValidationTest { 
 RevCommitsPair revCommitIteratorPair ; 
 
 try ( RevWalk revWalk = new RevWalk ( repo ) ) { 
 - Iterator < RevCommit > first ; 
 - Iterator < RevCommit > second ; 
 + final Iterator < RevCommit > first ; 
 + final Iterator < RevCommit > second ; 
 final ObjectId headId = repo . resolve ( Constants . HEAD ) ; 
 final RevCommit headCommit = revWalk . parseCommit ( headId ) ; 

