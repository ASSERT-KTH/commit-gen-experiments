BLEU SCORE: 0.02383853510228548

TEST MSG: minor : renaming indentation methods to more natural name
GENERATED MSG: Fix typos in Indentation check code . # 1555

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> index 9b36e78 . . 8ff5397 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java <nl> @ @ - 111 , 7 + 111 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * @ return the expected indentation amount <nl> * / <nl> protected IndentLevel getLevelImpl ( ) { <nl> - return parent . suggestedChildLevel ( this ) ; <nl> + return parent . getSuggestedChildLevel ( this ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 123 , 7 + 123 , 7 @ @ public abstract class AbstractExpressionHandler { <nl> * <nl> * @ return suggested indentation for child <nl> * / <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> return new IndentLevel ( getLevel ( ) , getBasicOffset ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> index 3d500f7 . . a7fd2ea 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> @ @ - 308 , 7 + 308 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> } <nl> <nl> @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> return getChildrenExpectedLevel ( ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CaseHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CaseHandler . java <nl> index a59199d . . 34c7a57 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CaseHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CaseHandler . java <nl> @ @ - 63 , 7 + 63 , 7 @ @ public class CaseHandler extends AbstractExpressionHandler { <nl> } <nl> <nl> @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> return getLevel ( ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java <nl> index 73bd90f . . 6a20107 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java <nl> @ @ - 42 , 11 + 42 , 11 @ @ public class IfHandler extends BlockParentHandler { <nl> } <nl> <nl> @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> if ( child instanceof ElseHandler ) { <nl> return getLevel ( ) ; <nl> } <nl> - return super . suggestedChildLevel ( child ) ; <nl> + return super . getSuggestedChildLevel ( child ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> index fc74b61 . . 0f3b387 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> @ @ - 66 , 7 + 66 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> * - suggest child indent level <nl> * - allows for some tokens to be on same line ( ie inner classes OBJBLOCK ) <nl> * and not increase indentation level <nl> - * - looked at using double dispatch for suggestedChildLevel ( ) , but it <nl> + * - looked at using double dispatch for getSuggestedChildLevel ( ) , but it <nl> * doesn ' t seem worthwhile , at least now <nl> * - both tabs and spaces are considered whitespace in front of the line . . . <nl> * tabs are converted to spaces <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LambdaHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LambdaHandler . java <nl> index 4ff64e0 . . 64b6b44 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LambdaHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LambdaHandler . java <nl> @ @ - 41 , 14 + 41 , 14 @ @ public class LambdaHandler extends AbstractExpressionHandler { <nl> } <nl> <nl> @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> return getLevel ( ) ; <nl> } <nl> <nl> @ Override <nl> protected IndentLevel getLevelImpl ( ) { <nl> if ( getParent ( ) instanceof MethodCallHandler ) { <nl> - return getParent ( ) . suggestedChildLevel ( this ) ; <nl> + return getParent ( ) . getSuggestedChildLevel ( this ) ; <nl> } <nl> <nl> DetailAST parent = getMainAst ( ) . getParent ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java <nl> index 27f173c . . 5e4742e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java <nl> @ @ - 59 , 7 + 59 , 7 @ @ public class MemberDefHandler extends AbstractExpressionHandler { <nl> } <nl> <nl> @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> return getLevel ( ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> index 21f8864 . . 812d116 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java <nl> @ @ - 116 , 7 + 116 , 7 @ @ public class MethodCallHandler extends AbstractExpressionHandler { <nl> } <nl> <nl> @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> / / for whatever reason a method that crosses lines , like asList <nl> / / here : <nl> / / System . out . println ( " methods are : " + Arrays . asList ( <nl> @ @ - 137 , 7 + 137 , 7 @ @ public class MethodCallHandler extends AbstractExpressionHandler { <nl> final DetailAST rparen = getMainAst ( ) . findFirstToken ( TokenTypes . RPAREN ) ; <nl> if ( getLineStart ( rparen ) = = rparen . getColumnNo ( ) ) { <nl> suggestedLevel . addAcceptedIndent ( new IndentLevel ( <nl> - getParent ( ) . suggestedChildLevel ( this ) , <nl> + getParent ( ) . getSuggestedChildLevel ( this ) , <nl> getIndentCheck ( ) . getLineWrappingIndentation ( ) <nl> ) ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PrimordialHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PrimordialHandler . java <nl> index 18748ca . . a464a08 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PrimordialHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PrimordialHandler . java <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class PrimordialHandler extends AbstractExpressionHandler { <nl> } <nl> <nl> @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> return new IndentLevel ( 0 ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java <nl> index 44e4a80 . . 6bac4f2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java <nl> @ @ - 68 , 7 + 68 , 7 @ @ public class SlistHandler extends BlockParentHandler { <nl> } <nl> <nl> @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> / / this is : <nl> / / switch ( var ) { <nl> / / case 3 : { <nl> @ @ - 83 , 9 + 83 , 9 @ @ public class SlistHandler extends BlockParentHandler { <nl> & & ! ( getParent ( ) instanceof SlistHandler ) <nl> | | getParent ( ) instanceof CaseHandler <nl> & & child instanceof SlistHandler ) { <nl> - return getParent ( ) . suggestedChildLevel ( child ) ; <nl> + return getParent ( ) . getSuggestedChildLevel ( child ) ; <nl> } <nl> - return super . suggestedChildLevel ( child ) ; <nl> + return super . getSuggestedChildLevel ( child ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java <nl> index 3a78667 . . db2ef11 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java <nl> @ @ - 41 , 11 + 41 , 11 @ @ public class TryHandler extends BlockParentHandler { <nl> } <nl> <nl> @ Override <nl> - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { <nl> + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { <nl> if ( child instanceof CatchHandler <nl> | | child instanceof FinallyHandler ) { <nl> return getLevel ( ) ; <nl> } <nl> - return super . suggestedChildLevel ( child ) ; <nl> + return super . getSuggestedChildLevel ( child ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> index f5c5aec . . 0cdb470 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java <nl> @ @ - 57 , 16 + 57 , 16 @ @ public abstract class BaseCheckTestSupport <nl> throws Exception <nl> { <nl> final DefaultConfiguration dc = createCheckerConfig ( aCheckConfig ) ; <nl> - final Checker c = new Checker ( ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> / / make sure the tests always run with english error messages <nl> / / so the tests don ' t fail in supported locales like german <nl> final Locale locale = Locale . ENGLISH ; <nl> - c . setLocaleCountry ( locale . getCountry ( ) ) ; <nl> - c . setLocaleLanguage ( locale . getLanguage ( ) ) ; <nl> - c . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> - c . configure ( dc ) ; <nl> - c . addListener ( new BriefLogger ( stream ) ) ; <nl> - return c ; <nl> + checker . setLocaleCountry ( locale . getCountry ( ) ) ; <nl> + checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; <nl> + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> + checker . configure ( dc ) ; <nl> + checker . addListener ( new BriefLogger ( stream ) ) ; <nl> + return checker ; <nl> } <nl> <nl> protected DefaultConfiguration createCheckerConfig ( Configuration aConfig ) <nl> diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> index e2b4f76 . . 2bfce71 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java <nl> @ @ - 13 , 15 + 13 , 15 @ @ public class ConfigValidationTest extends BaseCheckTestSupport { <nl> public void testGoogleChecks ( ) throws Exception { <nl> ConfigurationBuilder builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; <nl> final Configuration checkerConfig = builder . config ; <nl> - final Checker c = new Checker ( ) ; <nl> - c . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> - c . configure ( checkerConfig ) ; <nl> - c . addListener ( new BriefLogger ( stream ) ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> + checker . configure ( checkerConfig ) ; <nl> + checker . addListener ( new BriefLogger ( stream ) ) ; <nl> <nl> final List < File > files = builder . getFiles ( ) ; <nl> <nl> / / runs over all input files ; <nl> / / as severity level is " warning " , no errors expected <nl> - verify ( c , files . toArray ( new File [ files . size ( ) ] ) , " " , new String [ 0 ] , null ) ; <nl> + verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , new String [ 0 ] , null ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> index b97fc7c . . 84a2522 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java <nl> @ @ - 48 , 16 + 48 , 16 @ @ public abstract class BaseCheckTestSupport { <nl> protected Checker createChecker ( Configuration checkConfig ) <nl> throws Exception { <nl> final DefaultConfiguration dc = createCheckerConfig ( checkConfig ) ; <nl> - final Checker c = new Checker ( ) ; <nl> + final Checker checker = new Checker ( ) ; <nl> / / make sure the tests always run with default error messages ( language - invariant ) <nl> / / so the tests don ' t fail in supported locales like German <nl> final Locale locale = Locale . ROOT ; <nl> - c . setLocaleCountry ( locale . getCountry ( ) ) ; <nl> - c . setLocaleLanguage ( locale . getLanguage ( ) ) ; <nl> - c . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> - c . configure ( dc ) ; <nl> - c . addListener ( new BriefLogger ( stream ) ) ; <nl> - return c ; <nl> + checker . setLocaleCountry ( locale . getCountry ( ) ) ; <nl> + checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; <nl> + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> + checker . configure ( dc ) ; <nl> + checker . addListener ( new BriefLogger ( stream ) ) ; <nl> + return checker ; <nl> } <nl> <nl> protected DefaultConfiguration createCheckerConfig ( Configuration config ) { <nl> @ @ - 86 , 22 + 86 , 22 @ @ public abstract class BaseCheckTestSupport { <nl> verify ( createChecker ( aConfig ) , fileName , fileName , expected ) ; <nl> } <nl> <nl> - protected void verify ( Checker c , String fileName , String . . . expected ) <nl> + protected void verify ( Checker checker , String fileName , String . . . expected ) <nl> throws Exception { <nl> - verify ( c , fileName , fileName , expected ) ; <nl> + verify ( checker , fileName , fileName , expected ) ; <nl> } <nl> <nl> - protected void verify ( Checker c , <nl> + protected void verify ( Checker checker , <nl> String processedFilename , <nl> String messageFileName , <nl> String . . . expected ) <nl> throws Exception { <nl> - verify ( c , <nl> + verify ( checker , <nl> new File [ ] { new File ( processedFilename ) } , <nl> messageFileName , expected ) ; <nl> } <nl> <nl> - protected void verify ( Checker c , <nl> + protected void verify ( Checker checker , <nl> File [ ] processedFiles , <nl> String messageFileName , <nl> String . . . expected ) <nl> @ @ - 109 , 7 + 109 , 7 @ @ public abstract class BaseCheckTestSupport { <nl> stream . flush ( ) ; <nl> final List < File > theFiles = Lists . newArrayList ( ) ; <nl> Collections . addAll ( theFiles , processedFiles ) ; <nl> - final int errs = c . process ( theFiles ) ; <nl> + final int errs = checker . process ( theFiles ) ; <nl> <nl> / / process each of the lines <nl> final ByteArrayInputStream bais = <nl> @ @ - 125 , 7 + 125 , 7 @ @ public abstract class BaseCheckTestSupport { <nl> <nl> assertEquals ( " unexpected output : " + lnr . readLine ( ) , <nl> expected . length , errs ) ; <nl> - c . destroy ( ) ; <nl> + checker . destroy ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> index a939256 . . 78271e9 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> @ @ - 258 , 8 + 258 , 8 @ @ public class XMLLoggerTest { <nl> private static final long serialVersionUID = 1L ; <nl> <nl> @ Override <nl> - public void printStackTrace ( PrintWriter s ) { <nl> - s . print ( " stackTrace " ) ; <nl> + public void printStackTrace ( PrintWriter printWriter ) { <nl> + printWriter . print ( " stackTrace " ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java <nl> index fe35129 . . e0d8daf 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java <nl> @ @ - 337 , 12 + 337 , 12 @ @ public class CustomImportOrderCheckTest extends BaseCheckTestSupport { <nl> public void testGetFullImportIdent ( ) { <nl> Object actual ; <nl> try { <nl> - Class < ? > c = Class . forName ( <nl> + Class < ? > clazz = Class . forName ( <nl> " com . puppycrawl . tools . checkstyle . checks . imports . CustomImportOrderCheck " ) ; <nl> - Object t = c . newInstance ( ) ; <nl> - Method m = c . getDeclaredMethod ( " getFullImportIdent " , DetailAST . class ) ; <nl> - m . setAccessible ( true ) ; <nl> - actual = m . invoke ( t , ( DetailAST ) null ) ; <nl> + Object t = clazz . newInstance ( ) ; <nl> + Method method = clazz . getDeclaredMethod ( " getFullImportIdent " , DetailAST . class ) ; <nl> + method . setAccessible ( true ) ; <nl> + actual = method . invoke ( t , ( DetailAST ) null ) ; <nl> } <nl> catch ( Exception e ) { <nl> e . printStackTrace ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoaderTest . java <nl> index b78c83f . . 92bbf01 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoaderTest . java <nl> @ @ - 69 , 9 + 69 , 9 @ @ public class ImportControlLoaderTest { <nl> } <nl> } ; <nl> try { <nl> - Class < ? > c = Class . forName ( <nl> + Class < ? > clazz = Class . forName ( <nl> " com . puppycrawl . tools . checkstyle . checks . imports . ImportControlLoader " ) ; <nl> - Method privateMethod = c . getDeclaredMethod ( " safeGet " , Attributes . class , String . class ) ; <nl> + Method privateMethod = clazz . getDeclaredMethod ( " safeGet " , Attributes . class , String . class ) ; <nl> privateMethod . setAccessible ( true ) ; <nl> privateMethod . invoke ( null , attr , " you _ cannot _ find _ me " ) ; <nl> } <nl> @ @ - 89 , 9 + 89 , 9 @ @ public class ImportControlLoaderTest { <nl> public void testLoadThrowsException ( ) throws InvocationTargetException { <nl> InputSource source = new InputSource ( ) ; <nl> try { <nl> - Class < ? > c = Class . forName ( <nl> + Class < ? > clazz = Class . forName ( <nl> " com . puppycrawl . tools . checkstyle . checks . imports . ImportControlLoader " ) ; <nl> - Method privateMethod = c . getDeclaredMethod ( " load " , InputSource . class , URI . class ) ; <nl> + Method privateMethod = clazz . getDeclaredMethod ( " load " , InputSource . class , URI . class ) ; <nl> privateMethod . setAccessible ( true ) ; <nl> privateMethod . invoke ( null , source , new File ( <nl> " src / test / resources / com / puppycrawl / tools / checkstyle / imports / import - control _ complete . xml " ) . toURI ( ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java <nl> index 2450729 . . 7b3f556 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java <nl> @ @ - 192 , 7 + 192 , 7 @ @ public class WriteTagCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Override <nl> - protected void verify ( Checker c , <nl> + protected void verify ( Checker checker , <nl> File [ ] processedFiles , <nl> String messageFileName , <nl> String . . . expected ) <nl> @ @ - 200 , 7 + 200 , 7 @ @ public class WriteTagCheckTest extends BaseCheckTestSupport { <nl> stream . flush ( ) ; <nl> final List < File > theFiles = Lists . newArrayList ( ) ; <nl> Collections . addAll ( theFiles , processedFiles ) ; <nl> - final int errs = c . process ( theFiles ) ; <nl> + final int errs = checker . process ( theFiles ) ; <nl> <nl> / / process each of the lines <nl> final ByteArrayInputStream bais = <nl> @ @ - 217 , 6 + 217 , 6 @ @ public class WriteTagCheckTest extends BaseCheckTestSupport { <nl> assertTrue ( " unexpected output : " + lnr . readLine ( ) , <nl> expected . length > = errs ) ; <nl> <nl> - c . destroy ( ) ; <nl> + checker . destroy ( ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 index 9b36e78 . . 8ff5397 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / AbstractExpressionHandler . java 
 @ @ - 111 , 7 + 111 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * @ return the expected indentation amount 
 * / 
 protected IndentLevel getLevelImpl ( ) { 
 - return parent . suggestedChildLevel ( this ) ; 
 + return parent . getSuggestedChildLevel ( this ) ; 
 } 
 
 / * * 
 @ @ - 123 , 7 + 123 , 7 @ @ public abstract class AbstractExpressionHandler { 
 * 
 * @ return suggested indentation for child 
 * / 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 return new IndentLevel ( getLevel ( ) , getBasicOffset ( ) ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 index 3d500f7 . . a7fd2ea 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 @ @ - 308 , 7 + 308 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 } 
 
 @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 return getChildrenExpectedLevel ( ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CaseHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CaseHandler . java 
 index a59199d . . 34c7a57 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CaseHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CaseHandler . java 
 @ @ - 63 , 7 + 63 , 7 @ @ public class CaseHandler extends AbstractExpressionHandler { 
 } 
 
 @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 return getLevel ( ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java 
 index 73bd90f . . 6a20107 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IfHandler . java 
 @ @ - 42 , 11 + 42 , 11 @ @ public class IfHandler extends BlockParentHandler { 
 } 
 
 @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 if ( child instanceof ElseHandler ) { 
 return getLevel ( ) ; 
 } 
 - return super . suggestedChildLevel ( child ) ; 
 + return super . getSuggestedChildLevel ( child ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 index fc74b61 . . 0f3b387 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 @ @ - 66 , 7 + 66 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 * - suggest child indent level 
 * - allows for some tokens to be on same line ( ie inner classes OBJBLOCK ) 
 * and not increase indentation level 
 - * - looked at using double dispatch for suggestedChildLevel ( ) , but it 
 + * - looked at using double dispatch for getSuggestedChildLevel ( ) , but it 
 * doesn ' t seem worthwhile , at least now 
 * - both tabs and spaces are considered whitespace in front of the line . . . 
 * tabs are converted to spaces 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LambdaHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LambdaHandler . java 
 index 4ff64e0 . . 64b6b44 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LambdaHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / LambdaHandler . java 
 @ @ - 41 , 14 + 41 , 14 @ @ public class LambdaHandler extends AbstractExpressionHandler { 
 } 
 
 @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 return getLevel ( ) ; 
 } 
 
 @ Override 
 protected IndentLevel getLevelImpl ( ) { 
 if ( getParent ( ) instanceof MethodCallHandler ) { 
 - return getParent ( ) . suggestedChildLevel ( this ) ; 
 + return getParent ( ) . getSuggestedChildLevel ( this ) ; 
 } 
 
 DetailAST parent = getMainAst ( ) . getParent ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java 
 index 27f173c . . 5e4742e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MemberDefHandler . java 
 @ @ - 59 , 7 + 59 , 7 @ @ public class MemberDefHandler extends AbstractExpressionHandler { 
 } 
 
 @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 return getLevel ( ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 index 21f8864 . . 812d116 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / MethodCallHandler . java 
 @ @ - 116 , 7 + 116 , 7 @ @ public class MethodCallHandler extends AbstractExpressionHandler { 
 } 
 
 @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 / / for whatever reason a method that crosses lines , like asList 
 / / here : 
 / / System . out . println ( " methods are : " + Arrays . asList ( 
 @ @ - 137 , 7 + 137 , 7 @ @ public class MethodCallHandler extends AbstractExpressionHandler { 
 final DetailAST rparen = getMainAst ( ) . findFirstToken ( TokenTypes . RPAREN ) ; 
 if ( getLineStart ( rparen ) = = rparen . getColumnNo ( ) ) { 
 suggestedLevel . addAcceptedIndent ( new IndentLevel ( 
 - getParent ( ) . suggestedChildLevel ( this ) , 
 + getParent ( ) . getSuggestedChildLevel ( this ) , 
 getIndentCheck ( ) . getLineWrappingIndentation ( ) 
 ) ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PrimordialHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PrimordialHandler . java 
 index 18748ca . . a464a08 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PrimordialHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / PrimordialHandler . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class PrimordialHandler extends AbstractExpressionHandler { 
 } 
 
 @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 return new IndentLevel ( 0 ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java 
 index 44e4a80 . . 6bac4f2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / SlistHandler . java 
 @ @ - 68 , 7 + 68 , 7 @ @ public class SlistHandler extends BlockParentHandler { 
 } 
 
 @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 / / this is : 
 / / switch ( var ) { 
 / / case 3 : { 
 @ @ - 83 , 9 + 83 , 9 @ @ public class SlistHandler extends BlockParentHandler { 
 & & ! ( getParent ( ) instanceof SlistHandler ) 
 | | getParent ( ) instanceof CaseHandler 
 & & child instanceof SlistHandler ) { 
 - return getParent ( ) . suggestedChildLevel ( child ) ; 
 + return getParent ( ) . getSuggestedChildLevel ( child ) ; 
 } 
 - return super . suggestedChildLevel ( child ) ; 
 + return super . getSuggestedChildLevel ( child ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java 
 index 3a78667 . . db2ef11 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / TryHandler . java 
 @ @ - 41 , 11 + 41 , 11 @ @ public class TryHandler extends BlockParentHandler { 
 } 
 
 @ Override 
 - public IndentLevel suggestedChildLevel ( AbstractExpressionHandler child ) { 
 + public IndentLevel getSuggestedChildLevel ( AbstractExpressionHandler child ) { 
 if ( child instanceof CatchHandler 
 | | child instanceof FinallyHandler ) { 
 return getLevel ( ) ; 
 } 
 - return super . suggestedChildLevel ( child ) ; 
 + return super . getSuggestedChildLevel ( child ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 index f5c5aec . . 0cdb470 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / BaseCheckTestSupport . java 
 @ @ - 57 , 16 + 57 , 16 @ @ public abstract class BaseCheckTestSupport 
 throws Exception 
 { 
 final DefaultConfiguration dc = createCheckerConfig ( aCheckConfig ) ; 
 - final Checker c = new Checker ( ) ; 
 + final Checker checker = new Checker ( ) ; 
 / / make sure the tests always run with english error messages 
 / / so the tests don ' t fail in supported locales like german 
 final Locale locale = Locale . ENGLISH ; 
 - c . setLocaleCountry ( locale . getCountry ( ) ) ; 
 - c . setLocaleLanguage ( locale . getLanguage ( ) ) ; 
 - c . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 - c . configure ( dc ) ; 
 - c . addListener ( new BriefLogger ( stream ) ) ; 
 - return c ; 
 + checker . setLocaleCountry ( locale . getCountry ( ) ) ; 
 + checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; 
 + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 + checker . configure ( dc ) ; 
 + checker . addListener ( new BriefLogger ( stream ) ) ; 
 + return checker ; 
 } 
 
 protected DefaultConfiguration createCheckerConfig ( Configuration aConfig ) 
 diff - - git a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 index e2b4f76 . . 2bfce71 100644 
 - - - a / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / base / ConfigValidationTest . java 
 @ @ - 13 , 15 + 13 , 15 @ @ public class ConfigValidationTest extends BaseCheckTestSupport { 
 public void testGoogleChecks ( ) throws Exception { 
 ConfigurationBuilder builder = new ConfigurationBuilder ( new File ( " src / it / " ) ) ; 
 final Configuration checkerConfig = builder . config ; 
 - final Checker c = new Checker ( ) ; 
 - c . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 - c . configure ( checkerConfig ) ; 
 - c . addListener ( new BriefLogger ( stream ) ) ; 
 + final Checker checker = new Checker ( ) ; 
 + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 + checker . configure ( checkerConfig ) ; 
 + checker . addListener ( new BriefLogger ( stream ) ) ; 
 
 final List < File > files = builder . getFiles ( ) ; 
 
 / / runs over all input files ; 
 / / as severity level is " warning " , no errors expected 
 - verify ( c , files . toArray ( new File [ files . size ( ) ] ) , " " , new String [ 0 ] , null ) ; 
 + verify ( checker , files . toArray ( new File [ files . size ( ) ] ) , " " , new String [ 0 ] , null ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 index b97fc7c . . 84a2522 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / BaseCheckTestSupport . java 
 @ @ - 48 , 16 + 48 , 16 @ @ public abstract class BaseCheckTestSupport { 
 protected Checker createChecker ( Configuration checkConfig ) 
 throws Exception { 
 final DefaultConfiguration dc = createCheckerConfig ( checkConfig ) ; 
 - final Checker c = new Checker ( ) ; 
 + final Checker checker = new Checker ( ) ; 
 / / make sure the tests always run with default error messages ( language - invariant ) 
 / / so the tests don ' t fail in supported locales like German 
 final Locale locale = Locale . ROOT ; 
 - c . setLocaleCountry ( locale . getCountry ( ) ) ; 
 - c . setLocaleLanguage ( locale . getLanguage ( ) ) ; 
 - c . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 - c . configure ( dc ) ; 
 - c . addListener ( new BriefLogger ( stream ) ) ; 
 - return c ; 
 + checker . setLocaleCountry ( locale . getCountry ( ) ) ; 
 + checker . setLocaleLanguage ( locale . getLanguage ( ) ) ; 
 + checker . setModuleClassLoader ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 + checker . configure ( dc ) ; 
 + checker . addListener ( new BriefLogger ( stream ) ) ; 
 + return checker ; 
 } 
 
 protected DefaultConfiguration createCheckerConfig ( Configuration config ) { 
 @ @ - 86 , 22 + 86 , 22 @ @ public abstract class BaseCheckTestSupport { 
 verify ( createChecker ( aConfig ) , fileName , fileName , expected ) ; 
 } 
 
 - protected void verify ( Checker c , String fileName , String . . . expected ) 
 + protected void verify ( Checker checker , String fileName , String . . . expected ) 
 throws Exception { 
 - verify ( c , fileName , fileName , expected ) ; 
 + verify ( checker , fileName , fileName , expected ) ; 
 } 
 
 - protected void verify ( Checker c , 
 + protected void verify ( Checker checker , 
 String processedFilename , 
 String messageFileName , 
 String . . . expected ) 
 throws Exception { 
 - verify ( c , 
 + verify ( checker , 
 new File [ ] { new File ( processedFilename ) } , 
 messageFileName , expected ) ; 
 } 
 
 - protected void verify ( Checker c , 
 + protected void verify ( Checker checker , 
 File [ ] processedFiles , 
 String messageFileName , 
 String . . . expected ) 
 @ @ - 109 , 7 + 109 , 7 @ @ public abstract class BaseCheckTestSupport { 
 stream . flush ( ) ; 
 final List < File > theFiles = Lists . newArrayList ( ) ; 
 Collections . addAll ( theFiles , processedFiles ) ; 
 - final int errs = c . process ( theFiles ) ; 
 + final int errs = checker . process ( theFiles ) ; 
 
 / / process each of the lines 
 final ByteArrayInputStream bais = 
 @ @ - 125 , 7 + 125 , 7 @ @ public abstract class BaseCheckTestSupport { 
 
 assertEquals ( " unexpected output : " + lnr . readLine ( ) , 
 expected . length , errs ) ; 
 - c . destroy ( ) ; 
 + checker . destroy ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 index a939256 . . 78271e9 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 @ @ - 258 , 8 + 258 , 8 @ @ public class XMLLoggerTest { 
 private static final long serialVersionUID = 1L ; 
 
 @ Override 
 - public void printStackTrace ( PrintWriter s ) { 
 - s . print ( " stackTrace " ) ; 
 + public void printStackTrace ( PrintWriter printWriter ) { 
 + printWriter . print ( " stackTrace " ) ; 
 } 
 } 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java 
 index fe35129 . . e0d8daf 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheckTest . java 
 @ @ - 337 , 12 + 337 , 12 @ @ public class CustomImportOrderCheckTest extends BaseCheckTestSupport { 
 public void testGetFullImportIdent ( ) { 
 Object actual ; 
 try { 
 - Class < ? > c = Class . forName ( 
 + Class < ? > clazz = Class . forName ( 
 " com . puppycrawl . tools . checkstyle . checks . imports . CustomImportOrderCheck " ) ; 
 - Object t = c . newInstance ( ) ; 
 - Method m = c . getDeclaredMethod ( " getFullImportIdent " , DetailAST . class ) ; 
 - m . setAccessible ( true ) ; 
 - actual = m . invoke ( t , ( DetailAST ) null ) ; 
 + Object t = clazz . newInstance ( ) ; 
 + Method method = clazz . getDeclaredMethod ( " getFullImportIdent " , DetailAST . class ) ; 
 + method . setAccessible ( true ) ; 
 + actual = method . invoke ( t , ( DetailAST ) null ) ; 
 } 
 catch ( Exception e ) { 
 e . printStackTrace ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoaderTest . java 
 index b78c83f . . 92bbf01 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlLoaderTest . java 
 @ @ - 69 , 9 + 69 , 9 @ @ public class ImportControlLoaderTest { 
 } 
 } ; 
 try { 
 - Class < ? > c = Class . forName ( 
 + Class < ? > clazz = Class . forName ( 
 " com . puppycrawl . tools . checkstyle . checks . imports . ImportControlLoader " ) ; 
 - Method privateMethod = c . getDeclaredMethod ( " safeGet " , Attributes . class , String . class ) ; 
 + Method privateMethod = clazz . getDeclaredMethod ( " safeGet " , Attributes . class , String . class ) ; 
 privateMethod . setAccessible ( true ) ; 
 privateMethod . invoke ( null , attr , " you _ cannot _ find _ me " ) ; 
 } 
 @ @ - 89 , 9 + 89 , 9 @ @ public class ImportControlLoaderTest { 
 public void testLoadThrowsException ( ) throws InvocationTargetException { 
 InputSource source = new InputSource ( ) ; 
 try { 
 - Class < ? > c = Class . forName ( 
 + Class < ? > clazz = Class . forName ( 
 " com . puppycrawl . tools . checkstyle . checks . imports . ImportControlLoader " ) ; 
 - Method privateMethod = c . getDeclaredMethod ( " load " , InputSource . class , URI . class ) ; 
 + Method privateMethod = clazz . getDeclaredMethod ( " load " , InputSource . class , URI . class ) ; 
 privateMethod . setAccessible ( true ) ; 
 privateMethod . invoke ( null , source , new File ( 
 " src / test / resources / com / puppycrawl / tools / checkstyle / imports / import - control _ complete . xml " ) . toURI ( ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java 
 index 2450729 . . 7b3f556 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / WriteTagCheckTest . java 
 @ @ - 192 , 7 + 192 , 7 @ @ public class WriteTagCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Override 
 - protected void verify ( Checker c , 
 + protected void verify ( Checker checker , 
 File [ ] processedFiles , 
 String messageFileName , 
 String . . . expected ) 
 @ @ - 200 , 7 + 200 , 7 @ @ public class WriteTagCheckTest extends BaseCheckTestSupport { 
 stream . flush ( ) ; 
 final List < File > theFiles = Lists . newArrayList ( ) ; 
 Collections . addAll ( theFiles , processedFiles ) ; 
 - final int errs = c . process ( theFiles ) ; 
 + final int errs = checker . process ( theFiles ) ; 
 
 / / process each of the lines 
 final ByteArrayInputStream bais = 
 @ @ - 217 , 6 + 217 , 6 @ @ public class WriteTagCheckTest extends BaseCheckTestSupport { 
 assertTrue ( " unexpected output : " + lnr . readLine ( ) , 
 expected . length > = errs ) ; 
 
 - c . destroy ( ) ; 
 + checker . destroy ( ) ; 
 } 
 }
