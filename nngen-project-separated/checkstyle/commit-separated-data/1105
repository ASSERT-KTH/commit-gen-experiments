BLEU SCORE: 0.2545984531673679

TEST MSG: config : fix for release . sh to be fail fast if release info is not defined
GENERATED MSG: config : update for release . sh to calculate release version automatically

TEST DIFF (one line): diff - - git a / release . sh b / release . sh <nl> index 69bb61c . . efa0d33 100755 <nl> - - - a / release . sh <nl> + + + b / release . sh <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - # ! / usr / bin / bash <nl> + # ! / usr / bin / env bash <nl> set - e <nl> <nl> # Make sure you prepared your PC for automative deployment <nl> @ @ - 11 , 6 + 11 , 15 @ @ PREV _ RELEASE = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) | sed " s / checks <nl> echo " PREVIOUS RELEASE version : " $ PREV _ RELEASE <nl> echo " RELEASE version : " $ RELEASE <nl> <nl> + if [ [ - z $ RELEASE ] ] ; then <nl> + echo " Problem to calculate release version . " <nl> + exit 1 <nl> + fi <nl> + if [ [ - z $ PREV _ RELEASE ] ] ; then <nl> + echo " Problem to calculate previous release version . " <nl> + exit 1 <nl> + fi <nl> + <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> echo " Please provide password for $ SF _ USER , checkstyle @ shell . sourceforge . net " <nl> echo " exit " | ssh - t $ SF _ USER , checkstyle @ shell . sourceforge . net create
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java <nl> index 17efdf3 . . 158fe6b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java <nl> @ @ - 572 , 8 + 572 , 7 @ @ public class FinalLocalVariableCheck extends AbstractCheck { <nl> & & astTraverse . getType ( ) ! = TokenTypes . CLASS _ DEF <nl> & & astTraverse . getType ( ) ! = TokenTypes . ENUM _ DEF <nl> & & astTraverse . getType ( ) ! = TokenTypes . CTOR _ DEF <nl> - & & ( astTraverse . getType ( ) ! = TokenTypes . VARIABLE _ DEF <nl> - | | ! ScopeUtils . isClassFieldDef ( astTraverse ) ) ) { <nl> + & & ! ScopeUtils . isClassFieldDef ( astTraverse ) ) { <nl> astTraverse = astTraverse . getParent ( ) ; <nl> } <nl> return astTraverse ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java <nl> index e0c00e5 . . 632f501 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java <nl> @ @ - 268 , 13 + 268 , 13 @ @ public final class ScopeUtils { <nl> <nl> / * * <nl> * Determines whether a node is a class field definition . <nl> - * I . e . if it is not declared in a code block , a for initializer , <nl> + * I . e . if a variable is not declared in a code block , a for initializer , <nl> * or a catch parameter . <nl> * @ param node the node to check . <nl> * @ return whether a node is a class field definition . <nl> * / <nl> public static boolean isClassFieldDef ( DetailAST node ) { <nl> - return ! isLocalVariableDef ( node ) ; <nl> + return node . getType ( ) = = TokenTypes . VARIABLE _ DEF & & ! isLocalVariableDef ( node ) ; <nl> } <nl> <nl> / * *

TEST DIFF:
diff - - git a / release . sh b / release . sh 
 index 69bb61c . . efa0d33 100755 
 - - - a / release . sh 
 + + + b / release . sh 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - # ! / usr / bin / bash 
 + # ! / usr / bin / env bash 
 set - e 
 
 # Make sure you prepared your PC for automative deployment 
 @ @ - 11 , 6 + 11 , 15 @ @ PREV _ RELEASE = $ ( git describe $ ( git rev - list - - tags - - max - count = 1 ) | sed " s / checks 
 echo " PREVIOUS RELEASE version : " $ PREV _ RELEASE 
 echo " RELEASE version : " $ RELEASE 
 
 + if [ [ - z $ RELEASE ] ] ; then 
 + echo " Problem to calculate release version . " 
 + exit 1 
 + fi 
 + if [ [ - z $ PREV _ RELEASE ] ] ; then 
 + echo " Problem to calculate previous release version . " 
 + exit 1 
 + fi 
 + 
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 echo " Please provide password for $ SF _ USER , checkstyle @ shell . sourceforge . net " 
 echo " exit " | ssh - t $ SF _ USER , checkstyle @ shell . sourceforge . net create

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java 
 index 17efdf3 . . 158fe6b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FinalLocalVariableCheck . java 
 @ @ - 572 , 8 + 572 , 7 @ @ public class FinalLocalVariableCheck extends AbstractCheck { 
 & & astTraverse . getType ( ) ! = TokenTypes . CLASS _ DEF 
 & & astTraverse . getType ( ) ! = TokenTypes . ENUM _ DEF 
 & & astTraverse . getType ( ) ! = TokenTypes . CTOR _ DEF 
 - & & ( astTraverse . getType ( ) ! = TokenTypes . VARIABLE _ DEF 
 - | | ! ScopeUtils . isClassFieldDef ( astTraverse ) ) ) { 
 + & & ! ScopeUtils . isClassFieldDef ( astTraverse ) ) { 
 astTraverse = astTraverse . getParent ( ) ; 
 } 
 return astTraverse ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java b / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java 
 index e0c00e5 . . 632f501 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / utils / ScopeUtils . java 
 @ @ - 268 , 13 + 268 , 13 @ @ public final class ScopeUtils { 
 
 / * * 
 * Determines whether a node is a class field definition . 
 - * I . e . if it is not declared in a code block , a for initializer , 
 + * I . e . if a variable is not declared in a code block , a for initializer , 
 * or a catch parameter . 
 * @ param node the node to check . 
 * @ return whether a node is a class field definition . 
 * / 
 public static boolean isClassFieldDef ( DetailAST node ) { 
 - return ! isLocalVariableDef ( node ) ; 
 + return node . getType ( ) = = TokenTypes . VARIABLE _ DEF & & ! isLocalVariableDef ( node ) ; 
 } 
 
 / * *
