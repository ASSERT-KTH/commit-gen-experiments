BLEU SCORE: 0.08400788786839637

TEST MSG: Issue # 2427 : added customizable javadoc tokens
GENERATED MSG: Issue # 2161 : unify test input locations for coding package

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java <nl> index c09a67b . . 624cff8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java <nl> @ @ - 24 , 6 + 24 , 9 @ @ import org . antlr . v4 . runtime . Recognizer ; <nl> import com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser ; <nl> <nl> / * * <nl> + * Contains the constants for all the tokens contained in the Abstract <nl> + * Syntax Tree for the javadoc grammar . <nl> + * <nl> * @ author Baratali Izmailov <nl> * @ see < a href = " http : / / docs . oracle . com / javase / 8 / docs / technotes / tools / unix / javadoc . html " > <nl> * javadoc - The Java API Documentation Generator < / a > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index faed34a . . 3ca4ab1 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 19 , 9 + 19 , 12 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> <nl> + import java . util . Arrays ; <nl> import java . util . HashMap ; <nl> + import java . util . HashSet ; <nl> + import java . util . Locale ; <nl> import java . util . Map ; <nl> - import java . util . stream . IntStream ; <nl> + import java . util . Set ; <nl> <nl> import com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser ; <nl> import com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . ParseErrorMessage ; <nl> @ @ - 32 , 6 + 35 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailNode ; <nl> import com . puppycrawl . tools . checkstyle . api . JavadocTokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . BlockCommentPosition ; <nl> + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; <nl> <nl> / * * <nl> @ @ - 39 , 7 + 43 , 6 @ @ import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; <nl> * @ author Baratali Izmailov <nl> * / <nl> public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> - <nl> / * * <nl> * Message key of error message . Missed close HTML tag breaks structure <nl> * of parse tree , so parser stops parsing and generates such error <nl> @ @ - 90 , 6 + 93 , 9 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> * / <nl> private final JavadocDetailNodeParser parser = new JavadocDetailNodeParser ( ) ; <nl> <nl> + / * * The javadoc tokens the check is interested in . * / <nl> + private final Set < Integer > javadocTokens = new HashSet < > ( ) ; <nl> + <nl> / * * <nl> * DetailAST node of considered Javadoc comment that is just a block comment <nl> * in Java language syntax tree . <nl> @ @ - 97 , 8 + 103 , 8 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> private DetailAST blockCommentAst ; <nl> <nl> / * * <nl> - * Returns the default token types a check is interested in . <nl> - * @ return the default token types <nl> + * Returns the default javadoc token types a check is interested in . <nl> + * @ return the default javadoc token types <nl> * @ see JavadocTokenTypes <nl> * / <nl> public abstract int [ ] getDefaultJavadocTokens ( ) ; <nl> @ @ - 111 , 6 + 117 , 84 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> public abstract void visitJavadocToken ( DetailNode ast ) ; <nl> <nl> / * * <nl> + * The configurable javadoc token set . <nl> + * Used to protect Checks against malicious users who specify an <nl> + * unacceptable javadoc token set in the configuration file . <nl> + * The default implementation returns the check ' s default javadoc tokens . <nl> + * @ return the javadoc token set this check is designed for . <nl> + * @ see JavadocTokenTypes <nl> + * / <nl> + public int [ ] getAcceptableJavadocTokens ( ) { <nl> + final int [ ] defaultJavadocTokens = getDefaultJavadocTokens ( ) ; <nl> + final int [ ] copy = new int [ defaultJavadocTokens . length ] ; <nl> + System . arraycopy ( defaultJavadocTokens , 0 , copy , 0 , defaultJavadocTokens . length ) ; <nl> + return copy ; <nl> + } <nl> + <nl> + / * * <nl> + * The javadoc tokens that this check must be registered for . <nl> + * @ return the javadoc token set this must be registered for . <nl> + * @ see JavadocTokenTypes <nl> + * / <nl> + public int [ ] getRequiredJavadocTokens ( ) { <nl> + return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + } <nl> + <nl> + / * * <nl> + * Adds a set of tokens the check is interested in . <nl> + * @ param strRep the string representation of the tokens interested in <nl> + * / <nl> + public final void setJavadocTokens ( String . . . strRep ) { <nl> + javadocTokens . clear ( ) ; <nl> + for ( String str : strRep ) { <nl> + javadocTokens . add ( JavadocUtils . getTokenId ( str ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public void init ( ) { <nl> + validateDefaultJavadocTokens ( ) ; <nl> + if ( javadocTokens . isEmpty ( ) ) { <nl> + for ( int id : getDefaultJavadocTokens ( ) ) { <nl> + javadocTokens . add ( id ) ; <nl> + } <nl> + } <nl> + else { <nl> + final int [ ] acceptableJavadocTokens = getAcceptableJavadocTokens ( ) ; <nl> + Arrays . sort ( acceptableJavadocTokens ) ; <nl> + for ( Integer javadocTokenId : javadocTokens ) { <nl> + if ( Arrays . binarySearch ( acceptableJavadocTokens , javadocTokenId ) < 0 ) { <nl> + final String message = String . format ( Locale . ROOT , " Javadoc Token \ " % s \ " was " <nl> + + " not found in Acceptable javadoc tokens list in check % s " , <nl> + JavadocUtils . getTokenName ( javadocTokenId ) , getClass ( ) . getName ( ) ) ; <nl> + throw new IllegalStateException ( message ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Validates that check ' s required javadoc tokens are subset of default javadoc tokens . <nl> + * @ throws IllegalStateException when validation of default javadoc tokens fails <nl> + * / <nl> + private void validateDefaultJavadocTokens ( ) { <nl> + if ( getRequiredJavadocTokens ( ) . length ! = 0 ) { <nl> + final int [ ] defaultJavadocTokens = getDefaultJavadocTokens ( ) ; <nl> + Arrays . sort ( defaultJavadocTokens ) ; <nl> + for ( final int javadocToken : getRequiredJavadocTokens ( ) ) { <nl> + if ( Arrays . binarySearch ( defaultJavadocTokens , javadocToken ) < 0 ) { <nl> + final String message = String . format ( Locale . ROOT , <nl> + " Javadoc Token \ " % s \ " from required javadoc " <nl> + + " tokens was not found in default " <nl> + + " javadoc tokens list in check % s " , <nl> + javadocToken , getClass ( ) . getName ( ) ) ; <nl> + throw new IllegalStateException ( message ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> * Called before the starting to process a tree . <nl> * @ param rootAst <nl> * the root of the tree <nl> @ @ - 246 , 11 + 330 , 9 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> * the root of tree for process <nl> * / <nl> private void walk ( DetailNode root ) { <nl> - final int [ ] defaultTokenTypes = getDefaultJavadocTokens ( ) ; <nl> - <nl> DetailNode curNode = root ; <nl> while ( curNode ! = null ) { <nl> - final boolean waitsForProcessing = shouldBeProcessed ( defaultTokenTypes , curNode ) ; <nl> + boolean waitsForProcessing = shouldBeProcessed ( curNode ) ; <nl> <nl> if ( waitsForProcessing ) { <nl> visitJavadocToken ( curNode ) ; <nl> @ @ - 265 , 6 + 347 , 9 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> toVisit = JavadocUtils . getNextSibling ( curNode ) ; <nl> if ( toVisit = = null ) { <nl> curNode = curNode . getParent ( ) ; <nl> + if ( curNode ! = null ) { <nl> + waitsForProcessing = shouldBeProcessed ( curNode ) ; <nl> + } <nl> } <nl> } <nl> curNode = toVisit ; <nl> @ @ - 273 , 12 + 358 , 11 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> <nl> / * * <nl> * Checks whether the current node should be processed by the check . <nl> - * @ param defaultTokenTypes default token types . <nl> * @ param curNode current node . <nl> * @ return true if the current node should be processed by the check . <nl> * / <nl> - private boolean shouldBeProcessed ( int [ ] defaultTokenTypes , DetailNode curNode ) { <nl> - return IntStream . of ( defaultTokenTypes ) . anyMatch ( i - > i = = curNode . getType ( ) ) ; <nl> + private boolean shouldBeProcessed ( DetailNode curNode ) { <nl> + return javadocTokens . contains ( curNode . getType ( ) ) ; <nl> } <nl> <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java <nl> index 6becb4c . . 70c7141 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java <nl> @ @ - 131 , 6 + 131 , 11 @ @ public class AtclauseOrderCheck extends AbstractJavadocCheck { <nl> } <nl> <nl> @ Override <nl> + public int [ ] getRequiredJavadocTokens ( ) { <nl> + return getAcceptableJavadocTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java <nl> index 5c3c1ba . . d77cef8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java <nl> @ @ - 120 , 6 + 120 , 11 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { <nl> } <nl> <nl> @ Override <nl> + public int [ ] getRequiredJavadocTokens ( ) { <nl> + return getAcceptableJavadocTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java <nl> index 4a9140f . . 2e7b799 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java <nl> @ @ - 73 , 6 + 73 , 11 @ @ public class JavadocTagContinuationIndentationCheck extends AbstractJavadocCheck <nl> } <nl> <nl> @ Override <nl> + public int [ ] getRequiredJavadocTokens ( ) { <nl> + return getAcceptableJavadocTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java <nl> index 744ae10 . . 1a314c1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java <nl> @ @ - 101 , 6 + 101 , 11 @ @ public class SingleLineJavadocCheck extends AbstractJavadocCheck { <nl> } <nl> <nl> @ Override <nl> + public int [ ] getRequiredJavadocTokens ( ) { <nl> + return getAcceptableJavadocTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java <nl> index 0554981 . . c241453 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java <nl> @ @ - 117 , 6 + 117 , 11 @ @ public class SummaryJavadocCheck extends AbstractJavadocCheck { <nl> } <nl> <nl> @ Override <nl> + public int [ ] getRequiredJavadocTokens ( ) { <nl> + return getAcceptableJavadocTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> index b2ae65b . . 5aa22d4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java <nl> @ @ - 33 , 7 + 33 , 9 @ @ import java . util . List ; <nl> import java . util . Map ; <nl> <nl> import org . junit . Assert ; <nl> + import org . junit . Rule ; <nl> import org . junit . Test ; <nl> + import org . junit . rules . TemporaryFolder ; <nl> <nl> import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . Checker ; <nl> @ @ - 47 , 6 + 49 , 9 @ @ import com . puppycrawl . tools . checkstyle . utils . BlockCommentPosition ; <nl> import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> public class AbstractJavadocCheckTest extends BaseCheckTestSupport { <nl> + @ Rule <nl> + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> + <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> @ @ - 166 , 6 + 171 , 64 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { <nl> TestUtils . assertUtilsClassHasPrivateConstructor ( BlockCommentPosition . class ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testAcceptableTokensFail ( ) <nl> + throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( TokenIsNotInAcceptablesJavadocCheck . class ) ; <nl> + checkConfig . addAttribute ( " javadocTokens " , " RETURN _ LITERAL " ) ; <nl> + try { <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , getPath ( " InputMain . java " ) , expected ) ; <nl> + Assert . fail ( " CheckstyleException is expected " ) ; <nl> + } <nl> + catch ( IllegalStateException ex ) { <nl> + Assert . assertTrue ( ex . getMessage ( ) . startsWith ( " Javadoc Token " <nl> + + " \ " RETURN _ LITERAL \ " was not found in " <nl> + + " Acceptable javadoc tokens list in check " ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> + public void testAcceptableTokensPass ( ) <nl> + throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( TokenIsNotInAcceptablesJavadocCheck . class ) ; <nl> + checkConfig . addAttribute ( " javadocTokens " , " DEPRECATED _ LITERAL " ) ; <nl> + <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , getPath ( " InputMain . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testRequiredTokenIsNotInDefaultTokens ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( RequiredTokenIsNotInDefaultsJavadocCheck . class ) ; <nl> + final String pathToEmptyFile = temporaryFolder . newFile ( " file . java " ) . getPath ( ) ; <nl> + <nl> + try { <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , pathToEmptyFile , expected ) ; <nl> + Assert . fail ( " CheckstyleException is expected " ) ; <nl> + } <nl> + catch ( IllegalStateException ex ) { <nl> + Assert . assertTrue ( ex . getMessage ( ) . startsWith ( " Javadoc Token \ " " <nl> + + JavadocTokenTypes . RETURN _ LITERAL + " \ " from required " <nl> + + " javadoc tokens was not found in default javadoc tokens list in check " ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> + public void testVisitLeaveToken ( ) <nl> + throws Exception { <nl> + JavadocVisitLeaveCheck . clearCounter ( ) ; <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( JavadocVisitLeaveCheck . class ) ; <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , getPath ( " InputJavadocPosition . java " ) , expected ) ; <nl> + Assert . assertTrue ( JavadocVisitLeaveCheck . visitCount > 0 ) ; <nl> + Assert . assertEquals ( JavadocVisitLeaveCheck . visitCount , JavadocVisitLeaveCheck . leaveCount ) ; <nl> + } <nl> + <nl> private static class TempCheck extends AbstractJavadocCheck { <nl> <nl> @ Override <nl> @ @ - 217 , 4 + 280 , 83 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { <nl> javadocsNumber + + ; <nl> } <nl> } <nl> + <nl> + private static class RequiredTokenIsNotInDefaultsJavadocCheck extends AbstractJavadocCheck { <nl> + @ Override <nl> + public int [ ] getRequiredJavadocTokens ( ) { <nl> + return new int [ ] { JavadocTokenTypes . RETURN _ LITERAL } ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getDefaultJavadocTokens ( ) { <nl> + return new int [ ] { JavadocTokenTypes . DEPRECATED _ LITERAL } ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getAcceptableJavadocTokens ( ) { <nl> + return CommonUtils . EMPTY _ INT _ ARRAY ; <nl> + } <nl> + <nl> + @ Override <nl> + public void visitJavadocToken ( DetailNode ast ) { <nl> + / / not used <nl> + } <nl> + } <nl> + <nl> + private static class TokenIsNotInAcceptablesJavadocCheck extends AbstractJavadocCheck { <nl> + @ Override <nl> + public int [ ] getRequiredJavadocTokens ( ) { <nl> + return new int [ ] { JavadocTokenTypes . DEPRECATED _ LITERAL } ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getDefaultJavadocTokens ( ) { <nl> + return new int [ ] { JavadocTokenTypes . DEPRECATED _ LITERAL } ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getAcceptableJavadocTokens ( ) { <nl> + return new int [ ] { JavadocTokenTypes . DEPRECATED _ LITERAL } ; <nl> + } <nl> + <nl> + @ Override <nl> + public void visitJavadocToken ( DetailNode ast ) { <nl> + / / not used <nl> + } <nl> + } <nl> + <nl> + private static class JavadocVisitLeaveCheck extends AbstractJavadocCheck { <nl> + private static int visitCount ; <nl> + private static int leaveCount ; <nl> + <nl> + static void clearCounter ( ) { <nl> + visitCount = 0 ; <nl> + leaveCount = 0 ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getRequiredJavadocTokens ( ) { <nl> + return new int [ ] { JavadocTokenTypes . CHAR } ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getDefaultJavadocTokens ( ) { <nl> + return getRequiredJavadocTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getAcceptableJavadocTokens ( ) { <nl> + return getRequiredJavadocTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void visitJavadocToken ( DetailNode ast ) { <nl> + visitCount + + ; <nl> + } <nl> + <nl> + @ Override <nl> + public void leaveJavadocToken ( DetailNode ast ) { <nl> + leaveCount + + ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> index a1971a7 . . d680c36 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java <nl> @ @ - 46 , 6 + 46 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Filter ; <nl> import com . puppycrawl . tools . checkstyle . checks . regexp . RegexpMultilineCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . regexp . RegexpSinglelineCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . regexp . RegexpSinglelineJavaCheck ; <nl> + import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; <nl> import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; <nl> <nl> public final class CheckUtil { <nl> @ @ - 335 , 4 + 336 , 42 @ @ public final class CheckUtil { <nl> return result . toString ( ) ; <nl> } <nl> } <nl> + <nl> + public static String getJavadocTokenText ( int [ ] tokens , int . . . subtractions ) { <nl> + final StringBuilder result = new StringBuilder ( ) ; <nl> + boolean first = true ; <nl> + <nl> + for ( int token : tokens ) { <nl> + boolean found = false ; <nl> + <nl> + for ( int subtraction : subtractions ) { <nl> + if ( subtraction = = token ) { <nl> + found = true ; <nl> + break ; <nl> + } <nl> + } <nl> + <nl> + if ( found ) { <nl> + continue ; <nl> + } <nl> + <nl> + if ( first ) { <nl> + first = false ; <nl> + } <nl> + else { <nl> + result . append ( " , " ) ; <nl> + } <nl> + <nl> + result . append ( JavadocUtils . getTokenName ( token ) ) ; <nl> + } <nl> + <nl> + if ( result . length ( ) = = 0 ) { <nl> + result . append ( " empty " ) ; <nl> + } <nl> + else { <nl> + result . append ( " . " ) ; <nl> + } <nl> + <nl> + return result . toString ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> index ae4493c . . 3b763e4 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java <nl> @ @ - 59 , 6 + 59 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; <nl> import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; <nl> import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> + import com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck ; <nl> <nl> public class XDocsPagesTest { <nl> private static final Path JAVA _ SOURCES _ DIRECTORY = Paths . get ( " src / main / java " ) ; <nl> @ @ - 112 , 6 + 113 , 8 @ @ public class XDocsPagesTest { <nl> ) ; <nl> <nl> private static final Set < String > CHECK _ PROPERTIES = getProperties ( AbstractCheck . class ) ; <nl> + private static final Set < String > JAVADOC _ CHECK _ PROPERTIES = <nl> + getProperties ( AbstractJavadocCheck . class ) ; <nl> private static final Set < String > FILESET _ PROPERTIES = getProperties ( AbstractFileSetCheck . class ) ; <nl> <nl> private static final List < String > UNDOCUMENTED _ PROPERTIES = Arrays . asList ( <nl> @ @ - 395 , 9 + 398 , 30 @ @ public class XDocsPagesTest { <nl> final Set < String > properties = getProperties ( instance . getClass ( ) ) ; <nl> final Class < ? > clss = instance . getClass ( ) ; <nl> <nl> + fixCapturedProperties ( sectionName , instance , clss , properties ) ; <nl> + <nl> + if ( subSection ! = null ) { <nl> + Assert . assertTrue ( fileName + " section ' " + sectionName <nl> + + " ' should have no properties to show " , ! properties . isEmpty ( ) ) ; <nl> + <nl> + validatePropertySectionProperties ( fileName , sectionName , subSection , instance , <nl> + properties ) ; <nl> + } <nl> + <nl> + Assert . assertTrue ( fileName + " section ' " + sectionName + " ' should show properties : " <nl> + + properties , properties . isEmpty ( ) ) ; <nl> + } <nl> + <nl> + private static void fixCapturedProperties ( String sectionName , Object instance , Class < ? > clss , <nl> + Set < String > properties ) { <nl> / / remove global properties that don ' t need documentation <nl> if ( hasParentModule ( sectionName ) ) { <nl> - properties . removeAll ( CHECK _ PROPERTIES ) ; <nl> + if ( AbstractJavadocCheck . class . isAssignableFrom ( clss ) ) { <nl> + properties . removeAll ( JAVADOC _ CHECK _ PROPERTIES ) ; <nl> + } <nl> + else if ( AbstractCheck . class . isAssignableFrom ( clss ) ) { <nl> + properties . removeAll ( CHECK _ PROPERTIES ) ; <nl> + } <nl> } <nl> else if ( AbstractFileSetCheck . class . isAssignableFrom ( clss ) ) { <nl> properties . removeAll ( FILESET _ PROPERTIES ) ; <nl> @ @ - 427 , 21 + 451 , 27 @ @ public class XDocsPagesTest { <nl> } <nl> } <nl> <nl> - if ( subSection ! = null ) { <nl> - Assert . assertTrue ( fileName + " section ' " + sectionName <nl> - + " ' should have no properties to show " , ! properties . isEmpty ( ) ) ; <nl> + if ( AbstractJavadocCheck . class . isAssignableFrom ( clss ) ) { <nl> + final AbstractJavadocCheck check = ( AbstractJavadocCheck ) instance ; <nl> <nl> - validatePropertySectionProperties ( fileName , sectionName , subSection , instance , <nl> - properties ) ; <nl> - } <nl> + final int [ ] acceptableJavadocTokens = check . getAcceptableJavadocTokens ( ) ; <nl> + Arrays . sort ( acceptableJavadocTokens ) ; <nl> + final int [ ] defaultJavadocTokens = check . getDefaultJavadocTokens ( ) ; <nl> + Arrays . sort ( defaultJavadocTokens ) ; <nl> + final int [ ] requiredJavadocTokens = check . getRequiredJavadocTokens ( ) ; <nl> + Arrays . sort ( requiredJavadocTokens ) ; <nl> <nl> - Assert . assertTrue ( fileName + " section ' " + sectionName + " ' should show properties : " <nl> - + properties , properties . isEmpty ( ) ) ; <nl> + if ( ! Arrays . equals ( acceptableJavadocTokens , defaultJavadocTokens ) <nl> + | | ! Arrays . equals ( acceptableJavadocTokens , requiredJavadocTokens ) ) { <nl> + properties . add ( " javadocTokens " ) ; <nl> + } <nl> + } <nl> } <nl> <nl> private static void validatePropertySectionProperties ( String fileName , String sectionName , <nl> Node subSection , Object instance , Set < String > properties ) throws Exception { <nl> boolean skip = true ; <nl> + boolean didJavadocTokens = false ; <nl> boolean didTokens = false ; <nl> <nl> for ( Node row : XmlUtil . getChildrenElements ( XmlUtil . getFirstChildElement ( subSection ) ) ) { <nl> @ @ - 461 , 26 + 491 , 19 @ @ public class XDocsPagesTest { <nl> <nl> if ( " tokens " . equals ( propertyName ) ) { <nl> final AbstractCheck check = ( AbstractCheck ) instance ; <nl> - <nl> - Assert . assertEquals ( fileName + " section ' " + sectionName <nl> - + " ' should have the basic token description " , " tokens to check " , columns <nl> - . get ( 1 ) . getTextContent ( ) ) ; <nl> - Assert . assertEquals ( <nl> - fileName + " section ' " + sectionName <nl> - + " ' should have all the acceptable tokens " , <nl> - " subset of tokens " <nl> - + CheckUtil . getTokenText ( check . getAcceptableTokens ( ) , <nl> - check . getRequiredTokens ( ) ) , columns . get ( 2 ) . getTextContent ( ) <nl> - . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; <nl> - Assert . assertEquals ( <nl> - fileName + " section ' " + sectionName <nl> - + " ' should have all the default tokens " , <nl> - CheckUtil . getTokenText ( check . getDefaultTokens ( ) , check . getRequiredTokens ( ) ) , <nl> - columns . get ( 3 ) . getTextContent ( ) . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; <nl> + validatePropertySectionPropertyTokens ( fileName , sectionName , check , columns ) ; <nl> didTokens = true ; <nl> } <nl> + else if ( " javadocTokens " . equals ( propertyName ) ) { <nl> + final AbstractJavadocCheck check = ( AbstractJavadocCheck ) instance ; <nl> + validatePropertySectionPropertyJavadocTokens ( fileName , sectionName , check , columns ) ; <nl> + didJavadocTokens = true ; <nl> + } <nl> else { <nl> Assert . assertFalse ( fileName + " section ' " + sectionName <nl> + + " ' should have javadoc token properties next to last , before tokens " , <nl> + didJavadocTokens ) ; <nl> + Assert . assertFalse ( fileName + " section ' " + sectionName <nl> + " ' should have a description for " + propertyName , columns . get ( 1 ) <nl> . getTextContent ( ) . trim ( ) . isEmpty ( ) ) ; <nl> <nl> @ @ - 514 , 6 + 537 , 43 @ @ public class XDocsPagesTest { <nl> } <nl> } <nl> <nl> + private static void validatePropertySectionPropertyTokens ( String fileName , String sectionName , <nl> + AbstractCheck check , List < Node > columns ) { <nl> + Assert . assertEquals ( fileName + " section ' " + sectionName <nl> + + " ' should have the basic token description " , " tokens to check " , columns . get ( 1 ) <nl> + . getTextContent ( ) ) ; <nl> + Assert . assertEquals ( <nl> + fileName + " section ' " + sectionName + " ' should have all the acceptable tokens " , <nl> + " subset of tokens " <nl> + + CheckUtil . getTokenText ( check . getAcceptableTokens ( ) , <nl> + check . getRequiredTokens ( ) ) , columns . get ( 2 ) . getTextContent ( ) <nl> + . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; <nl> + Assert . assertEquals ( fileName + " section ' " + sectionName <nl> + + " ' should have all the default tokens " , <nl> + CheckUtil . getTokenText ( check . getDefaultTokens ( ) , check . getRequiredTokens ( ) ) , <nl> + columns . get ( 3 ) . getTextContent ( ) . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; <nl> + } <nl> + <nl> + private static void validatePropertySectionPropertyJavadocTokens ( String fileName , <nl> + String sectionName , AbstractJavadocCheck check , List < Node > columns ) { <nl> + Assert . assertEquals ( fileName + " section ' " + sectionName <nl> + + " ' should have the basic token javadoc description " , " javadoc tokens to check " , <nl> + columns . get ( 1 ) . getTextContent ( ) ) ; <nl> + Assert . assertEquals ( <nl> + fileName + " section ' " + sectionName <nl> + + " ' should have all the acceptable javadoc tokens " , <nl> + " subset of javadoc tokens " <nl> + + CheckUtil . getJavadocTokenText ( check . getAcceptableJavadocTokens ( ) , <nl> + check . getRequiredJavadocTokens ( ) ) , columns . get ( 2 ) . getTextContent ( ) <nl> + . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; <nl> + Assert . assertEquals ( <nl> + fileName + " section ' " + sectionName <nl> + + " ' should have all the default javadoc tokens " , <nl> + CheckUtil . getJavadocTokenText ( check . getDefaultJavadocTokens ( ) , <nl> + check . getRequiredJavadocTokens ( ) ) , columns . get ( 3 ) . getTextContent ( ) <nl> + . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; <nl> + } <nl> + <nl> private static String getCheckPropertyExpectedTypeName ( Class < ? > clss , Object instance , <nl> String propertyName ) { <nl> final String instanceName = instance . getClass ( ) . getSimpleName ( ) ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMain . java <nl> new file mode 100644 <nl> index 0000000 . . 75c7670 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMain . java <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> + / * * Javadoc * / <nl> + public class InputMain { <nl> + } <nl> diff - - git a / src / xdocs / config _ javadoc . xml b / src / xdocs / config _ javadoc . xml <nl> index 125e2d1 . . da4b62c 100644 <nl> - - - a / src / xdocs / config _ javadoc . xml <nl> + + + b / src / xdocs / config _ javadoc . xml <nl> @ @ - 1372 , 6 + 1372 , 33 @ @ public boolean isSomething ( ) <nl> < / p > <nl> < / subsection > <nl> <nl> + < subsection name = " Properties " > <nl> + < table > <nl> + < tr > <nl> + < th > name < / th > <nl> + < th > description < / th > <nl> + < th > type < / th > <nl> + < th > default value < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > javadocTokens < / td > <nl> + < td > javadoc tokens to check < / td > <nl> + < td > subset of javadoc tokens <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # PARAM _ LITERAL " > PARAM _ LITERAL < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # RETURN _ LITERAL " > RETURN _ LITERAL < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # THROWS _ LITERAL " > THROWS _ LITERAL < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # DEPRECATED _ LITERAL " > DEPRECATED _ LITERAL < / a > . <nl> + < / td > <nl> + < td > <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # PARAM _ LITERAL " > PARAM _ LITERAL < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # RETURN _ LITERAL " > RETURN _ LITERAL < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # THROWS _ LITERAL " > THROWS _ LITERAL < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # DEPRECATED _ LITERAL " > DEPRECATED _ LITERAL < / a > . <nl> + < / td > <nl> + < / tr > <nl> + < / table > <nl> + < / subsection > <nl> + <nl> < subsection name = " Examples " > <nl> < p > <nl> Default configuration that will check < code > @ param < / code > , < code > @ return < / code > , <nl> diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm <nl> index b6757ca . . 5ae0287 100644 <nl> - - - a / src / xdocs / writingjavadocchecks . xml . vm <nl> + + + b / src / xdocs / writingjavadocchecks . xml . vm <nl> @ @ - 532 , 7 + 532 , 43 @ @ JAVADOC - > < p > First < / p > \ r \ n < p > Second < / p > < EOF > [ 0 : 0 ] <nl> < / section > <nl> <nl> < section name = " Customize token types in Javadoc Checks " > <nl> - Not implemented yet . See < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2427 " > Github Issue # 2427 < / a > . <nl> + < p > <nl> + There are four methods in AbstractJavadocCheck class to control the processed <nl> + < a href = " apidocs / index . html " > JavadocTokenTypes < / a > - <nl> + one setter <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # setJavadocTokens - java . lang . String . . . - " > <nl> + setTokens ( ) < / a > , which is used to define a custom set ( which is different <nl> + from the default one ) of the processed JavadocTokenTypes via config file and <nl> + three getters , which have to be overridden : <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # getDefaultJavadocTokens - - " > <nl> + getDefaultJavadocTokens ( ) < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # getAcceptableJavadocTokens - - " > <nl> + getAcceptableJavadocTokens ( ) < / a > , <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # getRequiredJavadocTokens - - " > <nl> + getRequiredJavadocTokens ( ) < / a > . <nl> + < / p > <nl> + <nl> + < ul > <nl> + <nl> + < li > <nl> + getDefaultJavadocTokens ( ) - returns a set of JavadocTokenTypes which are processed in <nl> + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # visitToken - com . puppycrawl . tools . checkstyle . api . DetailAST - " > <nl> + visitToken ( ) < / a > method by default . <nl> + < / li > <nl> + <nl> + < li > <nl> + getRequiredJavadocTokens ( ) - returns a set of JavadocTokenTypes which Check must be subscribed to for <nl> + a valid execution . If the user wants to specify a custom set of JavadocTokenTypes then <nl> + this set must contain all the JavadocTokenTypes from RequiredJavadocTokens . <nl> + < / li > <nl> + <nl> + < li > <nl> + getAcceptableJavadocTokens ( ) - returns a set , which contains all the JavadocTokenTypes that <nl> + can be processed by the check . Both DefaultJavadocTokens and RequiredJavadocTokens and any custom <nl> + set of JavadocTokenTypes are subsets of AcceptableJavadocTokens . <nl> + < / li > <nl> + <nl> + < / ul > <nl> < / section > <nl> <nl> < section name = " Integrating new Javadoc Check " >
NEAREST DIFF (one line): diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm <nl> index 5e68020 . . b48ccdb 100644 <nl> - - - a / src / xdocs / index . xml . vm <nl> + + + b / src / xdocs / index . xml . vm <nl> @ @ - 116 , 202 + 116 , 206 @ @ <nl> many improvements since then . The known plug - ins are : <nl> < / p > <nl> <nl> - < table > <nl> - < tr > <nl> - < th > IDE / Build tool < / th > <nl> - < th > Main / Initial Author < / th > <nl> - < th > Available from < / th > <nl> - < th > Remarks < / th > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " https : / / www . scm - manager . org / " > SCM - Manager < / a > < / td > <nl> - < td / > <nl> - < td > < a href = " http : / / plugins . scm - manager . org / scm - plugin - backend / page / index . html " > SCM - Manager Plugin Page < / a > < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . jgrasp . org / " > jGRASP < / a > < / td > <nl> - < td > Larry Barowski < / td > <nl> - < td > < a href = " http : / / www . jgrasp . org / " > jGRASP Home Page < / a > < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . sonarqube . org / " > SonarQube < / a > < / td > <nl> - < td > Freddy Mallet ( initial author ) < / td > <nl> - < td > < a href = " http : / / www . sonarqube . org / " > SonarQube Home Page < / a > < / td > <nl> - < td > < a href = " http : / / nemo . sonarqube . org / " > Demo site < / a > < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> - < td > David Schneider < / td > <nl> - < td > <nl> - < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home <nl> - Page < / a > <nl> - < / td > <nl> - < td > <nl> - In 2007 was awarded <nl> - < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > <nl> - Best Open Source Eclipse - based Developer tool <nl> - < / a > . <nl> - < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> - < td > Roman Ivanov < / td > <nl> - < td > <nl> - < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > <nl> - < / td > <nl> - < td > <nl> - Extension for Eclipse - CS plugin and also an incubator for <nl> - Checkstyle checks that are not present in main stream of <nl> - Checkstyle . See the <nl> - < a href = " https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / wiki " > Wiki < / a > <nl> - and <nl> - < a href = " http : / / sevntu - checkstyle . github . io / sevntu . checkstyle / " > Blog < / a > <nl> - . <nl> - < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> - < td > Marco van Meegen < / td > <nl> - < td > <nl> - < a <nl> - href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse <nl> - Home Page < / a > <nl> - < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > <nl> - < td > Jakub Slawinski < / td > <nl> - < td > <nl> - < a href = " http : / / qaplug . com / " > QAPlug < / a > <nl> - < / td > <nl> - < td > Provides quality assurance features . < / td > <nl> - < / tr > <nl> + < subsection name = " Active Tools " > <nl> + < table > <nl> + < tr > <nl> + < th > IDE / Build tool < / th > <nl> + < th > Main / Initial Author < / th > <nl> + < th > Available from < / th > <nl> + < th > Remarks < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > David Schneider < / td > <nl> + < td > <nl> + < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home Page < / a > <nl> + < / td > <nl> + < td > <nl> + In 2007 was awarded <nl> + < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > <nl> + Best Open Source Eclipse - based Developer tool <nl> + < / a > . <nl> + < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / gradle . org / " > Gradle < / a > < / td > <nl> + < td > Hans Dockter ( initial author ) < / td > <nl> + < td > Checkstyle supported out of the box < / td > <nl> + < td > < a href = " https : / / docs . gradle . org / current / userguide / checkstyle _ plugin . html " > Gradle Checkstyle docs < / a > < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > <nl> + < td > James Shiell < / td > <nl> + < td > <nl> + < a href = " https : / / github . com / jshiell / checkstyle - idea " > Checkstyle - idea Project Page < / a > <nl> + < / td > <nl> + < td > Provides real - time and on - demand scanning . < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . jgrasp . org / " > jGRASP < / a > < / td > <nl> + < td > Larry Barowski < / td > <nl> + < td > < a href = " http : / / www . jgrasp . org / " > jGRASP Home Page < / a > < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > Roman Ivanov < / td > <nl> + < td > <nl> + < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > <nl> + < / td > <nl> + < td > <nl> + Extension for Eclipse - CS plugin and also an incubator for <nl> + Checkstyle checks that are not present in main stream of <nl> + Checkstyle . See the <nl> + < a href = " https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / wiki " > Wiki < / a > <nl> + and <nl> + < a href = " http : / / sevntu - checkstyle . github . io / sevntu . checkstyle / " > Blog < / a > <nl> + . <nl> + < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " https : / / bitbucket . org / atlassian / bamboo - checkstyle - plugin " > Bamboo Checkstyle plug - in < / a > < / td > <nl> + < td > Atlassian ( formerly by Ross Rowe and Stephan Paulicke ) < / td > <nl> + < td > < a href = " https : / / marketplace . atlassian . com / archive / com . atlassian . bamboo . plugins . bamboo - checkstyle - plugin " > Bamboo Checkstyle plug - in Atlassian Marketplace page < / a > < / td > <nl> + < td > An add - on that will parse and record CheckStyle reports and report your style violations over time . < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in < / a > < / td > <nl> + < td / > <nl> + < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in Home Page < / a > < / td > <nl> + < td > This plug - in is supported by the Static Analysis Collector plug - in that collects different analysis results and shows the results in aggregated trend graphs . < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / maven . apache . org / " > Maven < / a > < / td > <nl> + < td > Vincent Massol < / td > <nl> + < td > Checkstyle supported out of the box < / td > <nl> + < td > < a href = " http : / / maven . apache . org / plugins / maven - checkstyle - plugin / checkstyle . html " > example report < / a > < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > <nl> + < td > Petr Hejl < / td > <nl> + < td > <nl> + < a href = " http : / / www . sickboy . cz / checkstyle / " > Checkstyle Beans < / a > <nl> + < / td > <nl> + < td > <nl> + Problems with source code are displayed as annotations of <nl> + the source <nl> + < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > <nl> + < td / > <nl> + < td > <nl> + < a href = " https : / / java . net / projects / sqe / " > Software Quality Environment ( SQE ) < / a > <nl> + < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . sonarqube . org / " > SonarQube < / a > < / td > <nl> + < td > Freddy Mallet ( initial author ) < / td > <nl> + < td > < a href = " http : / / www . sonarqube . org / " > SonarQube Home Page < / a > < / td > <nl> + < td > < a href = " http : / / nemo . sonarqube . org / " > Demo site < / a > < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . jedit . org / " > jEdit < / a > < / td > <nl> + < td > Todd Papaioannou < / td > <nl> + < td > < a <nl> + href = " http : / / plugins . jedit . org / plugins / ? CheckStylePlugin " > JEdit CheckStylePlugin < / a > < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " https : / / www . scm - manager . org / " > SCM - Manager < / a > < / td > <nl> + < td / > <nl> + < td > < a href = " http : / / plugins . scm - manager . org / scm - plugin - backend / page / index . html " > SCM - Manager Plugin Page < / a > < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > <nl> + < td > Jakub Slawinski < / td > <nl> + < td > <nl> + < a href = " http : / / qaplug . com / " > QAPlug < / a > <nl> + < / td > <nl> + < td > Provides quality assurance features . < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td / > <nl> + < td > < a href = " http : / / jcoderz . github . io / " > jCoderZ < / a > < / td > <nl> + < td > <nl> + < a href = " http : / / jcoderz . github . io / " > fawkeZ < / a > <nl> + < / td > <nl> + < td > Combines multiple tools ( CheckStyle , findbugs , PMD , Cobertura , etc . ) < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / tide . olympe . in / " > tIDE < / a > < / td > <nl> + < td / > <nl> + < td > Built in < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . jarchitect . com / " > JArchitect < / a > < / td > <nl> + < td / > <nl> + < td > < a href = " http : / / www . jarchitect . com / " > JArchitect Home Page < / a > < / td > <nl> + < td > Imports XML result files from CheckStyle . < / td > <nl> + < / tr > <nl> + < / table > <nl> + < / subsection > <nl> <nl> - < tr > <nl> - < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > <nl> - < td > James Shiell < / td > <nl> - < td > <nl> - < a href = " https : / / github . com / jshiell / checkstyle - idea " > Checkstyle - idea Project Page < / a > <nl> - < / td > <nl> - < td > Provides real - time and on - demand scanning . < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > <nl> - < td > Mark Lussier < / td > <nl> - < td > <nl> - < a href = " http : / / jetstyle . sourceforge . net / " > JetStyle <nl> - Project Page < / a > <nl> - < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > <nl> - < td > Petr Hejl < / td > <nl> - < td > <nl> - < a href = " http : / / www . sickboy . cz / checkstyle / " > Checkstyle Beans < / a > <nl> - < / td > <nl> - < td > <nl> - Problems with source code are displayed as annotations of <nl> - the source <nl> - < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > <nl> - < td > Paul Goulbourn < / td > <nl> - < td > <nl> - < a href = " http : / / nbcheckstyle . sourceforge . net " > nbCheckStyle < / a > <nl> - < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > <nl> - < td / > <nl> - < td > <nl> - < a href = " https : / / java . net / projects / sqe / " > Software Quality Environment ( SQE ) < / a > <nl> - < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td / > <nl> - < td > < a href = " http : / / jcoderz . github . io / " > jCoderZ < / a > < / td > <nl> - < td > <nl> - < a href = " http : / / jcoderz . github . io / " > fawkeZ < / a > <nl> - < / td > <nl> - < td > Combines multiple tools ( CheckStyle , findbugs , PMD , Cobertura , etc . ) < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . bluej . org " > BlueJ < / a > < / td > <nl> - < td > Rick Giles < / td > <nl> - < td > < a href = " http : / / bluejcheckstyle . sourceforge . net / " > bluejcheckstyle <nl> - home page < / a > < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / tide . olympe . in / " > tIDE < / a > < / td > <nl> - < td / > <nl> - < td > Built in < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / jdee . sourceforge . net / " > Emacs JDE < / a > < / td > <nl> - < td > Markus Mohnen < / td > <nl> - < td > Part of the standard JDEE distribution < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . jedit . org / " > jEdit < / a > < / td > <nl> - < td > Todd Papaioannou < / td > <nl> - < td > < a <nl> - href = " http : / / plugins . jedit . org / plugins / ? CheckStylePlugin " > JEdit CheckStylePlugin < / a > < / td > <nl> - < td / > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . vim . org " > Vim editor < / a > < / td > <nl> - < td > Xandy Johnson < / td > <nl> - < td > < a <nl> - href = " http : / / vim . sourceforge . net / scripts / script . php ? script _ id = 448 " > Plugin Homepage < / a > < / td > <nl> - < td > Vim file - type plug - in < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / maven . apache . org / " > Maven < / a > < / td > <nl> - < td > Vincent Massol < / td > <nl> - < td > Checkstyle supported out of the box < / td > <nl> - < td > < a href = " http : / / maven . apache . org / plugins / maven - checkstyle - plugin / checkstyle . html " > example report < / a > < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / gradle . org / " > Gradle < / a > < / td > <nl> - < td > Hans Dockter ( initial author ) < / td > <nl> - < td > Checkstyle supported out of the box < / td > <nl> - < td > < a href = " https : / / docs . gradle . org / current / userguide / checkstyle _ plugin . html " > Gradle Checkstyle docs < / a > < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / qalab . sourceforge . net / " > QALab < / a > < / td > <nl> - < td > Benoit Xhenseval < / td > <nl> - < td > < a href = " http : / / qalab . sourceforge . net / " > QALab Home Page < / a > < / td > <nl> - < td > Supports tracking Checkstyle statistics over time . < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " http : / / www . jarchitect . com / " > JArchitect < / a > < / td > <nl> - < td / > <nl> - < td > < a href = " http : / / www . jarchitect . com / " > JArchitect Home Page < / a > < / td > <nl> - < td > Imports XML result files from CheckStyle . < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in < / a > < / td > <nl> - < td / > <nl> - < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in Home Page < / a > < / td > <nl> - < td > This plug - in is supported by the Static Analysis Collector plug - in that collects different analysis results and shows the results in aggregated trend graphs . < / td > <nl> - < / tr > <nl> - < tr > <nl> - < td > < a href = " https : / / bitbucket . org / atlassian / bamboo - checkstyle - plugin " > Bamboo Checkstyle plug - in < / a > < / td > <nl> - < td > Atlassian ( formerly by Ross Rowe and Stephan Paulicke ) < / td > <nl> - < td > < a href = " https : / / marketplace . atlassian . com / archive / com . atlassian . bamboo . plugins . bamboo - checkstyle - plugin " > Bamboo Checkstyle plug - in Atlassian Marketplace page < / a > < / td > <nl> - < td > An add - on that will parse and record CheckStyle reports and report your style violations over time . < / td > <nl> - < / tr > <nl> - < / table > <nl> + < subsection name = " Inactive / Old Tools " > <nl> + < table > <nl> + < tr > <nl> + < th > IDE / Build tool < / th > <nl> + < th > Main / Initial Author < / th > <nl> + < th > Available from < / th > <nl> + < th > Remarks < / th > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > <nl> + < td > Mark Lussier < / td > <nl> + < td > <nl> + < a href = " http : / / jetstyle . sourceforge . net / " > JetStyle Project Page < / a > <nl> + < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . bluej . org " > BlueJ < / a > < / td > <nl> + < td > Rick Giles < / td > <nl> + < td > < a href = " http : / / bluejcheckstyle . sourceforge . net / " > bluejcheckstyle home page < / a > < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > Marco van Meegen < / td > <nl> + < td > <nl> + < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a > <nl> + < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / qalab . sourceforge . net / " > QALab < / a > < / td > <nl> + < td > Benoit Xhenseval < / td > <nl> + < td > < a href = " http : / / qalab . sourceforge . net / " > QALab Home Page < / a > < / td > <nl> + < td > Supports tracking Checkstyle statistics over time . < / td > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > <nl> + < td > Paul Goulbourn < / td > <nl> + < td > < a href = " http : / / nbcheckstyle . sourceforge . net " > nbCheckStyle < / a > < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / jdee . sourceforge . net / " > Emacs JDE < / a > < / td > <nl> + < td > Markus Mohnen < / td > <nl> + < td > Part of the standard JDEE distribution < / td > <nl> + < td / > <nl> + < / tr > <nl> + < tr > <nl> + < td > < a href = " http : / / www . vim . org " > Vim editor < / a > < / td > <nl> + < td > Xandy Johnson < / td > <nl> + < td > < a href = " http : / / vim . sourceforge . net / scripts / script . php ? script _ id = 448 " > Plugin Homepage < / a > < / td > <nl> + < td > Vim file - type plug - in < / td > <nl> + < / tr > <nl> + < / table > <nl> + < / subsection > <nl> <nl> < p > <nl> If you have written a plugin for other IDEs , please let us know , so we

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java 
 index c09a67b . . 624cff8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . java 
 @ @ - 24 , 6 + 24 , 9 @ @ import org . antlr . v4 . runtime . Recognizer ; 
 import com . puppycrawl . tools . checkstyle . grammars . javadoc . JavadocParser ; 
 
 / * * 
 + * Contains the constants for all the tokens contained in the Abstract 
 + * Syntax Tree for the javadoc grammar . 
 + * 
 * @ author Baratali Izmailov 
 * @ see < a href = " http : / / docs . oracle . com / javase / 8 / docs / technotes / tools / unix / javadoc . html " > 
 * javadoc - The Java API Documentation Generator < / a > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index faed34a . . 3ca4ab1 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 19 , 9 + 19 , 12 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 
 + import java . util . Arrays ; 
 import java . util . HashMap ; 
 + import java . util . HashSet ; 
 + import java . util . Locale ; 
 import java . util . Map ; 
 - import java . util . stream . IntStream ; 
 + import java . util . Set ; 
 
 import com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser ; 
 import com . puppycrawl . tools . checkstyle . JavadocDetailNodeParser . ParseErrorMessage ; 
 @ @ - 32 , 6 + 35 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . DetailNode ; 
 import com . puppycrawl . tools . checkstyle . api . JavadocTokenTypes ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . BlockCommentPosition ; 
 + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; 
 
 / * * 
 @ @ - 39 , 7 + 43 , 6 @ @ import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; 
 * @ author Baratali Izmailov 
 * / 
 public abstract class AbstractJavadocCheck extends AbstractCheck { 
 - 
 / * * 
 * Message key of error message . Missed close HTML tag breaks structure 
 * of parse tree , so parser stops parsing and generates such error 
 @ @ - 90 , 6 + 93 , 9 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 * / 
 private final JavadocDetailNodeParser parser = new JavadocDetailNodeParser ( ) ; 
 
 + / * * The javadoc tokens the check is interested in . * / 
 + private final Set < Integer > javadocTokens = new HashSet < > ( ) ; 
 + 
 / * * 
 * DetailAST node of considered Javadoc comment that is just a block comment 
 * in Java language syntax tree . 
 @ @ - 97 , 8 + 103 , 8 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 private DetailAST blockCommentAst ; 
 
 / * * 
 - * Returns the default token types a check is interested in . 
 - * @ return the default token types 
 + * Returns the default javadoc token types a check is interested in . 
 + * @ return the default javadoc token types 
 * @ see JavadocTokenTypes 
 * / 
 public abstract int [ ] getDefaultJavadocTokens ( ) ; 
 @ @ - 111 , 6 + 117 , 84 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 public abstract void visitJavadocToken ( DetailNode ast ) ; 
 
 / * * 
 + * The configurable javadoc token set . 
 + * Used to protect Checks against malicious users who specify an 
 + * unacceptable javadoc token set in the configuration file . 
 + * The default implementation returns the check ' s default javadoc tokens . 
 + * @ return the javadoc token set this check is designed for . 
 + * @ see JavadocTokenTypes 
 + * / 
 + public int [ ] getAcceptableJavadocTokens ( ) { 
 + final int [ ] defaultJavadocTokens = getDefaultJavadocTokens ( ) ; 
 + final int [ ] copy = new int [ defaultJavadocTokens . length ] ; 
 + System . arraycopy ( defaultJavadocTokens , 0 , copy , 0 , defaultJavadocTokens . length ) ; 
 + return copy ; 
 + } 
 + 
 + / * * 
 + * The javadoc tokens that this check must be registered for . 
 + * @ return the javadoc token set this must be registered for . 
 + * @ see JavadocTokenTypes 
 + * / 
 + public int [ ] getRequiredJavadocTokens ( ) { 
 + return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + } 
 + 
 + / * * 
 + * Adds a set of tokens the check is interested in . 
 + * @ param strRep the string representation of the tokens interested in 
 + * / 
 + public final void setJavadocTokens ( String . . . strRep ) { 
 + javadocTokens . clear ( ) ; 
 + for ( String str : strRep ) { 
 + javadocTokens . add ( JavadocUtils . getTokenId ( str ) ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void init ( ) { 
 + validateDefaultJavadocTokens ( ) ; 
 + if ( javadocTokens . isEmpty ( ) ) { 
 + for ( int id : getDefaultJavadocTokens ( ) ) { 
 + javadocTokens . add ( id ) ; 
 + } 
 + } 
 + else { 
 + final int [ ] acceptableJavadocTokens = getAcceptableJavadocTokens ( ) ; 
 + Arrays . sort ( acceptableJavadocTokens ) ; 
 + for ( Integer javadocTokenId : javadocTokens ) { 
 + if ( Arrays . binarySearch ( acceptableJavadocTokens , javadocTokenId ) < 0 ) { 
 + final String message = String . format ( Locale . ROOT , " Javadoc Token \ " % s \ " was " 
 + + " not found in Acceptable javadoc tokens list in check % s " , 
 + JavadocUtils . getTokenName ( javadocTokenId ) , getClass ( ) . getName ( ) ) ; 
 + throw new IllegalStateException ( message ) ; 
 + } 
 + } 
 + } 
 + } 
 + 
 + / * * 
 + * Validates that check ' s required javadoc tokens are subset of default javadoc tokens . 
 + * @ throws IllegalStateException when validation of default javadoc tokens fails 
 + * / 
 + private void validateDefaultJavadocTokens ( ) { 
 + if ( getRequiredJavadocTokens ( ) . length ! = 0 ) { 
 + final int [ ] defaultJavadocTokens = getDefaultJavadocTokens ( ) ; 
 + Arrays . sort ( defaultJavadocTokens ) ; 
 + for ( final int javadocToken : getRequiredJavadocTokens ( ) ) { 
 + if ( Arrays . binarySearch ( defaultJavadocTokens , javadocToken ) < 0 ) { 
 + final String message = String . format ( Locale . ROOT , 
 + " Javadoc Token \ " % s \ " from required javadoc " 
 + + " tokens was not found in default " 
 + + " javadoc tokens list in check % s " , 
 + javadocToken , getClass ( ) . getName ( ) ) ; 
 + throw new IllegalStateException ( message ) ; 
 + } 
 + } 
 + } 
 + } 
 + 
 + / * * 
 * Called before the starting to process a tree . 
 * @ param rootAst 
 * the root of the tree 
 @ @ - 246 , 11 + 330 , 9 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 * the root of tree for process 
 * / 
 private void walk ( DetailNode root ) { 
 - final int [ ] defaultTokenTypes = getDefaultJavadocTokens ( ) ; 
 - 
 DetailNode curNode = root ; 
 while ( curNode ! = null ) { 
 - final boolean waitsForProcessing = shouldBeProcessed ( defaultTokenTypes , curNode ) ; 
 + boolean waitsForProcessing = shouldBeProcessed ( curNode ) ; 
 
 if ( waitsForProcessing ) { 
 visitJavadocToken ( curNode ) ; 
 @ @ - 265 , 6 + 347 , 9 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 toVisit = JavadocUtils . getNextSibling ( curNode ) ; 
 if ( toVisit = = null ) { 
 curNode = curNode . getParent ( ) ; 
 + if ( curNode ! = null ) { 
 + waitsForProcessing = shouldBeProcessed ( curNode ) ; 
 + } 
 } 
 } 
 curNode = toVisit ; 
 @ @ - 273 , 12 + 358 , 11 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 
 / * * 
 * Checks whether the current node should be processed by the check . 
 - * @ param defaultTokenTypes default token types . 
 * @ param curNode current node . 
 * @ return true if the current node should be processed by the check . 
 * / 
 - private boolean shouldBeProcessed ( int [ ] defaultTokenTypes , DetailNode curNode ) { 
 - return IntStream . of ( defaultTokenTypes ) . anyMatch ( i - > i = = curNode . getType ( ) ) ; 
 + private boolean shouldBeProcessed ( DetailNode curNode ) { 
 + return javadocTokens . contains ( curNode . getType ( ) ) ; 
 } 
 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java 
 index 6becb4c . . 70c7141 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AtclauseOrderCheck . java 
 @ @ - 131 , 6 + 131 , 11 @ @ public class AtclauseOrderCheck extends AbstractJavadocCheck { 
 } 
 
 @ Override 
 + public int [ ] getRequiredJavadocTokens ( ) { 
 + return getAcceptableJavadocTokens ( ) ; 
 + } 
 + 
 + @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java 
 index 5c3c1ba . . d77cef8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocParagraphCheck . java 
 @ @ - 120 , 6 + 120 , 11 @ @ public class JavadocParagraphCheck extends AbstractJavadocCheck { 
 } 
 
 @ Override 
 + public int [ ] getRequiredJavadocTokens ( ) { 
 + return getAcceptableJavadocTokens ( ) ; 
 + } 
 + 
 + @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java 
 index 4a9140f . . 2e7b799 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocTagContinuationIndentationCheck . java 
 @ @ - 73 , 6 + 73 , 11 @ @ public class JavadocTagContinuationIndentationCheck extends AbstractJavadocCheck 
 } 
 
 @ Override 
 + public int [ ] getRequiredJavadocTokens ( ) { 
 + return getAcceptableJavadocTokens ( ) ; 
 + } 
 + 
 + @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java 
 index 744ae10 . . 1a314c1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SingleLineJavadocCheck . java 
 @ @ - 101 , 6 + 101 , 11 @ @ public class SingleLineJavadocCheck extends AbstractJavadocCheck { 
 } 
 
 @ Override 
 + public int [ ] getRequiredJavadocTokens ( ) { 
 + return getAcceptableJavadocTokens ( ) ; 
 + } 
 + 
 + @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java 
 index 0554981 . . c241453 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / SummaryJavadocCheck . java 
 @ @ - 117 , 6 + 117 , 11 @ @ public class SummaryJavadocCheck extends AbstractJavadocCheck { 
 } 
 
 @ Override 
 + public int [ ] getRequiredJavadocTokens ( ) { 
 + return getAcceptableJavadocTokens ( ) ; 
 + } 
 + 
 + @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { TokenTypes . BLOCK _ COMMENT _ BEGIN } ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 index b2ae65b . . 5aa22d4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheckTest . java 
 @ @ - 33 , 7 + 33 , 9 @ @ import java . util . List ; 
 import java . util . Map ; 
 
 import org . junit . Assert ; 
 + import org . junit . Rule ; 
 import org . junit . Test ; 
 + import org . junit . rules . TemporaryFolder ; 
 
 import com . puppycrawl . tools . checkstyle . BaseCheckTestSupport ; 
 import com . puppycrawl . tools . checkstyle . Checker ; 
 @ @ - 47 , 6 + 49 , 9 @ @ import com . puppycrawl . tools . checkstyle . utils . BlockCommentPosition ; 
 import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 public class AbstractJavadocCheckTest extends BaseCheckTestSupport { 
 + @ Rule 
 + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 + 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 @ @ - 166 , 6 + 171 , 64 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { 
 TestUtils . assertUtilsClassHasPrivateConstructor ( BlockCommentPosition . class ) ; 
 } 
 
 + @ Test 
 + public void testAcceptableTokensFail ( ) 
 + throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( TokenIsNotInAcceptablesJavadocCheck . class ) ; 
 + checkConfig . addAttribute ( " javadocTokens " , " RETURN _ LITERAL " ) ; 
 + try { 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , getPath ( " InputMain . java " ) , expected ) ; 
 + Assert . fail ( " CheckstyleException is expected " ) ; 
 + } 
 + catch ( IllegalStateException ex ) { 
 + Assert . assertTrue ( ex . getMessage ( ) . startsWith ( " Javadoc Token " 
 + + " \ " RETURN _ LITERAL \ " was not found in " 
 + + " Acceptable javadoc tokens list in check " ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 + public void testAcceptableTokensPass ( ) 
 + throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( TokenIsNotInAcceptablesJavadocCheck . class ) ; 
 + checkConfig . addAttribute ( " javadocTokens " , " DEPRECATED _ LITERAL " ) ; 
 + 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , getPath ( " InputMain . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testRequiredTokenIsNotInDefaultTokens ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( RequiredTokenIsNotInDefaultsJavadocCheck . class ) ; 
 + final String pathToEmptyFile = temporaryFolder . newFile ( " file . java " ) . getPath ( ) ; 
 + 
 + try { 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , pathToEmptyFile , expected ) ; 
 + Assert . fail ( " CheckstyleException is expected " ) ; 
 + } 
 + catch ( IllegalStateException ex ) { 
 + Assert . assertTrue ( ex . getMessage ( ) . startsWith ( " Javadoc Token \ " " 
 + + JavadocTokenTypes . RETURN _ LITERAL + " \ " from required " 
 + + " javadoc tokens was not found in default javadoc tokens list in check " ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 + public void testVisitLeaveToken ( ) 
 + throws Exception { 
 + JavadocVisitLeaveCheck . clearCounter ( ) ; 
 + final DefaultConfiguration checkConfig = createCheckConfig ( JavadocVisitLeaveCheck . class ) ; 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , getPath ( " InputJavadocPosition . java " ) , expected ) ; 
 + Assert . assertTrue ( JavadocVisitLeaveCheck . visitCount > 0 ) ; 
 + Assert . assertEquals ( JavadocVisitLeaveCheck . visitCount , JavadocVisitLeaveCheck . leaveCount ) ; 
 + } 
 + 
 private static class TempCheck extends AbstractJavadocCheck { 
 
 @ Override 
 @ @ - 217 , 4 + 280 , 83 @ @ public class AbstractJavadocCheckTest extends BaseCheckTestSupport { 
 javadocsNumber + + ; 
 } 
 } 
 + 
 + private static class RequiredTokenIsNotInDefaultsJavadocCheck extends AbstractJavadocCheck { 
 + @ Override 
 + public int [ ] getRequiredJavadocTokens ( ) { 
 + return new int [ ] { JavadocTokenTypes . RETURN _ LITERAL } ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getDefaultJavadocTokens ( ) { 
 + return new int [ ] { JavadocTokenTypes . DEPRECATED _ LITERAL } ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getAcceptableJavadocTokens ( ) { 
 + return CommonUtils . EMPTY _ INT _ ARRAY ; 
 + } 
 + 
 + @ Override 
 + public void visitJavadocToken ( DetailNode ast ) { 
 + / / not used 
 + } 
 + } 
 + 
 + private static class TokenIsNotInAcceptablesJavadocCheck extends AbstractJavadocCheck { 
 + @ Override 
 + public int [ ] getRequiredJavadocTokens ( ) { 
 + return new int [ ] { JavadocTokenTypes . DEPRECATED _ LITERAL } ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getDefaultJavadocTokens ( ) { 
 + return new int [ ] { JavadocTokenTypes . DEPRECATED _ LITERAL } ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getAcceptableJavadocTokens ( ) { 
 + return new int [ ] { JavadocTokenTypes . DEPRECATED _ LITERAL } ; 
 + } 
 + 
 + @ Override 
 + public void visitJavadocToken ( DetailNode ast ) { 
 + / / not used 
 + } 
 + } 
 + 
 + private static class JavadocVisitLeaveCheck extends AbstractJavadocCheck { 
 + private static int visitCount ; 
 + private static int leaveCount ; 
 + 
 + static void clearCounter ( ) { 
 + visitCount = 0 ; 
 + leaveCount = 0 ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getRequiredJavadocTokens ( ) { 
 + return new int [ ] { JavadocTokenTypes . CHAR } ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getDefaultJavadocTokens ( ) { 
 + return getRequiredJavadocTokens ( ) ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getAcceptableJavadocTokens ( ) { 
 + return getRequiredJavadocTokens ( ) ; 
 + } 
 + 
 + @ Override 
 + public void visitJavadocToken ( DetailNode ast ) { 
 + visitCount + + ; 
 + } 
 + 
 + @ Override 
 + public void leaveJavadocToken ( DetailNode ast ) { 
 + leaveCount + + ; 
 + } 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 index a1971a7 . . d680c36 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / CheckUtil . java 
 @ @ - 46 , 6 + 46 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . Filter ; 
 import com . puppycrawl . tools . checkstyle . checks . regexp . RegexpMultilineCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . regexp . RegexpSinglelineCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . regexp . RegexpSinglelineJavaCheck ; 
 + import com . puppycrawl . tools . checkstyle . utils . JavadocUtils ; 
 import com . puppycrawl . tools . checkstyle . utils . TokenUtils ; 
 
 public final class CheckUtil { 
 @ @ - 335 , 4 + 336 , 42 @ @ public final class CheckUtil { 
 return result . toString ( ) ; 
 } 
 } 
 + 
 + public static String getJavadocTokenText ( int [ ] tokens , int . . . subtractions ) { 
 + final StringBuilder result = new StringBuilder ( ) ; 
 + boolean first = true ; 
 + 
 + for ( int token : tokens ) { 
 + boolean found = false ; 
 + 
 + for ( int subtraction : subtractions ) { 
 + if ( subtraction = = token ) { 
 + found = true ; 
 + break ; 
 + } 
 + } 
 + 
 + if ( found ) { 
 + continue ; 
 + } 
 + 
 + if ( first ) { 
 + first = false ; 
 + } 
 + else { 
 + result . append ( " , " ) ; 
 + } 
 + 
 + result . append ( JavadocUtils . getTokenName ( token ) ) ; 
 + } 
 + 
 + if ( result . length ( ) = = 0 ) { 
 + result . append ( " empty " ) ; 
 + } 
 + else { 
 + result . append ( " . " ) ; 
 + } 
 + 
 + return result . toString ( ) ; 
 + } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 index ae4493c . . 3b763e4 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / XDocsPagesTest . java 
 @ @ - 59 , 6 + 59 , 7 @ @ import com . puppycrawl . tools . checkstyle . api . AbstractCheck ; 
 import com . puppycrawl . tools . checkstyle . api . AbstractFileSetCheck ; 
 import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 + import com . puppycrawl . tools . checkstyle . checks . javadoc . AbstractJavadocCheck ; 
 
 public class XDocsPagesTest { 
 private static final Path JAVA _ SOURCES _ DIRECTORY = Paths . get ( " src / main / java " ) ; 
 @ @ - 112 , 6 + 113 , 8 @ @ public class XDocsPagesTest { 
 ) ; 
 
 private static final Set < String > CHECK _ PROPERTIES = getProperties ( AbstractCheck . class ) ; 
 + private static final Set < String > JAVADOC _ CHECK _ PROPERTIES = 
 + getProperties ( AbstractJavadocCheck . class ) ; 
 private static final Set < String > FILESET _ PROPERTIES = getProperties ( AbstractFileSetCheck . class ) ; 
 
 private static final List < String > UNDOCUMENTED _ PROPERTIES = Arrays . asList ( 
 @ @ - 395 , 9 + 398 , 30 @ @ public class XDocsPagesTest { 
 final Set < String > properties = getProperties ( instance . getClass ( ) ) ; 
 final Class < ? > clss = instance . getClass ( ) ; 
 
 + fixCapturedProperties ( sectionName , instance , clss , properties ) ; 
 + 
 + if ( subSection ! = null ) { 
 + Assert . assertTrue ( fileName + " section ' " + sectionName 
 + + " ' should have no properties to show " , ! properties . isEmpty ( ) ) ; 
 + 
 + validatePropertySectionProperties ( fileName , sectionName , subSection , instance , 
 + properties ) ; 
 + } 
 + 
 + Assert . assertTrue ( fileName + " section ' " + sectionName + " ' should show properties : " 
 + + properties , properties . isEmpty ( ) ) ; 
 + } 
 + 
 + private static void fixCapturedProperties ( String sectionName , Object instance , Class < ? > clss , 
 + Set < String > properties ) { 
 / / remove global properties that don ' t need documentation 
 if ( hasParentModule ( sectionName ) ) { 
 - properties . removeAll ( CHECK _ PROPERTIES ) ; 
 + if ( AbstractJavadocCheck . class . isAssignableFrom ( clss ) ) { 
 + properties . removeAll ( JAVADOC _ CHECK _ PROPERTIES ) ; 
 + } 
 + else if ( AbstractCheck . class . isAssignableFrom ( clss ) ) { 
 + properties . removeAll ( CHECK _ PROPERTIES ) ; 
 + } 
 } 
 else if ( AbstractFileSetCheck . class . isAssignableFrom ( clss ) ) { 
 properties . removeAll ( FILESET _ PROPERTIES ) ; 
 @ @ - 427 , 21 + 451 , 27 @ @ public class XDocsPagesTest { 
 } 
 } 
 
 - if ( subSection ! = null ) { 
 - Assert . assertTrue ( fileName + " section ' " + sectionName 
 - + " ' should have no properties to show " , ! properties . isEmpty ( ) ) ; 
 + if ( AbstractJavadocCheck . class . isAssignableFrom ( clss ) ) { 
 + final AbstractJavadocCheck check = ( AbstractJavadocCheck ) instance ; 
 
 - validatePropertySectionProperties ( fileName , sectionName , subSection , instance , 
 - properties ) ; 
 - } 
 + final int [ ] acceptableJavadocTokens = check . getAcceptableJavadocTokens ( ) ; 
 + Arrays . sort ( acceptableJavadocTokens ) ; 
 + final int [ ] defaultJavadocTokens = check . getDefaultJavadocTokens ( ) ; 
 + Arrays . sort ( defaultJavadocTokens ) ; 
 + final int [ ] requiredJavadocTokens = check . getRequiredJavadocTokens ( ) ; 
 + Arrays . sort ( requiredJavadocTokens ) ; 
 
 - Assert . assertTrue ( fileName + " section ' " + sectionName + " ' should show properties : " 
 - + properties , properties . isEmpty ( ) ) ; 
 + if ( ! Arrays . equals ( acceptableJavadocTokens , defaultJavadocTokens ) 
 + | | ! Arrays . equals ( acceptableJavadocTokens , requiredJavadocTokens ) ) { 
 + properties . add ( " javadocTokens " ) ; 
 + } 
 + } 
 } 
 
 private static void validatePropertySectionProperties ( String fileName , String sectionName , 
 Node subSection , Object instance , Set < String > properties ) throws Exception { 
 boolean skip = true ; 
 + boolean didJavadocTokens = false ; 
 boolean didTokens = false ; 
 
 for ( Node row : XmlUtil . getChildrenElements ( XmlUtil . getFirstChildElement ( subSection ) ) ) { 
 @ @ - 461 , 26 + 491 , 19 @ @ public class XDocsPagesTest { 
 
 if ( " tokens " . equals ( propertyName ) ) { 
 final AbstractCheck check = ( AbstractCheck ) instance ; 
 - 
 - Assert . assertEquals ( fileName + " section ' " + sectionName 
 - + " ' should have the basic token description " , " tokens to check " , columns 
 - . get ( 1 ) . getTextContent ( ) ) ; 
 - Assert . assertEquals ( 
 - fileName + " section ' " + sectionName 
 - + " ' should have all the acceptable tokens " , 
 - " subset of tokens " 
 - + CheckUtil . getTokenText ( check . getAcceptableTokens ( ) , 
 - check . getRequiredTokens ( ) ) , columns . get ( 2 ) . getTextContent ( ) 
 - . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; 
 - Assert . assertEquals ( 
 - fileName + " section ' " + sectionName 
 - + " ' should have all the default tokens " , 
 - CheckUtil . getTokenText ( check . getDefaultTokens ( ) , check . getRequiredTokens ( ) ) , 
 - columns . get ( 3 ) . getTextContent ( ) . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; 
 + validatePropertySectionPropertyTokens ( fileName , sectionName , check , columns ) ; 
 didTokens = true ; 
 } 
 + else if ( " javadocTokens " . equals ( propertyName ) ) { 
 + final AbstractJavadocCheck check = ( AbstractJavadocCheck ) instance ; 
 + validatePropertySectionPropertyJavadocTokens ( fileName , sectionName , check , columns ) ; 
 + didJavadocTokens = true ; 
 + } 
 else { 
 Assert . assertFalse ( fileName + " section ' " + sectionName 
 + + " ' should have javadoc token properties next to last , before tokens " , 
 + didJavadocTokens ) ; 
 + Assert . assertFalse ( fileName + " section ' " + sectionName 
 + " ' should have a description for " + propertyName , columns . get ( 1 ) 
 . getTextContent ( ) . trim ( ) . isEmpty ( ) ) ; 
 
 @ @ - 514 , 6 + 537 , 43 @ @ public class XDocsPagesTest { 
 } 
 } 
 
 + private static void validatePropertySectionPropertyTokens ( String fileName , String sectionName , 
 + AbstractCheck check , List < Node > columns ) { 
 + Assert . assertEquals ( fileName + " section ' " + sectionName 
 + + " ' should have the basic token description " , " tokens to check " , columns . get ( 1 ) 
 + . getTextContent ( ) ) ; 
 + Assert . assertEquals ( 
 + fileName + " section ' " + sectionName + " ' should have all the acceptable tokens " , 
 + " subset of tokens " 
 + + CheckUtil . getTokenText ( check . getAcceptableTokens ( ) , 
 + check . getRequiredTokens ( ) ) , columns . get ( 2 ) . getTextContent ( ) 
 + . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; 
 + Assert . assertEquals ( fileName + " section ' " + sectionName 
 + + " ' should have all the default tokens " , 
 + CheckUtil . getTokenText ( check . getDefaultTokens ( ) , check . getRequiredTokens ( ) ) , 
 + columns . get ( 3 ) . getTextContent ( ) . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; 
 + } 
 + 
 + private static void validatePropertySectionPropertyJavadocTokens ( String fileName , 
 + String sectionName , AbstractJavadocCheck check , List < Node > columns ) { 
 + Assert . assertEquals ( fileName + " section ' " + sectionName 
 + + " ' should have the basic token javadoc description " , " javadoc tokens to check " , 
 + columns . get ( 1 ) . getTextContent ( ) ) ; 
 + Assert . assertEquals ( 
 + fileName + " section ' " + sectionName 
 + + " ' should have all the acceptable javadoc tokens " , 
 + " subset of javadoc tokens " 
 + + CheckUtil . getJavadocTokenText ( check . getAcceptableJavadocTokens ( ) , 
 + check . getRequiredJavadocTokens ( ) ) , columns . get ( 2 ) . getTextContent ( ) 
 + . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; 
 + Assert . assertEquals ( 
 + fileName + " section ' " + sectionName 
 + + " ' should have all the default javadoc tokens " , 
 + CheckUtil . getJavadocTokenText ( check . getDefaultJavadocTokens ( ) , 
 + check . getRequiredJavadocTokens ( ) ) , columns . get ( 3 ) . getTextContent ( ) 
 + . replaceAll ( " \ \ s + " , " " ) . trim ( ) ) ; 
 + } 
 + 
 private static String getCheckPropertyExpectedTypeName ( Class < ? > clss , Object instance , 
 String propertyName ) { 
 final String instanceName = instance . getClass ( ) . getSimpleName ( ) ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMain . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMain . java 
 new file mode 100644 
 index 0000000 . . 75c7670 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / InputMain . java 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 + / * * Javadoc * / 
 + public class InputMain { 
 + } 
 diff - - git a / src / xdocs / config _ javadoc . xml b / src / xdocs / config _ javadoc . xml 
 index 125e2d1 . . da4b62c 100644 
 - - - a / src / xdocs / config _ javadoc . xml 
 + + + b / src / xdocs / config _ javadoc . xml 
 @ @ - 1372 , 6 + 1372 , 33 @ @ public boolean isSomething ( ) 
 < / p > 
 < / subsection > 
 
 + < subsection name = " Properties " > 
 + < table > 
 + < tr > 
 + < th > name < / th > 
 + < th > description < / th > 
 + < th > type < / th > 
 + < th > default value < / th > 
 + < / tr > 
 + < tr > 
 + < td > javadocTokens < / td > 
 + < td > javadoc tokens to check < / td > 
 + < td > subset of javadoc tokens 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # PARAM _ LITERAL " > PARAM _ LITERAL < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # RETURN _ LITERAL " > RETURN _ LITERAL < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # THROWS _ LITERAL " > THROWS _ LITERAL < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # DEPRECATED _ LITERAL " > DEPRECATED _ LITERAL < / a > . 
 + < / td > 
 + < td > 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # PARAM _ LITERAL " > PARAM _ LITERAL < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # RETURN _ LITERAL " > RETURN _ LITERAL < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # THROWS _ LITERAL " > THROWS _ LITERAL < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / JavadocTokenTypes . html # DEPRECATED _ LITERAL " > DEPRECATED _ LITERAL < / a > . 
 + < / td > 
 + < / tr > 
 + < / table > 
 + < / subsection > 
 + 
 < subsection name = " Examples " > 
 < p > 
 Default configuration that will check < code > @ param < / code > , < code > @ return < / code > , 
 diff - - git a / src / xdocs / writingjavadocchecks . xml . vm b / src / xdocs / writingjavadocchecks . xml . vm 
 index b6757ca . . 5ae0287 100644 
 - - - a / src / xdocs / writingjavadocchecks . xml . vm 
 + + + b / src / xdocs / writingjavadocchecks . xml . vm 
 @ @ - 532 , 7 + 532 , 43 @ @ JAVADOC - > < p > First < / p > \ r \ n < p > Second < / p > < EOF > [ 0 : 0 ] 
 < / section > 
 
 < section name = " Customize token types in Javadoc Checks " > 
 - Not implemented yet . See < a href = " https : / / github . com / checkstyle / checkstyle / issues / 2427 " > Github Issue # 2427 < / a > . 
 + < p > 
 + There are four methods in AbstractJavadocCheck class to control the processed 
 + < a href = " apidocs / index . html " > JavadocTokenTypes < / a > - 
 + one setter 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # setJavadocTokens - java . lang . String . . . - " > 
 + setTokens ( ) < / a > , which is used to define a custom set ( which is different 
 + from the default one ) of the processed JavadocTokenTypes via config file and 
 + three getters , which have to be overridden : 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # getDefaultJavadocTokens - - " > 
 + getDefaultJavadocTokens ( ) < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # getAcceptableJavadocTokens - - " > 
 + getAcceptableJavadocTokens ( ) < / a > , 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # getRequiredJavadocTokens - - " > 
 + getRequiredJavadocTokens ( ) < / a > . 
 + < / p > 
 + 
 + < ul > 
 + 
 + < li > 
 + getDefaultJavadocTokens ( ) - returns a set of JavadocTokenTypes which are processed in 
 + < a href = " apidocs / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . html # visitToken - com . puppycrawl . tools . checkstyle . api . DetailAST - " > 
 + visitToken ( ) < / a > method by default . 
 + < / li > 
 + 
 + < li > 
 + getRequiredJavadocTokens ( ) - returns a set of JavadocTokenTypes which Check must be subscribed to for 
 + a valid execution . If the user wants to specify a custom set of JavadocTokenTypes then 
 + this set must contain all the JavadocTokenTypes from RequiredJavadocTokens . 
 + < / li > 
 + 
 + < li > 
 + getAcceptableJavadocTokens ( ) - returns a set , which contains all the JavadocTokenTypes that 
 + can be processed by the check . Both DefaultJavadocTokens and RequiredJavadocTokens and any custom 
 + set of JavadocTokenTypes are subsets of AcceptableJavadocTokens . 
 + < / li > 
 + 
 + < / ul > 
 < / section > 
 
 < section name = " Integrating new Javadoc Check " >

NEAREST DIFF:
diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm 
 index 5e68020 . . b48ccdb 100644 
 - - - a / src / xdocs / index . xml . vm 
 + + + b / src / xdocs / index . xml . vm 
 @ @ - 116 , 202 + 116 , 206 @ @ 
 many improvements since then . The known plug - ins are : 
 < / p > 
 
 - < table > 
 - < tr > 
 - < th > IDE / Build tool < / th > 
 - < th > Main / Initial Author < / th > 
 - < th > Available from < / th > 
 - < th > Remarks < / th > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " https : / / www . scm - manager . org / " > SCM - Manager < / a > < / td > 
 - < td / > 
 - < td > < a href = " http : / / plugins . scm - manager . org / scm - plugin - backend / page / index . html " > SCM - Manager Plugin Page < / a > < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . jgrasp . org / " > jGRASP < / a > < / td > 
 - < td > Larry Barowski < / td > 
 - < td > < a href = " http : / / www . jgrasp . org / " > jGRASP Home Page < / a > < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . sonarqube . org / " > SonarQube < / a > < / td > 
 - < td > Freddy Mallet ( initial author ) < / td > 
 - < td > < a href = " http : / / www . sonarqube . org / " > SonarQube Home Page < / a > < / td > 
 - < td > < a href = " http : / / nemo . sonarqube . org / " > Demo site < / a > < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 - < td > David Schneider < / td > 
 - < td > 
 - < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home 
 - Page < / a > 
 - < / td > 
 - < td > 
 - In 2007 was awarded 
 - < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > 
 - Best Open Source Eclipse - based Developer tool 
 - < / a > . 
 - < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 - < td > Roman Ivanov < / td > 
 - < td > 
 - < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > 
 - < / td > 
 - < td > 
 - Extension for Eclipse - CS plugin and also an incubator for 
 - Checkstyle checks that are not present in main stream of 
 - Checkstyle . See the 
 - < a href = " https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / wiki " > Wiki < / a > 
 - and 
 - < a href = " http : / / sevntu - checkstyle . github . io / sevntu . checkstyle / " > Blog < / a > 
 - . 
 - < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 - < td > Marco van Meegen < / td > 
 - < td > 
 - < a 
 - href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse 
 - Home Page < / a > 
 - < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > 
 - < td > Jakub Slawinski < / td > 
 - < td > 
 - < a href = " http : / / qaplug . com / " > QAPlug < / a > 
 - < / td > 
 - < td > Provides quality assurance features . < / td > 
 - < / tr > 
 + < subsection name = " Active Tools " > 
 + < table > 
 + < tr > 
 + < th > IDE / Build tool < / th > 
 + < th > Main / Initial Author < / th > 
 + < th > Available from < / th > 
 + < th > Remarks < / th > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > David Schneider < / td > 
 + < td > 
 + < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home Page < / a > 
 + < / td > 
 + < td > 
 + In 2007 was awarded 
 + < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > 
 + Best Open Source Eclipse - based Developer tool 
 + < / a > . 
 + < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / gradle . org / " > Gradle < / a > < / td > 
 + < td > Hans Dockter ( initial author ) < / td > 
 + < td > Checkstyle supported out of the box < / td > 
 + < td > < a href = " https : / / docs . gradle . org / current / userguide / checkstyle _ plugin . html " > Gradle Checkstyle docs < / a > < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > 
 + < td > James Shiell < / td > 
 + < td > 
 + < a href = " https : / / github . com / jshiell / checkstyle - idea " > Checkstyle - idea Project Page < / a > 
 + < / td > 
 + < td > Provides real - time and on - demand scanning . < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . jgrasp . org / " > jGRASP < / a > < / td > 
 + < td > Larry Barowski < / td > 
 + < td > < a href = " http : / / www . jgrasp . org / " > jGRASP Home Page < / a > < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > Roman Ivanov < / td > 
 + < td > 
 + < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > 
 + < / td > 
 + < td > 
 + Extension for Eclipse - CS plugin and also an incubator for 
 + Checkstyle checks that are not present in main stream of 
 + Checkstyle . See the 
 + < a href = " https : / / github . com / sevntu - checkstyle / sevntu . checkstyle / wiki " > Wiki < / a > 
 + and 
 + < a href = " http : / / sevntu - checkstyle . github . io / sevntu . checkstyle / " > Blog < / a > 
 + . 
 + < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " https : / / bitbucket . org / atlassian / bamboo - checkstyle - plugin " > Bamboo Checkstyle plug - in < / a > < / td > 
 + < td > Atlassian ( formerly by Ross Rowe and Stephan Paulicke ) < / td > 
 + < td > < a href = " https : / / marketplace . atlassian . com / archive / com . atlassian . bamboo . plugins . bamboo - checkstyle - plugin " > Bamboo Checkstyle plug - in Atlassian Marketplace page < / a > < / td > 
 + < td > An add - on that will parse and record CheckStyle reports and report your style violations over time . < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in < / a > < / td > 
 + < td / > 
 + < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in Home Page < / a > < / td > 
 + < td > This plug - in is supported by the Static Analysis Collector plug - in that collects different analysis results and shows the results in aggregated trend graphs . < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / maven . apache . org / " > Maven < / a > < / td > 
 + < td > Vincent Massol < / td > 
 + < td > Checkstyle supported out of the box < / td > 
 + < td > < a href = " http : / / maven . apache . org / plugins / maven - checkstyle - plugin / checkstyle . html " > example report < / a > < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > 
 + < td > Petr Hejl < / td > 
 + < td > 
 + < a href = " http : / / www . sickboy . cz / checkstyle / " > Checkstyle Beans < / a > 
 + < / td > 
 + < td > 
 + Problems with source code are displayed as annotations of 
 + the source 
 + < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > 
 + < td / > 
 + < td > 
 + < a href = " https : / / java . net / projects / sqe / " > Software Quality Environment ( SQE ) < / a > 
 + < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . sonarqube . org / " > SonarQube < / a > < / td > 
 + < td > Freddy Mallet ( initial author ) < / td > 
 + < td > < a href = " http : / / www . sonarqube . org / " > SonarQube Home Page < / a > < / td > 
 + < td > < a href = " http : / / nemo . sonarqube . org / " > Demo site < / a > < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . jedit . org / " > jEdit < / a > < / td > 
 + < td > Todd Papaioannou < / td > 
 + < td > < a 
 + href = " http : / / plugins . jedit . org / plugins / ? CheckStylePlugin " > JEdit CheckStylePlugin < / a > < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " https : / / www . scm - manager . org / " > SCM - Manager < / a > < / td > 
 + < td / > 
 + < td > < a href = " http : / / plugins . scm - manager . org / scm - plugin - backend / page / index . html " > SCM - Manager Plugin Page < / a > < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > 
 + < td > Jakub Slawinski < / td > 
 + < td > 
 + < a href = " http : / / qaplug . com / " > QAPlug < / a > 
 + < / td > 
 + < td > Provides quality assurance features . < / td > 
 + < / tr > 
 + < tr > 
 + < td / > 
 + < td > < a href = " http : / / jcoderz . github . io / " > jCoderZ < / a > < / td > 
 + < td > 
 + < a href = " http : / / jcoderz . github . io / " > fawkeZ < / a > 
 + < / td > 
 + < td > Combines multiple tools ( CheckStyle , findbugs , PMD , Cobertura , etc . ) < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / tide . olympe . in / " > tIDE < / a > < / td > 
 + < td / > 
 + < td > Built in < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . jarchitect . com / " > JArchitect < / a > < / td > 
 + < td / > 
 + < td > < a href = " http : / / www . jarchitect . com / " > JArchitect Home Page < / a > < / td > 
 + < td > Imports XML result files from CheckStyle . < / td > 
 + < / tr > 
 + < / table > 
 + < / subsection > 
 
 - < tr > 
 - < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > 
 - < td > James Shiell < / td > 
 - < td > 
 - < a href = " https : / / github . com / jshiell / checkstyle - idea " > Checkstyle - idea Project Page < / a > 
 - < / td > 
 - < td > Provides real - time and on - demand scanning . < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > 
 - < td > Mark Lussier < / td > 
 - < td > 
 - < a href = " http : / / jetstyle . sourceforge . net / " > JetStyle 
 - Project Page < / a > 
 - < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > 
 - < td > Petr Hejl < / td > 
 - < td > 
 - < a href = " http : / / www . sickboy . cz / checkstyle / " > Checkstyle Beans < / a > 
 - < / td > 
 - < td > 
 - Problems with source code are displayed as annotations of 
 - the source 
 - < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > 
 - < td > Paul Goulbourn < / td > 
 - < td > 
 - < a href = " http : / / nbcheckstyle . sourceforge . net " > nbCheckStyle < / a > 
 - < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > 
 - < td / > 
 - < td > 
 - < a href = " https : / / java . net / projects / sqe / " > Software Quality Environment ( SQE ) < / a > 
 - < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td / > 
 - < td > < a href = " http : / / jcoderz . github . io / " > jCoderZ < / a > < / td > 
 - < td > 
 - < a href = " http : / / jcoderz . github . io / " > fawkeZ < / a > 
 - < / td > 
 - < td > Combines multiple tools ( CheckStyle , findbugs , PMD , Cobertura , etc . ) < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . bluej . org " > BlueJ < / a > < / td > 
 - < td > Rick Giles < / td > 
 - < td > < a href = " http : / / bluejcheckstyle . sourceforge . net / " > bluejcheckstyle 
 - home page < / a > < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / tide . olympe . in / " > tIDE < / a > < / td > 
 - < td / > 
 - < td > Built in < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / jdee . sourceforge . net / " > Emacs JDE < / a > < / td > 
 - < td > Markus Mohnen < / td > 
 - < td > Part of the standard JDEE distribution < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . jedit . org / " > jEdit < / a > < / td > 
 - < td > Todd Papaioannou < / td > 
 - < td > < a 
 - href = " http : / / plugins . jedit . org / plugins / ? CheckStylePlugin " > JEdit CheckStylePlugin < / a > < / td > 
 - < td / > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . vim . org " > Vim editor < / a > < / td > 
 - < td > Xandy Johnson < / td > 
 - < td > < a 
 - href = " http : / / vim . sourceforge . net / scripts / script . php ? script _ id = 448 " > Plugin Homepage < / a > < / td > 
 - < td > Vim file - type plug - in < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / maven . apache . org / " > Maven < / a > < / td > 
 - < td > Vincent Massol < / td > 
 - < td > Checkstyle supported out of the box < / td > 
 - < td > < a href = " http : / / maven . apache . org / plugins / maven - checkstyle - plugin / checkstyle . html " > example report < / a > < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / gradle . org / " > Gradle < / a > < / td > 
 - < td > Hans Dockter ( initial author ) < / td > 
 - < td > Checkstyle supported out of the box < / td > 
 - < td > < a href = " https : / / docs . gradle . org / current / userguide / checkstyle _ plugin . html " > Gradle Checkstyle docs < / a > < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / qalab . sourceforge . net / " > QALab < / a > < / td > 
 - < td > Benoit Xhenseval < / td > 
 - < td > < a href = " http : / / qalab . sourceforge . net / " > QALab Home Page < / a > < / td > 
 - < td > Supports tracking Checkstyle statistics over time . < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " http : / / www . jarchitect . com / " > JArchitect < / a > < / td > 
 - < td / > 
 - < td > < a href = " http : / / www . jarchitect . com / " > JArchitect Home Page < / a > < / td > 
 - < td > Imports XML result files from CheckStyle . < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in < / a > < / td > 
 - < td / > 
 - < td > < a href = " https : / / wiki . jenkins - ci . org / display / JENKINS / Checkstyle + Plugin " > Jenkins Checkstyle plug - in Home Page < / a > < / td > 
 - < td > This plug - in is supported by the Static Analysis Collector plug - in that collects different analysis results and shows the results in aggregated trend graphs . < / td > 
 - < / tr > 
 - < tr > 
 - < td > < a href = " https : / / bitbucket . org / atlassian / bamboo - checkstyle - plugin " > Bamboo Checkstyle plug - in < / a > < / td > 
 - < td > Atlassian ( formerly by Ross Rowe and Stephan Paulicke ) < / td > 
 - < td > < a href = " https : / / marketplace . atlassian . com / archive / com . atlassian . bamboo . plugins . bamboo - checkstyle - plugin " > Bamboo Checkstyle plug - in Atlassian Marketplace page < / a > < / td > 
 - < td > An add - on that will parse and record CheckStyle reports and report your style violations over time . < / td > 
 - < / tr > 
 - < / table > 
 + < subsection name = " Inactive / Old Tools " > 
 + < table > 
 + < tr > 
 + < th > IDE / Build tool < / th > 
 + < th > Main / Initial Author < / th > 
 + < th > Available from < / th > 
 + < th > Remarks < / th > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . jetbrains . com / idea / " > IntelliJ IDEA < / a > < / td > 
 + < td > Mark Lussier < / td > 
 + < td > 
 + < a href = " http : / / jetstyle . sourceforge . net / " > JetStyle Project Page < / a > 
 + < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . bluej . org " > BlueJ < / a > < / td > 
 + < td > Rick Giles < / td > 
 + < td > < a href = " http : / / bluejcheckstyle . sourceforge . net / " > bluejcheckstyle home page < / a > < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > Marco van Meegen < / td > 
 + < td > 
 + < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a > 
 + < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / qalab . sourceforge . net / " > QALab < / a > < / td > 
 + < td > Benoit Xhenseval < / td > 
 + < td > < a href = " http : / / qalab . sourceforge . net / " > QALab Home Page < / a > < / td > 
 + < td > Supports tracking Checkstyle statistics over time . < / td > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " https : / / netbeans . org / " > NetBeans < / a > < / td > 
 + < td > Paul Goulbourn < / td > 
 + < td > < a href = " http : / / nbcheckstyle . sourceforge . net " > nbCheckStyle < / a > < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / jdee . sourceforge . net / " > Emacs JDE < / a > < / td > 
 + < td > Markus Mohnen < / td > 
 + < td > Part of the standard JDEE distribution < / td > 
 + < td / > 
 + < / tr > 
 + < tr > 
 + < td > < a href = " http : / / www . vim . org " > Vim editor < / a > < / td > 
 + < td > Xandy Johnson < / td > 
 + < td > < a href = " http : / / vim . sourceforge . net / scripts / script . php ? script _ id = 448 " > Plugin Homepage < / a > < / td > 
 + < td > Vim file - type plug - in < / td > 
 + < / tr > 
 + < / table > 
 + < / subsection > 
 
 < p > 
 If you have written a plugin for other IDEs , please let us know , so we
