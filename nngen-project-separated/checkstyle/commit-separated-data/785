BLEU SCORE: 0.06916141792551132

TEST MSG: Issue # 4350 : expanded exception violation when haltOnException is off
GENERATED MSG: fix for Findbugs violation DM _ DEFAULT _ ENCODING . Issue # 778

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> index ea8591c . . 2cdf5f6 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java <nl> @ @ - 21 , 6 + 21 , 8 @ @ package com . puppycrawl . tools . checkstyle ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> + import java . io . PrintWriter ; <nl> + import java . io . StringWriter ; <nl> import java . io . UnsupportedEncodingException ; <nl> import java . nio . charset . Charset ; <nl> import java . util . ArrayList ; <nl> @ @ - 327 , 9 + 329 , 15 @ @ public class Checker extends AutomaticBean implements MessageDispatcher , RootMod <nl> } <nl> <nl> LOG . debug ( " Exception occurred . " , ex ) ; <nl> + <nl> + final StringWriter sw = new StringWriter ( ) ; <nl> + final PrintWriter pw = new PrintWriter ( sw , true ) ; <nl> + <nl> + ex . printStackTrace ( pw ) ; <nl> + <nl> fileMessages . add ( new LocalizedMessage ( 0 , <nl> Definitions . CHECKSTYLE _ BUNDLE , EXCEPTION _ MSG , <nl> - new String [ ] { ex . getClass ( ) . getName ( ) + " : " + ex . getMessage ( ) } , <nl> + new String [ ] { sw . getBuffer ( ) . toString ( ) } , <nl> null , getClass ( ) , null ) ) ; <nl> } <nl> return fileMessages ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> index 2709f61 . . a3b83b9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java <nl> @ @ - 172 , 6 + 172 , 11 @ @ public class XMLLogger <nl> case ' & ' : <nl> sb . append ( encodeAmpersand ( value , i ) ) ; <nl> break ; <nl> + case ' \ r ' : <nl> + break ; <nl> + case ' \ n ' : <nl> + sb . append ( " & # 10 ; " ) ; <nl> + break ; <nl> default : <nl> sb . append ( chr ) ; <nl> break ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> index 22545b3 . . 18d7184 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java <nl> @ @ - 210 , 11 + 210 , 8 @ @ public class XMLLoggerTest { <nl> logger . addException ( ev , new TestException ( " msg " , new RuntimeException ( " msg " ) ) ) ; <nl> logger . auditFinished ( null ) ; <nl> final String [ ] expectedLines = { <nl> - " & lt ; exception & gt ; " , <nl> - " & lt ; ! [ CDATA [ " , <nl> - " stackTrace ] ] & gt ; " , <nl> - " & lt ; / exception & gt ; " , <nl> - " " , <nl> + " & lt ; exception & gt ; & # 10 ; & lt ; ! [ CDATA [ & # 10 ; stackTrace & # 10 ; example ] ] & gt ; " <nl> + + " & # 10 ; & lt ; / exception & gt ; & # 10 ; " , <nl> } ; <nl> verifyLines ( expectedLines ) ; <nl> } <nl> @ @ - 268 , 7 + 265 , 7 @ @ public class XMLLoggerTest { <nl> <nl> @ Override <nl> public void printStackTrace ( PrintWriter printWriter ) { <nl> - printWriter . print ( " stackTrace " ) ; <nl> + printWriter . print ( " stackTrace \ r \ nexample " ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 319f8c8 . . b27976e 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 593 , 7 + 593 , 7 @ @ <nl> < regex > < pattern > . * . api . AbstractViolationReporter < / pattern > < branchRate > 100 < / branchRate > < lineRate > 90 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . AnnotationUtility < / pattern > < branchRate > 60 < / branchRate > < lineRate > 60 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . AuditEvent < / pattern > < branchRate > 100 < / branchRate > < lineRate > 93 < / lineRate > < / regex > <nl> - < regex > < pattern > . * . api . AutomaticBean < / pattern > < branchRate > 90 < / branchRate > < lineRate > 74 < / lineRate > < / regex > <nl> + < regex > < pattern > . * . api . AutomaticBean < / pattern > < branchRate > 90 < / branchRate > < lineRate > 82 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . AutomaticBean \ $ . * < / pattern > < branchRate > 75 < / branchRate > < lineRate > 90 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . Check < / pattern > < branchRate > 100 < / branchRate > < lineRate > 86 < / lineRate > < / regex > <nl> < regex > < pattern > . * . api . Comment < / pattern > < branchRate > 100 < / branchRate > < lineRate > 95 < / lineRate > < / regex > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java <nl> index 57ba6b2 . . 5bf6265 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java <nl> @ @ - 155 , 27 + 155 , 16 @ @ public class AutomaticBean <nl> + configuration . getName ( ) + " to ' " + value <nl> + " ' : " + e . getTargetException ( ) . getMessage ( ) , e ) ; <nl> } <nl> - catch ( final IllegalAccessException e ) { <nl> + catch ( final IllegalAccessException | NoSuchMethodException e ) { <nl> throw new CheckstyleException ( <nl> " cannot access " + key + " in " <nl> + this . getClass ( ) . getName ( ) , e ) ; <nl> } <nl> - catch ( final NoSuchMethodException e ) { <nl> - throw new CheckstyleException ( <nl> - " cannot access " + key + " in " <nl> - + this . getClass ( ) . getName ( ) , e ) ; <nl> - } <nl> - catch ( final IllegalArgumentException e ) { <nl> - throw new CheckstyleException ( <nl> - " illegal value ' " + value + " ' for property ' " + key <nl> - + " ' of module " + configuration . getName ( ) , e ) ; <nl> - } <nl> - catch ( final ConversionException e ) { <nl> + catch ( final IllegalArgumentException | ConversionException e ) { <nl> throw new CheckstyleException ( <nl> " illegal value ' " + value + " ' for property ' " + key <nl> + " ' of module " + configuration . getName ( ) , e ) ; <nl> } <nl> - <nl> } <nl> <nl> finishLocalSetup ( ) ; <nl> @ @ - 219 , 12 + 208 , 7 @ @ public class AutomaticBean <nl> " cannot access " + key + " in " <nl> + this . getClass ( ) . getName ( ) , e ) ; <nl> } <nl> - catch ( final IllegalArgumentException e ) { <nl> - throw new CheckstyleException ( <nl> - " illegal value ' " + value + " ' for property ' " + key <nl> - + " ' of bean " + this . getClass ( ) . getName ( ) , e ) ; <nl> - } <nl> - catch ( final ConversionException e ) { <nl> + catch ( final IllegalArgumentException | ConversionException e ) { <nl> throw new CheckstyleException ( <nl> " illegal value ' " + value + " ' for property ' " + key <nl> + " ' of bean " + this . getClass ( ) . getName ( ) , e ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> index 64e4b75 . . ec5d1c5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java <nl> @ @ - 35 , 9 + 35 , 8 @ @ import org . apache . commons . logging . LogFactory ; <nl> * / <nl> public class HandlerFactory <nl> { <nl> - / * * Logger for indentation check * / <nl> - private static final Log LOG = <nl> - LogFactory . getLog ( " com . puppycrawl . tools . checkstyle . checks . indentation " ) ; <nl> + / * * Logger for indentation check . * / <nl> + private static final Log LOG = LogFactory . getLog ( HandlerFactory . class ) ; <nl> <nl> / * * <nl> * Registered handlers .

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 index ea8591c . . 2cdf5f6 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / Checker . java 
 @ @ - 21 , 6 + 21 , 8 @ @ package com . puppycrawl . tools . checkstyle ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 + import java . io . PrintWriter ; 
 + import java . io . StringWriter ; 
 import java . io . UnsupportedEncodingException ; 
 import java . nio . charset . Charset ; 
 import java . util . ArrayList ; 
 @ @ - 327 , 9 + 329 , 15 @ @ public class Checker extends AutomaticBean implements MessageDispatcher , RootMod 
 } 
 
 LOG . debug ( " Exception occurred . " , ex ) ; 
 + 
 + final StringWriter sw = new StringWriter ( ) ; 
 + final PrintWriter pw = new PrintWriter ( sw , true ) ; 
 + 
 + ex . printStackTrace ( pw ) ; 
 + 
 fileMessages . add ( new LocalizedMessage ( 0 , 
 Definitions . CHECKSTYLE _ BUNDLE , EXCEPTION _ MSG , 
 - new String [ ] { ex . getClass ( ) . getName ( ) + " : " + ex . getMessage ( ) } , 
 + new String [ ] { sw . getBuffer ( ) . toString ( ) } , 
 null , getClass ( ) , null ) ) ; 
 } 
 return fileMessages ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 index 2709f61 . . a3b83b9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / XMLLogger . java 
 @ @ - 172 , 6 + 172 , 11 @ @ public class XMLLogger 
 case ' & ' : 
 sb . append ( encodeAmpersand ( value , i ) ) ; 
 break ; 
 + case ' \ r ' : 
 + break ; 
 + case ' \ n ' : 
 + sb . append ( " & # 10 ; " ) ; 
 + break ; 
 default : 
 sb . append ( chr ) ; 
 break ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 index 22545b3 . . 18d7184 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XMLLoggerTest . java 
 @ @ - 210 , 11 + 210 , 8 @ @ public class XMLLoggerTest { 
 logger . addException ( ev , new TestException ( " msg " , new RuntimeException ( " msg " ) ) ) ; 
 logger . auditFinished ( null ) ; 
 final String [ ] expectedLines = { 
 - " & lt ; exception & gt ; " , 
 - " & lt ; ! [ CDATA [ " , 
 - " stackTrace ] ] & gt ; " , 
 - " & lt ; / exception & gt ; " , 
 - " " , 
 + " & lt ; exception & gt ; & # 10 ; & lt ; ! [ CDATA [ & # 10 ; stackTrace & # 10 ; example ] ] & gt ; " 
 + + " & # 10 ; & lt ; / exception & gt ; & # 10 ; " , 
 } ; 
 verifyLines ( expectedLines ) ; 
 } 
 @ @ - 268 , 7 + 265 , 7 @ @ public class XMLLoggerTest { 
 
 @ Override 
 public void printStackTrace ( PrintWriter printWriter ) { 
 - printWriter . print ( " stackTrace " ) ; 
 + printWriter . print ( " stackTrace \ r \ nexample " ) ; 
 } 
 } 


NEAREST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 319f8c8 . . b27976e 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 593 , 7 + 593 , 7 @ @ 
 < regex > < pattern > . * . api . AbstractViolationReporter < / pattern > < branchRate > 100 < / branchRate > < lineRate > 90 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . AnnotationUtility < / pattern > < branchRate > 60 < / branchRate > < lineRate > 60 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . AuditEvent < / pattern > < branchRate > 100 < / branchRate > < lineRate > 93 < / lineRate > < / regex > 
 - < regex > < pattern > . * . api . AutomaticBean < / pattern > < branchRate > 90 < / branchRate > < lineRate > 74 < / lineRate > < / regex > 
 + < regex > < pattern > . * . api . AutomaticBean < / pattern > < branchRate > 90 < / branchRate > < lineRate > 82 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . AutomaticBean \ $ . * < / pattern > < branchRate > 75 < / branchRate > < lineRate > 90 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . Check < / pattern > < branchRate > 100 < / branchRate > < lineRate > 86 < / lineRate > < / regex > 
 < regex > < pattern > . * . api . Comment < / pattern > < branchRate > 100 < / branchRate > < lineRate > 95 < / lineRate > < / regex > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java 
 index 57ba6b2 . . 5bf6265 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / AutomaticBean . java 
 @ @ - 155 , 27 + 155 , 16 @ @ public class AutomaticBean 
 + configuration . getName ( ) + " to ' " + value 
 + " ' : " + e . getTargetException ( ) . getMessage ( ) , e ) ; 
 } 
 - catch ( final IllegalAccessException e ) { 
 + catch ( final IllegalAccessException | NoSuchMethodException e ) { 
 throw new CheckstyleException ( 
 " cannot access " + key + " in " 
 + this . getClass ( ) . getName ( ) , e ) ; 
 } 
 - catch ( final NoSuchMethodException e ) { 
 - throw new CheckstyleException ( 
 - " cannot access " + key + " in " 
 - + this . getClass ( ) . getName ( ) , e ) ; 
 - } 
 - catch ( final IllegalArgumentException e ) { 
 - throw new CheckstyleException ( 
 - " illegal value ' " + value + " ' for property ' " + key 
 - + " ' of module " + configuration . getName ( ) , e ) ; 
 - } 
 - catch ( final ConversionException e ) { 
 + catch ( final IllegalArgumentException | ConversionException e ) { 
 throw new CheckstyleException ( 
 " illegal value ' " + value + " ' for property ' " + key 
 + " ' of module " + configuration . getName ( ) , e ) ; 
 } 
 - 
 } 
 
 finishLocalSetup ( ) ; 
 @ @ - 219 , 12 + 208 , 7 @ @ public class AutomaticBean 
 " cannot access " + key + " in " 
 + this . getClass ( ) . getName ( ) , e ) ; 
 } 
 - catch ( final IllegalArgumentException e ) { 
 - throw new CheckstyleException ( 
 - " illegal value ' " + value + " ' for property ' " + key 
 - + " ' of bean " + this . getClass ( ) . getName ( ) , e ) ; 
 - } 
 - catch ( final ConversionException e ) { 
 + catch ( final IllegalArgumentException | ConversionException e ) { 
 throw new CheckstyleException ( 
 " illegal value ' " + value + " ' for property ' " + key 
 + " ' of bean " + this . getClass ( ) . getName ( ) , e ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 index 64e4b75 . . ec5d1c5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / HandlerFactory . java 
 @ @ - 35 , 9 + 35 , 8 @ @ import org . apache . commons . logging . LogFactory ; 
 * / 
 public class HandlerFactory 
 { 
 - / * * Logger for indentation check * / 
 - private static final Log LOG = 
 - LogFactory . getLog ( " com . puppycrawl . tools . checkstyle . checks . indentation " ) ; 
 + / * * Logger for indentation check . * / 
 + private static final Log LOG = LogFactory . getLog ( HandlerFactory . class ) ; 
 
 / * * 
 * Registered handlers .
