BLEU SCORE: 0.31239399369202553

TEST MSG: config : bump equalsverifier to 3 . 0 . 2
GENERATED MSG: config : bump equalsverifier version to 2 . 3

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index f1f8567 . . cba0a8c 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 279 , 7 + 279 , 7 @ @ <nl> < dependency > <nl> < groupId > nl . jqno . equalsverifier < / groupId > <nl> < artifactId > equalsverifier < / artifactId > <nl> - < version > 3 . 0 < / version > <nl> + < version > 3 . 0 . 2 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency >
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java <nl> index f0580b1 . . 1049a19 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java <nl> @ @ - 36 , 7 + 36 , 9 @ @ public class InterfaceIsTypeCheckTest <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " design " + File . separator + filename ) ; <nl> + + " design " + File . separator <nl> + + " interfaceistype " + File . separator <nl> + + filename ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java <nl> deleted file mode 100644 <nl> index e33faca . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java <nl> + + + / dev / null <nl> @ @ - 1 , 30 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2001 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks . design ; <nl> - <nl> - / * * <nl> - * Test input for InterfaceIsTypeCheck <nl> - * @ author lkuehne <nl> - * * / <nl> - class InputInterfaceIsType <nl> - { <nl> - / / OK , has method , so is a type <nl> - interface OK <nl> - { <nl> - void method ( ) ; <nl> - } <nl> - <nl> - / / Marker interface , OK for some configurations <nl> - interface Marker <nl> - { <nl> - } <nl> - <nl> - / / Always flagged <nl> - interface ConstantPool <nl> - { <nl> - boolean BAD = true ; <nl> - } <nl> - <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / interfaceistype / InputInterfaceIsType . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / interfaceistype / InputInterfaceIsType . java <nl> new file mode 100644 <nl> index 0000000 . . 520c00d <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / interfaceistype / InputInterfaceIsType . java <nl> @ @ - 0 , 0 + 1 , 30 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . design . interfaceistype ; <nl> + <nl> + / * * <nl> + * Test input for InterfaceIsTypeCheck <nl> + * @ author lkuehne <nl> + * * / <nl> + class InputInterfaceIsType <nl> + { <nl> + / / OK , has method , so is a type <nl> + interface OK <nl> + { <nl> + void method ( ) ; <nl> + } <nl> + <nl> + / / Marker interface , OK for some configurations <nl> + interface Marker <nl> + { <nl> + } <nl> + <nl> + / / Always flagged <nl> + interface ConstantPool <nl> + { <nl> + boolean BAD = true ; <nl> + } <nl> + <nl> + }

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index f1f8567 . . cba0a8c 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 279 , 7 + 279 , 7 @ @ 
 < dependency > 
 < groupId > nl . jqno . equalsverifier < / groupId > 
 < artifactId > equalsverifier < / artifactId > 
 - < version > 3 . 0 < / version > 
 + < version > 3 . 0 . 2 < / version > 
 < scope > test < / scope > 
 < / dependency > 
 < dependency >

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java 
 index f0580b1 . . 1049a19 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / design / InterfaceIsTypeCheckTest . java 
 @ @ - 36 , 7 + 36 , 9 @ @ public class InterfaceIsTypeCheckTest 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " design " + File . separator + filename ) ; 
 + + " design " + File . separator 
 + + " interfaceistype " + File . separator 
 + + filename ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java 
 deleted file mode 100644 
 index e33faca . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / InputInterfaceIsType . java 
 + + + / dev / null 
 @ @ - 1 , 30 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2001 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks . design ; 
 - 
 - / * * 
 - * Test input for InterfaceIsTypeCheck 
 - * @ author lkuehne 
 - * * / 
 - class InputInterfaceIsType 
 - { 
 - / / OK , has method , so is a type 
 - interface OK 
 - { 
 - void method ( ) ; 
 - } 
 - 
 - / / Marker interface , OK for some configurations 
 - interface Marker 
 - { 
 - } 
 - 
 - / / Always flagged 
 - interface ConstantPool 
 - { 
 - boolean BAD = true ; 
 - } 
 - 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / interfaceistype / InputInterfaceIsType . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / interfaceistype / InputInterfaceIsType . java 
 new file mode 100644 
 index 0000000 . . 520c00d 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / design / interfaceistype / InputInterfaceIsType . java 
 @ @ - 0 , 0 + 1 , 30 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . design . interfaceistype ; 
 + 
 + / * * 
 + * Test input for InterfaceIsTypeCheck 
 + * @ author lkuehne 
 + * * / 
 + class InputInterfaceIsType 
 + { 
 + / / OK , has method , so is a type 
 + interface OK 
 + { 
 + void method ( ) ; 
 + } 
 + 
 + / / Marker interface , OK for some configurations 
 + interface Marker 
 + { 
 + } 
 + 
 + / / Always flagged 
 + interface ConstantPool 
 + { 
 + boolean BAD = true ; 
 + } 
 + 
 + }
