BLEU SCORE: 0.101471040084519

TEST MSG: Issue # 2874 : Fix suppression line for CyclomaticComplexityCheck
GENERATED MSG: Issue # 3175 : comments was added to explain suppression

TEST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index 8d0a79e . . 8b83e37 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 144 , 7 + 144 , 7 @ @ <nl> < suppress checks = " CyclomaticComplexity " files = " RequireThisCheck \ . java " lines = " 416 " / > <nl> < ! - - The only optimization which can be there is to move CASE - block expressions to separate method , <nl> but that will not increase readability . - - > <nl> - < suppress checks = " CyclomaticComplexity " files = " FinalLocalVariableCheck \ . java " lines = " 176 , 328 " / > <nl> + < suppress checks = " CyclomaticComplexity " files = " FinalLocalVariableCheck \ . java " lines = " 176 , 326 " / > <nl> <nl> < ! - - Suppressions from PMD configuration - - > <nl> < ! - - validateCli is not reasonable to split as encapsulation of logic will be damaged - - >
NEAREST DIFF (one line): diff - - git a / config / import - control . xml b / config / import - control . xml <nl> index df7ae9e . . ea2b6cb 100644 <nl> - - - a / config / import - control . xml <nl> + + + b / config / import - control . xml <nl> @ @ - 24 , 6 + 24 , 7 @ @ <nl> < ! - - The local ones - - > <nl> < allow class = " java . security . MessageDigest " local - only = " true " / > <nl> < allow class = " java . security . NoSuchAlgorithmException " local - only = " true " / > <nl> + < allow class = " javax . xml . bind . DatatypeConverter " local - only = " true " / > <nl> < allow pkg = " com . puppycrawl . tools . checkstyle . grammars " local - only = " true " / > <nl> < allow pkg = " org . apache . commons . cli " local - only = " true " / > <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java <nl> index 1308d5e . . 0686548 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java <nl> @ @ - 36 , 6 + 36 , 8 @ @ import java . security . MessageDigest ; <nl> import java . security . NoSuchAlgorithmException ; <nl> import java . util . Properties ; <nl> <nl> + import javax . xml . bind . DatatypeConverter ; <nl> + <nl> import com . google . common . io . Closeables ; <nl> import com . google . common . io . Flushables ; <nl> import com . puppycrawl . tools . checkstyle . api . Configuration ; <nl> @ @ - 62 , 18 + 64 , 6 @ @ final class PropertyCacheFile { <nl> * / <nl> private static final String CONFIG _ HASH _ KEY = " configuration * ? " ; <nl> <nl> - / * * Hex digits . * / <nl> - private static final char [ ] HEX _ CHARS = { <nl> - ' 0 ' , ' 1 ' , ' 2 ' , ' 3 ' , ' 4 ' , ' 5 ' , ' 6 ' , ' 7 ' , <nl> - ' 8 ' , ' 9 ' , ' A ' , ' B ' , ' C ' , ' D ' , ' E ' , ' F ' , <nl> - } ; <nl> - <nl> - / * * Mask for last byte . * / <nl> - private static final int MASK _ 0X0F = 0x0F ; <nl> - <nl> - / * * Bit shift . * / <nl> - private static final int SHIFT _ 4 = 4 ; <nl> - <nl> / * * The details on files . * * / <nl> private final Properties details = new Properties ( ) ; <nl> <nl> @ @ - 221 , 27 + 211 , 11 @ @ final class PropertyCacheFile { <nl> final MessageDigest digest = MessageDigest . getInstance ( " SHA - 1 " ) ; <nl> digest . update ( outputStream . toByteArray ( ) ) ; <nl> <nl> - return hexEncode ( digest . digest ( ) ) ; <nl> + return DatatypeConverter . printHexBinary ( digest . digest ( ) ) ; <nl> } <nl> catch ( final IOException | NoSuchAlgorithmException ex ) { <nl> / / rethrow as unchecked exception <nl> throw new IllegalStateException ( " Unable to calculate hashcode . " , ex ) ; <nl> } <nl> } <nl> - <nl> - / * * <nl> - * Hex - encodes a byte array . <nl> - * @ param byteArray the byte array <nl> - * @ return hex encoding of { @ code byteArray } <nl> - * / <nl> - private static String hexEncode ( byte . . . byteArray ) { <nl> - final StringBuilder buf = new StringBuilder ( 2 * byteArray . length ) ; <nl> - for ( final byte b : byteArray ) { <nl> - final int low = b & MASK _ 0X0F ; <nl> - final int high = b > > SHIFT _ 4 & MASK _ 0X0F ; <nl> - buf . append ( HEX _ CHARS [ high ] ) ; <nl> - buf . append ( HEX _ CHARS [ low ] ) ; <nl> - } <nl> - return buf . toString ( ) ; <nl> - } <nl> }

TEST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index 8d0a79e . . 8b83e37 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 144 , 7 + 144 , 7 @ @ 
 < suppress checks = " CyclomaticComplexity " files = " RequireThisCheck \ . java " lines = " 416 " / > 
 < ! - - The only optimization which can be there is to move CASE - block expressions to separate method , 
 but that will not increase readability . - - > 
 - < suppress checks = " CyclomaticComplexity " files = " FinalLocalVariableCheck \ . java " lines = " 176 , 328 " / > 
 + < suppress checks = " CyclomaticComplexity " files = " FinalLocalVariableCheck \ . java " lines = " 176 , 326 " / > 
 
 < ! - - Suppressions from PMD configuration - - > 
 < ! - - validateCli is not reasonable to split as encapsulation of logic will be damaged - - >

NEAREST DIFF:
diff - - git a / config / import - control . xml b / config / import - control . xml 
 index df7ae9e . . ea2b6cb 100644 
 - - - a / config / import - control . xml 
 + + + b / config / import - control . xml 
 @ @ - 24 , 6 + 24 , 7 @ @ 
 < ! - - The local ones - - > 
 < allow class = " java . security . MessageDigest " local - only = " true " / > 
 < allow class = " java . security . NoSuchAlgorithmException " local - only = " true " / > 
 + < allow class = " javax . xml . bind . DatatypeConverter " local - only = " true " / > 
 < allow pkg = " com . puppycrawl . tools . checkstyle . grammars " local - only = " true " / > 
 < allow pkg = " org . apache . commons . cli " local - only = " true " / > 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java 
 index 1308d5e . . 0686548 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / PropertyCacheFile . java 
 @ @ - 36 , 6 + 36 , 8 @ @ import java . security . MessageDigest ; 
 import java . security . NoSuchAlgorithmException ; 
 import java . util . Properties ; 
 
 + import javax . xml . bind . DatatypeConverter ; 
 + 
 import com . google . common . io . Closeables ; 
 import com . google . common . io . Flushables ; 
 import com . puppycrawl . tools . checkstyle . api . Configuration ; 
 @ @ - 62 , 18 + 64 , 6 @ @ final class PropertyCacheFile { 
 * / 
 private static final String CONFIG _ HASH _ KEY = " configuration * ? " ; 
 
 - / * * Hex digits . * / 
 - private static final char [ ] HEX _ CHARS = { 
 - ' 0 ' , ' 1 ' , ' 2 ' , ' 3 ' , ' 4 ' , ' 5 ' , ' 6 ' , ' 7 ' , 
 - ' 8 ' , ' 9 ' , ' A ' , ' B ' , ' C ' , ' D ' , ' E ' , ' F ' , 
 - } ; 
 - 
 - / * * Mask for last byte . * / 
 - private static final int MASK _ 0X0F = 0x0F ; 
 - 
 - / * * Bit shift . * / 
 - private static final int SHIFT _ 4 = 4 ; 
 - 
 / * * The details on files . * * / 
 private final Properties details = new Properties ( ) ; 
 
 @ @ - 221 , 27 + 211 , 11 @ @ final class PropertyCacheFile { 
 final MessageDigest digest = MessageDigest . getInstance ( " SHA - 1 " ) ; 
 digest . update ( outputStream . toByteArray ( ) ) ; 
 
 - return hexEncode ( digest . digest ( ) ) ; 
 + return DatatypeConverter . printHexBinary ( digest . digest ( ) ) ; 
 } 
 catch ( final IOException | NoSuchAlgorithmException ex ) { 
 / / rethrow as unchecked exception 
 throw new IllegalStateException ( " Unable to calculate hashcode . " , ex ) ; 
 } 
 } 
 - 
 - / * * 
 - * Hex - encodes a byte array . 
 - * @ param byteArray the byte array 
 - * @ return hex encoding of { @ code byteArray } 
 - * / 
 - private static String hexEncode ( byte . . . byteArray ) { 
 - final StringBuilder buf = new StringBuilder ( 2 * byteArray . length ) ; 
 - for ( final byte b : byteArray ) { 
 - final int low = b & MASK _ 0X0F ; 
 - final int high = b > > SHIFT _ 4 & MASK _ 0X0F ; 
 - buf . append ( HEX _ CHARS [ high ] ) ; 
 - buf . append ( HEX _ CHARS [ low ] ) ; 
 - } 
 - return buf . toString ( ) ; 
 - } 
 }
