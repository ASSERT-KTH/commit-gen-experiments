BLEU SCORE: 0.708587641194393

TEST MSG: Issue # 4437 : Modified IllegalImportCheckTest . java and moved its input files to the illegalimport subdirectory
GENERATED MSG: Issue # 4437 : Modified AvoidStarImportCheckTest . java and moved its input files to the avoidstarimport subdirectory

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java <nl> index e0208c4 . . fd99c90 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " imports " + File . separator + filename ) ; <nl> + + " imports " + File . separator + " illegalimport " + File . separator + filename ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 56 , 7 + 56 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { <nl> " 23 : 1 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , <nl> " 27 : 1 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 68 , 7 + 68 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { <nl> " 15 : 1 : " + getCheckMessage ( MSG _ KEY , " sun . applet . * " ) , <nl> " 28 : 1 : " + getCheckMessage ( MSG _ KEY , " sun . * " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 92 , 7 + 92 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { <nl> " 15 : 1 : " + getCheckMessage ( MSG _ KEY , " sun . applet . * " ) , <nl> " 28 : 1 : " + getCheckMessage ( MSG _ KEY , " sun . * " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 111 , 7 + 111 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { <nl> " 35 : 1 : " + getCheckMessage ( MSG _ KEY , " java . util . Calendar " ) , <nl> " 36 : 1 : " + getCheckMessage ( MSG _ KEY , " java . util . BitSet " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 127 , 7 + 127 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { <nl> " 13 : 1 : " + getCheckMessage ( MSG _ KEY , " java . util . List " ) , <nl> " 17 : 1 : " + getCheckMessage ( MSG _ KEY , " java . util . Arrays " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 150 , 6 + 150 , 6 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { <nl> " 38 : 1 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . Checker " ) , <nl> " 39 : 1 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . CheckerTest " ) , <nl> } ; <nl> - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; <nl> } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / InputIllegalImport . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / InputIllegalImport . java <nl> deleted file mode 100644 <nl> index 41970d9 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / InputIllegalImport . java <nl> + + + / dev / null <nl> @ @ - 1 , 111 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2001 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks . imports ; <nl> - <nl> - import com . puppycrawl . tools . checkstyle . checks . imports . * ; <nl> - <nl> - import java . io . * ; <nl> - import java . lang . * ; <nl> - import java . sql . Connection ; <nl> - import java . util . List ; <nl> - import java . util . List ; <nl> - import java . lang . ArithmeticException ; <nl> - import sun . applet . * ; <nl> - import java . util . Enumeration ; <nl> - import java . util . Arrays ; <nl> - <nl> - import javax . swing . JToolBar ; <nl> - import javax . swing . JToggleButton ; <nl> - import javax . swing . ScrollPaneLayout ; <nl> - import javax . swing . BorderFactory ; <nl> - import static java . io . File . listRoots ; <nl> - <nl> - import static javax . swing . WindowConstants . * ; <nl> - import static javax . swing . WindowConstants . * ; <nl> - import static java . io . File . createTempFile ; <nl> - import sun . * ; <nl> - <nl> - import java . awt . Component ; <nl> - import java . awt . Graphics2D ; <nl> - import java . awt . HeadlessException ; <nl> - import java . awt . Label ; <nl> - import java . util . Date ; <nl> - import java . util . Calendar ; <nl> - import java . util . BitSet ; <nl> - <nl> - import com . puppycrawl . tools . checkstyle . Checker ; <nl> - import com . puppycrawl . tools . checkstyle . CheckerTest ; <nl> - import com . puppycrawl . tools . checkstyle . BaseFileSetCheckTestSupport ; <nl> - import com . puppycrawl . tools . checkstyle . Definitions ; <nl> - import com . puppycrawl . tools . checkstyle . checks . Input15Extensions ; <nl> - import com . puppycrawl . tools . checkstyle . ConfigurationLoaderTest ; <nl> - import com . puppycrawl . tools . checkstyle . PackageNamesLoader ; <nl> - import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> - import com . puppycrawl . tools . checkstyle . DefaultLogger ; <nl> - <nl> - / * * <nl> - * Test case for imports <nl> - * Here ' s an import used only by javadoc : { @ link Date } . <nl> - * @ author Oliver Burn <nl> - * @ author lkuehne <nl> - * @ author Michael Studman <nl> - * @ see Calendar Should avoid unused import for Calendar <nl> - * * / <nl> - class InputIllegalImport <nl> - { <nl> - / * * ignore * * / <nl> - private Class mUse1 = Connection . class ; <nl> - / * * ignore * * / <nl> - private Class mUse2 = java . io . File . class ; <nl> - / * * ignore * * / <nl> - private Class mUse3 = null ; <nl> - / * * ignore * * / <nl> - private Class mUse4 = java . util . Enumeration [ ] . class ; <nl> - / * * usage of illegal import * * / <nl> - private String ftpClient = null ; <nl> - <nl> - / * * usage via static method , both normal and fully qualified * / <nl> - { <nl> - int [ ] x = { } ; <nl> - Arrays . sort ( x ) ; <nl> - Object obj = javax . swing . BorderFactory . createEmptyBorder ( ) ; <nl> - File [ ] files = listRoots ( ) ; <nl> - } <nl> - <nl> - / * * usage of inner class as type * / <nl> - private JToolBar . Separator mSep = null ; <nl> - <nl> - / * * usage of inner class in Constructor * / <nl> - private Object mUse5 = new Object ( ) ; <nl> - <nl> - / * * usage of inner class in constructor , fully qualified * / <nl> - private Object mUse6 = new javax . swing . JToggleButton . ToggleButtonModel ( ) ; <nl> - <nl> - / * * we use class name as member ' s name . <nl> - * also an inline JavaDoc - only import { @ link Vector linkText } * / <nl> - private int Component ; <nl> - <nl> - / * * <nl> - * method comment with JavaDoc - only import { @ link BitSet # aMethod ( ) } <nl> - * / <nl> - public void Label ( ) { } <nl> - <nl> - / * * <nl> - * Renders to a { @ linkplain Graphics2D graphics context } . <nl> - * @ throws HeadlessException if no graphis environment can be found . <nl> - * @ exception HeadlessException if no graphis environment can be found . <nl> - * / <nl> - public void render ( ) { } <nl> - <nl> - / * * <nl> - * First is a class with a method with arguments { @ link TestClass1 # method1 ( TestClass2 ) } . <nl> - * Next is a class with typed method { @ link TestClass3 # method2 ( TestClass4 , TestClass5 ) } . <nl> - * <nl> - * @ param param1 with a link { @ link TestClass6 } <nl> - * @ throws TestClass7 when broken <nl> - * @ deprecated in 1 for removal in 2 . Use { @ link TestClass8 } <nl> - * / <nl> - public void aMethodWithManyLinks ( ) { } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / illegalimport / InputIllegalImportDefault . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / illegalimport / InputIllegalImportDefault . java <nl> new file mode 100644 <nl> index 0000000 . . cc05bad <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / illegalimport / InputIllegalImportDefault . java <nl> @ @ - 0 , 0 + 1 , 111 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2001 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . imports . illegalimport ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . checks . imports . * ; <nl> + <nl> + import java . io . * ; <nl> + import java . lang . * ; <nl> + import java . sql . Connection ; <nl> + import java . util . List ; <nl> + import java . util . List ; <nl> + import java . lang . ArithmeticException ; <nl> + import sun . applet . * ; <nl> + import java . util . Enumeration ; <nl> + import java . util . Arrays ; <nl> + <nl> + import javax . swing . JToolBar ; <nl> + import javax . swing . JToggleButton ; <nl> + import javax . swing . ScrollPaneLayout ; <nl> + import javax . swing . BorderFactory ; <nl> + import static java . io . File . listRoots ; <nl> + <nl> + import static javax . swing . WindowConstants . * ; <nl> + import static javax . swing . WindowConstants . * ; <nl> + import static java . io . File . createTempFile ; <nl> + import sun . * ; <nl> + <nl> + import java . awt . Component ; <nl> + import java . awt . Graphics2D ; <nl> + import java . awt . HeadlessException ; <nl> + import java . awt . Label ; <nl> + import java . util . Date ; <nl> + import java . util . Calendar ; <nl> + import java . util . BitSet ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . Checker ; <nl> + import com . puppycrawl . tools . checkstyle . CheckerTest ; <nl> + import com . puppycrawl . tools . checkstyle . BaseFileSetCheckTestSupport ; <nl> + import com . puppycrawl . tools . checkstyle . Definitions ; <nl> + import com . puppycrawl . tools . checkstyle . checks . Input15Extensions ; <nl> + import com . puppycrawl . tools . checkstyle . ConfigurationLoaderTest ; <nl> + import com . puppycrawl . tools . checkstyle . PackageNamesLoader ; <nl> + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> + import com . puppycrawl . tools . checkstyle . DefaultLogger ; <nl> + <nl> + / * * <nl> + * Test case for imports <nl> + * Here ' s an import used only by javadoc : { @ link Date } . <nl> + * @ author Oliver Burn <nl> + * @ author lkuehne <nl> + * @ author Michael Studman <nl> + * @ see Calendar Should avoid unused import for Calendar <nl> + * * / <nl> + class InputIllegalImportDefault <nl> + { <nl> + / * * ignore * * / <nl> + private Class mUse1 = Connection . class ; <nl> + / * * ignore * * / <nl> + private Class mUse2 = java . io . File . class ; <nl> + / * * ignore * * / <nl> + private Class mUse3 = null ; <nl> + / * * ignore * * / <nl> + private Class mUse4 = java . util . Enumeration [ ] . class ; <nl> + / * * usage of illegal import * * / <nl> + private String ftpClient = null ; <nl> + <nl> + / * * usage via static method , both normal and fully qualified * / <nl> + { <nl> + int [ ] x = { } ; <nl> + Arrays . sort ( x ) ; <nl> + Object obj = javax . swing . BorderFactory . createEmptyBorder ( ) ; <nl> + File [ ] files = listRoots ( ) ; <nl> + } <nl> + <nl> + / * * usage of inner class as type * / <nl> + private JToolBar . Separator mSep = null ; <nl> + <nl> + / * * usage of inner class in Constructor * / <nl> + private Object mUse5 = new Object ( ) ; <nl> + <nl> + / * * usage of inner class in constructor , fully qualified * / <nl> + private Object mUse6 = new javax . swing . JToggleButton . ToggleButtonModel ( ) ; <nl> + <nl> + / * * we use class name as member ' s name . <nl> + * also an inline JavaDoc - only import { @ link Vector linkText } * / <nl> + private int Component ; <nl> + <nl> + / * * <nl> + * method comment with JavaDoc - only import { @ link BitSet # aMethod ( ) } <nl> + * / <nl> + public void Label ( ) { } <nl> + <nl> + / * * <nl> + * Renders to a { @ linkplain Graphics2D graphics context } . <nl> + * @ throws HeadlessException if no graphis environment can be found . <nl> + * @ exception HeadlessException if no graphis environment can be found . <nl> + * / <nl> + public void render ( ) { } <nl> + <nl> + / * * <nl> + * First is a class with a method with arguments { @ link TestClass1 # method1 ( TestClass2 ) } . <nl> + * Next is a class with typed method { @ link TestClass3 # method2 ( TestClass4 , TestClass5 ) } . <nl> + * <nl> + * @ param param1 with a link { @ link TestClass6 } <nl> + * @ throws TestClass7 when broken <nl> + * @ deprecated in 1 for removal in 2 . Use { @ link TestClass8 } <nl> + * / <nl> + public void aMethodWithManyLinks ( ) { } <nl> + }
NEAREST DIFF (one line): diff - - git a / . github / CONTRIBUTING . md b / . github / CONTRIBUTING . md <nl> index 31add09 . . b03df61 100644 <nl> - - - a / . github / CONTRIBUTING . md <nl> + + + b / . github / CONTRIBUTING . md <nl> @ @ - 1 , 3 + 1 , 10 @ @ <nl> + # Contributing <nl> + <nl> + Please see instructions for contributing here : <nl> + http : / / checkstyle . sourceforge . net / contributing . html <nl> + <nl> + # Reporting issues <nl> + <nl> Please read http : / / checkstyle . sourceforge . net / report _ issue . html <nl> <nl> Please provide issue report in format that we request , EACH DETAIL MAKE A HUGE HELP .

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java 
 index e0208c4 . . fd99c90 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheckTest . java 
 @ @ - 35 , 7 + 35 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " imports " + File . separator + filename ) ; 
 + + " imports " + File . separator + " illegalimport " + File . separator + filename ) ; 
 } 
 
 @ Test 
 @ @ - 56 , 7 + 56 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { 
 " 23 : 1 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , 
 " 27 : 1 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 68 , 7 + 68 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { 
 " 15 : 1 : " + getCheckMessage ( MSG _ KEY , " sun . applet . * " ) , 
 " 28 : 1 : " + getCheckMessage ( MSG _ KEY , " sun . * " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 92 , 7 + 92 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { 
 " 15 : 1 : " + getCheckMessage ( MSG _ KEY , " sun . applet . * " ) , 
 " 28 : 1 : " + getCheckMessage ( MSG _ KEY , " sun . * " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 111 , 7 + 111 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { 
 " 35 : 1 : " + getCheckMessage ( MSG _ KEY , " java . util . Calendar " ) , 
 " 36 : 1 : " + getCheckMessage ( MSG _ KEY , " java . util . BitSet " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 127 , 7 + 127 , 7 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { 
 " 13 : 1 : " + getCheckMessage ( MSG _ KEY , " java . util . List " ) , 
 " 17 : 1 : " + getCheckMessage ( MSG _ KEY , " java . util . Arrays " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 150 , 6 + 150 , 6 @ @ public class IllegalImportCheckTest extends BaseCheckTestSupport { 
 " 38 : 1 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . Checker " ) , 
 " 39 : 1 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . CheckerTest " ) , 
 } ; 
 - verify ( checkConfig , getPath ( " InputIllegalImport . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " InputIllegalImportDefault . java " ) , expected ) ; 
 } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / InputIllegalImport . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / InputIllegalImport . java 
 deleted file mode 100644 
 index 41970d9 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / InputIllegalImport . java 
 + + + / dev / null 
 @ @ - 1 , 111 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2001 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks . imports ; 
 - 
 - import com . puppycrawl . tools . checkstyle . checks . imports . * ; 
 - 
 - import java . io . * ; 
 - import java . lang . * ; 
 - import java . sql . Connection ; 
 - import java . util . List ; 
 - import java . util . List ; 
 - import java . lang . ArithmeticException ; 
 - import sun . applet . * ; 
 - import java . util . Enumeration ; 
 - import java . util . Arrays ; 
 - 
 - import javax . swing . JToolBar ; 
 - import javax . swing . JToggleButton ; 
 - import javax . swing . ScrollPaneLayout ; 
 - import javax . swing . BorderFactory ; 
 - import static java . io . File . listRoots ; 
 - 
 - import static javax . swing . WindowConstants . * ; 
 - import static javax . swing . WindowConstants . * ; 
 - import static java . io . File . createTempFile ; 
 - import sun . * ; 
 - 
 - import java . awt . Component ; 
 - import java . awt . Graphics2D ; 
 - import java . awt . HeadlessException ; 
 - import java . awt . Label ; 
 - import java . util . Date ; 
 - import java . util . Calendar ; 
 - import java . util . BitSet ; 
 - 
 - import com . puppycrawl . tools . checkstyle . Checker ; 
 - import com . puppycrawl . tools . checkstyle . CheckerTest ; 
 - import com . puppycrawl . tools . checkstyle . BaseFileSetCheckTestSupport ; 
 - import com . puppycrawl . tools . checkstyle . Definitions ; 
 - import com . puppycrawl . tools . checkstyle . checks . Input15Extensions ; 
 - import com . puppycrawl . tools . checkstyle . ConfigurationLoaderTest ; 
 - import com . puppycrawl . tools . checkstyle . PackageNamesLoader ; 
 - import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 - import com . puppycrawl . tools . checkstyle . DefaultLogger ; 
 - 
 - / * * 
 - * Test case for imports 
 - * Here ' s an import used only by javadoc : { @ link Date } . 
 - * @ author Oliver Burn 
 - * @ author lkuehne 
 - * @ author Michael Studman 
 - * @ see Calendar Should avoid unused import for Calendar 
 - * * / 
 - class InputIllegalImport 
 - { 
 - / * * ignore * * / 
 - private Class mUse1 = Connection . class ; 
 - / * * ignore * * / 
 - private Class mUse2 = java . io . File . class ; 
 - / * * ignore * * / 
 - private Class mUse3 = null ; 
 - / * * ignore * * / 
 - private Class mUse4 = java . util . Enumeration [ ] . class ; 
 - / * * usage of illegal import * * / 
 - private String ftpClient = null ; 
 - 
 - / * * usage via static method , both normal and fully qualified * / 
 - { 
 - int [ ] x = { } ; 
 - Arrays . sort ( x ) ; 
 - Object obj = javax . swing . BorderFactory . createEmptyBorder ( ) ; 
 - File [ ] files = listRoots ( ) ; 
 - } 
 - 
 - / * * usage of inner class as type * / 
 - private JToolBar . Separator mSep = null ; 
 - 
 - / * * usage of inner class in Constructor * / 
 - private Object mUse5 = new Object ( ) ; 
 - 
 - / * * usage of inner class in constructor , fully qualified * / 
 - private Object mUse6 = new javax . swing . JToggleButton . ToggleButtonModel ( ) ; 
 - 
 - / * * we use class name as member ' s name . 
 - * also an inline JavaDoc - only import { @ link Vector linkText } * / 
 - private int Component ; 
 - 
 - / * * 
 - * method comment with JavaDoc - only import { @ link BitSet # aMethod ( ) } 
 - * / 
 - public void Label ( ) { } 
 - 
 - / * * 
 - * Renders to a { @ linkplain Graphics2D graphics context } . 
 - * @ throws HeadlessException if no graphis environment can be found . 
 - * @ exception HeadlessException if no graphis environment can be found . 
 - * / 
 - public void render ( ) { } 
 - 
 - / * * 
 - * First is a class with a method with arguments { @ link TestClass1 # method1 ( TestClass2 ) } . 
 - * Next is a class with typed method { @ link TestClass3 # method2 ( TestClass4 , TestClass5 ) } . 
 - * 
 - * @ param param1 with a link { @ link TestClass6 } 
 - * @ throws TestClass7 when broken 
 - * @ deprecated in 1 for removal in 2 . Use { @ link TestClass8 } 
 - * / 
 - public void aMethodWithManyLinks ( ) { } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / illegalimport / InputIllegalImportDefault . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / illegalimport / InputIllegalImportDefault . java 
 new file mode 100644 
 index 0000000 . . cc05bad 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / imports / illegalimport / InputIllegalImportDefault . java 
 @ @ - 0 , 0 + 1 , 111 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2001 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . imports . illegalimport ; 
 + 
 + import com . puppycrawl . tools . checkstyle . checks . imports . * ; 
 + 
 + import java . io . * ; 
 + import java . lang . * ; 
 + import java . sql . Connection ; 
 + import java . util . List ; 
 + import java . util . List ; 
 + import java . lang . ArithmeticException ; 
 + import sun . applet . * ; 
 + import java . util . Enumeration ; 
 + import java . util . Arrays ; 
 + 
 + import javax . swing . JToolBar ; 
 + import javax . swing . JToggleButton ; 
 + import javax . swing . ScrollPaneLayout ; 
 + import javax . swing . BorderFactory ; 
 + import static java . io . File . listRoots ; 
 + 
 + import static javax . swing . WindowConstants . * ; 
 + import static javax . swing . WindowConstants . * ; 
 + import static java . io . File . createTempFile ; 
 + import sun . * ; 
 + 
 + import java . awt . Component ; 
 + import java . awt . Graphics2D ; 
 + import java . awt . HeadlessException ; 
 + import java . awt . Label ; 
 + import java . util . Date ; 
 + import java . util . Calendar ; 
 + import java . util . BitSet ; 
 + 
 + import com . puppycrawl . tools . checkstyle . Checker ; 
 + import com . puppycrawl . tools . checkstyle . CheckerTest ; 
 + import com . puppycrawl . tools . checkstyle . BaseFileSetCheckTestSupport ; 
 + import com . puppycrawl . tools . checkstyle . Definitions ; 
 + import com . puppycrawl . tools . checkstyle . checks . Input15Extensions ; 
 + import com . puppycrawl . tools . checkstyle . ConfigurationLoaderTest ; 
 + import com . puppycrawl . tools . checkstyle . PackageNamesLoader ; 
 + import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 + import com . puppycrawl . tools . checkstyle . DefaultLogger ; 
 + 
 + / * * 
 + * Test case for imports 
 + * Here ' s an import used only by javadoc : { @ link Date } . 
 + * @ author Oliver Burn 
 + * @ author lkuehne 
 + * @ author Michael Studman 
 + * @ see Calendar Should avoid unused import for Calendar 
 + * * / 
 + class InputIllegalImportDefault 
 + { 
 + / * * ignore * * / 
 + private Class mUse1 = Connection . class ; 
 + / * * ignore * * / 
 + private Class mUse2 = java . io . File . class ; 
 + / * * ignore * * / 
 + private Class mUse3 = null ; 
 + / * * ignore * * / 
 + private Class mUse4 = java . util . Enumeration [ ] . class ; 
 + / * * usage of illegal import * * / 
 + private String ftpClient = null ; 
 + 
 + / * * usage via static method , both normal and fully qualified * / 
 + { 
 + int [ ] x = { } ; 
 + Arrays . sort ( x ) ; 
 + Object obj = javax . swing . BorderFactory . createEmptyBorder ( ) ; 
 + File [ ] files = listRoots ( ) ; 
 + } 
 + 
 + / * * usage of inner class as type * / 
 + private JToolBar . Separator mSep = null ; 
 + 
 + / * * usage of inner class in Constructor * / 
 + private Object mUse5 = new Object ( ) ; 
 + 
 + / * * usage of inner class in constructor , fully qualified * / 
 + private Object mUse6 = new javax . swing . JToggleButton . ToggleButtonModel ( ) ; 
 + 
 + / * * we use class name as member ' s name . 
 + * also an inline JavaDoc - only import { @ link Vector linkText } * / 
 + private int Component ; 
 + 
 + / * * 
 + * method comment with JavaDoc - only import { @ link BitSet # aMethod ( ) } 
 + * / 
 + public void Label ( ) { } 
 + 
 + / * * 
 + * Renders to a { @ linkplain Graphics2D graphics context } . 
 + * @ throws HeadlessException if no graphis environment can be found . 
 + * @ exception HeadlessException if no graphis environment can be found . 
 + * / 
 + public void render ( ) { } 
 + 
 + / * * 
 + * First is a class with a method with arguments { @ link TestClass1 # method1 ( TestClass2 ) } . 
 + * Next is a class with typed method { @ link TestClass3 # method2 ( TestClass4 , TestClass5 ) } . 
 + * 
 + * @ param param1 with a link { @ link TestClass6 } 
 + * @ throws TestClass7 when broken 
 + * @ deprecated in 1 for removal in 2 . Use { @ link TestClass8 } 
 + * / 
 + public void aMethodWithManyLinks ( ) { } 
 + }

NEAREST DIFF:
diff - - git a / . github / CONTRIBUTING . md b / . github / CONTRIBUTING . md 
 index 31add09 . . b03df61 100644 
 - - - a / . github / CONTRIBUTING . md 
 + + + b / . github / CONTRIBUTING . md 
 @ @ - 1 , 3 + 1 , 10 @ @ 
 + # Contributing 
 + 
 + Please see instructions for contributing here : 
 + http : / / checkstyle . sourceforge . net / contributing . html 
 + 
 + # Reporting issues 
 + 
 Please read http : / / checkstyle . sourceforge . net / report _ issue . html 
 
 Please provide issue report in format that we request , EACH DETAIL MAKE A HUGE HELP .
