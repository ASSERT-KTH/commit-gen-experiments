BLEU SCORE: 0.5266403878479265

TEST MSG: Issue # 5003 : increased pitest coverage for whitespace package to 100 %
GENERATED MSG: Issue # 5005 : increased pitest coverage for metrics package to 100 %

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index f8e0e7b . . 329f117 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 2102 , 7 + 2102 , 7 @ @ <nl> < param > com . puppycrawl . tools . checkstyle . checks . whitespace . * < / param > <nl> < / targetTests > <nl> < coverageThreshold > 100 < / coverageThreshold > <nl> - < mutationThreshold > 99 < / mutationThreshold > <nl> + < mutationThreshold > 100 < / mutationThreshold > <nl> < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > <nl> < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > <nl> < threads > $ { pitest . plugin . threads } < / threads > <nl> diff - - git a / shippable . yml b / shippable . yml <nl> index 66abc48 . . d1b75c7 100644 <nl> - - - a / shippable . yml <nl> + + + b / shippable . yml <nl> @ @ - 13 , 7 + 13 , 7 @ @ env : <nl> - PROFILE = " - Ppitest - checks - metrics , no - validations " ; POST _ ACTION = check _ survived _ uncovered <nl> - PROFILE = " - Ppitest - checks - regexp , no - validations " ; POST _ ACTION = check _ survived _ uncovered <nl> - PROFILE = " - Ppitest - checks - sizes , no - validations " ; POST _ ACTION = check _ survived _ uncovered <nl> - - PROFILE = " - Ppitest - checks - whitespace , no - validations " ; POST _ ACTION = check _ survived _ whitespace <nl> + - PROFILE = " - Ppitest - checks - whitespace , no - validations " ; POST _ ACTION = check _ survived <nl> - PROFILE = " - Ppitest - checks - misc , no - validations " ; POST _ ACTION = check _ survived _ misc <nl> - PROFILE = " - Ppitest - checks - blocks , no - validations " ; POST _ ACTION = check _ survived _ blocks <nl> - PROFILE = " - Ppitest - checks - coding , no - validations " ; POST _ ACTION = check _ survived _ coding <nl> @ @ - 64 , 11 + 64 , 6 @ @ build : <nl> echo " Survived items found in reports , build will be failed " <nl> exit 1 <nl> fi <nl> - if [ [ $ POST _ ACTION = = ' check _ survived _ whitespace ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " NoWhitespaceAfterCheck . * " - - exclude = " ParenPadCheck . * " - - exclude = " SingleSpaceSeparatorCheck . * " target / | cat | wc - l ) > 0 ] ] ; then <nl> - echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " NoWhitespaceAfterCheck . * " - - exclude = " ParenPadCheck . * " - - exclude = " SingleSpaceSeparatorCheck . * " target / | cat ) <nl> - echo " Survived items found in reports , build will be failed " <nl> - exit 1 <nl> - fi <nl> if [ [ $ POST _ ACTION = = ' check _ survived _ imports ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " target / | cat | wc - l ) > 0 ] ] ; then <nl> echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " target / | cat ) <nl> echo " Survived items found in reports , build will be failed " <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> index 44a3118 . . 4d95620 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java <nl> @ @ - 390 , 8 + 390 , 12 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { <nl> } <nl> / / ident and lastTypeNode lay on one line <nl> else { <nl> - if ( ident . getColumnNo ( ) > = ast . getColumnNo ( ) + 1 <nl> - | | lastTypeNode . getColumnNo ( ) > ident . getColumnNo ( ) ) { <nl> + final int instanceOfSize = 13 ; <nl> + / / + 2 because ast has ` [ ] ` after the ident <nl> + if ( ident . getColumnNo ( ) > = ast . getColumnNo ( ) + 2 <nl> + / / + 13 because ident ( at most 1 character ) is followed by <nl> + / / ' instanceof ' ( 12 characters ) <nl> + | | lastTypeNode . getColumnNo ( ) > = ident . getColumnNo ( ) + instanceOfSize ) { <nl> previousElement = lastTypeNode ; <nl> } <nl> else { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java <nl> index ec8f2ae . . a4eb100 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java <nl> @ @ - 58 , 6 + 58 , 7 @ @ public class NoWhitespaceAfterCheckTest <nl> " 289 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , <nl> " 290 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , <nl> " 291 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , <nl> + " 296 : 27 : " + getCheckMessage ( MSG _ KEY , " int " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputNoWhitespaceAfter . java " ) , expected ) ; <nl> } <nl> @ @ - 164 , 6 + 165 , 7 @ @ public class NoWhitespaceAfterCheckTest <nl> " 94 : 45 : " + getCheckMessage ( MSG _ KEY , " ) " ) , <nl> " 97 : 41 : " + getCheckMessage ( MSG _ KEY , " Object " ) , <nl> " 100 : 43 : " + getCheckMessage ( MSG _ KEY , " ] " ) , <nl> + " 108 : 31 : " + getCheckMessage ( MSG _ KEY , " Object " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " InputNoWhitespaceAfterArrayDeclarations2 . java " ) , expected ) ; <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java <nl> index 4cdd506 . . 34f62a3 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java <nl> @ @ - 291 , 4 + 291 , 8 @ @ class SpecialCasesInForLoop <nl> @ <nl> interface BAD3 { } <nl> @ interface Ok { } <nl> + <nl> + static { <nl> + int [ ] err = new int [ 50 ] ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfterArrayDeclarations2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfterArrayDeclarations2 . java <nl> index f632316 . . 7a33245 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfterArrayDeclarations2 . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfterArrayDeclarations2 . java <nl> @ @ - 103 , 6 + 103 , 14 @ @ public class InputNoWhitespaceAfterArrayDeclarations2 <nl> if ( someStuff15 instanceof Object [ ] [ ] ) { <nl> <nl> } <nl> + Object [ ] a = null ; <nl> + <nl> + if ( a instanceof Object [ ] ) { / / incorrect <nl> + <nl> + } <nl> + if ( a instanceof Object [ ] [ ] ) { <nl> + <nl> + } <nl> } <nl> <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> index 511e628 . . ceecab9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java <nl> @ @ - 57 , 20 + 57 , 20 @ @ public abstract class AbstractSuperCheck <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . METHOD _ DEF , <nl> - TokenTypes . LITERAL _ SUPER , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . METHOD _ DEF , <nl> + TokenTypes . LITERAL _ SUPER , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ArrayTrailingCommaCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ArrayTrailingCommaCheck . java <nl> index 146df40 . . 47feea7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ArrayTrailingCommaCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ArrayTrailingCommaCheck . java <nl> @ @ - 99 , 17 + 99 , 17 @ @ public class ArrayTrailingCommaCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . ARRAY _ INIT } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . ARRAY _ INIT } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheck . java <nl> index 93f67e9 . . 641cd7b 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheck . java <nl> @ @ - 48 , 17 + 48 , 17 @ @ public class AvoidInlineConditionalsCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . QUESTION } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . QUESTION } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . QUESTION } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / CovariantEqualsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / CovariantEqualsCheck . java <nl> index d36bdc5 . . 5fb73f9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / CovariantEqualsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / CovariantEqualsCheck . java <nl> @ @ - 57 , 17 + 57 , 17 @ @ public class CovariantEqualsCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . LITERAL _ NEW , TokenTypes . ENUM _ DEF , } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . LITERAL _ NEW , TokenTypes . ENUM _ DEF , } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . LITERAL _ NEW , TokenTypes . ENUM _ DEF , } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java <nl> index 84c09a2 . . 93c4fe7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java <nl> @ @ - 163 , 11 + 163 , 16 @ @ public class DeclarationOrderCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getRequiredTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . CTOR _ DEF , <nl> TokenTypes . METHOD _ DEF , <nl> @ @ - 178 , 11 + 183 , 6 @ @ public class DeclarationOrderCheck extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> - public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> public void beginTree ( DetailAST rootAST ) { <nl> scopeStates = new ArrayDeque < > ( ) ; <nl> classFieldNames = new HashSet < > ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DefaultComesLastCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DefaultComesLastCheck . java <nl> index e8274ac . . d5c2903 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DefaultComesLastCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DefaultComesLastCheck . java <nl> @ @ - 65 , 19 + 65 , 19 @ @ public class DefaultComesLastCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . LITERAL _ DEFAULT , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . LITERAL _ DEFAULT , <nl> + } ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EmptyStatementCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EmptyStatementCheck . java <nl> index ffe3bd0 . . c23954a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EmptyStatementCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EmptyStatementCheck . java <nl> @ @ - 54 , 17 + 54 , 17 @ @ public class EmptyStatementCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . EMPTY _ STAT } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . EMPTY _ STAT } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> index 955ec1e . . 0fc040f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java <nl> @ @ - 88 , 11 + 88 , 16 @ @ public class EqualsAvoidNullCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getRequiredTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . METHOD _ CALL , <nl> TokenTypes . CLASS _ DEF , <nl> @ @ - 113 , 11 + 118 , 6 @ @ public class EqualsAvoidNullCheck extends AbstractCheck { <nl> } ; <nl> } <nl> <nl> - @ Override <nl> - public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> - } <nl> - <nl> / * * <nl> * Whether to ignore checking { @ code String . equalsIgnoreCase ( String ) } . <nl> * @ param newValue whether to ignore checking <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java <nl> index 843ba13 . . 1d5c17d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java <nl> @ @ - 78 , 17 + 78 , 17 @ @ public class EqualsHashCodeCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . METHOD _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . METHOD _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> index 9aa8479 . . 9d21d17 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java <nl> @ @ - 63 , 17 + 63 , 17 @ @ public class ExplicitInitializationCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public final int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public final int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> public final int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> index 07f5df9 . . 627f08e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java <nl> @ @ - 92 , 17 + 92 , 17 @ @ public class FallThroughCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . CASE _ GROUP } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . CASE _ GROUP } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . CASE _ GROUP } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java <nl> index 4955c08 . . 7cc2bcb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java <nl> @ @ - 66 , 17 + 66 , 17 @ @ public final class IllegalCatchCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ CATCH } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . LITERAL _ CATCH } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ CATCH } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalThrowsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalThrowsCheck . java <nl> index b6a42fe . . 0c4795e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalThrowsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalThrowsCheck . java <nl> @ @ - 90 , 17 + 90 , 17 @ @ public final class IllegalThrowsCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ THROWS } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . LITERAL _ THROWS } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ THROWS } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java <nl> index 2bdd5a4 . . d6450b4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java <nl> @ @ - 106 , 11 + 106 , 16 @ @ public class InnerAssignmentCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getRequiredTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . ASSIGN , / / ' = ' <nl> TokenTypes . DIV _ ASSIGN , / / " / = " <nl> @ @ - 128 , 11 + 133 , 6 @ @ public class InnerAssignmentCheck <nl> } <nl> <nl> @ Override <nl> - public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> if ( ! isInContext ( ast , ALLOWED _ ASSIGNMENT _ CONTEXT ) <nl> & & ! isInNoBraceControlStatement ( ast ) <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingCtorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingCtorCheck . java <nl> index 689f179 . . e95c3a1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingCtorCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingCtorCheck . java <nl> @ @ - 49 , 17 + 49 , 17 @ @ public class MissingCtorCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . CLASS _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . CLASS _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java <nl> index 6efa35c . . 1368995 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java <nl> @ @ - 56 , 17 + 56 , 17 @ @ public class MissingSwitchDefaultCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ SWITCH } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . LITERAL _ SWITCH } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java <nl> index 1b96fc4 . . 70da94c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java <nl> @ @ - 136 , 16 + 136 , 11 @ @ public final class ModifiedControlVariableCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . OBJBLOCK , <nl> TokenTypes . LITERAL _ FOR , <nl> @ @ - 171 , 6 + 166 , 11 @ @ public final class ModifiedControlVariableCheck extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> + public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> public void beginTree ( DetailAST rootAST ) { <nl> / / clear data <nl> variableStack . clear ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java <nl> index 8d44d26 . . b36ded5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java <nl> @ @ - 115 , 17 + 115 , 17 @ @ public class MultipleStringLiteralsCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . STRING _ LITERAL } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . STRING _ LITERAL } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheck . java <nl> index 41fe9a1 . . 6b895b4 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheck . java <nl> @ @ - 61 , 17 + 61 , 17 @ @ public class MultipleVariableDeclarationsCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedForDepthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedForDepthCheck . java <nl> index 24d882f . . d080f8d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedForDepthCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedForDepthCheck . java <nl> @ @ - 66 , 17 + 66 , 17 @ @ public final class NestedForDepthCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ FOR } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . LITERAL _ FOR } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheck . java <nl> index e5d83de . . 1332950 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheck . java <nl> @ @ - 54 , 17 + 54 , 17 @ @ public final class NestedIfDepthCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ IF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . LITERAL _ IF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedTryDepthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedTryDepthCheck . java <nl> index 2d12499 . . eed91e3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedTryDepthCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedTryDepthCheck . java <nl> @ @ - 52 , 17 + 52 , 17 @ @ public final class NestedTryDepthCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ TRY } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . LITERAL _ TRY } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheck . java <nl> index 9b2bdec . . 9ef5502 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheck . java <nl> @ @ - 128 , 17 + 128 , 17 @ @ public class NoCloneCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . METHOD _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . METHOD _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java <nl> index fd237f0 . . f167018 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java <nl> @ @ - 109 , 11 + 109 , 16 @ @ public final class OneStatementPerLineCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getRequiredTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . SEMI , <nl> TokenTypes . FOR _ INIT , <nl> @ @ - 123 , 11 + 128 , 6 @ @ public final class OneStatementPerLineCheck extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> - public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> public void beginTree ( DetailAST rootAST ) { <nl> inForHeader = false ; <nl> lastStatementEnd = - 1 ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheck . java <nl> index f808a64 . . 12875da 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheck . java <nl> @ @ - 59 , 19 + 59 , 19 @ @ public class OverloadMethodsDeclarationOrderCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . OBJBLOCK , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . OBJBLOCK , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheck . java <nl> index c20b97a . . 760450d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheck . java <nl> @ @ - 75 , 17 + 75 , 17 @ @ public final class PackageDeclarationCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . PACKAGE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> + return new int [ ] { TokenTypes . PACKAGE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . PACKAGE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java <nl> index e9af8e0 . . a3c64f3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java <nl> @ @ - 61 , 35 + 61 , 11 @ @ public final class ParameterAssignmentCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . CTOR _ DEF , <nl> - TokenTypes . METHOD _ DEF , <nl> - TokenTypes . ASSIGN , <nl> - TokenTypes . PLUS _ ASSIGN , <nl> - TokenTypes . MINUS _ ASSIGN , <nl> - TokenTypes . STAR _ ASSIGN , <nl> - TokenTypes . DIV _ ASSIGN , <nl> - TokenTypes . MOD _ ASSIGN , <nl> - TokenTypes . SR _ ASSIGN , <nl> - TokenTypes . BSR _ ASSIGN , <nl> - TokenTypes . SL _ ASSIGN , <nl> - TokenTypes . BAND _ ASSIGN , <nl> - TokenTypes . BXOR _ ASSIGN , <nl> - TokenTypes . BOR _ ASSIGN , <nl> - TokenTypes . INC , <nl> - TokenTypes . POST _ INC , <nl> - TokenTypes . DEC , <nl> - TokenTypes . POST _ DEC , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . CTOR _ DEF , <nl> TokenTypes . METHOD _ DEF , <nl> @ @ - 113 , 6 + 89 , 11 @ @ public final class ParameterAssignmentCheck extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> + public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> public void beginTree ( DetailAST rootAST ) { <nl> / / clear data <nl> parameterNamesStack . clear ( ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> index e9d34f1 . . c2e3de9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java <nl> @ @ - 184 , 16 + 184 , 11 @ @ public class RequireThisCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . CLASS _ DEF , <nl> TokenTypes . INTERFACE _ DEF , <nl> @ @ - 206 , 6 + 201 , 11 @ @ public class RequireThisCheck extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> + public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> public void beginTree ( DetailAST rootAST ) { <nl> frames = new HashMap < > ( ) ; <nl> current = null ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheck . java <nl> index 275a730 . . 50fbee3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheck . java <nl> @ @ - 53 , 17 + 53 , 17 @ @ public class SimplifyBooleanExpressionCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ TRUE , TokenTypes . LITERAL _ FALSE } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . LITERAL _ TRUE , TokenTypes . LITERAL _ FALSE } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java <nl> index 00c38d0 . . 9300217 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java <nl> @ @ - 50 , 17 + 50 , 17 @ @ public class SimplifyBooleanReturnCheck <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . LITERAL _ IF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . LITERAL _ IF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / StringLiteralEqualityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / StringLiteralEqualityCheck . java <nl> index 8a3b4cc . . 56b310a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / StringLiteralEqualityCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / StringLiteralEqualityCheck . java <nl> @ @ - 48 , 17 + 48 , 17 @ @ public class StringLiteralEqualityCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . EQUAL , TokenTypes . NOT _ EQUAL } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . EQUAL , TokenTypes . NOT _ EQUAL } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> index 9b8f784 . . 0e7d9fd 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java <nl> @ @ - 241 , 17 + 241 , 17 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStarImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStarImportCheck . java <nl> index 86dc8b4 . . 224340a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStarImportCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStarImportCheck . java <nl> @ @ - 87 , 12 + 87 , 12 @ @ public class AvoidStarImportCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java <nl> index d407415 . . d21f5d9 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java <nl> @ @ - 78 , 17 + 78 , 17 @ @ public class AvoidStaticImportCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . STATIC _ IMPORT } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . STATIC _ IMPORT } ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> index db07940 . . cc32ef2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java <nl> @ @ - 445 , 11 + 445 , 16 @ @ public class CustomImportOrderCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int [ ] getRequiredTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . IMPORT , <nl> TokenTypes . STATIC _ IMPORT , <nl> @ @ - 458 , 11 + 463 , 6 @ @ public class CustomImportOrderCheck extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> - public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> public void beginTree ( DetailAST rootAST ) { <nl> importToGroupList . clear ( ) ; <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java <nl> index 00e2fb7 . . 706c7d1 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java <nl> @ @ - 133 , 17 + 133 , 17 @ @ public class IllegalImportCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java <nl> index ea24b8e . . 72d8e61 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java <nl> @ @ - 92 , 18 + 92 , 17 @ @ public class ImportControlCheck extends AbstractCheck implements ExternalResourc <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] { TokenTypes . PACKAGE _ DEF , TokenTypes . IMPORT , <nl> - TokenTypes . STATIC _ IMPORT , } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { TokenTypes . PACKAGE _ DEF , TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT , } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / RedundantImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / RedundantImportCheck . java <nl> index 2360422 . . 3c95c4e 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / RedundantImportCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / RedundantImportCheck . java <nl> @ @ - 90 , 20 + 90 , 19 @ @ public class RedundantImportCheck <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return new int [ ] <nl> - { TokenTypes . IMPORT , <nl> - TokenTypes . STATIC _ IMPORT , <nl> - TokenTypes . PACKAGE _ DEF , } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return new int [ ] { <nl> + TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT , TokenTypes . PACKAGE _ DEF , <nl> + } ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java <nl> index 19a9f85 . . 23d0df8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java <nl> @ @ - 116 , 31 + 116 , 11 @ @ public class UnusedImportsCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return new int [ ] { <nl> - TokenTypes . IDENT , <nl> - TokenTypes . IMPORT , <nl> - TokenTypes . STATIC _ IMPORT , <nl> - / / Definitions that may contain Javadoc . . . <nl> - TokenTypes . PACKAGE _ DEF , <nl> - TokenTypes . ANNOTATION _ DEF , <nl> - TokenTypes . ANNOTATION _ FIELD _ DEF , <nl> - TokenTypes . ENUM _ DEF , <nl> - TokenTypes . ENUM _ CONSTANT _ DEF , <nl> - TokenTypes . CLASS _ DEF , <nl> - TokenTypes . INTERFACE _ DEF , <nl> - TokenTypes . METHOD _ DEF , <nl> - TokenTypes . CTOR _ DEF , <nl> - TokenTypes . VARIABLE _ DEF , <nl> - } ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getDefaultTokens ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . IDENT , <nl> TokenTypes . IMPORT , <nl> @ @ - 160 , 6 + 140 , 11 @ @ public class UnusedImportsCheck extends AbstractCheck { <nl> } <nl> <nl> @ Override <nl> + public int [ ] getAcceptableTokens ( ) { <nl> + return getRequiredTokens ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> public void visitToken ( DetailAST ast ) { <nl> if ( ast . getType ( ) = = TokenTypes . IDENT ) { <nl> if ( collect ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> index e382c72 . . f02bc35 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java <nl> @ @ - 300 , 17 + 300 , 17 @ @ public class IndentationCheck extends AbstractCheck { <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getAcceptableTokens ( ) { <nl> - return handlerFactory . getHandledTypes ( ) ; <nl> + return getRequiredTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return getAcceptableTokens ( ) ; <nl> + return handlerFactory . getHandledTypes ( ) ; <nl> } <nl> <nl> @ Override

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index f8e0e7b . . 329f117 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 2102 , 7 + 2102 , 7 @ @ 
 < param > com . puppycrawl . tools . checkstyle . checks . whitespace . * < / param > 
 < / targetTests > 
 < coverageThreshold > 100 < / coverageThreshold > 
 - < mutationThreshold > 99 < / mutationThreshold > 
 + < mutationThreshold > 100 < / mutationThreshold > 
 < timeoutFactor > $ { pitest . plugin . timeout . factor } < / timeoutFactor > 
 < timeoutConstant > $ { pitest . plugin . timeout . constant } < / timeoutConstant > 
 < threads > $ { pitest . plugin . threads } < / threads > 
 diff - - git a / shippable . yml b / shippable . yml 
 index 66abc48 . . d1b75c7 100644 
 - - - a / shippable . yml 
 + + + b / shippable . yml 
 @ @ - 13 , 7 + 13 , 7 @ @ env : 
 - PROFILE = " - Ppitest - checks - metrics , no - validations " ; POST _ ACTION = check _ survived _ uncovered 
 - PROFILE = " - Ppitest - checks - regexp , no - validations " ; POST _ ACTION = check _ survived _ uncovered 
 - PROFILE = " - Ppitest - checks - sizes , no - validations " ; POST _ ACTION = check _ survived _ uncovered 
 - - PROFILE = " - Ppitest - checks - whitespace , no - validations " ; POST _ ACTION = check _ survived _ whitespace 
 + - PROFILE = " - Ppitest - checks - whitespace , no - validations " ; POST _ ACTION = check _ survived 
 - PROFILE = " - Ppitest - checks - misc , no - validations " ; POST _ ACTION = check _ survived _ misc 
 - PROFILE = " - Ppitest - checks - blocks , no - validations " ; POST _ ACTION = check _ survived _ blocks 
 - PROFILE = " - Ppitest - checks - coding , no - validations " ; POST _ ACTION = check _ survived _ coding 
 @ @ - 64 , 11 + 64 , 6 @ @ build : 
 echo " Survived items found in reports , build will be failed " 
 exit 1 
 fi 
 - if [ [ $ POST _ ACTION = = ' check _ survived _ whitespace ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " NoWhitespaceAfterCheck . * " - - exclude = " ParenPadCheck . * " - - exclude = " SingleSpaceSeparatorCheck . * " target / | cat | wc - l ) > 0 ] ] ; then 
 - echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " NoWhitespaceAfterCheck . * " - - exclude = " ParenPadCheck . * " - - exclude = " SingleSpaceSeparatorCheck . * " target / | cat ) 
 - echo " Survived items found in reports , build will be failed " 
 - exit 1 
 - fi 
 if [ [ $ POST _ ACTION = = ' check _ survived _ imports ' & & $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " target / | cat | wc - l ) > 0 ] ] ; then 
 echo " Survived items : " $ ( grep - RE " class = ' survived ' " - - exclude = " CustomImportOrderCheck . * " target / | cat ) 
 echo " Survived items found in reports , build will be failed " 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 index 44a3118 . . 4d95620 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheck . java 
 @ @ - 390 , 8 + 390 , 12 @ @ public class NoWhitespaceAfterCheck extends AbstractCheck { 
 } 
 / / ident and lastTypeNode lay on one line 
 else { 
 - if ( ident . getColumnNo ( ) > = ast . getColumnNo ( ) + 1 
 - | | lastTypeNode . getColumnNo ( ) > ident . getColumnNo ( ) ) { 
 + final int instanceOfSize = 13 ; 
 + / / + 2 because ast has ` [ ] ` after the ident 
 + if ( ident . getColumnNo ( ) > = ast . getColumnNo ( ) + 2 
 + / / + 13 because ident ( at most 1 character ) is followed by 
 + / / ' instanceof ' ( 12 characters ) 
 + | | lastTypeNode . getColumnNo ( ) > = ident . getColumnNo ( ) + instanceOfSize ) { 
 previousElement = lastTypeNode ; 
 } 
 else { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java 
 index ec8f2ae . . a4eb100 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / whitespace / NoWhitespaceAfterCheckTest . java 
 @ @ - 58 , 6 + 58 , 7 @ @ public class NoWhitespaceAfterCheckTest 
 " 289 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , 
 " 290 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , 
 " 291 : 6 : " + getCheckMessage ( MSG _ KEY , " @ " ) , 
 + " 296 : 27 : " + getCheckMessage ( MSG _ KEY , " int " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputNoWhitespaceAfter . java " ) , expected ) ; 
 } 
 @ @ - 164 , 6 + 165 , 7 @ @ public class NoWhitespaceAfterCheckTest 
 " 94 : 45 : " + getCheckMessage ( MSG _ KEY , " ) " ) , 
 " 97 : 41 : " + getCheckMessage ( MSG _ KEY , " Object " ) , 
 " 100 : 43 : " + getCheckMessage ( MSG _ KEY , " ] " ) , 
 + " 108 : 31 : " + getCheckMessage ( MSG _ KEY , " Object " ) , 
 } ; 
 verify ( checkConfig , getPath ( " InputNoWhitespaceAfterArrayDeclarations2 . java " ) , expected ) ; 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java 
 index 4cdd506 . . 34f62a3 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfter . java 
 @ @ - 291 , 4 + 291 , 8 @ @ class SpecialCasesInForLoop 
 @ 
 interface BAD3 { } 
 @ interface Ok { } 
 + 
 + static { 
 + int [ ] err = new int [ 50 ] ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfterArrayDeclarations2 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfterArrayDeclarations2 . java 
 index f632316 . . 7a33245 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfterArrayDeclarations2 . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / whitespace / nowhitespaceafter / InputNoWhitespaceAfterArrayDeclarations2 . java 
 @ @ - 103 , 6 + 103 , 14 @ @ public class InputNoWhitespaceAfterArrayDeclarations2 
 if ( someStuff15 instanceof Object [ ] [ ] ) { 
 
 } 
 + Object [ ] a = null ; 
 + 
 + if ( a instanceof Object [ ] ) { / / incorrect 
 + 
 + } 
 + if ( a instanceof Object [ ] [ ] ) { 
 + 
 + } 
 } 
 
 }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 index 511e628 . . ceecab9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AbstractSuperCheck . java 
 @ @ - 57 , 20 + 57 , 20 @ @ public abstract class AbstractSuperCheck 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . METHOD _ DEF , 
 - TokenTypes . LITERAL _ SUPER , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . METHOD _ DEF , 
 + TokenTypes . LITERAL _ SUPER , 
 + } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ArrayTrailingCommaCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ArrayTrailingCommaCheck . java 
 index 146df40 . . 47feea7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ArrayTrailingCommaCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ArrayTrailingCommaCheck . java 
 @ @ - 99 , 17 + 99 , 17 @ @ public class ArrayTrailingCommaCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . ARRAY _ INIT } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . ARRAY _ INIT } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheck . java 
 index 93f67e9 . . 641cd7b 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / AvoidInlineConditionalsCheck . java 
 @ @ - 48 , 17 + 48 , 17 @ @ public class AvoidInlineConditionalsCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . QUESTION } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . QUESTION } ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . QUESTION } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / CovariantEqualsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / CovariantEqualsCheck . java 
 index d36bdc5 . . 5fb73f9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / CovariantEqualsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / CovariantEqualsCheck . java 
 @ @ - 57 , 17 + 57 , 17 @ @ public class CovariantEqualsCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . LITERAL _ NEW , TokenTypes . ENUM _ DEF , } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . LITERAL _ NEW , TokenTypes . ENUM _ DEF , } ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . CLASS _ DEF , TokenTypes . LITERAL _ NEW , TokenTypes . ENUM _ DEF , } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java 
 index 84c09a2 . . 93c4fe7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DeclarationOrderCheck . java 
 @ @ - 163 , 11 + 163 , 16 @ @ public class DeclarationOrderCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getRequiredTokens ( ) { 
 return new int [ ] { 
 TokenTypes . CTOR _ DEF , 
 TokenTypes . METHOD _ DEF , 
 @ @ - 178 , 11 + 183 , 6 @ @ public class DeclarationOrderCheck extends AbstractCheck { 
 } 
 
 @ Override 
 - public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 - } 
 - 
 - @ Override 
 public void beginTree ( DetailAST rootAST ) { 
 scopeStates = new ArrayDeque < > ( ) ; 
 classFieldNames = new HashSet < > ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DefaultComesLastCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DefaultComesLastCheck . java 
 index e8274ac . . d5c2903 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DefaultComesLastCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / DefaultComesLastCheck . java 
 @ @ - 65 , 19 + 65 , 19 @ @ public class DefaultComesLastCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . LITERAL _ DEFAULT , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . LITERAL _ DEFAULT , 
 + } ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EmptyStatementCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EmptyStatementCheck . java 
 index ffe3bd0 . . c23954a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EmptyStatementCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EmptyStatementCheck . java 
 @ @ - 54 , 17 + 54 , 17 @ @ public class EmptyStatementCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . EMPTY _ STAT } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . EMPTY _ STAT } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 index 955ec1e . . 0fc040f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsAvoidNullCheck . java 
 @ @ - 88 , 11 + 88 , 16 @ @ public class EqualsAvoidNullCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getRequiredTokens ( ) { 
 return new int [ ] { 
 TokenTypes . METHOD _ CALL , 
 TokenTypes . CLASS _ DEF , 
 @ @ - 113 , 11 + 118 , 6 @ @ public class EqualsAvoidNullCheck extends AbstractCheck { 
 } ; 
 } 
 
 - @ Override 
 - public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 - } 
 - 
 / * * 
 * Whether to ignore checking { @ code String . equalsIgnoreCase ( String ) } . 
 * @ param newValue whether to ignore checking 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java 
 index 843ba13 . . 1d5c17d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / EqualsHashCodeCheck . java 
 @ @ - 78 , 17 + 78 , 17 @ @ public class EqualsHashCodeCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . METHOD _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . METHOD _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 index 9aa8479 . . 9d21d17 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ExplicitInitializationCheck . java 
 @ @ - 63 , 17 + 63 , 17 @ @ public class ExplicitInitializationCheck extends AbstractCheck { 
 
 @ Override 
 public final int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public final int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 } 
 
 @ Override 
 public final int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 index 07f5df9 . . 627f08e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / FallThroughCheck . java 
 @ @ - 92 , 17 + 92 , 17 @ @ public class FallThroughCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . CASE _ GROUP } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . CASE _ GROUP } ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . CASE _ GROUP } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java 
 index 4955c08 . . 7cc2bcb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java 
 @ @ - 66 , 17 + 66 , 17 @ @ public final class IllegalCatchCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ CATCH } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . LITERAL _ CATCH } ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ CATCH } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalThrowsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalThrowsCheck . java 
 index b6a42fe . . 0c4795e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalThrowsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalThrowsCheck . java 
 @ @ - 90 , 17 + 90 , 17 @ @ public final class IllegalThrowsCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ THROWS } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . LITERAL _ THROWS } ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ THROWS } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java 
 index 2bdd5a4 . . d6450b4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / InnerAssignmentCheck . java 
 @ @ - 106 , 11 + 106 , 16 @ @ public class InnerAssignmentCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getRequiredTokens ( ) { 
 return new int [ ] { 
 TokenTypes . ASSIGN , / / ' = ' 
 TokenTypes . DIV _ ASSIGN , / / " / = " 
 @ @ - 128 , 11 + 133 , 6 @ @ public class InnerAssignmentCheck 
 } 
 
 @ Override 
 - public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 - } 
 - 
 - @ Override 
 public void visitToken ( DetailAST ast ) { 
 if ( ! isInContext ( ast , ALLOWED _ ASSIGNMENT _ CONTEXT ) 
 & & ! isInNoBraceControlStatement ( ast ) 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingCtorCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingCtorCheck . java 
 index 689f179 . . e95c3a1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingCtorCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingCtorCheck . java 
 @ @ - 49 , 17 + 49 , 17 @ @ public class MissingCtorCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . CLASS _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . CLASS _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java 
 index 6efa35c . . 1368995 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MissingSwitchDefaultCheck . java 
 @ @ - 56 , 17 + 56 , 17 @ @ public class MissingSwitchDefaultCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ SWITCH } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . LITERAL _ SWITCH } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java 
 index 1b96fc4 . . 70da94c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ModifiedControlVariableCheck . java 
 @ @ - 136 , 16 + 136 , 11 @ @ public final class ModifiedControlVariableCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 - } 
 - 
 - @ Override 
 - public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { 
 TokenTypes . OBJBLOCK , 
 TokenTypes . LITERAL _ FOR , 
 @ @ - 171 , 6 + 166 , 11 @ @ public final class ModifiedControlVariableCheck extends AbstractCheck { 
 } 
 
 @ Override 
 + public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 public void beginTree ( DetailAST rootAST ) { 
 / / clear data 
 variableStack . clear ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java 
 index 8d44d26 . . b36ded5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleStringLiteralsCheck . java 
 @ @ - 115 , 17 + 115 , 17 @ @ public class MultipleStringLiteralsCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . STRING _ LITERAL } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . STRING _ LITERAL } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheck . java 
 index 41fe9a1 . . 6b895b4 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MultipleVariableDeclarationsCheck . java 
 @ @ - 61 , 17 + 61 , 17 @ @ public class MultipleVariableDeclarationsCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedForDepthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedForDepthCheck . java 
 index 24d882f . . d080f8d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedForDepthCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedForDepthCheck . java 
 @ @ - 66 , 17 + 66 , 17 @ @ public final class NestedForDepthCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ FOR } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . LITERAL _ FOR } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheck . java 
 index e5d83de . . 1332950 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedIfDepthCheck . java 
 @ @ - 54 , 17 + 54 , 17 @ @ public final class NestedIfDepthCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ IF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . LITERAL _ IF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedTryDepthCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedTryDepthCheck . java 
 index 2d12499 . . eed91e3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedTryDepthCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NestedTryDepthCheck . java 
 @ @ - 52 , 17 + 52 , 17 @ @ public final class NestedTryDepthCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ TRY } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . LITERAL _ TRY } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheck . java 
 index 9b2bdec . . 9ef5502 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / NoCloneCheck . java 
 @ @ - 128 , 17 + 128 , 17 @ @ public class NoCloneCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . METHOD _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . METHOD _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java 
 index fd237f0 . . f167018 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OneStatementPerLineCheck . java 
 @ @ - 109 , 11 + 109 , 16 @ @ public final class OneStatementPerLineCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getRequiredTokens ( ) { 
 return new int [ ] { 
 TokenTypes . SEMI , 
 TokenTypes . FOR _ INIT , 
 @ @ - 123 , 11 + 128 , 6 @ @ public final class OneStatementPerLineCheck extends AbstractCheck { 
 } 
 
 @ Override 
 - public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 - } 
 - 
 - @ Override 
 public void beginTree ( DetailAST rootAST ) { 
 inForHeader = false ; 
 lastStatementEnd = - 1 ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheck . java 
 index f808a64 . . 12875da 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / OverloadMethodsDeclarationOrderCheck . java 
 @ @ - 59 , 19 + 59 , 19 @ @ public class OverloadMethodsDeclarationOrderCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . OBJBLOCK , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . OBJBLOCK , 
 + } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheck . java 
 index c20b97a . . 760450d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / PackageDeclarationCheck . java 
 @ @ - 75 , 17 + 75 , 17 @ @ public final class PackageDeclarationCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . PACKAGE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 + return new int [ ] { TokenTypes . PACKAGE _ DEF } ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . PACKAGE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java 
 index e9af8e0 . . a3c64f3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / ParameterAssignmentCheck . java 
 @ @ - 61 , 35 + 61 , 11 @ @ public final class ParameterAssignmentCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . CTOR _ DEF , 
 - TokenTypes . METHOD _ DEF , 
 - TokenTypes . ASSIGN , 
 - TokenTypes . PLUS _ ASSIGN , 
 - TokenTypes . MINUS _ ASSIGN , 
 - TokenTypes . STAR _ ASSIGN , 
 - TokenTypes . DIV _ ASSIGN , 
 - TokenTypes . MOD _ ASSIGN , 
 - TokenTypes . SR _ ASSIGN , 
 - TokenTypes . BSR _ ASSIGN , 
 - TokenTypes . SL _ ASSIGN , 
 - TokenTypes . BAND _ ASSIGN , 
 - TokenTypes . BXOR _ ASSIGN , 
 - TokenTypes . BOR _ ASSIGN , 
 - TokenTypes . INC , 
 - TokenTypes . POST _ INC , 
 - TokenTypes . DEC , 
 - TokenTypes . POST _ DEC , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 - } 
 - 
 - @ Override 
 - public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { 
 TokenTypes . CTOR _ DEF , 
 TokenTypes . METHOD _ DEF , 
 @ @ - 113 , 6 + 89 , 11 @ @ public final class ParameterAssignmentCheck extends AbstractCheck { 
 } 
 
 @ Override 
 + public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 public void beginTree ( DetailAST rootAST ) { 
 / / clear data 
 parameterNamesStack . clear ( ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 index e9d34f1 . . c2e3de9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / RequireThisCheck . java 
 @ @ - 184 , 16 + 184 , 11 @ @ public class RequireThisCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 - } 
 - 
 - @ Override 
 - public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { 
 TokenTypes . CLASS _ DEF , 
 TokenTypes . INTERFACE _ DEF , 
 @ @ - 206 , 6 + 201 , 11 @ @ public class RequireThisCheck extends AbstractCheck { 
 } 
 
 @ Override 
 + public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 public void beginTree ( DetailAST rootAST ) { 
 frames = new HashMap < > ( ) ; 
 current = null ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheck . java 
 index 275a730 . . 50fbee3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanExpressionCheck . java 
 @ @ - 53 , 17 + 53 , 17 @ @ public class SimplifyBooleanExpressionCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ TRUE , TokenTypes . LITERAL _ FALSE } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . LITERAL _ TRUE , TokenTypes . LITERAL _ FALSE } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java 
 index 00c38d0 . . 9300217 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / SimplifyBooleanReturnCheck . java 
 @ @ - 50 , 17 + 50 , 17 @ @ public class SimplifyBooleanReturnCheck 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . LITERAL _ IF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . LITERAL _ IF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / StringLiteralEqualityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / StringLiteralEqualityCheck . java 
 index 8a3b4cc . . 56b310a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / StringLiteralEqualityCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / StringLiteralEqualityCheck . java 
 @ @ - 48 , 17 + 48 , 17 @ @ public class StringLiteralEqualityCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . EQUAL , TokenTypes . NOT _ EQUAL } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . EQUAL , TokenTypes . NOT _ EQUAL } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 index 9b8f784 . . 0e7d9fd 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / VariableDeclarationUsageDistanceCheck . java 
 @ @ - 241 , 17 + 241 , 17 @ @ public class VariableDeclarationUsageDistanceCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . VARIABLE _ DEF } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStarImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStarImportCheck . java 
 index 86dc8b4 . . 224340a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStarImportCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStarImportCheck . java 
 @ @ - 87 , 12 + 87 , 12 @ @ public class AvoidStarImportCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java 
 index d407415 . . d21f5d9 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java 
 @ @ - 78 , 17 + 78 , 17 @ @ public class AvoidStaticImportCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . STATIC _ IMPORT } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . STATIC _ IMPORT } ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 index db07940 . . cc32ef2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / CustomImportOrderCheck . java 
 @ @ - 445 , 11 + 445 , 16 @ @ public class CustomImportOrderCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 + public int [ ] getRequiredTokens ( ) { 
 return new int [ ] { 
 TokenTypes . IMPORT , 
 TokenTypes . STATIC _ IMPORT , 
 @ @ - 458 , 11 + 463 , 6 @ @ public class CustomImportOrderCheck extends AbstractCheck { 
 } 
 
 @ Override 
 - public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 - } 
 - 
 - @ Override 
 public void beginTree ( DetailAST rootAST ) { 
 importToGroupList . clear ( ) ; 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java 
 index 00e2fb7 . . 706c7d1 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / IllegalImportCheck . java 
 @ @ - 133 , 17 + 133 , 17 @ @ public class IllegalImportCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java 
 index ea24b8e . . 72d8e61 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / ImportControlCheck . java 
 @ @ - 92 , 18 + 92 , 17 @ @ public class ImportControlCheck extends AbstractCheck implements ExternalResourc 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] { TokenTypes . PACKAGE _ DEF , TokenTypes . IMPORT , 
 - TokenTypes . STATIC _ IMPORT , } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { TokenTypes . PACKAGE _ DEF , TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT , } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / RedundantImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / RedundantImportCheck . java 
 index 2360422 . . 3c95c4e 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / RedundantImportCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / RedundantImportCheck . java 
 @ @ - 90 , 20 + 90 , 19 @ @ public class RedundantImportCheck 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return new int [ ] 
 - { TokenTypes . IMPORT , 
 - TokenTypes . STATIC _ IMPORT , 
 - TokenTypes . PACKAGE _ DEF , } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return new int [ ] { 
 + TokenTypes . IMPORT , TokenTypes . STATIC _ IMPORT , TokenTypes . PACKAGE _ DEF , 
 + } ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java 
 index 19a9f85 . . 23d0df8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / UnusedImportsCheck . java 
 @ @ - 116 , 31 + 116 , 11 @ @ public class UnusedImportsCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return new int [ ] { 
 - TokenTypes . IDENT , 
 - TokenTypes . IMPORT , 
 - TokenTypes . STATIC _ IMPORT , 
 - / / Definitions that may contain Javadoc . . . 
 - TokenTypes . PACKAGE _ DEF , 
 - TokenTypes . ANNOTATION _ DEF , 
 - TokenTypes . ANNOTATION _ FIELD _ DEF , 
 - TokenTypes . ENUM _ DEF , 
 - TokenTypes . ENUM _ CONSTANT _ DEF , 
 - TokenTypes . CLASS _ DEF , 
 - TokenTypes . INTERFACE _ DEF , 
 - TokenTypes . METHOD _ DEF , 
 - TokenTypes . CTOR _ DEF , 
 - TokenTypes . VARIABLE _ DEF , 
 - } ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getDefaultTokens ( ) ; 
 - } 
 - 
 - @ Override 
 - public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { 
 TokenTypes . IDENT , 
 TokenTypes . IMPORT , 
 @ @ - 160 , 6 + 140 , 11 @ @ public class UnusedImportsCheck extends AbstractCheck { 
 } 
 
 @ Override 
 + public int [ ] getAcceptableTokens ( ) { 
 + return getRequiredTokens ( ) ; 
 + } 
 + 
 + @ Override 
 public void visitToken ( DetailAST ast ) { 
 if ( ast . getType ( ) = = TokenTypes . IDENT ) { 
 if ( collect ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 index e382c72 . . f02bc35 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / IndentationCheck . java 
 @ @ - 300 , 17 + 300 , 17 @ @ public class IndentationCheck extends AbstractCheck { 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getAcceptableTokens ( ) { 
 - return handlerFactory . getHandledTypes ( ) ; 
 + return getRequiredTokens ( ) ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return getAcceptableTokens ( ) ; 
 + return handlerFactory . getHandledTypes ( ) ; 
 } 
 
 @ Override
