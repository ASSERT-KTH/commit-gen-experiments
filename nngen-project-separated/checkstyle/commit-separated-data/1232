BLEU SCORE: 0.044568827606990644

TEST MSG: Issue # 3106 : fixed annotation location check with no modifiers
GENERATED MSG: Fix value pair representation in SuppressWarnings check . # 1246

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> index 73c1b3c . . ea29cea 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> @ @ - 225 , 7 + 225 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { <nl> * @ return Some javadoc . <nl> * / <nl> private static boolean hasAnnotations ( DetailAST modifierNode ) { <nl> - return modifierNode . findFirstToken ( TokenTypes . ANNOTATION ) ! = null ; <nl> + return modifierNode ! = null & & modifierNode . findFirstToken ( TokenTypes . ANNOTATION ) ! = null ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> index 573df18 . . 9e5aa53 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java <nl> @ @ - 148 , 4 + 148 , 14 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { <nl> verify ( checkConfig , getPath ( " InputAnnotationLocation2 . java " ) , expected ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testAllTokens ( ) throws Exception { <nl> + final DefaultConfiguration checkConfig = createCheckConfig ( AnnotationLocationCheck . class ) ; <nl> + checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " <nl> + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , " <nl> + + " LITERAL _ THROWS , IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , " <nl> + + " ANNOTATION _ FIELD _ DEF " ) ; <nl> + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + verify ( checkConfig , getPath ( " InputAnnotationLocation3 . java " ) , expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation3 . java <nl> new file mode 100644 <nl> index 0000000 . . d8512ef <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation3 . java <nl> @ @ - 0 , 0 + 1 , 20 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . annotation ; <nl> + <nl> + public class InputAnnotationLocation3 { <nl> + public static void main ( String [ ] args ) { <nl> + final Foo foo = new Foo ( ) ; <nl> + foo . bar ( new Bar < Foo > ( ) { <nl> + public void foo ( ) { <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + static class Foo { <nl> + void bar ( Bar < Foo > bar ) { <nl> + } <nl> + } <nl> + <nl> + static abstract class Bar < T > { <nl> + abstract void foo ( ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java <nl> index 1a95cca . . 6f8f346 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java <nl> @ @ - 122 , 7 + 122 , 8 @ @ public class AvoidStaticImportCheck <nl> / / a starred import <nl> final String excludeMinusDotStar = <nl> exclude . substring ( 0 , exclude . length ( ) - 2 ) ; <nl> - if ( classOrStaticMember . startsWith ( excludeMinusDotStar ) ) { <nl> + if ( classOrStaticMember . startsWith ( excludeMinusDotStar ) <nl> + & & ! classOrStaticMember . equals ( excludeMinusDotStar ) ) { <nl> final String member = <nl> classOrStaticMember . substring ( <nl> excludeMinusDotStar . length ( ) + 1 ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java <nl> index 1a3fa96 . . 1d8304f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java <nl> @ @ - 42 , 6 + 42 , 8 @ @ public class AvoidStaticImportTest <nl> " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , <nl> " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , <nl> } ; <nl> <nl> verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> @ @ - 53 , 10 + 55 , 12 @ @ public class AvoidStaticImportTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( AvoidStaticImportCheck . class ) ; <nl> checkConfig . addAttribute ( " excludes " , " java . io . File . * , sun . net . ftpclient . FtpClient . * " ) ; <nl> - / / allow the java . io . File . * / sun . net . ftpclient . FtpClient . * star imports <nl> + / / allow the " java . io . File . * " AND " sun . net . ftpclient . FtpClient . * " star imports <nl> final String [ ] expected = { <nl> " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> } <nl> @ @ - 73 , 6 + 77 , 8 @ @ public class AvoidStaticImportTest <nl> " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , <nl> " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> } <nl> @ @ - 83 , 16 + 89 , 36 @ @ public class AvoidStaticImportTest <nl> final DefaultConfiguration checkConfig = <nl> createCheckConfig ( AvoidStaticImportCheck . class ) ; <nl> checkConfig . addAttribute ( <nl> - " excludes " , <nl> - " java . io . File . listRoots . listRoots , javax . swing . WindowConstants , " <nl> + " excludes " , / / should NOT mask anything <nl> + " java . io . File . listRoots . listRoots , javax . swing . WindowConstants , javax . swing . * , " <nl> + " sun . net . ftpclient . FtpClient . * FtpClient , sun . net . ftpclient . FtpClientjunk , java . io . File . listRootsmorejunk " ) ; <nl> - / / allow the java . io . File . listRoots member imports <nl> final String [ ] expected = { <nl> " 23 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , <nl> " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , <nl> " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testInnerClassMemberExcludesStar ( ) <nl> + throws Exception { <nl> + final DefaultConfiguration checkConfig = <nl> + createCheckConfig ( AvoidStaticImportCheck . class ) ; <nl> + checkConfig . addAttribute ( <nl> + " excludes " , / / should mask com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one <nl> + " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . * " ) ; <nl> + final String [ ] expected = { <nl> + " 23 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , <nl> + " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> + " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , <nl> + " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , <nl> + " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , <nl> + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , <nl> } ; <nl> verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; <nl> } <nl> @ @ - 106 , 4 + 132 , 5 @ @ public class AvoidStaticImportTest <nl> <nl> assertArrayEquals ( expected , actual ) ; <nl> } <nl> + <nl> } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java <nl> index 7551523 . . 209a3ff 100644 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java <nl> @ @ - 26 , 6 + 26 , 8 @ @ import static javax . swing . WindowConstants . * ; <nl> import static javax . swing . WindowConstants . * ; <nl> import static java . io . File . createTempFile ; <nl> import static java . io . File . pathSeparator ; <nl> + import static com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass ; <nl> + import static com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one ; <nl> <nl> import java . awt . Component ; <nl> import java . awt . Graphics2D ; <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java <nl> new file mode 100644 <nl> index 0000000 . . 8e9cbab <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package com . puppycrawl . tools . checkstyle . imports ; <nl> + <nl> + public class InputAvoidStaticImportNestedClass { <nl> + public static Integer zero = 0 ; <nl> + <nl> + public static class InnerClass { <nl> + public static Integer one = 1 ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 index 73c1b3c . . ea29cea 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 @ @ - 225 , 7 + 225 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { 
 * @ return Some javadoc . 
 * / 
 private static boolean hasAnnotations ( DetailAST modifierNode ) { 
 - return modifierNode . findFirstToken ( TokenTypes . ANNOTATION ) ! = null ; 
 + return modifierNode ! = null & & modifierNode . findFirstToken ( TokenTypes . ANNOTATION ) ! = null ; 
 } 
 
 / * * 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 index 573df18 . . 9e5aa53 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheckTest . java 
 @ @ - 148 , 4 + 148 , 14 @ @ public class AnnotationLocationCheckTest extends BaseCheckTestSupport { 
 verify ( checkConfig , getPath ( " InputAnnotationLocation2 . java " ) , expected ) ; 
 } 
 
 + @ Test 
 + public void testAllTokens ( ) throws Exception { 
 + final DefaultConfiguration checkConfig = createCheckConfig ( AnnotationLocationCheck . class ) ; 
 + checkConfig . addAttribute ( " tokens " , " CLASS _ DEF , INTERFACE _ DEF , ENUM _ DEF , METHOD _ DEF , " 
 + + " CTOR _ DEF , VARIABLE _ DEF , PARAMETER _ DEF , ANNOTATION _ DEF , TYPECAST , " 
 + + " LITERAL _ THROWS , IMPLEMENTS _ CLAUSE , TYPE _ ARGUMENT , LITERAL _ NEW , DOT , " 
 + + " ANNOTATION _ FIELD _ DEF " ) ; 
 + final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + verify ( checkConfig , getPath ( " InputAnnotationLocation3 . java " ) , expected ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation3 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation3 . java 
 new file mode 100644 
 index 0000000 . . d8512ef 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / annotation / InputAnnotationLocation3 . java 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . annotation ; 
 + 
 + public class InputAnnotationLocation3 { 
 + public static void main ( String [ ] args ) { 
 + final Foo foo = new Foo ( ) ; 
 + foo . bar ( new Bar < Foo > ( ) { 
 + public void foo ( ) { 
 + } 
 + } ) ; 
 + } 
 + 
 + static class Foo { 
 + void bar ( Bar < Foo > bar ) { 
 + } 
 + } 
 + 
 + static abstract class Bar < T > { 
 + abstract void foo ( ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java 
 index 1a95cca . . 6f8f346 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportCheck . java 
 @ @ - 122 , 7 + 122 , 8 @ @ public class AvoidStaticImportCheck 
 / / a starred import 
 final String excludeMinusDotStar = 
 exclude . substring ( 0 , exclude . length ( ) - 2 ) ; 
 - if ( classOrStaticMember . startsWith ( excludeMinusDotStar ) ) { 
 + if ( classOrStaticMember . startsWith ( excludeMinusDotStar ) 
 + & & ! classOrStaticMember . equals ( excludeMinusDotStar ) ) { 
 final String member = 
 classOrStaticMember . substring ( 
 excludeMinusDotStar . length ( ) + 1 ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java 
 index 1a3fa96 . . 1d8304f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / imports / AvoidStaticImportTest . java 
 @ @ - 42 , 6 + 42 , 8 @ @ public class AvoidStaticImportTest 
 " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , 
 " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , 
 } ; 
 
 verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 @ @ - 53 , 10 + 55 , 12 @ @ public class AvoidStaticImportTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( AvoidStaticImportCheck . class ) ; 
 checkConfig . addAttribute ( " excludes " , " java . io . File . * , sun . net . ftpclient . FtpClient . * " ) ; 
 - / / allow the java . io . File . * / sun . net . ftpclient . FtpClient . * star imports 
 + / / allow the " java . io . File . * " AND " sun . net . ftpclient . FtpClient . * " star imports 
 final String [ ] expected = { 
 " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , 
 } ; 
 verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 } 
 @ @ - 73 , 6 + 77 , 8 @ @ public class AvoidStaticImportTest 
 " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , 
 " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , 
 } ; 
 verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 } 
 @ @ - 83 , 16 + 89 , 36 @ @ public class AvoidStaticImportTest 
 final DefaultConfiguration checkConfig = 
 createCheckConfig ( AvoidStaticImportCheck . class ) ; 
 checkConfig . addAttribute ( 
 - " excludes " , 
 - " java . io . File . listRoots . listRoots , javax . swing . WindowConstants , " 
 + " excludes " , / / should NOT mask anything 
 + " java . io . File . listRoots . listRoots , javax . swing . WindowConstants , javax . swing . * , " 
 + " sun . net . ftpclient . FtpClient . * FtpClient , sun . net . ftpclient . FtpClientjunk , java . io . File . listRootsmorejunk " ) ; 
 - / / allow the java . io . File . listRoots member imports 
 final String [ ] expected = { 
 " 23 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , 
 " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , 
 " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 + " 30 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one " ) , 
 + } ; 
 + verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 + } 
 + 
 + @ Test 
 + public void testInnerClassMemberExcludesStar ( ) 
 + throws Exception { 
 + final DefaultConfiguration checkConfig = 
 + createCheckConfig ( AvoidStaticImportCheck . class ) ; 
 + checkConfig . addAttribute ( 
 + " excludes " , / / should mask com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one 
 + " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . * " ) ; 
 + final String [ ] expected = { 
 + " 23 : " + getCheckMessage ( MSG _ KEY , " java . io . File . listRoots " ) , 
 + " 25 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 + " 26 : " + getCheckMessage ( MSG _ KEY , " javax . swing . WindowConstants . * " ) , 
 + " 27 : " + getCheckMessage ( MSG _ KEY , " java . io . File . createTempFile " ) , 
 + " 28 : " + getCheckMessage ( MSG _ KEY , " java . io . File . pathSeparator " ) , 
 + " 29 : " + getCheckMessage ( MSG _ KEY , " com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass " ) , 
 } ; 
 verify ( checkConfig , getPath ( " imports " + File . separator + " InputAvoidStaticImportCheck . java " ) , expected ) ; 
 } 
 @ @ - 106 , 4 + 132 , 5 @ @ public class AvoidStaticImportTest 
 
 assertArrayEquals ( expected , actual ) ; 
 } 
 + 
 } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java 
 index 7551523 . . 209a3ff 100644 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportCheck . java 
 @ @ - 26 , 6 + 26 , 8 @ @ import static javax . swing . WindowConstants . * ; 
 import static javax . swing . WindowConstants . * ; 
 import static java . io . File . createTempFile ; 
 import static java . io . File . pathSeparator ; 
 + import static com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass ; 
 + import static com . puppycrawl . tools . checkstyle . imports . InputAvoidStaticImportNestedClass . InnerClass . one ; 
 
 import java . awt . Component ; 
 import java . awt . Graphics2D ; 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java 
 new file mode 100644 
 index 0000000 . . 8e9cbab 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / imports / InputAvoidStaticImportNestedClass . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package com . puppycrawl . tools . checkstyle . imports ; 
 + 
 + public class InputAvoidStaticImportNestedClass { 
 + public static Integer zero = 0 ; 
 + 
 + public static class InnerClass { 
 + public static Integer one = 1 ; 
 + } 
 + }
