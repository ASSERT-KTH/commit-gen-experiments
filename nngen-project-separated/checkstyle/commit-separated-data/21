BLEU SCORE: 0.031247197904994937

TEST MSG: Issue # 6345 : Fix improper RightCurly to follow code style
GENERATED MSG: Decrease visibility of public constructor in non - public classes . # 1555

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java <nl> index 66016cd . . c510c33 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java <nl> @ @ - 54 , 7 + 54 , 8 @ @ public final class DetectorOptions { <nl> private Pattern pattern ; <nl> <nl> / * * Default constructor . * / <nl> - private DetectorOptions ( ) { } <nl> + private DetectorOptions ( ) { <nl> + } <nl> <nl> / * * <nl> * Returns new Builder object .
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractFormatCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractFormatCheck . java <nl> index 74736d0 . . 4d832f8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractFormatCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractFormatCheck . java <nl> @ @ - 100 , 7 + 100 , 7 @ @ public abstract class AbstractFormatCheck <nl> private void updateRegexp ( String regexpFormat , int compileFlagsParam ) { <nl> try { <nl> regexp = Pattern . compile ( regexpFormat , compileFlagsParam ) ; <nl> - this . format = regexpFormat ; <nl> + format = regexpFormat ; <nl> compileFlags | = compileFlagsParam ; <nl> } <nl> catch ( final PatternSyntaxException e ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> index 7112ca3 . . 83c073f 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java <nl> @ @ - 453 , 7 + 453 , 7 @ @ public abstract class AbstractTypeAwareCheck extends Check { <nl> * @ param clazz { @ code Class } to associate with . <nl> * / <nl> private void setClazz ( Class < ? > clazz ) { <nl> - this . classObj = clazz ; <nl> + classObj = clazz ; <nl> loadable = clazz ! = null ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> index 41f0a3c . . 78592ca 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java <nl> @ @ - 182 , 7 + 182 , 7 @ @ public final class AnnotationUseStyleCheck extends Check { <nl> * @ throws ConversionException if cannot convert string . <nl> * / <nl> public void setElementStyle ( final String style ) { <nl> - this . elementStyle = getOption ( ElementStyle . class , style ) ; <nl> + elementStyle = getOption ( ElementStyle . class , style ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 192 , 7 + 192 , 7 @ @ public final class AnnotationUseStyleCheck extends Check { <nl> * @ throws ConversionException if cannot convert string . <nl> * / <nl> public void setTrailingArrayComma ( final String comma ) { <nl> - this . trailingArrayComma = getOption ( TrailingArrayComma . class , comma ) ; <nl> + trailingArrayComma = getOption ( TrailingArrayComma . class , comma ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 202 , 7 + 202 , 7 @ @ public final class AnnotationUseStyleCheck extends Check { <nl> * @ throws ConversionException if cannot convert string . <nl> * / <nl> public void setClosingParens ( final String parens ) { <nl> - this . closingParens = getOption ( ClosingParens . class , parens ) ; <nl> + closingParens = getOption ( ClosingParens . class , parens ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 386 , 12 + 386 , 12 @ @ public final class AnnotationUseStyleCheck extends Check { <nl> / / comma can be null if array is empty <nl> final DetailAST comma = rCurly . getPreviousSibling ( ) ; <nl> <nl> - if ( this . trailingArrayComma = = TrailingArrayComma . ALWAYS <nl> + if ( trailingArrayComma = = TrailingArrayComma . ALWAYS <nl> & & ( comma = = null | | comma . getType ( ) ! = TokenTypes . COMMA ) ) { <nl> log ( rCurly . getLineNo ( ) , <nl> rCurly . getColumnNo ( ) , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; <nl> } <nl> - else if ( this . trailingArrayComma = = TrailingArrayComma . NEVER <nl> + else if ( trailingArrayComma = = TrailingArrayComma . NEVER <nl> & & comma ! = null & & comma . getType ( ) = = TokenTypes . COMMA ) { <nl> log ( comma . getLineNo ( ) , <nl> comma . getColumnNo ( ) , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) ;

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java 
 index 66016cd . . c510c33 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / regexp / DetectorOptions . java 
 @ @ - 54 , 7 + 54 , 8 @ @ public final class DetectorOptions { 
 private Pattern pattern ; 
 
 / * * Default constructor . * / 
 - private DetectorOptions ( ) { } 
 + private DetectorOptions ( ) { 
 + } 
 
 / * * 
 * Returns new Builder object .

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractFormatCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractFormatCheck . java 
 index 74736d0 . . 4d832f8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractFormatCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractFormatCheck . java 
 @ @ - 100 , 7 + 100 , 7 @ @ public abstract class AbstractFormatCheck 
 private void updateRegexp ( String regexpFormat , int compileFlagsParam ) { 
 try { 
 regexp = Pattern . compile ( regexpFormat , compileFlagsParam ) ; 
 - this . format = regexpFormat ; 
 + format = regexpFormat ; 
 compileFlags | = compileFlagsParam ; 
 } 
 catch ( final PatternSyntaxException e ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 index 7112ca3 . . 83c073f 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / AbstractTypeAwareCheck . java 
 @ @ - 453 , 7 + 453 , 7 @ @ public abstract class AbstractTypeAwareCheck extends Check { 
 * @ param clazz { @ code Class } to associate with . 
 * / 
 private void setClazz ( Class < ? > clazz ) { 
 - this . classObj = clazz ; 
 + classObj = clazz ; 
 loadable = clazz ! = null ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 index 41f0a3c . . 78592ca 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationUseStyleCheck . java 
 @ @ - 182 , 7 + 182 , 7 @ @ public final class AnnotationUseStyleCheck extends Check { 
 * @ throws ConversionException if cannot convert string . 
 * / 
 public void setElementStyle ( final String style ) { 
 - this . elementStyle = getOption ( ElementStyle . class , style ) ; 
 + elementStyle = getOption ( ElementStyle . class , style ) ; 
 } 
 
 / * * 
 @ @ - 192 , 7 + 192 , 7 @ @ public final class AnnotationUseStyleCheck extends Check { 
 * @ throws ConversionException if cannot convert string . 
 * / 
 public void setTrailingArrayComma ( final String comma ) { 
 - this . trailingArrayComma = getOption ( TrailingArrayComma . class , comma ) ; 
 + trailingArrayComma = getOption ( TrailingArrayComma . class , comma ) ; 
 } 
 
 / * * 
 @ @ - 202 , 7 + 202 , 7 @ @ public final class AnnotationUseStyleCheck extends Check { 
 * @ throws ConversionException if cannot convert string . 
 * / 
 public void setClosingParens ( final String parens ) { 
 - this . closingParens = getOption ( ClosingParens . class , parens ) ; 
 + closingParens = getOption ( ClosingParens . class , parens ) ; 
 } 
 
 / * * 
 @ @ - 386 , 12 + 386 , 12 @ @ public final class AnnotationUseStyleCheck extends Check { 
 / / comma can be null if array is empty 
 final DetailAST comma = rCurly . getPreviousSibling ( ) ; 
 
 - if ( this . trailingArrayComma = = TrailingArrayComma . ALWAYS 
 + if ( trailingArrayComma = = TrailingArrayComma . ALWAYS 
 & & ( comma = = null | | comma . getType ( ) ! = TokenTypes . COMMA ) ) { 
 log ( rCurly . getLineNo ( ) , 
 rCurly . getColumnNo ( ) , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ MISSING ) ; 
 } 
 - else if ( this . trailingArrayComma = = TrailingArrayComma . NEVER 
 + else if ( trailingArrayComma = = TrailingArrayComma . NEVER 
 & & comma ! = null & & comma . getType ( ) = = TokenTypes . COMMA ) { 
 log ( comma . getLineNo ( ) , 
 comma . getColumnNo ( ) , MSG _ KEY _ ANNOTATION _ TRAILING _ COMMA _ PRESENT ) ;
