BLEU SCORE: 0.23961829057131984

TEST MSG: [ maven - release - plugin ] prepare release checkstyle - 6 . 12 . 1
GENERATED MSG: update to 6 . 12 . 1 - SNAPSHOT

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index a72cf1b . . 3e6a88a 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 22 , 7 + 22 , 7 @ @ <nl> <nl> < groupId > com . puppycrawl . tools < / groupId > <nl> < artifactId > checkstyle < / artifactId > <nl> - < version > 6 . 12 . 1 - SNAPSHOT < / version > <nl> + < version > 6 . 12 . 1 < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > checkstyle < / name >
NEAREST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index edc8052 . . ca28bf1 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 37 , 7 + 37 , 7 @ @ <nl> files = " AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java " / > <nl> <nl> < ! - - Tone down the checking for test code - - > <nl> - < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 325 " / > <nl> + < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 324 " / > <nl> < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java <nl> index 56c3d88 . . 3df12f7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java <nl> @ @ - 19 , 18 + 19 , 21 @ @ <nl> <nl> package com . puppycrawl . tools . checkstyle . checks . naming ; <nl> <nl> + import java . util . regex . Pattern ; <nl> + <nl> + import com . puppycrawl . tools . checkstyle . api . Check ; <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . FullIdent ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> - import com . puppycrawl . tools . checkstyle . checks . AbstractFormatCheck ; <nl> + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; <nl> <nl> / * * <nl> * < p > <nl> * Checks that package names conform to a format specified <nl> * by the format property . The format is a <nl> - * { @ link java . util . regex . Pattern regular expression } <nl> + * { @ link Pattern regular expression } <nl> * and defaults to <nl> - * < strong > ^ [ a - z ] + ( \ . [ a - zA - Z _ ] [ a - zA - Z _ 0 - 9 ] * ) * $ < / strong > . <nl> + * < strong > ^ [ a - z ] + ( \ . [ a - zA - Z _ ] [ a - zA - Z _ 0 - 9 _ ] * ) * $ < / strong > . <nl> * < / p > <nl> * < p > <nl> * The default format has been chosen to match the requirements in the <nl> @ @ - 54 , 22 + 57 , 36 @ @ import com . puppycrawl . tools . checkstyle . checks . AbstractFormatCheck ; <nl> * < pre > <nl> * & lt ; module name = " PackageName " & gt ; <nl> * & lt ; property name = " format " <nl> - * value = " ^ com \ . puppycrawl \ . tools \ . checkstyle ( \ \ . [ a - zA - Z _ ] [ a - zA - Z _ 0 - 9 ] * ) * $ " / & gt ; <nl> + * value = " ^ com \ . puppycrawl \ . tools \ . checkstyle ( \ . [ a - zA - Z _ ] [ a - zA - Z _ 0 - 9 ] * ) * $ " / & gt ; <nl> * & lt ; / module & gt ; <nl> * < / pre > <nl> * <nl> * @ author Oliver Burn <nl> * / <nl> public class PackageNameCheck <nl> - extends AbstractFormatCheck { <nl> + extends Check { <nl> + / * * <nl> + * A key is pointing to the warning message text in " messages . properties " <nl> + * file . <nl> + * / <nl> + public static final String MSG _ KEY = " name . invalidPattern " ; <nl> + <nl> + / * * The format string of the regexp . * / <nl> + / / Uppercase letters seem rather uncommon , but they ' re allowed in <nl> + / / http : / / docs . oracle . com / javase / specs / <nl> + / / second _ edition / html / packages . doc . html # 40169 <nl> + private String format = " ^ [ a - z ] + ( \ \ . [ a - zA - Z _ ] [ a - zA - Z0 - 9 _ ] * ) * $ " ; <nl> + / * * The regexp to match against . * / <nl> + private Pattern regexp = Pattern . compile ( format ) ; <nl> + <nl> / * * <nl> - * Creates a new { @ code PackageNameCheck } instance . <nl> + * Set the format to the specified regular expression . <nl> + * @ param format a { @ code String } value <nl> + * @ throws org . apache . commons . beanutils . ConversionException unable to parse format <nl> * / <nl> - public PackageNameCheck ( ) { <nl> - / / Uppercase letters seem rather uncommon , but they ' re allowed in <nl> - / / http : / / docs . oracle . com / javase / specs / <nl> - / / second _ edition / html / packages . doc . html # 40169 <nl> - super ( " ^ [ a - z ] + ( \ \ . [ a - zA - Z _ ] [ a - zA - Z0 - 9 _ ] * ) * $ " ) ; <nl> + public final void setFormat ( String format ) { <nl> + this . format = format ; <nl> + regexp = CommonUtils . createPattern ( format ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 91 , 12 + 108 , 12 @ @ public class PackageNameCheck <nl> public void visitToken ( DetailAST ast ) { <nl> final DetailAST nameAST = ast . getLastChild ( ) . getPreviousSibling ( ) ; <nl> final FullIdent full = FullIdent . createFullIdent ( nameAST ) ; <nl> - if ( ! getRegexp ( ) . matcher ( full . getText ( ) ) . find ( ) ) { <nl> + if ( ! regexp . matcher ( full . getText ( ) ) . find ( ) ) { <nl> log ( full . getLineNo ( ) , <nl> full . getColumnNo ( ) , <nl> - " name . invalidPattern " , <nl> + MSG _ KEY , <nl> full . getText ( ) , <nl> - getFormat ( ) ) ; <nl> + format ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> index 965724d . . 15604c3 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java <nl> @ @ - 125 , 7 + 125 , 6 @ @ public class XDocsPagesTest { <nl> " MemberNameCheck . compileFlags " , <nl> " MethodNameCheck . compileFlags " , <nl> " MethodTypeParameterNameCheck . compileFlags " , <nl> - " PackageNameCheck . compileFlags " , <nl> " ParameterNameCheck . compileFlags " , <nl> " StaticVariableNameCheck . compileFlags " , <nl> " TypeNameCheck . compileFlags " ,

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index a72cf1b . . 3e6a88a 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 22 , 7 + 22 , 7 @ @ 
 
 < groupId > com . puppycrawl . tools < / groupId > 
 < artifactId > checkstyle < / artifactId > 
 - < version > 6 . 12 . 1 - SNAPSHOT < / version > 
 + < version > 6 . 12 . 1 < / version > 
 < packaging > jar < / packaging > 
 
 < name > checkstyle < / name >

NEAREST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index edc8052 . . ca28bf1 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 37 , 7 + 37 , 7 @ @ 
 files = " AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java " / > 
 
 < ! - - Tone down the checking for test code - - > 
 - < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 325 " / > 
 + < suppress checks = " CyclomaticComplexity " files = " [ \ \ / ] XDocsPagesTest \ . java " lines = " 324 " / > 
 < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 < suppress checks = " ImportControl " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 < suppress checks = " Javadoc " files = " . * [ \ \ / ] src [ \ \ / ] ( test | it ) [ \ \ / ] " / > 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java 
 index 56c3d88 . . 3df12f7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / PackageNameCheck . java 
 @ @ - 19 , 18 + 19 , 21 @ @ 
 
 package com . puppycrawl . tools . checkstyle . checks . naming ; 
 
 + import java . util . regex . Pattern ; 
 + 
 + import com . puppycrawl . tools . checkstyle . api . Check ; 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . FullIdent ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 - import com . puppycrawl . tools . checkstyle . checks . AbstractFormatCheck ; 
 + import com . puppycrawl . tools . checkstyle . utils . CommonUtils ; 
 
 / * * 
 * < p > 
 * Checks that package names conform to a format specified 
 * by the format property . The format is a 
 - * { @ link java . util . regex . Pattern regular expression } 
 + * { @ link Pattern regular expression } 
 * and defaults to 
 - * < strong > ^ [ a - z ] + ( \ . [ a - zA - Z _ ] [ a - zA - Z _ 0 - 9 ] * ) * $ < / strong > . 
 + * < strong > ^ [ a - z ] + ( \ . [ a - zA - Z _ ] [ a - zA - Z _ 0 - 9 _ ] * ) * $ < / strong > . 
 * < / p > 
 * < p > 
 * The default format has been chosen to match the requirements in the 
 @ @ - 54 , 22 + 57 , 36 @ @ import com . puppycrawl . tools . checkstyle . checks . AbstractFormatCheck ; 
 * < pre > 
 * & lt ; module name = " PackageName " & gt ; 
 * & lt ; property name = " format " 
 - * value = " ^ com \ . puppycrawl \ . tools \ . checkstyle ( \ \ . [ a - zA - Z _ ] [ a - zA - Z _ 0 - 9 ] * ) * $ " / & gt ; 
 + * value = " ^ com \ . puppycrawl \ . tools \ . checkstyle ( \ . [ a - zA - Z _ ] [ a - zA - Z _ 0 - 9 ] * ) * $ " / & gt ; 
 * & lt ; / module & gt ; 
 * < / pre > 
 * 
 * @ author Oliver Burn 
 * / 
 public class PackageNameCheck 
 - extends AbstractFormatCheck { 
 + extends Check { 
 + / * * 
 + * A key is pointing to the warning message text in " messages . properties " 
 + * file . 
 + * / 
 + public static final String MSG _ KEY = " name . invalidPattern " ; 
 + 
 + / * * The format string of the regexp . * / 
 + / / Uppercase letters seem rather uncommon , but they ' re allowed in 
 + / / http : / / docs . oracle . com / javase / specs / 
 + / / second _ edition / html / packages . doc . html # 40169 
 + private String format = " ^ [ a - z ] + ( \ \ . [ a - zA - Z _ ] [ a - zA - Z0 - 9 _ ] * ) * $ " ; 
 + / * * The regexp to match against . * / 
 + private Pattern regexp = Pattern . compile ( format ) ; 
 + 
 / * * 
 - * Creates a new { @ code PackageNameCheck } instance . 
 + * Set the format to the specified regular expression . 
 + * @ param format a { @ code String } value 
 + * @ throws org . apache . commons . beanutils . ConversionException unable to parse format 
 * / 
 - public PackageNameCheck ( ) { 
 - / / Uppercase letters seem rather uncommon , but they ' re allowed in 
 - / / http : / / docs . oracle . com / javase / specs / 
 - / / second _ edition / html / packages . doc . html # 40169 
 - super ( " ^ [ a - z ] + ( \ \ . [ a - zA - Z _ ] [ a - zA - Z0 - 9 _ ] * ) * $ " ) ; 
 + public final void setFormat ( String format ) { 
 + this . format = format ; 
 + regexp = CommonUtils . createPattern ( format ) ; 
 } 
 
 @ Override 
 @ @ - 91 , 12 + 108 , 12 @ @ public class PackageNameCheck 
 public void visitToken ( DetailAST ast ) { 
 final DetailAST nameAST = ast . getLastChild ( ) . getPreviousSibling ( ) ; 
 final FullIdent full = FullIdent . createFullIdent ( nameAST ) ; 
 - if ( ! getRegexp ( ) . matcher ( full . getText ( ) ) . find ( ) ) { 
 + if ( ! regexp . matcher ( full . getText ( ) ) . find ( ) ) { 
 log ( full . getLineNo ( ) , 
 full . getColumnNo ( ) , 
 - " name . invalidPattern " , 
 + MSG _ KEY , 
 full . getText ( ) , 
 - getFormat ( ) ) ; 
 + format ) ; 
 } 
 } 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 index 965724d . . 15604c3 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / XDocsPagesTest . java 
 @ @ - 125 , 7 + 125 , 6 @ @ public class XDocsPagesTest { 
 " MemberNameCheck . compileFlags " , 
 " MethodNameCheck . compileFlags " , 
 " MethodTypeParameterNameCheck . compileFlags " , 
 - " PackageNameCheck . compileFlags " , 
 " ParameterNameCheck . compileFlags " , 
 " StaticVariableNameCheck . compileFlags " , 
 " TypeNameCheck . compileFlags " ,
