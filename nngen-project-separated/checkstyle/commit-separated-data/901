BLEU SCORE: 0.046120504097214035

TEST MSG: Issue # 3986 : Splitting inputs by Test for AnonInnerLength
GENERATED MSG: Issue # 3900 : Modified TypecastParenPadCheckTest . java and moved its test - files to a subdir

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheckTest . java <nl> index 56f99ec . . 429d758 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheckTest . java <nl> @ @ - 40 , 7 + 40 , 8 @ @ public class AnonInnerLengthCheckTest extends BaseCheckTestSupport { <nl> @ Override <nl> protected String getPath ( String filename ) throws IOException { <nl> return super . getPath ( " checks " + File . separator <nl> - + " sizes " + File . separator + filename ) ; <nl> + + " sizes " + File . separator + " anoninnerlength " <nl> + + File . separator + filename ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / InputAnonInnerLength . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / InputAnonInnerLength . java <nl> deleted file mode 100644 <nl> index 6dfb0a5 . . 0000000 <nl> - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / InputAnonInnerLength . java <nl> + + + / dev / null <nl> @ @ - 1 , 123 + 0 , 0 @ @ <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / Test case file for checkstyle . <nl> - / / Created : 2002 <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - package com . puppycrawl . tools . checkstyle . checks . sizes ; <nl> - <nl> - import java . awt . event . MouseEvent ; <nl> - import java . awt . event . MouseAdapter ; <nl> - import javax . swing . JButton ; <nl> - <nl> - / * * <nl> - * Tests for length of anonymous inner types <nl> - * @ author Rob Worth <nl> - * @ author Lars K ü hne <nl> - * * / <nl> - public class InputAnonInnerLength <nl> - { <nl> - / * * <nl> - * Check that instantiations of normal classes work OK . <nl> - * / <nl> - private JButton mButton = new JButton ( ) ; <nl> - <nl> - private class MyInner <nl> - { <nl> - private MyInner ( int [ ] anArray ) <nl> - { <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * the AnonInnerLengthCheck works with ' new ' and RCURLY - check that <nl> - * it will not confuse constructors calls with array params with <nl> - * anon inners . <nl> - * / <nl> - private MyInner myInner = new MyInner ( new int [ ] { <nl> - / / make the array span multiple lines <nl> - 1 , <nl> - 2 , <nl> - 3 , <nl> - 4 , <nl> - 5 , <nl> - 6 , <nl> - 7 , <nl> - } <nl> - ) ; <nl> - <nl> - / * * <nl> - anon inner in member variable initialization which is 21 lines long <nl> - * / <nl> - private Runnable mRunnable1 = new Runnable ( ) { <nl> - public void run ( ) / / should not have to be documented , class is anon . <nl> - { <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - } <nl> - } ; <nl> - <nl> - / * * <nl> - anon inner in member variable initialization which is 20 lines long <nl> - * / <nl> - private Runnable mRunnable2 = new Runnable ( ) { <nl> - public void run ( ) / / should not have to be documented , class is anon . <nl> - { <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - System . identityHashCode ( " running " ) ; <nl> - } <nl> - } ; <nl> - <nl> - / * * <nl> - anon inner in constructor . <nl> - * / <nl> - InputAnonInnerLength ( ) <nl> - { <nl> - mButton . addMouseListener ( new MouseAdapter ( ) <nl> - { <nl> - public void mouseClicked ( MouseEvent aEv ) <nl> - { <nl> - System . identityHashCode ( " click " ) ; <nl> - } <nl> - } ) ; <nl> - } <nl> - <nl> - / * * <nl> - anon inner in method <nl> - * / <nl> - public void addInputAnonInner ( ) <nl> - { <nl> - mButton . addMouseListener ( new MouseAdapter ( ) <nl> - { <nl> - public void mouseClicked ( MouseEvent aEv ) <nl> - { <nl> - System . identityHashCode ( " click " ) ; <nl> - } <nl> - } ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / anoninnerlength / InputAnonInnerLength . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / anoninnerlength / InputAnonInnerLength . java <nl> new file mode 100644 <nl> index 0000000 . . 9768690 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / anoninnerlength / InputAnonInnerLength . java <nl> @ @ - 0 , 0 + 1 , 123 @ @ <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / Test case file for checkstyle . <nl> + / / Created : 2002 <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + package com . puppycrawl . tools . checkstyle . checks . sizes . anoninnerlength ; <nl> + <nl> + import java . awt . event . MouseEvent ; <nl> + import java . awt . event . MouseAdapter ; <nl> + import javax . swing . JButton ; <nl> + <nl> + / * * <nl> + * Tests for length of anonymous inner types <nl> + * @ author Rob Worth <nl> + * @ author Lars K ü hne <nl> + * * / <nl> + public class InputAnonInnerLength <nl> + { <nl> + / * * <nl> + * Check that instantiations of normal classes work OK . <nl> + * / <nl> + private JButton mButton = new JButton ( ) ; <nl> + <nl> + private class MyInner <nl> + { <nl> + private MyInner ( int [ ] anArray ) <nl> + { <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * the AnonInnerLengthCheck works with ' new ' and RCURLY - check that <nl> + * it will not confuse constructors calls with array params with <nl> + * anon inners . <nl> + * / <nl> + private MyInner myInner = new MyInner ( new int [ ] { <nl> + / / make the array span multiple lines <nl> + 1 , <nl> + 2 , <nl> + 3 , <nl> + 4 , <nl> + 5 , <nl> + 6 , <nl> + 7 , <nl> + } <nl> + ) ; <nl> + <nl> + / * * <nl> + anon inner in member variable initialization which is 21 lines long <nl> + * / <nl> + private Runnable mRunnable1 = new Runnable ( ) { <nl> + public void run ( ) / / should not have to be documented , class is anon . <nl> + { <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + } <nl> + } ; <nl> + <nl> + / * * <nl> + anon inner in member variable initialization which is 20 lines long <nl> + * / <nl> + private Runnable mRunnable2 = new Runnable ( ) { <nl> + public void run ( ) / / should not have to be documented , class is anon . <nl> + { <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + System . identityHashCode ( " running " ) ; <nl> + } <nl> + } ; <nl> + <nl> + / * * <nl> + anon inner in constructor . <nl> + * / <nl> + InputAnonInnerLength ( ) <nl> + { <nl> + mButton . addMouseListener ( new MouseAdapter ( ) <nl> + { <nl> + public void mouseClicked ( MouseEvent aEv ) <nl> + { <nl> + System . identityHashCode ( " click " ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + / * * <nl> + anon inner in method <nl> + * / <nl> + public void addInputAnonInner ( ) <nl> + { <nl> + mButton . addMouseListener ( new MouseAdapter ( ) <nl> + { <nl> + public void mouseClicked ( MouseEvent aEv ) <nl> + { <nl> + System . identityHashCode ( " click " ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm <nl> index 46e2299 . . 2809831 100644 <nl> - - - a / src / xdocs / index . xml . vm <nl> + + + b / src / xdocs / index . xml . vm <nl> @ @ - 168 , 14 + 168 , 14 @ @ <nl> < / td > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> < td > David Schneider < / td > <nl> < td > <nl> < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home Page < / a > <nl> < / td > <nl> < td > <nl> In 2007 was awarded <nl> - < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > <nl> + < a href = " https : / / eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > <nl> Best Open Source Eclipse - based Developer tool <nl> < / a > . <nl> < / td > <nl> @ @ - 201 , 7 + 201 , 7 @ @ <nl> < td / > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> < td > Roman Ivanov < / td > <nl> < td > <nl> < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > <nl> @ @ - 344 , 7 + 344 , 7 @ @ <nl> < td / > <nl> < / tr > <nl> < tr > <nl> - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > <nl> < td > Marco van Meegen < / td > <nl> < td > <nl> < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a >

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheckTest . java 
 index 56f99ec . . 429d758 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / sizes / AnonInnerLengthCheckTest . java 
 @ @ - 40 , 7 + 40 , 8 @ @ public class AnonInnerLengthCheckTest extends BaseCheckTestSupport { 
 @ Override 
 protected String getPath ( String filename ) throws IOException { 
 return super . getPath ( " checks " + File . separator 
 - + " sizes " + File . separator + filename ) ; 
 + + " sizes " + File . separator + " anoninnerlength " 
 + + File . separator + filename ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / InputAnonInnerLength . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / InputAnonInnerLength . java 
 deleted file mode 100644 
 index 6dfb0a5 . . 0000000 
 - - - a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / InputAnonInnerLength . java 
 + + + / dev / null 
 @ @ - 1 , 123 + 0 , 0 @ @ 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / Test case file for checkstyle . 
 - / / Created : 2002 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - package com . puppycrawl . tools . checkstyle . checks . sizes ; 
 - 
 - import java . awt . event . MouseEvent ; 
 - import java . awt . event . MouseAdapter ; 
 - import javax . swing . JButton ; 
 - 
 - / * * 
 - * Tests for length of anonymous inner types 
 - * @ author Rob Worth 
 - * @ author Lars K ü hne 
 - * * / 
 - public class InputAnonInnerLength 
 - { 
 - / * * 
 - * Check that instantiations of normal classes work OK . 
 - * / 
 - private JButton mButton = new JButton ( ) ; 
 - 
 - private class MyInner 
 - { 
 - private MyInner ( int [ ] anArray ) 
 - { 
 - } 
 - } 
 - 
 - / * * 
 - * the AnonInnerLengthCheck works with ' new ' and RCURLY - check that 
 - * it will not confuse constructors calls with array params with 
 - * anon inners . 
 - * / 
 - private MyInner myInner = new MyInner ( new int [ ] { 
 - / / make the array span multiple lines 
 - 1 , 
 - 2 , 
 - 3 , 
 - 4 , 
 - 5 , 
 - 6 , 
 - 7 , 
 - } 
 - ) ; 
 - 
 - / * * 
 - anon inner in member variable initialization which is 21 lines long 
 - * / 
 - private Runnable mRunnable1 = new Runnable ( ) { 
 - public void run ( ) / / should not have to be documented , class is anon . 
 - { 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - } 
 - } ; 
 - 
 - / * * 
 - anon inner in member variable initialization which is 20 lines long 
 - * / 
 - private Runnable mRunnable2 = new Runnable ( ) { 
 - public void run ( ) / / should not have to be documented , class is anon . 
 - { 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - System . identityHashCode ( " running " ) ; 
 - } 
 - } ; 
 - 
 - / * * 
 - anon inner in constructor . 
 - * / 
 - InputAnonInnerLength ( ) 
 - { 
 - mButton . addMouseListener ( new MouseAdapter ( ) 
 - { 
 - public void mouseClicked ( MouseEvent aEv ) 
 - { 
 - System . identityHashCode ( " click " ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - / * * 
 - anon inner in method 
 - * / 
 - public void addInputAnonInner ( ) 
 - { 
 - mButton . addMouseListener ( new MouseAdapter ( ) 
 - { 
 - public void mouseClicked ( MouseEvent aEv ) 
 - { 
 - System . identityHashCode ( " click " ) ; 
 - } 
 - } ) ; 
 - } 
 - } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / anoninnerlength / InputAnonInnerLength . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / anoninnerlength / InputAnonInnerLength . java 
 new file mode 100644 
 index 0000000 . . 9768690 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / sizes / anoninnerlength / InputAnonInnerLength . java 
 @ @ - 0 , 0 + 1 , 123 @ @ 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Test case file for checkstyle . 
 + / / Created : 2002 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + package com . puppycrawl . tools . checkstyle . checks . sizes . anoninnerlength ; 
 + 
 + import java . awt . event . MouseEvent ; 
 + import java . awt . event . MouseAdapter ; 
 + import javax . swing . JButton ; 
 + 
 + / * * 
 + * Tests for length of anonymous inner types 
 + * @ author Rob Worth 
 + * @ author Lars K ü hne 
 + * * / 
 + public class InputAnonInnerLength 
 + { 
 + / * * 
 + * Check that instantiations of normal classes work OK . 
 + * / 
 + private JButton mButton = new JButton ( ) ; 
 + 
 + private class MyInner 
 + { 
 + private MyInner ( int [ ] anArray ) 
 + { 
 + } 
 + } 
 + 
 + / * * 
 + * the AnonInnerLengthCheck works with ' new ' and RCURLY - check that 
 + * it will not confuse constructors calls with array params with 
 + * anon inners . 
 + * / 
 + private MyInner myInner = new MyInner ( new int [ ] { 
 + / / make the array span multiple lines 
 + 1 , 
 + 2 , 
 + 3 , 
 + 4 , 
 + 5 , 
 + 6 , 
 + 7 , 
 + } 
 + ) ; 
 + 
 + / * * 
 + anon inner in member variable initialization which is 21 lines long 
 + * / 
 + private Runnable mRunnable1 = new Runnable ( ) { 
 + public void run ( ) / / should not have to be documented , class is anon . 
 + { 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + } 
 + } ; 
 + 
 + / * * 
 + anon inner in member variable initialization which is 20 lines long 
 + * / 
 + private Runnable mRunnable2 = new Runnable ( ) { 
 + public void run ( ) / / should not have to be documented , class is anon . 
 + { 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + System . identityHashCode ( " running " ) ; 
 + } 
 + } ; 
 + 
 + / * * 
 + anon inner in constructor . 
 + * / 
 + InputAnonInnerLength ( ) 
 + { 
 + mButton . addMouseListener ( new MouseAdapter ( ) 
 + { 
 + public void mouseClicked ( MouseEvent aEv ) 
 + { 
 + System . identityHashCode ( " click " ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + / * * 
 + anon inner in method 
 + * / 
 + public void addInputAnonInner ( ) 
 + { 
 + mButton . addMouseListener ( new MouseAdapter ( ) 
 + { 
 + public void mouseClicked ( MouseEvent aEv ) 
 + { 
 + System . identityHashCode ( " click " ) ; 
 + } 
 + } ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / xdocs / index . xml . vm b / src / xdocs / index . xml . vm 
 index 46e2299 . . 2809831 100644 
 - - - a / src / xdocs / index . xml . vm 
 + + + b / src / xdocs / index . xml . vm 
 @ @ - 168 , 14 + 168 , 14 @ @ 
 < / td > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 < td > David Schneider < / td > 
 < td > 
 < a href = " http : / / eclipse - cs . sourceforge . net / " > Eclipse - CS Home Page < / a > 
 < / td > 
 < td > 
 In 2007 was awarded 
 - < a href = " http : / / www . eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > 
 + < a href = " https : / / eclipse . org / org / press - release / 20070306eclipsecommunityawards . php " > 
 Best Open Source Eclipse - based Developer tool 
 < / a > . 
 < / td > 
 @ @ - 201 , 7 + 201 , 7 @ @ 
 < td / > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 < td > Roman Ivanov < / td > 
 < td > 
 < a href = " https : / / github . com / sevntu - checkstyle " > Project Page < / a > 
 @ @ - 344 , 7 + 344 , 7 @ @ 
 < td / > 
 < / tr > 
 < tr > 
 - < td > < a href = " http : / / www . eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 + < td > < a href = " https : / / eclipse . org " > Eclipse / RAD / RDz < / a > < / td > 
 < td > Marco van Meegen < / td > 
 < td > 
 < a href = " http : / / www . mvmsoft . de / content / plugins / checkclipse / checkclipse . htm " > Checklipse Home Page < / a >
