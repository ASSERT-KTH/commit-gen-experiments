BLEU SCORE: 0.0734705312597788

TEST MSG: Issue # 3582 : marked enum field ' s final method as redundant
GENERATED MSG: Issue # 2203 : Fix RedundantModifier check at final classes in interfaces

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> index ce18e33 . . 33b21aa 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java <nl> @ @ - 278 , 7 + 278 , 8 @ @ public class RedundantModifierCheck <nl> checkFinal = checkFinal | | classModifiers . branchContains ( TokenTypes . FINAL ) ; <nl> parent = null ; <nl> } <nl> - else if ( parent . getType ( ) = = TokenTypes . LITERAL _ NEW ) { <nl> + else if ( parent . getType ( ) = = TokenTypes . LITERAL _ NEW <nl> + | | parent . getType ( ) = = TokenTypes . ENUM _ CONSTANT _ DEF ) { <nl> checkFinal = true ; <nl> parent = null ; <nl> } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> index 8bf986b . . 81590d6 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java <nl> @ @ - 227 , 7 + 227 , 10 @ @ public class RedundantModifierCheckTest <nl> @ Test <nl> public void testEnumMethods ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( RedundantModifierCheck . class ) ; <nl> - final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> + final String [ ] expected = { <nl> + " 7 : 16 : " + getCheckMessage ( MSG _ KEY , " final " ) , <nl> + " 22 : 16 : " + getCheckMessage ( MSG _ KEY , " final " ) , <nl> + } ; <nl> verify ( checkConfig , getPath ( " InputFinalInEnumMethods . java " ) , expected ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / config / suppressions . xml b / config / suppressions . xml <nl> index cd8d97c . . cda2203 100644 <nl> - - - a / config / suppressions . xml <nl> + + + b / config / suppressions . xml <nl> @ @ - 13 , 6 + 13 , 10 @ @ <nl> < suppress checks = " AbbreviationAsWordInName " <nl> files = " JavaNCSSCheck . java " <nl> lines = " 41 " / > <nl> + < ! - - test should be named as their main class - - > <nl> + < suppress checks = " AbbreviationAsWordInName " <nl> + files = " JavaNCSSCheckTest . java " <nl> + lines = " 41 " / > <nl> <nl> < ! - - illegal words are part of Javadoc - - > <nl> < suppress checks = " TodoComment " files = " . * TodoCommentCheck \ . java " / > <nl> @ @ - 28 , 6 + 32 , 9 @ @ <nl> < ! - - ' Abstract ' pattern is used to show it is checking for abstract class name - - > <nl> < suppress checks = " AbstractClassNameCheck " <nl> files = " AbstractClassNameCheck . java " / > <nl> + < ! - - test should be named as their main class - - > <nl> + < suppress checks = " AbstractClassNameCheck " <nl> + files = " AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java " / > <nl> <nl> < ! - - Tone down the checking for test code - - > <nl> < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> @ @ - 43 , 7 + 50 , 6 @ @ <nl> < ! - - suppressions to remove over time - - > <nl> < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> < suppress checks = " LineLength " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> - < suppress checks = " Name " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > <nl> <nl> < ! - - <nl> Turn off all checks for Generated and Test code . Fixes issues with using <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> index 3285c8c . . 121d0c5 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java <nl> @ @ - 433 , 7 + 433 , 7 @ @ public class ConfigurationLoaderTest { <nl> } <nl> <nl> @ Test <nl> - public void testLoadConfiguration _ WrongURL ( ) throws CheckstyleException { <nl> + public void testLoadConfigurationWrongURL ( ) throws CheckstyleException { <nl> try { <nl> final DefaultConfiguration config = <nl> ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( <nl> @ @ - 451 , 7 + 451 , 7 @ @ public class ConfigurationLoaderTest { <nl> <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public void testLoadConfiguration _ URISyntaxException ( ) throws CheckstyleException { <nl> + public void testLoadConfigurationURISyntaxException ( ) throws CheckstyleException { <nl> mockStatic ( ConfigurationLoader . class , Mockito . CALLS _ REAL _ METHODS ) ; <nl> <nl> PropertiesExpander expander = new PropertiesExpander ( new Properties ( ) ) ; <nl> @ @ - 472 , 7 + 472 , 7 @ @ public class ConfigurationLoaderTest { <nl> } <nl> <nl> @ Test <nl> - public void testLoadConfiguration _ Deprecated ( ) throws CheckstyleException { <nl> + public void testLoadConfigurationDeprecated ( ) throws CheckstyleException { <nl> try { <nl> @ SuppressWarnings ( " deprecation " ) <nl> final DefaultConfiguration config = <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 3568e13 . . 151f25f 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 323 , 7 + 323 , 7 @ @ public class MainTest { <nl> } <nl> <nl> @ Test <nl> - public void testExistingTargetFilePlainOutputToFileWithoutReadAndRwPermissions ( ) <nl> + public void testExistingFilePlainOutputToFileWithoutReadAndRwPermissions ( ) <nl> throws Exception { <nl> final File file = temporaryFolder . newFile ( " file . output " ) ; <nl> / / That works fine on Linux / Unix , but . . . . <nl> @ @ - 401 , 7 + 401 , 7 @ @ public class MainTest { <nl> } <nl> <nl> @ Test <nl> - public void testLoadProperties _ IOException ( ) throws Exception { <nl> + public void testLoadPropertiesIOException ( ) throws Exception { <nl> Class < ? > [ ] param = new Class < ? > [ 1 ] ; <nl> param [ 0 ] = File . class ; <nl> Method method = Main . class . getDeclaredMethod ( " loadProperties " , param ) ; <nl> @ @ - 432 , 7 + 432 , 7 @ @ public class MainTest { <nl> } <nl> <nl> @ Test <nl> - public void testCreateListener _ IllegalStateException ( ) throws Exception { <nl> + public void testCreateListenerIllegalStateException ( ) throws Exception { <nl> Method method = Main . class . getDeclaredMethod ( " createListener " , String . class , String . class ) ; <nl> method . setAccessible ( true ) ; <nl> try { <nl> @ @ - 446 , 7 + 446 , 7 @ @ public class MainTest { <nl> } <nl> <nl> @ Test <nl> - public void testCreateListenerWithLocation _ IllegalStateException ( ) throws Exception { <nl> + public void testCreateListenerWithLocationIllegalStateException ( ) throws Exception { <nl> Method method = Main . class . getDeclaredMethod ( " createListener " , String . class , String . class ) ; <nl> method . setAccessible ( true ) ; <nl> String outDir = " myfolder123 " ; <nl> @ @ - 499 , 7 + 499 , 7 @ @ public class MainTest { <nl> <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public void testListFiles _ notFile ( ) throws Exception { <nl> + public void testListFilesNotFile ( ) throws Exception { <nl> Method method = Main . class . getDeclaredMethod ( " listFiles " , File . class ) ; <nl> method . setAccessible ( true ) ; <nl> <nl> @ @ - 514 , 7 + 514 , 7 @ @ public class MainTest { <nl> <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public void testListFiles _ DirectoryWithNull ( ) throws Exception { <nl> + public void testListFilesDirectoryWithNull ( ) throws Exception { <nl> Method method = Main . class . getDeclaredMethod ( " listFiles " , File . class ) ; <nl> method . setAccessible ( true ) ; <nl> <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> index 2cd186e . . 906fc65 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java <nl> @ @ - 163 , 7 + 163 , 7 @ @ public class PackageNamesLoaderTest { <nl> <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public void testPackagesWithIoException _ getResources ( ) throws Exception { <nl> + public void testPackagesWithIoExceptionGetResources ( ) throws Exception { <nl> <nl> ClassLoader classLoader = mock ( ClassLoader . class ) ; <nl> when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenThrow ( IOException . class ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> index 6691da5 . . 31265ad 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java <nl> @ @ - 90 , 7 + 90 , 7 @ @ public class PropertyCacheFileTest { <nl> <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public void testException _ NoSuchAlgorithmException ( ) throws Exception { <nl> + public void testExceptionNoSuchAlgorithmException ( ) throws Exception { <nl> <nl> Configuration config = new DefaultConfiguration ( " myName " ) ; <nl> final String filePath = temporaryFolder . newFile ( ) . getPath ( ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> index c54563b . . b8b437b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> @ @ - 184 , 7 + 184 , 7 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testCacheFile _ changeInConfig ( ) throws Exception { <nl> + public void testCacheFileChangeInConfig ( ) throws Exception { <nl> final DefaultConfiguration checkConfig = createCheckConfig ( HiddenFieldCheck . class ) ; <nl> <nl> final DefaultConfiguration treeWalkerConfig = createCheckConfig ( TreeWalker . class ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AutomaticBeanTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AutomaticBeanTest . java <nl> index ee1d757 . . 1ee7a70 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AutomaticBeanTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / AutomaticBeanTest . java <nl> @ @ - 34 , 7 + 34 , 7 @ @ import com . puppycrawl . tools . checkstyle . DefaultContext ; <nl> public class AutomaticBeanTest { <nl> <nl> @ Test <nl> - public void testConfigure _ NoSuchAttribute ( ) { <nl> + public void testConfigureNoSuchAttribute ( ) { <nl> final TestBean testBean = new TestBean ( ) ; <nl> final DefaultConfiguration conf = new DefaultConfiguration ( " testConf " ) ; <nl> conf . addAttribute ( " NonExisting " , " doesn ' t matter " ) ; <nl> @ @ - 48 , 7 + 48 , 7 @ @ public class AutomaticBeanTest { <nl> } <nl> <nl> @ Test <nl> - public void testConfigure _ NoSuchAttribute2 ( ) { <nl> + public void testConfigureNoSuchAttribute2 ( ) { <nl> final TestBean testBean = new TestBean ( ) ; <nl> final DefaultConfiguration conf = new DefaultConfiguration ( " testConf " ) ; <nl> conf . addAttribute ( " privateField " , " doesn ' t matter " ) ; <nl> @ @ - 68 , 7 + 68 , 7 @ @ public class AutomaticBeanTest { <nl> } <nl> <nl> @ Test <nl> - public void testContextualize _ InvocationTargetException ( ) { <nl> + public void testContextualizeInvocationTargetException ( ) { <nl> final TestBean testBean = new TestBean ( ) ; <nl> DefaultContext context = new DefaultContext ( ) ; <nl> context . add ( " exceptionalMethod " , 123 . 0f ) ; <nl> @ @ - 83 , 7 + 83 , 7 @ @ public class AutomaticBeanTest { <nl> } <nl> <nl> @ Test <nl> - public void testContextualize _ ConversionException ( ) { <nl> + public void testContextualizeConversionException ( ) { <nl> final TestBean testBean = new TestBean ( ) ; <nl> DefaultContext context = new DefaultContext ( ) ; <nl> context . add ( " val " , " some string " ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> index 23fa6fd . . 53982ff 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java <nl> @ @ - 63 , 7 + 63 , 7 @ @ public class LocalizedMessageTest { <nl> } <nl> <nl> @ Test <nl> - public void testBundleReload _ UrlNull ( ) throws IOException { <nl> + public void testBundleReloadUrlNull ( ) throws IOException { <nl> LocalizedMessage . UTF8Control cntrl = new LocalizedMessage . UTF8Control ( ) ; <nl> cntrl . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , <nl> Locale . ENGLISH , " java . class " , <nl> @ @ - 71 , 7 + 71 , 7 @ @ public class LocalizedMessageTest { <nl> } <nl> <nl> @ Test <nl> - public void testBundleReload _ UrlNotNull ( ) throws IOException { <nl> + public void testBundleReloadUrlNotNull ( ) throws IOException { <nl> <nl> ClassLoader classloader = mock ( ClassLoader . class ) ; <nl> final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; <nl> @ @ - 89 , 7 + 89 , 7 @ @ public class LocalizedMessageTest { <nl> } <nl> <nl> @ Test <nl> - public void testBundleReload _ UrlNotNullStreamNull ( ) throws IOException { <nl> + public void testBundleReloadUrlNotNullStreamNull ( ) throws IOException { <nl> <nl> ClassLoader classloader = mock ( ClassLoader . class ) ; <nl> String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> index 7f6d30f . . c044a30 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java <nl> @ @ - 85 , 7 + 85 , 7 @ @ public class LeftCurlyCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testNLOW ( ) throws Exception { <nl> + public void testNlow ( ) throws Exception { <nl> checkConfig . addAttribute ( " option " , LeftCurlyOption . NLOW . toString ( ) ) ; <nl> final String [ ] expected = { <nl> " 8 : 1 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 1 ) , <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> index 48761c5 . . 61f69dc 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> @ @ - 476 , 19 + 476 , 19 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void test _ 1168408 _ 1 ( ) throws Exception { <nl> + public void test11684081 ( ) throws Exception { <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , getPath ( " checks / javadoc / Input _ 01 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> - public void test _ 1168408 _ 2 ( ) throws Exception { <nl> + public void test11684082 ( ) throws Exception { <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> verify ( checkConfig , getPath ( " checks / javadoc / Input _ 02 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> - public void test _ 1168408 _ 3 ( ) throws Exception { <nl> + public void test11684083 ( ) throws Exception { <nl> checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; <nl> checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> @ @ - 496 , 7 + 496 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void test _ generics _ 1 ( ) throws Exception { <nl> + public void testGenerics1 ( ) throws Exception { <nl> checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; <nl> checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; <nl> checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> @ @ - 511 , 7 + 511 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void test _ generics _ 2 ( ) throws Exception { <nl> + public void testGenerics2 ( ) throws Exception { <nl> checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; <nl> checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> final String [ ] expected = { <nl> @ @ - 525 , 7 + 525 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void test _ generics _ 3 ( ) throws Exception { <nl> + public void testGenerics3 ( ) throws Exception { <nl> checkConfig . addAttribute ( " validateThrows " , " true " ) ; <nl> final String [ ] expected = { <nl> " 8 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ throws " , " RE " ) , <nl> @ @ - 539 , 7 + 539 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void test _ 1379666 ( ) throws Exception { <nl> + public void test1379666 ( ) throws Exception { <nl> checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; <nl> checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / comments / CommentsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / comments / CommentsTest . java <nl> index 26b4b26 . . 2a46dcd 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / comments / CommentsTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / comments / CommentsTest . java <nl> @ @ - 597 , 7 + 597 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testCompareExpectedTreeWithInput _ 1 ( ) throws Exception { <nl> + public void testCompareExpectedTreeWithInput1 ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( CompareTreesWithComments . class ) ; <nl> CompareTreesWithComments . expectedTree = buildInput1 ( ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> @ @ - 606 , 7 + 606 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { <nl> } <nl> <nl> @ Test <nl> - public void testCompareExpectedTreeWithInput _ 2 ( ) throws Exception { <nl> + public void testCompareExpectedTreeWithInput2 ( ) throws Exception { <nl> DefaultConfiguration checkConfig = createCheckConfig ( CompareTreesWithComments . class ) ; <nl> CompareTreesWithComments . expectedTree = buildInput2 ( ) ; <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> index a3980a0 . . 61d3c5c 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java <nl> @ @ - 83 , 7 + 83 , 7 @ @ public class SuppressElementTest { <nl> } <nl> <nl> @ Test <nl> - public void testDecideByFileNameAndModuleMatching _ FileNameNull ( ) { <nl> + public void testDecideByFileNameAndModuleMatchingFileNameNull ( ) { <nl> LocalizedMessage message = <nl> new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; <nl> final AuditEvent ev = new AuditEvent ( this , null , message ) ; <nl> @ @ - 91 , 13 + 91 , 13 @ @ public class SuppressElementTest { <nl> } <nl> <nl> @ Test <nl> - public void testDecideByFileNameAndModuleMatching _ MessageNull ( ) { <nl> + public void testDecideByFileNameAndModuleMatchingMessageNull ( ) { <nl> final AuditEvent ev = new AuditEvent ( this , " ATest . java " , null ) ; <nl> assertTrue ( filter . accept ( ev ) ) ; <nl> } <nl> <nl> @ Test <nl> - public void testDecideByFileNameAndModuleMatching _ ModuleNull ( ) { <nl> + public void testDecideByFileNameAndModuleMatchingModuleNull ( ) { <nl> LocalizedMessage message = <nl> new LocalizedMessage ( 10 , 10 , " " , " " , null , " MyModule " , getClass ( ) , null ) ; <nl> final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ; <nl> @ @ - 106 , 7 + 106 , 7 @ @ public class SuppressElementTest { <nl> } <nl> <nl> @ Test <nl> - public void testDecideByFileNameAndModuleMatching _ ModuleEqual ( ) { <nl> + public void testDecideByFileNameAndModuleMatchingModuleEqual ( ) { <nl> LocalizedMessage message = <nl> new LocalizedMessage ( 10 , 10 , " " , " " , null , " MyModule " , getClass ( ) , null ) ; <nl> final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ; <nl> @ @ - 115 , 7 + 115 , 7 @ @ public class SuppressElementTest { <nl> } <nl> <nl> @ Test <nl> - public void testDecideByFileNameAndModuleMatching _ ModuleNotEqual ( ) { <nl> + public void testDecideByFileNameAndModuleMatchingModuleNotEqual ( ) { <nl> LocalizedMessage message = <nl> new LocalizedMessage ( 10 , 10 , " " , " " , null , " TheirModule " , getClass ( ) , null ) ; <nl> final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ; <nl> @ @ - 124 , 7 + 124 , 7 @ @ public class SuppressElementTest { <nl> } <nl> <nl> @ Test <nl> - public void testDecideByFileNameAndModuleMatching _ RegExpNotMatch ( ) { <nl> + public void testDecideByFileNameAndModuleMatchingRegExpNotMatch ( ) { <nl> LocalizedMessage message = <nl> new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; <nl> final AuditEvent ev = new AuditEvent ( this , " T1est " , message ) ; <nl> @ @ - 132 , 7 + 132 , 7 @ @ public class SuppressElementTest { <nl> } <nl> <nl> @ Test <nl> - public void testDecideByFileNameAndModuleMatching _ RegExpMatch ( ) { <nl> + public void testDecideByFileNameAndModuleMatchingRegExpMatch ( ) { <nl> LocalizedMessage message = <nl> new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; <nl> final AuditEvent ev = new AuditEvent ( this , " TestSUFFIX " , message ) ; <nl> @ @ - 141 , 7 + 141 , 7 @ @ public class SuppressElementTest { <nl> } <nl> <nl> @ Test <nl> - public void testDecideByFileNameAndModuleMatching _ CheckRegExpNotMatch ( ) { <nl> + public void testDecideByFileNameAndModuleMatchingCheckRegExpNotMatch ( ) { <nl> LocalizedMessage message = <nl> new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; <nl> final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ; <nl> @ @ - 150 , 7 + 150 , 7 @ @ public class SuppressElementTest { <nl> } <nl> <nl> @ Test <nl> - public void testDecideByFileNameAndModuleMatching _ CheckRegExpMatch ( ) { <nl> + public void testDecideByFileNameAndModuleMatchingCheckRegExpMatch ( ) { <nl> LocalizedMessage message = <nl> new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; <nl> final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ;

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 index ce18e33 . . 33b21aa 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheck . java 
 @ @ - 278 , 7 + 278 , 8 @ @ public class RedundantModifierCheck 
 checkFinal = checkFinal | | classModifiers . branchContains ( TokenTypes . FINAL ) ; 
 parent = null ; 
 } 
 - else if ( parent . getType ( ) = = TokenTypes . LITERAL _ NEW ) { 
 + else if ( parent . getType ( ) = = TokenTypes . LITERAL _ NEW 
 + | | parent . getType ( ) = = TokenTypes . ENUM _ CONSTANT _ DEF ) { 
 checkFinal = true ; 
 parent = null ; 
 } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 index 8bf986b . . 81590d6 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / modifier / RedundantModifierCheckTest . java 
 @ @ - 227 , 7 + 227 , 10 @ @ public class RedundantModifierCheckTest 
 @ Test 
 public void testEnumMethods ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( RedundantModifierCheck . class ) ; 
 - final String [ ] expected = CommonUtils . EMPTY _ STRING _ ARRAY ; 
 + final String [ ] expected = { 
 + " 7 : 16 : " + getCheckMessage ( MSG _ KEY , " final " ) , 
 + " 22 : 16 : " + getCheckMessage ( MSG _ KEY , " final " ) , 
 + } ; 
 verify ( checkConfig , getPath ( " InputFinalInEnumMethods . java " ) , expected ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / config / suppressions . xml b / config / suppressions . xml 
 index cd8d97c . . cda2203 100644 
 - - - a / config / suppressions . xml 
 + + + b / config / suppressions . xml 
 @ @ - 13 , 6 + 13 , 10 @ @ 
 < suppress checks = " AbbreviationAsWordInName " 
 files = " JavaNCSSCheck . java " 
 lines = " 41 " / > 
 + < ! - - test should be named as their main class - - > 
 + < suppress checks = " AbbreviationAsWordInName " 
 + files = " JavaNCSSCheckTest . java " 
 + lines = " 41 " / > 
 
 < ! - - illegal words are part of Javadoc - - > 
 < suppress checks = " TodoComment " files = " . * TodoCommentCheck \ . java " / > 
 @ @ - 28 , 6 + 32 , 9 @ @ 
 < ! - - ' Abstract ' pattern is used to show it is checking for abstract class name - - > 
 < suppress checks = " AbstractClassNameCheck " 
 files = " AbstractClassNameCheck . java " / > 
 + < ! - - test should be named as their main class - - > 
 + < suppress checks = " AbstractClassNameCheck " 
 + files = " AbstractClassNameCheckTest . java | AbstractTypeAwareCheckTest . java | AbstractJavadocCheckTest . java | AbstractViolationReporterTest . java " / > 
 
 < ! - - Tone down the checking for test code - - > 
 < suppress checks = " EmptyBlock " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 @ @ - 43 , 7 + 50 , 6 @ @ 
 < ! - - suppressions to remove over time - - > 
 < suppress checks = " FinalLocalVariable " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 < suppress checks = " LineLength " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 - < suppress checks = " Name " files = " . * [ \ \ / ] src [ \ \ / ] test [ \ \ / ] " / > 
 
 < ! - - 
 Turn off all checks for Generated and Test code . Fixes issues with using 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 index 3285c8c . . 121d0c5 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / ConfigurationLoaderTest . java 
 @ @ - 433 , 7 + 433 , 7 @ @ public class ConfigurationLoaderTest { 
 } 
 
 @ Test 
 - public void testLoadConfiguration _ WrongURL ( ) throws CheckstyleException { 
 + public void testLoadConfigurationWrongURL ( ) throws CheckstyleException { 
 try { 
 final DefaultConfiguration config = 
 ( DefaultConfiguration ) ConfigurationLoader . loadConfiguration ( 
 @ @ - 451 , 7 + 451 , 7 @ @ public class ConfigurationLoaderTest { 
 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 - public void testLoadConfiguration _ URISyntaxException ( ) throws CheckstyleException { 
 + public void testLoadConfigurationURISyntaxException ( ) throws CheckstyleException { 
 mockStatic ( ConfigurationLoader . class , Mockito . CALLS _ REAL _ METHODS ) ; 
 
 PropertiesExpander expander = new PropertiesExpander ( new Properties ( ) ) ; 
 @ @ - 472 , 7 + 472 , 7 @ @ public class ConfigurationLoaderTest { 
 } 
 
 @ Test 
 - public void testLoadConfiguration _ Deprecated ( ) throws CheckstyleException { 
 + public void testLoadConfigurationDeprecated ( ) throws CheckstyleException { 
 try { 
 @ SuppressWarnings ( " deprecation " ) 
 final DefaultConfiguration config = 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 3568e13 . . 151f25f 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 323 , 7 + 323 , 7 @ @ public class MainTest { 
 } 
 
 @ Test 
 - public void testExistingTargetFilePlainOutputToFileWithoutReadAndRwPermissions ( ) 
 + public void testExistingFilePlainOutputToFileWithoutReadAndRwPermissions ( ) 
 throws Exception { 
 final File file = temporaryFolder . newFile ( " file . output " ) ; 
 / / That works fine on Linux / Unix , but . . . . 
 @ @ - 401 , 7 + 401 , 7 @ @ public class MainTest { 
 } 
 
 @ Test 
 - public void testLoadProperties _ IOException ( ) throws Exception { 
 + public void testLoadPropertiesIOException ( ) throws Exception { 
 Class < ? > [ ] param = new Class < ? > [ 1 ] ; 
 param [ 0 ] = File . class ; 
 Method method = Main . class . getDeclaredMethod ( " loadProperties " , param ) ; 
 @ @ - 432 , 7 + 432 , 7 @ @ public class MainTest { 
 } 
 
 @ Test 
 - public void testCreateListener _ IllegalStateException ( ) throws Exception { 
 + public void testCreateListenerIllegalStateException ( ) throws Exception { 
 Method method = Main . class . getDeclaredMethod ( " createListener " , String . class , String . class ) ; 
 method . setAccessible ( true ) ; 
 try { 
 @ @ - 446 , 7 + 446 , 7 @ @ public class MainTest { 
 } 
 
 @ Test 
 - public void testCreateListenerWithLocation _ IllegalStateException ( ) throws Exception { 
 + public void testCreateListenerWithLocationIllegalStateException ( ) throws Exception { 
 Method method = Main . class . getDeclaredMethod ( " createListener " , String . class , String . class ) ; 
 method . setAccessible ( true ) ; 
 String outDir = " myfolder123 " ; 
 @ @ - 499 , 7 + 499 , 7 @ @ public class MainTest { 
 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 - public void testListFiles _ notFile ( ) throws Exception { 
 + public void testListFilesNotFile ( ) throws Exception { 
 Method method = Main . class . getDeclaredMethod ( " listFiles " , File . class ) ; 
 method . setAccessible ( true ) ; 
 
 @ @ - 514 , 7 + 514 , 7 @ @ public class MainTest { 
 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 - public void testListFiles _ DirectoryWithNull ( ) throws Exception { 
 + public void testListFilesDirectoryWithNull ( ) throws Exception { 
 Method method = Main . class . getDeclaredMethod ( " listFiles " , File . class ) ; 
 method . setAccessible ( true ) ; 
 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 index 2cd186e . . 906fc65 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PackageNamesLoaderTest . java 
 @ @ - 163 , 7 + 163 , 7 @ @ public class PackageNamesLoaderTest { 
 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 - public void testPackagesWithIoException _ getResources ( ) throws Exception { 
 + public void testPackagesWithIoExceptionGetResources ( ) throws Exception { 
 
 ClassLoader classLoader = mock ( ClassLoader . class ) ; 
 when ( classLoader . getResources ( " checkstyle _ packages . xml " ) ) . thenThrow ( IOException . class ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 index 6691da5 . . 31265ad 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / PropertyCacheFileTest . java 
 @ @ - 90 , 7 + 90 , 7 @ @ public class PropertyCacheFileTest { 
 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 - public void testException _ NoSuchAlgorithmException ( ) throws Exception { 
 + public void testExceptionNoSuchAlgorithmException ( ) throws Exception { 
 
 Configuration config = new DefaultConfiguration ( " myName " ) ; 
 final String filePath = temporaryFolder . newFile ( ) . getPath ( ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 index c54563b . . b8b437b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 @ @ - 184 , 7 + 184 , 7 @ @ public class TreeWalkerTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testCacheFile _ changeInConfig ( ) throws Exception { 
 + public void testCacheFileChangeInConfig ( ) throws Exception { 
 final DefaultConfiguration checkConfig = createCheckConfig ( HiddenFieldCheck . class ) ; 
 
 final DefaultConfiguration treeWalkerConfig = createCheckConfig ( TreeWalker . class ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / AutomaticBeanTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / AutomaticBeanTest . java 
 index ee1d757 . . 1ee7a70 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / AutomaticBeanTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / AutomaticBeanTest . java 
 @ @ - 34 , 7 + 34 , 7 @ @ import com . puppycrawl . tools . checkstyle . DefaultContext ; 
 public class AutomaticBeanTest { 
 
 @ Test 
 - public void testConfigure _ NoSuchAttribute ( ) { 
 + public void testConfigureNoSuchAttribute ( ) { 
 final TestBean testBean = new TestBean ( ) ; 
 final DefaultConfiguration conf = new DefaultConfiguration ( " testConf " ) ; 
 conf . addAttribute ( " NonExisting " , " doesn ' t matter " ) ; 
 @ @ - 48 , 7 + 48 , 7 @ @ public class AutomaticBeanTest { 
 } 
 
 @ Test 
 - public void testConfigure _ NoSuchAttribute2 ( ) { 
 + public void testConfigureNoSuchAttribute2 ( ) { 
 final TestBean testBean = new TestBean ( ) ; 
 final DefaultConfiguration conf = new DefaultConfiguration ( " testConf " ) ; 
 conf . addAttribute ( " privateField " , " doesn ' t matter " ) ; 
 @ @ - 68 , 7 + 68 , 7 @ @ public class AutomaticBeanTest { 
 } 
 
 @ Test 
 - public void testContextualize _ InvocationTargetException ( ) { 
 + public void testContextualizeInvocationTargetException ( ) { 
 final TestBean testBean = new TestBean ( ) ; 
 DefaultContext context = new DefaultContext ( ) ; 
 context . add ( " exceptionalMethod " , 123 . 0f ) ; 
 @ @ - 83 , 7 + 83 , 7 @ @ public class AutomaticBeanTest { 
 } 
 
 @ Test 
 - public void testContextualize _ ConversionException ( ) { 
 + public void testContextualizeConversionException ( ) { 
 final TestBean testBean = new TestBean ( ) ; 
 DefaultContext context = new DefaultContext ( ) ; 
 context . add ( " val " , " some string " ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 index 23fa6fd . . 53982ff 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessageTest . java 
 @ @ - 63 , 7 + 63 , 7 @ @ public class LocalizedMessageTest { 
 } 
 
 @ Test 
 - public void testBundleReload _ UrlNull ( ) throws IOException { 
 + public void testBundleReloadUrlNull ( ) throws IOException { 
 LocalizedMessage . UTF8Control cntrl = new LocalizedMessage . UTF8Control ( ) ; 
 cntrl . newBundle ( " com . puppycrawl . tools . checkstyle . checks . coding . messages " , 
 Locale . ENGLISH , " java . class " , 
 @ @ - 71 , 7 + 71 , 7 @ @ public class LocalizedMessageTest { 
 } 
 
 @ Test 
 - public void testBundleReload _ UrlNotNull ( ) throws IOException { 
 + public void testBundleReloadUrlNotNull ( ) throws IOException { 
 
 ClassLoader classloader = mock ( ClassLoader . class ) ; 
 final URLConnection mockConnection = Mockito . mock ( URLConnection . class ) ; 
 @ @ - 89 , 7 + 89 , 7 @ @ public class LocalizedMessageTest { 
 } 
 
 @ Test 
 - public void testBundleReload _ UrlNotNullStreamNull ( ) throws IOException { 
 + public void testBundleReloadUrlNotNullStreamNull ( ) throws IOException { 
 
 ClassLoader classloader = mock ( ClassLoader . class ) ; 
 String resource = " com / puppycrawl / tools / checkstyle / checks / coding / messages _ en . properties " ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 index 7f6d30f . . c044a30 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / blocks / LeftCurlyCheckTest . java 
 @ @ - 85 , 7 + 85 , 7 @ @ public class LeftCurlyCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testNLOW ( ) throws Exception { 
 + public void testNlow ( ) throws Exception { 
 checkConfig . addAttribute ( " option " , LeftCurlyOption . NLOW . toString ( ) ) ; 
 final String [ ] expected = { 
 " 8 : 1 : " + getCheckMessage ( MSG _ KEY _ LINE _ PREVIOUS , " { " , 1 ) , 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 index 48761c5 . . 61f69dc 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 @ @ - 476 , 19 + 476 , 19 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void test _ 1168408 _ 1 ( ) throws Exception { 
 + public void test11684081 ( ) throws Exception { 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , getPath ( " checks / javadoc / Input _ 01 . java " ) , expected ) ; 
 } 
 
 @ Test 
 - public void test _ 1168408 _ 2 ( ) throws Exception { 
 + public void test11684082 ( ) throws Exception { 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 verify ( checkConfig , getPath ( " checks / javadoc / Input _ 02 . java " ) , expected ) ; 
 } 
 
 @ Test 
 - public void test _ 1168408 _ 3 ( ) throws Exception { 
 + public void test11684083 ( ) throws Exception { 
 checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; 
 checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 @ @ - 496 , 7 + 496 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void test _ generics _ 1 ( ) throws Exception { 
 + public void testGenerics1 ( ) throws Exception { 
 checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; 
 checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; 
 checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 @ @ - 511 , 7 + 511 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void test _ generics _ 2 ( ) throws Exception { 
 + public void testGenerics2 ( ) throws Exception { 
 checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; 
 checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 final String [ ] expected = { 
 @ @ - 525 , 7 + 525 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void test _ generics _ 3 ( ) throws Exception { 
 + public void testGenerics3 ( ) throws Exception { 
 checkConfig . addAttribute ( " validateThrows " , " true " ) ; 
 final String [ ] expected = { 
 " 8 : 8 : " + getCheckMessage ( MSG _ UNUSED _ TAG , " @ throws " , " RE " ) , 
 @ @ - 539 , 7 + 539 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void test _ 1379666 ( ) throws Exception { 
 + public void test1379666 ( ) throws Exception { 
 checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; 
 checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / comments / CommentsTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / comments / CommentsTest . java 
 index 26b4b26 . . 2a46dcd 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / comments / CommentsTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / comments / CommentsTest . java 
 @ @ - 597 , 7 + 597 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testCompareExpectedTreeWithInput _ 1 ( ) throws Exception { 
 + public void testCompareExpectedTreeWithInput1 ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( CompareTreesWithComments . class ) ; 
 CompareTreesWithComments . expectedTree = buildInput1 ( ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 @ @ - 606 , 7 + 606 , 7 @ @ public class CommentsTest extends BaseCheckTestSupport { 
 } 
 
 @ Test 
 - public void testCompareExpectedTreeWithInput _ 2 ( ) throws Exception { 
 + public void testCompareExpectedTreeWithInput2 ( ) throws Exception { 
 DefaultConfiguration checkConfig = createCheckConfig ( CompareTreesWithComments . class ) ; 
 CompareTreesWithComments . expectedTree = buildInput2 ( ) ; 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 index a3980a0 . . 61d3c5c 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / filters / SuppressElementTest . java 
 @ @ - 83 , 7 + 83 , 7 @ @ public class SuppressElementTest { 
 } 
 
 @ Test 
 - public void testDecideByFileNameAndModuleMatching _ FileNameNull ( ) { 
 + public void testDecideByFileNameAndModuleMatchingFileNameNull ( ) { 
 LocalizedMessage message = 
 new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; 
 final AuditEvent ev = new AuditEvent ( this , null , message ) ; 
 @ @ - 91 , 13 + 91 , 13 @ @ public class SuppressElementTest { 
 } 
 
 @ Test 
 - public void testDecideByFileNameAndModuleMatching _ MessageNull ( ) { 
 + public void testDecideByFileNameAndModuleMatchingMessageNull ( ) { 
 final AuditEvent ev = new AuditEvent ( this , " ATest . java " , null ) ; 
 assertTrue ( filter . accept ( ev ) ) ; 
 } 
 
 @ Test 
 - public void testDecideByFileNameAndModuleMatching _ ModuleNull ( ) { 
 + public void testDecideByFileNameAndModuleMatchingModuleNull ( ) { 
 LocalizedMessage message = 
 new LocalizedMessage ( 10 , 10 , " " , " " , null , " MyModule " , getClass ( ) , null ) ; 
 final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ; 
 @ @ - 106 , 7 + 106 , 7 @ @ public class SuppressElementTest { 
 } 
 
 @ Test 
 - public void testDecideByFileNameAndModuleMatching _ ModuleEqual ( ) { 
 + public void testDecideByFileNameAndModuleMatchingModuleEqual ( ) { 
 LocalizedMessage message = 
 new LocalizedMessage ( 10 , 10 , " " , " " , null , " MyModule " , getClass ( ) , null ) ; 
 final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ; 
 @ @ - 115 , 7 + 115 , 7 @ @ public class SuppressElementTest { 
 } 
 
 @ Test 
 - public void testDecideByFileNameAndModuleMatching _ ModuleNotEqual ( ) { 
 + public void testDecideByFileNameAndModuleMatchingModuleNotEqual ( ) { 
 LocalizedMessage message = 
 new LocalizedMessage ( 10 , 10 , " " , " " , null , " TheirModule " , getClass ( ) , null ) ; 
 final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ; 
 @ @ - 124 , 7 + 124 , 7 @ @ public class SuppressElementTest { 
 } 
 
 @ Test 
 - public void testDecideByFileNameAndModuleMatching _ RegExpNotMatch ( ) { 
 + public void testDecideByFileNameAndModuleMatchingRegExpNotMatch ( ) { 
 LocalizedMessage message = 
 new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; 
 final AuditEvent ev = new AuditEvent ( this , " T1est " , message ) ; 
 @ @ - 132 , 7 + 132 , 7 @ @ public class SuppressElementTest { 
 } 
 
 @ Test 
 - public void testDecideByFileNameAndModuleMatching _ RegExpMatch ( ) { 
 + public void testDecideByFileNameAndModuleMatchingRegExpMatch ( ) { 
 LocalizedMessage message = 
 new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; 
 final AuditEvent ev = new AuditEvent ( this , " TestSUFFIX " , message ) ; 
 @ @ - 141 , 7 + 141 , 7 @ @ public class SuppressElementTest { 
 } 
 
 @ Test 
 - public void testDecideByFileNameAndModuleMatching _ CheckRegExpNotMatch ( ) { 
 + public void testDecideByFileNameAndModuleMatchingCheckRegExpNotMatch ( ) { 
 LocalizedMessage message = 
 new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; 
 final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ; 
 @ @ - 150 , 7 + 150 , 7 @ @ public class SuppressElementTest { 
 } 
 
 @ Test 
 - public void testDecideByFileNameAndModuleMatching _ CheckRegExpMatch ( ) { 
 + public void testDecideByFileNameAndModuleMatchingCheckRegExpMatch ( ) { 
 LocalizedMessage message = 
 new LocalizedMessage ( 10 , 10 , " " , " " , null , null , getClass ( ) , null ) ; 
 final AuditEvent ev = new AuditEvent ( this , " ATest . java " , message ) ;
