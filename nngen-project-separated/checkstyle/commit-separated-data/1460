BLEU SCORE: 0.31702331385234306

TEST MSG: Issue # 2540 : unify it input file names for chapter5naming
GENERATED MSG: Issue # 2161 : unify test input file names for chapter2filebasic

TEST DIFF (one line): diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java <nl> index f6bdc93 . . 70c4b04 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class PackageNameTest extends BaseCheckTestSupport { <nl> <nl> final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; <nl> <nl> - final String filePath = builder . getFilePath ( " PackageNameInputGood " ) ; <nl> + final String filePath = builder . getFilePath ( " InputPackageNameGood " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> @ @ - 66 , 7 + 66 , 7 @ @ public class PackageNameTest extends BaseCheckTestSupport { <nl> " 1 : 9 : " + msg , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " PackageNameInputBad " ) ; <nl> + final String filePath = builder . getFilePath ( " InputPackageNameBad " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> @ @ - 82 , 7 + 82 , 7 @ @ public class PackageNameTest extends BaseCheckTestSupport { <nl> " 1 : 9 : " + msg , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " BadPackageNameInput2 " ) ; <nl> + final String filePath = builder . getFilePath ( " InputBadPackageName2 " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> @ @ - 98 , 7 + 98 , 7 @ @ public class PackageNameTest extends BaseCheckTestSupport { <nl> " 1 : 9 : " + msg , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " PackageBadNameInput3 " ) ; <nl> + final String filePath = builder . getFilePath ( " InputPackageBadName3 " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameTest . java <nl> index 450a6b5 . . 094ed7c 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameTest . java <nl> @ @ - 83 , 7 + 83 , 7 @ @ public class TypeNameTest extends BaseCheckTestSupport { <nl> " 71 : 12 : " + getCheckMessage ( checkConfig . getMessages ( ) , msgKey , " Annotation $ " , format ) , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " TypeNameInput " ) ; <nl> + final String filePath = builder . getFilePath ( " InputTypeName " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameTest . java <nl> index b62f185 . . 4873ace 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameTest . java <nl> @ @ - 62 , 7 + 62 , 7 @ @ public class MemberNameTest extends BaseCheckTestSupport { <nl> " 25 : 9 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " mPackage $ " , format ) , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " MemberNameInput _ Basic " ) ; <nl> + final String filePath = builder . getFilePath ( " InputMemberNameBasic " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> @ @ - 106 , 7 + 106 , 7 @ @ public class MemberNameTest extends BaseCheckTestSupport { <nl> " 131 : 25 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " mTest2 $ " , format ) , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " MemberNameInput _ Simple " ) ; <nl> + final String filePath = builder . getFilePath ( " InputMemberNameSimple " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameTest . java <nl> index 4a5a23f . . ba676e3 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameTest . java <nl> @ @ - 61 , 7 + 61 , 7 @ @ public class ParameterNameTest extends BaseCheckTestSupport { <nl> " 50 : 21 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " bB " , format ) , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " ParameterNameInput _ Simple " ) ; <nl> + final String filePath = builder . getFilePath ( " InputParameterNameSimple " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameTest . java <nl> index fd29dc0 . . 5ee7206 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameTest . java <nl> @ @ - 60 , 7 + 60 , 7 @ @ public class LocalVariableNameTest extends BaseCheckTestSupport { <nl> " 36 : 13 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " aaaaaa $ " , format ) , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " LocalVariableNameInput _ Simple " ) ; <nl> + final String filePath = builder . getFilePath ( " InputLocalVariableNameSimple " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> @ @ - 79 , 7 + 79 , 7 @ @ public class LocalVariableNameTest extends BaseCheckTestSupport { <nl> " 61 : 17 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " index $ " , format ) , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " LocalVariableNameInput _ OneCharVarName " ) ; <nl> + final String filePath = builder . getFilePath ( " InputLocalVariableNameOneCharVarName " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java <nl> index 401111d . . a7475c6 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java <nl> @ @ - 52 , 7 + 52 , 7 @ @ public class ClassTypeParameterNameTest extends BaseCheckTestSupport { <nl> " 27 : 24 : " + getCheckMessage ( configuration . getMessages ( ) , MSG _ KEY , " $ foo " , format ) , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " ClassTypeParameterNameInput " ) ; <nl> + final String filePath = builder . getFilePath ( " InputClassTypeParameterName " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( configuration , filePath , expected , warnList ) ; <nl> diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameTest . java <nl> index d000116 . . ecb3ce8 100644 <nl> - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameTest . java <nl> + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameTest . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class MethodTypeParameterNameTest extends BaseCheckTestSupport { <nl> " 42 : 14 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " EE " , format ) , <nl> } ; <nl> <nl> - final String filePath = builder . getFilePath ( " MethodTypeParameterNameInput " ) ; <nl> + final String filePath = builder . getFilePath ( " InputMethodTypeParameterName " ) ; <nl> <nl> final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; <nl> verify ( checkConfig , filePath , expected , warnList ) ; <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / InputPackageBadName3 . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / InputPackageBadName3 . java <nl> new file mode 100644 <nl> index 0000000 . . b2c8cb3 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / InputPackageBadName3 . java <nl> @ @ - 0 , 0 + 1 , 2 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule521 $ packagenames ; / / warn <nl> + final class InputPackageBadName3 { } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / PackageBadNameInput3 . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / PackageBadNameInput3 . java <nl> deleted file mode 100644 <nl> index 893dcaa . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / PackageBadNameInput3 . java <nl> + + + / dev / null <nl> @ @ - 1 , 2 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule521 $ packagenames ; / / warn <nl> - final class PackageBadNameInput3 { } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / BadPackageNameInput2 . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / BadPackageNameInput2 . java <nl> deleted file mode 100644 <nl> index 1ca2969 . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / BadPackageNameInput2 . java <nl> + + + / dev / null <nl> @ @ - 1 , 2 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule521 _ packagenames ; / / warn <nl> - final class BadPackageNameInput2 { } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / InputBadPackageName2 . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / InputBadPackageName2 . java <nl> new file mode 100644 <nl> index 0000000 . . e204f6b <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / InputBadPackageName2 . java <nl> @ @ - 0 , 0 + 1 , 2 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule521 _ packagenames ; / / warn <nl> + final class InputBadPackageName2 { } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / InputPackageNameBad . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / InputPackageNameBad . java <nl> new file mode 100644 <nl> index 0000000 . . 37dcbfb <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / InputPackageNameBad . java <nl> @ @ - 0 , 0 + 1 , 2 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule521packageNamesCamelCase ; / / warn <nl> + final class InputPackageNameBad { } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / PackageNameInputBad . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / PackageNameInputBad . java <nl> deleted file mode 100644 <nl> index e17205c . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / PackageNameInputBad . java <nl> + + + / dev / null <nl> @ @ - 1 , 2 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule521packageNamesCamelCase ; / / warn <nl> - final class PackageNameInputBad { } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / InputPackageNameGood . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / InputPackageNameGood . java <nl> new file mode 100644 <nl> index 0000000 . . 96b59c2 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / InputPackageNameGood . java <nl> @ @ - 0 , 0 + 1 , 2 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule521packagenames ; / / ok <nl> + final class InputPackageNameGood { } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameInputGood . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameInputGood . java <nl> deleted file mode 100644 <nl> index 2916ec1 . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameInputGood . java <nl> + + + / dev / null <nl> @ @ - 1 , 2 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule521packagenames ; / / ok <nl> - final class PackageNameInputGood { } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / InputTypeName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / InputTypeName . java <nl> new file mode 100644 <nl> index 0000000 . . ca84789 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / InputTypeName . java <nl> @ @ - 0 , 0 + 1 , 71 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule522typenames ; <nl> + <nl> + class inputHeaderClass { / / warn <nl> + <nl> + public interface InputHeader _ _ _ Interface { } ; / / warn <nl> + <nl> + public enum inputHeaderEnum { one , two } ; / / warn <nl> + <nl> + class NoValid $ Name { } / / warn <nl> + <nl> + class $ NoValidName { } / / warn <nl> + <nl> + class NoValidName $ { } / / warn <nl> + <nl> + } <nl> + <nl> + class ValidName { } / / ok <nl> + <nl> + class _ ValidName { } / / warn <nl> + <nl> + class Valid _ Name { } / / warn <nl> + <nl> + class ValidName _ { } / / warn <nl> + <nl> + interface Foo { } / / ok <nl> + <nl> + interface _ Foo { } / / warn <nl> + <nl> + interface Fo _ o { } / / warn <nl> + <nl> + interface Foo _ { } / / warn <nl> + <nl> + interface $ Foo { } / / warn <nl> + <nl> + interface Fo $ o { } / / warn <nl> + <nl> + interface Foo $ { } / / warn <nl> + <nl> + enum FooEnum { } / / ok <nl> + <nl> + enum _ FooEnum { } / / warn <nl> + <nl> + enum Foo _ Enum { } / / warn <nl> + <nl> + enum FooEnum _ { } / / warn <nl> + <nl> + enum $ FooEnum { } / / warn <nl> + <nl> + enum Foo $ Enum { } / / warn <nl> + <nl> + enum FooEnum $ { } / / warn <nl> + <nl> + class aaa { } / / warn <nl> + <nl> + interface bbb { } / / warn <nl> + <nl> + enum ccc { } / / warn <nl> + <nl> + @ interface Annotation { } / / ok <nl> + <nl> + @ interface _ Annotation { } / / warn <nl> + <nl> + @ interface Annot _ ation { } / / warn <nl> + <nl> + @ interface Annotation _ { } / / warn <nl> + <nl> + @ interface $ Annotation { } / / warn <nl> + <nl> + @ interface Annot $ ation { } / / warn <nl> + <nl> + @ interface Annotation $ { } / / warn <nl> \ No newline at end of file <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameInput . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameInput . java <nl> deleted file mode 100644 <nl> index ca84789 . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameInput . java <nl> + + + / dev / null <nl> @ @ - 1 , 71 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule522typenames ; <nl> - <nl> - class inputHeaderClass { / / warn <nl> - <nl> - public interface InputHeader _ _ _ Interface { } ; / / warn <nl> - <nl> - public enum inputHeaderEnum { one , two } ; / / warn <nl> - <nl> - class NoValid $ Name { } / / warn <nl> - <nl> - class $ NoValidName { } / / warn <nl> - <nl> - class NoValidName $ { } / / warn <nl> - <nl> - } <nl> - <nl> - class ValidName { } / / ok <nl> - <nl> - class _ ValidName { } / / warn <nl> - <nl> - class Valid _ Name { } / / warn <nl> - <nl> - class ValidName _ { } / / warn <nl> - <nl> - interface Foo { } / / ok <nl> - <nl> - interface _ Foo { } / / warn <nl> - <nl> - interface Fo _ o { } / / warn <nl> - <nl> - interface Foo _ { } / / warn <nl> - <nl> - interface $ Foo { } / / warn <nl> - <nl> - interface Fo $ o { } / / warn <nl> - <nl> - interface Foo $ { } / / warn <nl> - <nl> - enum FooEnum { } / / ok <nl> - <nl> - enum _ FooEnum { } / / warn <nl> - <nl> - enum Foo _ Enum { } / / warn <nl> - <nl> - enum FooEnum _ { } / / warn <nl> - <nl> - enum $ FooEnum { } / / warn <nl> - <nl> - enum Foo $ Enum { } / / warn <nl> - <nl> - enum FooEnum $ { } / / warn <nl> - <nl> - class aaa { } / / warn <nl> - <nl> - interface bbb { } / / warn <nl> - <nl> - enum ccc { } / / warn <nl> - <nl> - @ interface Annotation { } / / ok <nl> - <nl> - @ interface _ Annotation { } / / warn <nl> - <nl> - @ interface Annot _ ation { } / / warn <nl> - <nl> - @ interface Annotation _ { } / / warn <nl> - <nl> - @ interface $ Annotation { } / / warn <nl> - <nl> - @ interface Annot $ ation { } / / warn <nl> - <nl> - @ interface Annotation $ { } / / warn <nl> \ No newline at end of file <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameBasic . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameBasic . java <nl> new file mode 100644 <nl> index 0000000 . . e0c5fbe <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameBasic . java <nl> @ @ - 0 , 0 + 1 , 26 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; <nl> + <nl> + public class InputMemberNameBasic <nl> + { <nl> + public int mPublic ; / / warn <nl> + protected int mProtected ; / / warn <nl> + int mPackage ; / / warn <nl> + private int mPrivate ; / / warn <nl> + <nl> + public int _ public ; / / warn <nl> + protected int prot _ ected ; / / warn <nl> + int package _ ; / / warn <nl> + private int priva $ te ; / / warn <nl> + <nl> + public int ppublic ; / / ok <nl> + protected int pprotected ; / / ok <nl> + int ppackage ; / / ok <nl> + private int pprivate ; / / ok <nl> + <nl> + int ABC = 0 ; / / warn <nl> + final int C _ D _ E = 0 ; / / warn <nl> + <nl> + public int $ mPublic ; / / warn <nl> + protected int mPro $ tected ; / / warn <nl> + int mPackage $ ; / / warn <nl> + } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java <nl> new file mode 100644 <nl> index 0000000 . . f8c08df <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java <nl> @ @ - 0 , 0 + 1 , 137 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; <nl> + import java . io . * ; <nl> + <nl> + final class InputSimple <nl> + { <nl> + <nl> + public static final int badConstant = 2 ; <nl> + <nl> + public static final int MAX _ ROWS = 2 ; <nl> + <nl> + <nl> + private int bad $ Static = 2 ; / / warn <nl> + <nl> + private static int sum _ Created = 0 ; <nl> + <nl> + <nl> + private int bad _ Member = 2 ; / / warn <nl> + <nl> + private int m = 0 ; / / warn <nl> + <nl> + protected int m _ M = 0 ; / / warn <nl> + <nl> + <nl> + private int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn <nl> + 4 } ; <nl> + <nl> + <nl> + public static int sTest1 ; <nl> + <nl> + protected static int sTest3 ; <nl> + <nl> + static int sTest2 ; <nl> + <nl> + <nl> + int mTest1 ; / / warn <nl> + <nl> + public int mTest2 ; / / warn <nl> + <nl> + public int $ mTest2 ; / / warn <nl> + <nl> + public int mTes $ t2 ; / / warn <nl> + <nl> + public int mTest2 $ ; / / warn <nl> + <nl> + / * * test local variables . This Check doesn ' t verify local variables , only members . * / <nl> + private void localVariables ( ) <nl> + { <nl> + int a ; <nl> + int aA ; <nl> + int a1 _ a ; <nl> + int A _ A ; <nl> + int aa2 _ a ; <nl> + int _ a ; <nl> + int _ aa ; <nl> + int aa _ ; <nl> + int aaa $ aaa ; <nl> + int $ aaaaaa ; <nl> + int aaaaaa $ ; <nl> + <nl> + int aa ; <nl> + int aaAa1a ; <nl> + int aaAaaAa2a1 ; <nl> + } <nl> + <nl> + interface Foo { <nl> + public void greet ( ) ; <nl> + <nl> + } <nl> + <nl> + class InnerClass <nl> + { <nl> + public static final int badConstant = 2 ; <nl> + <nl> + public static final int MAX _ ROWS = 2 ; <nl> + <nl> + <nl> + private int bad $ Static = 2 ; / / warn <nl> + <nl> + private int sum _ Created = 0 ; / / warn <nl> + <nl> + <nl> + private int bad _ Member = 2 ; / / warn <nl> + <nl> + private int m = 0 ; / / warn <nl> + <nl> + protected int m _ M = 0 ; / / warn <nl> + <nl> + <nl> + private int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn <nl> + 4 } ; <nl> + <nl> + <nl> + int mTest1 ; / / warn <nl> + <nl> + public int mTest2 ; / / warn <nl> + <nl> + public int $ mTest2 ; / / warn <nl> + <nl> + public int mTes $ t2 ; / / warn <nl> + <nl> + public int mTest2 $ ; / / warn <nl> + <nl> + void fooMethod ( ) <nl> + { <nl> + Foo foo = new Foo ( ) { <nl> + <nl> + int bad $ Static = 2 ; / / warn <nl> + <nl> + int sum _ Created = 0 ; / / warn <nl> + <nl> + <nl> + int bad _ Member = 2 ; / / warn <nl> + <nl> + int m = 0 ; / / warn <nl> + <nl> + int m _ M = 0 ; / / warn <nl> + <nl> + <nl> + int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn <nl> + 4 } ; <nl> + <nl> + <nl> + int mTest1 ; / / warn <nl> + <nl> + int mTest2 ; / / warn <nl> + <nl> + int $ mTest2 ; / / warn <nl> + <nl> + int mTes $ t2 ; / / warn <nl> + <nl> + int mTest2 $ ; / / warn <nl> + <nl> + public void greet ( ) { } <nl> + } ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Basic . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Basic . java <nl> deleted file mode 100644 <nl> index 5aab44b . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Basic . java <nl> + + + / dev / null <nl> @ @ - 1 , 26 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; <nl> - <nl> - public class MemberNameInput _ Basic <nl> - { <nl> - public int mPublic ; / / warn <nl> - protected int mProtected ; / / warn <nl> - int mPackage ; / / warn <nl> - private int mPrivate ; / / warn <nl> - <nl> - public int _ public ; / / warn <nl> - protected int prot _ ected ; / / warn <nl> - int package _ ; / / warn <nl> - private int priva $ te ; / / warn <nl> - <nl> - public int ppublic ; / / ok <nl> - protected int pprotected ; / / ok <nl> - int ppackage ; / / ok <nl> - private int pprivate ; / / ok <nl> - <nl> - int ABC = 0 ; / / warn <nl> - final int C _ D _ E = 0 ; / / warn <nl> - <nl> - public int $ mPublic ; / / warn <nl> - protected int mPro $ tected ; / / warn <nl> - int mPackage $ ; / / warn <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Simple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Simple . java <nl> deleted file mode 100644 <nl> index f8c08df . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Simple . java <nl> + + + / dev / null <nl> @ @ - 1 , 137 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; <nl> - import java . io . * ; <nl> - <nl> - final class InputSimple <nl> - { <nl> - <nl> - public static final int badConstant = 2 ; <nl> - <nl> - public static final int MAX _ ROWS = 2 ; <nl> - <nl> - <nl> - private int bad $ Static = 2 ; / / warn <nl> - <nl> - private static int sum _ Created = 0 ; <nl> - <nl> - <nl> - private int bad _ Member = 2 ; / / warn <nl> - <nl> - private int m = 0 ; / / warn <nl> - <nl> - protected int m _ M = 0 ; / / warn <nl> - <nl> - <nl> - private int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn <nl> - 4 } ; <nl> - <nl> - <nl> - public static int sTest1 ; <nl> - <nl> - protected static int sTest3 ; <nl> - <nl> - static int sTest2 ; <nl> - <nl> - <nl> - int mTest1 ; / / warn <nl> - <nl> - public int mTest2 ; / / warn <nl> - <nl> - public int $ mTest2 ; / / warn <nl> - <nl> - public int mTes $ t2 ; / / warn <nl> - <nl> - public int mTest2 $ ; / / warn <nl> - <nl> - / * * test local variables . This Check doesn ' t verify local variables , only members . * / <nl> - private void localVariables ( ) <nl> - { <nl> - int a ; <nl> - int aA ; <nl> - int a1 _ a ; <nl> - int A _ A ; <nl> - int aa2 _ a ; <nl> - int _ a ; <nl> - int _ aa ; <nl> - int aa _ ; <nl> - int aaa $ aaa ; <nl> - int $ aaaaaa ; <nl> - int aaaaaa $ ; <nl> - <nl> - int aa ; <nl> - int aaAa1a ; <nl> - int aaAaaAa2a1 ; <nl> - } <nl> - <nl> - interface Foo { <nl> - public void greet ( ) ; <nl> - <nl> - } <nl> - <nl> - class InnerClass <nl> - { <nl> - public static final int badConstant = 2 ; <nl> - <nl> - public static final int MAX _ ROWS = 2 ; <nl> - <nl> - <nl> - private int bad $ Static = 2 ; / / warn <nl> - <nl> - private int sum _ Created = 0 ; / / warn <nl> - <nl> - <nl> - private int bad _ Member = 2 ; / / warn <nl> - <nl> - private int m = 0 ; / / warn <nl> - <nl> - protected int m _ M = 0 ; / / warn <nl> - <nl> - <nl> - private int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn <nl> - 4 } ; <nl> - <nl> - <nl> - int mTest1 ; / / warn <nl> - <nl> - public int mTest2 ; / / warn <nl> - <nl> - public int $ mTest2 ; / / warn <nl> - <nl> - public int mTes $ t2 ; / / warn <nl> - <nl> - public int mTest2 $ ; / / warn <nl> - <nl> - void fooMethod ( ) <nl> - { <nl> - Foo foo = new Foo ( ) { <nl> - <nl> - int bad $ Static = 2 ; / / warn <nl> - <nl> - int sum _ Created = 0 ; / / warn <nl> - <nl> - <nl> - int bad _ Member = 2 ; / / warn <nl> - <nl> - int m = 0 ; / / warn <nl> - <nl> - int m _ M = 0 ; / / warn <nl> - <nl> - <nl> - int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn <nl> - 4 } ; <nl> - <nl> - <nl> - int mTest1 ; / / warn <nl> - <nl> - int mTest2 ; / / warn <nl> - <nl> - int $ mTest2 ; / / warn <nl> - <nl> - int mTes $ t2 ; / / warn <nl> - <nl> - int mTest2 $ ; / / warn <nl> - <nl> - public void greet ( ) { } <nl> - } ; <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / InputParameterNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / InputParameterNameSimple . java <nl> new file mode 100644 <nl> index 0000000 . . cd63896 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / InputParameterNameSimple . java <nl> @ @ - 0 , 0 + 1 , 51 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule526parameternames ; <nl> + <nl> + import java . io . * ; <nl> + <nl> + final class InputSimple <nl> + { <nl> + void toManyArgs ( <nl> + 	 	 int $ arg1 , / / warn <nl> + 	 	 int ar $ g2 , / / warn <nl> + 	 	 int arg3 $ , / / warn <nl> + 	 	 int a _ rg4 , / / warn <nl> + 	 	 int _ arg5 , / / warn <nl> + 	 	 int arg6 _ , / / warn <nl> + 	 	 int aArg7 , / / warn <nl> + 	 	 int aArg8 , / / warn <nl> + 	 	 int aar _ g ) / / warn <nl> + <nl> + { } <nl> + } <nl> + <nl> + class InputSimple2 <nl> + { <nl> + <nl> + / * * Some more Javadoc . * / <nl> + public void doSomething ( int aaa , int abn , String aaA , <nl> + boolean bB ) / / warn <nl> + { <nl> + for ( Object O : new java . util . ArrayList ( ) ) <nl> + { <nl> + <nl> + } <nl> + } <nl> + } <nl> + <nl> + <nl> + / * * Test enum for member naming check * / <nl> + enum MyEnum1 <nl> + { <nl> + / * * ABC constant * / <nl> + ABC , <nl> + <nl> + / * * XYZ constant * / <nl> + XYZ ; <nl> + <nl> + / * * Should be mSomeMemeber * / <nl> + private int someMember ; <nl> + <nl> + public void doEnum ( int aaaL , <nl> + 	 	 long llll _ llll , / / warn <nl> + boolean bB ) { } / / warn <nl> + } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameInput _ Simple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameInput _ Simple . java <nl> deleted file mode 100644 <nl> index cd63896 . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameInput _ Simple . java <nl> + + + / dev / null <nl> @ @ - 1 , 51 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule526parameternames ; <nl> - <nl> - import java . io . * ; <nl> - <nl> - final class InputSimple <nl> - { <nl> - void toManyArgs ( <nl> - 	 	 int $ arg1 , / / warn <nl> - 	 	 int ar $ g2 , / / warn <nl> - 	 	 int arg3 $ , / / warn <nl> - 	 	 int a _ rg4 , / / warn <nl> - 	 	 int _ arg5 , / / warn <nl> - 	 	 int arg6 _ , / / warn <nl> - 	 	 int aArg7 , / / warn <nl> - 	 	 int aArg8 , / / warn <nl> - 	 	 int aar _ g ) / / warn <nl> - <nl> - { } <nl> - } <nl> - <nl> - class InputSimple2 <nl> - { <nl> - <nl> - / * * Some more Javadoc . * / <nl> - public void doSomething ( int aaa , int abn , String aaA , <nl> - boolean bB ) / / warn <nl> - { <nl> - for ( Object O : new java . util . ArrayList ( ) ) <nl> - { <nl> - <nl> - } <nl> - } <nl> - } <nl> - <nl> - <nl> - / * * Test enum for member naming check * / <nl> - enum MyEnum1 <nl> - { <nl> - / * * ABC constant * / <nl> - ABC , <nl> - <nl> - / * * XYZ constant * / <nl> - XYZ ; <nl> - <nl> - / * * Should be mSomeMemeber * / <nl> - private int someMember ; <nl> - <nl> - public void doEnum ( int aaaL , <nl> - 	 	 long llll _ llll , / / warn <nl> - boolean bB ) { } / / warn <nl> - } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java <nl> new file mode 100644 <nl> index 0000000 . . 462a5f7 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java <nl> @ @ - 0 , 0 + 1 , 65 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; <nl> + <nl> + import java . io . * ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + <nl> + class InputOneCharInitVarName <nl> + { <nl> + public void fooMethod ( ) <nl> + { <nl> + for ( int i = 1 ; i < 10 ; i + + ) { / / ok <nl> + / / some code <nl> + } <nl> + <nl> + int i = 0 ; / / warn <nl> + <nl> + for ( int index = 1 ; index < 10 ; index + + ) { / / ok <nl> + / / some code <nl> + } <nl> + <nl> + for ( int I _ ndex = 1 ; I _ ndex < 10 ; I _ ndex + + ) { / / warn <nl> + / / some code <nl> + } <nl> + <nl> + int index = 1 ; <nl> + <nl> + for ( ; index < 10 ; index + + ) { / / ok <nl> + / / some code <nl> + } <nl> + <nl> + for ( ; i < 12 ; i + + ) { / / ok <nl> + / / some code <nl> + } <nl> + <nl> + Map < String , String > map = new HashMap < String , String > ( ) ; <nl> + <nl> + for ( Map . Entry < String , String > e : map . entrySet ( ) ) { / / ok <nl> + / / some code <nl> + } <nl> + <nl> + for ( int a = 0 , b [ ] = { 1 } , c [ ] [ ] = { { 1 } , { 2 } } ; a < 10 ; a + + ) { / / ok <nl> + / / something <nl> + } <nl> + <nl> + for ( int i _ ndex = 1 ; i _ ndex < 10 ; i _ ndex + + ) { / / warn <nl> + / / some code <nl> + } <nl> + <nl> + for ( int ii _ i1 = 1 ; ii _ i1 < 10 ; ii _ i1 + + ) { / / warn <nl> + / / some code <nl> + } <nl> + <nl> + for ( int $ index = 1 ; $ index < 10 ; $ index + + ) { / / warn <nl> + / / some code <nl> + } <nl> + <nl> + for ( int in $ dex = 1 ; in $ dex < 10 ; in $ dex + + ) { / / warn <nl> + / / some code <nl> + } <nl> + <nl> + for ( int index $ = 1 ; index $ < 10 ; index $ + + ) { / / warn <nl> + / / some code <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java <nl> new file mode 100644 <nl> index 0000000 . . 3a3764d <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java <nl> @ @ - 0 , 0 + 1 , 43 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; <nl> + <nl> + final class InputSimple <nl> + { <nl> + public static final int badConstant = 2 ; <nl> + <nl> + public static final int MAX _ ROWS = 2 ; <nl> + <nl> + private static int badStatic = 2 ; <nl> + <nl> + private static int sNumCreated = 0 ; <nl> + <nl> + private int badMember = 2 ; <nl> + <nl> + private int mNumCreated1 = 0 ; <nl> + <nl> + protected int mNumCreated2 = 0 ; <nl> + <nl> + private int [ ] mInts = new int [ ] { 1 , 2 , 3 , <nl> + 4 } ; <nl> + <nl> + / * * test local variables * / <nl> + private void localVariables ( ) <nl> + { <nl> + / / bad examples <nl> + int a ; / / warn <nl> + int aA ; / / warn <nl> + int a1 _ a ; / / warn <nl> + int A _ A ; / / warn <nl> + int aa2 _ a ; / / warn <nl> + int _ a ; / / warn <nl> + int _ aa ; / / warn <nl> + int aa _ ; / / warn <nl> + int aaa $ aaa ; / / warn <nl> + int $ aaaaaa ; / / warn <nl> + int aaaaaa $ ; / / warn <nl> + <nl> + / / good examples <nl> + int aa ; <nl> + int aaAa1a ; <nl> + int aaAaaAa2a1 ; <nl> + } <nl> + } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ OneCharVarName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ OneCharVarName . java <nl> deleted file mode 100644 <nl> index 462a5f7 . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ OneCharVarName . java <nl> + + + / dev / null <nl> @ @ - 1 , 65 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; <nl> - <nl> - import java . io . * ; <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - <nl> - class InputOneCharInitVarName <nl> - { <nl> - public void fooMethod ( ) <nl> - { <nl> - for ( int i = 1 ; i < 10 ; i + + ) { / / ok <nl> - / / some code <nl> - } <nl> - <nl> - int i = 0 ; / / warn <nl> - <nl> - for ( int index = 1 ; index < 10 ; index + + ) { / / ok <nl> - / / some code <nl> - } <nl> - <nl> - for ( int I _ ndex = 1 ; I _ ndex < 10 ; I _ ndex + + ) { / / warn <nl> - / / some code <nl> - } <nl> - <nl> - int index = 1 ; <nl> - <nl> - for ( ; index < 10 ; index + + ) { / / ok <nl> - / / some code <nl> - } <nl> - <nl> - for ( ; i < 12 ; i + + ) { / / ok <nl> - / / some code <nl> - } <nl> - <nl> - Map < String , String > map = new HashMap < String , String > ( ) ; <nl> - <nl> - for ( Map . Entry < String , String > e : map . entrySet ( ) ) { / / ok <nl> - / / some code <nl> - } <nl> - <nl> - for ( int a = 0 , b [ ] = { 1 } , c [ ] [ ] = { { 1 } , { 2 } } ; a < 10 ; a + + ) { / / ok <nl> - / / something <nl> - } <nl> - <nl> - for ( int i _ ndex = 1 ; i _ ndex < 10 ; i _ ndex + + ) { / / warn <nl> - / / some code <nl> - } <nl> - <nl> - for ( int ii _ i1 = 1 ; ii _ i1 < 10 ; ii _ i1 + + ) { / / warn <nl> - / / some code <nl> - } <nl> - <nl> - for ( int $ index = 1 ; $ index < 10 ; $ index + + ) { / / warn <nl> - / / some code <nl> - } <nl> - <nl> - for ( int in $ dex = 1 ; in $ dex < 10 ; in $ dex + + ) { / / warn <nl> - / / some code <nl> - } <nl> - <nl> - for ( int index $ = 1 ; index $ < 10 ; index $ + + ) { / / warn <nl> - / / some code <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ Simple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ Simple . java <nl> deleted file mode 100644 <nl> index 3a3764d . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ Simple . java <nl> + + + / dev / null <nl> @ @ - 1 , 43 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; <nl> - <nl> - final class InputSimple <nl> - { <nl> - public static final int badConstant = 2 ; <nl> - <nl> - public static final int MAX _ ROWS = 2 ; <nl> - <nl> - private static int badStatic = 2 ; <nl> - <nl> - private static int sNumCreated = 0 ; <nl> - <nl> - private int badMember = 2 ; <nl> - <nl> - private int mNumCreated1 = 0 ; <nl> - <nl> - protected int mNumCreated2 = 0 ; <nl> - <nl> - private int [ ] mInts = new int [ ] { 1 , 2 , 3 , <nl> - 4 } ; <nl> - <nl> - / * * test local variables * / <nl> - private void localVariables ( ) <nl> - { <nl> - / / bad examples <nl> - int a ; / / warn <nl> - int aA ; / / warn <nl> - int a1 _ a ; / / warn <nl> - int A _ A ; / / warn <nl> - int aa2 _ a ; / / warn <nl> - int _ a ; / / warn <nl> - int _ aa ; / / warn <nl> - int aa _ ; / / warn <nl> - int aaa $ aaa ; / / warn <nl> - int $ aaaaaa ; / / warn <nl> - int aaaaaa $ ; / / warn <nl> - <nl> - / / good examples <nl> - int aa ; <nl> - int aaAa1a ; <nl> - int aaAaaAa2a1 ; <nl> - } <nl> - } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameInput . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameInput . java <nl> deleted file mode 100644 <nl> index b8869f9 . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameInput . java <nl> + + + / dev / null <nl> @ @ - 1 , 46 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; <nl> - <nl> - import java . io . Serializable ; <nl> - <nl> - class InputTypeParameterName < t > / / warn <nl> - { <nl> - public < TT > void foo ( ) { } <nl> - <nl> - < e _ e > void foo ( int i ) { <nl> - } <nl> - } <nl> - <nl> - class Other < foo extends Serializable & Cloneable > { / / warn <nl> - <nl> - foo getOne ( ) { <nl> - return null ; <nl> - } <nl> - <nl> - < Tfo $ o2T extends foo > Tfo $ o2T getTwo ( Tfo $ o2T a ) { <nl> - return null ; <nl> - } <nl> - <nl> - < foo _ extends Runnable > foo getShadow ( ) { <nl> - return null ; <nl> - } <nl> - <nl> - static class Junk < $ foo > { / / warn <nl> - < _ abc extends $ foo > void getMoreFoo ( ) { <nl> - } <nl> - } <nl> - } <nl> - <nl> - class MoreOther < T extends Cloneable > { <nl> - <nl> - < E extends T > void getMore ( ) { <nl> - new Other ( ) { <nl> - < T $ > void getMoreFoo ( ) { <nl> - } <nl> - } ; <nl> - <nl> - Other o = new Other ( ) { <nl> - < EE > void getMoreFoo ( ) { <nl> - } <nl> - } ; <nl> - } <nl> - } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java <nl> new file mode 100644 <nl> index 0000000 . . b8869f9 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java <nl> @ @ - 0 , 0 + 1 , 46 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; <nl> + <nl> + import java . io . Serializable ; <nl> + <nl> + class InputTypeParameterName < t > / / warn <nl> + { <nl> + public < TT > void foo ( ) { } <nl> + <nl> + < e _ e > void foo ( int i ) { <nl> + } <nl> + } <nl> + <nl> + class Other < foo extends Serializable & Cloneable > { / / warn <nl> + <nl> + foo getOne ( ) { <nl> + return null ; <nl> + } <nl> + <nl> + < Tfo $ o2T extends foo > Tfo $ o2T getTwo ( Tfo $ o2T a ) { <nl> + return null ; <nl> + } <nl> + <nl> + < foo _ extends Runnable > foo getShadow ( ) { <nl> + return null ; <nl> + } <nl> + <nl> + static class Junk < $ foo > { / / warn <nl> + < _ abc extends $ foo > void getMoreFoo ( ) { <nl> + } <nl> + } <nl> + } <nl> + <nl> + class MoreOther < T extends Cloneable > { <nl> + <nl> + < E extends T > void getMore ( ) { <nl> + new Other ( ) { <nl> + < T $ > void getMoreFoo ( ) { <nl> + } <nl> + } ; <nl> + <nl> + Other o = new Other ( ) { <nl> + < EE > void getMoreFoo ( ) { <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java <nl> new file mode 100644 <nl> index 0000000 . . 4eb0a78 <nl> - - - / dev / null <nl> + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java <nl> @ @ - 0 , 0 + 1 , 46 @ @ <nl> + package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; <nl> + <nl> + import java . io . Serializable ; <nl> + <nl> + class InputTypeParameterName1 < t > <nl> + { <nl> + public < TT > void foo ( ) { } <nl> + <nl> + < e _ e > void foo ( int i ) { / / warn <nl> + } <nl> + } <nl> + <nl> + class Other2 < foo extends Serializable & Cloneable > { <nl> + <nl> + foo getOne ( ) { <nl> + return null ; <nl> + } <nl> + <nl> + < Tfo $ o2T extends foo > Tfo $ o2T getTwo ( Tfo $ o2T a ) { / / warn <nl> + return null ; <nl> + } <nl> + <nl> + < foo _ extends Runnable > foo getShadow ( ) { / / warn <nl> + return null ; <nl> + } <nl> + <nl> + static class Junk < $ foo > { <nl> + < _ abc extends $ foo > void getMoreFoo ( ) { / / warn <nl> + } <nl> + } <nl> + } <nl> + <nl> + class MoreOther3 < T extends Cloneable > { <nl> + <nl> + < E extends T > void getMore ( ) { <nl> + new Other2 ( ) { <nl> + < T $ > void getMoreFoo ( ) { / / warn <nl> + } <nl> + } ; <nl> + <nl> + Other2 o = new Other2 ( ) { <nl> + < EE > void getMoreFoo ( ) { / / warn <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameInput . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameInput . java <nl> deleted file mode 100644 <nl> index 4eb0a78 . . 0000000 <nl> - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameInput . java <nl> + + + / dev / null <nl> @ @ - 1 , 46 + 0 , 0 @ @ <nl> - package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; <nl> - <nl> - import java . io . Serializable ; <nl> - <nl> - class InputTypeParameterName1 < t > <nl> - { <nl> - public < TT > void foo ( ) { } <nl> - <nl> - < e _ e > void foo ( int i ) { / / warn <nl> - } <nl> - } <nl> - <nl> - class Other2 < foo extends Serializable & Cloneable > { <nl> - <nl> - foo getOne ( ) { <nl> - return null ; <nl> - } <nl> - <nl> - < Tfo $ o2T extends foo > Tfo $ o2T getTwo ( Tfo $ o2T a ) { / / warn <nl> - return null ; <nl> - } <nl> - <nl> - < foo _ extends Runnable > foo getShadow ( ) { / / warn <nl> - return null ; <nl> - } <nl> - <nl> - static class Junk < $ foo > { <nl> - < _ abc extends $ foo > void getMoreFoo ( ) { / / warn <nl> - } <nl> - } <nl> - } <nl> - <nl> - class MoreOther3 < T extends Cloneable > { <nl> - <nl> - < E extends T > void getMore ( ) { <nl> - new Other2 ( ) { <nl> - < T $ > void getMoreFoo ( ) { / / warn <nl> - } <nl> - } ; <nl> - <nl> - Other2 o = new Other2 ( ) { <nl> - < EE > void getMoreFoo ( ) { / / warn <nl> - } <nl> - } ; <nl> - } <nl> - }
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java <nl> index 5843e3f . . bf3d1c2 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java <nl> @ @ - 105 , 7 + 105 , 7 @ @ public final class IllegalCatchCheck extends Check { <nl> * @ param parentToken - parent node for types ( TYPE or BOR ) <nl> * @ return list , that contains all exception types in current catch <nl> * / <nl> - public static List < DetailAST > getAllExceptionTypes ( DetailAST parentToken ) { <nl> + private static List < DetailAST > getAllExceptionTypes ( DetailAST parentToken ) { <nl> DetailAST currentNode = parentToken . getFirstChild ( ) ; <nl> final List < DetailAST > exceptionTypes = new LinkedList < > ( ) ; <nl> if ( currentNode . getType ( ) = = TokenTypes . BOR ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> index 594f250 . . 04bb27c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java <nl> @ @ - 262 , 7 + 262 , 8 @ @ public class CommentsIndentationCheck extends Check { <nl> * @ param comment single line comment . <nl> * @ return the first token of the destributed previous statement of single line comment . <nl> * / <nl> - public static DetailAST getDistributedPreviousStatementOfSingleLineComment ( DetailAST comment ) { <nl> + private static DetailAST getDistributedPreviousStatementOfSingleLineComment ( <nl> + DetailAST comment ) { <nl> DetailAST previousStatement = comment . getPreviousSibling ( ) ; <nl> if ( previousStatement . getType ( ) = = TokenTypes . LITERAL _ RETURN <nl> | | previousStatement . getType ( ) = = TokenTypes . LITERAL _ THROW ) {

TEST DIFF:
diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java 
 index f6bdc93 . . 70c4b04 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameTest . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class PackageNameTest extends BaseCheckTestSupport { 
 
 final String [ ] expected = ArrayUtils . EMPTY _ STRING _ ARRAY ; 
 
 - final String filePath = builder . getFilePath ( " PackageNameInputGood " ) ; 
 + final String filePath = builder . getFilePath ( " InputPackageNameGood " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 @ @ - 66 , 7 + 66 , 7 @ @ public class PackageNameTest extends BaseCheckTestSupport { 
 " 1 : 9 : " + msg , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " PackageNameInputBad " ) ; 
 + final String filePath = builder . getFilePath ( " InputPackageNameBad " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 @ @ - 82 , 7 + 82 , 7 @ @ public class PackageNameTest extends BaseCheckTestSupport { 
 " 1 : 9 : " + msg , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " BadPackageNameInput2 " ) ; 
 + final String filePath = builder . getFilePath ( " InputBadPackageName2 " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 @ @ - 98 , 7 + 98 , 7 @ @ public class PackageNameTest extends BaseCheckTestSupport { 
 " 1 : 9 : " + msg , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " PackageBadNameInput3 " ) ; 
 + final String filePath = builder . getFilePath ( " InputPackageBadName3 " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameTest . java 
 index 450a6b5 . . 094ed7c 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameTest . java 
 @ @ - 83 , 7 + 83 , 7 @ @ public class TypeNameTest extends BaseCheckTestSupport { 
 " 71 : 12 : " + getCheckMessage ( checkConfig . getMessages ( ) , msgKey , " Annotation $ " , format ) , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " TypeNameInput " ) ; 
 + final String filePath = builder . getFilePath ( " InputTypeName " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameTest . java 
 index b62f185 . . 4873ace 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameTest . java 
 @ @ - 62 , 7 + 62 , 7 @ @ public class MemberNameTest extends BaseCheckTestSupport { 
 " 25 : 9 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " mPackage $ " , format ) , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " MemberNameInput _ Basic " ) ; 
 + final String filePath = builder . getFilePath ( " InputMemberNameBasic " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 @ @ - 106 , 7 + 106 , 7 @ @ public class MemberNameTest extends BaseCheckTestSupport { 
 " 131 : 25 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " mTest2 $ " , format ) , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " MemberNameInput _ Simple " ) ; 
 + final String filePath = builder . getFilePath ( " InputMemberNameSimple " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameTest . java 
 index 4a5a23f . . ba676e3 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameTest . java 
 @ @ - 61 , 7 + 61 , 7 @ @ public class ParameterNameTest extends BaseCheckTestSupport { 
 " 50 : 21 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " bB " , format ) , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " ParameterNameInput _ Simple " ) ; 
 + final String filePath = builder . getFilePath ( " InputParameterNameSimple " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameTest . java 
 index fd29dc0 . . 5ee7206 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameTest . java 
 @ @ - 60 , 7 + 60 , 7 @ @ public class LocalVariableNameTest extends BaseCheckTestSupport { 
 " 36 : 13 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " aaaaaa $ " , format ) , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " LocalVariableNameInput _ Simple " ) ; 
 + final String filePath = builder . getFilePath ( " InputLocalVariableNameSimple " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 @ @ - 79 , 7 + 79 , 7 @ @ public class LocalVariableNameTest extends BaseCheckTestSupport { 
 " 61 : 17 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " index $ " , format ) , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " LocalVariableNameInput _ OneCharVarName " ) ; 
 + final String filePath = builder . getFilePath ( " InputLocalVariableNameOneCharVarName " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java 
 index 401111d . . a7475c6 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameTest . java 
 @ @ - 52 , 7 + 52 , 7 @ @ public class ClassTypeParameterNameTest extends BaseCheckTestSupport { 
 " 27 : 24 : " + getCheckMessage ( configuration . getMessages ( ) , MSG _ KEY , " $ foo " , format ) , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " ClassTypeParameterNameInput " ) ; 
 + final String filePath = builder . getFilePath ( " InputClassTypeParameterName " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( configuration , filePath , expected , warnList ) ; 
 diff - - git a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameTest . java b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameTest . java 
 index d000116 . . ecb3ce8 100644 
 - - - a / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameTest . java 
 + + + b / src / it / java / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameTest . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public class MethodTypeParameterNameTest extends BaseCheckTestSupport { 
 " 42 : 14 : " + getCheckMessage ( checkConfig . getMessages ( ) , MSG _ KEY , " EE " , format ) , 
 } ; 
 
 - final String filePath = builder . getFilePath ( " MethodTypeParameterNameInput " ) ; 
 + final String filePath = builder . getFilePath ( " InputMethodTypeParameterName " ) ; 
 
 final Integer [ ] warnList = builder . getLinesWithWarn ( filePath ) ; 
 verify ( checkConfig , filePath , expected , warnList ) ; 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / InputPackageBadName3 . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / InputPackageBadName3 . java 
 new file mode 100644 
 index 0000000 . . b2c8cb3 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / InputPackageBadName3 . java 
 @ @ - 0 , 0 + 1 , 2 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule521 $ packagenames ; / / warn 
 + final class InputPackageBadName3 { } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / PackageBadNameInput3 . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / PackageBadNameInput3 . java 
 deleted file mode 100644 
 index 893dcaa . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 $ packagenames / PackageBadNameInput3 . java 
 + + + / dev / null 
 @ @ - 1 , 2 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule521 $ packagenames ; / / warn 
 - final class PackageBadNameInput3 { } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / BadPackageNameInput2 . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / BadPackageNameInput2 . java 
 deleted file mode 100644 
 index 1ca2969 . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / BadPackageNameInput2 . java 
 + + + / dev / null 
 @ @ - 1 , 2 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule521 _ packagenames ; / / warn 
 - final class BadPackageNameInput2 { } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / InputBadPackageName2 . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / InputBadPackageName2 . java 
 new file mode 100644 
 index 0000000 . . e204f6b 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521 _ packagenames / InputBadPackageName2 . java 
 @ @ - 0 , 0 + 1 , 2 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule521 _ packagenames ; / / warn 
 + final class InputBadPackageName2 { } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / InputPackageNameBad . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / InputPackageNameBad . java 
 new file mode 100644 
 index 0000000 . . 37dcbfb 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / InputPackageNameBad . java 
 @ @ - 0 , 0 + 1 , 2 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule521packageNamesCamelCase ; / / warn 
 + final class InputPackageNameBad { } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / PackageNameInputBad . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / PackageNameInputBad . java 
 deleted file mode 100644 
 index e17205c . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packageNamesCamelCase / PackageNameInputBad . java 
 + + + / dev / null 
 @ @ - 1 , 2 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule521packageNamesCamelCase ; / / warn 
 - final class PackageNameInputBad { } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / InputPackageNameGood . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / InputPackageNameGood . java 
 new file mode 100644 
 index 0000000 . . 96b59c2 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / InputPackageNameGood . java 
 @ @ - 0 , 0 + 1 , 2 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule521packagenames ; / / ok 
 + final class InputPackageNameGood { } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameInputGood . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameInputGood . java 
 deleted file mode 100644 
 index 2916ec1 . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule521packagenames / PackageNameInputGood . java 
 + + + / dev / null 
 @ @ - 1 , 2 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule521packagenames ; / / ok 
 - final class PackageNameInputGood { } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / InputTypeName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / InputTypeName . java 
 new file mode 100644 
 index 0000000 . . ca84789 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / InputTypeName . java 
 @ @ - 0 , 0 + 1 , 71 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule522typenames ; 
 + 
 + class inputHeaderClass { / / warn 
 + 
 + public interface InputHeader _ _ _ Interface { } ; / / warn 
 + 
 + public enum inputHeaderEnum { one , two } ; / / warn 
 + 
 + class NoValid $ Name { } / / warn 
 + 
 + class $ NoValidName { } / / warn 
 + 
 + class NoValidName $ { } / / warn 
 + 
 + } 
 + 
 + class ValidName { } / / ok 
 + 
 + class _ ValidName { } / / warn 
 + 
 + class Valid _ Name { } / / warn 
 + 
 + class ValidName _ { } / / warn 
 + 
 + interface Foo { } / / ok 
 + 
 + interface _ Foo { } / / warn 
 + 
 + interface Fo _ o { } / / warn 
 + 
 + interface Foo _ { } / / warn 
 + 
 + interface $ Foo { } / / warn 
 + 
 + interface Fo $ o { } / / warn 
 + 
 + interface Foo $ { } / / warn 
 + 
 + enum FooEnum { } / / ok 
 + 
 + enum _ FooEnum { } / / warn 
 + 
 + enum Foo _ Enum { } / / warn 
 + 
 + enum FooEnum _ { } / / warn 
 + 
 + enum $ FooEnum { } / / warn 
 + 
 + enum Foo $ Enum { } / / warn 
 + 
 + enum FooEnum $ { } / / warn 
 + 
 + class aaa { } / / warn 
 + 
 + interface bbb { } / / warn 
 + 
 + enum ccc { } / / warn 
 + 
 + @ interface Annotation { } / / ok 
 + 
 + @ interface _ Annotation { } / / warn 
 + 
 + @ interface Annot _ ation { } / / warn 
 + 
 + @ interface Annotation _ { } / / warn 
 + 
 + @ interface $ Annotation { } / / warn 
 + 
 + @ interface Annot $ ation { } / / warn 
 + 
 + @ interface Annotation $ { } / / warn 
 \ No newline at end of file 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameInput . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameInput . java 
 deleted file mode 100644 
 index ca84789 . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule522typenames / TypeNameInput . java 
 + + + / dev / null 
 @ @ - 1 , 71 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule522typenames ; 
 - 
 - class inputHeaderClass { / / warn 
 - 
 - public interface InputHeader _ _ _ Interface { } ; / / warn 
 - 
 - public enum inputHeaderEnum { one , two } ; / / warn 
 - 
 - class NoValid $ Name { } / / warn 
 - 
 - class $ NoValidName { } / / warn 
 - 
 - class NoValidName $ { } / / warn 
 - 
 - } 
 - 
 - class ValidName { } / / ok 
 - 
 - class _ ValidName { } / / warn 
 - 
 - class Valid _ Name { } / / warn 
 - 
 - class ValidName _ { } / / warn 
 - 
 - interface Foo { } / / ok 
 - 
 - interface _ Foo { } / / warn 
 - 
 - interface Fo _ o { } / / warn 
 - 
 - interface Foo _ { } / / warn 
 - 
 - interface $ Foo { } / / warn 
 - 
 - interface Fo $ o { } / / warn 
 - 
 - interface Foo $ { } / / warn 
 - 
 - enum FooEnum { } / / ok 
 - 
 - enum _ FooEnum { } / / warn 
 - 
 - enum Foo _ Enum { } / / warn 
 - 
 - enum FooEnum _ { } / / warn 
 - 
 - enum $ FooEnum { } / / warn 
 - 
 - enum Foo $ Enum { } / / warn 
 - 
 - enum FooEnum $ { } / / warn 
 - 
 - class aaa { } / / warn 
 - 
 - interface bbb { } / / warn 
 - 
 - enum ccc { } / / warn 
 - 
 - @ interface Annotation { } / / ok 
 - 
 - @ interface _ Annotation { } / / warn 
 - 
 - @ interface Annot _ ation { } / / warn 
 - 
 - @ interface Annotation _ { } / / warn 
 - 
 - @ interface $ Annotation { } / / warn 
 - 
 - @ interface Annot $ ation { } / / warn 
 - 
 - @ interface Annotation $ { } / / warn 
 \ No newline at end of file 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameBasic . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameBasic . java 
 new file mode 100644 
 index 0000000 . . e0c5fbe 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameBasic . java 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; 
 + 
 + public class InputMemberNameBasic 
 + { 
 + public int mPublic ; / / warn 
 + protected int mProtected ; / / warn 
 + int mPackage ; / / warn 
 + private int mPrivate ; / / warn 
 + 
 + public int _ public ; / / warn 
 + protected int prot _ ected ; / / warn 
 + int package _ ; / / warn 
 + private int priva $ te ; / / warn 
 + 
 + public int ppublic ; / / ok 
 + protected int pprotected ; / / ok 
 + int ppackage ; / / ok 
 + private int pprivate ; / / ok 
 + 
 + int ABC = 0 ; / / warn 
 + final int C _ D _ E = 0 ; / / warn 
 + 
 + public int $ mPublic ; / / warn 
 + protected int mPro $ tected ; / / warn 
 + int mPackage $ ; / / warn 
 + } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java 
 new file mode 100644 
 index 0000000 . . f8c08df 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / InputMemberNameSimple . java 
 @ @ - 0 , 0 + 1 , 137 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; 
 + import java . io . * ; 
 + 
 + final class InputSimple 
 + { 
 + 
 + public static final int badConstant = 2 ; 
 + 
 + public static final int MAX _ ROWS = 2 ; 
 + 
 + 
 + private int bad $ Static = 2 ; / / warn 
 + 
 + private static int sum _ Created = 0 ; 
 + 
 + 
 + private int bad _ Member = 2 ; / / warn 
 + 
 + private int m = 0 ; / / warn 
 + 
 + protected int m _ M = 0 ; / / warn 
 + 
 + 
 + private int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn 
 + 4 } ; 
 + 
 + 
 + public static int sTest1 ; 
 + 
 + protected static int sTest3 ; 
 + 
 + static int sTest2 ; 
 + 
 + 
 + int mTest1 ; / / warn 
 + 
 + public int mTest2 ; / / warn 
 + 
 + public int $ mTest2 ; / / warn 
 + 
 + public int mTes $ t2 ; / / warn 
 + 
 + public int mTest2 $ ; / / warn 
 + 
 + / * * test local variables . This Check doesn ' t verify local variables , only members . * / 
 + private void localVariables ( ) 
 + { 
 + int a ; 
 + int aA ; 
 + int a1 _ a ; 
 + int A _ A ; 
 + int aa2 _ a ; 
 + int _ a ; 
 + int _ aa ; 
 + int aa _ ; 
 + int aaa $ aaa ; 
 + int $ aaaaaa ; 
 + int aaaaaa $ ; 
 + 
 + int aa ; 
 + int aaAa1a ; 
 + int aaAaaAa2a1 ; 
 + } 
 + 
 + interface Foo { 
 + public void greet ( ) ; 
 + 
 + } 
 + 
 + class InnerClass 
 + { 
 + public static final int badConstant = 2 ; 
 + 
 + public static final int MAX _ ROWS = 2 ; 
 + 
 + 
 + private int bad $ Static = 2 ; / / warn 
 + 
 + private int sum _ Created = 0 ; / / warn 
 + 
 + 
 + private int bad _ Member = 2 ; / / warn 
 + 
 + private int m = 0 ; / / warn 
 + 
 + protected int m _ M = 0 ; / / warn 
 + 
 + 
 + private int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn 
 + 4 } ; 
 + 
 + 
 + int mTest1 ; / / warn 
 + 
 + public int mTest2 ; / / warn 
 + 
 + public int $ mTest2 ; / / warn 
 + 
 + public int mTes $ t2 ; / / warn 
 + 
 + public int mTest2 $ ; / / warn 
 + 
 + void fooMethod ( ) 
 + { 
 + Foo foo = new Foo ( ) { 
 + 
 + int bad $ Static = 2 ; / / warn 
 + 
 + int sum _ Created = 0 ; / / warn 
 + 
 + 
 + int bad _ Member = 2 ; / / warn 
 + 
 + int m = 0 ; / / warn 
 + 
 + int m _ M = 0 ; / / warn 
 + 
 + 
 + int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn 
 + 4 } ; 
 + 
 + 
 + int mTest1 ; / / warn 
 + 
 + int mTest2 ; / / warn 
 + 
 + int $ mTest2 ; / / warn 
 + 
 + int mTes $ t2 ; / / warn 
 + 
 + int mTest2 $ ; / / warn 
 + 
 + public void greet ( ) { } 
 + } ; 
 + } 
 + } 
 + } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Basic . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Basic . java 
 deleted file mode 100644 
 index 5aab44b . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Basic . java 
 + + + / dev / null 
 @ @ - 1 , 26 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; 
 - 
 - public class MemberNameInput _ Basic 
 - { 
 - public int mPublic ; / / warn 
 - protected int mProtected ; / / warn 
 - int mPackage ; / / warn 
 - private int mPrivate ; / / warn 
 - 
 - public int _ public ; / / warn 
 - protected int prot _ ected ; / / warn 
 - int package _ ; / / warn 
 - private int priva $ te ; / / warn 
 - 
 - public int ppublic ; / / ok 
 - protected int pprotected ; / / ok 
 - int ppackage ; / / ok 
 - private int pprivate ; / / ok 
 - 
 - int ABC = 0 ; / / warn 
 - final int C _ D _ E = 0 ; / / warn 
 - 
 - public int $ mPublic ; / / warn 
 - protected int mPro $ tected ; / / warn 
 - int mPackage $ ; / / warn 
 - } 
 \ No newline at end of file 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Simple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Simple . java 
 deleted file mode 100644 
 index f8c08df . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule525nonconstantfieldnames / MemberNameInput _ Simple . java 
 + + + / dev / null 
 @ @ - 1 , 137 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule525nonconstantfieldnames ; 
 - import java . io . * ; 
 - 
 - final class InputSimple 
 - { 
 - 
 - public static final int badConstant = 2 ; 
 - 
 - public static final int MAX _ ROWS = 2 ; 
 - 
 - 
 - private int bad $ Static = 2 ; / / warn 
 - 
 - private static int sum _ Created = 0 ; 
 - 
 - 
 - private int bad _ Member = 2 ; / / warn 
 - 
 - private int m = 0 ; / / warn 
 - 
 - protected int m _ M = 0 ; / / warn 
 - 
 - 
 - private int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn 
 - 4 } ; 
 - 
 - 
 - public static int sTest1 ; 
 - 
 - protected static int sTest3 ; 
 - 
 - static int sTest2 ; 
 - 
 - 
 - int mTest1 ; / / warn 
 - 
 - public int mTest2 ; / / warn 
 - 
 - public int $ mTest2 ; / / warn 
 - 
 - public int mTes $ t2 ; / / warn 
 - 
 - public int mTest2 $ ; / / warn 
 - 
 - / * * test local variables . This Check doesn ' t verify local variables , only members . * / 
 - private void localVariables ( ) 
 - { 
 - int a ; 
 - int aA ; 
 - int a1 _ a ; 
 - int A _ A ; 
 - int aa2 _ a ; 
 - int _ a ; 
 - int _ aa ; 
 - int aa _ ; 
 - int aaa $ aaa ; 
 - int $ aaaaaa ; 
 - int aaaaaa $ ; 
 - 
 - int aa ; 
 - int aaAa1a ; 
 - int aaAaaAa2a1 ; 
 - } 
 - 
 - interface Foo { 
 - public void greet ( ) ; 
 - 
 - } 
 - 
 - class InnerClass 
 - { 
 - public static final int badConstant = 2 ; 
 - 
 - public static final int MAX _ ROWS = 2 ; 
 - 
 - 
 - private int bad $ Static = 2 ; / / warn 
 - 
 - private int sum _ Created = 0 ; / / warn 
 - 
 - 
 - private int bad _ Member = 2 ; / / warn 
 - 
 - private int m = 0 ; / / warn 
 - 
 - protected int m _ M = 0 ; / / warn 
 - 
 - 
 - private int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn 
 - 4 } ; 
 - 
 - 
 - int mTest1 ; / / warn 
 - 
 - public int mTest2 ; / / warn 
 - 
 - public int $ mTest2 ; / / warn 
 - 
 - public int mTes $ t2 ; / / warn 
 - 
 - public int mTest2 $ ; / / warn 
 - 
 - void fooMethod ( ) 
 - { 
 - Foo foo = new Foo ( ) { 
 - 
 - int bad $ Static = 2 ; / / warn 
 - 
 - int sum _ Created = 0 ; / / warn 
 - 
 - 
 - int bad _ Member = 2 ; / / warn 
 - 
 - int m = 0 ; / / warn 
 - 
 - int m _ M = 0 ; / / warn 
 - 
 - 
 - int [ ] m $ nts = new int [ ] { 1 , 2 , 3 , / / warn 
 - 4 } ; 
 - 
 - 
 - int mTest1 ; / / warn 
 - 
 - int mTest2 ; / / warn 
 - 
 - int $ mTest2 ; / / warn 
 - 
 - int mTes $ t2 ; / / warn 
 - 
 - int mTest2 $ ; / / warn 
 - 
 - public void greet ( ) { } 
 - } ; 
 - } 
 - } 
 - } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / InputParameterNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / InputParameterNameSimple . java 
 new file mode 100644 
 index 0000000 . . cd63896 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / InputParameterNameSimple . java 
 @ @ - 0 , 0 + 1 , 51 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule526parameternames ; 
 + 
 + import java . io . * ; 
 + 
 + final class InputSimple 
 + { 
 + void toManyArgs ( 
 + 	 	 int $ arg1 , / / warn 
 + 	 	 int ar $ g2 , / / warn 
 + 	 	 int arg3 $ , / / warn 
 + 	 	 int a _ rg4 , / / warn 
 + 	 	 int _ arg5 , / / warn 
 + 	 	 int arg6 _ , / / warn 
 + 	 	 int aArg7 , / / warn 
 + 	 	 int aArg8 , / / warn 
 + 	 	 int aar _ g ) / / warn 
 + 
 + { } 
 + } 
 + 
 + class InputSimple2 
 + { 
 + 
 + / * * Some more Javadoc . * / 
 + public void doSomething ( int aaa , int abn , String aaA , 
 + boolean bB ) / / warn 
 + { 
 + for ( Object O : new java . util . ArrayList ( ) ) 
 + { 
 + 
 + } 
 + } 
 + } 
 + 
 + 
 + / * * Test enum for member naming check * / 
 + enum MyEnum1 
 + { 
 + / * * ABC constant * / 
 + ABC , 
 + 
 + / * * XYZ constant * / 
 + XYZ ; 
 + 
 + / * * Should be mSomeMemeber * / 
 + private int someMember ; 
 + 
 + public void doEnum ( int aaaL , 
 + 	 	 long llll _ llll , / / warn 
 + boolean bB ) { } / / warn 
 + } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameInput _ Simple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameInput _ Simple . java 
 deleted file mode 100644 
 index cd63896 . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule526parameternames / ParameterNameInput _ Simple . java 
 + + + / dev / null 
 @ @ - 1 , 51 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule526parameternames ; 
 - 
 - import java . io . * ; 
 - 
 - final class InputSimple 
 - { 
 - void toManyArgs ( 
 - 	 	 int $ arg1 , / / warn 
 - 	 	 int ar $ g2 , / / warn 
 - 	 	 int arg3 $ , / / warn 
 - 	 	 int a _ rg4 , / / warn 
 - 	 	 int _ arg5 , / / warn 
 - 	 	 int arg6 _ , / / warn 
 - 	 	 int aArg7 , / / warn 
 - 	 	 int aArg8 , / / warn 
 - 	 	 int aar _ g ) / / warn 
 - 
 - { } 
 - } 
 - 
 - class InputSimple2 
 - { 
 - 
 - / * * Some more Javadoc . * / 
 - public void doSomething ( int aaa , int abn , String aaA , 
 - boolean bB ) / / warn 
 - { 
 - for ( Object O : new java . util . ArrayList ( ) ) 
 - { 
 - 
 - } 
 - } 
 - } 
 - 
 - 
 - / * * Test enum for member naming check * / 
 - enum MyEnum1 
 - { 
 - / * * ABC constant * / 
 - ABC , 
 - 
 - / * * XYZ constant * / 
 - XYZ ; 
 - 
 - / * * Should be mSomeMemeber * / 
 - private int someMember ; 
 - 
 - public void doEnum ( int aaaL , 
 - 	 	 long llll _ llll , / / warn 
 - boolean bB ) { } / / warn 
 - } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java 
 new file mode 100644 
 index 0000000 . . 462a5f7 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameOneCharVarName . java 
 @ @ - 0 , 0 + 1 , 65 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; 
 + 
 + import java . io . * ; 
 + import java . util . HashMap ; 
 + import java . util . Map ; 
 + 
 + class InputOneCharInitVarName 
 + { 
 + public void fooMethod ( ) 
 + { 
 + for ( int i = 1 ; i < 10 ; i + + ) { / / ok 
 + / / some code 
 + } 
 + 
 + int i = 0 ; / / warn 
 + 
 + for ( int index = 1 ; index < 10 ; index + + ) { / / ok 
 + / / some code 
 + } 
 + 
 + for ( int I _ ndex = 1 ; I _ ndex < 10 ; I _ ndex + + ) { / / warn 
 + / / some code 
 + } 
 + 
 + int index = 1 ; 
 + 
 + for ( ; index < 10 ; index + + ) { / / ok 
 + / / some code 
 + } 
 + 
 + for ( ; i < 12 ; i + + ) { / / ok 
 + / / some code 
 + } 
 + 
 + Map < String , String > map = new HashMap < String , String > ( ) ; 
 + 
 + for ( Map . Entry < String , String > e : map . entrySet ( ) ) { / / ok 
 + / / some code 
 + } 
 + 
 + for ( int a = 0 , b [ ] = { 1 } , c [ ] [ ] = { { 1 } , { 2 } } ; a < 10 ; a + + ) { / / ok 
 + / / something 
 + } 
 + 
 + for ( int i _ ndex = 1 ; i _ ndex < 10 ; i _ ndex + + ) { / / warn 
 + / / some code 
 + } 
 + 
 + for ( int ii _ i1 = 1 ; ii _ i1 < 10 ; ii _ i1 + + ) { / / warn 
 + / / some code 
 + } 
 + 
 + for ( int $ index = 1 ; $ index < 10 ; $ index + + ) { / / warn 
 + / / some code 
 + } 
 + 
 + for ( int in $ dex = 1 ; in $ dex < 10 ; in $ dex + + ) { / / warn 
 + / / some code 
 + } 
 + 
 + for ( int index $ = 1 ; index $ < 10 ; index $ + + ) { / / warn 
 + / / some code 
 + } 
 + } 
 + } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java 
 new file mode 100644 
 index 0000000 . . 3a3764d 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / InputLocalVariableNameSimple . java 
 @ @ - 0 , 0 + 1 , 43 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; 
 + 
 + final class InputSimple 
 + { 
 + public static final int badConstant = 2 ; 
 + 
 + public static final int MAX _ ROWS = 2 ; 
 + 
 + private static int badStatic = 2 ; 
 + 
 + private static int sNumCreated = 0 ; 
 + 
 + private int badMember = 2 ; 
 + 
 + private int mNumCreated1 = 0 ; 
 + 
 + protected int mNumCreated2 = 0 ; 
 + 
 + private int [ ] mInts = new int [ ] { 1 , 2 , 3 , 
 + 4 } ; 
 + 
 + / * * test local variables * / 
 + private void localVariables ( ) 
 + { 
 + / / bad examples 
 + int a ; / / warn 
 + int aA ; / / warn 
 + int a1 _ a ; / / warn 
 + int A _ A ; / / warn 
 + int aa2 _ a ; / / warn 
 + int _ a ; / / warn 
 + int _ aa ; / / warn 
 + int aa _ ; / / warn 
 + int aaa $ aaa ; / / warn 
 + int $ aaaaaa ; / / warn 
 + int aaaaaa $ ; / / warn 
 + 
 + / / good examples 
 + int aa ; 
 + int aaAa1a ; 
 + int aaAaaAa2a1 ; 
 + } 
 + } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ OneCharVarName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ OneCharVarName . java 
 deleted file mode 100644 
 index 462a5f7 . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ OneCharVarName . java 
 + + + / dev / null 
 @ @ - 1 , 65 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; 
 - 
 - import java . io . * ; 
 - import java . util . HashMap ; 
 - import java . util . Map ; 
 - 
 - class InputOneCharInitVarName 
 - { 
 - public void fooMethod ( ) 
 - { 
 - for ( int i = 1 ; i < 10 ; i + + ) { / / ok 
 - / / some code 
 - } 
 - 
 - int i = 0 ; / / warn 
 - 
 - for ( int index = 1 ; index < 10 ; index + + ) { / / ok 
 - / / some code 
 - } 
 - 
 - for ( int I _ ndex = 1 ; I _ ndex < 10 ; I _ ndex + + ) { / / warn 
 - / / some code 
 - } 
 - 
 - int index = 1 ; 
 - 
 - for ( ; index < 10 ; index + + ) { / / ok 
 - / / some code 
 - } 
 - 
 - for ( ; i < 12 ; i + + ) { / / ok 
 - / / some code 
 - } 
 - 
 - Map < String , String > map = new HashMap < String , String > ( ) ; 
 - 
 - for ( Map . Entry < String , String > e : map . entrySet ( ) ) { / / ok 
 - / / some code 
 - } 
 - 
 - for ( int a = 0 , b [ ] = { 1 } , c [ ] [ ] = { { 1 } , { 2 } } ; a < 10 ; a + + ) { / / ok 
 - / / something 
 - } 
 - 
 - for ( int i _ ndex = 1 ; i _ ndex < 10 ; i _ ndex + + ) { / / warn 
 - / / some code 
 - } 
 - 
 - for ( int ii _ i1 = 1 ; ii _ i1 < 10 ; ii _ i1 + + ) { / / warn 
 - / / some code 
 - } 
 - 
 - for ( int $ index = 1 ; $ index < 10 ; $ index + + ) { / / warn 
 - / / some code 
 - } 
 - 
 - for ( int in $ dex = 1 ; in $ dex < 10 ; in $ dex + + ) { / / warn 
 - / / some code 
 - } 
 - 
 - for ( int index $ = 1 ; index $ < 10 ; index $ + + ) { / / warn 
 - / / some code 
 - } 
 - } 
 - } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ Simple . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ Simple . java 
 deleted file mode 100644 
 index 3a3764d . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule527localvariablenames / LocalVariableNameInput _ Simple . java 
 + + + / dev / null 
 @ @ - 1 , 43 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule527localvariablenames ; 
 - 
 - final class InputSimple 
 - { 
 - public static final int badConstant = 2 ; 
 - 
 - public static final int MAX _ ROWS = 2 ; 
 - 
 - private static int badStatic = 2 ; 
 - 
 - private static int sNumCreated = 0 ; 
 - 
 - private int badMember = 2 ; 
 - 
 - private int mNumCreated1 = 0 ; 
 - 
 - protected int mNumCreated2 = 0 ; 
 - 
 - private int [ ] mInts = new int [ ] { 1 , 2 , 3 , 
 - 4 } ; 
 - 
 - / * * test local variables * / 
 - private void localVariables ( ) 
 - { 
 - / / bad examples 
 - int a ; / / warn 
 - int aA ; / / warn 
 - int a1 _ a ; / / warn 
 - int A _ A ; / / warn 
 - int aa2 _ a ; / / warn 
 - int _ a ; / / warn 
 - int _ aa ; / / warn 
 - int aa _ ; / / warn 
 - int aaa $ aaa ; / / warn 
 - int $ aaaaaa ; / / warn 
 - int aaaaaa $ ; / / warn 
 - 
 - / / good examples 
 - int aa ; 
 - int aaAa1a ; 
 - int aaAaaAa2a1 ; 
 - } 
 - } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameInput . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameInput . java 
 deleted file mode 100644 
 index b8869f9 . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / ClassTypeParameterNameInput . java 
 + + + / dev / null 
 @ @ - 1 , 46 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; 
 - 
 - import java . io . Serializable ; 
 - 
 - class InputTypeParameterName < t > / / warn 
 - { 
 - public < TT > void foo ( ) { } 
 - 
 - < e _ e > void foo ( int i ) { 
 - } 
 - } 
 - 
 - class Other < foo extends Serializable & Cloneable > { / / warn 
 - 
 - foo getOne ( ) { 
 - return null ; 
 - } 
 - 
 - < Tfo $ o2T extends foo > Tfo $ o2T getTwo ( Tfo $ o2T a ) { 
 - return null ; 
 - } 
 - 
 - < foo _ extends Runnable > foo getShadow ( ) { 
 - return null ; 
 - } 
 - 
 - static class Junk < $ foo > { / / warn 
 - < _ abc extends $ foo > void getMoreFoo ( ) { 
 - } 
 - } 
 - } 
 - 
 - class MoreOther < T extends Cloneable > { 
 - 
 - < E extends T > void getMore ( ) { 
 - new Other ( ) { 
 - < T $ > void getMoreFoo ( ) { 
 - } 
 - } ; 
 - 
 - Other o = new Other ( ) { 
 - < EE > void getMoreFoo ( ) { 
 - } 
 - } ; 
 - } 
 - } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java 
 new file mode 100644 
 index 0000000 . . b8869f9 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputClassTypeParameterName . java 
 @ @ - 0 , 0 + 1 , 46 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; 
 + 
 + import java . io . Serializable ; 
 + 
 + class InputTypeParameterName < t > / / warn 
 + { 
 + public < TT > void foo ( ) { } 
 + 
 + < e _ e > void foo ( int i ) { 
 + } 
 + } 
 + 
 + class Other < foo extends Serializable & Cloneable > { / / warn 
 + 
 + foo getOne ( ) { 
 + return null ; 
 + } 
 + 
 + < Tfo $ o2T extends foo > Tfo $ o2T getTwo ( Tfo $ o2T a ) { 
 + return null ; 
 + } 
 + 
 + < foo _ extends Runnable > foo getShadow ( ) { 
 + return null ; 
 + } 
 + 
 + static class Junk < $ foo > { / / warn 
 + < _ abc extends $ foo > void getMoreFoo ( ) { 
 + } 
 + } 
 + } 
 + 
 + class MoreOther < T extends Cloneable > { 
 + 
 + < E extends T > void getMore ( ) { 
 + new Other ( ) { 
 + < T $ > void getMoreFoo ( ) { 
 + } 
 + } ; 
 + 
 + Other o = new Other ( ) { 
 + < EE > void getMoreFoo ( ) { 
 + } 
 + } ; 
 + } 
 + } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java 
 new file mode 100644 
 index 0000000 . . 4eb0a78 
 - - - / dev / null 
 + + + b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / InputMethodTypeParameterName . java 
 @ @ - 0 , 0 + 1 , 46 @ @ 
 + package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; 
 + 
 + import java . io . Serializable ; 
 + 
 + class InputTypeParameterName1 < t > 
 + { 
 + public < TT > void foo ( ) { } 
 + 
 + < e _ e > void foo ( int i ) { / / warn 
 + } 
 + } 
 + 
 + class Other2 < foo extends Serializable & Cloneable > { 
 + 
 + foo getOne ( ) { 
 + return null ; 
 + } 
 + 
 + < Tfo $ o2T extends foo > Tfo $ o2T getTwo ( Tfo $ o2T a ) { / / warn 
 + return null ; 
 + } 
 + 
 + < foo _ extends Runnable > foo getShadow ( ) { / / warn 
 + return null ; 
 + } 
 + 
 + static class Junk < $ foo > { 
 + < _ abc extends $ foo > void getMoreFoo ( ) { / / warn 
 + } 
 + } 
 + } 
 + 
 + class MoreOther3 < T extends Cloneable > { 
 + 
 + < E extends T > void getMore ( ) { 
 + new Other2 ( ) { 
 + < T $ > void getMoreFoo ( ) { / / warn 
 + } 
 + } ; 
 + 
 + Other2 o = new Other2 ( ) { 
 + < EE > void getMoreFoo ( ) { / / warn 
 + } 
 + } ; 
 + } 
 + } 
 diff - - git a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameInput . java b / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameInput . java 
 deleted file mode 100644 
 index 4eb0a78 . . 0000000 
 - - - a / src / it / resources / com / google / checkstyle / test / chapter5naming / rule528typevariablenames / MethodTypeParameterNameInput . java 
 + + + / dev / null 
 @ @ - 1 , 46 + 0 , 0 @ @ 
 - package com . google . checkstyle . test . chapter5naming . rule528typevariablenames ; 
 - 
 - import java . io . Serializable ; 
 - 
 - class InputTypeParameterName1 < t > 
 - { 
 - public < TT > void foo ( ) { } 
 - 
 - < e _ e > void foo ( int i ) { / / warn 
 - } 
 - } 
 - 
 - class Other2 < foo extends Serializable & Cloneable > { 
 - 
 - foo getOne ( ) { 
 - return null ; 
 - } 
 - 
 - < Tfo $ o2T extends foo > Tfo $ o2T getTwo ( Tfo $ o2T a ) { / / warn 
 - return null ; 
 - } 
 - 
 - < foo _ extends Runnable > foo getShadow ( ) { / / warn 
 - return null ; 
 - } 
 - 
 - static class Junk < $ foo > { 
 - < _ abc extends $ foo > void getMoreFoo ( ) { / / warn 
 - } 
 - } 
 - } 
 - 
 - class MoreOther3 < T extends Cloneable > { 
 - 
 - < E extends T > void getMore ( ) { 
 - new Other2 ( ) { 
 - < T $ > void getMoreFoo ( ) { / / warn 
 - } 
 - } ; 
 - 
 - Other2 o = new Other2 ( ) { 
 - < EE > void getMoreFoo ( ) { / / warn 
 - } 
 - } ; 
 - } 
 - }

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java 
 index 5843e3f . . bf3d1c2 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / IllegalCatchCheck . java 
 @ @ - 105 , 7 + 105 , 7 @ @ public final class IllegalCatchCheck extends Check { 
 * @ param parentToken - parent node for types ( TYPE or BOR ) 
 * @ return list , that contains all exception types in current catch 
 * / 
 - public static List < DetailAST > getAllExceptionTypes ( DetailAST parentToken ) { 
 + private static List < DetailAST > getAllExceptionTypes ( DetailAST parentToken ) { 
 DetailAST currentNode = parentToken . getFirstChild ( ) ; 
 final List < DetailAST > exceptionTypes = new LinkedList < > ( ) ; 
 if ( currentNode . getType ( ) = = TokenTypes . BOR ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 index 594f250 . . 04bb27c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / CommentsIndentationCheck . java 
 @ @ - 262 , 7 + 262 , 8 @ @ public class CommentsIndentationCheck extends Check { 
 * @ param comment single line comment . 
 * @ return the first token of the destributed previous statement of single line comment . 
 * / 
 - public static DetailAST getDistributedPreviousStatementOfSingleLineComment ( DetailAST comment ) { 
 + private static DetailAST getDistributedPreviousStatementOfSingleLineComment ( 
 + DetailAST comment ) { 
 DetailAST previousStatement = comment . getPreviousSibling ( ) ; 
 if ( previousStatement . getType ( ) = = TokenTypes . LITERAL _ RETURN 
 | | previousStatement . getType ( ) = = TokenTypes . LITERAL _ THROW ) {
