BLEU SCORE: 0.018977423949228533

TEST MSG: minor : extend javadoc for unclear parameter checkConstructorIsPrivate
GENERATED MSG: Mark util class as final in test code . # 1555

TEST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java <nl> index 57e5a2b . . 13252de 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java <nl> @ @ - 46 , 6 + 46 , 10 @ @ public final class TestUtils { <nl> <nl> / * * <nl> * Verifies that utils class has private constructor and invokes it to satisfy code coverage . <nl> + * @ param utilClass class to test for c - tor <nl> + * @ param checkConstructorIsPrivate flag to skip check for private visibility , it is useful <nl> + * for Classes that are mocked by PowerMockRunner that make <nl> + * private c - tors as public <nl> * / <nl> public static void assertUtilsClassHasPrivateConstructor ( final Class < ? > utilClass , <nl> boolean checkConstructorIsPrivate )
NEAREST DIFF (one line): diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java <nl> deleted file mode 100644 <nl> index d4d8d18 . . 0000000 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java <nl> + + + / dev / null <nl> @ @ - 1 , 42 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> - <nl> - <nl> - / * * Test 1 . * / <nl> - public class Input _ 01 { <nl> - <nl> - / * * Do 1 . <nl> - * @ throws TestException1 when error occurrs . <nl> - * / <nl> - public void doStuff1 ( ) throws TestException1 { <nl> - try { <nl> - doStuff2 ( ) ; <nl> - } catch ( final TestException2 e ) { } <nl> - throw new Input _ 01 ( ) . new TestException1 ( " " ) ; <nl> - } <nl> - / * * Do 2 . <nl> - * @ throws TestException2 when error occurrs . <nl> - * / <nl> - private static void doStuff2 ( ) throws TestException2 { <nl> - throw new TestException2 ( " " ) ; <nl> - } <nl> - / * * Exception 1 . <nl> - * / <nl> - class TestException1 extends Exception { <nl> - / * * Exception 1 . <nl> - * @ param messg message <nl> - * / <nl> - TestException1 ( String messg ) { <nl> - super ( messg ) ; <nl> - } <nl> - } <nl> - / * * Exception 2 . <nl> - * / <nl> - public static class TestException2 extends Exception { <nl> - / * * Exception 2 . <nl> - * @ param messg message <nl> - * / <nl> - TestException2 ( String messg ) { <nl> - super ( messg ) ; <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java <nl> deleted file mode 100644 <nl> index 8a0326d . . 0000000 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java <nl> + + + / dev / null <nl> @ @ - 1 , 40 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> - / * * Test 2 . * / <nl> - public class Input _ 02 { <nl> - <nl> - / * * Exception 1 . <nl> - * / <nl> - class TestException1 extends Exception { <nl> - / * * Exception 1 . <nl> - * @ param messg message <nl> - * / <nl> - TestException1 ( String messg ) { <nl> - super ( messg ) ; <nl> - } <nl> - } <nl> - / * * Exception 2 . <nl> - * / <nl> - public static class TestException2 extends Exception { <nl> - / * * Exception 2 . <nl> - * @ param messg message <nl> - * / <nl> - TestException2 ( String messg ) { <nl> - super ( messg ) ; <nl> - } <nl> - } <nl> - / * * Do 1 . <nl> - * @ throws TestException1 when error occurrs . <nl> - * / <nl> - public void doStuff1 ( ) throws TestException1 { <nl> - try { <nl> - doStuff2 ( ) ; <nl> - } catch ( final TestException2 e ) { } <nl> - throw new Input _ 02 ( ) . new TestException1 ( " " ) ; <nl> - } <nl> - / * * Do 2 . <nl> - * @ throws TestException2 when error occurrs . <nl> - * / <nl> - private static void doStuff2 ( ) throws TestException2 { <nl> - throw new TestException2 ( " " ) ; <nl> - } <nl> - } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java <nl> deleted file mode 100644 <nl> index 257ab03 . . 0000000 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java <nl> + + + / dev / null <nl> @ @ - 1 , 41 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> - / * * Test 3 . * / <nl> - public class Input _ 03 { <nl> - <nl> - / * * Do 1 . <nl> - * @ throws TestException1 when error occurrs . <nl> - * @ throws TestException2 when error occurrs . <nl> - * / <nl> - public void doStuff1 ( ) throws TestException1 , TestException2 { <nl> - try { <nl> - doStuff2 ( ) ; <nl> - } catch ( final TestException2 e ) { } <nl> - throw new Input _ 03 ( ) . new TestException1 ( " " ) ; <nl> - } <nl> - / * * Do 2 . <nl> - * @ throws TestException2 when error occurrs . <nl> - * / <nl> - private static void doStuff2 ( ) throws TestException2 { <nl> - throw new TestException2 ( " " ) ; <nl> - } <nl> - / * * Exception 1 . <nl> - * / <nl> - class TestException1 extends Exception { <nl> - / * * Exception 1 . <nl> - * @ param messg message <nl> - * / <nl> - TestException1 ( String messg ) { <nl> - super ( messg ) ; <nl> - } <nl> - } <nl> - / * * Exception 2 . <nl> - * / <nl> - public static class TestException2 extends Exception { <nl> - / * * Exception 2 . <nl> - * @ param messg message <nl> - * / <nl> - TestException2 ( String messg ) { <nl> - super ( messg ) ; <nl> - } <nl> - } <nl> - } <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> index 38b8be4 . . d090042 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java <nl> @ @ - 472 , 13 + 472 , 13 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> @ Test <nl> public void test _ 1168408 _ 1 ( ) throws Exception { <nl> final String [ ] expected = { } ; <nl> - verify ( checkConfig , getSrcPath ( " checks / javadoc / Input _ 01 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " checks / javadoc / Input _ 01 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> public void test _ 1168408 _ 2 ( ) throws Exception { <nl> final String [ ] expected = { } ; <nl> - verify ( checkConfig , getSrcPath ( " checks / javadoc / Input _ 02 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " checks / javadoc / Input _ 02 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 486 , 7 + 486 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { <nl> checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; <nl> checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; <nl> final String [ ] expected = { } ; <nl> - verify ( checkConfig , getSrcPath ( " checks / javadoc / Input _ 03 . java " ) , expected ) ; <nl> + verify ( checkConfig , getPath ( " checks / javadoc / Input _ 03 . java " ) , expected ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java <nl> new file mode 100644 <nl> index 0000000 . . d4d8d18 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java <nl> @ @ - 0 , 0 + 1 , 42 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> + <nl> + <nl> + / * * Test 1 . * / <nl> + public class Input _ 01 { <nl> + <nl> + / * * Do 1 . <nl> + * @ throws TestException1 when error occurrs . <nl> + * / <nl> + public void doStuff1 ( ) throws TestException1 { <nl> + try { <nl> + doStuff2 ( ) ; <nl> + } catch ( final TestException2 e ) { } <nl> + throw new Input _ 01 ( ) . new TestException1 ( " " ) ; <nl> + } <nl> + / * * Do 2 . <nl> + * @ throws TestException2 when error occurrs . <nl> + * / <nl> + private static void doStuff2 ( ) throws TestException2 { <nl> + throw new TestException2 ( " " ) ; <nl> + } <nl> + / * * Exception 1 . <nl> + * / <nl> + class TestException1 extends Exception { <nl> + / * * Exception 1 . <nl> + * @ param messg message <nl> + * / <nl> + TestException1 ( String messg ) { <nl> + super ( messg ) ; <nl> + } <nl> + } <nl> + / * * Exception 2 . <nl> + * / <nl> + public static class TestException2 extends Exception { <nl> + / * * Exception 2 . <nl> + * @ param messg message <nl> + * / <nl> + TestException2 ( String messg ) { <nl> + super ( messg ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java <nl> new file mode 100644 <nl> index 0000000 . . 8a0326d <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java <nl> @ @ - 0 , 0 + 1 , 40 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> + / * * Test 2 . * / <nl> + public class Input _ 02 { <nl> + <nl> + / * * Exception 1 . <nl> + * / <nl> + class TestException1 extends Exception { <nl> + / * * Exception 1 . <nl> + * @ param messg message <nl> + * / <nl> + TestException1 ( String messg ) { <nl> + super ( messg ) ; <nl> + } <nl> + } <nl> + / * * Exception 2 . <nl> + * / <nl> + public static class TestException2 extends Exception { <nl> + / * * Exception 2 . <nl> + * @ param messg message <nl> + * / <nl> + TestException2 ( String messg ) { <nl> + super ( messg ) ; <nl> + } <nl> + } <nl> + / * * Do 1 . <nl> + * @ throws TestException1 when error occurrs . <nl> + * / <nl> + public void doStuff1 ( ) throws TestException1 { <nl> + try { <nl> + doStuff2 ( ) ; <nl> + } catch ( final TestException2 e ) { } <nl> + throw new Input _ 02 ( ) . new TestException1 ( " " ) ; <nl> + } <nl> + / * * Do 2 . <nl> + * @ throws TestException2 when error occurrs . <nl> + * / <nl> + private static void doStuff2 ( ) throws TestException2 { <nl> + throw new TestException2 ( " " ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java <nl> new file mode 100644 <nl> index 0000000 . . 257ab03 <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java <nl> @ @ - 0 , 0 + 1 , 41 @ @ <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> + / * * Test 3 . * / <nl> + public class Input _ 03 { <nl> + <nl> + / * * Do 1 . <nl> + * @ throws TestException1 when error occurrs . <nl> + * @ throws TestException2 when error occurrs . <nl> + * / <nl> + public void doStuff1 ( ) throws TestException1 , TestException2 { <nl> + try { <nl> + doStuff2 ( ) ; <nl> + } catch ( final TestException2 e ) { } <nl> + throw new Input _ 03 ( ) . new TestException1 ( " " ) ; <nl> + } <nl> + / * * Do 2 . <nl> + * @ throws TestException2 when error occurrs . <nl> + * / <nl> + private static void doStuff2 ( ) throws TestException2 { <nl> + throw new TestException2 ( " " ) ; <nl> + } <nl> + / * * Exception 1 . <nl> + * / <nl> + class TestException1 extends Exception { <nl> + / * * Exception 1 . <nl> + * @ param messg message <nl> + * / <nl> + TestException1 ( String messg ) { <nl> + super ( messg ) ; <nl> + } <nl> + } <nl> + / * * Exception 2 . <nl> + * / <nl> + public static class TestException2 extends Exception { <nl> + / * * Exception 2 . <nl> + * @ param messg message <nl> + * / <nl> + TestException2 ( String messg ) { <nl> + super ( messg ) ; <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java 
 index 57e5a2b . . 13252de 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / internal / TestUtils . java 
 @ @ - 46 , 6 + 46 , 10 @ @ public final class TestUtils { 
 
 / * * 
 * Verifies that utils class has private constructor and invokes it to satisfy code coverage . 
 + * @ param utilClass class to test for c - tor 
 + * @ param checkConstructorIsPrivate flag to skip check for private visibility , it is useful 
 + * for Classes that are mocked by PowerMockRunner that make 
 + * private c - tors as public 
 * / 
 public static void assertUtilsClassHasPrivateConstructor ( final Class < ? > utilClass , 
 boolean checkConstructorIsPrivate )

NEAREST DIFF:
diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java 
 deleted file mode 100644 
 index d4d8d18 . . 0000000 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java 
 + + + / dev / null 
 @ @ - 1 , 42 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 - 
 - 
 - / * * Test 1 . * / 
 - public class Input _ 01 { 
 - 
 - / * * Do 1 . 
 - * @ throws TestException1 when error occurrs . 
 - * / 
 - public void doStuff1 ( ) throws TestException1 { 
 - try { 
 - doStuff2 ( ) ; 
 - } catch ( final TestException2 e ) { } 
 - throw new Input _ 01 ( ) . new TestException1 ( " " ) ; 
 - } 
 - / * * Do 2 . 
 - * @ throws TestException2 when error occurrs . 
 - * / 
 - private static void doStuff2 ( ) throws TestException2 { 
 - throw new TestException2 ( " " ) ; 
 - } 
 - / * * Exception 1 . 
 - * / 
 - class TestException1 extends Exception { 
 - / * * Exception 1 . 
 - * @ param messg message 
 - * / 
 - TestException1 ( String messg ) { 
 - super ( messg ) ; 
 - } 
 - } 
 - / * * Exception 2 . 
 - * / 
 - public static class TestException2 extends Exception { 
 - / * * Exception 2 . 
 - * @ param messg message 
 - * / 
 - TestException2 ( String messg ) { 
 - super ( messg ) ; 
 - } 
 - } 
 - } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java 
 deleted file mode 100644 
 index 8a0326d . . 0000000 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java 
 + + + / dev / null 
 @ @ - 1 , 40 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 - / * * Test 2 . * / 
 - public class Input _ 02 { 
 - 
 - / * * Exception 1 . 
 - * / 
 - class TestException1 extends Exception { 
 - / * * Exception 1 . 
 - * @ param messg message 
 - * / 
 - TestException1 ( String messg ) { 
 - super ( messg ) ; 
 - } 
 - } 
 - / * * Exception 2 . 
 - * / 
 - public static class TestException2 extends Exception { 
 - / * * Exception 2 . 
 - * @ param messg message 
 - * / 
 - TestException2 ( String messg ) { 
 - super ( messg ) ; 
 - } 
 - } 
 - / * * Do 1 . 
 - * @ throws TestException1 when error occurrs . 
 - * / 
 - public void doStuff1 ( ) throws TestException1 { 
 - try { 
 - doStuff2 ( ) ; 
 - } catch ( final TestException2 e ) { } 
 - throw new Input _ 02 ( ) . new TestException1 ( " " ) ; 
 - } 
 - / * * Do 2 . 
 - * @ throws TestException2 when error occurrs . 
 - * / 
 - private static void doStuff2 ( ) throws TestException2 { 
 - throw new TestException2 ( " " ) ; 
 - } 
 - } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java 
 deleted file mode 100644 
 index 257ab03 . . 0000000 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java 
 + + + / dev / null 
 @ @ - 1 , 41 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 - / * * Test 3 . * / 
 - public class Input _ 03 { 
 - 
 - / * * Do 1 . 
 - * @ throws TestException1 when error occurrs . 
 - * @ throws TestException2 when error occurrs . 
 - * / 
 - public void doStuff1 ( ) throws TestException1 , TestException2 { 
 - try { 
 - doStuff2 ( ) ; 
 - } catch ( final TestException2 e ) { } 
 - throw new Input _ 03 ( ) . new TestException1 ( " " ) ; 
 - } 
 - / * * Do 2 . 
 - * @ throws TestException2 when error occurrs . 
 - * / 
 - private static void doStuff2 ( ) throws TestException2 { 
 - throw new TestException2 ( " " ) ; 
 - } 
 - / * * Exception 1 . 
 - * / 
 - class TestException1 extends Exception { 
 - / * * Exception 1 . 
 - * @ param messg message 
 - * / 
 - TestException1 ( String messg ) { 
 - super ( messg ) ; 
 - } 
 - } 
 - / * * Exception 2 . 
 - * / 
 - public static class TestException2 extends Exception { 
 - / * * Exception 2 . 
 - * @ param messg message 
 - * / 
 - TestException2 ( String messg ) { 
 - super ( messg ) ; 
 - } 
 - } 
 - } 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 index 38b8be4 . . d090042 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / javadoc / JavadocMethodCheckTest . java 
 @ @ - 472 , 13 + 472 , 13 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 @ Test 
 public void test _ 1168408 _ 1 ( ) throws Exception { 
 final String [ ] expected = { } ; 
 - verify ( checkConfig , getSrcPath ( " checks / javadoc / Input _ 01 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " checks / javadoc / Input _ 01 . java " ) , expected ) ; 
 } 
 
 @ Test 
 public void test _ 1168408 _ 2 ( ) throws Exception { 
 final String [ ] expected = { } ; 
 - verify ( checkConfig , getSrcPath ( " checks / javadoc / Input _ 02 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " checks / javadoc / Input _ 02 . java " ) , expected ) ; 
 } 
 
 @ Test 
 @ @ - 486 , 7 + 486 , 7 @ @ public class JavadocMethodCheckTest extends BaseCheckTestSupport { 
 checkConfig . addAttribute ( " allowThrowsTagsForSubclasses " , " true " ) ; 
 checkConfig . addAttribute ( " allowUndeclaredRTE " , " true " ) ; 
 final String [ ] expected = { } ; 
 - verify ( checkConfig , getSrcPath ( " checks / javadoc / Input _ 03 . java " ) , expected ) ; 
 + verify ( checkConfig , getPath ( " checks / javadoc / Input _ 03 . java " ) , expected ) ; 
 } 
 
 @ Test 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java 
 new file mode 100644 
 index 0000000 . . d4d8d18 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 01 . java 
 @ @ - 0 , 0 + 1 , 42 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 + 
 + 
 + / * * Test 1 . * / 
 + public class Input _ 01 { 
 + 
 + / * * Do 1 . 
 + * @ throws TestException1 when error occurrs . 
 + * / 
 + public void doStuff1 ( ) throws TestException1 { 
 + try { 
 + doStuff2 ( ) ; 
 + } catch ( final TestException2 e ) { } 
 + throw new Input _ 01 ( ) . new TestException1 ( " " ) ; 
 + } 
 + / * * Do 2 . 
 + * @ throws TestException2 when error occurrs . 
 + * / 
 + private static void doStuff2 ( ) throws TestException2 { 
 + throw new TestException2 ( " " ) ; 
 + } 
 + / * * Exception 1 . 
 + * / 
 + class TestException1 extends Exception { 
 + / * * Exception 1 . 
 + * @ param messg message 
 + * / 
 + TestException1 ( String messg ) { 
 + super ( messg ) ; 
 + } 
 + } 
 + / * * Exception 2 . 
 + * / 
 + public static class TestException2 extends Exception { 
 + / * * Exception 2 . 
 + * @ param messg message 
 + * / 
 + TestException2 ( String messg ) { 
 + super ( messg ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java 
 new file mode 100644 
 index 0000000 . . 8a0326d 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 02 . java 
 @ @ - 0 , 0 + 1 , 40 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 + / * * Test 2 . * / 
 + public class Input _ 02 { 
 + 
 + / * * Exception 1 . 
 + * / 
 + class TestException1 extends Exception { 
 + / * * Exception 1 . 
 + * @ param messg message 
 + * / 
 + TestException1 ( String messg ) { 
 + super ( messg ) ; 
 + } 
 + } 
 + / * * Exception 2 . 
 + * / 
 + public static class TestException2 extends Exception { 
 + / * * Exception 2 . 
 + * @ param messg message 
 + * / 
 + TestException2 ( String messg ) { 
 + super ( messg ) ; 
 + } 
 + } 
 + / * * Do 1 . 
 + * @ throws TestException1 when error occurrs . 
 + * / 
 + public void doStuff1 ( ) throws TestException1 { 
 + try { 
 + doStuff2 ( ) ; 
 + } catch ( final TestException2 e ) { } 
 + throw new Input _ 02 ( ) . new TestException1 ( " " ) ; 
 + } 
 + / * * Do 2 . 
 + * @ throws TestException2 when error occurrs . 
 + * / 
 + private static void doStuff2 ( ) throws TestException2 { 
 + throw new TestException2 ( " " ) ; 
 + } 
 + } 
 diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java 
 new file mode 100644 
 index 0000000 . . 257ab03 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / javadoc / Input _ 03 . java 
 @ @ - 0 , 0 + 1 , 41 @ @ 
 + package com . puppycrawl . tools . checkstyle . checks . javadoc ; 
 + / * * Test 3 . * / 
 + public class Input _ 03 { 
 + 
 + / * * Do 1 . 
 + * @ throws TestException1 when error occurrs . 
 + * @ throws TestException2 when error occurrs . 
 + * / 
 + public void doStuff1 ( ) throws TestException1 , TestException2 { 
 + try { 
 + doStuff2 ( ) ; 
 + } catch ( final TestException2 e ) { } 
 + throw new Input _ 03 ( ) . new TestException1 ( " " ) ; 
 + } 
 + / * * Do 2 . 
 + * @ throws TestException2 when error occurrs . 
 + * / 
 + private static void doStuff2 ( ) throws TestException2 { 
 + throw new TestException2 ( " " ) ; 
 + } 
 + / * * Exception 1 . 
 + * / 
 + class TestException1 extends Exception { 
 + / * * Exception 1 . 
 + * @ param messg message 
 + * / 
 + TestException1 ( String messg ) { 
 + super ( messg ) ; 
 + } 
 + } 
 + / * * Exception 2 . 
 + * / 
 + public static class TestException2 extends Exception { 
 + / * * Exception 2 . 
 + * @ param messg message 
 + * / 
 + TestException2 ( String messg ) { 
 + super ( messg ) ; 
 + } 
 + } 
 + }
