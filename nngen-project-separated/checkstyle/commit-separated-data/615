BLEU SCORE: 0.09442944296079735

TEST MSG: Issue # 4801 : partial resolve of WeakerAccess violations
GENERATED MSG: Issue # 1555 : Fix some typos in checks package

TEST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> index 5d60598 . . 34f2f33 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java <nl> @ @ - 246 , 7 + 246 , 7 @ @ public final class ConfigurationLoader { <nl> * @ return the check configurations <nl> * @ throws CheckstyleException if an error occurs <nl> * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> - * @ noinspection BooleanParameter <nl> + * @ noinspection BooleanParameter , WeakerAccess <nl> * / <nl> @ Deprecated <nl> public static Configuration loadConfiguration ( String config , <nl> @ @ - 321 , 7 + 321 , 7 @ @ public final class ConfigurationLoader { <nl> * @ return the check configurations <nl> * @ throws CheckstyleException if an error occurs <nl> * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . <nl> - * @ noinspection BooleanParameter <nl> + * @ noinspection BooleanParameter , WeakerAccess <nl> * / <nl> @ Deprecated <nl> public static Configuration loadConfiguration ( InputSource configSource , <nl> @ @ - 419 , 6 + 419 , 7 @ @ public final class ConfigurationLoader { <nl> * @ param threadModeSettings the thread mode configuration <nl> * @ return the check configurations <nl> * @ throws CheckstyleException if an error occurs <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public static Configuration loadConfiguration ( InputSource configSource , <nl> PropertyResolver overridePropsResolver , <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> index 04a6158 . . 35b8e9d 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java <nl> @ @ - 507 , 7 + 507 , 7 @ @ public class CheckstyleAntTask extends Task { <nl> * Returns the list of files ( full path name ) to process . <nl> * @ return the list of files included via the fileName , filesets and paths . <nl> * / <nl> - protected List < File > getFilesToCheck ( ) { <nl> + private List < File > getFilesToCheck ( ) { <nl> final List < File > allFiles = new ArrayList < > ( ) ; <nl> if ( fileName ! = null ) { <nl> / / oops we ' ve got an additional one to process , don ' t <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> index 4b7f0c0 . . ca9a5b3 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> @ @ - 122 , 7 + 122 , 7 @ @ public final class FileContents implements CommentListener { <nl> * @ param endLineNo the ending line number <nl> * @ param endColNo the ending column number <nl> * * / <nl> - public void reportBlockComment ( int startLineNo , int startColNo , <nl> + private void reportBlockComment ( int startLineNo , int startColNo , <nl> int endLineNo , int endColNo ) { <nl> final String [ ] cComment = extractBlockComment ( startLineNo , startColNo , <nl> endLineNo , endColNo ) ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> index b036479 . . 1ef0e59 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java <nl> @ @ - 408 , 7 + 408 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { <nl> * @ param allowedPositions an array of allowed annotation positions . <nl> * @ return true if position of annotation is allowed . <nl> * / <nl> - public static boolean isAllowedPosition ( DetailAST annotation , int . . . allowedPositions ) { <nl> + private static boolean isAllowedPosition ( DetailAST annotation , int . . . allowedPositions ) { <nl> boolean allowed = false ; <nl> for ( int position : allowedPositions ) { <nl> if ( isInSpecificCodeBlock ( annotation , position ) ) { <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> index f28ecfa . . 3e2e333 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java <nl> @ @ - 170 , 7 + 170 , 7 @ @ public class EmptyBlockCheck <nl> * @ param slistAST a { @ code DetailAST } value <nl> * @ return whether the SLIST token contains any text . <nl> * / <nl> - protected boolean hasText ( final DetailAST slistAST ) { <nl> + private boolean hasText ( final DetailAST slistAST ) { <nl> final DetailAST rightCurly = slistAST . findFirstToken ( TokenTypes . RCURLY ) ; <nl> final DetailAST rcurlyAST ; <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java <nl> index 256db31 . . da0e810 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java <nl> @ @ - 55 , 7 + 55 , 7 @ @ public class FinalClassCheck <nl> / * * <nl> * Character separate package names in qualified name of java class . <nl> * / <nl> - public static final String PACKAGE _ SEPARATOR = " . " ; <nl> + private static final String PACKAGE _ SEPARATOR = " . " ; <nl> <nl> / * * Keeps ClassDesc objects for stack of declared classes . * / <nl> private Deque < ClassDesc > classes ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> index 2058237 . . 4628087 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java <nl> @ @ - 104 , 7 + 104 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> * Check if the top level token has label before . <nl> * @ return true if the top level token has label before . <nl> * / <nl> - protected boolean hasLabelBefore ( ) { <nl> + private boolean hasLabelBefore ( ) { <nl> final DetailAST parent = getTopLevelAst ( ) . getParent ( ) ; <nl> return parent . getType ( ) = = TokenTypes . LABELED _ STAT <nl> & & parent . getLineNo ( ) = = getTopLevelAst ( ) . getLineNo ( ) ; <nl> @ @ - 124 , 7 + 124 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> * <nl> * @ return true if curly braces are present , false otherwise <nl> * / <nl> - protected boolean hasCurlies ( ) { <nl> + private boolean hasCurlies ( ) { <nl> return getLeftCurly ( ) ! = null & & getRightCurly ( ) ! = null ; <nl> } <nl> <nl> @ @ - 150 , 7 + 150 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> / * * <nl> * Check the indentation of the left curly brace . <nl> * / <nl> - protected void checkLeftCurly ( ) { <nl> + private void checkLeftCurly ( ) { <nl> / / the lcurly can either be at the correct indentation , or nested <nl> / / with a previous expression <nl> final DetailAST lcurly = getLeftCurly ( ) ; <nl> @ @ - 182 , 7 + 182 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> / * * <nl> * Check the indentation of the right curly brace . <nl> * / <nl> - protected void checkRightCurly ( ) { <nl> + private void checkRightCurly ( ) { <nl> final DetailAST rcurly = getRightCurly ( ) ; <nl> final int rcurlyPos = expandedTabsColumnNo ( rcurly ) ; <nl> <nl> @ @ - 226 , 7 + 226 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> * <nl> * @ return the right parenthesis expression <nl> * / <nl> - protected DetailAST getRightParen ( ) { <nl> + private DetailAST getRightParen ( ) { <nl> return getMainAst ( ) . findFirstToken ( TokenTypes . RPAREN ) ; <nl> } <nl> <nl> @ @ - 235 , 7 + 235 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { <nl> * <nl> * @ return the left parenthesis expression <nl> * / <nl> - protected DetailAST getLeftParen ( ) { <nl> + private DetailAST getLeftParen ( ) { <nl> return getMainAst ( ) . findFirstToken ( TokenTypes . LPAREN ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> index 460fcdc . . adc24fb 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java <nl> @ @ - 193 , 6 + 193 , 7 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> * Called before the starting to process a tree . <nl> * @ param rootAst <nl> * the root of the tree <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public void beginJavadocTree ( DetailNode rootAst ) { <nl> / / No code by default , should be overridden only by demand at subclasses <nl> @ @ - 202 , 6 + 203 , 7 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { <nl> * Called after finished processing a tree . <nl> * @ param rootAst <nl> * the root of the tree <nl> + * @ noinspection WeakerAccess <nl> * / <nl> public void finishJavadocTree ( DetailNode rootAst ) { <nl> / / No code by default , should be overridden only by demand at subclasses <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java <nl> index 395cce3 . . 9ae8d09 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java <nl> @ @ - 229 , 10 + 229 , 11 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { <nl> * @ param className name of surrounding class . <nl> * @ return the resolved class or { @ code null } <nl> * if unable to resolve the class . <nl> + * @ noinspection WeakerAccess <nl> * / <nl> / / - @ cs [ ForbidWildcardAsReturnType ] The class is deprecated and will be removed soon . <nl> protected final Class < ? > resolveClass ( String resolvableClassName , <nl> - String className ) { <nl> + String className ) { <nl> Class < ? > clazz ; <nl> try { <nl> clazz = getClassResolver ( ) . resolve ( resolvableClassName , className ) ; <nl> @ @ - 248 , 6 + 249 , 7 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { <nl> * @ param ident name of class which we try to load . <nl> * @ param className name of surrounding class . <nl> * @ return { @ code Class } for a ident . <nl> + * @ noinspection WeakerAccess <nl> * / <nl> / / - @ cs [ ForbidWildcardAsReturnType ] The class is deprecated and will be removed soon . <nl> protected final Class < ? > tryLoadClass ( Token ident , String className ) { <nl> @ @ - 381 , 6 + 383 , 7 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { <nl> * Looking if a given name is alias . <nl> * @ param name given name <nl> * @ return ClassInfo for alias if it exists , null otherwise <nl> + * @ noinspection WeakerAccess <nl> * / <nl> protected final AbstractClassInfo findClassAlias ( final String name ) { <nl> AbstractClassInfo classInfo = null ; <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java <nl> index 2764e52 . . 9787656 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java <nl> @ @ - 111 , 14 + 111 , 6 @ @ public abstract class AbstractClassCouplingCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * Returns allowed complexity . <nl> - * @ return allowed complexity . <nl> - * / <nl> - public final int getMax ( ) { <nl> - return max ; <nl> - } <nl> - <nl> - / * * <nl> * Sets maximum allowed complexity . <nl> * @ param max allowed complexity . <nl> * / <nl> @ @ - 428 , 7 + 420 , 7 @ @ public abstract class AbstractClassCouplingCheck extends AbstractCheck { <nl> <nl> if ( referencedClassNames . size ( ) > max ) { <nl> log ( lineNo , columnNo , getLogMessageId ( ) , <nl> - referencedClassNames . size ( ) , getMax ( ) , <nl> + referencedClassNames . size ( ) , max , <nl> referencedClassNames . toString ( ) ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheck . java <nl> index dddce25 . . 756874a 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheck . java <nl> @ @ - 98 , 14 + 98 , 6 @ @ public final class BooleanExpressionComplexityCheck extends AbstractCheck { <nl> } <nl> <nl> / * * <nl> - * Getter for maximum allowed complexity . <nl> - * @ return value of maximum allowed complexity . <nl> - * / <nl> - public int getMax ( ) { <nl> - return max ; <nl> - } <nl> - <nl> - / * * <nl> * Setter for maximum allowed complexity . <nl> * @ param max new maximum allowed complexity . <nl> * / <nl> @ @ - 252 , 11 + 244 , 11 @ @ public final class BooleanExpressionComplexityCheck extends AbstractCheck { <nl> * @ param ast a node we check now . <nl> * / <nl> public void checkCount ( DetailAST ast ) { <nl> - if ( checking & & count > getMax ( ) ) { <nl> + if ( checking & & count > max ) { <nl> final DetailAST parentAST = ast . getParent ( ) ; <nl> <nl> log ( parentAST . getLineNo ( ) , parentAST . getColumnNo ( ) , <nl> - MSG _ KEY , count , getMax ( ) ) ; <nl> + MSG _ KEY , count , max ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java <nl> index 50510fc . . 58d2bf5 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java <nl> @ @ - 174 , 7 + 174 , 7 @ @ public class CyclomaticComplexityCheck <nl> * <nl> * @ param ast the token being visited <nl> * / <nl> - protected final void visitTokenHook ( DetailAST ast ) { <nl> + private void visitTokenHook ( DetailAST ast ) { <nl> if ( switchBlockAsSingleDecisionPoint ) { <nl> if ( ast . getType ( ) ! = TokenTypes . LITERAL _ CASE ) { <nl> incrementCurrentValue ( BigInteger . ONE ) ; <nl> @ @ - 203 , 12 + 203 , 12 @ @ public class CyclomaticComplexityCheck <nl> * <nl> * @ param amount the amount to increment by <nl> * / <nl> - protected final void incrementCurrentValue ( BigInteger amount ) { <nl> + private void incrementCurrentValue ( BigInteger amount ) { <nl> currentValue = currentValue . add ( amount ) ; <nl> } <nl> <nl> / * * Push the current value on the stack . * / <nl> - protected final void pushValue ( ) { <nl> + private void pushValue ( ) { <nl> valueStack . push ( currentValue ) ; <nl> currentValue = INITIAL _ VALUE ; <nl> } <nl> @ @ - 216 , 7 + 216 , 7 @ @ public class CyclomaticComplexityCheck <nl> / * * <nl> * Pops a value off the stack and makes it the current value . <nl> * / <nl> - protected final void popValue ( ) { <nl> + private void popValue ( ) { <nl> currentValue = valueStack . pop ( ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AccessModifier . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AccessModifier . java <nl> index 5599f67 . . cc84ce7 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AccessModifier . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AccessModifier . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public enum AccessModifier { <nl> return getName ( ) ; <nl> } <nl> <nl> - public String getName ( ) { <nl> + private String getName ( ) { <nl> return name ( ) . toLowerCase ( Locale . ENGLISH ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / HtmlTag . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / HtmlTag . java <nl> index b83f997 . . 75f83b8 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / HtmlTag . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / HtmlTag . java <nl> @ @ - 62 , 7 + 62 , 7 @ @ class HtmlTag { <nl> this . position = position ; <nl> this . text = text ; <nl> this . closedTag = closedTag ; <nl> - this . incompleteTag = incomplete ; <nl> + incompleteTag = incomplete ; <nl> } <nl> <nl> / * *

TEST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 index 5d60598 . . 34f2f33 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ConfigurationLoader . java 
 @ @ - 246 , 7 + 246 , 7 @ @ public final class ConfigurationLoader { 
 * @ return the check configurations 
 * @ throws CheckstyleException if an error occurs 
 * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 - * @ noinspection BooleanParameter 
 + * @ noinspection BooleanParameter , WeakerAccess 
 * / 
 @ Deprecated 
 public static Configuration loadConfiguration ( String config , 
 @ @ - 321 , 7 + 321 , 7 @ @ public final class ConfigurationLoader { 
 * @ return the check configurations 
 * @ throws CheckstyleException if an error occurs 
 * @ deprecated in order to fullfil demands of BooleanParameter IDEA check . 
 - * @ noinspection BooleanParameter 
 + * @ noinspection BooleanParameter , WeakerAccess 
 * / 
 @ Deprecated 
 public static Configuration loadConfiguration ( InputSource configSource , 
 @ @ - 419 , 6 + 419 , 7 @ @ public final class ConfigurationLoader { 
 * @ param threadModeSettings the thread mode configuration 
 * @ return the check configurations 
 * @ throws CheckstyleException if an error occurs 
 + * @ noinspection WeakerAccess 
 * / 
 public static Configuration loadConfiguration ( InputSource configSource , 
 PropertyResolver overridePropsResolver , 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 index 04a6158 . . 35b8e9d 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / ant / CheckstyleAntTask . java 
 @ @ - 507 , 7 + 507 , 7 @ @ public class CheckstyleAntTask extends Task { 
 * Returns the list of files ( full path name ) to process . 
 * @ return the list of files included via the fileName , filesets and paths . 
 * / 
 - protected List < File > getFilesToCheck ( ) { 
 + private List < File > getFilesToCheck ( ) { 
 final List < File > allFiles = new ArrayList < > ( ) ; 
 if ( fileName ! = null ) { 
 / / oops we ' ve got an additional one to process , don ' t 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 index 4b7f0c0 . . ca9a5b3 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 @ @ - 122 , 7 + 122 , 7 @ @ public final class FileContents implements CommentListener { 
 * @ param endLineNo the ending line number 
 * @ param endColNo the ending column number 
 * * / 
 - public void reportBlockComment ( int startLineNo , int startColNo , 
 + private void reportBlockComment ( int startLineNo , int startColNo , 
 int endLineNo , int endColNo ) { 
 final String [ ] cComment = extractBlockComment ( startLineNo , startColNo , 
 endLineNo , endColNo ) ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 index b036479 . . 1ef0e59 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / AnnotationLocationCheck . java 
 @ @ - 408 , 7 + 408 , 7 @ @ public class AnnotationLocationCheck extends AbstractCheck { 
 * @ param allowedPositions an array of allowed annotation positions . 
 * @ return true if position of annotation is allowed . 
 * / 
 - public static boolean isAllowedPosition ( DetailAST annotation , int . . . allowedPositions ) { 
 + private static boolean isAllowedPosition ( DetailAST annotation , int . . . allowedPositions ) { 
 boolean allowed = false ; 
 for ( int position : allowedPositions ) { 
 if ( isInSpecificCodeBlock ( annotation , position ) ) { 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 index f28ecfa . . 3e2e333 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / blocks / EmptyBlockCheck . java 
 @ @ - 170 , 7 + 170 , 7 @ @ public class EmptyBlockCheck 
 * @ param slistAST a { @ code DetailAST } value 
 * @ return whether the SLIST token contains any text . 
 * / 
 - protected boolean hasText ( final DetailAST slistAST ) { 
 + private boolean hasText ( final DetailAST slistAST ) { 
 final DetailAST rightCurly = slistAST . findFirstToken ( TokenTypes . RCURLY ) ; 
 final DetailAST rcurlyAST ; 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java 
 index 256db31 . . da0e810 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / design / FinalClassCheck . java 
 @ @ - 55 , 7 + 55 , 7 @ @ public class FinalClassCheck 
 / * * 
 * Character separate package names in qualified name of java class . 
 * / 
 - public static final String PACKAGE _ SEPARATOR = " . " ; 
 + private static final String PACKAGE _ SEPARATOR = " . " ; 
 
 / * * Keeps ClassDesc objects for stack of declared classes . * / 
 private Deque < ClassDesc > classes ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 index 2058237 . . 4628087 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / indentation / BlockParentHandler . java 
 @ @ - 104 , 7 + 104 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 * Check if the top level token has label before . 
 * @ return true if the top level token has label before . 
 * / 
 - protected boolean hasLabelBefore ( ) { 
 + private boolean hasLabelBefore ( ) { 
 final DetailAST parent = getTopLevelAst ( ) . getParent ( ) ; 
 return parent . getType ( ) = = TokenTypes . LABELED _ STAT 
 & & parent . getLineNo ( ) = = getTopLevelAst ( ) . getLineNo ( ) ; 
 @ @ - 124 , 7 + 124 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 * 
 * @ return true if curly braces are present , false otherwise 
 * / 
 - protected boolean hasCurlies ( ) { 
 + private boolean hasCurlies ( ) { 
 return getLeftCurly ( ) ! = null & & getRightCurly ( ) ! = null ; 
 } 
 
 @ @ - 150 , 7 + 150 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 / * * 
 * Check the indentation of the left curly brace . 
 * / 
 - protected void checkLeftCurly ( ) { 
 + private void checkLeftCurly ( ) { 
 / / the lcurly can either be at the correct indentation , or nested 
 / / with a previous expression 
 final DetailAST lcurly = getLeftCurly ( ) ; 
 @ @ - 182 , 7 + 182 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 / * * 
 * Check the indentation of the right curly brace . 
 * / 
 - protected void checkRightCurly ( ) { 
 + private void checkRightCurly ( ) { 
 final DetailAST rcurly = getRightCurly ( ) ; 
 final int rcurlyPos = expandedTabsColumnNo ( rcurly ) ; 
 
 @ @ - 226 , 7 + 226 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 * 
 * @ return the right parenthesis expression 
 * / 
 - protected DetailAST getRightParen ( ) { 
 + private DetailAST getRightParen ( ) { 
 return getMainAst ( ) . findFirstToken ( TokenTypes . RPAREN ) ; 
 } 
 
 @ @ - 235 , 7 + 235 , 7 @ @ public class BlockParentHandler extends AbstractExpressionHandler { 
 * 
 * @ return the left parenthesis expression 
 * / 
 - protected DetailAST getLeftParen ( ) { 
 + private DetailAST getLeftParen ( ) { 
 return getMainAst ( ) . findFirstToken ( TokenTypes . LPAREN ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 index 460fcdc . . adc24fb 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractJavadocCheck . java 
 @ @ - 193 , 6 + 193 , 7 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 * Called before the starting to process a tree . 
 * @ param rootAst 
 * the root of the tree 
 + * @ noinspection WeakerAccess 
 * / 
 public void beginJavadocTree ( DetailNode rootAst ) { 
 / / No code by default , should be overridden only by demand at subclasses 
 @ @ - 202 , 6 + 203 , 7 @ @ public abstract class AbstractJavadocCheck extends AbstractCheck { 
 * Called after finished processing a tree . 
 * @ param rootAst 
 * the root of the tree 
 + * @ noinspection WeakerAccess 
 * / 
 public void finishJavadocTree ( DetailNode rootAst ) { 
 / / No code by default , should be overridden only by demand at subclasses 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java 
 index 395cce3 . . 9ae8d09 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / AbstractTypeAwareCheck . java 
 @ @ - 229 , 10 + 229 , 11 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { 
 * @ param className name of surrounding class . 
 * @ return the resolved class or { @ code null } 
 * if unable to resolve the class . 
 + * @ noinspection WeakerAccess 
 * / 
 / / - @ cs [ ForbidWildcardAsReturnType ] The class is deprecated and will be removed soon . 
 protected final Class < ? > resolveClass ( String resolvableClassName , 
 - String className ) { 
 + String className ) { 
 Class < ? > clazz ; 
 try { 
 clazz = getClassResolver ( ) . resolve ( resolvableClassName , className ) ; 
 @ @ - 248 , 6 + 249 , 7 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { 
 * @ param ident name of class which we try to load . 
 * @ param className name of surrounding class . 
 * @ return { @ code Class } for a ident . 
 + * @ noinspection WeakerAccess 
 * / 
 / / - @ cs [ ForbidWildcardAsReturnType ] The class is deprecated and will be removed soon . 
 protected final Class < ? > tryLoadClass ( Token ident , String className ) { 
 @ @ - 381 , 6 + 383 , 7 @ @ public abstract class AbstractTypeAwareCheck extends AbstractCheck { 
 * Looking if a given name is alias . 
 * @ param name given name 
 * @ return ClassInfo for alias if it exists , null otherwise 
 + * @ noinspection WeakerAccess 
 * / 
 protected final AbstractClassInfo findClassAlias ( final String name ) { 
 AbstractClassInfo classInfo = null ; 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java 
 index 2764e52 . . 9787656 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / AbstractClassCouplingCheck . java 
 @ @ - 111 , 14 + 111 , 6 @ @ public abstract class AbstractClassCouplingCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * Returns allowed complexity . 
 - * @ return allowed complexity . 
 - * / 
 - public final int getMax ( ) { 
 - return max ; 
 - } 
 - 
 - / * * 
 * Sets maximum allowed complexity . 
 * @ param max allowed complexity . 
 * / 
 @ @ - 428 , 7 + 420 , 7 @ @ public abstract class AbstractClassCouplingCheck extends AbstractCheck { 
 
 if ( referencedClassNames . size ( ) > max ) { 
 log ( lineNo , columnNo , getLogMessageId ( ) , 
 - referencedClassNames . size ( ) , getMax ( ) , 
 + referencedClassNames . size ( ) , max , 
 referencedClassNames . toString ( ) ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheck . java 
 index dddce25 . . 756874a 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / BooleanExpressionComplexityCheck . java 
 @ @ - 98 , 14 + 98 , 6 @ @ public final class BooleanExpressionComplexityCheck extends AbstractCheck { 
 } 
 
 / * * 
 - * Getter for maximum allowed complexity . 
 - * @ return value of maximum allowed complexity . 
 - * / 
 - public int getMax ( ) { 
 - return max ; 
 - } 
 - 
 - / * * 
 * Setter for maximum allowed complexity . 
 * @ param max new maximum allowed complexity . 
 * / 
 @ @ - 252 , 11 + 244 , 11 @ @ public final class BooleanExpressionComplexityCheck extends AbstractCheck { 
 * @ param ast a node we check now . 
 * / 
 public void checkCount ( DetailAST ast ) { 
 - if ( checking & & count > getMax ( ) ) { 
 + if ( checking & & count > max ) { 
 final DetailAST parentAST = ast . getParent ( ) ; 
 
 log ( parentAST . getLineNo ( ) , parentAST . getColumnNo ( ) , 
 - MSG _ KEY , count , getMax ( ) ) ; 
 + MSG _ KEY , count , max ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java 
 index 50510fc . . 58d2bf5 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / metrics / CyclomaticComplexityCheck . java 
 @ @ - 174 , 7 + 174 , 7 @ @ public class CyclomaticComplexityCheck 
 * 
 * @ param ast the token being visited 
 * / 
 - protected final void visitTokenHook ( DetailAST ast ) { 
 + private void visitTokenHook ( DetailAST ast ) { 
 if ( switchBlockAsSingleDecisionPoint ) { 
 if ( ast . getType ( ) ! = TokenTypes . LITERAL _ CASE ) { 
 incrementCurrentValue ( BigInteger . ONE ) ; 
 @ @ - 203 , 12 + 203 , 12 @ @ public class CyclomaticComplexityCheck 
 * 
 * @ param amount the amount to increment by 
 * / 
 - protected final void incrementCurrentValue ( BigInteger amount ) { 
 + private void incrementCurrentValue ( BigInteger amount ) { 
 currentValue = currentValue . add ( amount ) ; 
 } 
 
 / * * Push the current value on the stack . * / 
 - protected final void pushValue ( ) { 
 + private void pushValue ( ) { 
 valueStack . push ( currentValue ) ; 
 currentValue = INITIAL _ VALUE ; 
 } 
 @ @ - 216 , 7 + 216 , 7 @ @ public class CyclomaticComplexityCheck 
 / * * 
 * Pops a value off the stack and makes it the current value . 
 * / 
 - protected final void popValue ( ) { 
 + private void popValue ( ) { 
 currentValue = valueStack . pop ( ) ; 
 } 
 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AccessModifier . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AccessModifier . java 
 index 5599f67 . . cc84ce7 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AccessModifier . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / AccessModifier . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public enum AccessModifier { 
 return getName ( ) ; 
 } 
 
 - public String getName ( ) { 
 + private String getName ( ) { 
 return name ( ) . toLowerCase ( Locale . ENGLISH ) ; 
 } 


NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / HtmlTag . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / HtmlTag . java 
 index b83f997 . . 75f83b8 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / HtmlTag . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / javadoc / HtmlTag . java 
 @ @ - 62 , 7 + 62 , 7 @ @ class HtmlTag { 
 this . position = position ; 
 this . text = text ; 
 this . closedTag = closedTag ; 
 - this . incompleteTag = incomplete ; 
 + incompleteTag = incomplete ; 
 } 
 
 / * *
