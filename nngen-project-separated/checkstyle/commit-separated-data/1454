BLEU SCORE: 0.06837203339116285

TEST MSG: Issue # 2581 : Enforce all annotations to be separate line for Checkstyle
GENERATED MSG: Issue # 1555 : Decrease visibility of fields and methods in test code

TEST DIFF (one line): diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml <nl> index 3e92d5b . . 51f4ea0 100644 <nl> - - - a / config / checkstyle _ checks . xml <nl> + + + b / config / checkstyle _ checks . xml <nl> @ @ - 108 , 7 + 108 , 9 @ @ <nl> < property name = " tabWidth " value = " 4 " / > <nl> <nl> < ! - - Annotations - - > <nl> - < module name = " AnnotationLocation " / > <nl> + < module name = " AnnotationLocation " > <nl> + < property name = " allowSamelineSingleParameterlessAnnotation " value = " false " / > <nl> + < / module > <nl> < module name = " AnnotationUseStyle " / > <nl> < module name = " MissingDeprecated " / > <nl> < module name = " MissingOverride " > <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> index 442cab9 . . 2256197 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java <nl> @ @ - 508 , 7 + 508 , 8 @ @ public class MainTest { <nl> } ; <nl> <nl> exit . checkAssertionAfterwards ( new Assertion ( ) { <nl> - @ Override public void checkAssertion ( ) throws IOException { <nl> + @ Override <nl> + public void checkAssertion ( ) throws IOException { <nl> final String expectedPath = getFilePath ( " checks / metrics " ) + File . separator ; <nl> final StringBuilder sb = new StringBuilder ( ) ; <nl> sb . append ( " Starting audit . . . " ) . append ( System . getProperty ( " line . separator " ) ) ; <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> index 6f0ecfc . . dcde375 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java <nl> @ @ - 48 , 7 + 48 , 8 @ @ import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; <nl> import com . puppycrawl . tools . checkstyle . checks . naming . TypeNameCheck ; <nl> <nl> public class TreeWalkerTest extends BaseCheckTestSupport { <nl> - @ Rule public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> + @ Rule <nl> + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> <nl> @ Test <nl> public void testProperFileExtension ( ) throws Exception { <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java <nl> index 21cc866 . . 883fd7b 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java <nl> @ @ - 39 , 7 + 39 , 8 @ @ import com . puppycrawl . tools . checkstyle . BaseFileSetCheckTestSupport ; <nl> import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; <nl> <nl> public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { <nl> - @ Rule public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> + @ Rule <nl> + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; <nl> <nl> private DefaultConfiguration checkConfig ; <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> index 3a75316 . . b5aef5f 100755 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java <nl> @ @ - 297 , 7 + 297 , 8 @ @ public final class TreeWalker <nl> for ( final int token : check . getRequiredTokens ( ) ) { <nl> if ( Arrays . binarySearch ( defaultTokens , token ) < 0 ) { <nl> final String message = String . format ( " Token \ " % s \ " from required tokens was " <nl> - + " not found in default tokens list in check % s " , token , check ) ; <nl> + + " not found in default tokens list in check % s " , <nl> + token , check . getClass ( ) . getName ( ) ) ; <nl> throw new CheckstyleException ( message ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / config / checkstyle _ checks . xml b / config / checkstyle _ checks . xml 
 index 3e92d5b . . 51f4ea0 100644 
 - - - a / config / checkstyle _ checks . xml 
 + + + b / config / checkstyle _ checks . xml 
 @ @ - 108 , 7 + 108 , 9 @ @ 
 < property name = " tabWidth " value = " 4 " / > 
 
 < ! - - Annotations - - > 
 - < module name = " AnnotationLocation " / > 
 + < module name = " AnnotationLocation " > 
 + < property name = " allowSamelineSingleParameterlessAnnotation " value = " false " / > 
 + < / module > 
 < module name = " AnnotationUseStyle " / > 
 < module name = " MissingDeprecated " / > 
 < module name = " MissingOverride " > 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 index 442cab9 . . 2256197 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / MainTest . java 
 @ @ - 508 , 7 + 508 , 8 @ @ public class MainTest { 
 } ; 
 
 exit . checkAssertionAfterwards ( new Assertion ( ) { 
 - @ Override public void checkAssertion ( ) throws IOException { 
 + @ Override 
 + public void checkAssertion ( ) throws IOException { 
 final String expectedPath = getFilePath ( " checks / metrics " ) + File . separator ; 
 final StringBuilder sb = new StringBuilder ( ) ; 
 sb . append ( " Starting audit . . . " ) . append ( System . getProperty ( " line . separator " ) ) ; 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 index 6f0ecfc . . dcde375 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / TreeWalkerTest . java 
 @ @ - 48 , 7 + 48 , 8 @ @ import com . puppycrawl . tools . checkstyle . checks . naming . ConstantNameCheck ; 
 import com . puppycrawl . tools . checkstyle . checks . naming . TypeNameCheck ; 
 
 public class TreeWalkerTest extends BaseCheckTestSupport { 
 - @ Rule public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 + @ Rule 
 + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 
 @ Test 
 public void testProperFileExtension ( ) throws Exception { 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java 
 index 21cc866 . . 883fd7b 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / regexp / RegexpMultilineCheckTest . java 
 @ @ - 39 , 7 + 39 , 8 @ @ import com . puppycrawl . tools . checkstyle . BaseFileSetCheckTestSupport ; 
 import com . puppycrawl . tools . checkstyle . DefaultConfiguration ; 
 
 public class RegexpMultilineCheckTest extends BaseFileSetCheckTestSupport { 
 - @ Rule public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 + @ Rule 
 + public final TemporaryFolder temporaryFolder = new TemporaryFolder ( ) ; 
 
 private DefaultConfiguration checkConfig ; 


NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 index 3a75316 . . b5aef5f 100755 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / TreeWalker . java 
 @ @ - 297 , 7 + 297 , 8 @ @ public final class TreeWalker 
 for ( final int token : check . getRequiredTokens ( ) ) { 
 if ( Arrays . binarySearch ( defaultTokens , token ) < 0 ) { 
 final String message = String . format ( " Token \ " % s \ " from required tokens was " 
 - + " not found in default tokens list in check % s " , token , check ) ; 
 + + " not found in default tokens list in check % s " , 
 + token , check . getClass ( ) . getName ( ) ) ; 
 throw new CheckstyleException ( message ) ; 
 } 
 }
