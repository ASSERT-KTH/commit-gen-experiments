BLEU SCORE: 0.041961149062965476

TEST MSG: Issue # 3800 : Typo in website documentation for JavadocMethod
GENERATED MSG: Document WhitespaceAround for - each property

TEST DIFF (one line): diff - - git a / src / xdocs / config _ javadoc . xml b / src / xdocs / config _ javadoc . xml <nl> index 71cfb41 . . 62fcbe5 100644 <nl> - - - a / src / xdocs / config _ javadoc . xml <nl> + + + b / src / xdocs / config _ javadoc . xml <nl> @ @ - 260 , 7 + 260 , 7 @ @ public int checkReturnTag ( final int aTagIndex , <nl> < tr > <nl> < td > allowMissingThrowsTags < / td > <nl> < td > whether to ignore errors when a method declares <nl> - that it throws exceptions but does have matching throws tags <nl> + that it throws exceptions but does not have matching throws tags <nl> in the javadoc . < / td > <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> < td > < code > false < / code > < / td > <nl> @ @ - 268 , 7 + 268 , 7 @ @ public int checkReturnTag ( final int aTagIndex , <nl> < tr > <nl> < td > allowMissingReturnTag < / td > <nl> < td > whether to ignore errors when a method returns <nl> - non - void type does have a return tag in the javadoc . < / td > <nl> + non - void type and does not have a return tag in the javadoc . < / td > <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> < td > < code > false < / code > < / td > <nl> < / tr >
NEAREST DIFF (one line): diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> index e06b6b8 . . 27ddd28 100755 <nl> - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java <nl> @ @ - 113 , 6 + 113 , 17 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> * < pre > & lt ; property name = " allowEmptyConstructors " value = " true " / & gt ; < / pre > <nl> * < / p > <nl> * <nl> + * < p > <nl> + * Also , this check can be configured to ignore the colon in an enhanced for <nl> + * loop . The colon in an enhanced for loop is ignored by default <nl> + * < / p > <nl> + * < p > <nl> + * To configure the check to ignore the colon <nl> + * < / p > <nl> + * < p > <nl> + * < pre > & lt ; property name = " ignoreEnhancedForColon " value = " true " / & gt ; < / pre > <nl> + * < / p > <nl> + * <nl> * @ author Oliver Burn <nl> * @ version 1 . 0 <nl> * / <nl> @ @ - 122 , 6 + 133 , 8 @ @ public class WhitespaceAroundCheck extends Check <nl> private boolean mAllowEmptyCtors ; <nl> / * * Whether or not empty method bodies are allowed . * / <nl> private boolean mAllowEmptyMethods ; <nl> + / * * whether or not to ignore a colon in a enhanced for loop * / <nl> + private boolean mIgnoreEnhancedForColon = true ; <nl> <nl> @ Override <nl> public int [ ] getDefaultTokens ( ) <nl> @ @ - 179 , 7 + 192 , 7 @ @ public class WhitespaceAroundCheck extends Check <nl> } <nl> <nl> / * * <nl> - * Sets whether or now empty method bodies are allowed . <nl> + * Sets whether or not empty method bodies are allowed . <nl> * @ param aAllow < code > true < / code > to allow empty method bodies . <nl> * / <nl> public void setAllowEmptyMethods ( boolean aAllow ) <nl> @ @ - 188 , 7 + 201 , 7 @ @ public class WhitespaceAroundCheck extends Check <nl> } <nl> <nl> / * * <nl> - * Sets whether or now empty constructor bodies are allowed . <nl> + * Sets whether or not empty constructor bodies are allowed . <nl> * @ param aAllow < code > true < / code > to allow empty constructor bodies . <nl> * / <nl> public void setAllowEmptyConstructors ( boolean aAllow ) <nl> @ @ - 196 , 6 + 209 , 16 @ @ public class WhitespaceAroundCheck extends Check <nl> mAllowEmptyCtors = aAllow ; <nl> } <nl> <nl> + / * * <nl> + * Sets whether or not to ignore the whitespace around the <nl> + * colon in an enhanced for loop . <nl> + * @ param aIgnore < code > true < / code > to ignore enhanced for colon . <nl> + * / <nl> + public void setIgnoreEnhancedForColon ( boolean aIgnore ) <nl> + { <nl> + mIgnoreEnhancedForColon = aIgnore ; <nl> + } <nl> + <nl> @ Override <nl> public void visitToken ( DetailAST aAST ) <nl> { <nl> @ @ - 223 , 12 + 246 , 18 @ @ public class WhitespaceAroundCheck extends Check <nl> return ; <nl> } <nl> <nl> - / / we do not want to check colon for cases and defaults <nl> - if ( ( type = = TokenTypes . COLON ) <nl> - & & ( ( parentType = = TokenTypes . LITERAL _ DEFAULT ) <nl> - | | ( parentType = = TokenTypes . LITERAL _ CASE ) ) ) <nl> - { <nl> - return ; <nl> + if ( ( type = = TokenTypes . COLON ) ) { <nl> + / / we do not want to check colon for cases and defaults <nl> + if ( parentType = = TokenTypes . LITERAL _ DEFAULT <nl> + | | parentType = = TokenTypes . LITERAL _ CASE ) <nl> + { <nl> + return ; <nl> + } <nl> + else if ( parentType = = TokenTypes . FOR _ EACH _ CLAUSE <nl> + & & this . mIgnoreEnhancedForColon ) <nl> + { <nl> + return ; <nl> + } <nl> } <nl> <nl> / / Check for allowed empty method or ctor blocks . <nl> diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / InputWhitespaceAround . java b / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / InputWhitespaceAround . java <nl> index d7031cd . . 27dc573 100755 <nl> - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / InputWhitespaceAround . java <nl> + + + b / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / InputWhitespaceAround . java <nl> @ @ - 1 , 3 + 1 , 5 @ @ <nl> + package com . puppycrawl . tools . checkstyle . whitespace ; <nl> + <nl> public class InputWhitespaceAround <nl> { <nl> protected InputWhitespaceAround ( int i ) <nl> @ @ - 9 , 4 + 11 , 12 @ @ public class InputWhitespaceAround <nl> { <nl> super ( ) ; <nl> } <nl> + <nl> + public void enhancedFor ( ) <nl> + { <nl> + int [ ] i = new int [ 2 ] ; <nl> + for ( int j : i ) { <nl> + System . out . println ( j ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundTest . java <nl> index 9df0938 . . c9fd16c 100755 <nl> - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundTest . java <nl> + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundTest . java <nl> @ @ - 135 , 11 + 135 , 22 @ @ public class WhitespaceAroundTest <nl> } <nl> <nl> @ Test <nl> - public void test1322879 ( ) throws Exception <nl> + public void test1322879And1649038 ( ) throws Exception <nl> { <nl> final String [ ] expected = { <nl> } ; <nl> verify ( checkConfig , getPath ( " whitespace / InputWhitespaceAround . java " ) , <nl> expected ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testIgnoreEnhancedForColon ( ) throws Exception <nl> + { <nl> + checkConfig . addAttribute ( " ignoreEnhancedForColon " , " false " ) ; <nl> + final String [ ] expected = { <nl> + " 18 : 20 : ' : ' is not preceded with whitespace . " , <nl> + } ; <nl> + verify ( checkConfig , getPath ( " whitespace / InputWhitespaceAround . java " ) , <nl> + expected ) ; <nl> + } <nl> } <nl> diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml <nl> index b258322 . . ae832bc 100755 <nl> - - - a / src / xdocs / releasenotes . xml <nl> + + + b / src / xdocs / releasenotes . xml <nl> @ @ - 43 , 6 + 43 , 11 @ @ <nl> Fixed parsing errors for Unicode escape sequences . Thanks to <nl> Dinesh Bolkensteyn for patch # 3412812 . <nl> < / li > <nl> + < li > <nl> + ignoreEnhancedForColon property added to <nl> + < a href = " config _ whitespace . html # WhitespaceAround " > WhitespaceAround < / a > . <nl> + Thanks to Travis Schneeberger for patch # 1921815 ( bug # 1649038 ) . <nl> + < / li > <nl> < / ul > <nl> < p > Notes : < / p > <nl> < ul >

TEST DIFF:
diff - - git a / src / xdocs / config _ javadoc . xml b / src / xdocs / config _ javadoc . xml 
 index 71cfb41 . . 62fcbe5 100644 
 - - - a / src / xdocs / config _ javadoc . xml 
 + + + b / src / xdocs / config _ javadoc . xml 
 @ @ - 260 , 7 + 260 , 7 @ @ public int checkReturnTag ( final int aTagIndex , 
 < tr > 
 < td > allowMissingThrowsTags < / td > 
 < td > whether to ignore errors when a method declares 
 - that it throws exceptions but does have matching throws tags 
 + that it throws exceptions but does not have matching throws tags 
 in the javadoc . < / td > 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 < td > < code > false < / code > < / td > 
 @ @ - 268 , 7 + 268 , 7 @ @ public int checkReturnTag ( final int aTagIndex , 
 < tr > 
 < td > allowMissingReturnTag < / td > 
 < td > whether to ignore errors when a method returns 
 - non - void type does have a return tag in the javadoc . < / td > 
 + non - void type and does not have a return tag in the javadoc . < / td > 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 < td > < code > false < / code > < / td > 
 < / tr >

NEAREST DIFF:
diff - - git a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 index e06b6b8 . . 27ddd28 100755 
 - - - a / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 + + + b / src / checkstyle / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundCheck . java 
 @ @ - 113 , 6 + 113 , 17 @ @ import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 * < pre > & lt ; property name = " allowEmptyConstructors " value = " true " / & gt ; < / pre > 
 * < / p > 
 * 
 + * < p > 
 + * Also , this check can be configured to ignore the colon in an enhanced for 
 + * loop . The colon in an enhanced for loop is ignored by default 
 + * < / p > 
 + * < p > 
 + * To configure the check to ignore the colon 
 + * < / p > 
 + * < p > 
 + * < pre > & lt ; property name = " ignoreEnhancedForColon " value = " true " / & gt ; < / pre > 
 + * < / p > 
 + * 
 * @ author Oliver Burn 
 * @ version 1 . 0 
 * / 
 @ @ - 122 , 6 + 133 , 8 @ @ public class WhitespaceAroundCheck extends Check 
 private boolean mAllowEmptyCtors ; 
 / * * Whether or not empty method bodies are allowed . * / 
 private boolean mAllowEmptyMethods ; 
 + / * * whether or not to ignore a colon in a enhanced for loop * / 
 + private boolean mIgnoreEnhancedForColon = true ; 
 
 @ Override 
 public int [ ] getDefaultTokens ( ) 
 @ @ - 179 , 7 + 192 , 7 @ @ public class WhitespaceAroundCheck extends Check 
 } 
 
 / * * 
 - * Sets whether or now empty method bodies are allowed . 
 + * Sets whether or not empty method bodies are allowed . 
 * @ param aAllow < code > true < / code > to allow empty method bodies . 
 * / 
 public void setAllowEmptyMethods ( boolean aAllow ) 
 @ @ - 188 , 7 + 201 , 7 @ @ public class WhitespaceAroundCheck extends Check 
 } 
 
 / * * 
 - * Sets whether or now empty constructor bodies are allowed . 
 + * Sets whether or not empty constructor bodies are allowed . 
 * @ param aAllow < code > true < / code > to allow empty constructor bodies . 
 * / 
 public void setAllowEmptyConstructors ( boolean aAllow ) 
 @ @ - 196 , 6 + 209 , 16 @ @ public class WhitespaceAroundCheck extends Check 
 mAllowEmptyCtors = aAllow ; 
 } 
 
 + / * * 
 + * Sets whether or not to ignore the whitespace around the 
 + * colon in an enhanced for loop . 
 + * @ param aIgnore < code > true < / code > to ignore enhanced for colon . 
 + * / 
 + public void setIgnoreEnhancedForColon ( boolean aIgnore ) 
 + { 
 + mIgnoreEnhancedForColon = aIgnore ; 
 + } 
 + 
 @ Override 
 public void visitToken ( DetailAST aAST ) 
 { 
 @ @ - 223 , 12 + 246 , 18 @ @ public class WhitespaceAroundCheck extends Check 
 return ; 
 } 
 
 - / / we do not want to check colon for cases and defaults 
 - if ( ( type = = TokenTypes . COLON ) 
 - & & ( ( parentType = = TokenTypes . LITERAL _ DEFAULT ) 
 - | | ( parentType = = TokenTypes . LITERAL _ CASE ) ) ) 
 - { 
 - return ; 
 + if ( ( type = = TokenTypes . COLON ) ) { 
 + / / we do not want to check colon for cases and defaults 
 + if ( parentType = = TokenTypes . LITERAL _ DEFAULT 
 + | | parentType = = TokenTypes . LITERAL _ CASE ) 
 + { 
 + return ; 
 + } 
 + else if ( parentType = = TokenTypes . FOR _ EACH _ CLAUSE 
 + & & this . mIgnoreEnhancedForColon ) 
 + { 
 + return ; 
 + } 
 } 
 
 / / Check for allowed empty method or ctor blocks . 
 diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / InputWhitespaceAround . java b / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / InputWhitespaceAround . java 
 index d7031cd . . 27dc573 100755 
 - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / InputWhitespaceAround . java 
 + + + b / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / InputWhitespaceAround . java 
 @ @ - 1 , 3 + 1 , 5 @ @ 
 + package com . puppycrawl . tools . checkstyle . whitespace ; 
 + 
 public class InputWhitespaceAround 
 { 
 protected InputWhitespaceAround ( int i ) 
 @ @ - 9 , 4 + 11 , 12 @ @ public class InputWhitespaceAround 
 { 
 super ( ) ; 
 } 
 + 
 + public void enhancedFor ( ) 
 + { 
 + int [ ] i = new int [ 2 ] ; 
 + for ( int j : i ) { 
 + System . out . println ( j ) ; 
 + } 
 + } 
 } 
 diff - - git a / src / tests / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundTest . java b / src / tests / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundTest . java 
 index 9df0938 . . c9fd16c 100755 
 - - - a / src / tests / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundTest . java 
 + + + b / src / tests / com / puppycrawl / tools / checkstyle / checks / whitespace / WhitespaceAroundTest . java 
 @ @ - 135 , 11 + 135 , 22 @ @ public class WhitespaceAroundTest 
 } 
 
 @ Test 
 - public void test1322879 ( ) throws Exception 
 + public void test1322879And1649038 ( ) throws Exception 
 { 
 final String [ ] expected = { 
 } ; 
 verify ( checkConfig , getPath ( " whitespace / InputWhitespaceAround . java " ) , 
 expected ) ; 
 } 
 + 
 + @ Test 
 + public void testIgnoreEnhancedForColon ( ) throws Exception 
 + { 
 + checkConfig . addAttribute ( " ignoreEnhancedForColon " , " false " ) ; 
 + final String [ ] expected = { 
 + " 18 : 20 : ' : ' is not preceded with whitespace . " , 
 + } ; 
 + verify ( checkConfig , getPath ( " whitespace / InputWhitespaceAround . java " ) , 
 + expected ) ; 
 + } 
 } 
 diff - - git a / src / xdocs / releasenotes . xml b / src / xdocs / releasenotes . xml 
 index b258322 . . ae832bc 100755 
 - - - a / src / xdocs / releasenotes . xml 
 + + + b / src / xdocs / releasenotes . xml 
 @ @ - 43 , 6 + 43 , 11 @ @ 
 Fixed parsing errors for Unicode escape sequences . Thanks to 
 Dinesh Bolkensteyn for patch # 3412812 . 
 < / li > 
 + < li > 
 + ignoreEnhancedForColon property added to 
 + < a href = " config _ whitespace . html # WhitespaceAround " > WhitespaceAround < / a > . 
 + Thanks to Travis Schneeberger for patch # 1921815 ( bug # 1649038 ) . 
 + < / li > 
 < / ul > 
 < p > Notes : < / p > 
 < ul >
