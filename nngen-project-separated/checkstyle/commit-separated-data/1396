BLEU SCORE: 0.7825422900366437

TEST MSG: Issue # 2661 : Enforce InterfaceTypeParameterNameCheck of sevntu - checkstyle over Checkstyle source code
GENERATED MSG: Issue # 2661 : Enforce NoMainMethodInAbstractClass of sevntu - checkstyle over Checkstyle source code

TEST DIFF (one line): diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml <nl> index 903cbda . . 21beec8 100644 <nl> - - - a / config / checkstyle _ sevntu _ checks . xml <nl> + + + b / config / checkstyle _ sevntu _ checks . xml <nl> @ @ - 18 , 5 + 18 , 6 @ @ <nl> < module name = " PublicReferenceToPrivateTypeCheck " / > <nl> < module name = " NoNullForCollectionReturnCheck " / > <nl> < module name = " NoMainMethodInAbstractClass " / > <nl> + < module name = " InterfaceTypeParameterNameCheck " / > <nl> < / module > <nl> < / module >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java <nl> index 8e6e7a6 . . 3d7feed 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java <nl> @ @ - 21 , 8 + 21 , 6 @ @ package com . puppycrawl . tools . checkstyle . checks . naming ; <nl> <nl> import java . util . regex . Pattern ; <nl> <nl> - import org . apache . commons . lang3 . ArrayUtils ; <nl> - <nl> import com . puppycrawl . tools . checkstyle . api . DetailAST ; <nl> import com . puppycrawl . tools . checkstyle . api . TokenTypes ; <nl> import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; <nl> @ @ - 105 , 13 + 103 , 12 @ @ public class LocalVariableNameCheck <nl> public int [ ] getAcceptableTokens ( ) { <nl> return new int [ ] { <nl> TokenTypes . VARIABLE _ DEF , <nl> - TokenTypes . PARAMETER _ DEF , <nl> } ; <nl> } <nl> <nl> @ Override <nl> public int [ ] getRequiredTokens ( ) { <nl> - return ArrayUtils . EMPTY _ INT _ ARRAY ; <nl> + return getAcceptableTokens ( ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java <nl> index 406769b . . 26f5e24 100644 <nl> - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java <nl> + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java <nl> @ @ - 65 , 22 + 65 , 6 @ @ public class LocalVariableNameCheckTest <nl> } <nl> <nl> @ Test <nl> - public void testCatchParameter ( ) <nl> - throws Exception { <nl> - final DefaultConfiguration checkConfig = <nl> - createCheckConfig ( LocalVariableNameCheck . class ) ; <nl> - checkConfig . addAttribute ( " tokens " , " PARAMETER _ DEF " ) ; <nl> - checkConfig . addAttribute ( " format " , " ^ e $ " ) ; <nl> - <nl> - final String pattern = " ^ e $ " ; <nl> - <nl> - final String [ ] expected = { <nl> - " 69 : 24 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , <nl> - } ; <nl> - verify ( checkConfig , getPath ( " InputEmptyStatement . java " ) , expected ) ; <nl> - } <nl> - <nl> - @ Test <nl> public void testLoopVariables ( ) <nl> throws Exception { <nl> final DefaultConfiguration checkConfig = <nl> diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml <nl> index 334a09b . . e986d06 100644 <nl> - - - a / src / xdocs / config _ naming . xml <nl> + + + b / src / xdocs / config _ naming . xml <nl> @ @ - 579 , 8 + 579 , 8 @ @ <nl> < section name = " LocalVariableName " > <nl> < subsection name = " Description " > <nl> < p > <nl> - Validates identifiers for local , non - < code > final < / code > variables , including <nl> - < code > catch < / code > parameters . <nl> + Checks that local , non - < code > final < / code > variable names conform to a format specified <nl> + by the format property . <nl> < / p > <nl> < / subsection > <nl> <nl> @ @ - 609 , 35 + 609 , 16 @ @ for ( int i = 1 ; i & lt ; 10 ; i + + ) { } <nl> < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > <nl> < td > < code > false < / code > < / td > <nl> < / tr > <nl> - < tr > <nl> - < td > tokens < / td > <nl> - < td > tokens to check < / td > <nl> - < td > <nl> - subset of tokens <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > VARIABLE _ DEF < / a > , <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # PARAMETER _ DEF " > PARAMETER _ DEF < / a > . <nl> - < / td > <nl> - < td > <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > VARIABLE _ DEF < / a > , <nl> - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # PARAMETER _ DEF " > PARAMETER _ DEF < / a > . <nl> - < / td > <nl> - < / tr > <nl> < / table > <nl> < / subsection > <nl> <nl> < subsection name = " Examples " > <nl> < p > <nl> - The following <nl> - configuration element ensures that < code > catch < / code > clause <nl> - parameters begin with < code > " e " < / code > , followed by letters <nl> - and digits : <nl> + To configure the check to use the default configuration : <nl> < / p > <nl> <nl> < source > <nl> - & lt ; module name = & quot ; LocalVariableName & quot ; & gt ; <nl> - & lt ; property name = & quot ; format & quot ; value = & quot ; ^ e [ a - zA - Z0 - 9 ] * $ & quot ; / & gt ; <nl> - & lt ; property name = & quot ; tokens & quot ; value = & quot ; PARAMETER _ DEF & quot ; / & gt ; <nl> - & lt ; / module & gt ; <nl> + & lt ; module name = & quot ; LocalVariableName & quot ; / & gt ; <nl> < / source > <nl> <nl> < p >

TEST DIFF:
diff - - git a / config / checkstyle _ sevntu _ checks . xml b / config / checkstyle _ sevntu _ checks . xml 
 index 903cbda . . 21beec8 100644 
 - - - a / config / checkstyle _ sevntu _ checks . xml 
 + + + b / config / checkstyle _ sevntu _ checks . xml 
 @ @ - 18 , 5 + 18 , 6 @ @ 
 < module name = " PublicReferenceToPrivateTypeCheck " / > 
 < module name = " NoNullForCollectionReturnCheck " / > 
 < module name = " NoMainMethodInAbstractClass " / > 
 + < module name = " InterfaceTypeParameterNameCheck " / > 
 < / module > 
 < / module >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java 
 index 8e6e7a6 . . 3d7feed 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheck . java 
 @ @ - 21 , 8 + 21 , 6 @ @ package com . puppycrawl . tools . checkstyle . checks . naming ; 
 
 import java . util . regex . Pattern ; 
 
 - import org . apache . commons . lang3 . ArrayUtils ; 
 - 
 import com . puppycrawl . tools . checkstyle . api . DetailAST ; 
 import com . puppycrawl . tools . checkstyle . api . TokenTypes ; 
 import com . puppycrawl . tools . checkstyle . utils . ScopeUtils ; 
 @ @ - 105 , 13 + 103 , 12 @ @ public class LocalVariableNameCheck 
 public int [ ] getAcceptableTokens ( ) { 
 return new int [ ] { 
 TokenTypes . VARIABLE _ DEF , 
 - TokenTypes . PARAMETER _ DEF , 
 } ; 
 } 
 
 @ Override 
 public int [ ] getRequiredTokens ( ) { 
 - return ArrayUtils . EMPTY _ INT _ ARRAY ; 
 + return getAcceptableTokens ( ) ; 
 } 
 
 @ Override 
 diff - - git a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java 
 index 406769b . . 26f5e24 100644 
 - - - a / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java 
 + + + b / src / test / java / com / puppycrawl / tools / checkstyle / checks / naming / LocalVariableNameCheckTest . java 
 @ @ - 65 , 22 + 65 , 6 @ @ public class LocalVariableNameCheckTest 
 } 
 
 @ Test 
 - public void testCatchParameter ( ) 
 - throws Exception { 
 - final DefaultConfiguration checkConfig = 
 - createCheckConfig ( LocalVariableNameCheck . class ) ; 
 - checkConfig . addAttribute ( " tokens " , " PARAMETER _ DEF " ) ; 
 - checkConfig . addAttribute ( " format " , " ^ e $ " ) ; 
 - 
 - final String pattern = " ^ e $ " ; 
 - 
 - final String [ ] expected = { 
 - " 69 : 24 : " + getCheckMessage ( MSG _ INVALID _ PATTERN , " ex " , pattern ) , 
 - } ; 
 - verify ( checkConfig , getPath ( " InputEmptyStatement . java " ) , expected ) ; 
 - } 
 - 
 - @ Test 
 public void testLoopVariables ( ) 
 throws Exception { 
 final DefaultConfiguration checkConfig = 
 diff - - git a / src / xdocs / config _ naming . xml b / src / xdocs / config _ naming . xml 
 index 334a09b . . e986d06 100644 
 - - - a / src / xdocs / config _ naming . xml 
 + + + b / src / xdocs / config _ naming . xml 
 @ @ - 579 , 8 + 579 , 8 @ @ 
 < section name = " LocalVariableName " > 
 < subsection name = " Description " > 
 < p > 
 - Validates identifiers for local , non - < code > final < / code > variables , including 
 - < code > catch < / code > parameters . 
 + Checks that local , non - < code > final < / code > variable names conform to a format specified 
 + by the format property . 
 < / p > 
 < / subsection > 
 
 @ @ - 609 , 35 + 609 , 16 @ @ for ( int i = 1 ; i & lt ; 10 ; i + + ) { } 
 < td > < a href = " property _ types . html # boolean " > Boolean < / a > < / td > 
 < td > < code > false < / code > < / td > 
 < / tr > 
 - < tr > 
 - < td > tokens < / td > 
 - < td > tokens to check < / td > 
 - < td > 
 - subset of tokens 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > VARIABLE _ DEF < / a > , 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # PARAMETER _ DEF " > PARAMETER _ DEF < / a > . 
 - < / td > 
 - < td > 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # VARIABLE _ DEF " > VARIABLE _ DEF < / a > , 
 - < a href = " apidocs / com / puppycrawl / tools / checkstyle / api / TokenTypes . html # PARAMETER _ DEF " > PARAMETER _ DEF < / a > . 
 - < / td > 
 - < / tr > 
 < / table > 
 < / subsection > 
 
 < subsection name = " Examples " > 
 < p > 
 - The following 
 - configuration element ensures that < code > catch < / code > clause 
 - parameters begin with < code > " e " < / code > , followed by letters 
 - and digits : 
 + To configure the check to use the default configuration : 
 < / p > 
 
 < source > 
 - & lt ; module name = & quot ; LocalVariableName & quot ; & gt ; 
 - & lt ; property name = & quot ; format & quot ; value = & quot ; ^ e [ a - zA - Z0 - 9 ] * $ & quot ; / & gt ; 
 - & lt ; property name = & quot ; tokens & quot ; value = & quot ; PARAMETER _ DEF & quot ; / & gt ; 
 - & lt ; / module & gt ; 
 + & lt ; module name = & quot ; LocalVariableName & quot ; / & gt ; 
 < / source > 
 
 < p >
