BLEU SCORE: 0.049900497019368314

TEST MSG: Issue # 3855 : update documentation of lcurly . nlow
GENERATED MSG: Added documentation for TypeName changes from PR # 208

TEST DIFF (one line): diff - - git a / src / xdocs / property _ types . xml b / src / xdocs / property _ types . xml <nl> index 7de339a . . cb111b5 100644 <nl> - - - a / src / xdocs / property _ types . xml <nl> + + + b / src / xdocs / property _ types . xml <nl> @ @ - 254 , 11 + 254 , 10 @ @ <nl> < tr > <nl> < td > < code > nlow < / code > < / td > <nl> < td > <nl> - If the brace will fit on the first line of the statement , <nl> - then apply < code > eol < / code > rule . Otherwise apply the <nl> - < code > nl < / code > rule . < code > nlow < / code > is a <nl> - mnemonic for " new line on wrap " . For the example above Checkstyle <nl> - will enforce : <nl> + If the statement / expression / declaration connected to the brace spans multiple lines , <nl> + than apply < code > eol < / code > rule . Otherwise apply the < code > nl < / code > rule . <nl> + < code > nlow < / code > is a mnemonic for " new line on wrap " . <nl> + For the example above Checkstyle will enforce : <nl> < pre > <nl> if ( condition ) { <nl> . . .
NEAREST DIFF (one line): diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java <nl> new file mode 100644 <nl> index 0000000 . . 07b452d <nl> - - - / dev / null <nl> + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java <nl> @ @ - 0 , 0 + 1 , 22 @ @ <nl> + package com . puppycrawl . tools . checkstyle . whitespace ; <nl> + <nl> + public class ParenPadWithSpace <nl> + { <nl> + protected ParenPadWithSpace ( int i ) <nl> + { <nl> + this ( ) ; <nl> + toString ( ) ; <nl> + } <nl> + protected ParenPadWithSpace ( ) <nl> + { <nl> + super ( ) ; <nl> + } <nl> + <nl> + public void enhancedFor ( ) <nl> + { <nl> + int [ ] i = new int [ 2 ] ; <nl> + for ( int j : i ) { <nl> + System . out . println ( j ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java b / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java <nl> deleted file mode 100644 <nl> index 07b452d . . 0000000 <nl> - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java <nl> + + + / dev / null <nl> @ @ - 1 , 22 + 0 , 0 @ @ <nl> - package com . puppycrawl . tools . checkstyle . whitespace ; <nl> - <nl> - public class ParenPadWithSpace <nl> - { <nl> - protected ParenPadWithSpace ( int i ) <nl> - { <nl> - this ( ) ; <nl> - toString ( ) ; <nl> - } <nl> - protected ParenPadWithSpace ( ) <nl> - { <nl> - super ( ) ; <nl> - } <nl> - <nl> - public void enhancedFor ( ) <nl> - { <nl> - int [ ] i = new int [ 2 ] ; <nl> - for ( int j : i ) { <nl> - System . out . println ( j ) ; <nl> - } <nl> - } <nl> - }

TEST DIFF:
diff - - git a / src / xdocs / property _ types . xml b / src / xdocs / property _ types . xml 
 index 7de339a . . cb111b5 100644 
 - - - a / src / xdocs / property _ types . xml 
 + + + b / src / xdocs / property _ types . xml 
 @ @ - 254 , 11 + 254 , 10 @ @ 
 < tr > 
 < td > < code > nlow < / code > < / td > 
 < td > 
 - If the brace will fit on the first line of the statement , 
 - then apply < code > eol < / code > rule . Otherwise apply the 
 - < code > nl < / code > rule . < code > nlow < / code > is a 
 - mnemonic for " new line on wrap " . For the example above Checkstyle 
 - will enforce : 
 + If the statement / expression / declaration connected to the brace spans multiple lines , 
 + than apply < code > eol < / code > rule . Otherwise apply the < code > nl < / code > rule . 
 + < code > nlow < / code > is a mnemonic for " new line on wrap " . 
 + For the example above Checkstyle will enforce : 
 < pre > 
 if ( condition ) { 
 . . .

NEAREST DIFF:
diff - - git a / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java 
 new file mode 100644 
 index 0000000 . . 07b452d 
 - - - / dev / null 
 + + + b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java 
 @ @ - 0 , 0 + 1 , 22 @ @ 
 + package com . puppycrawl . tools . checkstyle . whitespace ; 
 + 
 + public class ParenPadWithSpace 
 + { 
 + protected ParenPadWithSpace ( int i ) 
 + { 
 + this ( ) ; 
 + toString ( ) ; 
 + } 
 + protected ParenPadWithSpace ( ) 
 + { 
 + super ( ) ; 
 + } 
 + 
 + public void enhancedFor ( ) 
 + { 
 + int [ ] i = new int [ 2 ] ; 
 + for ( int j : i ) { 
 + System . out . println ( j ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java b / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java 
 deleted file mode 100644 
 index 07b452d . . 0000000 
 - - - a / src / testinputs / com / puppycrawl / tools / checkstyle / whitespace / ParenPadWithSpace . java 
 + + + / dev / null 
 @ @ - 1 , 22 + 0 , 0 @ @ 
 - package com . puppycrawl . tools . checkstyle . whitespace ; 
 - 
 - public class ParenPadWithSpace 
 - { 
 - protected ParenPadWithSpace ( int i ) 
 - { 
 - this ( ) ; 
 - toString ( ) ; 
 - } 
 - protected ParenPadWithSpace ( ) 
 - { 
 - super ( ) ; 
 - } 
 - 
 - public void enhancedFor ( ) 
 - { 
 - int [ ] i = new int [ 2 ] ; 
 - for ( int j : i ) { 
 - System . out . println ( j ) ; 
 - } 
 - } 
 - }
