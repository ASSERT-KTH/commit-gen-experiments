BLEU SCORE: 0.030098043843528283

TEST MSG: config : profile ' site - only ' is added to speedup / simplify site generation process
GENERATED MSG: assembly profile is now skipping all reports generation

TEST DIFF (one line): diff - - git a / pom . xml b / pom . xml <nl> index 0b76e8b . . 6fa6fca 100644 <nl> - - - a / pom . xml <nl> + + + b / pom . xml <nl> @ @ - 1246 , 6 + 1246 , 24 @ @ <nl> <nl> < profile > <nl> < ! - - To be used during development . Run the command - - > <nl> + < ! - - mvn - Psite - only site - - > <nl> + < id > site - only < / id > <nl> + < properties > <nl> + < skipTests > true < / skipTests > <nl> + < linkcheck . skip > true < / linkcheck . skip > <nl> + < maven . javadoc . skip > true < / maven . javadoc . skip > <nl> + < checkstyle . skip > true < / checkstyle . skip > <nl> + < pmd . skip > true < / pmd . skip > <nl> + < xml . skip > true < / xml . skip > <nl> + < forbiddenapis . skip > true < / forbiddenapis . skip > <nl> + < findbugs . skip > true < / findbugs . skip > <nl> + < checkstyle . ant . skip > true < / checkstyle . ant . skip > <nl> + < cobertura . skip > true < / cobertura . skip > <nl> + < / properties > <nl> + < / profile > <nl> + <nl> + < profile > <nl> + < ! - - To be used during development . Run the command - - > <nl> < ! - - mvn - Passembly package - - > <nl> < id > assembly < / id > <nl> < properties > <nl> @ @ - 1254 , 6 + 1272 , 8 @ @ <nl> < maven . javadoc . skip > true < / maven . javadoc . skip > <nl> < checkstyle . skip > true < / checkstyle . skip > <nl> < pmd . skip > true < / pmd . skip > <nl> + < xml . skip > true < / xml . skip > <nl> + < forbiddenapis . skip > true < / forbiddenapis . skip > <nl> < findbugs . skip > true < / findbugs . skip > <nl> < checkstyle . ant . skip > true < / checkstyle . ant . skip > <nl> < cobertura . skip > true < / cobertura . skip >
NEAREST DIFF (one line): diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> index 523d460 . . 8da952c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java <nl> @ @ - 58 , 14 + 58 , 14 @ @ public final class FileContents implements CommentListener <nl> * / <nl> private final Map < Integer , TextBlock > javadocComments = Maps . newHashMap ( ) ; <nl> / * * map of the C + + comments indexed on the first line of the comment . * / <nl> - private final Map < Integer , TextBlock > cPlusPlusComments = <nl> + private final Map < Integer , TextBlock > cppComments = <nl> Maps . newHashMap ( ) ; <nl> <nl> / * * <nl> * map of the C comments indexed on the first line of the comment to a list <nl> * of comments on that line <nl> * / <nl> - private final Map < Integer , List < TextBlock > > cComments = Maps . newHashMap ( ) ; <nl> + private final Map < Integer , List < TextBlock > > clangComments = Maps . newHashMap ( ) ; <nl> <nl> / * * <nl> * Creates a new < code > FileContents < / code > instance . <nl> @ @ - 119 , 7 + 119 , 7 @ @ public final class FileContents implements CommentListener <nl> final String [ ] txt = new String [ ] { line . substring ( startColNo ) } ; <nl> final Comment comment = new Comment ( txt , startColNo , startLineNo , <nl> line . length ( ) - 1 ) ; <nl> - cPlusPlusComments . put ( startLineNo , comment ) ; <nl> + cppComments . put ( startLineNo , comment ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 129 , 7 + 129 , 7 @ @ public final class FileContents implements CommentListener <nl> * / <nl> public ImmutableMap < Integer , TextBlock > getCppComments ( ) <nl> { <nl> - return ImmutableMap . copyOf ( cPlusPlusComments ) ; <nl> + return ImmutableMap . copyOf ( cppComments ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 148 , 14 + 148 , 14 @ @ public final class FileContents implements CommentListener <nl> endColNo ) ; <nl> <nl> / / save the comment <nl> - if ( cComments . containsKey ( startLineNo ) ) { <nl> - final List < TextBlock > entries = cComments . get ( startLineNo ) ; <nl> + if ( clangComments . containsKey ( startLineNo ) ) { <nl> + final List < TextBlock > entries = clangComments . get ( startLineNo ) ; <nl> entries . add ( comment ) ; <nl> } <nl> else { <nl> final List < TextBlock > entries = Lists . newArrayList ( ) ; <nl> entries . add ( comment ) ; <nl> - cComments . put ( startLineNo , entries ) ; <nl> + clangComments . put ( startLineNo , entries ) ; <nl> } <nl> <nl> / / Remember if possible Javadoc comment <nl> @ @ - 172 , 7 + 172 , 7 @ @ public final class FileContents implements CommentListener <nl> * / <nl> public ImmutableMap < Integer , List < TextBlock > > getCComments ( ) <nl> { <nl> - return ImmutableMap . copyOf ( cComments ) ; <nl> + return ImmutableMap . copyOf ( clangComments ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 301 , 7 + 301 , 7 @ @ public final class FileContents implements CommentListener <nl> int startColNo , int endLineNo , int endColNo ) <nl> { <nl> / / Check C comments ( all comments should be checked ) <nl> - final Collection < List < TextBlock > > values = cComments . values ( ) ; <nl> + final Collection < List < TextBlock > > values = clangComments . values ( ) ; <nl> for ( final List < TextBlock > row : values ) { <nl> for ( final TextBlock comment : row ) { <nl> if ( comment . intersects ( startLineNo , startColNo , endLineNo , <nl> @ @ - 316 , 7 + 316 , 7 @ @ public final class FileContents implements CommentListener <nl> for ( int lineNumber = startLineNo ; lineNumber < = endLineNo ; <nl> lineNumber + + ) <nl> { <nl> - final TextBlock comment = cPlusPlusComments . get ( lineNumber ) ; <nl> + final TextBlock comment = cppComments . get ( lineNumber ) ; <nl> if ( ( comment ! = null ) <nl> & & comment . intersects ( startLineNo , startColNo , <nl> endLineNo , endColNo ) ) <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java <nl> index 015db15 . . 4eccc2c 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java <nl> @ @ - 33 , 18 + 33 , 18 @ @ import java . util . TreeSet ; <nl> public final class LocalizedMessages <nl> { <nl> / * * contains the messages logged * * / <nl> - private final TreeSet < LocalizedMessage > mMessages = Sets . newTreeSet ( ) ; <nl> + private final TreeSet < LocalizedMessage > messages = Sets . newTreeSet ( ) ; <nl> <nl> / * * @ return the logged messages * * / <nl> public TreeSet < LocalizedMessage > getMessages ( ) <nl> { <nl> - return Sets . newTreeSet ( mMessages ) ; <nl> + return Sets . newTreeSet ( messages ) ; <nl> } <nl> <nl> / * * Reset the object . * * / <nl> public void reset ( ) <nl> { <nl> - mMessages . clear ( ) ; <nl> + messages . clear ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 53 , 12 + 53 , 12 @ @ public final class LocalizedMessages <nl> * * / <nl> public void add ( LocalizedMessage aMsg ) <nl> { <nl> - mMessages . add ( aMsg ) ; <nl> + messages . add ( aMsg ) ; <nl> } <nl> <nl> / * * @ return the number of messages * / <nl> public int size ( ) <nl> { <nl> - return mMessages . size ( ) ; <nl> + return messages . size ( ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java <nl> index 7ed85eb . . e4a1722 100644 <nl> - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java <nl> + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java <nl> @ @ - 67 , 7 + 67 , 7 @ @ public class MagicNumberCheck extends Check <nl> } <nl> <nl> / * * the numbers to ignore in the check , sorted * / <nl> - private double [ ] mIgnoreNumbers = { - 1 , 0 , 1 , 2 } ; <nl> + private double [ ] ignoreNumbers = { - 1 , 0 , 1 , 2 } ; <nl> / * * Whether to ignore magic numbers in a hash code method . * / <nl> private boolean ignoreHashCodeMethod ; <nl> / * * Whether to ignore magic numbers in annotation . * / <nl> @ @ - 240 , 7 + 240 , 7 @ @ public class MagicNumberCheck extends Check <nl> if ( parent . getType ( ) = = TokenTypes . UNARY _ MINUS ) { <nl> value = - 1 * value ; <nl> } <nl> - return ( Arrays . binarySearch ( mIgnoreNumbers , value ) > = 0 ) ; <nl> + return ( Arrays . binarySearch ( ignoreNumbers , value ) > = 0 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 251 , 12 + 251 , 12 @ @ public class MagicNumberCheck extends Check <nl> public void setIgnoreNumbers ( double [ ] list ) <nl> { <nl> if ( ( list = = null ) | | ( list . length = = 0 ) ) { <nl> - mIgnoreNumbers = new double [ 0 ] ; <nl> + ignoreNumbers = new double [ 0 ] ; <nl> } <nl> else { <nl> - mIgnoreNumbers = new double [ list . length ] ; <nl> - System . arraycopy ( list , 0 , mIgnoreNumbers , 0 , list . length ) ; <nl> - Arrays . sort ( mIgnoreNumbers ) ; <nl> + ignoreNumbers = new double [ list . length ] ; <nl> + System . arraycopy ( list , 0 , ignoreNumbers , 0 , list . length ) ; <nl> + Arrays . sort ( ignoreNumbers ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / pom . xml b / pom . xml 
 index 0b76e8b . . 6fa6fca 100644 
 - - - a / pom . xml 
 + + + b / pom . xml 
 @ @ - 1246 , 6 + 1246 , 24 @ @ 
 
 < profile > 
 < ! - - To be used during development . Run the command - - > 
 + < ! - - mvn - Psite - only site - - > 
 + < id > site - only < / id > 
 + < properties > 
 + < skipTests > true < / skipTests > 
 + < linkcheck . skip > true < / linkcheck . skip > 
 + < maven . javadoc . skip > true < / maven . javadoc . skip > 
 + < checkstyle . skip > true < / checkstyle . skip > 
 + < pmd . skip > true < / pmd . skip > 
 + < xml . skip > true < / xml . skip > 
 + < forbiddenapis . skip > true < / forbiddenapis . skip > 
 + < findbugs . skip > true < / findbugs . skip > 
 + < checkstyle . ant . skip > true < / checkstyle . ant . skip > 
 + < cobertura . skip > true < / cobertura . skip > 
 + < / properties > 
 + < / profile > 
 + 
 + < profile > 
 + < ! - - To be used during development . Run the command - - > 
 < ! - - mvn - Passembly package - - > 
 < id > assembly < / id > 
 < properties > 
 @ @ - 1254 , 6 + 1272 , 8 @ @ 
 < maven . javadoc . skip > true < / maven . javadoc . skip > 
 < checkstyle . skip > true < / checkstyle . skip > 
 < pmd . skip > true < / pmd . skip > 
 + < xml . skip > true < / xml . skip > 
 + < forbiddenapis . skip > true < / forbiddenapis . skip > 
 < findbugs . skip > true < / findbugs . skip > 
 < checkstyle . ant . skip > true < / checkstyle . ant . skip > 
 < cobertura . skip > true < / cobertura . skip >

NEAREST DIFF:
diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 index 523d460 . . 8da952c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / FileContents . java 
 @ @ - 58 , 14 + 58 , 14 @ @ public final class FileContents implements CommentListener 
 * / 
 private final Map < Integer , TextBlock > javadocComments = Maps . newHashMap ( ) ; 
 / * * map of the C + + comments indexed on the first line of the comment . * / 
 - private final Map < Integer , TextBlock > cPlusPlusComments = 
 + private final Map < Integer , TextBlock > cppComments = 
 Maps . newHashMap ( ) ; 
 
 / * * 
 * map of the C comments indexed on the first line of the comment to a list 
 * of comments on that line 
 * / 
 - private final Map < Integer , List < TextBlock > > cComments = Maps . newHashMap ( ) ; 
 + private final Map < Integer , List < TextBlock > > clangComments = Maps . newHashMap ( ) ; 
 
 / * * 
 * Creates a new < code > FileContents < / code > instance . 
 @ @ - 119 , 7 + 119 , 7 @ @ public final class FileContents implements CommentListener 
 final String [ ] txt = new String [ ] { line . substring ( startColNo ) } ; 
 final Comment comment = new Comment ( txt , startColNo , startLineNo , 
 line . length ( ) - 1 ) ; 
 - cPlusPlusComments . put ( startLineNo , comment ) ; 
 + cppComments . put ( startLineNo , comment ) ; 
 } 
 
 / * * 
 @ @ - 129 , 7 + 129 , 7 @ @ public final class FileContents implements CommentListener 
 * / 
 public ImmutableMap < Integer , TextBlock > getCppComments ( ) 
 { 
 - return ImmutableMap . copyOf ( cPlusPlusComments ) ; 
 + return ImmutableMap . copyOf ( cppComments ) ; 
 } 
 
 / * * 
 @ @ - 148 , 14 + 148 , 14 @ @ public final class FileContents implements CommentListener 
 endColNo ) ; 
 
 / / save the comment 
 - if ( cComments . containsKey ( startLineNo ) ) { 
 - final List < TextBlock > entries = cComments . get ( startLineNo ) ; 
 + if ( clangComments . containsKey ( startLineNo ) ) { 
 + final List < TextBlock > entries = clangComments . get ( startLineNo ) ; 
 entries . add ( comment ) ; 
 } 
 else { 
 final List < TextBlock > entries = Lists . newArrayList ( ) ; 
 entries . add ( comment ) ; 
 - cComments . put ( startLineNo , entries ) ; 
 + clangComments . put ( startLineNo , entries ) ; 
 } 
 
 / / Remember if possible Javadoc comment 
 @ @ - 172 , 7 + 172 , 7 @ @ public final class FileContents implements CommentListener 
 * / 
 public ImmutableMap < Integer , List < TextBlock > > getCComments ( ) 
 { 
 - return ImmutableMap . copyOf ( cComments ) ; 
 + return ImmutableMap . copyOf ( clangComments ) ; 
 } 
 
 / * * 
 @ @ - 301 , 7 + 301 , 7 @ @ public final class FileContents implements CommentListener 
 int startColNo , int endLineNo , int endColNo ) 
 { 
 / / Check C comments ( all comments should be checked ) 
 - final Collection < List < TextBlock > > values = cComments . values ( ) ; 
 + final Collection < List < TextBlock > > values = clangComments . values ( ) ; 
 for ( final List < TextBlock > row : values ) { 
 for ( final TextBlock comment : row ) { 
 if ( comment . intersects ( startLineNo , startColNo , endLineNo , 
 @ @ - 316 , 7 + 316 , 7 @ @ public final class FileContents implements CommentListener 
 for ( int lineNumber = startLineNo ; lineNumber < = endLineNo ; 
 lineNumber + + ) 
 { 
 - final TextBlock comment = cPlusPlusComments . get ( lineNumber ) ; 
 + final TextBlock comment = cppComments . get ( lineNumber ) ; 
 if ( ( comment ! = null ) 
 & & comment . intersects ( startLineNo , startColNo , 
 endLineNo , endColNo ) ) 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java 
 index 015db15 . . 4eccc2c 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / api / LocalizedMessages . java 
 @ @ - 33 , 18 + 33 , 18 @ @ import java . util . TreeSet ; 
 public final class LocalizedMessages 
 { 
 / * * contains the messages logged * * / 
 - private final TreeSet < LocalizedMessage > mMessages = Sets . newTreeSet ( ) ; 
 + private final TreeSet < LocalizedMessage > messages = Sets . newTreeSet ( ) ; 
 
 / * * @ return the logged messages * * / 
 public TreeSet < LocalizedMessage > getMessages ( ) 
 { 
 - return Sets . newTreeSet ( mMessages ) ; 
 + return Sets . newTreeSet ( messages ) ; 
 } 
 
 / * * Reset the object . * * / 
 public void reset ( ) 
 { 
 - mMessages . clear ( ) ; 
 + messages . clear ( ) ; 
 } 
 
 / * * 
 @ @ - 53 , 12 + 53 , 12 @ @ public final class LocalizedMessages 
 * * / 
 public void add ( LocalizedMessage aMsg ) 
 { 
 - mMessages . add ( aMsg ) ; 
 + messages . add ( aMsg ) ; 
 } 
 
 / * * @ return the number of messages * / 
 public int size ( ) 
 { 
 - return mMessages . size ( ) ; 
 + return messages . size ( ) ; 
 } 
 } 
 diff - - git a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java 
 index 7ed85eb . . e4a1722 100644 
 - - - a / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java 
 + + + b / src / main / java / com / puppycrawl / tools / checkstyle / checks / coding / MagicNumberCheck . java 
 @ @ - 67 , 7 + 67 , 7 @ @ public class MagicNumberCheck extends Check 
 } 
 
 / * * the numbers to ignore in the check , sorted * / 
 - private double [ ] mIgnoreNumbers = { - 1 , 0 , 1 , 2 } ; 
 + private double [ ] ignoreNumbers = { - 1 , 0 , 1 , 2 } ; 
 / * * Whether to ignore magic numbers in a hash code method . * / 
 private boolean ignoreHashCodeMethod ; 
 / * * Whether to ignore magic numbers in annotation . * / 
 @ @ - 240 , 7 + 240 , 7 @ @ public class MagicNumberCheck extends Check 
 if ( parent . getType ( ) = = TokenTypes . UNARY _ MINUS ) { 
 value = - 1 * value ; 
 } 
 - return ( Arrays . binarySearch ( mIgnoreNumbers , value ) > = 0 ) ; 
 + return ( Arrays . binarySearch ( ignoreNumbers , value ) > = 0 ) ; 
 } 
 
 / * * 
 @ @ - 251 , 12 + 251 , 12 @ @ public class MagicNumberCheck extends Check 
 public void setIgnoreNumbers ( double [ ] list ) 
 { 
 if ( ( list = = null ) | | ( list . length = = 0 ) ) { 
 - mIgnoreNumbers = new double [ 0 ] ; 
 + ignoreNumbers = new double [ 0 ] ; 
 } 
 else { 
 - mIgnoreNumbers = new double [ list . length ] ; 
 - System . arraycopy ( list , 0 , mIgnoreNumbers , 0 , list . length ) ; 
 - Arrays . sort ( mIgnoreNumbers ) ; 
 + ignoreNumbers = new double [ list . length ] ; 
 + System . arraycopy ( list , 0 , ignoreNumbers , 0 , list . length ) ; 
 + Arrays . sort ( ignoreNumbers ) ; 
 } 
 } 

