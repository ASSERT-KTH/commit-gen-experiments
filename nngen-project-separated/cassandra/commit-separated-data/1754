BLEU SCORE: 0.027611988917697356

TEST MSG: Fix anti - compaction target bloom filter size
GENERATED MSG: acquire compactionlock during truncate

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 8854261 . . c02af99 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 4 <nl> + * Fix anti - compaction target bloom filter size ( CASSANDRA - 9060 ) <nl> * Make FROZEN and TUPLE unreserved keywords in CQL ( CASSANDRA - 9047 ) <nl> * Prevent AssertionError from SizeEstimatesRecorder ( CASSANDRA - 9034 ) <nl> * Avoid overwriting index summaries for sstables with an older format that <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index 992378f . . b9c4553 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 1050 , 8 + 1050 , 6 @ @ public class CompactionManager implements CompactionManagerMBean <nl> List < SSTableReader > anticompactedSSTables = new ArrayList < > ( ) ; <nl> int repairedKeyCount = 0 ; <nl> int unrepairedKeyCount = 0 ; <nl> - / / TODO ( 5351 ) : we can do better here : <nl> - int expectedBloomFilterSize = Math . max ( cfs . metadata . getMinIndexInterval ( ) , ( int ) ( SSTableReader . getApproximateKeyCount ( repairedSSTables ) ) ) ; <nl> logger . info ( " Performing anticompaction on { } sstables " , repairedSSTables . size ( ) ) ; <nl> / / iterate over sstables to check if the repaired / unrepaired ranges intersect them . <nl> for ( SSTableReader sstable : repairedSSTables ) <nl> @ @ - 1075 , 6 + 1073 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> try ( AbstractCompactionStrategy . ScannerList scanners = cfs . getCompactionStrategy ( ) . getScanners ( new HashSet < > ( Collections . singleton ( sstable ) ) ) ; <nl> CompactionController controller = new CompactionController ( cfs , sstableAsSet , CFMetaData . DEFAULT _ GC _ GRACE _ SECONDS ) ) <nl> { <nl> + int expectedBloomFilterSize = Math . max ( cfs . metadata . getMinIndexInterval ( ) , ( int ) sstable . estimatedKeys ( ) ) ; <nl> repairedSSTableWriter . switchWriter ( CompactionManager . createWriter ( cfs , destination , expectedBloomFilterSize , repairedAt , sstable ) ) ; <nl> unRepairedSSTableWriter . switchWriter ( CompactionManager . createWriter ( cfs , destination , expectedBloomFilterSize , ActiveRepairService . UNREPAIRED _ SSTABLE , sstable ) ) ; <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 07de8f1 . . d512207 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 5 , 6 + 5 , 9 @ @ <nl> * Cache for CompressionMetadata objects ( CASSANDRA - 3427 ) <nl> * synchronize BiMap of bootstrapping tokens ( CASSANDRA - 3417 ) <nl> * Avoid large array allocation for compressed chunk offsets ( CASSANDRA - 3432 ) <nl> + Merged from 0 . 8 : <nl> + * acquire compactionlock during truncate ( CASSANDRA - 3399 ) <nl> + <nl> <nl> 1 . 0 . 1 <nl> * acquire references during index build to prevent delete problems <nl> @ @ - 50 , 6 + 53 , 8 @ @ <nl> * improve CompactionTask extensibility ( CASSANDRA - 3330 ) <nl> * Allow one leveled compaction task to kick off another ( CASSANDRA - 3363 ) <nl> Merged from 0 . 8 : <nl> + * fix truncate allowing data to be replayed post - restart ( CASSANDRA - 3297 ) <nl> + * make iwriter final in IndexWriter to avoid NPE ( CASSANDRA - 2863 ) <nl> * ( CQL ) update grammar to require key clause in DELETE statement <nl> ( CASSANDRA - 3349 ) <nl> * ( CQL ) allow numeric keyspace names in USE statement ( CASSANDRA - 3350 ) <nl> @ @ - 82 , 6 + 87 , 7 @ @ Merged from 0 . 8 : <nl> * Fix race in AntiEntropyService ( CASSANDRA - 3400 ) <nl> * allow encryption only between datacenters ( CASSANDRA - 2802 ) <nl> <nl> + <nl> 1 . 0 . 0 - final <nl> * close scrubbed sstable fd before deleting it ( CASSANDRA - 3318 ) <nl> * fix bug preventing obsolete commitlog segments from being removed <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index 4a5ec37 . . 734786d 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 919 , 15 + 919 , 23 @ @ public class CompactionManager implements CompactionManagerMBean <nl> { <nl> public void runMayThrow ( ) throws InterruptedException , IOException <nl> { <nl> - for ( ColumnFamilyStore cfs : main . concatWithIndexes ( ) ) <nl> + compactionLock . writeLock ( ) . lock ( ) ; <nl> + try <nl> { <nl> - List < SSTableReader > truncatedSSTables = new ArrayList < SSTableReader > ( ) ; <nl> - for ( SSTableReader sstable : cfs . getSSTables ( ) ) <nl> + for ( ColumnFamilyStore cfs : main . concatWithIndexes ( ) ) <nl> { <nl> - if ( ! sstable . newSince ( truncatedAt ) ) <nl> - truncatedSSTables . add ( sstable ) ; <nl> + List < SSTableReader > truncatedSSTables = new ArrayList < SSTableReader > ( ) ; <nl> + for ( SSTableReader sstable : cfs . getSSTables ( ) ) <nl> + { <nl> + if ( ! sstable . newSince ( truncatedAt ) ) <nl> + truncatedSSTables . add ( sstable ) ; <nl> + } <nl> + cfs . markCompacted ( truncatedSSTables ) ; <nl> } <nl> - cfs . markCompacted ( truncatedSSTables ) ; <nl> + } <nl> + finally <nl> + { <nl> + compactionLock . writeLock ( ) . unlock ( ) ; <nl> } <nl> <nl> main . invalidateRowCache ( ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 8854261 . . c02af99 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 4 
 + * Fix anti - compaction target bloom filter size ( CASSANDRA - 9060 ) 
 * Make FROZEN and TUPLE unreserved keywords in CQL ( CASSANDRA - 9047 ) 
 * Prevent AssertionError from SizeEstimatesRecorder ( CASSANDRA - 9034 ) 
 * Avoid overwriting index summaries for sstables with an older format that 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index 992378f . . b9c4553 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 1050 , 8 + 1050 , 6 @ @ public class CompactionManager implements CompactionManagerMBean 
 List < SSTableReader > anticompactedSSTables = new ArrayList < > ( ) ; 
 int repairedKeyCount = 0 ; 
 int unrepairedKeyCount = 0 ; 
 - / / TODO ( 5351 ) : we can do better here : 
 - int expectedBloomFilterSize = Math . max ( cfs . metadata . getMinIndexInterval ( ) , ( int ) ( SSTableReader . getApproximateKeyCount ( repairedSSTables ) ) ) ; 
 logger . info ( " Performing anticompaction on { } sstables " , repairedSSTables . size ( ) ) ; 
 / / iterate over sstables to check if the repaired / unrepaired ranges intersect them . 
 for ( SSTableReader sstable : repairedSSTables ) 
 @ @ - 1075 , 6 + 1073 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 try ( AbstractCompactionStrategy . ScannerList scanners = cfs . getCompactionStrategy ( ) . getScanners ( new HashSet < > ( Collections . singleton ( sstable ) ) ) ; 
 CompactionController controller = new CompactionController ( cfs , sstableAsSet , CFMetaData . DEFAULT _ GC _ GRACE _ SECONDS ) ) 
 { 
 + int expectedBloomFilterSize = Math . max ( cfs . metadata . getMinIndexInterval ( ) , ( int ) sstable . estimatedKeys ( ) ) ; 
 repairedSSTableWriter . switchWriter ( CompactionManager . createWriter ( cfs , destination , expectedBloomFilterSize , repairedAt , sstable ) ) ; 
 unRepairedSSTableWriter . switchWriter ( CompactionManager . createWriter ( cfs , destination , expectedBloomFilterSize , ActiveRepairService . UNREPAIRED _ SSTABLE , sstable ) ) ; 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 07de8f1 . . d512207 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 5 , 6 + 5 , 9 @ @ 
 * Cache for CompressionMetadata objects ( CASSANDRA - 3427 ) 
 * synchronize BiMap of bootstrapping tokens ( CASSANDRA - 3417 ) 
 * Avoid large array allocation for compressed chunk offsets ( CASSANDRA - 3432 ) 
 + Merged from 0 . 8 : 
 + * acquire compactionlock during truncate ( CASSANDRA - 3399 ) 
 + 
 
 1 . 0 . 1 
 * acquire references during index build to prevent delete problems 
 @ @ - 50 , 6 + 53 , 8 @ @ 
 * improve CompactionTask extensibility ( CASSANDRA - 3330 ) 
 * Allow one leveled compaction task to kick off another ( CASSANDRA - 3363 ) 
 Merged from 0 . 8 : 
 + * fix truncate allowing data to be replayed post - restart ( CASSANDRA - 3297 ) 
 + * make iwriter final in IndexWriter to avoid NPE ( CASSANDRA - 2863 ) 
 * ( CQL ) update grammar to require key clause in DELETE statement 
 ( CASSANDRA - 3349 ) 
 * ( CQL ) allow numeric keyspace names in USE statement ( CASSANDRA - 3350 ) 
 @ @ - 82 , 6 + 87 , 7 @ @ Merged from 0 . 8 : 
 * Fix race in AntiEntropyService ( CASSANDRA - 3400 ) 
 * allow encryption only between datacenters ( CASSANDRA - 2802 ) 
 
 + 
 1 . 0 . 0 - final 
 * close scrubbed sstable fd before deleting it ( CASSANDRA - 3318 ) 
 * fix bug preventing obsolete commitlog segments from being removed 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index 4a5ec37 . . 734786d 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 919 , 15 + 919 , 23 @ @ public class CompactionManager implements CompactionManagerMBean 
 { 
 public void runMayThrow ( ) throws InterruptedException , IOException 
 { 
 - for ( ColumnFamilyStore cfs : main . concatWithIndexes ( ) ) 
 + compactionLock . writeLock ( ) . lock ( ) ; 
 + try 
 { 
 - List < SSTableReader > truncatedSSTables = new ArrayList < SSTableReader > ( ) ; 
 - for ( SSTableReader sstable : cfs . getSSTables ( ) ) 
 + for ( ColumnFamilyStore cfs : main . concatWithIndexes ( ) ) 
 { 
 - if ( ! sstable . newSince ( truncatedAt ) ) 
 - truncatedSSTables . add ( sstable ) ; 
 + List < SSTableReader > truncatedSSTables = new ArrayList < SSTableReader > ( ) ; 
 + for ( SSTableReader sstable : cfs . getSSTables ( ) ) 
 + { 
 + if ( ! sstable . newSince ( truncatedAt ) ) 
 + truncatedSSTables . add ( sstable ) ; 
 + } 
 + cfs . markCompacted ( truncatedSSTables ) ; 
 } 
 - cfs . markCompacted ( truncatedSSTables ) ; 
 + } 
 + finally 
 + { 
 + compactionLock . writeLock ( ) . unlock ( ) ; 
 } 
 
 main . invalidateRowCache ( ) ;
