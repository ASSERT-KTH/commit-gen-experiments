BLEU SCORE: 0.02383853510228548

TEST MSG: Fix status check on stopping for rh cassandra script
GENERATED MSG: 2nd missing file from r760679

TEST DIFF (one line): diff - - git a / redhat / cassandra b / redhat / cassandra <nl> index 5ff9c48 . . a4aaaa5 100644 <nl> - - - a / redhat / cassandra <nl> + + + b / redhat / cassandra <nl> @ @ - 67 , 16 + 67 , 26 @ @ case " $ 1 " in <nl> su $ CASSANDRA _ OWNR - c " kill ` cat $ pid _ file ` " <nl> retval = $ ? <nl> [ $ retval - eq 0 ] & & rm - f $ lock _ file <nl> - for t in ` seq 40 ` ; do $ 0 status > / dev / null 2 > & 1 & & sleep 0 . 5 | | break ; done <nl> + for t in ` seq 40 ` ; do <nl> + status - p $ pid _ file cassandra > / dev / null 2 > & 1 <nl> + retval = $ ? <nl> + if [ $ retval - eq 3 ] ; then <nl> + echo " OK " <nl> + exit 0 <nl> + else <nl> + sleep 0 . 5 <nl> + fi ; <nl> + done <nl> # Adding a sleep here to give jmx time to wind down ( CASSANDRA - 4483 ) . Not ideal . . . <nl> # Adam Holmberg suggests this , but that would break if the jmx port is changed <nl> # for t in ` seq 40 ` ; do netstat - tnlp | grep " 0 . 0 . 0 . 0 : 7199 " > / dev / null 2 > & 1 & & sleep 0 . 1 | | break ; done <nl> sleep 5 <nl> - STATUS = ` $ 0 status ` <nl> - if [ [ $ STATUS = = " $ NAME is stopped " ] ] ; then <nl> + status - p $ pid _ file cassandra > / dev / null 2 > & 1 <nl> + retval = $ ? <nl> + if [ $ retval - eq 3 ] ; then <nl> echo " OK " <nl> else <nl> - echo " ERROR : could not stop $ NAME : $ STATUS " <nl> + echo " ERROR : could not stop $ NAME " <nl> exit 1 <nl> fi <nl> ; ;
NEAREST DIFF (one line): diff - - git a / bin / cassandra b / bin / cassandra <nl> new file mode 100755 <nl> index 0000000 . . b5365d5 <nl> - - - / dev / null <nl> + + + b / bin / cassandra <nl> @ @ - 0 , 0 + 1 , 113 @ @ <nl> + # ! / bin / sh <nl> + <nl> + <nl> + # OPTIONS : <nl> + # - f : start in foreground <nl> + # - p < filename > : log the pid to a file ( useful to kill it later ) <nl> + <nl> + <nl> + # Licensed to the Apache Software Foundation ( ASF ) under one <nl> + # or more contributor license agreements . See the NOTICE file <nl> + # distributed with this work for additional information <nl> + # regarding copyright ownership . The ASF licenses this file <nl> + # to you under the Apache License , Version 2 . 0 ( the <nl> + # " License " ) ; you may not use this file except in compliance <nl> + # with the License . You may obtain a copy of the License at <nl> + # <nl> + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + # <nl> + # Unless required by applicable law or agreed to in writing , software <nl> + # distributed under the License is distributed on an " AS IS " BASIS , <nl> + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + # See the License for the specific language governing permissions and <nl> + # limitations under the License . <nl> + <nl> + <nl> + if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> + for include in / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh \ <nl> + ` dirname $ 0 ` / cassandra . in . sh ; do <nl> + if [ - r $ include ] ; then <nl> + . $ include <nl> + break <nl> + fi <nl> + done <nl> + elif [ - r $ CASSANDRA _ INCLUDE ] ; then <nl> + . $ CASSANDRA _ INCLUDE <nl> + fi <nl> + <nl> + if [ - z $ CASSANDRA _ CONF - o - z $ CLASSPATH ] ; then <nl> + echo " You must set the CASSANDRA _ CONF and CLASSPATH vars " > & 2 <nl> + exit 1 <nl> + fi <nl> + <nl> + # Special - case path variables . <nl> + case " ` uname ` " in <nl> + CYGWIN * ) <nl> + CLASSPATH = ` cygpath - p - w " $ CLASSPATH " ` <nl> + CASSANDRA _ CONF = ` cygpath - p - w " $ CASSANDRA _ CONF " ` <nl> + ; ; <nl> + esac <nl> + <nl> + launch _ service ( ) <nl> + { <nl> + pidpath = $ 1 <nl> + foreground = $ 2 <nl> + cassandra _ parms = " - Dcassandra - Dstorage - config = $ CASSANDRA _ CONF " <nl> + <nl> + if [ " x $ pidpath " ! = " x " ] ; then <nl> + cassandra _ parms = " $ cassandra _ parms - Dcassandra - pidfile = $ pidpath " <nl> + fi <nl> + <nl> + # The cassandra - foreground option will tell CassandraDaemon not <nl> + # to close stdout / stderr , but it ' s up to us not to background . <nl> + if [ " x $ foreground " ! = " x " ] ; then <nl> + cassandra _ parms = " $ cassandra _ parms - Dcassandra - foreground = yes " <nl> + java $ JVM _ OPTS $ cassandra _ parms - cp $ CLASSPATH \ <nl> + org . apache . cassandra . service . CassandraDaemon <nl> + # Startup CassandraDaemon , background it , and write the pid . <nl> + else <nl> + exec java $ JVM _ OPTS $ cassandra _ parms - cp $ CLASSPATH \ <nl> + org . apache . cassandra . service . CassandraDaemon < & - & <nl> + [ ! - z $ pidpath ] & & echo - n $ ! > $ pidpath <nl> + fi <nl> + <nl> + return $ ? <nl> + } <nl> + <nl> + # Parse any command line options . <nl> + args = ` getopt fhp : " $ @ " ` <nl> + eval set - - " $ args " <nl> + <nl> + while true ; do <nl> + case " $ 1 " in <nl> + - p ) <nl> + pidfile = " $ 2 " <nl> + shift 2 <nl> + ; ; <nl> + - f ) <nl> + foreground = " yes " <nl> + shift <nl> + ; ; <nl> + - h ) <nl> + echo " Usage : $ 0 [ - f ] [ - h ] [ - p pidfile ] " <nl> + exit 0 <nl> + ; ; <nl> + - - ) <nl> + shift <nl> + break <nl> + ; ; <nl> + * ) <nl> + echo " Error parsing arguments ! " > & 2 <nl> + exit 1 <nl> + ; ; <nl> + esac <nl> + done <nl> + <nl> + # Start up the service <nl> + launch _ service " $ pidfile " " $ foreground " <nl> + <nl> + exit $ ? <nl> + <nl> + # vi : ai sw = 4 ts = 4 tw = 0 et

TEST DIFF:
diff - - git a / redhat / cassandra b / redhat / cassandra 
 index 5ff9c48 . . a4aaaa5 100644 
 - - - a / redhat / cassandra 
 + + + b / redhat / cassandra 
 @ @ - 67 , 16 + 67 , 26 @ @ case " $ 1 " in 
 su $ CASSANDRA _ OWNR - c " kill ` cat $ pid _ file ` " 
 retval = $ ? 
 [ $ retval - eq 0 ] & & rm - f $ lock _ file 
 - for t in ` seq 40 ` ; do $ 0 status > / dev / null 2 > & 1 & & sleep 0 . 5 | | break ; done 
 + for t in ` seq 40 ` ; do 
 + status - p $ pid _ file cassandra > / dev / null 2 > & 1 
 + retval = $ ? 
 + if [ $ retval - eq 3 ] ; then 
 + echo " OK " 
 + exit 0 
 + else 
 + sleep 0 . 5 
 + fi ; 
 + done 
 # Adding a sleep here to give jmx time to wind down ( CASSANDRA - 4483 ) . Not ideal . . . 
 # Adam Holmberg suggests this , but that would break if the jmx port is changed 
 # for t in ` seq 40 ` ; do netstat - tnlp | grep " 0 . 0 . 0 . 0 : 7199 " > / dev / null 2 > & 1 & & sleep 0 . 1 | | break ; done 
 sleep 5 
 - STATUS = ` $ 0 status ` 
 - if [ [ $ STATUS = = " $ NAME is stopped " ] ] ; then 
 + status - p $ pid _ file cassandra > / dev / null 2 > & 1 
 + retval = $ ? 
 + if [ $ retval - eq 3 ] ; then 
 echo " OK " 
 else 
 - echo " ERROR : could not stop $ NAME : $ STATUS " 
 + echo " ERROR : could not stop $ NAME " 
 exit 1 
 fi 
 ; ;

NEAREST DIFF:
diff - - git a / bin / cassandra b / bin / cassandra 
 new file mode 100755 
 index 0000000 . . b5365d5 
 - - - / dev / null 
 + + + b / bin / cassandra 
 @ @ - 0 , 0 + 1 , 113 @ @ 
 + # ! / bin / sh 
 + 
 + 
 + # OPTIONS : 
 + # - f : start in foreground 
 + # - p < filename > : log the pid to a file ( useful to kill it later ) 
 + 
 + 
 + # Licensed to the Apache Software Foundation ( ASF ) under one 
 + # or more contributor license agreements . See the NOTICE file 
 + # distributed with this work for additional information 
 + # regarding copyright ownership . The ASF licenses this file 
 + # to you under the Apache License , Version 2 . 0 ( the 
 + # " License " ) ; you may not use this file except in compliance 
 + # with the License . You may obtain a copy of the License at 
 + # 
 + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + # 
 + # Unless required by applicable law or agreed to in writing , software 
 + # distributed under the License is distributed on an " AS IS " BASIS , 
 + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + # See the License for the specific language governing permissions and 
 + # limitations under the License . 
 + 
 + 
 + if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 + for include in / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh \ 
 + ` dirname $ 0 ` / cassandra . in . sh ; do 
 + if [ - r $ include ] ; then 
 + . $ include 
 + break 
 + fi 
 + done 
 + elif [ - r $ CASSANDRA _ INCLUDE ] ; then 
 + . $ CASSANDRA _ INCLUDE 
 + fi 
 + 
 + if [ - z $ CASSANDRA _ CONF - o - z $ CLASSPATH ] ; then 
 + echo " You must set the CASSANDRA _ CONF and CLASSPATH vars " > & 2 
 + exit 1 
 + fi 
 + 
 + # Special - case path variables . 
 + case " ` uname ` " in 
 + CYGWIN * ) 
 + CLASSPATH = ` cygpath - p - w " $ CLASSPATH " ` 
 + CASSANDRA _ CONF = ` cygpath - p - w " $ CASSANDRA _ CONF " ` 
 + ; ; 
 + esac 
 + 
 + launch _ service ( ) 
 + { 
 + pidpath = $ 1 
 + foreground = $ 2 
 + cassandra _ parms = " - Dcassandra - Dstorage - config = $ CASSANDRA _ CONF " 
 + 
 + if [ " x $ pidpath " ! = " x " ] ; then 
 + cassandra _ parms = " $ cassandra _ parms - Dcassandra - pidfile = $ pidpath " 
 + fi 
 + 
 + # The cassandra - foreground option will tell CassandraDaemon not 
 + # to close stdout / stderr , but it ' s up to us not to background . 
 + if [ " x $ foreground " ! = " x " ] ; then 
 + cassandra _ parms = " $ cassandra _ parms - Dcassandra - foreground = yes " 
 + java $ JVM _ OPTS $ cassandra _ parms - cp $ CLASSPATH \ 
 + org . apache . cassandra . service . CassandraDaemon 
 + # Startup CassandraDaemon , background it , and write the pid . 
 + else 
 + exec java $ JVM _ OPTS $ cassandra _ parms - cp $ CLASSPATH \ 
 + org . apache . cassandra . service . CassandraDaemon < & - & 
 + [ ! - z $ pidpath ] & & echo - n $ ! > $ pidpath 
 + fi 
 + 
 + return $ ? 
 + } 
 + 
 + # Parse any command line options . 
 + args = ` getopt fhp : " $ @ " ` 
 + eval set - - " $ args " 
 + 
 + while true ; do 
 + case " $ 1 " in 
 + - p ) 
 + pidfile = " $ 2 " 
 + shift 2 
 + ; ; 
 + - f ) 
 + foreground = " yes " 
 + shift 
 + ; ; 
 + - h ) 
 + echo " Usage : $ 0 [ - f ] [ - h ] [ - p pidfile ] " 
 + exit 0 
 + ; ; 
 + - - ) 
 + shift 
 + break 
 + ; ; 
 + * ) 
 + echo " Error parsing arguments ! " > & 2 
 + exit 1 
 + ; ; 
 + esac 
 + done 
 + 
 + # Start up the service 
 + launch _ service " $ pidfile " " $ foreground " 
 + 
 + exit $ ? 
 + 
 + # vi : ai sw = 4 ts = 4 tw = 0 et
