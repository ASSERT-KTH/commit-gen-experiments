BLEU SCORE: 0.02931251013275449

TEST MSG: Create Temporary folder for CompressedInputStreamTest
GENERATED MSG: move deleteAsync into DeletionService . patch by jbellis

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / streaming / compression / CompressedInputStreamTest . java b / test / unit / org / apache / cassandra / streaming / compression / CompressedInputStreamTest . java <nl> index 14321fa . . be443b5 100644 <nl> - - - a / test / unit / org / apache / cassandra / streaming / compression / CompressedInputStreamTest . java <nl> + + + b / test / unit / org / apache / cassandra / streaming / compression / CompressedInputStreamTest . java <nl> @ @ - 21 , 7 + 21 , 9 @ @ import java . io . * ; <nl> import java . util . * ; <nl> <nl> import org . junit . BeforeClass ; <nl> + import org . junit . Rule ; <nl> import org . junit . Test ; <nl> + import org . junit . rules . TemporaryFolder ; <nl> <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . ClusteringComparator ; <nl> @ @ - 47 , 6 + 49 , 9 @ @ import static org . junit . Assert . fail ; <nl> * / <nl> public class CompressedInputStreamTest <nl> { <nl> + @ Rule <nl> + public TemporaryFolder tempFolder = new TemporaryFolder ( ) ; <nl> + <nl> @ BeforeClass <nl> public static void setupDD ( ) <nl> { <nl> @ @ - 109 , 7 + 114 , 7 @ @ public class CompressedInputStreamTest <nl> assert valuesToCheck ! = null & & valuesToCheck . length > 0 ; <nl> <nl> / / write compressed data file of longs <nl> - File parentDir = FileUtils . getTempDir ( ) ; <nl> + File parentDir = tempFolder . newFolder ( ) ; <nl> Descriptor desc = new Descriptor ( parentDir , " ks " , " cf " , 1 ) ; <nl> File tmp = new File ( desc . filenameFor ( Component . DATA ) ) ; <nl> MetadataCollector collector = new MetadataCollector ( new ClusteringComparator ( BytesType . instance ) ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / CommitLog . java b / src / java / org / apache / cassandra / db / CommitLog . java <nl> index 7e6b32f . . 8a424e9 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CommitLog . java <nl> + + + b / src / java / org / apache / cassandra / db / CommitLog . java <nl> @ @ - 21 , 7 + 21 , 7 @ @ package org . apache . cassandra . db ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . io . util . BufferedRandomAccessFile ; <nl> import org . apache . cassandra . io . util . DataOutputBuffer ; <nl> - import org . apache . cassandra . io . util . FileUtils ; <nl> + import org . apache . cassandra . io . DeletionService ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> import org . apache . cassandra . concurrent . StageManager ; <nl> <nl> @ @ - 570 , 7 + 570 , 7 @ @ public class CommitLog <nl> if ( header . isSafeToDelete ( ) ) <nl> { <nl> logger _ . info ( " Deleting obsolete commit log : " + oldFile ) ; <nl> - FileUtils . deleteAsync ( oldFile ) ; <nl> + DeletionService . deleteAsync ( oldFile ) ; <nl> clHeaders _ . remove ( oldFile ) ; <nl> } <nl> else <nl> diff - - git a / src / java / org / apache / cassandra / io / DeletionService . java b / src / java / org / apache / cassandra / io / DeletionService . java <nl> new file mode 100644 <nl> index 0000000 . . 830f2a0 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / io / DeletionService . java <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + package org . apache . cassandra . io ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . util . concurrent . ExecutorService ; <nl> + <nl> + import org . apache . cassandra . concurrent . JMXEnabledThreadPoolExecutor ; <nl> + import org . apache . cassandra . io . util . FileUtils ; <nl> + <nl> + public class DeletionService <nl> + { <nl> + public static final ExecutorService executor = new JMXEnabledThreadPoolExecutor ( " FILEUTILS - DELETE - POOL " ) ; <nl> + <nl> + public static void deleteAsync ( final String file ) throws IOException <nl> + { <nl> + Runnable deleter = new Runnable ( ) <nl> + { <nl> + public void run ( ) <nl> + { <nl> + try <nl> + { <nl> + FileUtils . deleteWithConfirm ( new File ( file ) ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + } <nl> + } ; <nl> + executor . submit ( deleter ) ; <nl> + } <nl> + } <nl> diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> index 68359f7 . . 36fef52 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> @ @ - 37 , 43 + 37 , 17 @ @ public class FileUtils <nl> private static final double gb _ = 1024 * 1024 * 1024d ; <nl> private static final double tb _ = 1024 * 1024 * 1024 * 1024d ; <nl> <nl> - private static ExecutorService deleter _ = new JMXEnabledThreadPoolExecutor ( " FILEUTILS - DELETE - POOL " ) ; <nl> - <nl> - public static void shutdown ( ) <nl> - { <nl> - 	 deleter _ . shutdownNow ( ) ; <nl> - } <nl> - <nl> public static void deleteWithConfirm ( File file ) throws IOException <nl> { <nl> assert file . exists ( ) : " attempted to delete non - existing file " + file . getName ( ) ; <nl> + if ( logger _ . isDebugEnabled ( ) ) <nl> + logger _ . debug ( " Deleting " + file . getName ( ) ) ; <nl> if ( ! file . delete ( ) ) <nl> { <nl> throw new IOException ( " Failed to delete " + file . getAbsolutePath ( ) ) ; <nl> } <nl> } <nl> <nl> - public static class Deleter implements Runnable <nl> - { <nl> - 	 File file _ = null ; <nl> - <nl> - 	 public Deleter ( File f ) <nl> - { <nl> - 	 	 file _ = f ; <nl> - } <nl> - <nl> - public void run ( ) <nl> - { <nl> - 	 if ( file _ = = null ) <nl> - 	 	 return ; <nl> - 	 logger _ . debug ( " Deleting " + file _ . getName ( ) ) ; <nl> - 	 if ( ! file _ . delete ( ) ) <nl> - 	 { <nl> - 	 logger _ . error ( " Unable to delete file " + file _ . getAbsolutePath ( ) ) ; <nl> - 	 } <nl> - } <nl> - } <nl> - <nl> public static class FileComparator implements Comparator < File > <nl> { <nl> public int compare ( File f , File f2 ) <nl> @ @ - 113 , 13 + 87 , 6 @ @ public class FileUtils <nl> return f . delete ( ) ; <nl> } <nl> <nl> - public static void deleteAsync ( String file ) throws IOException <nl> - { <nl> - File f = new File ( file ) ; <nl> - 	 Runnable deleter = new Deleter ( f ) ; <nl> - deleter _ . submit ( deleter ) ; <nl> - } <nl> - <nl> public static boolean delete ( List < String > files ) throws IOException <nl> { <nl> boolean bVal = true ; <nl> diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyTest . java <nl> index 5859f44 . . dede3b7 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyTest . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ import java . util . TreeMap ; <nl> <nl> import org . junit . Test ; <nl> <nl> - import DataOutputBuffer ; <nl> + import org . apache . cassandra . io . util . DataOutputBuffer ; <nl> import org . apache . cassandra . db . filter . QueryPath ; <nl> import static org . apache . cassandra . Util . column ; <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / db / ReadMessageTest . java b / test / unit / org / apache / cassandra / db / ReadMessageTest . java <nl> index 0021091 . . 22cab5e 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / ReadMessageTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / ReadMessageTest . java <nl> @ @ - 30 , 6 + 30 , 7 @ @ import org . apache . commons . lang . ArrayUtils ; <nl> import org . junit . Test ; <nl> <nl> import org . apache . cassandra . db . filter . QueryPath ; <nl> + import org . apache . cassandra . io . util . DataOutputBuffer ; <nl> <nl> public class ReadMessageTest <nl> { <nl> diff - - git a / test / unit / org / apache / cassandra / tools / SSTableExportTest . java b / test / unit / org / apache / cassandra / tools / SSTableExportTest . java <nl> index bc5aa9e . . 62bfb64 100644 <nl> - - - a / test / unit / org / apache / cassandra / tools / SSTableExportTest . java <nl> + + + b / test / unit / org / apache / cassandra / tools / SSTableExportTest . java <nl> @ @ - 31 , 6 + 31 , 7 @ @ import org . apache . cassandra . dht . IPartitioner ; <nl> import org . apache . cassandra . io . SSTableAccessor ; <nl> import org . apache . cassandra . io . SSTableReader ; <nl> import org . apache . cassandra . io . SSTableWriter ; <nl> + import org . apache . cassandra . io . util . DataOutputBuffer ; <nl> import static org . apache . cassandra . Util . createTemporarySSTable ; <nl> import static org . apache . cassandra . utils . FBUtilities . hexToBytes ; <nl> import static org . junit . Assert . assertTrue ;

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / streaming / compression / CompressedInputStreamTest . java b / test / unit / org / apache / cassandra / streaming / compression / CompressedInputStreamTest . java 
 index 14321fa . . be443b5 100644 
 - - - a / test / unit / org / apache / cassandra / streaming / compression / CompressedInputStreamTest . java 
 + + + b / test / unit / org / apache / cassandra / streaming / compression / CompressedInputStreamTest . java 
 @ @ - 21 , 7 + 21 , 9 @ @ import java . io . * ; 
 import java . util . * ; 
 
 import org . junit . BeforeClass ; 
 + import org . junit . Rule ; 
 import org . junit . Test ; 
 + import org . junit . rules . TemporaryFolder ; 
 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . ClusteringComparator ; 
 @ @ - 47 , 6 + 49 , 9 @ @ import static org . junit . Assert . fail ; 
 * / 
 public class CompressedInputStreamTest 
 { 
 + @ Rule 
 + public TemporaryFolder tempFolder = new TemporaryFolder ( ) ; 
 + 
 @ BeforeClass 
 public static void setupDD ( ) 
 { 
 @ @ - 109 , 7 + 114 , 7 @ @ public class CompressedInputStreamTest 
 assert valuesToCheck ! = null & & valuesToCheck . length > 0 ; 
 
 / / write compressed data file of longs 
 - File parentDir = FileUtils . getTempDir ( ) ; 
 + File parentDir = tempFolder . newFolder ( ) ; 
 Descriptor desc = new Descriptor ( parentDir , " ks " , " cf " , 1 ) ; 
 File tmp = new File ( desc . filenameFor ( Component . DATA ) ) ; 
 MetadataCollector collector = new MetadataCollector ( new ClusteringComparator ( BytesType . instance ) ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / CommitLog . java b / src / java / org / apache / cassandra / db / CommitLog . java 
 index 7e6b32f . . 8a424e9 100644 
 - - - a / src / java / org / apache / cassandra / db / CommitLog . java 
 + + + b / src / java / org / apache / cassandra / db / CommitLog . java 
 @ @ - 21 , 7 + 21 , 7 @ @ package org . apache . cassandra . db ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . io . util . BufferedRandomAccessFile ; 
 import org . apache . cassandra . io . util . DataOutputBuffer ; 
 - import org . apache . cassandra . io . util . FileUtils ; 
 + import org . apache . cassandra . io . DeletionService ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 import org . apache . cassandra . concurrent . StageManager ; 
 
 @ @ - 570 , 7 + 570 , 7 @ @ public class CommitLog 
 if ( header . isSafeToDelete ( ) ) 
 { 
 logger _ . info ( " Deleting obsolete commit log : " + oldFile ) ; 
 - FileUtils . deleteAsync ( oldFile ) ; 
 + DeletionService . deleteAsync ( oldFile ) ; 
 clHeaders _ . remove ( oldFile ) ; 
 } 
 else 
 diff - - git a / src / java / org / apache / cassandra / io / DeletionService . java b / src / java / org / apache / cassandra / io / DeletionService . java 
 new file mode 100644 
 index 0000000 . . 830f2a0 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / io / DeletionService . java 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + package org . apache . cassandra . io ; 
 + 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + import java . util . concurrent . ExecutorService ; 
 + 
 + import org . apache . cassandra . concurrent . JMXEnabledThreadPoolExecutor ; 
 + import org . apache . cassandra . io . util . FileUtils ; 
 + 
 + public class DeletionService 
 + { 
 + public static final ExecutorService executor = new JMXEnabledThreadPoolExecutor ( " FILEUTILS - DELETE - POOL " ) ; 
 + 
 + public static void deleteAsync ( final String file ) throws IOException 
 + { 
 + Runnable deleter = new Runnable ( ) 
 + { 
 + public void run ( ) 
 + { 
 + try 
 + { 
 + FileUtils . deleteWithConfirm ( new File ( file ) ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + } 
 + } ; 
 + executor . submit ( deleter ) ; 
 + } 
 + } 
 diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 index 68359f7 . . 36fef52 100644 
 - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java 
 + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 @ @ - 37 , 43 + 37 , 17 @ @ public class FileUtils 
 private static final double gb _ = 1024 * 1024 * 1024d ; 
 private static final double tb _ = 1024 * 1024 * 1024 * 1024d ; 
 
 - private static ExecutorService deleter _ = new JMXEnabledThreadPoolExecutor ( " FILEUTILS - DELETE - POOL " ) ; 
 - 
 - public static void shutdown ( ) 
 - { 
 - 	 deleter _ . shutdownNow ( ) ; 
 - } 
 - 
 public static void deleteWithConfirm ( File file ) throws IOException 
 { 
 assert file . exists ( ) : " attempted to delete non - existing file " + file . getName ( ) ; 
 + if ( logger _ . isDebugEnabled ( ) ) 
 + logger _ . debug ( " Deleting " + file . getName ( ) ) ; 
 if ( ! file . delete ( ) ) 
 { 
 throw new IOException ( " Failed to delete " + file . getAbsolutePath ( ) ) ; 
 } 
 } 
 
 - public static class Deleter implements Runnable 
 - { 
 - 	 File file _ = null ; 
 - 
 - 	 public Deleter ( File f ) 
 - { 
 - 	 	 file _ = f ; 
 - } 
 - 
 - public void run ( ) 
 - { 
 - 	 if ( file _ = = null ) 
 - 	 	 return ; 
 - 	 logger _ . debug ( " Deleting " + file _ . getName ( ) ) ; 
 - 	 if ( ! file _ . delete ( ) ) 
 - 	 { 
 - 	 logger _ . error ( " Unable to delete file " + file _ . getAbsolutePath ( ) ) ; 
 - 	 } 
 - } 
 - } 
 - 
 public static class FileComparator implements Comparator < File > 
 { 
 public int compare ( File f , File f2 ) 
 @ @ - 113 , 13 + 87 , 6 @ @ public class FileUtils 
 return f . delete ( ) ; 
 } 
 
 - public static void deleteAsync ( String file ) throws IOException 
 - { 
 - File f = new File ( file ) ; 
 - 	 Runnable deleter = new Deleter ( f ) ; 
 - deleter _ . submit ( deleter ) ; 
 - } 
 - 
 public static boolean delete ( List < String > files ) throws IOException 
 { 
 boolean bVal = true ; 
 diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyTest . java 
 index 5859f44 . . dede3b7 100644 
 - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyTest . java 
 + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyTest . java 
 @ @ - 26 , 7 + 26 , 7 @ @ import java . util . TreeMap ; 
 
 import org . junit . Test ; 
 
 - import DataOutputBuffer ; 
 + import org . apache . cassandra . io . util . DataOutputBuffer ; 
 import org . apache . cassandra . db . filter . QueryPath ; 
 import static org . apache . cassandra . Util . column ; 
 
 diff - - git a / test / unit / org / apache / cassandra / db / ReadMessageTest . java b / test / unit / org / apache / cassandra / db / ReadMessageTest . java 
 index 0021091 . . 22cab5e 100644 
 - - - a / test / unit / org / apache / cassandra / db / ReadMessageTest . java 
 + + + b / test / unit / org / apache / cassandra / db / ReadMessageTest . java 
 @ @ - 30 , 6 + 30 , 7 @ @ import org . apache . commons . lang . ArrayUtils ; 
 import org . junit . Test ; 
 
 import org . apache . cassandra . db . filter . QueryPath ; 
 + import org . apache . cassandra . io . util . DataOutputBuffer ; 
 
 public class ReadMessageTest 
 { 
 diff - - git a / test / unit / org / apache / cassandra / tools / SSTableExportTest . java b / test / unit / org / apache / cassandra / tools / SSTableExportTest . java 
 index bc5aa9e . . 62bfb64 100644 
 - - - a / test / unit / org / apache / cassandra / tools / SSTableExportTest . java 
 + + + b / test / unit / org / apache / cassandra / tools / SSTableExportTest . java 
 @ @ - 31 , 6 + 31 , 7 @ @ import org . apache . cassandra . dht . IPartitioner ; 
 import org . apache . cassandra . io . SSTableAccessor ; 
 import org . apache . cassandra . io . SSTableReader ; 
 import org . apache . cassandra . io . SSTableWriter ; 
 + import org . apache . cassandra . io . util . DataOutputBuffer ; 
 import static org . apache . cassandra . Util . createTemporarySSTable ; 
 import static org . apache . cassandra . utils . FBUtilities . hexToBytes ; 
 import static org . junit . Assert . assertTrue ;
