BLEU SCORE: 0.019146030690102508

TEST MSG: Interned ColumnIdentifiers should use minimal ByteBuffers . MemoryMeter shouldn ' t take ColumnDefinition into account when measuring object sizes .
GENERATED MSG: merge from 1 . 2

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fe6ab09 . . 18dca09 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 14 <nl> + * Interned ColumnIdentifiers should use minimal ByteBuffers ( CASSANDRA - 13533 ) <nl> * ReverseIndexedReader may drop rows during 2 . 1 to 3 . 0 upgrade ( CASSANDRA - 13525 ) <nl> * Fix repair process violating start / end token limits for small ranges ( CASSANDRA - 13052 ) <nl> * Add storage port options to sstableloader ( CASSANDRA - 13518 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> index 6bcc2e0 . . 34840e3 100644 <nl> - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> @ @ - 29 , 7 + 29 , 9 @ @ import org . apache . cassandra . cql3 . * ; <nl> import org . apache . cassandra . db . rows . * ; <nl> import org . apache . cassandra . db . marshal . * ; <nl> import org . apache . cassandra . serializers . MarshalException ; <nl> + import org . github . jamm . Unmetered ; <nl> <nl> + @ Unmetered <nl> public class ColumnDefinition extends ColumnSpecification implements Comparable < ColumnDefinition > <nl> { <nl> public static final Comparator < Object > asymmetricColumnDataComparator = <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java <nl> index ceb81be . . 9b9ec4a 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java <nl> @ @ - 146 , 6 + 146 , 8 @ @ public class ColumnIdentifier extends Selectable implements IMeasurableMemory , C <nl> <nl> public static ColumnIdentifier getInterned ( AbstractType < ? > type , ByteBuffer bytes , String text ) <nl> { <nl> + bytes = ByteBufferUtil . minimalBufferFor ( bytes ) ; <nl> + <nl> InternedKey key = new InternedKey ( type , bytes ) ; <nl> ColumnIdentifier id = internedInstances . get ( key ) ; <nl> if ( id ! = null ) <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / ColumnIdentifierTest . java b / test / unit / org / apache / cassandra / cql3 / ColumnIdentifierTest . java <nl> index c4b43b8 . . 3a34ad5 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / ColumnIdentifierTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / ColumnIdentifierTest . java <nl> @ @ - 82 , 4 + 82 , 17 @ @ public class ColumnIdentifierTest <nl> Assert . assertEquals ( text , c3 . toString ( ) ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testInterningUsesMinimalByteBuffer ( ) <nl> + { <nl> + byte [ ] bytes = new byte [ 2 ] ; <nl> + bytes [ 0 ] = 0x63 ; <nl> + ByteBuffer byteBuffer = ByteBuffer . wrap ( bytes ) ; <nl> + byteBuffer . limit ( 1 ) ; <nl> + <nl> + ColumnIdentifier c1 = ColumnIdentifier . getInterned ( byteBuffer , UTF8Type . instance ) ; <nl> + <nl> + Assert . assertEquals ( 2 , byteBuffer . capacity ( ) ) ; <nl> + Assert . assertEquals ( 1 , c1 . bytes . capacity ( ) ) ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b935425 . . 7f5a487 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 - rc1 <nl> + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) <nl> * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) <nl> * save truncation position in system table ( CASSANDRA - 4906 ) <nl> * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) <nl> diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py <nl> index d15c083 . . bab3506 100644 <nl> - - - a / pylib / cqlshlib / formatting . py <nl> + + + b / pylib / cqlshlib / formatting . py <nl> @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : <nl> return f <nl> return registrator <nl> <nl> - @ formatter _ for ( ' bytes ' ) <nl> - def format _ value _ bytes ( val , colormap , * * _ ) : <nl> + @ formatter _ for ( ' blob ' ) <nl> + def format _ value _ blob ( val , colormap , * * _ ) : <nl> bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) <nl> return colorme ( bval , colormap , ' hex ' ) <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fe6ab09 . . 18dca09 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 14 
 + * Interned ColumnIdentifiers should use minimal ByteBuffers ( CASSANDRA - 13533 ) 
 * ReverseIndexedReader may drop rows during 2 . 1 to 3 . 0 upgrade ( CASSANDRA - 13525 ) 
 * Fix repair process violating start / end token limits for small ranges ( CASSANDRA - 13052 ) 
 * Add storage port options to sstableloader ( CASSANDRA - 13518 ) 
 diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 index 6bcc2e0 . . 34840e3 100644 
 - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 @ @ - 29 , 7 + 29 , 9 @ @ import org . apache . cassandra . cql3 . * ; 
 import org . apache . cassandra . db . rows . * ; 
 import org . apache . cassandra . db . marshal . * ; 
 import org . apache . cassandra . serializers . MarshalException ; 
 + import org . github . jamm . Unmetered ; 
 
 + @ Unmetered 
 public class ColumnDefinition extends ColumnSpecification implements Comparable < ColumnDefinition > 
 { 
 public static final Comparator < Object > asymmetricColumnDataComparator = 
 diff - - git a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java 
 index ceb81be . . 9b9ec4a 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java 
 + + + b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java 
 @ @ - 146 , 6 + 146 , 8 @ @ public class ColumnIdentifier extends Selectable implements IMeasurableMemory , C 
 
 public static ColumnIdentifier getInterned ( AbstractType < ? > type , ByteBuffer bytes , String text ) 
 { 
 + bytes = ByteBufferUtil . minimalBufferFor ( bytes ) ; 
 + 
 InternedKey key = new InternedKey ( type , bytes ) ; 
 ColumnIdentifier id = internedInstances . get ( key ) ; 
 if ( id ! = null ) 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / ColumnIdentifierTest . java b / test / unit / org / apache / cassandra / cql3 / ColumnIdentifierTest . java 
 index c4b43b8 . . 3a34ad5 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / ColumnIdentifierTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / ColumnIdentifierTest . java 
 @ @ - 82 , 4 + 82 , 17 @ @ public class ColumnIdentifierTest 
 Assert . assertEquals ( text , c3 . toString ( ) ) ; 
 } 
 
 + @ Test 
 + public void testInterningUsesMinimalByteBuffer ( ) 
 + { 
 + byte [ ] bytes = new byte [ 2 ] ; 
 + bytes [ 0 ] = 0x63 ; 
 + ByteBuffer byteBuffer = ByteBuffer . wrap ( bytes ) ; 
 + byteBuffer . limit ( 1 ) ; 
 + 
 + ColumnIdentifier c1 = ColumnIdentifier . getInterned ( byteBuffer , UTF8Type . instance ) ; 
 + 
 + Assert . assertEquals ( 2 , byteBuffer . capacity ( ) ) ; 
 + Assert . assertEquals ( 1 , c1 . bytes . capacity ( ) ) ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b935425 . . 7f5a487 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 - rc1 
 + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) 
 * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) 
 * save truncation position in system table ( CASSANDRA - 4906 ) 
 * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) 
 diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py 
 index d15c083 . . bab3506 100644 
 - - - a / pylib / cqlshlib / formatting . py 
 + + + b / pylib / cqlshlib / formatting . py 
 @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : 
 return f 
 return registrator 
 
 - @ formatter _ for ( ' bytes ' ) 
 - def format _ value _ bytes ( val , colormap , * * _ ) : 
 + @ formatter _ for ( ' blob ' ) 
 + def format _ value _ blob ( val , colormap , * * _ ) : 
 bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) 
 return colorme ( bval , colormap , ' hex ' ) 

