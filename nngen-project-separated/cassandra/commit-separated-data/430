BLEU SCORE: 0.013139808552042212

TEST MSG: Change default min _ compress _ ratio to 0 to avoid sending parameter to old
GENERATED MSG: Fix handling of clustering key > 64K

TEST DIFF (one line): diff - - git a / pylib / cqlshlib / test / test _ cqlsh _ output . py b / pylib / cqlshlib / test / test _ cqlsh _ output . py <nl> index f4aaa57 . . b7240f1 100644 <nl> - - - a / pylib / cqlshlib / test / test _ cqlsh _ output . py <nl> + + + b / pylib / cqlshlib / test / test _ cqlsh _ output . py <nl> @ @ - 615 , 7 + 615 , 7 @ @ class TestCqlshOutput ( BaseTestCase ) : <nl> AND cdc = false <nl> AND comment = ' ' <nl> AND compaction = { ' class ' : ' org . apache . cassandra . db . compaction . SizeTieredCompactionStrategy ' , ' max _ threshold ' : ' 32 ' , ' min _ threshold ' : ' 4 ' } <nl> - AND compression = { ' chunk _ length _ in _ kb ' : ' 64 ' , ' class ' : ' org . apache . cassandra . io . compress . LZ4Compressor ' , ' min _ compress _ ratio ' : ' 1 . 1 ' } <nl> + AND compression = { ' chunk _ length _ in _ kb ' : ' 64 ' , ' class ' : ' org . apache . cassandra . io . compress . LZ4Compressor ' } <nl> AND crc _ check _ chance = 1 . 0 <nl> AND dclocal _ read _ repair _ chance = 0 . 1 <nl> AND default _ time _ to _ live = 0 <nl> diff - - git a / src / java / org / apache / cassandra / schema / CompressionParams . java b / src / java / org / apache / cassandra / schema / CompressionParams . java <nl> index a319311 . . c4b52df 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / CompressionParams . java <nl> + + + b / src / java / org / apache / cassandra / schema / CompressionParams . java <nl> @ @ - 54 , 7 + 54 , 9 @ @ public final class CompressionParams <nl> private static volatile boolean hasLoggedCrcCheckChanceWarning ; <nl> <nl> public static final int DEFAULT _ CHUNK _ LENGTH = 65536 ; <nl> - public static final double DEFAULT _ MIN _ COMPRESS _ RATIO = 1 . 1 ; <nl> + public static final double DEFAULT _ MIN _ COMPRESS _ RATIO = 0 . 0 ; / / Since pre - 4 . 0 versions do not understand the <nl> + / / new compression parameter we can ' t use a <nl> + / / different default value . <nl> public static final IVersionedSerializer < CompressionParams > serializer = new Serializer ( ) ; <nl> <nl> public static final String CLASS = " class " ; <nl> @ @ - 499 , 7 + 501 , 8 @ @ public final class CompressionParams <nl> Map < String , String > options = new HashMap < > ( otherOptions ) ; <nl> options . put ( CLASS , sstableCompressor . getClass ( ) . getName ( ) ) ; <nl> options . put ( CHUNK _ LENGTH _ IN _ KB , chunkLengthInKB ( ) ) ; <nl> - options . put ( MIN _ COMPRESS _ RATIO , String . valueOf ( minCompressRatio ) ) ; <nl> + if ( minCompressRatio ! = DEFAULT _ MIN _ COMPRESS _ RATIO ) <nl> + options . put ( MIN _ COMPRESS _ RATIO , String . valueOf ( minCompressRatio ) ) ; <nl> <nl> return options ; <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java <nl> index 3e6f0db . . dce72f9 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java <nl> @ @ - 328 , 7 + 328 , 7 @ @ public class AlterTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> <nl> execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; <nl> <nl> @ @ - 337 , 7 + 337 , 7 @ @ public class AlterTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; <nl> <nl> execute ( " ALTER TABLE % s WITH compression = { ' sstable _ compression ' : ' LZ4Compressor ' , ' chunk _ length _ kb ' : 64 } ; " ) ; <nl> <nl> @ @ - 346 , 7 + 346 , 7 @ @ public class AlterTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> <nl> execute ( " ALTER TABLE % s WITH compression = { ' sstable _ compression ' : ' LZ4Compressor ' , ' min _ compress _ ratio ' : 2 } ; " ) ; <nl> <nl> @ @ - 364 , 7 + 364 , 7 @ @ public class AlterTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 0 . 0 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> <nl> execute ( " ALTER TABLE % s WITH compression = { ' sstable _ compression ' : ' ' , ' chunk _ length _ kb ' : 32 } ; " ) ; <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java <nl> index b2ff2c4 . . 1784556 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java <nl> @ @ - 722 , 7 + 722 , 7 @ @ public class CreateTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> <nl> createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " <nl> + " WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; <nl> @ @ - 732 , 7 + 732 , 7 @ @ public class CreateTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; <nl> <nl> createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " <nl> + " WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 , ' enabled ' : true } ; " ) ; <nl> @ @ - 742 , 7 + 742 , 7 @ @ public class CreateTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; <nl> <nl> createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " <nl> + " WITH compression = { ' sstable _ compression ' : ' SnappyCompressor ' , ' chunk _ length _ kb ' : 32 } ; " ) ; <nl> @ @ - 752 , 7 + 752 , 7 @ @ public class CreateTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; <nl> <nl> createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " <nl> + " WITH compression = { ' sstable _ compression ' : ' SnappyCompressor ' , ' min _ compress _ ratio ' : 2 } ; " ) ; <nl> @ @ - 772 , 7 + 772 , 7 @ @ public class CreateTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 0 . 0 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; <nl> <nl> createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " <nl> + " WITH compression = { ' sstable _ compression ' : ' ' , ' chunk _ length _ kb ' : 32 } ; " ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / pylib / cqlshlib / test / test _ cqlsh _ output . py b / pylib / cqlshlib / test / test _ cqlsh _ output . py 
 index f4aaa57 . . b7240f1 100644 
 - - - a / pylib / cqlshlib / test / test _ cqlsh _ output . py 
 + + + b / pylib / cqlshlib / test / test _ cqlsh _ output . py 
 @ @ - 615 , 7 + 615 , 7 @ @ class TestCqlshOutput ( BaseTestCase ) : 
 AND cdc = false 
 AND comment = ' ' 
 AND compaction = { ' class ' : ' org . apache . cassandra . db . compaction . SizeTieredCompactionStrategy ' , ' max _ threshold ' : ' 32 ' , ' min _ threshold ' : ' 4 ' } 
 - AND compression = { ' chunk _ length _ in _ kb ' : ' 64 ' , ' class ' : ' org . apache . cassandra . io . compress . LZ4Compressor ' , ' min _ compress _ ratio ' : ' 1 . 1 ' } 
 + AND compression = { ' chunk _ length _ in _ kb ' : ' 64 ' , ' class ' : ' org . apache . cassandra . io . compress . LZ4Compressor ' } 
 AND crc _ check _ chance = 1 . 0 
 AND dclocal _ read _ repair _ chance = 0 . 1 
 AND default _ time _ to _ live = 0 
 diff - - git a / src / java / org / apache / cassandra / schema / CompressionParams . java b / src / java / org / apache / cassandra / schema / CompressionParams . java 
 index a319311 . . c4b52df 100644 
 - - - a / src / java / org / apache / cassandra / schema / CompressionParams . java 
 + + + b / src / java / org / apache / cassandra / schema / CompressionParams . java 
 @ @ - 54 , 7 + 54 , 9 @ @ public final class CompressionParams 
 private static volatile boolean hasLoggedCrcCheckChanceWarning ; 
 
 public static final int DEFAULT _ CHUNK _ LENGTH = 65536 ; 
 - public static final double DEFAULT _ MIN _ COMPRESS _ RATIO = 1 . 1 ; 
 + public static final double DEFAULT _ MIN _ COMPRESS _ RATIO = 0 . 0 ; / / Since pre - 4 . 0 versions do not understand the 
 + / / new compression parameter we can ' t use a 
 + / / different default value . 
 public static final IVersionedSerializer < CompressionParams > serializer = new Serializer ( ) ; 
 
 public static final String CLASS = " class " ; 
 @ @ - 499 , 7 + 501 , 8 @ @ public final class CompressionParams 
 Map < String , String > options = new HashMap < > ( otherOptions ) ; 
 options . put ( CLASS , sstableCompressor . getClass ( ) . getName ( ) ) ; 
 options . put ( CHUNK _ LENGTH _ IN _ KB , chunkLengthInKB ( ) ) ; 
 - options . put ( MIN _ COMPRESS _ RATIO , String . valueOf ( minCompressRatio ) ) ; 
 + if ( minCompressRatio ! = DEFAULT _ MIN _ COMPRESS _ RATIO ) 
 + options . put ( MIN _ COMPRESS _ RATIO , String . valueOf ( minCompressRatio ) ) ; 
 
 return options ; 
 } 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java 
 index 3e6f0db . . dce72f9 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java 
 @ @ - 328 , 7 + 328 , 7 @ @ public class AlterTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 
 execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; 
 
 @ @ - 337 , 7 + 337 , 7 @ @ public class AlterTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; 
 
 execute ( " ALTER TABLE % s WITH compression = { ' sstable _ compression ' : ' LZ4Compressor ' , ' chunk _ length _ kb ' : 64 } ; " ) ; 
 
 @ @ - 346 , 7 + 346 , 7 @ @ public class AlterTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 
 execute ( " ALTER TABLE % s WITH compression = { ' sstable _ compression ' : ' LZ4Compressor ' , ' min _ compress _ ratio ' : 2 } ; " ) ; 
 
 @ @ - 364 , 7 + 364 , 7 @ @ public class AlterTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 0 . 0 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 
 execute ( " ALTER TABLE % s WITH compression = { ' sstable _ compression ' : ' ' , ' chunk _ length _ kb ' : 32 } ; " ) ; 
 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java 
 index b2ff2c4 . . 1784556 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java 
 @ @ - 722 , 7 + 722 , 7 @ @ public class CreateTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 
 createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " 
 + " WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; 
 @ @ - 732 , 7 + 732 , 7 @ @ public class CreateTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; 
 
 createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " 
 + " WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 , ' enabled ' : true } ; " ) ; 
 @ @ - 742 , 7 + 742 , 7 @ @ public class CreateTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; 
 
 createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " 
 + " WITH compression = { ' sstable _ compression ' : ' SnappyCompressor ' , ' chunk _ length _ kb ' : 32 } ; " ) ; 
 @ @ - 752 , 7 + 752 , 7 @ @ public class CreateTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 1 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 32 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; 
 
 createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " 
 + " WITH compression = { ' sstable _ compression ' : ' SnappyCompressor ' , ' min _ compress _ ratio ' : 2 } ; " ) ; 
 @ @ - 772 , 7 + 772 , 7 @ @ public class CreateTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 0 . 0 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; 
 
 createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " 
 + " WITH compression = { ' sstable _ compression ' : ' ' , ' chunk _ length _ kb ' : 32 } ; " ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
