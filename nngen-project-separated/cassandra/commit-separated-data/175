BLEU SCORE: 0.05341087579952926

TEST MSG: Suppress 2 eclipse - warnings
GENERATED MSG: Guard against NPE in SSTableIdentityIterator

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableIdentityIterator . java b / src / java / org / apache / cassandra / io / sstable / SSTableIdentityIterator . java <nl> index 3ade9ff . . f9c6e82 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableIdentityIterator . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableIdentityIterator . java <nl> @ @ - 49 , 6 + 49 , 7 @ @ public class SSTableIdentityIterator implements Comparable < SSTableIdentityIterat <nl> this . staticRow = iterator . readStaticRow ( ) ; <nl> } <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> public static SSTableIdentityIterator create ( SSTableReader sstable , RandomAccessReader file , DecoratedKey key ) <nl> { <nl> try <nl> @ @ - 65 , 6 + 66 , 7 @ @ public class SSTableIdentityIterator implements Comparable < SSTableIdentityIterat <nl> } <nl> } <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> public static SSTableIdentityIterator create ( SSTableReader sstable , FileDataInput dfile , RowIndexEntry < ? > indexEntry , DecoratedKey key , boolean tombstoneOnly ) <nl> { <nl> try
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 65b1961 . . f0de7d1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 22 , 6 + 22 , 7 @ @ <nl> * Add type information to new schema _ columnfamilies and remove thrift <nl> serialization for schema ( CASSANDRA - 3792 ) <nl> * add missing column validator options to the CLI help ( CASSANDRA - 3926 ) <nl> + * skip reading saved key cache if CF ' s caching strategy is NONE or ROWS _ ONLY ( CASSANDRA - 3954 ) <nl> Merged from 1 . 0 : <nl> * always compact away deleted hints immediately after handoff ( CASSANDRA - 3955 ) <nl> * delete hints from dropped ColumnFamilies on handoff instead of <nl> diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index bebd9f6 . . 157bb9e 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 324 , 6 + 324 , 7 @ @ public final class CFMetaData <nl> . keyValidator ( info . getValidator ( ) ) <nl> . readRepairChance ( 0 . 0 ) <nl> . dcLocalReadRepairChance ( 0 . 0 ) <nl> + . caching ( Caching . NONE ) <nl> . reloadSecondaryIndexMetadata ( parent ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index a69989e . . ef9bc90 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 71 , 6 + 71 , 8 @ @ import org . apache . cassandra . utils . * ; <nl> import org . apache . cassandra . utils . IntervalTree . Interval ; <nl> import org . cliffc . high _ scale _ lib . NonBlockingHashMap ; <nl> <nl> + import static org . apache . cassandra . config . CFMetaData . Caching ; <nl> + <nl> public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> { <nl> private static Logger logger = LoggerFactory . getLogger ( ColumnFamilyStore . class ) ; <nl> @ @ - 199 , 7 + 201 , 12 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> metadata . compressionParameters = CompressionParameters . create ( opts ) ; <nl> } <nl> <nl> - private ColumnFamilyStore ( Table table , String columnFamilyName , IPartitioner partitioner , int generation , CFMetaData metadata , Directories directories ) <nl> + private ColumnFamilyStore ( Table table , <nl> + String columnFamilyName , <nl> + IPartitioner partitioner , <nl> + int generation , <nl> + CFMetaData metadata , <nl> + Directories directories ) <nl> { <nl> assert metadata ! = null : " null metadata for " + table + " : " + columnFamilyName ; <nl> <nl> @ @ - 213 , 12 + 220 , 17 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> this . indexManager = new SecondaryIndexManager ( this ) ; <nl> fileIndexGenerator . set ( generation ) ; <nl> <nl> + Caching caching = metadata . getCaching ( ) ; <nl> + <nl> if ( logger . isDebugEnabled ( ) ) <nl> logger . debug ( " Starting CFS { } " , columnFamily ) ; <nl> <nl> / / scan for sstables corresponding to this cf and load them <nl> data = new DataTracker ( this ) ; <nl> - Set < DecoratedKey > savedKeys = CacheService . instance . keyCache . readSaved ( table . name , columnFamily ) ; <nl> + Set < DecoratedKey > savedKeys = caching = = Caching . NONE | | caching = = Caching . ROWS _ ONLY <nl> + ? Collections . < DecoratedKey > emptySet ( ) <nl> + : CacheService . instance . keyCache . readSaved ( table . name , columnFamily ) ; <nl> + <nl> Directories . SSTableLister sstables = directories . sstableLister ( ) . skipCompacted ( true ) . skipTemporary ( true ) ; <nl> data . addInitialSSTables ( SSTableReader . batchOpen ( sstables . list ( ) . entrySet ( ) , savedKeys , data , metadata , this . partitioner ) ) ; <nl> <nl> @ @ - 298 , 7 + 310 , 10 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> return createColumnFamilyStore ( table , columnFamily , StorageService . getPartitioner ( ) , Schema . instance . getCFMetaData ( table . name , columnFamily ) ) ; <nl> } <nl> <nl> - public static synchronized ColumnFamilyStore createColumnFamilyStore ( Table table , String columnFamily , IPartitioner partitioner , CFMetaData metadata ) <nl> + public static synchronized ColumnFamilyStore createColumnFamilyStore ( Table table , <nl> + String columnFamily , <nl> + IPartitioner partitioner , <nl> + CFMetaData metadata ) <nl> { <nl> / / get the max generation number , to prevent generation conflicts <nl> Directories directories = Directories . create ( table . name , columnFamily ) ; <nl> @ @ - 1940 , 8 + 1955 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> <nl> private boolean isRowCacheEnabled ( ) <nl> { <nl> - return ! ( metadata . getCaching ( ) = = CFMetaData . Caching . NONE <nl> - | | metadata . getCaching ( ) = = CFMetaData . Caching . KEYS _ ONLY <nl> + return ! ( metadata . getCaching ( ) = = Caching . NONE <nl> + | | metadata . getCaching ( ) = = Caching . KEYS _ ONLY <nl> | | CacheService . instance . rowCache . getCapacity ( ) = = 0 ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableIdentityIterator . java b / src / java / org / apache / cassandra / io / sstable / SSTableIdentityIterator . java 
 index 3ade9ff . . f9c6e82 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableIdentityIterator . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableIdentityIterator . java 
 @ @ - 49 , 6 + 49 , 7 @ @ public class SSTableIdentityIterator implements Comparable < SSTableIdentityIterat 
 this . staticRow = iterator . readStaticRow ( ) ; 
 } 
 
 + @ SuppressWarnings ( " resource " ) 
 public static SSTableIdentityIterator create ( SSTableReader sstable , RandomAccessReader file , DecoratedKey key ) 
 { 
 try 
 @ @ - 65 , 6 + 66 , 7 @ @ public class SSTableIdentityIterator implements Comparable < SSTableIdentityIterat 
 } 
 } 
 
 + @ SuppressWarnings ( " resource " ) 
 public static SSTableIdentityIterator create ( SSTableReader sstable , FileDataInput dfile , RowIndexEntry < ? > indexEntry , DecoratedKey key , boolean tombstoneOnly ) 
 { 
 try

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 65b1961 . . f0de7d1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 22 , 6 + 22 , 7 @ @ 
 * Add type information to new schema _ columnfamilies and remove thrift 
 serialization for schema ( CASSANDRA - 3792 ) 
 * add missing column validator options to the CLI help ( CASSANDRA - 3926 ) 
 + * skip reading saved key cache if CF ' s caching strategy is NONE or ROWS _ ONLY ( CASSANDRA - 3954 ) 
 Merged from 1 . 0 : 
 * always compact away deleted hints immediately after handoff ( CASSANDRA - 3955 ) 
 * delete hints from dropped ColumnFamilies on handoff instead of 
 diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index bebd9f6 . . 157bb9e 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 324 , 6 + 324 , 7 @ @ public final class CFMetaData 
 . keyValidator ( info . getValidator ( ) ) 
 . readRepairChance ( 0 . 0 ) 
 . dcLocalReadRepairChance ( 0 . 0 ) 
 + . caching ( Caching . NONE ) 
 . reloadSecondaryIndexMetadata ( parent ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index a69989e . . ef9bc90 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 71 , 6 + 71 , 8 @ @ import org . apache . cassandra . utils . * ; 
 import org . apache . cassandra . utils . IntervalTree . Interval ; 
 import org . cliffc . high _ scale _ lib . NonBlockingHashMap ; 
 
 + import static org . apache . cassandra . config . CFMetaData . Caching ; 
 + 
 public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 { 
 private static Logger logger = LoggerFactory . getLogger ( ColumnFamilyStore . class ) ; 
 @ @ - 199 , 7 + 201 , 12 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 metadata . compressionParameters = CompressionParameters . create ( opts ) ; 
 } 
 
 - private ColumnFamilyStore ( Table table , String columnFamilyName , IPartitioner partitioner , int generation , CFMetaData metadata , Directories directories ) 
 + private ColumnFamilyStore ( Table table , 
 + String columnFamilyName , 
 + IPartitioner partitioner , 
 + int generation , 
 + CFMetaData metadata , 
 + Directories directories ) 
 { 
 assert metadata ! = null : " null metadata for " + table + " : " + columnFamilyName ; 
 
 @ @ - 213 , 12 + 220 , 17 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 this . indexManager = new SecondaryIndexManager ( this ) ; 
 fileIndexGenerator . set ( generation ) ; 
 
 + Caching caching = metadata . getCaching ( ) ; 
 + 
 if ( logger . isDebugEnabled ( ) ) 
 logger . debug ( " Starting CFS { } " , columnFamily ) ; 
 
 / / scan for sstables corresponding to this cf and load them 
 data = new DataTracker ( this ) ; 
 - Set < DecoratedKey > savedKeys = CacheService . instance . keyCache . readSaved ( table . name , columnFamily ) ; 
 + Set < DecoratedKey > savedKeys = caching = = Caching . NONE | | caching = = Caching . ROWS _ ONLY 
 + ? Collections . < DecoratedKey > emptySet ( ) 
 + : CacheService . instance . keyCache . readSaved ( table . name , columnFamily ) ; 
 + 
 Directories . SSTableLister sstables = directories . sstableLister ( ) . skipCompacted ( true ) . skipTemporary ( true ) ; 
 data . addInitialSSTables ( SSTableReader . batchOpen ( sstables . list ( ) . entrySet ( ) , savedKeys , data , metadata , this . partitioner ) ) ; 
 
 @ @ - 298 , 7 + 310 , 10 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 return createColumnFamilyStore ( table , columnFamily , StorageService . getPartitioner ( ) , Schema . instance . getCFMetaData ( table . name , columnFamily ) ) ; 
 } 
 
 - public static synchronized ColumnFamilyStore createColumnFamilyStore ( Table table , String columnFamily , IPartitioner partitioner , CFMetaData metadata ) 
 + public static synchronized ColumnFamilyStore createColumnFamilyStore ( Table table , 
 + String columnFamily , 
 + IPartitioner partitioner , 
 + CFMetaData metadata ) 
 { 
 / / get the max generation number , to prevent generation conflicts 
 Directories directories = Directories . create ( table . name , columnFamily ) ; 
 @ @ - 1940 , 8 + 1955 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 
 private boolean isRowCacheEnabled ( ) 
 { 
 - return ! ( metadata . getCaching ( ) = = CFMetaData . Caching . NONE 
 - | | metadata . getCaching ( ) = = CFMetaData . Caching . KEYS _ ONLY 
 + return ! ( metadata . getCaching ( ) = = Caching . NONE 
 + | | metadata . getCaching ( ) = = Caching . KEYS _ ONLY 
 | | CacheService . instance . rowCache . getCapacity ( ) = = 0 ) ; 
 } 

