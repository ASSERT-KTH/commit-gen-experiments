BLEU SCORE: 0.015445276590783498

TEST MSG: Add a script to make running the cqlsh tests in cassandra repo easier
GENERATED MSG: add . gitignore

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index bb8b54c . . 5faac66 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 18 <nl> + * Add a script to make running the cqlsh tests in cassandra repo easier ( CASSANDRA - 14951 ) <nl> * If SizeEstimatesRecorder misses a ' onDropTable ' notification , the size _ estimates table will never be cleared for that table . ( CASSANDRA - 14905 ) <nl> * Counters fail to increment in 2 . 1 / 2 . 2 to 3 . X mixed version clusters ( CASSANDRA - 14958 ) <nl> * Streaming needs to synchronise access to LifecycleTransaction ( CASSANDRA - 14554 ) <nl> diff - - git a / pylib / cassandra - cqlsh - tests . sh b / pylib / cassandra - cqlsh - tests . sh <nl> new file mode 100755 <nl> index 0000000 . . 1fb3aa0 <nl> - - - / dev / null <nl> + + + b / pylib / cassandra - cqlsh - tests . sh <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + # ! / bin / bash - x <nl> + <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + # <nl> + # Prep <nl> + # <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + WORKSPACE = $ 1 <nl> + <nl> + if [ " $ { WORKSPACE } " = " " ] ; then <nl> + echo " Specify Cassandra source directory " <nl> + exit <nl> + fi <nl> + <nl> + export PYTHONIOENCODING = " utf - 8 " <nl> + export PYTHONUNBUFFERED = true <nl> + export CASS _ DRIVER _ NO _ EXTENSIONS = true <nl> + export CASS _ DRIVER _ NO _ CYTHON = true <nl> + export CCM _ MAX _ HEAP _ SIZE = " 2048M " <nl> + export CCM _ HEAP _ NEWSIZE = " 200M " <nl> + export CCM _ CONFIG _ DIR = $ { WORKSPACE } / . ccm <nl> + export NUM _ TOKENS = " 32 " <nl> + export CASSANDRA _ DIR = $ { WORKSPACE } <nl> + <nl> + # Loop to prevent failure due to maven - ant - tasks not downloading a jar . . <nl> + for x in $ ( seq 1 3 ) ; do <nl> + ant - buildfile $ { CASSANDRA _ DIR } / build . xml realclean jar <nl> + RETURN = " $ ? " <nl> + if [ " $ { RETURN } " - eq " 0 " ] ; then <nl> + break <nl> + fi <nl> + done <nl> + # Exit , if we didn ' t build successfully <nl> + if [ " $ { RETURN } " - ne " 0 " ] ; then <nl> + echo " Build failed with exit code : $ { RETURN } " <nl> + exit $ { RETURN } <nl> + fi <nl> + <nl> + # Set up venv with dtest dependencies <nl> + set - e # enable immediate exit if venv setup fails <nl> + virtualenv - - python = python2 - - no - site - packages venv <nl> + source venv / bin / activate <nl> + pip install - r $ { CASSANDRA _ DIR } / pylib / requirements . txt <nl> + pip freeze <nl> + <nl> + if [ " $ cython " = " yes " ] ; then <nl> + pip install " Cython > = 0 . 20 , < 0 . 25 " <nl> + cd pylib / ; python setup . py build _ ext - - inplace <nl> + cd $ { WORKSPACE } <nl> + fi <nl> + <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + # <nl> + # Main <nl> + # <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + ccm remove test | | true # in case an old ccm cluster is left behind <nl> + ccm create test - n 1 - - install - dir = $ { CASSANDRA _ DIR } <nl> + ccm updateconf " enable _ user _ defined _ functions : true " <nl> + <nl> + version _ from _ build = $ ( ccm node1 versionfrombuild ) <nl> + export pre _ or _ post _ cdc = $ ( python - c " " " from distutils . version import LooseVersion <nl> + print \ " postcdc \ " if LooseVersion ( \ " $ { version _ from _ build } \ " ) > = \ " 3 . 8 \ " else \ " precdc \ " <nl> + " " " ) <nl> + case " $ { pre _ or _ post _ cdc } " in <nl> + postcdc ) <nl> + ccm updateconf " cdc _ enabled : true " <nl> + ; ; <nl> + precdc ) <nl> + : <nl> + ; ; <nl> + * ) <nl> + echo " $ { pre _ or _ post _ cdc } " is an invalid value . <nl> + exit 1 <nl> + ; ; <nl> + esac <nl> + <nl> + ccm start - - wait - for - binary - proto <nl> + <nl> + cd $ { CASSANDRA _ DIR } / pylib / cqlshlib / <nl> + <nl> + set + e # disable immediate exit from this point <nl> + nosetests <nl> + <nl> + ccm remove <nl> + mv nosetests . xml $ { WORKSPACE } / cqlshlib . xml <nl> + <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + # <nl> + # Clean <nl> + # <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + # / virtualenv <nl> + deactivate <nl> + <nl> + # Exit cleanly for usable " Unstable " status <nl> + exit 0 <nl> diff - - git a / pylib / cqlshlib / setup . cfg b / pylib / cqlshlib / setup . cfg <nl> new file mode 100644 <nl> index 0000000 . . 6c523ee <nl> - - - / dev / null <nl> + + + b / pylib / cqlshlib / setup . cfg <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + [ nosetests ] <nl> + verbosity = 3 <nl> + detailed - errors = 1 <nl> + with - xunit = 1 <nl> diff - - git a / pylib / requirements . txt b / pylib / requirements . txt <nl> new file mode 100644 <nl> index 0000000 . . a9b6217 <nl> - - - / dev / null <nl> + + + b / pylib / requirements . txt <nl> @ @ - 0 , 0 + 1 , 21 @ @ <nl> + # See python driver docs : futures and six have to be installed before <nl> + # cythonizing the driver , perhaps only on old pips . <nl> + # http : / / datastax . github . io / python - driver / installation . html # cython - based - extensions <nl> + futures <nl> + six <nl> + - e git + https : / / github . com / datastax / python - driver . git @ cassandra - test # egg = cassandra - driver <nl> + # Used ccm version is tracked by cassandra - test branch in ccm repo . Please create a PR there for fixes or upgrades to new releases . <nl> + - e git + https : / / github . com / riptano / ccm . git @ cassandra - test # egg = ccm <nl> + cql <nl> + decorator <nl> + docopt <nl> + enum34 <nl> + flaky <nl> + mock <nl> + nose <nl> + nose - test - select <nl> + parse <nl> + pycodestyle <nl> + psutil <nl> + pycassa <nl> + thrift = = 0 . 9 . 3
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index bb8b54c . . 5faac66 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 18 
 + * Add a script to make running the cqlsh tests in cassandra repo easier ( CASSANDRA - 14951 ) 
 * If SizeEstimatesRecorder misses a ' onDropTable ' notification , the size _ estimates table will never be cleared for that table . ( CASSANDRA - 14905 ) 
 * Counters fail to increment in 2 . 1 / 2 . 2 to 3 . X mixed version clusters ( CASSANDRA - 14958 ) 
 * Streaming needs to synchronise access to LifecycleTransaction ( CASSANDRA - 14554 ) 
 diff - - git a / pylib / cassandra - cqlsh - tests . sh b / pylib / cassandra - cqlsh - tests . sh 
 new file mode 100755 
 index 0000000 . . 1fb3aa0 
 - - - / dev / null 
 + + + b / pylib / cassandra - cqlsh - tests . sh 
 @ @ - 0 , 0 + 1 , 100 @ @ 
 + # ! / bin / bash - x 
 + 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + # 
 + # Prep 
 + # 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + WORKSPACE = $ 1 
 + 
 + if [ " $ { WORKSPACE } " = " " ] ; then 
 + echo " Specify Cassandra source directory " 
 + exit 
 + fi 
 + 
 + export PYTHONIOENCODING = " utf - 8 " 
 + export PYTHONUNBUFFERED = true 
 + export CASS _ DRIVER _ NO _ EXTENSIONS = true 
 + export CASS _ DRIVER _ NO _ CYTHON = true 
 + export CCM _ MAX _ HEAP _ SIZE = " 2048M " 
 + export CCM _ HEAP _ NEWSIZE = " 200M " 
 + export CCM _ CONFIG _ DIR = $ { WORKSPACE } / . ccm 
 + export NUM _ TOKENS = " 32 " 
 + export CASSANDRA _ DIR = $ { WORKSPACE } 
 + 
 + # Loop to prevent failure due to maven - ant - tasks not downloading a jar . . 
 + for x in $ ( seq 1 3 ) ; do 
 + ant - buildfile $ { CASSANDRA _ DIR } / build . xml realclean jar 
 + RETURN = " $ ? " 
 + if [ " $ { RETURN } " - eq " 0 " ] ; then 
 + break 
 + fi 
 + done 
 + # Exit , if we didn ' t build successfully 
 + if [ " $ { RETURN } " - ne " 0 " ] ; then 
 + echo " Build failed with exit code : $ { RETURN } " 
 + exit $ { RETURN } 
 + fi 
 + 
 + # Set up venv with dtest dependencies 
 + set - e # enable immediate exit if venv setup fails 
 + virtualenv - - python = python2 - - no - site - packages venv 
 + source venv / bin / activate 
 + pip install - r $ { CASSANDRA _ DIR } / pylib / requirements . txt 
 + pip freeze 
 + 
 + if [ " $ cython " = " yes " ] ; then 
 + pip install " Cython > = 0 . 20 , < 0 . 25 " 
 + cd pylib / ; python setup . py build _ ext - - inplace 
 + cd $ { WORKSPACE } 
 + fi 
 + 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + # 
 + # Main 
 + # 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + ccm remove test | | true # in case an old ccm cluster is left behind 
 + ccm create test - n 1 - - install - dir = $ { CASSANDRA _ DIR } 
 + ccm updateconf " enable _ user _ defined _ functions : true " 
 + 
 + version _ from _ build = $ ( ccm node1 versionfrombuild ) 
 + export pre _ or _ post _ cdc = $ ( python - c " " " from distutils . version import LooseVersion 
 + print \ " postcdc \ " if LooseVersion ( \ " $ { version _ from _ build } \ " ) > = \ " 3 . 8 \ " else \ " precdc \ " 
 + " " " ) 
 + case " $ { pre _ or _ post _ cdc } " in 
 + postcdc ) 
 + ccm updateconf " cdc _ enabled : true " 
 + ; ; 
 + precdc ) 
 + : 
 + ; ; 
 + * ) 
 + echo " $ { pre _ or _ post _ cdc } " is an invalid value . 
 + exit 1 
 + ; ; 
 + esac 
 + 
 + ccm start - - wait - for - binary - proto 
 + 
 + cd $ { CASSANDRA _ DIR } / pylib / cqlshlib / 
 + 
 + set + e # disable immediate exit from this point 
 + nosetests 
 + 
 + ccm remove 
 + mv nosetests . xml $ { WORKSPACE } / cqlshlib . xml 
 + 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + # 
 + # Clean 
 + # 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + # / virtualenv 
 + deactivate 
 + 
 + # Exit cleanly for usable " Unstable " status 
 + exit 0 
 diff - - git a / pylib / cqlshlib / setup . cfg b / pylib / cqlshlib / setup . cfg 
 new file mode 100644 
 index 0000000 . . 6c523ee 
 - - - / dev / null 
 + + + b / pylib / cqlshlib / setup . cfg 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + [ nosetests ] 
 + verbosity = 3 
 + detailed - errors = 1 
 + with - xunit = 1 
 diff - - git a / pylib / requirements . txt b / pylib / requirements . txt 
 new file mode 100644 
 index 0000000 . . a9b6217 
 - - - / dev / null 
 + + + b / pylib / requirements . txt 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + # See python driver docs : futures and six have to be installed before 
 + # cythonizing the driver , perhaps only on old pips . 
 + # http : / / datastax . github . io / python - driver / installation . html # cython - based - extensions 
 + futures 
 + six 
 + - e git + https : / / github . com / datastax / python - driver . git @ cassandra - test # egg = cassandra - driver 
 + # Used ccm version is tracked by cassandra - test branch in ccm repo . Please create a PR there for fixes or upgrades to new releases . 
 + - e git + https : / / github . com / riptano / ccm . git @ cassandra - test # egg = ccm 
 + cql 
 + decorator 
 + docopt 
 + enum34 
 + flaky 
 + mock 
 + nose 
 + nose - test - select 
 + parse 
 + pycodestyle 
 + psutil 
 + pycassa 
 + thrift = = 0 . 9 . 3

NEAREST DIFF:
ELIMINATEDSENTENCE
