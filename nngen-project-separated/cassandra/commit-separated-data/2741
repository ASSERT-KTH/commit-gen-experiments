BLEU SCORE: 0.020980574531482755

TEST MSG: Log USING TTL / TIMESTAMP in a counter update warning
GENERATED MSG: Sleep for RING _ DELAY before replacing with same IP

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 82783f8 . . 56059a1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 3 , 6 + 3 , 7 @ @ <nl> * Fix partition and range deletes not triggering flush ( CASSANDRA - 6655 ) <nl> * Fix mean cells and mean row size per sstable calculations ( CASSANDRA - 6667 ) <nl> * Compact hints after partial replay to clean out tombstones ( CASSANDRA - 6666 ) <nl> + * Log USING TTL / TIMESTAMP in a counter update warning ( CASSANDRA - 6649 ) <nl> <nl> <nl> 1 . 2 . 15 <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java <nl> index bfbf511 . . 1b4dc37 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java <nl> @ @ - 20 , 6 + 20 , 9 @ @ package org . apache . cassandra . cql3 . statements ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + <nl> import org . apache . cassandra . auth . Permission ; <nl> import org . apache . cassandra . cql3 . * ; <nl> import org . apache . cassandra . db . * ; <nl> @ @ - 45 , 6 + 48 , 11 @ @ public abstract class ModificationStatement extends CFStatement implements CQLSt <nl> LOGGED , UNLOGGED , COUNTER <nl> } <nl> <nl> + private static final Logger logger = LoggerFactory . getLogger ( ModificationStatement . class ) ; <nl> + <nl> + private static boolean loggedCounterTTL = false ; <nl> + private static boolean loggedCounterTimestamp = false ; <nl> + <nl> protected Type type ; <nl> <nl> private Long timestamp ; <nl> @ @ - 74 , 6 + 82 , 25 @ @ public abstract class ModificationStatement extends CFStatement implements CQLSt <nl> <nl> if ( timeToLive > ExpiringColumn . MAX _ TTL ) <nl> throw new InvalidRequestException ( String . format ( " ttl is too large . requested ( % d ) maximum ( % d ) " , timeToLive , ExpiringColumn . MAX _ TTL ) ) ; <nl> + <nl> + if ( type = = Type . COUNTER ) <nl> + { <nl> + if ( timestamp ! = null & & ! loggedCounterTimestamp ) <nl> + { <nl> + logger . warn ( " Detected use of ' USING TIMESTAMP ' in a counter UPDATE . This is invalid " + <nl> + " because counters do not use timestamps , and the timestamp has been ignored . " + <nl> + " Such queries will be rejected in Cassandra 2 . 1 + - please fix your queries before then . " ) ; <nl> + loggedCounterTimestamp = true ; <nl> + } <nl> + <nl> + if ( timeToLive ! = 0 & & ! loggedCounterTTL ) <nl> + { <nl> + logger . warn ( " Detected use of ' USING TTL ' in a counter UPDATE . This is invalid " + <nl> + " because counter tables do not support TTL , and the TTL value has been ignored . " + <nl> + " Such queries will be rejected in Cassandra 2 . 1 + - please fix your queries before then . " ) ; <nl> + loggedCounterTTL = true ; <nl> + } <nl> + } <nl> } <nl> <nl> protected abstract void validateConsistency ( ConsistencyLevel cl ) throws InvalidRequestException ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 82783f8 . . 56059a1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 3 , 6 + 3 , 7 @ @ 
 * Fix partition and range deletes not triggering flush ( CASSANDRA - 6655 ) 
 * Fix mean cells and mean row size per sstable calculations ( CASSANDRA - 6667 ) 
 * Compact hints after partial replay to clean out tombstones ( CASSANDRA - 6666 ) 
 + * Log USING TTL / TIMESTAMP in a counter update warning ( CASSANDRA - 6649 ) 
 
 
 1 . 2 . 15 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java 
 index bfbf511 . . 1b4dc37 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java 
 @ @ - 20 , 6 + 20 , 9 @ @ package org . apache . cassandra . cql3 . statements ; 
 import java . nio . ByteBuffer ; 
 import java . util . * ; 
 
 + import org . slf4j . Logger ; 
 + import org . slf4j . LoggerFactory ; 
 + 
 import org . apache . cassandra . auth . Permission ; 
 import org . apache . cassandra . cql3 . * ; 
 import org . apache . cassandra . db . * ; 
 @ @ - 45 , 6 + 48 , 11 @ @ public abstract class ModificationStatement extends CFStatement implements CQLSt 
 LOGGED , UNLOGGED , COUNTER 
 } 
 
 + private static final Logger logger = LoggerFactory . getLogger ( ModificationStatement . class ) ; 
 + 
 + private static boolean loggedCounterTTL = false ; 
 + private static boolean loggedCounterTimestamp = false ; 
 + 
 protected Type type ; 
 
 private Long timestamp ; 
 @ @ - 74 , 6 + 82 , 25 @ @ public abstract class ModificationStatement extends CFStatement implements CQLSt 
 
 if ( timeToLive > ExpiringColumn . MAX _ TTL ) 
 throw new InvalidRequestException ( String . format ( " ttl is too large . requested ( % d ) maximum ( % d ) " , timeToLive , ExpiringColumn . MAX _ TTL ) ) ; 
 + 
 + if ( type = = Type . COUNTER ) 
 + { 
 + if ( timestamp ! = null & & ! loggedCounterTimestamp ) 
 + { 
 + logger . warn ( " Detected use of ' USING TIMESTAMP ' in a counter UPDATE . This is invalid " + 
 + " because counters do not use timestamps , and the timestamp has been ignored . " + 
 + " Such queries will be rejected in Cassandra 2 . 1 + - please fix your queries before then . " ) ; 
 + loggedCounterTimestamp = true ; 
 + } 
 + 
 + if ( timeToLive ! = 0 & & ! loggedCounterTTL ) 
 + { 
 + logger . warn ( " Detected use of ' USING TTL ' in a counter UPDATE . This is invalid " + 
 + " because counter tables do not support TTL , and the TTL value has been ignored . " + 
 + " Such queries will be rejected in Cassandra 2 . 1 + - please fix your queries before then . " ) ; 
 + loggedCounterTTL = true ; 
 + } 
 + } 
 } 
 
 protected abstract void validateConsistency ( ConsistencyLevel cl ) throws InvalidRequestException ;

NEAREST DIFF:
ELIMINATEDSENTENCE
