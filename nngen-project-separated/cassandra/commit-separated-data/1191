BLEU SCORE: 0.05954672553679791

TEST MSG: Updated trigger example
GENERATED MSG: Make Ec2Region ' s datacenter name configurable

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 24e42c0 . . b8a65fd 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 1 <nl> + * Updated trigger example ( CASSANDRA - 10257 ) <nl> Merged from 2 . 2 : <nl> * ( Hadoop ) ensure that Cluster instances are always closed ( CASSANDRA - 10058 ) <nl> Merged from 2 . 1 : <nl> diff - - git a / examples / triggers / README . txt b / examples / triggers / README . txt <nl> index a99fa98 . . e5f1ecf 100644 <nl> - - - a / examples / triggers / README . txt <nl> + + + b / examples / triggers / README . txt <nl> @ @ - 1 , 11 + 1 , 8 @ @ <nl> - Cassandra Trigger ' s Example : <nl> - = = = = = = = = = = = = = = = = = = = = = = = = = <nl> + Cassandra Trigger Example : <nl> + = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - InvertedIndex class will create a inverted index of <nl> - RowKey : ColumnName : Value to Value : ColumnName : RowKey <nl> - <nl> - NOTE : This example is limited to append - only workloads , <nl> - 	 doesn ' t delete indexes on deletes . <nl> + The AuditTrigger class will create a basic audit of <nl> + activity on a table . <nl> <nl> Installation : <nl> = = = = = = = = = = = = <nl> @ @ - 13 , 9 + 10 , 27 @ @ change directory to < cassandra _ src _ dir > / examples / triggers <nl> run " ant jar " <nl> Copy build / trigger - example . jar to < cassandra _ conf > / triggers / <nl> Copy conf / * to < cassandra _ home > / conf / <nl> - Create column family configured in InvertedIndex . properties <nl> - Example : Keyspace1 . InvertedIndex as configured in InvertedIndex . properties <nl> - Configure trigger on the table . <nl> - Example : CREATE TRIGGER test1 ON " Keyspace1 " . " Standard1 " <nl> - USING ' org . apache . cassandra . triggers . InvertedIndex ' ; <nl> - Start inserting data to the column family which has the triggers . <nl> + <nl> + Create the keyspace and table configured in AuditTrigger . properties : <nl> + CREATE KEYSPACE test WITH REPLICATION = <nl> + { ' class ' : ' SimpleStrategy ' , ' replication _ factor ' : ' 1 ' } ; <nl> + CREATE TABLE test . audit ( key timeuuid , keyspace _ name text , <nl> + table _ name text , primary _ key text , PRIMARY KEY ( key ) ) ; <nl> + <nl> + Create a table to add the trigger to : <nl> + CREATE TABLE test . test ( key text , value text , PRIMARY KEY ( key ) ) ; <nl> + Note : The example currently only handles non - composite partition keys <nl> + <nl> + Configure the trigger on the table : <nl> + CREATE TRIGGER test1 ON test . test <nl> + USING ' org . apache . cassandra . triggers . AuditTrigger ' ; <nl> + <nl> + Start inserting data to the table that has the trigger . For each <nl> + partition added to the table an entry should appear in the ' audit ' table : <nl> + INSERT INTO test . test ( key , value ) values ( ' 1 ' , ' 1 ' ) ; <nl> + SELECT * FROM test . audit ; <nl> + <nl> + key | keyspace _ name | primary _ key | table _ name <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - + - - - - - - - - - - - - - + - - - - - - - - - - - - <nl> + 7dc75b60 - 770f - 11e5 - 9019 - 033d8af33e6f | test | 1 | test <nl> + <nl> diff - - git a / examples / triggers / conf / AuditTrigger . properties b / examples / triggers / conf / AuditTrigger . properties <nl> new file mode 100644 <nl> index 0000000 . . 7f122de <nl> - - - / dev / null <nl> + + + b / examples / triggers / conf / AuditTrigger . properties <nl> @ @ - 0 , 0 + 1 , 19 @ @ <nl> + # Licensed to the Apache Software Foundation ( ASF ) under one <nl> + # or more contributor license agreements . See the NOTICE file <nl> + # distributed with this work for additional information <nl> + # regarding copyright ownership . The ASF licenses this file <nl> + # to you under the Apache License , Version 2 . 0 ( the <nl> + # " License " ) ; you may not use this file except in compliance <nl> + # with the License . You may obtain a copy of the License at <nl> + # <nl> + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + # <nl> + # Unless required by applicable law or agreed to in writing , <nl> + # software distributed under the License is distributed on an <nl> + # " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + # KIND , either express or implied . See the License for the <nl> + # specific language governing permissions and limitations <nl> + # under the License . <nl> + <nl> + keyspace = test <nl> + table = audit <nl> diff - - git a / examples / triggers / conf / InvertedIndex . properties b / examples / triggers / conf / InvertedIndex . properties <nl> deleted file mode 100644 <nl> index ea49a86 . . 0000000 <nl> - - - a / examples / triggers / conf / InvertedIndex . properties <nl> + + + / dev / null <nl> @ @ - 1 , 19 + 0 , 0 @ @ <nl> - # Licensed to the Apache Software Foundation ( ASF ) under one <nl> - # or more contributor license agreements . See the NOTICE file <nl> - # distributed with this work for additional information <nl> - # regarding copyright ownership . The ASF licenses this file <nl> - # to you under the Apache License , Version 2 . 0 ( the <nl> - # " License " ) ; you may not use this file except in compliance <nl> - # with the License . You may obtain a copy of the License at <nl> - # <nl> - # http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - # <nl> - # Unless required by applicable law or agreed to in writing , <nl> - # software distributed under the License is distributed on an <nl> - # " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> - # KIND , either express or implied . See the License for the <nl> - # specific language governing permissions and limitations <nl> - # under the License . <nl> - <nl> - keyspace = Keyspace1 <nl> - table = InvertedIndex <nl> diff - - git a / examples / triggers / src / org / apache / cassandra / triggers / AuditTrigger . java b / examples / triggers / src / org / apache / cassandra / triggers / AuditTrigger . java <nl> new file mode 100644 <nl> index 0000000 . . 7739450 <nl> - - - / dev / null <nl> + + + b / examples / triggers / src / org / apache / cassandra / triggers / AuditTrigger . java <nl> @ @ - 0 , 0 + 1 , 71 @ @ <nl> + / * * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package org . apache . cassandra . triggers ; <nl> + <nl> + import java . io . InputStream ; <nl> + import java . util . Collection ; <nl> + import java . util . Collections ; <nl> + import java . util . Properties ; <nl> + <nl> + import org . apache . cassandra . config . Schema ; <nl> + import org . apache . cassandra . db . Mutation ; <nl> + import org . apache . cassandra . db . RowUpdateBuilder ; <nl> + import org . apache . cassandra . db . partitions . Partition ; <nl> + import org . apache . cassandra . io . util . FileUtils ; <nl> + import org . apache . cassandra . utils . FBUtilities ; <nl> + import org . apache . cassandra . utils . UUIDGen ; <nl> + <nl> + public class AuditTrigger implements ITrigger <nl> + { <nl> + private Properties properties = loadProperties ( ) ; <nl> + <nl> + public Collection < Mutation > augment ( Partition update ) <nl> + { <nl> + String auditKeyspace = properties . getProperty ( " keyspace " ) ; <nl> + String auditTable = properties . getProperty ( " table " ) ; <nl> + <nl> + RowUpdateBuilder audit = new RowUpdateBuilder ( Schema . instance . getCFMetaData ( auditKeyspace , auditTable ) , <nl> + FBUtilities . timestampMicros ( ) , <nl> + UUIDGen . getTimeUUID ( ) ) ; <nl> + <nl> + audit . add ( " keyspace _ name " , update . metadata ( ) . ksName ) ; <nl> + audit . add ( " table _ name " , update . metadata ( ) . cfName ) ; <nl> + audit . add ( " primary _ key " , update . metadata ( ) . getKeyValidator ( ) . getString ( update . partitionKey ( ) . getKey ( ) ) ) ; <nl> + <nl> + return Collections . singletonList ( audit . build ( ) ) ; <nl> + } <nl> + <nl> + private static Properties loadProperties ( ) <nl> + { <nl> + Properties properties = new Properties ( ) ; <nl> + InputStream stream = AuditTrigger . class . getClassLoader ( ) . getResourceAsStream ( " AuditTrigger . properties " ) ; <nl> + try <nl> + { <nl> + properties . load ( stream ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + finally <nl> + { <nl> + FileUtils . closeQuietly ( stream ) ; <nl> + } <nl> + return properties ; <nl> + } <nl> + } <nl> diff - - git a / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java b / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java <nl> deleted file mode 100644 <nl> index 2053387 . . 0000000 <nl> - - - a / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java <nl> + + + / dev / null <nl> @ @ - 1 , 79 + 0 , 0 @ @ <nl> - / * * <nl> - * Licensed to the Apache Software Foundation ( ASF ) under one <nl> - * or more contributor license agreements . See the NOTICE file <nl> - * distributed with this work for additional information <nl> - * regarding copyright ownership . The ASF licenses this file <nl> - * to you under the Apache License , Version 2 . 0 ( the <nl> - * " License " ) ; you may not use this file except in compliance <nl> - * with the License . You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - package org . apache . cassandra . triggers ; <nl> - <nl> - import java . io . InputStream ; <nl> - import java . nio . ByteBuffer ; <nl> - import java . util . ArrayList ; <nl> - import java . util . Collection ; <nl> - import java . util . List ; <nl> - import java . util . Properties ; <nl> - <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - <nl> - import org . apache . cassandra . db . Cell ; <nl> - import org . apache . cassandra . db . ColumnFamily ; <nl> - import org . apache . cassandra . db . Mutation ; <nl> - import org . apache . cassandra . io . util . FileUtils ; <nl> - <nl> - public class InvertedIndex implements ITrigger <nl> - { <nl> - private static final Logger logger = LoggerFactory . getLogger ( InvertedIndex . class ) ; <nl> - private Properties properties = loadProperties ( ) ; <nl> - <nl> - public Collection < Mutation > augment ( ByteBuffer key , ColumnFamily update ) <nl> - { <nl> - List < Mutation > mutations = new ArrayList < > ( update . getColumnCount ( ) ) ; <nl> - <nl> - String indexKeySpace = properties . getProperty ( " keyspace " ) ; <nl> - String indexColumnFamily = properties . getProperty ( " table " ) ; <nl> - for ( Cell cell : update ) <nl> - { <nl> - / / Skip the row marker and other empty values , since they lead to an empty key . <nl> - if ( cell . value ( ) . remaining ( ) > 0 ) <nl> - { <nl> - Mutation mutation = new Mutation ( indexKeySpace , cell . value ( ) ) ; <nl> - mutation . add ( indexColumnFamily , cell . name ( ) , key , System . currentTimeMillis ( ) ) ; <nl> - mutations . add ( mutation ) ; <nl> - } <nl> - } <nl> - <nl> - return mutations ; <nl> - } <nl> - <nl> - private static Properties loadProperties ( ) <nl> - { <nl> - Properties properties = new Properties ( ) ; <nl> - InputStream stream = InvertedIndex . class . getClassLoader ( ) . getResourceAsStream ( " InvertedIndex . properties " ) ; <nl> - try <nl> - { <nl> - properties . load ( stream ) ; <nl> - } <nl> - catch ( Exception e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> - finally <nl> - { <nl> - FileUtils . closeQuietly ( stream ) ; <nl> - } <nl> - logger . info ( " loaded property file , InvertedIndex . properties " ) ; <nl> - return properties ; <nl> - } <nl> - }
NEAREST DIFF (one line): diff - - git a / conf / cassandra - env . sh b / conf / cassandra - env . sh <nl> index 95760dd . . e38371f 100644 <nl> - - - a / conf / cassandra - env . sh <nl> + + + b / conf / cassandra - env . sh <nl> @ @ - 30 , 6 + 30 , 11 @ @ calculate _ heap _ sizes ( ) <nl> system _ memory _ in _ mb = ` prtconf | awk ' / Memory size : / { print $ 3 } ' ` <nl> system _ cpu _ cores = ` psrinfo | wc - l ` <nl> ; ; <nl> + Darwin ) <nl> + system _ memory _ in _ bytes = ` sysctl hw . memsize | awk ' { print $ 2 } ' ` <nl> + system _ memory _ in _ mb = ` expr $ system _ memory _ in _ bytes / 1024 / 1024 ` <nl> + system _ cpu _ cores = ` sysctl hw . ncpu | awk ' { print $ 2 } ' ` <nl> + ; ; <nl> * ) <nl> # assume reasonable defaults for e . g . a modern desktop or <nl> # cheap server

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 24e42c0 . . b8a65fd 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 1 
 + * Updated trigger example ( CASSANDRA - 10257 ) 
 Merged from 2 . 2 : 
 * ( Hadoop ) ensure that Cluster instances are always closed ( CASSANDRA - 10058 ) 
 Merged from 2 . 1 : 
 diff - - git a / examples / triggers / README . txt b / examples / triggers / README . txt 
 index a99fa98 . . e5f1ecf 100644 
 - - - a / examples / triggers / README . txt 
 + + + b / examples / triggers / README . txt 
 @ @ - 1 , 11 + 1 , 8 @ @ 
 - Cassandra Trigger ' s Example : 
 - = = = = = = = = = = = = = = = = = = = = = = = = = 
 + Cassandra Trigger Example : 
 + = = = = = = = = = = = = = = = = = = = = = = = = = = 
 
 - InvertedIndex class will create a inverted index of 
 - RowKey : ColumnName : Value to Value : ColumnName : RowKey 
 - 
 - NOTE : This example is limited to append - only workloads , 
 - 	 doesn ' t delete indexes on deletes . 
 + The AuditTrigger class will create a basic audit of 
 + activity on a table . 
 
 Installation : 
 = = = = = = = = = = = = 
 @ @ - 13 , 9 + 10 , 27 @ @ change directory to < cassandra _ src _ dir > / examples / triggers 
 run " ant jar " 
 Copy build / trigger - example . jar to < cassandra _ conf > / triggers / 
 Copy conf / * to < cassandra _ home > / conf / 
 - Create column family configured in InvertedIndex . properties 
 - Example : Keyspace1 . InvertedIndex as configured in InvertedIndex . properties 
 - Configure trigger on the table . 
 - Example : CREATE TRIGGER test1 ON " Keyspace1 " . " Standard1 " 
 - USING ' org . apache . cassandra . triggers . InvertedIndex ' ; 
 - Start inserting data to the column family which has the triggers . 
 + 
 + Create the keyspace and table configured in AuditTrigger . properties : 
 + CREATE KEYSPACE test WITH REPLICATION = 
 + { ' class ' : ' SimpleStrategy ' , ' replication _ factor ' : ' 1 ' } ; 
 + CREATE TABLE test . audit ( key timeuuid , keyspace _ name text , 
 + table _ name text , primary _ key text , PRIMARY KEY ( key ) ) ; 
 + 
 + Create a table to add the trigger to : 
 + CREATE TABLE test . test ( key text , value text , PRIMARY KEY ( key ) ) ; 
 + Note : The example currently only handles non - composite partition keys 
 + 
 + Configure the trigger on the table : 
 + CREATE TRIGGER test1 ON test . test 
 + USING ' org . apache . cassandra . triggers . AuditTrigger ' ; 
 + 
 + Start inserting data to the table that has the trigger . For each 
 + partition added to the table an entry should appear in the ' audit ' table : 
 + INSERT INTO test . test ( key , value ) values ( ' 1 ' , ' 1 ' ) ; 
 + SELECT * FROM test . audit ; 
 + 
 + key | keyspace _ name | primary _ key | table _ name 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - + - - - - - - - - - - - - - + - - - - - - - - - - - - 
 + 7dc75b60 - 770f - 11e5 - 9019 - 033d8af33e6f | test | 1 | test 
 + 
 diff - - git a / examples / triggers / conf / AuditTrigger . properties b / examples / triggers / conf / AuditTrigger . properties 
 new file mode 100644 
 index 0000000 . . 7f122de 
 - - - / dev / null 
 + + + b / examples / triggers / conf / AuditTrigger . properties 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + # Licensed to the Apache Software Foundation ( ASF ) under one 
 + # or more contributor license agreements . See the NOTICE file 
 + # distributed with this work for additional information 
 + # regarding copyright ownership . The ASF licenses this file 
 + # to you under the Apache License , Version 2 . 0 ( the 
 + # " License " ) ; you may not use this file except in compliance 
 + # with the License . You may obtain a copy of the License at 
 + # 
 + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + # 
 + # Unless required by applicable law or agreed to in writing , 
 + # software distributed under the License is distributed on an 
 + # " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + # KIND , either express or implied . See the License for the 
 + # specific language governing permissions and limitations 
 + # under the License . 
 + 
 + keyspace = test 
 + table = audit 
 diff - - git a / examples / triggers / conf / InvertedIndex . properties b / examples / triggers / conf / InvertedIndex . properties 
 deleted file mode 100644 
 index ea49a86 . . 0000000 
 - - - a / examples / triggers / conf / InvertedIndex . properties 
 + + + / dev / null 
 @ @ - 1 , 19 + 0 , 0 @ @ 
 - # Licensed to the Apache Software Foundation ( ASF ) under one 
 - # or more contributor license agreements . See the NOTICE file 
 - # distributed with this work for additional information 
 - # regarding copyright ownership . The ASF licenses this file 
 - # to you under the Apache License , Version 2 . 0 ( the 
 - # " License " ) ; you may not use this file except in compliance 
 - # with the License . You may obtain a copy of the License at 
 - # 
 - # http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - # 
 - # Unless required by applicable law or agreed to in writing , 
 - # software distributed under the License is distributed on an 
 - # " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 - # KIND , either express or implied . See the License for the 
 - # specific language governing permissions and limitations 
 - # under the License . 
 - 
 - keyspace = Keyspace1 
 - table = InvertedIndex 
 diff - - git a / examples / triggers / src / org / apache / cassandra / triggers / AuditTrigger . java b / examples / triggers / src / org / apache / cassandra / triggers / AuditTrigger . java 
 new file mode 100644 
 index 0000000 . . 7739450 
 - - - / dev / null 
 + + + b / examples / triggers / src / org / apache / cassandra / triggers / AuditTrigger . java 
 @ @ - 0 , 0 + 1 , 71 @ @ 
 + / * * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package org . apache . cassandra . triggers ; 
 + 
 + import java . io . InputStream ; 
 + import java . util . Collection ; 
 + import java . util . Collections ; 
 + import java . util . Properties ; 
 + 
 + import org . apache . cassandra . config . Schema ; 
 + import org . apache . cassandra . db . Mutation ; 
 + import org . apache . cassandra . db . RowUpdateBuilder ; 
 + import org . apache . cassandra . db . partitions . Partition ; 
 + import org . apache . cassandra . io . util . FileUtils ; 
 + import org . apache . cassandra . utils . FBUtilities ; 
 + import org . apache . cassandra . utils . UUIDGen ; 
 + 
 + public class AuditTrigger implements ITrigger 
 + { 
 + private Properties properties = loadProperties ( ) ; 
 + 
 + public Collection < Mutation > augment ( Partition update ) 
 + { 
 + String auditKeyspace = properties . getProperty ( " keyspace " ) ; 
 + String auditTable = properties . getProperty ( " table " ) ; 
 + 
 + RowUpdateBuilder audit = new RowUpdateBuilder ( Schema . instance . getCFMetaData ( auditKeyspace , auditTable ) , 
 + FBUtilities . timestampMicros ( ) , 
 + UUIDGen . getTimeUUID ( ) ) ; 
 + 
 + audit . add ( " keyspace _ name " , update . metadata ( ) . ksName ) ; 
 + audit . add ( " table _ name " , update . metadata ( ) . cfName ) ; 
 + audit . add ( " primary _ key " , update . metadata ( ) . getKeyValidator ( ) . getString ( update . partitionKey ( ) . getKey ( ) ) ) ; 
 + 
 + return Collections . singletonList ( audit . build ( ) ) ; 
 + } 
 + 
 + private static Properties loadProperties ( ) 
 + { 
 + Properties properties = new Properties ( ) ; 
 + InputStream stream = AuditTrigger . class . getClassLoader ( ) . getResourceAsStream ( " AuditTrigger . properties " ) ; 
 + try 
 + { 
 + properties . load ( stream ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + finally 
 + { 
 + FileUtils . closeQuietly ( stream ) ; 
 + } 
 + return properties ; 
 + } 
 + } 
 diff - - git a / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java b / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java 
 deleted file mode 100644 
 index 2053387 . . 0000000 
 - - - a / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java 
 + + + / dev / null 
 @ @ - 1 , 79 + 0 , 0 @ @ 
 - / * * 
 - * Licensed to the Apache Software Foundation ( ASF ) under one 
 - * or more contributor license agreements . See the NOTICE file 
 - * distributed with this work for additional information 
 - * regarding copyright ownership . The ASF licenses this file 
 - * to you under the Apache License , Version 2 . 0 ( the 
 - * " License " ) ; you may not use this file except in compliance 
 - * with the License . You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - package org . apache . cassandra . triggers ; 
 - 
 - import java . io . InputStream ; 
 - import java . nio . ByteBuffer ; 
 - import java . util . ArrayList ; 
 - import java . util . Collection ; 
 - import java . util . List ; 
 - import java . util . Properties ; 
 - 
 - import org . slf4j . Logger ; 
 - import org . slf4j . LoggerFactory ; 
 - 
 - import org . apache . cassandra . db . Cell ; 
 - import org . apache . cassandra . db . ColumnFamily ; 
 - import org . apache . cassandra . db . Mutation ; 
 - import org . apache . cassandra . io . util . FileUtils ; 
 - 
 - public class InvertedIndex implements ITrigger 
 - { 
 - private static final Logger logger = LoggerFactory . getLogger ( InvertedIndex . class ) ; 
 - private Properties properties = loadProperties ( ) ; 
 - 
 - public Collection < Mutation > augment ( ByteBuffer key , ColumnFamily update ) 
 - { 
 - List < Mutation > mutations = new ArrayList < > ( update . getColumnCount ( ) ) ; 
 - 
 - String indexKeySpace = properties . getProperty ( " keyspace " ) ; 
 - String indexColumnFamily = properties . getProperty ( " table " ) ; 
 - for ( Cell cell : update ) 
 - { 
 - / / Skip the row marker and other empty values , since they lead to an empty key . 
 - if ( cell . value ( ) . remaining ( ) > 0 ) 
 - { 
 - Mutation mutation = new Mutation ( indexKeySpace , cell . value ( ) ) ; 
 - mutation . add ( indexColumnFamily , cell . name ( ) , key , System . currentTimeMillis ( ) ) ; 
 - mutations . add ( mutation ) ; 
 - } 
 - } 
 - 
 - return mutations ; 
 - } 
 - 
 - private static Properties loadProperties ( ) 
 - { 
 - Properties properties = new Properties ( ) ; 
 - InputStream stream = InvertedIndex . class . getClassLoader ( ) . getResourceAsStream ( " InvertedIndex . properties " ) ; 
 - try 
 - { 
 - properties . load ( stream ) ; 
 - } 
 - catch ( Exception e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 - finally 
 - { 
 - FileUtils . closeQuietly ( stream ) ; 
 - } 
 - logger . info ( " loaded property file , InvertedIndex . properties " ) ; 
 - return properties ; 
 - } 
 - }

NEAREST DIFF:
diff - - git a / conf / cassandra - env . sh b / conf / cassandra - env . sh 
 index 95760dd . . e38371f 100644 
 - - - a / conf / cassandra - env . sh 
 + + + b / conf / cassandra - env . sh 
 @ @ - 30 , 6 + 30 , 11 @ @ calculate _ heap _ sizes ( ) 
 system _ memory _ in _ mb = ` prtconf | awk ' / Memory size : / { print $ 3 } ' ` 
 system _ cpu _ cores = ` psrinfo | wc - l ` 
 ; ; 
 + Darwin ) 
 + system _ memory _ in _ bytes = ` sysctl hw . memsize | awk ' { print $ 2 } ' ` 
 + system _ memory _ in _ mb = ` expr $ system _ memory _ in _ bytes / 1024 / 1024 ` 
 + system _ cpu _ cores = ` sysctl hw . ncpu | awk ' { print $ 2 } ' ` 
 + ; ; 
 * ) 
 # assume reasonable defaults for e . g . a modern desktop or 
 # cheap server
