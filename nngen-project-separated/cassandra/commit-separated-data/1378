BLEU SCORE: 0.014199193612838947

TEST MSG: Re - introduce the use of Verb . RANGE _ SLICE for range queries
GENERATED MSG: Add failure handler to async callback

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index cea8c73 . . 47fea8b 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 0 - beta1 <nl> + * Fix throwing ReadFailure instead of ReadTimeout on range queries ( CASSANDRA - 10125 ) <nl> * Rewrite hinted handoff ( CASSANDRA - 6230 ) <nl> * Fix query on static compact tables ( CASSANDRA - 10093 ) <nl> * Fix race during construction of commit log ( CASSANDRA - 10049 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / PartitionRangeReadCommand . java b / src / java / org / apache / cassandra / db / PartitionRangeReadCommand . java <nl> index e7288cc . . 42d5425 100644 <nl> - - - a / src / java / org / apache / cassandra / db / PartitionRangeReadCommand . java <nl> + + + b / src / java / org / apache / cassandra / db / PartitionRangeReadCommand . java <nl> @ @ - 237 , 13 + 237 , 14 @ @ public class PartitionRangeReadCommand extends ReadCommand <nl> } ; <nl> } <nl> <nl> - @ SuppressWarnings ( " deprecation " ) <nl> - protected MessageOut < ReadCommand > createLegacyMessage ( ) <nl> + public MessageOut < ReadCommand > createMessage ( int version ) <nl> { <nl> - if ( this . dataRange . isPaging ( ) ) <nl> - return new MessageOut < > ( MessagingService . Verb . PAGED _ RANGE , this , legacyPagedRangeCommandSerializer ) ; <nl> - else <nl> - return new MessageOut < > ( MessagingService . Verb . RANGE _ SLICE , this , legacyRangeSliceCommandSerializer ) ; <nl> + if ( version > = MessagingService . VERSION _ 30 ) <nl> + return new MessageOut < > ( MessagingService . Verb . RANGE _ SLICE , this , serializer ) ; <nl> + <nl> + return dataRange ( ) . isPaging ( ) <nl> + ? new MessageOut < > ( MessagingService . Verb . PAGED _ RANGE , this , legacyPagedRangeCommandSerializer ) <nl> + : new MessageOut < > ( MessagingService . Verb . RANGE _ SLICE , this , legacyRangeSliceCommandSerializer ) ; <nl> } <nl> <nl> protected void appendCQLWhereClause ( StringBuilder sb ) <nl> diff - - git a / src / java / org / apache / cassandra / db / RangeSliceVerbHandler . java b / src / java / org / apache / cassandra / db / RangeSliceVerbHandler . java <nl> index 3f1d660 . . 55826f5 100644 <nl> - - - a / src / java / org / apache / cassandra / db / RangeSliceVerbHandler . java <nl> + + + b / src / java / org / apache / cassandra / db / RangeSliceVerbHandler . java <nl> @ @ - 24 , 6 + 24 , 6 @ @ public class RangeSliceVerbHandler extends ReadCommandVerbHandler <nl> @ Override <nl> protected IVersionedSerializer < ReadResponse > serializer ( ) <nl> { <nl> - return ReadResponse . legacyRangeSliceReplySerializer ; <nl> + return ReadResponse . rangeSliceSerializer ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> index 4830124 . . d63a832 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ReadCommand . java <nl> + + + b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> @ @ - 59 , 6 + 59 , 9 @ @ public abstract class ReadCommand implements ReadQuery <nl> protected static final Logger logger = LoggerFactory . getLogger ( ReadCommand . class ) ; <nl> <nl> public static final IVersionedSerializer < ReadCommand > serializer = new Serializer ( ) ; <nl> + / / For RANGE _ SLICE verb : will either dispatch on ' serializer ' for 3 . 0 or ' legacyRangeSliceCommandSerializer ' for earlier version . <nl> + / / Can be removed ( and replaced by ' serializer ' ) once we drop pre - 3 . 0 backward compatibility . <nl> + public static final IVersionedSerializer < ReadCommand > rangeSliceSerializer = new RangeSliceSerializer ( ) ; <nl> <nl> public static final IVersionedSerializer < ReadCommand > legacyRangeSliceCommandSerializer = new LegacyRangeSliceCommandSerializer ( ) ; <nl> public static final IVersionedSerializer < ReadCommand > legacyPagedRangeCommandSerializer = new LegacyPagedRangeCommandSerializer ( ) ; <nl> @ @ - 411 , 15 + 414 , 7 @ @ public abstract class ReadCommand implements ReadQuery <nl> / * * <nl> * Creates a message for this command . <nl> * / <nl> - public MessageOut < ReadCommand > createMessage ( int version ) <nl> - { <nl> - if ( version > = MessagingService . VERSION _ 30 ) <nl> - return new MessageOut < > ( MessagingService . Verb . READ , this , serializer ) ; <nl> - <nl> - return createLegacyMessage ( ) ; <nl> - } <nl> - <nl> - protected abstract MessageOut < ReadCommand > createLegacyMessage ( ) ; <nl> + public abstract MessageOut < ReadCommand > createMessage ( int version ) ; <nl> <nl> protected abstract void appendCQLWhereClause ( StringBuilder sb ) ; <nl> <nl> @ @ - 529 , 6 + 524 , 33 @ @ public abstract class ReadCommand implements ReadQuery <nl> } <nl> } <nl> <nl> + / / Dispatch to either Serializer or LegacyRangeSliceCommandSerializer . Only useful as long as we maintain pre - 3 . 0 <nl> + / / compatibility <nl> + private static class RangeSliceSerializer implements IVersionedSerializer < ReadCommand > <nl> + { <nl> + public void serialize ( ReadCommand command , DataOutputPlus out , int version ) throws IOException <nl> + { <nl> + if ( version < MessagingService . VERSION _ 30 ) <nl> + legacyRangeSliceCommandSerializer . serialize ( command , out , version ) ; <nl> + else <nl> + serializer . serialize ( command , out , version ) ; <nl> + } <nl> + <nl> + public ReadCommand deserialize ( DataInputPlus in , int version ) throws IOException <nl> + { <nl> + return version < MessagingService . VERSION _ 30 <nl> + ? legacyRangeSliceCommandSerializer . deserialize ( in , version ) <nl> + : serializer . deserialize ( in , version ) ; <nl> + } <nl> + <nl> + public long serializedSize ( ReadCommand command , int version ) <nl> + { <nl> + return version < MessagingService . VERSION _ 30 <nl> + ? legacyRangeSliceCommandSerializer . serializedSize ( command , version ) <nl> + : serializer . serializedSize ( command , version ) ; <nl> + } <nl> + } <nl> + <nl> private enum LegacyType <nl> { <nl> GET _ BY _ NAMES ( ( byte ) 1 ) , <nl> diff - - git a / src / java / org / apache / cassandra / db / ReadResponse . java b / src / java / org / apache / cassandra / db / ReadResponse . java <nl> index 5f40210 . . 21f6106 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ReadResponse . java <nl> + + + b / src / java / org / apache / cassandra / db / ReadResponse . java <nl> @ @ - 42 , 7 + 42 , 12 @ @ import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> public abstract class ReadResponse <nl> { <nl> + / / Serializer for single partition read response <nl> public static final IVersionedSerializer < ReadResponse > serializer = new Serializer ( ) ; <nl> + / / Serializer for partition range read response ( this actually delegate to ' serializer ' in 3 . 0 and to <nl> + / / ' legacyRangeSliceReplySerializer ' in older version . <nl> + public static final IVersionedSerializer < ReadResponse > rangeSliceSerializer = new RangeSliceSerializer ( ) ; <nl> + / / Serializer for the pre - 3 . 0 rang slice responses . <nl> public static final IVersionedSerializer < ReadResponse > legacyRangeSliceReplySerializer = new LegacyRangeSliceReplySerializer ( ) ; <nl> <nl> / / This is used only when serializing data responses and we can ' t it easily in other cases . So this can be null , which is slighly <nl> @ @ - 397 , 6 + 402 , 31 @ @ public abstract class ReadResponse <nl> } <nl> } <nl> <nl> + private static class RangeSliceSerializer implements IVersionedSerializer < ReadResponse > <nl> + { <nl> + public void serialize ( ReadResponse response , DataOutputPlus out , int version ) throws IOException <nl> + { <nl> + if ( version < MessagingService . VERSION _ 30 ) <nl> + legacyRangeSliceReplySerializer . serialize ( response , out , version ) ; <nl> + else <nl> + serializer . serialize ( response , out , version ) ; <nl> + } <nl> + <nl> + public ReadResponse deserialize ( DataInputPlus in , int version ) throws IOException <nl> + { <nl> + return version < MessagingService . VERSION _ 30 <nl> + ? legacyRangeSliceReplySerializer . deserialize ( in , version ) <nl> + : serializer . deserialize ( in , version ) ; <nl> + } <nl> + <nl> + public long serializedSize ( ReadResponse response , int version ) <nl> + { <nl> + return version < MessagingService . VERSION _ 30 <nl> + ? legacyRangeSliceReplySerializer . serializedSize ( response , version ) <nl> + : serializer . serializedSize ( response , version ) ; <nl> + } <nl> + } <nl> + <nl> private static class LegacyRangeSliceReplySerializer implements IVersionedSerializer < ReadResponse > <nl> { <nl> public void serialize ( ReadResponse response , DataOutputPlus out , int version ) throws IOException <nl> diff - - git a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java <nl> index d9b0e2b . . ca135f8 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java <nl> + + + b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java <nl> @ @ - 395 , 9 + 395 , 9 @ @ public abstract class SinglePartitionReadCommand < F extends ClusteringIndexFilter <nl> nowInSec ( ) ) ; <nl> } <nl> <nl> - protected MessageOut < ReadCommand > createLegacyMessage ( ) <nl> + public MessageOut < ReadCommand > createMessage ( int version ) <nl> { <nl> - return new MessageOut < > ( MessagingService . Verb . READ , this , legacyReadCommandSerializer ) ; <nl> + return new MessageOut < > ( MessagingService . Verb . READ , this , version < MessagingService . VERSION _ 30 ? legacyReadCommandSerializer : serializer ) ; <nl> } <nl> <nl> protected void appendCQLWhereClause ( StringBuilder sb ) <nl> diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index 13632ac . . e59cd58 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 107 , 7 + 107 , 7 @ @ public final class MessagingService implements MessagingServiceMBean <nl> @ Deprecated STREAM _ INITIATE _ DONE , <nl> @ Deprecated STREAM _ REPLY , <nl> @ Deprecated STREAM _ REQUEST , <nl> - @ Deprecated RANGE _ SLICE , <nl> + RANGE _ SLICE , <nl> @ Deprecated BOOTSTRAP _ TOKEN , <nl> @ Deprecated TREE _ REQUEST , <nl> @ Deprecated TREE _ RESPONSE , <nl> @ @ - 212 , 7 + 212 , 7 @ @ public final class MessagingService implements MessagingServiceMBean <nl> put ( Verb . BATCHLOG _ MUTATION , Mutation . serializer ) ; <nl> put ( Verb . READ _ REPAIR , Mutation . serializer ) ; <nl> put ( Verb . READ , ReadCommand . serializer ) ; <nl> - put ( Verb . RANGE _ SLICE , ReadCommand . legacyRangeSliceCommandSerializer ) ; <nl> + put ( Verb . RANGE _ SLICE , ReadCommand . rangeSliceSerializer ) ; <nl> put ( Verb . PAGED _ RANGE , ReadCommand . legacyPagedRangeCommandSerializer ) ; <nl> put ( Verb . BOOTSTRAP _ TOKEN , BootStrapper . StringSerializer . instance ) ; <nl> put ( Verb . REPAIR _ MESSAGE , RepairMessage . serializer ) ; <nl> @ @ - 241 , 7 + 241 , 7 @ @ public final class MessagingService implements MessagingServiceMBean <nl> put ( Verb . BATCHLOG _ MUTATION , WriteResponse . serializer ) ; <nl> put ( Verb . READ _ REPAIR , WriteResponse . serializer ) ; <nl> put ( Verb . COUNTER _ MUTATION , WriteResponse . serializer ) ; <nl> - put ( Verb . RANGE _ SLICE , ReadResponse . legacyRangeSliceReplySerializer ) ; <nl> + put ( Verb . RANGE _ SLICE , ReadResponse . rangeSliceSerializer ) ; <nl> put ( Verb . PAGED _ RANGE , ReadResponse . legacyRangeSliceReplySerializer ) ; <nl> put ( Verb . READ , ReadResponse . serializer ) ; <nl> put ( Verb . TRUNCATE , TruncateResponse . serializer ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index cea8c73 . . 47fea8b 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 0 - beta1 
 + * Fix throwing ReadFailure instead of ReadTimeout on range queries ( CASSANDRA - 10125 ) 
 * Rewrite hinted handoff ( CASSANDRA - 6230 ) 
 * Fix query on static compact tables ( CASSANDRA - 10093 ) 
 * Fix race during construction of commit log ( CASSANDRA - 10049 ) 
 diff - - git a / src / java / org / apache / cassandra / db / PartitionRangeReadCommand . java b / src / java / org / apache / cassandra / db / PartitionRangeReadCommand . java 
 index e7288cc . . 42d5425 100644 
 - - - a / src / java / org / apache / cassandra / db / PartitionRangeReadCommand . java 
 + + + b / src / java / org / apache / cassandra / db / PartitionRangeReadCommand . java 
 @ @ - 237 , 13 + 237 , 14 @ @ public class PartitionRangeReadCommand extends ReadCommand 
 } ; 
 } 
 
 - @ SuppressWarnings ( " deprecation " ) 
 - protected MessageOut < ReadCommand > createLegacyMessage ( ) 
 + public MessageOut < ReadCommand > createMessage ( int version ) 
 { 
 - if ( this . dataRange . isPaging ( ) ) 
 - return new MessageOut < > ( MessagingService . Verb . PAGED _ RANGE , this , legacyPagedRangeCommandSerializer ) ; 
 - else 
 - return new MessageOut < > ( MessagingService . Verb . RANGE _ SLICE , this , legacyRangeSliceCommandSerializer ) ; 
 + if ( version > = MessagingService . VERSION _ 30 ) 
 + return new MessageOut < > ( MessagingService . Verb . RANGE _ SLICE , this , serializer ) ; 
 + 
 + return dataRange ( ) . isPaging ( ) 
 + ? new MessageOut < > ( MessagingService . Verb . PAGED _ RANGE , this , legacyPagedRangeCommandSerializer ) 
 + : new MessageOut < > ( MessagingService . Verb . RANGE _ SLICE , this , legacyRangeSliceCommandSerializer ) ; 
 } 
 
 protected void appendCQLWhereClause ( StringBuilder sb ) 
 diff - - git a / src / java / org / apache / cassandra / db / RangeSliceVerbHandler . java b / src / java / org / apache / cassandra / db / RangeSliceVerbHandler . java 
 index 3f1d660 . . 55826f5 100644 
 - - - a / src / java / org / apache / cassandra / db / RangeSliceVerbHandler . java 
 + + + b / src / java / org / apache / cassandra / db / RangeSliceVerbHandler . java 
 @ @ - 24 , 6 + 24 , 6 @ @ public class RangeSliceVerbHandler extends ReadCommandVerbHandler 
 @ Override 
 protected IVersionedSerializer < ReadResponse > serializer ( ) 
 { 
 - return ReadResponse . legacyRangeSliceReplySerializer ; 
 + return ReadResponse . rangeSliceSerializer ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java 
 index 4830124 . . d63a832 100644 
 - - - a / src / java / org / apache / cassandra / db / ReadCommand . java 
 + + + b / src / java / org / apache / cassandra / db / ReadCommand . java 
 @ @ - 59 , 6 + 59 , 9 @ @ public abstract class ReadCommand implements ReadQuery 
 protected static final Logger logger = LoggerFactory . getLogger ( ReadCommand . class ) ; 
 
 public static final IVersionedSerializer < ReadCommand > serializer = new Serializer ( ) ; 
 + / / For RANGE _ SLICE verb : will either dispatch on ' serializer ' for 3 . 0 or ' legacyRangeSliceCommandSerializer ' for earlier version . 
 + / / Can be removed ( and replaced by ' serializer ' ) once we drop pre - 3 . 0 backward compatibility . 
 + public static final IVersionedSerializer < ReadCommand > rangeSliceSerializer = new RangeSliceSerializer ( ) ; 
 
 public static final IVersionedSerializer < ReadCommand > legacyRangeSliceCommandSerializer = new LegacyRangeSliceCommandSerializer ( ) ; 
 public static final IVersionedSerializer < ReadCommand > legacyPagedRangeCommandSerializer = new LegacyPagedRangeCommandSerializer ( ) ; 
 @ @ - 411 , 15 + 414 , 7 @ @ public abstract class ReadCommand implements ReadQuery 
 / * * 
 * Creates a message for this command . 
 * / 
 - public MessageOut < ReadCommand > createMessage ( int version ) 
 - { 
 - if ( version > = MessagingService . VERSION _ 30 ) 
 - return new MessageOut < > ( MessagingService . Verb . READ , this , serializer ) ; 
 - 
 - return createLegacyMessage ( ) ; 
 - } 
 - 
 - protected abstract MessageOut < ReadCommand > createLegacyMessage ( ) ; 
 + public abstract MessageOut < ReadCommand > createMessage ( int version ) ; 
 
 protected abstract void appendCQLWhereClause ( StringBuilder sb ) ; 
 
 @ @ - 529 , 6 + 524 , 33 @ @ public abstract class ReadCommand implements ReadQuery 
 } 
 } 
 
 + / / Dispatch to either Serializer or LegacyRangeSliceCommandSerializer . Only useful as long as we maintain pre - 3 . 0 
 + / / compatibility 
 + private static class RangeSliceSerializer implements IVersionedSerializer < ReadCommand > 
 + { 
 + public void serialize ( ReadCommand command , DataOutputPlus out , int version ) throws IOException 
 + { 
 + if ( version < MessagingService . VERSION _ 30 ) 
 + legacyRangeSliceCommandSerializer . serialize ( command , out , version ) ; 
 + else 
 + serializer . serialize ( command , out , version ) ; 
 + } 
 + 
 + public ReadCommand deserialize ( DataInputPlus in , int version ) throws IOException 
 + { 
 + return version < MessagingService . VERSION _ 30 
 + ? legacyRangeSliceCommandSerializer . deserialize ( in , version ) 
 + : serializer . deserialize ( in , version ) ; 
 + } 
 + 
 + public long serializedSize ( ReadCommand command , int version ) 
 + { 
 + return version < MessagingService . VERSION _ 30 
 + ? legacyRangeSliceCommandSerializer . serializedSize ( command , version ) 
 + : serializer . serializedSize ( command , version ) ; 
 + } 
 + } 
 + 
 private enum LegacyType 
 { 
 GET _ BY _ NAMES ( ( byte ) 1 ) , 
 diff - - git a / src / java / org / apache / cassandra / db / ReadResponse . java b / src / java / org / apache / cassandra / db / ReadResponse . java 
 index 5f40210 . . 21f6106 100644 
 - - - a / src / java / org / apache / cassandra / db / ReadResponse . java 
 + + + b / src / java / org / apache / cassandra / db / ReadResponse . java 
 @ @ - 42 , 7 + 42 , 12 @ @ import org . apache . cassandra . utils . FBUtilities ; 
 
 public abstract class ReadResponse 
 { 
 + / / Serializer for single partition read response 
 public static final IVersionedSerializer < ReadResponse > serializer = new Serializer ( ) ; 
 + / / Serializer for partition range read response ( this actually delegate to ' serializer ' in 3 . 0 and to 
 + / / ' legacyRangeSliceReplySerializer ' in older version . 
 + public static final IVersionedSerializer < ReadResponse > rangeSliceSerializer = new RangeSliceSerializer ( ) ; 
 + / / Serializer for the pre - 3 . 0 rang slice responses . 
 public static final IVersionedSerializer < ReadResponse > legacyRangeSliceReplySerializer = new LegacyRangeSliceReplySerializer ( ) ; 
 
 / / This is used only when serializing data responses and we can ' t it easily in other cases . So this can be null , which is slighly 
 @ @ - 397 , 6 + 402 , 31 @ @ public abstract class ReadResponse 
 } 
 } 
 
 + private static class RangeSliceSerializer implements IVersionedSerializer < ReadResponse > 
 + { 
 + public void serialize ( ReadResponse response , DataOutputPlus out , int version ) throws IOException 
 + { 
 + if ( version < MessagingService . VERSION _ 30 ) 
 + legacyRangeSliceReplySerializer . serialize ( response , out , version ) ; 
 + else 
 + serializer . serialize ( response , out , version ) ; 
 + } 
 + 
 + public ReadResponse deserialize ( DataInputPlus in , int version ) throws IOException 
 + { 
 + return version < MessagingService . VERSION _ 30 
 + ? legacyRangeSliceReplySerializer . deserialize ( in , version ) 
 + : serializer . deserialize ( in , version ) ; 
 + } 
 + 
 + public long serializedSize ( ReadResponse response , int version ) 
 + { 
 + return version < MessagingService . VERSION _ 30 
 + ? legacyRangeSliceReplySerializer . serializedSize ( response , version ) 
 + : serializer . serializedSize ( response , version ) ; 
 + } 
 + } 
 + 
 private static class LegacyRangeSliceReplySerializer implements IVersionedSerializer < ReadResponse > 
 { 
 public void serialize ( ReadResponse response , DataOutputPlus out , int version ) throws IOException 
 diff - - git a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java 
 index d9b0e2b . . ca135f8 100644 
 - - - a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java 
 + + + b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java 
 @ @ - 395 , 9 + 395 , 9 @ @ public abstract class SinglePartitionReadCommand < F extends ClusteringIndexFilter 
 nowInSec ( ) ) ; 
 } 
 
 - protected MessageOut < ReadCommand > createLegacyMessage ( ) 
 + public MessageOut < ReadCommand > createMessage ( int version ) 
 { 
 - return new MessageOut < > ( MessagingService . Verb . READ , this , legacyReadCommandSerializer ) ; 
 + return new MessageOut < > ( MessagingService . Verb . READ , this , version < MessagingService . VERSION _ 30 ? legacyReadCommandSerializer : serializer ) ; 
 } 
 
 protected void appendCQLWhereClause ( StringBuilder sb ) 
 diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index 13632ac . . e59cd58 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 107 , 7 + 107 , 7 @ @ public final class MessagingService implements MessagingServiceMBean 
 @ Deprecated STREAM _ INITIATE _ DONE , 
 @ Deprecated STREAM _ REPLY , 
 @ Deprecated STREAM _ REQUEST , 
 - @ Deprecated RANGE _ SLICE , 
 + RANGE _ SLICE , 
 @ Deprecated BOOTSTRAP _ TOKEN , 
 @ Deprecated TREE _ REQUEST , 
 @ Deprecated TREE _ RESPONSE , 
 @ @ - 212 , 7 + 212 , 7 @ @ public final class MessagingService implements MessagingServiceMBean 
 put ( Verb . BATCHLOG _ MUTATION , Mutation . serializer ) ; 
 put ( Verb . READ _ REPAIR , Mutation . serializer ) ; 
 put ( Verb . READ , ReadCommand . serializer ) ; 
 - put ( Verb . RANGE _ SLICE , ReadCommand . legacyRangeSliceCommandSerializer ) ; 
 + put ( Verb . RANGE _ SLICE , ReadCommand . rangeSliceSerializer ) ; 
 put ( Verb . PAGED _ RANGE , ReadCommand . legacyPagedRangeCommandSerializer ) ; 
 put ( Verb . BOOTSTRAP _ TOKEN , BootStrapper . StringSerializer . instance ) ; 
 put ( Verb . REPAIR _ MESSAGE , RepairMessage . serializer ) ; 
 @ @ - 241 , 7 + 241 , 7 @ @ public final class MessagingService implements MessagingServiceMBean 
 put ( Verb . BATCHLOG _ MUTATION , WriteResponse . serializer ) ; 
 put ( Verb . READ _ REPAIR , WriteResponse . serializer ) ; 
 put ( Verb . COUNTER _ MUTATION , WriteResponse . serializer ) ; 
 - put ( Verb . RANGE _ SLICE , ReadResponse . legacyRangeSliceReplySerializer ) ; 
 + put ( Verb . RANGE _ SLICE , ReadResponse . rangeSliceSerializer ) ; 
 put ( Verb . PAGED _ RANGE , ReadResponse . legacyRangeSliceReplySerializer ) ; 
 put ( Verb . READ , ReadResponse . serializer ) ; 
 put ( Verb . TRUNCATE , TruncateResponse . serializer ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
