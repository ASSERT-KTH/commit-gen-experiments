BLEU SCORE: 0.06220117374063391

TEST MSG: minor network authz improvements
GENERATED MSG: Validate login for USE queries

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 50a17ab . . 051e20a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * minor network authz improvements ( Cassandra - 14413 ) <nl> * Automatic sstable upgrades ( CASSANDRA - 14197 ) <nl> * Replace deprecated junit . framework . Assert usages with org . junit . Assert ( CASSANDRA - 14431 ) <nl> * cassandra - stress throws NPE if insert section isn ' t specified in user profile ( CASSSANDRA - 14426 ) <nl> diff - - git a / src / java / org / apache / cassandra / auth / DCPermissions . java b / src / java / org / apache / cassandra / auth / DCPermissions . java <nl> index 46cdad9 . . d04242d 100644 <nl> - - - a / src / java / org / apache / cassandra / auth / DCPermissions . java <nl> + + + b / src / java / org / apache / cassandra / auth / DCPermissions . java <nl> @ @ - 31 , 7 + 31 , 15 @ @ import org . apache . cassandra . exceptions . InvalidRequestException ; <nl> <nl> public abstract class DCPermissions <nl> { <nl> + / * * <nl> + * returns true if the user can access the given dc <nl> + * / <nl> public abstract boolean canAccess ( String dc ) ; <nl> + <nl> + / * * <nl> + * Indicates whether the permissions object explicitly allow access to <nl> + * some dcs ( true ) or if it implicitly allows access to all dcs ( false ) <nl> + * / <nl> public abstract boolean restrictsAccess ( ) ; <nl> public abstract Set < String > allowedDCs ( ) ; <nl> public abstract void validate ( ) ; <nl> @ @ - 85 , 8 + 93 , 6 @ @ public abstract class DCPermissions <nl> <nl> public void validate ( ) <nl> { <nl> - Datacenters . getValidDatacenters ( ) ; <nl> - <nl> Set < String > unknownDcs = Sets . difference ( subset , Datacenters . getValidDatacenters ( ) ) ; <nl> if ( ! unknownDcs . isEmpty ( ) ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateRoleStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateRoleStatement . java <nl> index bd9a5a4 . . 0e0afec 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateRoleStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateRoleStatement . java <nl> @ @ - 77 , 7 + 77 , 7 @ @ public class CreateRoleStatement extends AuthenticationStatement <nl> return null ; <nl> <nl> DatabaseDescriptor . getRoleManager ( ) . createRole ( state . getUser ( ) , role , opts ) ; <nl> - if ( dcPermissions . restrictsAccess ( ) ) <nl> + if ( DatabaseDescriptor . getNetworkAuthorizer ( ) . requireAuthorization ( ) ) <nl> { <nl> DatabaseDescriptor . getNetworkAuthorizer ( ) . setRoleDatacenters ( role , dcPermissions ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / ClientState . java b / src / java / org / apache / cassandra / service / ClientState . java <nl> index 045cc8c . . c854737 100644 <nl> - - - a / src / java / org / apache / cassandra / service / ClientState . java <nl> + + + b / src / java / org / apache / cassandra / service / ClientState . java <nl> @ @ - 38 , 6 + 38 , 7 @ @ import org . apache . cassandra . cql3 . QueryHandler ; <nl> import org . apache . cassandra . cql3 . QueryProcessor ; <nl> import org . apache . cassandra . cql3 . functions . Function ; <nl> import org . apache . cassandra . db . SystemKeyspace ; <nl> + import org . apache . cassandra . dht . Datacenters ; <nl> import org . apache . cassandra . exceptions . AuthenticationException ; <nl> import org . apache . cassandra . exceptions . InvalidRequestException ; <nl> import org . apache . cassandra . exceptions . UnauthorizedException ; <nl> @ @ - 440 , 7 + 441 , 7 @ @ public class ClientState <nl> } <nl> else if ( ! user . hasLocalAccess ( ) ) <nl> { <nl> - throw new UnauthorizedException ( " You do not have access to this datacenter " ) ; <nl> + throw new UnauthorizedException ( String . format ( " You do not have access to this datacenter ( % s ) " , Datacenters . thisDatacenter ( ) ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / auth / CassandraNetworkAuthorizerTest . java b / test / unit / org / apache / cassandra / auth / CassandraNetworkAuthorizerTest . java <nl> index 6948203 . . f0eed8c 100644 <nl> - - - a / test / unit / org / apache / cassandra / auth / CassandraNetworkAuthorizerTest . java <nl> + + + b / test / unit / org / apache / cassandra / auth / CassandraNetworkAuthorizerTest . java <nl> @ @ - 206 , 7 + 206 , 7 @ @ public class CassandraNetworkAuthorizerTest <nl> / / user should implicitly have access to all datacenters <nl> auth ( " CREATE ROLE % s WITH password = ' password ' AND LOGIN = true " , username ) ; <nl> Assert . assertEquals ( DCPermissions . all ( ) , dcPerms ( username ) ) ; <nl> - assertNoDcPermRow ( username ) ; <nl> + assertDcPermRow ( username ) ; <nl> <nl> / / unless explicitly restricted <nl> auth ( " ALTER ROLE % s WITH ACCESS TO DATACENTERS { ' dc1 ' , ' dc2 ' } " , username ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 03218b9 . . 4a67f9c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 2 , 6 + 2 , 7 @ @ <nl> * fix symlinks under data dir not working ( CASSANDRA - 5185 ) <nl> * fix bug in compact storage metadata handling ( CASSANDRA - 5189 ) <nl> * Validate login for USE queries ( CASSANDRA - 5207 ) <nl> + * cli : remove default username and password ( CASSANDRA - 5208 ) <nl> <nl> 1 . 2 . 1 <nl> * stream undelivered hints on decommission ( CASSANDRA - 5128 ) <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliOptions . java b / src / java / org / apache / cassandra / cli / CliOptions . java <nl> index b684cc4 . . fc5eb03 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliOptions . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliOptions . java <nl> @ @ - 136 , 19 + 136 , 11 @ @ public class CliOptions <nl> { <nl> css . username = cmd . getOptionValue ( USERNAME _ OPTION ) ; <nl> } <nl> - else <nl> - { <nl> - css . username = " default " ; <nl> - } <nl> <nl> if ( cmd . hasOption ( PASSWORD _ OPTION ) ) <nl> { <nl> css . password = cmd . getOptionValue ( PASSWORD _ OPTION ) ; <nl> } <nl> - else <nl> - { <nl> - css . password = " " ; <nl> - } <nl> <nl> / / Look for keyspace <nl> if ( cmd . hasOption ( KEYSPACE _ OPTION ) )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 50a17ab . . 051e20a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * minor network authz improvements ( Cassandra - 14413 ) 
 * Automatic sstable upgrades ( CASSANDRA - 14197 ) 
 * Replace deprecated junit . framework . Assert usages with org . junit . Assert ( CASSANDRA - 14431 ) 
 * cassandra - stress throws NPE if insert section isn ' t specified in user profile ( CASSSANDRA - 14426 ) 
 diff - - git a / src / java / org / apache / cassandra / auth / DCPermissions . java b / src / java / org / apache / cassandra / auth / DCPermissions . java 
 index 46cdad9 . . d04242d 100644 
 - - - a / src / java / org / apache / cassandra / auth / DCPermissions . java 
 + + + b / src / java / org / apache / cassandra / auth / DCPermissions . java 
 @ @ - 31 , 7 + 31 , 15 @ @ import org . apache . cassandra . exceptions . InvalidRequestException ; 
 
 public abstract class DCPermissions 
 { 
 + / * * 
 + * returns true if the user can access the given dc 
 + * / 
 public abstract boolean canAccess ( String dc ) ; 
 + 
 + / * * 
 + * Indicates whether the permissions object explicitly allow access to 
 + * some dcs ( true ) or if it implicitly allows access to all dcs ( false ) 
 + * / 
 public abstract boolean restrictsAccess ( ) ; 
 public abstract Set < String > allowedDCs ( ) ; 
 public abstract void validate ( ) ; 
 @ @ - 85 , 8 + 93 , 6 @ @ public abstract class DCPermissions 
 
 public void validate ( ) 
 { 
 - Datacenters . getValidDatacenters ( ) ; 
 - 
 Set < String > unknownDcs = Sets . difference ( subset , Datacenters . getValidDatacenters ( ) ) ; 
 if ( ! unknownDcs . isEmpty ( ) ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateRoleStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateRoleStatement . java 
 index bd9a5a4 . . 0e0afec 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateRoleStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateRoleStatement . java 
 @ @ - 77 , 7 + 77 , 7 @ @ public class CreateRoleStatement extends AuthenticationStatement 
 return null ; 
 
 DatabaseDescriptor . getRoleManager ( ) . createRole ( state . getUser ( ) , role , opts ) ; 
 - if ( dcPermissions . restrictsAccess ( ) ) 
 + if ( DatabaseDescriptor . getNetworkAuthorizer ( ) . requireAuthorization ( ) ) 
 { 
 DatabaseDescriptor . getNetworkAuthorizer ( ) . setRoleDatacenters ( role , dcPermissions ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / ClientState . java b / src / java / org / apache / cassandra / service / ClientState . java 
 index 045cc8c . . c854737 100644 
 - - - a / src / java / org / apache / cassandra / service / ClientState . java 
 + + + b / src / java / org / apache / cassandra / service / ClientState . java 
 @ @ - 38 , 6 + 38 , 7 @ @ import org . apache . cassandra . cql3 . QueryHandler ; 
 import org . apache . cassandra . cql3 . QueryProcessor ; 
 import org . apache . cassandra . cql3 . functions . Function ; 
 import org . apache . cassandra . db . SystemKeyspace ; 
 + import org . apache . cassandra . dht . Datacenters ; 
 import org . apache . cassandra . exceptions . AuthenticationException ; 
 import org . apache . cassandra . exceptions . InvalidRequestException ; 
 import org . apache . cassandra . exceptions . UnauthorizedException ; 
 @ @ - 440 , 7 + 441 , 7 @ @ public class ClientState 
 } 
 else if ( ! user . hasLocalAccess ( ) ) 
 { 
 - throw new UnauthorizedException ( " You do not have access to this datacenter " ) ; 
 + throw new UnauthorizedException ( String . format ( " You do not have access to this datacenter ( % s ) " , Datacenters . thisDatacenter ( ) ) ) ; 
 } 
 } 
 
 diff - - git a / test / unit / org / apache / cassandra / auth / CassandraNetworkAuthorizerTest . java b / test / unit / org / apache / cassandra / auth / CassandraNetworkAuthorizerTest . java 
 index 6948203 . . f0eed8c 100644 
 - - - a / test / unit / org / apache / cassandra / auth / CassandraNetworkAuthorizerTest . java 
 + + + b / test / unit / org / apache / cassandra / auth / CassandraNetworkAuthorizerTest . java 
 @ @ - 206 , 7 + 206 , 7 @ @ public class CassandraNetworkAuthorizerTest 
 / / user should implicitly have access to all datacenters 
 auth ( " CREATE ROLE % s WITH password = ' password ' AND LOGIN = true " , username ) ; 
 Assert . assertEquals ( DCPermissions . all ( ) , dcPerms ( username ) ) ; 
 - assertNoDcPermRow ( username ) ; 
 + assertDcPermRow ( username ) ; 
 
 / / unless explicitly restricted 
 auth ( " ALTER ROLE % s WITH ACCESS TO DATACENTERS { ' dc1 ' , ' dc2 ' } " , username ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 03218b9 . . 4a67f9c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 2 , 6 + 2 , 7 @ @ 
 * fix symlinks under data dir not working ( CASSANDRA - 5185 ) 
 * fix bug in compact storage metadata handling ( CASSANDRA - 5189 ) 
 * Validate login for USE queries ( CASSANDRA - 5207 ) 
 + * cli : remove default username and password ( CASSANDRA - 5208 ) 
 
 1 . 2 . 1 
 * stream undelivered hints on decommission ( CASSANDRA - 5128 ) 
 diff - - git a / src / java / org / apache / cassandra / cli / CliOptions . java b / src / java / org / apache / cassandra / cli / CliOptions . java 
 index b684cc4 . . fc5eb03 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliOptions . java 
 + + + b / src / java / org / apache / cassandra / cli / CliOptions . java 
 @ @ - 136 , 19 + 136 , 11 @ @ public class CliOptions 
 { 
 css . username = cmd . getOptionValue ( USERNAME _ OPTION ) ; 
 } 
 - else 
 - { 
 - css . username = " default " ; 
 - } 
 
 if ( cmd . hasOption ( PASSWORD _ OPTION ) ) 
 { 
 css . password = cmd . getOptionValue ( PASSWORD _ OPTION ) ; 
 } 
 - else 
 - { 
 - css . password = " " ; 
 - } 
 
 / / Look for keyspace 
 if ( cmd . hasOption ( KEYSPACE _ OPTION ) )
