BLEU SCORE: 0.017081056798999895

TEST MSG: Ninja : Fix string format arguments for dropped columns
GENERATED MSG: fix missing update of local deletion time introduced in # 658 .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / LegacyLayout . java b / src / java / org / apache / cassandra / db / LegacyLayout . java <nl> index 0044959 . . d3c8a0e 100644 <nl> - - - a / src / java / org / apache / cassandra / db / LegacyLayout . java <nl> + + + b / src / java / org / apache / cassandra / db / LegacyLayout . java <nl> @ @ - 1127 , 7 + 1127 , 7 @ @ public abstract class LegacyLayout <nl> throw new IllegalStateException ( String . format ( " Got cell for unknown column % s in sstable of % s . % s : " + <nl> " This suggest a problem with the schema which doesn ' t list " + <nl> " this column . Even if that column was dropped , it should have " + <nl> - " been listed as such " , metadata . ksName , metadata . cfName , UTF8Type . instance . compose ( e . columnName ) ) , e ) ; <nl> + " been listed as such " , UTF8Type . instance . compose ( e . columnName ) , metadata . ksName , metadata . cfName ) , e ) ; <nl> <nl> throw e ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamily . java b / src / java / org / apache / cassandra / db / ColumnFamily . java <nl> index 3a26526 . . fe25ace 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamily . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamily . java <nl> @ @ - 242 , 7 + 242 , 7 @ @ public final class ColumnFamily implements IColumnContainer <nl> <nl> public void delete ( ColumnFamily cf2 ) <nl> { <nl> - FBUtilities . atomicSetMax ( localDeletionTime , cf2 . getLocalDeletionTime ( ) ) ; <nl> + FBUtilities . atomicSetMax ( localDeletionTime , cf2 . getLocalDeletionTime ( ) ) ; / / do this first so we won ' t have a column that ' s " deleted " but has no local deletion time <nl> FBUtilities . atomicSetMax ( markedForDeleteAt , cf2 . getMarkedForDeleteAt ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index c0e27dd . . f5394c2 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 429 , 11 + 429 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> their contents ; just the object itself as a " tombstone " that can be used to repair other <nl> replicas that do not know about the deletion . <nl> * / <nl> - static ColumnFamily removeDeleted ( ColumnFamily cf ) <nl> - { <nl> - return removeDeleted ( cf , CompactionManager . getDefaultGCBefore ( ) ) ; <nl> - } <nl> - <nl> public static ColumnFamily removeDeleted ( ColumnFamily cf , int gcBefore ) <nl> { <nl> if ( cf = = null ) <nl> diff - - git a / src / java / org / apache / cassandra / db / SuperColumn . java b / src / java / org / apache / cassandra / db / SuperColumn . java <nl> index 107a7cc . . 350a4d9 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SuperColumn . java <nl> + + + b / src / java / org / apache / cassandra / db / SuperColumn . java <nl> @ @ - 183 , 6 + 183 , 7 @ @ public final class SuperColumn implements IColumn , IColumnContainer <nl> { <nl> 	 addColumn ( subColumn ) ; <nl> } <nl> + FBUtilities . atomicSetMax ( localDeletionTime , column . getLocalDeletionTime ( ) ) ; / / do this first so we won ' t have a column that ' s " deleted " but has no local deletion time <nl> FBUtilities . atomicSetMax ( markedForDeleteAt , column . getMarkedForDeleteAt ( ) ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / AbstractType . java b / src / java / org / apache / cassandra / db / marshal / AbstractType . java <nl> index 2772bc9 . . b3cf7b1 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / AbstractType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / AbstractType . java <nl> @ @ - 82 , 7 + 82 , 7 @ @ public abstract class AbstractType implements Comparator < byte [ ] > <nl> StringBuilder builder = new StringBuilder ( ) ; <nl> for ( IColumn column : columns ) <nl> { <nl> - builder . append ( getString ( column . name ( ) ) ) . append ( " , " ) ; <nl> + builder . append ( column . getString ( this ) ) . append ( " , " ) ; <nl> } <nl> return builder . toString ( ) ; <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / LegacyLayout . java b / src / java / org / apache / cassandra / db / LegacyLayout . java 
 index 0044959 . . d3c8a0e 100644 
 - - - a / src / java / org / apache / cassandra / db / LegacyLayout . java 
 + + + b / src / java / org / apache / cassandra / db / LegacyLayout . java 
 @ @ - 1127 , 7 + 1127 , 7 @ @ public abstract class LegacyLayout 
 throw new IllegalStateException ( String . format ( " Got cell for unknown column % s in sstable of % s . % s : " + 
 " This suggest a problem with the schema which doesn ' t list " + 
 " this column . Even if that column was dropped , it should have " + 
 - " been listed as such " , metadata . ksName , metadata . cfName , UTF8Type . instance . compose ( e . columnName ) ) , e ) ; 
 + " been listed as such " , UTF8Type . instance . compose ( e . columnName ) , metadata . ksName , metadata . cfName ) , e ) ; 
 
 throw e ; 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamily . java b / src / java / org / apache / cassandra / db / ColumnFamily . java 
 index 3a26526 . . fe25ace 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamily . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamily . java 
 @ @ - 242 , 7 + 242 , 7 @ @ public final class ColumnFamily implements IColumnContainer 
 
 public void delete ( ColumnFamily cf2 ) 
 { 
 - FBUtilities . atomicSetMax ( localDeletionTime , cf2 . getLocalDeletionTime ( ) ) ; 
 + FBUtilities . atomicSetMax ( localDeletionTime , cf2 . getLocalDeletionTime ( ) ) ; / / do this first so we won ' t have a column that ' s " deleted " but has no local deletion time 
 FBUtilities . atomicSetMax ( markedForDeleteAt , cf2 . getMarkedForDeleteAt ( ) ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index c0e27dd . . f5394c2 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 429 , 11 + 429 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 their contents ; just the object itself as a " tombstone " that can be used to repair other 
 replicas that do not know about the deletion . 
 * / 
 - static ColumnFamily removeDeleted ( ColumnFamily cf ) 
 - { 
 - return removeDeleted ( cf , CompactionManager . getDefaultGCBefore ( ) ) ; 
 - } 
 - 
 public static ColumnFamily removeDeleted ( ColumnFamily cf , int gcBefore ) 
 { 
 if ( cf = = null ) 
 diff - - git a / src / java / org / apache / cassandra / db / SuperColumn . java b / src / java / org / apache / cassandra / db / SuperColumn . java 
 index 107a7cc . . 350a4d9 100644 
 - - - a / src / java / org / apache / cassandra / db / SuperColumn . java 
 + + + b / src / java / org / apache / cassandra / db / SuperColumn . java 
 @ @ - 183 , 6 + 183 , 7 @ @ public final class SuperColumn implements IColumn , IColumnContainer 
 { 
 	 addColumn ( subColumn ) ; 
 } 
 + FBUtilities . atomicSetMax ( localDeletionTime , column . getLocalDeletionTime ( ) ) ; / / do this first so we won ' t have a column that ' s " deleted " but has no local deletion time 
 FBUtilities . atomicSetMax ( markedForDeleteAt , column . getMarkedForDeleteAt ( ) ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / AbstractType . java b / src / java / org / apache / cassandra / db / marshal / AbstractType . java 
 index 2772bc9 . . b3cf7b1 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / AbstractType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / AbstractType . java 
 @ @ - 82 , 7 + 82 , 7 @ @ public abstract class AbstractType implements Comparator < byte [ ] > 
 StringBuilder builder = new StringBuilder ( ) ; 
 for ( IColumn column : columns ) 
 { 
 - builder . append ( getString ( column . name ( ) ) ) . append ( " , " ) ; 
 + builder . append ( column . getString ( this ) ) . append ( " , " ) ; 
 } 
 return builder . toString ( ) ; 
 }
