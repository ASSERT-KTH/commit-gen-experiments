BLEU SCORE: 0.019648763141608138

TEST MSG: JSON datetime formatting needs timezone
GENERATED MSG: Add sub - ms precision formats to the timestamp parser

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9f67555 . . 1b94b2d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 6 <nl> + * JSON datetime formatting needs timezone ( CASSANDRA - 11137 ) <nl> * Add support to rebuild from specific range ( CASSANDRA - 10409 ) <nl> * Optimize the overlapping lookup by calculating all the <nl> bounds in advance ( CASSANDRA - 11571 ) <nl> diff - - git a / src / java / org / apache / cassandra / serializers / TimestampSerializer . java b / src / java / org / apache / cassandra / serializers / TimestampSerializer . java <nl> index fbd98d1 . . 9bd9a8d 100644 <nl> - - - a / src / java / org / apache / cassandra / serializers / TimestampSerializer . java <nl> + + + b / src / java / org / apache / cassandra / serializers / TimestampSerializer . java <nl> @ @ - 49 , 11 + 49 , 11 @ @ public class TimestampSerializer implements TypeSerializer < Date > <nl> " yyyy - MM - dd HH : mm : ssX " , <nl> " yyyy - MM - dd HH : mm : ssXX " , <nl> " yyyy - MM - dd HH : mm : ssXXX " , <nl> - " yyyy - MM - dd HH : mm : ss . SSS " , / / TO _ JSON _ FORMAT <nl> + " yyyy - MM - dd HH : mm : ss . SSS " , <nl> " yyyy - MM - dd HH : mm : ss . SSS z " , <nl> " yyyy - MM - dd HH : mm : ss . SSS zz " , <nl> " yyyy - MM - dd HH : mm : ss . SSS zzz " , <nl> - " yyyy - MM - dd HH : mm : ss . SSSX " , <nl> + " yyyy - MM - dd HH : mm : ss . SSSX " , / / TO _ JSON _ FORMAT <nl> " yyyy - MM - dd HH : mm : ss . SSSXX " , <nl> " yyyy - MM - dd HH : mm : ss . SSSXXX " , <nl> " yyyy - MM - dd ' T ' HH : mm " , <nl> @ @ - 108 , 11 + 108 , 14 @ @ public class TimestampSerializer implements TypeSerializer < Date > <nl> } <nl> } ; <nl> <nl> + private static final String TO _ JSON _ FORMAT = dateStringPatterns [ 19 ] ; <nl> private static final ThreadLocal < SimpleDateFormat > FORMATTER _ TO _ JSON = new ThreadLocal < SimpleDateFormat > ( ) <nl> { <nl> protected SimpleDateFormat initialValue ( ) <nl> { <nl> - return new SimpleDateFormat ( dateStringPatterns [ 15 ] ) ; <nl> + SimpleDateFormat sdf = new SimpleDateFormat ( TO _ JSON _ FORMAT ) ; <nl> + sdf . setTimeZone ( TimeZone . getTimeZone ( " UTC " ) ) ; <nl> + return sdf ; <nl> } <nl> } ; <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / JsonTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / JsonTest . java <nl> index 43d5309 . . 08bb8a7 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / JsonTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / JsonTest . java <nl> @ @ - 618 , 8 + 618 , 10 @ @ public class JsonTest extends CQLTester <nl> assertRows ( execute ( " SELECT k , toJson ( timeval ) FROM % s WHERE k = ? " , 0 ) , row ( 0 , " \ " 00 : 00 : 00 . 000000123 \ " " ) ) ; <nl> <nl> / / = = = = = = = = = = = = = = = = timestamp = = = = = = = = = = = = = = = = <nl> - execute ( " INSERT INTO % s ( k , timestampval ) VALUES ( ? , ? ) " , 0 , new SimpleDateFormat ( " y - M - d " ) . parse ( " 2014 - 01 - 01 " ) ) ; <nl> - assertRows ( execute ( " SELECT k , toJson ( timestampval ) FROM % s WHERE k = ? " , 0 ) , row ( 0 , " \ " 2014 - 01 - 01 00 : 00 : 00 . 000 \ " " ) ) ; <nl> + SimpleDateFormat sdf = new SimpleDateFormat ( " y - M - d " ) ; <nl> + sdf . setTimeZone ( TimeZone . getTimeZone ( " UDT " ) ) ; <nl> + execute ( " INSERT INTO % s ( k , timestampval ) VALUES ( ? , ? ) " , 0 , sdf . parse ( " 2014 - 01 - 01 " ) ) ; <nl> + assertRows ( execute ( " SELECT k , toJson ( timestampval ) FROM % s WHERE k = ? " , 0 ) , row ( 0 , " \ " 2014 - 01 - 01 00 : 00 : 00 . 000Z \ " " ) ) ; <nl> <nl> / / = = = = = = = = = = = = = = = = timeuuid = = = = = = = = = = = = = = = = <nl> execute ( " INSERT INTO % s ( k , timeuuidval ) VALUES ( ? , ? ) " , 0 , UUID . fromString ( " 6bddc89a - 5644 - 11e4 - 97fc - 56847afe9799 " ) ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c012148 . . 57c1896 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 2 , 6 + 2 , 7 @ @ <nl> * Optimize FD phi calculation ( CASSANDRA - 6386 ) <nl> * Improve initial FD phi estimate when starting up ( CASSANDRA - 6385 ) <nl> * Don ' t list CQL3 table in CLI describe even if named explicitely ( CASSANDRA - 5750 ) <nl> + * cqlsh : quote single quotes in strings inside collections ( CASSANDRA - 6172 ) <nl> <nl> <nl> 1 . 2 . 12 <nl> diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py <nl> index b571033 . . 44392ce 100644 <nl> - - - a / pylib / cqlshlib / formatting . py <nl> + + + b / pylib / cqlshlib / formatting . py <nl> @ @ - 180 , 6 + 180 , 8 @ @ def strftime ( time _ format , seconds ) : <nl> @ formatter _ for ( ' text ' ) <nl> def format _ value _ text ( val , encoding , colormap , quote = False , * * _ ) : <nl> escapedval = val . replace ( u ' \ \ ' , u ' \ \ \ \ ' ) <nl> + if quote : <nl> + escapedval = escapedval . replace ( " ' " , " ' ' " ) <nl> escapedval = unicode _ controlchars _ re . sub ( _ show _ control _ chars , escapedval ) <nl> bval = escapedval . encode ( encoding , ' backslashreplace ' ) <nl> if quote :

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9f67555 . . 1b94b2d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 6 
 + * JSON datetime formatting needs timezone ( CASSANDRA - 11137 ) 
 * Add support to rebuild from specific range ( CASSANDRA - 10409 ) 
 * Optimize the overlapping lookup by calculating all the 
 bounds in advance ( CASSANDRA - 11571 ) 
 diff - - git a / src / java / org / apache / cassandra / serializers / TimestampSerializer . java b / src / java / org / apache / cassandra / serializers / TimestampSerializer . java 
 index fbd98d1 . . 9bd9a8d 100644 
 - - - a / src / java / org / apache / cassandra / serializers / TimestampSerializer . java 
 + + + b / src / java / org / apache / cassandra / serializers / TimestampSerializer . java 
 @ @ - 49 , 11 + 49 , 11 @ @ public class TimestampSerializer implements TypeSerializer < Date > 
 " yyyy - MM - dd HH : mm : ssX " , 
 " yyyy - MM - dd HH : mm : ssXX " , 
 " yyyy - MM - dd HH : mm : ssXXX " , 
 - " yyyy - MM - dd HH : mm : ss . SSS " , / / TO _ JSON _ FORMAT 
 + " yyyy - MM - dd HH : mm : ss . SSS " , 
 " yyyy - MM - dd HH : mm : ss . SSS z " , 
 " yyyy - MM - dd HH : mm : ss . SSS zz " , 
 " yyyy - MM - dd HH : mm : ss . SSS zzz " , 
 - " yyyy - MM - dd HH : mm : ss . SSSX " , 
 + " yyyy - MM - dd HH : mm : ss . SSSX " , / / TO _ JSON _ FORMAT 
 " yyyy - MM - dd HH : mm : ss . SSSXX " , 
 " yyyy - MM - dd HH : mm : ss . SSSXXX " , 
 " yyyy - MM - dd ' T ' HH : mm " , 
 @ @ - 108 , 11 + 108 , 14 @ @ public class TimestampSerializer implements TypeSerializer < Date > 
 } 
 } ; 
 
 + private static final String TO _ JSON _ FORMAT = dateStringPatterns [ 19 ] ; 
 private static final ThreadLocal < SimpleDateFormat > FORMATTER _ TO _ JSON = new ThreadLocal < SimpleDateFormat > ( ) 
 { 
 protected SimpleDateFormat initialValue ( ) 
 { 
 - return new SimpleDateFormat ( dateStringPatterns [ 15 ] ) ; 
 + SimpleDateFormat sdf = new SimpleDateFormat ( TO _ JSON _ FORMAT ) ; 
 + sdf . setTimeZone ( TimeZone . getTimeZone ( " UTC " ) ) ; 
 + return sdf ; 
 } 
 } ; 
 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / JsonTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / JsonTest . java 
 index 43d5309 . . 08bb8a7 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / JsonTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / JsonTest . java 
 @ @ - 618 , 8 + 618 , 10 @ @ public class JsonTest extends CQLTester 
 assertRows ( execute ( " SELECT k , toJson ( timeval ) FROM % s WHERE k = ? " , 0 ) , row ( 0 , " \ " 00 : 00 : 00 . 000000123 \ " " ) ) ; 
 
 / / = = = = = = = = = = = = = = = = timestamp = = = = = = = = = = = = = = = = 
 - execute ( " INSERT INTO % s ( k , timestampval ) VALUES ( ? , ? ) " , 0 , new SimpleDateFormat ( " y - M - d " ) . parse ( " 2014 - 01 - 01 " ) ) ; 
 - assertRows ( execute ( " SELECT k , toJson ( timestampval ) FROM % s WHERE k = ? " , 0 ) , row ( 0 , " \ " 2014 - 01 - 01 00 : 00 : 00 . 000 \ " " ) ) ; 
 + SimpleDateFormat sdf = new SimpleDateFormat ( " y - M - d " ) ; 
 + sdf . setTimeZone ( TimeZone . getTimeZone ( " UDT " ) ) ; 
 + execute ( " INSERT INTO % s ( k , timestampval ) VALUES ( ? , ? ) " , 0 , sdf . parse ( " 2014 - 01 - 01 " ) ) ; 
 + assertRows ( execute ( " SELECT k , toJson ( timestampval ) FROM % s WHERE k = ? " , 0 ) , row ( 0 , " \ " 2014 - 01 - 01 00 : 00 : 00 . 000Z \ " " ) ) ; 
 
 / / = = = = = = = = = = = = = = = = timeuuid = = = = = = = = = = = = = = = = 
 execute ( " INSERT INTO % s ( k , timeuuidval ) VALUES ( ? , ? ) " , 0 , UUID . fromString ( " 6bddc89a - 5644 - 11e4 - 97fc - 56847afe9799 " ) ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c012148 . . 57c1896 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 2 , 6 + 2 , 7 @ @ 
 * Optimize FD phi calculation ( CASSANDRA - 6386 ) 
 * Improve initial FD phi estimate when starting up ( CASSANDRA - 6385 ) 
 * Don ' t list CQL3 table in CLI describe even if named explicitely ( CASSANDRA - 5750 ) 
 + * cqlsh : quote single quotes in strings inside collections ( CASSANDRA - 6172 ) 
 
 
 1 . 2 . 12 
 diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py 
 index b571033 . . 44392ce 100644 
 - - - a / pylib / cqlshlib / formatting . py 
 + + + b / pylib / cqlshlib / formatting . py 
 @ @ - 180 , 6 + 180 , 8 @ @ def strftime ( time _ format , seconds ) : 
 @ formatter _ for ( ' text ' ) 
 def format _ value _ text ( val , encoding , colormap , quote = False , * * _ ) : 
 escapedval = val . replace ( u ' \ \ ' , u ' \ \ \ \ ' ) 
 + if quote : 
 + escapedval = escapedval . replace ( " ' " , " ' ' " ) 
 escapedval = unicode _ controlchars _ re . sub ( _ show _ control _ chars , escapedval ) 
 bval = escapedval . encode ( encoding , ' backslashreplace ' ) 
 if quote :
