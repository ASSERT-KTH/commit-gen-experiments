BLEU SCORE: 0.03214954573057458

TEST MSG: ( cqlsh ) tab completion for triggers
GENERATED MSG: cqlsh : add COPY command to load data from CSV flat files

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c4698d6 . . 1706faf 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 1 <nl> + * ( cqlsh ) tab - completion for triggers ( CASSANDRA - 7824 ) <nl> * ( cqlsh ) : Support for query paging ( CASSANDRA - 7514 ) <nl> * ( cqlsh ) : Show progress of COPY operations ( CASSANDRA - 7789 ) <nl> * Add syntax to remove multiple elements from a map ( CASSANDRA - 6599 ) <nl> diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index d61a008 . . fa5de05 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 711 , 6 + 711 , 14 @ @ class Shell ( cmd . Cmd ) : <nl> <nl> return cql3handling . UserTypesMeta . from _ layout ( data ) <nl> <nl> + def get _ trigger _ names ( self , ksname = None ) : <nl> + if ksname is None : <nl> + ksname = self . current _ keyspace <nl> + <nl> + return [ trigger . name <nl> + for table in self . get _ keyspace _ meta ( ksname ) . tables . values ( ) <nl> + for trigger in table . triggers . values ( ) ] <nl> + <nl> def reset _ statement ( self ) : <nl> self . reset _ prompt ( ) <nl> self . statement . truncate ( 0 ) <nl> diff - - git a / doc / cql3 / CQL . textile b / doc / cql3 / CQL . textile <nl> index 611bbb8 . . 3b322d5 100644 <nl> - - - a / doc / cql3 / CQL . textile <nl> + + + b / doc / cql3 / CQL . textile <nl> @ @ - 540 , 6 + 540 , 39 @ @ The @ DROP TYPE @ statement results in the immediate , irreversible removal of a ty <nl> <nl> If the type does not exist , an error will be returned unless @ IF EXISTS @ is used , in which case the operation is a no - op . <nl> <nl> + h3 ( # createTriggerStmt ) . CREATE TRIGGER <nl> + <nl> + _ _ Syntax : _ _ <nl> + <nl> + bc ( syntax ) . . <nl> + < create - trigger - stmt > : : = CREATE TRIGGER ( IF NOT EXISTS ) ? ( < triggername > ) ? <nl> + ON < tablename > <nl> + USING < string > <nl> + <nl> + p . <nl> + _ _ Sample : _ _ <nl> + <nl> + bc ( sample ) . <nl> + CREATE TRIGGER myTrigger ON myTable USING ' org . apache . cassandra . triggers . InvertedIndex ' ; <nl> + <nl> + The actual logic that makes up the trigger can be written in any Java ( JVM ) language and exists outside the database . You place the trigger code in a @ lib / triggers @ subdirectory of the Cassandra installation directory , it loads during cluster startup , and exists on every node that participates in a cluster . The trigger defined on a table fires before a requested DML statement occurs , which ensures the atomicity of the transaction . <nl> + <nl> + h3 ( # dropTriggerStmt ) . DROP TRIGGER <nl> + <nl> + _ _ Syntax : _ _ <nl> + <nl> + bc ( syntax ) . . <nl> + < drop - trigger - stmt > : : = DROP TRIGGER ( IF EXISTS ) ? ( < triggername > ) ? <nl> + ON < tablename > <nl> + <nl> + p . <nl> + _ _ Sample : _ _ <nl> + <nl> + bc ( sample ) . <nl> + DROP TRIGGER myTrigger ON myTable ; <nl> + <nl> + @ DROP TRIGGER @ statement removes the registration of a trigger created using @ CREATE TRIGGER @ . <nl> + <nl> h2 ( # dataManipulation ) . Data Manipulation <nl> <nl> h3 ( # insertStmt ) . INSERT <nl> diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py <nl> index e58f41d . . 43882de 100644 <nl> - - - a / pylib / cqlshlib / cql3handling . py <nl> + + + b / pylib / cqlshlib / cql3handling . py <nl> @ @ - 228 , 10 + 228 , 12 @ @ JUNK : : = / ( [ \ t \ r \ f \ v ] + | ( - - | [ / ] [ / ] ) [ ^ \ n \ r ] * ( [ \ n \ r ] | $ ) | [ / ] [ * ] . * ? [ * ] [ / ] ) / ; <nl> | < createColumnFamilyStatement > <nl> | < createIndexStatement > <nl> | < createUserTypeStatement > <nl> + | < createTriggerStatement > <nl> | < dropKeyspaceStatement > <nl> | < dropColumnFamilyStatement > <nl> | < dropIndexStatement > <nl> | < dropUserTypeStatement > <nl> + | < dropTriggerStatement > <nl> | < alterTableStatement > <nl> | < alterKeyspaceStatement > <nl> | < alterUserTypeStatement > <nl> @ @ - 1153 , 6 + 1155 , 28 @ @ def username _ name _ completer ( ctxt , cass ) : <nl> session = cass . session <nl> return [ maybe _ quote ( row . values ( ) [ 0 ] . replace ( " ' " , " ' ' " ) ) for row in session . execute ( " LIST USERS " ) ] <nl> <nl> + syntax _ rules + = r ' ' ' <nl> + < createTriggerStatement > : : = " CREATE " " TRIGGER " ( " IF " " NOT " " EXISTS " ) ? < cident > <nl> + " ON " cf = < columnFamilyName > " USING " class = < stringLiteral > <nl> + ; <nl> + <nl> + < dropTriggerStatement > : : = " DROP " " TRIGGER " ( " IF " " EXISTS " ) ? triggername = < cident > <nl> + " ON " cf = < columnFamilyName > <nl> + ; <nl> + ' ' ' <nl> + explain _ completion ( ' createTriggerStatement ' , ' class ' , ' \ ' fully qualified class name \ ' ' ) <nl> + <nl> + def get _ trigger _ names ( ctxt , cass ) : <nl> + ks = ctxt . get _ binding ( ' ksname ' , None ) <nl> + if ks is not None : <nl> + ks = dequote _ name ( ks ) <nl> + return cass . get _ trigger _ names ( ks ) <nl> + <nl> + @ completer _ for ( ' dropTriggerStatement ' , ' triggername ' ) <nl> + def alter _ type _ field _ completer ( ctxt , cass ) : <nl> + names = get _ trigger _ names ( ctxt , cass ) <nl> + return map ( maybe _ escape _ name , names ) <nl> + <nl> # END SYNTAX / COMPLETION RULE DEFINITIONS <nl> <nl> CqlRuleSet . append _ rules ( syntax _ rules )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ae1ce7a . . 7943112 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 15 , 7 + 15 , 7 @ @ <nl> * Add support for range tombstones ( CASSANDRA - 3708 ) <nl> * Improve MessagingService efficiency ( CASSANDRA - 3617 ) <nl> * Avoid ID conflicts from concurrent schema changes ( CASSANDRA - 3794 ) <nl> - * Set thrift HSHA server thread limit to unlimet by default ( CASSANDRA - 4277 ) <nl> + * Set thrift HSHA server thread limit to unlimited by default ( CASSANDRA - 4277 ) <nl> * Avoids double serialization of CF id in RowMutation messages <nl> ( CASSANDRA - 4293 ) <nl> * fix Summary component and caches to use correct partitioner ( CASSANDRA - 4289 )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c4698d6 . . 1706faf 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 1 
 + * ( cqlsh ) tab - completion for triggers ( CASSANDRA - 7824 ) 
 * ( cqlsh ) : Support for query paging ( CASSANDRA - 7514 ) 
 * ( cqlsh ) : Show progress of COPY operations ( CASSANDRA - 7789 ) 
 * Add syntax to remove multiple elements from a map ( CASSANDRA - 6599 ) 
 diff - - git a / bin / cqlsh b / bin / cqlsh 
 index d61a008 . . fa5de05 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 711 , 6 + 711 , 14 @ @ class Shell ( cmd . Cmd ) : 
 
 return cql3handling . UserTypesMeta . from _ layout ( data ) 
 
 + def get _ trigger _ names ( self , ksname = None ) : 
 + if ksname is None : 
 + ksname = self . current _ keyspace 
 + 
 + return [ trigger . name 
 + for table in self . get _ keyspace _ meta ( ksname ) . tables . values ( ) 
 + for trigger in table . triggers . values ( ) ] 
 + 
 def reset _ statement ( self ) : 
 self . reset _ prompt ( ) 
 self . statement . truncate ( 0 ) 
 diff - - git a / doc / cql3 / CQL . textile b / doc / cql3 / CQL . textile 
 index 611bbb8 . . 3b322d5 100644 
 - - - a / doc / cql3 / CQL . textile 
 + + + b / doc / cql3 / CQL . textile 
 @ @ - 540 , 6 + 540 , 39 @ @ The @ DROP TYPE @ statement results in the immediate , irreversible removal of a ty 
 
 If the type does not exist , an error will be returned unless @ IF EXISTS @ is used , in which case the operation is a no - op . 
 
 + h3 ( # createTriggerStmt ) . CREATE TRIGGER 
 + 
 + _ _ Syntax : _ _ 
 + 
 + bc ( syntax ) . . 
 + < create - trigger - stmt > : : = CREATE TRIGGER ( IF NOT EXISTS ) ? ( < triggername > ) ? 
 + ON < tablename > 
 + USING < string > 
 + 
 + p . 
 + _ _ Sample : _ _ 
 + 
 + bc ( sample ) . 
 + CREATE TRIGGER myTrigger ON myTable USING ' org . apache . cassandra . triggers . InvertedIndex ' ; 
 + 
 + The actual logic that makes up the trigger can be written in any Java ( JVM ) language and exists outside the database . You place the trigger code in a @ lib / triggers @ subdirectory of the Cassandra installation directory , it loads during cluster startup , and exists on every node that participates in a cluster . The trigger defined on a table fires before a requested DML statement occurs , which ensures the atomicity of the transaction . 
 + 
 + h3 ( # dropTriggerStmt ) . DROP TRIGGER 
 + 
 + _ _ Syntax : _ _ 
 + 
 + bc ( syntax ) . . 
 + < drop - trigger - stmt > : : = DROP TRIGGER ( IF EXISTS ) ? ( < triggername > ) ? 
 + ON < tablename > 
 + 
 + p . 
 + _ _ Sample : _ _ 
 + 
 + bc ( sample ) . 
 + DROP TRIGGER myTrigger ON myTable ; 
 + 
 + @ DROP TRIGGER @ statement removes the registration of a trigger created using @ CREATE TRIGGER @ . 
 + 
 h2 ( # dataManipulation ) . Data Manipulation 
 
 h3 ( # insertStmt ) . INSERT 
 diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py 
 index e58f41d . . 43882de 100644 
 - - - a / pylib / cqlshlib / cql3handling . py 
 + + + b / pylib / cqlshlib / cql3handling . py 
 @ @ - 228 , 10 + 228 , 12 @ @ JUNK : : = / ( [ \ t \ r \ f \ v ] + | ( - - | [ / ] [ / ] ) [ ^ \ n \ r ] * ( [ \ n \ r ] | $ ) | [ / ] [ * ] . * ? [ * ] [ / ] ) / ; 
 | < createColumnFamilyStatement > 
 | < createIndexStatement > 
 | < createUserTypeStatement > 
 + | < createTriggerStatement > 
 | < dropKeyspaceStatement > 
 | < dropColumnFamilyStatement > 
 | < dropIndexStatement > 
 | < dropUserTypeStatement > 
 + | < dropTriggerStatement > 
 | < alterTableStatement > 
 | < alterKeyspaceStatement > 
 | < alterUserTypeStatement > 
 @ @ - 1153 , 6 + 1155 , 28 @ @ def username _ name _ completer ( ctxt , cass ) : 
 session = cass . session 
 return [ maybe _ quote ( row . values ( ) [ 0 ] . replace ( " ' " , " ' ' " ) ) for row in session . execute ( " LIST USERS " ) ] 
 
 + syntax _ rules + = r ' ' ' 
 + < createTriggerStatement > : : = " CREATE " " TRIGGER " ( " IF " " NOT " " EXISTS " ) ? < cident > 
 + " ON " cf = < columnFamilyName > " USING " class = < stringLiteral > 
 + ; 
 + 
 + < dropTriggerStatement > : : = " DROP " " TRIGGER " ( " IF " " EXISTS " ) ? triggername = < cident > 
 + " ON " cf = < columnFamilyName > 
 + ; 
 + ' ' ' 
 + explain _ completion ( ' createTriggerStatement ' , ' class ' , ' \ ' fully qualified class name \ ' ' ) 
 + 
 + def get _ trigger _ names ( ctxt , cass ) : 
 + ks = ctxt . get _ binding ( ' ksname ' , None ) 
 + if ks is not None : 
 + ks = dequote _ name ( ks ) 
 + return cass . get _ trigger _ names ( ks ) 
 + 
 + @ completer _ for ( ' dropTriggerStatement ' , ' triggername ' ) 
 + def alter _ type _ field _ completer ( ctxt , cass ) : 
 + names = get _ trigger _ names ( ctxt , cass ) 
 + return map ( maybe _ escape _ name , names ) 
 + 
 # END SYNTAX / COMPLETION RULE DEFINITIONS 
 
 CqlRuleSet . append _ rules ( syntax _ rules )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ae1ce7a . . 7943112 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 15 , 7 + 15 , 7 @ @ 
 * Add support for range tombstones ( CASSANDRA - 3708 ) 
 * Improve MessagingService efficiency ( CASSANDRA - 3617 ) 
 * Avoid ID conflicts from concurrent schema changes ( CASSANDRA - 3794 ) 
 - * Set thrift HSHA server thread limit to unlimet by default ( CASSANDRA - 4277 ) 
 + * Set thrift HSHA server thread limit to unlimited by default ( CASSANDRA - 4277 ) 
 * Avoids double serialization of CF id in RowMutation messages 
 ( CASSANDRA - 4293 ) 
 * fix Summary component and caches to use correct partitioner ( CASSANDRA - 4289 )
