BLEU SCORE: 0.024367494694068095

TEST MSG: Make batch commit log mode easier to tune
GENERATED MSG: commitlog cleanup ; fixes stderr for RecoveryManager2Test on Windows

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / commitlog / AbstractCommitLogService . java b / src / java / org / apache / cassandra / db / commitlog / AbstractCommitLogService . java <nl> index d9ea683 . . 9f3b410 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / AbstractCommitLogService . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / AbstractCommitLogService . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public abstract class AbstractCommitLogService <nl> <nl> / / signal that writers can wait on to be notified of a completed sync <nl> protected final WaitQueue syncComplete = new WaitQueue ( ) ; <nl> - private final Semaphore haveWork = new Semaphore ( 1 ) ; <nl> + protected final Semaphore haveWork = new Semaphore ( 1 ) ; <nl> <nl> private static final Logger logger = LoggerFactory . getLogger ( AbstractCommitLogService . class ) ; <nl> <nl> @ @ - 114 , 6 + 114 , 7 @ @ public abstract class AbstractCommitLogService <nl> try <nl> { <nl> haveWork . tryAcquire ( sleep , TimeUnit . MILLISECONDS ) ; <nl> + haveWork . drainPermits ( ) ; <nl> } <nl> catch ( InterruptedException e ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / BatchCommitLogService . java b / src / java / org / apache / cassandra / db / commitlog / BatchCommitLogService . java <nl> index 65bee40 . . dd55d24 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / BatchCommitLogService . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / BatchCommitLogService . java <nl> @ @ - 30 , 6 + 30 , 7 @ @ class BatchCommitLogService extends AbstractCommitLogService <nl> { <nl> / / wait until record has been safely persisted to disk <nl> pending . incrementAndGet ( ) ; <nl> + haveWork . release ( ) ; <nl> alloc . awaitDiskSync ( ) ; <nl> pending . decrementAndGet ( ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index aa03655 . . 3a1b4c2 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 22 , 6 + 22 , 7 @ @ <nl> * add strategy _ options to the KSMetaData . toString ( ) output ( CASSANDRA - 4248 ) <nl> * ( cql3 ) fix range queries containing unqueried results ( CASSANDRA - 4372 ) <nl> * ( cql3 ) allow updating column _ alias types ( CASSANDRA - 4041 ) <nl> + * ( cql3 ) Fix deletion bug ( CASSANDRA - 4193 ) <nl> Merged from 1 . 0 : <nl> * Set gc _ grace on index CF to 0 ( CASSANDRA - 4314 ) <nl> <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DeleteStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DeleteStatement . java <nl> index 4af3aa2 . . 2743358 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / DeleteStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / DeleteStatement . java <nl> @ @ - 70 , 8 + 70 , 8 @ @ public class DeleteStatement extends ModificationStatement <nl> if ( values = = null | | values . isEmpty ( ) ) <nl> { <nl> firstEmpty = name ; <nl> - / / For sparse , we must either have all component or none <nl> - if ( cfDef . isComposite & & ! cfDef . isCompact & & builder . componentCount ( ) ! = 0 ) <nl> + / / For composites , we must either have all component or none <nl> + if ( cfDef . isComposite & & builder . componentCount ( ) ! = 0 ) <nl> throw new InvalidRequestException ( String . format ( " Missing mandatory PRIMARY KEY part % s " , name ) ) ; <nl> } <nl> else if ( firstEmpty ! = null ) <nl> @ @ - 129 , 8 + 129 , 14 @ @ public class DeleteStatement extends ModificationStatement <nl> } <nl> else <nl> { <nl> - / / Delete specific columns <nl> - Iterator < ColumnIdentifier > iter = columns . iterator ( ) ; <nl> + Iterator < ColumnIdentifier > iter ; <nl> + if ( columns . isEmpty ( ) ) <nl> + / / It ' s a DELETE * , remove all columns individually ( # 3708 will replace that by a single range tombstone ) <nl> + iter = cfDef . metadata . keySet ( ) . iterator ( ) ; <nl> + else <nl> + / / Delete specific columns <nl> + iter = columns . iterator ( ) ; <nl> + <nl> while ( iter . hasNext ( ) ) <nl> { <nl> ColumnIdentifier column = iter . next ( ) ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / commitlog / AbstractCommitLogService . java b / src / java / org / apache / cassandra / db / commitlog / AbstractCommitLogService . java 
 index d9ea683 . . 9f3b410 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / AbstractCommitLogService . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / AbstractCommitLogService . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public abstract class AbstractCommitLogService 
 
 / / signal that writers can wait on to be notified of a completed sync 
 protected final WaitQueue syncComplete = new WaitQueue ( ) ; 
 - private final Semaphore haveWork = new Semaphore ( 1 ) ; 
 + protected final Semaphore haveWork = new Semaphore ( 1 ) ; 
 
 private static final Logger logger = LoggerFactory . getLogger ( AbstractCommitLogService . class ) ; 
 
 @ @ - 114 , 6 + 114 , 7 @ @ public abstract class AbstractCommitLogService 
 try 
 { 
 haveWork . tryAcquire ( sleep , TimeUnit . MILLISECONDS ) ; 
 + haveWork . drainPermits ( ) ; 
 } 
 catch ( InterruptedException e ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / BatchCommitLogService . java b / src / java / org / apache / cassandra / db / commitlog / BatchCommitLogService . java 
 index 65bee40 . . dd55d24 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / BatchCommitLogService . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / BatchCommitLogService . java 
 @ @ - 30 , 6 + 30 , 7 @ @ class BatchCommitLogService extends AbstractCommitLogService 
 { 
 / / wait until record has been safely persisted to disk 
 pending . incrementAndGet ( ) ; 
 + haveWork . release ( ) ; 
 alloc . awaitDiskSync ( ) ; 
 pending . decrementAndGet ( ) ; 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index aa03655 . . 3a1b4c2 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 22 , 6 + 22 , 7 @ @ 
 * add strategy _ options to the KSMetaData . toString ( ) output ( CASSANDRA - 4248 ) 
 * ( cql3 ) fix range queries containing unqueried results ( CASSANDRA - 4372 ) 
 * ( cql3 ) allow updating column _ alias types ( CASSANDRA - 4041 ) 
 + * ( cql3 ) Fix deletion bug ( CASSANDRA - 4193 ) 
 Merged from 1 . 0 : 
 * Set gc _ grace on index CF to 0 ( CASSANDRA - 4314 ) 
 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DeleteStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DeleteStatement . java 
 index 4af3aa2 . . 2743358 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / DeleteStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / DeleteStatement . java 
 @ @ - 70 , 8 + 70 , 8 @ @ public class DeleteStatement extends ModificationStatement 
 if ( values = = null | | values . isEmpty ( ) ) 
 { 
 firstEmpty = name ; 
 - / / For sparse , we must either have all component or none 
 - if ( cfDef . isComposite & & ! cfDef . isCompact & & builder . componentCount ( ) ! = 0 ) 
 + / / For composites , we must either have all component or none 
 + if ( cfDef . isComposite & & builder . componentCount ( ) ! = 0 ) 
 throw new InvalidRequestException ( String . format ( " Missing mandatory PRIMARY KEY part % s " , name ) ) ; 
 } 
 else if ( firstEmpty ! = null ) 
 @ @ - 129 , 8 + 129 , 14 @ @ public class DeleteStatement extends ModificationStatement 
 } 
 else 
 { 
 - / / Delete specific columns 
 - Iterator < ColumnIdentifier > iter = columns . iterator ( ) ; 
 + Iterator < ColumnIdentifier > iter ; 
 + if ( columns . isEmpty ( ) ) 
 + / / It ' s a DELETE * , remove all columns individually ( # 3708 will replace that by a single range tombstone ) 
 + iter = cfDef . metadata . keySet ( ) . iterator ( ) ; 
 + else 
 + / / Delete specific columns 
 + iter = columns . iterator ( ) ; 
 + 
 while ( iter . hasNext ( ) ) 
 { 
 ColumnIdentifier column = iter . next ( ) ;
