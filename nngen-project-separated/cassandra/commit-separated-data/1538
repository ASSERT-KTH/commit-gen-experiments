BLEU SCORE: 0.07635362674858093

TEST MSG: Don ' t repair system _ distributed by default
GENERATED MSG: Return InvalidRequest when using a keyspace that doesn ' t exist

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4886850 . . 45727f9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 <nl> + * Don ' t repair system _ distributed by default ( CASSANDRA - 9621 ) <nl> * Fix mixing min , max , and count aggregates for blob type ( CASSANRA - 9622 ) <nl> * Rename class for DATE type in Java driver ( CASSANDRA - 9563 ) <nl> * Duplicate compilation of UDFs on coordinator ( CASSANDRA - 9475 ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / nodetool / Repair . java b / src / java / org / apache / cassandra / tools / nodetool / Repair . java <nl> index 45b3d98 . . 7d0e207 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / Repair . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / Repair . java <nl> @ @ - 27 , 8 + 27 , 12 @ @ import java . util . ArrayList ; <nl> import java . util . HashMap ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> + import java . util . Set ; <nl> + <nl> + import com . google . common . collect . Sets ; <nl> <nl> import org . apache . cassandra . repair . RepairParallelism ; <nl> + import org . apache . cassandra . repair . SystemDistributedKeyspace ; <nl> import org . apache . cassandra . repair . messages . RepairOption ; <nl> import org . apache . cassandra . tools . NodeProbe ; <nl> import org . apache . cassandra . tools . NodeTool . NodeToolCmd ; <nl> @ @ - 37 , 6 + 41 , 8 @ @ import org . apache . commons . lang3 . StringUtils ; <nl> @ Command ( name = " repair " , description = " Repair one or more tables " ) <nl> public class Repair extends NodeToolCmd <nl> { <nl> + public final static Set < String > ONLY _ EXPLICITLY _ REPAIRED = Sets . newHashSet ( SystemDistributedKeyspace . NAME ) ; <nl> + <nl> @ Arguments ( usage = " [ < keyspace > < tables > . . . ] " , description = " The keyspace followed by one or many tables " ) <nl> private List < String > args = new ArrayList < > ( ) ; <nl> <nl> @ @ - 86 , 6 + 92 , 10 @ @ public class Repair extends NodeToolCmd <nl> <nl> for ( String keyspace : keyspaces ) <nl> { <nl> + / / avoid repairing system _ distributed by default ( CASSANDRA - 9621 ) <nl> + if ( ( args = = null | | args . isEmpty ( ) ) & & ONLY _ EXPLICITLY _ REPAIRED . contains ( keyspace ) ) <nl> + continue ; <nl> + <nl> Map < String , String > options = new HashMap < > ( ) ; <nl> RepairParallelism parallelismDegree = RepairParallelism . PARALLEL ; <nl> if ( sequential )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c7a228f . . 06ac8a0 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 54 , 6 + 54 , 8 @ @ <nl> <nl> <nl> 1 . 0 . 8 <nl> + * Return InvalidRequest when using a keyspace that doesn ' t exist <nl> + ( CASSANDRA - 3764 ) <nl> * disallow user modification of System keyspace ( CASSANDRA - 3738 ) <nl> * allow using sstable2json on secondary index data ( CASSANDRA - 3738 ) <nl> * ( cqlsh ) add DESCRIBE COLUMNFAMILIES ( CASSANDRA - 3586 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / ClientState . java b / src / java / org / apache / cassandra / service / ClientState . java <nl> index 0ea7272 . . d2df8a9 100644 <nl> - - - a / src / java / org / apache / cassandra / service / ClientState . java <nl> + + + b / src / java / org / apache / cassandra / service / ClientState . java <nl> @ @ - 18 , 12 + 18 , 7 @ @ <nl> <nl> package org . apache . cassandra . service ; <nl> <nl> - import java . util . ArrayList ; <nl> - import java . util . HashMap ; <nl> - import java . util . LinkedHashMap ; <nl> - import java . util . List ; <nl> - import java . util . Map ; <nl> - import java . util . Set ; <nl> + import java . util . * ; <nl> <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> @ @ - 32 , 6 + 27 , 7 @ @ import org . apache . cassandra . auth . AuthenticatedUser ; <nl> import org . apache . cassandra . auth . Permission ; <nl> import org . apache . cassandra . auth . Resources ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> + import org . apache . cassandra . config . Schema ; <nl> import org . apache . cassandra . cql . CQLStatement ; <nl> import org . apache . cassandra . db . Table ; <nl> import org . apache . cassandra . thrift . AuthenticationException ; <nl> @ @ - 86 , 8 + 82 , 10 @ @ public class ClientState <nl> return keyspace ; <nl> } <nl> <nl> - public void setKeyspace ( String ks ) <nl> + public void setKeyspace ( String ks ) throws InvalidRequestException <nl> { <nl> + if ( Schema . instance . getKSMetaData ( ks ) = = null ) <nl> + throw new InvalidRequestException ( " Keyspace ' " + ks + " ' does not exist " ) ; <nl> keyspace = ks ; <nl> } <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4886850 . . 45727f9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 
 + * Don ' t repair system _ distributed by default ( CASSANDRA - 9621 ) 
 * Fix mixing min , max , and count aggregates for blob type ( CASSANRA - 9622 ) 
 * Rename class for DATE type in Java driver ( CASSANDRA - 9563 ) 
 * Duplicate compilation of UDFs on coordinator ( CASSANDRA - 9475 ) 
 diff - - git a / src / java / org / apache / cassandra / tools / nodetool / Repair . java b / src / java / org / apache / cassandra / tools / nodetool / Repair . java 
 index 45b3d98 . . 7d0e207 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / Repair . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / Repair . java 
 @ @ - 27 , 8 + 27 , 12 @ @ import java . util . ArrayList ; 
 import java . util . HashMap ; 
 import java . util . List ; 
 import java . util . Map ; 
 + import java . util . Set ; 
 + 
 + import com . google . common . collect . Sets ; 
 
 import org . apache . cassandra . repair . RepairParallelism ; 
 + import org . apache . cassandra . repair . SystemDistributedKeyspace ; 
 import org . apache . cassandra . repair . messages . RepairOption ; 
 import org . apache . cassandra . tools . NodeProbe ; 
 import org . apache . cassandra . tools . NodeTool . NodeToolCmd ; 
 @ @ - 37 , 6 + 41 , 8 @ @ import org . apache . commons . lang3 . StringUtils ; 
 @ Command ( name = " repair " , description = " Repair one or more tables " ) 
 public class Repair extends NodeToolCmd 
 { 
 + public final static Set < String > ONLY _ EXPLICITLY _ REPAIRED = Sets . newHashSet ( SystemDistributedKeyspace . NAME ) ; 
 + 
 @ Arguments ( usage = " [ < keyspace > < tables > . . . ] " , description = " The keyspace followed by one or many tables " ) 
 private List < String > args = new ArrayList < > ( ) ; 
 
 @ @ - 86 , 6 + 92 , 10 @ @ public class Repair extends NodeToolCmd 
 
 for ( String keyspace : keyspaces ) 
 { 
 + / / avoid repairing system _ distributed by default ( CASSANDRA - 9621 ) 
 + if ( ( args = = null | | args . isEmpty ( ) ) & & ONLY _ EXPLICITLY _ REPAIRED . contains ( keyspace ) ) 
 + continue ; 
 + 
 Map < String , String > options = new HashMap < > ( ) ; 
 RepairParallelism parallelismDegree = RepairParallelism . PARALLEL ; 
 if ( sequential )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c7a228f . . 06ac8a0 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 54 , 6 + 54 , 8 @ @ 
 
 
 1 . 0 . 8 
 + * Return InvalidRequest when using a keyspace that doesn ' t exist 
 + ( CASSANDRA - 3764 ) 
 * disallow user modification of System keyspace ( CASSANDRA - 3738 ) 
 * allow using sstable2json on secondary index data ( CASSANDRA - 3738 ) 
 * ( cqlsh ) add DESCRIBE COLUMNFAMILIES ( CASSANDRA - 3586 ) 
 diff - - git a / src / java / org / apache / cassandra / service / ClientState . java b / src / java / org / apache / cassandra / service / ClientState . java 
 index 0ea7272 . . d2df8a9 100644 
 - - - a / src / java / org / apache / cassandra / service / ClientState . java 
 + + + b / src / java / org / apache / cassandra / service / ClientState . java 
 @ @ - 18 , 12 + 18 , 7 @ @ 
 
 package org . apache . cassandra . service ; 
 
 - import java . util . ArrayList ; 
 - import java . util . HashMap ; 
 - import java . util . LinkedHashMap ; 
 - import java . util . List ; 
 - import java . util . Map ; 
 - import java . util . Set ; 
 + import java . util . * ; 
 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 @ @ - 32 , 6 + 27 , 7 @ @ import org . apache . cassandra . auth . AuthenticatedUser ; 
 import org . apache . cassandra . auth . Permission ; 
 import org . apache . cassandra . auth . Resources ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 + import org . apache . cassandra . config . Schema ; 
 import org . apache . cassandra . cql . CQLStatement ; 
 import org . apache . cassandra . db . Table ; 
 import org . apache . cassandra . thrift . AuthenticationException ; 
 @ @ - 86 , 8 + 82 , 10 @ @ public class ClientState 
 return keyspace ; 
 } 
 
 - public void setKeyspace ( String ks ) 
 + public void setKeyspace ( String ks ) throws InvalidRequestException 
 { 
 + if ( Schema . instance . getKSMetaData ( ks ) = = null ) 
 + throw new InvalidRequestException ( " Keyspace ' " + ks + " ' does not exist " ) ; 
 keyspace = ks ; 
 } 

