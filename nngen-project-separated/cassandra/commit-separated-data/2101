BLEU SCORE: 0.14535768424205484

TEST MSG: Fix NPE when table dropped during streaming
GENERATED MSG: Fix ConcurrentModificationException during streaming

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index abd7c68 . . fd49b09 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> * Always send Paxos commit to all replicas ( CASSANDRA - 7479 ) <nl> * Make disruptor _ thrift _ server invocation pool configurable ( CASSANDRA - 7594 ) <nl> * Make repair no - op when RF = 1 ( CASSANDRA - 7864 ) <nl> + * Fix NPE when table dropped during streaming ( CASSANDRA - 7946 ) <nl> Merged from 1 . 2 : <nl> * Don ' t index tombstones ( CASSANDRA - 7828 ) <nl> <nl> diff - - git a / src / java / org / apache / cassandra / streaming / StreamReader . java b / src / java / org / apache / cassandra / streaming / StreamReader . java <nl> index 15aa3cb . . 3b2a924 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / StreamReader . java <nl> + + + b / src / java / org / apache / cassandra / streaming / StreamReader . java <nl> @ @ - 75 , 6 + 75 , 11 @ @ public class StreamReader <nl> long totalSize = totalSize ( ) ; <nl> <nl> Pair < String , String > kscf = Schema . instance . getCF ( cfId ) ; <nl> + if ( kscf = = null ) <nl> + { <nl> + / / schema was dropped during streaming <nl> + throw new IOException ( " CF " + cfId + " was dropped during streaming " ) ; <nl> + } <nl> ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; <nl> <nl> SSTableWriter writer = createWriter ( cfs , totalSize ) ; <nl> diff - - git a / src / java / org / apache / cassandra / streaming / StreamReceiveTask . java b / src / java / org / apache / cassandra / streaming / StreamReceiveTask . java <nl> index 223a46e . . 33da3d1 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / StreamReceiveTask . java <nl> + + + b / src / java / org / apache / cassandra / streaming / StreamReceiveTask . java <nl> @ @ - 103 , 6 + 103 , 14 @ @ public class StreamReceiveTask extends StreamTask <nl> public void run ( ) <nl> { <nl> Pair < String , String > kscf = Schema . instance . getCF ( task . cfId ) ; <nl> + if ( kscf = = null ) <nl> + { <nl> + / / schema was dropped during streaming <nl> + for ( SSTableWriter writer : task . sstables ) <nl> + writer . abort ( ) ; <nl> + task . sstables . clear ( ) ; <nl> + return ; <nl> + } <nl> ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; <nl> <nl> StreamLockfile lockfile = new StreamLockfile ( cfs . directories . getWriteableLocationAsFile ( ) , UUID . randomUUID ( ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java b / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java <nl> index 4aac941 . . 219cabb 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java <nl> + + + b / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java <nl> @ @ - 60 , 6 + 60 , 11 @ @ public class CompressedStreamReader extends StreamReader <nl> long totalSize = totalSize ( ) ; <nl> <nl> Pair < String , String > kscf = Schema . instance . getCF ( cfId ) ; <nl> + if ( kscf = = null ) <nl> + { <nl> + / / schema was dropped during streaming <nl> + throw new IOException ( " CF " + cfId + " was dropped during streaming " ) ; <nl> + } <nl> ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; <nl> <nl> SSTableWriter writer = createWriter ( cfs , totalSize ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4d56c98 . . 20a6373 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 14 , 6 + 14 , 7 @ @ <nl> * Support streaming SSTables of old versions ( CASSANDRA - 5772 ) <nl> * Always respect protocol version in native protocol ( CASSANDRA - 5778 ) <nl> * Fix ConcurrentModificationException during streaming ( CASSANDRA - 5782 ) <nl> + * Update deletion timestamp in Commit # updatesWithPaxosTime ( CASSANDRA - 5787 ) <nl> <nl> <nl> 2 . 0 . 0 - beta1 <nl> diff - - git a / src / java / org / apache / cassandra / db / DeletionInfo . java b / src / java / org / apache / cassandra / db / DeletionInfo . java <nl> index 49aa427 . . 32cc2a7 100644 <nl> - - - a / src / java / org / apache / cassandra / db / DeletionInfo . java <nl> + + + b / src / java / org / apache / cassandra / db / DeletionInfo . java <nl> @ @ - 265 , 6 + 265 , 16 @ @ public class DeletionInfo <nl> return sb . toString ( ) ; <nl> } <nl> <nl> + / / Updates all the timestamp of the deletion contained in this DeletionInfo to be { @ code timestamp } . <nl> + public void updateAllTimestamp ( long timestamp ) <nl> + { <nl> + if ( topLevel . markedForDeleteAt ! = Long . MIN _ VALUE ) <nl> + topLevel = new DeletionTime ( timestamp , topLevel . localDeletionTime ) ; <nl> + <nl> + if ( ranges ! = null ) <nl> + ranges . updateAllTimestamp ( timestamp ) ; <nl> + } <nl> + <nl> @ Override <nl> public boolean equals ( Object o ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / RangeTombstoneList . java b / src / java / org / apache / cassandra / db / RangeTombstoneList . java <nl> index 771b1a8 . . e99ed9f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / RangeTombstoneList . java <nl> + + + b / src / java / org / apache / cassandra / db / RangeTombstoneList . java <nl> @ @ - 288 , 6 + 288 , 12 @ @ public class RangeTombstoneList implements Iterable < RangeTombstone > <nl> return max ; <nl> } <nl> <nl> + public void updateAllTimestamp ( long timestamp ) <nl> + { <nl> + for ( int i = 0 ; i < size ; i + + ) <nl> + markedAts [ i ] = timestamp ; <nl> + } <nl> + <nl> / * * <nl> * Removes all range tombstones whose local deletion time is older than gcBefore . <nl> * / <nl> diff - - git a / src / java / org / apache / cassandra / service / paxos / Commit . java b / src / java / org / apache / cassandra / service / paxos / Commit . java <nl> index fdc707b . . 04ddca8 100644 <nl> - - - a / src / java / org / apache / cassandra / service / paxos / Commit . java <nl> + + + b / src / java / org / apache / cassandra / service / paxos / Commit . java <nl> @ @ - 114 , 6 + 114 , 7 @ @ public class Commit <nl> { <nl> ColumnFamily cf = updates . cloneMeShallow ( ) ; <nl> long t = UUIDGen . microsTimestamp ( ballot ) ; <nl> + cf . deletionInfo ( ) . updateAllTimestamp ( t ) ; <nl> for ( Column column : updates ) <nl> cf . addAtom ( column . withUpdatedTimestamp ( t ) ) ; <nl> return cf ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index abd7c68 . . fd49b09 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 * Always send Paxos commit to all replicas ( CASSANDRA - 7479 ) 
 * Make disruptor _ thrift _ server invocation pool configurable ( CASSANDRA - 7594 ) 
 * Make repair no - op when RF = 1 ( CASSANDRA - 7864 ) 
 + * Fix NPE when table dropped during streaming ( CASSANDRA - 7946 ) 
 Merged from 1 . 2 : 
 * Don ' t index tombstones ( CASSANDRA - 7828 ) 
 
 diff - - git a / src / java / org / apache / cassandra / streaming / StreamReader . java b / src / java / org / apache / cassandra / streaming / StreamReader . java 
 index 15aa3cb . . 3b2a924 100644 
 - - - a / src / java / org / apache / cassandra / streaming / StreamReader . java 
 + + + b / src / java / org / apache / cassandra / streaming / StreamReader . java 
 @ @ - 75 , 6 + 75 , 11 @ @ public class StreamReader 
 long totalSize = totalSize ( ) ; 
 
 Pair < String , String > kscf = Schema . instance . getCF ( cfId ) ; 
 + if ( kscf = = null ) 
 + { 
 + / / schema was dropped during streaming 
 + throw new IOException ( " CF " + cfId + " was dropped during streaming " ) ; 
 + } 
 ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; 
 
 SSTableWriter writer = createWriter ( cfs , totalSize ) ; 
 diff - - git a / src / java / org / apache / cassandra / streaming / StreamReceiveTask . java b / src / java / org / apache / cassandra / streaming / StreamReceiveTask . java 
 index 223a46e . . 33da3d1 100644 
 - - - a / src / java / org / apache / cassandra / streaming / StreamReceiveTask . java 
 + + + b / src / java / org / apache / cassandra / streaming / StreamReceiveTask . java 
 @ @ - 103 , 6 + 103 , 14 @ @ public class StreamReceiveTask extends StreamTask 
 public void run ( ) 
 { 
 Pair < String , String > kscf = Schema . instance . getCF ( task . cfId ) ; 
 + if ( kscf = = null ) 
 + { 
 + / / schema was dropped during streaming 
 + for ( SSTableWriter writer : task . sstables ) 
 + writer . abort ( ) ; 
 + task . sstables . clear ( ) ; 
 + return ; 
 + } 
 ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; 
 
 StreamLockfile lockfile = new StreamLockfile ( cfs . directories . getWriteableLocationAsFile ( ) , UUID . randomUUID ( ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java b / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java 
 index 4aac941 . . 219cabb 100644 
 - - - a / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java 
 + + + b / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java 
 @ @ - 60 , 6 + 60 , 11 @ @ public class CompressedStreamReader extends StreamReader 
 long totalSize = totalSize ( ) ; 
 
 Pair < String , String > kscf = Schema . instance . getCF ( cfId ) ; 
 + if ( kscf = = null ) 
 + { 
 + / / schema was dropped during streaming 
 + throw new IOException ( " CF " + cfId + " was dropped during streaming " ) ; 
 + } 
 ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; 
 
 SSTableWriter writer = createWriter ( cfs , totalSize ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4d56c98 . . 20a6373 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 14 , 6 + 14 , 7 @ @ 
 * Support streaming SSTables of old versions ( CASSANDRA - 5772 ) 
 * Always respect protocol version in native protocol ( CASSANDRA - 5778 ) 
 * Fix ConcurrentModificationException during streaming ( CASSANDRA - 5782 ) 
 + * Update deletion timestamp in Commit # updatesWithPaxosTime ( CASSANDRA - 5787 ) 
 
 
 2 . 0 . 0 - beta1 
 diff - - git a / src / java / org / apache / cassandra / db / DeletionInfo . java b / src / java / org / apache / cassandra / db / DeletionInfo . java 
 index 49aa427 . . 32cc2a7 100644 
 - - - a / src / java / org / apache / cassandra / db / DeletionInfo . java 
 + + + b / src / java / org / apache / cassandra / db / DeletionInfo . java 
 @ @ - 265 , 6 + 265 , 16 @ @ public class DeletionInfo 
 return sb . toString ( ) ; 
 } 
 
 + / / Updates all the timestamp of the deletion contained in this DeletionInfo to be { @ code timestamp } . 
 + public void updateAllTimestamp ( long timestamp ) 
 + { 
 + if ( topLevel . markedForDeleteAt ! = Long . MIN _ VALUE ) 
 + topLevel = new DeletionTime ( timestamp , topLevel . localDeletionTime ) ; 
 + 
 + if ( ranges ! = null ) 
 + ranges . updateAllTimestamp ( timestamp ) ; 
 + } 
 + 
 @ Override 
 public boolean equals ( Object o ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / RangeTombstoneList . java b / src / java / org / apache / cassandra / db / RangeTombstoneList . java 
 index 771b1a8 . . e99ed9f 100644 
 - - - a / src / java / org / apache / cassandra / db / RangeTombstoneList . java 
 + + + b / src / java / org / apache / cassandra / db / RangeTombstoneList . java 
 @ @ - 288 , 6 + 288 , 12 @ @ public class RangeTombstoneList implements Iterable < RangeTombstone > 
 return max ; 
 } 
 
 + public void updateAllTimestamp ( long timestamp ) 
 + { 
 + for ( int i = 0 ; i < size ; i + + ) 
 + markedAts [ i ] = timestamp ; 
 + } 
 + 
 / * * 
 * Removes all range tombstones whose local deletion time is older than gcBefore . 
 * / 
 diff - - git a / src / java / org / apache / cassandra / service / paxos / Commit . java b / src / java / org / apache / cassandra / service / paxos / Commit . java 
 index fdc707b . . 04ddca8 100644 
 - - - a / src / java / org / apache / cassandra / service / paxos / Commit . java 
 + + + b / src / java / org / apache / cassandra / service / paxos / Commit . java 
 @ @ - 114 , 6 + 114 , 7 @ @ public class Commit 
 { 
 ColumnFamily cf = updates . cloneMeShallow ( ) ; 
 long t = UUIDGen . microsTimestamp ( ballot ) ; 
 + cf . deletionInfo ( ) . updateAllTimestamp ( t ) ; 
 for ( Column column : updates ) 
 cf . addAtom ( column . withUpdatedTimestamp ( t ) ) ; 
 return cf ;
