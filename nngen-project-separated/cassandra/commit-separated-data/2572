BLEU SCORE: 0.02139089632303349

TEST MSG: Don ' t shut MessagingService down .
GENERATED MSG: Reject bootstrapping endpoints that are already in the ring with

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index ad86bbd . . cc5dae5 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 476 , 6 + 476 , 11 @ @ public final class MessagingService implements MessagingServiceMBean <nl> } <nl> } <nl> <nl> + public boolean isListening ( ) <nl> + { <nl> + return listenGate . isSignaled ( ) ; <nl> + } <nl> + <nl> public void destroyConnectionPool ( InetAddress to ) <nl> { <nl> OutboundTcpConnectionPool cp = connectionManagers . get ( to ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 32b8b35 . . 6ddfd80 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 409 , 7 + 409 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> public synchronized Collection < Token > prepareReplacementInfo ( ) throws ConfigurationException <nl> { <nl> logger . info ( " Gathering node replacement information for { } " , DatabaseDescriptor . getReplaceAddress ( ) ) ; <nl> - MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> + if ( ! MessagingService . instance ( ) . isListening ( ) ) <nl> + MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> <nl> / / make magic happen <nl> Gossiper . instance . doShadowRound ( ) ; <nl> @ @ - 426 , 7 + 427 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> Collection < Token > tokens = TokenSerializer . deserialize ( getPartitioner ( ) , new DataInputStream ( new ByteArrayInputStream ( getApplicationStateValue ( DatabaseDescriptor . getReplaceAddress ( ) , ApplicationState . TOKENS ) ) ) ) ; <nl> <nl> SystemKeyspace . setLocalHostId ( hostId ) ; / / use the replacee ' s host Id as our own so we receive hints , etc <nl> - MessagingService . instance ( ) . shutdown ( ) ; <nl> Gossiper . instance . resetEndpointStateMap ( ) ; / / clean up since we have what we need <nl> return tokens ; <nl> } <nl> @ @ - 439 , 7 + 439 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> public synchronized void checkForEndpointCollision ( ) throws ConfigurationException <nl> { <nl> logger . debug ( " Starting shadow gossip round to check for endpoint collision " ) ; <nl> - MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> + if ( ! MessagingService . instance ( ) . isListening ( ) ) <nl> + MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> Gossiper . instance . doShadowRound ( ) ; <nl> EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) ) <nl> @ @ - 448 , 7 + 449 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> " Use cassandra . replace _ address if you want to replace this node . " , <nl> FBUtilities . getBroadcastAddress ( ) ) ) ; <nl> } <nl> - MessagingService . instance ( ) . shutdown ( ) ; <nl> Gossiper . instance . resetEndpointStateMap ( ) ; <nl> } <nl> <nl> @ @ - 492 , 7 + 492 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> Gossiper . instance . start ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ; / / needed for node - ring gathering . <nl> Gossiper . instance . addLocalApplicationState ( ApplicationState . NET _ VERSION , valueFactory . networkVersion ( ) ) ; <nl> <nl> - MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> + if ( ! MessagingService . instance ( ) . isListening ( ) ) <nl> + MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> Uninterruptibles . sleepUninterruptibly ( ringDelay , TimeUnit . MILLISECONDS ) ; <nl> } <nl> <nl> @ @ - 660 , 7 + 661 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> Schema . instance . updateVersionAndAnnounce ( ) ; / / Ensure we know our own actual Schema UUID in preparation for updates <nl> <nl> <nl> - MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> + if ( ! MessagingService . instance ( ) . isListening ( ) ) <nl> + MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> LoadBroadcaster . instance . startBroadcasting ( ) ; <nl> <nl> HintedHandOffManager . instance . start ( ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ac4c010 . . c01b4a8 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 7 @ @ <nl> + 2 . 0 . 3 <nl> + * Reject bootstrapping if the node already exists in gossip ( CASSANDRA - 5571 ) <nl> + <nl> + <nl> 2 . 0 . 2 <nl> * Update FailureDetector to use nanontime ( CASSANDRA - 4925 ) <nl> * Fix FileCacheService regressions ( CASSANDRA - 6149 )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index ad86bbd . . cc5dae5 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 476 , 6 + 476 , 11 @ @ public final class MessagingService implements MessagingServiceMBean 
 } 
 } 
 
 + public boolean isListening ( ) 
 + { 
 + return listenGate . isSignaled ( ) ; 
 + } 
 + 
 public void destroyConnectionPool ( InetAddress to ) 
 { 
 OutboundTcpConnectionPool cp = connectionManagers . get ( to ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 32b8b35 . . 6ddfd80 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 409 , 7 + 409 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 public synchronized Collection < Token > prepareReplacementInfo ( ) throws ConfigurationException 
 { 
 logger . info ( " Gathering node replacement information for { } " , DatabaseDescriptor . getReplaceAddress ( ) ) ; 
 - MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 + if ( ! MessagingService . instance ( ) . isListening ( ) ) 
 + MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 
 / / make magic happen 
 Gossiper . instance . doShadowRound ( ) ; 
 @ @ - 426 , 7 + 427 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 Collection < Token > tokens = TokenSerializer . deserialize ( getPartitioner ( ) , new DataInputStream ( new ByteArrayInputStream ( getApplicationStateValue ( DatabaseDescriptor . getReplaceAddress ( ) , ApplicationState . TOKENS ) ) ) ) ; 
 
 SystemKeyspace . setLocalHostId ( hostId ) ; / / use the replacee ' s host Id as our own so we receive hints , etc 
 - MessagingService . instance ( ) . shutdown ( ) ; 
 Gossiper . instance . resetEndpointStateMap ( ) ; / / clean up since we have what we need 
 return tokens ; 
 } 
 @ @ - 439 , 7 + 439 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 public synchronized void checkForEndpointCollision ( ) throws ConfigurationException 
 { 
 logger . debug ( " Starting shadow gossip round to check for endpoint collision " ) ; 
 - MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 + if ( ! MessagingService . instance ( ) . isListening ( ) ) 
 + MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 Gossiper . instance . doShadowRound ( ) ; 
 EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( FBUtilities . getBroadcastAddress ( ) ) ; 
 if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) ) 
 @ @ - 448 , 7 + 449 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 " Use cassandra . replace _ address if you want to replace this node . " , 
 FBUtilities . getBroadcastAddress ( ) ) ) ; 
 } 
 - MessagingService . instance ( ) . shutdown ( ) ; 
 Gossiper . instance . resetEndpointStateMap ( ) ; 
 } 
 
 @ @ - 492 , 7 + 492 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 Gossiper . instance . start ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ; / / needed for node - ring gathering . 
 Gossiper . instance . addLocalApplicationState ( ApplicationState . NET _ VERSION , valueFactory . networkVersion ( ) ) ; 
 
 - MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 + if ( ! MessagingService . instance ( ) . isListening ( ) ) 
 + MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 Uninterruptibles . sleepUninterruptibly ( ringDelay , TimeUnit . MILLISECONDS ) ; 
 } 
 
 @ @ - 660 , 7 + 661 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 Schema . instance . updateVersionAndAnnounce ( ) ; / / Ensure we know our own actual Schema UUID in preparation for updates 
 
 
 - MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 + if ( ! MessagingService . instance ( ) . isListening ( ) ) 
 + MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 LoadBroadcaster . instance . startBroadcasting ( ) ; 
 
 HintedHandOffManager . instance . start ( ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ac4c010 . . c01b4a8 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 7 @ @ 
 + 2 . 0 . 3 
 + * Reject bootstrapping if the node already exists in gossip ( CASSANDRA - 5571 ) 
 + 
 + 
 2 . 0 . 2 
 * Update FailureDetector to use nanontime ( CASSANDRA - 4925 ) 
 * Fix FileCacheService regressions ( CASSANDRA - 6149 )
