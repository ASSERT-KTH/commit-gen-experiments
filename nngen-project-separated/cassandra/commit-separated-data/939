BLEU SCORE: 0.02931251013275449

TEST MSG: IncomingStreamingConnection version check message wrong
GENERATED MSG: merge r1170360 from 1 . 0 . 0

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4c81a98 . . b6438b8 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 6 <nl> + * IncomingStreamingConnection version check message wrong ( CASSANDRA - 11462 ) <nl> * DatabaseDescriptor should log stacktrace in case of Eception during seed provider creation ( CASSANDRA - 11312 ) <nl> * Use canonical path for directory in SSTable descriptor ( CASSANDRA - 10587 ) <nl> * Add cassandra - stress keystore option ( CASSANDRA - 9325 ) <nl> diff - - git a / src / java / org / apache / cassandra / net / IncomingStreamingConnection . java b / src / java / org / apache / cassandra / net / IncomingStreamingConnection . java <nl> index 842676d . . 79a814d 100644 <nl> - - - a / src / java / org / apache / cassandra / net / IncomingStreamingConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / IncomingStreamingConnection . java <nl> @ @ - 56 , 9 + 56 , 10 @ @ public class IncomingStreamingConnection extends Thread implements Closeable <nl> { <nl> try <nl> { <nl> - / / streaming connections are per - session and have a fixed version . we can ' t do anything with a wrong - version stream connection , so drop it . <nl> + / / streaming connections are per - session and have a fixed version . <nl> + / / we can ' t do anything with a wrong - version stream connection , so drop it . <nl> if ( version ! = StreamMessage . CURRENT _ VERSION ) <nl> - throw new IOException ( String . format ( " Received stream using protocol version % d ( my version % d ) . Terminating connection " , version , MessagingService . current _ version ) ) ; <nl> + throw new IOException ( String . format ( " Received stream using protocol version % d ( my version % d ) . Terminating connection " , version , StreamMessage . CURRENT _ VERSION ) ) ; <nl> <nl> DataInput input = new DataInputStream ( socket . getInputStream ( ) ) ; <nl> StreamInitMessage init = StreamInitMessage . serializer . deserialize ( input , version ) ; <nl> @ @ - 75 , 7 + 76 , 9 @ @ public class IncomingStreamingConnection extends Thread implements Closeable <nl> } <nl> catch ( IOException e ) <nl> { <nl> - logger . trace ( " IOException reading from socket ; closing " , e ) ; <nl> + logger . error ( String . format ( " IOException while reading from socket from % s , closing : % s " , <nl> + socket . getRemoteSocketAddress ( ) , e ) ) ; <nl> + logger . trace ( String . format ( " IOException while reading from socket from % s , closing " , socket . getRemoteSocketAddress ( ) ) , e ) ; <nl> close ( ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> index b105803 . . 015b5fe 100644 <nl> - - - a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> @ @ - 182 , 7 + 182 , 8 @ @ public class IncomingTcpConnection extends Thread <nl> <nl> private void stream ( StreamHeader streamHeader , DataInputStream input ) throws IOException <nl> { <nl> - if ( DatabaseDescriptor . getEncryptionOptions ( ) . internode _ encryption = = EncryptionOptions . InternodeEncryption . all ) <nl> + EncryptionOptions options = DatabaseDescriptor . getEncryptionOptions ( ) ; <nl> + if ( options ! = null & & options . internode _ encryption = = EncryptionOptions . InternodeEncryption . all ) <nl> new SSLIncomingStreamReader ( streamHeader , socket , input ) . read ( ) ; <nl> else <nl> new IncomingStreamReader ( streamHeader , socket ) . read ( ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4c81a98 . . b6438b8 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 6 
 + * IncomingStreamingConnection version check message wrong ( CASSANDRA - 11462 ) 
 * DatabaseDescriptor should log stacktrace in case of Eception during seed provider creation ( CASSANDRA - 11312 ) 
 * Use canonical path for directory in SSTable descriptor ( CASSANDRA - 10587 ) 
 * Add cassandra - stress keystore option ( CASSANDRA - 9325 ) 
 diff - - git a / src / java / org / apache / cassandra / net / IncomingStreamingConnection . java b / src / java / org / apache / cassandra / net / IncomingStreamingConnection . java 
 index 842676d . . 79a814d 100644 
 - - - a / src / java / org / apache / cassandra / net / IncomingStreamingConnection . java 
 + + + b / src / java / org / apache / cassandra / net / IncomingStreamingConnection . java 
 @ @ - 56 , 9 + 56 , 10 @ @ public class IncomingStreamingConnection extends Thread implements Closeable 
 { 
 try 
 { 
 - / / streaming connections are per - session and have a fixed version . we can ' t do anything with a wrong - version stream connection , so drop it . 
 + / / streaming connections are per - session and have a fixed version . 
 + / / we can ' t do anything with a wrong - version stream connection , so drop it . 
 if ( version ! = StreamMessage . CURRENT _ VERSION ) 
 - throw new IOException ( String . format ( " Received stream using protocol version % d ( my version % d ) . Terminating connection " , version , MessagingService . current _ version ) ) ; 
 + throw new IOException ( String . format ( " Received stream using protocol version % d ( my version % d ) . Terminating connection " , version , StreamMessage . CURRENT _ VERSION ) ) ; 
 
 DataInput input = new DataInputStream ( socket . getInputStream ( ) ) ; 
 StreamInitMessage init = StreamInitMessage . serializer . deserialize ( input , version ) ; 
 @ @ - 75 , 7 + 76 , 9 @ @ public class IncomingStreamingConnection extends Thread implements Closeable 
 } 
 catch ( IOException e ) 
 { 
 - logger . trace ( " IOException reading from socket ; closing " , e ) ; 
 + logger . error ( String . format ( " IOException while reading from socket from % s , closing : % s " , 
 + socket . getRemoteSocketAddress ( ) , e ) ) ; 
 + logger . trace ( String . format ( " IOException while reading from socket from % s , closing " , socket . getRemoteSocketAddress ( ) ) , e ) ; 
 close ( ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 index b105803 . . 015b5fe 100644 
 - - - a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 + + + b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 @ @ - 182 , 7 + 182 , 8 @ @ public class IncomingTcpConnection extends Thread 
 
 private void stream ( StreamHeader streamHeader , DataInputStream input ) throws IOException 
 { 
 - if ( DatabaseDescriptor . getEncryptionOptions ( ) . internode _ encryption = = EncryptionOptions . InternodeEncryption . all ) 
 + EncryptionOptions options = DatabaseDescriptor . getEncryptionOptions ( ) ; 
 + if ( options ! = null & & options . internode _ encryption = = EncryptionOptions . InternodeEncryption . all ) 
 new SSLIncomingStreamReader ( streamHeader , socket , input ) . read ( ) ; 
 else 
 new IncomingStreamReader ( streamHeader , socket ) . read ( ) ;
