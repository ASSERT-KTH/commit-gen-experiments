BLEU SCORE: 0.015284801196484512

TEST MSG: Modify build file to include html doc in artifacts
GENERATED MSG: apache - cassandra - cql - * . jar as a separate artifact

TEST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 51f7252 . . 8946ea3 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1021 , 7 + 1021 , 7 @ @ <nl> < / target > <nl> <nl> < ! - - creates release tarballs - - > <nl> - < target name = " artifacts " depends = " jar , javadoc " <nl> + < target name = " artifacts " depends = " jar , javadoc , gen - doc " <nl> description = " Create Cassandra release artifacts " > <nl> < mkdir dir = " $ { dist . dir } " / > <nl> < ! - - fix the control linefeed so that builds on windows works on linux - - > <nl> @ @ - 1041 , 9 + 1041 , 15 @ @ <nl> < / copy > <nl> < copy todir = " $ { dist . dir } / doc " > <nl> < fileset dir = " doc " > <nl> - < exclude name = " cql3 / CQL . textile " / > <nl> + < include name = " cql3 / CQL . html " / > <nl> + < include name = " cql3 / CQL . css " / > <nl> + < include name = " SASI . md " / > <nl> < / fileset > <nl> < / copy > <nl> + < copy todir = " $ { dist . dir } / doc / html " > <nl> + < fileset dir = " doc " / > <nl> + < globmapper from = " build / html / * " to = " * " / > <nl> + < / copy > <nl> < copy todir = " $ { dist . dir } / bin " > <nl> < fileset dir = " bin " / > <nl> < / copy >
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / CompactionManager . java b / src / java / org / apache / cassandra / db / CompactionManager . java <nl> index 2270dab . . 6310d62 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / CompactionManager . java <nl> @ @ - 378 , 7 + 378 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> submitUserDefined ( cfs , descriptors , getDefaultGcBefore ( cfs ) ) ; <nl> } <nl> <nl> - private Future < Object > submitUserDefined ( final ColumnFamilyStore cfs , final Collection < Descriptor > dataFiles , final int gcBefore ) <nl> + Future < Object > submitUserDefined ( final ColumnFamilyStore cfs , final Collection < Descriptor > dataFiles , final int gcBefore ) <nl> { <nl> Callable < Object > callable = new Callable < Object > ( ) <nl> { <nl> diff - - git a / test / unit / org / apache / cassandra / db / CompactionsPurgeTest . java b / test / unit / org / apache / cassandra / db / CompactionsPurgeTest . java <nl> index 9aeefec . . 84b1bf1 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / CompactionsPurgeTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / CompactionsPurgeTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package org . apache . cassandra . db ; <nl> import java . io . IOException ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . Collection ; <nl> + import java . util . Collections ; <nl> import java . util . concurrent . ExecutionException ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 28 , 6 + 29 , 7 @ @ import org . junit . Test ; <nl> import org . apache . cassandra . CleanupHelper ; <nl> import org . apache . cassandra . db . filter . QueryFilter ; <nl> import org . apache . cassandra . db . filter . QueryPath ; <nl> + import org . apache . cassandra . io . sstable . Descriptor ; <nl> import org . apache . cassandra . io . sstable . SSTableReader ; <nl> import org . apache . cassandra . Util ; <nl> <nl> @ @ - 148 , 7 + 150 , 7 @ @ public class CompactionsPurgeTest extends CleanupHelper <nl> <nl> Table table = Table . open ( TABLE1 ) ; <nl> String cfName = " Standard2 " ; <nl> - ColumnFamilyStore store = table . getColumnFamilyStore ( cfName ) ; <nl> + ColumnFamilyStore cfs = table . getColumnFamilyStore ( cfName ) ; <nl> <nl> DecoratedKey key = Util . dk ( " key1 " ) ; <nl> RowMutation rm ; <nl> @ @ - 168 , 13 + 170 , 14 @ @ public class CompactionsPurgeTest extends CleanupHelper <nl> rm . delete ( new QueryPath ( cfName , null , ByteBufferUtil . bytes ( String . valueOf ( i ) ) ) , 1 ) ; <nl> rm . apply ( ) ; <nl> } <nl> - store . forceBlockingFlush ( ) ; <nl> + cfs . forceBlockingFlush ( ) ; <nl> <nl> - assert store . getSSTables ( ) . size ( ) = = 1 : store . getSSTables ( ) ; / / inserts & deletes were in the same memtable - > only deletes in sstable <nl> + assert cfs . getSSTables ( ) . size ( ) = = 1 : cfs . getSSTables ( ) ; / / inserts & deletes were in the same memtable - > only deletes in sstable <nl> <nl> / / compact and test that the row is completely gone <nl> - CompactionManager . instance . submitMajor ( store , 0 , Integer . MAX _ VALUE ) . get ( ) ; <nl> - assert store . getSSTables ( ) . isEmpty ( ) ; <nl> + Descriptor descriptor = cfs . getSSTables ( ) . iterator ( ) . next ( ) . descriptor ; <nl> + CompactionManager . instance . submitUserDefined ( cfs , Collections . singletonList ( descriptor ) , Integer . MAX _ VALUE ) . get ( ) ; <nl> + assert cfs . getSSTables ( ) . isEmpty ( ) ; <nl> ColumnFamily cf = table . getColumnFamilyStore ( cfName ) . getColumnFamily ( QueryFilter . getIdentityFilter ( key , new QueryPath ( cfName ) ) ) ; <nl> assert cf = = null : cf ; <nl> } <nl> @ @ - 210 , 8 + 213 , 9 @ @ public class CompactionsPurgeTest extends CleanupHelper <nl> <nl> / / flush and major compact <nl> cfs . forceBlockingFlush ( ) ; <nl> - CompactionManager . instance . submitMajor ( cfs , 0 , Integer . MAX _ VALUE ) . get ( ) ; <nl> - / / cfs . invalidateCachedRow ( key ) ; <nl> + assert cfs . getSSTables ( ) . size ( ) = = 1 ; <nl> + Descriptor descriptor = cfs . getSSTables ( ) . iterator ( ) . next ( ) . descriptor ; <nl> + CompactionManager . instance . submitUserDefined ( cfs , Collections . singletonList ( descriptor ) , Integer . MAX _ VALUE ) . get ( ) ; <nl> <nl> / / re - inserts with timestamp lower than delete <nl> rm = new RowMutation ( tableName , key . key ) ;

TEST DIFF:
diff - - git a / build . xml b / build . xml 
 index 51f7252 . . 8946ea3 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 1021 , 7 + 1021 , 7 @ @ 
 < / target > 
 
 < ! - - creates release tarballs - - > 
 - < target name = " artifacts " depends = " jar , javadoc " 
 + < target name = " artifacts " depends = " jar , javadoc , gen - doc " 
 description = " Create Cassandra release artifacts " > 
 < mkdir dir = " $ { dist . dir } " / > 
 < ! - - fix the control linefeed so that builds on windows works on linux - - > 
 @ @ - 1041 , 9 + 1041 , 15 @ @ 
 < / copy > 
 < copy todir = " $ { dist . dir } / doc " > 
 < fileset dir = " doc " > 
 - < exclude name = " cql3 / CQL . textile " / > 
 + < include name = " cql3 / CQL . html " / > 
 + < include name = " cql3 / CQL . css " / > 
 + < include name = " SASI . md " / > 
 < / fileset > 
 < / copy > 
 + < copy todir = " $ { dist . dir } / doc / html " > 
 + < fileset dir = " doc " / > 
 + < globmapper from = " build / html / * " to = " * " / > 
 + < / copy > 
 < copy todir = " $ { dist . dir } / bin " > 
 < fileset dir = " bin " / > 
 < / copy >

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / CompactionManager . java b / src / java / org / apache / cassandra / db / CompactionManager . java 
 index 2270dab . . 6310d62 100644 
 - - - a / src / java / org / apache / cassandra / db / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / CompactionManager . java 
 @ @ - 378 , 7 + 378 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 submitUserDefined ( cfs , descriptors , getDefaultGcBefore ( cfs ) ) ; 
 } 
 
 - private Future < Object > submitUserDefined ( final ColumnFamilyStore cfs , final Collection < Descriptor > dataFiles , final int gcBefore ) 
 + Future < Object > submitUserDefined ( final ColumnFamilyStore cfs , final Collection < Descriptor > dataFiles , final int gcBefore ) 
 { 
 Callable < Object > callable = new Callable < Object > ( ) 
 { 
 diff - - git a / test / unit / org / apache / cassandra / db / CompactionsPurgeTest . java b / test / unit / org / apache / cassandra / db / CompactionsPurgeTest . java 
 index 9aeefec . . 84b1bf1 100644 
 - - - a / test / unit / org / apache / cassandra / db / CompactionsPurgeTest . java 
 + + + b / test / unit / org / apache / cassandra / db / CompactionsPurgeTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package org . apache . cassandra . db ; 
 import java . io . IOException ; 
 import java . nio . ByteBuffer ; 
 import java . util . Collection ; 
 + import java . util . Collections ; 
 import java . util . concurrent . ExecutionException ; 
 
 import org . junit . Test ; 
 @ @ - 28 , 6 + 29 , 7 @ @ import org . junit . Test ; 
 import org . apache . cassandra . CleanupHelper ; 
 import org . apache . cassandra . db . filter . QueryFilter ; 
 import org . apache . cassandra . db . filter . QueryPath ; 
 + import org . apache . cassandra . io . sstable . Descriptor ; 
 import org . apache . cassandra . io . sstable . SSTableReader ; 
 import org . apache . cassandra . Util ; 
 
 @ @ - 148 , 7 + 150 , 7 @ @ public class CompactionsPurgeTest extends CleanupHelper 
 
 Table table = Table . open ( TABLE1 ) ; 
 String cfName = " Standard2 " ; 
 - ColumnFamilyStore store = table . getColumnFamilyStore ( cfName ) ; 
 + ColumnFamilyStore cfs = table . getColumnFamilyStore ( cfName ) ; 
 
 DecoratedKey key = Util . dk ( " key1 " ) ; 
 RowMutation rm ; 
 @ @ - 168 , 13 + 170 , 14 @ @ public class CompactionsPurgeTest extends CleanupHelper 
 rm . delete ( new QueryPath ( cfName , null , ByteBufferUtil . bytes ( String . valueOf ( i ) ) ) , 1 ) ; 
 rm . apply ( ) ; 
 } 
 - store . forceBlockingFlush ( ) ; 
 + cfs . forceBlockingFlush ( ) ; 
 
 - assert store . getSSTables ( ) . size ( ) = = 1 : store . getSSTables ( ) ; / / inserts & deletes were in the same memtable - > only deletes in sstable 
 + assert cfs . getSSTables ( ) . size ( ) = = 1 : cfs . getSSTables ( ) ; / / inserts & deletes were in the same memtable - > only deletes in sstable 
 
 / / compact and test that the row is completely gone 
 - CompactionManager . instance . submitMajor ( store , 0 , Integer . MAX _ VALUE ) . get ( ) ; 
 - assert store . getSSTables ( ) . isEmpty ( ) ; 
 + Descriptor descriptor = cfs . getSSTables ( ) . iterator ( ) . next ( ) . descriptor ; 
 + CompactionManager . instance . submitUserDefined ( cfs , Collections . singletonList ( descriptor ) , Integer . MAX _ VALUE ) . get ( ) ; 
 + assert cfs . getSSTables ( ) . isEmpty ( ) ; 
 ColumnFamily cf = table . getColumnFamilyStore ( cfName ) . getColumnFamily ( QueryFilter . getIdentityFilter ( key , new QueryPath ( cfName ) ) ) ; 
 assert cf = = null : cf ; 
 } 
 @ @ - 210 , 8 + 213 , 9 @ @ public class CompactionsPurgeTest extends CleanupHelper 
 
 / / flush and major compact 
 cfs . forceBlockingFlush ( ) ; 
 - CompactionManager . instance . submitMajor ( cfs , 0 , Integer . MAX _ VALUE ) . get ( ) ; 
 - / / cfs . invalidateCachedRow ( key ) ; 
 + assert cfs . getSSTables ( ) . size ( ) = = 1 ; 
 + Descriptor descriptor = cfs . getSSTables ( ) . iterator ( ) . next ( ) . descriptor ; 
 + CompactionManager . instance . submitUserDefined ( cfs , Collections . singletonList ( descriptor ) , Integer . MAX _ VALUE ) . get ( ) ; 
 
 / / re - inserts with timestamp lower than delete 
 rm = new RowMutation ( tableName , key . key ) ;
