BLEU SCORE: 0.05816635421147513

TEST MSG: Fix SSTableLoader fail when the loaded table contains dropped columns ( CASSANDRA - 13276 )
GENERATED MSG: Fix dtest failures caused by CASSANDRA - 8143

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 81d5b06 . . 6a1e486 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 14 <nl> + * Fix SSTableLoader fail when the loaded table contains dropped columns ( CASSANDRA - 13276 ) <nl> * Avoid name clashes in CassandraIndexTest ( CASSANDRA - 13427 ) <nl> * Handling partially written hint files ( CASSANDRA - 12728 ) <nl> * Interrupt replaying hints on decommission ( CASSANDRA - 13308 ) <nl> diff - - git a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> index 4c6b12e . . 97237d0 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> + + + b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> @ @ - 18 , 7 + 18 , 9 @ @ <nl> package org . apache . cassandra . utils ; <nl> <nl> import java . net . InetAddress ; <nl> + import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> + import java . util . concurrent . TimeUnit ; <nl> <nl> import com . datastax . driver . core . * ; <nl> <nl> @ @ - 184 , 16 + 186 , 29 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client <nl> for ( Row colRow : session . execute ( columnsQuery , keyspace , name ) ) <nl> defs . add ( createDefinitionFromRow ( colRow , keyspace , name , types ) ) ; <nl> <nl> - return CFMetaData . create ( keyspace , <nl> - name , <nl> - id , <nl> - isDense , <nl> - isCompound , <nl> - isSuper , <nl> - isCounter , <nl> - isView , <nl> - defs , <nl> - partitioner ) ; <nl> + CFMetaData metadata = CFMetaData . create ( keyspace , <nl> + name , <nl> + id , <nl> + isDense , <nl> + isCompound , <nl> + isSuper , <nl> + isCounter , <nl> + isView , <nl> + defs , <nl> + partitioner ) ; <nl> + <nl> + String droppedColumnsQuery = String . format ( " SELECT * FROM % s . % s WHERE keyspace _ name = ? AND table _ name = ? " , <nl> + SchemaKeyspace . NAME , <nl> + SchemaKeyspace . DROPPED _ COLUMNS ) ; <nl> + Map < ByteBuffer , CFMetaData . DroppedColumn > droppedColumns = new HashMap < > ( ) ; <nl> + for ( Row colRow : session . execute ( droppedColumnsQuery , keyspace , name ) ) <nl> + { <nl> + CFMetaData . DroppedColumn droppedColumn = createDroppedColumnFromRow ( colRow , keyspace ) ; <nl> + droppedColumns . put ( UTF8Type . instance . decompose ( droppedColumn . name ) , droppedColumn ) ; <nl> + } <nl> + metadata . droppedColumns ( droppedColumns ) ; <nl> + <nl> + return metadata ; <nl> } <nl> <nl> private static ColumnDefinition createDefinitionFromRow ( Row row , String keyspace , String table , Types types ) <nl> @ @ - 211 , 4 + 226 , 12 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client <nl> ColumnDefinition . Kind kind = ColumnDefinition . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) ; <nl> return new ColumnDefinition ( keyspace , table , name , type , position , kind ) ; <nl> } <nl> + <nl> + private static CFMetaData . DroppedColumn createDroppedColumnFromRow ( Row row , String keyspace ) <nl> + { <nl> + String name = row . getString ( " column _ name " ) ; <nl> + AbstractType < ? > type = CQLTypeParser . parse ( keyspace , row . getString ( " type " ) , Types . none ( ) ) ; <nl> + long droppedTime = TimeUnit . MILLISECONDS . toMicros ( row . getTimestamp ( " dropped _ time " ) . getTime ( ) ) ; <nl> + return new CFMetaData . DroppedColumn ( name , type , droppedTime ) ; <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 81d5b06 . . 6a1e486 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 14 
 + * Fix SSTableLoader fail when the loaded table contains dropped columns ( CASSANDRA - 13276 ) 
 * Avoid name clashes in CassandraIndexTest ( CASSANDRA - 13427 ) 
 * Handling partially written hint files ( CASSANDRA - 12728 ) 
 * Interrupt replaying hints on decommission ( CASSANDRA - 13308 ) 
 diff - - git a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 index 4c6b12e . . 97237d0 100644 
 - - - a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 + + + b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 @ @ - 18 , 7 + 18 , 9 @ @ 
 package org . apache . cassandra . utils ; 
 
 import java . net . InetAddress ; 
 + import java . nio . ByteBuffer ; 
 import java . util . * ; 
 + import java . util . concurrent . TimeUnit ; 
 
 import com . datastax . driver . core . * ; 
 
 @ @ - 184 , 16 + 186 , 29 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client 
 for ( Row colRow : session . execute ( columnsQuery , keyspace , name ) ) 
 defs . add ( createDefinitionFromRow ( colRow , keyspace , name , types ) ) ; 
 
 - return CFMetaData . create ( keyspace , 
 - name , 
 - id , 
 - isDense , 
 - isCompound , 
 - isSuper , 
 - isCounter , 
 - isView , 
 - defs , 
 - partitioner ) ; 
 + CFMetaData metadata = CFMetaData . create ( keyspace , 
 + name , 
 + id , 
 + isDense , 
 + isCompound , 
 + isSuper , 
 + isCounter , 
 + isView , 
 + defs , 
 + partitioner ) ; 
 + 
 + String droppedColumnsQuery = String . format ( " SELECT * FROM % s . % s WHERE keyspace _ name = ? AND table _ name = ? " , 
 + SchemaKeyspace . NAME , 
 + SchemaKeyspace . DROPPED _ COLUMNS ) ; 
 + Map < ByteBuffer , CFMetaData . DroppedColumn > droppedColumns = new HashMap < > ( ) ; 
 + for ( Row colRow : session . execute ( droppedColumnsQuery , keyspace , name ) ) 
 + { 
 + CFMetaData . DroppedColumn droppedColumn = createDroppedColumnFromRow ( colRow , keyspace ) ; 
 + droppedColumns . put ( UTF8Type . instance . decompose ( droppedColumn . name ) , droppedColumn ) ; 
 + } 
 + metadata . droppedColumns ( droppedColumns ) ; 
 + 
 + return metadata ; 
 } 
 
 private static ColumnDefinition createDefinitionFromRow ( Row row , String keyspace , String table , Types types ) 
 @ @ - 211 , 4 + 226 , 12 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client 
 ColumnDefinition . Kind kind = ColumnDefinition . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) ; 
 return new ColumnDefinition ( keyspace , table , name , type , position , kind ) ; 
 } 
 + 
 + private static CFMetaData . DroppedColumn createDroppedColumnFromRow ( Row row , String keyspace ) 
 + { 
 + String name = row . getString ( " column _ name " ) ; 
 + AbstractType < ? > type = CQLTypeParser . parse ( keyspace , row . getString ( " type " ) , Types . none ( ) ) ; 
 + long droppedTime = TimeUnit . MILLISECONDS . toMicros ( row . getTimestamp ( " dropped _ time " ) . getTime ( ) ) ; 
 + return new CFMetaData . DroppedColumn ( name , type , droppedTime ) ; 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
