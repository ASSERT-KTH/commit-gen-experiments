BLEU SCORE: 0.02383853510228548

TEST MSG: Fix tests by making QP use its own executor
GENERATED MSG: Metrics for prepared stmt usage and eviction

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java <nl> index 9a09d42 . . 0c75642 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java <nl> @ @ - 19 , 9 + 19 , 7 @ @ package org . apache . cassandra . cql3 ; <nl> <nl> import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> - import java . util . concurrent . ConcurrentMap ; <nl> - import java . util . concurrent . ConcurrentHashMap ; <nl> - import java . util . concurrent . TimeUnit ; <nl> + import java . util . concurrent . * ; <nl> import java . util . concurrent . atomic . AtomicInteger ; <nl> <nl> import com . google . common . annotations . VisibleForTesting ; <nl> @ @ - 89 , 7 + 87 , 8 @ @ public class QueryProcessor implements QueryHandler <nl> @ VisibleForTesting <nl> public static final CQLMetrics metrics = new CQLMetrics ( ) ; <nl> <nl> - private static AtomicInteger lastMinuteEvictionsCount = new AtomicInteger ( 0 ) ; <nl> + private static final AtomicInteger lastMinuteEvictionsCount = new AtomicInteger ( 0 ) ; <nl> + private static final ScheduledExecutorService evictionCheckTimer = Executors . newScheduledThreadPool ( 1 ) ; <nl> <nl> static <nl> { <nl> @ @ - 118 , 6 + 117 , 17 @ @ public class QueryProcessor implements QueryHandler <nl> } ) <nl> . build ( ) ; <nl> <nl> + evictionCheckTimer . scheduleAtFixedRate ( new Runnable ( ) <nl> + { <nl> + public void run ( ) <nl> + { <nl> + long count = lastMinuteEvictionsCount . getAndSet ( 0 ) ; <nl> + if ( count > 0 ) <nl> + logger . info ( " { } prepared statements discarded in the last minute because cache limit reached ( { } bytes ) " , <nl> + count , <nl> + MAX _ CACHE _ PREPARED _ MEMORY ) ; <nl> + } <nl> + } , 1 , 1 , TimeUnit . MINUTES ) ; <nl> } <nl> <nl> public static int preparedStatementsCount ( ) <nl> @ @ - 155 , 18 + 165 , 6 @ @ public class QueryProcessor implements QueryHandler <nl> private QueryProcessor ( ) <nl> { <nl> MigrationManager . instance . register ( new MigrationSubscriber ( ) ) ; <nl> - <nl> - StorageService . scheduledTasks . scheduleAtFixedRate ( new Runnable ( ) <nl> - { <nl> - public void run ( ) <nl> - { <nl> - long count = lastMinuteEvictionsCount . getAndSet ( 0 ) ; <nl> - if ( count > 0 ) <nl> - logger . info ( " { } prepared statements discarded in the last minute because cache limit reached ( { } bytes ) " , <nl> - count , <nl> - MAX _ CACHE _ PREPARED _ MEMORY ) ; <nl> - } <nl> - } , 1 , 1 , TimeUnit . MINUTES ) ; <nl> } <nl> <nl> public ParsedStatement . Prepared getPrepared ( MD5Digest id )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java 
 index 9a09d42 . . 0c75642 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java 
 + + + b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java 
 @ @ - 19 , 9 + 19 , 7 @ @ package org . apache . cassandra . cql3 ; 
 
 import java . nio . ByteBuffer ; 
 import java . util . * ; 
 - import java . util . concurrent . ConcurrentMap ; 
 - import java . util . concurrent . ConcurrentHashMap ; 
 - import java . util . concurrent . TimeUnit ; 
 + import java . util . concurrent . * ; 
 import java . util . concurrent . atomic . AtomicInteger ; 
 
 import com . google . common . annotations . VisibleForTesting ; 
 @ @ - 89 , 7 + 87 , 8 @ @ public class QueryProcessor implements QueryHandler 
 @ VisibleForTesting 
 public static final CQLMetrics metrics = new CQLMetrics ( ) ; 
 
 - private static AtomicInteger lastMinuteEvictionsCount = new AtomicInteger ( 0 ) ; 
 + private static final AtomicInteger lastMinuteEvictionsCount = new AtomicInteger ( 0 ) ; 
 + private static final ScheduledExecutorService evictionCheckTimer = Executors . newScheduledThreadPool ( 1 ) ; 
 
 static 
 { 
 @ @ - 118 , 6 + 117 , 17 @ @ public class QueryProcessor implements QueryHandler 
 } ) 
 . build ( ) ; 
 
 + evictionCheckTimer . scheduleAtFixedRate ( new Runnable ( ) 
 + { 
 + public void run ( ) 
 + { 
 + long count = lastMinuteEvictionsCount . getAndSet ( 0 ) ; 
 + if ( count > 0 ) 
 + logger . info ( " { } prepared statements discarded in the last minute because cache limit reached ( { } bytes ) " , 
 + count , 
 + MAX _ CACHE _ PREPARED _ MEMORY ) ; 
 + } 
 + } , 1 , 1 , TimeUnit . MINUTES ) ; 
 } 
 
 public static int preparedStatementsCount ( ) 
 @ @ - 155 , 18 + 165 , 6 @ @ public class QueryProcessor implements QueryHandler 
 private QueryProcessor ( ) 
 { 
 MigrationManager . instance . register ( new MigrationSubscriber ( ) ) ; 
 - 
 - StorageService . scheduledTasks . scheduleAtFixedRate ( new Runnable ( ) 
 - { 
 - public void run ( ) 
 - { 
 - long count = lastMinuteEvictionsCount . getAndSet ( 0 ) ; 
 - if ( count > 0 ) 
 - logger . info ( " { } prepared statements discarded in the last minute because cache limit reached ( { } bytes ) " , 
 - count , 
 - MAX _ CACHE _ PREPARED _ MEMORY ) ; 
 - } 
 - } , 1 , 1 , TimeUnit . MINUTES ) ; 
 } 
 
 public ParsedStatement . Prepared getPrepared ( MD5Digest id )

NEAREST DIFF:
ELIMINATEDSENTENCE
