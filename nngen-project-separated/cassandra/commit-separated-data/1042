BLEU SCORE: 0.07986788803078405

TEST MSG: Fix CHANGES . txt
GENERATED MSG: remove merge markers

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 394faaf . . aa4f981 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 358 , 8 + 358 , 7 @ @ Merged from 2 . 2 : <nl> * Fall back to 1 / 4 commitlog volume for commitlog _ total _ space on small disks <nl> ( CASSANDRA - 10199 ) <nl> Merged from 2 . 1 : <nl> - * ure SSTables for legacy KEYS indexes can be read ( CASSANDRA - 11045 ) <nl> - dded configurable warning threshold for GC duration ( CASSANDRA - 8907 ) <nl> + * Added configurable warning threshold for GC duration ( CASSANDRA - 8907 ) <nl> * Fix handling of streaming EOF ( CASSANDRA - 10206 ) <nl> * Only check KeyCache when it is enabled <nl> * Change streaming _ socket _ timeout _ in _ ms default to 1 hour ( CASSANDRA - 8611 )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d71fd28 . . f684d6b 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 50 , 6 + 50 , 8 @ @ Merged from 1 . 1 : <nl> * better handling for amid compaction failure ( CASSANDRA - 5137 ) <nl> * calculate pending ranges asynchronously ( CASSANDRA - 5135 ) <nl> * convert default marshallers list to map for better readability ( CASSANDRA - 5109 ) <nl> + * Expose droppable tombstone ratio stats over JMX ( CASSANDRA - 5159 ) <nl> + <nl> <nl> <nl> 1 . 2 . 0 <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 7072921 . . cb12792 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 2043 , 4 + 2043 , 9 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> markCompacted ( truncatedSSTables , OperationType . UNKNOWN ) ; <nl> return ReplayPosition . getReplayPosition ( truncatedSSTables ) ; <nl> } <nl> + <nl> + public double getDroppableTombstoneRatio ( ) <nl> + { <nl> + return getDataTracker ( ) . getDroppableTombstoneRatio ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java b / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java <nl> index 0a6b077 . . 554c204 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java <nl> @ @ - 333 , 4 + 333 , 10 @ @ public interface ColumnFamilyStoreMBean <nl> * array index corresponds to level ( int [ 0 ] is for level 0 , . . . ) . <nl> * / <nl> public int [ ] getSSTableCountPerLevel ( ) ; <nl> + <nl> + / * * <nl> + * Get the ratio of droppable tombstones to real columns ( and non - droppable tombstones ) <nl> + * @ return ratio <nl> + * / <nl> + public double getDroppableTombstoneRatio ( ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java <nl> index 7e8887f . . 749b64e 100644 <nl> - - - a / src / java / org / apache / cassandra / db / DataTracker . java <nl> + + + b / src / java / org / apache / cassandra / db / DataTracker . java <nl> @ @ - 389 , 6 + 389 , 24 @ @ public class DataTracker <nl> return count > 0 ? ( int ) ( sum / count ) : 0 ; <nl> } <nl> <nl> + public double getDroppableTombstoneRatio ( ) <nl> + { <nl> + double allDroppable = 0 ; <nl> + long allColumns = 0 ; <nl> + int localTime = ( int ) ( System . currentTimeMillis ( ) / 1000 ) ; <nl> + <nl> + for ( SSTableReader sstable : getSSTables ( ) ) <nl> + { <nl> + allDroppable + = sstable . getDroppableTombstonesBefore ( localTime - sstable . metadata . getGcGraceSeconds ( ) ) ; <nl> + allColumns + = sstable . getEstimatedColumnCount ( ) . mean ( ) * sstable . getEstimatedColumnCount ( ) . count ( ) ; <nl> + } <nl> + if ( allColumns > 0 ) <nl> + { <nl> + return allDroppable / allColumns ; <nl> + } <nl> + return 0 ; <nl> + } <nl> + <nl> public void notifySSTablesChanged ( Iterable < SSTableReader > removed , Iterable < SSTableReader > added , OperationType compactionType ) <nl> { <nl> for ( INotificationConsumer subscriber : subscribers ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableMetadata . java b / src / java / org / apache / cassandra / io / sstable / SSTableMetadata . java <nl> index e53fdf9 . . 8bd9e35 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableMetadata . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableMetadata . java <nl> @ @ - 121 , 12 + 121 , 22 @ @ public class SSTableMetadata <nl> long estimatedColumnCount = this . estimatedColumnCount . mean ( ) * this . estimatedColumnCount . count ( ) ; <nl> if ( estimatedColumnCount > 0 ) <nl> { <nl> - double droppable = estimatedTombstoneDropTime . sum ( gcBefore ) ; <nl> + double droppable = getDroppableTombstonesBefore ( gcBefore ) ; <nl> return droppable / estimatedColumnCount ; <nl> } <nl> return 0 . 0f ; <nl> } <nl> <nl> + / * * <nl> + * Get the amount of droppable tombstones <nl> + * @ param gcBefore the gc time <nl> + * @ return amount of droppable tombstones <nl> + * / <nl> + public double getDroppableTombstonesBefore ( int gcBefore ) <nl> + { <nl> + return estimatedTombstoneDropTime . sum ( gcBefore ) ; <nl> + } <nl> + <nl> public static class Collector <nl> { <nl> protected EstimatedHistogram estimatedRowSize = defaultRowSizeHistogram ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> index 42b4ae6 . . d0ef5d8 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> @ @ - 1086 , 6 + 1086 , 11 @ @ public class SSTableReader extends SSTable <nl> return sstableMetadata . getEstimatedDroppableTombstoneRatio ( gcBefore ) ; <nl> } <nl> <nl> + public double getDroppableTombstonesBefore ( int gcBefore ) <nl> + { <nl> + return sstableMetadata . getDroppableTombstonesBefore ( gcBefore ) ; <nl> + } <nl> + <nl> public double getCompressionRatio ( ) <nl> { <nl> return sstableMetadata . compressionRatio ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 394faaf . . aa4f981 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 358 , 8 + 358 , 7 @ @ Merged from 2 . 2 : 
 * Fall back to 1 / 4 commitlog volume for commitlog _ total _ space on small disks 
 ( CASSANDRA - 10199 ) 
 Merged from 2 . 1 : 
 - * ure SSTables for legacy KEYS indexes can be read ( CASSANDRA - 11045 ) 
 - dded configurable warning threshold for GC duration ( CASSANDRA - 8907 ) 
 + * Added configurable warning threshold for GC duration ( CASSANDRA - 8907 ) 
 * Fix handling of streaming EOF ( CASSANDRA - 10206 ) 
 * Only check KeyCache when it is enabled 
 * Change streaming _ socket _ timeout _ in _ ms default to 1 hour ( CASSANDRA - 8611 )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d71fd28 . . f684d6b 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 50 , 6 + 50 , 8 @ @ Merged from 1 . 1 : 
 * better handling for amid compaction failure ( CASSANDRA - 5137 ) 
 * calculate pending ranges asynchronously ( CASSANDRA - 5135 ) 
 * convert default marshallers list to map for better readability ( CASSANDRA - 5109 ) 
 + * Expose droppable tombstone ratio stats over JMX ( CASSANDRA - 5159 ) 
 + 
 
 
 1 . 2 . 0 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 7072921 . . cb12792 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 2043 , 4 + 2043 , 9 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 markCompacted ( truncatedSSTables , OperationType . UNKNOWN ) ; 
 return ReplayPosition . getReplayPosition ( truncatedSSTables ) ; 
 } 
 + 
 + public double getDroppableTombstoneRatio ( ) 
 + { 
 + return getDataTracker ( ) . getDroppableTombstoneRatio ( ) ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java b / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java 
 index 0a6b077 . . 554c204 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java 
 @ @ - 333 , 4 + 333 , 10 @ @ public interface ColumnFamilyStoreMBean 
 * array index corresponds to level ( int [ 0 ] is for level 0 , . . . ) . 
 * / 
 public int [ ] getSSTableCountPerLevel ( ) ; 
 + 
 + / * * 
 + * Get the ratio of droppable tombstones to real columns ( and non - droppable tombstones ) 
 + * @ return ratio 
 + * / 
 + public double getDroppableTombstoneRatio ( ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java 
 index 7e8887f . . 749b64e 100644 
 - - - a / src / java / org / apache / cassandra / db / DataTracker . java 
 + + + b / src / java / org / apache / cassandra / db / DataTracker . java 
 @ @ - 389 , 6 + 389 , 24 @ @ public class DataTracker 
 return count > 0 ? ( int ) ( sum / count ) : 0 ; 
 } 
 
 + public double getDroppableTombstoneRatio ( ) 
 + { 
 + double allDroppable = 0 ; 
 + long allColumns = 0 ; 
 + int localTime = ( int ) ( System . currentTimeMillis ( ) / 1000 ) ; 
 + 
 + for ( SSTableReader sstable : getSSTables ( ) ) 
 + { 
 + allDroppable + = sstable . getDroppableTombstonesBefore ( localTime - sstable . metadata . getGcGraceSeconds ( ) ) ; 
 + allColumns + = sstable . getEstimatedColumnCount ( ) . mean ( ) * sstable . getEstimatedColumnCount ( ) . count ( ) ; 
 + } 
 + if ( allColumns > 0 ) 
 + { 
 + return allDroppable / allColumns ; 
 + } 
 + return 0 ; 
 + } 
 + 
 public void notifySSTablesChanged ( Iterable < SSTableReader > removed , Iterable < SSTableReader > added , OperationType compactionType ) 
 { 
 for ( INotificationConsumer subscriber : subscribers ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableMetadata . java b / src / java / org / apache / cassandra / io / sstable / SSTableMetadata . java 
 index e53fdf9 . . 8bd9e35 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableMetadata . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableMetadata . java 
 @ @ - 121 , 12 + 121 , 22 @ @ public class SSTableMetadata 
 long estimatedColumnCount = this . estimatedColumnCount . mean ( ) * this . estimatedColumnCount . count ( ) ; 
 if ( estimatedColumnCount > 0 ) 
 { 
 - double droppable = estimatedTombstoneDropTime . sum ( gcBefore ) ; 
 + double droppable = getDroppableTombstonesBefore ( gcBefore ) ; 
 return droppable / estimatedColumnCount ; 
 } 
 return 0 . 0f ; 
 } 
 
 + / * * 
 + * Get the amount of droppable tombstones 
 + * @ param gcBefore the gc time 
 + * @ return amount of droppable tombstones 
 + * / 
 + public double getDroppableTombstonesBefore ( int gcBefore ) 
 + { 
 + return estimatedTombstoneDropTime . sum ( gcBefore ) ; 
 + } 
 + 
 public static class Collector 
 { 
 protected EstimatedHistogram estimatedRowSize = defaultRowSizeHistogram ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 index 42b4ae6 . . d0ef5d8 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 @ @ - 1086 , 6 + 1086 , 11 @ @ public class SSTableReader extends SSTable 
 return sstableMetadata . getEstimatedDroppableTombstoneRatio ( gcBefore ) ; 
 } 
 
 + public double getDroppableTombstonesBefore ( int gcBefore ) 
 + { 
 + return sstableMetadata . getDroppableTombstonesBefore ( gcBefore ) ; 
 + } 
 + 
 public double getCompressionRatio ( ) 
 { 
 return sstableMetadata . compressionRatio ;
