BLEU SCORE: 0.06567274736060397

TEST MSG: Include session IDs in repair start message
GENERATED MSG: Fail repair on non - existing table

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index df3c775 . . 8d96050 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 10 <nl> + * Include repair session IDs in repair start message ( CASSANDRA - 12532 ) <nl> * Add a blocking task to Index , run before joining the ring ( CASSANDRA - 12039 ) <nl> * Fix NPE when using CQLSSTableWriter ( CASSANDRA - 12667 ) <nl> * Support optional backpressure strategies at the coordinator ( CASSANDRA - 9318 ) <nl> diff - - git a / src / java / org / apache / cassandra / repair / RepairRunnable . java b / src / java / org / apache / cassandra / repair / RepairRunnable . java <nl> index ca06bcb . . efa8234 100644 <nl> - - - a / src / java / org / apache / cassandra / repair / RepairRunnable . java <nl> + + + b / src / java / org / apache / cassandra / repair / RepairRunnable . java <nl> @ @ - 110 , 7 + 110 , 7 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti <nl> protected void runMayThrow ( ) throws Exception <nl> { <nl> final TraceState traceState ; <nl> - <nl> + final UUID parentSession = UUIDGen . getTimeUUID ( ) ; <nl> final String tag = " repair : " + cmd ; <nl> <nl> final AtomicInteger progress = new AtomicInteger ( ) ; <nl> @ @ - 131 , 10 + 131 , 9 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti <nl> } <nl> <nl> final long startTime = System . currentTimeMillis ( ) ; <nl> - String message = String . format ( " Starting repair command # % d , repairing keyspace % s with % s " , cmd , keyspace , <nl> + String message = String . format ( " Starting repair command # % d ( % s ) , repairing keyspace % s with % s " , cmd , parentSession , keyspace , <nl> options ) ; <nl> logger . info ( message ) ; <nl> - fireProgressEvent ( tag , new ProgressEvent ( ProgressEventType . START , 0 , 100 , message ) ) ; <nl> if ( options . isTraced ( ) ) <nl> { <nl> StringBuilder cfsb = new StringBuilder ( ) ; <nl> @ @ - 144 , 6 + 143 , 8 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti <nl> UUID sessionId = Tracing . instance . newSession ( Tracing . TraceType . REPAIR ) ; <nl> traceState = Tracing . instance . begin ( " repair " , ImmutableMap . of ( " keyspace " , keyspace , " columnFamilies " , <nl> cfsb . substring ( 2 ) ) ) ; <nl> + message = message + " tracing with " + sessionId ; <nl> + fireProgressEvent ( tag , new ProgressEvent ( ProgressEventType . START , 0 , 100 , message ) ) ; <nl> Tracing . traceRepair ( message ) ; <nl> traceState . enableActivityNotification ( tag ) ; <nl> for ( ProgressListener listener : listeners ) <nl> @ @ - 154 , 6 + 155 , 7 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti <nl> } <nl> else <nl> { <nl> + fireProgressEvent ( tag , new ProgressEvent ( ProgressEventType . START , 0 , 100 , message ) ) ; <nl> traceState = null ; <nl> } <nl> <nl> @ @ - 204 , 7 + 206 , 6 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti <nl> cfnames [ i ] = columnFamilyStores . get ( i ) . name ; <nl> } <nl> <nl> - final UUID parentSession = UUIDGen . getTimeUUID ( ) ; <nl> SystemDistributedKeyspace . startParentRepair ( parentSession , keyspace , cfnames , options ) ; <nl> long repairedAt ; <nl> try
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index df3c775 . . 8d96050 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 10 
 + * Include repair session IDs in repair start message ( CASSANDRA - 12532 ) 
 * Add a blocking task to Index , run before joining the ring ( CASSANDRA - 12039 ) 
 * Fix NPE when using CQLSSTableWriter ( CASSANDRA - 12667 ) 
 * Support optional backpressure strategies at the coordinator ( CASSANDRA - 9318 ) 
 diff - - git a / src / java / org / apache / cassandra / repair / RepairRunnable . java b / src / java / org / apache / cassandra / repair / RepairRunnable . java 
 index ca06bcb . . efa8234 100644 
 - - - a / src / java / org / apache / cassandra / repair / RepairRunnable . java 
 + + + b / src / java / org / apache / cassandra / repair / RepairRunnable . java 
 @ @ - 110 , 7 + 110 , 7 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti 
 protected void runMayThrow ( ) throws Exception 
 { 
 final TraceState traceState ; 
 - 
 + final UUID parentSession = UUIDGen . getTimeUUID ( ) ; 
 final String tag = " repair : " + cmd ; 
 
 final AtomicInteger progress = new AtomicInteger ( ) ; 
 @ @ - 131 , 10 + 131 , 9 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti 
 } 
 
 final long startTime = System . currentTimeMillis ( ) ; 
 - String message = String . format ( " Starting repair command # % d , repairing keyspace % s with % s " , cmd , keyspace , 
 + String message = String . format ( " Starting repair command # % d ( % s ) , repairing keyspace % s with % s " , cmd , parentSession , keyspace , 
 options ) ; 
 logger . info ( message ) ; 
 - fireProgressEvent ( tag , new ProgressEvent ( ProgressEventType . START , 0 , 100 , message ) ) ; 
 if ( options . isTraced ( ) ) 
 { 
 StringBuilder cfsb = new StringBuilder ( ) ; 
 @ @ - 144 , 6 + 143 , 8 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti 
 UUID sessionId = Tracing . instance . newSession ( Tracing . TraceType . REPAIR ) ; 
 traceState = Tracing . instance . begin ( " repair " , ImmutableMap . of ( " keyspace " , keyspace , " columnFamilies " , 
 cfsb . substring ( 2 ) ) ) ; 
 + message = message + " tracing with " + sessionId ; 
 + fireProgressEvent ( tag , new ProgressEvent ( ProgressEventType . START , 0 , 100 , message ) ) ; 
 Tracing . traceRepair ( message ) ; 
 traceState . enableActivityNotification ( tag ) ; 
 for ( ProgressListener listener : listeners ) 
 @ @ - 154 , 6 + 155 , 7 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti 
 } 
 else 
 { 
 + fireProgressEvent ( tag , new ProgressEvent ( ProgressEventType . START , 0 , 100 , message ) ) ; 
 traceState = null ; 
 } 
 
 @ @ - 204 , 7 + 206 , 6 @ @ public class RepairRunnable extends WrappedRunnable implements ProgressEventNoti 
 cfnames [ i ] = columnFamilyStores . get ( i ) . name ; 
 } 
 
 - final UUID parentSession = UUIDGen . getTimeUUID ( ) ; 
 SystemDistributedKeyspace . startParentRepair ( parentSession , keyspace , cfnames , options ) ; 
 long repairedAt ; 
 try

NEAREST DIFF:
ELIMINATEDSENTENCE
