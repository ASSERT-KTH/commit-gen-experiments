BLEU SCORE: 0.015445276590783498

TEST MSG: Check that key _ aliases / column _ aliases exists before using them
GENERATED MSG: merge # 3234 from 1 . 0

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index c026824 . . a693dee 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 1637 , 7 + 1637 , 9 @ @ public final class CFMetaData <nl> * In other words , the ColumnDefinition the following lines add may be replaced later when ColumnDefinition . fromSchema <nl> * is called but that ' s ok . <nl> * / <nl> - cfm . addColumnMetadataFromAliases ( aliasesFromStrings ( fromJsonList ( result . getString ( " key _ aliases " ) ) ) , cfm . keyValidator , ColumnDefinition . Type . PARTITION _ KEY ) ; <nl> + if ( result . has ( " key _ aliases " ) ) <nl> + cfm . addColumnMetadataFromAliases ( aliasesFromStrings ( fromJsonList ( result . getString ( " key _ aliases " ) ) ) , cfm . keyValidator , ColumnDefinition . Type . PARTITION _ KEY ) ; <nl> + if ( result . has ( " column _ aliases " ) ) <nl> cfm . addColumnMetadataFromAliases ( aliasesFromStrings ( fromJsonList ( result . getString ( " column _ aliases " ) ) ) , cfm . comparator , ColumnDefinition . Type . CLUSTERING _ KEY ) ; <nl> <nl> if ( result . has ( " value _ alias " ) ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 4d7d6f2 . . 2cc325b 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 408 , 7 + 408 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> Descriptor desc = entry . getKey ( ) ; <nl> generations . add ( desc . generation ) ; <nl> if ( ! desc . isCompatible ( ) ) <nl> - throw new RuntimeException ( String . format ( " Can ' t open incompatible SSTable ! Current version % s , found file : % s " , Descriptor . Version . CURRENT , desc ) ) ; <nl> + logger . warn ( String . format ( " Old SSTable found : Current version % s , found file : % s . Please run upgradesstables . " , Descriptor . Version . CURRENT , desc ) ) ; <nl> } <nl> Collections . sort ( generations ) ; <nl> int value = ( generations . size ( ) > 0 ) ? ( generations . get ( generations . size ( ) - 1 ) ) : 0 ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6aa283b . . 248094d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 2 , 6 + 2 , 7 @ @ <nl> * Kill server on wrapped OOME such as from FileChannel . map ( CASSANDRA - 3201 ) <nl> * Allow using quotes in " USE < keyspace > ; " CLI command ( CASSANDRA - 3208 ) <nl> * Log message when a full repair operation completes ( CASSANDRA - 3207 ) <nl> + * Don ' t allow any cache loading exceptions to halt startup ( CASSANDRA - 3218 ) <nl> <nl> <nl> 0 . 8 . 6 <nl> diff - - git a / src / java / org / apache / cassandra / cache / AutoSavingCache . java b / src / java / org / apache / cassandra / cache / AutoSavingCache . java <nl> index 9d71211 . . be893d3 100644 <nl> - - - a / src / java / org / apache / cassandra / cache / AutoSavingCache . java <nl> + + + b / src / java / org / apache / cassandra / cache / AutoSavingCache . java <nl> @ @ - 147 , 9 + 147 , 9 @ @ public abstract class AutoSavingCache < K , V > extends InstrumentingCache < K , V > <nl> logger . debug ( String . format ( " completed reading ( % d ms ; % d keys ) saved cache % s " , <nl> System . currentTimeMillis ( ) - start , keys . size ( ) , path ) ) ; <nl> } <nl> - catch ( IOException ioe ) <nl> + catch ( Exception e ) <nl> { <nl> - logger . warn ( String . format ( " error reading saved cache % s " , path . getAbsolutePath ( ) ) , ioe ) ; <nl> + logger . warn ( String . format ( " error reading saved cache % s " , path . getAbsolutePath ( ) ) , e ) ; <nl> } <nl> finally <nl> {

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index c026824 . . a693dee 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 1637 , 7 + 1637 , 9 @ @ public final class CFMetaData 
 * In other words , the ColumnDefinition the following lines add may be replaced later when ColumnDefinition . fromSchema 
 * is called but that ' s ok . 
 * / 
 - cfm . addColumnMetadataFromAliases ( aliasesFromStrings ( fromJsonList ( result . getString ( " key _ aliases " ) ) ) , cfm . keyValidator , ColumnDefinition . Type . PARTITION _ KEY ) ; 
 + if ( result . has ( " key _ aliases " ) ) 
 + cfm . addColumnMetadataFromAliases ( aliasesFromStrings ( fromJsonList ( result . getString ( " key _ aliases " ) ) ) , cfm . keyValidator , ColumnDefinition . Type . PARTITION _ KEY ) ; 
 + if ( result . has ( " column _ aliases " ) ) 
 cfm . addColumnMetadataFromAliases ( aliasesFromStrings ( fromJsonList ( result . getString ( " column _ aliases " ) ) ) , cfm . comparator , ColumnDefinition . Type . CLUSTERING _ KEY ) ; 
 
 if ( result . has ( " value _ alias " ) ) 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 4d7d6f2 . . 2cc325b 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 408 , 7 + 408 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 Descriptor desc = entry . getKey ( ) ; 
 generations . add ( desc . generation ) ; 
 if ( ! desc . isCompatible ( ) ) 
 - throw new RuntimeException ( String . format ( " Can ' t open incompatible SSTable ! Current version % s , found file : % s " , Descriptor . Version . CURRENT , desc ) ) ; 
 + logger . warn ( String . format ( " Old SSTable found : Current version % s , found file : % s . Please run upgradesstables . " , Descriptor . Version . CURRENT , desc ) ) ; 
 } 
 Collections . sort ( generations ) ; 
 int value = ( generations . size ( ) > 0 ) ? ( generations . get ( generations . size ( ) - 1 ) ) : 0 ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6aa283b . . 248094d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 2 , 6 + 2 , 7 @ @ 
 * Kill server on wrapped OOME such as from FileChannel . map ( CASSANDRA - 3201 ) 
 * Allow using quotes in " USE < keyspace > ; " CLI command ( CASSANDRA - 3208 ) 
 * Log message when a full repair operation completes ( CASSANDRA - 3207 ) 
 + * Don ' t allow any cache loading exceptions to halt startup ( CASSANDRA - 3218 ) 
 
 
 0 . 8 . 6 
 diff - - git a / src / java / org / apache / cassandra / cache / AutoSavingCache . java b / src / java / org / apache / cassandra / cache / AutoSavingCache . java 
 index 9d71211 . . be893d3 100644 
 - - - a / src / java / org / apache / cassandra / cache / AutoSavingCache . java 
 + + + b / src / java / org / apache / cassandra / cache / AutoSavingCache . java 
 @ @ - 147 , 9 + 147 , 9 @ @ public abstract class AutoSavingCache < K , V > extends InstrumentingCache < K , V > 
 logger . debug ( String . format ( " completed reading ( % d ms ; % d keys ) saved cache % s " , 
 System . currentTimeMillis ( ) - start , keys . size ( ) , path ) ) ; 
 } 
 - catch ( IOException ioe ) 
 + catch ( Exception e ) 
 { 
 - logger . warn ( String . format ( " error reading saved cache % s " , path . getAbsolutePath ( ) ) , ioe ) ; 
 + logger . warn ( String . format ( " error reading saved cache % s " , path . getAbsolutePath ( ) ) , e ) ; 
 } 
 finally 
 {
