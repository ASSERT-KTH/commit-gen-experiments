BLEU SCORE: 0.02931251013275449

TEST MSG: merge from 2 . 0
GENERATED MSG: rows , columns - > partitions , cells

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 2bb67dd . . ac3dd3f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 7 , 6 + 7 , 10 @ @ <nl> * Scrub should not always clear out repaired status ( CASSANDRA - 5351 ) <nl> * Improve handling of range tombstone for wide partitions ( CASSANDRA - 6446 ) <nl> * Fix ClassCastException for compact table with composites ( CASSANDRA - 6738 ) <nl> + Merged from 2 . 0 : <nl> + * Pool CqlRecordWriter clients by inetaddress rather than Range <nl> + ( CASSANDRA - 6665 ) <nl> + <nl> <nl> 2 . 1 . 0 - beta1 <nl> * Add flush directory distinct from compaction directories ( CASSANDRA - 6357 ) <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> index 9742762 . . 826fc0d 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> @ @ - 65 , 7 + 65 , 7 @ @ class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , ByteB <nl> private static final Logger logger = LoggerFactory . getLogger ( CqlRecordWriter . class ) ; <nl> <nl> / / handles for clients for each range running in the threadpool <nl> - protected final Map < Range , RangeClient > clients ; <nl> + protected final Map < InetAddress , RangeClient > clients ; <nl> <nl> / / host to prepared statement id mappings <nl> protected final ConcurrentHashMap < Cassandra . Client , Integer > preparedStatements = new ConcurrentHashMap < Cassandra . Client , Integer > ( ) ; <nl> @ @ - 98 , 7 + 98 , 7 @ @ class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , ByteB <nl> CqlRecordWriter ( Configuration conf ) <nl> { <nl> super ( conf ) ; <nl> - this . clients = new HashMap < Range , RangeClient > ( ) ; <nl> + this . clients = new HashMap < > ( ) ; <nl> <nl> try <nl> { <nl> @ @ - 163 , 13 + 163 , 14 @ @ class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , ByteB <nl> Range < Token > range = ringCache . getRange ( getPartitionKey ( keyColumns ) ) ; <nl> <nl> / / get the client for the given range , or create a new one <nl> - RangeClient client = clients . get ( range ) ; <nl> + 	 final InetAddress address = ringCache . getEndpoint ( range ) . get ( 0 ) ; <nl> + RangeClient client = clients . get ( address ) ; <nl> if ( client = = null ) <nl> { <nl> / / haven ' t seen keys for this range : create new client <nl> client = new RangeClient ( ringCache . getEndpoint ( range ) ) ; <nl> client . start ( ) ; <nl> - clients . put ( range , client ) ; <nl> + clients . put ( address , client ) ; <nl> } <nl> <nl> / / add primary key columns to the bind variables
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d439032 . . aad5e02 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 3 <nl> + * Avoid flushing compaction _ history after each operation ( CASSANDRA - 6287 ) <nl> * Fix repair assertion error when tombstones expire ( CASSANDRA - 6277 ) <nl> * Skip loading corrupt key cache ( CASSANDRA - 6260 ) <nl> * Fixes for compacting larger - than - memory rows ( CASSANDRA - 6274 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index f53c60c . . c026824 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 517 , 7 + 517 , 8 @ @ public final class CFMetaData <nl> return newCFMD . comment ( comment ) <nl> . readRepairChance ( 0 ) <nl> . dcLocalReadRepairChance ( 0 ) <nl> - . gcGraceSeconds ( 0 ) ; <nl> + . gcGraceSeconds ( 0 ) <nl> + . memtableFlushPeriod ( 3600 * 1000 ) ; <nl> } <nl> <nl> public static CFMetaData newIndexMetadata ( CFMetaData parent , ColumnDefinition info , AbstractType < ? > columnComparator ) <nl> diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> index 1917bc8 . . 0dbf36f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> @ @ - 236 , 7 + 236 , 6 @ @ public class SystemKeyspace <nl> String req = " INSERT INTO system . % s ( id , keyspace _ name , columnfamily _ name , compacted _ at , bytes _ in , bytes _ out , rows _ merged ) " <nl> + " VALUES ( % s , ' % s ' , ' % s ' , % d , % d , % d , { % s } ) " ; <nl> processInternal ( String . format ( req , COMPACTION _ HISTORY _ CF , UUIDGen . getTimeUUID ( ) . toString ( ) , ksname , cfname , compactedAt , bytesIn , bytesOut , FBUtilities . toString ( rowsMerged ) ) ) ; <nl> - forceBlockingFlush ( COMPACTION _ HISTORY _ CF ) ; <nl> } <nl> <nl> public static TabularData getCompactionHistory ( ) throws OpenDataException

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 2bb67dd . . ac3dd3f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 7 , 6 + 7 , 10 @ @ 
 * Scrub should not always clear out repaired status ( CASSANDRA - 5351 ) 
 * Improve handling of range tombstone for wide partitions ( CASSANDRA - 6446 ) 
 * Fix ClassCastException for compact table with composites ( CASSANDRA - 6738 ) 
 + Merged from 2 . 0 : 
 + * Pool CqlRecordWriter clients by inetaddress rather than Range 
 + ( CASSANDRA - 6665 ) 
 + 
 
 2 . 1 . 0 - beta1 
 * Add flush directory distinct from compaction directories ( CASSANDRA - 6357 ) 
 diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 index 9742762 . . 826fc0d 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 @ @ - 65 , 7 + 65 , 7 @ @ class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , ByteB 
 private static final Logger logger = LoggerFactory . getLogger ( CqlRecordWriter . class ) ; 
 
 / / handles for clients for each range running in the threadpool 
 - protected final Map < Range , RangeClient > clients ; 
 + protected final Map < InetAddress , RangeClient > clients ; 
 
 / / host to prepared statement id mappings 
 protected final ConcurrentHashMap < Cassandra . Client , Integer > preparedStatements = new ConcurrentHashMap < Cassandra . Client , Integer > ( ) ; 
 @ @ - 98 , 7 + 98 , 7 @ @ class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , ByteB 
 CqlRecordWriter ( Configuration conf ) 
 { 
 super ( conf ) ; 
 - this . clients = new HashMap < Range , RangeClient > ( ) ; 
 + this . clients = new HashMap < > ( ) ; 
 
 try 
 { 
 @ @ - 163 , 13 + 163 , 14 @ @ class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , ByteB 
 Range < Token > range = ringCache . getRange ( getPartitionKey ( keyColumns ) ) ; 
 
 / / get the client for the given range , or create a new one 
 - RangeClient client = clients . get ( range ) ; 
 + 	 final InetAddress address = ringCache . getEndpoint ( range ) . get ( 0 ) ; 
 + RangeClient client = clients . get ( address ) ; 
 if ( client = = null ) 
 { 
 / / haven ' t seen keys for this range : create new client 
 client = new RangeClient ( ringCache . getEndpoint ( range ) ) ; 
 client . start ( ) ; 
 - clients . put ( range , client ) ; 
 + clients . put ( address , client ) ; 
 } 
 
 / / add primary key columns to the bind variables

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d439032 . . aad5e02 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 3 
 + * Avoid flushing compaction _ history after each operation ( CASSANDRA - 6287 ) 
 * Fix repair assertion error when tombstones expire ( CASSANDRA - 6277 ) 
 * Skip loading corrupt key cache ( CASSANDRA - 6260 ) 
 * Fixes for compacting larger - than - memory rows ( CASSANDRA - 6274 ) 
 diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index f53c60c . . c026824 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 517 , 7 + 517 , 8 @ @ public final class CFMetaData 
 return newCFMD . comment ( comment ) 
 . readRepairChance ( 0 ) 
 . dcLocalReadRepairChance ( 0 ) 
 - . gcGraceSeconds ( 0 ) ; 
 + . gcGraceSeconds ( 0 ) 
 + . memtableFlushPeriod ( 3600 * 1000 ) ; 
 } 
 
 public static CFMetaData newIndexMetadata ( CFMetaData parent , ColumnDefinition info , AbstractType < ? > columnComparator ) 
 diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 index 1917bc8 . . 0dbf36f 100644 
 - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 @ @ - 236 , 7 + 236 , 6 @ @ public class SystemKeyspace 
 String req = " INSERT INTO system . % s ( id , keyspace _ name , columnfamily _ name , compacted _ at , bytes _ in , bytes _ out , rows _ merged ) " 
 + " VALUES ( % s , ' % s ' , ' % s ' , % d , % d , % d , { % s } ) " ; 
 processInternal ( String . format ( req , COMPACTION _ HISTORY _ CF , UUIDGen . getTimeUUID ( ) . toString ( ) , ksname , cfname , compactedAt , bytesIn , bytesOut , FBUtilities . toString ( rowsMerged ) ) ) ; 
 - forceBlockingFlush ( COMPACTION _ HISTORY _ CF ) ; 
 } 
 
 public static TabularData getCompactionHistory ( ) throws OpenDataException
