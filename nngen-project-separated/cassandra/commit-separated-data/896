BLEU SCORE: 0.05522397783539469

TEST MSG: Fix PER PARTITION LIMIT for single and multi partitions queries
GENERATED MSG: Fix paging with multi - partition IN queries

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0315f1b . . e11ebd8 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 6 <nl> + * Fix PER PARTITION LIMIT for single and multi partitions queries ( CASSANDRA - 11603 ) <nl> * Add uncompressed chunk cache for RandomAccessReader ( CASSANDRA - 5863 ) <nl> * Clarify ClusteringPrefix hierarchy ( CASSANDRA - 11213 ) <nl> * Always perform collision check before joining ring ( CASSANDRA - 10134 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java <nl> index c5dd7d6 . . a6d6047 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java <nl> + + + b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java <nl> @ @ - 279 , 11 + 279 , 11 @ @ public class SinglePartitionReadCommand extends ReadCommand <nl> * @ param lastReturned the last row returned by the previous page . The newly created command <nl> * will only query row that comes after this ( in query order ) . This can be { @ code null } if this <nl> * is the first page . <nl> - * @ param pageSize the size to use for the page to query . <nl> + * @ param limits the limits to use for the page to query . <nl> * <nl> * @ return the newly create command . <nl> * / <nl> - public SinglePartitionReadCommand forPaging ( Clustering lastReturned , int pageSize ) <nl> + public SinglePartitionReadCommand forPaging ( Clustering lastReturned , DataLimits limits ) <nl> { <nl> / / We shouldn ' t have set digest yet when reaching that point <nl> assert ! isDigestQuery ( ) ; <nl> @ @ - 292 , 7 + 292 , 7 @ @ public class SinglePartitionReadCommand extends ReadCommand <nl> nowInSec ( ) , <nl> columnFilter ( ) , <nl> rowFilter ( ) , <nl> - limits ( ) . forPaging ( pageSize ) , <nl> + limits , <nl> partitionKey ( ) , <nl> lastReturned = = null ? clusteringIndexFilter ( ) : clusteringIndexFilter . forPaging ( metadata ( ) . comparator , lastReturned , false ) ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / pager / MultiPartitionPager . java b / src / java / org / apache / cassandra / service / pager / MultiPartitionPager . java <nl> index 922df2e . . 57d6c62 100644 <nl> - - - a / src / java / org / apache / cassandra / service / pager / MultiPartitionPager . java <nl> + + + b / src / java / org / apache / cassandra / service / pager / MultiPartitionPager . java <nl> @ @ - 88 , 7 + 88 , 7 @ @ public class MultiPartitionPager implements QueryPager <nl> return null ; <nl> <nl> PagingState state = pagers [ current ] . state ( ) ; <nl> - return new PagingState ( pagers [ current ] . key ( ) , state = = null ? null : state . rowMark , remaining , Integer . MAX _ VALUE ) ; <nl> + return new PagingState ( pagers [ current ] . key ( ) , state = = null ? null : state . rowMark , remaining , pagers [ current ] . remainingInPartition ( ) ) ; <nl> } <nl> <nl> public boolean isExhausted ( ) <nl> diff - - git a / src / java / org / apache / cassandra / service / pager / SinglePartitionPager . java b / src / java / org / apache / cassandra / service / pager / SinglePartitionPager . java <nl> index 6f17284 . . acb55bb 100644 <nl> - - - a / src / java / org / apache / cassandra / service / pager / SinglePartitionPager . java <nl> + + + b / src / java / org / apache / cassandra / service / pager / SinglePartitionPager . java <nl> @ @ - 70 , 7 + 70 , 11 @ @ public class SinglePartitionPager extends AbstractQueryPager <nl> <nl> protected ReadCommand nextPageReadCommand ( int pageSize ) <nl> { <nl> - return command . forPaging ( lastReturned = = null ? null : lastReturned . clustering ( command . metadata ( ) ) , pageSize ) ; <nl> + Clustering clustering = lastReturned = = null ? null : lastReturned . clustering ( command . metadata ( ) ) ; <nl> + DataLimits limits = ( lastReturned = = null | | command . isForThrift ( ) ) ? limits ( ) . forPaging ( pageSize ) <nl> + : limits ( ) . forPaging ( pageSize , key ( ) , remainingInPartition ( ) ) ; <nl> + <nl> + return command . forPaging ( clustering , limits ) ; <nl> } <nl> <nl> protected void recordLast ( DecoratedKey key , Row last )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0315f1b . . e11ebd8 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 6 
 + * Fix PER PARTITION LIMIT for single and multi partitions queries ( CASSANDRA - 11603 ) 
 * Add uncompressed chunk cache for RandomAccessReader ( CASSANDRA - 5863 ) 
 * Clarify ClusteringPrefix hierarchy ( CASSANDRA - 11213 ) 
 * Always perform collision check before joining ring ( CASSANDRA - 10134 ) 
 diff - - git a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java 
 index c5dd7d6 . . a6d6047 100644 
 - - - a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java 
 + + + b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java 
 @ @ - 279 , 11 + 279 , 11 @ @ public class SinglePartitionReadCommand extends ReadCommand 
 * @ param lastReturned the last row returned by the previous page . The newly created command 
 * will only query row that comes after this ( in query order ) . This can be { @ code null } if this 
 * is the first page . 
 - * @ param pageSize the size to use for the page to query . 
 + * @ param limits the limits to use for the page to query . 
 * 
 * @ return the newly create command . 
 * / 
 - public SinglePartitionReadCommand forPaging ( Clustering lastReturned , int pageSize ) 
 + public SinglePartitionReadCommand forPaging ( Clustering lastReturned , DataLimits limits ) 
 { 
 / / We shouldn ' t have set digest yet when reaching that point 
 assert ! isDigestQuery ( ) ; 
 @ @ - 292 , 7 + 292 , 7 @ @ public class SinglePartitionReadCommand extends ReadCommand 
 nowInSec ( ) , 
 columnFilter ( ) , 
 rowFilter ( ) , 
 - limits ( ) . forPaging ( pageSize ) , 
 + limits , 
 partitionKey ( ) , 
 lastReturned = = null ? clusteringIndexFilter ( ) : clusteringIndexFilter . forPaging ( metadata ( ) . comparator , lastReturned , false ) ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / pager / MultiPartitionPager . java b / src / java / org / apache / cassandra / service / pager / MultiPartitionPager . java 
 index 922df2e . . 57d6c62 100644 
 - - - a / src / java / org / apache / cassandra / service / pager / MultiPartitionPager . java 
 + + + b / src / java / org / apache / cassandra / service / pager / MultiPartitionPager . java 
 @ @ - 88 , 7 + 88 , 7 @ @ public class MultiPartitionPager implements QueryPager 
 return null ; 
 
 PagingState state = pagers [ current ] . state ( ) ; 
 - return new PagingState ( pagers [ current ] . key ( ) , state = = null ? null : state . rowMark , remaining , Integer . MAX _ VALUE ) ; 
 + return new PagingState ( pagers [ current ] . key ( ) , state = = null ? null : state . rowMark , remaining , pagers [ current ] . remainingInPartition ( ) ) ; 
 } 
 
 public boolean isExhausted ( ) 
 diff - - git a / src / java / org / apache / cassandra / service / pager / SinglePartitionPager . java b / src / java / org / apache / cassandra / service / pager / SinglePartitionPager . java 
 index 6f17284 . . acb55bb 100644 
 - - - a / src / java / org / apache / cassandra / service / pager / SinglePartitionPager . java 
 + + + b / src / java / org / apache / cassandra / service / pager / SinglePartitionPager . java 
 @ @ - 70 , 7 + 70 , 11 @ @ public class SinglePartitionPager extends AbstractQueryPager 
 
 protected ReadCommand nextPageReadCommand ( int pageSize ) 
 { 
 - return command . forPaging ( lastReturned = = null ? null : lastReturned . clustering ( command . metadata ( ) ) , pageSize ) ; 
 + Clustering clustering = lastReturned = = null ? null : lastReturned . clustering ( command . metadata ( ) ) ; 
 + DataLimits limits = ( lastReturned = = null | | command . isForThrift ( ) ) ? limits ( ) . forPaging ( pageSize ) 
 + : limits ( ) . forPaging ( pageSize , key ( ) , remainingInPartition ( ) ) ; 
 + 
 + return command . forPaging ( clustering , limits ) ; 
 } 
 
 protected void recordLast ( DecoratedKey key , Row last )

NEAREST DIFF:
ELIMINATEDSENTENCE
