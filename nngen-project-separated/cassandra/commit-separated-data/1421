BLEU SCORE: 0.05522397783539471

TEST MSG: Separate pool for hint delivery tasks in HintedHandoffManager
GENERATED MSG: Fix missing logging for some exceptions

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index a8cf796 . . fe060af 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 17 <nl> + * Remove erroneous pending HH tasks from tpstats / jmx ( CASSANDRA - 9129 ) <nl> * Don ' t cast expected bf size to an int ( CASSANDRA - 9959 ) <nl> * Log when messages are dropped due to cross _ node _ timeout ( CASSANDRA - 9793 ) <nl> * checkForEndpointCollision fails for legitimate collisions ( CASSANDRA - 9765 ) <nl> diff - - git a / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutor . java b / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutor . java <nl> deleted file mode 100644 <nl> index 64d9267 . . 0000000 <nl> - - - a / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutor . java <nl> + + + / dev / null <nl> @ @ - 1 , 137 + 0 , 0 @ @ <nl> - / * <nl> - * Licensed to the Apache Software Foundation ( ASF ) under one <nl> - * or more contributor license agreements . See the NOTICE file <nl> - * distributed with this work for additional information <nl> - * regarding copyright ownership . The ASF licenses this file <nl> - * to you under the Apache License , Version 2 . 0 ( the <nl> - * " License " ) ; you may not use this file except in compliance <nl> - * with the License . You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - package org . apache . cassandra . concurrent ; <nl> - <nl> - import java . lang . management . ManagementFactory ; <nl> - import java . util . List ; <nl> - <nl> - import javax . management . MBeanServer ; <nl> - import javax . management . ObjectName ; <nl> - <nl> - import org . apache . cassandra . metrics . ThreadPoolMetrics ; <nl> - <nl> - / * * <nl> - * A JMX enabled wrapper for DebuggableScheduledThreadPoolExecutor . <nl> - * / <nl> - public class JMXEnabledScheduledThreadPoolExecutor extends DebuggableScheduledThreadPoolExecutor implements JMXEnabledScheduledThreadPoolExecutorMBean <nl> - { <nl> - private final String mbeanName ; <nl> - private final ThreadPoolMetrics metrics ; <nl> - <nl> - public JMXEnabledScheduledThreadPoolExecutor ( int corePoolSize , NamedThreadFactory threadFactory , String jmxPath ) <nl> - { <nl> - super ( corePoolSize , threadFactory ) ; <nl> - <nl> - metrics = new ThreadPoolMetrics ( this , jmxPath , threadFactory . id ) ; <nl> - <nl> - MBeanServer mbs = ManagementFactory . getPlatformMBeanServer ( ) ; <nl> - mbeanName = " org . apache . cassandra . " + jmxPath + " : type = " + threadFactory . id ; <nl> - <nl> - try <nl> - { <nl> - mbs . registerMBean ( this , new ObjectName ( mbeanName ) ) ; <nl> - } <nl> - catch ( Exception e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> - } <nl> - <nl> - private void unregisterMBean ( ) <nl> - { <nl> - try <nl> - { <nl> - ManagementFactory . getPlatformMBeanServer ( ) . unregisterMBean ( new ObjectName ( mbeanName ) ) ; <nl> - } <nl> - catch ( Exception e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> - <nl> - / / release metrics <nl> - metrics . release ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public synchronized void shutdown ( ) <nl> - { <nl> - / / synchronized , because there is no way to access super . mainLock , which would be <nl> - / / the preferred way to make this threadsafe <nl> - if ( ! isShutdown ( ) ) <nl> - unregisterMBean ( ) ; <nl> - <nl> - super . shutdown ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public synchronized List < Runnable > shutdownNow ( ) <nl> - { <nl> - / / synchronized , because there is no way to access super . mainLock , which would be <nl> - / / the preferred way to make this threadsafe <nl> - if ( ! isShutdown ( ) ) <nl> - unregisterMBean ( ) ; <nl> - <nl> - return super . shutdownNow ( ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Get the number of completed tasks <nl> - * / <nl> - public long getCompletedTasks ( ) <nl> - { <nl> - return getCompletedTaskCount ( ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Get the number of tasks waiting to be executed <nl> - * / <nl> - public long getPendingTasks ( ) <nl> - { <nl> - return getTaskCount ( ) - getCompletedTaskCount ( ) ; <nl> - } <nl> - <nl> - public int getTotalBlockedTasks ( ) <nl> - { <nl> - return ( int ) metrics . totalBlocked . count ( ) ; <nl> - } <nl> - <nl> - public int getCurrentlyBlockedTasks ( ) <nl> - { <nl> - return ( int ) metrics . currentBlocked . count ( ) ; <nl> - } <nl> - <nl> - public int getCoreThreads ( ) <nl> - { <nl> - return getCorePoolSize ( ) ; <nl> - } <nl> - <nl> - public void setCoreThreads ( int number ) <nl> - { <nl> - setCorePoolSize ( number ) ; <nl> - } <nl> - <nl> - public int getMaximumThreads ( ) <nl> - { <nl> - return getMaximumPoolSize ( ) ; <nl> - } <nl> - <nl> - public void setMaximumThreads ( int number ) <nl> - { <nl> - setMaximumPoolSize ( number ) ; <nl> - } <nl> - } <nl> diff - - git a / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutorMBean . java b / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutorMBean . java <nl> deleted file mode 100644 <nl> index d9c45e3 . . 0000000 <nl> - - - a / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutorMBean . java <nl> + + + / dev / null <nl> @ @ - 1 , 26 + 0 , 0 @ @ <nl> - / * <nl> - * Licensed to the Apache Software Foundation ( ASF ) under one <nl> - * or more contributor license agreements . See the NOTICE file <nl> - * distributed with this work for additional information <nl> - * regarding copyright ownership . The ASF licenses this file <nl> - * to you under the Apache License , Version 2 . 0 ( the <nl> - * " License " ) ; you may not use this file except in compliance <nl> - * with the License . You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - package org . apache . cassandra . concurrent ; <nl> - <nl> - / * * <nl> - * @ see org . apache . cassandra . metrics . ThreadPoolMetrics <nl> - * / <nl> - @ Deprecated <nl> - public interface JMXEnabledScheduledThreadPoolExecutorMBean extends JMXEnabledThreadPoolExecutorMBean <nl> - { <nl> - } <nl> diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> index c8c3845 . . dab0f75 100644 <nl> - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> @ @ - 37 , 7 + 37 , 8 @ @ import com . google . common . util . concurrent . Uninterruptibles ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> - import org . apache . cassandra . concurrent . JMXEnabledScheduledThreadPoolExecutor ; <nl> + import org . apache . cassandra . concurrent . DebuggableScheduledThreadPoolExecutor ; <nl> + import org . apache . cassandra . concurrent . JMXEnabledThreadPoolExecutor ; <nl> import org . apache . cassandra . concurrent . NamedThreadFactory ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . config . Schema ; <nl> @ @ - 56 , 7 + 57 , 9 @ @ import org . apache . cassandra . io . sstable . SSTable ; <nl> import org . apache . cassandra . metrics . HintedHandoffMetrics ; <nl> import org . apache . cassandra . net . MessageOut ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> - import org . apache . cassandra . service . * ; <nl> + import org . apache . cassandra . service . StorageProxy ; <nl> + import org . apache . cassandra . service . StorageService ; <nl> + import org . apache . cassandra . service . WriteResponseHandler ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> import org . apache . cassandra . utils . UUIDGen ; <nl> @ @ - 102 , 9 + 105 , 20 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> <nl> private final NonBlockingHashSet < InetAddress > queuedDeliveries = new NonBlockingHashSet < InetAddress > ( ) ; <nl> <nl> - private final JMXEnabledScheduledThreadPoolExecutor executor = <nl> - new JMXEnabledScheduledThreadPoolExecutor ( <nl> + / / To keep metrics consistent with earlier versions , where periodic tasks were run on a shared executor , <nl> + / / we run them on this executor and so keep counts separate from those for hint delivery tasks . See CASSANDRA - 9129 <nl> + private final DebuggableScheduledThreadPoolExecutor executor = <nl> + new DebuggableScheduledThreadPoolExecutor ( 1 , new NamedThreadFactory ( " HintedHandoffManager " , Thread . MIN _ PRIORITY ) ) ; <nl> + <nl> + / / Non - scheduled executor to run the actual hint delivery tasks . <nl> + / / Per CASSANDRA - 9129 , this is where the values displayed in nodetool tpstats <nl> + / / and via the HintedHandoff mbean are obtained . <nl> + private final ThreadPoolExecutor hintDeliveryExecutor = <nl> + new JMXEnabledThreadPoolExecutor ( <nl> DatabaseDescriptor . getMaxHintsThread ( ) , <nl> + Integer . MAX _ VALUE , <nl> + TimeUnit . SECONDS , <nl> + new LinkedBlockingQueue < Runnable > ( ) , <nl> new NamedThreadFactory ( " HintedHandoff " , Thread . MIN _ PRIORITY ) , <nl> " internal " ) ; <nl> <nl> @ @ - 242 , 7 + 256 , 6 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> } <nl> } ; <nl> executor . submit ( runnable ) . get ( ) ; <nl> - <nl> } <nl> <nl> @ VisibleForTesting <nl> @ @ - 534 , 7 + 547 , 7 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> <nl> logger . debug ( " Scheduling delivery of Hints to { } " , to ) ; <nl> <nl> - executor . execute ( new Runnable ( ) <nl> + hintDeliveryExecutor . execute ( new Runnable ( ) <nl> { <nl> public void run ( ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / concurrent / RetryingScheduledThreadPoolExecutor . java b / src / java / org / apache / cassandra / concurrent / RetryingScheduledThreadPoolExecutor . java <nl> deleted file mode 100644 <nl> index e69de29 . . 0000000

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index a8cf796 . . fe060af 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 17 
 + * Remove erroneous pending HH tasks from tpstats / jmx ( CASSANDRA - 9129 ) 
 * Don ' t cast expected bf size to an int ( CASSANDRA - 9959 ) 
 * Log when messages are dropped due to cross _ node _ timeout ( CASSANDRA - 9793 ) 
 * checkForEndpointCollision fails for legitimate collisions ( CASSANDRA - 9765 ) 
 diff - - git a / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutor . java b / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutor . java 
 deleted file mode 100644 
 index 64d9267 . . 0000000 
 - - - a / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutor . java 
 + + + / dev / null 
 @ @ - 1 , 137 + 0 , 0 @ @ 
 - / * 
 - * Licensed to the Apache Software Foundation ( ASF ) under one 
 - * or more contributor license agreements . See the NOTICE file 
 - * distributed with this work for additional information 
 - * regarding copyright ownership . The ASF licenses this file 
 - * to you under the Apache License , Version 2 . 0 ( the 
 - * " License " ) ; you may not use this file except in compliance 
 - * with the License . You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - package org . apache . cassandra . concurrent ; 
 - 
 - import java . lang . management . ManagementFactory ; 
 - import java . util . List ; 
 - 
 - import javax . management . MBeanServer ; 
 - import javax . management . ObjectName ; 
 - 
 - import org . apache . cassandra . metrics . ThreadPoolMetrics ; 
 - 
 - / * * 
 - * A JMX enabled wrapper for DebuggableScheduledThreadPoolExecutor . 
 - * / 
 - public class JMXEnabledScheduledThreadPoolExecutor extends DebuggableScheduledThreadPoolExecutor implements JMXEnabledScheduledThreadPoolExecutorMBean 
 - { 
 - private final String mbeanName ; 
 - private final ThreadPoolMetrics metrics ; 
 - 
 - public JMXEnabledScheduledThreadPoolExecutor ( int corePoolSize , NamedThreadFactory threadFactory , String jmxPath ) 
 - { 
 - super ( corePoolSize , threadFactory ) ; 
 - 
 - metrics = new ThreadPoolMetrics ( this , jmxPath , threadFactory . id ) ; 
 - 
 - MBeanServer mbs = ManagementFactory . getPlatformMBeanServer ( ) ; 
 - mbeanName = " org . apache . cassandra . " + jmxPath + " : type = " + threadFactory . id ; 
 - 
 - try 
 - { 
 - mbs . registerMBean ( this , new ObjectName ( mbeanName ) ) ; 
 - } 
 - catch ( Exception e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 - } 
 - 
 - private void unregisterMBean ( ) 
 - { 
 - try 
 - { 
 - ManagementFactory . getPlatformMBeanServer ( ) . unregisterMBean ( new ObjectName ( mbeanName ) ) ; 
 - } 
 - catch ( Exception e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 - 
 - / / release metrics 
 - metrics . release ( ) ; 
 - } 
 - 
 - @ Override 
 - public synchronized void shutdown ( ) 
 - { 
 - / / synchronized , because there is no way to access super . mainLock , which would be 
 - / / the preferred way to make this threadsafe 
 - if ( ! isShutdown ( ) ) 
 - unregisterMBean ( ) ; 
 - 
 - super . shutdown ( ) ; 
 - } 
 - 
 - @ Override 
 - public synchronized List < Runnable > shutdownNow ( ) 
 - { 
 - / / synchronized , because there is no way to access super . mainLock , which would be 
 - / / the preferred way to make this threadsafe 
 - if ( ! isShutdown ( ) ) 
 - unregisterMBean ( ) ; 
 - 
 - return super . shutdownNow ( ) ; 
 - } 
 - 
 - / * * 
 - * Get the number of completed tasks 
 - * / 
 - public long getCompletedTasks ( ) 
 - { 
 - return getCompletedTaskCount ( ) ; 
 - } 
 - 
 - / * * 
 - * Get the number of tasks waiting to be executed 
 - * / 
 - public long getPendingTasks ( ) 
 - { 
 - return getTaskCount ( ) - getCompletedTaskCount ( ) ; 
 - } 
 - 
 - public int getTotalBlockedTasks ( ) 
 - { 
 - return ( int ) metrics . totalBlocked . count ( ) ; 
 - } 
 - 
 - public int getCurrentlyBlockedTasks ( ) 
 - { 
 - return ( int ) metrics . currentBlocked . count ( ) ; 
 - } 
 - 
 - public int getCoreThreads ( ) 
 - { 
 - return getCorePoolSize ( ) ; 
 - } 
 - 
 - public void setCoreThreads ( int number ) 
 - { 
 - setCorePoolSize ( number ) ; 
 - } 
 - 
 - public int getMaximumThreads ( ) 
 - { 
 - return getMaximumPoolSize ( ) ; 
 - } 
 - 
 - public void setMaximumThreads ( int number ) 
 - { 
 - setMaximumPoolSize ( number ) ; 
 - } 
 - } 
 diff - - git a / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutorMBean . java b / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutorMBean . java 
 deleted file mode 100644 
 index d9c45e3 . . 0000000 
 - - - a / src / java / org / apache / cassandra / concurrent / JMXEnabledScheduledThreadPoolExecutorMBean . java 
 + + + / dev / null 
 @ @ - 1 , 26 + 0 , 0 @ @ 
 - / * 
 - * Licensed to the Apache Software Foundation ( ASF ) under one 
 - * or more contributor license agreements . See the NOTICE file 
 - * distributed with this work for additional information 
 - * regarding copyright ownership . The ASF licenses this file 
 - * to you under the Apache License , Version 2 . 0 ( the 
 - * " License " ) ; you may not use this file except in compliance 
 - * with the License . You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - package org . apache . cassandra . concurrent ; 
 - 
 - / * * 
 - * @ see org . apache . cassandra . metrics . ThreadPoolMetrics 
 - * / 
 - @ Deprecated 
 - public interface JMXEnabledScheduledThreadPoolExecutorMBean extends JMXEnabledThreadPoolExecutorMBean 
 - { 
 - } 
 diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 index c8c3845 . . dab0f75 100644 
 - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 @ @ - 37 , 7 + 37 , 8 @ @ import com . google . common . util . concurrent . Uninterruptibles ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 - import org . apache . cassandra . concurrent . JMXEnabledScheduledThreadPoolExecutor ; 
 + import org . apache . cassandra . concurrent . DebuggableScheduledThreadPoolExecutor ; 
 + import org . apache . cassandra . concurrent . JMXEnabledThreadPoolExecutor ; 
 import org . apache . cassandra . concurrent . NamedThreadFactory ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . config . Schema ; 
 @ @ - 56 , 7 + 57 , 9 @ @ import org . apache . cassandra . io . sstable . SSTable ; 
 import org . apache . cassandra . metrics . HintedHandoffMetrics ; 
 import org . apache . cassandra . net . MessageOut ; 
 import org . apache . cassandra . net . MessagingService ; 
 - import org . apache . cassandra . service . * ; 
 + import org . apache . cassandra . service . StorageProxy ; 
 + import org . apache . cassandra . service . StorageService ; 
 + import org . apache . cassandra . service . WriteResponseHandler ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 import org . apache . cassandra . utils . UUIDGen ; 
 @ @ - 102 , 9 + 105 , 20 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 
 private final NonBlockingHashSet < InetAddress > queuedDeliveries = new NonBlockingHashSet < InetAddress > ( ) ; 
 
 - private final JMXEnabledScheduledThreadPoolExecutor executor = 
 - new JMXEnabledScheduledThreadPoolExecutor ( 
 + / / To keep metrics consistent with earlier versions , where periodic tasks were run on a shared executor , 
 + / / we run them on this executor and so keep counts separate from those for hint delivery tasks . See CASSANDRA - 9129 
 + private final DebuggableScheduledThreadPoolExecutor executor = 
 + new DebuggableScheduledThreadPoolExecutor ( 1 , new NamedThreadFactory ( " HintedHandoffManager " , Thread . MIN _ PRIORITY ) ) ; 
 + 
 + / / Non - scheduled executor to run the actual hint delivery tasks . 
 + / / Per CASSANDRA - 9129 , this is where the values displayed in nodetool tpstats 
 + / / and via the HintedHandoff mbean are obtained . 
 + private final ThreadPoolExecutor hintDeliveryExecutor = 
 + new JMXEnabledThreadPoolExecutor ( 
 DatabaseDescriptor . getMaxHintsThread ( ) , 
 + Integer . MAX _ VALUE , 
 + TimeUnit . SECONDS , 
 + new LinkedBlockingQueue < Runnable > ( ) , 
 new NamedThreadFactory ( " HintedHandoff " , Thread . MIN _ PRIORITY ) , 
 " internal " ) ; 
 
 @ @ - 242 , 7 + 256 , 6 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 } 
 } ; 
 executor . submit ( runnable ) . get ( ) ; 
 - 
 } 
 
 @ VisibleForTesting 
 @ @ - 534 , 7 + 547 , 7 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 
 logger . debug ( " Scheduling delivery of Hints to { } " , to ) ; 
 
 - executor . execute ( new Runnable ( ) 
 + hintDeliveryExecutor . execute ( new Runnable ( ) 
 { 
 public void run ( ) 
 {

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / concurrent / RetryingScheduledThreadPoolExecutor . java b / src / java / org / apache / cassandra / concurrent / RetryingScheduledThreadPoolExecutor . java 
 deleted file mode 100644 
 index e69de29 . . 0000000
