BLEU SCORE: 0.0379680177759557

TEST MSG: push down logging code to where it ' s used
GENERATED MSG: don ' t declare throwing exceptions that aren ' t thrown

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / tools / JsonTransformer . java b / src / java / org / apache / cassandra / tools / JsonTransformer . java <nl> index 3b98595 . . 72008ab 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / JsonTransformer . java <nl> + + + b / src / java / org / apache / cassandra / tools / JsonTransformer . java <nl> @ @ - 176 , 7 + 176 , 6 @ @ public final class JsonTransformer <nl> <nl> private void serializePartition ( UnfilteredRowIterator partition ) <nl> { <nl> - String key = metadata . getKeyValidator ( ) . getString ( partition . partitionKey ( ) . getKey ( ) ) ; <nl> try <nl> { <nl> json . writeStartObject ( ) ; <nl> @ @ - 223 , 6 + 222 , 7 @ @ public final class JsonTransformer <nl> } <nl> catch ( IOException e ) <nl> { <nl> + String key = metadata . getKeyValidator ( ) . getString ( partition . partitionKey ( ) . getKey ( ) ) ; <nl> logger . error ( " Fatal error parsing partition : { } " , key , e ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index aad4dd3 . . 89f4c77 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 485 , 7 + 485 , 7 @ @ public class DatabaseDescriptor <nl> } <nl> <nl> / * * load keyspace ( table ) definitions , but do not initialize the table instances . * / <nl> - public static void loadSchemas ( ) throws IOException <nl> + public static void loadSchemas ( ) <nl> { <nl> ColumnFamilyStore schemaCFS = SystemTable . schemaCFS ( SystemTable . SCHEMA _ KEYSPACES _ CF ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateKeyspaceStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateKeyspaceStatement . java <nl> index 0c4d9ca . . 71b22d8 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateKeyspaceStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateKeyspaceStatement . java <nl> @ @ - 58 , 7 + 58 , 7 @ @ public class CreateKeyspaceStatement extends SchemaAlteringStatement <nl> return name ; <nl> } <nl> <nl> - public void checkAccess ( ClientState state ) throws UnauthorizedException , InvalidRequestException <nl> + public void checkAccess ( ClientState state ) throws UnauthorizedException <nl> { <nl> state . hasAllKeyspacesAccess ( Permission . CREATE ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> index 6f33309 . . 93571fa 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> @ @ - 147 , 22 + 147 , 11 @ @ public class SelectStatement implements CQLStatement <nl> <nl> public ResultMessage . Rows executeInternal ( QueryState state ) throws RequestExecutionException , RequestValidationException <nl> { <nl> - try <nl> - { <nl> - List < Row > rows = isKeyRange | | usesSecondaryIndexing <nl> - ? RangeSliceVerbHandler . executeLocally ( getRangeCommand ( Collections . < ByteBuffer > emptyList ( ) ) ) <nl> - : readLocally ( keyspace ( ) , getSliceCommands ( Collections . < ByteBuffer > emptyList ( ) ) ) ; <nl> + List < Row > rows = isKeyRange | | usesSecondaryIndexing <nl> + ? RangeSliceVerbHandler . executeLocally ( getRangeCommand ( Collections . < ByteBuffer > emptyList ( ) ) ) <nl> + : readLocally ( keyspace ( ) , getSliceCommands ( Collections . < ByteBuffer > emptyList ( ) ) ) ; <nl> <nl> - return processResults ( rows , Collections . < ByteBuffer > emptyList ( ) ) ; <nl> - } <nl> - catch ( ExecutionException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> - catch ( InterruptedException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> + return processResults ( rows , Collections . < ByteBuffer > emptyList ( ) ) ; <nl> } <nl> <nl> public ResultSet process ( List < Row > rows ) throws InvalidRequestException <nl> diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> index 3d5240f . . ae8e2cc 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> @ @ - 226 , 15 + 226 , 7 @ @ public class CassandraDaemon <nl> } <nl> <nl> / / load keyspace descriptions . <nl> - try <nl> - { <nl> - DatabaseDescriptor . loadSchemas ( ) ; <nl> - } <nl> - catch ( IOException e ) <nl> - { <nl> - logger . error ( " Fatal exception during initialization " , e ) ; <nl> - System . exit ( 100 ) ; <nl> - } <nl> + DatabaseDescriptor . loadSchemas ( ) ; <nl> <nl> / / clean up debris in the rest of the tables <nl> for ( String table : Schema . instance . getTables ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / service / ClientState . java b / src / java / org / apache / cassandra / service / ClientState . java <nl> index e6b0f97 . . b6769a3 100644 <nl> - - - a / src / java / org / apache / cassandra / service / ClientState . java <nl> + + + b / src / java / org / apache / cassandra / service / ClientState . java <nl> @ @ - 128 , 7 + 128 , 7 @ @ public class ClientState <nl> this . user = user ; <nl> } <nl> <nl> - public void hasAllKeyspacesAccess ( Permission perm ) throws UnauthorizedException , InvalidRequestException <nl> + public void hasAllKeyspacesAccess ( Permission perm ) throws UnauthorizedException <nl> { <nl> if ( internalCall ) <nl> return ; <nl> diff - - git a / src / java / org / apache / cassandra / service / RangeSliceVerbHandler . java b / src / java / org / apache / cassandra / service / RangeSliceVerbHandler . java <nl> index a095680 . . b6f257e 100644 <nl> - - - a / src / java / org / apache / cassandra / service / RangeSliceVerbHandler . java <nl> + + + b / src / java / org / apache / cassandra / service / RangeSliceVerbHandler . java <nl> @ @ - 18 , 10 + 18 , 6 @ @ <nl> package org . apache . cassandra . service ; <nl> <nl> import java . util . List ; <nl> - import java . util . concurrent . ExecutionException ; <nl> - <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . db . ColumnFamilyStore ; <nl> import org . apache . cassandra . db . RangeSliceCommand ; <nl> @ @ - 35 , 9 + 31 , 7 @ @ import org . apache . cassandra . tracing . Tracing ; <nl> <nl> public class RangeSliceVerbHandler implements IVerbHandler < RangeSliceCommand > <nl> { <nl> - private static final Logger logger = LoggerFactory . getLogger ( RangeSliceVerbHandler . class ) ; <nl> - <nl> - public static List < Row > executeLocally ( RangeSliceCommand command ) throws ExecutionException , InterruptedException <nl> + public static List < Row > executeLocally ( RangeSliceCommand command ) <nl> { <nl> ColumnFamilyStore cfs = Table . open ( command . keyspace ) . getColumnFamilyStore ( command . column _ family ) ; <nl> if ( cfs . indexManager . hasIndexFor ( command . row _ filter ) ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 8d2dc60 . . 58fa6e3 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 294 , 7 + 294 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> * nodes have seen the mostRecentCommit . Otherwise , return null . <nl> * / <nl> private static UUID beginAndRepairPaxos ( ByteBuffer key , CFMetaData metadata , List < InetAddress > liveEndpoints , int requiredParticipants ) <nl> - throws WriteTimeoutException , UnavailableException <nl> + throws WriteTimeoutException <nl> { <nl> UUID ballot = UUIDGen . getTimeUUID ( ) ; <nl> <nl> @ @ - 344 , 7 + 344 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> } <nl> <nl> private static PrepareCallback preparePaxos ( Commit toPrepare , List < InetAddress > endpoints , int requiredParticipants ) <nl> - throws WriteTimeoutException , UnavailableException <nl> + throws WriteTimeoutException <nl> { <nl> PrepareCallback callback = new PrepareCallback ( toPrepare . key , toPrepare . update . metadata ( ) , requiredParticipants ) ; <nl> MessageOut < Commit > message = new MessageOut < Commit > ( MessagingService . Verb . PAXOS _ PREPARE , toPrepare , Commit . serializer ) ; <nl> @ @ - 1244 , 7 + 1244 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> this . handler = handler ; <nl> } <nl> <nl> - protected void runMayThrow ( ) throws ExecutionException , InterruptedException <nl> + protected void runMayThrow ( ) <nl> { <nl> logger . trace ( " LocalReadRunnable reading { } " , command ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / tools / SSTableExport . java b / src / java / org / apache / cassandra / tools / SSTableExport . java <nl> index 4b91dd8 . . 9e8bb3e 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / SSTableExport . java <nl> + + + b / src / java / org / apache / cassandra / tools / SSTableExport . java <nl> @ @ - 399 , 7 + 399 , 7 @ @ public class SSTableExport <nl> * @ throws IOException on failure to open / read / write files or output streams <nl> * @ throws ConfigurationException on configuration failure ( wrong params given ) <nl> * / <nl> - public static void main ( String [ ] args ) throws IOException , ConfigurationException <nl> + public static void main ( String [ ] args ) throws ConfigurationException <nl> { <nl> String usage = String . format ( " Usage : % s < sstable > [ - k key [ - k key [ . . . ] ] - x key [ - x key [ . . . ] ] ] % n " , SSTableExport . class . getName ( ) ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / tools / SSTableImport . java b / src / java / org / apache / cassandra / tools / SSTableImport . java <nl> index 8c58d70 . . f25a60b 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / SSTableImport . java <nl> + + + b / src / java / org / apache / cassandra / tools / SSTableImport . java <nl> @ @ - 487 , 7 + 487 , 7 @ @ public class SSTableImport <nl> * @ throws ParseException on failure to parse JSON input <nl> * @ throws ConfigurationException on configuration error . <nl> * / <nl> - public static void main ( String [ ] args ) throws IOException , ParseException , ConfigurationException <nl> + public static void main ( String [ ] args ) throws ParseException , ConfigurationException <nl> { <nl> CommandLineParser parser = new PosixParser ( ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / tools / StandaloneScrubber . java b / src / java / org / apache / cassandra / tools / StandaloneScrubber . java <nl> index 9db565d . . 4ff06db 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / StandaloneScrubber . java <nl> + + + b / src / java / org / apache / cassandra / tools / StandaloneScrubber . java <nl> @ @ - 51 , 7 + 51 , 7 @ @ public class StandaloneScrubber <nl> private static final String HELP _ OPTION = " help " ; <nl> private static final String MANIFEST _ CHECK _ OPTION = " manifest - check " ; <nl> <nl> - public static void main ( String args [ ] ) throws IOException <nl> + public static void main ( String args [ ] ) <nl> { <nl> Options options = Options . parseArgs ( args ) ; <nl> try <nl> diff - - git a / test / unit / org / apache / cassandra / config / DatabaseDescriptorTest . java b / test / unit / org / apache / cassandra / config / DatabaseDescriptorTest . java <nl> index 513b808 . . 4433b57 100644 <nl> - - - a / test / unit / org / apache / cassandra / config / DatabaseDescriptorTest . java <nl> + + + b / test / unit / org / apache / cassandra / config / DatabaseDescriptorTest . java <nl> @ @ - 67 , 7 + 67 , 7 @ @ public class DatabaseDescriptorTest <nl> <nl> / / this came as a result of CASSANDRA - 995 <nl> @ Test <nl> - public void testTransKsMigration ( ) throws IOException , ConfigurationException <nl> + public void testTransKsMigration ( ) throws ConfigurationException <nl> { <nl> SchemaLoader . cleanupAndLeaveDirs ( ) ; <nl> DatabaseDescriptor . loadSchemas ( ) ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / tools / JsonTransformer . java b / src / java / org / apache / cassandra / tools / JsonTransformer . java 
 index 3b98595 . . 72008ab 100644 
 - - - a / src / java / org / apache / cassandra / tools / JsonTransformer . java 
 + + + b / src / java / org / apache / cassandra / tools / JsonTransformer . java 
 @ @ - 176 , 7 + 176 , 6 @ @ public final class JsonTransformer 
 
 private void serializePartition ( UnfilteredRowIterator partition ) 
 { 
 - String key = metadata . getKeyValidator ( ) . getString ( partition . partitionKey ( ) . getKey ( ) ) ; 
 try 
 { 
 json . writeStartObject ( ) ; 
 @ @ - 223 , 6 + 222 , 7 @ @ public final class JsonTransformer 
 } 
 catch ( IOException e ) 
 { 
 + String key = metadata . getKeyValidator ( ) . getString ( partition . partitionKey ( ) . getKey ( ) ) ; 
 logger . error ( " Fatal error parsing partition : { } " , key , e ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index aad4dd3 . . 89f4c77 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 485 , 7 + 485 , 7 @ @ public class DatabaseDescriptor 
 } 
 
 / * * load keyspace ( table ) definitions , but do not initialize the table instances . * / 
 - public static void loadSchemas ( ) throws IOException 
 + public static void loadSchemas ( ) 
 { 
 ColumnFamilyStore schemaCFS = SystemTable . schemaCFS ( SystemTable . SCHEMA _ KEYSPACES _ CF ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateKeyspaceStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateKeyspaceStatement . java 
 index 0c4d9ca . . 71b22d8 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateKeyspaceStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateKeyspaceStatement . java 
 @ @ - 58 , 7 + 58 , 7 @ @ public class CreateKeyspaceStatement extends SchemaAlteringStatement 
 return name ; 
 } 
 
 - public void checkAccess ( ClientState state ) throws UnauthorizedException , InvalidRequestException 
 + public void checkAccess ( ClientState state ) throws UnauthorizedException 
 { 
 state . hasAllKeyspacesAccess ( Permission . CREATE ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 index 6f33309 . . 93571fa 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 @ @ - 147 , 22 + 147 , 11 @ @ public class SelectStatement implements CQLStatement 
 
 public ResultMessage . Rows executeInternal ( QueryState state ) throws RequestExecutionException , RequestValidationException 
 { 
 - try 
 - { 
 - List < Row > rows = isKeyRange | | usesSecondaryIndexing 
 - ? RangeSliceVerbHandler . executeLocally ( getRangeCommand ( Collections . < ByteBuffer > emptyList ( ) ) ) 
 - : readLocally ( keyspace ( ) , getSliceCommands ( Collections . < ByteBuffer > emptyList ( ) ) ) ; 
 + List < Row > rows = isKeyRange | | usesSecondaryIndexing 
 + ? RangeSliceVerbHandler . executeLocally ( getRangeCommand ( Collections . < ByteBuffer > emptyList ( ) ) ) 
 + : readLocally ( keyspace ( ) , getSliceCommands ( Collections . < ByteBuffer > emptyList ( ) ) ) ; 
 
 - return processResults ( rows , Collections . < ByteBuffer > emptyList ( ) ) ; 
 - } 
 - catch ( ExecutionException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 - catch ( InterruptedException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 + return processResults ( rows , Collections . < ByteBuffer > emptyList ( ) ) ; 
 } 
 
 public ResultSet process ( List < Row > rows ) throws InvalidRequestException 
 diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 index 3d5240f . . ae8e2cc 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 @ @ - 226 , 15 + 226 , 7 @ @ public class CassandraDaemon 
 } 
 
 / / load keyspace descriptions . 
 - try 
 - { 
 - DatabaseDescriptor . loadSchemas ( ) ; 
 - } 
 - catch ( IOException e ) 
 - { 
 - logger . error ( " Fatal exception during initialization " , e ) ; 
 - System . exit ( 100 ) ; 
 - } 
 + DatabaseDescriptor . loadSchemas ( ) ; 
 
 / / clean up debris in the rest of the tables 
 for ( String table : Schema . instance . getTables ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / service / ClientState . java b / src / java / org / apache / cassandra / service / ClientState . java 
 index e6b0f97 . . b6769a3 100644 
 - - - a / src / java / org / apache / cassandra / service / ClientState . java 
 + + + b / src / java / org / apache / cassandra / service / ClientState . java 
 @ @ - 128 , 7 + 128 , 7 @ @ public class ClientState 
 this . user = user ; 
 } 
 
 - public void hasAllKeyspacesAccess ( Permission perm ) throws UnauthorizedException , InvalidRequestException 
 + public void hasAllKeyspacesAccess ( Permission perm ) throws UnauthorizedException 
 { 
 if ( internalCall ) 
 return ; 
 diff - - git a / src / java / org / apache / cassandra / service / RangeSliceVerbHandler . java b / src / java / org / apache / cassandra / service / RangeSliceVerbHandler . java 
 index a095680 . . b6f257e 100644 
 - - - a / src / java / org / apache / cassandra / service / RangeSliceVerbHandler . java 
 + + + b / src / java / org / apache / cassandra / service / RangeSliceVerbHandler . java 
 @ @ - 18 , 10 + 18 , 6 @ @ 
 package org . apache . cassandra . service ; 
 
 import java . util . List ; 
 - import java . util . concurrent . ExecutionException ; 
 - 
 - import org . slf4j . Logger ; 
 - import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . db . ColumnFamilyStore ; 
 import org . apache . cassandra . db . RangeSliceCommand ; 
 @ @ - 35 , 9 + 31 , 7 @ @ import org . apache . cassandra . tracing . Tracing ; 
 
 public class RangeSliceVerbHandler implements IVerbHandler < RangeSliceCommand > 
 { 
 - private static final Logger logger = LoggerFactory . getLogger ( RangeSliceVerbHandler . class ) ; 
 - 
 - public static List < Row > executeLocally ( RangeSliceCommand command ) throws ExecutionException , InterruptedException 
 + public static List < Row > executeLocally ( RangeSliceCommand command ) 
 { 
 ColumnFamilyStore cfs = Table . open ( command . keyspace ) . getColumnFamilyStore ( command . column _ family ) ; 
 if ( cfs . indexManager . hasIndexFor ( command . row _ filter ) ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 8d2dc60 . . 58fa6e3 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 294 , 7 + 294 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 * nodes have seen the mostRecentCommit . Otherwise , return null . 
 * / 
 private static UUID beginAndRepairPaxos ( ByteBuffer key , CFMetaData metadata , List < InetAddress > liveEndpoints , int requiredParticipants ) 
 - throws WriteTimeoutException , UnavailableException 
 + throws WriteTimeoutException 
 { 
 UUID ballot = UUIDGen . getTimeUUID ( ) ; 
 
 @ @ - 344 , 7 + 344 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 } 
 
 private static PrepareCallback preparePaxos ( Commit toPrepare , List < InetAddress > endpoints , int requiredParticipants ) 
 - throws WriteTimeoutException , UnavailableException 
 + throws WriteTimeoutException 
 { 
 PrepareCallback callback = new PrepareCallback ( toPrepare . key , toPrepare . update . metadata ( ) , requiredParticipants ) ; 
 MessageOut < Commit > message = new MessageOut < Commit > ( MessagingService . Verb . PAXOS _ PREPARE , toPrepare , Commit . serializer ) ; 
 @ @ - 1244 , 7 + 1244 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 this . handler = handler ; 
 } 
 
 - protected void runMayThrow ( ) throws ExecutionException , InterruptedException 
 + protected void runMayThrow ( ) 
 { 
 logger . trace ( " LocalReadRunnable reading { } " , command ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / tools / SSTableExport . java b / src / java / org / apache / cassandra / tools / SSTableExport . java 
 index 4b91dd8 . . 9e8bb3e 100644 
 - - - a / src / java / org / apache / cassandra / tools / SSTableExport . java 
 + + + b / src / java / org / apache / cassandra / tools / SSTableExport . java 
 @ @ - 399 , 7 + 399 , 7 @ @ public class SSTableExport 
 * @ throws IOException on failure to open / read / write files or output streams 
 * @ throws ConfigurationException on configuration failure ( wrong params given ) 
 * / 
 - public static void main ( String [ ] args ) throws IOException , ConfigurationException 
 + public static void main ( String [ ] args ) throws ConfigurationException 
 { 
 String usage = String . format ( " Usage : % s < sstable > [ - k key [ - k key [ . . . ] ] - x key [ - x key [ . . . ] ] ] % n " , SSTableExport . class . getName ( ) ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / tools / SSTableImport . java b / src / java / org / apache / cassandra / tools / SSTableImport . java 
 index 8c58d70 . . f25a60b 100644 
 - - - a / src / java / org / apache / cassandra / tools / SSTableImport . java 
 + + + b / src / java / org / apache / cassandra / tools / SSTableImport . java 
 @ @ - 487 , 7 + 487 , 7 @ @ public class SSTableImport 
 * @ throws ParseException on failure to parse JSON input 
 * @ throws ConfigurationException on configuration error . 
 * / 
 - public static void main ( String [ ] args ) throws IOException , ParseException , ConfigurationException 
 + public static void main ( String [ ] args ) throws ParseException , ConfigurationException 
 { 
 CommandLineParser parser = new PosixParser ( ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / tools / StandaloneScrubber . java b / src / java / org / apache / cassandra / tools / StandaloneScrubber . java 
 index 9db565d . . 4ff06db 100644 
 - - - a / src / java / org / apache / cassandra / tools / StandaloneScrubber . java 
 + + + b / src / java / org / apache / cassandra / tools / StandaloneScrubber . java 
 @ @ - 51 , 7 + 51 , 7 @ @ public class StandaloneScrubber 
 private static final String HELP _ OPTION = " help " ; 
 private static final String MANIFEST _ CHECK _ OPTION = " manifest - check " ; 
 
 - public static void main ( String args [ ] ) throws IOException 
 + public static void main ( String args [ ] ) 
 { 
 Options options = Options . parseArgs ( args ) ; 
 try 
 diff - - git a / test / unit / org / apache / cassandra / config / DatabaseDescriptorTest . java b / test / unit / org / apache / cassandra / config / DatabaseDescriptorTest . java 
 index 513b808 . . 4433b57 100644 
 - - - a / test / unit / org / apache / cassandra / config / DatabaseDescriptorTest . java 
 + + + b / test / unit / org / apache / cassandra / config / DatabaseDescriptorTest . java 
 @ @ - 67 , 7 + 67 , 7 @ @ public class DatabaseDescriptorTest 
 
 / / this came as a result of CASSANDRA - 995 
 @ Test 
 - public void testTransKsMigration ( ) throws IOException , ConfigurationException 
 + public void testTransKsMigration ( ) throws ConfigurationException 
 { 
 SchemaLoader . cleanupAndLeaveDirs ( ) ; 
 DatabaseDescriptor . loadSchemas ( ) ;
