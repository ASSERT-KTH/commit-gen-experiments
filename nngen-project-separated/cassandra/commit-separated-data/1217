BLEU SCORE: 0.041961149062965476

TEST MSG: Exclude sstable based on clustering in query by name path
GENERATED MSG: encapsulate bloom filter access into sstable . getPosition

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1724f01 . . 080cc51 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 <nl> + * Skip sstables by clustering in query by names path ( 10571 ) <nl> * Fix implementation of LegacyLayout . LegacyBoundComparator ( CASSANDRA - 10602 ) <nl> * Don ' t use ' names query ' read path for counters ( CASSANDRA - 10572 ) <nl> * Fix backward compatibility for counters ( CASSANDRA - 10470 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java <nl> index 4d7d93c . . 065a247 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java <nl> + + + b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java <nl> @ @ - 675 , 6 + 675 , 28 @ @ public class SinglePartitionReadCommand extends ReadCommand <nl> if ( filter = = null ) <nl> break ; <nl> <nl> + if ( ! filter . shouldInclude ( sstable ) ) <nl> + { <nl> + / / This mean that nothing queried by the filter can be in the sstable . One exception is the top - level partition deletion <nl> + / / however : if it is set , it impacts everything and must be included . Getting that top - level partition deletion costs us <nl> + / / some seek in general however ( unless the partition is indexed and is in the key cache ) , so we first check if the sstable <nl> + / / has any tombstone at all as a shortcut . <nl> + if ( sstable . getSSTableMetadata ( ) . maxLocalDeletionTime = = Integer . MAX _ VALUE ) <nl> + continue ; / / Means no tombstone at all , we can skip that sstable <nl> + <nl> + / / We need to get the partition deletion and include it if it ' s live . In any case though , we ' re done with that sstable . <nl> + sstable . incrementReadCount ( ) ; <nl> + try ( UnfilteredRowIterator iter = sstable . iterator ( partitionKey ( ) , columnFilter ( ) , filter . isReversed ( ) , isForThrift ( ) ) ) <nl> + { <nl> + if ( iter . partitionLevelDeletion ( ) . isLive ( ) ) <nl> + { <nl> + sstablesIterated + + ; <nl> + result = add ( UnfilteredRowIterators . noRowsIterator ( iter . metadata ( ) , iter . partitionKey ( ) , Rows . EMPTY _ STATIC _ ROW , iter . partitionLevelDeletion ( ) , filter . isReversed ( ) ) , result , filter , sstable . isRepaired ( ) ) ; <nl> + } <nl> + } <nl> + continue ; <nl> + } <nl> + <nl> Tracing . trace ( " Merging data from sstable { } " , sstable . descriptor . generation ) ; <nl> sstable . incrementReadCount ( ) ; <nl> try ( UnfilteredRowIterator iter = filter . filter ( sstable . iterator ( partitionKey ( ) , columnFilter ( ) , filter . isReversed ( ) , isForThrift ( ) ) ) ) <nl> diff - - git a / src / java / org / apache / cassandra / db / filter / ClusteringIndexNamesFilter . java b / src / java / org / apache / cassandra / db / filter / ClusteringIndexNamesFilter . java <nl> index 388cd50 . . a81a7a6 100644 <nl> - - - a / src / java / org / apache / cassandra / db / filter / ClusteringIndexNamesFilter . java <nl> + + + b / src / java / org / apache / cassandra / db / filter / ClusteringIndexNamesFilter . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> package org . apache . cassandra . db . filter ; <nl> <nl> import java . io . IOException ; <nl> + import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> <nl> import org . apache . cassandra . config . CFMetaData ; <nl> @ @ - 201 , 8 + 202 , 17 @ @ public class ClusteringIndexNamesFilter extends AbstractClusteringIndexFilter <nl> <nl> public boolean shouldInclude ( SSTableReader sstable ) <nl> { <nl> - / / TODO : we could actually exclude some sstables <nl> - return true ; <nl> + ClusteringComparator comparator = sstable . metadata . comparator ; <nl> + List < ByteBuffer > minClusteringValues = sstable . getSSTableMetadata ( ) . minClusteringValues ; <nl> + List < ByteBuffer > maxClusteringValues = sstable . getSSTableMetadata ( ) . maxClusteringValues ; <nl> + <nl> + / / If any of the requested clustering is within the bounds covered by the sstable , we need to include the sstable <nl> + for ( Clustering clustering : clusterings ) <nl> + { <nl> + if ( Slice . make ( clustering ) . intersects ( comparator , minClusteringValues , maxClusteringValues ) ) <nl> + return true ; <nl> + } <nl> + return false ; <nl> } <nl> <nl> public String toString ( CFMetaData metadata )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 0bb9a93 . . 6d37ada 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 551 , 15 + 551 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> { <nl> for ( SSTable sstable : ssTables _ . values ( ) ) <nl> { <nl> - / * <nl> - * Get the BloomFilter associated with this file . Check if the key <nl> - * is present in the BloomFilter . If not continue to the next file . <nl> - * / <nl> - boolean bVal = sstable . isKeyPossible ( key ) ; <nl> - if ( ! bVal ) <nl> - { <nl> - continue ; <nl> - } <nl> ColumnFamily columnFamily = null ; <nl> try <nl> { <nl> @ @ - 567 , 6 + 558 , 7 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> } <nl> catch ( IOException e ) <nl> { <nl> + / / annotate exception w / more information about context <nl> throw new IOException ( " Error fetching " + key + " : " + cf + " from " + sstable , e ) ; <nl> } <nl> if ( columnFamily ! = null ) <nl> @ @ - 1571 , 9 + 1563 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> List < SSTable > sstables = new ArrayList < SSTable > ( ssTables _ . values ( ) ) ; <nl> for ( SSTable sstable : sstables ) <nl> { <nl> - / / If the key is not present in the SSTable ' s BloomFilter , continue to the next file <nl> - if ( ! sstable . isKeyPossible ( key ) ) <nl> - continue ; <nl> iter = new SSTableColumnIterator ( sstable . getFilename ( ) , key , cfName , startColumn , isAscending ) ; <nl> if ( iter . hasNext ( ) ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / io / SSTable . java b / src / java / org / apache / cassandra / io / SSTable . java <nl> index d78ae7a . . ec98992 100644 <nl> - - - a / src / java / org / apache / cassandra / io / SSTable . java <nl> + + + b / src / java / org / apache / cassandra / io / SSTable . java <nl> @ @ - 292 , 11 + 292 , 14 @ @ public class SSTable <nl> * / <nl> public long getPosition ( String decoratedKey , IPartitioner partitioner ) throws IOException <nl> { <nl> + if ( ! bf . isPresent ( decoratedKey ) ) <nl> + return - 1 ; <nl> long start = getIndexScanPosition ( decoratedKey , partitioner ) ; <nl> if ( start < 0 ) <nl> { <nl> return - 1 ; <nl> } <nl> + <nl> / / TODO mmap the index file ? <nl> BufferedRandomAccessFile input = new BufferedRandomAccessFile ( indexFilename ( dataFile _ ) , " r " ) ; <nl> input . seek ( start ) ; <nl> @ @ - 488 , 11 + 491 , 6 @ @ public class SSTable <nl> } <nl> } <nl> <nl> - public boolean isKeyPossible ( String clientKey ) <nl> - { <nl> - return bf . isPresent ( partitioner _ . decorateKey ( clientKey ) ) ; <nl> - } <nl> - <nl> IPartitioner getPartitioner ( ) <nl> { <nl> return partitioner _ ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1724f01 . . 080cc51 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 
 + * Skip sstables by clustering in query by names path ( 10571 ) 
 * Fix implementation of LegacyLayout . LegacyBoundComparator ( CASSANDRA - 10602 ) 
 * Don ' t use ' names query ' read path for counters ( CASSANDRA - 10572 ) 
 * Fix backward compatibility for counters ( CASSANDRA - 10470 ) 
 diff - - git a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java 
 index 4d7d93c . . 065a247 100644 
 - - - a / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java 
 + + + b / src / java / org / apache / cassandra / db / SinglePartitionReadCommand . java 
 @ @ - 675 , 6 + 675 , 28 @ @ public class SinglePartitionReadCommand extends ReadCommand 
 if ( filter = = null ) 
 break ; 
 
 + if ( ! filter . shouldInclude ( sstable ) ) 
 + { 
 + / / This mean that nothing queried by the filter can be in the sstable . One exception is the top - level partition deletion 
 + / / however : if it is set , it impacts everything and must be included . Getting that top - level partition deletion costs us 
 + / / some seek in general however ( unless the partition is indexed and is in the key cache ) , so we first check if the sstable 
 + / / has any tombstone at all as a shortcut . 
 + if ( sstable . getSSTableMetadata ( ) . maxLocalDeletionTime = = Integer . MAX _ VALUE ) 
 + continue ; / / Means no tombstone at all , we can skip that sstable 
 + 
 + / / We need to get the partition deletion and include it if it ' s live . In any case though , we ' re done with that sstable . 
 + sstable . incrementReadCount ( ) ; 
 + try ( UnfilteredRowIterator iter = sstable . iterator ( partitionKey ( ) , columnFilter ( ) , filter . isReversed ( ) , isForThrift ( ) ) ) 
 + { 
 + if ( iter . partitionLevelDeletion ( ) . isLive ( ) ) 
 + { 
 + sstablesIterated + + ; 
 + result = add ( UnfilteredRowIterators . noRowsIterator ( iter . metadata ( ) , iter . partitionKey ( ) , Rows . EMPTY _ STATIC _ ROW , iter . partitionLevelDeletion ( ) , filter . isReversed ( ) ) , result , filter , sstable . isRepaired ( ) ) ; 
 + } 
 + } 
 + continue ; 
 + } 
 + 
 Tracing . trace ( " Merging data from sstable { } " , sstable . descriptor . generation ) ; 
 sstable . incrementReadCount ( ) ; 
 try ( UnfilteredRowIterator iter = filter . filter ( sstable . iterator ( partitionKey ( ) , columnFilter ( ) , filter . isReversed ( ) , isForThrift ( ) ) ) ) 
 diff - - git a / src / java / org / apache / cassandra / db / filter / ClusteringIndexNamesFilter . java b / src / java / org / apache / cassandra / db / filter / ClusteringIndexNamesFilter . java 
 index 388cd50 . . a81a7a6 100644 
 - - - a / src / java / org / apache / cassandra / db / filter / ClusteringIndexNamesFilter . java 
 + + + b / src / java / org / apache / cassandra / db / filter / ClusteringIndexNamesFilter . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 package org . apache . cassandra . db . filter ; 
 
 import java . io . IOException ; 
 + import java . nio . ByteBuffer ; 
 import java . util . * ; 
 
 import org . apache . cassandra . config . CFMetaData ; 
 @ @ - 201 , 8 + 202 , 17 @ @ public class ClusteringIndexNamesFilter extends AbstractClusteringIndexFilter 
 
 public boolean shouldInclude ( SSTableReader sstable ) 
 { 
 - / / TODO : we could actually exclude some sstables 
 - return true ; 
 + ClusteringComparator comparator = sstable . metadata . comparator ; 
 + List < ByteBuffer > minClusteringValues = sstable . getSSTableMetadata ( ) . minClusteringValues ; 
 + List < ByteBuffer > maxClusteringValues = sstable . getSSTableMetadata ( ) . maxClusteringValues ; 
 + 
 + / / If any of the requested clustering is within the bounds covered by the sstable , we need to include the sstable 
 + for ( Clustering clustering : clusterings ) 
 + { 
 + if ( Slice . make ( clustering ) . intersects ( comparator , minClusteringValues , maxClusteringValues ) ) 
 + return true ; 
 + } 
 + return false ; 
 } 
 
 public String toString ( CFMetaData metadata )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 0bb9a93 . . 6d37ada 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 551 , 15 + 551 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 { 
 for ( SSTable sstable : ssTables _ . values ( ) ) 
 { 
 - / * 
 - * Get the BloomFilter associated with this file . Check if the key 
 - * is present in the BloomFilter . If not continue to the next file . 
 - * / 
 - boolean bVal = sstable . isKeyPossible ( key ) ; 
 - if ( ! bVal ) 
 - { 
 - continue ; 
 - } 
 ColumnFamily columnFamily = null ; 
 try 
 { 
 @ @ - 567 , 6 + 558 , 7 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 } 
 catch ( IOException e ) 
 { 
 + / / annotate exception w / more information about context 
 throw new IOException ( " Error fetching " + key + " : " + cf + " from " + sstable , e ) ; 
 } 
 if ( columnFamily ! = null ) 
 @ @ - 1571 , 9 + 1563 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 List < SSTable > sstables = new ArrayList < SSTable > ( ssTables _ . values ( ) ) ; 
 for ( SSTable sstable : sstables ) 
 { 
 - / / If the key is not present in the SSTable ' s BloomFilter , continue to the next file 
 - if ( ! sstable . isKeyPossible ( key ) ) 
 - continue ; 
 iter = new SSTableColumnIterator ( sstable . getFilename ( ) , key , cfName , startColumn , isAscending ) ; 
 if ( iter . hasNext ( ) ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / io / SSTable . java b / src / java / org / apache / cassandra / io / SSTable . java 
 index d78ae7a . . ec98992 100644 
 - - - a / src / java / org / apache / cassandra / io / SSTable . java 
 + + + b / src / java / org / apache / cassandra / io / SSTable . java 
 @ @ - 292 , 11 + 292 , 14 @ @ public class SSTable 
 * / 
 public long getPosition ( String decoratedKey , IPartitioner partitioner ) throws IOException 
 { 
 + if ( ! bf . isPresent ( decoratedKey ) ) 
 + return - 1 ; 
 long start = getIndexScanPosition ( decoratedKey , partitioner ) ; 
 if ( start < 0 ) 
 { 
 return - 1 ; 
 } 
 + 
 / / TODO mmap the index file ? 
 BufferedRandomAccessFile input = new BufferedRandomAccessFile ( indexFilename ( dataFile _ ) , " r " ) ; 
 input . seek ( start ) ; 
 @ @ - 488 , 11 + 491 , 6 @ @ public class SSTable 
 } 
 } 
 
 - public boolean isKeyPossible ( String clientKey ) 
 - { 
 - return bf . isPresent ( partitioner _ . decorateKey ( clientKey ) ) ; 
 - } 
 - 
 IPartitioner getPartitioner ( ) 
 { 
 return partitioner _ ;
