BLEU SCORE: 0.035802380724744266

TEST MSG: CASSANDRA - 10091 Follow up
GENERATED MSG: Move batchlog replay to its own executor

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / auth / AllowAllAuthorizer . java b / src / java / org / apache / cassandra / auth / AllowAllAuthorizer . java <nl> index d054aba . . 3b40979 100644 <nl> - - - a / src / java / org / apache / cassandra / auth / AllowAllAuthorizer . java <nl> + + + b / src / java / org / apache / cassandra / auth / AllowAllAuthorizer . java <nl> @ @ - 68 , 9 + 68 , 4 @ @ public class AllowAllAuthorizer implements IAuthorizer <nl> public void setup ( ) <nl> { <nl> } <nl> - <nl> - public Set < Permission > authorizeJMX ( AuthenticatedUser parUser , IResource parResource ) <nl> - { <nl> - return Permission . ALL ; <nl> - } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / auth / Permission . java b / src / java / org / apache / cassandra / auth / Permission . java <nl> index 0231270 . . d552280 100644 <nl> - - - a / src / java / org / apache / cassandra / auth / Permission . java <nl> + + + b / src / java / org / apache / cassandra / auth / Permission . java <nl> @ @ - 63 , 9 + 63 , 7 @ @ public enum Permission <nl> / / UDF permissions <nl> EXECUTE ; / / required to invoke any user defined function or aggregate <nl> <nl> - public static final Set < Permission > ALL _ DATA = <nl> - ImmutableSet . copyOf ( EnumSet . range ( Permission . CREATE , Permission . EXECUTE ) ) ; <nl> public static final Set < Permission > ALL = <nl> - ImmutableSet . copyOf ( EnumSet . range ( Permission . CREATE , Permission . EXECUTE ) ) ; <nl> + Sets . immutableEnumSet ( EnumSet . range ( Permission . CREATE , Permission . EXECUTE ) ) ; <nl> public static final Set < Permission > NONE = ImmutableSet . of ( ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> index c8f8f34 . . 2b797fe 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> @ @ - 24 , 27 + 24 , 17 @ @ import java . lang . management . MemoryPoolMXBean ; <nl> import java . net . InetAddress ; <nl> import java . net . URL ; <nl> import java . net . UnknownHostException ; <nl> - import java . rmi . RemoteException ; <nl> - import java . rmi . registry . LocateRegistry ; <nl> - import java . rmi . server . RMIClientSocketFactory ; <nl> - import java . rmi . server . RMIServerSocketFactory ; <nl> - import java . util . * ; <nl> + import java . util . List ; <nl> import java . util . concurrent . TimeUnit ; <nl> - import java . util . stream . Collectors ; <nl> import javax . management . MBeanServer ; <nl> import javax . management . ObjectName ; <nl> import javax . management . StandardMBean ; <nl> import javax . management . remote . JMXConnectorServer ; <nl> - import javax . management . remote . JMXServiceURL ; <nl> - import javax . management . remote . rmi . RMIConnectorServer ; <nl> - import javax . rmi . ssl . SslRMIClientSocketFactory ; <nl> - import javax . rmi . ssl . SslRMIServerSocketFactory ; <nl> <nl> import com . google . common . annotations . VisibleForTesting ; <nl> import com . google . common . util . concurrent . Futures ; <nl> import com . google . common . util . concurrent . ListenableFuture ; <nl> import com . google . common . util . concurrent . Uninterruptibles ; <nl> - import org . apache . commons . lang3 . StringUtils ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> @ @ - 52 , 7 + 42 , 6 @ @ import com . addthis . metrics3 . reporter . config . ReporterConfig ; <nl> import com . codahale . metrics . Meter ; <nl> import com . codahale . metrics . MetricRegistryListener ; <nl> import com . codahale . metrics . SharedMetricRegistries ; <nl> - import org . apache . cassandra . auth . jmx . AuthorizationProxy ; <nl> import org . apache . cassandra . batchlog . LegacyBatchlogMigrator ; <nl> import org . apache . cassandra . concurrent . ScheduledExecutors ; <nl> import org . apache . cassandra . config . CFMetaData ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b4681ae . . 124b3e4 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 2 , 6 + 2 , 7 @ @ <nl> * Allow cache - keys - to - save to be set at runtime ( CASSANDRA - 5980 ) <nl> * Allow where clause conditions to be in parenthesis ( CASSANDRA - 6037 ) <nl> * Do not open non - ssl storage port if encryption option is all ( CASSANDRA - 3916 ) <nl> + * Improve memory usage of metadata min / max column names ( CASSANDRA - 6077 ) <nl> <nl> <nl> 1 . 2 . 10 <nl> diff - - git a / src / java / org / apache / cassandra / db / BatchlogManager . java b / src / java / org / apache / cassandra / db / BatchlogManager . java <nl> index c56e106 . . 2488458 100644 <nl> - - - a / src / java / org / apache / cassandra / db / BatchlogManager . java <nl> + + + b / src / java / org / apache / cassandra / db / BatchlogManager . java <nl> @ @ - 17 , 13 + 17 , 16 @ @ <nl> * / <nl> package org . apache . cassandra . db ; <nl> <nl> - import java . io . * ; <nl> + import java . io . DataInputStream ; <nl> + import java . io . DataOutputStream ; <nl> + import java . io . IOException ; <nl> import java . lang . management . ManagementFactory ; <nl> import java . net . InetAddress ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> import java . util . concurrent . CopyOnWriteArraySet ; <nl> import java . util . concurrent . ExecutionException ; <nl> + import java . util . concurrent . ScheduledExecutorService ; <nl> import java . util . concurrent . TimeUnit ; <nl> import java . util . concurrent . atomic . AtomicBoolean ; <nl> import java . util . concurrent . atomic . AtomicLong ; <nl> @ @ - 35 , 6 + 38 , 7 @ @ import com . google . common . collect . Lists ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> + import org . apache . cassandra . concurrent . DebuggableScheduledThreadPoolExecutor ; <nl> import org . apache . cassandra . config . CFMetaData ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . cql3 . QueryProcessor ; <nl> @ @ - 70 , 6 + 74 , 8 @ @ public class BatchlogManager implements BatchlogManagerMBean <nl> private final AtomicLong totalBatchesReplayed = new AtomicLong ( ) ; <nl> private final AtomicBoolean isReplaying = new AtomicBoolean ( ) ; <nl> <nl> + private static final ScheduledExecutorService batchlogTasks = new DebuggableScheduledThreadPoolExecutor ( " BatchlogTasks " ) ; <nl> + <nl> public void start ( ) <nl> { <nl> MBeanServer mbs = ManagementFactory . getPlatformMBeanServer ( ) ; <nl> @ @ - 89 , 7 + 95 , 8 @ @ public class BatchlogManager implements BatchlogManagerMBean <nl> replayAllFailedBatches ( ) ; <nl> } <nl> } ; <nl> - StorageService . optionalTasks . scheduleWithFixedDelay ( runnable , StorageService . RING _ DELAY , REPLAY _ INTERVAL , TimeUnit . MILLISECONDS ) ; <nl> + <nl> + batchlogTasks . scheduleWithFixedDelay ( runnable , StorageService . RING _ DELAY , REPLAY _ INTERVAL , TimeUnit . MILLISECONDS ) ; <nl> } <nl> <nl> public int countAllBatches ( )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / auth / AllowAllAuthorizer . java b / src / java / org / apache / cassandra / auth / AllowAllAuthorizer . java 
 index d054aba . . 3b40979 100644 
 - - - a / src / java / org / apache / cassandra / auth / AllowAllAuthorizer . java 
 + + + b / src / java / org / apache / cassandra / auth / AllowAllAuthorizer . java 
 @ @ - 68 , 9 + 68 , 4 @ @ public class AllowAllAuthorizer implements IAuthorizer 
 public void setup ( ) 
 { 
 } 
 - 
 - public Set < Permission > authorizeJMX ( AuthenticatedUser parUser , IResource parResource ) 
 - { 
 - return Permission . ALL ; 
 - } 
 } 
 diff - - git a / src / java / org / apache / cassandra / auth / Permission . java b / src / java / org / apache / cassandra / auth / Permission . java 
 index 0231270 . . d552280 100644 
 - - - a / src / java / org / apache / cassandra / auth / Permission . java 
 + + + b / src / java / org / apache / cassandra / auth / Permission . java 
 @ @ - 63 , 9 + 63 , 7 @ @ public enum Permission 
 / / UDF permissions 
 EXECUTE ; / / required to invoke any user defined function or aggregate 
 
 - public static final Set < Permission > ALL _ DATA = 
 - ImmutableSet . copyOf ( EnumSet . range ( Permission . CREATE , Permission . EXECUTE ) ) ; 
 public static final Set < Permission > ALL = 
 - ImmutableSet . copyOf ( EnumSet . range ( Permission . CREATE , Permission . EXECUTE ) ) ; 
 + Sets . immutableEnumSet ( EnumSet . range ( Permission . CREATE , Permission . EXECUTE ) ) ; 
 public static final Set < Permission > NONE = ImmutableSet . of ( ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 index c8f8f34 . . 2b797fe 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 @ @ - 24 , 27 + 24 , 17 @ @ import java . lang . management . MemoryPoolMXBean ; 
 import java . net . InetAddress ; 
 import java . net . URL ; 
 import java . net . UnknownHostException ; 
 - import java . rmi . RemoteException ; 
 - import java . rmi . registry . LocateRegistry ; 
 - import java . rmi . server . RMIClientSocketFactory ; 
 - import java . rmi . server . RMIServerSocketFactory ; 
 - import java . util . * ; 
 + import java . util . List ; 
 import java . util . concurrent . TimeUnit ; 
 - import java . util . stream . Collectors ; 
 import javax . management . MBeanServer ; 
 import javax . management . ObjectName ; 
 import javax . management . StandardMBean ; 
 import javax . management . remote . JMXConnectorServer ; 
 - import javax . management . remote . JMXServiceURL ; 
 - import javax . management . remote . rmi . RMIConnectorServer ; 
 - import javax . rmi . ssl . SslRMIClientSocketFactory ; 
 - import javax . rmi . ssl . SslRMIServerSocketFactory ; 
 
 import com . google . common . annotations . VisibleForTesting ; 
 import com . google . common . util . concurrent . Futures ; 
 import com . google . common . util . concurrent . ListenableFuture ; 
 import com . google . common . util . concurrent . Uninterruptibles ; 
 - import org . apache . commons . lang3 . StringUtils ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 @ @ - 52 , 7 + 42 , 6 @ @ import com . addthis . metrics3 . reporter . config . ReporterConfig ; 
 import com . codahale . metrics . Meter ; 
 import com . codahale . metrics . MetricRegistryListener ; 
 import com . codahale . metrics . SharedMetricRegistries ; 
 - import org . apache . cassandra . auth . jmx . AuthorizationProxy ; 
 import org . apache . cassandra . batchlog . LegacyBatchlogMigrator ; 
 import org . apache . cassandra . concurrent . ScheduledExecutors ; 
 import org . apache . cassandra . config . CFMetaData ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b4681ae . . 124b3e4 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 2 , 6 + 2 , 7 @ @ 
 * Allow cache - keys - to - save to be set at runtime ( CASSANDRA - 5980 ) 
 * Allow where clause conditions to be in parenthesis ( CASSANDRA - 6037 ) 
 * Do not open non - ssl storage port if encryption option is all ( CASSANDRA - 3916 ) 
 + * Improve memory usage of metadata min / max column names ( CASSANDRA - 6077 ) 
 
 
 1 . 2 . 10 
 diff - - git a / src / java / org / apache / cassandra / db / BatchlogManager . java b / src / java / org / apache / cassandra / db / BatchlogManager . java 
 index c56e106 . . 2488458 100644 
 - - - a / src / java / org / apache / cassandra / db / BatchlogManager . java 
 + + + b / src / java / org / apache / cassandra / db / BatchlogManager . java 
 @ @ - 17 , 13 + 17 , 16 @ @ 
 * / 
 package org . apache . cassandra . db ; 
 
 - import java . io . * ; 
 + import java . io . DataInputStream ; 
 + import java . io . DataOutputStream ; 
 + import java . io . IOException ; 
 import java . lang . management . ManagementFactory ; 
 import java . net . InetAddress ; 
 import java . nio . ByteBuffer ; 
 import java . util . * ; 
 import java . util . concurrent . CopyOnWriteArraySet ; 
 import java . util . concurrent . ExecutionException ; 
 + import java . util . concurrent . ScheduledExecutorService ; 
 import java . util . concurrent . TimeUnit ; 
 import java . util . concurrent . atomic . AtomicBoolean ; 
 import java . util . concurrent . atomic . AtomicLong ; 
 @ @ - 35 , 6 + 38 , 7 @ @ import com . google . common . collect . Lists ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 + import org . apache . cassandra . concurrent . DebuggableScheduledThreadPoolExecutor ; 
 import org . apache . cassandra . config . CFMetaData ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . cql3 . QueryProcessor ; 
 @ @ - 70 , 6 + 74 , 8 @ @ public class BatchlogManager implements BatchlogManagerMBean 
 private final AtomicLong totalBatchesReplayed = new AtomicLong ( ) ; 
 private final AtomicBoolean isReplaying = new AtomicBoolean ( ) ; 
 
 + private static final ScheduledExecutorService batchlogTasks = new DebuggableScheduledThreadPoolExecutor ( " BatchlogTasks " ) ; 
 + 
 public void start ( ) 
 { 
 MBeanServer mbs = ManagementFactory . getPlatformMBeanServer ( ) ; 
 @ @ - 89 , 7 + 95 , 8 @ @ public class BatchlogManager implements BatchlogManagerMBean 
 replayAllFailedBatches ( ) ; 
 } 
 } ; 
 - StorageService . optionalTasks . scheduleWithFixedDelay ( runnable , StorageService . RING _ DELAY , REPLAY _ INTERVAL , TimeUnit . MILLISECONDS ) ; 
 + 
 + batchlogTasks . scheduleWithFixedDelay ( runnable , StorageService . RING _ DELAY , REPLAY _ INTERVAL , TimeUnit . MILLISECONDS ) ; 
 } 
 
 public int countAllBatches ( )
