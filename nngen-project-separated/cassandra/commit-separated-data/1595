BLEU SCORE: 0.016932492841722675

TEST MSG: remove unnecessary sanity checks as dataSize and dataSizeFromIndex are always the same
GENERATED MSG: Update scrub for single - pass compaction format

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / compaction / Scrubber . java b / src / java / org / apache / cassandra / db / compaction / Scrubber . java <nl> index 809a409 . . 3941c48 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / Scrubber . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / Scrubber . java <nl> @ @ - 173 , 10 + 173 , 9 @ @ public class Scrubber implements Closeable <nl> dataSizeFromIndex = nextRowPositionFromIndex - dataStartFromIndex ; <nl> } <nl> <nl> - long dataSize = dataSizeFromIndex ; <nl> / / avoid an NPE if key is null <nl> String keyName = key = = null ? " ( unreadable key ) " : ByteBufferUtil . bytesToHex ( key . getKey ( ) ) ; <nl> - outputHandler . debug ( String . format ( " row % s is % s bytes " , keyName , dataSize ) ) ; <nl> + outputHandler . debug ( String . format ( " row % s is % s bytes " , keyName , dataSizeFromIndex ) ) ; <nl> <nl> assert currentIndexKey ! = null | | indexFile . isEOF ( ) ; <nl> <nl> @ @ - 191 , 15 + 190 , 12 @ @ public class Scrubber implements Closeable <nl> ByteBufferUtil . bytesToHex ( key . getKey ( ) ) , ByteBufferUtil . bytesToHex ( currentIndexKey ) ) ) ) ; <nl> } <nl> <nl> - if ( dataSize > dataFile . length ( ) ) <nl> - throw new IOError ( new IOException ( " Impossible row size " + dataSize ) ) ; <nl> + if ( dataSizeFromIndex > dataFile . length ( ) ) <nl> + throw new IOError ( new IOException ( " Impossible row size " + dataSizeFromIndex ) ) ; <nl> <nl> if ( dataStart ! = dataStartFromIndex ) <nl> outputHandler . warn ( String . format ( " Data file row position % d differs from index file row position % d " , dataStart , dataStartFromIndex ) ) ; <nl> <nl> - if ( dataSize ! = dataSizeFromIndex ) <nl> - outputHandler . warn ( String . format ( " Data file row size % d different from index file row size % d " , dataSize , dataSizeFromIndex ) ) ; <nl> - <nl> SSTableIdentityIterator atoms = new SSTableIdentityIterator ( sstable , dataFile , key , checkData ) ; <nl> <nl> if ( prevKey ! = null & & prevKey . compareTo ( key ) > 0 ) <nl> @ @ - 222 , 7 + 218 , 7 @ @ public class Scrubber implements Closeable <nl> outputHandler . warn ( " Error reading row ( stacktrace follows ) : " , th ) ; <nl> <nl> if ( currentIndexKey ! = null <nl> - & & ( key = = null | | ! key . getKey ( ) . equals ( currentIndexKey ) | | dataStart ! = dataStartFromIndex | | dataSize ! = dataSizeFromIndex ) ) <nl> + & & ( key = = null | | ! key . getKey ( ) . equals ( currentIndexKey ) | | dataStart ! = dataStartFromIndex ) ) <nl> { <nl> outputHandler . output ( String . format ( " Retrying from row index ; data is % s bytes starting at % s " , <nl> dataSizeFromIndex , dataStartFromIndex ) ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> index bc98beb . . 879c9bc 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> @ @ - 307 , 7 + 307 , 7 @ @ public class SSTableWriter extends SSTable <nl> metadata . getBloomFilterFpChance ( ) ) ; <nl> writeMetadata ( descriptor , sstableMetadata ) ; <nl> <nl> - / / save the talbe of components <nl> + / / save the table of components <nl> SSTable . appendTOC ( descriptor , components ) ; <nl> <nl> / / remove the ' tmp ' marker from all components

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / compaction / Scrubber . java b / src / java / org / apache / cassandra / db / compaction / Scrubber . java 
 index 809a409 . . 3941c48 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / Scrubber . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / Scrubber . java 
 @ @ - 173 , 10 + 173 , 9 @ @ public class Scrubber implements Closeable 
 dataSizeFromIndex = nextRowPositionFromIndex - dataStartFromIndex ; 
 } 
 
 - long dataSize = dataSizeFromIndex ; 
 / / avoid an NPE if key is null 
 String keyName = key = = null ? " ( unreadable key ) " : ByteBufferUtil . bytesToHex ( key . getKey ( ) ) ; 
 - outputHandler . debug ( String . format ( " row % s is % s bytes " , keyName , dataSize ) ) ; 
 + outputHandler . debug ( String . format ( " row % s is % s bytes " , keyName , dataSizeFromIndex ) ) ; 
 
 assert currentIndexKey ! = null | | indexFile . isEOF ( ) ; 
 
 @ @ - 191 , 15 + 190 , 12 @ @ public class Scrubber implements Closeable 
 ByteBufferUtil . bytesToHex ( key . getKey ( ) ) , ByteBufferUtil . bytesToHex ( currentIndexKey ) ) ) ) ; 
 } 
 
 - if ( dataSize > dataFile . length ( ) ) 
 - throw new IOError ( new IOException ( " Impossible row size " + dataSize ) ) ; 
 + if ( dataSizeFromIndex > dataFile . length ( ) ) 
 + throw new IOError ( new IOException ( " Impossible row size " + dataSizeFromIndex ) ) ; 
 
 if ( dataStart ! = dataStartFromIndex ) 
 outputHandler . warn ( String . format ( " Data file row position % d differs from index file row position % d " , dataStart , dataStartFromIndex ) ) ; 
 
 - if ( dataSize ! = dataSizeFromIndex ) 
 - outputHandler . warn ( String . format ( " Data file row size % d different from index file row size % d " , dataSize , dataSizeFromIndex ) ) ; 
 - 
 SSTableIdentityIterator atoms = new SSTableIdentityIterator ( sstable , dataFile , key , checkData ) ; 
 
 if ( prevKey ! = null & & prevKey . compareTo ( key ) > 0 ) 
 @ @ - 222 , 7 + 218 , 7 @ @ public class Scrubber implements Closeable 
 outputHandler . warn ( " Error reading row ( stacktrace follows ) : " , th ) ; 
 
 if ( currentIndexKey ! = null 
 - & & ( key = = null | | ! key . getKey ( ) . equals ( currentIndexKey ) | | dataStart ! = dataStartFromIndex | | dataSize ! = dataSizeFromIndex ) ) 
 + & & ( key = = null | | ! key . getKey ( ) . equals ( currentIndexKey ) | | dataStart ! = dataStartFromIndex ) ) 
 { 
 outputHandler . output ( String . format ( " Retrying from row index ; data is % s bytes starting at % s " , 
 dataSizeFromIndex , dataStartFromIndex ) ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 index bc98beb . . 879c9bc 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 @ @ - 307 , 7 + 307 , 7 @ @ public class SSTableWriter extends SSTable 
 metadata . getBloomFilterFpChance ( ) ) ; 
 writeMetadata ( descriptor , sstableMetadata ) ; 
 
 - / / save the talbe of components 
 + / / save the table of components 
 SSTable . appendTOC ( descriptor , components ) ; 
 
 / / remove the ' tmp ' marker from all components
