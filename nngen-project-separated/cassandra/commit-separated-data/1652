BLEU SCORE: 0.040583489434387374

TEST MSG: use cross - platform % n
GENERATED MSG: StandaloneUpgrader fix

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java b / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java <nl> index 22c57f7 . . 9057998 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java <nl> + + + b / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java <nl> @ @ - 106 , 7 + 106 , 7 @ @ public class StandaloneUpgrader <nl> if ( ! options . keepSource ) <nl> { <nl> / / Remove the sstable ( it ' s been copied by upgrade ) <nl> - System . out . format ( " Deleting table % s . \ n " , sstable . descriptor . baseFilename ( ) ) ; <nl> + System . out . format ( " Deleting table % s . % n " , sstable . descriptor . baseFilename ( ) ) ; <nl> sstable . markObsolete ( ) ; <nl> sstable . selfRef ( ) . release ( ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6d9c910 . . 3847d6a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 32 , 6 + 32 , 7 @ @ <nl> * Never allow partition key ranges in CQL3 without token ( ) ( CASSANDRA - 5666 ) <nl> * Gossiper incorrectly drops AppState for an upgrading node ( CASSANDRA - 5660 ) <nl> * Connection thrashing during multi - region ec2 during upgrade , due to messaging version ( CASSANDRA - 5669 ) <nl> + * Avoid over reconnecting in EC2MRS ( CASSANDRA - 5678 ) <nl> Merged from 1 . 1 : <nl> * Remove buggy thrift max message length option ( CASSANDRA - 5529 ) <nl> * Fix NPE in Pig ' s widerow mode ( CASSANDRA - 5488 ) <nl> diff - - git a / src / java / org / apache / cassandra / locator / Ec2MultiRegionSnitch . java b / src / java / org / apache / cassandra / locator / Ec2MultiRegionSnitch . java <nl> index 12ebfbb . . ea41bc0 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / Ec2MultiRegionSnitch . java <nl> + + + b / src / java / org / apache / cassandra / locator / Ec2MultiRegionSnitch . java <nl> @ @ - 97 , 20 + 97 , 21 @ @ public class Ec2MultiRegionSnitch extends Ec2Snitch implements IEndpointStateCha <nl> <nl> private void reConnect ( InetAddress endpoint , VersionedValue versionedValue ) <nl> { <nl> - if ( getDatacenter ( endpoint ) . equals ( getDatacenter ( public _ ip ) ) <nl> - & & MessagingService . instance ( ) . getVersion ( endpoint ) = = MessagingService . current _ version ) <nl> + try <nl> { <nl> - try <nl> + InetAddress localEc2IP = InetAddress . getByName ( versionedValue . value ) ; <nl> + if ( getDatacenter ( endpoint ) . equals ( getDatacenter ( public _ ip ) ) <nl> + & & MessagingService . instance ( ) . getVersion ( endpoint ) = = MessagingService . current _ version <nl> + & & ! MessagingService . instance ( ) . getConnectionPool ( endpoint ) . endPoint ( ) . equals ( localEc2IP ) ) <nl> { <nl> - InetAddress remoteIP = InetAddress . getByName ( versionedValue . value ) ; <nl> - MessagingService . instance ( ) . getConnectionPool ( endpoint ) . reset ( remoteIP ) ; <nl> - logger . debug ( String . format ( " Intiated reconnect to an Internal IP % s for the % s " , remoteIP , endpoint ) ) ; <nl> - } <nl> - catch ( UnknownHostException e ) <nl> - { <nl> - logger . error ( " Error in getting the IP address resolved : " , e ) ; <nl> + MessagingService . instance ( ) . getConnectionPool ( endpoint ) . reset ( localEc2IP ) ; <nl> + logger . debug ( String . format ( " Intiated reconnect to an Internal IP % s for the % s " , localEc2IP , endpoint ) ) ; <nl> } <nl> } <nl> + catch ( UnknownHostException e ) <nl> + { <nl> + logger . error ( " Error in getting the IP address resolved : " , e ) ; <nl> + } <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java <nl> index 1bc1893 . . 86476b1 100644 <nl> - - - a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java <nl> + + + b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java <nl> @ @ - 130 , 7 + 130 , 7 @ @ public class OutboundTcpConnectionPool <nl> } <nl> } <nl> <nl> - InetAddress endPoint ( ) <nl> + public InetAddress endPoint ( ) <nl> { <nl> if ( id . equals ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> return FBUtilities . getLocalAddress ( ) ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java b / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java 
 index 22c57f7 . . 9057998 100644 
 - - - a / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java 
 + + + b / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java 
 @ @ - 106 , 7 + 106 , 7 @ @ public class StandaloneUpgrader 
 if ( ! options . keepSource ) 
 { 
 / / Remove the sstable ( it ' s been copied by upgrade ) 
 - System . out . format ( " Deleting table % s . \ n " , sstable . descriptor . baseFilename ( ) ) ; 
 + System . out . format ( " Deleting table % s . % n " , sstable . descriptor . baseFilename ( ) ) ; 
 sstable . markObsolete ( ) ; 
 sstable . selfRef ( ) . release ( ) ; 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6d9c910 . . 3847d6a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 32 , 6 + 32 , 7 @ @ 
 * Never allow partition key ranges in CQL3 without token ( ) ( CASSANDRA - 5666 ) 
 * Gossiper incorrectly drops AppState for an upgrading node ( CASSANDRA - 5660 ) 
 * Connection thrashing during multi - region ec2 during upgrade , due to messaging version ( CASSANDRA - 5669 ) 
 + * Avoid over reconnecting in EC2MRS ( CASSANDRA - 5678 ) 
 Merged from 1 . 1 : 
 * Remove buggy thrift max message length option ( CASSANDRA - 5529 ) 
 * Fix NPE in Pig ' s widerow mode ( CASSANDRA - 5488 ) 
 diff - - git a / src / java / org / apache / cassandra / locator / Ec2MultiRegionSnitch . java b / src / java / org / apache / cassandra / locator / Ec2MultiRegionSnitch . java 
 index 12ebfbb . . ea41bc0 100644 
 - - - a / src / java / org / apache / cassandra / locator / Ec2MultiRegionSnitch . java 
 + + + b / src / java / org / apache / cassandra / locator / Ec2MultiRegionSnitch . java 
 @ @ - 97 , 20 + 97 , 21 @ @ public class Ec2MultiRegionSnitch extends Ec2Snitch implements IEndpointStateCha 
 
 private void reConnect ( InetAddress endpoint , VersionedValue versionedValue ) 
 { 
 - if ( getDatacenter ( endpoint ) . equals ( getDatacenter ( public _ ip ) ) 
 - & & MessagingService . instance ( ) . getVersion ( endpoint ) = = MessagingService . current _ version ) 
 + try 
 { 
 - try 
 + InetAddress localEc2IP = InetAddress . getByName ( versionedValue . value ) ; 
 + if ( getDatacenter ( endpoint ) . equals ( getDatacenter ( public _ ip ) ) 
 + & & MessagingService . instance ( ) . getVersion ( endpoint ) = = MessagingService . current _ version 
 + & & ! MessagingService . instance ( ) . getConnectionPool ( endpoint ) . endPoint ( ) . equals ( localEc2IP ) ) 
 { 
 - InetAddress remoteIP = InetAddress . getByName ( versionedValue . value ) ; 
 - MessagingService . instance ( ) . getConnectionPool ( endpoint ) . reset ( remoteIP ) ; 
 - logger . debug ( String . format ( " Intiated reconnect to an Internal IP % s for the % s " , remoteIP , endpoint ) ) ; 
 - } 
 - catch ( UnknownHostException e ) 
 - { 
 - logger . error ( " Error in getting the IP address resolved : " , e ) ; 
 + MessagingService . instance ( ) . getConnectionPool ( endpoint ) . reset ( localEc2IP ) ; 
 + logger . debug ( String . format ( " Intiated reconnect to an Internal IP % s for the % s " , localEc2IP , endpoint ) ) ; 
 } 
 } 
 + catch ( UnknownHostException e ) 
 + { 
 + logger . error ( " Error in getting the IP address resolved : " , e ) ; 
 + } 
 } 
 
 @ Override 
 diff - - git a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java 
 index 1bc1893 . . 86476b1 100644 
 - - - a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java 
 + + + b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java 
 @ @ - 130 , 7 + 130 , 7 @ @ public class OutboundTcpConnectionPool 
 } 
 } 
 
 - InetAddress endPoint ( ) 
 + public InetAddress endPoint ( ) 
 { 
 if ( id . equals ( FBUtilities . getBroadcastAddress ( ) ) ) 
 return FBUtilities . getLocalAddress ( ) ;
