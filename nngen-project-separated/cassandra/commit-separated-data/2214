BLEU SCORE: 0.02931251013275449

TEST MSG: merge from 1 . 2
GENERATED MSG: Clone token map outside of hot gossip loops

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ae88957 . . e659891 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 43 , 6 + 43 , 7 @ @ <nl> * Track max / min timestamps for range tombstones ( CASSANDRA - 7647 ) <nl> * Fix NPE when listing saved caches dir ( CASSANDRA - 7632 ) <nl> Merged from 1 . 2 : <nl> + * Clone token map outside of hot gossip loops ( CASSANDRA - 7758 ) <nl> * Add stop method to EmbeddedCassandraService ( CASSANDRA - 7595 ) <nl> * Support connecting to ipv6 jmx with nodetool ( CASSANDRA - 7669 ) <nl> * Set gc _ grace _ seconds to seven days for system schema tables ( CASSANDRA - 7668 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / PendingRangeCalculatorService . java b / src / java / org / apache / cassandra / service / PendingRangeCalculatorService . java <nl> index a9968d2 . . 2a88e7d 100644 <nl> - - - a / src / java / org / apache / cassandra / service / PendingRangeCalculatorService . java <nl> + + + b / src / java / org / apache / cassandra / service / PendingRangeCalculatorService . java <nl> @ @ - 142 , 9 + 142 , 10 @ @ public class PendingRangeCalculatorService extends PendingRangeCalculatorService <nl> <nl> / / for each of those ranges , find what new nodes will be responsible for the range when <nl> / / all leaving nodes are gone . <nl> + TokenMetadata metadata = tm . cloneOnlyTokenMap ( ) ; / / don ' t do this in the loop ! # 7758 <nl> for ( Range < Token > range : affectedRanges ) <nl> { <nl> - Set < InetAddress > currentEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , tm . cloneOnlyTokenMap ( ) ) ) ; <nl> + Set < InetAddress > currentEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , metadata ) ) ; <nl> Set < InetAddress > newEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , allLeftMetadata ) ) ; <nl> pendingRanges . putAll ( range , Sets . difference ( newEndpoints , currentEndpoints ) ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index d5b5289 . . 824e0bd 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1922 , 8 + 1922 , 9 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> Map < Range < Token > , List < InetAddress > > currentReplicaEndpoints = new HashMap < Range < Token > , List < InetAddress > > ( ) ; <nl> <nl> / / Find ( for each range ) all nodes that store replicas for these ranges as well <nl> + TokenMetadata metadata = tokenMetadata . cloneOnlyTokenMap ( ) ; / / don ' t do this in the loop ! # 7758 <nl> for ( Range < Token > range : ranges ) <nl> - currentReplicaEndpoints . put ( range , Keyspace . open ( keyspaceName ) . getReplicationStrategy ( ) . calculateNaturalEndpoints ( range . right , tokenMetadata . cloneOnlyTokenMap ( ) ) ) ; <nl> + currentReplicaEndpoints . put ( range , Keyspace . open ( keyspaceName ) . getReplicationStrategy ( ) . calculateNaturalEndpoints ( range . right , metadata ) ) ; <nl> <nl> TokenMetadata temp = tokenMetadata . cloneAfterAllLeft ( ) ; <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ae88957 . . e659891 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 43 , 6 + 43 , 7 @ @ 
 * Track max / min timestamps for range tombstones ( CASSANDRA - 7647 ) 
 * Fix NPE when listing saved caches dir ( CASSANDRA - 7632 ) 
 Merged from 1 . 2 : 
 + * Clone token map outside of hot gossip loops ( CASSANDRA - 7758 ) 
 * Add stop method to EmbeddedCassandraService ( CASSANDRA - 7595 ) 
 * Support connecting to ipv6 jmx with nodetool ( CASSANDRA - 7669 ) 
 * Set gc _ grace _ seconds to seven days for system schema tables ( CASSANDRA - 7668 ) 
 diff - - git a / src / java / org / apache / cassandra / service / PendingRangeCalculatorService . java b / src / java / org / apache / cassandra / service / PendingRangeCalculatorService . java 
 index a9968d2 . . 2a88e7d 100644 
 - - - a / src / java / org / apache / cassandra / service / PendingRangeCalculatorService . java 
 + + + b / src / java / org / apache / cassandra / service / PendingRangeCalculatorService . java 
 @ @ - 142 , 9 + 142 , 10 @ @ public class PendingRangeCalculatorService extends PendingRangeCalculatorService 
 
 / / for each of those ranges , find what new nodes will be responsible for the range when 
 / / all leaving nodes are gone . 
 + TokenMetadata metadata = tm . cloneOnlyTokenMap ( ) ; / / don ' t do this in the loop ! # 7758 
 for ( Range < Token > range : affectedRanges ) 
 { 
 - Set < InetAddress > currentEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , tm . cloneOnlyTokenMap ( ) ) ) ; 
 + Set < InetAddress > currentEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , metadata ) ) ; 
 Set < InetAddress > newEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , allLeftMetadata ) ) ; 
 pendingRanges . putAll ( range , Sets . difference ( newEndpoints , currentEndpoints ) ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index d5b5289 . . 824e0bd 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1922 , 8 + 1922 , 9 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 Map < Range < Token > , List < InetAddress > > currentReplicaEndpoints = new HashMap < Range < Token > , List < InetAddress > > ( ) ; 
 
 / / Find ( for each range ) all nodes that store replicas for these ranges as well 
 + TokenMetadata metadata = tokenMetadata . cloneOnlyTokenMap ( ) ; / / don ' t do this in the loop ! # 7758 
 for ( Range < Token > range : ranges ) 
 - currentReplicaEndpoints . put ( range , Keyspace . open ( keyspaceName ) . getReplicationStrategy ( ) . calculateNaturalEndpoints ( range . right , tokenMetadata . cloneOnlyTokenMap ( ) ) ) ; 
 + currentReplicaEndpoints . put ( range , Keyspace . open ( keyspaceName ) . getReplicationStrategy ( ) . calculateNaturalEndpoints ( range . right , metadata ) ) ; 
 
 TokenMetadata temp = tokenMetadata . cloneAfterAllLeft ( ) ; 


NEAREST DIFF:
ELIMINATEDSENTENCE
