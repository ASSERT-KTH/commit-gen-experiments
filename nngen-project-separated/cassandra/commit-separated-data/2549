BLEU SCORE: 0.06567274736060397

TEST MSG: Fix performance regression from CASSANDRA - 5614
GENERATED MSG: merge from 1 . 2

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fffb2a5 . . 89a8725 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 2 , 6 + 2 , 7 @ @ <nl> * Log a warning for large batches ( CASSANDRA - 6487 ) <nl> * Queries on compact tables can return more rows that requested ( CASSANDRA - 7052 ) <nl> * USING TIMESTAMP for batches does not work ( CASSANDRA - 7053 ) <nl> + * Fix performance regression from CASSANDRA - 5614 ( CASSANDRA - 6949 ) <nl> Merged from 1 . 2 : <nl> * Fix batchlog to account for CF truncation records ( CASSANDRA - 6999 ) <nl> * Fix CQLSH parsing of functions and BLOB literals ( CASSANDRA - 7018 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / AtomicSortedColumns . java b / src / java / org / apache / cassandra / db / AtomicSortedColumns . java <nl> index d3a979c . . cacd3bb 100644 <nl> - - - a / src / java / org / apache / cassandra / db / AtomicSortedColumns . java <nl> + + + b / src / java / org / apache / cassandra / db / AtomicSortedColumns . java <nl> @ @ - 186 , 15 + 186 , 6 @ @ public class AtomicSortedColumns extends ColumnFamily <nl> } <nl> modified = new Holder ( current . map . clone ( ) , newDelInfo ) ; <nl> <nl> - if ( cm . deletionInfo ( ) . hasRanges ( ) ) <nl> - { <nl> - for ( Column currentColumn : Iterables . concat ( current . map . values ( ) , cm ) ) <nl> - { <nl> - if ( cm . deletionInfo ( ) . isDeleted ( currentColumn ) ) <nl> - indexer . remove ( currentColumn ) ; <nl> - } <nl> - } <nl> - <nl> for ( Column column : cm ) <nl> { <nl> sizeDelta + = modified . addColumn ( transformation . apply ( column ) , allocator , indexer ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java <nl> index d66f6db . . 535b9e2 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java <nl> @ @ - 260 , 51 + 260 , 6 @ @ public class RangeTombstoneTest extends SchemaLoader <nl> } <nl> <nl> @ Test <nl> - public void testMemtableUpdateWithRangeTombstonesUpdatesSecondaryIndex ( ) throws Exception <nl> - { <nl> - Keyspace table = Keyspace . open ( KSNAME ) ; <nl> - ColumnFamilyStore cfs = table . getColumnFamilyStore ( CFNAME ) ; <nl> - ByteBuffer key = ByteBufferUtil . bytes ( " k5 " ) ; <nl> - ByteBuffer indexedColumnName = ByteBufferUtil . bytes ( 1 ) ; <nl> - <nl> - cfs . truncateBlocking ( ) ; <nl> - cfs . disableAutoCompaction ( ) ; <nl> - cfs . setCompactionStrategyClass ( SizeTieredCompactionStrategy . class . getCanonicalName ( ) ) ; <nl> - if ( cfs . indexManager . getIndexForColumn ( indexedColumnName ) = = null ) <nl> - { <nl> - ColumnDefinition cd = new ColumnDefinition ( indexedColumnName , <nl> - cfs . getComparator ( ) , <nl> - IndexType . CUSTOM , <nl> - ImmutableMap . of ( SecondaryIndex . CUSTOM _ INDEX _ OPTION _ NAME , TestIndex . class . getName ( ) ) , <nl> - " test _ index " , <nl> - 0 , <nl> - null ) ; <nl> - cfs . indexManager . addIndexedColumn ( cd ) ; <nl> - } <nl> - <nl> - TestIndex index = ( ( TestIndex ) cfs . indexManager . getIndexForColumn ( indexedColumnName ) ) ; <nl> - index . resetCounts ( ) ; <nl> - <nl> - RowMutation rm = new RowMutation ( KSNAME , key ) ; <nl> - for ( int i = 0 ; i < 10 ; i + + ) <nl> - add ( rm , i , 0 ) ; <nl> - rm . apply ( ) ; <nl> - <nl> - / / We should have indexed 1 column <nl> - assertEquals ( 1 , index . inserts . size ( ) ) ; <nl> - <nl> - rm = new RowMutation ( KSNAME , key ) ; <nl> - ColumnFamily cf = rm . addOrGet ( CFNAME ) ; <nl> - for ( int i = 0 ; i < 10 ; i + = 2 ) <nl> - delete ( cf , 0 , 7 , 0 ) ; <nl> - rm . apply ( ) ; <nl> - <nl> - / / verify that the 1 indexed column was removed from the index <nl> - assertEquals ( 1 , index . deletes . size ( ) ) ; <nl> - assertEquals ( index . deletes . get ( 0 ) , index . inserts . get ( 0 ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> public void testOverwritesToDeletedColumns ( ) throws Exception <nl> { <nl> Keyspace table = Keyspace . open ( KSNAME ) ; <nl> @ @ - 352 , 14 + 307 , 13 @ @ public class RangeTombstoneTest extends SchemaLoader <nl> <nl> CompactionManager . instance . performMaximal ( cfs ) ; <nl> <nl> - / / verify that the " 1 " indexed column removed from the index twice : <nl> - / / the first time by processing the RT , the second time by the <nl> - / / re - indexing caused by the second insertion . This second write <nl> - / / deletes from the 2i because the original column was still in the <nl> - / / main cf ' s memtable ( shadowed by the RT ) . One thing we ' re checking <nl> - / / for here is that there wasn ' t an additional , bogus delete issued <nl> - / / to the 2i ( CASSANDRA - 6517 ) <nl> - assertEquals ( 2 , index . deletes . size ( ) ) ; <nl> + / / verify that the " 1 " indexed column removed from the index <nl> + / / only once , by the re - indexing caused by the second insertion . <nl> + / / This second write deletes from the 2i because the original column <nl> + / / was still in the main cf ' s memtable ( shadowed by the RT ) . One <nl> + / / thing we ' re checking for here is that there wasn ' t an additional , <nl> + / / bogus delete issued to the 2i ( CASSANDRA - 6517 ) <nl> + assertEquals ( 1 , index . deletes . size ( ) ) ; <nl> } <nl> <nl> private void runCompactionWithRangeTombstoneAndCheckSecondaryIndex ( ) throws Exception
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b935425 . . 7f5a487 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 - rc1 <nl> + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) <nl> * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) <nl> * save truncation position in system table ( CASSANDRA - 4906 ) <nl> * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) <nl> diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py <nl> index d15c083 . . bab3506 100644 <nl> - - - a / pylib / cqlshlib / formatting . py <nl> + + + b / pylib / cqlshlib / formatting . py <nl> @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : <nl> return f <nl> return registrator <nl> <nl> - @ formatter _ for ( ' bytes ' ) <nl> - def format _ value _ bytes ( val , colormap , * * _ ) : <nl> + @ formatter _ for ( ' blob ' ) <nl> + def format _ value _ blob ( val , colormap , * * _ ) : <nl> bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) <nl> return colorme ( bval , colormap , ' hex ' ) <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fffb2a5 . . 89a8725 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 2 , 6 + 2 , 7 @ @ 
 * Log a warning for large batches ( CASSANDRA - 6487 ) 
 * Queries on compact tables can return more rows that requested ( CASSANDRA - 7052 ) 
 * USING TIMESTAMP for batches does not work ( CASSANDRA - 7053 ) 
 + * Fix performance regression from CASSANDRA - 5614 ( CASSANDRA - 6949 ) 
 Merged from 1 . 2 : 
 * Fix batchlog to account for CF truncation records ( CASSANDRA - 6999 ) 
 * Fix CQLSH parsing of functions and BLOB literals ( CASSANDRA - 7018 ) 
 diff - - git a / src / java / org / apache / cassandra / db / AtomicSortedColumns . java b / src / java / org / apache / cassandra / db / AtomicSortedColumns . java 
 index d3a979c . . cacd3bb 100644 
 - - - a / src / java / org / apache / cassandra / db / AtomicSortedColumns . java 
 + + + b / src / java / org / apache / cassandra / db / AtomicSortedColumns . java 
 @ @ - 186 , 15 + 186 , 6 @ @ public class AtomicSortedColumns extends ColumnFamily 
 } 
 modified = new Holder ( current . map . clone ( ) , newDelInfo ) ; 
 
 - if ( cm . deletionInfo ( ) . hasRanges ( ) ) 
 - { 
 - for ( Column currentColumn : Iterables . concat ( current . map . values ( ) , cm ) ) 
 - { 
 - if ( cm . deletionInfo ( ) . isDeleted ( currentColumn ) ) 
 - indexer . remove ( currentColumn ) ; 
 - } 
 - } 
 - 
 for ( Column column : cm ) 
 { 
 sizeDelta + = modified . addColumn ( transformation . apply ( column ) , allocator , indexer ) ; 
 diff - - git a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java 
 index d66f6db . . 535b9e2 100644 
 - - - a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java 
 + + + b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java 
 @ @ - 260 , 51 + 260 , 6 @ @ public class RangeTombstoneTest extends SchemaLoader 
 } 
 
 @ Test 
 - public void testMemtableUpdateWithRangeTombstonesUpdatesSecondaryIndex ( ) throws Exception 
 - { 
 - Keyspace table = Keyspace . open ( KSNAME ) ; 
 - ColumnFamilyStore cfs = table . getColumnFamilyStore ( CFNAME ) ; 
 - ByteBuffer key = ByteBufferUtil . bytes ( " k5 " ) ; 
 - ByteBuffer indexedColumnName = ByteBufferUtil . bytes ( 1 ) ; 
 - 
 - cfs . truncateBlocking ( ) ; 
 - cfs . disableAutoCompaction ( ) ; 
 - cfs . setCompactionStrategyClass ( SizeTieredCompactionStrategy . class . getCanonicalName ( ) ) ; 
 - if ( cfs . indexManager . getIndexForColumn ( indexedColumnName ) = = null ) 
 - { 
 - ColumnDefinition cd = new ColumnDefinition ( indexedColumnName , 
 - cfs . getComparator ( ) , 
 - IndexType . CUSTOM , 
 - ImmutableMap . of ( SecondaryIndex . CUSTOM _ INDEX _ OPTION _ NAME , TestIndex . class . getName ( ) ) , 
 - " test _ index " , 
 - 0 , 
 - null ) ; 
 - cfs . indexManager . addIndexedColumn ( cd ) ; 
 - } 
 - 
 - TestIndex index = ( ( TestIndex ) cfs . indexManager . getIndexForColumn ( indexedColumnName ) ) ; 
 - index . resetCounts ( ) ; 
 - 
 - RowMutation rm = new RowMutation ( KSNAME , key ) ; 
 - for ( int i = 0 ; i < 10 ; i + + ) 
 - add ( rm , i , 0 ) ; 
 - rm . apply ( ) ; 
 - 
 - / / We should have indexed 1 column 
 - assertEquals ( 1 , index . inserts . size ( ) ) ; 
 - 
 - rm = new RowMutation ( KSNAME , key ) ; 
 - ColumnFamily cf = rm . addOrGet ( CFNAME ) ; 
 - for ( int i = 0 ; i < 10 ; i + = 2 ) 
 - delete ( cf , 0 , 7 , 0 ) ; 
 - rm . apply ( ) ; 
 - 
 - / / verify that the 1 indexed column was removed from the index 
 - assertEquals ( 1 , index . deletes . size ( ) ) ; 
 - assertEquals ( index . deletes . get ( 0 ) , index . inserts . get ( 0 ) ) ; 
 - } 
 - 
 - @ Test 
 public void testOverwritesToDeletedColumns ( ) throws Exception 
 { 
 Keyspace table = Keyspace . open ( KSNAME ) ; 
 @ @ - 352 , 14 + 307 , 13 @ @ public class RangeTombstoneTest extends SchemaLoader 
 
 CompactionManager . instance . performMaximal ( cfs ) ; 
 
 - / / verify that the " 1 " indexed column removed from the index twice : 
 - / / the first time by processing the RT , the second time by the 
 - / / re - indexing caused by the second insertion . This second write 
 - / / deletes from the 2i because the original column was still in the 
 - / / main cf ' s memtable ( shadowed by the RT ) . One thing we ' re checking 
 - / / for here is that there wasn ' t an additional , bogus delete issued 
 - / / to the 2i ( CASSANDRA - 6517 ) 
 - assertEquals ( 2 , index . deletes . size ( ) ) ; 
 + / / verify that the " 1 " indexed column removed from the index 
 + / / only once , by the re - indexing caused by the second insertion . 
 + / / This second write deletes from the 2i because the original column 
 + / / was still in the main cf ' s memtable ( shadowed by the RT ) . One 
 + / / thing we ' re checking for here is that there wasn ' t an additional , 
 + / / bogus delete issued to the 2i ( CASSANDRA - 6517 ) 
 + assertEquals ( 1 , index . deletes . size ( ) ) ; 
 } 
 
 private void runCompactionWithRangeTombstoneAndCheckSecondaryIndex ( ) throws Exception

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b935425 . . 7f5a487 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 - rc1 
 + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) 
 * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) 
 * save truncation position in system table ( CASSANDRA - 4906 ) 
 * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) 
 diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py 
 index d15c083 . . bab3506 100644 
 - - - a / pylib / cqlshlib / formatting . py 
 + + + b / pylib / cqlshlib / formatting . py 
 @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : 
 return f 
 return registrator 
 
 - @ formatter _ for ( ' bytes ' ) 
 - def format _ value _ bytes ( val , colormap , * * _ ) : 
 + @ formatter _ for ( ' blob ' ) 
 + def format _ value _ blob ( val , colormap , * * _ ) : 
 bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) 
 return colorme ( bval , colormap , ' hex ' ) 

