BLEU SCORE: 0.020980574531482755

TEST MSG: Copy compaction options to make sure they are reloaded .
GENERATED MSG: catch all Throwables , not just Exceptions

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b8c3963 . . 42a1148 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 2 , 6 + 2 , 7 @ @ <nl> * Add missing iso8601 patterns for date strings ( 6973 ) <nl> * Support selecting multiple rows in a partition using IN ( CASSANDRA - 6875 ) <nl> * cqlsh : always emphasize the partition key in DESC output ( CASSANDRA - 7274 ) <nl> + * Copy compaction options to make sure they are reloaded ( CASSANDRA - 7290 ) <nl> <nl> 2 . 0 . 8 <nl> * Always reallocate buffers in HSHA ( CASSANDRA - 6285 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java b / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java <nl> index 276802f . . 0a857b3 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . db . compaction ; <nl> import java . util . * ; <nl> <nl> import com . google . common . base . Predicate ; <nl> + import com . google . common . collect . ImmutableMap ; <nl> import com . google . common . collect . Iterables ; <nl> import com . google . common . util . concurrent . RateLimiter ; <nl> import org . slf4j . Logger ; <nl> @ @ - 76 , 7 + 77 , 7 @ @ public abstract class AbstractCompactionStrategy <nl> { <nl> assert cfs ! = null ; <nl> this . cfs = cfs ; <nl> - this . options = options ; <nl> + this . options = ImmutableMap . copyOf ( options ) ; <nl> <nl> / * checks must be repeated here , as user supplied strategies might not call validateOptions directly * / <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index af94bc8 . . 86401d9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> 2 . 0 . 0 <nl> * fix CAS contention timeout ( CASSANDRA - 5830 ) <nl> + * fix HsHa to respect max frame size ( CASSANDRA - 4573 ) <nl> <nl> <nl> 2 . 0 . 0 - rc1 <nl> diff - - git a / build . xml b / build . xml <nl> index a40405e . . a72adf4 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 353 , 7 + 353 , 7 @ @ <nl> < dependency groupId = " com . googlecode . json - simple " artifactId = " json - simple " version = " 1 . 1 " / > <nl> < dependency groupId = " com . github . stephenc . high - scale - lib " artifactId = " high - scale - lib " version = " 1 . 1 . 2 " / > <nl> < dependency groupId = " com . github . stephenc " artifactId = " jamm " version = " 0 . 2 . 5 " / > <nl> - 	 < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 2 . 1 " / > <nl> + 	 < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 0 " / > <nl> < dependency groupId = " org . yaml " artifactId = " snakeyaml " version = " 1 . 6 " / > <nl> < dependency groupId = " org . apache . thrift " artifactId = " libthrift " version = " 0 . 9 . 0 " / > <nl> <nl> @ @ - 451 , 7 + 451 , 7 @ @ <nl> < dependency groupId = " edu . stanford . ppl " artifactId = " snaptree " / > <nl> < dependency groupId = " org . mindrot " artifactId = " jbcrypt " / > <nl> < dependency groupId = " com . yammer . metrics " artifactId = " metrics - core " / > <nl> - < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 2 . 1 " / > <nl> + < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 0 " / > <nl> <nl> < dependency groupId = " log4j " artifactId = " log4j " / > <nl> < ! - - cassandra has a hard dependency on log4j , so force slf4j ' s log4j provider at runtime - - > <nl> diff - - git a / lib / thrift - server - 0 . 2 . 1 . jar b / lib / thrift - server - 0 . 2 . 1 . jar <nl> deleted file mode 100644 <nl> index 6b8de7d . . 0000000 <nl> Binary files a / lib / thrift - server - 0 . 2 . 1 . jar and / dev / null differ <nl> diff - - git a / lib / thrift - server - 0 . 3 . 0 . jar b / lib / thrift - server - 0 . 3 . 0 . jar <nl> new file mode 100644 <nl> index 0000000 . . 3c93bb9 <nl> Binary files / dev / null and b / lib / thrift - server - 0 . 3 . 0 . jar differ <nl> diff - - git a / src / java / org / apache / cassandra / thrift / THsHaDisruptorServer . java b / src / java / org / apache / cassandra / thrift / THsHaDisruptorServer . java <nl> index 57a7893 . . 0df90ec 100644 <nl> - - - a / src / java / org / apache / cassandra / thrift / THsHaDisruptorServer . java <nl> + + + b / src / java / org / apache / cassandra / thrift / THsHaDisruptorServer . java <nl> @ @ - 84 , 7 + 84 , 8 @ @ public class THsHaDisruptorServer extends TDisruptorServer <nl> . outputTransportFactory ( args . outTransportFactory ) <nl> . inputProtocolFactory ( protocolFactory ) <nl> . outputProtocolFactory ( protocolFactory ) <nl> - . processor ( args . processor ) ; <nl> + . processor ( args . processor ) <nl> + . maxFrameSizeInBytes ( DatabaseDescriptor . getThriftFramedTransportSize ( ) ) ; <nl> <nl> return new THsHaDisruptorServer ( serverArgs ) ; <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b8c3963 . . 42a1148 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 2 , 6 + 2 , 7 @ @ 
 * Add missing iso8601 patterns for date strings ( 6973 ) 
 * Support selecting multiple rows in a partition using IN ( CASSANDRA - 6875 ) 
 * cqlsh : always emphasize the partition key in DESC output ( CASSANDRA - 7274 ) 
 + * Copy compaction options to make sure they are reloaded ( CASSANDRA - 7290 ) 
 
 2 . 0 . 8 
 * Always reallocate buffers in HSHA ( CASSANDRA - 6285 ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java b / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java 
 index 276802f . . 0a857b3 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java 
 @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . db . compaction ; 
 import java . util . * ; 
 
 import com . google . common . base . Predicate ; 
 + import com . google . common . collect . ImmutableMap ; 
 import com . google . common . collect . Iterables ; 
 import com . google . common . util . concurrent . RateLimiter ; 
 import org . slf4j . Logger ; 
 @ @ - 76 , 7 + 77 , 7 @ @ public abstract class AbstractCompactionStrategy 
 { 
 assert cfs ! = null ; 
 this . cfs = cfs ; 
 - this . options = options ; 
 + this . options = ImmutableMap . copyOf ( options ) ; 
 
 / * checks must be repeated here , as user supplied strategies might not call validateOptions directly * / 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index af94bc8 . . 86401d9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 2 . 0 . 0 
 * fix CAS contention timeout ( CASSANDRA - 5830 ) 
 + * fix HsHa to respect max frame size ( CASSANDRA - 4573 ) 
 
 
 2 . 0 . 0 - rc1 
 diff - - git a / build . xml b / build . xml 
 index a40405e . . a72adf4 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 353 , 7 + 353 , 7 @ @ 
 < dependency groupId = " com . googlecode . json - simple " artifactId = " json - simple " version = " 1 . 1 " / > 
 < dependency groupId = " com . github . stephenc . high - scale - lib " artifactId = " high - scale - lib " version = " 1 . 1 . 2 " / > 
 < dependency groupId = " com . github . stephenc " artifactId = " jamm " version = " 0 . 2 . 5 " / > 
 - 	 < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 2 . 1 " / > 
 + 	 < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 0 " / > 
 < dependency groupId = " org . yaml " artifactId = " snakeyaml " version = " 1 . 6 " / > 
 < dependency groupId = " org . apache . thrift " artifactId = " libthrift " version = " 0 . 9 . 0 " / > 
 
 @ @ - 451 , 7 + 451 , 7 @ @ 
 < dependency groupId = " edu . stanford . ppl " artifactId = " snaptree " / > 
 < dependency groupId = " org . mindrot " artifactId = " jbcrypt " / > 
 < dependency groupId = " com . yammer . metrics " artifactId = " metrics - core " / > 
 - < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 2 . 1 " / > 
 + < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 0 " / > 
 
 < dependency groupId = " log4j " artifactId = " log4j " / > 
 < ! - - cassandra has a hard dependency on log4j , so force slf4j ' s log4j provider at runtime - - > 
 diff - - git a / lib / thrift - server - 0 . 2 . 1 . jar b / lib / thrift - server - 0 . 2 . 1 . jar 
 deleted file mode 100644 
 index 6b8de7d . . 0000000 
 Binary files a / lib / thrift - server - 0 . 2 . 1 . jar and / dev / null differ 
 diff - - git a / lib / thrift - server - 0 . 3 . 0 . jar b / lib / thrift - server - 0 . 3 . 0 . jar 
 new file mode 100644 
 index 0000000 . . 3c93bb9 
 Binary files / dev / null and b / lib / thrift - server - 0 . 3 . 0 . jar differ 
 diff - - git a / src / java / org / apache / cassandra / thrift / THsHaDisruptorServer . java b / src / java / org / apache / cassandra / thrift / THsHaDisruptorServer . java 
 index 57a7893 . . 0df90ec 100644 
 - - - a / src / java / org / apache / cassandra / thrift / THsHaDisruptorServer . java 
 + + + b / src / java / org / apache / cassandra / thrift / THsHaDisruptorServer . java 
 @ @ - 84 , 7 + 84 , 8 @ @ public class THsHaDisruptorServer extends TDisruptorServer 
 . outputTransportFactory ( args . outTransportFactory ) 
 . inputProtocolFactory ( protocolFactory ) 
 . outputProtocolFactory ( protocolFactory ) 
 - . processor ( args . processor ) ; 
 + . processor ( args . processor ) 
 + . maxFrameSizeInBytes ( DatabaseDescriptor . getThriftFramedTransportSize ( ) ) ; 
 
 return new THsHaDisruptorServer ( serverArgs ) ; 
 }
