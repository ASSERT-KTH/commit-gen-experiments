BLEU SCORE: 0.01898400888797787

TEST MSG: honor the iterator . next ( ) contract for exceptions
GENERATED MSG: Expose whether jna is enabled and memory is locked via JMX

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> index 80c48aa . . e239122 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> + + + b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> @ @ - 22 , 12 + 22 , 12 @ @ import java . util . Arrays ; <nl> import java . util . Collection ; <nl> import java . util . Comparator ; <nl> import java . util . Iterator ; <nl> + import java . util . NoSuchElementException ; <nl> <nl> import com . google . common . base . Function ; <nl> import com . google . common . collect . AbstractIterator ; <nl> import com . google . common . collect . Iterables ; <nl> <nl> - import net . nicoulaj . compilecommand . annotations . Inline ; <nl> import org . apache . cassandra . config . CFMetaData ; <nl> import org . apache . cassandra . db . composites . CellName ; <nl> import org . apache . cassandra . db . composites . Composite ; <nl> @ @ - 609 , 8 + 609 , 17 @ @ public class ArrayBackedSortedColumns extends ColumnFamily <nl> <nl> public Cell next ( ) <nl> { <nl> - shouldCallNext = false ; <nl> - return cells [ idx - - ] ; <nl> + 	 try <nl> + 	 { <nl> + shouldCallNext = false ; <nl> + return cells [ idx - - ] ; <nl> + 	 } <nl> + catch ( ArrayIndexOutOfBoundsException e ) <nl> + { <nl> + NoSuchElementException ne = new NoSuchElementException ( e . getMessage ( ) ) ; <nl> + ne . initCause ( e ) ; <nl> + throw ne ; <nl> + 	 } <nl> } <nl> <nl> public void remove ( ) <nl> @ @ - 642 , 8 + 651 , 17 @ @ public class ArrayBackedSortedColumns extends ColumnFamily <nl> <nl> public Cell next ( ) <nl> { <nl> - shouldCallNext = false ; <nl> - return cells [ idx + + ] ; <nl> + try <nl> + { <nl> + shouldCallNext = false ; <nl> + return cells [ idx + + ] ; <nl> + } <nl> + catch ( ArrayIndexOutOfBoundsException e ) <nl> + { <nl> + NoSuchElementException ne = new NoSuchElementException ( e . getMessage ( ) ) ; <nl> + ne . initCause ( e ) ; <nl> + throw ne ; <nl> + } <nl> } <nl> <nl> public void remove ( )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> new file mode 100644 <nl> index 0000000 . . 39b96c5 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package org . apache . cassandra . service ; <nl> + <nl> + public interface NativeAccessMBean <nl> + { <nl> + boolean isAvailable ( ) ; <nl> + <nl> + boolean isMemoryLockable ( ) ; <nl> + } <nl> +

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 index 80c48aa . . e239122 100644 
 - - - a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 + + + b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 @ @ - 22 , 12 + 22 , 12 @ @ import java . util . Arrays ; 
 import java . util . Collection ; 
 import java . util . Comparator ; 
 import java . util . Iterator ; 
 + import java . util . NoSuchElementException ; 
 
 import com . google . common . base . Function ; 
 import com . google . common . collect . AbstractIterator ; 
 import com . google . common . collect . Iterables ; 
 
 - import net . nicoulaj . compilecommand . annotations . Inline ; 
 import org . apache . cassandra . config . CFMetaData ; 
 import org . apache . cassandra . db . composites . CellName ; 
 import org . apache . cassandra . db . composites . Composite ; 
 @ @ - 609 , 8 + 609 , 17 @ @ public class ArrayBackedSortedColumns extends ColumnFamily 
 
 public Cell next ( ) 
 { 
 - shouldCallNext = false ; 
 - return cells [ idx - - ] ; 
 + 	 try 
 + 	 { 
 + shouldCallNext = false ; 
 + return cells [ idx - - ] ; 
 + 	 } 
 + catch ( ArrayIndexOutOfBoundsException e ) 
 + { 
 + NoSuchElementException ne = new NoSuchElementException ( e . getMessage ( ) ) ; 
 + ne . initCause ( e ) ; 
 + throw ne ; 
 + 	 } 
 } 
 
 public void remove ( ) 
 @ @ - 642 , 8 + 651 , 17 @ @ public class ArrayBackedSortedColumns extends ColumnFamily 
 
 public Cell next ( ) 
 { 
 - shouldCallNext = false ; 
 - return cells [ idx + + ] ; 
 + try 
 + { 
 + shouldCallNext = false ; 
 + return cells [ idx + + ] ; 
 + } 
 + catch ( ArrayIndexOutOfBoundsException e ) 
 + { 
 + NoSuchElementException ne = new NoSuchElementException ( e . getMessage ( ) ) ; 
 + ne . initCause ( e ) ; 
 + throw ne ; 
 + } 
 } 
 
 public void remove ( )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 new file mode 100644 
 index 0000000 . . 39b96c5 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package org . apache . cassandra . service ; 
 + 
 + public interface NativeAccessMBean 
 + { 
 + boolean isAvailable ( ) ; 
 + 
 + boolean isMemoryLockable ( ) ; 
 + } 
 +
