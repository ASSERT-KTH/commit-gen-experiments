BLEU SCORE: 0.041961149062965476

TEST MSG: Include table name in " Cannot get comparator " exception
GENERATED MSG: Remove maybeUpdateRowCache in favor of the equivalent invalidateCachedPartition

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 1e52b13 . . 400fd36 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 1225 , 13 + 1225 , 23 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> { <nl> long start = System . nanoTime ( ) ; <nl> Memtable mt = data . getMemtableFor ( opGroup , replayPosition ) ; <nl> - long timeDelta = mt . put ( update , indexer , opGroup ) ; <nl> - DecoratedKey key = update . partitionKey ( ) ; <nl> - maybeUpdateRowCache ( key ) ; <nl> - metric . samplers . get ( Sampler . WRITES ) . addSample ( key . getKey ( ) , key . hashCode ( ) , 1 ) ; <nl> - metric . writeLatency . addNano ( System . nanoTime ( ) - start ) ; <nl> - if ( timeDelta < Long . MAX _ VALUE ) <nl> - metric . colUpdateTimeDeltaHistogram . update ( timeDelta ) ; <nl> + try <nl> + { <nl> + long timeDelta = mt . put ( update , indexer , opGroup ) ; <nl> + DecoratedKey key = update . partitionKey ( ) ; <nl> + maybeUpdateRowCache ( key ) ; <nl> + metric . samplers . get ( Sampler . WRITES ) . addSample ( key . getKey ( ) , key . hashCode ( ) , 1 ) ; <nl> + metric . writeLatency . addNano ( System . nanoTime ( ) - start ) ; <nl> + if ( timeDelta < Long . MAX _ VALUE ) <nl> + metric . colUpdateTimeDeltaHistogram . update ( timeDelta ) ; <nl> + } <nl> + catch ( RuntimeException e ) <nl> + { <nl> + throw new RuntimeException ( e . getMessage ( ) <nl> + + " for ks : " <nl> + + keyspace . getName ( ) + " , table : " + name , e ) ; <nl> + } <nl> + <nl> } <nl> <nl> / * *
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 1e52b13 . . 400fd36 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 1225 , 13 + 1225 , 23 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 { 
 long start = System . nanoTime ( ) ; 
 Memtable mt = data . getMemtableFor ( opGroup , replayPosition ) ; 
 - long timeDelta = mt . put ( update , indexer , opGroup ) ; 
 - DecoratedKey key = update . partitionKey ( ) ; 
 - maybeUpdateRowCache ( key ) ; 
 - metric . samplers . get ( Sampler . WRITES ) . addSample ( key . getKey ( ) , key . hashCode ( ) , 1 ) ; 
 - metric . writeLatency . addNano ( System . nanoTime ( ) - start ) ; 
 - if ( timeDelta < Long . MAX _ VALUE ) 
 - metric . colUpdateTimeDeltaHistogram . update ( timeDelta ) ; 
 + try 
 + { 
 + long timeDelta = mt . put ( update , indexer , opGroup ) ; 
 + DecoratedKey key = update . partitionKey ( ) ; 
 + maybeUpdateRowCache ( key ) ; 
 + metric . samplers . get ( Sampler . WRITES ) . addSample ( key . getKey ( ) , key . hashCode ( ) , 1 ) ; 
 + metric . writeLatency . addNano ( System . nanoTime ( ) - start ) ; 
 + if ( timeDelta < Long . MAX _ VALUE ) 
 + metric . colUpdateTimeDeltaHistogram . update ( timeDelta ) ; 
 + } 
 + catch ( RuntimeException e ) 
 + { 
 + throw new RuntimeException ( e . getMessage ( ) 
 + + " for ks : " 
 + + keyspace . getName ( ) + " , table : " + name , e ) ; 
 + } 
 + 
 } 
 
 / * *

NEAREST DIFF:
ELIMINATEDSENTENCE
