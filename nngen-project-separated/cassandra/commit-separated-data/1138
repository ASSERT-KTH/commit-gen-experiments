BLEU SCORE: 0.07986788803078405

TEST MSG: 9474 2 . 2
GENERATED MSG: Disable reloading of GossipingPropertyFileSnitch

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7932f51 . . 34866fa 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 5 <nl> + * Disable reloading of GossipingPropertyFileSnitch ( CASSANDRA - 9474 ) <nl> * Verify tables in pseudo - system keyspaces at startup ( CASSANDRA - 10761 ) <nl> Merged from 2 . 1 : <nl> * Fix Stress profile parsing on Windows ( CASSANDRA - 10808 ) <nl> diff - - git a / NEWS . txt b / NEWS . txt <nl> index 87e77f4 . . e220357 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 26 , 10 + 26 , 13 @ @ Deprecation <nl> <nl> Operations <nl> - - - - - - - - - - <nl> - - Switching racks is no longer an allowed operation on a node which has <nl> - data . Instead , the node will need to be decommissioned and rebootstrapped . <nl> - If moving from the SimpleSnitch , make sure the rack containing all current <nl> - nodes is named " rack1 " . <nl> + - Switching data center or racks is no longer an allowed operation on a node <nl> + which has data . Instead , the node will need to be decommissioned and <nl> + rebootstrapped . If moving from the SimpleSnitch , make sure that the data <nl> + center and rack containing all current nodes is named " datacenter1 " and <nl> + " rack1 " . To override this behaviour use - Dcassandra . ignore _ rack = true and / or <nl> + - Dcassandra . ignore _ dc = true . <nl> + - Reloading the configuration file of GossipingPropertyFileSnitch has been disabled . <nl> <nl> New features <nl> - - - - - - - - - - - - <nl> @ @ - 40 , 13 + 43 , 6 @ @ New features <nl> - Native protocol server now allows both SSL and non - SSL connections on <nl> the same port . <nl> <nl> - Operations <nl> - - - - - - - - - - - - - <nl> - - Changing rack or dc of live nodes is no longer possible for PropertyFileSnitch <nl> - and YamlFileNetworkTopologySnitch . Reloading the configuration file of <nl> - GossipingPropertyFileSnitch has been disabled , CASSANDRA - 10243 . <nl> - <nl> - <nl> 2 . 2 . 3 <nl> = = = = = <nl> <nl> diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> index 1807101 . . 46de0db 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> @ @ - 880 , 6 + 880 , 21 @ @ public final class SystemKeyspace <nl> return null ; <nl> } <nl> <nl> + / * * <nl> + * Gets the stored data center for the local node , or null if none have been set yet . <nl> + * / <nl> + public static String getDatacenter ( ) <nl> + { <nl> + String req = " SELECT data _ center FROM system . % s WHERE key = ' % s ' " ; <nl> + UntypedResultSet result = executeInternal ( String . format ( req , LOCAL , LOCAL ) ) ; <nl> + <nl> + / / Look up the Data center ( return it if found ) <nl> + if ( ! result . isEmpty ( ) & & result . one ( ) . has ( " data _ center " ) ) <nl> + return result . one ( ) . getString ( " data _ center " ) ; <nl> + <nl> + return null ; <nl> + } <nl> + <nl> public static PaxosState loadPaxosState ( ByteBuffer key , CFMetaData metadata ) <nl> { <nl> String req = " SELECT * FROM system . % s WHERE row _ key = ? AND cf _ id = ? " ; <nl> diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> index 59609a3 . . eb05324 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> @ @ - 232 , 21 + 232 , 6 @ @ public class CassandraDaemon <nl> <nl> Keyspace . setInitialized ( ) ; <nl> <nl> - if ( ! Boolean . getBoolean ( " cassandra . ignore _ rack " ) ) <nl> - { <nl> - String storedRack = SystemKeyspace . getRack ( ) ; <nl> - if ( storedRack ! = null ) <nl> - { <nl> - String currentRack = DatabaseDescriptor . getEndpointSnitch ( ) . getRack ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> - if ( ! storedRack . equals ( currentRack ) ) <nl> - { <nl> - logger . error ( " Cannot start node if snitch ' s rack differs from previous rack . " + <nl> - " Please fix the snitch or decommission and rebootstrap this node . " ) ; <nl> - System . exit ( 100 ) ; <nl> - } <nl> - } <nl> - } <nl> - <nl> / / initialize keyspaces <nl> for ( String keyspaceName : Schema . instance . getKeyspaces ( ) ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / service / StartupChecks . java b / src / java / org / apache / cassandra / service / StartupChecks . java <nl> index 8b8810c . . c13b401 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StartupChecks . java <nl> + + + b / src / java / org / apache / cassandra / service / StartupChecks . java <nl> @ @ - 75 , 7 + 75 , 9 @ @ public class StartupChecks <nl> initSigarLibrary , <nl> checkDataDirs , <nl> checkSSTablesFormat , <nl> - checkSystemKeyspaceState ) ; <nl> + checkSystemKeyspaceState , <nl> + checkDatacenter , <nl> + checkRack ) ; <nl> <nl> public StartupChecks withDefaultTests ( ) <nl> { <nl> @ @ - 302 , 4 + 304 , 48 @ @ public class StartupChecks <nl> } <nl> } <nl> } ; <nl> + <nl> + public static final StartupCheck checkDatacenter = new StartupCheck ( ) <nl> + { <nl> + public void execute ( ) throws StartupException <nl> + { <nl> + if ( ! Boolean . getBoolean ( " cassandra . ignore _ dc " ) ) <nl> + { <nl> + String storedDc = SystemKeyspace . getDatacenter ( ) ; <nl> + if ( storedDc ! = null ) <nl> + { <nl> + String currentDc = DatabaseDescriptor . getEndpointSnitch ( ) . getDatacenter ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> + if ( ! storedDc . equals ( currentDc ) ) <nl> + { <nl> + String formatMessage = " Cannot start node if snitch ' s data center ( % s ) differs from previous data center ( % s ) . " + <nl> + " Please fix the snitch configuration , decommission and rebootstrap this node or use the flag - Dcassandra . ignore _ dc = true . " ; <nl> + <nl> + throw new StartupException ( 100 , String . format ( formatMessage , currentDc , storedDc ) ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } ; <nl> + <nl> + public static final StartupCheck checkRack = new StartupCheck ( ) <nl> + { <nl> + public void execute ( ) throws StartupException <nl> + { <nl> + if ( ! Boolean . getBoolean ( " cassandra . ignore _ rack " ) ) <nl> + { <nl> + String storedRack = SystemKeyspace . getRack ( ) ; <nl> + if ( storedRack ! = null ) <nl> + { <nl> + String currentRack = DatabaseDescriptor . getEndpointSnitch ( ) . getRack ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> + if ( ! storedRack . equals ( currentRack ) ) <nl> + { <nl> + String formatMessage = " Cannot start node if snitch ' s rack ( % s ) differs from previous rack ( % s ) . " + <nl> + " Please fix the snitch configuration , decommission and rebootstrap this node or use the flag - Dcassandra . ignore _ rack = true . " ; <nl> + <nl> + throw new StartupException ( 100 , String . format ( formatMessage , currentRack , storedRack ) ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } ; <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7932f51 . . 34866fa 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 5 
 + * Disable reloading of GossipingPropertyFileSnitch ( CASSANDRA - 9474 ) 
 * Verify tables in pseudo - system keyspaces at startup ( CASSANDRA - 10761 ) 
 Merged from 2 . 1 : 
 * Fix Stress profile parsing on Windows ( CASSANDRA - 10808 ) 
 diff - - git a / NEWS . txt b / NEWS . txt 
 index 87e77f4 . . e220357 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 26 , 10 + 26 , 13 @ @ Deprecation 
 
 Operations 
 - - - - - - - - - - 
 - - Switching racks is no longer an allowed operation on a node which has 
 - data . Instead , the node will need to be decommissioned and rebootstrapped . 
 - If moving from the SimpleSnitch , make sure the rack containing all current 
 - nodes is named " rack1 " . 
 + - Switching data center or racks is no longer an allowed operation on a node 
 + which has data . Instead , the node will need to be decommissioned and 
 + rebootstrapped . If moving from the SimpleSnitch , make sure that the data 
 + center and rack containing all current nodes is named " datacenter1 " and 
 + " rack1 " . To override this behaviour use - Dcassandra . ignore _ rack = true and / or 
 + - Dcassandra . ignore _ dc = true . 
 + - Reloading the configuration file of GossipingPropertyFileSnitch has been disabled . 
 
 New features 
 - - - - - - - - - - - - 
 @ @ - 40 , 13 + 43 , 6 @ @ New features 
 - Native protocol server now allows both SSL and non - SSL connections on 
 the same port . 
 
 - Operations 
 - - - - - - - - - - - - - 
 - - Changing rack or dc of live nodes is no longer possible for PropertyFileSnitch 
 - and YamlFileNetworkTopologySnitch . Reloading the configuration file of 
 - GossipingPropertyFileSnitch has been disabled , CASSANDRA - 10243 . 
 - 
 - 
 2 . 2 . 3 
 = = = = = 
 
 diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 index 1807101 . . 46de0db 100644 
 - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 @ @ - 880 , 6 + 880 , 21 @ @ public final class SystemKeyspace 
 return null ; 
 } 
 
 + / * * 
 + * Gets the stored data center for the local node , or null if none have been set yet . 
 + * / 
 + public static String getDatacenter ( ) 
 + { 
 + String req = " SELECT data _ center FROM system . % s WHERE key = ' % s ' " ; 
 + UntypedResultSet result = executeInternal ( String . format ( req , LOCAL , LOCAL ) ) ; 
 + 
 + / / Look up the Data center ( return it if found ) 
 + if ( ! result . isEmpty ( ) & & result . one ( ) . has ( " data _ center " ) ) 
 + return result . one ( ) . getString ( " data _ center " ) ; 
 + 
 + return null ; 
 + } 
 + 
 public static PaxosState loadPaxosState ( ByteBuffer key , CFMetaData metadata ) 
 { 
 String req = " SELECT * FROM system . % s WHERE row _ key = ? AND cf _ id = ? " ; 
 diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 index 59609a3 . . eb05324 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 @ @ - 232 , 21 + 232 , 6 @ @ public class CassandraDaemon 
 
 Keyspace . setInitialized ( ) ; 
 
 - if ( ! Boolean . getBoolean ( " cassandra . ignore _ rack " ) ) 
 - { 
 - String storedRack = SystemKeyspace . getRack ( ) ; 
 - if ( storedRack ! = null ) 
 - { 
 - String currentRack = DatabaseDescriptor . getEndpointSnitch ( ) . getRack ( FBUtilities . getBroadcastAddress ( ) ) ; 
 - if ( ! storedRack . equals ( currentRack ) ) 
 - { 
 - logger . error ( " Cannot start node if snitch ' s rack differs from previous rack . " + 
 - " Please fix the snitch or decommission and rebootstrap this node . " ) ; 
 - System . exit ( 100 ) ; 
 - } 
 - } 
 - } 
 - 
 / / initialize keyspaces 
 for ( String keyspaceName : Schema . instance . getKeyspaces ( ) ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / service / StartupChecks . java b / src / java / org / apache / cassandra / service / StartupChecks . java 
 index 8b8810c . . c13b401 100644 
 - - - a / src / java / org / apache / cassandra / service / StartupChecks . java 
 + + + b / src / java / org / apache / cassandra / service / StartupChecks . java 
 @ @ - 75 , 7 + 75 , 9 @ @ public class StartupChecks 
 initSigarLibrary , 
 checkDataDirs , 
 checkSSTablesFormat , 
 - checkSystemKeyspaceState ) ; 
 + checkSystemKeyspaceState , 
 + checkDatacenter , 
 + checkRack ) ; 
 
 public StartupChecks withDefaultTests ( ) 
 { 
 @ @ - 302 , 4 + 304 , 48 @ @ public class StartupChecks 
 } 
 } 
 } ; 
 + 
 + public static final StartupCheck checkDatacenter = new StartupCheck ( ) 
 + { 
 + public void execute ( ) throws StartupException 
 + { 
 + if ( ! Boolean . getBoolean ( " cassandra . ignore _ dc " ) ) 
 + { 
 + String storedDc = SystemKeyspace . getDatacenter ( ) ; 
 + if ( storedDc ! = null ) 
 + { 
 + String currentDc = DatabaseDescriptor . getEndpointSnitch ( ) . getDatacenter ( FBUtilities . getBroadcastAddress ( ) ) ; 
 + if ( ! storedDc . equals ( currentDc ) ) 
 + { 
 + String formatMessage = " Cannot start node if snitch ' s data center ( % s ) differs from previous data center ( % s ) . " + 
 + " Please fix the snitch configuration , decommission and rebootstrap this node or use the flag - Dcassandra . ignore _ dc = true . " ; 
 + 
 + throw new StartupException ( 100 , String . format ( formatMessage , currentDc , storedDc ) ) ; 
 + } 
 + } 
 + } 
 + } 
 + } ; 
 + 
 + public static final StartupCheck checkRack = new StartupCheck ( ) 
 + { 
 + public void execute ( ) throws StartupException 
 + { 
 + if ( ! Boolean . getBoolean ( " cassandra . ignore _ rack " ) ) 
 + { 
 + String storedRack = SystemKeyspace . getRack ( ) ; 
 + if ( storedRack ! = null ) 
 + { 
 + String currentRack = DatabaseDescriptor . getEndpointSnitch ( ) . getRack ( FBUtilities . getBroadcastAddress ( ) ) ; 
 + if ( ! storedRack . equals ( currentRack ) ) 
 + { 
 + String formatMessage = " Cannot start node if snitch ' s rack ( % s ) differs from previous rack ( % s ) . " + 
 + " Please fix the snitch configuration , decommission and rebootstrap this node or use the flag - Dcassandra . ignore _ rack = true . " ; 
 + 
 + throw new StartupException ( 100 , String . format ( formatMessage , currentRack , storedRack ) ) ; 
 + } 
 + } 
 + } 
 + } 
 + } ; 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
