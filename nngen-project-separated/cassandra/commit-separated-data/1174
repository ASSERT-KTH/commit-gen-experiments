BLEU SCORE: 0.05341087579952926

TEST MSG: Remove cobertura from build file
GENERATED MSG: enable code coverage using JaCoCo

TEST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 577506e . . dd3bafa 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 102 , 13 + 102 , 6 @ @ <nl> <nl> < ! - - skip flushing schema tables during tests - - > <nl> < property name = " cassandra . test . flush _ local _ schema _ changes " value = " false " / > <nl> - <nl> - < ! - - http : / / cobertura . sourceforge . net / - - > <nl> - < property name = " cobertura . version " value = " 2 . 0 . 3 " / > <nl> - < property name = " cobertura . build . dir " value = " $ { build . dir } / cobertura " / > <nl> - < property name = " cobertura . report . dir " value = " $ { cobertura . build . dir } / report " / > <nl> - < property name = " cobertura . classes . dir " value = " $ { cobertura . build . dir } / classes " / > <nl> - < property name = " cobertura . datafile " value = " $ { cobertura . build . dir } / cobertura . ser " / > <nl> <nl> < ! - - http : / / www . eclemma . org / jacoco / - - > <nl> < property name = " jacoco . export . dir " value = " $ { build . dir } / jacoco / " / > <nl> @ @ - 152 , 7 + 145 , 6 @ @ <nl> - - > <nl> < path id = " maven - ant - tasks . classpath " path = " $ { build . dir } / maven - ant - tasks - $ { maven - ant - tasks . version } . jar " / > <nl> < path id = " cassandra . classpath " > <nl> - < pathelement location = " $ { cobertura . classes . dir } " / > <nl> < pathelement location = " $ { build . classes . main } " / > <nl> < pathelement location = " $ { build . classes . thrift } " / > <nl> < fileset dir = " $ { build . lib } " > <nl> @ @ - 165 , 10 + 157 , 6 @ @ <nl> < / fileset > <nl> < / path > <nl> <nl> - 	 < path id = " cobertura . classpath " > <nl> - 	 	 < pathelement location = " $ { cobertura . classes . dir } " / > <nl> - 	 < / path > <nl> - <nl> < macrodef name = " create - javadoc " > <nl> < attribute name = " destdir " / > <nl> < element name = " filesets " / > <nl> @ @ - 201 , 7 + 189 , 6 @ @ <nl> < target name = " clean " description = " Remove all locally created artifacts " > <nl> < delete dir = " $ { build . test . dir } " / > <nl> < delete dir = " $ { build . classes } " / > <nl> - < delete dir = " $ { cobertura . classes . dir } " / > <nl> < delete dir = " $ { build . src . gen - java } " / > <nl> < delete dir = " $ { version . properties . dir } " / > <nl> < delete dir = " $ { jacoco . export . dir } " / > <nl> @ @ - 387 , 12 + 374 , 6 @ @ <nl> < / dependency > <nl> < dependency groupId = " net . java . dev . jna " artifactId = " jna " version = " 4 . 0 . 0 " / > <nl> <nl> - < dependency groupId = " net . sourceforge . cobertura " artifactId = " cobertura " version = " $ { cobertura . version } " > <nl> - < exclusion groupId = " xerces " artifactId = " xercesImpl " / > <nl> - 	 < exclusion groupId = " org . mortbay . jetty " artifactId = " jetty " / > < ! - - older version , also via hadoop - core - - > <nl> - 	 < exclusion groupId = " org . mortbay . jetty " artifactId = " jetty - util " / > < ! - - older version , also via hadoop - core - - > <nl> - < exclusion groupId = " org . apache . ant " artifactId = " ant " / > < ! - - older version 1 . 8 . 3 - - > <nl> - < / dependency > <nl> < dependency groupId = " org . jacoco " artifactId = " org . jacoco . agent " version = " $ { jacoco . version } " / > <nl> < dependency groupId = " org . jacoco " artifactId = " org . jacoco . ant " version = " $ { jacoco . version } " / > <nl> <nl> @ @ - 499 , 7 + 480 , 6 @ @ <nl> < parent groupId = " org . apache . cassandra " <nl> artifactId = " cassandra - parent " <nl> version = " $ { version } " / > <nl> - < dependency groupId = " net . sourceforge . cobertura " artifactId = " cobertura " / > <nl> < dependency groupId = " org . jacoco " artifactId = " org . jacoco . agent " / > <nl> < dependency groupId = " org . jacoco " artifactId = " org . jacoco . ant " / > <nl> < / artifact : pom > <nl> @ @ - 638 , 8 + 618 , 7 @ @ <nl> < / copy > <nl> < ! - - code coverage tools - - > <nl> < artifact : dependencies pomRefId = " coverage - deps - pom " <nl> - filesetId = " coverage - dependency - jars " <nl> - pathId = " cobertura . classpath " > <nl> + filesetId = " coverage - dependency - jars " > <nl> < remoteRepository refid = " central " / > <nl> < / artifact : dependencies > <nl> < copy todir = " $ { build . dir . lib } / jars " > <nl> @ @ - 1164 , 7 + 1143 , 6 @ @ <nl> < mkdir dir = " $ { build . test . dir } / output " / > <nl> < mkdir dir = " $ { build . test . dir } / output / @ { testtag } " / > <nl> < junit fork = " on " forkmode = " @ { forkmode } " failureproperty = " testfailed " maxmemory = " 1024m " timeout = " @ { timeout } " > <nl> - < sysproperty key = " net . sourceforge . cobertura . datafile " file = " $ { cobertura . datafile } " / > <nl> < formatter classname = " org . apache . cassandra . CassandraXMLJUnitResultFormatter " extension = " . xml " usefile = " true " / > <nl> < formatter classname = " org . apache . cassandra . CassandraBriefJUnitResultFormatter " usefile = " false " / > <nl> < jvmarg value = " - Dstorage - config = $ { test . conf } " / > <nl> @ @ - 1186 , 7 + 1164 , 6 @ @ <nl> < classpath > <nl> < path refid = " cassandra . classpath " / > <nl> < pathelement location = " $ { test . classes } " / > <nl> - < path refid = " cobertura . classpath " / > <nl> < pathelement location = " $ { test . conf } " / > <nl> < fileset dir = " $ { test . lib } " > <nl> < include name = " * * / * . jar " / > <nl> @ @ - 1392 , 7 + 1369 , 6 @ @ <nl> < classpath > <nl> < path refid = " cassandra . classpath " / > <nl> < pathelement location = " $ { test . classes } " / > <nl> - < path refid = " cobertura . classpath " / > <nl> < pathelement location = " $ { test . conf } " / > <nl> < fileset dir = " $ { test . lib } " > <nl> < include name = " * * / * . jar " / > <nl> @ @ - 1423 , 7 + 1399 , 6 @ @ <nl> < mkdir dir = " $ { build . test . dir } / cassandra " / > <nl> < mkdir dir = " $ { build . test . dir } / output " / > <nl> < junit fork = " on " forkmode = " once " failureproperty = " testfailed " maxmemory = " 1024m " timeout = " $ { test . timeout } " > <nl> - < sysproperty key = " net . sourceforge . cobertura . datafile " file = " $ { cobertura . datafile } " / > <nl> < formatter type = " brief " usefile = " false " / > <nl> < jvmarg value = " - Dstorage - config = $ { test . conf } " / > <nl> < jvmarg value = " - Djava . awt . headless = true " / > <nl> @ @ - 1436 , 7 + 1411 , 6 @ @ <nl> < classpath > <nl> < path refid = " cassandra . classpath " / > <nl> < pathelement location = " $ { test . classes } " / > <nl> - < path refid = " cobertura . classpath " / > <nl> < pathelement location = " $ { test . conf } " / > <nl> < fileset dir = " $ { test . lib } " > <nl> < include name = " * * / * . jar " / > <nl> @ @ - 1489 , 41 + 1463 , 6 @ @ <nl> < delete dir = " $ { jacoco . export . dir } " / > <nl> < / target > <nl> <nl> - < ! - - instruments the classes to later create code coverage reports - - > <nl> - < target name = " cobertura - instrument " depends = " build , build - test " > <nl> - < taskdef resource = " tasks . properties " > <nl> - < classpath refid = " cobertura . classpath " / > <nl> - < classpath refid = " cassandra . classpath " / > <nl> - < / taskdef > <nl> - <nl> - < delete file = " $ { cobertura . datafile } " / > <nl> - <nl> - < cobertura - instrument todir = " $ { cobertura . classes . dir } " datafile = " $ { cobertura . datafile } " > <nl> - < ignore regex = " ch . qos . logback . * " / > <nl> - <nl> - < fileset dir = " $ { build . classes . main } " > <nl> - < include name = " * * / * . class " / > <nl> - < exclude name = " * * / * Test . class " / > <nl> - < exclude name = " * * / * TestCase . class " / > <nl> - < exclude name = " * * / test / * . class " / > <nl> - < ! - - cobertura modifies the serialVersionUID of classes . Some of our unit tests rely on backward <nl> - wire compatability of these classes . It was easier to exlude them from instrumentation than to <nl> - force their serialVersionUIDs . - - > <nl> - < exclude name = " * * / * Token . class " / > <nl> - < exclude name = " $ { cobertura . excludes } " / > <nl> - < / fileset > <nl> - <nl> - < / cobertura - instrument > <nl> - < / target > <nl> - <nl> - < ! - - create both html and xml code coverage reports - - > <nl> - < target name = " cobertura - report " > <nl> - < cobertura - report format = " html " destdir = " $ { cobertura . report . dir } " srcdir = " $ { build . src . java } " <nl> - datafile = " $ { cobertura . datafile } " / > <nl> - < cobertura - report format = " xml " destdir = " $ { cobertura . report . dir } " srcdir = " $ { build . src . java } " <nl> - datafile = " $ { cobertura . datafile } " / > <nl> - < / target > <nl> - <nl> < ! - - <nl> License audit tool <nl> - - > <nl> @ @ - 1682 , 7 + 1621 , 6 @ @ <nl> < classpath > <nl> < path refid = " cassandra . classpath " / > <nl> < pathelement location = " $ { test . classes } " / > <nl> - < path refid = " cobertura . classpath " / > <nl> < pathelement location = " $ { test . conf } " / > <nl> < fileset dir = " $ { test . lib } " > <nl> < include name = " * * / * . jar " / >
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / build . xml b / build . xml 
 index 577506e . . dd3bafa 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 102 , 13 + 102 , 6 @ @ 
 
 < ! - - skip flushing schema tables during tests - - > 
 < property name = " cassandra . test . flush _ local _ schema _ changes " value = " false " / > 
 - 
 - < ! - - http : / / cobertura . sourceforge . net / - - > 
 - < property name = " cobertura . version " value = " 2 . 0 . 3 " / > 
 - < property name = " cobertura . build . dir " value = " $ { build . dir } / cobertura " / > 
 - < property name = " cobertura . report . dir " value = " $ { cobertura . build . dir } / report " / > 
 - < property name = " cobertura . classes . dir " value = " $ { cobertura . build . dir } / classes " / > 
 - < property name = " cobertura . datafile " value = " $ { cobertura . build . dir } / cobertura . ser " / > 
 
 < ! - - http : / / www . eclemma . org / jacoco / - - > 
 < property name = " jacoco . export . dir " value = " $ { build . dir } / jacoco / " / > 
 @ @ - 152 , 7 + 145 , 6 @ @ 
 - - > 
 < path id = " maven - ant - tasks . classpath " path = " $ { build . dir } / maven - ant - tasks - $ { maven - ant - tasks . version } . jar " / > 
 < path id = " cassandra . classpath " > 
 - < pathelement location = " $ { cobertura . classes . dir } " / > 
 < pathelement location = " $ { build . classes . main } " / > 
 < pathelement location = " $ { build . classes . thrift } " / > 
 < fileset dir = " $ { build . lib } " > 
 @ @ - 165 , 10 + 157 , 6 @ @ 
 < / fileset > 
 < / path > 
 
 - 	 < path id = " cobertura . classpath " > 
 - 	 	 < pathelement location = " $ { cobertura . classes . dir } " / > 
 - 	 < / path > 
 - 
 < macrodef name = " create - javadoc " > 
 < attribute name = " destdir " / > 
 < element name = " filesets " / > 
 @ @ - 201 , 7 + 189 , 6 @ @ 
 < target name = " clean " description = " Remove all locally created artifacts " > 
 < delete dir = " $ { build . test . dir } " / > 
 < delete dir = " $ { build . classes } " / > 
 - < delete dir = " $ { cobertura . classes . dir } " / > 
 < delete dir = " $ { build . src . gen - java } " / > 
 < delete dir = " $ { version . properties . dir } " / > 
 < delete dir = " $ { jacoco . export . dir } " / > 
 @ @ - 387 , 12 + 374 , 6 @ @ 
 < / dependency > 
 < dependency groupId = " net . java . dev . jna " artifactId = " jna " version = " 4 . 0 . 0 " / > 
 
 - < dependency groupId = " net . sourceforge . cobertura " artifactId = " cobertura " version = " $ { cobertura . version } " > 
 - < exclusion groupId = " xerces " artifactId = " xercesImpl " / > 
 - 	 < exclusion groupId = " org . mortbay . jetty " artifactId = " jetty " / > < ! - - older version , also via hadoop - core - - > 
 - 	 < exclusion groupId = " org . mortbay . jetty " artifactId = " jetty - util " / > < ! - - older version , also via hadoop - core - - > 
 - < exclusion groupId = " org . apache . ant " artifactId = " ant " / > < ! - - older version 1 . 8 . 3 - - > 
 - < / dependency > 
 < dependency groupId = " org . jacoco " artifactId = " org . jacoco . agent " version = " $ { jacoco . version } " / > 
 < dependency groupId = " org . jacoco " artifactId = " org . jacoco . ant " version = " $ { jacoco . version } " / > 
 
 @ @ - 499 , 7 + 480 , 6 @ @ 
 < parent groupId = " org . apache . cassandra " 
 artifactId = " cassandra - parent " 
 version = " $ { version } " / > 
 - < dependency groupId = " net . sourceforge . cobertura " artifactId = " cobertura " / > 
 < dependency groupId = " org . jacoco " artifactId = " org . jacoco . agent " / > 
 < dependency groupId = " org . jacoco " artifactId = " org . jacoco . ant " / > 
 < / artifact : pom > 
 @ @ - 638 , 8 + 618 , 7 @ @ 
 < / copy > 
 < ! - - code coverage tools - - > 
 < artifact : dependencies pomRefId = " coverage - deps - pom " 
 - filesetId = " coverage - dependency - jars " 
 - pathId = " cobertura . classpath " > 
 + filesetId = " coverage - dependency - jars " > 
 < remoteRepository refid = " central " / > 
 < / artifact : dependencies > 
 < copy todir = " $ { build . dir . lib } / jars " > 
 @ @ - 1164 , 7 + 1143 , 6 @ @ 
 < mkdir dir = " $ { build . test . dir } / output " / > 
 < mkdir dir = " $ { build . test . dir } / output / @ { testtag } " / > 
 < junit fork = " on " forkmode = " @ { forkmode } " failureproperty = " testfailed " maxmemory = " 1024m " timeout = " @ { timeout } " > 
 - < sysproperty key = " net . sourceforge . cobertura . datafile " file = " $ { cobertura . datafile } " / > 
 < formatter classname = " org . apache . cassandra . CassandraXMLJUnitResultFormatter " extension = " . xml " usefile = " true " / > 
 < formatter classname = " org . apache . cassandra . CassandraBriefJUnitResultFormatter " usefile = " false " / > 
 < jvmarg value = " - Dstorage - config = $ { test . conf } " / > 
 @ @ - 1186 , 7 + 1164 , 6 @ @ 
 < classpath > 
 < path refid = " cassandra . classpath " / > 
 < pathelement location = " $ { test . classes } " / > 
 - < path refid = " cobertura . classpath " / > 
 < pathelement location = " $ { test . conf } " / > 
 < fileset dir = " $ { test . lib } " > 
 < include name = " * * / * . jar " / > 
 @ @ - 1392 , 7 + 1369 , 6 @ @ 
 < classpath > 
 < path refid = " cassandra . classpath " / > 
 < pathelement location = " $ { test . classes } " / > 
 - < path refid = " cobertura . classpath " / > 
 < pathelement location = " $ { test . conf } " / > 
 < fileset dir = " $ { test . lib } " > 
 < include name = " * * / * . jar " / > 
 @ @ - 1423 , 7 + 1399 , 6 @ @ 
 < mkdir dir = " $ { build . test . dir } / cassandra " / > 
 < mkdir dir = " $ { build . test . dir } / output " / > 
 < junit fork = " on " forkmode = " once " failureproperty = " testfailed " maxmemory = " 1024m " timeout = " $ { test . timeout } " > 
 - < sysproperty key = " net . sourceforge . cobertura . datafile " file = " $ { cobertura . datafile } " / > 
 < formatter type = " brief " usefile = " false " / > 
 < jvmarg value = " - Dstorage - config = $ { test . conf } " / > 
 < jvmarg value = " - Djava . awt . headless = true " / > 
 @ @ - 1436 , 7 + 1411 , 6 @ @ 
 < classpath > 
 < path refid = " cassandra . classpath " / > 
 < pathelement location = " $ { test . classes } " / > 
 - < path refid = " cobertura . classpath " / > 
 < pathelement location = " $ { test . conf } " / > 
 < fileset dir = " $ { test . lib } " > 
 < include name = " * * / * . jar " / > 
 @ @ - 1489 , 41 + 1463 , 6 @ @ 
 < delete dir = " $ { jacoco . export . dir } " / > 
 < / target > 
 
 - < ! - - instruments the classes to later create code coverage reports - - > 
 - < target name = " cobertura - instrument " depends = " build , build - test " > 
 - < taskdef resource = " tasks . properties " > 
 - < classpath refid = " cobertura . classpath " / > 
 - < classpath refid = " cassandra . classpath " / > 
 - < / taskdef > 
 - 
 - < delete file = " $ { cobertura . datafile } " / > 
 - 
 - < cobertura - instrument todir = " $ { cobertura . classes . dir } " datafile = " $ { cobertura . datafile } " > 
 - < ignore regex = " ch . qos . logback . * " / > 
 - 
 - < fileset dir = " $ { build . classes . main } " > 
 - < include name = " * * / * . class " / > 
 - < exclude name = " * * / * Test . class " / > 
 - < exclude name = " * * / * TestCase . class " / > 
 - < exclude name = " * * / test / * . class " / > 
 - < ! - - cobertura modifies the serialVersionUID of classes . Some of our unit tests rely on backward 
 - wire compatability of these classes . It was easier to exlude them from instrumentation than to 
 - force their serialVersionUIDs . - - > 
 - < exclude name = " * * / * Token . class " / > 
 - < exclude name = " $ { cobertura . excludes } " / > 
 - < / fileset > 
 - 
 - < / cobertura - instrument > 
 - < / target > 
 - 
 - < ! - - create both html and xml code coverage reports - - > 
 - < target name = " cobertura - report " > 
 - < cobertura - report format = " html " destdir = " $ { cobertura . report . dir } " srcdir = " $ { build . src . java } " 
 - datafile = " $ { cobertura . datafile } " / > 
 - < cobertura - report format = " xml " destdir = " $ { cobertura . report . dir } " srcdir = " $ { build . src . java } " 
 - datafile = " $ { cobertura . datafile } " / > 
 - < / target > 
 - 
 < ! - - 
 License audit tool 
 - - > 
 @ @ - 1682 , 7 + 1621 , 6 @ @ 
 < classpath > 
 < path refid = " cassandra . classpath " / > 
 < pathelement location = " $ { test . classes } " / > 
 - < path refid = " cobertura . classpath " / > 
 < pathelement location = " $ { test . conf } " / > 
 < fileset dir = " $ { test . lib } " > 
 < include name = " * * / * . jar " / >

NEAREST DIFF:
ELIMINATEDSENTENCE
