BLEU SCORE: 0.04372912656590315

TEST MSG: merge from 2 . 0
GENERATED MSG: Fix ALTER RENAME post - 5125

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 06331ad . . 0442b4e 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 14 , 6 + 14 , 7 @ @ <nl> Merged from 2 . 0 : <nl> * Fix saving triggers to schema ( CASSANDRA - 6789 ) <nl> * Fix trigger mutations when base mutation list is immutable ( CASSANDRA - 6790 ) <nl> + * Fix accounting in FileCacheService to allow re - using RAR ( CASSANDRA - 6838 ) <nl> * Avoid race - prone second " scrub " of system keyspace ( CASSANDRA - 6797 ) <nl> * Pool CqlRecordWriter clients by inetaddress rather than Range <nl> ( CASSANDRA - 6665 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / FileCacheService . java b / src / java / org / apache / cassandra / service / FileCacheService . java <nl> index c939a6f . . d22763b 100644 <nl> - - - a / src / java / org / apache / cassandra / service / FileCacheService . java <nl> + + + b / src / java / org / apache / cassandra / service / FileCacheService . java <nl> @ @ - 91 , 7 + 91 , 10 @ @ public class FileCacheService <nl> Queue < RandomAccessReader > instances = getCacheFor ( path ) ; <nl> RandomAccessReader result = instances . poll ( ) ; <nl> if ( result ! = null ) <nl> + { <nl> metrics . hits . mark ( ) ; <nl> + memoryUsage . addAndGet ( - result . getTotalBufferSize ( ) ) ; <nl> + } <nl> <nl> return result ; <nl> }
NEAREST DIFF (one line): diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py <nl> index 958b9ae . . 0e631ea 100644 <nl> - - - a / pylib / cqlshlib / cql3handling . py <nl> + + + b / pylib / cqlshlib / cql3handling . py <nl> @ @ - 1239 , 6 + 1239 , 8 @ @ syntax _ rules + = r ' ' ' <nl> | " ADD " newcol = < cident > < storageType > <nl> | " DROP " existcol = < cident > <nl> | " WITH " < cfamProperty > ( " AND " < cfamProperty > ) * <nl> + | " RENAME " existcol = < cident > " TO " newcol = < cident > <nl> + ( " AND " existcol = < cident > " TO " newcol = < cident > ) * <nl> ; <nl> ' ' ' <nl> <nl> diff - - git a / pylib / cqlshlib / helptopics . py b / pylib / cqlshlib / helptopics . py <nl> index c9dae31 . . cdbb8f4 100644 <nl> - - - a / pylib / cqlshlib / helptopics . py <nl> + + + b / pylib / cqlshlib / helptopics . py <nl> @ @ - 902 , 8 + 902 , 37 @ @ class CQL3HelpTopics ( CQLHelpTopics ) : <nl> print " HELP CREATE _ USER ; " <nl> <nl> def help _ alter ( self ) : <nl> - super ( CQL3HelpTopics , self ) . help _ alter ( ) <nl> - print " HELP ALTER _ USER ; " <nl> + print " " " <nl> + ALTER TABLE < tablename > ALTER < columnname > TYPE < type > ; <nl> + ALTER TABLE < tablename > ADD < columnname > < type > ; <nl> + ALTER TABLE < tablename > RENAME < columnname > TO < columnname > <nl> + [ AND < columnname > TO < columnname > ] <nl> + ALTER TABLE < tablename > WITH < optionname > = < val > [ AND < optionname > = < val > [ . . . ] ] ; <nl> + <nl> + An ALTER statement is used to manipulate table metadata . It allows you <nl> + to add new typed columns , drop existing columns , change the data <nl> + storage type of existing columns , or change table properties . <nl> + No results are returned . <nl> + <nl> + See one of the following for more information : <nl> + <nl> + HELP ALTER _ ALTER ; <nl> + HELP ALTER _ ADD ; <nl> + HELP ALTER _ DROP ; <nl> + HELP ALTER _ RENAME ; <nl> + HELP ALTER _ WITH ; <nl> + " " " <nl> + <nl> + def help _ alter _ rename ( self ) : <nl> + print " " " <nl> + ALTER TABLE : renaming a column <nl> + <nl> + ALTER TABLE < tablename > RENAME < columnname > TO < columnname > <nl> + [ AND < columnname > TO < columnname > ] <nl> + <nl> + The ALTER TABLE . . . RENAME variant renames a typed column in a column <nl> + family . <nl> + " " " <nl> <nl> def help _ drop ( self ) : <nl> super ( CQL3HelpTopics , self ) . help _ drop ( )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 06331ad . . 0442b4e 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 14 , 6 + 14 , 7 @ @ 
 Merged from 2 . 0 : 
 * Fix saving triggers to schema ( CASSANDRA - 6789 ) 
 * Fix trigger mutations when base mutation list is immutable ( CASSANDRA - 6790 ) 
 + * Fix accounting in FileCacheService to allow re - using RAR ( CASSANDRA - 6838 ) 
 * Avoid race - prone second " scrub " of system keyspace ( CASSANDRA - 6797 ) 
 * Pool CqlRecordWriter clients by inetaddress rather than Range 
 ( CASSANDRA - 6665 ) 
 diff - - git a / src / java / org / apache / cassandra / service / FileCacheService . java b / src / java / org / apache / cassandra / service / FileCacheService . java 
 index c939a6f . . d22763b 100644 
 - - - a / src / java / org / apache / cassandra / service / FileCacheService . java 
 + + + b / src / java / org / apache / cassandra / service / FileCacheService . java 
 @ @ - 91 , 7 + 91 , 10 @ @ public class FileCacheService 
 Queue < RandomAccessReader > instances = getCacheFor ( path ) ; 
 RandomAccessReader result = instances . poll ( ) ; 
 if ( result ! = null ) 
 + { 
 metrics . hits . mark ( ) ; 
 + memoryUsage . addAndGet ( - result . getTotalBufferSize ( ) ) ; 
 + } 
 
 return result ; 
 }

NEAREST DIFF:
diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py 
 index 958b9ae . . 0e631ea 100644 
 - - - a / pylib / cqlshlib / cql3handling . py 
 + + + b / pylib / cqlshlib / cql3handling . py 
 @ @ - 1239 , 6 + 1239 , 8 @ @ syntax _ rules + = r ' ' ' 
 | " ADD " newcol = < cident > < storageType > 
 | " DROP " existcol = < cident > 
 | " WITH " < cfamProperty > ( " AND " < cfamProperty > ) * 
 + | " RENAME " existcol = < cident > " TO " newcol = < cident > 
 + ( " AND " existcol = < cident > " TO " newcol = < cident > ) * 
 ; 
 ' ' ' 
 
 diff - - git a / pylib / cqlshlib / helptopics . py b / pylib / cqlshlib / helptopics . py 
 index c9dae31 . . cdbb8f4 100644 
 - - - a / pylib / cqlshlib / helptopics . py 
 + + + b / pylib / cqlshlib / helptopics . py 
 @ @ - 902 , 8 + 902 , 37 @ @ class CQL3HelpTopics ( CQLHelpTopics ) : 
 print " HELP CREATE _ USER ; " 
 
 def help _ alter ( self ) : 
 - super ( CQL3HelpTopics , self ) . help _ alter ( ) 
 - print " HELP ALTER _ USER ; " 
 + print " " " 
 + ALTER TABLE < tablename > ALTER < columnname > TYPE < type > ; 
 + ALTER TABLE < tablename > ADD < columnname > < type > ; 
 + ALTER TABLE < tablename > RENAME < columnname > TO < columnname > 
 + [ AND < columnname > TO < columnname > ] 
 + ALTER TABLE < tablename > WITH < optionname > = < val > [ AND < optionname > = < val > [ . . . ] ] ; 
 + 
 + An ALTER statement is used to manipulate table metadata . It allows you 
 + to add new typed columns , drop existing columns , change the data 
 + storage type of existing columns , or change table properties . 
 + No results are returned . 
 + 
 + See one of the following for more information : 
 + 
 + HELP ALTER _ ALTER ; 
 + HELP ALTER _ ADD ; 
 + HELP ALTER _ DROP ; 
 + HELP ALTER _ RENAME ; 
 + HELP ALTER _ WITH ; 
 + " " " 
 + 
 + def help _ alter _ rename ( self ) : 
 + print " " " 
 + ALTER TABLE : renaming a column 
 + 
 + ALTER TABLE < tablename > RENAME < columnname > TO < columnname > 
 + [ AND < columnname > TO < columnname > ] 
 + 
 + The ALTER TABLE . . . RENAME variant renames a typed column in a column 
 + family . 
 + " " " 
 
 def help _ drop ( self ) : 
 super ( CQL3HelpTopics , self ) . help _ drop ( )
