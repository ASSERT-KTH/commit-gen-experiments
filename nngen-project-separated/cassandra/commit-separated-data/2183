BLEU SCORE: 0.05341087579952926

TEST MSG: Fix parsing of UDF body
GENERATED MSG: optimize commitlog checksumming with PureJavaCrc32

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b631a9a . . 2466a01 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> 3 . 0 <nl> * Do anticompaction in groups ( CASSANDRA - 6851 ) <nl> * Verify that UDF class methods are static ( CASSANDRA - 7781 ) <nl> - * Support pure user - defined functions ( CASSANDRA - 7395 ) <nl> + * Support pure user - defined functions ( CASSANDRA - 7395 , 7740 ) <nl> * Permit configurable timestamps with cassandra - stress ( CASSANDRA - 7416 ) <nl> * Move sstable RandomAccessReader to nio2 , which allows using the <nl> FILE _ SHARE _ DELETE flag on Windows ( CASSANDRA - 4050 ) <nl> diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py <nl> index bf9088e . . 38aa8d8 100644 <nl> - - - a / pylib / cqlshlib / cql3handling . py <nl> + + + b / pylib / cqlshlib / cql3handling . py <nl> @ @ - 46 , 7 + 46 , 7 @ @ class Cql3ParsingRuleSet ( CqlParsingRuleSet ) : <nl> ' select ' , ' from ' , ' where ' , ' and ' , ' key ' , ' insert ' , ' update ' , ' with ' , <nl> ' limit ' , ' using ' , ' use ' , ' count ' , ' set ' , <nl> ' begin ' , ' apply ' , ' batch ' , ' truncate ' , ' delete ' , ' in ' , ' create ' , <nl> - ' keyspace ' , ' schema ' , ' columnfamily ' , ' table ' , ' index ' , ' on ' , ' drop ' , <nl> + ' function ' , ' keyspace ' , ' schema ' , ' columnfamily ' , ' table ' , ' index ' , ' on ' , ' drop ' , <nl> ' primary ' , ' into ' , ' values ' , ' timestamp ' , ' ttl ' , ' alter ' , ' add ' , ' type ' , <nl> ' compact ' , ' storage ' , ' order ' , ' by ' , ' asc ' , ' desc ' , ' clustering ' , <nl> ' token ' , ' writetime ' , ' map ' , ' list ' , ' to ' , ' custom ' , ' if ' , ' not ' <nl> @ @ - 232 , 6 + 232 , 7 @ @ JUNK : : = / ( [ \ t \ r \ f \ v ] + | ( - - | [ / ] [ / ] ) [ ^ \ n \ r ] * ( [ \ n \ r ] | $ ) | [ / ] [ * ] . * ? [ * ] [ / ] ) / ; <nl> | < createColumnFamilyStatement > <nl> | < createIndexStatement > <nl> | < createUserTypeStatement > <nl> + | < createFunctionStatement > <nl> | < dropKeyspaceStatement > <nl> | < dropColumnFamilyStatement > <nl> | < dropIndexStatement > <nl> @ @ - 981 , 6 + 982 , 25 @ @ syntax _ rules + = r ' ' ' <nl> ( " , " [ newcolname ] = < cident > < storageType > ) * <nl> " ) " <nl> ; <nl> + <nl> + < createFunctionStatement > : : = " CREATE " ( " OR " " REPLACE " ) ? " FUNCTION " <nl> + ( " IF " " NOT " " EXISTS " ) ? <nl> + ( " NON " ? " DETERMINISTIC " ) ? <nl> + ( namespace = < nonSystemKeyspaceName > dot = " : : " ) ? function = < cfOrKsName > <nl> + ( " ( " ( newcol = < cident > < storageType > <nl> + ( " , " [ newcolname ] = < cident > < storageType > ) * ) ? <nl> + " ) " ) ? <nl> + " RETURNS " < storageType > <nl> + ( <nl> + ( " LANGUAGE " < cident > " AS " <nl> + ( <nl> + < stringLiteral > <nl> + ) <nl> + ) <nl> + | ( < stringLiteral > ) <nl> + ) <nl> + ; <nl> + <nl> ' ' ' <nl> <nl> explain _ completion ( ' createIndexStatement ' , ' indexname ' , ' < new _ index _ name > ' ) <nl> @ @ - 1012 , 6 + 1032 , 10 @ @ syntax _ rules + = r ' ' ' <nl> < dropUserTypeStatement > : : = " DROP " " TYPE " ut = < userTypeName > <nl> ; <nl> <nl> + < dropFunctionStatement > : : = " DROP " " FUNCTION " ( " IF " " EXISTS " ) ? <nl> + ( namespace = < nonSystemKeyspaceName > dot = " . " ) ? function = < cfOrKsName > <nl> + ; <nl> + <nl> ' ' ' <nl> <nl> @ completer _ for ( ' indexName ' , ' ksname ' ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / Cql . g b / src / java / org / apache / cassandra / cql3 / Cql . g <nl> index 96a668b . . d44fc7c 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / Cql . g <nl> + + + b / src / java / org / apache / cassandra / cql3 / Cql . g <nl> @ @ - 514 , 7 + 514 , 14 @ @ createFunctionStatement returns [ CreateFunctionStatement expr ] <nl> rt = comparatorType <nl> ( <nl> ( { language = " CLASS " ; } cls = STRING _ LITERAL { bodyOrClassName = $ cls . text ; } ) <nl> - | ( K _ LANGUAGE l = IDENT { language = $ l . text ; } K _ BODY body = ( ( ~ K _ END _ BODY ) * ) { bodyOrClassName = $ body . text ; } K _ END _ BODY ) <nl> + | ( K _ LANGUAGE l = IDENT { language = $ l . text ; } K _ AS <nl> + ( <nl> + ( body = STRING _ LITERAL <nl> + { bodyOrClassName = $ body . text ; } <nl> + ) <nl> + / * TODO placeholder for pg - style function body * / <nl> + ) <nl> + ) <nl> ) <nl> { $ expr = new CreateFunctionStatement ( bn , fn , language , bodyOrClassName , deterministic , rt , args , orReplace , ifNotExists ) ; } <nl> ; <nl> @ @ - 1236 , 8 + 1243 , 6 @ @ basic _ unreserved _ keyword returns [ String str ] <nl> | K _ LANGUAGE <nl> | K _ NON <nl> | K _ DETERMINISTIC <nl> - | K _ BODY <nl> - | K _ END _ BODY <nl> ) { $ str = $ k . text ; } <nl> ; <nl> <nl> @ @ - 1351 , 8 + 1356 , 6 @ @ K _ NON : N O N ; <nl> K _ OR : O R ; <nl> K _ REPLACE : R E P L A C E ; <nl> K _ DETERMINISTIC : D E T E R M I N I S T I C ; <nl> - K _ END _ BODY : E N D ' _ ' B O D Y ; <nl> - K _ BODY : B O D Y ; <nl> <nl> / / Case - insensitive alpha characters <nl> fragment A : ( ' a ' | ' A ' ) ;
NEAREST DIFF (one line): diff - - git a / NEWS . txt b / NEWS . txt <nl> index fc401b8 . . cc3c18e 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 14 , 6 + 14 , 8 @ @ by version X , but the inverse is not necessarily the case . ) <nl> <nl> Upgrading <nl> - - - - - - - - - <nl> + - Compression is enabled by default on newly created ColumnFamilies <nl> + ( and unchanged for ColumnFamilies created prior to upgrading ) . <nl> - The KsDef . replication _ factor field ( deprecated since 0 . 8 ) has <nl> been removed . Older clients will need to be updated to be able <nl> to continue to created and update keyspaces . <nl> @ @ - 59 , 6 + 61 , 7 @ @ Features <nl> - Hadoop : a new BulkOutputFormat is included which will directly write <nl> SSTables locally and then stream them into the cluster . <nl> - Hadoop : KeyRange . filter is now supported with ColumnFamilyInputFormat <nl> + - Hadoop wide row mode added to ColumnFamilyInputFormat <nl> - The bulk loader is not longer a fat client ; it can be run from an <nl> existing machine in a cluster . <nl> - A new write survey mode has been added , similar to bootstrap ( enabled via <nl> @ @ - 69 , 6 + 72 , 7 @ @ Features <nl> threshold . <nl> - Off - heap caches no longer require JNA . <nl> - Streaming is now multithreaded . <nl> + - Compactions may now be aborted via JMX or nodetool . <nl> <nl> <nl> 1 . 0 . 8

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b631a9a . . 2466a01 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 3 . 0 
 * Do anticompaction in groups ( CASSANDRA - 6851 ) 
 * Verify that UDF class methods are static ( CASSANDRA - 7781 ) 
 - * Support pure user - defined functions ( CASSANDRA - 7395 ) 
 + * Support pure user - defined functions ( CASSANDRA - 7395 , 7740 ) 
 * Permit configurable timestamps with cassandra - stress ( CASSANDRA - 7416 ) 
 * Move sstable RandomAccessReader to nio2 , which allows using the 
 FILE _ SHARE _ DELETE flag on Windows ( CASSANDRA - 4050 ) 
 diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py 
 index bf9088e . . 38aa8d8 100644 
 - - - a / pylib / cqlshlib / cql3handling . py 
 + + + b / pylib / cqlshlib / cql3handling . py 
 @ @ - 46 , 7 + 46 , 7 @ @ class Cql3ParsingRuleSet ( CqlParsingRuleSet ) : 
 ' select ' , ' from ' , ' where ' , ' and ' , ' key ' , ' insert ' , ' update ' , ' with ' , 
 ' limit ' , ' using ' , ' use ' , ' count ' , ' set ' , 
 ' begin ' , ' apply ' , ' batch ' , ' truncate ' , ' delete ' , ' in ' , ' create ' , 
 - ' keyspace ' , ' schema ' , ' columnfamily ' , ' table ' , ' index ' , ' on ' , ' drop ' , 
 + ' function ' , ' keyspace ' , ' schema ' , ' columnfamily ' , ' table ' , ' index ' , ' on ' , ' drop ' , 
 ' primary ' , ' into ' , ' values ' , ' timestamp ' , ' ttl ' , ' alter ' , ' add ' , ' type ' , 
 ' compact ' , ' storage ' , ' order ' , ' by ' , ' asc ' , ' desc ' , ' clustering ' , 
 ' token ' , ' writetime ' , ' map ' , ' list ' , ' to ' , ' custom ' , ' if ' , ' not ' 
 @ @ - 232 , 6 + 232 , 7 @ @ JUNK : : = / ( [ \ t \ r \ f \ v ] + | ( - - | [ / ] [ / ] ) [ ^ \ n \ r ] * ( [ \ n \ r ] | $ ) | [ / ] [ * ] . * ? [ * ] [ / ] ) / ; 
 | < createColumnFamilyStatement > 
 | < createIndexStatement > 
 | < createUserTypeStatement > 
 + | < createFunctionStatement > 
 | < dropKeyspaceStatement > 
 | < dropColumnFamilyStatement > 
 | < dropIndexStatement > 
 @ @ - 981 , 6 + 982 , 25 @ @ syntax _ rules + = r ' ' ' 
 ( " , " [ newcolname ] = < cident > < storageType > ) * 
 " ) " 
 ; 
 + 
 + < createFunctionStatement > : : = " CREATE " ( " OR " " REPLACE " ) ? " FUNCTION " 
 + ( " IF " " NOT " " EXISTS " ) ? 
 + ( " NON " ? " DETERMINISTIC " ) ? 
 + ( namespace = < nonSystemKeyspaceName > dot = " : : " ) ? function = < cfOrKsName > 
 + ( " ( " ( newcol = < cident > < storageType > 
 + ( " , " [ newcolname ] = < cident > < storageType > ) * ) ? 
 + " ) " ) ? 
 + " RETURNS " < storageType > 
 + ( 
 + ( " LANGUAGE " < cident > " AS " 
 + ( 
 + < stringLiteral > 
 + ) 
 + ) 
 + | ( < stringLiteral > ) 
 + ) 
 + ; 
 + 
 ' ' ' 
 
 explain _ completion ( ' createIndexStatement ' , ' indexname ' , ' < new _ index _ name > ' ) 
 @ @ - 1012 , 6 + 1032 , 10 @ @ syntax _ rules + = r ' ' ' 
 < dropUserTypeStatement > : : = " DROP " " TYPE " ut = < userTypeName > 
 ; 
 
 + < dropFunctionStatement > : : = " DROP " " FUNCTION " ( " IF " " EXISTS " ) ? 
 + ( namespace = < nonSystemKeyspaceName > dot = " . " ) ? function = < cfOrKsName > 
 + ; 
 + 
 ' ' ' 
 
 @ completer _ for ( ' indexName ' , ' ksname ' ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / Cql . g b / src / java / org / apache / cassandra / cql3 / Cql . g 
 index 96a668b . . d44fc7c 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / Cql . g 
 + + + b / src / java / org / apache / cassandra / cql3 / Cql . g 
 @ @ - 514 , 7 + 514 , 14 @ @ createFunctionStatement returns [ CreateFunctionStatement expr ] 
 rt = comparatorType 
 ( 
 ( { language = " CLASS " ; } cls = STRING _ LITERAL { bodyOrClassName = $ cls . text ; } ) 
 - | ( K _ LANGUAGE l = IDENT { language = $ l . text ; } K _ BODY body = ( ( ~ K _ END _ BODY ) * ) { bodyOrClassName = $ body . text ; } K _ END _ BODY ) 
 + | ( K _ LANGUAGE l = IDENT { language = $ l . text ; } K _ AS 
 + ( 
 + ( body = STRING _ LITERAL 
 + { bodyOrClassName = $ body . text ; } 
 + ) 
 + / * TODO placeholder for pg - style function body * / 
 + ) 
 + ) 
 ) 
 { $ expr = new CreateFunctionStatement ( bn , fn , language , bodyOrClassName , deterministic , rt , args , orReplace , ifNotExists ) ; } 
 ; 
 @ @ - 1236 , 8 + 1243 , 6 @ @ basic _ unreserved _ keyword returns [ String str ] 
 | K _ LANGUAGE 
 | K _ NON 
 | K _ DETERMINISTIC 
 - | K _ BODY 
 - | K _ END _ BODY 
 ) { $ str = $ k . text ; } 
 ; 
 
 @ @ - 1351 , 8 + 1356 , 6 @ @ K _ NON : N O N ; 
 K _ OR : O R ; 
 K _ REPLACE : R E P L A C E ; 
 K _ DETERMINISTIC : D E T E R M I N I S T I C ; 
 - K _ END _ BODY : E N D ' _ ' B O D Y ; 
 - K _ BODY : B O D Y ; 
 
 / / Case - insensitive alpha characters 
 fragment A : ( ' a ' | ' A ' ) ;

NEAREST DIFF:
diff - - git a / NEWS . txt b / NEWS . txt 
 index fc401b8 . . cc3c18e 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 14 , 6 + 14 , 8 @ @ by version X , but the inverse is not necessarily the case . ) 
 
 Upgrading 
 - - - - - - - - - 
 + - Compression is enabled by default on newly created ColumnFamilies 
 + ( and unchanged for ColumnFamilies created prior to upgrading ) . 
 - The KsDef . replication _ factor field ( deprecated since 0 . 8 ) has 
 been removed . Older clients will need to be updated to be able 
 to continue to created and update keyspaces . 
 @ @ - 59 , 6 + 61 , 7 @ @ Features 
 - Hadoop : a new BulkOutputFormat is included which will directly write 
 SSTables locally and then stream them into the cluster . 
 - Hadoop : KeyRange . filter is now supported with ColumnFamilyInputFormat 
 + - Hadoop wide row mode added to ColumnFamilyInputFormat 
 - The bulk loader is not longer a fat client ; it can be run from an 
 existing machine in a cluster . 
 - A new write survey mode has been added , similar to bootstrap ( enabled via 
 @ @ - 69 , 6 + 72 , 7 @ @ Features 
 threshold . 
 - Off - heap caches no longer require JNA . 
 - Streaming is now multithreaded . 
 + - Compactions may now be aborted via JMX or nodetool . 
 
 
 1 . 0 . 8
