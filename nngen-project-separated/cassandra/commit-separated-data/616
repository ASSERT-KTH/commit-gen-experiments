BLEU SCORE: 0.04266331692956902

TEST MSG: Add column definition kind to dropped columns in schema
GENERATED MSG: Rename ColumnDefinition . Kind . CLUSTERING _ COLUMN to CLUSTERING

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7f5b7cb . . 69f7e42 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Add column definition kind to dropped columns in schema ( CASSANDRA - 12705 ) <nl> * Add ( automate ) Nodetool Documentation ( CASSANDRA - 12672 ) <nl> * Update bundled cqlsh python driver to 3 . 7 . 0 ( CASSANDRA - 12736 ) <nl> * Reject invalid replication settings when creating or altering a keyspace ( CASSANDRA - 12681 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index 76a3ead . . a60700c 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 712 , 7 + 712 , 7 @ @ public final class CFMetaData <nl> / / it means that it ' s a dropped column from before 3 . 0 , and in that case using <nl> / / BytesType is fine for what we ' ll be using it for , even if that ' s a hack . <nl> AbstractType < ? > type = dropped . type = = null ? BytesType . instance : dropped . type ; <nl> - return isStatic <nl> + return isStatic | | dropped . kind = = ColumnDefinition . Kind . STATIC <nl> ? ColumnDefinition . staticDef ( this , name , type ) <nl> : ColumnDefinition . regularDef ( this , name , type ) ; <nl> } <nl> @ @ - 994 , 7 + 994 , 7 @ @ public final class CFMetaData <nl> * / <nl> public void recordColumnDrop ( ColumnDefinition def , long timeMicros ) <nl> { <nl> - droppedColumns . put ( def . name . bytes , new DroppedColumn ( def . name . toString ( ) , def . type , timeMicros ) ) ; <nl> + droppedColumns . put ( def . name . bytes , new DroppedColumn ( def , timeMicros ) ) ; <nl> } <nl> <nl> public void renameColumn ( ColumnIdentifier from , ColumnIdentifier to ) throws InvalidRequestException <nl> @ @ - 1379 , 11 + 1379 , 19 @ @ public final class CFMetaData <nl> / / drop timestamp , in microseconds , yet with millisecond granularity <nl> public final long droppedTime ; <nl> <nl> - public DroppedColumn ( String name , AbstractType < ? > type , long droppedTime ) <nl> + public final ColumnDefinition . Kind kind ; <nl> + <nl> + public DroppedColumn ( ColumnDefinition def , long droppedTime ) <nl> + { <nl> + this ( def . name . toString ( ) , def . type , droppedTime , def . kind ) ; <nl> + } <nl> + <nl> + public DroppedColumn ( String name , AbstractType < ? > type , long droppedTime , ColumnDefinition . Kind kind ) <nl> { <nl> this . name = name ; <nl> this . type = type ; <nl> this . droppedTime = droppedTime ; <nl> + this . kind = kind ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> index 6044ee9 . . 9e6d9ec 100644 <nl> - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> @ @ - 48 , 7 + 48 , 7 @ @ public class ColumnDefinition extends ColumnSpecification implements Selectable , <nl> ASC , DESC , NONE <nl> } <nl> <nl> - / * <nl> + / * * <nl> * The type of CQL3 column this definition represents . <nl> * There is 4 main type of CQL3 columns : those parts of the partition key , <nl> * those parts of the clustering columns and amongst the others , regular and <nl> @ @ - 56 , 6 + 56 , 9 @ @ public class ColumnDefinition extends ColumnSpecification implements Selectable , <nl> * <nl> * Note that thrift only knows about definitions of type REGULAR ( and <nl> * the ones whose position = = NO _ POSITION ( - 1 ) ) . <nl> + * <nl> + * IMPORTANT : this enum is serialized as toString ( ) and deserialized by calling <nl> + * Kind . valueOf ( ) , so do not override toString ( ) or rename existing values . <nl> * / <nl> public enum Kind <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> index 19844a3 . . d0fc151 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> + + + b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> @ @ - 648 , 7 + 648 , 7 @ @ public final class LegacySchemaMigrator <nl> ? collections . get ( nameBytes ) <nl> : BytesType . instance ; <nl> <nl> - cfm . getDroppedColumns ( ) . put ( nameBytes , new CFMetaData . DroppedColumn ( name , type , time ) ) ; <nl> + cfm . getDroppedColumns ( ) . put ( nameBytes , new CFMetaData . DroppedColumn ( name , type , time , ColumnDefinition . Kind . REGULAR ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> index f1ee3c1 . . f02e3e7 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> @ @ - 141 , 6 + 141 , 7 @ @ public final class SchemaKeyspace <nl> + " column _ name text , " <nl> + " dropped _ time timestamp , " <nl> + " type text , " <nl> + + " kind text , " <nl> + " PRIMARY KEY ( ( keyspace _ name ) , table _ name , column _ name ) ) " ) ; <nl> <nl> private static final CFMetaData Triggers = <nl> @ @ - 664 , 7 + 665 , 8 @ @ public final class SchemaKeyspace <nl> builder . update ( DroppedColumns ) <nl> . row ( table . cfName , column . name ) <nl> . add ( " dropped _ time " , new Date ( TimeUnit . MICROSECONDS . toMillis ( column . droppedTime ) ) ) <nl> - . add ( " type " , expandUserTypes ( column . type ) . asCQL3Type ( ) . toString ( ) ) ; <nl> + . add ( " type " , expandUserTypes ( column . type ) . asCQL3Type ( ) . toString ( ) ) <nl> + . add ( " kind " , column . kind . toString ( ) . toLowerCase ( ) ) ; <nl> } <nl> <nl> private static void addTriggerToSchemaMutation ( CFMetaData table , TriggerMetadata trigger , Mutation . SimpleBuilder builder ) <nl> @ @ - 1068 , 7 + 1070 , 12 @ @ public final class SchemaKeyspace <nl> * / <nl> AbstractType < ? > type = parse ( keyspace , row . getString ( " type " ) , org . apache . cassandra . schema . Types . none ( ) ) ; <nl> long droppedTime = TimeUnit . MILLISECONDS . toMicros ( row . getLong ( " dropped _ time " ) ) ; <nl> - return new CFMetaData . DroppedColumn ( name , type , droppedTime ) ; <nl> + ColumnDefinition . Kind kind = row . has ( " kind " ) <nl> + ? ColumnDefinition . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) <nl> + : ColumnDefinition . Kind . REGULAR ; <nl> + assert kind = = ColumnDefinition . Kind . REGULAR | | kind = = ColumnDefinition . Kind . STATIC <nl> + : " Unexpected dropped column kind : " + kind . toString ( ) ; <nl> + return new CFMetaData . DroppedColumn ( name , type , droppedTime , kind ) ; <nl> } <nl> <nl> private static Indexes fetchIndexes ( String keyspace , String table )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7f5b7cb . . 69f7e42 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Add column definition kind to dropped columns in schema ( CASSANDRA - 12705 ) 
 * Add ( automate ) Nodetool Documentation ( CASSANDRA - 12672 ) 
 * Update bundled cqlsh python driver to 3 . 7 . 0 ( CASSANDRA - 12736 ) 
 * Reject invalid replication settings when creating or altering a keyspace ( CASSANDRA - 12681 ) 
 diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index 76a3ead . . a60700c 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 712 , 7 + 712 , 7 @ @ public final class CFMetaData 
 / / it means that it ' s a dropped column from before 3 . 0 , and in that case using 
 / / BytesType is fine for what we ' ll be using it for , even if that ' s a hack . 
 AbstractType < ? > type = dropped . type = = null ? BytesType . instance : dropped . type ; 
 - return isStatic 
 + return isStatic | | dropped . kind = = ColumnDefinition . Kind . STATIC 
 ? ColumnDefinition . staticDef ( this , name , type ) 
 : ColumnDefinition . regularDef ( this , name , type ) ; 
 } 
 @ @ - 994 , 7 + 994 , 7 @ @ public final class CFMetaData 
 * / 
 public void recordColumnDrop ( ColumnDefinition def , long timeMicros ) 
 { 
 - droppedColumns . put ( def . name . bytes , new DroppedColumn ( def . name . toString ( ) , def . type , timeMicros ) ) ; 
 + droppedColumns . put ( def . name . bytes , new DroppedColumn ( def , timeMicros ) ) ; 
 } 
 
 public void renameColumn ( ColumnIdentifier from , ColumnIdentifier to ) throws InvalidRequestException 
 @ @ - 1379 , 11 + 1379 , 19 @ @ public final class CFMetaData 
 / / drop timestamp , in microseconds , yet with millisecond granularity 
 public final long droppedTime ; 
 
 - public DroppedColumn ( String name , AbstractType < ? > type , long droppedTime ) 
 + public final ColumnDefinition . Kind kind ; 
 + 
 + public DroppedColumn ( ColumnDefinition def , long droppedTime ) 
 + { 
 + this ( def . name . toString ( ) , def . type , droppedTime , def . kind ) ; 
 + } 
 + 
 + public DroppedColumn ( String name , AbstractType < ? > type , long droppedTime , ColumnDefinition . Kind kind ) 
 { 
 this . name = name ; 
 this . type = type ; 
 this . droppedTime = droppedTime ; 
 + this . kind = kind ; 
 } 
 
 @ Override 
 diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 index 6044ee9 . . 9e6d9ec 100644 
 - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 @ @ - 48 , 7 + 48 , 7 @ @ public class ColumnDefinition extends ColumnSpecification implements Selectable , 
 ASC , DESC , NONE 
 } 
 
 - / * 
 + / * * 
 * The type of CQL3 column this definition represents . 
 * There is 4 main type of CQL3 columns : those parts of the partition key , 
 * those parts of the clustering columns and amongst the others , regular and 
 @ @ - 56 , 6 + 56 , 9 @ @ public class ColumnDefinition extends ColumnSpecification implements Selectable , 
 * 
 * Note that thrift only knows about definitions of type REGULAR ( and 
 * the ones whose position = = NO _ POSITION ( - 1 ) ) . 
 + * 
 + * IMPORTANT : this enum is serialized as toString ( ) and deserialized by calling 
 + * Kind . valueOf ( ) , so do not override toString ( ) or rename existing values . 
 * / 
 public enum Kind 
 { 
 diff - - git a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 index 19844a3 . . d0fc151 100644 
 - - - a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 + + + b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 @ @ - 648 , 7 + 648 , 7 @ @ public final class LegacySchemaMigrator 
 ? collections . get ( nameBytes ) 
 : BytesType . instance ; 
 
 - cfm . getDroppedColumns ( ) . put ( nameBytes , new CFMetaData . DroppedColumn ( name , type , time ) ) ; 
 + cfm . getDroppedColumns ( ) . put ( nameBytes , new CFMetaData . DroppedColumn ( name , type , time , ColumnDefinition . Kind . REGULAR ) ) ; 
 } 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 index f1ee3c1 . . f02e3e7 100644 
 - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 @ @ - 141 , 6 + 141 , 7 @ @ public final class SchemaKeyspace 
 + " column _ name text , " 
 + " dropped _ time timestamp , " 
 + " type text , " 
 + + " kind text , " 
 + " PRIMARY KEY ( ( keyspace _ name ) , table _ name , column _ name ) ) " ) ; 
 
 private static final CFMetaData Triggers = 
 @ @ - 664 , 7 + 665 , 8 @ @ public final class SchemaKeyspace 
 builder . update ( DroppedColumns ) 
 . row ( table . cfName , column . name ) 
 . add ( " dropped _ time " , new Date ( TimeUnit . MICROSECONDS . toMillis ( column . droppedTime ) ) ) 
 - . add ( " type " , expandUserTypes ( column . type ) . asCQL3Type ( ) . toString ( ) ) ; 
 + . add ( " type " , expandUserTypes ( column . type ) . asCQL3Type ( ) . toString ( ) ) 
 + . add ( " kind " , column . kind . toString ( ) . toLowerCase ( ) ) ; 
 } 
 
 private static void addTriggerToSchemaMutation ( CFMetaData table , TriggerMetadata trigger , Mutation . SimpleBuilder builder ) 
 @ @ - 1068 , 7 + 1070 , 12 @ @ public final class SchemaKeyspace 
 * / 
 AbstractType < ? > type = parse ( keyspace , row . getString ( " type " ) , org . apache . cassandra . schema . Types . none ( ) ) ; 
 long droppedTime = TimeUnit . MILLISECONDS . toMicros ( row . getLong ( " dropped _ time " ) ) ; 
 - return new CFMetaData . DroppedColumn ( name , type , droppedTime ) ; 
 + ColumnDefinition . Kind kind = row . has ( " kind " ) 
 + ? ColumnDefinition . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) 
 + : ColumnDefinition . Kind . REGULAR ; 
 + assert kind = = ColumnDefinition . Kind . REGULAR | | kind = = ColumnDefinition . Kind . STATIC 
 + : " Unexpected dropped column kind : " + kind . toString ( ) ; 
 + return new CFMetaData . DroppedColumn ( name , type , droppedTime , kind ) ; 
 } 
 
 private static Indexes fetchIndexes ( String keyspace , String table )

NEAREST DIFF:
ELIMINATEDSENTENCE
