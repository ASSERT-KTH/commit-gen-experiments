BLEU SCORE: 0.11156508007421491

TEST MSG: simplify :
GENERATED MSG: update WordCountCounters for SuperColumn refactor

TEST DIFF (one line): diff - - git a / examples / hadoop _ cql3 _ word _ count / src / WordCount . java b / examples / hadoop _ cql3 _ word _ count / src / WordCount . java <nl> index 6a2f846 . . 3702a2b 100644 <nl> - - - a / examples / hadoop _ cql3 _ word _ count / src / WordCount . java <nl> + + + b / examples / hadoop _ cql3 _ word _ count / src / WordCount . java <nl> @ @ - 37 , 12 + 37 , 10 @ @ import org . apache . hadoop . io . Text ; <nl> import org . apache . hadoop . mapreduce . Job ; <nl> import org . apache . hadoop . mapreduce . Mapper ; <nl> import org . apache . hadoop . mapreduce . Reducer ; <nl> - import org . apache . hadoop . mapreduce . Mapper . Context ; <nl> import org . apache . hadoop . mapreduce . lib . output . FileOutputFormat ; <nl> import org . apache . hadoop . util . Tool ; <nl> import org . apache . hadoop . util . ToolRunner ; <nl> import com . datastax . driver . core . Row ; <nl> - import java . nio . charset . CharacterCodingException ; <nl> <nl> / * * <nl> * This counts the occurrences of words in ColumnFamily <nl> @ @ - 122 , 7 + 120 , 7 @ @ public class WordCount extends Configured implements Tool <nl> public void map ( Long key , Row row , Context context ) throws IOException , InterruptedException <nl> { <nl> String value = row . getString ( " line " ) ; <nl> - logger . debug ( " read { } : { } = { } from { } " , new Object [ ] { key , " line " , value , context . getInputSplit ( ) } ) ; <nl> + logger . debug ( " read { } : { } = { } from { } " , key , " line " , value , context . getInputSplit ( ) ) ; <nl> StringTokenizer itr = new StringTokenizer ( value ) ; <nl> while ( itr . hasMoreTokens ( ) ) <nl> {
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 905db57 . . 33d6786 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 11 , 6 + 11 , 7 @ @ <nl> * Correctly expire gossip states for edge cases ( CASSANDRA - 5216 ) <nl> * Improve handling of directory creation failures ( CASSANDRA - 5196 ) <nl> * Expose secondary indicies to the rest of nodetool ( CASSANDRA - 4464 ) <nl> + * Binary protocol : avoid sending notification for 0 . 0 . 0 . 0 ( CASSANDRA - 5227 ) <nl> <nl> <nl> 1 . 2 . 1 <nl> diff - - git a / src / java / org / apache / cassandra / transport / Server . java b / src / java / org / apache / cassandra / transport / Server . java <nl> index e999128 . . 8bdae55 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Server . java <nl> + + + b / src / java / org / apache / cassandra / transport / Server . java <nl> @ @ - 262 , 6 + 262 , 17 @ @ public class Server implements CassandraDaemon . Server <nl> private static class EventNotifier implements IEndpointLifecycleSubscriber , IMigrationListener <nl> { <nl> private final Server server ; <nl> + private static final InetAddress bindAll ; <nl> + static { <nl> + try <nl> + { <nl> + bindAll = InetAddress . getByAddress ( new byte [ 4 ] ) ; <nl> + } <nl> + catch ( UnknownHostException e ) <nl> + { <nl> + throw new AssertionError ( e ) ; <nl> + } <nl> + } <nl> <nl> private EventNotifier ( Server server ) <nl> { <nl> @ @ - 272 , 7 + 283 , 10 @ @ public class Server implements CassandraDaemon . Server <nl> { <nl> try <nl> { <nl> - return InetAddress . getByName ( StorageService . instance . getRpcaddress ( endpoint ) ) ; <nl> + InetAddress rpcAddress = InetAddress . getByName ( StorageService . instance . getRpcaddress ( endpoint ) ) ; <nl> + / / If rpcAddress = = 0 . 0 . 0 . 0 ( i . e . bound on all addresses ) , returning that is not very helpful , <nl> + / / so return the internal address ( which is ok since " we ' re bound on all addresses " ) . <nl> + return rpcAddress . equals ( bindAll ) ? endpoint : rpcAddress ; <nl> } <nl> catch ( UnknownHostException e ) <nl> {

TEST DIFF:
diff - - git a / examples / hadoop _ cql3 _ word _ count / src / WordCount . java b / examples / hadoop _ cql3 _ word _ count / src / WordCount . java 
 index 6a2f846 . . 3702a2b 100644 
 - - - a / examples / hadoop _ cql3 _ word _ count / src / WordCount . java 
 + + + b / examples / hadoop _ cql3 _ word _ count / src / WordCount . java 
 @ @ - 37 , 12 + 37 , 10 @ @ import org . apache . hadoop . io . Text ; 
 import org . apache . hadoop . mapreduce . Job ; 
 import org . apache . hadoop . mapreduce . Mapper ; 
 import org . apache . hadoop . mapreduce . Reducer ; 
 - import org . apache . hadoop . mapreduce . Mapper . Context ; 
 import org . apache . hadoop . mapreduce . lib . output . FileOutputFormat ; 
 import org . apache . hadoop . util . Tool ; 
 import org . apache . hadoop . util . ToolRunner ; 
 import com . datastax . driver . core . Row ; 
 - import java . nio . charset . CharacterCodingException ; 
 
 / * * 
 * This counts the occurrences of words in ColumnFamily 
 @ @ - 122 , 7 + 120 , 7 @ @ public class WordCount extends Configured implements Tool 
 public void map ( Long key , Row row , Context context ) throws IOException , InterruptedException 
 { 
 String value = row . getString ( " line " ) ; 
 - logger . debug ( " read { } : { } = { } from { } " , new Object [ ] { key , " line " , value , context . getInputSplit ( ) } ) ; 
 + logger . debug ( " read { } : { } = { } from { } " , key , " line " , value , context . getInputSplit ( ) ) ; 
 StringTokenizer itr = new StringTokenizer ( value ) ; 
 while ( itr . hasMoreTokens ( ) ) 
 {

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 905db57 . . 33d6786 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 11 , 6 + 11 , 7 @ @ 
 * Correctly expire gossip states for edge cases ( CASSANDRA - 5216 ) 
 * Improve handling of directory creation failures ( CASSANDRA - 5196 ) 
 * Expose secondary indicies to the rest of nodetool ( CASSANDRA - 4464 ) 
 + * Binary protocol : avoid sending notification for 0 . 0 . 0 . 0 ( CASSANDRA - 5227 ) 
 
 
 1 . 2 . 1 
 diff - - git a / src / java / org / apache / cassandra / transport / Server . java b / src / java / org / apache / cassandra / transport / Server . java 
 index e999128 . . 8bdae55 100644 
 - - - a / src / java / org / apache / cassandra / transport / Server . java 
 + + + b / src / java / org / apache / cassandra / transport / Server . java 
 @ @ - 262 , 6 + 262 , 17 @ @ public class Server implements CassandraDaemon . Server 
 private static class EventNotifier implements IEndpointLifecycleSubscriber , IMigrationListener 
 { 
 private final Server server ; 
 + private static final InetAddress bindAll ; 
 + static { 
 + try 
 + { 
 + bindAll = InetAddress . getByAddress ( new byte [ 4 ] ) ; 
 + } 
 + catch ( UnknownHostException e ) 
 + { 
 + throw new AssertionError ( e ) ; 
 + } 
 + } 
 
 private EventNotifier ( Server server ) 
 { 
 @ @ - 272 , 7 + 283 , 10 @ @ public class Server implements CassandraDaemon . Server 
 { 
 try 
 { 
 - return InetAddress . getByName ( StorageService . instance . getRpcaddress ( endpoint ) ) ; 
 + InetAddress rpcAddress = InetAddress . getByName ( StorageService . instance . getRpcaddress ( endpoint ) ) ; 
 + / / If rpcAddress = = 0 . 0 . 0 . 0 ( i . e . bound on all addresses ) , returning that is not very helpful , 
 + / / so return the internal address ( which is ok since " we ' re bound on all addresses " ) . 
 + return rpcAddress . equals ( bindAll ) ? endpoint : rpcAddress ; 
 } 
 catch ( UnknownHostException e ) 
 {
