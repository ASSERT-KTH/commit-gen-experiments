BLEU SCORE: 0.04372912656590315

TEST MSG: Refactoring to specialised functional interfaces
GENERATED MSG: fix compaction throttling bursty - ness

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6c3eb53 . . 71f4b1d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Refactoring to specialised functional interfaces ( CASSANDRA - 13982 ) <nl> * Speculative retry should allow more friendly params ( CASSANDRA - 13876 ) <nl> * Throw exception if we send / receive repair messages to incompatible nodes ( CASSANDRA - 13944 ) <nl> * Replace usages of MessageDigest with Guava ' s Hasher ( CASSANDRA - 13291 ) <nl> diff - - git a / src / java / org / apache / cassandra / auth / jmx / AuthorizationProxy . java b / src / java / org / apache / cassandra / auth / jmx / AuthorizationProxy . java <nl> index 1d8f462 . . d9b63c6 100644 <nl> - - - a / src / java / org / apache / cassandra / auth / jmx / AuthorizationProxy . java <nl> + + + b / src / java / org / apache / cassandra / auth / jmx / AuthorizationProxy . java <nl> @ @ - 23 , 8 + 23 , 9 @ @ import java . security . AccessControlContext ; <nl> import java . security . AccessController ; <nl> import java . security . Principal ; <nl> import java . util . Set ; <nl> + import java . util . function . BooleanSupplier ; <nl> import java . util . function . Function ; <nl> - import java . util . function . Supplier ; <nl> + import java . util . function . Predicate ; <nl> import java . util . stream . Collectors ; <nl> import javax . management . MBeanServer ; <nl> import javax . management . MalformedObjectNameException ; <nl> @ @ - 110 , 7 + 111 , 7 @ @ public class AuthorizationProxy implements InvocationHandler <nl> Used to check whether the Role associated with the authenticated Subject has superuser <nl> status . By default , just delegates to Roles : : hasSuperuserStatus , but can be overridden for testing . <nl> * / <nl> - protected Function < RoleResource , Boolean > isSuperuser = Roles : : hasSuperuserStatus ; <nl> + protected Predicate < RoleResource > isSuperuser = Roles : : hasSuperuserStatus ; <nl> <nl> / * <nl> Used to retrieve the set of all permissions granted to a given role . By default , this fetches <nl> @ @ - 123 , 7 + 124 , 7 @ @ public class AuthorizationProxy implements InvocationHandler <nl> Used to decide whether authorization is enabled or not , usually this depends on the configured <nl> IAuthorizer , but can be overridden for testing . <nl> * / <nl> - protected Supplier < Boolean > isAuthzRequired = ( ) - > DatabaseDescriptor . getAuthorizer ( ) . requireAuthorization ( ) ; <nl> + protected BooleanSupplier isAuthzRequired = ( ) - > DatabaseDescriptor . getAuthorizer ( ) . requireAuthorization ( ) ; <nl> <nl> / * <nl> Used to find matching MBeans when the invocation target is a pattern type ObjectName . <nl> @ @ - 135 , 7 + 136 , 7 @ @ public class AuthorizationProxy implements InvocationHandler <nl> Used to determine whether auth setup has completed so we know whether the expect the IAuthorizer <nl> to be ready . Can be overridden for testing . <nl> * / <nl> - protected Supplier < Boolean > isAuthSetupComplete = ( ) - > StorageService . instance . isAuthSetupComplete ( ) ; <nl> + protected BooleanSupplier isAuthSetupComplete = ( ) - > StorageService . instance . isAuthSetupComplete ( ) ; <nl> <nl> @ Override <nl> public Object invoke ( Object proxy , Method method , Object [ ] args ) <nl> @ @ - 188 , 14 + 189 , 14 @ @ public class AuthorizationProxy implements InvocationHandler <nl> methodName , <nl> subject = = null ? " " : subject . toString ( ) . replaceAll ( " \ \ n " , " " ) ) ; <nl> <nl> - if ( ! isAuthSetupComplete . get ( ) ) <nl> + if ( ! isAuthSetupComplete . getAsBoolean ( ) ) <nl> { <nl> logger . trace ( " Auth setup is not complete , refusing access " ) ; <nl> return false ; <nl> } <nl> <nl> / / Permissive authorization is enabled <nl> - if ( ! isAuthzRequired . get ( ) ) <nl> + if ( ! isAuthzRequired . getAsBoolean ( ) ) <nl> return true ; <nl> <nl> / / Allow operations performed locally on behalf of the connector server itself <nl> @ @ - 220 , 7 + 221 , 7 @ @ public class AuthorizationProxy implements InvocationHandler <nl> / / might choose to associate with the Subject following successful authentication <nl> RoleResource userResource = RoleResource . role ( principals . iterator ( ) . next ( ) . getName ( ) ) ; <nl> / / A role with superuser status can do anything <nl> - if ( isSuperuser . apply ( userResource ) ) <nl> + if ( isSuperuser . test ( userResource ) ) <nl> return true ; <nl> <nl> / / The method being invoked may be a method on an MBean , or it could belong <nl> diff - - git a / src / java / org / apache / cassandra / db / Directories . java b / src / java / org / apache / cassandra / db / Directories . java <nl> index b637779 . . 88d909d 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Directories . java <nl> + + + b / src / java / org / apache / cassandra / db / Directories . java <nl> @ @ - 25 , 8 + 25 , 7 @ @ import java . nio . file . Files ; <nl> import java . nio . file . Path ; <nl> import java . util . * ; <nl> import java . util . concurrent . ThreadLocalRandom ; <nl> - import java . util . function . BiFunction ; <nl> - <nl> + import java . util . function . BiPredicate ; <nl> import com . google . common . annotations . VisibleForTesting ; <nl> import com . google . common . collect . ImmutableMap ; <nl> import com . google . common . collect . Iterables ; <nl> @ @ - 733 , 7 + 732 , 7 @ @ public class Directories <nl> filtered = true ; <nl> } <nl> <nl> - private BiFunction < File , FileType , Boolean > getFilter ( ) <nl> + private BiPredicate < File , FileType > getFilter ( ) <nl> { <nl> / / This function always return false since it adds to the components map <nl> return ( file , type ) - > <nl> diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> index feaee7c . . 1d74c16 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ReadCommand . java <nl> + + + b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> package org . apache . cassandra . db ; <nl> <nl> import java . io . IOException ; <nl> + import java . util . function . LongPredicate ; <nl> import java . util . function . Predicate ; <nl> <nl> import javax . annotation . Nullable ; <nl> @ @ - 567 , 7 + 568 , 7 @ @ public abstract class ReadCommand extends MonitorableImpl implements ReadQuery <nl> iterator . metadata ( ) . enforceStrictLiveness ( ) ) ; <nl> } <nl> <nl> - protected Predicate < Long > getPurgeEvaluator ( ) <nl> + protected LongPredicate getPurgeEvaluator ( ) <nl> { <nl> return time - > true ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionController . java b / src / java / org / apache / cassandra / db / compaction / CompactionController . java <nl> index 84aac09 . . 32ce67a 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionController . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionController . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> package org . apache . cassandra . db . compaction ; <nl> <nl> import java . util . * ; <nl> + import java . util . function . LongPredicate ; <nl> import java . util . function . Predicate ; <nl> <nl> import org . apache . cassandra . config . Config ; <nl> @ @ - 256 , 7 + 257 , 7 @ @ public class CompactionController implements AutoCloseable <nl> * containing his partition and not participating in the compaction . This means there isn ' t any data in those <nl> * sstables that might still need to be suppressed by a tombstone at this timestamp . <nl> * / <nl> - public Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) <nl> + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) <nl> { <nl> if ( NEVER _ PURGE _ TOMBSTONES | | ! compactingRepaired ( ) ) <nl> return time - > false ; <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionIterator . java b / src / java / org / apache / cassandra / db / compaction / CompactionIterator . java <nl> index a6161f2 . . dfbb6cc 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionIterator . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionIterator . java <nl> @ @ - 18 , 7 + 18 , 7 @ @ <nl> package org . apache . cassandra . db . compaction ; <nl> <nl> import java . util . * ; <nl> - import java . util . function . Predicate ; <nl> + import java . util . function . LongPredicate ; <nl> <nl> import com . google . common . collect . Ordering ; <nl> <nl> @ @ - 260 , 7 + 260 , 7 @ @ public class CompactionIterator extends CompactionInfo . Holder implements Unfilte <nl> private final CompactionController controller ; <nl> <nl> private DecoratedKey currentKey ; <nl> - private Predicate < Long > purgeEvaluator ; <nl> + private LongPredicate purgeEvaluator ; <nl> <nl> private long compactedUnfiltered ; <nl> <nl> @ @ - 300 , 7 + 300 , 7 @ @ public class CompactionIterator extends CompactionInfo . Holder implements Unfilte <nl> * This is computed lazily on demand as we only need this if there is tombstones and this a bit expensive <nl> * ( see # 8914 ) . <nl> * / <nl> - protected Predicate < Long > getPurgeEvaluator ( ) <nl> + protected LongPredicate getPurgeEvaluator ( ) <nl> { <nl> if ( purgeEvaluator = = null ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index 06fbef2 . . 739810b 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import java . io . IOException ; <nl> import java . lang . management . ManagementFactory ; <nl> import java . util . * ; <nl> import java . util . concurrent . * ; <nl> + import java . util . function . LongPredicate ; <nl> import java . util . stream . Collectors ; <nl> import javax . management . MBeanServer ; <nl> import javax . management . ObjectName ; <nl> @ @ - 1702 , 7 + 1703 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> } <nl> <nl> @ Override <nl> - public java . util . function . Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) <nl> + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) <nl> { <nl> / * <nl> * The main reason we always purge is that including gcable tombstone would mean that the <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / SSTableSplitter . java b / src / java / org / apache / cassandra / db / compaction / SSTableSplitter . java <nl> index 924e29c . . e9ae429 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / SSTableSplitter . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / SSTableSplitter . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> package org . apache . cassandra . db . compaction ; <nl> <nl> import java . util . * ; <nl> + import java . util . function . LongPredicate ; <nl> import java . util . function . Predicate ; <nl> <nl> import org . apache . cassandra . db . * ; <nl> @ @ - 98 , 7 + 99 , 7 @ @ public class SSTableSplitter <nl> } <nl> <nl> @ Override <nl> - public Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) <nl> + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) <nl> { <nl> return time - > false ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / Upgrader . java b / src / java / org / apache / cassandra / db / compaction / Upgrader . java <nl> index 5a60ddd . . 80453ef 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / Upgrader . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / Upgrader . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ package org . apache . cassandra . db . compaction ; <nl> <nl> import java . io . File ; <nl> import java . util . * ; <nl> + import java . util . function . LongPredicate ; <nl> import java . util . function . Predicate ; <nl> <nl> import com . google . common . base . Throwables ; <nl> @ @ - 116 , 7 + 117 , 7 @ @ public class Upgrader <nl> } <nl> <nl> @ Override <nl> - public Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) <nl> + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) <nl> { <nl> return time - > false ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / Verifier . java b / src / java / org / apache / cassandra / db / compaction / Verifier . java <nl> index 22cf813 . . af00915 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / Verifier . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / Verifier . java <nl> @ @ - 45 , 6 + 45 , 7 @ @ import java . io . IOError ; <nl> import java . io . IOException ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> + import java . util . function . LongPredicate ; <nl> import java . util . function . Predicate ; <nl> <nl> public class Verifier implements Closeable <nl> @ @ - 302 , 7 + 303 , 7 @ @ public class Verifier implements Closeable <nl> } <nl> <nl> @ Override <nl> - public Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) <nl> + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) <nl> { <nl> return time - > false ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / lifecycle / LifecycleTransaction . java b / src / java / org / apache / cassandra / db / lifecycle / LifecycleTransaction . java <nl> index 2bf81a9 . . 2f17329 100644 <nl> - - - a / src / java / org / apache / cassandra / db / lifecycle / LifecycleTransaction . java <nl> + + + b / src / java / org / apache / cassandra / db / lifecycle / LifecycleTransaction . java <nl> @ @ - 21 , 7 + 21 , 7 @ @ import java . io . File ; <nl> import java . nio . file . Path ; <nl> import java . util . * ; <nl> import java . util . function . BiFunction ; <nl> - <nl> + import java . util . function . BiPredicate ; <nl> import com . google . common . annotations . VisibleForTesting ; <nl> import com . google . common . base . Predicate ; <nl> import com . google . common . collect . * ; <nl> @ @ - 556 , 7 + 556 , 7 @ @ public class LifecycleTransaction extends Transactional . AbstractTransactional <nl> * @ param filter - A function that receives each file and its type , it should return true to have the file returned <nl> * @ return - the list of files that were scanned and for which the filter returned true <nl> * / <nl> - public static List < File > getFiles ( Path folder , BiFunction < File , Directories . FileType , Boolean > filter , Directories . OnTxnErr onTxnErr ) <nl> + public static List < File > getFiles ( Path folder , BiPredicate < File , Directories . FileType > filter , Directories . OnTxnErr onTxnErr ) <nl> { <nl> return new LogAwareFileLister ( folder , filter , onTxnErr ) . list ( ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / lifecycle / LogAwareFileLister . java b / src / java / org / apache / cassandra / db / lifecycle / LogAwareFileLister . java <nl> index 212076d . . 254966e 100644 <nl> - - - a / src / java / org / apache / cassandra / db / lifecycle / LogAwareFileLister . java <nl> + + + b / src / java / org / apache / cassandra / db / lifecycle / LogAwareFileLister . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ import java . nio . file . DirectoryStream ; <nl> import java . nio . file . Files ; <nl> import java . nio . file . Path ; <nl> import java . util . * ; <nl> - import java . util . function . BiFunction ; <nl> + import java . util . function . BiPredicate ; <nl> import java . util . stream . Collectors ; <nl> import java . util . stream . StreamSupport ; <nl> <nl> @ @ - 50 , 7 + 50 , 7 @ @ final class LogAwareFileLister <nl> private final Path folder ; <nl> <nl> / / The filter determines which files the client wants returned <nl> - private final BiFunction < File , FileType , Boolean > filter ; / / file , file type <nl> + private final BiPredicate < File , FileType > filter ; / / file , file type <nl> <nl> / / The behavior when we fail to list files <nl> private final OnTxnErr onTxnErr ; <nl> @ @ - 59 , 7 + 59 , 7 @ @ final class LogAwareFileLister <nl> NavigableMap < File , Directories . FileType > files = new TreeMap < > ( ) ; <nl> <nl> @ VisibleForTesting <nl> - LogAwareFileLister ( Path folder , BiFunction < File , FileType , Boolean > filter , OnTxnErr onTxnErr ) <nl> + LogAwareFileLister ( Path folder , BiPredicate < File , FileType > filter , OnTxnErr onTxnErr ) <nl> { <nl> this . folder = folder ; <nl> this . filter = filter ; <nl> @ @ - 96 , 7 + 96 , 7 @ @ final class LogAwareFileLister <nl> <nl> / / Finally we apply the user filter before returning our result <nl> return files . entrySet ( ) . stream ( ) <nl> - . filter ( ( e ) - > filter . apply ( e . getKey ( ) , e . getValue ( ) ) ) <nl> + . filter ( ( e ) - > filter . test ( e . getKey ( ) , e . getValue ( ) ) ) <nl> . map ( Map . Entry : : getKey ) <nl> . collect ( Collectors . toList ( ) ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / partitions / PurgeFunction . java b / src / java / org / apache / cassandra / db / partitions / PurgeFunction . java <nl> index 83d4d38 . . 19289d4 100644 <nl> - - - a / src / java / org / apache / cassandra / db / partitions / PurgeFunction . java <nl> + + + b / src / java / org / apache / cassandra / db / partitions / PurgeFunction . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ <nl> * / <nl> package org . apache . cassandra . db . partitions ; <nl> <nl> + import java . util . function . LongPredicate ; <nl> import java . util . function . Predicate ; <nl> <nl> import org . apache . cassandra . db . * ; <nl> @ @ - 42 , 7 + 43 , 7 @ @ public abstract class PurgeFunction extends Transformation < UnfilteredRowIterator <nl> this . enforceStrictLiveness = enforceStrictLiveness ; <nl> } <nl> <nl> - protected abstract Predicate < Long > getPurgeEvaluator ( ) ; <nl> + protected abstract LongPredicate getPurgeEvaluator ( ) ; <nl> <nl> / / Called at the beginning of each new partition <nl> protected void onNewPartition ( DecoratedKey partitionKey ) <nl> diff - - git a / src / java / org / apache / cassandra / hints / HintsDispatchExecutor . java b / src / java / org / apache / cassandra / hints / HintsDispatchExecutor . java <nl> index 0a96ae4 . . 58a3e6f 100644 <nl> - - - a / src / java / org / apache / cassandra / hints / HintsDispatchExecutor . java <nl> + + + b / src / java / org / apache / cassandra / hints / HintsDispatchExecutor . java <nl> @ @ - 24 , 7 + 24 , 7 @ @ import java . util . UUID ; <nl> import java . util . concurrent . * ; <nl> import java . util . concurrent . atomic . AtomicBoolean ; <nl> import java . util . function . BooleanSupplier ; <nl> - import java . util . function . Function ; <nl> + import java . util . function . Predicate ; <nl> import java . util . function . Supplier ; <nl> <nl> import com . google . common . util . concurrent . RateLimiter ; <nl> @ @ - 50 , 10 + 50 , 10 @ @ final class HintsDispatchExecutor <nl> private final File hintsDirectory ; <nl> private final ExecutorService executor ; <nl> private final AtomicBoolean isPaused ; <nl> - private final Function < InetAddress , Boolean > isAlive ; <nl> + private final Predicate < InetAddress > isAlive ; <nl> private final Map < UUID , Future > scheduledDispatches ; <nl> <nl> - HintsDispatchExecutor ( File hintsDirectory , int maxThreads , AtomicBoolean isPaused , Function < InetAddress , Boolean > isAlive ) <nl> + HintsDispatchExecutor ( File hintsDirectory , int maxThreads , AtomicBoolean isPaused , Predicate < InetAddress > isAlive ) <nl> { <nl> this . hintsDirectory = hintsDirectory ; <nl> this . isPaused = isPaused ; <nl> @ @ - 271 , 7 + 271 , 7 @ @ final class HintsDispatchExecutor <nl> File file = new File ( hintsDirectory , descriptor . fileName ( ) ) ; <nl> InputPosition offset = store . getDispatchOffset ( descriptor ) ; <nl> <nl> - BooleanSupplier shouldAbort = ( ) - > ! isAlive . apply ( address ) | | isPaused . get ( ) ; <nl> + BooleanSupplier shouldAbort = ( ) - > ! isAlive . test ( address ) | | isPaused . get ( ) ; <nl> try ( HintsDispatcher dispatcher = HintsDispatcher . create ( file , rateLimiter , address , descriptor . hostId , shouldAbort ) ) <nl> { <nl> if ( offset ! = null ) <nl> diff - - git a / src / java / org / apache / cassandra / streaming / compress / CompressedInputStream . java b / src / java / org / apache / cassandra / streaming / compress / CompressedInputStream . java <nl> index dd0ba80 . . da63403 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / compress / CompressedInputStream . java <nl> + + + b / src / java / org / apache / cassandra / streaming / compress / CompressedInputStream . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ import java . util . Iterator ; <nl> import java . util . concurrent . ArrayBlockingQueue ; <nl> import java . util . concurrent . BlockingQueue ; <nl> import java . util . concurrent . ThreadLocalRandom ; <nl> - import java . util . function . Supplier ; <nl> + import java . util . function . DoubleSupplier ; <nl> <nl> import com . google . common . collect . Iterators ; <nl> import org . slf4j . Logger ; <nl> @ @ - 52 , 7 + 52 , 7 @ @ public class CompressedInputStream extends RebufferingInputStream implements Aut <nl> private final CompressionInfo info ; <nl> / / chunk buffer <nl> private final BlockingQueue < ByteBuffer > dataBuffer ; <nl> - private final Supplier < Double > crcCheckChanceSupplier ; <nl> + private final DoubleSupplier crcCheckChanceSupplier ; <nl> <nl> / * * <nl> * The base offset of the current { @ link # buffer } from the beginning of the stream . <nl> @ @ - 85 , 7 + 85 , 7 @ @ public class CompressedInputStream extends RebufferingInputStream implements Aut <nl> * @ param source Input source to read compressed data from <nl> * @ param info Compression info <nl> * / <nl> - public CompressedInputStream ( DataInputPlus source , CompressionInfo info , ChecksumType checksumType , Supplier < Double > crcCheckChanceSupplier ) <nl> + public CompressedInputStream ( DataInputPlus source , CompressionInfo info , ChecksumType checksumType , DoubleSupplier crcCheckChanceSupplier ) <nl> { <nl> super ( ByteBuffer . allocateDirect ( info . parameters . chunkLength ( ) ) ) ; <nl> buffer . limit ( buffer . position ( ) ) ; / / force the buffer to appear " consumed " so that it triggers reBuffer on the first read <nl> @ @ - 174 , 7 + 174 , 7 @ @ public class CompressedInputStream extends RebufferingInputStream implements Aut <nl> totalCompressedBytesRead + = length ; <nl> <nl> / / validate crc randomly <nl> - double crcCheckChance = this . crcCheckChanceSupplier . get ( ) ; <nl> + double crcCheckChance = this . crcCheckChanceSupplier . getAsDouble ( ) ; <nl> if ( crcCheckChance > 0d & & crcCheckChance > ThreadLocalRandom . current ( ) . nextDouble ( ) ) <nl> { <nl> ByteBuffer crcBuf = compressed . duplicate ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java <nl> index 1ff2cb6 . . 5a8a0bc 100755 <nl> - - - a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java <nl> + + + b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java <nl> @ @ - 387 , 7 + 387 , 7 @ @ public class SSTableMetadataViewer <nl> offset , <nl> Util . wrapQuiet ( toDateString ( offset , TimeUnit . SECONDS ) , <nl> color ) ) , <nl> - Object : : toString ) ; <nl> + String : : valueOf ) ; <nl> estDropped . printHistogram ( out , color , unicode ) ; <nl> field ( " Partition Size " , " " ) ; <nl> TermHistogram rowSize = new TermHistogram ( stats . estimatedPartitionSize , <nl> @ @ - 395 , 13 + 395 , 13 @ @ public class SSTableMetadataViewer <nl> offset - > String . format ( " % d % s " , <nl> offset , <nl> Util . wrapQuiet ( toByteString ( offset ) , color ) ) , <nl> - Object : : toString ) ; <nl> + String : : valueOf ) ; <nl> rowSize . printHistogram ( out , color , unicode ) ; <nl> field ( " Column Count " , " " ) ; <nl> TermHistogram cellCount = new TermHistogram ( stats . estimatedColumnCount , <nl> " Columns " , <nl> - Object : : toString , <nl> - Object : : toString ) ; <nl> + String : : valueOf , <nl> + String : : valueOf ) ; <nl> cellCount . printHistogram ( out , color , unicode ) ; <nl> } <nl> if ( compaction ! = null ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / StandaloneSSTableUtil . java b / src / java / org / apache / cassandra / tools / StandaloneSSTableUtil . java <nl> index adfe7e0 . . 3a6be63 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / StandaloneSSTableUtil . java <nl> + + + b / src / java / org / apache / cassandra / tools / StandaloneSSTableUtil . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ import org . apache . commons . cli . * ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . function . BiFunction ; <nl> + import java . util . function . BiPredicate ; <nl> <nl> import static org . apache . cassandra . tools . BulkLoader . CmdLineOptions ; <nl> <nl> @ @ - 92 , 7 + 93 , 7 @ @ public class StandaloneSSTableUtil <nl> } <nl> } <nl> <nl> - private static BiFunction < File , Directories . FileType , Boolean > getFilter ( Options options ) <nl> + private static BiPredicate < File , Directories . FileType > getFilter ( Options options ) <nl> { <nl> return ( file , type ) - > <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / tools / Util . java b / src / java / org / apache / cassandra / tools / Util . java <nl> index 7a6f698 . . db664aa 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / Util . java <nl> + + + b / src / java / org / apache / cassandra / tools / Util . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ import java . util . Spliterator ; <nl> import java . util . Spliterators ; <nl> import java . util . TreeMap ; <nl> import java . util . Map . Entry ; <nl> - import java . util . function . Function ; <nl> + import java . util . function . LongFunction ; <nl> import java . util . stream . Stream ; <nl> import java . util . stream . StreamSupport ; <nl> <nl> @ @ - 129 , 14 + 129 , 14 @ @ public final class Util <nl> int maxCountLength = 5 ; <nl> int maxOffsetLength = 5 ; <nl> Map < ? extends Number , Long > histogram ; <nl> - Function < Long , String > offsetName ; <nl> - Function < Long , String > countName ; <nl> + LongFunction < String > offsetName ; <nl> + LongFunction < String > countName ; <nl> String title ; <nl> <nl> public TermHistogram ( Map < ? extends Number , Long > histogram , <nl> String title , <nl> - Function < Long , String > offsetName , <nl> - Function < Long , String > countName ) <nl> + LongFunction < String > offsetName , <nl> + LongFunction < String > countName ) <nl> { <nl> this . offsetName = offsetName ; <nl> this . countName = countName ; <nl> @ @ - 156 , 8 + 156 , 8 @ @ public final class Util <nl> <nl> public TermHistogram ( TombstoneHistogram histogram , <nl> String title , <nl> - Function < Long , String > offsetName , <nl> - Function < Long , String > countName ) <nl> + LongFunction < String > offsetName , <nl> + LongFunction < String > countName ) <nl> { <nl> this ( new TreeMap < Number , Long > ( ) <nl> { <nl> @ @ - 171 , 8 + 171 , 8 @ @ public final class Util <nl> <nl> public TermHistogram ( EstimatedHistogram histogram , <nl> String title , <nl> - Function < Long , String > offsetName , <nl> - Function < Long , String > countName ) <nl> + LongFunction < String > offsetName , <nl> + LongFunction < String > countName ) <nl> { <nl> this ( new TreeMap < Number , Long > ( ) <nl> { <nl> diff - - git a / test / microbench / org / apache / cassandra / test / microbench / AutoBoxingBench . java b / test / microbench / org / apache / cassandra / test / microbench / AutoBoxingBench . java <nl> new file mode 100644 <nl> index 0000000 . . fd6df39 <nl> - - - / dev / null <nl> + + + b / test / microbench / org / apache / cassandra / test / microbench / AutoBoxingBench . java <nl> @ @ - 0 , 0 + 1 , 74 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package org . apache . cassandra . test . microbench ; <nl> + <nl> + import java . util . concurrent . TimeUnit ; <nl> + import java . util . function . BooleanSupplier ; <nl> + import java . util . function . IntSupplier ; <nl> + import java . util . function . Supplier ; <nl> + <nl> + import org . openjdk . jmh . annotations . Benchmark ; <nl> + import org . openjdk . jmh . annotations . BenchmarkMode ; <nl> + import org . openjdk . jmh . annotations . Fork ; <nl> + import org . openjdk . jmh . annotations . Measurement ; <nl> + import org . openjdk . jmh . annotations . Mode ; <nl> + import org . openjdk . jmh . annotations . OutputTimeUnit ; <nl> + import org . openjdk . jmh . annotations . Scope ; <nl> + import org . openjdk . jmh . annotations . State ; <nl> + import org . openjdk . jmh . annotations . Threads ; <nl> + import org . openjdk . jmh . annotations . Warmup ; <nl> + <nl> + @ BenchmarkMode ( Mode . SampleTime ) <nl> + @ OutputTimeUnit ( TimeUnit . NANOSECONDS ) <nl> + @ Warmup ( iterations = 3 , time = 1 ) <nl> + @ Measurement ( iterations = 6 , time = 20 ) <nl> + @ Fork ( value = 1 , jvmArgsAppend = { " - Xmx256M " , " - Djmh . executor = CUSTOM " , " - Djmh . executor . class = org . apache . cassandra . test . microbench . FastThreadExecutor " } ) <nl> + @ Threads ( 4 ) / / make sure this matches the number of _ physical _ cores _ <nl> + @ State ( Scope . Benchmark ) <nl> + public class AutoBoxingBench <nl> + { <nl> + <nl> + @ Benchmark <nl> + public boolean booleanFromBooleanSupplier ( ) <nl> + { <nl> + BooleanSupplier bs = ( ) - > true ; <nl> + return bs . getAsBoolean ( ) ; <nl> + } <nl> + <nl> + @ Benchmark <nl> + public boolean booleanFromPlainSupplier ( ) <nl> + { <nl> + Supplier < Boolean > bs = ( ) - > true ; <nl> + return bs . get ( ) ; <nl> + } <nl> + <nl> + @ Benchmark <nl> + public int intFromIntSupplier ( ) <nl> + { <nl> + IntSupplier bs = ( ) - > 42 ; <nl> + return bs . getAsInt ( ) ; <nl> + } <nl> + <nl> + @ Benchmark <nl> + public int intFromPlainSupplier ( ) <nl> + { <nl> + Supplier < Integer > bs = ( ) - > 42 ; <nl> + return bs . get ( ) ; <nl> + } <nl> + } <nl> diff - - git a / test / unit / org / apache / cassandra / auth / jmx / AuthorizationProxyTest . java b / test / unit / org / apache / cassandra / auth / jmx / AuthorizationProxyTest . java <nl> index 84282e0 . . 924d467 100644 <nl> - - - a / test / unit / org / apache / cassandra / auth / jmx / AuthorizationProxyTest . java <nl> + + + b / test / unit / org / apache / cassandra / auth / jmx / AuthorizationProxyTest . java <nl> @ @ - 20 , 8 + 20 , 9 @ @ package org . apache . cassandra . auth . jmx ; <nl> <nl> import java . util . * ; <nl> import java . util . concurrent . atomic . AtomicBoolean ; <nl> + import java . util . function . BooleanSupplier ; <nl> import java . util . function . Function ; <nl> - import java . util . function . Supplier ; <nl> + import java . util . function . Predicate ; <nl> import java . util . stream . Collectors ; <nl> import javax . management . MalformedObjectNameException ; <nl> import javax . management . ObjectName ; <nl> @ @ - 495 , 9 + 496 , 9 @ @ public class AuthorizationProxyTest <nl> { <nl> Function < RoleResource , Set < PermissionDetails > > getPermissions ; <nl> Function < ObjectName , Set < ObjectName > > queryNames ; <nl> - Function < RoleResource , Boolean > isSuperuser ; <nl> - Supplier < Boolean > isAuthzRequired ; <nl> - Supplier < Boolean > isAuthSetupComplete = ( ) - > true ; <nl> + Predicate < RoleResource > isSuperuser ; <nl> + BooleanSupplier isAuthzRequired ; <nl> + BooleanSupplier isAuthSetupComplete = ( ) - > true ; <nl> <nl> AuthorizationProxy build ( ) <nl> { <nl> @ @ - 532 , 19 + 533 , 19 @ @ public class AuthorizationProxyTest <nl> return this ; <nl> } <nl> <nl> - ProxyBuilder isSuperuser ( Function < RoleResource , Boolean > f ) <nl> + ProxyBuilder isSuperuser ( Predicate < RoleResource > f ) <nl> { <nl> isSuperuser = f ; <nl> return this ; <nl> } <nl> <nl> - ProxyBuilder isAuthzRequired ( Supplier < Boolean > s ) <nl> + ProxyBuilder isAuthzRequired ( BooleanSupplier s ) <nl> { <nl> isAuthzRequired = s ; <nl> return this ; <nl> } <nl> <nl> - ProxyBuilder isAuthSetupComplete ( Supplier < Boolean > s ) <nl> + ProxyBuilder isAuthSetupComplete ( BooleanSupplier s ) <nl> { <nl> isAuthSetupComplete = s ; <nl> return this ; <nl> @ @ - 562 , 17 + 563 , 17 @ @ public class AuthorizationProxyTest <nl> this . queryNames = f ; <nl> } <nl> <nl> - void setIsSuperuser ( Function < RoleResource , Boolean > f ) <nl> + void setIsSuperuser ( Predicate < RoleResource > f ) <nl> { <nl> this . isSuperuser = f ; <nl> } <nl> <nl> - void setIsAuthzRequired ( Supplier < Boolean > s ) <nl> + void setIsAuthzRequired ( BooleanSupplier s ) <nl> { <nl> this . isAuthzRequired = s ; <nl> } <nl> <nl> - void setIsAuthSetupComplete ( Supplier < Boolean > s ) <nl> + void setIsAuthSetupComplete ( BooleanSupplier s ) <nl> { <nl> this . isAuthSetupComplete = s ; <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionControllerTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionControllerTest . java <nl> index 40693fa . . 0ab714a 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionControllerTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionControllerTest . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . db . compaction ; <nl> <nl> import java . nio . ByteBuffer ; <nl> import java . util . Set ; <nl> + import java . util . function . LongPredicate ; <nl> import java . util . function . Predicate ; <nl> <nl> import com . google . common . collect . Sets ; <nl> @ @ - 203 , 7 + 204 , 7 @ @ public class CompactionControllerTest extends SchemaLoader <nl> . applyUnsafe ( ) ; <nl> } <nl> <nl> - private void assertPurgeBoundary ( Predicate < Long > evaluator , long boundary ) <nl> + private void assertPurgeBoundary ( LongPredicate evaluator , long boundary ) <nl> { <nl> assertFalse ( evaluator . test ( boundary ) ) ; <nl> assertTrue ( evaluator . test ( boundary - 1 ) ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / db / rows / UnfilteredRowIteratorsMergeTest . java b / test / unit / org / apache / cassandra / db / rows / UnfilteredRowIteratorsMergeTest . java <nl> index 8c99057 . . d6a968e 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / rows / UnfilteredRowIteratorsMergeTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / rows / UnfilteredRowIteratorsMergeTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ package org . apache . cassandra . db . rows ; <nl> <nl> import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> - import java . util . function . Function ; <nl> + import java . util . function . IntUnaryOperator ; <nl> import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> import java . util . stream . Collectors ; <nl> @ @ - 112 , 7 + 112 , 7 @ @ public class UnfilteredRowIteratorsMergeTest <nl> System . out . println ( " \ nSeed " + seed ) ; <nl> <nl> Random r = new Random ( seed ) ; <nl> - List < Function < Integer , Integer > > timeGenerators = ImmutableList . of ( <nl> + List < IntUnaryOperator > timeGenerators = ImmutableList . of ( <nl> x - > - 1 , <nl> x - > DEL _ RANGE , <nl> x - > r . nextInt ( DEL _ RANGE ) <nl> @ @ - 169 , 7 + 169 , 7 @ @ public class UnfilteredRowIteratorsMergeTest <nl> } <nl> <nl> @ SuppressWarnings ( " unused " ) <nl> - private List < Unfiltered > generateSource ( Random r , Function < Integer , Integer > timeGenerator ) <nl> + private List < Unfiltered > generateSource ( Random r , IntUnaryOperator timeGenerator ) <nl> { <nl> int [ ] positions = new int [ ITEMS + 1 ] ; <nl> for ( int i = 0 ; i < ITEMS ; + + i ) <nl> @ @ - 387 , 10 + 387 , 10 @ @ public class UnfilteredRowIteratorsMergeTest <nl> return Clustering . make ( Int32Type . instance . decompose ( i ) ) ; <nl> } <nl> <nl> - static Row emptyRowAt ( int pos , Function < Integer , Integer > timeGenerator ) <nl> + static Row emptyRowAt ( int pos , IntUnaryOperator timeGenerator ) <nl> { <nl> final Clustering clustering = clusteringFor ( pos ) ; <nl> - final LivenessInfo live = LivenessInfo . create ( timeGenerator . apply ( pos ) , nowInSec ) ; <nl> + final LivenessInfo live = LivenessInfo . create ( timeGenerator . applyAsInt ( pos ) , nowInSec ) ; <nl> return BTreeRow . noCellLiveRow ( clustering , live ) ; <nl> } <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / db / rows / UnfilteredRowsGenerator . java b / test / unit / org / apache / cassandra / db / rows / UnfilteredRowsGenerator . java <nl> index 1f8793a . . 71b28e8 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / rows / UnfilteredRowsGenerator . java <nl> + + + b / test / unit / org / apache / cassandra / db / rows / UnfilteredRowsGenerator . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ package org . apache . cassandra . db . rows ; <nl> <nl> import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> - import java . util . function . Function ; <nl> + import java . util . function . IntUnaryOperator ; <nl> import java . util . regex . Matcher ; <nl> import java . util . regex . Pattern ; <nl> <nl> @ @ - 111 , 7 + 111 , 7 @ @ public class UnfilteredRowsGenerator <nl> } <nl> } <nl> <nl> - public List < Unfiltered > generateSource ( Random r , int items , int range , int del _ range , Function < Integer , Integer > timeGenerator ) <nl> + public List < Unfiltered > generateSource ( Random r , int items , int range , int del _ range , IntUnaryOperator timeGenerator ) <nl> { <nl> int [ ] positions = new int [ items + 1 ] ; <nl> for ( int i = 0 ; i < items ; + + i ) <nl> @ @ - 219 , 10 + 219 , 10 @ @ public class UnfilteredRowsGenerator <nl> return out ; <nl> } <nl> <nl> - static Row emptyRowAt ( int pos , Function < Integer , Integer > timeGenerator ) <nl> + static Row emptyRowAt ( int pos , IntUnaryOperator timeGenerator ) <nl> { <nl> final Clustering clustering = clusteringFor ( pos ) ; <nl> - final LivenessInfo live = LivenessInfo . create ( timeGenerator . apply ( pos ) , UnfilteredRowIteratorsMergeTest . nowInSec ) ; <nl> + final LivenessInfo live = LivenessInfo . create ( timeGenerator . applyAsInt ( pos ) , UnfilteredRowIteratorsMergeTest . nowInSec ) ; <nl> return BTreeRow . noCellLiveRow ( clustering , live ) ; <nl> } <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / service / NativeTransportServiceTest . java b / test / unit / org / apache / cassandra / service / NativeTransportServiceTest . java <nl> index 04cc9dd . . 334a9af 100644 <nl> - - - a / test / unit / org / apache / cassandra / service / NativeTransportServiceTest . java <nl> + + + b / test / unit / org / apache / cassandra / service / NativeTransportServiceTest . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> package org . apache . cassandra . service ; <nl> <nl> import java . util . Arrays ; <nl> + import java . util . function . BooleanSupplier ; <nl> import java . util . function . Consumer ; <nl> import java . util . function . Supplier ; <nl> import java . util . stream . Collectors ; <nl> @ @ - 84 , 12 + 85 , 12 @ @ public class NativeTransportServiceTest <nl> public void testDestroy ( ) <nl> { <nl> withService ( ( NativeTransportService service ) - > { <nl> - Supplier < Boolean > allTerminated = ( ) - > <nl> + BooleanSupplier allTerminated = ( ) - > <nl> service . getWorkerGroup ( ) . isShutdown ( ) & & service . getWorkerGroup ( ) . isTerminated ( ) & & <nl> service . getEventExecutor ( ) . isShutdown ( ) & & service . getEventExecutor ( ) . isTerminated ( ) ; <nl> - assertFalse ( allTerminated . get ( ) ) ; <nl> + assertFalse ( allTerminated . getAsBoolean ( ) ) ; <nl> service . destroy ( ) ; <nl> - assertTrue ( allTerminated . get ( ) ) ; <nl> + assertTrue ( allTerminated . getAsBoolean ( ) ) ; <nl> } ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cache / IMeasurableMemory . java b / src / java / org / apache / cassandra / cache / IMeasurableMemory . java <nl> index 6b5f00e . . 16ca7c2 100644 <nl> - - - a / src / java / org / apache / cassandra / cache / IMeasurableMemory . java <nl> + + + b / src / java / org / apache / cassandra / cache / IMeasurableMemory . java <nl> @ @ - 1 , 4 + 1 , 25 @ @ <nl> package org . apache . cassandra . cache ; <nl> + / * <nl> + * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , <nl> + * software distributed under the License is distributed on an <nl> + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + * KIND , either express or implied . See the License for the <nl> + * specific language governing permissions and limitations <nl> + * under the License . <nl> + * <nl> + * / <nl> + <nl> <nl> public interface IMeasurableMemory <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / io / compress / CompressedThrottledReader . java b / src / java / org / apache / cassandra / io / compress / CompressedThrottledReader . java <nl> index 1b7b7a4 . . 2c97a96 100644 <nl> - - - a / src / java / org / apache / cassandra / io / compress / CompressedThrottledReader . java <nl> + + + b / src / java / org / apache / cassandra / io / compress / CompressedThrottledReader . java <nl> @ @ - 1 , 4 + 1 , 25 @ @ <nl> package org . apache . cassandra . io . compress ; <nl> + / * <nl> + * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , <nl> + * software distributed under the License is distributed on an <nl> + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + * KIND , either express or implied . See the License for the <nl> + * specific language governing permissions and limitations <nl> + * under the License . <nl> + * <nl> + * / <nl> + <nl> <nl> import java . io . File ; <nl> import java . io . FileNotFoundException ; <nl> diff - - git a / src / java / org / apache / cassandra / io / util / ThrottledReader . java b / src / java / org / apache / cassandra / io / util / ThrottledReader . java <nl> index d67550a . . 667f8ec 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / ThrottledReader . java <nl> + + + b / src / java / org / apache / cassandra / io / util / ThrottledReader . java <nl> @ @ - 1 , 4 + 1 , 25 @ @ <nl> package org . apache . cassandra . io . util ; <nl> + / * <nl> + * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , <nl> + * software distributed under the License is distributed on an <nl> + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + * KIND , either express or implied . See the License for the <nl> + * specific language governing permissions and limitations <nl> + * under the License . <nl> + * <nl> + * / <nl> + <nl> <nl> import java . io . File ; <nl> import java . io . FileNotFoundException ; <nl> diff - - git a / src / java / org / apache / cassandra / utils / ObjectSizes . java b / src / java / org / apache / cassandra / utils / ObjectSizes . java <nl> index 6c28389 . . 66ec501 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / ObjectSizes . java <nl> + + + b / src / java / org / apache / cassandra / utils / ObjectSizes . java <nl> @ @ - 1 , 4 + 1 , 25 @ @ <nl> package org . apache . cassandra . utils ; <nl> + / * <nl> + * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , <nl> + * software distributed under the License is distributed on an <nl> + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + * KIND , either express or implied . See the License for the <nl> + * specific language governing permissions and limitations <nl> + * under the License . <nl> + * <nl> + * / <nl> + <nl> <nl> import java . lang . management . ManagementFactory ; <nl> import java . lang . management . MemoryPoolMXBean ; <nl> @ @ - 201 , 4 + 222 , 4 @ @ public class ObjectSizes <nl> { <nl> return meter . measureDeep ( pojo ) ; <nl> } <nl> - } <nl> \ No newline at end of file <nl> + } <nl> diff - - git a / test / unit / org / apache / cassandra / cache / ObjectSizeTest . java b / test / unit / org / apache / cassandra / cache / ObjectSizeTest . java <nl> index 4adf4f9 . . 6cafe25 100644 <nl> - - - a / test / unit / org / apache / cassandra / cache / ObjectSizeTest . java <nl> + + + b / test / unit / org / apache / cassandra / cache / ObjectSizeTest . java <nl> @ @ - 1 , 4 + 1 , 25 @ @ <nl> package org . apache . cassandra . cache ; <nl> + / * <nl> + * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , <nl> + * software distributed under the License is distributed on an <nl> + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + * KIND , either express or implied . See the License for the <nl> + * specific language governing permissions and limitations <nl> + * under the License . <nl> + * <nl> + * / <nl> + <nl> <nl> import java . nio . ByteBuffer ; <nl> import java . util . UUID ; <nl> diff - - git a / test / unit / org / apache / cassandra / db / compaction / LegacyLeveledManifestTestHelper . java b / test / unit / org / apache / cassandra / db / compaction / LegacyLeveledManifestTestHelper . java <nl> index 9ce60ea . . 4ee92fe 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / compaction / LegacyLeveledManifestTestHelper . java <nl> + + + b / test / unit / org / apache / cassandra / db / compaction / LegacyLeveledManifestTestHelper . java <nl> @ @ - 1 , 4 + 1 , 25 @ @ <nl> package org . apache . cassandra . db . compaction ; <nl> + / * <nl> + * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , <nl> + * software distributed under the License is distributed on an <nl> + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + * KIND , either express or implied . See the License for the <nl> + * specific language governing permissions and limitations <nl> + * under the License . <nl> + * <nl> + * / <nl> + <nl> <nl> <nl> import java . io . File ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6c3eb53 . . 71f4b1d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Refactoring to specialised functional interfaces ( CASSANDRA - 13982 ) 
 * Speculative retry should allow more friendly params ( CASSANDRA - 13876 ) 
 * Throw exception if we send / receive repair messages to incompatible nodes ( CASSANDRA - 13944 ) 
 * Replace usages of MessageDigest with Guava ' s Hasher ( CASSANDRA - 13291 ) 
 diff - - git a / src / java / org / apache / cassandra / auth / jmx / AuthorizationProxy . java b / src / java / org / apache / cassandra / auth / jmx / AuthorizationProxy . java 
 index 1d8f462 . . d9b63c6 100644 
 - - - a / src / java / org / apache / cassandra / auth / jmx / AuthorizationProxy . java 
 + + + b / src / java / org / apache / cassandra / auth / jmx / AuthorizationProxy . java 
 @ @ - 23 , 8 + 23 , 9 @ @ import java . security . AccessControlContext ; 
 import java . security . AccessController ; 
 import java . security . Principal ; 
 import java . util . Set ; 
 + import java . util . function . BooleanSupplier ; 
 import java . util . function . Function ; 
 - import java . util . function . Supplier ; 
 + import java . util . function . Predicate ; 
 import java . util . stream . Collectors ; 
 import javax . management . MBeanServer ; 
 import javax . management . MalformedObjectNameException ; 
 @ @ - 110 , 7 + 111 , 7 @ @ public class AuthorizationProxy implements InvocationHandler 
 Used to check whether the Role associated with the authenticated Subject has superuser 
 status . By default , just delegates to Roles : : hasSuperuserStatus , but can be overridden for testing . 
 * / 
 - protected Function < RoleResource , Boolean > isSuperuser = Roles : : hasSuperuserStatus ; 
 + protected Predicate < RoleResource > isSuperuser = Roles : : hasSuperuserStatus ; 
 
 / * 
 Used to retrieve the set of all permissions granted to a given role . By default , this fetches 
 @ @ - 123 , 7 + 124 , 7 @ @ public class AuthorizationProxy implements InvocationHandler 
 Used to decide whether authorization is enabled or not , usually this depends on the configured 
 IAuthorizer , but can be overridden for testing . 
 * / 
 - protected Supplier < Boolean > isAuthzRequired = ( ) - > DatabaseDescriptor . getAuthorizer ( ) . requireAuthorization ( ) ; 
 + protected BooleanSupplier isAuthzRequired = ( ) - > DatabaseDescriptor . getAuthorizer ( ) . requireAuthorization ( ) ; 
 
 / * 
 Used to find matching MBeans when the invocation target is a pattern type ObjectName . 
 @ @ - 135 , 7 + 136 , 7 @ @ public class AuthorizationProxy implements InvocationHandler 
 Used to determine whether auth setup has completed so we know whether the expect the IAuthorizer 
 to be ready . Can be overridden for testing . 
 * / 
 - protected Supplier < Boolean > isAuthSetupComplete = ( ) - > StorageService . instance . isAuthSetupComplete ( ) ; 
 + protected BooleanSupplier isAuthSetupComplete = ( ) - > StorageService . instance . isAuthSetupComplete ( ) ; 
 
 @ Override 
 public Object invoke ( Object proxy , Method method , Object [ ] args ) 
 @ @ - 188 , 14 + 189 , 14 @ @ public class AuthorizationProxy implements InvocationHandler 
 methodName , 
 subject = = null ? " " : subject . toString ( ) . replaceAll ( " \ \ n " , " " ) ) ; 
 
 - if ( ! isAuthSetupComplete . get ( ) ) 
 + if ( ! isAuthSetupComplete . getAsBoolean ( ) ) 
 { 
 logger . trace ( " Auth setup is not complete , refusing access " ) ; 
 return false ; 
 } 
 
 / / Permissive authorization is enabled 
 - if ( ! isAuthzRequired . get ( ) ) 
 + if ( ! isAuthzRequired . getAsBoolean ( ) ) 
 return true ; 
 
 / / Allow operations performed locally on behalf of the connector server itself 
 @ @ - 220 , 7 + 221 , 7 @ @ public class AuthorizationProxy implements InvocationHandler 
 / / might choose to associate with the Subject following successful authentication 
 RoleResource userResource = RoleResource . role ( principals . iterator ( ) . next ( ) . getName ( ) ) ; 
 / / A role with superuser status can do anything 
 - if ( isSuperuser . apply ( userResource ) ) 
 + if ( isSuperuser . test ( userResource ) ) 
 return true ; 
 
 / / The method being invoked may be a method on an MBean , or it could belong 
 diff - - git a / src / java / org / apache / cassandra / db / Directories . java b / src / java / org / apache / cassandra / db / Directories . java 
 index b637779 . . 88d909d 100644 
 - - - a / src / java / org / apache / cassandra / db / Directories . java 
 + + + b / src / java / org / apache / cassandra / db / Directories . java 
 @ @ - 25 , 8 + 25 , 7 @ @ import java . nio . file . Files ; 
 import java . nio . file . Path ; 
 import java . util . * ; 
 import java . util . concurrent . ThreadLocalRandom ; 
 - import java . util . function . BiFunction ; 
 - 
 + import java . util . function . BiPredicate ; 
 import com . google . common . annotations . VisibleForTesting ; 
 import com . google . common . collect . ImmutableMap ; 
 import com . google . common . collect . Iterables ; 
 @ @ - 733 , 7 + 732 , 7 @ @ public class Directories 
 filtered = true ; 
 } 
 
 - private BiFunction < File , FileType , Boolean > getFilter ( ) 
 + private BiPredicate < File , FileType > getFilter ( ) 
 { 
 / / This function always return false since it adds to the components map 
 return ( file , type ) - > 
 diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java 
 index feaee7c . . 1d74c16 100644 
 - - - a / src / java / org / apache / cassandra / db / ReadCommand . java 
 + + + b / src / java / org / apache / cassandra / db / ReadCommand . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 package org . apache . cassandra . db ; 
 
 import java . io . IOException ; 
 + import java . util . function . LongPredicate ; 
 import java . util . function . Predicate ; 
 
 import javax . annotation . Nullable ; 
 @ @ - 567 , 7 + 568 , 7 @ @ public abstract class ReadCommand extends MonitorableImpl implements ReadQuery 
 iterator . metadata ( ) . enforceStrictLiveness ( ) ) ; 
 } 
 
 - protected Predicate < Long > getPurgeEvaluator ( ) 
 + protected LongPredicate getPurgeEvaluator ( ) 
 { 
 return time - > true ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionController . java b / src / java / org / apache / cassandra / db / compaction / CompactionController . java 
 index 84aac09 . . 32ce67a 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionController . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionController . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 package org . apache . cassandra . db . compaction ; 
 
 import java . util . * ; 
 + import java . util . function . LongPredicate ; 
 import java . util . function . Predicate ; 
 
 import org . apache . cassandra . config . Config ; 
 @ @ - 256 , 7 + 257 , 7 @ @ public class CompactionController implements AutoCloseable 
 * containing his partition and not participating in the compaction . This means there isn ' t any data in those 
 * sstables that might still need to be suppressed by a tombstone at this timestamp . 
 * / 
 - public Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) 
 + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) 
 { 
 if ( NEVER _ PURGE _ TOMBSTONES | | ! compactingRepaired ( ) ) 
 return time - > false ; 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionIterator . java b / src / java / org / apache / cassandra / db / compaction / CompactionIterator . java 
 index a6161f2 . . dfbb6cc 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionIterator . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionIterator . java 
 @ @ - 18 , 7 + 18 , 7 @ @ 
 package org . apache . cassandra . db . compaction ; 
 
 import java . util . * ; 
 - import java . util . function . Predicate ; 
 + import java . util . function . LongPredicate ; 
 
 import com . google . common . collect . Ordering ; 
 
 @ @ - 260 , 7 + 260 , 7 @ @ public class CompactionIterator extends CompactionInfo . Holder implements Unfilte 
 private final CompactionController controller ; 
 
 private DecoratedKey currentKey ; 
 - private Predicate < Long > purgeEvaluator ; 
 + private LongPredicate purgeEvaluator ; 
 
 private long compactedUnfiltered ; 
 
 @ @ - 300 , 7 + 300 , 7 @ @ public class CompactionIterator extends CompactionInfo . Holder implements Unfilte 
 * This is computed lazily on demand as we only need this if there is tombstones and this a bit expensive 
 * ( see # 8914 ) . 
 * / 
 - protected Predicate < Long > getPurgeEvaluator ( ) 
 + protected LongPredicate getPurgeEvaluator ( ) 
 { 
 if ( purgeEvaluator = = null ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index 06fbef2 . . 739810b 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import java . io . IOException ; 
 import java . lang . management . ManagementFactory ; 
 import java . util . * ; 
 import java . util . concurrent . * ; 
 + import java . util . function . LongPredicate ; 
 import java . util . stream . Collectors ; 
 import javax . management . MBeanServer ; 
 import javax . management . ObjectName ; 
 @ @ - 1702 , 7 + 1703 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 } 
 
 @ Override 
 - public java . util . function . Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) 
 + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) 
 { 
 / * 
 * The main reason we always purge is that including gcable tombstone would mean that the 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / SSTableSplitter . java b / src / java / org / apache / cassandra / db / compaction / SSTableSplitter . java 
 index 924e29c . . e9ae429 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / SSTableSplitter . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / SSTableSplitter . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 package org . apache . cassandra . db . compaction ; 
 
 import java . util . * ; 
 + import java . util . function . LongPredicate ; 
 import java . util . function . Predicate ; 
 
 import org . apache . cassandra . db . * ; 
 @ @ - 98 , 7 + 99 , 7 @ @ public class SSTableSplitter 
 } 
 
 @ Override 
 - public Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) 
 + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) 
 { 
 return time - > false ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / Upgrader . java b / src / java / org / apache / cassandra / db / compaction / Upgrader . java 
 index 5a60ddd . . 80453ef 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / Upgrader . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / Upgrader . java 
 @ @ - 19 , 6 + 19 , 7 @ @ package org . apache . cassandra . db . compaction ; 
 
 import java . io . File ; 
 import java . util . * ; 
 + import java . util . function . LongPredicate ; 
 import java . util . function . Predicate ; 
 
 import com . google . common . base . Throwables ; 
 @ @ - 116 , 7 + 117 , 7 @ @ public class Upgrader 
 } 
 
 @ Override 
 - public Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) 
 + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) 
 { 
 return time - > false ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / Verifier . java b / src / java / org / apache / cassandra / db / compaction / Verifier . java 
 index 22cf813 . . af00915 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / Verifier . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / Verifier . java 
 @ @ - 45 , 6 + 45 , 7 @ @ import java . io . IOError ; 
 import java . io . IOException ; 
 import java . nio . ByteBuffer ; 
 import java . util . * ; 
 + import java . util . function . LongPredicate ; 
 import java . util . function . Predicate ; 
 
 public class Verifier implements Closeable 
 @ @ - 302 , 7 + 303 , 7 @ @ public class Verifier implements Closeable 
 } 
 
 @ Override 
 - public Predicate < Long > getPurgeEvaluator ( DecoratedKey key ) 
 + public LongPredicate getPurgeEvaluator ( DecoratedKey key ) 
 { 
 return time - > false ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / lifecycle / LifecycleTransaction . java b / src / java / org / apache / cassandra / db / lifecycle / LifecycleTransaction . java 
 index 2bf81a9 . . 2f17329 100644 
 - - - a / src / java / org / apache / cassandra / db / lifecycle / LifecycleTransaction . java 
 + + + b / src / java / org / apache / cassandra / db / lifecycle / LifecycleTransaction . java 
 @ @ - 21 , 7 + 21 , 7 @ @ import java . io . File ; 
 import java . nio . file . Path ; 
 import java . util . * ; 
 import java . util . function . BiFunction ; 
 - 
 + import java . util . function . BiPredicate ; 
 import com . google . common . annotations . VisibleForTesting ; 
 import com . google . common . base . Predicate ; 
 import com . google . common . collect . * ; 
 @ @ - 556 , 7 + 556 , 7 @ @ public class LifecycleTransaction extends Transactional . AbstractTransactional 
 * @ param filter - A function that receives each file and its type , it should return true to have the file returned 
 * @ return - the list of files that were scanned and for which the filter returned true 
 * / 
 - public static List < File > getFiles ( Path folder , BiFunction < File , Directories . FileType , Boolean > filter , Directories . OnTxnErr onTxnErr ) 
 + public static List < File > getFiles ( Path folder , BiPredicate < File , Directories . FileType > filter , Directories . OnTxnErr onTxnErr ) 
 { 
 return new LogAwareFileLister ( folder , filter , onTxnErr ) . list ( ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / lifecycle / LogAwareFileLister . java b / src / java / org / apache / cassandra / db / lifecycle / LogAwareFileLister . java 
 index 212076d . . 254966e 100644 
 - - - a / src / java / org / apache / cassandra / db / lifecycle / LogAwareFileLister . java 
 + + + b / src / java / org / apache / cassandra / db / lifecycle / LogAwareFileLister . java 
 @ @ - 26 , 7 + 26 , 7 @ @ import java . nio . file . DirectoryStream ; 
 import java . nio . file . Files ; 
 import java . nio . file . Path ; 
 import java . util . * ; 
 - import java . util . function . BiFunction ; 
 + import java . util . function . BiPredicate ; 
 import java . util . stream . Collectors ; 
 import java . util . stream . StreamSupport ; 
 
 @ @ - 50 , 7 + 50 , 7 @ @ final class LogAwareFileLister 
 private final Path folder ; 
 
 / / The filter determines which files the client wants returned 
 - private final BiFunction < File , FileType , Boolean > filter ; / / file , file type 
 + private final BiPredicate < File , FileType > filter ; / / file , file type 
 
 / / The behavior when we fail to list files 
 private final OnTxnErr onTxnErr ; 
 @ @ - 59 , 7 + 59 , 7 @ @ final class LogAwareFileLister 
 NavigableMap < File , Directories . FileType > files = new TreeMap < > ( ) ; 
 
 @ VisibleForTesting 
 - LogAwareFileLister ( Path folder , BiFunction < File , FileType , Boolean > filter , OnTxnErr onTxnErr ) 
 + LogAwareFileLister ( Path folder , BiPredicate < File , FileType > filter , OnTxnErr onTxnErr ) 
 { 
 this . folder = folder ; 
 this . filter = filter ; 
 @ @ - 96 , 7 + 96 , 7 @ @ final class LogAwareFileLister 
 
 / / Finally we apply the user filter before returning our result 
 return files . entrySet ( ) . stream ( ) 
 - . filter ( ( e ) - > filter . apply ( e . getKey ( ) , e . getValue ( ) ) ) 
 + . filter ( ( e ) - > filter . test ( e . getKey ( ) , e . getValue ( ) ) ) 
 . map ( Map . Entry : : getKey ) 
 . collect ( Collectors . toList ( ) ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / partitions / PurgeFunction . java b / src / java / org / apache / cassandra / db / partitions / PurgeFunction . java 
 index 83d4d38 . . 19289d4 100644 
 - - - a / src / java / org / apache / cassandra / db / partitions / PurgeFunction . java 
 + + + b / src / java / org / apache / cassandra / db / partitions / PurgeFunction . java 
 @ @ - 17 , 6 + 17 , 7 @ @ 
 * / 
 package org . apache . cassandra . db . partitions ; 
 
 + import java . util . function . LongPredicate ; 
 import java . util . function . Predicate ; 
 
 import org . apache . cassandra . db . * ; 
 @ @ - 42 , 7 + 43 , 7 @ @ public abstract class PurgeFunction extends Transformation < UnfilteredRowIterator 
 this . enforceStrictLiveness = enforceStrictLiveness ; 
 } 
 
 - protected abstract Predicate < Long > getPurgeEvaluator ( ) ; 
 + protected abstract LongPredicate getPurgeEvaluator ( ) ; 
 
 / / Called at the beginning of each new partition 
 protected void onNewPartition ( DecoratedKey partitionKey ) 
 diff - - git a / src / java / org / apache / cassandra / hints / HintsDispatchExecutor . java b / src / java / org / apache / cassandra / hints / HintsDispatchExecutor . java 
 index 0a96ae4 . . 58a3e6f 100644 
 - - - a / src / java / org / apache / cassandra / hints / HintsDispatchExecutor . java 
 + + + b / src / java / org / apache / cassandra / hints / HintsDispatchExecutor . java 
 @ @ - 24 , 7 + 24 , 7 @ @ import java . util . UUID ; 
 import java . util . concurrent . * ; 
 import java . util . concurrent . atomic . AtomicBoolean ; 
 import java . util . function . BooleanSupplier ; 
 - import java . util . function . Function ; 
 + import java . util . function . Predicate ; 
 import java . util . function . Supplier ; 
 
 import com . google . common . util . concurrent . RateLimiter ; 
 @ @ - 50 , 10 + 50 , 10 @ @ final class HintsDispatchExecutor 
 private final File hintsDirectory ; 
 private final ExecutorService executor ; 
 private final AtomicBoolean isPaused ; 
 - private final Function < InetAddress , Boolean > isAlive ; 
 + private final Predicate < InetAddress > isAlive ; 
 private final Map < UUID , Future > scheduledDispatches ; 
 
 - HintsDispatchExecutor ( File hintsDirectory , int maxThreads , AtomicBoolean isPaused , Function < InetAddress , Boolean > isAlive ) 
 + HintsDispatchExecutor ( File hintsDirectory , int maxThreads , AtomicBoolean isPaused , Predicate < InetAddress > isAlive ) 
 { 
 this . hintsDirectory = hintsDirectory ; 
 this . isPaused = isPaused ; 
 @ @ - 271 , 7 + 271 , 7 @ @ final class HintsDispatchExecutor 
 File file = new File ( hintsDirectory , descriptor . fileName ( ) ) ; 
 InputPosition offset = store . getDispatchOffset ( descriptor ) ; 
 
 - BooleanSupplier shouldAbort = ( ) - > ! isAlive . apply ( address ) | | isPaused . get ( ) ; 
 + BooleanSupplier shouldAbort = ( ) - > ! isAlive . test ( address ) | | isPaused . get ( ) ; 
 try ( HintsDispatcher dispatcher = HintsDispatcher . create ( file , rateLimiter , address , descriptor . hostId , shouldAbort ) ) 
 { 
 if ( offset ! = null ) 
 diff - - git a / src / java / org / apache / cassandra / streaming / compress / CompressedInputStream . java b / src / java / org / apache / cassandra / streaming / compress / CompressedInputStream . java 
 index dd0ba80 . . da63403 100644 
 - - - a / src / java / org / apache / cassandra / streaming / compress / CompressedInputStream . java 
 + + + b / src / java / org / apache / cassandra / streaming / compress / CompressedInputStream . java 
 @ @ - 25 , 7 + 25 , 7 @ @ import java . util . Iterator ; 
 import java . util . concurrent . ArrayBlockingQueue ; 
 import java . util . concurrent . BlockingQueue ; 
 import java . util . concurrent . ThreadLocalRandom ; 
 - import java . util . function . Supplier ; 
 + import java . util . function . DoubleSupplier ; 
 
 import com . google . common . collect . Iterators ; 
 import org . slf4j . Logger ; 
 @ @ - 52 , 7 + 52 , 7 @ @ public class CompressedInputStream extends RebufferingInputStream implements Aut 
 private final CompressionInfo info ; 
 / / chunk buffer 
 private final BlockingQueue < ByteBuffer > dataBuffer ; 
 - private final Supplier < Double > crcCheckChanceSupplier ; 
 + private final DoubleSupplier crcCheckChanceSupplier ; 
 
 / * * 
 * The base offset of the current { @ link # buffer } from the beginning of the stream . 
 @ @ - 85 , 7 + 85 , 7 @ @ public class CompressedInputStream extends RebufferingInputStream implements Aut 
 * @ param source Input source to read compressed data from 
 * @ param info Compression info 
 * / 
 - public CompressedInputStream ( DataInputPlus source , CompressionInfo info , ChecksumType checksumType , Supplier < Double > crcCheckChanceSupplier ) 
 + public CompressedInputStream ( DataInputPlus source , CompressionInfo info , ChecksumType checksumType , DoubleSupplier crcCheckChanceSupplier ) 
 { 
 super ( ByteBuffer . allocateDirect ( info . parameters . chunkLength ( ) ) ) ; 
 buffer . limit ( buffer . position ( ) ) ; / / force the buffer to appear " consumed " so that it triggers reBuffer on the first read 
 @ @ - 174 , 7 + 174 , 7 @ @ public class CompressedInputStream extends RebufferingInputStream implements Aut 
 totalCompressedBytesRead + = length ; 
 
 / / validate crc randomly 
 - double crcCheckChance = this . crcCheckChanceSupplier . get ( ) ; 
 + double crcCheckChance = this . crcCheckChanceSupplier . getAsDouble ( ) ; 
 if ( crcCheckChance > 0d & & crcCheckChance > ThreadLocalRandom . current ( ) . nextDouble ( ) ) 
 { 
 ByteBuffer crcBuf = compressed . duplicate ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java 
 index 1ff2cb6 . . 5a8a0bc 100755 
 - - - a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java 
 + + + b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java 
 @ @ - 387 , 7 + 387 , 7 @ @ public class SSTableMetadataViewer 
 offset , 
 Util . wrapQuiet ( toDateString ( offset , TimeUnit . SECONDS ) , 
 color ) ) , 
 - Object : : toString ) ; 
 + String : : valueOf ) ; 
 estDropped . printHistogram ( out , color , unicode ) ; 
 field ( " Partition Size " , " " ) ; 
 TermHistogram rowSize = new TermHistogram ( stats . estimatedPartitionSize , 
 @ @ - 395 , 13 + 395 , 13 @ @ public class SSTableMetadataViewer 
 offset - > String . format ( " % d % s " , 
 offset , 
 Util . wrapQuiet ( toByteString ( offset ) , color ) ) , 
 - Object : : toString ) ; 
 + String : : valueOf ) ; 
 rowSize . printHistogram ( out , color , unicode ) ; 
 field ( " Column Count " , " " ) ; 
 TermHistogram cellCount = new TermHistogram ( stats . estimatedColumnCount , 
 " Columns " , 
 - Object : : toString , 
 - Object : : toString ) ; 
 + String : : valueOf , 
 + String : : valueOf ) ; 
 cellCount . printHistogram ( out , color , unicode ) ; 
 } 
 if ( compaction ! = null ) 
 diff - - git a / src / java / org / apache / cassandra / tools / StandaloneSSTableUtil . java b / src / java / org / apache / cassandra / tools / StandaloneSSTableUtil . java 
 index adfe7e0 . . 3a6be63 100644 
 - - - a / src / java / org / apache / cassandra / tools / StandaloneSSTableUtil . java 
 + + + b / src / java / org / apache / cassandra / tools / StandaloneSSTableUtil . java 
 @ @ - 29 , 6 + 29 , 7 @ @ import org . apache . commons . cli . * ; 
 import java . io . File ; 
 import java . io . IOException ; 
 import java . util . function . BiFunction ; 
 + import java . util . function . BiPredicate ; 
 
 import static org . apache . cassandra . tools . BulkLoader . CmdLineOptions ; 
 
 @ @ - 92 , 7 + 93 , 7 @ @ public class StandaloneSSTableUtil 
 } 
 } 
 
 - private static BiFunction < File , Directories . FileType , Boolean > getFilter ( Options options ) 
 + private static BiPredicate < File , Directories . FileType > getFilter ( Options options ) 
 { 
 return ( file , type ) - > 
 { 
 diff - - git a / src / java / org / apache / cassandra / tools / Util . java b / src / java / org / apache / cassandra / tools / Util . java 
 index 7a6f698 . . db664aa 100644 
 - - - a / src / java / org / apache / cassandra / tools / Util . java 
 + + + b / src / java / org / apache / cassandra / tools / Util . java 
 @ @ - 30 , 7 + 30 , 7 @ @ import java . util . Spliterator ; 
 import java . util . Spliterators ; 
 import java . util . TreeMap ; 
 import java . util . Map . Entry ; 
 - import java . util . function . Function ; 
 + import java . util . function . LongFunction ; 
 import java . util . stream . Stream ; 
 import java . util . stream . StreamSupport ; 
 
 @ @ - 129 , 14 + 129 , 14 @ @ public final class Util 
 int maxCountLength = 5 ; 
 int maxOffsetLength = 5 ; 
 Map < ? extends Number , Long > histogram ; 
 - Function < Long , String > offsetName ; 
 - Function < Long , String > countName ; 
 + LongFunction < String > offsetName ; 
 + LongFunction < String > countName ; 
 String title ; 
 
 public TermHistogram ( Map < ? extends Number , Long > histogram , 
 String title , 
 - Function < Long , String > offsetName , 
 - Function < Long , String > countName ) 
 + LongFunction < String > offsetName , 
 + LongFunction < String > countName ) 
 { 
 this . offsetName = offsetName ; 
 this . countName = countName ; 
 @ @ - 156 , 8 + 156 , 8 @ @ public final class Util 
 
 public TermHistogram ( TombstoneHistogram histogram , 
 String title , 
 - Function < Long , String > offsetName , 
 - Function < Long , String > countName ) 
 + LongFunction < String > offsetName , 
 + LongFunction < String > countName ) 
 { 
 this ( new TreeMap < Number , Long > ( ) 
 { 
 @ @ - 171 , 8 + 171 , 8 @ @ public final class Util 
 
 public TermHistogram ( EstimatedHistogram histogram , 
 String title , 
 - Function < Long , String > offsetName , 
 - Function < Long , String > countName ) 
 + LongFunction < String > offsetName , 
 + LongFunction < String > countName ) 
 { 
 this ( new TreeMap < Number , Long > ( ) 
 { 
 diff - - git a / test / microbench / org / apache / cassandra / test / microbench / AutoBoxingBench . java b / test / microbench / org / apache / cassandra / test / microbench / AutoBoxingBench . java 
 new file mode 100644 
 index 0000000 . . fd6df39 
 - - - / dev / null 
 + + + b / test / microbench / org / apache / cassandra / test / microbench / AutoBoxingBench . java 
 @ @ - 0 , 0 + 1 , 74 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package org . apache . cassandra . test . microbench ; 
 + 
 + import java . util . concurrent . TimeUnit ; 
 + import java . util . function . BooleanSupplier ; 
 + import java . util . function . IntSupplier ; 
 + import java . util . function . Supplier ; 
 + 
 + import org . openjdk . jmh . annotations . Benchmark ; 
 + import org . openjdk . jmh . annotations . BenchmarkMode ; 
 + import org . openjdk . jmh . annotations . Fork ; 
 + import org . openjdk . jmh . annotations . Measurement ; 
 + import org . openjdk . jmh . annotations . Mode ; 
 + import org . openjdk . jmh . annotations . OutputTimeUnit ; 
 + import org . openjdk . jmh . annotations . Scope ; 
 + import org . openjdk . jmh . annotations . State ; 
 + import org . openjdk . jmh . annotations . Threads ; 
 + import org . openjdk . jmh . annotations . Warmup ; 
 + 
 + @ BenchmarkMode ( Mode . SampleTime ) 
 + @ OutputTimeUnit ( TimeUnit . NANOSECONDS ) 
 + @ Warmup ( iterations = 3 , time = 1 ) 
 + @ Measurement ( iterations = 6 , time = 20 ) 
 + @ Fork ( value = 1 , jvmArgsAppend = { " - Xmx256M " , " - Djmh . executor = CUSTOM " , " - Djmh . executor . class = org . apache . cassandra . test . microbench . FastThreadExecutor " } ) 
 + @ Threads ( 4 ) / / make sure this matches the number of _ physical _ cores _ 
 + @ State ( Scope . Benchmark ) 
 + public class AutoBoxingBench 
 + { 
 + 
 + @ Benchmark 
 + public boolean booleanFromBooleanSupplier ( ) 
 + { 
 + BooleanSupplier bs = ( ) - > true ; 
 + return bs . getAsBoolean ( ) ; 
 + } 
 + 
 + @ Benchmark 
 + public boolean booleanFromPlainSupplier ( ) 
 + { 
 + Supplier < Boolean > bs = ( ) - > true ; 
 + return bs . get ( ) ; 
 + } 
 + 
 + @ Benchmark 
 + public int intFromIntSupplier ( ) 
 + { 
 + IntSupplier bs = ( ) - > 42 ; 
 + return bs . getAsInt ( ) ; 
 + } 
 + 
 + @ Benchmark 
 + public int intFromPlainSupplier ( ) 
 + { 
 + Supplier < Integer > bs = ( ) - > 42 ; 
 + return bs . get ( ) ; 
 + } 
 + } 
 diff - - git a / test / unit / org / apache / cassandra / auth / jmx / AuthorizationProxyTest . java b / test / unit / org / apache / cassandra / auth / jmx / AuthorizationProxyTest . java 
 index 84282e0 . . 924d467 100644 
 - - - a / test / unit / org / apache / cassandra / auth / jmx / AuthorizationProxyTest . java 
 + + + b / test / unit / org / apache / cassandra / auth / jmx / AuthorizationProxyTest . java 
 @ @ - 20 , 8 + 20 , 9 @ @ package org . apache . cassandra . auth . jmx ; 
 
 import java . util . * ; 
 import java . util . concurrent . atomic . AtomicBoolean ; 
 + import java . util . function . BooleanSupplier ; 
 import java . util . function . Function ; 
 - import java . util . function . Supplier ; 
 + import java . util . function . Predicate ; 
 import java . util . stream . Collectors ; 
 import javax . management . MalformedObjectNameException ; 
 import javax . management . ObjectName ; 
 @ @ - 495 , 9 + 496 , 9 @ @ public class AuthorizationProxyTest 
 { 
 Function < RoleResource , Set < PermissionDetails > > getPermissions ; 
 Function < ObjectName , Set < ObjectName > > queryNames ; 
 - Function < RoleResource , Boolean > isSuperuser ; 
 - Supplier < Boolean > isAuthzRequired ; 
 - Supplier < Boolean > isAuthSetupComplete = ( ) - > true ; 
 + Predicate < RoleResource > isSuperuser ; 
 + BooleanSupplier isAuthzRequired ; 
 + BooleanSupplier isAuthSetupComplete = ( ) - > true ; 
 
 AuthorizationProxy build ( ) 
 { 
 @ @ - 532 , 19 + 533 , 19 @ @ public class AuthorizationProxyTest 
 return this ; 
 } 
 
 - ProxyBuilder isSuperuser ( Function < RoleResource , Boolean > f ) 
 + ProxyBuilder isSuperuser ( Predicate < RoleResource > f ) 
 { 
 isSuperuser = f ; 
 return this ; 
 } 
 
 - ProxyBuilder isAuthzRequired ( Supplier < Boolean > s ) 
 + ProxyBuilder isAuthzRequired ( BooleanSupplier s ) 
 { 
 isAuthzRequired = s ; 
 return this ; 
 } 
 
 - ProxyBuilder isAuthSetupComplete ( Supplier < Boolean > s ) 
 + ProxyBuilder isAuthSetupComplete ( BooleanSupplier s ) 
 { 
 isAuthSetupComplete = s ; 
 return this ; 
 @ @ - 562 , 17 + 563 , 17 @ @ public class AuthorizationProxyTest 
 this . queryNames = f ; 
 } 
 
 - void setIsSuperuser ( Function < RoleResource , Boolean > f ) 
 + void setIsSuperuser ( Predicate < RoleResource > f ) 
 { 
 this . isSuperuser = f ; 
 } 
 
 - void setIsAuthzRequired ( Supplier < Boolean > s ) 
 + void setIsAuthzRequired ( BooleanSupplier s ) 
 { 
 this . isAuthzRequired = s ; 
 } 
 
 - void setIsAuthSetupComplete ( Supplier < Boolean > s ) 
 + void setIsAuthSetupComplete ( BooleanSupplier s ) 
 { 
 this . isAuthSetupComplete = s ; 
 } 
 diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionControllerTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionControllerTest . java 
 index 40693fa . . 0ab714a 100644 
 - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionControllerTest . java 
 + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionControllerTest . java 
 @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . db . compaction ; 
 
 import java . nio . ByteBuffer ; 
 import java . util . Set ; 
 + import java . util . function . LongPredicate ; 
 import java . util . function . Predicate ; 
 
 import com . google . common . collect . Sets ; 
 @ @ - 203 , 7 + 204 , 7 @ @ public class CompactionControllerTest extends SchemaLoader 
 . applyUnsafe ( ) ; 
 } 
 
 - private void assertPurgeBoundary ( Predicate < Long > evaluator , long boundary ) 
 + private void assertPurgeBoundary ( LongPredicate evaluator , long boundary ) 
 { 
 assertFalse ( evaluator . test ( boundary ) ) ; 
 assertTrue ( evaluator . test ( boundary - 1 ) ) ; 
 diff - - git a / test / unit / org / apache / cassandra / db / rows / UnfilteredRowIteratorsMergeTest . java b / test / unit / org / apache / cassandra / db / rows / UnfilteredRowIteratorsMergeTest . java 
 index 8c99057 . . d6a968e 100644 
 - - - a / test / unit / org / apache / cassandra / db / rows / UnfilteredRowIteratorsMergeTest . java 
 + + + b / test / unit / org / apache / cassandra / db / rows / UnfilteredRowIteratorsMergeTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ package org . apache . cassandra . db . rows ; 
 
 import java . nio . ByteBuffer ; 
 import java . util . * ; 
 - import java . util . function . Function ; 
 + import java . util . function . IntUnaryOperator ; 
 import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 import java . util . stream . Collectors ; 
 @ @ - 112 , 7 + 112 , 7 @ @ public class UnfilteredRowIteratorsMergeTest 
 System . out . println ( " \ nSeed " + seed ) ; 
 
 Random r = new Random ( seed ) ; 
 - List < Function < Integer , Integer > > timeGenerators = ImmutableList . of ( 
 + List < IntUnaryOperator > timeGenerators = ImmutableList . of ( 
 x - > - 1 , 
 x - > DEL _ RANGE , 
 x - > r . nextInt ( DEL _ RANGE ) 
 @ @ - 169 , 7 + 169 , 7 @ @ public class UnfilteredRowIteratorsMergeTest 
 } 
 
 @ SuppressWarnings ( " unused " ) 
 - private List < Unfiltered > generateSource ( Random r , Function < Integer , Integer > timeGenerator ) 
 + private List < Unfiltered > generateSource ( Random r , IntUnaryOperator timeGenerator ) 
 { 
 int [ ] positions = new int [ ITEMS + 1 ] ; 
 for ( int i = 0 ; i < ITEMS ; + + i ) 
 @ @ - 387 , 10 + 387 , 10 @ @ public class UnfilteredRowIteratorsMergeTest 
 return Clustering . make ( Int32Type . instance . decompose ( i ) ) ; 
 } 
 
 - static Row emptyRowAt ( int pos , Function < Integer , Integer > timeGenerator ) 
 + static Row emptyRowAt ( int pos , IntUnaryOperator timeGenerator ) 
 { 
 final Clustering clustering = clusteringFor ( pos ) ; 
 - final LivenessInfo live = LivenessInfo . create ( timeGenerator . apply ( pos ) , nowInSec ) ; 
 + final LivenessInfo live = LivenessInfo . create ( timeGenerator . applyAsInt ( pos ) , nowInSec ) ; 
 return BTreeRow . noCellLiveRow ( clustering , live ) ; 
 } 
 
 diff - - git a / test / unit / org / apache / cassandra / db / rows / UnfilteredRowsGenerator . java b / test / unit / org / apache / cassandra / db / rows / UnfilteredRowsGenerator . java 
 index 1f8793a . . 71b28e8 100644 
 - - - a / test / unit / org / apache / cassandra / db / rows / UnfilteredRowsGenerator . java 
 + + + b / test / unit / org / apache / cassandra / db / rows / UnfilteredRowsGenerator . java 
 @ @ - 19 , 7 + 19 , 7 @ @ package org . apache . cassandra . db . rows ; 
 
 import java . nio . ByteBuffer ; 
 import java . util . * ; 
 - import java . util . function . Function ; 
 + import java . util . function . IntUnaryOperator ; 
 import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 
 @ @ - 111 , 7 + 111 , 7 @ @ public class UnfilteredRowsGenerator 
 } 
 } 
 
 - public List < Unfiltered > generateSource ( Random r , int items , int range , int del _ range , Function < Integer , Integer > timeGenerator ) 
 + public List < Unfiltered > generateSource ( Random r , int items , int range , int del _ range , IntUnaryOperator timeGenerator ) 
 { 
 int [ ] positions = new int [ items + 1 ] ; 
 for ( int i = 0 ; i < items ; + + i ) 
 @ @ - 219 , 10 + 219 , 10 @ @ public class UnfilteredRowsGenerator 
 return out ; 
 } 
 
 - static Row emptyRowAt ( int pos , Function < Integer , Integer > timeGenerator ) 
 + static Row emptyRowAt ( int pos , IntUnaryOperator timeGenerator ) 
 { 
 final Clustering clustering = clusteringFor ( pos ) ; 
 - final LivenessInfo live = LivenessInfo . create ( timeGenerator . apply ( pos ) , UnfilteredRowIteratorsMergeTest . nowInSec ) ; 
 + final LivenessInfo live = LivenessInfo . create ( timeGenerator . applyAsInt ( pos ) , UnfilteredRowIteratorsMergeTest . nowInSec ) ; 
 return BTreeRow . noCellLiveRow ( clustering , live ) ; 
 } 
 
 diff - - git a / test / unit / org / apache / cassandra / service / NativeTransportServiceTest . java b / test / unit / org / apache / cassandra / service / NativeTransportServiceTest . java 
 index 04cc9dd . . 334a9af 100644 
 - - - a / test / unit / org / apache / cassandra / service / NativeTransportServiceTest . java 
 + + + b / test / unit / org / apache / cassandra / service / NativeTransportServiceTest . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 package org . apache . cassandra . service ; 
 
 import java . util . Arrays ; 
 + import java . util . function . BooleanSupplier ; 
 import java . util . function . Consumer ; 
 import java . util . function . Supplier ; 
 import java . util . stream . Collectors ; 
 @ @ - 84 , 12 + 85 , 12 @ @ public class NativeTransportServiceTest 
 public void testDestroy ( ) 
 { 
 withService ( ( NativeTransportService service ) - > { 
 - Supplier < Boolean > allTerminated = ( ) - > 
 + BooleanSupplier allTerminated = ( ) - > 
 service . getWorkerGroup ( ) . isShutdown ( ) & & service . getWorkerGroup ( ) . isTerminated ( ) & & 
 service . getEventExecutor ( ) . isShutdown ( ) & & service . getEventExecutor ( ) . isTerminated ( ) ; 
 - assertFalse ( allTerminated . get ( ) ) ; 
 + assertFalse ( allTerminated . getAsBoolean ( ) ) ; 
 service . destroy ( ) ; 
 - assertTrue ( allTerminated . get ( ) ) ; 
 + assertTrue ( allTerminated . getAsBoolean ( ) ) ; 
 } ) ; 
 } 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cache / IMeasurableMemory . java b / src / java / org / apache / cassandra / cache / IMeasurableMemory . java 
 index 6b5f00e . . 16ca7c2 100644 
 - - - a / src / java / org / apache / cassandra / cache / IMeasurableMemory . java 
 + + + b / src / java / org / apache / cassandra / cache / IMeasurableMemory . java 
 @ @ - 1 , 4 + 1 , 25 @ @ 
 package org . apache . cassandra . cache ; 
 + / * 
 + * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , 
 + * software distributed under the License is distributed on an 
 + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + * KIND , either express or implied . See the License for the 
 + * specific language governing permissions and limitations 
 + * under the License . 
 + * 
 + * / 
 + 
 
 public interface IMeasurableMemory 
 { 
 diff - - git a / src / java / org / apache / cassandra / io / compress / CompressedThrottledReader . java b / src / java / org / apache / cassandra / io / compress / CompressedThrottledReader . java 
 index 1b7b7a4 . . 2c97a96 100644 
 - - - a / src / java / org / apache / cassandra / io / compress / CompressedThrottledReader . java 
 + + + b / src / java / org / apache / cassandra / io / compress / CompressedThrottledReader . java 
 @ @ - 1 , 4 + 1 , 25 @ @ 
 package org . apache . cassandra . io . compress ; 
 + / * 
 + * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , 
 + * software distributed under the License is distributed on an 
 + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + * KIND , either express or implied . See the License for the 
 + * specific language governing permissions and limitations 
 + * under the License . 
 + * 
 + * / 
 + 
 
 import java . io . File ; 
 import java . io . FileNotFoundException ; 
 diff - - git a / src / java / org / apache / cassandra / io / util / ThrottledReader . java b / src / java / org / apache / cassandra / io / util / ThrottledReader . java 
 index d67550a . . 667f8ec 100644 
 - - - a / src / java / org / apache / cassandra / io / util / ThrottledReader . java 
 + + + b / src / java / org / apache / cassandra / io / util / ThrottledReader . java 
 @ @ - 1 , 4 + 1 , 25 @ @ 
 package org . apache . cassandra . io . util ; 
 + / * 
 + * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , 
 + * software distributed under the License is distributed on an 
 + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + * KIND , either express or implied . See the License for the 
 + * specific language governing permissions and limitations 
 + * under the License . 
 + * 
 + * / 
 + 
 
 import java . io . File ; 
 import java . io . FileNotFoundException ; 
 diff - - git a / src / java / org / apache / cassandra / utils / ObjectSizes . java b / src / java / org / apache / cassandra / utils / ObjectSizes . java 
 index 6c28389 . . 66ec501 100644 
 - - - a / src / java / org / apache / cassandra / utils / ObjectSizes . java 
 + + + b / src / java / org / apache / cassandra / utils / ObjectSizes . java 
 @ @ - 1 , 4 + 1 , 25 @ @ 
 package org . apache . cassandra . utils ; 
 + / * 
 + * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , 
 + * software distributed under the License is distributed on an 
 + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + * KIND , either express or implied . See the License for the 
 + * specific language governing permissions and limitations 
 + * under the License . 
 + * 
 + * / 
 + 
 
 import java . lang . management . ManagementFactory ; 
 import java . lang . management . MemoryPoolMXBean ; 
 @ @ - 201 , 4 + 222 , 4 @ @ public class ObjectSizes 
 { 
 return meter . measureDeep ( pojo ) ; 
 } 
 - } 
 \ No newline at end of file 
 + } 
 diff - - git a / test / unit / org / apache / cassandra / cache / ObjectSizeTest . java b / test / unit / org / apache / cassandra / cache / ObjectSizeTest . java 
 index 4adf4f9 . . 6cafe25 100644 
 - - - a / test / unit / org / apache / cassandra / cache / ObjectSizeTest . java 
 + + + b / test / unit / org / apache / cassandra / cache / ObjectSizeTest . java 
 @ @ - 1 , 4 + 1 , 25 @ @ 
 package org . apache . cassandra . cache ; 
 + / * 
 + * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , 
 + * software distributed under the License is distributed on an 
 + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + * KIND , either express or implied . See the License for the 
 + * specific language governing permissions and limitations 
 + * under the License . 
 + * 
 + * / 
 + 
 
 import java . nio . ByteBuffer ; 
 import java . util . UUID ; 
 diff - - git a / test / unit / org / apache / cassandra / db / compaction / LegacyLeveledManifestTestHelper . java b / test / unit / org / apache / cassandra / db / compaction / LegacyLeveledManifestTestHelper . java 
 index 9ce60ea . . 4ee92fe 100644 
 - - - a / test / unit / org / apache / cassandra / db / compaction / LegacyLeveledManifestTestHelper . java 
 + + + b / test / unit / org / apache / cassandra / db / compaction / LegacyLeveledManifestTestHelper . java 
 @ @ - 1 , 4 + 1 , 25 @ @ 
 package org . apache . cassandra . db . compaction ; 
 + / * 
 + * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , 
 + * software distributed under the License is distributed on an 
 + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + * KIND , either express or implied . See the License for the 
 + * specific language governing permissions and limitations 
 + * under the License . 
 + * 
 + * / 
 + 
 
 
 import java . io . File ;
