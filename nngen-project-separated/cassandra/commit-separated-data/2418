BLEU SCORE: 0.03377156414337854

TEST MSG: cqlsh : Count only empty lines for a " Blank lines " warning .
GENERATED MSG: cqlsh should return a non - zero error code if a query fails

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 75e6759 . . c3145eb 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 8 , 6 + 8 , 7 @ @ <nl> * Add option to do more aggressive tombstone compactions ( CASSANDRA - 6563 ) <nl> * Don ' t try to compact already - compacting files in HHOM ( CASSANDRA - 7288 ) <nl> * Add authentication support to shuffle ( CASSANDRA - 6484 ) <nl> + * Cqlsh counts non - empty lines for " Blank lines " warning ( CASSANDRA - 7325 ) <nl> Merged from 1 . 2 : <nl> * Fix availability validation for LOCAL _ ONE CL ( CASSANDRA - 7319 ) <nl> <nl> diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index 75c4299 . . 0b8327d 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 726 , 7 + 726 , 7 @ @ class Shell ( cmd . Cmd ) : <nl> else : <nl> spaces = ' ' * len ( str ( self . current _ keyspace ) ) <nl> self . set _ prompt ( self . keyspace _ continue _ prompt % spaces ) <nl> - self . empty _ lines + = 1 <nl> + self . empty _ lines = self . empty _ lines + 1 if not self . lastcmd else 0 <nl> <nl> @ contextmanager <nl> def prepare _ loop ( self ) : <nl> @ @ - 752 , 9 + 752 , 11 @ @ class Shell ( cmd . Cmd ) : <nl> <nl> def get _ input _ line ( self , prompt = ' ' ) : <nl> if self . tty : <nl> - line = raw _ input ( prompt ) + ' \ n ' <nl> + self . lastcmd = raw _ input ( prompt ) <nl> + line = self . lastcmd + ' \ n ' <nl> else : <nl> - line = self . stdin . readline ( ) <nl> + self . lastcmd = self . stdin . readline ( ) <nl> + line = self . lastcmd <nl> if not len ( line ) : <nl> raise EOFError <nl> self . lineno + = 1
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 75e6759 . . c3145eb 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 8 , 6 + 8 , 7 @ @ 
 * Add option to do more aggressive tombstone compactions ( CASSANDRA - 6563 ) 
 * Don ' t try to compact already - compacting files in HHOM ( CASSANDRA - 7288 ) 
 * Add authentication support to shuffle ( CASSANDRA - 6484 ) 
 + * Cqlsh counts non - empty lines for " Blank lines " warning ( CASSANDRA - 7325 ) 
 Merged from 1 . 2 : 
 * Fix availability validation for LOCAL _ ONE CL ( CASSANDRA - 7319 ) 
 
 diff - - git a / bin / cqlsh b / bin / cqlsh 
 index 75c4299 . . 0b8327d 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 726 , 7 + 726 , 7 @ @ class Shell ( cmd . Cmd ) : 
 else : 
 spaces = ' ' * len ( str ( self . current _ keyspace ) ) 
 self . set _ prompt ( self . keyspace _ continue _ prompt % spaces ) 
 - self . empty _ lines + = 1 
 + self . empty _ lines = self . empty _ lines + 1 if not self . lastcmd else 0 
 
 @ contextmanager 
 def prepare _ loop ( self ) : 
 @ @ - 752 , 9 + 752 , 11 @ @ class Shell ( cmd . Cmd ) : 
 
 def get _ input _ line ( self , prompt = ' ' ) : 
 if self . tty : 
 - line = raw _ input ( prompt ) + ' \ n ' 
 + self . lastcmd = raw _ input ( prompt ) 
 + line = self . lastcmd + ' \ n ' 
 else : 
 - line = self . stdin . readline ( ) 
 + self . lastcmd = self . stdin . readline ( ) 
 + line = self . lastcmd 
 if not len ( line ) : 
 raise EOFError 
 self . lineno + = 1

NEAREST DIFF:
ELIMINATEDSENTENCE
