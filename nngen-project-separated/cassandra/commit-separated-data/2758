BLEU SCORE: 0.015050289697950688

TEST MSG: Switched to Guava 16 . 0 for CASSANDRA - 6639
GENERATED MSG: Fixes to make BinaryMemtable useful . Highlights are configurable threads for [ binary ] memtable flushing and flushAndShutdown JMX / nodeprobe directive .

TEST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 54d6226 . . d36b39e 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 340 , 7 + 340 , 7 @ @ <nl> < dependency groupId = " org . xerial . snappy " artifactId = " snappy - java " version = " 1 . 0 . 5 " / > <nl> < dependency groupId = " net . jpountz . lz4 " artifactId = " lz4 " version = " 1 . 2 . 0 " / > <nl> < dependency groupId = " com . ning " artifactId = " compress - lzf " version = " 0 . 8 . 4 " / > <nl> - < dependency groupId = " com . google . guava " artifactId = " guava " version = " 15 . 0 " / > <nl> + < dependency groupId = " com . google . guava " artifactId = " guava " version = " 16 . 0 " / > <nl> < dependency groupId = " commons - cli " artifactId = " commons - cli " version = " 1 . 1 " / > <nl> < dependency groupId = " commons - codec " artifactId = " commons - codec " version = " 1 . 2 " / > <nl> < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " version = " 3 . 1 " / > <nl> @ @ - 418 , 7 + 418 , 6 @ @ <nl> 	 < dependency groupId = " org . apache . hadoop " artifactId = " hadoop - minicluster " / > <nl> < dependency groupId = " org . apache . pig " artifactId = " pig " / > <nl> 	 < dependency groupId = " com . google . code . findbugs " artifactId = " jsr305 " / > <nl> - < dependency groupId = " io . airlift " artifactId = " airline " / > <nl> < / artifact : pom > <nl> <nl> < artifact : pom id = " coverage - deps - pom " <nl> diff - - git a / lib / guava - 15 . 0 . jar b / lib / guava - 15 . 0 . jar <nl> deleted file mode 100644 <nl> index eb9ef8a . . 0000000 <nl> Binary files a / lib / guava - 15 . 0 . jar and / dev / null differ <nl> diff - - git a / lib / guava - 16 . 0 . jar b / lib / guava - 16 . 0 . jar <nl> new file mode 100644 <nl> index 0000000 . . 7afcb10 <nl> Binary files / dev / null and b / lib / guava - 16 . 0 . jar differ <nl> diff - - git a / lib / licenses / guava - 15 . 0 . txt b / lib / licenses / guava - 15 . 0 . txt <nl> deleted file mode 100644 <nl> index d645695 . . 0000000 <nl> - - - a / lib / licenses / guava - 15 . 0 . txt <nl> + + + / dev / null <nl> @ @ - 1 , 202 + 0 , 0 @ @ <nl> - <nl> - Apache License <nl> - Version 2 . 0 , January 2004 <nl> - http : / / www . apache . org / licenses / <nl> - <nl> - TERMS AND CONDITIONS FOR USE , REPRODUCTION , AND DISTRIBUTION <nl> - <nl> - 1 . Definitions . <nl> - <nl> - " License " shall mean the terms and conditions for use , reproduction , <nl> - and distribution as defined by Sections 1 through 9 of this document . <nl> - <nl> - " Licensor " shall mean the copyright owner or entity authorized by <nl> - the copyright owner that is granting the License . <nl> - <nl> - " Legal Entity " shall mean the union of the acting entity and all <nl> - other entities that control , are controlled by , or are under common <nl> - control with that entity . For the purposes of this definition , <nl> - " control " means ( i ) the power , direct or indirect , to cause the <nl> - direction or management of such entity , whether by contract or <nl> - otherwise , or ( ii ) ownership of fifty percent ( 50 % ) or more of the <nl> - outstanding shares , or ( iii ) beneficial ownership of such entity . <nl> - <nl> - " You " ( or " Your " ) shall mean an individual or Legal Entity <nl> - exercising permissions granted by this License . <nl> - <nl> - " Source " form shall mean the preferred form for making modifications , <nl> - including but not limited to software source code , documentation <nl> - source , and configuration files . <nl> - <nl> - " Object " form shall mean any form resulting from mechanical <nl> - transformation or translation of a Source form , including but <nl> - not limited to compiled object code , generated documentation , <nl> - and conversions to other media types . <nl> - <nl> - " Work " shall mean the work of authorship , whether in Source or <nl> - Object form , made available under the License , as indicated by a <nl> - copyright notice that is included in or attached to the work <nl> - ( an example is provided in the Appendix below ) . <nl> - <nl> - " Derivative Works " shall mean any work , whether in Source or Object <nl> - form , that is based on ( or derived from ) the Work and for which the <nl> - editorial revisions , annotations , elaborations , or other modifications <nl> - represent , as a whole , an original work of authorship . For the purposes <nl> - of this License , Derivative Works shall not include works that remain <nl> - separable from , or merely link ( or bind by name ) to the interfaces of , <nl> - the Work and Derivative Works thereof . <nl> - <nl> - " Contribution " shall mean any work of authorship , including <nl> - the original version of the Work and any modifications or additions <nl> - to that Work or Derivative Works thereof , that is intentionally <nl> - submitted to Licensor for inclusion in the Work by the copyright owner <nl> - or by an individual or Legal Entity authorized to submit on behalf of <nl> - the copyright owner . For the purposes of this definition , " submitted " <nl> - means any form of electronic , verbal , or written communication sent <nl> - to the Licensor or its representatives , including but not limited to <nl> - communication on electronic mailing lists , source code control systems , <nl> - and issue tracking systems that are managed by , or on behalf of , the <nl> - Licensor for the purpose of discussing and improving the Work , but <nl> - excluding communication that is conspicuously marked or otherwise <nl> - designated in writing by the copyright owner as " Not a Contribution . " <nl> - <nl> - " Contributor " shall mean Licensor and any individual or Legal Entity <nl> - on behalf of whom a Contribution has been received by Licensor and <nl> - subsequently incorporated within the Work . <nl> - <nl> - 2 . Grant of Copyright License . Subject to the terms and conditions of <nl> - this License , each Contributor hereby grants to You a perpetual , <nl> - worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> - copyright license to reproduce , prepare Derivative Works of , <nl> - publicly display , publicly perform , sublicense , and distribute the <nl> - Work and such Derivative Works in Source or Object form . <nl> - <nl> - 3 . Grant of Patent License . Subject to the terms and conditions of <nl> - this License , each Contributor hereby grants to You a perpetual , <nl> - worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> - ( except as stated in this section ) patent license to make , have made , <nl> - use , offer to sell , sell , import , and otherwise transfer the Work , <nl> - where such license applies only to those patent claims licensable <nl> - by such Contributor that are necessarily infringed by their <nl> - Contribution ( s ) alone or by combination of their Contribution ( s ) <nl> - with the Work to which such Contribution ( s ) was submitted . If You <nl> - institute patent litigation against any entity ( including a <nl> - cross - claim or counterclaim in a lawsuit ) alleging that the Work <nl> - or a Contribution incorporated within the Work constitutes direct <nl> - or contributory patent infringement , then any patent licenses <nl> - granted to You under this License for that Work shall terminate <nl> - as of the date such litigation is filed . <nl> - <nl> - 4 . Redistribution . You may reproduce and distribute copies of the <nl> - Work or Derivative Works thereof in any medium , with or without <nl> - modifications , and in Source or Object form , provided that You <nl> - meet the following conditions : <nl> - <nl> - ( a ) You must give any other recipients of the Work or <nl> - Derivative Works a copy of this License ; and <nl> - <nl> - ( b ) You must cause any modified files to carry prominent notices <nl> - stating that You changed the files ; and <nl> - <nl> - ( c ) You must retain , in the Source form of any Derivative Works <nl> - that You distribute , all copyright , patent , trademark , and <nl> - attribution notices from the Source form of the Work , <nl> - excluding those notices that do not pertain to any part of <nl> - the Derivative Works ; and <nl> - <nl> - ( d ) If the Work includes a " NOTICE " text file as part of its <nl> - distribution , then any Derivative Works that You distribute must <nl> - include a readable copy of the attribution notices contained <nl> - within such NOTICE file , excluding those notices that do not <nl> - pertain to any part of the Derivative Works , in at least one <nl> - of the following places : within a NOTICE text file distributed <nl> - as part of the Derivative Works ; within the Source form or <nl> - documentation , if provided along with the Derivative Works ; or , <nl> - within a display generated by the Derivative Works , if and <nl> - wherever such third - party notices normally appear . The contents <nl> - of the NOTICE file are for informational purposes only and <nl> - do not modify the License . You may add Your own attribution <nl> - notices within Derivative Works that You distribute , alongside <nl> - or as an addendum to the NOTICE text from the Work , provided <nl> - that such additional attribution notices cannot be construed <nl> - as modifying the License . <nl> - <nl> - You may add Your own copyright statement to Your modifications and <nl> - may provide additional or different license terms and conditions <nl> - for use , reproduction , or distribution of Your modifications , or <nl> - for any such Derivative Works as a whole , provided Your use , <nl> - reproduction , and distribution of the Work otherwise complies with <nl> - the conditions stated in this License . <nl> - <nl> - 5 . Submission of Contributions . Unless You explicitly state otherwise , <nl> - any Contribution intentionally submitted for inclusion in the Work <nl> - by You to the Licensor shall be under the terms and conditions of <nl> - this License , without any additional terms or conditions . <nl> - Notwithstanding the above , nothing herein shall supersede or modify <nl> - the terms of any separate license agreement you may have executed <nl> - with Licensor regarding such Contributions . <nl> - <nl> - 6 . Trademarks . This License does not grant permission to use the trade <nl> - names , trademarks , service marks , or product names of the Licensor , <nl> - except as required for reasonable and customary use in describing the <nl> - origin of the Work and reproducing the content of the NOTICE file . <nl> - <nl> - 7 . Disclaimer of Warranty . Unless required by applicable law or <nl> - agreed to in writing , Licensor provides the Work ( and each <nl> - Contributor provides its Contributions ) on an " AS IS " BASIS , <nl> - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or <nl> - implied , including , without limitation , any warranties or conditions <nl> - of TITLE , NON - INFRINGEMENT , MERCHANTABILITY , or FITNESS FOR A <nl> - PARTICULAR PURPOSE . You are solely responsible for determining the <nl> - appropriateness of using or redistributing the Work and assume any <nl> - risks associated with Your exercise of permissions under this License . <nl> - <nl> - 8 . Limitation of Liability . In no event and under no legal theory , <nl> - whether in tort ( including negligence ) , contract , or otherwise , <nl> - unless required by applicable law ( such as deliberate and grossly <nl> - negligent acts ) or agreed to in writing , shall any Contributor be <nl> - liable to You for damages , including any direct , indirect , special , <nl> - incidental , or consequential damages of any character arising as a <nl> - result of this License or out of the use or inability to use the <nl> - Work ( including but not limited to damages for loss of goodwill , <nl> - work stoppage , computer failure or malfunction , or any and all <nl> - other commercial damages or losses ) , even if such Contributor <nl> - has been advised of the possibility of such damages . <nl> - <nl> - 9 . Accepting Warranty or Additional Liability . While redistributing <nl> - the Work or Derivative Works thereof , You may choose to offer , <nl> - and charge a fee for , acceptance of support , warranty , indemnity , <nl> - or other liability obligations and / or rights consistent with this <nl> - License . However , in accepting such obligations , You may act only <nl> - on Your own behalf and on Your sole responsibility , not on behalf <nl> - of any other Contributor , and only if You agree to indemnify , <nl> - defend , and hold each Contributor harmless for any liability <nl> - incurred by , or claims asserted against , such Contributor by reason <nl> - of your accepting any such warranty or additional liability . <nl> - <nl> - END OF TERMS AND CONDITIONS <nl> - <nl> - APPENDIX : How to apply the Apache License to your work . <nl> - <nl> - To apply the Apache License to your work , attach the following <nl> - boilerplate notice , with the fields enclosed by brackets " [ ] " <nl> - replaced with your own identifying information . ( Don ' t include <nl> - the brackets ! ) The text should be enclosed in the appropriate <nl> - comment syntax for the file format . We also recommend that a <nl> - file or class name and description of purpose be included on the <nl> - same " printed page " as the copyright notice for easier <nl> - identification within third - party archives . <nl> - <nl> - Copyright [ yyyy ] [ name of copyright owner ] <nl> - <nl> - Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - you may not use this file except in compliance with the License . <nl> - You may obtain a copy of the License at <nl> - <nl> - http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - <nl> - Unless required by applicable law or agreed to in writing , software <nl> - distributed under the License is distributed on an " AS IS " BASIS , <nl> - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - See the License for the specific language governing permissions and <nl> - limitations under the License . <nl> diff - - git a / lib / licenses / guava - 16 . 0 . txt b / lib / licenses / guava - 16 . 0 . txt <nl> new file mode 100644 <nl> index 0000000 . . d645695 <nl> - - - / dev / null <nl> + + + b / lib / licenses / guava - 16 . 0 . txt <nl> @ @ - 0 , 0 + 1 , 202 @ @ <nl> + <nl> + Apache License <nl> + Version 2 . 0 , January 2004 <nl> + http : / / www . apache . org / licenses / <nl> + <nl> + TERMS AND CONDITIONS FOR USE , REPRODUCTION , AND DISTRIBUTION <nl> + <nl> + 1 . Definitions . <nl> + <nl> + " License " shall mean the terms and conditions for use , reproduction , <nl> + and distribution as defined by Sections 1 through 9 of this document . <nl> + <nl> + " Licensor " shall mean the copyright owner or entity authorized by <nl> + the copyright owner that is granting the License . <nl> + <nl> + " Legal Entity " shall mean the union of the acting entity and all <nl> + other entities that control , are controlled by , or are under common <nl> + control with that entity . For the purposes of this definition , <nl> + " control " means ( i ) the power , direct or indirect , to cause the <nl> + direction or management of such entity , whether by contract or <nl> + otherwise , or ( ii ) ownership of fifty percent ( 50 % ) or more of the <nl> + outstanding shares , or ( iii ) beneficial ownership of such entity . <nl> + <nl> + " You " ( or " Your " ) shall mean an individual or Legal Entity <nl> + exercising permissions granted by this License . <nl> + <nl> + " Source " form shall mean the preferred form for making modifications , <nl> + including but not limited to software source code , documentation <nl> + source , and configuration files . <nl> + <nl> + " Object " form shall mean any form resulting from mechanical <nl> + transformation or translation of a Source form , including but <nl> + not limited to compiled object code , generated documentation , <nl> + and conversions to other media types . <nl> + <nl> + " Work " shall mean the work of authorship , whether in Source or <nl> + Object form , made available under the License , as indicated by a <nl> + copyright notice that is included in or attached to the work <nl> + ( an example is provided in the Appendix below ) . <nl> + <nl> + " Derivative Works " shall mean any work , whether in Source or Object <nl> + form , that is based on ( or derived from ) the Work and for which the <nl> + editorial revisions , annotations , elaborations , or other modifications <nl> + represent , as a whole , an original work of authorship . For the purposes <nl> + of this License , Derivative Works shall not include works that remain <nl> + separable from , or merely link ( or bind by name ) to the interfaces of , <nl> + the Work and Derivative Works thereof . <nl> + <nl> + " Contribution " shall mean any work of authorship , including <nl> + the original version of the Work and any modifications or additions <nl> + to that Work or Derivative Works thereof , that is intentionally <nl> + submitted to Licensor for inclusion in the Work by the copyright owner <nl> + or by an individual or Legal Entity authorized to submit on behalf of <nl> + the copyright owner . For the purposes of this definition , " submitted " <nl> + means any form of electronic , verbal , or written communication sent <nl> + to the Licensor or its representatives , including but not limited to <nl> + communication on electronic mailing lists , source code control systems , <nl> + and issue tracking systems that are managed by , or on behalf of , the <nl> + Licensor for the purpose of discussing and improving the Work , but <nl> + excluding communication that is conspicuously marked or otherwise <nl> + designated in writing by the copyright owner as " Not a Contribution . " <nl> + <nl> + " Contributor " shall mean Licensor and any individual or Legal Entity <nl> + on behalf of whom a Contribution has been received by Licensor and <nl> + subsequently incorporated within the Work . <nl> + <nl> + 2 . Grant of Copyright License . Subject to the terms and conditions of <nl> + this License , each Contributor hereby grants to You a perpetual , <nl> + worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> + copyright license to reproduce , prepare Derivative Works of , <nl> + publicly display , publicly perform , sublicense , and distribute the <nl> + Work and such Derivative Works in Source or Object form . <nl> + <nl> + 3 . Grant of Patent License . Subject to the terms and conditions of <nl> + this License , each Contributor hereby grants to You a perpetual , <nl> + worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> + ( except as stated in this section ) patent license to make , have made , <nl> + use , offer to sell , sell , import , and otherwise transfer the Work , <nl> + where such license applies only to those patent claims licensable <nl> + by such Contributor that are necessarily infringed by their <nl> + Contribution ( s ) alone or by combination of their Contribution ( s ) <nl> + with the Work to which such Contribution ( s ) was submitted . If You <nl> + institute patent litigation against any entity ( including a <nl> + cross - claim or counterclaim in a lawsuit ) alleging that the Work <nl> + or a Contribution incorporated within the Work constitutes direct <nl> + or contributory patent infringement , then any patent licenses <nl> + granted to You under this License for that Work shall terminate <nl> + as of the date such litigation is filed . <nl> + <nl> + 4 . Redistribution . You may reproduce and distribute copies of the <nl> + Work or Derivative Works thereof in any medium , with or without <nl> + modifications , and in Source or Object form , provided that You <nl> + meet the following conditions : <nl> + <nl> + ( a ) You must give any other recipients of the Work or <nl> + Derivative Works a copy of this License ; and <nl> + <nl> + ( b ) You must cause any modified files to carry prominent notices <nl> + stating that You changed the files ; and <nl> + <nl> + ( c ) You must retain , in the Source form of any Derivative Works <nl> + that You distribute , all copyright , patent , trademark , and <nl> + attribution notices from the Source form of the Work , <nl> + excluding those notices that do not pertain to any part of <nl> + the Derivative Works ; and <nl> + <nl> + ( d ) If the Work includes a " NOTICE " text file as part of its <nl> + distribution , then any Derivative Works that You distribute must <nl> + include a readable copy of the attribution notices contained <nl> + within such NOTICE file , excluding those notices that do not <nl> + pertain to any part of the Derivative Works , in at least one <nl> + of the following places : within a NOTICE text file distributed <nl> + as part of the Derivative Works ; within the Source form or <nl> + documentation , if provided along with the Derivative Works ; or , <nl> + within a display generated by the Derivative Works , if and <nl> + wherever such third - party notices normally appear . The contents <nl> + of the NOTICE file are for informational purposes only and <nl> + do not modify the License . You may add Your own attribution <nl> + notices within Derivative Works that You distribute , alongside <nl> + or as an addendum to the NOTICE text from the Work , provided <nl> + that such additional attribution notices cannot be construed <nl> + as modifying the License . <nl> + <nl> + You may add Your own copyright statement to Your modifications and <nl> + may provide additional or different license terms and conditions <nl> + for use , reproduction , or distribution of Your modifications , or <nl> + for any such Derivative Works as a whole , provided Your use , <nl> + reproduction , and distribution of the Work otherwise complies with <nl> + the conditions stated in this License . <nl> + <nl> + 5 . Submission of Contributions . Unless You explicitly state otherwise , <nl> + any Contribution intentionally submitted for inclusion in the Work <nl> + by You to the Licensor shall be under the terms and conditions of <nl> + this License , without any additional terms or conditions . <nl> + Notwithstanding the above , nothing herein shall supersede or modify <nl> + the terms of any separate license agreement you may have executed <nl> + with Licensor regarding such Contributions . <nl> + <nl> + 6 . Trademarks . This License does not grant permission to use the trade <nl> + names , trademarks , service marks , or product names of the Licensor , <nl> + except as required for reasonable and customary use in describing the <nl> + origin of the Work and reproducing the content of the NOTICE file . <nl> + <nl> + 7 . Disclaimer of Warranty . Unless required by applicable law or <nl> + agreed to in writing , Licensor provides the Work ( and each <nl> + Contributor provides its Contributions ) on an " AS IS " BASIS , <nl> + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or <nl> + implied , including , without limitation , any warranties or conditions <nl> + of TITLE , NON - INFRINGEMENT , MERCHANTABILITY , or FITNESS FOR A <nl> + PARTICULAR PURPOSE . You are solely responsible for determining the <nl> + appropriateness of using or redistributing the Work and assume any <nl> + risks associated with Your exercise of permissions under this License . <nl> + <nl> + 8 . Limitation of Liability . In no event and under no legal theory , <nl> + whether in tort ( including negligence ) , contract , or otherwise , <nl> + unless required by applicable law ( such as deliberate and grossly <nl> + negligent acts ) or agreed to in writing , shall any Contributor be <nl> + liable to You for damages , including any direct , indirect , special , <nl> + incidental , or consequential damages of any character arising as a <nl> + result of this License or out of the use or inability to use the <nl> + Work ( including but not limited to damages for loss of goodwill , <nl> + work stoppage , computer failure or malfunction , or any and all <nl> + other commercial damages or losses ) , even if such Contributor <nl> + has been advised of the possibility of such damages . <nl> + <nl> + 9 . Accepting Warranty or Additional Liability . While redistributing <nl> + the Work or Derivative Works thereof , You may choose to offer , <nl> + and charge a fee for , acceptance of support , warranty , indemnity , <nl> + or other liability obligations and / or rights consistent with this <nl> + License . However , in accepting such obligations , You may act only <nl> + on Your own behalf and on Your sole responsibility , not on behalf <nl> + of any other Contributor , and only if You agree to indemnify , <nl> + defend , and hold each Contributor harmless for any liability <nl> + incurred by , or claims asserted against , such Contributor by reason <nl> + of your accepting any such warranty or additional liability . <nl> + <nl> + END OF TERMS AND CONDITIONS <nl> + <nl> + APPENDIX : How to apply the Apache License to your work . <nl> + <nl> + To apply the Apache License to your work , attach the following <nl> + boilerplate notice , with the fields enclosed by brackets " [ ] " <nl> + replaced with your own identifying information . ( Don ' t include <nl> + the brackets ! ) The text should be enclosed in the appropriate <nl> + comment syntax for the file format . We also recommend that a <nl> + file or class name and description of purpose be included on the <nl> + same " printed page " as the copyright notice for easier <nl> + identification within third - party archives . <nl> + <nl> + Copyright [ yyyy ] [ name of copyright owner ] <nl> + <nl> + Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + you may not use this file except in compliance with the License . <nl> + You may obtain a copy of the License at <nl> + <nl> + http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + <nl> + Unless required by applicable law or agreed to in writing , software <nl> + distributed under the License is distributed on an " AS IS " BASIS , <nl> + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + See the License for the specific language governing permissions and <nl> + limitations under the License . <nl> diff - - git a / src / java / org / apache / cassandra / tracing / TraceState . java b / src / java / org / apache / cassandra / tracing / TraceState . java <nl> index 7f60433 . . de8ca44 100644 <nl> - - - a / src / java / org / apache / cassandra / tracing / TraceState . java <nl> + + + b / src / java / org / apache / cassandra / tracing / TraceState . java <nl> @ @ - 55 , 13 + 55 , 12 @ @ public class TraceState <nl> this . coordinator = coordinator ; <nl> this . sessionId = sessionId ; <nl> sessionIdBytes = ByteBufferUtil . bytes ( sessionId ) ; <nl> - watch = new Stopwatch ( ) ; <nl> - watch . start ( ) ; <nl> + watch = Stopwatch . createStarted ( ) ; <nl> } <nl> <nl> public int elapsed ( ) <nl> { <nl> - long elapsed = watch . elapsedTime ( TimeUnit . MICROSECONDS ) ; <nl> + long elapsed = watch . elapsed ( TimeUnit . MICROSECONDS ) ; <nl> return elapsed < Integer . MAX _ VALUE ? ( int ) elapsed : Integer . MAX _ VALUE ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / conf / storage - conf . xml b / conf / storage - conf . xml <nl> index 8aaeeb6 . . 25d2901 100644 <nl> - - - a / conf / storage - conf . xml <nl> + + + b / conf / storage - conf . xml <nl> @ @ - 308 , 4 + 308 , 19 @ @ <nl> ~ ten days . <nl> - - > <nl> < GCGraceSeconds > 864000 < / GCGraceSeconds > <nl> + <nl> + < ! - - <nl> + ~ Number of threads to run when flushing memtables to disk . Set this to <nl> + ~ the number of disks you physically have in your machine allocated for DataDirectory * 2 . <nl> + ~ If you are planning to use the Binary Memtable , its recommended to increase the max threads <nl> + ~ to maintain a higher quality of service while under load when normal memtables are flushing to disk . <nl> + - - > <nl> + < FlushMinThreads > 1 < / FlushMinThreads > <nl> + < FlushMaxThreads > 1 < / FlushMaxThreads > <nl> + <nl> + < ! - - <nl> + ~ The threshold size in megabytes the binary memtable must grow to , before it ' s submitted for flushing to disk . <nl> + - - > <nl> + < BinaryMemtableSizeInMB > 256 < / BinaryMemtableSizeInMB > <nl> + <nl> < / Storage > <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 9016676 . . e86b134 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 74 , 6 + 74 , 9 @ @ public class DatabaseDescriptor <nl> private static int slicedReadBufferSizeInKB _ = 64 ; <nl> private static List < String > tables _ = new ArrayList < String > ( ) ; <nl> private static Set < String > applicationColumnFamilies _ = new HashSet < String > ( ) ; <nl> + private static int flushMinThreads _ = 1 ; <nl> + private static int flushMaxThreads _ = 1 ; <nl> + private static int bmtThreshold _ = 256 ; <nl> <nl> / / Default descriptive names for introspection . The user can override <nl> / / these choices in the config file . These are not case sensitive . <nl> @ @ - 271 , 6 + 274 , 24 @ @ public class DatabaseDescriptor <nl> slicedReadBufferSizeInKB _ = Integer . parseInt ( rawSlicedBuffer ) ; <nl> } <nl> <nl> + String rawflushMinThreads = xmlUtils . getNodeValue ( " / Storage / FlushMinThreads " ) ; <nl> + if ( rawflushMinThreads ! = null ) <nl> + { <nl> + flushMinThreads _ = Integer . parseInt ( rawflushMinThreads ) ; <nl> + } <nl> + <nl> + String rawflushMaxThreads = xmlUtils . getNodeValue ( " / Storage / FlushMaxThreads " ) ; <nl> + if ( rawflushMaxThreads ! = null ) <nl> + { <nl> + flushMaxThreads _ = Integer . parseInt ( rawflushMaxThreads ) ; <nl> + } <nl> + <nl> + String bmtThreshold = xmlUtils . getNodeValue ( " / Storage / BinaryMemtableSizeInMB " ) ; <nl> + if ( bmtThreshold ! = null ) <nl> + { <nl> + bmtThreshold _ = Integer . parseInt ( bmtThreshold ) ; <nl> + } <nl> + <nl> / * TCP port on which the storage system listens * / <nl> String port = xmlUtils . getNodeValue ( " / Storage / StoragePort " ) ; <nl> if ( port ! = null ) <nl> @ @ - 999 , 4 + 1020 , 19 @ @ public class DatabaseDescriptor <nl> { <nl> return slicedReadBufferSizeInKB _ ; <nl> } <nl> + <nl> + public static int getFlushMinThreads ( ) <nl> + { <nl> + return flushMinThreads _ ; <nl> + } <nl> + <nl> + public static int getFlushMaxThreads ( ) <nl> + { <nl> + return flushMaxThreads _ ; <nl> + } <nl> + <nl> + public static int getBMTThreshold ( ) <nl> + { <nl> + return bmtThreshold _ ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / BinaryMemtable . java b / src / java / org / apache / cassandra / db / BinaryMemtable . java <nl> index 2cd439a . . 4530e8b 100644 <nl> - - - a / src / java / org / apache / cassandra / db / BinaryMemtable . java <nl> + + + b / src / java / org / apache / cassandra / db / BinaryMemtable . java <nl> @ @ - 34 , 11 + 34 , 13 @ @ import org . apache . cassandra . config . DatabaseDescriptor ; <nl> <nl> import org . apache . log4j . Logger ; <nl> import org . cliffc . high _ scale _ lib . NonBlockingHashMap ; <nl> + import java . util . * ; <nl> + import org . apache . cassandra . dht . IPartitioner ; <nl> <nl> public class BinaryMemtable <nl> { <nl> private static Logger logger _ = Logger . getLogger ( Memtable . class ) ; <nl> - private int threshold _ = 512 * 1024 * 1024 ; <nl> + private int threshold _ = DatabaseDescriptor . getBMTThreshold ( ) * 1024 * 1024 ; <nl> private AtomicInteger currentSize _ = new AtomicInteger ( 0 ) ; <nl> <nl> / * Table and ColumnFamily name are used to determine the ColumnFamilyStore * / <nl> @ @ - 138 , 10 + 140 , 31 @ @ public class BinaryMemtable <nl> * Use the SSTable to write the contents of the TreeMap <nl> * to disk . <nl> * / <nl> + <nl> + String path ; <nl> + SSTableWriter writer ; <nl> ColumnFamilyStore cfStore = Table . open ( table _ ) . getColumnFamilyStore ( cfName _ ) ; <nl> List < String > keys = new ArrayList < String > ( columnFamilies _ . keySet ( ) ) ; <nl> - SSTableWriter writer = new SSTableWriter ( cfStore . getTempSSTablePath ( ) , keys . size ( ) , StorageService . getPartitioner ( ) ) ; <nl> - Collections . sort ( keys ) ; <nl> + / * <nl> + Adding a lock here so data directories are evenly used . By default currentIndex <nl> + is incremented , not an AtomicInteger . Let ' s fix this ! <nl> + * / <nl> + lock _ . lock ( ) ; <nl> + try <nl> + { <nl> + path = cfStore . getTempSSTablePath ( ) ; <nl> + writer = new SSTableWriter ( path , keys . size ( ) , StorageService . getPartitioner ( ) ) ; <nl> + } <nl> + finally <nl> + { <nl> + lock _ . unlock ( ) ; <nl> + } <nl> + <nl> + final IPartitioner partitioner = StorageService . getPartitioner ( ) ; <nl> + final Comparator < String > dc = partitioner . getDecoratedKeyComparator ( ) ; <nl> + Collections . sort ( keys , dc ) ; <nl> + <nl> + <nl> / * Use this BloomFilter to decide if a key exists in a SSTable * / <nl> for ( String key : keys ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index b08cf6b . . af6e247 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 38 , 6 + 38 , 7 @ @ import org . apache . cassandra . net . EndPoint ; <nl> import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . utils . * ; <nl> import org . apache . cassandra . concurrent . DebuggableThreadPoolExecutor ; <nl> + import org . apache . cassandra . concurrent . ThreadFactoryImpl ; <nl> import org . apache . cassandra . db . filter . * ; <nl> import org . apache . cassandra . db . marshal . AbstractType ; <nl> <nl> @ @ - 55 , 8 + 56 , 8 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> private static final int BUFSIZE = 128 * 1024 * 1024 ; <nl> <nl> private static NonBlockingHashMap < String , Set < Memtable > > memtablesPendingFlush = new NonBlockingHashMap < String , Set < Memtable > > ( ) ; <nl> - private static ExecutorService flusher _ = new DebuggableThreadPoolExecutor ( " MEMTABLE - FLUSHER - POOL " ) ; <nl> - <nl> + private static ExecutorService flusher _ = new DebuggableThreadPoolExecutor ( DatabaseDescriptor . getFlushMinThreads ( ) , DatabaseDescriptor . getFlushMaxThreads ( ) , Integer . MAX _ VALUE , TimeUnit . SECONDS , new LinkedBlockingQueue < Runnable > ( ) , new ThreadFactoryImpl ( " MEMTABLE - FLUSHER - POOL " ) ) ; <nl> + <nl> private final String table _ ; <nl> public final String columnFamily _ ; <nl> private final boolean isSuper _ ; <nl> @ @ - 457 , 7 + 458 , 7 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> assert oldMemtable . isFlushed ( ) | | oldMemtable . isClean ( ) ; <nl> } <nl> <nl> - void forceFlushBinary ( ) <nl> + public void forceFlushBinary ( ) <nl> { <nl> submitFlush ( binaryMemtable _ . get ( ) ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java <nl> index 54389e5 . . 04b28fb 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Table . java <nl> + + + b / src / java / org / apache / cassandra / db / Table . java <nl> @ @ - 642 , 11 + 642 , 11 @ @ public class Table <nl> for ( ColumnFamily columnFamily : row . getColumnFamilies ( ) ) <nl> { <nl> Collection < IColumn > columns = columnFamily . getSortedColumns ( ) ; <nl> - for ( IColumn column : columns ) <nl> + for ( IColumn column : columns ) <nl> { <nl> - ColumnFamilyStore cfStore = columnFamilyStores _ . get ( column . name ( ) ) ; <nl> + ColumnFamilyStore cfStore = columnFamilyStores _ . get ( new String ( column . name ( ) , " UTF - 8 " ) ) ; <nl> cfStore . applyBinary ( key , column . value ( ) ) ; <nl> - 	 } <nl> + } <nl> } <nl> row . clear ( ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index 954324b . . 21f97d2 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 478 , 14 + 478 , 26 @ @ public class MessagingService implements IMessagingService <nl> { <nl> isStreaming _ . set ( bVal ) ; <nl> } <nl> + public static void flushAndshutdown ( ) <nl> + { <nl> + / / safely shutdown and send all writes <nl> + for ( Map . Entry < String , TcpConnectionManager > entry : poolTable _ . entrySet ( ) ) <nl> + { <nl> + for ( TcpConnection connection : entry . getValue ( ) . getConnections ( ) ) <nl> + { <nl> + connection . doPendingWrites ( ) ; <nl> + } <nl> + } <nl> + shutdown ( ) ; <nl> + } <nl> <nl> public static void shutdown ( ) <nl> { <nl> logger _ . info ( " Shutting down . . . " ) ; <nl> - synchronized ( MessagingService . class ) <nl> - { <nl> - / * Stop listening on any socket * / <nl> - for ( SelectionKey skey : listenSockets _ . values ( ) ) <nl> + synchronized ( MessagingService . class ) <nl> + { <nl> + / * Stop listening on any socket * / <nl> + for ( SelectionKey skey : listenSockets _ . values ( ) ) <nl> { <nl> skey . cancel ( ) ; <nl> try <nl> @ @ - 495 , 26 + 507 , 25 @ @ public class MessagingService implements IMessagingService <nl> catch ( IOException e ) { } <nl> } <nl> listenSockets _ . clear ( ) ; <nl> - <nl> - / * Shutdown the threads in the EventQueue ' s * / <nl> - messageDeserializationExecutor _ . shutdownNow ( ) ; <nl> + <nl> + / * Shutdown the threads in the EventQueue ' s * / <nl> + messageDeserializationExecutor _ . shutdownNow ( ) ; <nl> messageSerializerExecutor _ . shutdownNow ( ) ; <nl> messageDeserializerExecutor _ . shutdownNow ( ) ; <nl> streamExecutor _ . shutdownNow ( ) ; <nl> - <nl> + <nl> / * shut down the cachetables * / <nl> taskCompletionMap _ . shutdown ( ) ; <nl> - callbackMap _ . shutdown ( ) ; <nl> - <nl> + callbackMap _ . shutdown ( ) ; <nl> + <nl> / * Interrupt the selector manager thread * / <nl> SelectorManager . getSelectorManager ( ) . interrupt ( ) ; <nl> - <nl> - poolTable _ . clear ( ) ; <nl> - verbHandlers _ . clear ( ) ; <nl> + <nl> + poolTable _ . clear ( ) ; <nl> + verbHandlers _ . clear ( ) ; <nl> bShutdown _ = true ; <nl> } <nl> - if ( logger _ . isDebugEnabled ( ) ) <nl> - logger _ . debug ( " Shutdown invocation complete . " ) ; <nl> + logger _ . info ( " Shutdown invocation complete . " ) ; <nl> } <nl> <nl> public static void receive ( Message message ) <nl> diff - - git a / src / java / org / apache / cassandra / net / TcpConnection . java b / src / java / org / apache / cassandra / net / TcpConnection . java <nl> index 5039833 . . 08afda8 100644 <nl> - - - a / src / java / org / apache / cassandra / net / TcpConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / TcpConnection . java <nl> @ @ - 387 , 7 + 387 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable <nl> resumeStreaming ( ) ; <nl> } <nl> <nl> - void doPendingWrites ( ) <nl> + public void doPendingWrites ( ) <nl> { <nl> synchronized ( this ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / net / TcpConnectionManager . java b / src / java / org / apache / cassandra / net / TcpConnectionManager . java <nl> index e29eb9d . . b8fa909 100644 <nl> - - - a / src / java / org / apache / cassandra / net / TcpConnectionManager . java <nl> + + + b / src / java / org / apache / cassandra / net / TcpConnectionManager . java <nl> @ @ - 211 , 4 + 211 , 8 @ @ class TcpConnectionManager <nl> { <nl> return allConnections _ . contains ( connection ) ; <nl> } <nl> + List < TcpConnection > getConnections ( ) <nl> + { <nl> + return allConnections _ ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 62cc110 . . 0e2dd24 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 778 , 6 + 778 , 24 @ @ public final class StorageService implements IEndPointStateChangeSubscriber , Sto <nl> logger _ . debug ( " Cleared out all snapshot directories " ) ; <nl> } <nl> <nl> + public void forceTableFlushBinary ( String tableName ) throws IOException <nl> + { <nl> + if ( DatabaseDescriptor . getTable ( tableName ) = = null ) <nl> + { <nl> + throw new IOException ( " Table " + tableName + " does not exist " ) ; <nl> + } <nl> + <nl> + Table table = Table . open ( tableName ) ; <nl> + Set < String > columnFamilies = table . getColumnFamilies ( ) ; <nl> + for ( String columnFamily : columnFamilies ) <nl> + { <nl> + ColumnFamilyStore cfStore = table . getColumnFamilyStore ( columnFamily ) ; <nl> + logger _ . debug ( " Forcing flush on keyspace " + tableName + " on CF " + columnFamily ) ; <nl> + cfStore . forceFlushBinary ( ) ; <nl> + } <nl> + } <nl> + <nl> + <nl> / * End of MBean interface methods * / <nl> <nl> / * * <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> index 2e21ecb . . 046fb26 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> @ @ - 84 , 4 + 84 , 11 @ @ public interface StorageServiceMBean <nl> * Remove all the existing snapshots . <nl> * / <nl> public void clearSnapshot ( ) throws IOException ; <nl> + <nl> + / * * <nl> + * Flush all binary memtables for a table <nl> + * @ param tableName <nl> + * @ throws IOException <nl> + * / <nl> + public void forceTableFlushBinary ( String tableName ) throws IOException ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index f0df925 . . b6d846f 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 257 , 7 + 257 , 16 @ @ public class NodeProbe <nl> { <nl> ssProxy . forceTableCompaction ( ) ; <nl> } <nl> - <nl> + <nl> + / * * <nl> + * Trigger a binary flush on CFs of a table . <nl> + * / <nl> + public void forceTableFlushBinary ( String tableName ) throws IOException <nl> + { <nl> + ssProxy . forceTableFlushBinary ( tableName ) ; <nl> + } <nl> + <nl> + <nl> / * * <nl> * Write a textual representation of the Cassandra ring . <nl> * <nl> @ @ - 517 , 7 + 526 , 7 @ @ public class NodeProbe <nl> { <nl> HelpFormatter hf = new HelpFormatter ( ) ; <nl> String header = String . format ( <nl> - " % nAvailable commands : ring , cluster , info , cleanup , compact , cfstats , snapshot [ name ] , clearsnapshot , bootstrap , tpstats " ) ; <nl> + " % nAvailable commands : ring , cluster , info , cleanup , compact , cfstats , snapshot [ name ] , clearsnapshot , bootstrap , tpstats , flush _ binary " ) ; <nl> String usage = String . format ( " java % s - host < arg > < command > % n " , NodeProbe . class . getName ( ) ) ; <nl> hf . printHelp ( usage , " " , options , header ) ; <nl> } <nl> @ @ - 609 , 6 + 618 , 16 @ @ public class NodeProbe <nl> { <nl> probe . printThreadPoolStats ( System . out ) ; <nl> } <nl> + else if ( cmdName . equals ( " flush _ binary " ) ) <nl> + { <nl> + if ( probe . getArgs ( ) . length < 2 ) <nl> + { <nl> + System . err . println ( " Missing keyspace argument . " ) ; <nl> + NodeProbe . printUsage ( ) ; <nl> + System . exit ( 1 ) ; <nl> + } <nl> + probe . forceTableFlushBinary ( probe . getArgs ( ) [ 1 ] ) ; <nl> + } <nl> else <nl> { <nl> System . err . println ( " Unrecognized command : " + cmdName + " . " ) ;

TEST DIFF:
diff - - git a / build . xml b / build . xml 
 index 54d6226 . . d36b39e 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 340 , 7 + 340 , 7 @ @ 
 < dependency groupId = " org . xerial . snappy " artifactId = " snappy - java " version = " 1 . 0 . 5 " / > 
 < dependency groupId = " net . jpountz . lz4 " artifactId = " lz4 " version = " 1 . 2 . 0 " / > 
 < dependency groupId = " com . ning " artifactId = " compress - lzf " version = " 0 . 8 . 4 " / > 
 - < dependency groupId = " com . google . guava " artifactId = " guava " version = " 15 . 0 " / > 
 + < dependency groupId = " com . google . guava " artifactId = " guava " version = " 16 . 0 " / > 
 < dependency groupId = " commons - cli " artifactId = " commons - cli " version = " 1 . 1 " / > 
 < dependency groupId = " commons - codec " artifactId = " commons - codec " version = " 1 . 2 " / > 
 < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " version = " 3 . 1 " / > 
 @ @ - 418 , 7 + 418 , 6 @ @ 
 	 < dependency groupId = " org . apache . hadoop " artifactId = " hadoop - minicluster " / > 
 < dependency groupId = " org . apache . pig " artifactId = " pig " / > 
 	 < dependency groupId = " com . google . code . findbugs " artifactId = " jsr305 " / > 
 - < dependency groupId = " io . airlift " artifactId = " airline " / > 
 < / artifact : pom > 
 
 < artifact : pom id = " coverage - deps - pom " 
 diff - - git a / lib / guava - 15 . 0 . jar b / lib / guava - 15 . 0 . jar 
 deleted file mode 100644 
 index eb9ef8a . . 0000000 
 Binary files a / lib / guava - 15 . 0 . jar and / dev / null differ 
 diff - - git a / lib / guava - 16 . 0 . jar b / lib / guava - 16 . 0 . jar 
 new file mode 100644 
 index 0000000 . . 7afcb10 
 Binary files / dev / null and b / lib / guava - 16 . 0 . jar differ 
 diff - - git a / lib / licenses / guava - 15 . 0 . txt b / lib / licenses / guava - 15 . 0 . txt 
 deleted file mode 100644 
 index d645695 . . 0000000 
 - - - a / lib / licenses / guava - 15 . 0 . txt 
 + + + / dev / null 
 @ @ - 1 , 202 + 0 , 0 @ @ 
 - 
 - Apache License 
 - Version 2 . 0 , January 2004 
 - http : / / www . apache . org / licenses / 
 - 
 - TERMS AND CONDITIONS FOR USE , REPRODUCTION , AND DISTRIBUTION 
 - 
 - 1 . Definitions . 
 - 
 - " License " shall mean the terms and conditions for use , reproduction , 
 - and distribution as defined by Sections 1 through 9 of this document . 
 - 
 - " Licensor " shall mean the copyright owner or entity authorized by 
 - the copyright owner that is granting the License . 
 - 
 - " Legal Entity " shall mean the union of the acting entity and all 
 - other entities that control , are controlled by , or are under common 
 - control with that entity . For the purposes of this definition , 
 - " control " means ( i ) the power , direct or indirect , to cause the 
 - direction or management of such entity , whether by contract or 
 - otherwise , or ( ii ) ownership of fifty percent ( 50 % ) or more of the 
 - outstanding shares , or ( iii ) beneficial ownership of such entity . 
 - 
 - " You " ( or " Your " ) shall mean an individual or Legal Entity 
 - exercising permissions granted by this License . 
 - 
 - " Source " form shall mean the preferred form for making modifications , 
 - including but not limited to software source code , documentation 
 - source , and configuration files . 
 - 
 - " Object " form shall mean any form resulting from mechanical 
 - transformation or translation of a Source form , including but 
 - not limited to compiled object code , generated documentation , 
 - and conversions to other media types . 
 - 
 - " Work " shall mean the work of authorship , whether in Source or 
 - Object form , made available under the License , as indicated by a 
 - copyright notice that is included in or attached to the work 
 - ( an example is provided in the Appendix below ) . 
 - 
 - " Derivative Works " shall mean any work , whether in Source or Object 
 - form , that is based on ( or derived from ) the Work and for which the 
 - editorial revisions , annotations , elaborations , or other modifications 
 - represent , as a whole , an original work of authorship . For the purposes 
 - of this License , Derivative Works shall not include works that remain 
 - separable from , or merely link ( or bind by name ) to the interfaces of , 
 - the Work and Derivative Works thereof . 
 - 
 - " Contribution " shall mean any work of authorship , including 
 - the original version of the Work and any modifications or additions 
 - to that Work or Derivative Works thereof , that is intentionally 
 - submitted to Licensor for inclusion in the Work by the copyright owner 
 - or by an individual or Legal Entity authorized to submit on behalf of 
 - the copyright owner . For the purposes of this definition , " submitted " 
 - means any form of electronic , verbal , or written communication sent 
 - to the Licensor or its representatives , including but not limited to 
 - communication on electronic mailing lists , source code control systems , 
 - and issue tracking systems that are managed by , or on behalf of , the 
 - Licensor for the purpose of discussing and improving the Work , but 
 - excluding communication that is conspicuously marked or otherwise 
 - designated in writing by the copyright owner as " Not a Contribution . " 
 - 
 - " Contributor " shall mean Licensor and any individual or Legal Entity 
 - on behalf of whom a Contribution has been received by Licensor and 
 - subsequently incorporated within the Work . 
 - 
 - 2 . Grant of Copyright License . Subject to the terms and conditions of 
 - this License , each Contributor hereby grants to You a perpetual , 
 - worldwide , non - exclusive , no - charge , royalty - free , irrevocable 
 - copyright license to reproduce , prepare Derivative Works of , 
 - publicly display , publicly perform , sublicense , and distribute the 
 - Work and such Derivative Works in Source or Object form . 
 - 
 - 3 . Grant of Patent License . Subject to the terms and conditions of 
 - this License , each Contributor hereby grants to You a perpetual , 
 - worldwide , non - exclusive , no - charge , royalty - free , irrevocable 
 - ( except as stated in this section ) patent license to make , have made , 
 - use , offer to sell , sell , import , and otherwise transfer the Work , 
 - where such license applies only to those patent claims licensable 
 - by such Contributor that are necessarily infringed by their 
 - Contribution ( s ) alone or by combination of their Contribution ( s ) 
 - with the Work to which such Contribution ( s ) was submitted . If You 
 - institute patent litigation against any entity ( including a 
 - cross - claim or counterclaim in a lawsuit ) alleging that the Work 
 - or a Contribution incorporated within the Work constitutes direct 
 - or contributory patent infringement , then any patent licenses 
 - granted to You under this License for that Work shall terminate 
 - as of the date such litigation is filed . 
 - 
 - 4 . Redistribution . You may reproduce and distribute copies of the 
 - Work or Derivative Works thereof in any medium , with or without 
 - modifications , and in Source or Object form , provided that You 
 - meet the following conditions : 
 - 
 - ( a ) You must give any other recipients of the Work or 
 - Derivative Works a copy of this License ; and 
 - 
 - ( b ) You must cause any modified files to carry prominent notices 
 - stating that You changed the files ; and 
 - 
 - ( c ) You must retain , in the Source form of any Derivative Works 
 - that You distribute , all copyright , patent , trademark , and 
 - attribution notices from the Source form of the Work , 
 - excluding those notices that do not pertain to any part of 
 - the Derivative Works ; and 
 - 
 - ( d ) If the Work includes a " NOTICE " text file as part of its 
 - distribution , then any Derivative Works that You distribute must 
 - include a readable copy of the attribution notices contained 
 - within such NOTICE file , excluding those notices that do not 
 - pertain to any part of the Derivative Works , in at least one 
 - of the following places : within a NOTICE text file distributed 
 - as part of the Derivative Works ; within the Source form or 
 - documentation , if provided along with the Derivative Works ; or , 
 - within a display generated by the Derivative Works , if and 
 - wherever such third - party notices normally appear . The contents 
 - of the NOTICE file are for informational purposes only and 
 - do not modify the License . You may add Your own attribution 
 - notices within Derivative Works that You distribute , alongside 
 - or as an addendum to the NOTICE text from the Work , provided 
 - that such additional attribution notices cannot be construed 
 - as modifying the License . 
 - 
 - You may add Your own copyright statement to Your modifications and 
 - may provide additional or different license terms and conditions 
 - for use , reproduction , or distribution of Your modifications , or 
 - for any such Derivative Works as a whole , provided Your use , 
 - reproduction , and distribution of the Work otherwise complies with 
 - the conditions stated in this License . 
 - 
 - 5 . Submission of Contributions . Unless You explicitly state otherwise , 
 - any Contribution intentionally submitted for inclusion in the Work 
 - by You to the Licensor shall be under the terms and conditions of 
 - this License , without any additional terms or conditions . 
 - Notwithstanding the above , nothing herein shall supersede or modify 
 - the terms of any separate license agreement you may have executed 
 - with Licensor regarding such Contributions . 
 - 
 - 6 . Trademarks . This License does not grant permission to use the trade 
 - names , trademarks , service marks , or product names of the Licensor , 
 - except as required for reasonable and customary use in describing the 
 - origin of the Work and reproducing the content of the NOTICE file . 
 - 
 - 7 . Disclaimer of Warranty . Unless required by applicable law or 
 - agreed to in writing , Licensor provides the Work ( and each 
 - Contributor provides its Contributions ) on an " AS IS " BASIS , 
 - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or 
 - implied , including , without limitation , any warranties or conditions 
 - of TITLE , NON - INFRINGEMENT , MERCHANTABILITY , or FITNESS FOR A 
 - PARTICULAR PURPOSE . You are solely responsible for determining the 
 - appropriateness of using or redistributing the Work and assume any 
 - risks associated with Your exercise of permissions under this License . 
 - 
 - 8 . Limitation of Liability . In no event and under no legal theory , 
 - whether in tort ( including negligence ) , contract , or otherwise , 
 - unless required by applicable law ( such as deliberate and grossly 
 - negligent acts ) or agreed to in writing , shall any Contributor be 
 - liable to You for damages , including any direct , indirect , special , 
 - incidental , or consequential damages of any character arising as a 
 - result of this License or out of the use or inability to use the 
 - Work ( including but not limited to damages for loss of goodwill , 
 - work stoppage , computer failure or malfunction , or any and all 
 - other commercial damages or losses ) , even if such Contributor 
 - has been advised of the possibility of such damages . 
 - 
 - 9 . Accepting Warranty or Additional Liability . While redistributing 
 - the Work or Derivative Works thereof , You may choose to offer , 
 - and charge a fee for , acceptance of support , warranty , indemnity , 
 - or other liability obligations and / or rights consistent with this 
 - License . However , in accepting such obligations , You may act only 
 - on Your own behalf and on Your sole responsibility , not on behalf 
 - of any other Contributor , and only if You agree to indemnify , 
 - defend , and hold each Contributor harmless for any liability 
 - incurred by , or claims asserted against , such Contributor by reason 
 - of your accepting any such warranty or additional liability . 
 - 
 - END OF TERMS AND CONDITIONS 
 - 
 - APPENDIX : How to apply the Apache License to your work . 
 - 
 - To apply the Apache License to your work , attach the following 
 - boilerplate notice , with the fields enclosed by brackets " [ ] " 
 - replaced with your own identifying information . ( Don ' t include 
 - the brackets ! ) The text should be enclosed in the appropriate 
 - comment syntax for the file format . We also recommend that a 
 - file or class name and description of purpose be included on the 
 - same " printed page " as the copyright notice for easier 
 - identification within third - party archives . 
 - 
 - Copyright [ yyyy ] [ name of copyright owner ] 
 - 
 - Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - you may not use this file except in compliance with the License . 
 - You may obtain a copy of the License at 
 - 
 - http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - 
 - Unless required by applicable law or agreed to in writing , software 
 - distributed under the License is distributed on an " AS IS " BASIS , 
 - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - See the License for the specific language governing permissions and 
 - limitations under the License . 
 diff - - git a / lib / licenses / guava - 16 . 0 . txt b / lib / licenses / guava - 16 . 0 . txt 
 new file mode 100644 
 index 0000000 . . d645695 
 - - - / dev / null 
 + + + b / lib / licenses / guava - 16 . 0 . txt 
 @ @ - 0 , 0 + 1 , 202 @ @ 
 + 
 + Apache License 
 + Version 2 . 0 , January 2004 
 + http : / / www . apache . org / licenses / 
 + 
 + TERMS AND CONDITIONS FOR USE , REPRODUCTION , AND DISTRIBUTION 
 + 
 + 1 . Definitions . 
 + 
 + " License " shall mean the terms and conditions for use , reproduction , 
 + and distribution as defined by Sections 1 through 9 of this document . 
 + 
 + " Licensor " shall mean the copyright owner or entity authorized by 
 + the copyright owner that is granting the License . 
 + 
 + " Legal Entity " shall mean the union of the acting entity and all 
 + other entities that control , are controlled by , or are under common 
 + control with that entity . For the purposes of this definition , 
 + " control " means ( i ) the power , direct or indirect , to cause the 
 + direction or management of such entity , whether by contract or 
 + otherwise , or ( ii ) ownership of fifty percent ( 50 % ) or more of the 
 + outstanding shares , or ( iii ) beneficial ownership of such entity . 
 + 
 + " You " ( or " Your " ) shall mean an individual or Legal Entity 
 + exercising permissions granted by this License . 
 + 
 + " Source " form shall mean the preferred form for making modifications , 
 + including but not limited to software source code , documentation 
 + source , and configuration files . 
 + 
 + " Object " form shall mean any form resulting from mechanical 
 + transformation or translation of a Source form , including but 
 + not limited to compiled object code , generated documentation , 
 + and conversions to other media types . 
 + 
 + " Work " shall mean the work of authorship , whether in Source or 
 + Object form , made available under the License , as indicated by a 
 + copyright notice that is included in or attached to the work 
 + ( an example is provided in the Appendix below ) . 
 + 
 + " Derivative Works " shall mean any work , whether in Source or Object 
 + form , that is based on ( or derived from ) the Work and for which the 
 + editorial revisions , annotations , elaborations , or other modifications 
 + represent , as a whole , an original work of authorship . For the purposes 
 + of this License , Derivative Works shall not include works that remain 
 + separable from , or merely link ( or bind by name ) to the interfaces of , 
 + the Work and Derivative Works thereof . 
 + 
 + " Contribution " shall mean any work of authorship , including 
 + the original version of the Work and any modifications or additions 
 + to that Work or Derivative Works thereof , that is intentionally 
 + submitted to Licensor for inclusion in the Work by the copyright owner 
 + or by an individual or Legal Entity authorized to submit on behalf of 
 + the copyright owner . For the purposes of this definition , " submitted " 
 + means any form of electronic , verbal , or written communication sent 
 + to the Licensor or its representatives , including but not limited to 
 + communication on electronic mailing lists , source code control systems , 
 + and issue tracking systems that are managed by , or on behalf of , the 
 + Licensor for the purpose of discussing and improving the Work , but 
 + excluding communication that is conspicuously marked or otherwise 
 + designated in writing by the copyright owner as " Not a Contribution . " 
 + 
 + " Contributor " shall mean Licensor and any individual or Legal Entity 
 + on behalf of whom a Contribution has been received by Licensor and 
 + subsequently incorporated within the Work . 
 + 
 + 2 . Grant of Copyright License . Subject to the terms and conditions of 
 + this License , each Contributor hereby grants to You a perpetual , 
 + worldwide , non - exclusive , no - charge , royalty - free , irrevocable 
 + copyright license to reproduce , prepare Derivative Works of , 
 + publicly display , publicly perform , sublicense , and distribute the 
 + Work and such Derivative Works in Source or Object form . 
 + 
 + 3 . Grant of Patent License . Subject to the terms and conditions of 
 + this License , each Contributor hereby grants to You a perpetual , 
 + worldwide , non - exclusive , no - charge , royalty - free , irrevocable 
 + ( except as stated in this section ) patent license to make , have made , 
 + use , offer to sell , sell , import , and otherwise transfer the Work , 
 + where such license applies only to those patent claims licensable 
 + by such Contributor that are necessarily infringed by their 
 + Contribution ( s ) alone or by combination of their Contribution ( s ) 
 + with the Work to which such Contribution ( s ) was submitted . If You 
 + institute patent litigation against any entity ( including a 
 + cross - claim or counterclaim in a lawsuit ) alleging that the Work 
 + or a Contribution incorporated within the Work constitutes direct 
 + or contributory patent infringement , then any patent licenses 
 + granted to You under this License for that Work shall terminate 
 + as of the date such litigation is filed . 
 + 
 + 4 . Redistribution . You may reproduce and distribute copies of the 
 + Work or Derivative Works thereof in any medium , with or without 
 + modifications , and in Source or Object form , provided that You 
 + meet the following conditions : 
 + 
 + ( a ) You must give any other recipients of the Work or 
 + Derivative Works a copy of this License ; and 
 + 
 + ( b ) You must cause any modified files to carry prominent notices 
 + stating that You changed the files ; and 
 + 
 + ( c ) You must retain , in the Source form of any Derivative Works 
 + that You distribute , all copyright , patent , trademark , and 
 + attribution notices from the Source form of the Work , 
 + excluding those notices that do not pertain to any part of 
 + the Derivative Works ; and 
 + 
 + ( d ) If the Work includes a " NOTICE " text file as part of its 
 + distribution , then any Derivative Works that You distribute must 
 + include a readable copy of the attribution notices contained 
 + within such NOTICE file , excluding those notices that do not 
 + pertain to any part of the Derivative Works , in at least one 
 + of the following places : within a NOTICE text file distributed 
 + as part of the Derivative Works ; within the Source form or 
 + documentation , if provided along with the Derivative Works ; or , 
 + within a display generated by the Derivative Works , if and 
 + wherever such third - party notices normally appear . The contents 
 + of the NOTICE file are for informational purposes only and 
 + do not modify the License . You may add Your own attribution 
 + notices within Derivative Works that You distribute , alongside 
 + or as an addendum to the NOTICE text from the Work , provided 
 + that such additional attribution notices cannot be construed 
 + as modifying the License . 
 + 
 + You may add Your own copyright statement to Your modifications and 
 + may provide additional or different license terms and conditions 
 + for use , reproduction , or distribution of Your modifications , or 
 + for any such Derivative Works as a whole , provided Your use , 
 + reproduction , and distribution of the Work otherwise complies with 
 + the conditions stated in this License . 
 + 
 + 5 . Submission of Contributions . Unless You explicitly state otherwise , 
 + any Contribution intentionally submitted for inclusion in the Work 
 + by You to the Licensor shall be under the terms and conditions of 
 + this License , without any additional terms or conditions . 
 + Notwithstanding the above , nothing herein shall supersede or modify 
 + the terms of any separate license agreement you may have executed 
 + with Licensor regarding such Contributions . 
 + 
 + 6 . Trademarks . This License does not grant permission to use the trade 
 + names , trademarks , service marks , or product names of the Licensor , 
 + except as required for reasonable and customary use in describing the 
 + origin of the Work and reproducing the content of the NOTICE file . 
 + 
 + 7 . Disclaimer of Warranty . Unless required by applicable law or 
 + agreed to in writing , Licensor provides the Work ( and each 
 + Contributor provides its Contributions ) on an " AS IS " BASIS , 
 + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or 
 + implied , including , without limitation , any warranties or conditions 
 + of TITLE , NON - INFRINGEMENT , MERCHANTABILITY , or FITNESS FOR A 
 + PARTICULAR PURPOSE . You are solely responsible for determining the 
 + appropriateness of using or redistributing the Work and assume any 
 + risks associated with Your exercise of permissions under this License . 
 + 
 + 8 . Limitation of Liability . In no event and under no legal theory , 
 + whether in tort ( including negligence ) , contract , or otherwise , 
 + unless required by applicable law ( such as deliberate and grossly 
 + negligent acts ) or agreed to in writing , shall any Contributor be 
 + liable to You for damages , including any direct , indirect , special , 
 + incidental , or consequential damages of any character arising as a 
 + result of this License or out of the use or inability to use the 
 + Work ( including but not limited to damages for loss of goodwill , 
 + work stoppage , computer failure or malfunction , or any and all 
 + other commercial damages or losses ) , even if such Contributor 
 + has been advised of the possibility of such damages . 
 + 
 + 9 . Accepting Warranty or Additional Liability . While redistributing 
 + the Work or Derivative Works thereof , You may choose to offer , 
 + and charge a fee for , acceptance of support , warranty , indemnity , 
 + or other liability obligations and / or rights consistent with this 
 + License . However , in accepting such obligations , You may act only 
 + on Your own behalf and on Your sole responsibility , not on behalf 
 + of any other Contributor , and only if You agree to indemnify , 
 + defend , and hold each Contributor harmless for any liability 
 + incurred by , or claims asserted against , such Contributor by reason 
 + of your accepting any such warranty or additional liability . 
 + 
 + END OF TERMS AND CONDITIONS 
 + 
 + APPENDIX : How to apply the Apache License to your work . 
 + 
 + To apply the Apache License to your work , attach the following 
 + boilerplate notice , with the fields enclosed by brackets " [ ] " 
 + replaced with your own identifying information . ( Don ' t include 
 + the brackets ! ) The text should be enclosed in the appropriate 
 + comment syntax for the file format . We also recommend that a 
 + file or class name and description of purpose be included on the 
 + same " printed page " as the copyright notice for easier 
 + identification within third - party archives . 
 + 
 + Copyright [ yyyy ] [ name of copyright owner ] 
 + 
 + Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + you may not use this file except in compliance with the License . 
 + You may obtain a copy of the License at 
 + 
 + http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + 
 + Unless required by applicable law or agreed to in writing , software 
 + distributed under the License is distributed on an " AS IS " BASIS , 
 + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + See the License for the specific language governing permissions and 
 + limitations under the License . 
 diff - - git a / src / java / org / apache / cassandra / tracing / TraceState . java b / src / java / org / apache / cassandra / tracing / TraceState . java 
 index 7f60433 . . de8ca44 100644 
 - - - a / src / java / org / apache / cassandra / tracing / TraceState . java 
 + + + b / src / java / org / apache / cassandra / tracing / TraceState . java 
 @ @ - 55 , 13 + 55 , 12 @ @ public class TraceState 
 this . coordinator = coordinator ; 
 this . sessionId = sessionId ; 
 sessionIdBytes = ByteBufferUtil . bytes ( sessionId ) ; 
 - watch = new Stopwatch ( ) ; 
 - watch . start ( ) ; 
 + watch = Stopwatch . createStarted ( ) ; 
 } 
 
 public int elapsed ( ) 
 { 
 - long elapsed = watch . elapsedTime ( TimeUnit . MICROSECONDS ) ; 
 + long elapsed = watch . elapsed ( TimeUnit . MICROSECONDS ) ; 
 return elapsed < Integer . MAX _ VALUE ? ( int ) elapsed : Integer . MAX _ VALUE ; 
 } 


NEAREST DIFF:
diff - - git a / conf / storage - conf . xml b / conf / storage - conf . xml 
 index 8aaeeb6 . . 25d2901 100644 
 - - - a / conf / storage - conf . xml 
 + + + b / conf / storage - conf . xml 
 @ @ - 308 , 4 + 308 , 19 @ @ 
 ~ ten days . 
 - - > 
 < GCGraceSeconds > 864000 < / GCGraceSeconds > 
 + 
 + < ! - - 
 + ~ Number of threads to run when flushing memtables to disk . Set this to 
 + ~ the number of disks you physically have in your machine allocated for DataDirectory * 2 . 
 + ~ If you are planning to use the Binary Memtable , its recommended to increase the max threads 
 + ~ to maintain a higher quality of service while under load when normal memtables are flushing to disk . 
 + - - > 
 + < FlushMinThreads > 1 < / FlushMinThreads > 
 + < FlushMaxThreads > 1 < / FlushMaxThreads > 
 + 
 + < ! - - 
 + ~ The threshold size in megabytes the binary memtable must grow to , before it ' s submitted for flushing to disk . 
 + - - > 
 + < BinaryMemtableSizeInMB > 256 < / BinaryMemtableSizeInMB > 
 + 
 < / Storage > 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 9016676 . . e86b134 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 74 , 6 + 74 , 9 @ @ public class DatabaseDescriptor 
 private static int slicedReadBufferSizeInKB _ = 64 ; 
 private static List < String > tables _ = new ArrayList < String > ( ) ; 
 private static Set < String > applicationColumnFamilies _ = new HashSet < String > ( ) ; 
 + private static int flushMinThreads _ = 1 ; 
 + private static int flushMaxThreads _ = 1 ; 
 + private static int bmtThreshold _ = 256 ; 
 
 / / Default descriptive names for introspection . The user can override 
 / / these choices in the config file . These are not case sensitive . 
 @ @ - 271 , 6 + 274 , 24 @ @ public class DatabaseDescriptor 
 slicedReadBufferSizeInKB _ = Integer . parseInt ( rawSlicedBuffer ) ; 
 } 
 
 + String rawflushMinThreads = xmlUtils . getNodeValue ( " / Storage / FlushMinThreads " ) ; 
 + if ( rawflushMinThreads ! = null ) 
 + { 
 + flushMinThreads _ = Integer . parseInt ( rawflushMinThreads ) ; 
 + } 
 + 
 + String rawflushMaxThreads = xmlUtils . getNodeValue ( " / Storage / FlushMaxThreads " ) ; 
 + if ( rawflushMaxThreads ! = null ) 
 + { 
 + flushMaxThreads _ = Integer . parseInt ( rawflushMaxThreads ) ; 
 + } 
 + 
 + String bmtThreshold = xmlUtils . getNodeValue ( " / Storage / BinaryMemtableSizeInMB " ) ; 
 + if ( bmtThreshold ! = null ) 
 + { 
 + bmtThreshold _ = Integer . parseInt ( bmtThreshold ) ; 
 + } 
 + 
 / * TCP port on which the storage system listens * / 
 String port = xmlUtils . getNodeValue ( " / Storage / StoragePort " ) ; 
 if ( port ! = null ) 
 @ @ - 999 , 4 + 1020 , 19 @ @ public class DatabaseDescriptor 
 { 
 return slicedReadBufferSizeInKB _ ; 
 } 
 + 
 + public static int getFlushMinThreads ( ) 
 + { 
 + return flushMinThreads _ ; 
 + } 
 + 
 + public static int getFlushMaxThreads ( ) 
 + { 
 + return flushMaxThreads _ ; 
 + } 
 + 
 + public static int getBMTThreshold ( ) 
 + { 
 + return bmtThreshold _ ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / BinaryMemtable . java b / src / java / org / apache / cassandra / db / BinaryMemtable . java 
 index 2cd439a . . 4530e8b 100644 
 - - - a / src / java / org / apache / cassandra / db / BinaryMemtable . java 
 + + + b / src / java / org / apache / cassandra / db / BinaryMemtable . java 
 @ @ - 34 , 11 + 34 , 13 @ @ import org . apache . cassandra . config . DatabaseDescriptor ; 
 
 import org . apache . log4j . Logger ; 
 import org . cliffc . high _ scale _ lib . NonBlockingHashMap ; 
 + import java . util . * ; 
 + import org . apache . cassandra . dht . IPartitioner ; 
 
 public class BinaryMemtable 
 { 
 private static Logger logger _ = Logger . getLogger ( Memtable . class ) ; 
 - private int threshold _ = 512 * 1024 * 1024 ; 
 + private int threshold _ = DatabaseDescriptor . getBMTThreshold ( ) * 1024 * 1024 ; 
 private AtomicInteger currentSize _ = new AtomicInteger ( 0 ) ; 
 
 / * Table and ColumnFamily name are used to determine the ColumnFamilyStore * / 
 @ @ - 138 , 10 + 140 , 31 @ @ public class BinaryMemtable 
 * Use the SSTable to write the contents of the TreeMap 
 * to disk . 
 * / 
 + 
 + String path ; 
 + SSTableWriter writer ; 
 ColumnFamilyStore cfStore = Table . open ( table _ ) . getColumnFamilyStore ( cfName _ ) ; 
 List < String > keys = new ArrayList < String > ( columnFamilies _ . keySet ( ) ) ; 
 - SSTableWriter writer = new SSTableWriter ( cfStore . getTempSSTablePath ( ) , keys . size ( ) , StorageService . getPartitioner ( ) ) ; 
 - Collections . sort ( keys ) ; 
 + / * 
 + Adding a lock here so data directories are evenly used . By default currentIndex 
 + is incremented , not an AtomicInteger . Let ' s fix this ! 
 + * / 
 + lock _ . lock ( ) ; 
 + try 
 + { 
 + path = cfStore . getTempSSTablePath ( ) ; 
 + writer = new SSTableWriter ( path , keys . size ( ) , StorageService . getPartitioner ( ) ) ; 
 + } 
 + finally 
 + { 
 + lock _ . unlock ( ) ; 
 + } 
 + 
 + final IPartitioner partitioner = StorageService . getPartitioner ( ) ; 
 + final Comparator < String > dc = partitioner . getDecoratedKeyComparator ( ) ; 
 + Collections . sort ( keys , dc ) ; 
 + 
 + 
 / * Use this BloomFilter to decide if a key exists in a SSTable * / 
 for ( String key : keys ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index b08cf6b . . af6e247 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 38 , 6 + 38 , 7 @ @ import org . apache . cassandra . net . EndPoint ; 
 import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . utils . * ; 
 import org . apache . cassandra . concurrent . DebuggableThreadPoolExecutor ; 
 + import org . apache . cassandra . concurrent . ThreadFactoryImpl ; 
 import org . apache . cassandra . db . filter . * ; 
 import org . apache . cassandra . db . marshal . AbstractType ; 
 
 @ @ - 55 , 8 + 56 , 8 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 private static final int BUFSIZE = 128 * 1024 * 1024 ; 
 
 private static NonBlockingHashMap < String , Set < Memtable > > memtablesPendingFlush = new NonBlockingHashMap < String , Set < Memtable > > ( ) ; 
 - private static ExecutorService flusher _ = new DebuggableThreadPoolExecutor ( " MEMTABLE - FLUSHER - POOL " ) ; 
 - 
 + private static ExecutorService flusher _ = new DebuggableThreadPoolExecutor ( DatabaseDescriptor . getFlushMinThreads ( ) , DatabaseDescriptor . getFlushMaxThreads ( ) , Integer . MAX _ VALUE , TimeUnit . SECONDS , new LinkedBlockingQueue < Runnable > ( ) , new ThreadFactoryImpl ( " MEMTABLE - FLUSHER - POOL " ) ) ; 
 + 
 private final String table _ ; 
 public final String columnFamily _ ; 
 private final boolean isSuper _ ; 
 @ @ - 457 , 7 + 458 , 7 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 assert oldMemtable . isFlushed ( ) | | oldMemtable . isClean ( ) ; 
 } 
 
 - void forceFlushBinary ( ) 
 + public void forceFlushBinary ( ) 
 { 
 submitFlush ( binaryMemtable _ . get ( ) ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java 
 index 54389e5 . . 04b28fb 100644 
 - - - a / src / java / org / apache / cassandra / db / Table . java 
 + + + b / src / java / org / apache / cassandra / db / Table . java 
 @ @ - 642 , 11 + 642 , 11 @ @ public class Table 
 for ( ColumnFamily columnFamily : row . getColumnFamilies ( ) ) 
 { 
 Collection < IColumn > columns = columnFamily . getSortedColumns ( ) ; 
 - for ( IColumn column : columns ) 
 + for ( IColumn column : columns ) 
 { 
 - ColumnFamilyStore cfStore = columnFamilyStores _ . get ( column . name ( ) ) ; 
 + ColumnFamilyStore cfStore = columnFamilyStores _ . get ( new String ( column . name ( ) , " UTF - 8 " ) ) ; 
 cfStore . applyBinary ( key , column . value ( ) ) ; 
 - 	 } 
 + } 
 } 
 row . clear ( ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index 954324b . . 21f97d2 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 478 , 14 + 478 , 26 @ @ public class MessagingService implements IMessagingService 
 { 
 isStreaming _ . set ( bVal ) ; 
 } 
 + public static void flushAndshutdown ( ) 
 + { 
 + / / safely shutdown and send all writes 
 + for ( Map . Entry < String , TcpConnectionManager > entry : poolTable _ . entrySet ( ) ) 
 + { 
 + for ( TcpConnection connection : entry . getValue ( ) . getConnections ( ) ) 
 + { 
 + connection . doPendingWrites ( ) ; 
 + } 
 + } 
 + shutdown ( ) ; 
 + } 
 
 public static void shutdown ( ) 
 { 
 logger _ . info ( " Shutting down . . . " ) ; 
 - synchronized ( MessagingService . class ) 
 - { 
 - / * Stop listening on any socket * / 
 - for ( SelectionKey skey : listenSockets _ . values ( ) ) 
 + synchronized ( MessagingService . class ) 
 + { 
 + / * Stop listening on any socket * / 
 + for ( SelectionKey skey : listenSockets _ . values ( ) ) 
 { 
 skey . cancel ( ) ; 
 try 
 @ @ - 495 , 26 + 507 , 25 @ @ public class MessagingService implements IMessagingService 
 catch ( IOException e ) { } 
 } 
 listenSockets _ . clear ( ) ; 
 - 
 - / * Shutdown the threads in the EventQueue ' s * / 
 - messageDeserializationExecutor _ . shutdownNow ( ) ; 
 + 
 + / * Shutdown the threads in the EventQueue ' s * / 
 + messageDeserializationExecutor _ . shutdownNow ( ) ; 
 messageSerializerExecutor _ . shutdownNow ( ) ; 
 messageDeserializerExecutor _ . shutdownNow ( ) ; 
 streamExecutor _ . shutdownNow ( ) ; 
 - 
 + 
 / * shut down the cachetables * / 
 taskCompletionMap _ . shutdown ( ) ; 
 - callbackMap _ . shutdown ( ) ; 
 - 
 + callbackMap _ . shutdown ( ) ; 
 + 
 / * Interrupt the selector manager thread * / 
 SelectorManager . getSelectorManager ( ) . interrupt ( ) ; 
 - 
 - poolTable _ . clear ( ) ; 
 - verbHandlers _ . clear ( ) ; 
 + 
 + poolTable _ . clear ( ) ; 
 + verbHandlers _ . clear ( ) ; 
 bShutdown _ = true ; 
 } 
 - if ( logger _ . isDebugEnabled ( ) ) 
 - logger _ . debug ( " Shutdown invocation complete . " ) ; 
 + logger _ . info ( " Shutdown invocation complete . " ) ; 
 } 
 
 public static void receive ( Message message ) 
 diff - - git a / src / java / org / apache / cassandra / net / TcpConnection . java b / src / java / org / apache / cassandra / net / TcpConnection . java 
 index 5039833 . . 08afda8 100644 
 - - - a / src / java / org / apache / cassandra / net / TcpConnection . java 
 + + + b / src / java / org / apache / cassandra / net / TcpConnection . java 
 @ @ - 387 , 7 + 387 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable 
 resumeStreaming ( ) ; 
 } 
 
 - void doPendingWrites ( ) 
 + public void doPendingWrites ( ) 
 { 
 synchronized ( this ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / net / TcpConnectionManager . java b / src / java / org / apache / cassandra / net / TcpConnectionManager . java 
 index e29eb9d . . b8fa909 100644 
 - - - a / src / java / org / apache / cassandra / net / TcpConnectionManager . java 
 + + + b / src / java / org / apache / cassandra / net / TcpConnectionManager . java 
 @ @ - 211 , 4 + 211 , 8 @ @ class TcpConnectionManager 
 { 
 return allConnections _ . contains ( connection ) ; 
 } 
 + List < TcpConnection > getConnections ( ) 
 + { 
 + return allConnections _ ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 62cc110 . . 0e2dd24 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 778 , 6 + 778 , 24 @ @ public final class StorageService implements IEndPointStateChangeSubscriber , Sto 
 logger _ . debug ( " Cleared out all snapshot directories " ) ; 
 } 
 
 + public void forceTableFlushBinary ( String tableName ) throws IOException 
 + { 
 + if ( DatabaseDescriptor . getTable ( tableName ) = = null ) 
 + { 
 + throw new IOException ( " Table " + tableName + " does not exist " ) ; 
 + } 
 + 
 + Table table = Table . open ( tableName ) ; 
 + Set < String > columnFamilies = table . getColumnFamilies ( ) ; 
 + for ( String columnFamily : columnFamilies ) 
 + { 
 + ColumnFamilyStore cfStore = table . getColumnFamilyStore ( columnFamily ) ; 
 + logger _ . debug ( " Forcing flush on keyspace " + tableName + " on CF " + columnFamily ) ; 
 + cfStore . forceFlushBinary ( ) ; 
 + } 
 + } 
 + 
 + 
 / * End of MBean interface methods * / 
 
 / * * 
 diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 index 2e21ecb . . 046fb26 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 @ @ - 84 , 4 + 84 , 11 @ @ public interface StorageServiceMBean 
 * Remove all the existing snapshots . 
 * / 
 public void clearSnapshot ( ) throws IOException ; 
 + 
 + / * * 
 + * Flush all binary memtables for a table 
 + * @ param tableName 
 + * @ throws IOException 
 + * / 
 + public void forceTableFlushBinary ( String tableName ) throws IOException ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index f0df925 . . b6d846f 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 257 , 7 + 257 , 16 @ @ public class NodeProbe 
 { 
 ssProxy . forceTableCompaction ( ) ; 
 } 
 - 
 + 
 + / * * 
 + * Trigger a binary flush on CFs of a table . 
 + * / 
 + public void forceTableFlushBinary ( String tableName ) throws IOException 
 + { 
 + ssProxy . forceTableFlushBinary ( tableName ) ; 
 + } 
 + 
 + 
 / * * 
 * Write a textual representation of the Cassandra ring . 
 * 
 @ @ - 517 , 7 + 526 , 7 @ @ public class NodeProbe 
 { 
 HelpFormatter hf = new HelpFormatter ( ) ; 
 String header = String . format ( 
 - " % nAvailable commands : ring , cluster , info , cleanup , compact , cfstats , snapshot [ name ] , clearsnapshot , bootstrap , tpstats " ) ; 
 + " % nAvailable commands : ring , cluster , info , cleanup , compact , cfstats , snapshot [ name ] , clearsnapshot , bootstrap , tpstats , flush _ binary " ) ; 
 String usage = String . format ( " java % s - host < arg > < command > % n " , NodeProbe . class . getName ( ) ) ; 
 hf . printHelp ( usage , " " , options , header ) ; 
 } 
 @ @ - 609 , 6 + 618 , 16 @ @ public class NodeProbe 
 { 
 probe . printThreadPoolStats ( System . out ) ; 
 } 
 + else if ( cmdName . equals ( " flush _ binary " ) ) 
 + { 
 + if ( probe . getArgs ( ) . length < 2 ) 
 + { 
 + System . err . println ( " Missing keyspace argument . " ) ; 
 + NodeProbe . printUsage ( ) ; 
 + System . exit ( 1 ) ; 
 + } 
 + probe . forceTableFlushBinary ( probe . getArgs ( ) [ 1 ] ) ; 
 + } 
 else 
 { 
 System . err . println ( " Unrecognized command : " + cmdName + " . " ) ;
