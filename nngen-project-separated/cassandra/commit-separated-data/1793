BLEU SCORE: 0.018738883683389617

TEST MSG: Don ' t check if sstables are live for offline compactions
GENERATED MSG: expose bloom filter sizes via JMX

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d41a1a4 . . a48787f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 4 <nl> + * Don ' t check if an sstable is live for offline compactions ( CASSANDRA - 8841 ) <nl> * Don ' t set clientMode in SSTableLoader ( CASSANDRA - 8238 ) <nl> * Fix SSTableRewriter with disabled early open ( CASSANDRA - 8535 ) <nl> * Allow invalidating permissions and cache time ( CASSANDRA - 8722 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java <nl> index 2c2053c . . 757b48a 100644 <nl> - - - a / src / java / org / apache / cassandra / db / DataTracker . java <nl> + + + b / src / java / org / apache / cassandra / db / DataTracker . java <nl> @ @ - 194 , 9 + 194 , 9 @ @ public class DataTracker <nl> * / <nl> public boolean markCompacting ( Collection < SSTableReader > sstables ) <nl> { <nl> - return markCompacting ( sstables , false ) ; <nl> + return markCompacting ( sstables , false , false ) ; <nl> } <nl> - public boolean markCompacting ( Collection < SSTableReader > sstables , boolean newTables ) <nl> + public boolean markCompacting ( Collection < SSTableReader > sstables , boolean newTables , boolean offline ) <nl> { <nl> assert sstables ! = null & & ! Iterables . isEmpty ( sstables ) ; <nl> while ( true ) <nl> @ @ - 214 , 7 + 214 , 7 @ @ public class DataTracker <nl> } ; <nl> if ( newTables ) <nl> assert ! Iterables . any ( sstables , Predicates . in ( currentView . sstables ) ) ; <nl> - else if ( ! Iterables . all ( sstables , live ) ) <nl> + else if ( ! offline & & ! Iterables . all ( sstables , live ) ) <nl> return false ; <nl> <nl> View newView = currentView . markCompacting ( sstables ) ; <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java <nl> index 641dd7c . . 19b2b2c 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java <nl> @ @ - 351 , 7 + 351 , 7 @ @ public class SSTableRewriter <nl> } <nl> else <nl> { <nl> - dataTracker . markCompacting ( Collections . singleton ( replaceWith ) , true ) ; <nl> + dataTracker . markCompacting ( Collections . singleton ( replaceWith ) , true , isOffline ) ; <nl> toReplaceSet = Collections . emptySet ( ) ; <nl> } <nl> dataTracker . replaceEarlyOpenedFiles ( toReplaceSet , Collections . singleton ( replaceWith ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / StandaloneSplitter . java b / src / java / org / apache / cassandra / tools / StandaloneSplitter . java <nl> index 242b1c0 . . bc614cc 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / StandaloneSplitter . java <nl> + + + b / src / java / org / apache / cassandra / tools / StandaloneSplitter . java <nl> @ @ - 146 , 7 + 146 , 7 @ @ public class StandaloneSplitter <nl> if ( options . snapshot ) <nl> System . out . println ( String . format ( " Pre - split sstables snapshotted into snapshot % s " , snapshotName ) ) ; <nl> <nl> - cfs . getDataTracker ( ) . markCompacting ( sstables ) ; <nl> + cfs . getDataTracker ( ) . markCompacting ( sstables , false , true ) ; <nl> for ( SSTableReader sstable : sstables ) <nl> { <nl> try <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java <nl> index 76b89e5 . . 09937bc 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java <nl> @ @ - 577 , 7 + 577 , 7 @ @ public class SSTableRewriterTest extends SchemaLoader <nl> cfs . truncateBlocking ( ) ; <nl> cfs . disableAutoCompaction ( ) ; <nl> SSTableReader s = writeFile ( cfs , 1000 ) ; <nl> - cfs . getDataTracker ( ) . markCompacting ( Arrays . asList ( s ) , true ) ; <nl> + cfs . getDataTracker ( ) . markCompacting ( Arrays . asList ( s ) , true , false ) ; <nl> SSTableSplitter splitter = new SSTableSplitter ( cfs , s , 10 ) ; <nl> splitter . split ( ) ; <nl> Thread . sleep ( 1000 ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 425a02a . . 649eb82 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 11 , 7 + 11 , 6 @ @ <nl> Merged from 0 . 8 : <nl> * fix concurrence issue in the FailureDetector ( CASSANDRA - 3519 ) <nl> * fix array out of bounds error in counter shard removal ( CASSANDRA - 3514 ) <nl> - Merged from 0 . 8 : <nl> * avoid dropping tombstones when they might still be needed to shadow <nl> data in a different sstable ( CASSANDRA - 2786 ) <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d41a1a4 . . a48787f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 4 
 + * Don ' t check if an sstable is live for offline compactions ( CASSANDRA - 8841 ) 
 * Don ' t set clientMode in SSTableLoader ( CASSANDRA - 8238 ) 
 * Fix SSTableRewriter with disabled early open ( CASSANDRA - 8535 ) 
 * Allow invalidating permissions and cache time ( CASSANDRA - 8722 ) 
 diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java 
 index 2c2053c . . 757b48a 100644 
 - - - a / src / java / org / apache / cassandra / db / DataTracker . java 
 + + + b / src / java / org / apache / cassandra / db / DataTracker . java 
 @ @ - 194 , 9 + 194 , 9 @ @ public class DataTracker 
 * / 
 public boolean markCompacting ( Collection < SSTableReader > sstables ) 
 { 
 - return markCompacting ( sstables , false ) ; 
 + return markCompacting ( sstables , false , false ) ; 
 } 
 - public boolean markCompacting ( Collection < SSTableReader > sstables , boolean newTables ) 
 + public boolean markCompacting ( Collection < SSTableReader > sstables , boolean newTables , boolean offline ) 
 { 
 assert sstables ! = null & & ! Iterables . isEmpty ( sstables ) ; 
 while ( true ) 
 @ @ - 214 , 7 + 214 , 7 @ @ public class DataTracker 
 } ; 
 if ( newTables ) 
 assert ! Iterables . any ( sstables , Predicates . in ( currentView . sstables ) ) ; 
 - else if ( ! Iterables . all ( sstables , live ) ) 
 + else if ( ! offline & & ! Iterables . all ( sstables , live ) ) 
 return false ; 
 
 View newView = currentView . markCompacting ( sstables ) ; 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java 
 index 641dd7c . . 19b2b2c 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java 
 @ @ - 351 , 7 + 351 , 7 @ @ public class SSTableRewriter 
 } 
 else 
 { 
 - dataTracker . markCompacting ( Collections . singleton ( replaceWith ) , true ) ; 
 + dataTracker . markCompacting ( Collections . singleton ( replaceWith ) , true , isOffline ) ; 
 toReplaceSet = Collections . emptySet ( ) ; 
 } 
 dataTracker . replaceEarlyOpenedFiles ( toReplaceSet , Collections . singleton ( replaceWith ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / tools / StandaloneSplitter . java b / src / java / org / apache / cassandra / tools / StandaloneSplitter . java 
 index 242b1c0 . . bc614cc 100644 
 - - - a / src / java / org / apache / cassandra / tools / StandaloneSplitter . java 
 + + + b / src / java / org / apache / cassandra / tools / StandaloneSplitter . java 
 @ @ - 146 , 7 + 146 , 7 @ @ public class StandaloneSplitter 
 if ( options . snapshot ) 
 System . out . println ( String . format ( " Pre - split sstables snapshotted into snapshot % s " , snapshotName ) ) ; 
 
 - cfs . getDataTracker ( ) . markCompacting ( sstables ) ; 
 + cfs . getDataTracker ( ) . markCompacting ( sstables , false , true ) ; 
 for ( SSTableReader sstable : sstables ) 
 { 
 try 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java 
 index 76b89e5 . . 09937bc 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java 
 @ @ - 577 , 7 + 577 , 7 @ @ public class SSTableRewriterTest extends SchemaLoader 
 cfs . truncateBlocking ( ) ; 
 cfs . disableAutoCompaction ( ) ; 
 SSTableReader s = writeFile ( cfs , 1000 ) ; 
 - cfs . getDataTracker ( ) . markCompacting ( Arrays . asList ( s ) , true ) ; 
 + cfs . getDataTracker ( ) . markCompacting ( Arrays . asList ( s ) , true , false ) ; 
 SSTableSplitter splitter = new SSTableSplitter ( cfs , s , 10 ) ; 
 splitter . split ( ) ; 
 Thread . sleep ( 1000 ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 425a02a . . 649eb82 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 11 , 7 + 11 , 6 @ @ 
 Merged from 0 . 8 : 
 * fix concurrence issue in the FailureDetector ( CASSANDRA - 3519 ) 
 * fix array out of bounds error in counter shard removal ( CASSANDRA - 3514 ) 
 - Merged from 0 . 8 : 
 * avoid dropping tombstones when they might still be needed to shadow 
 data in a different sstable ( CASSANDRA - 2786 ) 

