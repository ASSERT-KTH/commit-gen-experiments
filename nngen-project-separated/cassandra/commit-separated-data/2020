BLEU SCORE: 0.04266331692956902

TEST MSG: Improve client notification that nodes are ready for requests
GENERATED MSG: Ensures all UP events are reported by the native protocol

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4387d81 . . 0ec3ff1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 12 : <nl> + * Improve client notification that nodes are ready for requests ( CASSANDRA - 7510 ) <nl> * Handle negative timestamp in writetime method ( CASSANDRA - 8139 ) <nl> * Pig : Remove errant LIMIT clause in CqlNativeStorage ( CASSANDRA - 8166 ) <nl> * Throw ConfigurationException when hsha is used with the default <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 4973e40 . . 1f831b9 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1616 , 6 + 1616 , 14 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> subscriber . onMove ( endpoint ) ; <nl> } <nl> } <nl> + else <nl> + { <nl> + if ( ! isClientMode ) <nl> + { <nl> + for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) <nl> + subscriber . onJoinCluster ( endpoint ) ; <nl> + } <nl> + } <nl> <nl> PendingRangeCalculatorService . instance . update ( ) ; <nl> } <nl> @ @ - 1982 , 11 + 1990 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) <nl> subscriber . onUp ( endpoint ) ; <nl> } <nl> - else <nl> - { <nl> - for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) <nl> - subscriber . onJoinCluster ( endpoint ) ; <nl> - } <nl> } <nl> <nl> public void onRemove ( InetAddress endpoint )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b98eea6 . . b47f03d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 10 , 6 + 10 , 7 @ @ <nl> * Fix bulkloader ( CASSANDRA - 5542 ) <nl> * Add LZ4 compression to the native protocol ( CASSANDRA - 5765 ) <nl> * Fix bugs in the native protocol v2 ( CASSANDRA - 5770 ) <nl> + * CAS on ' primary key only ' table ( CASSANDRA - 5715 ) <nl> <nl> <nl> 2 . 0 . 0 - beta1 <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / Cql . g b / src / java / org / apache / cassandra / cql3 / Cql . g <nl> index 88e994d . . 0d55854 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / Cql . g <nl> + + + b / src / java / org / apache / cassandra / cql3 / Cql . g <nl> @ @ - 287 , 14 + 287 , 21 @ @ insertStatement returns [ UpdateStatement . ParsedInsert expr ] <nl> Attributes . Raw attrs = new Attributes . Raw ( ) ; <nl> List < ColumnIdentifier > columnNames = new ArrayList < ColumnIdentifier > ( ) ; <nl> List < Term . Raw > values = new ArrayList < Term . Raw > ( ) ; <nl> + boolean ifNotExists = false ; <nl> } <nl> : K _ INSERT K _ INTO cf = columnFamilyName <nl> ' ( ' c1 = cident { columnNames . add ( c1 ) ; } ( ' , ' cn = cident { columnNames . add ( cn ) ; } ) * ' ) ' <nl> K _ VALUES <nl> ' ( ' v1 = term { values . add ( v1 ) ; } ( ' , ' vn = term { values . add ( vn ) ; } ) * ' ) ' <nl> + <nl> + ( K _ IF K _ NOT K _ EXISTS { ifNotExists = true ; } ) ? <nl> ( usingClause [ attrs ] ) ? <nl> { <nl> - $ expr = new UpdateStatement . ParsedInsert ( cf , attrs , columnNames , values ) ; <nl> + $ expr = new UpdateStatement . ParsedInsert ( cf , <nl> + attrs , <nl> + columnNames , <nl> + values , <nl> + ifNotExists ) ; <nl> } <nl> ; <nl> <nl> @ @ - 325 , 21 + 332 , 19 @ @ updateStatement returns [ UpdateStatement . ParsedUpdate expr ] <nl> @ init { <nl> Attributes . Raw attrs = new Attributes . Raw ( ) ; <nl> List < Pair < ColumnIdentifier , Operation . RawUpdate > > operations = new ArrayList < Pair < ColumnIdentifier , Operation . RawUpdate > > ( ) ; <nl> - boolean ifNotExists = false ; <nl> } <nl> : K _ UPDATE cf = columnFamilyName <nl> ( usingClause [ attrs ] ) ? <nl> K _ SET columnOperation [ operations ] ( ' , ' columnOperation [ operations ] ) * <nl> K _ WHERE wclause = whereClause <nl> - ( K _ IF ( K _ NOT K _ EXISTS { ifNotExists = true ; } | conditions = updateCondition ) ) ? <nl> + ( K _ IF conditions = updateCondition ) ? <nl> { <nl> return new UpdateStatement . ParsedUpdate ( cf , <nl> attrs , <nl> operations , <nl> wclause , <nl> - conditions = = null ? Collections . < Pair < ColumnIdentifier , Operation . RawUpdate > > emptyList ( ) : conditions , <nl> - ifNotExists ) ; <nl> - } <nl> + conditions = = null ? Collections . < Pair < ColumnIdentifier , Operation . RawUpdate > > emptyList ( ) : conditions ) ; <nl> + } <nl> ; <nl> <nl> updateCondition returns [ List < Pair < ColumnIdentifier , Operation . RawUpdate > > conditions ] <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java b / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java <nl> index 3cb58ea . . d27493f 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java <nl> @ @ - 114 , 9 + 114 , 12 @ @ public class UpdateStatement extends ModificationStatement <nl> * @ param columnValues list of column values ( corresponds to names ) <nl> * @ param attrs additional attributes for statement ( CL , timestamp , timeToLive ) <nl> * / <nl> - public ParsedInsert ( CFName name , Attributes . Raw attrs , List < ColumnIdentifier > columnNames , List < Term . Raw > columnValues ) <nl> + public ParsedInsert ( CFName name , <nl> + Attributes . Raw attrs , <nl> + List < ColumnIdentifier > columnNames , List < Term . Raw > columnValues , <nl> + boolean ifNotExists ) <nl> { <nl> - super ( name , attrs , Collections . < Pair < ColumnIdentifier , Operation . RawUpdate > > emptyList ( ) , false ) ; <nl> + super ( name , attrs , null , ifNotExists ) ; <nl> this . columnNames = columnNames ; <nl> this . columnValues = columnValues ; <nl> } <nl> @ @ - 184 , 10 + 187 , 9 @ @ public class UpdateStatement extends ModificationStatement <nl> Attributes . Raw attrs , <nl> List < Pair < ColumnIdentifier , Operation . RawUpdate > > updates , <nl> List < Relation > whereClause , <nl> - List < Pair < ColumnIdentifier , Operation . RawUpdate > > conditions , <nl> - boolean ifNotExists ) <nl> + List < Pair < ColumnIdentifier , Operation . RawUpdate > > conditions ) <nl> { <nl> - super ( name , attrs , conditions , ifNotExists ) ; <nl> + super ( name , attrs , conditions , false ) ; <nl> this . updates = updates ; <nl> this . whereClause = whereClause ; <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4387d81 . . 0ec3ff1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 12 : 
 + * Improve client notification that nodes are ready for requests ( CASSANDRA - 7510 ) 
 * Handle negative timestamp in writetime method ( CASSANDRA - 8139 ) 
 * Pig : Remove errant LIMIT clause in CqlNativeStorage ( CASSANDRA - 8166 ) 
 * Throw ConfigurationException when hsha is used with the default 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 4973e40 . . 1f831b9 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1616 , 6 + 1616 , 14 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 subscriber . onMove ( endpoint ) ; 
 } 
 } 
 + else 
 + { 
 + if ( ! isClientMode ) 
 + { 
 + for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) 
 + subscriber . onJoinCluster ( endpoint ) ; 
 + } 
 + } 
 
 PendingRangeCalculatorService . instance . update ( ) ; 
 } 
 @ @ - 1982 , 11 + 1990 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) 
 subscriber . onUp ( endpoint ) ; 
 } 
 - else 
 - { 
 - for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) 
 - subscriber . onJoinCluster ( endpoint ) ; 
 - } 
 } 
 
 public void onRemove ( InetAddress endpoint )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b98eea6 . . b47f03d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 10 , 6 + 10 , 7 @ @ 
 * Fix bulkloader ( CASSANDRA - 5542 ) 
 * Add LZ4 compression to the native protocol ( CASSANDRA - 5765 ) 
 * Fix bugs in the native protocol v2 ( CASSANDRA - 5770 ) 
 + * CAS on ' primary key only ' table ( CASSANDRA - 5715 ) 
 
 
 2 . 0 . 0 - beta1 
 diff - - git a / src / java / org / apache / cassandra / cql3 / Cql . g b / src / java / org / apache / cassandra / cql3 / Cql . g 
 index 88e994d . . 0d55854 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / Cql . g 
 + + + b / src / java / org / apache / cassandra / cql3 / Cql . g 
 @ @ - 287 , 14 + 287 , 21 @ @ insertStatement returns [ UpdateStatement . ParsedInsert expr ] 
 Attributes . Raw attrs = new Attributes . Raw ( ) ; 
 List < ColumnIdentifier > columnNames = new ArrayList < ColumnIdentifier > ( ) ; 
 List < Term . Raw > values = new ArrayList < Term . Raw > ( ) ; 
 + boolean ifNotExists = false ; 
 } 
 : K _ INSERT K _ INTO cf = columnFamilyName 
 ' ( ' c1 = cident { columnNames . add ( c1 ) ; } ( ' , ' cn = cident { columnNames . add ( cn ) ; } ) * ' ) ' 
 K _ VALUES 
 ' ( ' v1 = term { values . add ( v1 ) ; } ( ' , ' vn = term { values . add ( vn ) ; } ) * ' ) ' 
 + 
 + ( K _ IF K _ NOT K _ EXISTS { ifNotExists = true ; } ) ? 
 ( usingClause [ attrs ] ) ? 
 { 
 - $ expr = new UpdateStatement . ParsedInsert ( cf , attrs , columnNames , values ) ; 
 + $ expr = new UpdateStatement . ParsedInsert ( cf , 
 + attrs , 
 + columnNames , 
 + values , 
 + ifNotExists ) ; 
 } 
 ; 
 
 @ @ - 325 , 21 + 332 , 19 @ @ updateStatement returns [ UpdateStatement . ParsedUpdate expr ] 
 @ init { 
 Attributes . Raw attrs = new Attributes . Raw ( ) ; 
 List < Pair < ColumnIdentifier , Operation . RawUpdate > > operations = new ArrayList < Pair < ColumnIdentifier , Operation . RawUpdate > > ( ) ; 
 - boolean ifNotExists = false ; 
 } 
 : K _ UPDATE cf = columnFamilyName 
 ( usingClause [ attrs ] ) ? 
 K _ SET columnOperation [ operations ] ( ' , ' columnOperation [ operations ] ) * 
 K _ WHERE wclause = whereClause 
 - ( K _ IF ( K _ NOT K _ EXISTS { ifNotExists = true ; } | conditions = updateCondition ) ) ? 
 + ( K _ IF conditions = updateCondition ) ? 
 { 
 return new UpdateStatement . ParsedUpdate ( cf , 
 attrs , 
 operations , 
 wclause , 
 - conditions = = null ? Collections . < Pair < ColumnIdentifier , Operation . RawUpdate > > emptyList ( ) : conditions , 
 - ifNotExists ) ; 
 - } 
 + conditions = = null ? Collections . < Pair < ColumnIdentifier , Operation . RawUpdate > > emptyList ( ) : conditions ) ; 
 + } 
 ; 
 
 updateCondition returns [ List < Pair < ColumnIdentifier , Operation . RawUpdate > > conditions ] 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java b / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java 
 index 3cb58ea . . d27493f 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java 
 @ @ - 114 , 9 + 114 , 12 @ @ public class UpdateStatement extends ModificationStatement 
 * @ param columnValues list of column values ( corresponds to names ) 
 * @ param attrs additional attributes for statement ( CL , timestamp , timeToLive ) 
 * / 
 - public ParsedInsert ( CFName name , Attributes . Raw attrs , List < ColumnIdentifier > columnNames , List < Term . Raw > columnValues ) 
 + public ParsedInsert ( CFName name , 
 + Attributes . Raw attrs , 
 + List < ColumnIdentifier > columnNames , List < Term . Raw > columnValues , 
 + boolean ifNotExists ) 
 { 
 - super ( name , attrs , Collections . < Pair < ColumnIdentifier , Operation . RawUpdate > > emptyList ( ) , false ) ; 
 + super ( name , attrs , null , ifNotExists ) ; 
 this . columnNames = columnNames ; 
 this . columnValues = columnValues ; 
 } 
 @ @ - 184 , 10 + 187 , 9 @ @ public class UpdateStatement extends ModificationStatement 
 Attributes . Raw attrs , 
 List < Pair < ColumnIdentifier , Operation . RawUpdate > > updates , 
 List < Relation > whereClause , 
 - List < Pair < ColumnIdentifier , Operation . RawUpdate > > conditions , 
 - boolean ifNotExists ) 
 + List < Pair < ColumnIdentifier , Operation . RawUpdate > > conditions ) 
 { 
 - super ( name , attrs , conditions , ifNotExists ) ; 
 + super ( name , attrs , conditions , false ) ; 
 this . updates = updates ; 
 this . whereClause = whereClause ; 
 }
