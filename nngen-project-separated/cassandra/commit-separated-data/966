BLEU SCORE: 0.02931251013275449

TEST MSG: Print current leveling in sstableofflinerelevel
GENERATED MSG: revert CASSANDRA - 5151 from 1 . 2

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index cf0c0ab . . 0779083 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 6 <nl> + * Print current leveling in sstableofflinerelevel ( CASSANDRA - 9588 ) <nl> * Remove hard - coded SSL cipher suites and protocols ( CASSANDRA - 10508 ) <nl> * Improve concurrency in CompactionStrategyManager ( CASSANDRA - 10099 ) <nl> * ( cqlsh ) interpret CQL type for formatting blobs ( CASSANDRA - 11274 ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / SSTableOfflineRelevel . java b / src / java / org / apache / cassandra / tools / SSTableOfflineRelevel . java <nl> index b62512a . . 9f0395b 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / SSTableOfflineRelevel . java <nl> + + + b / src / java / org / apache / cassandra / tools / SSTableOfflineRelevel . java <nl> @ @ - 29 , 7 + 29 , 9 @ @ import java . util . Map ; <nl> import java . util . Set ; <nl> <nl> import com . google . common . base . Throwables ; <nl> + import com . google . common . collect . ArrayListMultimap ; <nl> import com . google . common . collect . HashMultimap ; <nl> + import com . google . common . collect . Multimap ; <nl> import com . google . common . collect . SetMultimap ; <nl> <nl> import org . apache . cassandra . config . Schema ; <nl> @ @ - 143 , 8 + 145 , 23 @ @ public class SSTableOfflineRelevel <nl> approxExpectedLevels = ( int ) Math . ceil ( Math . log10 ( sstables . size ( ) ) ) ; <nl> } <nl> <nl> + private void printLeveling ( Iterable < SSTableReader > sstables ) <nl> + { <nl> + Multimap < Integer , SSTableReader > leveling = ArrayListMultimap . create ( ) ; <nl> + int maxLevel = 0 ; <nl> + for ( SSTableReader sstable : sstables ) <nl> + { <nl> + leveling . put ( sstable . getSSTableLevel ( ) , sstable ) ; <nl> + maxLevel = Math . max ( sstable . getSSTableLevel ( ) , maxLevel ) ; <nl> + } <nl> + System . out . println ( " Current leveling : " ) ; <nl> + for ( int i = 0 ; i < = maxLevel ; i + + ) <nl> + System . out . println ( String . format ( " L % d = % d " , i , leveling . get ( i ) . size ( ) ) ) ; <nl> + } <nl> + <nl> public void relevel ( boolean dryRun ) throws IOException <nl> { <nl> + printLeveling ( sstables ) ; <nl> List < SSTableReader > sortedSSTables = new ArrayList < > ( sstables ) ; <nl> Collections . sort ( sortedSSTables , new Comparator < SSTableReader > ( ) <nl> { <nl> @ @ - 187 , 8 + 204 , 9 @ @ public class SSTableOfflineRelevel <nl> System . out . println ( " New leveling : " ) ; <nl> <nl> System . out . println ( " L0 = " + l0 . size ( ) ) ; <nl> + / / item 0 in levels is the highest level we will create , printing from L1 up here : <nl> for ( int i = levels . size ( ) - 1 ; i > = 0 ; i - - ) <nl> - System . out . println ( String . format ( " L % d % d " , levels . size ( ) - i , levels . get ( i ) . size ( ) ) ) ; <nl> + System . out . println ( String . format ( " L % d = % d " , levels . size ( ) - i , levels . get ( i ) . size ( ) ) ) ; <nl> <nl> if ( ! dryRun ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java <nl> index becbacf . . a413bc5 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java <nl> + + + b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public interface DynamicEndpointSnitchMBean { <nl> public String getSubsnitchClassName ( ) ; <nl> public List < Double > dumpTimings ( String hostname ) throws UnknownHostException ; <nl> / * * <nl> - * Use this if you want to specify a severity it can be - ve <nl> + * Use this if you want to specify a severity ; it can be negative <nl> * Example : Page cache is cold and you want data to be sent <nl> * though it is not preferred one . <nl> * /

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index cf0c0ab . . 0779083 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 6 
 + * Print current leveling in sstableofflinerelevel ( CASSANDRA - 9588 ) 
 * Remove hard - coded SSL cipher suites and protocols ( CASSANDRA - 10508 ) 
 * Improve concurrency in CompactionStrategyManager ( CASSANDRA - 10099 ) 
 * ( cqlsh ) interpret CQL type for formatting blobs ( CASSANDRA - 11274 ) 
 diff - - git a / src / java / org / apache / cassandra / tools / SSTableOfflineRelevel . java b / src / java / org / apache / cassandra / tools / SSTableOfflineRelevel . java 
 index b62512a . . 9f0395b 100644 
 - - - a / src / java / org / apache / cassandra / tools / SSTableOfflineRelevel . java 
 + + + b / src / java / org / apache / cassandra / tools / SSTableOfflineRelevel . java 
 @ @ - 29 , 7 + 29 , 9 @ @ import java . util . Map ; 
 import java . util . Set ; 
 
 import com . google . common . base . Throwables ; 
 + import com . google . common . collect . ArrayListMultimap ; 
 import com . google . common . collect . HashMultimap ; 
 + import com . google . common . collect . Multimap ; 
 import com . google . common . collect . SetMultimap ; 
 
 import org . apache . cassandra . config . Schema ; 
 @ @ - 143 , 8 + 145 , 23 @ @ public class SSTableOfflineRelevel 
 approxExpectedLevels = ( int ) Math . ceil ( Math . log10 ( sstables . size ( ) ) ) ; 
 } 
 
 + private void printLeveling ( Iterable < SSTableReader > sstables ) 
 + { 
 + Multimap < Integer , SSTableReader > leveling = ArrayListMultimap . create ( ) ; 
 + int maxLevel = 0 ; 
 + for ( SSTableReader sstable : sstables ) 
 + { 
 + leveling . put ( sstable . getSSTableLevel ( ) , sstable ) ; 
 + maxLevel = Math . max ( sstable . getSSTableLevel ( ) , maxLevel ) ; 
 + } 
 + System . out . println ( " Current leveling : " ) ; 
 + for ( int i = 0 ; i < = maxLevel ; i + + ) 
 + System . out . println ( String . format ( " L % d = % d " , i , leveling . get ( i ) . size ( ) ) ) ; 
 + } 
 + 
 public void relevel ( boolean dryRun ) throws IOException 
 { 
 + printLeveling ( sstables ) ; 
 List < SSTableReader > sortedSSTables = new ArrayList < > ( sstables ) ; 
 Collections . sort ( sortedSSTables , new Comparator < SSTableReader > ( ) 
 { 
 @ @ - 187 , 8 + 204 , 9 @ @ public class SSTableOfflineRelevel 
 System . out . println ( " New leveling : " ) ; 
 
 System . out . println ( " L0 = " + l0 . size ( ) ) ; 
 + / / item 0 in levels is the highest level we will create , printing from L1 up here : 
 for ( int i = levels . size ( ) - 1 ; i > = 0 ; i - - ) 
 - System . out . println ( String . format ( " L % d % d " , levels . size ( ) - i , levels . get ( i ) . size ( ) ) ) ; 
 + System . out . println ( String . format ( " L % d = % d " , levels . size ( ) - i , levels . get ( i ) . size ( ) ) ) ; 
 
 if ( ! dryRun ) 
 {

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java 
 index becbacf . . a413bc5 100644 
 - - - a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java 
 + + + b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public interface DynamicEndpointSnitchMBean { 
 public String getSubsnitchClassName ( ) ; 
 public List < Double > dumpTimings ( String hostname ) throws UnknownHostException ; 
 / * * 
 - * Use this if you want to specify a severity it can be - ve 
 + * Use this if you want to specify a severity ; it can be negative 
 * Example : Page cache is cold and you want data to be sent 
 * though it is not preferred one . 
 * /
