BLEU SCORE: 0.028465126651392333

TEST MSG: Support new UDT serialization format for CQLSH
GENERATED MSG: cqlsh : Add row count to SELECT output

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 61ea788 . . e2ca9b5 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 17 , 7 + 17 , 7 @ @ <nl> * remove unused classes ( CASSANDRA - 7197 ) <nl> * Limit user types to the keyspace they are defined in ( CASSANDRA - 6643 ) <nl> * Add validate method to CollectionType ( CASSANDRA - 7208 ) <nl> - * New serialization format for UDT values ( CASSANDRA - 7209 ) <nl> + * New serialization format for UDT values ( CASSANDRA - 7209 , CASSANDRA - 7261 ) <nl> * Fix nodetool netstats ( CASSANDRA - 7270 ) <nl> Merged from 2 . 0 : <nl> * Always reallocate buffers in HSHA ( CASSANDRA - 6285 ) <nl> diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index f9b433d . . c242010 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 33 , 7 + 33 , 7 @ @ from _ _ future _ _ import with _ statement <nl> from uuid import UUID <nl> <nl> description = " CQL Shell for Apache Cassandra " <nl> - version = " 5 . 0 . 0 " <nl> + version = " 5 . 0 . 1 " <nl> <nl> from StringIO import StringIO <nl> from contextlib import contextmanager , closing <nl> @ @ - 1000 , 11 + 1000 , 12 @ @ class Shell ( cmd . Cmd ) : <nl> out . write ( ksdef . as _ cql _ query ( ) ) <nl> out . write ( " \ n \ n " ) <nl> <nl> - uts = self . get _ usertypes _ meta ( ) . get _ usertypes _ names ( ksname ) <nl> + uts = self . get _ usertypes _ meta ( ) . get _ usertypes _ names ( ksdef . name ) <nl> if uts : <nl> - out . write ( " USE % s ; \ n \ n " % ksname ) <nl> + out . write ( " USE % s ; \ n " % ksname ) <nl> for ut in uts : <nl> - self . print _ recreate _ usertype ( ksname , ut , out ) <nl> + out . write ( ' \ n ' ) <nl> + self . print _ recreate _ usertype ( ksdef . name , ut , out ) <nl> <nl> cfs = self . get _ columnfamily _ names ( ksdef . name ) <nl> if cfs : <nl> diff - - git a / lib / cassandra - driver - internal - only - 1 . 0 . 2 . post . zip b / lib / cassandra - driver - internal - only - 1 . 0 . 2 . post . zip <nl> deleted file mode 100644 <nl> index 7ccd5f7 . . 0000000 <nl> Binary files a / lib / cassandra - driver - internal - only - 1 . 0 . 2 . post . zip and / dev / null differ <nl> diff - - git a / lib / cassandra - driver - internal - only - 1 . 1 . 2 . zip b / lib / cassandra - driver - internal - only - 1 . 1 . 2 . zip <nl> new file mode 100644 <nl> index 0000000 . . cd5181c <nl> Binary files / dev / null and b / lib / cassandra - driver - internal - only - 1 . 1 . 2 . zip differ <nl> diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py <nl> index 14b3dba . . e4364a0 100644 <nl> - - - a / pylib / cqlshlib / cql3handling . py <nl> + + + b / pylib / cqlshlib / cql3handling . py <nl> @ @ - 1149 , 7 + 1149 , 7 @ @ class UserTypesMeta ( object ) : <nl> result [ ksname ] = { } <nl> utname = row . type _ name <nl> <nl> - result [ ksname ] [ utname ] = zip ( row . column _ names , row . column _ types ) <nl> + result [ ksname ] [ utname ] = zip ( row . field _ names , row . field _ types ) <nl> return cls ( meta = result ) <nl> <nl> def get _ usertypes _ names ( self , keyspace ) : <nl> diff - - git a / pylib / cqlshlib / test / test _ cqlsh _ output . py b / pylib / cqlshlib / test / test _ cqlsh _ output . py <nl> index 5a2a837 . . 32cdbe1 100644 <nl> - - - a / pylib / cqlshlib / test / test _ cqlsh _ output . py <nl> + + + b / pylib / cqlshlib / test / test _ cqlsh _ output . py <nl> @ @ - 821 , 3 + 821 , 33 @ @ class TestCqlshOutput ( BaseTestCase ) : <nl> <nl> def test _ empty _ line ( self ) : <nl> pass <nl> + <nl> + def test _ user _ types _ output ( self ) : <nl> + self . assertCqlverQueriesGiveColoredOutput ( ( <nl> + ( " select addresses from users ; " , r " " " <nl> + addresses <nl> + MMMMMMMMM <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + { { city : ' Austin ' , address : ' 902 East 5th St . # 202 ' , zip : ' 78702 ' } , { city : ' Sunnyvale ' , address : ' 292 Gibraltar Drive # 107 ' , zip : ' 94089 ' } } <nl> + BBYYYYBBYYYYYYYYBBYYYYYYYBBYYYYYYYYYYYYYYYYYYYYYYYBBYYYBBYYYYYYYBBBBYYYYBBYYYYYYYYYYYBBYYYYYYYBBYYYYYYYYYYYYYYYYYYYYYYYYYYBBYYYBBYYYYYYYBB <nl> + <nl> + <nl> + ( 1 rows ) <nl> + nnnnnnnn <nl> + " " " ) , <nl> + ) , cqlver = " 3 . 1 . 6 " ) <nl> + self . assertCqlverQueriesGiveColoredOutput ( ( <nl> + ( " select phone _ numbers from users ; " , r " " " <nl> + phone _ numbers <nl> + MMMMMMMMMMMMM <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + { { country : ' + 1 ' , number : ' 512 - 537 - 7809 ' } , { country : ' + 44 ' , number : ' 208 622 3021 ' } } <nl> + BBYYYYYYYBBYYYYBBYYYYYYBBYYYYYYYYYYYYYYBBBBYYYYYYYBBYYYYYBBYYYYYYBBYYYYYYYYYYYYYYBB <nl> + <nl> + <nl> + ( 1 rows ) <nl> + nnnnnnnn <nl> + " " " ) , <nl> + ) , cqlver = " 3 . 1 . 6 " ) <nl> \ No newline at end of file <nl> diff - - git a / pylib / cqlshlib / test / test _ keyspace _ init . cql b / pylib / cqlshlib / test / test _ keyspace _ init . cql <nl> index 8079cd5 . . 6f44e92 100644 <nl> - - - a / pylib / cqlshlib / test / test _ keyspace _ init . cql <nl> + + + b / pylib / cqlshlib / test / test _ keyspace _ init . cql <nl> @ @ - 197 , 3 + 197 , 29 @ @ INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 17 ' , ' 17 ' ) ; <nl> INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 18 ' , ' 18 ' ) ; <nl> INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 19 ' , ' 19 ' ) ; <nl> INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 20 ' , ' 20 ' ) ; <nl> + <nl> + CREATE TYPE address ( <nl> + city text , <nl> + address text , <nl> + zip text <nl> + ) ; <nl> + <nl> + CREATE TYPE phone _ number ( <nl> + country text , <nl> + number text <nl> + ) ; <nl> + <nl> + CREATE TABLE users ( <nl> + login text PRIMARY KEY , <nl> + name text , <nl> + addresses set < address > , <nl> + phone _ numbers set < phone _ number > <nl> + ) ; <nl> + <nl> + insert into users ( login , name , addresses , phone _ numbers ) <nl> + values ( ' jbellis ' , <nl> + ' jonathan ellis ' , <nl> + { { city : ' Austin ' , address : ' 902 East 5th St . # 202 ' , zip : ' 78702 ' } , <nl> + { city : ' Sunnyvale ' , address : ' 292 Gibraltar Drive # 107 ' , zip : ' 94089 ' } } , <nl> + { { country : ' + 44 ' , number : ' 208 622 3021 ' } , <nl> + { country : ' + 1 ' , number : ' 512 - 537 - 7809 ' } } ) ; <nl> \ No newline at end of file <nl> diff - - git a / pylib / cqlshlib / usertypes . py b / pylib / cqlshlib / usertypes . py <nl> index 1ca9b11 . . 22d3080 100644 <nl> - - - a / pylib / cqlshlib / usertypes . py <nl> + + + b / pylib / cqlshlib / usertypes . py <nl> @ @ - 14 , 7 + 14 , 7 @ @ <nl> # See the License for the specific language governing permissions and <nl> # limitations under the License . <nl> <nl> - from cassandra . marshal import uint16 _ unpack <nl> + from cassandra . marshal import int32 _ unpack <nl> from cassandra . cqltypes import CompositeType <nl> import collections <nl> from formatting import formatter _ for , format _ value _ utype <nl> @ @ - 22 , 6 + 22 , 8 @ @ from formatting import formatter _ for , format _ value _ utype <nl> class UserType ( CompositeType ) : <nl> typename = " ' org . apache . cassandra . db . marshal . UserType ' " <nl> <nl> + FIELD _ LENGTH = 4 <nl> + <nl> @ classmethod <nl> def apply _ parameters ( cls , subtypes , names ) : <nl> newname = subtypes [ 1 ] . cassname . decode ( " hex " ) <nl> @ @ - 43 , 12 + 45 , 11 @ @ class UserType ( CompositeType ) : <nl> for col _ type in cls . subtypes : <nl> if p = = len ( byts ) : <nl> break <nl> - itemlen = uint16 _ unpack ( byts [ p : p + 2 ] ) <nl> - p + = 2 <nl> + itemlen = int32 _ unpack ( byts [ p : p + cls . FIELD _ LENGTH ] ) <nl> + p + = cls . FIELD _ LENGTH <nl> item = byts [ p : p + itemlen ] <nl> p + = itemlen <nl> result . append ( col _ type . from _ binary ( item ) ) <nl> - p + = 1 <nl> <nl> if len ( result ) < len ( cls . subtypes ) : <nl> nones = [ None ] * ( len ( cls . subtypes ) - len ( result ) )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cli / CliOptions . java b / src / java / org / apache / cassandra / cli / CliOptions . java <nl> index cb58ddc . . f64cceb 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliOptions . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliOptions . java <nl> @ @ - 80 , 7 + 80 , 7 @ @ public class CliOptions <nl> <nl> / / ssl connection - related options <nl> options . addOption ( " ts " , SSL _ TRUSTSTORE , " TRUSTSTORE " , " SSL : full path to truststore " ) ; <nl> - options . addOption ( " tspw " , SSL _ TRUSTSTORE _ PW , " TRUSTSTORE - PASSWORD " , " SSL : full path to truststore " ) ; <nl> + options . addOption ( " tspw " , SSL _ TRUSTSTORE _ PW , " TRUSTSTORE - PASSWORD " , " SSL : password of the truststore " ) ; <nl> options . addOption ( " prtcl " , SSL _ PROTOCOL , " PROTOCOL " , " SSL : connections protocol to use ( default : TLS ) " ) ; <nl> options . addOption ( " alg " , SSL _ ALGORITHM , " ALGORITHM " , " SSL : algorithm ( default : SunX509 ) " ) ; <nl> options . addOption ( " st " , SSL _ STORE _ TYPE , " STORE - TYPE " , " SSL : type of store " ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 61ea788 . . e2ca9b5 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 17 , 7 + 17 , 7 @ @ 
 * remove unused classes ( CASSANDRA - 7197 ) 
 * Limit user types to the keyspace they are defined in ( CASSANDRA - 6643 ) 
 * Add validate method to CollectionType ( CASSANDRA - 7208 ) 
 - * New serialization format for UDT values ( CASSANDRA - 7209 ) 
 + * New serialization format for UDT values ( CASSANDRA - 7209 , CASSANDRA - 7261 ) 
 * Fix nodetool netstats ( CASSANDRA - 7270 ) 
 Merged from 2 . 0 : 
 * Always reallocate buffers in HSHA ( CASSANDRA - 6285 ) 
 diff - - git a / bin / cqlsh b / bin / cqlsh 
 index f9b433d . . c242010 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 33 , 7 + 33 , 7 @ @ from _ _ future _ _ import with _ statement 
 from uuid import UUID 
 
 description = " CQL Shell for Apache Cassandra " 
 - version = " 5 . 0 . 0 " 
 + version = " 5 . 0 . 1 " 
 
 from StringIO import StringIO 
 from contextlib import contextmanager , closing 
 @ @ - 1000 , 11 + 1000 , 12 @ @ class Shell ( cmd . Cmd ) : 
 out . write ( ksdef . as _ cql _ query ( ) ) 
 out . write ( " \ n \ n " ) 
 
 - uts = self . get _ usertypes _ meta ( ) . get _ usertypes _ names ( ksname ) 
 + uts = self . get _ usertypes _ meta ( ) . get _ usertypes _ names ( ksdef . name ) 
 if uts : 
 - out . write ( " USE % s ; \ n \ n " % ksname ) 
 + out . write ( " USE % s ; \ n " % ksname ) 
 for ut in uts : 
 - self . print _ recreate _ usertype ( ksname , ut , out ) 
 + out . write ( ' \ n ' ) 
 + self . print _ recreate _ usertype ( ksdef . name , ut , out ) 
 
 cfs = self . get _ columnfamily _ names ( ksdef . name ) 
 if cfs : 
 diff - - git a / lib / cassandra - driver - internal - only - 1 . 0 . 2 . post . zip b / lib / cassandra - driver - internal - only - 1 . 0 . 2 . post . zip 
 deleted file mode 100644 
 index 7ccd5f7 . . 0000000 
 Binary files a / lib / cassandra - driver - internal - only - 1 . 0 . 2 . post . zip and / dev / null differ 
 diff - - git a / lib / cassandra - driver - internal - only - 1 . 1 . 2 . zip b / lib / cassandra - driver - internal - only - 1 . 1 . 2 . zip 
 new file mode 100644 
 index 0000000 . . cd5181c 
 Binary files / dev / null and b / lib / cassandra - driver - internal - only - 1 . 1 . 2 . zip differ 
 diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py 
 index 14b3dba . . e4364a0 100644 
 - - - a / pylib / cqlshlib / cql3handling . py 
 + + + b / pylib / cqlshlib / cql3handling . py 
 @ @ - 1149 , 7 + 1149 , 7 @ @ class UserTypesMeta ( object ) : 
 result [ ksname ] = { } 
 utname = row . type _ name 
 
 - result [ ksname ] [ utname ] = zip ( row . column _ names , row . column _ types ) 
 + result [ ksname ] [ utname ] = zip ( row . field _ names , row . field _ types ) 
 return cls ( meta = result ) 
 
 def get _ usertypes _ names ( self , keyspace ) : 
 diff - - git a / pylib / cqlshlib / test / test _ cqlsh _ output . py b / pylib / cqlshlib / test / test _ cqlsh _ output . py 
 index 5a2a837 . . 32cdbe1 100644 
 - - - a / pylib / cqlshlib / test / test _ cqlsh _ output . py 
 + + + b / pylib / cqlshlib / test / test _ cqlsh _ output . py 
 @ @ - 821 , 3 + 821 , 33 @ @ class TestCqlshOutput ( BaseTestCase ) : 
 
 def test _ empty _ line ( self ) : 
 pass 
 + 
 + def test _ user _ types _ output ( self ) : 
 + self . assertCqlverQueriesGiveColoredOutput ( ( 
 + ( " select addresses from users ; " , r " " " 
 + addresses 
 + MMMMMMMMM 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + { { city : ' Austin ' , address : ' 902 East 5th St . # 202 ' , zip : ' 78702 ' } , { city : ' Sunnyvale ' , address : ' 292 Gibraltar Drive # 107 ' , zip : ' 94089 ' } } 
 + BBYYYYBBYYYYYYYYBBYYYYYYYBBYYYYYYYYYYYYYYYYYYYYYYYBBYYYBBYYYYYYYBBBBYYYYBBYYYYYYYYYYYBBYYYYYYYBBYYYYYYYYYYYYYYYYYYYYYYYYYYBBYYYBBYYYYYYYBB 
 + 
 + 
 + ( 1 rows ) 
 + nnnnnnnn 
 + " " " ) , 
 + ) , cqlver = " 3 . 1 . 6 " ) 
 + self . assertCqlverQueriesGiveColoredOutput ( ( 
 + ( " select phone _ numbers from users ; " , r " " " 
 + phone _ numbers 
 + MMMMMMMMMMMMM 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + { { country : ' + 1 ' , number : ' 512 - 537 - 7809 ' } , { country : ' + 44 ' , number : ' 208 622 3021 ' } } 
 + BBYYYYYYYBBYYYYBBYYYYYYBBYYYYYYYYYYYYYYBBBBYYYYYYYBBYYYYYBBYYYYYYBBYYYYYYYYYYYYYYBB 
 + 
 + 
 + ( 1 rows ) 
 + nnnnnnnn 
 + " " " ) , 
 + ) , cqlver = " 3 . 1 . 6 " ) 
 \ No newline at end of file 
 diff - - git a / pylib / cqlshlib / test / test _ keyspace _ init . cql b / pylib / cqlshlib / test / test _ keyspace _ init . cql 
 index 8079cd5 . . 6f44e92 100644 
 - - - a / pylib / cqlshlib / test / test _ keyspace _ init . cql 
 + + + b / pylib / cqlshlib / test / test _ keyspace _ init . cql 
 @ @ - 197 , 3 + 197 , 29 @ @ INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 17 ' , ' 17 ' ) ; 
 INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 18 ' , ' 18 ' ) ; 
 INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 19 ' , ' 19 ' ) ; 
 INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 20 ' , ' 20 ' ) ; 
 + 
 + CREATE TYPE address ( 
 + city text , 
 + address text , 
 + zip text 
 + ) ; 
 + 
 + CREATE TYPE phone _ number ( 
 + country text , 
 + number text 
 + ) ; 
 + 
 + CREATE TABLE users ( 
 + login text PRIMARY KEY , 
 + name text , 
 + addresses set < address > , 
 + phone _ numbers set < phone _ number > 
 + ) ; 
 + 
 + insert into users ( login , name , addresses , phone _ numbers ) 
 + values ( ' jbellis ' , 
 + ' jonathan ellis ' , 
 + { { city : ' Austin ' , address : ' 902 East 5th St . # 202 ' , zip : ' 78702 ' } , 
 + { city : ' Sunnyvale ' , address : ' 292 Gibraltar Drive # 107 ' , zip : ' 94089 ' } } , 
 + { { country : ' + 44 ' , number : ' 208 622 3021 ' } , 
 + { country : ' + 1 ' , number : ' 512 - 537 - 7809 ' } } ) ; 
 \ No newline at end of file 
 diff - - git a / pylib / cqlshlib / usertypes . py b / pylib / cqlshlib / usertypes . py 
 index 1ca9b11 . . 22d3080 100644 
 - - - a / pylib / cqlshlib / usertypes . py 
 + + + b / pylib / cqlshlib / usertypes . py 
 @ @ - 14 , 7 + 14 , 7 @ @ 
 # See the License for the specific language governing permissions and 
 # limitations under the License . 
 
 - from cassandra . marshal import uint16 _ unpack 
 + from cassandra . marshal import int32 _ unpack 
 from cassandra . cqltypes import CompositeType 
 import collections 
 from formatting import formatter _ for , format _ value _ utype 
 @ @ - 22 , 6 + 22 , 8 @ @ from formatting import formatter _ for , format _ value _ utype 
 class UserType ( CompositeType ) : 
 typename = " ' org . apache . cassandra . db . marshal . UserType ' " 
 
 + FIELD _ LENGTH = 4 
 + 
 @ classmethod 
 def apply _ parameters ( cls , subtypes , names ) : 
 newname = subtypes [ 1 ] . cassname . decode ( " hex " ) 
 @ @ - 43 , 12 + 45 , 11 @ @ class UserType ( CompositeType ) : 
 for col _ type in cls . subtypes : 
 if p = = len ( byts ) : 
 break 
 - itemlen = uint16 _ unpack ( byts [ p : p + 2 ] ) 
 - p + = 2 
 + itemlen = int32 _ unpack ( byts [ p : p + cls . FIELD _ LENGTH ] ) 
 + p + = cls . FIELD _ LENGTH 
 item = byts [ p : p + itemlen ] 
 p + = itemlen 
 result . append ( col _ type . from _ binary ( item ) ) 
 - p + = 1 
 
 if len ( result ) < len ( cls . subtypes ) : 
 nones = [ None ] * ( len ( cls . subtypes ) - len ( result ) )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cli / CliOptions . java b / src / java / org / apache / cassandra / cli / CliOptions . java 
 index cb58ddc . . f64cceb 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliOptions . java 
 + + + b / src / java / org / apache / cassandra / cli / CliOptions . java 
 @ @ - 80 , 7 + 80 , 7 @ @ public class CliOptions 
 
 / / ssl connection - related options 
 options . addOption ( " ts " , SSL _ TRUSTSTORE , " TRUSTSTORE " , " SSL : full path to truststore " ) ; 
 - options . addOption ( " tspw " , SSL _ TRUSTSTORE _ PW , " TRUSTSTORE - PASSWORD " , " SSL : full path to truststore " ) ; 
 + options . addOption ( " tspw " , SSL _ TRUSTSTORE _ PW , " TRUSTSTORE - PASSWORD " , " SSL : password of the truststore " ) ; 
 options . addOption ( " prtcl " , SSL _ PROTOCOL , " PROTOCOL " , " SSL : connections protocol to use ( default : TLS ) " ) ; 
 options . addOption ( " alg " , SSL _ ALGORITHM , " ALGORITHM " , " SSL : algorithm ( default : SunX509 ) " ) ; 
 options . addOption ( " st " , SSL _ STORE _ TYPE , " STORE - TYPE " , " SSL : type of store " ) ;
