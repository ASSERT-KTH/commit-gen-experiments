BLEU SCORE: 0.0379680177759557

TEST MSG: Choose better poolingOptions for protocol v4 in cassandra - stress
GENERATED MSG: fix terminination of the stress . java when errors were encountered

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index eef7974 . . 457814f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 0 - beta2 <nl> + * Choose better poolingOptions for protocol v4 in cassandra - stress ( CASSANDRA - 10182 ) <nl> * Fix LWW bug affecting Materialized Views ( CASSANDRA - 10197 ) <nl> * Ensures frozen sets and maps are always sorted ( CASSANDRA - 10162 ) <nl> * Don ' t deadlock when flushing CFS backed custom indexes ( CASSANDRA - 10181 ) <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java <nl> index 8be1c96 . . 0040003 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java <nl> @ @ - 89 , 13 + 89 , 17 @ @ public class JavaDriverClient <nl> <nl> public void connect ( ProtocolOptions . Compression compression ) throws Exception <nl> { <nl> - PoolingOptions poolingOpts = new PoolingOptions ( ) ; <nl> - poolingOpts . setCoreConnectionsPerHost ( HostDistance . LOCAL , 8 ) ; <nl> + <nl> + PoolingOptions poolingOpts = new PoolingOptions ( ) <nl> + . setConnectionsPerHost ( HostDistance . LOCAL , 8 , 8 ) <nl> + . setMaxRequestsPerConnection ( HostDistance . LOCAL , 128 ) <nl> + . setNewConnectionThreshold ( HostDistance . LOCAL , 100 ) ; <nl> + <nl> Cluster . Builder clusterBuilder = Cluster . builder ( ) <nl> . addContactPoint ( host ) <nl> . withPort ( port ) <nl> . withPoolingOptions ( poolingOpts ) <nl> - . withProtocolVersion ( ProtocolVersion . V2 ) <nl> + . withoutJMXReporting ( ) <nl> . withoutMetrics ( ) ; / / The driver uses metrics 3 with conflict with our version <nl> if ( whitelist ! = null ) <nl> clusterBuilder . withLoadBalancingPolicy ( whitelist ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 14dca80 . . 827a4ec 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> ( CASSANDRA - 4088 ) <nl> * relax path length requirement for sstable files when upgrading on <nl> non - Windows platforms ( CASSANDRA - 4110 ) <nl> + * fix terminination of the stress . java when errors were encountered <nl> + ( CASSANDRA - 4128 ) <nl> <nl> <nl> 1 . 1 - beta2 <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / Stress . java b / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> index 36f0410 . . c5e65f8 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> @ @ - 88 , 7 + 88 , 7 @ @ public final class Stress <nl> } <nl> else <nl> { <nl> - new StressAction ( session , outStream ) . run ( ) ; <nl> + new StressAction ( session , outStream ) . start ( ) ; <nl> } <nl> } <nl> <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / StressAction . java b / tools / stress / src / org / apache / cassandra / stress / StressAction . java <nl> index 8d6a0f5 . . d175170 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / StressAction . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / StressAction . java <nl> @ @ - 137 , 6 + 137 , 9 @ @ public class StressAction extends Thread <nl> } <nl> } <nl> <nl> + if ( producer . isAlive ( ) ) <nl> + producer . interrupt ( ) ; / / if producer is still alive it means that we had errors in the consumers <nl> + <nl> / / marking an end of the output to the client <nl> output . println ( " END " ) ; <nl> } <nl> @ @ - 161 , 7 + 164 , 8 @ @ public class StressAction extends Thread <nl> } <nl> catch ( InterruptedException e ) <nl> { <nl> - System . err . println ( " Producer error - " + e . getMessage ( ) ) ; <nl> + if ( e . getMessage ( ) ! = null ) <nl> + System . err . println ( " Producer error - " + e . getMessage ( ) ) ; <nl> return ; <nl> } <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index eef7974 . . 457814f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 0 - beta2 
 + * Choose better poolingOptions for protocol v4 in cassandra - stress ( CASSANDRA - 10182 ) 
 * Fix LWW bug affecting Materialized Views ( CASSANDRA - 10197 ) 
 * Ensures frozen sets and maps are always sorted ( CASSANDRA - 10162 ) 
 * Don ' t deadlock when flushing CFS backed custom indexes ( CASSANDRA - 10181 ) 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java 
 index 8be1c96 . . 0040003 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java 
 @ @ - 89 , 13 + 89 , 17 @ @ public class JavaDriverClient 
 
 public void connect ( ProtocolOptions . Compression compression ) throws Exception 
 { 
 - PoolingOptions poolingOpts = new PoolingOptions ( ) ; 
 - poolingOpts . setCoreConnectionsPerHost ( HostDistance . LOCAL , 8 ) ; 
 + 
 + PoolingOptions poolingOpts = new PoolingOptions ( ) 
 + . setConnectionsPerHost ( HostDistance . LOCAL , 8 , 8 ) 
 + . setMaxRequestsPerConnection ( HostDistance . LOCAL , 128 ) 
 + . setNewConnectionThreshold ( HostDistance . LOCAL , 100 ) ; 
 + 
 Cluster . Builder clusterBuilder = Cluster . builder ( ) 
 . addContactPoint ( host ) 
 . withPort ( port ) 
 . withPoolingOptions ( poolingOpts ) 
 - . withProtocolVersion ( ProtocolVersion . V2 ) 
 + . withoutJMXReporting ( ) 
 . withoutMetrics ( ) ; / / The driver uses metrics 3 with conflict with our version 
 if ( whitelist ! = null ) 
 clusterBuilder . withLoadBalancingPolicy ( whitelist ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 14dca80 . . 827a4ec 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 ( CASSANDRA - 4088 ) 
 * relax path length requirement for sstable files when upgrading on 
 non - Windows platforms ( CASSANDRA - 4110 ) 
 + * fix terminination of the stress . java when errors were encountered 
 + ( CASSANDRA - 4128 ) 
 
 
 1 . 1 - beta2 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / Stress . java b / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 index 36f0410 . . c5e65f8 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 @ @ - 88 , 7 + 88 , 7 @ @ public final class Stress 
 } 
 else 
 { 
 - new StressAction ( session , outStream ) . run ( ) ; 
 + new StressAction ( session , outStream ) . start ( ) ; 
 } 
 } 
 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / StressAction . java b / tools / stress / src / org / apache / cassandra / stress / StressAction . java 
 index 8d6a0f5 . . d175170 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / StressAction . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / StressAction . java 
 @ @ - 137 , 6 + 137 , 9 @ @ public class StressAction extends Thread 
 } 
 } 
 
 + if ( producer . isAlive ( ) ) 
 + producer . interrupt ( ) ; / / if producer is still alive it means that we had errors in the consumers 
 + 
 / / marking an end of the output to the client 
 output . println ( " END " ) ; 
 } 
 @ @ - 161 , 7 + 164 , 8 @ @ public class StressAction extends Thread 
 } 
 catch ( InterruptedException e ) 
 { 
 - System . err . println ( " Producer error - " + e . getMessage ( ) ) ; 
 + if ( e . getMessage ( ) ! = null ) 
 + System . err . println ( " Producer error - " + e . getMessage ( ) ) ; 
 return ; 
 } 
 }
