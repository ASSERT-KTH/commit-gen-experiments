BLEU SCORE: 0.0379680177759557

TEST MSG: Unable to create a function with argument of type Inet
GENERATED MSG: Make DropTableStatement throw an error if the table is a view

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java <nl> index 673ccc3 . . 25566ad 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java <nl> @ @ - 34 , 15 + 34 , 20 @ @ import org . junit . Assert ; <nl> import org . junit . BeforeClass ; <nl> import org . junit . Test ; <nl> <nl> - import com . datastax . driver . core . * ; <nl> + import com . datastax . driver . core . DataType ; <nl> + import com . datastax . driver . core . Row ; <nl> + import com . datastax . driver . core . TupleType ; <nl> + import com . datastax . driver . core . TupleValue ; <nl> + import com . datastax . driver . core . UDTValue ; <nl> import com . datastax . driver . core . exceptions . InvalidQueryException ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> + import org . apache . cassandra . cql3 . CQL3Type ; <nl> + import org . apache . cassandra . cql3 . CQLTester ; <nl> import org . apache . cassandra . cql3 . QueryProcessor ; <nl> import org . apache . cassandra . cql3 . UntypedResultSet ; <nl> import org . apache . cassandra . cql3 . functions . FunctionName ; <nl> import org . apache . cassandra . cql3 . functions . Functions ; <nl> import org . apache . cassandra . cql3 . functions . UDFunction ; <nl> - import org . apache . cassandra . cql3 . CQLTester ; <nl> import org . apache . cassandra . db . marshal . CollectionType ; <nl> import org . apache . cassandra . dht . ByteOrderedPartitioner ; <nl> import org . apache . cassandra . exceptions . FunctionExecutionException ; <nl> @ @ - 2584 , 7 + 2589 , 7 @ @ public class UFTest extends CQLTester <nl> " LANGUAGE JAVA \ n " + <nl> " AS ' return val ; ' " ) ; <nl> <nl> - String fNameICN = createFunction ( KEYSPACE _ PER _ TEST , " blob " , <nl> + String fNameICN = createFunction ( KEYSPACE _ PER _ TEST , " int " , <nl> " CREATE OR REPLACE FUNCTION % s ( val int ) " + <nl> " RETURNS NULL ON NULL INPUT " + <nl> " RETURNS int " + <nl> @ @ - 2608 , 4 + 2613 , 37 @ @ public class UFTest extends CQLTester <nl> assertRows ( execute ( " SELECT " + fNameICC + " ( empty _ int ) FROM % s " ) , row ( 0 ) ) ; <nl> assertRows ( execute ( " SELECT " + fNameICN + " ( empty _ int ) FROM % s " ) , row ( new Object [ ] { null } ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testAllNativeTypes ( ) throws Throwable <nl> + { <nl> + StringBuilder sig = new StringBuilder ( ) ; <nl> + StringBuilder args = new StringBuilder ( ) ; <nl> + for ( CQL3Type . Native type : CQL3Type . Native . values ( ) ) <nl> + { <nl> + if ( sig . length ( ) > 0 ) <nl> + sig . append ( ' , ' ) ; <nl> + sig . append ( type . toString ( ) ) ; <nl> + <nl> + if ( args . length ( ) > 0 ) <nl> + args . append ( ' , ' ) ; <nl> + args . append ( " arg " ) . append ( type . toString ( ) ) . append ( ' ' ) . append ( type . toString ( ) ) ; <nl> + } <nl> + createFunction ( KEYSPACE , sig . toString ( ) , <nl> + " CREATE OR REPLACE FUNCTION % s ( " + args + " ) " + <nl> + " RETURNS NULL ON NULL INPUT " + <nl> + " RETURNS int " + <nl> + " LANGUAGE JAVA \ n " + <nl> + " AS ' return 0 ; ' " ) ; <nl> + <nl> + for ( CQL3Type . Native type : CQL3Type . Native . values ( ) ) <nl> + { <nl> + createFunction ( KEYSPACE _ PER _ TEST , type . toString ( ) , <nl> + " CREATE OR REPLACE FUNCTION % s ( val " + type . toString ( ) + " ) " + <nl> + " RETURNS NULL ON NULL INPUT " + <nl> + " RETURNS int " + <nl> + " LANGUAGE JAVA \ n " + <nl> + " AS ' return 0 ; ' " ) ; <nl> + } <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java 
 index 673ccc3 . . 25566ad 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java 
 @ @ - 34 , 15 + 34 , 20 @ @ import org . junit . Assert ; 
 import org . junit . BeforeClass ; 
 import org . junit . Test ; 
 
 - import com . datastax . driver . core . * ; 
 + import com . datastax . driver . core . DataType ; 
 + import com . datastax . driver . core . Row ; 
 + import com . datastax . driver . core . TupleType ; 
 + import com . datastax . driver . core . TupleValue ; 
 + import com . datastax . driver . core . UDTValue ; 
 import com . datastax . driver . core . exceptions . InvalidQueryException ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 + import org . apache . cassandra . cql3 . CQL3Type ; 
 + import org . apache . cassandra . cql3 . CQLTester ; 
 import org . apache . cassandra . cql3 . QueryProcessor ; 
 import org . apache . cassandra . cql3 . UntypedResultSet ; 
 import org . apache . cassandra . cql3 . functions . FunctionName ; 
 import org . apache . cassandra . cql3 . functions . Functions ; 
 import org . apache . cassandra . cql3 . functions . UDFunction ; 
 - import org . apache . cassandra . cql3 . CQLTester ; 
 import org . apache . cassandra . db . marshal . CollectionType ; 
 import org . apache . cassandra . dht . ByteOrderedPartitioner ; 
 import org . apache . cassandra . exceptions . FunctionExecutionException ; 
 @ @ - 2584 , 7 + 2589 , 7 @ @ public class UFTest extends CQLTester 
 " LANGUAGE JAVA \ n " + 
 " AS ' return val ; ' " ) ; 
 
 - String fNameICN = createFunction ( KEYSPACE _ PER _ TEST , " blob " , 
 + String fNameICN = createFunction ( KEYSPACE _ PER _ TEST , " int " , 
 " CREATE OR REPLACE FUNCTION % s ( val int ) " + 
 " RETURNS NULL ON NULL INPUT " + 
 " RETURNS int " + 
 @ @ - 2608 , 4 + 2613 , 37 @ @ public class UFTest extends CQLTester 
 assertRows ( execute ( " SELECT " + fNameICC + " ( empty _ int ) FROM % s " ) , row ( 0 ) ) ; 
 assertRows ( execute ( " SELECT " + fNameICN + " ( empty _ int ) FROM % s " ) , row ( new Object [ ] { null } ) ) ; 
 } 
 + 
 + @ Test 
 + public void testAllNativeTypes ( ) throws Throwable 
 + { 
 + StringBuilder sig = new StringBuilder ( ) ; 
 + StringBuilder args = new StringBuilder ( ) ; 
 + for ( CQL3Type . Native type : CQL3Type . Native . values ( ) ) 
 + { 
 + if ( sig . length ( ) > 0 ) 
 + sig . append ( ' , ' ) ; 
 + sig . append ( type . toString ( ) ) ; 
 + 
 + if ( args . length ( ) > 0 ) 
 + args . append ( ' , ' ) ; 
 + args . append ( " arg " ) . append ( type . toString ( ) ) . append ( ' ' ) . append ( type . toString ( ) ) ; 
 + } 
 + createFunction ( KEYSPACE , sig . toString ( ) , 
 + " CREATE OR REPLACE FUNCTION % s ( " + args + " ) " + 
 + " RETURNS NULL ON NULL INPUT " + 
 + " RETURNS int " + 
 + " LANGUAGE JAVA \ n " + 
 + " AS ' return 0 ; ' " ) ; 
 + 
 + for ( CQL3Type . Native type : CQL3Type . Native . values ( ) ) 
 + { 
 + createFunction ( KEYSPACE _ PER _ TEST , type . toString ( ) , 
 + " CREATE OR REPLACE FUNCTION % s ( val " + type . toString ( ) + " ) " + 
 + " RETURNS NULL ON NULL INPUT " + 
 + " RETURNS int " + 
 + " LANGUAGE JAVA \ n " + 
 + " AS ' return 0 ; ' " ) ; 
 + } 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
