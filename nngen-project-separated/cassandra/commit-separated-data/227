BLEU SCORE: 0.02383853510228548

TEST MSG: Ninja : reinstate @ Deprecated getUserDefinedTask removed by mistake
GENERATED MSG: Support multiple folders for user defined compaction tasks

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java <nl> index 4103433 . . efaedc8 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java <nl> @ @ - 862 , 11 + 862 , 19 @ @ public class CompactionStrategyManager implements INotificationConsumer <nl> * / <nl> public List < AbstractCompactionTask > getUserDefinedTasks ( Collection < SSTableReader > sstables , int gcBefore ) <nl> { <nl> + return getUserDefinedTasks ( sstables , gcBefore , false ) ; <nl> + } <nl> + <nl> + public List < AbstractCompactionTask > getUserDefinedTasks ( Collection < SSTableReader > sstables , int gcBefore , boolean validateForCompaction ) <nl> + { <nl> maybeReloadDiskBoundaries ( ) ; <nl> List < AbstractCompactionTask > ret = new ArrayList < > ( ) ; <nl> readLock . lock ( ) ; <nl> try <nl> { <nl> + if ( validateForCompaction ) <nl> + validateForCompaction ( sstables ) ; <nl> + <nl> Map < Integer , List < SSTableReader > > repairedSSTables = sstables . stream ( ) <nl> . filter ( s - > ! s . isMarkedSuspect ( ) & & s . isRepaired ( ) ) <nl> . collect ( Collectors . groupingBy ( ( s ) - > compactionStrategyIndexFor ( s ) ) ) ; <nl> @ @ - 890 , 6 + 898 , 17 @ @ public class CompactionStrategyManager implements INotificationConsumer <nl> } <nl> } <nl> <nl> + / * * <nl> + * @ deprecated use { @ link # getUserDefinedTasks ( Collection , int ) } instead . <nl> + * / <nl> + @ Deprecated ( ) <nl> + public AbstractCompactionTask getUserDefinedTask ( Collection < SSTableReader > sstables , int gcBefore ) <nl> + { <nl> + List < AbstractCompactionTask > tasks = getUserDefinedTasks ( sstables , gcBefore , true ) ; <nl> + assert tasks . size ( ) = = 1 ; <nl> + return tasks . get ( 0 ) ; <nl> + } <nl> + <nl> public int getEstimatedRemainingTasks ( ) <nl> { <nl> maybeReloadDiskBoundaries ( ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java 
 index 4103433 . . efaedc8 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java 
 @ @ - 862 , 11 + 862 , 19 @ @ public class CompactionStrategyManager implements INotificationConsumer 
 * / 
 public List < AbstractCompactionTask > getUserDefinedTasks ( Collection < SSTableReader > sstables , int gcBefore ) 
 { 
 + return getUserDefinedTasks ( sstables , gcBefore , false ) ; 
 + } 
 + 
 + public List < AbstractCompactionTask > getUserDefinedTasks ( Collection < SSTableReader > sstables , int gcBefore , boolean validateForCompaction ) 
 + { 
 maybeReloadDiskBoundaries ( ) ; 
 List < AbstractCompactionTask > ret = new ArrayList < > ( ) ; 
 readLock . lock ( ) ; 
 try 
 { 
 + if ( validateForCompaction ) 
 + validateForCompaction ( sstables ) ; 
 + 
 Map < Integer , List < SSTableReader > > repairedSSTables = sstables . stream ( ) 
 . filter ( s - > ! s . isMarkedSuspect ( ) & & s . isRepaired ( ) ) 
 . collect ( Collectors . groupingBy ( ( s ) - > compactionStrategyIndexFor ( s ) ) ) ; 
 @ @ - 890 , 6 + 898 , 17 @ @ public class CompactionStrategyManager implements INotificationConsumer 
 } 
 } 
 
 + / * * 
 + * @ deprecated use { @ link # getUserDefinedTasks ( Collection , int ) } instead . 
 + * / 
 + @ Deprecated ( ) 
 + public AbstractCompactionTask getUserDefinedTask ( Collection < SSTableReader > sstables , int gcBefore ) 
 + { 
 + List < AbstractCompactionTask > tasks = getUserDefinedTasks ( sstables , gcBefore , true ) ; 
 + assert tasks . size ( ) = = 1 ; 
 + return tasks . get ( 0 ) ; 
 + } 
 + 
 public int getEstimatedRemainingTasks ( ) 
 { 
 maybeReloadDiskBoundaries ( ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
