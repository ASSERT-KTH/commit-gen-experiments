BLEU SCORE: 0.03283637368030199

TEST MSG: Add partition key to TombstoneOverwhelmingException error message
GENERATED MSG: Purge tombstone from row cache

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c40c3ce . . ef8c5a7 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 14 <nl> + * Add partition key to TombstoneOverwhelmingException error message ( CASSANDRA - 10888 ) <nl> * Use logback setting for ' cassandra - v ' command ( CASSANDRA - 10767 ) <nl> * Fix sstableloader to unthrottle streaming by default ( CASSANDRA - 9714 ) <nl> * Fix incorrect warning in ' nodetool status ' ( CASSANDRA - 10176 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java b / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java <nl> index 973477f . . 957d1ba 100644 <nl> - - - a / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java <nl> + + + b / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java <nl> @ @ - 38 , 7 + 38 , 6 @ @ import org . apache . cassandra . io . sstable . SSTableReader ; <nl> import org . apache . cassandra . io . util . DataOutputPlus ; <nl> import org . apache . cassandra . io . util . FileDataInput ; <nl> import org . apache . cassandra . tracing . Tracing ; <nl> - import org . apache . cassandra . utils . ByteBufferUtil ; <nl> import org . apache . cassandra . utils . Pair ; <nl> <nl> public class SliceQueryFilter implements IDiskAtomFilter <nl> @ @ - 281 , 10 + 280 , 12 @ @ public class SliceQueryFilter implements IDiskAtomFilter <nl> { <nl> Tracing . trace ( " Scanned over { } tombstones ; query aborted ( see tombstone _ failure _ threshold ) " , <nl> DatabaseDescriptor . getTombstoneFailureThreshold ( ) ) ; <nl> - logger . error ( " Scanned over { } tombstones in { } . { } ; query aborted ( see tombstone _ failure _ threshold ) " , <nl> - DatabaseDescriptor . getTombstoneFailureThreshold ( ) , <nl> - container . metadata ( ) . ksName , <nl> - container . metadata ( ) . cfName ) ; <nl> + String msg = String . format ( " Scanned over % d tombstones in % s . % s for key : % 1 . 512s ; query aborted ( see tombstone _ failure _ threshold ) . " , <nl> + DatabaseDescriptor . getTombstoneFailureThreshold ( ) , <nl> + container . metadata ( ) . ksName , <nl> + container . metadata ( ) . cfName , <nl> + container . metadata ( ) . getKeyValidator ( ) . getString ( key . getKey ( ) ) ) ; <nl> + logger . error ( msg ) ; <nl> throw new TombstoneOverwhelmingException ( ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / CompactionIterator . java b / src / java / org / apache / cassandra / io / CompactionIterator . java <nl> index 6bfadb3 . . f9cab86 100644 <nl> - - - a / src / java / org / apache / cassandra / io / CompactionIterator . java <nl> + + + b / src / java / org / apache / cassandra / io / CompactionIterator . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> + import org . apache . cassandra . db . ColumnFamily ; <nl> import org . apache . cassandra . db . ColumnFamilyStore ; <nl> import org . apache . cassandra . io . sstable . SSTableIdentityIterator ; <nl> import org . apache . cassandra . io . sstable . SSTableReader ; <nl> @ @ - 112 , 10 + 113 , 15 @ @ implements Closeable , ICompactionInfo <nl> cfs . invalidateCachedRow ( compactedRow . key ) ; <nl> return null ; <nl> } <nl> - else <nl> - { <nl> - return compactedRow ; <nl> - } <nl> + <nl> + / / If the raw is cached , we call removeDeleted on it to have / coherent query returns . However it would look <nl> + / / like some deleted columns lived longer than gc _ grace + compaction . This can also free up big amount of <nl> + / / memory on long running instances <nl> + ColumnFamily cachedRow = cfs . getRawCachedRow ( compactedRow . key ) ; <nl> + if ( cachedRow ! = null ) <nl> + ColumnFamilyStore . removeDeleted ( cachedRow , gcBefore ) ; <nl> + <nl> + return compactedRow ; <nl> } <nl> finally <nl> {

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c40c3ce . . ef8c5a7 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 14 
 + * Add partition key to TombstoneOverwhelmingException error message ( CASSANDRA - 10888 ) 
 * Use logback setting for ' cassandra - v ' command ( CASSANDRA - 10767 ) 
 * Fix sstableloader to unthrottle streaming by default ( CASSANDRA - 9714 ) 
 * Fix incorrect warning in ' nodetool status ' ( CASSANDRA - 10176 ) 
 diff - - git a / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java b / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java 
 index 973477f . . 957d1ba 100644 
 - - - a / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java 
 + + + b / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java 
 @ @ - 38 , 7 + 38 , 6 @ @ import org . apache . cassandra . io . sstable . SSTableReader ; 
 import org . apache . cassandra . io . util . DataOutputPlus ; 
 import org . apache . cassandra . io . util . FileDataInput ; 
 import org . apache . cassandra . tracing . Tracing ; 
 - import org . apache . cassandra . utils . ByteBufferUtil ; 
 import org . apache . cassandra . utils . Pair ; 
 
 public class SliceQueryFilter implements IDiskAtomFilter 
 @ @ - 281 , 10 + 280 , 12 @ @ public class SliceQueryFilter implements IDiskAtomFilter 
 { 
 Tracing . trace ( " Scanned over { } tombstones ; query aborted ( see tombstone _ failure _ threshold ) " , 
 DatabaseDescriptor . getTombstoneFailureThreshold ( ) ) ; 
 - logger . error ( " Scanned over { } tombstones in { } . { } ; query aborted ( see tombstone _ failure _ threshold ) " , 
 - DatabaseDescriptor . getTombstoneFailureThreshold ( ) , 
 - container . metadata ( ) . ksName , 
 - container . metadata ( ) . cfName ) ; 
 + String msg = String . format ( " Scanned over % d tombstones in % s . % s for key : % 1 . 512s ; query aborted ( see tombstone _ failure _ threshold ) . " , 
 + DatabaseDescriptor . getTombstoneFailureThreshold ( ) , 
 + container . metadata ( ) . ksName , 
 + container . metadata ( ) . cfName , 
 + container . metadata ( ) . getKeyValidator ( ) . getString ( key . getKey ( ) ) ) ; 
 + logger . error ( msg ) ; 
 throw new TombstoneOverwhelmingException ( ) ; 
 } 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / CompactionIterator . java b / src / java / org / apache / cassandra / io / CompactionIterator . java 
 index 6bfadb3 . . f9cab86 100644 
 - - - a / src / java / org / apache / cassandra / io / CompactionIterator . java 
 + + + b / src / java / org / apache / cassandra / io / CompactionIterator . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 + import org . apache . cassandra . db . ColumnFamily ; 
 import org . apache . cassandra . db . ColumnFamilyStore ; 
 import org . apache . cassandra . io . sstable . SSTableIdentityIterator ; 
 import org . apache . cassandra . io . sstable . SSTableReader ; 
 @ @ - 112 , 10 + 113 , 15 @ @ implements Closeable , ICompactionInfo 
 cfs . invalidateCachedRow ( compactedRow . key ) ; 
 return null ; 
 } 
 - else 
 - { 
 - return compactedRow ; 
 - } 
 + 
 + / / If the raw is cached , we call removeDeleted on it to have / coherent query returns . However it would look 
 + / / like some deleted columns lived longer than gc _ grace + compaction . This can also free up big amount of 
 + / / memory on long running instances 
 + ColumnFamily cachedRow = cfs . getRawCachedRow ( compactedRow . key ) ; 
 + if ( cachedRow ! = null ) 
 + ColumnFamilyStore . removeDeleted ( cachedRow , gcBefore ) ; 
 + 
 + return compactedRow ; 
 } 
 finally 
 {
