BLEU SCORE: 0.05954672553679791

TEST MSG: Initial FAQ section
GENERATED MSG: Automatically generate docs for cassandra . yaml

TEST DIFF (one line): diff - - git a / doc / convert _ yaml _ to _ rst . py b / doc / convert _ yaml _ to _ rst . py <nl> index fee6d8c . . c17bbbb 100644 <nl> - - - a / doc / convert _ yaml _ to _ rst . py <nl> + + + b / doc / convert _ yaml _ to _ rst . py <nl> @ @ - 58 , 6 + 58 , 8 @ @ def convert ( yaml _ file , dest _ file ) : <nl> lines = f . readlines ( ) [ 7 : ] <nl> <nl> with open ( dest _ file , ' w ' ) as outfile : <nl> + outfile . write ( " . . _ cassandra - yaml : \ n " ) <nl> + outfile . write ( " \ n " ) <nl> outfile . write ( " Cassandra Configuration File \ n " ) <nl> outfile . write ( " = = = = = = = = = = = = = = = = = = = = = = = = = = = = \ n " ) <nl> <nl> diff - - git a / doc / source / architecture / dynamo . rst b / doc / source / architecture / dynamo . rst <nl> index d146471 . . a7dbb87 100644 <nl> - - - a / doc / source / architecture / dynamo . rst <nl> + + + b / doc / source / architecture / dynamo . rst <nl> @ @ - 17 , 6 + 17 , 8 @ @ <nl> Dynamo <nl> - - - - - - <nl> <nl> + . . _ gossip : <nl> + <nl> Gossip <nl> ^ ^ ^ ^ ^ ^ <nl> <nl> diff - - git a / doc / source / conf . py b / doc / source / conf . py <nl> index 9caf188 . . 2b36353 100644 <nl> - - - a / doc / source / conf . py <nl> + + + b / doc / source / conf . py <nl> @ @ - 46 , 8 + 46 , 13 @ @ extensions = [ <nl> ' sphinx . ext . todo ' , <nl> ' sphinx . ext . mathjax ' , <nl> ' sphinx . ext . ifconfig ' , <nl> + ' sphinx . ext . extlinks ' , <nl> ] <nl> <nl> + extlinks = { <nl> + ' jira ' : ( ' https : / / issues . apache . org / jira / browse / CASSANDRA - % s ' , ' CASSANDRA - ' ) <nl> + } <nl> + <nl> # Add any paths that contain templates here , relative to this directory . <nl> templates _ path = [ ' _ templates ' ] <nl> <nl> diff - - git a / doc / source / faq / index . rst b / doc / source / faq / index . rst <nl> index 4ac0be4 . . d985e37 100644 <nl> - - - a / doc / source / faq / index . rst <nl> + + + b / doc / source / faq / index . rst <nl> @ @ - 17 , 4 + 17 , 282 @ @ <nl> Frequently Asked Questions <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - . . TODO : todo <nl> + - : ref : ` why - cant - list - all ` <nl> + - : ref : ` what - ports ` <nl> + - : ref : ` what - happens - on - joins ` <nl> + - : ref : ` asynch - deletes ` <nl> + - : ref : ` one - entry - ring ` <nl> + - : ref : ` can - large - blob ` <nl> + - : ref : ` nodetool - connection - refused ` <nl> + - : ref : ` to - batch - or - not - to - batch ` <nl> + - : ref : ` selinux ` <nl> + - : ref : ` how - to - unsubscribe ` <nl> + - : ref : ` cassandra - eats - all - my - memory ` <nl> + - : ref : ` what - are - seeds ` <nl> + - : ref : ` are - seeds - SPOF ` <nl> + - : ref : ` why - message - dropped ` <nl> + - : ref : ` oom - map - failed ` <nl> + - : ref : ` what - on - same - timestamp - update ` <nl> + - : ref : ` why - bootstrapping - stream - error ` <nl> + <nl> + . . _ why - cant - list - all : <nl> + <nl> + Why can ' t I set ` ` listen _ address ` ` to listen on 0 . 0 . 0 . 0 ( all my addresses ) ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Cassandra is a gossip - based distributed system and ` ` listen _ address ` ` is the address a node tells other nodes to reach <nl> + it at . Telling other nodes " contact me on any of my addresses " is a bad idea ; if different nodes in the cluster pick <nl> + different addresses for you , Bad Things happen . <nl> + <nl> + If you don ' t want to manually specify an IP to ` ` listen _ address ` ` for each node in your cluster ( understandable ! ) , leave <nl> + it blank and Cassandra will use ` ` InetAddress . getLocalHost ( ) ` ` to pick an address . Then it ' s up to you or your ops team <nl> + to make things resolve correctly ( ` ` / etc / hosts / ` ` , dns , etc ) . <nl> + <nl> + One exception to this process is JMX , which by default binds to 0 . 0 . 0 . 0 ( Java bug 6425769 ) . <nl> + <nl> + See : jira : ` 256 ` and : jira : ` 43 ` for more gory details . <nl> + <nl> + . . _ what - ports : <nl> + <nl> + What ports does Cassandra use ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + By default , Cassandra uses 7000 for cluster communication ( 7001 if SSL is enabled ) , 9042 for native protocol clients , <nl> + and 7199 for JMX ( and 9160 for the deprecated Thrift interface ) . The internode communication and native protocol ports <nl> + are configurable in the : ref : ` cassandra - yaml ` . The JMX port is configurable in ` ` cassandra - env . sh ` ` ( through JVM <nl> + options ) . All ports are TCP . <nl> + <nl> + . . _ what - happens - on - joins : <nl> + <nl> + What happens to existing data in my cluster when I add new nodes ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + When a new nodes joins a cluster , it will automatically contact the other nodes in the cluster and copy the right data <nl> + to itself . See : ref : ` topology - changes ` . <nl> + <nl> + . . _ asynch - deletes : <nl> + <nl> + I delete data from Cassandra , but disk usage stays the same . What gives ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Data you write to Cassandra gets persisted to SSTables . Since SSTables are immutable , the data can ' t actually be removed <nl> + when you perform a delete , instead , a marker ( also called a " tombstone " ) is written to indicate the value ' s new status . <nl> + Never fear though , on the first compaction that occurs between the data and the tombstone , the data will be expunged <nl> + completely and the corresponding disk space recovered . See : ref : ` compaction ` for more detail . <nl> + <nl> + . . _ one - entry - ring : <nl> + <nl> + Why does nodetool ring only show one entry , even though my nodes logged that they see each other joining the ring ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + This happens when you have the same token assigned to each node . Don ' t do that . <nl> + <nl> + Most often this bites people who deploy by installing Cassandra on a VM ( especially when using the Debian package , which <nl> + auto - starts Cassandra after installation , thus generating and saving a token ) , then cloning that VM to other nodes . <nl> + <nl> + The easiest fix is to wipe the data and commitlog directories , thus making sure that each node will generate a random <nl> + token on the next restart . <nl> + <nl> + . . _ change - replication - factor : <nl> + <nl> + Can I change the replication factor ( a a keyspace ) on a live cluster ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Yes , but it will require running repair ( or cleanup ) to change the replica count of existing data : <nl> + <nl> + - : ref : ` Alter < alter - keyspace - statement > ` the replication factor for desired keyspace ( using cqlsh for instance ) . <nl> + - If you ' re reducing the replication factor , run ` ` nodetool cleanup ` ` on the cluster to remove surplus replicated data . <nl> + Cleanup runs on a per - node basis . <nl> + - If you ' re increasing the replication factor , run ` ` nodetool repair ` ` to ensure data is replicated according to the new <nl> + configuration . Repair runs on a per - replica set basis . This is an intensive process that may result in adverse cluster <nl> + performance . It ' s highly recommended to do rolling repairs , as an attempt to repair the entire cluster at once will <nl> + most likely swamp it . <nl> + <nl> + . . _ can - large - blob : <nl> + <nl> + Can I Store ( large ) BLOBs in Cassandra ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Cassandra isn ' t optimized for large file or BLOB storage and a single ` ` blob ` ` value is always read and send to the <nl> + client entirely . As such , storing small blobs ( less than single digit MB ) should not be a problem , but it is advised to <nl> + manually split large blobs into smaller chunks . <nl> + <nl> + Please note in particular that by default , any value greater than 16MB will be rejected by Cassandra due the <nl> + ` ` max _ mutation _ size _ in _ kb ` ` configuration of the : ref : ` cassandra - yaml ` file ( which default to half of <nl> + ` ` commitlog _ segment _ size _ in _ mb ` ` , which itself default to 32MB ) . <nl> + <nl> + . . _ nodetool - connection - refused : <nl> + <nl> + Nodetool says " Connection refused to host : 127 . 0 . 1 . 1 " for any remote host . What gives ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Nodetool relies on JMX , which in turn relies on RMI , which in turn sets up its own listeners and connectors as needed on <nl> + each end of the exchange . Normally all of this happens behind the scenes transparently , but incorrect name resolution <nl> + for either the host connecting , or the one being connected to , can result in crossed wires and confusing exceptions . <nl> + <nl> + If you are not using DNS , then make sure that your ` ` / etc / hosts ` ` files are accurate on both ends . If that fails , try <nl> + setting the ` ` - Djava . rmi . server . hostname = < public name > ` ` JVM option near the bottom of ` ` cassandra - env . sh ` ` to an <nl> + interface that you can reach from the remote machine . <nl> + <nl> + . . _ to - batch - or - not - to - batch : <nl> + <nl> + Will batching my operations speed up my bulk load ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + No . Using batches to load data will generally just add " spikes " of latency . Use asynchronous INSERTs instead , or use <nl> + true : ref : ` bulk - loading ` . <nl> + <nl> + An exception is batching updates to a single partition , which can be a Good Thing ( as long as the size of a single batch <nl> + stay reasonable ) . But never ever blindly batch everything ! <nl> + <nl> + . . _ selinux : <nl> + <nl> + On RHEL nodes are unable to join the ring <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Check if ` SELinux < https : / / en . wikipedia . org / wiki / Security - Enhanced _ Linux > ` _ _ is on ; if it is , turn it off . <nl> + <nl> + . . _ how - to - unsubscribe : <nl> + <nl> + How do I unsubscribe from the email list ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Send an email to ` ` user - unsubscribe @ cassandra . apache . org ` ` . <nl> + <nl> + . . _ cassandra - eats - all - my - memory : <nl> + <nl> + Why does top report that Cassandra is using a lot more memory than the Java heap max ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Cassandra uses ` Memory Mapped Files < https : / / en . wikipedia . org / wiki / Memory - mapped _ file > ` _ _ ( mmap ) internally . That is , we <nl> + use the operating system ' s virtual memory system to map a number of on - disk files into the Cassandra process ' address <nl> + space . This will " use " virtual memory ; i . e . address space , and will be reported by tools like top accordingly , but on 64 <nl> + bit systems virtual address space is effectively unlimited so you should not worry about that . <nl> + <nl> + What matters from the perspective of " memory use " in the sense as it is normally meant , is the amount of data allocated <nl> + on brk ( ) or mmap ' d / dev / zero , which represent real memory used . The key issue is that for a mmap ' d file , there is never <nl> + a need to retain the data resident in physical memory . Thus , whatever you do keep resident in physical memory is <nl> + essentially just there as a cache , in the same way as normal I / O will cause the kernel page cache to retain data that <nl> + you read / write . <nl> + <nl> + The difference between normal I / O and mmap ( ) is that in the mmap ( ) case the memory is actually mapped to the process , <nl> + thus affecting the virtual size as reported by top . The main argument for using mmap ( ) instead of standard I / O is the <nl> + fact that reading entails just touching memory - in the case of the memory being resident , you just read it - you don ' t <nl> + even take a page fault ( so no overhead in entering the kernel and doing a semi - context switch ) . This is covered in more <nl> + detail ` here < http : / / www . varnish - cache . org / trac / wiki / ArchitectNotes > ` _ _ . <nl> + <nl> + . . _ what - are - seeds : <nl> + <nl> + What are seeds ? <nl> + - - - - - - - - - - - - - - - <nl> + <nl> + Seeds are used during startup to discover the cluster . <nl> + <nl> + If you configure your nodes to refer some node as seed , nodes in your ring tend to send Gossip message to seeds more <nl> + often ( also see the : ref : ` section on gossip < gossip > ` ) than to non - seeds . In other words , seeds are worked as hubs of <nl> + Gossip network . With seeds , each node can detect status changes of other nodes quickly . <nl> + <nl> + Seeds are also referred by new nodes on bootstrap to learn other nodes in ring . When you add a new node to ring , you <nl> + need to specify at least one live seed to contact . Once a node join the ring , it learns about the other nodes , so it <nl> + doesn ' t need seed on subsequent boot . <nl> + <nl> + You can make a seed a node at any time . There is nothing special about seed nodes . If you list the node in seed list it <nl> + is a seed <nl> + <nl> + Seeds do not auto bootstrap ( i . e . if a node has itself in its seed list it will not automatically transfer data to itself ) <nl> + If you want a node to do that , bootstrap it first and then add it to seeds later . If you have no data ( new install ) you <nl> + do not have to worry about bootstrap at all . <nl> + <nl> + Recommended usage of seeds : <nl> + <nl> + - pick two ( or more ) nodes per data center as seed nodes . <nl> + - sync the seed list to all your nodes <nl> + <nl> + . . _ are - seeds - SPOF : <nl> + <nl> + Does single seed mean single point of failure ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + The ring can operate or boot without a seed ; however , you will not be able to add new nodes to the cluster . It is <nl> + recommended to configure multiple seeds in production system . <nl> + <nl> + . . _ cant - call - jmx - method : <nl> + <nl> + Why can ' t I call jmx method X on jconsole ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Some of JMX operations use array argument and as jconsole doesn ' t support array argument , those operations can ' t be <nl> + called with jconsole ( the buttons are inactive for them ) . You need to write a JMX client to call such operations or need <nl> + array - capable JMX monitoring tool . <nl> + <nl> + . . _ why - message - dropped : <nl> + <nl> + Why do I see " . . . messages dropped . . . " in the logs ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + This is a symptom of load shedding - - Cassandra defending itself against more requests than it can handle . <nl> + <nl> + Internode messages which are received by a node , but do not get not to be processed within their proper timeout ( see <nl> + ` ` read _ request _ timeout ` ` , ` ` write _ request _ timeout ` ` , . . . in the : ref : ` cassandra - yaml ` ) , are dropped rather than <nl> + processed ( since the as the coordinator node will no longer be waiting for a response ) . <nl> + <nl> + For writes , this means that the mutation was not applied to all replicas it was sent to . The inconsistency will be <nl> + repaired by read repair , hints or a manual repair . The write operation may also have timeouted as a result . <nl> + <nl> + For reads , this means a read request may not have completed . <nl> + <nl> + Load shedding is part of the Cassandra architecture , if this is a persistent issue it is generally a sign of an <nl> + overloaded node or cluster . <nl> + <nl> + . . _ oom - map - failed : <nl> + <nl> + Cassandra dies with ` ` java . lang . OutOfMemoryError : Map failed ` ` <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + If Cassandra is dying * * specifically * * with the " Map failed " message , it means the OS is denying java the ability to <nl> + lock more memory . In linux , this typically means memlock is limited . Check ` ` / proc / < pid of cassandra > / limits ` ` to verify <nl> + this and raise it ( eg , via ulimit in bash ) . You may also need to increase ` ` vm . max _ map _ count . ` ` Note that the debian <nl> + package handles this for you automatically . <nl> + <nl> + <nl> + . . _ what - on - same - timestamp - update : <nl> + <nl> + What happens if two updates are made with the same timestamp ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Updates must be commutative , since they may arrive in different orders on different replicas . As long as Cassandra has a <nl> + deterministic way to pick the winner ( in a timestamp tie ) , the one selected is as valid as any other , and the specifics <nl> + should be treated as an implementation detail . That said , in the case of a timestamp tie , Cassandra follows two rules : <nl> + first , deletes take precedence over inserts / updates . Second , if there are two updates , the one with the lexically larger <nl> + value is selected . <nl> + <nl> + . . _ why - bootstrapping - stream - error : <nl> + <nl> + Why bootstrapping a new node fails with a " Stream failed " error ? <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Two main possibilities : <nl> + <nl> + # . the GC may be creating long pauses disrupting the streaming process <nl> + # . compactions happening in the background hold streaming long enough that the TCP connection fails <nl> + <nl> + In the first case , regular GC tuning advices apply . In the second case , you need to set TCP keepalive to a lower value <nl> + ( default is very high on Linux ) . Try to just run the following : : <nl> + <nl> + $ sudo / sbin / sysctl - w net . ipv4 . tcp _ keepalive _ time = 60 net . ipv4 . tcp _ keepalive _ intvl = 60 net . ipv4 . tcp _ keepalive _ probes = 5 <nl> + <nl> + To make those settings permanent , add them to your ` ` / etc / sysctl . conf ` ` file . <nl> + <nl> + Note : ` GCE < https : / / cloud . google . com / compute / > ` _ _ ' s firewall will always interrupt TCP connections that are inactive for <nl> + more than 10 min . Running the above command is highly recommended in that environment . <nl> + <nl> + <nl> + <nl> + <nl> + <nl> + <nl> + <nl> + <nl> + <nl> + <nl> + <nl> diff - - git a / doc / source / operating / bulk _ loading . rst b / doc / source / operating / bulk _ loading . rst <nl> new file mode 100644 <nl> index 0000000 . . c8224d5 <nl> - - - / dev / null <nl> + + + b / doc / source / operating / bulk _ loading . rst <nl> @ @ - 0 , 0 + 1 , 24 @ @ <nl> + . . Licensed to the Apache Software Foundation ( ASF ) under one <nl> + . . or more contributor license agreements . See the NOTICE file <nl> + . . distributed with this work for additional information <nl> + . . regarding copyright ownership . The ASF licenses this file <nl> + . . to you under the Apache License , Version 2 . 0 ( the <nl> + . . " License " ) ; you may not use this file except in compliance <nl> + . . with the License . You may obtain a copy of the License at <nl> + . . <nl> + . . http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + . . <nl> + . . Unless required by applicable law or agreed to in writing , software <nl> + . . distributed under the License is distributed on an " AS IS " BASIS , <nl> + . . WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + . . See the License for the specific language governing permissions and <nl> + . . limitations under the License . <nl> + <nl> + . . highlight : : none <nl> + <nl> + . . _ bulk - loading : <nl> + <nl> + Bulk Loading <nl> + - - - - - - - - - - - - <nl> + <nl> + . . todo : : TODO <nl> diff - - git a / doc / source / operating / index . rst b / doc / source / operating / index . rst <nl> index 6fc27c8 . . e2cead2 100644 <nl> - - - a / doc / source / operating / index . rst <nl> + + + b / doc / source / operating / index . rst <nl> @ @ - 32 , 6 + 32 , 7 @ @ Operating Cassandra <nl> compression <nl> cdc <nl> backups <nl> + bulk _ loading <nl> metrics <nl> security <nl> hardware <nl> diff - - git a / doc / source / operating / topo _ changes . rst b / doc / source / operating / topo _ changes . rst <nl> index 9d6a2ba . . c42708e 100644 <nl> - - - a / doc / source / operating / topo _ changes . rst <nl> + + + b / doc / source / operating / topo _ changes . rst <nl> @ @ - 16 , 6 + 16 , 8 @ @ <nl> <nl> . . highlight : : none <nl> <nl> + . . _ topology - changes : <nl> + <nl> Adding , replacing , moving and removing nodes <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / doc / convert _ yaml _ to _ rst . py b / doc / convert _ yaml _ to _ rst . py 
 index fee6d8c . . c17bbbb 100644 
 - - - a / doc / convert _ yaml _ to _ rst . py 
 + + + b / doc / convert _ yaml _ to _ rst . py 
 @ @ - 58 , 6 + 58 , 8 @ @ def convert ( yaml _ file , dest _ file ) : 
 lines = f . readlines ( ) [ 7 : ] 
 
 with open ( dest _ file , ' w ' ) as outfile : 
 + outfile . write ( " . . _ cassandra - yaml : \ n " ) 
 + outfile . write ( " \ n " ) 
 outfile . write ( " Cassandra Configuration File \ n " ) 
 outfile . write ( " = = = = = = = = = = = = = = = = = = = = = = = = = = = = \ n " ) 
 
 diff - - git a / doc / source / architecture / dynamo . rst b / doc / source / architecture / dynamo . rst 
 index d146471 . . a7dbb87 100644 
 - - - a / doc / source / architecture / dynamo . rst 
 + + + b / doc / source / architecture / dynamo . rst 
 @ @ - 17 , 6 + 17 , 8 @ @ 
 Dynamo 
 - - - - - - 
 
 + . . _ gossip : 
 + 
 Gossip 
 ^ ^ ^ ^ ^ ^ 
 
 diff - - git a / doc / source / conf . py b / doc / source / conf . py 
 index 9caf188 . . 2b36353 100644 
 - - - a / doc / source / conf . py 
 + + + b / doc / source / conf . py 
 @ @ - 46 , 8 + 46 , 13 @ @ extensions = [ 
 ' sphinx . ext . todo ' , 
 ' sphinx . ext . mathjax ' , 
 ' sphinx . ext . ifconfig ' , 
 + ' sphinx . ext . extlinks ' , 
 ] 
 
 + extlinks = { 
 + ' jira ' : ( ' https : / / issues . apache . org / jira / browse / CASSANDRA - % s ' , ' CASSANDRA - ' ) 
 + } 
 + 
 # Add any paths that contain templates here , relative to this directory . 
 templates _ path = [ ' _ templates ' ] 
 
 diff - - git a / doc / source / faq / index . rst b / doc / source / faq / index . rst 
 index 4ac0be4 . . d985e37 100644 
 - - - a / doc / source / faq / index . rst 
 + + + b / doc / source / faq / index . rst 
 @ @ - 17 , 4 + 17 , 282 @ @ 
 Frequently Asked Questions 
 = = = = = = = = = = = = = = = = = = = = = = = = = = 
 
 - . . TODO : todo 
 + - : ref : ` why - cant - list - all ` 
 + - : ref : ` what - ports ` 
 + - : ref : ` what - happens - on - joins ` 
 + - : ref : ` asynch - deletes ` 
 + - : ref : ` one - entry - ring ` 
 + - : ref : ` can - large - blob ` 
 + - : ref : ` nodetool - connection - refused ` 
 + - : ref : ` to - batch - or - not - to - batch ` 
 + - : ref : ` selinux ` 
 + - : ref : ` how - to - unsubscribe ` 
 + - : ref : ` cassandra - eats - all - my - memory ` 
 + - : ref : ` what - are - seeds ` 
 + - : ref : ` are - seeds - SPOF ` 
 + - : ref : ` why - message - dropped ` 
 + - : ref : ` oom - map - failed ` 
 + - : ref : ` what - on - same - timestamp - update ` 
 + - : ref : ` why - bootstrapping - stream - error ` 
 + 
 + . . _ why - cant - list - all : 
 + 
 + Why can ' t I set ` ` listen _ address ` ` to listen on 0 . 0 . 0 . 0 ( all my addresses ) ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Cassandra is a gossip - based distributed system and ` ` listen _ address ` ` is the address a node tells other nodes to reach 
 + it at . Telling other nodes " contact me on any of my addresses " is a bad idea ; if different nodes in the cluster pick 
 + different addresses for you , Bad Things happen . 
 + 
 + If you don ' t want to manually specify an IP to ` ` listen _ address ` ` for each node in your cluster ( understandable ! ) , leave 
 + it blank and Cassandra will use ` ` InetAddress . getLocalHost ( ) ` ` to pick an address . Then it ' s up to you or your ops team 
 + to make things resolve correctly ( ` ` / etc / hosts / ` ` , dns , etc ) . 
 + 
 + One exception to this process is JMX , which by default binds to 0 . 0 . 0 . 0 ( Java bug 6425769 ) . 
 + 
 + See : jira : ` 256 ` and : jira : ` 43 ` for more gory details . 
 + 
 + . . _ what - ports : 
 + 
 + What ports does Cassandra use ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + By default , Cassandra uses 7000 for cluster communication ( 7001 if SSL is enabled ) , 9042 for native protocol clients , 
 + and 7199 for JMX ( and 9160 for the deprecated Thrift interface ) . The internode communication and native protocol ports 
 + are configurable in the : ref : ` cassandra - yaml ` . The JMX port is configurable in ` ` cassandra - env . sh ` ` ( through JVM 
 + options ) . All ports are TCP . 
 + 
 + . . _ what - happens - on - joins : 
 + 
 + What happens to existing data in my cluster when I add new nodes ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + When a new nodes joins a cluster , it will automatically contact the other nodes in the cluster and copy the right data 
 + to itself . See : ref : ` topology - changes ` . 
 + 
 + . . _ asynch - deletes : 
 + 
 + I delete data from Cassandra , but disk usage stays the same . What gives ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Data you write to Cassandra gets persisted to SSTables . Since SSTables are immutable , the data can ' t actually be removed 
 + when you perform a delete , instead , a marker ( also called a " tombstone " ) is written to indicate the value ' s new status . 
 + Never fear though , on the first compaction that occurs between the data and the tombstone , the data will be expunged 
 + completely and the corresponding disk space recovered . See : ref : ` compaction ` for more detail . 
 + 
 + . . _ one - entry - ring : 
 + 
 + Why does nodetool ring only show one entry , even though my nodes logged that they see each other joining the ring ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + This happens when you have the same token assigned to each node . Don ' t do that . 
 + 
 + Most often this bites people who deploy by installing Cassandra on a VM ( especially when using the Debian package , which 
 + auto - starts Cassandra after installation , thus generating and saving a token ) , then cloning that VM to other nodes . 
 + 
 + The easiest fix is to wipe the data and commitlog directories , thus making sure that each node will generate a random 
 + token on the next restart . 
 + 
 + . . _ change - replication - factor : 
 + 
 + Can I change the replication factor ( a a keyspace ) on a live cluster ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Yes , but it will require running repair ( or cleanup ) to change the replica count of existing data : 
 + 
 + - : ref : ` Alter < alter - keyspace - statement > ` the replication factor for desired keyspace ( using cqlsh for instance ) . 
 + - If you ' re reducing the replication factor , run ` ` nodetool cleanup ` ` on the cluster to remove surplus replicated data . 
 + Cleanup runs on a per - node basis . 
 + - If you ' re increasing the replication factor , run ` ` nodetool repair ` ` to ensure data is replicated according to the new 
 + configuration . Repair runs on a per - replica set basis . This is an intensive process that may result in adverse cluster 
 + performance . It ' s highly recommended to do rolling repairs , as an attempt to repair the entire cluster at once will 
 + most likely swamp it . 
 + 
 + . . _ can - large - blob : 
 + 
 + Can I Store ( large ) BLOBs in Cassandra ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Cassandra isn ' t optimized for large file or BLOB storage and a single ` ` blob ` ` value is always read and send to the 
 + client entirely . As such , storing small blobs ( less than single digit MB ) should not be a problem , but it is advised to 
 + manually split large blobs into smaller chunks . 
 + 
 + Please note in particular that by default , any value greater than 16MB will be rejected by Cassandra due the 
 + ` ` max _ mutation _ size _ in _ kb ` ` configuration of the : ref : ` cassandra - yaml ` file ( which default to half of 
 + ` ` commitlog _ segment _ size _ in _ mb ` ` , which itself default to 32MB ) . 
 + 
 + . . _ nodetool - connection - refused : 
 + 
 + Nodetool says " Connection refused to host : 127 . 0 . 1 . 1 " for any remote host . What gives ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Nodetool relies on JMX , which in turn relies on RMI , which in turn sets up its own listeners and connectors as needed on 
 + each end of the exchange . Normally all of this happens behind the scenes transparently , but incorrect name resolution 
 + for either the host connecting , or the one being connected to , can result in crossed wires and confusing exceptions . 
 + 
 + If you are not using DNS , then make sure that your ` ` / etc / hosts ` ` files are accurate on both ends . If that fails , try 
 + setting the ` ` - Djava . rmi . server . hostname = < public name > ` ` JVM option near the bottom of ` ` cassandra - env . sh ` ` to an 
 + interface that you can reach from the remote machine . 
 + 
 + . . _ to - batch - or - not - to - batch : 
 + 
 + Will batching my operations speed up my bulk load ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + No . Using batches to load data will generally just add " spikes " of latency . Use asynchronous INSERTs instead , or use 
 + true : ref : ` bulk - loading ` . 
 + 
 + An exception is batching updates to a single partition , which can be a Good Thing ( as long as the size of a single batch 
 + stay reasonable ) . But never ever blindly batch everything ! 
 + 
 + . . _ selinux : 
 + 
 + On RHEL nodes are unable to join the ring 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Check if ` SELinux < https : / / en . wikipedia . org / wiki / Security - Enhanced _ Linux > ` _ _ is on ; if it is , turn it off . 
 + 
 + . . _ how - to - unsubscribe : 
 + 
 + How do I unsubscribe from the email list ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Send an email to ` ` user - unsubscribe @ cassandra . apache . org ` ` . 
 + 
 + . . _ cassandra - eats - all - my - memory : 
 + 
 + Why does top report that Cassandra is using a lot more memory than the Java heap max ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Cassandra uses ` Memory Mapped Files < https : / / en . wikipedia . org / wiki / Memory - mapped _ file > ` _ _ ( mmap ) internally . That is , we 
 + use the operating system ' s virtual memory system to map a number of on - disk files into the Cassandra process ' address 
 + space . This will " use " virtual memory ; i . e . address space , and will be reported by tools like top accordingly , but on 64 
 + bit systems virtual address space is effectively unlimited so you should not worry about that . 
 + 
 + What matters from the perspective of " memory use " in the sense as it is normally meant , is the amount of data allocated 
 + on brk ( ) or mmap ' d / dev / zero , which represent real memory used . The key issue is that for a mmap ' d file , there is never 
 + a need to retain the data resident in physical memory . Thus , whatever you do keep resident in physical memory is 
 + essentially just there as a cache , in the same way as normal I / O will cause the kernel page cache to retain data that 
 + you read / write . 
 + 
 + The difference between normal I / O and mmap ( ) is that in the mmap ( ) case the memory is actually mapped to the process , 
 + thus affecting the virtual size as reported by top . The main argument for using mmap ( ) instead of standard I / O is the 
 + fact that reading entails just touching memory - in the case of the memory being resident , you just read it - you don ' t 
 + even take a page fault ( so no overhead in entering the kernel and doing a semi - context switch ) . This is covered in more 
 + detail ` here < http : / / www . varnish - cache . org / trac / wiki / ArchitectNotes > ` _ _ . 
 + 
 + . . _ what - are - seeds : 
 + 
 + What are seeds ? 
 + - - - - - - - - - - - - - - - 
 + 
 + Seeds are used during startup to discover the cluster . 
 + 
 + If you configure your nodes to refer some node as seed , nodes in your ring tend to send Gossip message to seeds more 
 + often ( also see the : ref : ` section on gossip < gossip > ` ) than to non - seeds . In other words , seeds are worked as hubs of 
 + Gossip network . With seeds , each node can detect status changes of other nodes quickly . 
 + 
 + Seeds are also referred by new nodes on bootstrap to learn other nodes in ring . When you add a new node to ring , you 
 + need to specify at least one live seed to contact . Once a node join the ring , it learns about the other nodes , so it 
 + doesn ' t need seed on subsequent boot . 
 + 
 + You can make a seed a node at any time . There is nothing special about seed nodes . If you list the node in seed list it 
 + is a seed 
 + 
 + Seeds do not auto bootstrap ( i . e . if a node has itself in its seed list it will not automatically transfer data to itself ) 
 + If you want a node to do that , bootstrap it first and then add it to seeds later . If you have no data ( new install ) you 
 + do not have to worry about bootstrap at all . 
 + 
 + Recommended usage of seeds : 
 + 
 + - pick two ( or more ) nodes per data center as seed nodes . 
 + - sync the seed list to all your nodes 
 + 
 + . . _ are - seeds - SPOF : 
 + 
 + Does single seed mean single point of failure ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + The ring can operate or boot without a seed ; however , you will not be able to add new nodes to the cluster . It is 
 + recommended to configure multiple seeds in production system . 
 + 
 + . . _ cant - call - jmx - method : 
 + 
 + Why can ' t I call jmx method X on jconsole ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Some of JMX operations use array argument and as jconsole doesn ' t support array argument , those operations can ' t be 
 + called with jconsole ( the buttons are inactive for them ) . You need to write a JMX client to call such operations or need 
 + array - capable JMX monitoring tool . 
 + 
 + . . _ why - message - dropped : 
 + 
 + Why do I see " . . . messages dropped . . . " in the logs ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + This is a symptom of load shedding - - Cassandra defending itself against more requests than it can handle . 
 + 
 + Internode messages which are received by a node , but do not get not to be processed within their proper timeout ( see 
 + ` ` read _ request _ timeout ` ` , ` ` write _ request _ timeout ` ` , . . . in the : ref : ` cassandra - yaml ` ) , are dropped rather than 
 + processed ( since the as the coordinator node will no longer be waiting for a response ) . 
 + 
 + For writes , this means that the mutation was not applied to all replicas it was sent to . The inconsistency will be 
 + repaired by read repair , hints or a manual repair . The write operation may also have timeouted as a result . 
 + 
 + For reads , this means a read request may not have completed . 
 + 
 + Load shedding is part of the Cassandra architecture , if this is a persistent issue it is generally a sign of an 
 + overloaded node or cluster . 
 + 
 + . . _ oom - map - failed : 
 + 
 + Cassandra dies with ` ` java . lang . OutOfMemoryError : Map failed ` ` 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + If Cassandra is dying * * specifically * * with the " Map failed " message , it means the OS is denying java the ability to 
 + lock more memory . In linux , this typically means memlock is limited . Check ` ` / proc / < pid of cassandra > / limits ` ` to verify 
 + this and raise it ( eg , via ulimit in bash ) . You may also need to increase ` ` vm . max _ map _ count . ` ` Note that the debian 
 + package handles this for you automatically . 
 + 
 + 
 + . . _ what - on - same - timestamp - update : 
 + 
 + What happens if two updates are made with the same timestamp ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Updates must be commutative , since they may arrive in different orders on different replicas . As long as Cassandra has a 
 + deterministic way to pick the winner ( in a timestamp tie ) , the one selected is as valid as any other , and the specifics 
 + should be treated as an implementation detail . That said , in the case of a timestamp tie , Cassandra follows two rules : 
 + first , deletes take precedence over inserts / updates . Second , if there are two updates , the one with the lexically larger 
 + value is selected . 
 + 
 + . . _ why - bootstrapping - stream - error : 
 + 
 + Why bootstrapping a new node fails with a " Stream failed " error ? 
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + 
 + Two main possibilities : 
 + 
 + # . the GC may be creating long pauses disrupting the streaming process 
 + # . compactions happening in the background hold streaming long enough that the TCP connection fails 
 + 
 + In the first case , regular GC tuning advices apply . In the second case , you need to set TCP keepalive to a lower value 
 + ( default is very high on Linux ) . Try to just run the following : : 
 + 
 + $ sudo / sbin / sysctl - w net . ipv4 . tcp _ keepalive _ time = 60 net . ipv4 . tcp _ keepalive _ intvl = 60 net . ipv4 . tcp _ keepalive _ probes = 5 
 + 
 + To make those settings permanent , add them to your ` ` / etc / sysctl . conf ` ` file . 
 + 
 + Note : ` GCE < https : / / cloud . google . com / compute / > ` _ _ ' s firewall will always interrupt TCP connections that are inactive for 
 + more than 10 min . Running the above command is highly recommended in that environment . 
 + 
 + 
 + 
 + 
 + 
 + 
 + 
 + 
 + 
 + 
 + 
 diff - - git a / doc / source / operating / bulk _ loading . rst b / doc / source / operating / bulk _ loading . rst 
 new file mode 100644 
 index 0000000 . . c8224d5 
 - - - / dev / null 
 + + + b / doc / source / operating / bulk _ loading . rst 
 @ @ - 0 , 0 + 1 , 24 @ @ 
 + . . Licensed to the Apache Software Foundation ( ASF ) under one 
 + . . or more contributor license agreements . See the NOTICE file 
 + . . distributed with this work for additional information 
 + . . regarding copyright ownership . The ASF licenses this file 
 + . . to you under the Apache License , Version 2 . 0 ( the 
 + . . " License " ) ; you may not use this file except in compliance 
 + . . with the License . You may obtain a copy of the License at 
 + . . 
 + . . http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + . . 
 + . . Unless required by applicable law or agreed to in writing , software 
 + . . distributed under the License is distributed on an " AS IS " BASIS , 
 + . . WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + . . See the License for the specific language governing permissions and 
 + . . limitations under the License . 
 + 
 + . . highlight : : none 
 + 
 + . . _ bulk - loading : 
 + 
 + Bulk Loading 
 + - - - - - - - - - - - - 
 + 
 + . . todo : : TODO 
 diff - - git a / doc / source / operating / index . rst b / doc / source / operating / index . rst 
 index 6fc27c8 . . e2cead2 100644 
 - - - a / doc / source / operating / index . rst 
 + + + b / doc / source / operating / index . rst 
 @ @ - 32 , 6 + 32 , 7 @ @ Operating Cassandra 
 compression 
 cdc 
 backups 
 + bulk _ loading 
 metrics 
 security 
 hardware 
 diff - - git a / doc / source / operating / topo _ changes . rst b / doc / source / operating / topo _ changes . rst 
 index 9d6a2ba . . c42708e 100644 
 - - - a / doc / source / operating / topo _ changes . rst 
 + + + b / doc / source / operating / topo _ changes . rst 
 @ @ - 16 , 6 + 16 , 8 @ @ 
 
 . . highlight : : none 
 
 + . . _ topology - changes : 
 + 
 Adding , replacing , moving and removing nodes 
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


NEAREST DIFF:
ELIMINATEDSENTENCE
