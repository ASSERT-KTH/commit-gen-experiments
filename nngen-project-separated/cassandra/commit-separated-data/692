BLEU SCORE: 0.03515208856700363

TEST MSG: Update NEWS . txt for 3 . 8
GENERATED MSG: Move demo Keyspace1 definition from casandra . yaml to an input file for

TEST DIFF (one line): diff - - git a / NEWS . txt b / NEWS . txt <nl> index 2edff8e . . 8725931 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 13 , 16 + 13 , 6 @ @ restore snapshots created with the previous major version using the <nl> ' sstableloader ' tool . You can upgrade the file format of your snapshots <nl> using the provided ' sstableupgrade ' tool . <nl> <nl> - 3 . 9 <nl> - = = = <nl> - <nl> - Upgrading <nl> - - - - - - - - - - <nl> - - The ReversedType behaviour has been corrected for clustering columns of <nl> - BYTES type containing empty value . Scrub should be run on the existing <nl> - SSTables containing a descending clustering column of BYTES type to correct <nl> - their ordering . See CASSANDRA - 12127 for more details . <nl> - <nl> 3 . 8 <nl> = = = <nl> <nl> @ @ - 54 , 14 + 44 , 18 @ @ New features <nl> <nl> Upgrading <nl> - - - - - - - - - <nl> - - Ec2MultiRegionSnitch will no longer automatically set broadcast _ rpc _ address <nl> - to the public instance IP if this property is defined on cassandra . yaml . <nl> - - The name " json " and " distinct " are not valid anymore a user - defined function <nl> - names ( they are still valid as column name however ) . In the unlikely case where <nl> - you had defined functions with such names , you will need to recreate <nl> - those under a different name , change your code to use the new names and <nl> - drop the old versions , and this _ before _ upgrade ( see CASSANDRA - 10783 for more <nl> - details ) . <nl> + - The ReversedType behaviour has been corrected for clustering columns of <nl> + BYTES type containing empty value . Scrub should be run on the existing <nl> + SSTables containing a descending clustering column of BYTES type to correct <nl> + their ordering . See CASSANDRA - 12127 for more details . <nl> + - Ec2MultiRegionSnitch will no longer automatically set broadcast _ rpc _ address <nl> + to the public instance IP if this property is defined on cassandra . yaml . <nl> + - The name " json " and " distinct " are not valid anymore a user - defined function <nl> + names ( they are still valid as column name however ) . In the unlikely case where <nl> + you had defined functions with such names , you will need to recreate <nl> + those under a different name , change your code to use the new names and <nl> + drop the old versions , and this _ before _ upgrade ( see CASSANDRA - 10783 for more <nl> + details ) . <nl> <nl> Deprecation <nl> - - - - - - - - - - -
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 6174ab1 . . 8554380 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 226 , 31 + 226 , 29 @ @ public class StorageProxy implements StorageProxyMBean <nl> { <nl> String dataCenter = entry . getKey ( ) ; <nl> <nl> - / / Grab a set of all the messages bound for this dataCenter and create an iterator over this set . <nl> - Map < Message , Collection < InetAddress > > messagesForDataCenter = entry . getValue ( ) . asMap ( ) ; <nl> - <nl> - for ( Map . Entry < Message , Collection < InetAddress > > messages : messagesForDataCenter . entrySet ( ) ) <nl> + / / send the messages corresponding to this datacenter <nl> + for ( Map . Entry < Message , Collection < InetAddress > > messages : entry . getValue ( ) . asMap ( ) . entrySet ( ) ) <nl> { <nl> Message message = messages . getKey ( ) ; <nl> - Iterator < InetAddress > iter = messages . getValue ( ) . iterator ( ) ; <nl> - assert iter . hasNext ( ) ; <nl> - <nl> - / / First endpoint in list is the destination for this group <nl> - InetAddress target = iter . next ( ) ; <nl> + / / a single message object is used for unhinted writes , so clean out any forwards <nl> + / / from previous loop iterations <nl> + message . removeHeader ( RowMutation . FORWARD _ HEADER ) ; <nl> <nl> - / / Add all the other destinations that are bound for the same dataCenter as a header in the primary message . <nl> - while ( iter . hasNext ( ) ) <nl> + if ( dataCenter . equals ( localDataCenter ) ) <nl> { <nl> - InetAddress destination = iter . next ( ) ; <nl> - <nl> - if ( dataCenter . equals ( localDataCenter ) ) <nl> - { <nl> - / / direct write to local DC <nl> - assert message . getHeader ( RowMutation . FORWARD _ HEADER ) = = null ; <nl> + / / direct writes to local DC <nl> + for ( InetAddress destination : messages . getValue ( ) ) <nl> MessagingService . instance ( ) . sendOneWay ( message , destination ) ; <nl> - } <nl> - else <nl> + } <nl> + else <nl> + { <nl> + / / Non - local DC . First endpoint in list is the destination for this group <nl> + Iterator < InetAddress > iter = messages . getValue ( ) . iterator ( ) ; <nl> + InetAddress target = iter . next ( ) ; <nl> + / / Add all the other destinations of the same message as a header in the primary message . <nl> + while ( iter . hasNext ( ) ) <nl> { <nl> + InetAddress destination = iter . next ( ) ; <nl> / / group all nodes in this DC as forward headers on the primary message <nl> ByteArrayOutputStream bos = new ByteArrayOutputStream ( ) ; <nl> DataOutputStream dos = new DataOutputStream ( bos ) ; <nl> @ @ - 263 , 9 + 261 , 9 @ @ public class StorageProxy implements StorageProxyMBean <nl> dos . write ( destination . getAddress ( ) ) ; <nl> message . setHeader ( RowMutation . FORWARD _ HEADER , bos . toByteArray ( ) ) ; <nl> } <nl> + / / send the combined message + forward headers <nl> + MessagingService . instance ( ) . sendOneWay ( message , target ) ; <nl> } <nl> - <nl> - MessagingService . instance ( ) . sendOneWay ( message , target ) ; <nl> } <nl> } <nl> }

TEST DIFF:
diff - - git a / NEWS . txt b / NEWS . txt 
 index 2edff8e . . 8725931 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 13 , 16 + 13 , 6 @ @ restore snapshots created with the previous major version using the 
 ' sstableloader ' tool . You can upgrade the file format of your snapshots 
 using the provided ' sstableupgrade ' tool . 
 
 - 3 . 9 
 - = = = 
 - 
 - Upgrading 
 - - - - - - - - - - 
 - - The ReversedType behaviour has been corrected for clustering columns of 
 - BYTES type containing empty value . Scrub should be run on the existing 
 - SSTables containing a descending clustering column of BYTES type to correct 
 - their ordering . See CASSANDRA - 12127 for more details . 
 - 
 3 . 8 
 = = = 
 
 @ @ - 54 , 14 + 44 , 18 @ @ New features 
 
 Upgrading 
 - - - - - - - - - 
 - - Ec2MultiRegionSnitch will no longer automatically set broadcast _ rpc _ address 
 - to the public instance IP if this property is defined on cassandra . yaml . 
 - - The name " json " and " distinct " are not valid anymore a user - defined function 
 - names ( they are still valid as column name however ) . In the unlikely case where 
 - you had defined functions with such names , you will need to recreate 
 - those under a different name , change your code to use the new names and 
 - drop the old versions , and this _ before _ upgrade ( see CASSANDRA - 10783 for more 
 - details ) . 
 + - The ReversedType behaviour has been corrected for clustering columns of 
 + BYTES type containing empty value . Scrub should be run on the existing 
 + SSTables containing a descending clustering column of BYTES type to correct 
 + their ordering . See CASSANDRA - 12127 for more details . 
 + - Ec2MultiRegionSnitch will no longer automatically set broadcast _ rpc _ address 
 + to the public instance IP if this property is defined on cassandra . yaml . 
 + - The name " json " and " distinct " are not valid anymore a user - defined function 
 + names ( they are still valid as column name however ) . In the unlikely case where 
 + you had defined functions with such names , you will need to recreate 
 + those under a different name , change your code to use the new names and 
 + drop the old versions , and this _ before _ upgrade ( see CASSANDRA - 10783 for more 
 + details ) . 
 
 Deprecation 
 - - - - - - - - - - -

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 6174ab1 . . 8554380 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 226 , 31 + 226 , 29 @ @ public class StorageProxy implements StorageProxyMBean 
 { 
 String dataCenter = entry . getKey ( ) ; 
 
 - / / Grab a set of all the messages bound for this dataCenter and create an iterator over this set . 
 - Map < Message , Collection < InetAddress > > messagesForDataCenter = entry . getValue ( ) . asMap ( ) ; 
 - 
 - for ( Map . Entry < Message , Collection < InetAddress > > messages : messagesForDataCenter . entrySet ( ) ) 
 + / / send the messages corresponding to this datacenter 
 + for ( Map . Entry < Message , Collection < InetAddress > > messages : entry . getValue ( ) . asMap ( ) . entrySet ( ) ) 
 { 
 Message message = messages . getKey ( ) ; 
 - Iterator < InetAddress > iter = messages . getValue ( ) . iterator ( ) ; 
 - assert iter . hasNext ( ) ; 
 - 
 - / / First endpoint in list is the destination for this group 
 - InetAddress target = iter . next ( ) ; 
 + / / a single message object is used for unhinted writes , so clean out any forwards 
 + / / from previous loop iterations 
 + message . removeHeader ( RowMutation . FORWARD _ HEADER ) ; 
 
 - / / Add all the other destinations that are bound for the same dataCenter as a header in the primary message . 
 - while ( iter . hasNext ( ) ) 
 + if ( dataCenter . equals ( localDataCenter ) ) 
 { 
 - InetAddress destination = iter . next ( ) ; 
 - 
 - if ( dataCenter . equals ( localDataCenter ) ) 
 - { 
 - / / direct write to local DC 
 - assert message . getHeader ( RowMutation . FORWARD _ HEADER ) = = null ; 
 + / / direct writes to local DC 
 + for ( InetAddress destination : messages . getValue ( ) ) 
 MessagingService . instance ( ) . sendOneWay ( message , destination ) ; 
 - } 
 - else 
 + } 
 + else 
 + { 
 + / / Non - local DC . First endpoint in list is the destination for this group 
 + Iterator < InetAddress > iter = messages . getValue ( ) . iterator ( ) ; 
 + InetAddress target = iter . next ( ) ; 
 + / / Add all the other destinations of the same message as a header in the primary message . 
 + while ( iter . hasNext ( ) ) 
 { 
 + InetAddress destination = iter . next ( ) ; 
 / / group all nodes in this DC as forward headers on the primary message 
 ByteArrayOutputStream bos = new ByteArrayOutputStream ( ) ; 
 DataOutputStream dos = new DataOutputStream ( bos ) ; 
 @ @ - 263 , 9 + 261 , 9 @ @ public class StorageProxy implements StorageProxyMBean 
 dos . write ( destination . getAddress ( ) ) ; 
 message . setHeader ( RowMutation . FORWARD _ HEADER , bos . toByteArray ( ) ) ; 
 } 
 + / / send the combined message + forward headers 
 + MessagingService . instance ( ) . sendOneWay ( message , target ) ; 
 } 
 - 
 - MessagingService . instance ( ) . sendOneWay ( message , target ) ; 
 } 
 } 
 }
