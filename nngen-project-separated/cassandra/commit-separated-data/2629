BLEU SCORE: 0.0367352656298894

TEST MSG: Static columns with IF NOT EXISTS don ' t always work as expected
GENERATED MSG: Add support for DELETE . . . IF EXISTS to CQL3

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 650f12c . . 2bb3605 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 22 , 6 + 22 , 7 @ @ <nl> * Add paranoid disk failure option ( CASSANDRA - 6646 ) <nl> * Improve PerRowSecondaryIndex performance ( CASSANDRA - 6876 ) <nl> * Extend triggers to support CAS updates ( CASSANDRA - 6882 ) <nl> + * Static columns with IF NOT EXISTS don ' t always work as expected ( CASSANDRA - 6873 ) <nl> Merged from 1 . 2 : <nl> * add extra SSL cipher suites ( CASSANDRA - 6613 ) <nl> * fix nodetool getsstables for blob PK ( CASSANDRA - 6803 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java <nl> index d96ea9c . . 526a26c 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java <nl> @ @ - 76 , 7 + 76 , 9 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF <nl> private boolean ifExists ; <nl> <nl> private boolean hasNoClusteringColumns = true ; <nl> - private boolean setsOnlyStaticColumns ; <nl> + <nl> + private boolean setsStaticColumns ; <nl> + private boolean setsRegularColumns ; <nl> <nl> private final Function < ColumnCondition , ColumnIdentifier > getColumnForCondition = new Function < ColumnCondition , ColumnIdentifier > ( ) <nl> { <nl> @ @ - 178 , 14 + 180 , 9 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF <nl> public void addOperation ( Operation op ) <nl> { <nl> if ( op . isStatic ( cfm ) ) <nl> - { <nl> - if ( columnOperations . isEmpty ( ) ) <nl> - setsOnlyStaticColumns = true ; <nl> - } <nl> + setsStaticColumns = true ; <nl> else <nl> - { <nl> - setsOnlyStaticColumns = false ; <nl> - } <nl> + setsRegularColumns = true ; <nl> columnOperations . add ( op ) ; <nl> } <nl> <nl> @ @ - 208 , 12 + 205 , 14 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF <nl> List < ColumnCondition > conds = null ; <nl> if ( cond . column . kind = = CFDefinition . Name . Kind . STATIC ) <nl> { <nl> + setsStaticColumns = true ; <nl> if ( staticConditions = = null ) <nl> staticConditions = new ArrayList < ColumnCondition > ( ) ; <nl> conds = staticConditions ; <nl> } <nl> else <nl> { <nl> + setsRegularColumns = true ; <nl> if ( columnConditions = = null ) <nl> columnConditions = new ArrayList < ColumnCondition > ( ) ; <nl> conds = columnConditions ; <nl> @ @ - 361 , 13 + 360 , 23 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF <nl> / / UPDATE t SET s = 3 WHERE k = 0 AND v = 1 <nl> / / DELETE v FROM t WHERE k = 0 AND v = 1 <nl> / / sounds like you don ' t really understand what your are doing . <nl> - if ( setsOnlyStaticColumns & & columnConditions = = null & & ( type ! = StatementType . INSERT | | hasNoClusteringColumns ) ) <nl> + if ( setsStaticColumns & & ! setsRegularColumns ) <nl> { <nl> - / / Reject if any clustering columns is set <nl> - for ( CFDefinition . Name name : cfm . getCfDef ( ) . clusteringColumns ( ) ) <nl> - if ( processedKeys . get ( name . name ) ! = null ) <nl> - throw new InvalidRequestException ( String . format ( " Invalid restriction on clustering column % s since the % s statement modifies only static columns " , name . name , type ) ) ; <nl> - return cfm . getStaticColumnNameBuilder ( ) ; <nl> + / / If we set no non - static columns , then it ' s fine not to have clustering columns <nl> + if ( hasNoClusteringColumns ) <nl> + return cfm . getStaticColumnNameBuilder ( ) ; <nl> + <nl> + / / If we do have clustering columns however , then either it ' s an INSERT and the query is valid <nl> + / / but we still need to build a proper prefix , or it ' s not an INSERT , and then we want to reject <nl> + / / ( see above ) <nl> + if ( type ! = StatementType . INSERT ) <nl> + { <nl> + for ( CFDefinition . Name name : cfm . getCfDef ( ) . clusteringColumns ( ) ) <nl> + if ( processedKeys . get ( name . name ) ! = null ) <nl> + throw new InvalidRequestException ( String . format ( " Invalid restriction on clustering column % s since the % s statement modifies only static columns " , name . name , type ) ) ; <nl> + / / we should get there as it contradicts hasNoClusteringColumns = = false <nl> + throw new AssertionError ( ) ; <nl> + } <nl> } <nl> <nl> return createClusteringPrefixBuilderInternal ( variables ) ; <nl> @ @ - 572 , 7 + 581 , 7 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF <nl> / / If we use ifNotExists , if the statement applies to any non static columns , then the condition is on the row of the non - static <nl> / / columns and the prefix should be the rowPrefix . But if only static columns are set , then the ifNotExists apply to the existence <nl> / / of any static columns and we should use the prefix for the " static part " of the partition . <nl> - conditions . addNotExist ( setsOnlyStaticColumns ? cfm . getStaticColumnNameBuilder ( ) : clusteringPrefix ) ; <nl> + conditions . addNotExist ( clusteringPrefix ) ; <nl> } <nl> else if ( ifExists ) <nl> {
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 650f12c . . 2bb3605 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 22 , 6 + 22 , 7 @ @ 
 * Add paranoid disk failure option ( CASSANDRA - 6646 ) 
 * Improve PerRowSecondaryIndex performance ( CASSANDRA - 6876 ) 
 * Extend triggers to support CAS updates ( CASSANDRA - 6882 ) 
 + * Static columns with IF NOT EXISTS don ' t always work as expected ( CASSANDRA - 6873 ) 
 Merged from 1 . 2 : 
 * add extra SSL cipher suites ( CASSANDRA - 6613 ) 
 * fix nodetool getsstables for blob PK ( CASSANDRA - 6803 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java 
 index d96ea9c . . 526a26c 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java 
 @ @ - 76 , 7 + 76 , 9 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF 
 private boolean ifExists ; 
 
 private boolean hasNoClusteringColumns = true ; 
 - private boolean setsOnlyStaticColumns ; 
 + 
 + private boolean setsStaticColumns ; 
 + private boolean setsRegularColumns ; 
 
 private final Function < ColumnCondition , ColumnIdentifier > getColumnForCondition = new Function < ColumnCondition , ColumnIdentifier > ( ) 
 { 
 @ @ - 178 , 14 + 180 , 9 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF 
 public void addOperation ( Operation op ) 
 { 
 if ( op . isStatic ( cfm ) ) 
 - { 
 - if ( columnOperations . isEmpty ( ) ) 
 - setsOnlyStaticColumns = true ; 
 - } 
 + setsStaticColumns = true ; 
 else 
 - { 
 - setsOnlyStaticColumns = false ; 
 - } 
 + setsRegularColumns = true ; 
 columnOperations . add ( op ) ; 
 } 
 
 @ @ - 208 , 12 + 205 , 14 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF 
 List < ColumnCondition > conds = null ; 
 if ( cond . column . kind = = CFDefinition . Name . Kind . STATIC ) 
 { 
 + setsStaticColumns = true ; 
 if ( staticConditions = = null ) 
 staticConditions = new ArrayList < ColumnCondition > ( ) ; 
 conds = staticConditions ; 
 } 
 else 
 { 
 + setsRegularColumns = true ; 
 if ( columnConditions = = null ) 
 columnConditions = new ArrayList < ColumnCondition > ( ) ; 
 conds = columnConditions ; 
 @ @ - 361 , 13 + 360 , 23 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF 
 / / UPDATE t SET s = 3 WHERE k = 0 AND v = 1 
 / / DELETE v FROM t WHERE k = 0 AND v = 1 
 / / sounds like you don ' t really understand what your are doing . 
 - if ( setsOnlyStaticColumns & & columnConditions = = null & & ( type ! = StatementType . INSERT | | hasNoClusteringColumns ) ) 
 + if ( setsStaticColumns & & ! setsRegularColumns ) 
 { 
 - / / Reject if any clustering columns is set 
 - for ( CFDefinition . Name name : cfm . getCfDef ( ) . clusteringColumns ( ) ) 
 - if ( processedKeys . get ( name . name ) ! = null ) 
 - throw new InvalidRequestException ( String . format ( " Invalid restriction on clustering column % s since the % s statement modifies only static columns " , name . name , type ) ) ; 
 - return cfm . getStaticColumnNameBuilder ( ) ; 
 + / / If we set no non - static columns , then it ' s fine not to have clustering columns 
 + if ( hasNoClusteringColumns ) 
 + return cfm . getStaticColumnNameBuilder ( ) ; 
 + 
 + / / If we do have clustering columns however , then either it ' s an INSERT and the query is valid 
 + / / but we still need to build a proper prefix , or it ' s not an INSERT , and then we want to reject 
 + / / ( see above ) 
 + if ( type ! = StatementType . INSERT ) 
 + { 
 + for ( CFDefinition . Name name : cfm . getCfDef ( ) . clusteringColumns ( ) ) 
 + if ( processedKeys . get ( name . name ) ! = null ) 
 + throw new InvalidRequestException ( String . format ( " Invalid restriction on clustering column % s since the % s statement modifies only static columns " , name . name , type ) ) ; 
 + / / we should get there as it contradicts hasNoClusteringColumns = = false 
 + throw new AssertionError ( ) ; 
 + } 
 } 
 
 return createClusteringPrefixBuilderInternal ( variables ) ; 
 @ @ - 572 , 7 + 581 , 7 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF 
 / / If we use ifNotExists , if the statement applies to any non static columns , then the condition is on the row of the non - static 
 / / columns and the prefix should be the rowPrefix . But if only static columns are set , then the ifNotExists apply to the existence 
 / / of any static columns and we should use the prefix for the " static part " of the partition . 
 - conditions . addNotExist ( setsOnlyStaticColumns ? cfm . getStaticColumnNameBuilder ( ) : clusteringPrefix ) ; 
 + conditions . addNotExist ( clusteringPrefix ) ; 
 } 
 else if ( ifExists ) 
 {

NEAREST DIFF:
ELIMINATEDSENTENCE
