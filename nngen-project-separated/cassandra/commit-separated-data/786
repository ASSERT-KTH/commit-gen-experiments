BLEU SCORE: 0.04767707020457096

TEST MSG: CASSANDRA - 11880 Display number of tables in cfstats
GENERATED MSG: Expose schema version in nodetool .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java <nl> index ee1f137 . . 47d8198 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Schema . java <nl> + + + b / src / java / org / apache / cassandra / config / Schema . java <nl> @ @ - 314 , 6 + 314 , 11 @ @ public class Schema <nl> return getCFMetaData ( descriptor . ksname , descriptor . cfname ) ; <nl> } <nl> <nl> + public int getNumberOfTables ( ) <nl> + { <nl> + return cfIdMap . size ( ) ; <nl> + } <nl> + <nl> public ViewDefinition getView ( String keyspaceName , String viewName ) <nl> { <nl> assert keyspaceName ! = null ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index c88c449 . . 6bef5fb 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 2694 , 4 + 2694 , 9 @ @ public class StorageProxy implements StorageProxyMBean <nl> public long getReadRepairRepairedBackground ( ) { <nl> return ReadRepairMetrics . repairedBackground . getCount ( ) ; <nl> } <nl> + <nl> + public int getNumberOfTables ( ) <nl> + { <nl> + return Schema . instance . getNumberOfTables ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxyMBean . java b / src / java / org / apache / cassandra / service / StorageProxyMBean . java <nl> index 0db0ca6 . . 0a4ba19 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxyMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxyMBean . java <nl> @ @ - 61 , 4 + 61 , 6 @ @ public interface StorageProxyMBean <nl> <nl> / * * Returns each live node ' s schema version * / <nl> public Map < String , List < String > > getSchemaVersions ( ) ; <nl> + <nl> + public int getNumberOfTables ( ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index 3bf99ef . . 84eeb04 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 1203 , 6 + 1203 , 11 @ @ public class NodeProbe implements AutoCloseable <nl> return ThreadPoolMetrics . getJmxThreadPools ( mbeanServerConn ) ; <nl> } <nl> <nl> + public int getNumberOfTables ( ) <nl> + { <nl> + return spProxy . getNumberOfTables ( ) ; <nl> + } <nl> + <nl> / * * <nl> * Retrieve ColumnFamily metrics <nl> * @ param ks Keyspace for which stats are to be displayed or null for the global value <nl> diff - - git a / src / java / org / apache / cassandra / tools / nodetool / TableStats . java b / src / java / org / apache / cassandra / tools / nodetool / TableStats . java <nl> index ec729a5 . . d948be3 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / TableStats . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / TableStats . java <nl> @ @ - 95 , 7 + 95 , 7 @ @ public class TableStats extends NodeToolCmd <nl> filter . verifyTables ( ) ; <nl> <nl> / / get metrics of keyspace <nl> - StatsHolder holder = new StatsHolder ( ) ; <nl> + StatsHolder holder = new StatsHolder ( probe . getNumberOfTables ( ) ) ; <nl> for ( Map . Entry < String , Collection < ColumnFamilyStoreMBean > > entry : selectedTableMbeans . asMap ( ) . entrySet ( ) ) <nl> { <nl> String keyspaceName = entry . getKey ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / nodetool / stats / StatsHolder . java b / src / java / org / apache / cassandra / tools / nodetool / stats / StatsHolder . java <nl> index e26f3f7 . . 28768e6 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / stats / StatsHolder . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / stats / StatsHolder . java <nl> @ @ - 26 , 15 + 26 , 18 @ @ import java . util . Map ; <nl> public class StatsHolder <nl> { <nl> public List < StatsKeyspace > keyspaces ; <nl> + public final int numberOfTables ; <nl> <nl> - public StatsHolder ( ) <nl> + public StatsHolder ( int numberOfTables ) <nl> { <nl> keyspaces = new ArrayList < > ( ) ; <nl> + this . numberOfTables = numberOfTables ; <nl> } <nl> <nl> - public Map < String , HashMap < String , Object > > convert2Map ( ) <nl> + public Map < String , Object > convert2Map ( ) <nl> { <nl> - HashMap < String , HashMap < String , Object > > mpRet = new HashMap < > ( ) ; <nl> + HashMap < String , Object > mpRet = new HashMap < > ( ) ; <nl> + mpRet . put ( " total _ number _ of _ tables " , numberOfTables ) ; <nl> for ( StatsKeyspace keyspace : keyspaces ) <nl> { <nl> / / store each keyspace ' s metrics to map <nl> diff - - git a / src / java / org / apache / cassandra / tools / nodetool / stats / TableStatsPrinter . java b / src / java / org / apache / cassandra / tools / nodetool / stats / TableStatsPrinter . java <nl> index a6da189 . . c901da7 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / stats / TableStatsPrinter . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / stats / TableStatsPrinter . java <nl> @ @ - 59 , 6 + 59 , 9 @ @ public enum TableStatsPrinter <nl> @ Override <nl> public void printFormat ( StatsHolder data , PrintStream out ) <nl> { <nl> + out . println ( " Total number of tables : " + data . numberOfTables ) ; <nl> + out . println ( " - - - - - - - - - - - - - - - - " ) ; <nl> + <nl> List < StatsKeyspace > keyspaces = data . keyspaces ; <nl> for ( StatsKeyspace keyspace : keyspaces ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / utils / IntervalTree / IntervalTree . java b / src / java / org / apache / cassandra / utils / IntervalTree / IntervalTree . java <nl> index a01ed53 . . 954c796 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / IntervalTree / IntervalTree . java <nl> + + + b / src / java / org / apache / cassandra / utils / IntervalTree / IntervalTree . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ package org . apache . cassandra . utils . IntervalTree ; <nl> * / <nl> <nl> <nl> + import java . util . ArrayList ; <nl> import java . util . LinkedList ; <nl> import java . util . List ; <nl> <nl> @ @ - 50 , 12 + 51 , 12 @ @ public class IntervalTree < T > <nl> <nl> public List < T > search ( Interval < T > searchInterval ) <nl> { <nl> - List < T > retlist = new LinkedList < T > ( ) ; <nl> - searchInternal ( head , searchInterval , retlist ) ; <nl> - return retlist ; <nl> + List < T > results = new ArrayList < T > ( ) ; <nl> + searchInternal ( head , searchInterval , results ) ; <nl> + return results ; <nl> } <nl> <nl> - protected void searchInternal ( IntervalNode node , Interval < T > searchInterval , List < T > retList ) <nl> + protected void searchInternal ( IntervalNode node , Interval < T > searchInterval , List < T > results ) <nl> { <nl> if ( null = = head ) <nl> return ; <nl> @ @ - 68 , 11 + 69 , 11 @ @ public class IntervalTree < T > <nl> { <nl> for ( Interval < T > interval : node . intersects _ left ) <nl> { <nl> - retList . add ( interval . Data ) ; <nl> + results . add ( interval . Data ) ; <nl> } <nl> <nl> - searchInternal ( node . left , searchInterval , retList ) ; <nl> - searchInternal ( node . right , searchInterval , retList ) ; <nl> + searchInternal ( node . left , searchInterval , results ) ; <nl> + searchInternal ( node . right , searchInterval , results ) ; <nl> return ; <nl> } <nl> <nl> @ @ - 86 , 11 + 87 , 11 @ @ public class IntervalTree < T > <nl> { <nl> if ( interval . max . compareTo ( searchInterval . min ) > = 0 ) <nl> { <nl> - retList . add ( interval . Data ) ; <nl> + results . add ( interval . Data ) ; <nl> } <nl> else break ; <nl> } <nl> - searchInternal ( node . right , searchInterval , retList ) ; <nl> + searchInternal ( node . right , searchInterval , results ) ; <nl> return ; <nl> } <nl> <nl> @ @ - 104 , 11 + 105 , 11 @ @ public class IntervalTree < T > <nl> { <nl> if ( interval . min . compareTo ( searchInterval . max ) < = 0 ) <nl> { <nl> - retList . add ( interval . Data ) ; <nl> + results . add ( interval . Data ) ; <nl> } <nl> else break ; <nl> } <nl> - searchInternal ( node . left , searchInterval , retList ) ; <nl> + searchInternal ( node . left , searchInterval , results ) ; <nl> return ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java 
 index ee1f137 . . 47d8198 100644 
 - - - a / src / java / org / apache / cassandra / config / Schema . java 
 + + + b / src / java / org / apache / cassandra / config / Schema . java 
 @ @ - 314 , 6 + 314 , 11 @ @ public class Schema 
 return getCFMetaData ( descriptor . ksname , descriptor . cfname ) ; 
 } 
 
 + public int getNumberOfTables ( ) 
 + { 
 + return cfIdMap . size ( ) ; 
 + } 
 + 
 public ViewDefinition getView ( String keyspaceName , String viewName ) 
 { 
 assert keyspaceName ! = null ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index c88c449 . . 6bef5fb 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 2694 , 4 + 2694 , 9 @ @ public class StorageProxy implements StorageProxyMBean 
 public long getReadRepairRepairedBackground ( ) { 
 return ReadRepairMetrics . repairedBackground . getCount ( ) ; 
 } 
 + 
 + public int getNumberOfTables ( ) 
 + { 
 + return Schema . instance . getNumberOfTables ( ) ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxyMBean . java b / src / java / org / apache / cassandra / service / StorageProxyMBean . java 
 index 0db0ca6 . . 0a4ba19 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxyMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxyMBean . java 
 @ @ - 61 , 4 + 61 , 6 @ @ public interface StorageProxyMBean 
 
 / * * Returns each live node ' s schema version * / 
 public Map < String , List < String > > getSchemaVersions ( ) ; 
 + 
 + public int getNumberOfTables ( ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index 3bf99ef . . 84eeb04 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 1203 , 6 + 1203 , 11 @ @ public class NodeProbe implements AutoCloseable 
 return ThreadPoolMetrics . getJmxThreadPools ( mbeanServerConn ) ; 
 } 
 
 + public int getNumberOfTables ( ) 
 + { 
 + return spProxy . getNumberOfTables ( ) ; 
 + } 
 + 
 / * * 
 * Retrieve ColumnFamily metrics 
 * @ param ks Keyspace for which stats are to be displayed or null for the global value 
 diff - - git a / src / java / org / apache / cassandra / tools / nodetool / TableStats . java b / src / java / org / apache / cassandra / tools / nodetool / TableStats . java 
 index ec729a5 . . d948be3 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / TableStats . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / TableStats . java 
 @ @ - 95 , 7 + 95 , 7 @ @ public class TableStats extends NodeToolCmd 
 filter . verifyTables ( ) ; 
 
 / / get metrics of keyspace 
 - StatsHolder holder = new StatsHolder ( ) ; 
 + StatsHolder holder = new StatsHolder ( probe . getNumberOfTables ( ) ) ; 
 for ( Map . Entry < String , Collection < ColumnFamilyStoreMBean > > entry : selectedTableMbeans . asMap ( ) . entrySet ( ) ) 
 { 
 String keyspaceName = entry . getKey ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / tools / nodetool / stats / StatsHolder . java b / src / java / org / apache / cassandra / tools / nodetool / stats / StatsHolder . java 
 index e26f3f7 . . 28768e6 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / stats / StatsHolder . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / stats / StatsHolder . java 
 @ @ - 26 , 15 + 26 , 18 @ @ import java . util . Map ; 
 public class StatsHolder 
 { 
 public List < StatsKeyspace > keyspaces ; 
 + public final int numberOfTables ; 
 
 - public StatsHolder ( ) 
 + public StatsHolder ( int numberOfTables ) 
 { 
 keyspaces = new ArrayList < > ( ) ; 
 + this . numberOfTables = numberOfTables ; 
 } 
 
 - public Map < String , HashMap < String , Object > > convert2Map ( ) 
 + public Map < String , Object > convert2Map ( ) 
 { 
 - HashMap < String , HashMap < String , Object > > mpRet = new HashMap < > ( ) ; 
 + HashMap < String , Object > mpRet = new HashMap < > ( ) ; 
 + mpRet . put ( " total _ number _ of _ tables " , numberOfTables ) ; 
 for ( StatsKeyspace keyspace : keyspaces ) 
 { 
 / / store each keyspace ' s metrics to map 
 diff - - git a / src / java / org / apache / cassandra / tools / nodetool / stats / TableStatsPrinter . java b / src / java / org / apache / cassandra / tools / nodetool / stats / TableStatsPrinter . java 
 index a6da189 . . c901da7 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / stats / TableStatsPrinter . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / stats / TableStatsPrinter . java 
 @ @ - 59 , 6 + 59 , 9 @ @ public enum TableStatsPrinter 
 @ Override 
 public void printFormat ( StatsHolder data , PrintStream out ) 
 { 
 + out . println ( " Total number of tables : " + data . numberOfTables ) ; 
 + out . println ( " - - - - - - - - - - - - - - - - " ) ; 
 + 
 List < StatsKeyspace > keyspaces = data . keyspaces ; 
 for ( StatsKeyspace keyspace : keyspaces ) 
 {

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / utils / IntervalTree / IntervalTree . java b / src / java / org / apache / cassandra / utils / IntervalTree / IntervalTree . java 
 index a01ed53 . . 954c796 100644 
 - - - a / src / java / org / apache / cassandra / utils / IntervalTree / IntervalTree . java 
 + + + b / src / java / org / apache / cassandra / utils / IntervalTree / IntervalTree . java 
 @ @ - 21 , 6 + 21 , 7 @ @ package org . apache . cassandra . utils . IntervalTree ; 
 * / 
 
 
 + import java . util . ArrayList ; 
 import java . util . LinkedList ; 
 import java . util . List ; 
 
 @ @ - 50 , 12 + 51 , 12 @ @ public class IntervalTree < T > 
 
 public List < T > search ( Interval < T > searchInterval ) 
 { 
 - List < T > retlist = new LinkedList < T > ( ) ; 
 - searchInternal ( head , searchInterval , retlist ) ; 
 - return retlist ; 
 + List < T > results = new ArrayList < T > ( ) ; 
 + searchInternal ( head , searchInterval , results ) ; 
 + return results ; 
 } 
 
 - protected void searchInternal ( IntervalNode node , Interval < T > searchInterval , List < T > retList ) 
 + protected void searchInternal ( IntervalNode node , Interval < T > searchInterval , List < T > results ) 
 { 
 if ( null = = head ) 
 return ; 
 @ @ - 68 , 11 + 69 , 11 @ @ public class IntervalTree < T > 
 { 
 for ( Interval < T > interval : node . intersects _ left ) 
 { 
 - retList . add ( interval . Data ) ; 
 + results . add ( interval . Data ) ; 
 } 
 
 - searchInternal ( node . left , searchInterval , retList ) ; 
 - searchInternal ( node . right , searchInterval , retList ) ; 
 + searchInternal ( node . left , searchInterval , results ) ; 
 + searchInternal ( node . right , searchInterval , results ) ; 
 return ; 
 } 
 
 @ @ - 86 , 11 + 87 , 11 @ @ public class IntervalTree < T > 
 { 
 if ( interval . max . compareTo ( searchInterval . min ) > = 0 ) 
 { 
 - retList . add ( interval . Data ) ; 
 + results . add ( interval . Data ) ; 
 } 
 else break ; 
 } 
 - searchInternal ( node . right , searchInterval , retList ) ; 
 + searchInternal ( node . right , searchInterval , results ) ; 
 return ; 
 } 
 
 @ @ - 104 , 11 + 105 , 11 @ @ public class IntervalTree < T > 
 { 
 if ( interval . min . compareTo ( searchInterval . max ) < = 0 ) 
 { 
 - retList . add ( interval . Data ) ; 
 + results . add ( interval . Data ) ; 
 } 
 else break ; 
 } 
 - searchInternal ( node . left , searchInterval , retList ) ; 
 + searchInternal ( node . left , searchInterval , results ) ; 
 return ; 
 } 
 }
