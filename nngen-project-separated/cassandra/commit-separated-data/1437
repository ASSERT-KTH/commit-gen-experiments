BLEU SCORE: 0.02139089632303349

TEST MSG: Avoid having compactions disabled on new tables
GENERATED MSG: Don ' t advance reader if column name not found

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / compaction / WrappingCompactionStrategy . java b / src / java / org / apache / cassandra / db / compaction / WrappingCompactionStrategy . java <nl> index e01b4c6 . . 0fed733 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / WrappingCompactionStrategy . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / WrappingCompactionStrategy . java <nl> @ @ - 156 , 7 + 156 , 7 @ @ public final class WrappingCompactionStrategy extends AbstractCompactionStrategy <nl> <nl> public synchronized void reloadCompactionStrategy ( CFMetaData metadata ) <nl> { <nl> - boolean disabledWithJMX = ! isEnabled ( ) & & shouldBeEnabled ( ) ; <nl> + boolean disabledWithJMX = ! enabled & & shouldBeEnabled ( ) ; <nl> if ( repaired ! = null ) <nl> repaired . shutdown ( ) ; <nl> if ( unrepaired ! = null ) <nl> diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java <nl> new file mode 100644 <nl> index 0000000 . . 76e3b88 <nl> - - - / dev / null <nl> + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java <nl> @ @ - 0 , 0 + 1 , 52 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package org . apache . cassandra . db . compaction ; <nl> + <nl> + import org . junit . Test ; <nl> + <nl> + import org . apache . cassandra . cql3 . CQLTester ; <nl> + import org . apache . cassandra . cql3 . UntypedResultSet ; <nl> + import org . apache . cassandra . db . Keyspace ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + <nl> + public class CompactionsCQLTest extends CQLTester <nl> + { <nl> + @ Test <nl> + public void testTriggerMinorCompaction ( ) throws Throwable <nl> + { <nl> + createTable ( " CREATE TABLE % s ( id text PRIMARY KEY ) ; " ) ; <nl> + assertTrue ( Keyspace . open ( KEYSPACE ) . getColumnFamilyStore ( currentTable ( ) ) . getCompactionStrategy ( ) . isEnabled ( ) ) ; <nl> + execute ( " insert into % s ( id ) values ( ' 1 ' ) " ) ; <nl> + flush ( ) ; <nl> + execute ( " insert into % s ( id ) values ( ' 1 ' ) " ) ; <nl> + flush ( ) ; <nl> + execute ( " insert into % s ( id ) values ( ' 1 ' ) " ) ; <nl> + flush ( ) ; <nl> + execute ( " insert into % s ( id ) values ( ' 1 ' ) " ) ; <nl> + flush ( ) ; <nl> + Thread . sleep ( 1000 ) ; <nl> + UntypedResultSet res = execute ( " SELECT * FROM system . compaction _ history " ) ; <nl> + boolean minorWasTriggered = false ; <nl> + for ( UntypedResultSet . Row r : res ) <nl> + { <nl> + if ( r . getString ( " keyspace _ name " ) . equals ( KEYSPACE ) & & r . getString ( " columnfamily _ name " ) . equals ( currentTable ( ) ) ) <nl> + minorWasTriggered = true ; <nl> + } <nl> + assertTrue ( minorWasTriggered ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / compaction / WrappingCompactionStrategy . java b / src / java / org / apache / cassandra / db / compaction / WrappingCompactionStrategy . java 
 index e01b4c6 . . 0fed733 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / WrappingCompactionStrategy . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / WrappingCompactionStrategy . java 
 @ @ - 156 , 7 + 156 , 7 @ @ public final class WrappingCompactionStrategy extends AbstractCompactionStrategy 
 
 public synchronized void reloadCompactionStrategy ( CFMetaData metadata ) 
 { 
 - boolean disabledWithJMX = ! isEnabled ( ) & & shouldBeEnabled ( ) ; 
 + boolean disabledWithJMX = ! enabled & & shouldBeEnabled ( ) ; 
 if ( repaired ! = null ) 
 repaired . shutdown ( ) ; 
 if ( unrepaired ! = null ) 
 diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java 
 new file mode 100644 
 index 0000000 . . 76e3b88 
 - - - / dev / null 
 + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java 
 @ @ - 0 , 0 + 1 , 52 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package org . apache . cassandra . db . compaction ; 
 + 
 + import org . junit . Test ; 
 + 
 + import org . apache . cassandra . cql3 . CQLTester ; 
 + import org . apache . cassandra . cql3 . UntypedResultSet ; 
 + import org . apache . cassandra . db . Keyspace ; 
 + import static org . junit . Assert . assertTrue ; 
 + 
 + public class CompactionsCQLTest extends CQLTester 
 + { 
 + @ Test 
 + public void testTriggerMinorCompaction ( ) throws Throwable 
 + { 
 + createTable ( " CREATE TABLE % s ( id text PRIMARY KEY ) ; " ) ; 
 + assertTrue ( Keyspace . open ( KEYSPACE ) . getColumnFamilyStore ( currentTable ( ) ) . getCompactionStrategy ( ) . isEnabled ( ) ) ; 
 + execute ( " insert into % s ( id ) values ( ' 1 ' ) " ) ; 
 + flush ( ) ; 
 + execute ( " insert into % s ( id ) values ( ' 1 ' ) " ) ; 
 + flush ( ) ; 
 + execute ( " insert into % s ( id ) values ( ' 1 ' ) " ) ; 
 + flush ( ) ; 
 + execute ( " insert into % s ( id ) values ( ' 1 ' ) " ) ; 
 + flush ( ) ; 
 + Thread . sleep ( 1000 ) ; 
 + UntypedResultSet res = execute ( " SELECT * FROM system . compaction _ history " ) ; 
 + boolean minorWasTriggered = false ; 
 + for ( UntypedResultSet . Row r : res ) 
 + { 
 + if ( r . getString ( " keyspace _ name " ) . equals ( KEYSPACE ) & & r . getString ( " columnfamily _ name " ) . equals ( currentTable ( ) ) ) 
 + minorWasTriggered = true ; 
 + } 
 + assertTrue ( minorWasTriggered ) ; 
 + } 
 + }

NEAREST DIFF:
ELIMINATEDSENTENCE
