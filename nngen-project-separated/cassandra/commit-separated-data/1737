BLEU SCORE: 0.07986788803078405

TEST MSG: use short circuiting ops
GENERATED MSG: replace valueOf with parse

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java b / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java <nl> index ac3bae5 . . c05b5b2 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java <nl> + + + b / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java <nl> @ @ - 256 , 7 + 256 , 7 @ @ public abstract class UnbufferedDataOutputStreamPlus extends DataOutputStreamPlu <nl> for ( int i = 0 ; i < length ; i + + ) <nl> { <nl> int ch = str . charAt ( i ) ; <nl> - if ( ( ch > 0 ) & ( ch < = 127 ) ) <nl> + if ( ( ch > 0 ) & & ( ch < = 127 ) ) <nl> utfCount + = 1 ; <nl> else if ( ch < = 2047 ) <nl> utfCount + = 2 ; <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java b / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java <nl> index 3a8693d . . 357699d 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java <nl> @ @ - 298 , 7 + 298 , 7 @ @ public abstract class PartitionIterator implements Iterator < Row > <nl> for ( int i = 0 ; i < = depth ; i + + ) <nl> { <nl> int p = currentRow [ i ] , l = lastRow [ i ] , r = clusteringComponents [ i ] . size ( ) ; <nl> - if ( ( p = = l ) | ( r = = 1 ) ) <nl> + if ( ( p = = l ) | | ( r = = 1 ) ) <nl> continue ; <nl> return p - l ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index 5501c3d . . bf59f39 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 528 , 7 + 528 , 7 @ @ public class CliClient extends CliUserHelp <nl> if ( statement . getChildCount ( ) = = 3 ) <nl> { <nl> Tree limitNode = statement . getChild ( 2 ) ; <nl> - int limitValue = Integer . valueOf ( limitNode . getChild ( 0 ) . getText ( ) ) ; <nl> + int limitValue = Integer . parseInt ( limitNode . getChild ( 0 ) . getText ( ) ) ; <nl> <nl> if ( limitValue = = 0 ) <nl> { <nl> @ @ - 624 , 7 + 624 , 7 @ @ public class CliClient extends CliUserHelp <nl> <nl> try <nl> { <nl> - columnToInsert . setTtl ( Integer . valueOf ( ttl ) ) ; <nl> + columnToInsert . setTtl ( Integer . parseInt ( ttl ) ) ; <nl> } <nl> catch ( NumberFormatException e ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / LongType . java b / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> index 43f9f91 . . 1f2805f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> @ @ - 72 , 7 + 72 , 7 @ @ public class LongType extends AbstractType <nl> <nl> try <nl> { <nl> - longType = Long . valueOf ( source ) ; <nl> + longType = Long . parseLong ( source ) ; <nl> } <nl> catch ( Exception e ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java <nl> index f151f27 . . 25f6feb 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java <nl> @ @ - 232 , 7 + 232 , 7 @ @ public class ConfigHelper <nl> <nl> public static int getRpcPort ( Configuration conf ) <nl> { <nl> - return Integer . valueOf ( conf . get ( THRIFT _ PORT ) ) ; <nl> + return Integer . parseInt ( conf . get ( THRIFT _ PORT ) ) ; <nl> } <nl> <nl> public static void setRpcPort ( Configuration conf , String port ) <nl> diff - - git a / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java b / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java <nl> index f345cd4 . . 372c298 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java <nl> + + + b / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class NetworkTopologyStrategy extends AbstractReplicationStrategy <nl> if ( configOptions ! = null ) <nl> { <nl> for ( Entry entry : configOptions . entrySet ( ) ) <nl> - newDatacenters . put ( ( String ) entry . getKey ( ) , Integer . parseInt ( ( String ) entry . getValue ( ) ) ) ; <nl> + newDatacenters . put ( ( String ) entry . getKey ( ) , Integer . valueOf ( ( String ) entry . getValue ( ) ) ) ; <nl> } <nl> <nl> datacenters = Collections . unmodifiableMap ( newDatacenters ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java <nl> index 47a5e73 . . b4ac62d 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java <nl> @ @ - 184 , 7 + 184 , 7 @ @ public class StorageLoadBalancer implements IEndpointStateChangeSubscriber <nl> { <nl> if ( state ! = ApplicationState . LOAD ) <nl> return ; <nl> - loadInfo _ . put ( endpoint , Double . parseDouble ( value . value ) ) ; <nl> + loadInfo _ . put ( endpoint , Double . valueOf ( value . value ) ) ; <nl> <nl> / * <nl> / / clone load information to perform calculations <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 9ff5eab . . 7058bfd 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 369 , 7 + 369 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> logger _ . warn ( " Unable to start GCInspector ( currently only supported on the Sun JVM ) " ) ; <nl> } <nl> <nl> - if ( Boolean . valueOf ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) <nl> + if ( Boolean . parseBoolean ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) <nl> { <nl> logger _ . info ( " Loading persisted ring state " ) ; <nl> for ( Map . Entry < Token , InetAddress > entry : SystemTable . loadTokens ( ) . entrySet ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index edd432b . . 3191971 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 561 , 7 + 561 , 7 @ @ public class NodeCmd { <nl> <nl> case SETCACHECAPACITY : <nl> if ( arguments . length ! = 5 ) { badUse ( " setcachecapacity requires ks , cf , keycachecap , and rowcachecap args . " ) ; } <nl> - probe . setCacheCapacities ( arguments [ 1 ] , arguments [ 2 ] , Integer . valueOf ( arguments [ 3 ] ) , Integer . valueOf ( arguments [ 4 ] ) ) ; <nl> + probe . setCacheCapacities ( arguments [ 1 ] , arguments [ 2 ] , Integer . parseInt ( arguments [ 3 ] ) , Integer . parseInt ( arguments [ 4 ] ) ) ; <nl> break ; <nl> <nl> case SETCOMPACTIONTHRESHOLD : <nl> diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> index 0b31067 . . be2bc73 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> @ @ - 76 , 11 + 76 , 11 @ @ public class FBUtilities <nl> { <nl> if ( value . endsWith ( " % " ) ) <nl> { <nl> - return Double . valueOf ( value . substring ( 0 , value . length ( ) - 1 ) ) / 100 ; <nl> + return Double . parseDouble ( value . substring ( 0 , value . length ( ) - 1 ) ) / 100 ; <nl> } <nl> else <nl> { <nl> - return Double . valueOf ( value ) ; <nl> + return Double . parseDouble ( value ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java b / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java 
 index ac3bae5 . . c05b5b2 100644 
 - - - a / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java 
 + + + b / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java 
 @ @ - 256 , 7 + 256 , 7 @ @ public abstract class UnbufferedDataOutputStreamPlus extends DataOutputStreamPlu 
 for ( int i = 0 ; i < length ; i + + ) 
 { 
 int ch = str . charAt ( i ) ; 
 - if ( ( ch > 0 ) & ( ch < = 127 ) ) 
 + if ( ( ch > 0 ) & & ( ch < = 127 ) ) 
 utfCount + = 1 ; 
 else if ( ch < = 2047 ) 
 utfCount + = 2 ; 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java b / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java 
 index 3a8693d . . 357699d 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java 
 @ @ - 298 , 7 + 298 , 7 @ @ public abstract class PartitionIterator implements Iterator < Row > 
 for ( int i = 0 ; i < = depth ; i + + ) 
 { 
 int p = currentRow [ i ] , l = lastRow [ i ] , r = clusteringComponents [ i ] . size ( ) ; 
 - if ( ( p = = l ) | ( r = = 1 ) ) 
 + if ( ( p = = l ) | | ( r = = 1 ) ) 
 continue ; 
 return p - l ; 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index 5501c3d . . bf59f39 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 528 , 7 + 528 , 7 @ @ public class CliClient extends CliUserHelp 
 if ( statement . getChildCount ( ) = = 3 ) 
 { 
 Tree limitNode = statement . getChild ( 2 ) ; 
 - int limitValue = Integer . valueOf ( limitNode . getChild ( 0 ) . getText ( ) ) ; 
 + int limitValue = Integer . parseInt ( limitNode . getChild ( 0 ) . getText ( ) ) ; 
 
 if ( limitValue = = 0 ) 
 { 
 @ @ - 624 , 7 + 624 , 7 @ @ public class CliClient extends CliUserHelp 
 
 try 
 { 
 - columnToInsert . setTtl ( Integer . valueOf ( ttl ) ) ; 
 + columnToInsert . setTtl ( Integer . parseInt ( ttl ) ) ; 
 } 
 catch ( NumberFormatException e ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / LongType . java b / src / java / org / apache / cassandra / db / marshal / LongType . java 
 index 43f9f91 . . 1f2805f 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / LongType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / LongType . java 
 @ @ - 72 , 7 + 72 , 7 @ @ public class LongType extends AbstractType 
 
 try 
 { 
 - longType = Long . valueOf ( source ) ; 
 + longType = Long . parseLong ( source ) ; 
 } 
 catch ( Exception e ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java 
 index f151f27 . . 25f6feb 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java 
 + + + b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java 
 @ @ - 232 , 7 + 232 , 7 @ @ public class ConfigHelper 
 
 public static int getRpcPort ( Configuration conf ) 
 { 
 - return Integer . valueOf ( conf . get ( THRIFT _ PORT ) ) ; 
 + return Integer . parseInt ( conf . get ( THRIFT _ PORT ) ) ; 
 } 
 
 public static void setRpcPort ( Configuration conf , String port ) 
 diff - - git a / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java b / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java 
 index f345cd4 . . 372c298 100644 
 - - - a / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java 
 + + + b / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java 
 @ @ - 65 , 7 + 65 , 7 @ @ public class NetworkTopologyStrategy extends AbstractReplicationStrategy 
 if ( configOptions ! = null ) 
 { 
 for ( Entry entry : configOptions . entrySet ( ) ) 
 - newDatacenters . put ( ( String ) entry . getKey ( ) , Integer . parseInt ( ( String ) entry . getValue ( ) ) ) ; 
 + newDatacenters . put ( ( String ) entry . getKey ( ) , Integer . valueOf ( ( String ) entry . getValue ( ) ) ) ; 
 } 
 
 datacenters = Collections . unmodifiableMap ( newDatacenters ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java 
 index 47a5e73 . . b4ac62d 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java 
 + + + b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java 
 @ @ - 184 , 7 + 184 , 7 @ @ public class StorageLoadBalancer implements IEndpointStateChangeSubscriber 
 { 
 if ( state ! = ApplicationState . LOAD ) 
 return ; 
 - loadInfo _ . put ( endpoint , Double . parseDouble ( value . value ) ) ; 
 + loadInfo _ . put ( endpoint , Double . valueOf ( value . value ) ) ; 
 
 / * 
 / / clone load information to perform calculations 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 9ff5eab . . 7058bfd 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 369 , 7 + 369 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 logger _ . warn ( " Unable to start GCInspector ( currently only supported on the Sun JVM ) " ) ; 
 } 
 
 - if ( Boolean . valueOf ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) 
 + if ( Boolean . parseBoolean ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) 
 { 
 logger _ . info ( " Loading persisted ring state " ) ; 
 for ( Map . Entry < Token , InetAddress > entry : SystemTable . loadTokens ( ) . entrySet ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index edd432b . . 3191971 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 561 , 7 + 561 , 7 @ @ public class NodeCmd { 
 
 case SETCACHECAPACITY : 
 if ( arguments . length ! = 5 ) { badUse ( " setcachecapacity requires ks , cf , keycachecap , and rowcachecap args . " ) ; } 
 - probe . setCacheCapacities ( arguments [ 1 ] , arguments [ 2 ] , Integer . valueOf ( arguments [ 3 ] ) , Integer . valueOf ( arguments [ 4 ] ) ) ; 
 + probe . setCacheCapacities ( arguments [ 1 ] , arguments [ 2 ] , Integer . parseInt ( arguments [ 3 ] ) , Integer . parseInt ( arguments [ 4 ] ) ) ; 
 break ; 
 
 case SETCOMPACTIONTHRESHOLD : 
 diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 index 0b31067 . . be2bc73 100644 
 - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java 
 + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 @ @ - 76 , 11 + 76 , 11 @ @ public class FBUtilities 
 { 
 if ( value . endsWith ( " % " ) ) 
 { 
 - return Double . valueOf ( value . substring ( 0 , value . length ( ) - 1 ) ) / 100 ; 
 + return Double . parseDouble ( value . substring ( 0 , value . length ( ) - 1 ) ) / 100 ; 
 } 
 else 
 { 
 - return Double . valueOf ( value ) ; 
 + return Double . parseDouble ( value ) ; 
 } 
 } 

