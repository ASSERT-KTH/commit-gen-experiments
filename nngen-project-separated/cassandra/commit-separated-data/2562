BLEU SCORE: 0.019648763141608138

TEST MSG: Fix ticket number in CHANGES
GENERATED MSG: Move CASSANDRA - 6058 to 2 . 0 . 2

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9edd705 . . 451d046 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 63 , 10 + 63 , 10 @ @ Merged from 1 . 2 : <nl> <nl> 2 . 0 . 6 <nl> * Avoid race - prone second " scrub " of system keyspace ( CASSANDRA - 6797 ) <nl> - * Pool CqlRecordWriter clients by inetaddress rather than Range <nl> + * Pool CqlRecordWriter clients by inetaddress rather than Range <nl> ( CASSANDRA - 6665 ) <nl> * Fix compaction _ history timestamps ( CASSANDRA - 6784 ) <nl> - * Compare scores of full replica ordering in DES ( CASSANDRA - 6883 ) <nl> + * Compare scores of full replica ordering in DES ( CASSANDRA - 6683 ) <nl> * fix CME in SessionInfo updateProgress affecting netstats ( CASSANDRA - 6577 ) <nl> * Allow repairing between specific replicas ( CASSANDRA - 6440 ) <nl> * Allow per - dc enabling of hints ( CASSANDRA - 6157 )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index f853cce . . 27e6f24 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 7 @ @ <nl> + 1 . 2 . 11 <nl> + * Allow cache - keys - to - save to be set at runtime ( CASSANDRA - 5980 ) <nl> + <nl> + <nl> 1 . 2 . 10 <nl> * Avoid second - guessing out - of - space state ( CASSANDRA - 5605 ) <nl> * Tuning knobs for dealing with large blobs and many CFs ( CASSANDRA - 5982 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 8e3cbe2 . . 22de2d6 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 1251 , 6 + 1251 , 11 @ @ public class DatabaseDescriptor <nl> return conf . key _ cache _ keys _ to _ save ; <nl> } <nl> <nl> + public static void setKeyCacheKeysToSave ( int keyCacheKeysToSave ) <nl> + { <nl> + conf . key _ cache _ keys _ to _ save = keyCacheKeysToSave ; <nl> + } <nl> + <nl> public static long getRowCacheSizeInMB ( ) <nl> { <nl> return conf . row _ cache _ size _ in _ mb ; <nl> @ @ - 1271 , 6 + 1276 , 11 @ @ public class DatabaseDescriptor <nl> return conf . row _ cache _ keys _ to _ save ; <nl> } <nl> <nl> + public static void setRowCacheKeysToSave ( int rowCacheKeysToSave ) <nl> + { <nl> + conf . row _ cache _ keys _ to _ save = rowCacheKeysToSave ; <nl> + } <nl> + <nl> public static IRowCacheProvider getRowCacheProvider ( ) <nl> { <nl> return rowCacheProvider ; <nl> diff - - git a / src / java / org / apache / cassandra / service / CacheService . java b / src / java / org / apache / cassandra / service / CacheService . java <nl> index 34864f2 . . 5d3dc72 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CacheService . java <nl> + + + b / src / java / org / apache / cassandra / service / CacheService . java <nl> @ @ - 207 , 13 + 207 , 13 @ @ public class CacheService implements CacheServiceMBean <nl> return DatabaseDescriptor . getRowCacheSavePeriod ( ) ; <nl> } <nl> <nl> - public void setRowCacheSavePeriodInSeconds ( int rcspis ) <nl> + public void setRowCacheSavePeriodInSeconds ( int seconds ) <nl> { <nl> - if ( rcspis < 0 ) <nl> + if ( seconds < 0 ) <nl> throw new RuntimeException ( " RowCacheSavePeriodInSeconds must be non - negative . " ) ; <nl> <nl> - DatabaseDescriptor . setRowCacheSavePeriod ( rcspis ) ; <nl> - rowCache . scheduleSaving ( rcspis , DatabaseDescriptor . getRowCacheKeysToSave ( ) ) ; <nl> + DatabaseDescriptor . setRowCacheSavePeriod ( seconds ) ; <nl> + rowCache . scheduleSaving ( seconds , DatabaseDescriptor . getRowCacheKeysToSave ( ) ) ; <nl> } <nl> <nl> public int getKeyCacheSavePeriodInSeconds ( ) <nl> @ @ - 221 , 13 + 221 , 39 @ @ public class CacheService implements CacheServiceMBean <nl> return DatabaseDescriptor . getKeyCacheSavePeriod ( ) ; <nl> } <nl> <nl> - public void setKeyCacheSavePeriodInSeconds ( int kcspis ) <nl> + public void setKeyCacheSavePeriodInSeconds ( int seconds ) <nl> { <nl> - if ( kcspis < 0 ) <nl> + if ( seconds < 0 ) <nl> throw new RuntimeException ( " KeyCacheSavePeriodInSeconds must be non - negative . " ) ; <nl> <nl> - DatabaseDescriptor . setKeyCacheSavePeriod ( kcspis ) ; <nl> - keyCache . scheduleSaving ( kcspis , DatabaseDescriptor . getKeyCacheKeysToSave ( ) ) ; <nl> + DatabaseDescriptor . setKeyCacheSavePeriod ( seconds ) ; <nl> + keyCache . scheduleSaving ( seconds , DatabaseDescriptor . getKeyCacheKeysToSave ( ) ) ; <nl> + } <nl> + <nl> + public int getRowCacheKeysToSave ( ) <nl> + { <nl> + return DatabaseDescriptor . getRowCacheKeysToSave ( ) ; <nl> + } <nl> + <nl> + public void setRowCacheKeysToSave ( int count ) <nl> + { <nl> + if ( count < 0 ) <nl> + throw new RuntimeException ( " RowCacheKeysToSave must be non - negative . " ) ; <nl> + DatabaseDescriptor . setRowCacheKeysToSave ( count ) ; <nl> + rowCache . scheduleSaving ( getRowCacheSavePeriodInSeconds ( ) , count ) ; <nl> + } <nl> + <nl> + public int getKeyCacheKeysToSave ( ) <nl> + { <nl> + return DatabaseDescriptor . getKeyCacheKeysToSave ( ) ; <nl> + } <nl> + <nl> + public void setKeyCacheKeysToSave ( int count ) <nl> + { <nl> + if ( count < 0 ) <nl> + throw new RuntimeException ( " KeyCacheKeysToSave must be non - negative . " ) ; <nl> + DatabaseDescriptor . setKeyCacheKeysToSave ( count ) ; <nl> + keyCache . scheduleSaving ( getKeyCacheSavePeriodInSeconds ( ) , count ) ; <nl> } <nl> <nl> public void invalidateKeyCache ( ) <nl> diff - - git a / src / java / org / apache / cassandra / service / CacheServiceMBean . java b / src / java / org / apache / cassandra / service / CacheServiceMBean . java <nl> index 8b8adf2 . . 0225db2 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CacheServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / CacheServiceMBean . java <nl> @ @ - 27 , 6 + 27 , 12 @ @ public interface CacheServiceMBean <nl> public int getKeyCacheSavePeriodInSeconds ( ) ; <nl> public void setKeyCacheSavePeriodInSeconds ( int kcspis ) ; <nl> <nl> + public int getRowCacheKeysToSave ( ) ; <nl> + public void setRowCacheKeysToSave ( int rckts ) ; <nl> + <nl> + public int getKeyCacheKeysToSave ( ) ; <nl> + public void setKeyCacheKeysToSave ( int kckts ) ; <nl> + <nl> / * * <nl> * invalidate the key cache ; for use after invalidating row cache <nl> * / <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 7a770bb . . 26cc50e 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 164 , 7 + 164 , 8 @ @ public class NodeCmd <nl> RESETLOCALSCHEMA , <nl> PREDICTCONSISTENCY , <nl> ENABLEBACKUP , <nl> - DISABLEBACKUP <nl> + DISABLEBACKUP , <nl> + SETCACHEKEYSTOSAVE <nl> } <nl> <nl> <nl> @ @ - 1271 , 6 + 1272 , 11 @ @ public class NodeCmd <nl> probe . setCacheCapacities ( Integer . parseInt ( arguments [ 0 ] ) , Integer . parseInt ( arguments [ 1 ] ) ) ; <nl> break ; <nl> <nl> + case SETCACHEKEYSTOSAVE : <nl> + if ( arguments . length ! = 2 ) { badUse ( " setcachekeystosave requires key - cache - keys - to - save , and row - cache - keys - to - save args . " ) ; } <nl> + probe . setCacheKeysToSave ( Integer . parseInt ( arguments [ 0 ] ) , Integer . parseInt ( arguments [ 1 ] ) ) ; <nl> + break ; <nl> + <nl> case SETCOMPACTIONTHRESHOLD : <nl> if ( arguments . length ! = 4 ) { badUse ( " setcompactionthreshold requires ks , cf , min , and max threshold args . " ) ; } <nl> int minthreshold = Integer . parseInt ( arguments [ 2 ] ) ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index e7cf592 . . 7829b60 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 526 , 6 + 526 , 22 @ @ public class NodeProbe <nl> } <nl> } <nl> <nl> + public void setCacheKeysToSave ( int keyCacheKeysToSave , int rowCacheKeysToSave ) <nl> + { <nl> + try <nl> + { <nl> + String keyCachePath = " org . apache . cassandra . db : type = Caches " ; <nl> + CacheServiceMBean cacheMBean = JMX . newMBeanProxy ( mbeanServerConn , new ObjectName ( keyCachePath ) , CacheServiceMBean . class ) ; <nl> + cacheMBean . setKeyCacheKeysToSave ( keyCacheKeysToSave ) ; <nl> + cacheMBean . setRowCacheKeysToSave ( rowCacheKeysToSave ) ; <nl> + } <nl> + catch ( MalformedObjectNameException e ) <nl> + { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + } <nl> + <nl> + <nl> public List < InetAddress > getEndpoints ( String keyspace , String cf , String key ) <nl> { <nl> return ssProxy . getNaturalEndpoints ( keyspace , cf , key ) ; <nl> diff - - git a / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml b / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml <nl> index b540b2c . . 6feb7b4 100644 <nl> - - - a / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml <nl> + + + b / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml <nl> @ @ - 185 , 6 + 185 , 9 @ @ commands : <nl> - name : setcachecapacity < key - cache - capacity > < row - cache - capacity > <nl> help : | <nl> Set global key and row cache capacities ( in MB units ) . <nl> + - name : setcachekeystosave < key - cache - keys - to - save > < row - cache - keys - to - save > <nl> + help : | <nl> + Set number of keys saved by each cache for faster post - restart warmup . 0 to disable . <nl> - name : getendpoints < keyspace > < cf > < key > <nl> help : | <nl> Print the end points that owns the key

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9edd705 . . 451d046 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 63 , 10 + 63 , 10 @ @ Merged from 1 . 2 : 
 
 2 . 0 . 6 
 * Avoid race - prone second " scrub " of system keyspace ( CASSANDRA - 6797 ) 
 - * Pool CqlRecordWriter clients by inetaddress rather than Range 
 + * Pool CqlRecordWriter clients by inetaddress rather than Range 
 ( CASSANDRA - 6665 ) 
 * Fix compaction _ history timestamps ( CASSANDRA - 6784 ) 
 - * Compare scores of full replica ordering in DES ( CASSANDRA - 6883 ) 
 + * Compare scores of full replica ordering in DES ( CASSANDRA - 6683 ) 
 * fix CME in SessionInfo updateProgress affecting netstats ( CASSANDRA - 6577 ) 
 * Allow repairing between specific replicas ( CASSANDRA - 6440 ) 
 * Allow per - dc enabling of hints ( CASSANDRA - 6157 )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index f853cce . . 27e6f24 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 7 @ @ 
 + 1 . 2 . 11 
 + * Allow cache - keys - to - save to be set at runtime ( CASSANDRA - 5980 ) 
 + 
 + 
 1 . 2 . 10 
 * Avoid second - guessing out - of - space state ( CASSANDRA - 5605 ) 
 * Tuning knobs for dealing with large blobs and many CFs ( CASSANDRA - 5982 ) 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 8e3cbe2 . . 22de2d6 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 1251 , 6 + 1251 , 11 @ @ public class DatabaseDescriptor 
 return conf . key _ cache _ keys _ to _ save ; 
 } 
 
 + public static void setKeyCacheKeysToSave ( int keyCacheKeysToSave ) 
 + { 
 + conf . key _ cache _ keys _ to _ save = keyCacheKeysToSave ; 
 + } 
 + 
 public static long getRowCacheSizeInMB ( ) 
 { 
 return conf . row _ cache _ size _ in _ mb ; 
 @ @ - 1271 , 6 + 1276 , 11 @ @ public class DatabaseDescriptor 
 return conf . row _ cache _ keys _ to _ save ; 
 } 
 
 + public static void setRowCacheKeysToSave ( int rowCacheKeysToSave ) 
 + { 
 + conf . row _ cache _ keys _ to _ save = rowCacheKeysToSave ; 
 + } 
 + 
 public static IRowCacheProvider getRowCacheProvider ( ) 
 { 
 return rowCacheProvider ; 
 diff - - git a / src / java / org / apache / cassandra / service / CacheService . java b / src / java / org / apache / cassandra / service / CacheService . java 
 index 34864f2 . . 5d3dc72 100644 
 - - - a / src / java / org / apache / cassandra / service / CacheService . java 
 + + + b / src / java / org / apache / cassandra / service / CacheService . java 
 @ @ - 207 , 13 + 207 , 13 @ @ public class CacheService implements CacheServiceMBean 
 return DatabaseDescriptor . getRowCacheSavePeriod ( ) ; 
 } 
 
 - public void setRowCacheSavePeriodInSeconds ( int rcspis ) 
 + public void setRowCacheSavePeriodInSeconds ( int seconds ) 
 { 
 - if ( rcspis < 0 ) 
 + if ( seconds < 0 ) 
 throw new RuntimeException ( " RowCacheSavePeriodInSeconds must be non - negative . " ) ; 
 
 - DatabaseDescriptor . setRowCacheSavePeriod ( rcspis ) ; 
 - rowCache . scheduleSaving ( rcspis , DatabaseDescriptor . getRowCacheKeysToSave ( ) ) ; 
 + DatabaseDescriptor . setRowCacheSavePeriod ( seconds ) ; 
 + rowCache . scheduleSaving ( seconds , DatabaseDescriptor . getRowCacheKeysToSave ( ) ) ; 
 } 
 
 public int getKeyCacheSavePeriodInSeconds ( ) 
 @ @ - 221 , 13 + 221 , 39 @ @ public class CacheService implements CacheServiceMBean 
 return DatabaseDescriptor . getKeyCacheSavePeriod ( ) ; 
 } 
 
 - public void setKeyCacheSavePeriodInSeconds ( int kcspis ) 
 + public void setKeyCacheSavePeriodInSeconds ( int seconds ) 
 { 
 - if ( kcspis < 0 ) 
 + if ( seconds < 0 ) 
 throw new RuntimeException ( " KeyCacheSavePeriodInSeconds must be non - negative . " ) ; 
 
 - DatabaseDescriptor . setKeyCacheSavePeriod ( kcspis ) ; 
 - keyCache . scheduleSaving ( kcspis , DatabaseDescriptor . getKeyCacheKeysToSave ( ) ) ; 
 + DatabaseDescriptor . setKeyCacheSavePeriod ( seconds ) ; 
 + keyCache . scheduleSaving ( seconds , DatabaseDescriptor . getKeyCacheKeysToSave ( ) ) ; 
 + } 
 + 
 + public int getRowCacheKeysToSave ( ) 
 + { 
 + return DatabaseDescriptor . getRowCacheKeysToSave ( ) ; 
 + } 
 + 
 + public void setRowCacheKeysToSave ( int count ) 
 + { 
 + if ( count < 0 ) 
 + throw new RuntimeException ( " RowCacheKeysToSave must be non - negative . " ) ; 
 + DatabaseDescriptor . setRowCacheKeysToSave ( count ) ; 
 + rowCache . scheduleSaving ( getRowCacheSavePeriodInSeconds ( ) , count ) ; 
 + } 
 + 
 + public int getKeyCacheKeysToSave ( ) 
 + { 
 + return DatabaseDescriptor . getKeyCacheKeysToSave ( ) ; 
 + } 
 + 
 + public void setKeyCacheKeysToSave ( int count ) 
 + { 
 + if ( count < 0 ) 
 + throw new RuntimeException ( " KeyCacheKeysToSave must be non - negative . " ) ; 
 + DatabaseDescriptor . setKeyCacheKeysToSave ( count ) ; 
 + keyCache . scheduleSaving ( getKeyCacheSavePeriodInSeconds ( ) , count ) ; 
 } 
 
 public void invalidateKeyCache ( ) 
 diff - - git a / src / java / org / apache / cassandra / service / CacheServiceMBean . java b / src / java / org / apache / cassandra / service / CacheServiceMBean . java 
 index 8b8adf2 . . 0225db2 100644 
 - - - a / src / java / org / apache / cassandra / service / CacheServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / CacheServiceMBean . java 
 @ @ - 27 , 6 + 27 , 12 @ @ public interface CacheServiceMBean 
 public int getKeyCacheSavePeriodInSeconds ( ) ; 
 public void setKeyCacheSavePeriodInSeconds ( int kcspis ) ; 
 
 + public int getRowCacheKeysToSave ( ) ; 
 + public void setRowCacheKeysToSave ( int rckts ) ; 
 + 
 + public int getKeyCacheKeysToSave ( ) ; 
 + public void setKeyCacheKeysToSave ( int kckts ) ; 
 + 
 / * * 
 * invalidate the key cache ; for use after invalidating row cache 
 * / 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 7a770bb . . 26cc50e 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 164 , 7 + 164 , 8 @ @ public class NodeCmd 
 RESETLOCALSCHEMA , 
 PREDICTCONSISTENCY , 
 ENABLEBACKUP , 
 - DISABLEBACKUP 
 + DISABLEBACKUP , 
 + SETCACHEKEYSTOSAVE 
 } 
 
 
 @ @ - 1271 , 6 + 1272 , 11 @ @ public class NodeCmd 
 probe . setCacheCapacities ( Integer . parseInt ( arguments [ 0 ] ) , Integer . parseInt ( arguments [ 1 ] ) ) ; 
 break ; 
 
 + case SETCACHEKEYSTOSAVE : 
 + if ( arguments . length ! = 2 ) { badUse ( " setcachekeystosave requires key - cache - keys - to - save , and row - cache - keys - to - save args . " ) ; } 
 + probe . setCacheKeysToSave ( Integer . parseInt ( arguments [ 0 ] ) , Integer . parseInt ( arguments [ 1 ] ) ) ; 
 + break ; 
 + 
 case SETCOMPACTIONTHRESHOLD : 
 if ( arguments . length ! = 4 ) { badUse ( " setcompactionthreshold requires ks , cf , min , and max threshold args . " ) ; } 
 int minthreshold = Integer . parseInt ( arguments [ 2 ] ) ; 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index e7cf592 . . 7829b60 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 526 , 6 + 526 , 22 @ @ public class NodeProbe 
 } 
 } 
 
 + public void setCacheKeysToSave ( int keyCacheKeysToSave , int rowCacheKeysToSave ) 
 + { 
 + try 
 + { 
 + String keyCachePath = " org . apache . cassandra . db : type = Caches " ; 
 + CacheServiceMBean cacheMBean = JMX . newMBeanProxy ( mbeanServerConn , new ObjectName ( keyCachePath ) , CacheServiceMBean . class ) ; 
 + cacheMBean . setKeyCacheKeysToSave ( keyCacheKeysToSave ) ; 
 + cacheMBean . setRowCacheKeysToSave ( rowCacheKeysToSave ) ; 
 + } 
 + catch ( MalformedObjectNameException e ) 
 + { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + } 
 + 
 + 
 public List < InetAddress > getEndpoints ( String keyspace , String cf , String key ) 
 { 
 return ssProxy . getNaturalEndpoints ( keyspace , cf , key ) ; 
 diff - - git a / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml b / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml 
 index b540b2c . . 6feb7b4 100644 
 - - - a / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml 
 + + + b / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml 
 @ @ - 185 , 6 + 185 , 9 @ @ commands : 
 - name : setcachecapacity < key - cache - capacity > < row - cache - capacity > 
 help : | 
 Set global key and row cache capacities ( in MB units ) . 
 + - name : setcachekeystosave < key - cache - keys - to - save > < row - cache - keys - to - save > 
 + help : | 
 + Set number of keys saved by each cache for faster post - restart warmup . 0 to disable . 
 - name : getendpoints < keyspace > < cf > < key > 
 help : | 
 Print the end points that owns the key
