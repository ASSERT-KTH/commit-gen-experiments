BLEU SCORE: 0.040583489434387374

TEST MSG: Fix AIOOBE when concurrently accessing ABSC
GENERATED MSG: merge w / 7 branch

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index e7b8802 . . 8b887cb 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> 2 . 1 . 0 - beta2 <nl> * Allow nodetool to use a file or prompt for password ( CASSANDRA - 6660 ) <nl> + * Fix AIOOBE when concurrently accessing ABSC ( CASSANDRA - 6742 ) <nl> <nl> 2 . 1 . 0 - beta1 <nl> * Add flush directory distinct from compaction directories ( CASSANDRA - 6357 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> index eaebd11 . . 7d966ac 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> + + + b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class ArrayBackedSortedColumns extends ColumnFamily <nl> <nl> private Cell [ ] cells ; <nl> private int size ; <nl> - private int sortedSize ; <nl> + private volatile int sortedSize ; <nl> <nl> public static final ColumnFamily . Factory < ArrayBackedSortedColumns > factory = new Factory < ArrayBackedSortedColumns > ( ) <nl> { <nl> @ @ - 103 , 8 + 103 , 14 @ @ public class ArrayBackedSortedColumns extends ColumnFamily <nl> sortCells ( ) ; <nl> } <nl> <nl> - private void sortCells ( ) <nl> + / * * <nl> + * synchronized so that concurrent ( read - only ) accessors don ' t mess the internal state . <nl> + * / <nl> + private synchronized void sortCells ( ) <nl> { <nl> + if ( size = = sortedSize ) <nl> + return ; / / Just sorted by a previous call . <nl> + <nl> Comparator < Cell > comparator = reversed <nl> ? getComparator ( ) . columnReverseComparator ( ) <nl> : getComparator ( ) . columnComparator ( ) ; <nl> @ @ - 126 , 8 + 132 , 8 @ @ public class ArrayBackedSortedColumns extends ColumnFamily <nl> int rightStart = sortedSize ; <nl> int rightEnd = size ; <nl> <nl> - / / ' Trim ' the size to what ' s left without the leftCopy <nl> - size = sortedSize = pos ; <nl> + sortedSize = - 1 ; / / Set to - 1 to avoid the pos = = sortedSize edge case <nl> + size = pos ; / / ' Trim ' the size to what ' s left without the leftCopy <nl> <nl> / / Merge the cells from both segments . When adding from the left segment we can rely on it not having any <nl> / / duplicate cells , and thus omit the comparison with the previously entered cell - we ' ll never need to reconcile . <nl> @ @ - 147 , 6 + 153 , 9 @ @ public class ArrayBackedSortedColumns extends ColumnFamily <nl> while ( r < rightEnd ) <nl> internalAppendOrReconcile ( cells [ r + + ] ) ; <nl> <nl> + / / Fully sorted at this point <nl> + sortedSize = size ; <nl> + <nl> / / Nullify the remainder of the array ( in case we had duplicate cells that got reconciled ) <nl> for ( int i = size ; i < rightEnd ; i + + ) <nl> cells [ i ] = null ; <nl> @ @ - 242 , 7 + 251 , 6 @ @ public class ArrayBackedSortedColumns extends ColumnFamily <nl> { <nl> cells [ size ] = cell ; <nl> size + + ; <nl> - sortedSize + + ; <nl> } <nl> <nl> / * *
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6170d0d . . 486649c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 35 , 6 + 35 , 8 @ @ <nl> * include secondary indexes in cleanup ( CASSANDRA - 1916 ) <nl> * CFS . scrubDataDirectories should also cleanup invalid secondary indexes <nl> ( CASSANDRA - 1904 ) <nl> + * ability to disable / enable gossip on nodes to force them down <nl> + ( CASSANDRA - 1108 ) <nl> <nl> <nl> 0 . 7 . 0 - rc3 <nl> diff - - git a / lib / guava - r05 . jar b / lib / guava - r05 . jar <nl> index 3aea56f . . 0407b9c 100644 <nl> Binary files a / lib / guava - r05 . jar and b / lib / guava - r05 . jar differ <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 1908fa0 . . 418c7f9 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 249 , 6 + 249 , 28 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> throw new RuntimeException ( " Streaming service is unavailable . " ) ; <nl> } <nl> <nl> + / / should only be called via JMX <nl> + public void stopGossiping ( ) <nl> + { <nl> + if ( initialized ) <nl> + { <nl> + logger _ . warn ( " Stopping gossip by operator request " ) ; <nl> + Gossiper . instance . stop ( ) ; <nl> + initialized = false ; <nl> + } <nl> + } <nl> + <nl> + / / should only be called via JMX <nl> + public void startGossiping ( ) <nl> + { <nl> + if ( ! initialized ) <nl> + { <nl> + logger _ . warn ( " Starting gossip by operator request " ) ; <nl> + Gossiper . instance . start ( FBUtilities . getLocalAddress ( ) , ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ; <nl> + initialized = true ; <nl> + } <nl> + } <nl> + <nl> public void stopClient ( ) <nl> { <nl> Gossiper . instance . unregister ( migrationManager ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> index 744c1ae . . ff5195a 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> @ @ - 271 , 4 + 271 , 13 @ @ public interface StorageServiceMBean <nl> * @ throws ConfigurationException classname not found on classpath <nl> * / <nl> public void updateSnitch ( String epSnitchClassName , Boolean dynamic , Integer dynamicUpdateInterval , Integer dynamicResetInterval , Double dynamicBadnessThreshold ) throws ConfigurationException ; <nl> + <nl> + / / allows a user to forcibly ' kill ' a sick node <nl> + public void stopGossiping ( ) ; <nl> + <nl> + / / allows a user to recover a forcibly ' killed ' node <nl> + public void startGossiping ( ) ; <nl> + <nl> + / / to determine if gossip is disabled <nl> + public boolean isInitialized ( ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 47f5139 . . e29e9fe 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class NodeCmd { <nl> RING , INFO , CFSTATS , SNAPSHOT , CLEARSNAPSHOT , VERSION , TPSTATS , FLUSH , DRAIN , <nl> DECOMMISSION , MOVE , LOADBALANCE , REMOVETOKEN , REPAIR , CLEANUP , COMPACT , <nl> SETCACHECAPACITY , GETCOMPACTIONTHRESHOLD , SETCOMPACTIONTHRESHOLD , NETSTATS , CFHISTOGRAMS , <nl> - COMPACTIONSTATS <nl> + COMPACTIONSTATS , DISABLEGOSSIP , ENABLEGOSSIP <nl> } <nl> <nl> <nl> @ @ - 96 , 6 + 96 , 8 @ @ public class NodeCmd { <nl> + " decommission \ n " <nl> + " loadbalance \ n " <nl> + " compactionstats \ n " <nl> + + " disablegossip \ n " <nl> + + " enablegossip \ n " <nl> <nl> / / One arg <nl> + " snapshot [ snapshotname ] \ n " <nl> @ @ - 189 , 6 + 191 , 7 @ @ public class NodeCmd { <nl> public void printInfo ( PrintStream outs ) <nl> { <nl> outs . println ( probe . getToken ( ) ) ; <nl> + outs . printf ( " % - 17s : % s % n " , " Gossip active " , probe . isInitialized ( ) ) ; <nl> outs . printf ( " % - 17s : % s % n " , " Load " , probe . getLoadString ( ) ) ; <nl> outs . printf ( " % - 17s : % s % n " , " Generation No " , probe . getCurrentGenerationNumber ( ) ) ; <nl> <nl> @ @ - 519 , 6 + 522 , 8 @ @ public class NodeCmd { <nl> case TPSTATS : nodeCmd . printThreadPoolStats ( System . out ) ; break ; <nl> case VERSION : nodeCmd . printReleaseVersion ( System . out ) ; break ; <nl> case COMPACTIONSTATS : nodeCmd . printCompactionStats ( System . out ) ; break ; <nl> + case DISABLEGOSSIP : probe . stopGossiping ( ) ; break ; <nl> + case ENABLEGOSSIP : probe . startGossiping ( ) ; break ; <nl> <nl> case DRAIN : <nl> try { probe . drain ( ) ; } <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index 408e345 . . c07c4f9 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 506 , 6 + 506 , 21 @ @ public class NodeProbe <nl> { <nl> return ssProxy . getKeyspaces ( ) ; <nl> } <nl> + <nl> + public void stopGossiping ( ) <nl> + { <nl> + ssProxy . stopGossiping ( ) ; <nl> + } <nl> + <nl> + public void startGossiping ( ) <nl> + { <nl> + ssProxy . startGossiping ( ) ; <nl> + } <nl> + <nl> + public boolean isInitialized ( ) <nl> + { <nl> + return ssProxy . isInitialized ( ) ; <nl> + } <nl> } <nl> <nl> class ColumnFamilyStoreMBeanIterator implements Iterator < Map . Entry < String , ColumnFamilyStoreMBean > >

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index e7b8802 . . 8b887cb 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 2 . 1 . 0 - beta2 
 * Allow nodetool to use a file or prompt for password ( CASSANDRA - 6660 ) 
 + * Fix AIOOBE when concurrently accessing ABSC ( CASSANDRA - 6742 ) 
 
 2 . 1 . 0 - beta1 
 * Add flush directory distinct from compaction directories ( CASSANDRA - 6357 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 index eaebd11 . . 7d966ac 100644 
 - - - a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 + + + b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class ArrayBackedSortedColumns extends ColumnFamily 
 
 private Cell [ ] cells ; 
 private int size ; 
 - private int sortedSize ; 
 + private volatile int sortedSize ; 
 
 public static final ColumnFamily . Factory < ArrayBackedSortedColumns > factory = new Factory < ArrayBackedSortedColumns > ( ) 
 { 
 @ @ - 103 , 8 + 103 , 14 @ @ public class ArrayBackedSortedColumns extends ColumnFamily 
 sortCells ( ) ; 
 } 
 
 - private void sortCells ( ) 
 + / * * 
 + * synchronized so that concurrent ( read - only ) accessors don ' t mess the internal state . 
 + * / 
 + private synchronized void sortCells ( ) 
 { 
 + if ( size = = sortedSize ) 
 + return ; / / Just sorted by a previous call . 
 + 
 Comparator < Cell > comparator = reversed 
 ? getComparator ( ) . columnReverseComparator ( ) 
 : getComparator ( ) . columnComparator ( ) ; 
 @ @ - 126 , 8 + 132 , 8 @ @ public class ArrayBackedSortedColumns extends ColumnFamily 
 int rightStart = sortedSize ; 
 int rightEnd = size ; 
 
 - / / ' Trim ' the size to what ' s left without the leftCopy 
 - size = sortedSize = pos ; 
 + sortedSize = - 1 ; / / Set to - 1 to avoid the pos = = sortedSize edge case 
 + size = pos ; / / ' Trim ' the size to what ' s left without the leftCopy 
 
 / / Merge the cells from both segments . When adding from the left segment we can rely on it not having any 
 / / duplicate cells , and thus omit the comparison with the previously entered cell - we ' ll never need to reconcile . 
 @ @ - 147 , 6 + 153 , 9 @ @ public class ArrayBackedSortedColumns extends ColumnFamily 
 while ( r < rightEnd ) 
 internalAppendOrReconcile ( cells [ r + + ] ) ; 
 
 + / / Fully sorted at this point 
 + sortedSize = size ; 
 + 
 / / Nullify the remainder of the array ( in case we had duplicate cells that got reconciled ) 
 for ( int i = size ; i < rightEnd ; i + + ) 
 cells [ i ] = null ; 
 @ @ - 242 , 7 + 251 , 6 @ @ public class ArrayBackedSortedColumns extends ColumnFamily 
 { 
 cells [ size ] = cell ; 
 size + + ; 
 - sortedSize + + ; 
 } 
 
 / * *

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6170d0d . . 486649c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 35 , 6 + 35 , 8 @ @ 
 * include secondary indexes in cleanup ( CASSANDRA - 1916 ) 
 * CFS . scrubDataDirectories should also cleanup invalid secondary indexes 
 ( CASSANDRA - 1904 ) 
 + * ability to disable / enable gossip on nodes to force them down 
 + ( CASSANDRA - 1108 ) 
 
 
 0 . 7 . 0 - rc3 
 diff - - git a / lib / guava - r05 . jar b / lib / guava - r05 . jar 
 index 3aea56f . . 0407b9c 100644 
 Binary files a / lib / guava - r05 . jar and b / lib / guava - r05 . jar differ 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 1908fa0 . . 418c7f9 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 249 , 6 + 249 , 28 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 throw new RuntimeException ( " Streaming service is unavailable . " ) ; 
 } 
 
 + / / should only be called via JMX 
 + public void stopGossiping ( ) 
 + { 
 + if ( initialized ) 
 + { 
 + logger _ . warn ( " Stopping gossip by operator request " ) ; 
 + Gossiper . instance . stop ( ) ; 
 + initialized = false ; 
 + } 
 + } 
 + 
 + / / should only be called via JMX 
 + public void startGossiping ( ) 
 + { 
 + if ( ! initialized ) 
 + { 
 + logger _ . warn ( " Starting gossip by operator request " ) ; 
 + Gossiper . instance . start ( FBUtilities . getLocalAddress ( ) , ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ; 
 + initialized = true ; 
 + } 
 + } 
 + 
 public void stopClient ( ) 
 { 
 Gossiper . instance . unregister ( migrationManager ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 index 744c1ae . . ff5195a 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 @ @ - 271 , 4 + 271 , 13 @ @ public interface StorageServiceMBean 
 * @ throws ConfigurationException classname not found on classpath 
 * / 
 public void updateSnitch ( String epSnitchClassName , Boolean dynamic , Integer dynamicUpdateInterval , Integer dynamicResetInterval , Double dynamicBadnessThreshold ) throws ConfigurationException ; 
 + 
 + / / allows a user to forcibly ' kill ' a sick node 
 + public void stopGossiping ( ) ; 
 + 
 + / / allows a user to recover a forcibly ' killed ' node 
 + public void startGossiping ( ) ; 
 + 
 + / / to determine if gossip is disabled 
 + public boolean isInitialized ( ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 47f5139 . . e29e9fe 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 74 , 7 + 74 , 7 @ @ public class NodeCmd { 
 RING , INFO , CFSTATS , SNAPSHOT , CLEARSNAPSHOT , VERSION , TPSTATS , FLUSH , DRAIN , 
 DECOMMISSION , MOVE , LOADBALANCE , REMOVETOKEN , REPAIR , CLEANUP , COMPACT , 
 SETCACHECAPACITY , GETCOMPACTIONTHRESHOLD , SETCOMPACTIONTHRESHOLD , NETSTATS , CFHISTOGRAMS , 
 - COMPACTIONSTATS 
 + COMPACTIONSTATS , DISABLEGOSSIP , ENABLEGOSSIP 
 } 
 
 
 @ @ - 96 , 6 + 96 , 8 @ @ public class NodeCmd { 
 + " decommission \ n " 
 + " loadbalance \ n " 
 + " compactionstats \ n " 
 + + " disablegossip \ n " 
 + + " enablegossip \ n " 
 
 / / One arg 
 + " snapshot [ snapshotname ] \ n " 
 @ @ - 189 , 6 + 191 , 7 @ @ public class NodeCmd { 
 public void printInfo ( PrintStream outs ) 
 { 
 outs . println ( probe . getToken ( ) ) ; 
 + outs . printf ( " % - 17s : % s % n " , " Gossip active " , probe . isInitialized ( ) ) ; 
 outs . printf ( " % - 17s : % s % n " , " Load " , probe . getLoadString ( ) ) ; 
 outs . printf ( " % - 17s : % s % n " , " Generation No " , probe . getCurrentGenerationNumber ( ) ) ; 
 
 @ @ - 519 , 6 + 522 , 8 @ @ public class NodeCmd { 
 case TPSTATS : nodeCmd . printThreadPoolStats ( System . out ) ; break ; 
 case VERSION : nodeCmd . printReleaseVersion ( System . out ) ; break ; 
 case COMPACTIONSTATS : nodeCmd . printCompactionStats ( System . out ) ; break ; 
 + case DISABLEGOSSIP : probe . stopGossiping ( ) ; break ; 
 + case ENABLEGOSSIP : probe . startGossiping ( ) ; break ; 
 
 case DRAIN : 
 try { probe . drain ( ) ; } 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index 408e345 . . c07c4f9 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 506 , 6 + 506 , 21 @ @ public class NodeProbe 
 { 
 return ssProxy . getKeyspaces ( ) ; 
 } 
 + 
 + public void stopGossiping ( ) 
 + { 
 + ssProxy . stopGossiping ( ) ; 
 + } 
 + 
 + public void startGossiping ( ) 
 + { 
 + ssProxy . startGossiping ( ) ; 
 + } 
 + 
 + public boolean isInitialized ( ) 
 + { 
 + return ssProxy . isInitialized ( ) ; 
 + } 
 } 
 
 class ColumnFamilyStoreMBeanIterator implements Iterator < Map . Entry < String , ColumnFamilyStoreMBean > >
