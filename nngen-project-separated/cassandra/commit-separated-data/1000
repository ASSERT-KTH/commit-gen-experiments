BLEU SCORE: 0.027611988917697356

TEST MSG: Avoid NPE when serializing ErrorMessage with null msg
GENERATED MSG: Fix error response to unsupported protocol version

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 767eb8a . . 01e7b3d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 6 <nl> + * Avoid NPE when serializing ErrorMessage with null message ( CASSANDRA - 11167 ) <nl> * Replacing an aggregate with a new version doesn ' t reset INITCOND ( CASSANDRA - 10840 ) <nl> * ( cqlsh ) cqlsh cannot be called through symlink ( CASSANDRA - 11037 ) <nl> * fix ohc and java - driver pom dependencies in build . xml ( CASSANDRA - 10793 ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java b / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java <nl> index 222e833 . . 021db5a 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java <nl> @ @ - 151 , 7 + 151 , 8 @ @ public class ErrorMessage extends Message . Response <nl> { <nl> final TransportException err = getBackwardsCompatibleException ( msg , version ) ; <nl> dest . writeInt ( err . code ( ) . value ) ; <nl> - CBUtil . writeString ( err . getMessage ( ) , dest ) ; <nl> + String errorString = err . getMessage ( ) = = null ? " " : err . getMessage ( ) ; <nl> + CBUtil . writeString ( errorString , dest ) ; <nl> <nl> switch ( err . code ( ) ) <nl> { <nl> @ @ - 212 , 7 + 213 , 8 @ @ public class ErrorMessage extends Message . Response <nl> public int encodedSize ( ErrorMessage msg , int version ) <nl> { <nl> final TransportException err = getBackwardsCompatibleException ( msg , version ) ; <nl> - int size = 4 + CBUtil . sizeOfString ( err . getMessage ( ) ) ; <nl> + String errorString = err . getMessage ( ) = = null ? " " : err . getMessage ( ) ; <nl> + int size = 4 + CBUtil . sizeOfString ( errorString ) ; <nl> switch ( err . code ( ) ) <nl> { <nl> case UNAVAILABLE : <nl> diff - - git a / test / unit / org / apache / cassandra / transport / ProtocolErrorTest . java b / test / unit / org / apache / cassandra / transport / ProtocolErrorTest . java <nl> index 11b0ebd . . fc8c41c 100644 <nl> - - - a / test / unit / org / apache / cassandra / transport / ProtocolErrorTest . java <nl> + + + b / test / unit / org / apache / cassandra / transport / ProtocolErrorTest . java <nl> @ @ - 113 , 4 + 113 , 22 @ @ public class ProtocolErrorTest { <nl> Assert . assertTrue ( e . getMessage ( ) . contains ( " Request is too big " ) ) ; <nl> } <nl> } <nl> + <nl> + @ Test <nl> + public void testErrorMessageWithNullString ( ) throws Exception <nl> + { <nl> + / / test for CASSANDRA - 11167 <nl> + ErrorMessage msg = ErrorMessage . fromException ( new ServerError ( ( String ) null ) ) ; <nl> + assert msg . toString ( ) . endsWith ( " null " ) : msg . toString ( ) ; <nl> + int size = ErrorMessage . codec . encodedSize ( msg , Server . CURRENT _ VERSION ) ; <nl> + ByteBuf buf = Unpooled . buffer ( size ) ; <nl> + ErrorMessage . codec . encode ( msg , buf , Server . CURRENT _ VERSION ) ; <nl> + <nl> + ByteBuf expected = Unpooled . wrappedBuffer ( new byte [ ] { <nl> + 0x00 , 0x00 , 0x00 , 0x00 , / / int error code <nl> + 0x00 , 0x00 / / short message length <nl> + } ) ; <nl> + <nl> + Assert . assertEquals ( expected , buf ) ; <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 767eb8a . . 01e7b3d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 6 
 + * Avoid NPE when serializing ErrorMessage with null message ( CASSANDRA - 11167 ) 
 * Replacing an aggregate with a new version doesn ' t reset INITCOND ( CASSANDRA - 10840 ) 
 * ( cqlsh ) cqlsh cannot be called through symlink ( CASSANDRA - 11037 ) 
 * fix ohc and java - driver pom dependencies in build . xml ( CASSANDRA - 10793 ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java b / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java 
 index 222e833 . . 021db5a 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java 
 @ @ - 151 , 7 + 151 , 8 @ @ public class ErrorMessage extends Message . Response 
 { 
 final TransportException err = getBackwardsCompatibleException ( msg , version ) ; 
 dest . writeInt ( err . code ( ) . value ) ; 
 - CBUtil . writeString ( err . getMessage ( ) , dest ) ; 
 + String errorString = err . getMessage ( ) = = null ? " " : err . getMessage ( ) ; 
 + CBUtil . writeString ( errorString , dest ) ; 
 
 switch ( err . code ( ) ) 
 { 
 @ @ - 212 , 7 + 213 , 8 @ @ public class ErrorMessage extends Message . Response 
 public int encodedSize ( ErrorMessage msg , int version ) 
 { 
 final TransportException err = getBackwardsCompatibleException ( msg , version ) ; 
 - int size = 4 + CBUtil . sizeOfString ( err . getMessage ( ) ) ; 
 + String errorString = err . getMessage ( ) = = null ? " " : err . getMessage ( ) ; 
 + int size = 4 + CBUtil . sizeOfString ( errorString ) ; 
 switch ( err . code ( ) ) 
 { 
 case UNAVAILABLE : 
 diff - - git a / test / unit / org / apache / cassandra / transport / ProtocolErrorTest . java b / test / unit / org / apache / cassandra / transport / ProtocolErrorTest . java 
 index 11b0ebd . . fc8c41c 100644 
 - - - a / test / unit / org / apache / cassandra / transport / ProtocolErrorTest . java 
 + + + b / test / unit / org / apache / cassandra / transport / ProtocolErrorTest . java 
 @ @ - 113 , 4 + 113 , 22 @ @ public class ProtocolErrorTest { 
 Assert . assertTrue ( e . getMessage ( ) . contains ( " Request is too big " ) ) ; 
 } 
 } 
 + 
 + @ Test 
 + public void testErrorMessageWithNullString ( ) throws Exception 
 + { 
 + / / test for CASSANDRA - 11167 
 + ErrorMessage msg = ErrorMessage . fromException ( new ServerError ( ( String ) null ) ) ; 
 + assert msg . toString ( ) . endsWith ( " null " ) : msg . toString ( ) ; 
 + int size = ErrorMessage . codec . encodedSize ( msg , Server . CURRENT _ VERSION ) ; 
 + ByteBuf buf = Unpooled . buffer ( size ) ; 
 + ErrorMessage . codec . encode ( msg , buf , Server . CURRENT _ VERSION ) ; 
 + 
 + ByteBuf expected = Unpooled . wrappedBuffer ( new byte [ ] { 
 + 0x00 , 0x00 , 0x00 , 0x00 , / / int error code 
 + 0x00 , 0x00 / / short message length 
 + } ) ; 
 + 
 + Assert . assertEquals ( expected , buf ) ; 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
