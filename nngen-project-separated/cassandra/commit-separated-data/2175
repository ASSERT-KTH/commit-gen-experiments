BLEU SCORE: 0.010418644977434674

TEST MSG: don ' t declare throwing exceptions that aren ' t
GENERATED MSG: fix more findbugs complaints . patch by Michael Greene ; reviewed by jbellis for CASSANDRA - 338

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / UFMetaData . java b / src / java / org / apache / cassandra / config / UFMetaData . java <nl> index 18484f3 . . f11d7ac 100644 <nl> - - - a / src / java / org / apache / cassandra / config / UFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / UFMetaData . java <nl> @ @ - 208 , 7 + 208 , 6 @ @ public final class UFMetaData <nl> } <nl> <nl> public static Mutation createOrReplaceFunction ( long timestamp , UFMetaData f ) <nl> - throws ConfigurationException , SyntaxException <nl> { <nl> Mutation mutation = new Mutation ( Keyspace . SYSTEM _ KS , partKey . decompose ( f . namespace , f . functionName ) ) ; <nl> ColumnFamily cf = mutation . addOrGet ( SystemKeyspace . SCHEMA _ FUNCTIONS _ CF ) ; <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / Tuples . java b / src / java / org / apache / cassandra / cql3 / Tuples . java <nl> index f0d7a13 . . cc04ebc 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / Tuples . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / Tuples . java <nl> @ @ - 285 , 7 + 285 , 7 @ @ public class Tuples <nl> super ( bindIndex ) ; <nl> } <nl> <nl> - private static ColumnSpecification makeReceiver ( List < ? extends ColumnSpecification > receivers ) throws InvalidRequestException <nl> + private static ColumnSpecification makeReceiver ( List < ? extends ColumnSpecification > receivers ) <nl> { <nl> List < AbstractType < ? > > types = new ArrayList < > ( receivers . size ( ) ) ; <nl> StringBuilder inName = new StringBuilder ( " ( " ) ; <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / functions / Functions . java b / src / java / org / apache / cassandra / cql3 / functions / Functions . java <nl> index 03dd13d . . 977d242 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / functions / Functions . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / functions / Functions . java <nl> @ @ - 137 , 7 + 137 , 7 @ @ public abstract class Functions <nl> } <nl> } <nl> <nl> - private static boolean isValidType ( String keyspace , Function fun , List < ? extends AssignementTestable > providedArgs , ColumnSpecification receiver ) throws InvalidRequestException <nl> + private static boolean isValidType ( String keyspace , Function fun , List < ? extends AssignementTestable > providedArgs , ColumnSpecification receiver ) <nl> { <nl> if ( ! receiver . type . isValueCompatibleWith ( fun . returnType ( ) ) ) <nl> return false ; <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java <nl> index c32f9a8 . . c4ab50e 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java <nl> @ @ - 178 , 7 + 178 , 7 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF <nl> staticConditions = = null ? Collections . < ColumnDefinition > emptyList ( ) : Iterables . transform ( staticConditions , getColumnForCondition ) ) ; <nl> } <nl> <nl> - public void addCondition ( ColumnCondition cond ) throws InvalidRequestException <nl> + public void addCondition ( ColumnCondition cond ) <nl> { <nl> List < ColumnCondition > conds = null ; <nl> if ( cond . column . isStatic ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> index 011419b . . ccfd09e 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> @ @ - 1282 , 7 + 1282 , 7 @ @ public class SelectStatement implements CQLStatement , MeasurableForPreparedCache <nl> / * * <nl> * Orders results when multiple keys are selected ( using IN ) <nl> * / <nl> - private void orderResults ( ResultSet cqlRows ) throws InvalidRequestException <nl> + private void orderResults ( ResultSet cqlRows ) <nl> { <nl> if ( cqlRows . size ( ) = = 0 | | ! needsPostQueryOrdering ( ) ) <nl> return ; <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / udf / UDFunction . java b / src / java / org / apache / cassandra / cql3 / udf / UDFunction . java <nl> index 89f37d5 . . 61e52e5 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / udf / UDFunction . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / udf / UDFunction . java <nl> @ @ - 113 , 7 + 113 , 7 @ @ public class UDFunction <nl> } <nl> } <nl> <nl> - public Function create ( List < ? extends AssignementTestable > providedArgs ) throws InvalidRequestException <nl> + public Function create ( List < ? extends AssignementTestable > providedArgs ) <nl> { <nl> final int argCount = providedArgs . size ( ) ; <nl> final List < AbstractType < ? > > argsType = new ArrayList < > ( argCount ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / DefsTables . java b / src / java / org / apache / cassandra / db / DefsTables . java <nl> index 33a112a . . e8692a7 100644 <nl> - - - a / src / java / org / apache / cassandra / db / DefsTables . java <nl> + + + b / src / java / org / apache / cassandra / db / DefsTables . java <nl> @ @ - 168 , 7 + 168 , 7 @ @ public class DefsTables <nl> Schema . instance . updateVersionAndAnnounce ( ) ; <nl> } <nl> <nl> - public static synchronized void mergeSchemaInternal ( Collection < Mutation > mutations , boolean doFlush ) throws ConfigurationException , IOException <nl> + public static synchronized void mergeSchemaInternal ( Collection < Mutation > mutations , boolean doFlush ) throws IOException <nl> { <nl> / / compare before / after schemas of the affected keyspaces only <nl> Set < String > keyspaces = new HashSet < > ( mutations . size ( ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java <nl> index 1eea915 . . 2e22113 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Memtable . java <nl> + + + b / src / java / org / apache / cassandra / db / Memtable . java <nl> @ @ - 319 , 7 + 319 , 6 @ @ public class Memtable <nl> } <nl> <nl> private SSTableReader writeSortedContents ( ReplayPosition context , File sstableDirectory ) <nl> - throws ExecutionException , InterruptedException <nl> { <nl> logger . info ( " Writing { } " , Memtable . this . toString ( ) ) ; <nl> <nl> @ @ - 375 , 7 + 374 , 7 @ @ public class Memtable <nl> } <nl> } <nl> <nl> - public SSTableWriter createFlushWriter ( String filename ) throws ExecutionException , InterruptedException <nl> + public SSTableWriter createFlushWriter ( String filename ) <nl> { <nl> MetadataCollector sstableMetadataCollector = new MetadataCollector ( cfs . metadata . comparator ) . replayPosition ( context ) ; <nl> return new SSTableWriter ( filename , <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index 5af7139 . . 247a0c1 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 396 , 7 + 396 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> public void performAnticompaction ( ColumnFamilyStore cfs , <nl> Collection < Range < Token > > ranges , <nl> Collection < SSTableReader > validatedForRepair , <nl> - long repairedAt ) throws InterruptedException , ExecutionException , IOException <nl> + long repairedAt ) throws InterruptedException , IOException <nl> { <nl> logger . info ( " Starting anticompaction for { } / { } " , cfs . keyspace . getName ( ) , cfs . getColumnFamilyName ( ) ) ; <nl> logger . debug ( " Starting anticompaction for ranges { } " , ranges ) ; <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> index 5bac2fc . . 9ad7d8c 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> @ @ - 89 , 7 + 89 , 7 @ @ class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , ByteB <nl> this . context = context ; <nl> } <nl> <nl> - CqlRecordWriter ( Configuration conf , Progressable progressable ) throws IOException <nl> + CqlRecordWriter ( Configuration conf , Progressable progressable ) <nl> { <nl> this ( conf ) ; <nl> this . progressable = progressable ; <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> index 53f7e53 . . 433fdd7 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> @ @ - 1071 , 7 + 1071 , 7 @ @ public class SSTableReader extends SSTable <nl> return indexSummary . getEffectiveIndexInterval ( ) ; <nl> } <nl> <nl> - public void releaseSummary ( ) throws IOException <nl> + public void releaseSummary ( ) <nl> { <nl> indexSummary . close ( ) ; <nl> indexSummary = null ; <nl> diff - - git a / src / java / org / apache / cassandra / locator / CloudstackSnitch . java b / src / java / org / apache / cassandra / locator / CloudstackSnitch . java <nl> index 0200f0f . . 9f98cff 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / CloudstackSnitch . java <nl> + + + b / src / java / org / apache / cassandra / locator / CloudstackSnitch . java <nl> @ @ - 168 , 7 + 168 , 7 @ @ public class CloudstackSnitch extends AbstractNetworkTopologySnitch <nl> throw new ConfigurationException ( " No valid DHCP lease file could be found . " ) ; <nl> } <nl> <nl> - String csEndpointFromLease ( File lease ) throws ConfigurationException , IOException <nl> + String csEndpointFromLease ( File lease ) throws ConfigurationException <nl> { <nl> BufferedReader reader = null ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / service / ActiveRepairService . java b / src / java / org / apache / cassandra / service / ActiveRepairService . java <nl> index 35a86f6 . . f1b9cce 100644 <nl> - - - a / src / java / org / apache / cassandra / service / ActiveRepairService . java <nl> + + + b / src / java / org / apache / cassandra / service / ActiveRepairService . java <nl> @ @ - 18 , 7 + 18 , 6 @ @ <nl> package org . apache . cassandra . service ; <nl> <nl> import java . io . File ; <nl> - import java . io . IOException ; <nl> import java . net . InetAddress ; <nl> import java . net . UnknownHostException ; <nl> import java . util . * ; <nl> @ @ - 33 , 7 + 32 , 6 @ @ import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . concurrent . JMXConfigurableThreadPoolExecutor ; <nl> import org . apache . cassandra . concurrent . NamedThreadFactory ; <nl> - import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . ColumnFamilyStore ; <nl> import org . apache . cassandra . db . compaction . CompactionManager ; <nl> import org . apache . cassandra . dht . Bounds ; <nl> @ @ - 316 , 7 + 314 , 7 @ @ public class ActiveRepairService <nl> parentRepairSessions . put ( parentRepairSession , new ParentRepairSession ( columnFamilyStores , ranges , sstablesToRepair , System . currentTimeMillis ( ) ) ) ; <nl> } <nl> <nl> - public void finishParentSession ( UUID parentSession , Set < InetAddress > neighbors , boolean doAntiCompaction ) throws InterruptedException , ExecutionException , IOException <nl> + public void finishParentSession ( UUID parentSession , Set < InetAddress > neighbors , boolean doAntiCompaction ) <nl> { <nl> try <nl> { <nl> @ @ - 343 , 7 + 341 , 7 @ @ public class ActiveRepairService <nl> return parentRepairSessions . get ( parentSessionId ) ; <nl> } <nl> <nl> - public List < Future < ? > > doAntiCompaction ( UUID parentRepairSession ) throws InterruptedException , ExecutionException , IOException <nl> + public List < Future < ? > > doAntiCompaction ( UUID parentRepairSession ) <nl> { <nl> assert parentRepairSession ! = null ; <nl> ParentRepairSession prs = getParentRepairSession ( parentRepairSession ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> index 28e3e39 . . c203934 100644 <nl> - - - a / src / java / org / apache / cassandra / service / MigrationManager . java <nl> + + + b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> @ @ - 384 , 7 + 384 , 7 @ @ public class MigrationManager <nl> } <nl> <nl> public static void announceNewFunction ( UFMetaData function , boolean announceLocally ) <nl> - throws ConfigurationException , SyntaxException <nl> + throws ConfigurationException <nl> { <nl> Mutation mutation = UFMetaData . createOrReplaceFunction ( FBUtilities . timestampMicros ( ) , function ) ; <nl> if ( mutation = = null ) <nl> @ @ - 406 , 7 + 406 , 7 @ @ public class MigrationManager <nl> { <nl> DefsTables . mergeSchemaInternal ( Collections . singletonList ( schema ) , false ) ; <nl> } <nl> - catch ( ConfigurationException | IOException e ) <nl> + catch ( IOException e ) <nl> { <nl> throw new RuntimeException ( e ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / tools / SSTableLevelResetter . java b / src / java / org / apache / cassandra / tools / SSTableLevelResetter . java <nl> index 7f7ce99 . . b83edae 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / SSTableLevelResetter . java <nl> + + + b / src / java / org / apache / cassandra / tools / SSTableLevelResetter . java <nl> @ @ - 17 , 7 + 17 , 6 @ @ <nl> * / <nl> package org . apache . cassandra . tools ; <nl> <nl> - import java . io . IOException ; <nl> import java . io . PrintStream ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> @ @ - 39 , 7 + 38 , 7 @ @ public class SSTableLevelResetter <nl> / * * <nl> * @ param args a list of sstables whose metadata we are changing <nl> * / <nl> - public static void main ( String [ ] args ) throws IOException <nl> + public static void main ( String [ ] args ) <nl> { <nl> PrintStream out = System . out ; <nl> if ( args . length = = 0 ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / StandaloneSplitter . java b / src / java / org / apache / cassandra / tools / StandaloneSplitter . java <nl> index f3725fd . . befe270 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / StandaloneSplitter . java <nl> + + + b / src / java / org / apache / cassandra / tools / StandaloneSplitter . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ public class StandaloneSplitter <nl> private static final String NO _ SNAPSHOT _ OPTION = " no - snapshot " ; <nl> private static final String SIZE _ OPTION = " size " ; <nl> <nl> - public static void main ( String args [ ] ) throws IOException <nl> + public static void main ( String args [ ] ) <nl> { <nl> Options options = Options . parseArgs ( args ) ; <nl> try <nl> diff - - git a / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java b / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java <nl> index 5d8625b . . 1538efc 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java <nl> + + + b / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java <nl> @ @ - 39 , 7 + 39 , 7 @ @ public class StandaloneUpgrader <nl> private static final String DEBUG _ OPTION = " debug " ; <nl> private static final String HELP _ OPTION = " help " ; <nl> <nl> - public static void main ( String args [ ] ) throws IOException <nl> + public static void main ( String args [ ] ) <nl> { <nl> Options options = Options . parseArgs ( args ) ; <nl> try
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 8baf41f . . f5da722 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 57 , 7 + 57 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> private static Logger logger _ = Logger . getLogger ( ColumnFamilyStore . class ) ; <nl> <nl> private static final int BUFSIZE = 128 * 1024 * 1024 ; <nl> - private static final int COMPACTION _ MEMORY _ THRESHOLD = 1 < < 30 ; <nl> <nl> private static NonBlockingHashMap < String , Set < Memtable > > memtablesPendingFlush = new NonBlockingHashMap < String , Set < Memtable > > ( ) ; <nl> private static ExecutorService flusher _ = new DebuggableThreadPoolExecutor ( " MEMTABLE - FLUSHER - POOL " ) ; <nl> @ @ - 902 , 7 + 901 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> long totalkeysWritten = 0 ; <nl> String rangeFileLocation ; <nl> String mergedFileName ; <nl> - IPartitioner p = StorageService . getPartitioner ( ) ; <nl> / / Calculate the expected compacted filesize <nl> long expectedRangeFileSize = getExpectedCompactedFileSize ( files ) ; <nl> / * in the worst case a node will be giving out half of its data so we take a chance * / <nl> @ @ - 1378 , 7 + 1376 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> / / if we are querying subcolumns of a supercolumn , fetch the supercolumn with NQF , then filter in - memory . <nl> if ( filter . path . superColumnName ! = null ) <nl> { <nl> - AbstractType comparator = DatabaseDescriptor . getComparator ( table _ , columnFamily _ ) ; <nl> QueryFilter nameFilter = new NamesQueryFilter ( filter . key , new QueryPath ( columnFamily _ ) , filter . path . superColumnName ) ; <nl> ColumnFamily cf = getColumnFamily ( nameFilter ) ; <nl> if ( cf ! = null ) <nl> diff - - git a / src / java / org / apache / cassandra / db / CommitLog . java b / src / java / org / apache / cassandra / db / CommitLog . java <nl> index 92d777e . . a82f762 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CommitLog . java <nl> + + + b / src / java / org / apache / cassandra / db / CommitLog . java <nl> @ @ - 101 , 13 + 101 , 6 @ @ public class CommitLog <nl> { <nl> return ( int ) ( getCreationTime ( f ) - getCreationTime ( f2 ) ) ; <nl> } <nl> - <nl> - public boolean equals ( Object o ) <nl> - { <nl> - if ( ! ( o instanceof CommitLogFileComparator ) ) <nl> - return false ; <nl> - return true ; <nl> - } <nl> } <nl> <nl> public static void setSegmentSize ( int size ) <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / BytesType . java b / src / java / org / apache / cassandra / db / marshal / BytesType . java <nl> index da5c070 . . 3633849 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / BytesType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / BytesType . java <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> package org . apache . cassandra . db . marshal ; <nl> <nl> + import java . util . Arrays ; <nl> + <nl> public class BytesType extends AbstractType <nl> { <nl> public int compare ( byte [ ] o1 , byte [ ] o2 ) <nl> @ @ - 28 , 6 + 30 , 6 @ @ public class BytesType extends AbstractType <nl> <nl> public String getString ( byte [ ] bytes ) <nl> { <nl> - return bytes . toString ( ) ; <nl> + return Arrays . toString ( bytes ) ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / LongType . java b / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> index a458274 . . efa3718 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> @ @ - 18 , 7 + 18 , 7 @ @ public class LongType extends AbstractType <nl> <nl> long L1 = ByteBuffer . wrap ( o1 ) . order ( ByteOrder . LITTLE _ ENDIAN ) . getLong ( ) ; <nl> long L2 = ByteBuffer . wrap ( o2 ) . order ( ByteOrder . LITTLE _ ENDIAN ) . getLong ( ) ; <nl> - return new Long ( L1 ) . compareTo ( L2 ) ; <nl> + return Long . valueOf ( L1 ) . compareTo ( Long . valueOf ( L2 ) ) ; <nl> } <nl> <nl> public String getString ( byte [ ] bytes ) <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java b / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java <nl> index f7c57f6 . . 6b3d16f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java <nl> @ @ - 1 , 7 + 1 , 6 @ @ <nl> package org . apache . cassandra . db . marshal ; <nl> <nl> import java . util . UUID ; <nl> - import java . nio . ByteBuffer ; <nl> <nl> public class TimeUUIDType extends AbstractType <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / dht / BootStrapper . java b / src / java / org / apache / cassandra / dht / BootStrapper . java <nl> index 7059cd9 . . 01e1766 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / BootStrapper . java <nl> + + + b / src / java / org / apache / cassandra / dht / BootStrapper . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> package org . apache . cassandra . dht ; <nl> <nl> import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . HashSet ; <nl> @ @ - 31 , 7 + 32 , 7 @ @ package org . apache . cassandra . dht ; <nl> import org . apache . cassandra . locator . TokenMetadata ; <nl> import org . apache . cassandra . net . EndPoint ; <nl> import org . apache . cassandra . service . StorageService ; <nl> - import org . apache . cassandra . utils . LogUtil ; <nl> + import org . apache . cassandra . utils . LogUtil ; <nl> <nl> <nl> / * * <nl> @ @ - 59 , 7 + 60 , 7 @ @ public class BootStrapper implements Runnable <nl> try <nl> { <nl> if ( logger _ . isDebugEnabled ( ) ) <nl> - logger _ . debug ( " Beginning bootstrap process for " + targets _ + " . . . " ) ; <nl> + logger _ . debug ( " Beginning bootstrap process for " + Arrays . toString ( targets _ ) + " . . . " ) ; <nl> / * copy the token to endpoint map * / <nl> Map < Token , EndPoint > tokenToEndPointMap = tokenMetadata _ . cloneTokenEndPointMap ( ) ; <nl> / * remove the tokens associated with the endpoints being bootstrapped * / <nl> diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadata . java b / src / java / org / apache / cassandra / dht / BootstrapMetadata . java <nl> index 34126b2 . . e7b09a7 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadata . java <nl> + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadata . java <nl> @ @ - 55 , 6 + 55 , 8 @ @ class BootstrapMetadata <nl> <nl> BootstrapMetadata ( EndPoint target , List < Range > ranges ) <nl> { <nl> + assert target _ ! = null ; <nl> + assert ranges _ ! = null ; <nl> target _ = target ; <nl> ranges _ = ranges ; <nl> } <nl> @ @ - 78 , 13 + 80 , 11 @ @ class BootstrapMetadataSerializer implements ICompactSerializer < BootstrapMetadat <nl> public void serialize ( BootstrapMetadata bsMetadata , DataOutputStream dos ) throws IOException <nl> { <nl> CompactEndPointSerializationHelper . serialize ( bsMetadata . target _ , dos ) ; <nl> - int size = ( bsMetadata . ranges _ = = null ) ? 0 : bsMetadata . ranges _ . size ( ) ; <nl> - dos . writeInt ( size ) ; <nl> - <nl> - for ( Range range : bsMetadata . ranges _ ) <nl> + dos . writeInt ( bsMetadata . ranges _ . size ( ) ) ; <nl> + for ( Range range : bsMetadata . ranges _ ) <nl> { <nl> Range . serializer ( ) . serialize ( range , dos ) ; <nl> - } <nl> + } <nl> } <nl> <nl> public BootstrapMetadata deserialize ( DataInputStream dis ) throws IOException <nl> diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java b / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java <nl> index 341d72e . . a786cab 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java <nl> + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java <nl> @ @ - 60 , 6 + 60 , 7 @ @ class BootstrapMetadataMessage <nl> <nl> BootstrapMetadataMessage ( BootstrapMetadata [ ] bsMetadata ) <nl> { <nl> + assert bsMetadata ! = null ; <nl> bsMetadata _ = bsMetadata ; <nl> } <nl> } <nl> @ @ - 69 , 9 + 70 , 8 @ @ class BootstrapMetadataMessageSerializer implements ICompactSerializer < Bootstrap <nl> public void serialize ( BootstrapMetadataMessage bsMetadataMessage , DataOutputStream dos ) throws IOException <nl> { <nl> BootstrapMetadata [ ] bsMetadata = bsMetadataMessage . bsMetadata _ ; <nl> - int size = ( bsMetadata = = null ) ? 0 : bsMetadata . length ; <nl> - dos . writeInt ( size ) ; <nl> - for ( BootstrapMetadata bsmd : bsMetadata ) <nl> + dos . writeInt ( bsMetadata . length ) ; <nl> + for ( BootstrapMetadata bsmd : bsMetadata ) <nl> { <nl> BootstrapMetadata . serializer ( ) . serialize ( bsmd , dos ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / ConsistencyManager . java b / src / java / org / apache / cassandra / service / ConsistencyManager . java <nl> index 94f9d3d . . 69c3296 100644 <nl> - - - a / src / java / org / apache / cassandra / service / ConsistencyManager . java <nl> + + + b / src / java / org / apache / cassandra / service / ConsistencyManager . java <nl> @ @ - 98 , 7 + 98 , 7 @ @ class ConsistencyManager implements Runnable <nl> 	 	 } <nl> 	 } <nl> 	 <nl> - 	 class DataRepairHandler implements IAsyncCallback , ICacheExpungeHook < String , String > <nl> + 	 static class DataRepairHandler implements IAsyncCallback , ICacheExpungeHook < String , String > <nl> 	 { <nl> 	 	 private List < Message > responses _ = new ArrayList < Message > ( ) ; <nl> 	 	 private IResponseResolver < Row > readResponseResolver _ ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / MembershipCleaner . java b / src / java / org / apache / cassandra / tools / MembershipCleaner . java <nl> index 28775f8 . . 71db3ee 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / MembershipCleaner . java <nl> + + + b / src / java / org / apache / cassandra / tools / MembershipCleaner . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public class MembershipCleaner <nl> { <nl> if ( args . length ! = 3 ) <nl> { <nl> - System . out . println ( " Usage : java com . facebook . infrastructure . tools . MembershipCleaner " + <nl> + System . out . println ( " Usage : java org . apache . cassandra . tools . MembershipCleaner " + <nl> " < ip : port to send the message > " + <nl> " < node which needs to be removed > " + <nl> " < file containing all nodes in the cluster > " ) ; <nl> @ @ - 82 , 7 + 82 , 6 @ @ public class MembershipCleaner <nl> public static class MembershipCleanerMessage implements Serializable <nl> { <nl> private static ICompactSerializer < MembershipCleanerMessage > serializer _ ; <nl> - private static AtomicInteger idGen _ = new AtomicInteger ( 0 ) ; <nl> <nl> static <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java b / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java <nl> index b34db74 . . 610b5e8 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java <nl> + + + b / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java <nl> @ @ - 69 , 7 + 69 , 7 @ @ public class MembershipCleanerVerbHandler implements IVerbHandler <nl> { <nl> if ( logger _ . isDebugEnabled ( ) ) <nl> logger _ . debug ( " Processing node " + node ) ; <nl> - byte [ ] bytes = headers . remove ( node ) ; <nl> + headers . remove ( node ) ; <nl> / * Send a message to this node to alter its membership state . * / <nl> EndPoint targetNode = new EndPoint ( node , DatabaseDescriptor . getStoragePort ( ) ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / utils / FileUtils . java b / src / java / org / apache / cassandra / utils / FileUtils . java <nl> index a29f2a8 . . 3110d04 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FileUtils . java <nl> + + + b / src / java / org / apache / cassandra / utils / FileUtils . java <nl> @ @ - 88 , 13 + 88 , 6 @ @ public class FileUtils <nl> { <nl> return ( int ) ( f . lastModified ( ) - f2 . lastModified ( ) ) ; <nl> } <nl> - <nl> - public boolean equals ( Object o ) <nl> - { <nl> - if ( ! ( o instanceof FileComparator ) ) <nl> - return false ; <nl> - return true ; <nl> - } <nl> } <nl> <nl> public static void createDirectory ( String directory ) throws IOException

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / UFMetaData . java b / src / java / org / apache / cassandra / config / UFMetaData . java 
 index 18484f3 . . f11d7ac 100644 
 - - - a / src / java / org / apache / cassandra / config / UFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / UFMetaData . java 
 @ @ - 208 , 7 + 208 , 6 @ @ public final class UFMetaData 
 } 
 
 public static Mutation createOrReplaceFunction ( long timestamp , UFMetaData f ) 
 - throws ConfigurationException , SyntaxException 
 { 
 Mutation mutation = new Mutation ( Keyspace . SYSTEM _ KS , partKey . decompose ( f . namespace , f . functionName ) ) ; 
 ColumnFamily cf = mutation . addOrGet ( SystemKeyspace . SCHEMA _ FUNCTIONS _ CF ) ; 
 diff - - git a / src / java / org / apache / cassandra / cql3 / Tuples . java b / src / java / org / apache / cassandra / cql3 / Tuples . java 
 index f0d7a13 . . cc04ebc 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / Tuples . java 
 + + + b / src / java / org / apache / cassandra / cql3 / Tuples . java 
 @ @ - 285 , 7 + 285 , 7 @ @ public class Tuples 
 super ( bindIndex ) ; 
 } 
 
 - private static ColumnSpecification makeReceiver ( List < ? extends ColumnSpecification > receivers ) throws InvalidRequestException 
 + private static ColumnSpecification makeReceiver ( List < ? extends ColumnSpecification > receivers ) 
 { 
 List < AbstractType < ? > > types = new ArrayList < > ( receivers . size ( ) ) ; 
 StringBuilder inName = new StringBuilder ( " ( " ) ; 
 diff - - git a / src / java / org / apache / cassandra / cql3 / functions / Functions . java b / src / java / org / apache / cassandra / cql3 / functions / Functions . java 
 index 03dd13d . . 977d242 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / functions / Functions . java 
 + + + b / src / java / org / apache / cassandra / cql3 / functions / Functions . java 
 @ @ - 137 , 7 + 137 , 7 @ @ public abstract class Functions 
 } 
 } 
 
 - private static boolean isValidType ( String keyspace , Function fun , List < ? extends AssignementTestable > providedArgs , ColumnSpecification receiver ) throws InvalidRequestException 
 + private static boolean isValidType ( String keyspace , Function fun , List < ? extends AssignementTestable > providedArgs , ColumnSpecification receiver ) 
 { 
 if ( ! receiver . type . isValueCompatibleWith ( fun . returnType ( ) ) ) 
 return false ; 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java 
 index c32f9a8 . . c4ab50e 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / ModificationStatement . java 
 @ @ - 178 , 7 + 178 , 7 @ @ public abstract class ModificationStatement implements CQLStatement , MeasurableF 
 staticConditions = = null ? Collections . < ColumnDefinition > emptyList ( ) : Iterables . transform ( staticConditions , getColumnForCondition ) ) ; 
 } 
 
 - public void addCondition ( ColumnCondition cond ) throws InvalidRequestException 
 + public void addCondition ( ColumnCondition cond ) 
 { 
 List < ColumnCondition > conds = null ; 
 if ( cond . column . isStatic ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 index 011419b . . ccfd09e 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 @ @ - 1282 , 7 + 1282 , 7 @ @ public class SelectStatement implements CQLStatement , MeasurableForPreparedCache 
 / * * 
 * Orders results when multiple keys are selected ( using IN ) 
 * / 
 - private void orderResults ( ResultSet cqlRows ) throws InvalidRequestException 
 + private void orderResults ( ResultSet cqlRows ) 
 { 
 if ( cqlRows . size ( ) = = 0 | | ! needsPostQueryOrdering ( ) ) 
 return ; 
 diff - - git a / src / java / org / apache / cassandra / cql3 / udf / UDFunction . java b / src / java / org / apache / cassandra / cql3 / udf / UDFunction . java 
 index 89f37d5 . . 61e52e5 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / udf / UDFunction . java 
 + + + b / src / java / org / apache / cassandra / cql3 / udf / UDFunction . java 
 @ @ - 113 , 7 + 113 , 7 @ @ public class UDFunction 
 } 
 } 
 
 - public Function create ( List < ? extends AssignementTestable > providedArgs ) throws InvalidRequestException 
 + public Function create ( List < ? extends AssignementTestable > providedArgs ) 
 { 
 final int argCount = providedArgs . size ( ) ; 
 final List < AbstractType < ? > > argsType = new ArrayList < > ( argCount ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / DefsTables . java b / src / java / org / apache / cassandra / db / DefsTables . java 
 index 33a112a . . e8692a7 100644 
 - - - a / src / java / org / apache / cassandra / db / DefsTables . java 
 + + + b / src / java / org / apache / cassandra / db / DefsTables . java 
 @ @ - 168 , 7 + 168 , 7 @ @ public class DefsTables 
 Schema . instance . updateVersionAndAnnounce ( ) ; 
 } 
 
 - public static synchronized void mergeSchemaInternal ( Collection < Mutation > mutations , boolean doFlush ) throws ConfigurationException , IOException 
 + public static synchronized void mergeSchemaInternal ( Collection < Mutation > mutations , boolean doFlush ) throws IOException 
 { 
 / / compare before / after schemas of the affected keyspaces only 
 Set < String > keyspaces = new HashSet < > ( mutations . size ( ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java 
 index 1eea915 . . 2e22113 100644 
 - - - a / src / java / org / apache / cassandra / db / Memtable . java 
 + + + b / src / java / org / apache / cassandra / db / Memtable . java 
 @ @ - 319 , 7 + 319 , 6 @ @ public class Memtable 
 } 
 
 private SSTableReader writeSortedContents ( ReplayPosition context , File sstableDirectory ) 
 - throws ExecutionException , InterruptedException 
 { 
 logger . info ( " Writing { } " , Memtable . this . toString ( ) ) ; 
 
 @ @ - 375 , 7 + 374 , 7 @ @ public class Memtable 
 } 
 } 
 
 - public SSTableWriter createFlushWriter ( String filename ) throws ExecutionException , InterruptedException 
 + public SSTableWriter createFlushWriter ( String filename ) 
 { 
 MetadataCollector sstableMetadataCollector = new MetadataCollector ( cfs . metadata . comparator ) . replayPosition ( context ) ; 
 return new SSTableWriter ( filename , 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index 5af7139 . . 247a0c1 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 396 , 7 + 396 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 public void performAnticompaction ( ColumnFamilyStore cfs , 
 Collection < Range < Token > > ranges , 
 Collection < SSTableReader > validatedForRepair , 
 - long repairedAt ) throws InterruptedException , ExecutionException , IOException 
 + long repairedAt ) throws InterruptedException , IOException 
 { 
 logger . info ( " Starting anticompaction for { } / { } " , cfs . keyspace . getName ( ) , cfs . getColumnFamilyName ( ) ) ; 
 logger . debug ( " Starting anticompaction for ranges { } " , ranges ) ; 
 diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 index 5bac2fc . . 9ad7d8c 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 @ @ - 89 , 7 + 89 , 7 @ @ class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , ByteB 
 this . context = context ; 
 } 
 
 - CqlRecordWriter ( Configuration conf , Progressable progressable ) throws IOException 
 + CqlRecordWriter ( Configuration conf , Progressable progressable ) 
 { 
 this ( conf ) ; 
 this . progressable = progressable ; 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 index 53f7e53 . . 433fdd7 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 @ @ - 1071 , 7 + 1071 , 7 @ @ public class SSTableReader extends SSTable 
 return indexSummary . getEffectiveIndexInterval ( ) ; 
 } 
 
 - public void releaseSummary ( ) throws IOException 
 + public void releaseSummary ( ) 
 { 
 indexSummary . close ( ) ; 
 indexSummary = null ; 
 diff - - git a / src / java / org / apache / cassandra / locator / CloudstackSnitch . java b / src / java / org / apache / cassandra / locator / CloudstackSnitch . java 
 index 0200f0f . . 9f98cff 100644 
 - - - a / src / java / org / apache / cassandra / locator / CloudstackSnitch . java 
 + + + b / src / java / org / apache / cassandra / locator / CloudstackSnitch . java 
 @ @ - 168 , 7 + 168 , 7 @ @ public class CloudstackSnitch extends AbstractNetworkTopologySnitch 
 throw new ConfigurationException ( " No valid DHCP lease file could be found . " ) ; 
 } 
 
 - String csEndpointFromLease ( File lease ) throws ConfigurationException , IOException 
 + String csEndpointFromLease ( File lease ) throws ConfigurationException 
 { 
 BufferedReader reader = null ; 
 
 diff - - git a / src / java / org / apache / cassandra / service / ActiveRepairService . java b / src / java / org / apache / cassandra / service / ActiveRepairService . java 
 index 35a86f6 . . f1b9cce 100644 
 - - - a / src / java / org / apache / cassandra / service / ActiveRepairService . java 
 + + + b / src / java / org / apache / cassandra / service / ActiveRepairService . java 
 @ @ - 18 , 7 + 18 , 6 @ @ 
 package org . apache . cassandra . service ; 
 
 import java . io . File ; 
 - import java . io . IOException ; 
 import java . net . InetAddress ; 
 import java . net . UnknownHostException ; 
 import java . util . * ; 
 @ @ - 33 , 7 + 32 , 6 @ @ import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . concurrent . JMXConfigurableThreadPoolExecutor ; 
 import org . apache . cassandra . concurrent . NamedThreadFactory ; 
 - import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . ColumnFamilyStore ; 
 import org . apache . cassandra . db . compaction . CompactionManager ; 
 import org . apache . cassandra . dht . Bounds ; 
 @ @ - 316 , 7 + 314 , 7 @ @ public class ActiveRepairService 
 parentRepairSessions . put ( parentRepairSession , new ParentRepairSession ( columnFamilyStores , ranges , sstablesToRepair , System . currentTimeMillis ( ) ) ) ; 
 } 
 
 - public void finishParentSession ( UUID parentSession , Set < InetAddress > neighbors , boolean doAntiCompaction ) throws InterruptedException , ExecutionException , IOException 
 + public void finishParentSession ( UUID parentSession , Set < InetAddress > neighbors , boolean doAntiCompaction ) 
 { 
 try 
 { 
 @ @ - 343 , 7 + 341 , 7 @ @ public class ActiveRepairService 
 return parentRepairSessions . get ( parentSessionId ) ; 
 } 
 
 - public List < Future < ? > > doAntiCompaction ( UUID parentRepairSession ) throws InterruptedException , ExecutionException , IOException 
 + public List < Future < ? > > doAntiCompaction ( UUID parentRepairSession ) 
 { 
 assert parentRepairSession ! = null ; 
 ParentRepairSession prs = getParentRepairSession ( parentRepairSession ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java 
 index 28e3e39 . . c203934 100644 
 - - - a / src / java / org / apache / cassandra / service / MigrationManager . java 
 + + + b / src / java / org / apache / cassandra / service / MigrationManager . java 
 @ @ - 384 , 7 + 384 , 7 @ @ public class MigrationManager 
 } 
 
 public static void announceNewFunction ( UFMetaData function , boolean announceLocally ) 
 - throws ConfigurationException , SyntaxException 
 + throws ConfigurationException 
 { 
 Mutation mutation = UFMetaData . createOrReplaceFunction ( FBUtilities . timestampMicros ( ) , function ) ; 
 if ( mutation = = null ) 
 @ @ - 406 , 7 + 406 , 7 @ @ public class MigrationManager 
 { 
 DefsTables . mergeSchemaInternal ( Collections . singletonList ( schema ) , false ) ; 
 } 
 - catch ( ConfigurationException | IOException e ) 
 + catch ( IOException e ) 
 { 
 throw new RuntimeException ( e ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / tools / SSTableLevelResetter . java b / src / java / org / apache / cassandra / tools / SSTableLevelResetter . java 
 index 7f7ce99 . . b83edae 100644 
 - - - a / src / java / org / apache / cassandra / tools / SSTableLevelResetter . java 
 + + + b / src / java / org / apache / cassandra / tools / SSTableLevelResetter . java 
 @ @ - 17 , 7 + 17 , 6 @ @ 
 * / 
 package org . apache . cassandra . tools ; 
 
 - import java . io . IOException ; 
 import java . io . PrintStream ; 
 import java . util . Map ; 
 import java . util . Set ; 
 @ @ - 39 , 7 + 38 , 7 @ @ public class SSTableLevelResetter 
 / * * 
 * @ param args a list of sstables whose metadata we are changing 
 * / 
 - public static void main ( String [ ] args ) throws IOException 
 + public static void main ( String [ ] args ) 
 { 
 PrintStream out = System . out ; 
 if ( args . length = = 0 ) 
 diff - - git a / src / java / org / apache / cassandra / tools / StandaloneSplitter . java b / src / java / org / apache / cassandra / tools / StandaloneSplitter . java 
 index f3725fd . . befe270 100644 
 - - - a / src / java / org / apache / cassandra / tools / StandaloneSplitter . java 
 + + + b / src / java / org / apache / cassandra / tools / StandaloneSplitter . java 
 @ @ - 45 , 7 + 45 , 7 @ @ public class StandaloneSplitter 
 private static final String NO _ SNAPSHOT _ OPTION = " no - snapshot " ; 
 private static final String SIZE _ OPTION = " size " ; 
 
 - public static void main ( String args [ ] ) throws IOException 
 + public static void main ( String args [ ] ) 
 { 
 Options options = Options . parseArgs ( args ) ; 
 try 
 diff - - git a / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java b / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java 
 index 5d8625b . . 1538efc 100644 
 - - - a / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java 
 + + + b / src / java / org / apache / cassandra / tools / StandaloneUpgrader . java 
 @ @ - 39 , 7 + 39 , 7 @ @ public class StandaloneUpgrader 
 private static final String DEBUG _ OPTION = " debug " ; 
 private static final String HELP _ OPTION = " help " ; 
 
 - public static void main ( String args [ ] ) throws IOException 
 + public static void main ( String args [ ] ) 
 { 
 Options options = Options . parseArgs ( args ) ; 
 try

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 8baf41f . . f5da722 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 57 , 7 + 57 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 private static Logger logger _ = Logger . getLogger ( ColumnFamilyStore . class ) ; 
 
 private static final int BUFSIZE = 128 * 1024 * 1024 ; 
 - private static final int COMPACTION _ MEMORY _ THRESHOLD = 1 < < 30 ; 
 
 private static NonBlockingHashMap < String , Set < Memtable > > memtablesPendingFlush = new NonBlockingHashMap < String , Set < Memtable > > ( ) ; 
 private static ExecutorService flusher _ = new DebuggableThreadPoolExecutor ( " MEMTABLE - FLUSHER - POOL " ) ; 
 @ @ - 902 , 7 + 901 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 long totalkeysWritten = 0 ; 
 String rangeFileLocation ; 
 String mergedFileName ; 
 - IPartitioner p = StorageService . getPartitioner ( ) ; 
 / / Calculate the expected compacted filesize 
 long expectedRangeFileSize = getExpectedCompactedFileSize ( files ) ; 
 / * in the worst case a node will be giving out half of its data so we take a chance * / 
 @ @ - 1378 , 7 + 1376 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 / / if we are querying subcolumns of a supercolumn , fetch the supercolumn with NQF , then filter in - memory . 
 if ( filter . path . superColumnName ! = null ) 
 { 
 - AbstractType comparator = DatabaseDescriptor . getComparator ( table _ , columnFamily _ ) ; 
 QueryFilter nameFilter = new NamesQueryFilter ( filter . key , new QueryPath ( columnFamily _ ) , filter . path . superColumnName ) ; 
 ColumnFamily cf = getColumnFamily ( nameFilter ) ; 
 if ( cf ! = null ) 
 diff - - git a / src / java / org / apache / cassandra / db / CommitLog . java b / src / java / org / apache / cassandra / db / CommitLog . java 
 index 92d777e . . a82f762 100644 
 - - - a / src / java / org / apache / cassandra / db / CommitLog . java 
 + + + b / src / java / org / apache / cassandra / db / CommitLog . java 
 @ @ - 101 , 13 + 101 , 6 @ @ public class CommitLog 
 { 
 return ( int ) ( getCreationTime ( f ) - getCreationTime ( f2 ) ) ; 
 } 
 - 
 - public boolean equals ( Object o ) 
 - { 
 - if ( ! ( o instanceof CommitLogFileComparator ) ) 
 - return false ; 
 - return true ; 
 - } 
 } 
 
 public static void setSegmentSize ( int size ) 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / BytesType . java b / src / java / org / apache / cassandra / db / marshal / BytesType . java 
 index da5c070 . . 3633849 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / BytesType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / BytesType . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package org . apache . cassandra . db . marshal ; 
 
 + import java . util . Arrays ; 
 + 
 public class BytesType extends AbstractType 
 { 
 public int compare ( byte [ ] o1 , byte [ ] o2 ) 
 @ @ - 28 , 6 + 30 , 6 @ @ public class BytesType extends AbstractType 
 
 public String getString ( byte [ ] bytes ) 
 { 
 - return bytes . toString ( ) ; 
 + return Arrays . toString ( bytes ) ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / LongType . java b / src / java / org / apache / cassandra / db / marshal / LongType . java 
 index a458274 . . efa3718 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / LongType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / LongType . java 
 @ @ - 18 , 7 + 18 , 7 @ @ public class LongType extends AbstractType 
 
 long L1 = ByteBuffer . wrap ( o1 ) . order ( ByteOrder . LITTLE _ ENDIAN ) . getLong ( ) ; 
 long L2 = ByteBuffer . wrap ( o2 ) . order ( ByteOrder . LITTLE _ ENDIAN ) . getLong ( ) ; 
 - return new Long ( L1 ) . compareTo ( L2 ) ; 
 + return Long . valueOf ( L1 ) . compareTo ( Long . valueOf ( L2 ) ) ; 
 } 
 
 public String getString ( byte [ ] bytes ) 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java b / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java 
 index f7c57f6 . . 6b3d16f 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java 
 @ @ - 1 , 7 + 1 , 6 @ @ 
 package org . apache . cassandra . db . marshal ; 
 
 import java . util . UUID ; 
 - import java . nio . ByteBuffer ; 
 
 public class TimeUUIDType extends AbstractType 
 { 
 diff - - git a / src / java / org / apache / cassandra / dht / BootStrapper . java b / src / java / org / apache / cassandra / dht / BootStrapper . java 
 index 7059cd9 . . 01e1766 100644 
 - - - a / src / java / org / apache / cassandra / dht / BootStrapper . java 
 + + + b / src / java / org / apache / cassandra / dht / BootStrapper . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 package org . apache . cassandra . dht ; 
 
 import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 import java . util . Collections ; 
 import java . util . HashMap ; 
 import java . util . HashSet ; 
 @ @ - 31 , 7 + 32 , 7 @ @ package org . apache . cassandra . dht ; 
 import org . apache . cassandra . locator . TokenMetadata ; 
 import org . apache . cassandra . net . EndPoint ; 
 import org . apache . cassandra . service . StorageService ; 
 - import org . apache . cassandra . utils . LogUtil ; 
 + import org . apache . cassandra . utils . LogUtil ; 
 
 
 / * * 
 @ @ - 59 , 7 + 60 , 7 @ @ public class BootStrapper implements Runnable 
 try 
 { 
 if ( logger _ . isDebugEnabled ( ) ) 
 - logger _ . debug ( " Beginning bootstrap process for " + targets _ + " . . . " ) ; 
 + logger _ . debug ( " Beginning bootstrap process for " + Arrays . toString ( targets _ ) + " . . . " ) ; 
 / * copy the token to endpoint map * / 
 Map < Token , EndPoint > tokenToEndPointMap = tokenMetadata _ . cloneTokenEndPointMap ( ) ; 
 / * remove the tokens associated with the endpoints being bootstrapped * / 
 diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadata . java b / src / java / org / apache / cassandra / dht / BootstrapMetadata . java 
 index 34126b2 . . e7b09a7 100644 
 - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadata . java 
 + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadata . java 
 @ @ - 55 , 6 + 55 , 8 @ @ class BootstrapMetadata 
 
 BootstrapMetadata ( EndPoint target , List < Range > ranges ) 
 { 
 + assert target _ ! = null ; 
 + assert ranges _ ! = null ; 
 target _ = target ; 
 ranges _ = ranges ; 
 } 
 @ @ - 78 , 13 + 80 , 11 @ @ class BootstrapMetadataSerializer implements ICompactSerializer < BootstrapMetadat 
 public void serialize ( BootstrapMetadata bsMetadata , DataOutputStream dos ) throws IOException 
 { 
 CompactEndPointSerializationHelper . serialize ( bsMetadata . target _ , dos ) ; 
 - int size = ( bsMetadata . ranges _ = = null ) ? 0 : bsMetadata . ranges _ . size ( ) ; 
 - dos . writeInt ( size ) ; 
 - 
 - for ( Range range : bsMetadata . ranges _ ) 
 + dos . writeInt ( bsMetadata . ranges _ . size ( ) ) ; 
 + for ( Range range : bsMetadata . ranges _ ) 
 { 
 Range . serializer ( ) . serialize ( range , dos ) ; 
 - } 
 + } 
 } 
 
 public BootstrapMetadata deserialize ( DataInputStream dis ) throws IOException 
 diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java b / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java 
 index 341d72e . . a786cab 100644 
 - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java 
 + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java 
 @ @ - 60 , 6 + 60 , 7 @ @ class BootstrapMetadataMessage 
 
 BootstrapMetadataMessage ( BootstrapMetadata [ ] bsMetadata ) 
 { 
 + assert bsMetadata ! = null ; 
 bsMetadata _ = bsMetadata ; 
 } 
 } 
 @ @ - 69 , 9 + 70 , 8 @ @ class BootstrapMetadataMessageSerializer implements ICompactSerializer < Bootstrap 
 public void serialize ( BootstrapMetadataMessage bsMetadataMessage , DataOutputStream dos ) throws IOException 
 { 
 BootstrapMetadata [ ] bsMetadata = bsMetadataMessage . bsMetadata _ ; 
 - int size = ( bsMetadata = = null ) ? 0 : bsMetadata . length ; 
 - dos . writeInt ( size ) ; 
 - for ( BootstrapMetadata bsmd : bsMetadata ) 
 + dos . writeInt ( bsMetadata . length ) ; 
 + for ( BootstrapMetadata bsmd : bsMetadata ) 
 { 
 BootstrapMetadata . serializer ( ) . serialize ( bsmd , dos ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / ConsistencyManager . java b / src / java / org / apache / cassandra / service / ConsistencyManager . java 
 index 94f9d3d . . 69c3296 100644 
 - - - a / src / java / org / apache / cassandra / service / ConsistencyManager . java 
 + + + b / src / java / org / apache / cassandra / service / ConsistencyManager . java 
 @ @ - 98 , 7 + 98 , 7 @ @ class ConsistencyManager implements Runnable 
 	 	 } 
 	 } 
 	 
 - 	 class DataRepairHandler implements IAsyncCallback , ICacheExpungeHook < String , String > 
 + 	 static class DataRepairHandler implements IAsyncCallback , ICacheExpungeHook < String , String > 
 	 { 
 	 	 private List < Message > responses _ = new ArrayList < Message > ( ) ; 
 	 	 private IResponseResolver < Row > readResponseResolver _ ; 
 diff - - git a / src / java / org / apache / cassandra / tools / MembershipCleaner . java b / src / java / org / apache / cassandra / tools / MembershipCleaner . java 
 index 28775f8 . . 71db3ee 100644 
 - - - a / src / java / org / apache / cassandra / tools / MembershipCleaner . java 
 + + + b / src / java / org / apache / cassandra / tools / MembershipCleaner . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public class MembershipCleaner 
 { 
 if ( args . length ! = 3 ) 
 { 
 - System . out . println ( " Usage : java com . facebook . infrastructure . tools . MembershipCleaner " + 
 + System . out . println ( " Usage : java org . apache . cassandra . tools . MembershipCleaner " + 
 " < ip : port to send the message > " + 
 " < node which needs to be removed > " + 
 " < file containing all nodes in the cluster > " ) ; 
 @ @ - 82 , 7 + 82 , 6 @ @ public class MembershipCleaner 
 public static class MembershipCleanerMessage implements Serializable 
 { 
 private static ICompactSerializer < MembershipCleanerMessage > serializer _ ; 
 - private static AtomicInteger idGen _ = new AtomicInteger ( 0 ) ; 
 
 static 
 { 
 diff - - git a / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java b / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java 
 index b34db74 . . 610b5e8 100644 
 - - - a / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java 
 + + + b / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java 
 @ @ - 69 , 7 + 69 , 7 @ @ public class MembershipCleanerVerbHandler implements IVerbHandler 
 { 
 if ( logger _ . isDebugEnabled ( ) ) 
 logger _ . debug ( " Processing node " + node ) ; 
 - byte [ ] bytes = headers . remove ( node ) ; 
 + headers . remove ( node ) ; 
 / * Send a message to this node to alter its membership state . * / 
 EndPoint targetNode = new EndPoint ( node , DatabaseDescriptor . getStoragePort ( ) ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / utils / FileUtils . java b / src / java / org / apache / cassandra / utils / FileUtils . java 
 index a29f2a8 . . 3110d04 100644 
 - - - a / src / java / org / apache / cassandra / utils / FileUtils . java 
 + + + b / src / java / org / apache / cassandra / utils / FileUtils . java 
 @ @ - 88 , 13 + 88 , 6 @ @ public class FileUtils 
 { 
 return ( int ) ( f . lastModified ( ) - f2 . lastModified ( ) ) ; 
 } 
 - 
 - public boolean equals ( Object o ) 
 - { 
 - if ( ! ( o instanceof FileComparator ) ) 
 - return false ; 
 - return true ; 
 - } 
 } 
 
 public static void createDirectory ( String directory ) throws IOException
