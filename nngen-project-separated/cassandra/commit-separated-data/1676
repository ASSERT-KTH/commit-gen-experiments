BLEU SCORE: 0.020980574531482755

TEST MSG: Fix partition - level - delete - only workload accounting
GENERATED MSG: count a row deletionas one operation towards memtable threshold

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4e7a5d0 . . dfdad51 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 15 : <nl> + * Fix partition - level - delete - only workload accounting ( CASSANDRA - 9194 ) <nl> * Allow scrub to handle corrupted compressed chunks ( CASSANDRA - 9140 ) <nl> * Fix assertion error when resetlocalschema is run during repair ( CASSANDRA - 9249 ) <nl> * Disable single sstable tombstone compactions for DTCS by default ( CASSANDRA - 9234 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java <nl> index 19f38be . . 897d94e 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Memtable . java <nl> + + + b / src / java / org / apache / cassandra / db / Memtable . java <nl> @ @ - 206 , 17 + 206 , 21 @ @ public class Memtable <nl> { <nl> AtomicSortedColumns previous = rows . get ( key ) ; <nl> <nl> + long initialSize = 0 ; <nl> if ( previous = = null ) <nl> { <nl> AtomicSortedColumns empty = cf . cloneMeShallow ( AtomicSortedColumns . factory , false ) ; <nl> / / We ' ll add the columns later . This avoids wasting works if we get beaten in the putIfAbsent <nl> previous = rows . putIfAbsent ( new DecoratedKey ( key . token , allocator . clone ( key . key ) ) , empty ) ; <nl> if ( previous = = null ) <nl> + { <nl> previous = empty ; <nl> + initialSize + = 1 ; <nl> + } <nl> } <nl> <nl> final Pair < Long , Long > pair = previous . addAllWithSizeDelta ( cf , allocator , localCopyFunction , indexer ) ; <nl> - currentSize . addAndGet ( pair . left ) ; <nl> + currentSize . addAndGet ( initialSize + pair . left ) ; <nl> currentOperations . addAndGet ( cf . getColumnCount ( ) + ( cf . isMarkedForDelete ( ) ? 1 : 0 ) + cf . deletionInfo ( ) . rangeCount ( ) ) ; <nl> return pair . right ; <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index bbbe82e . . 858e009 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 57 , 6 + 57 , 8 @ @ <nl> * use 64KB flush buffer instead of in _ memory _ compaction _ limit ( CASSANDRA - 2463 ) <nl> * fix duplicate results from CFS . scan ( CASSANDRA - 2406 ) <nl> * avoid caching token - only decoratedkeys ( CASSANDRA - 2416 ) <nl> + * count a row deletion as one operation towards memtable threshold <nl> + ( CASSANDRA - 2519 ) <nl> <nl> <nl> 0 . 7 . 4 <nl> diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java <nl> index cf48355 . . 2a05d05 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Memtable . java <nl> + + + b / src / java / org / apache / cassandra / db / Memtable . java <nl> @ @ - 208 , 7 + 208 , 9 @ @ public class Memtable implements Comparable < Memtable > , IFlushable <nl> private void resolve ( DecoratedKey key , ColumnFamily cf ) <nl> { <nl> currentThroughput . addAndGet ( cf . size ( ) ) ; <nl> - currentOperations . addAndGet ( cf . getColumnCount ( ) ) ; <nl> + currentOperations . addAndGet ( ( cf . getColumnCount ( ) = = 0 ) <nl> + ? cf . isMarkedForDelete ( ) ? 1 : 0 <nl> + : cf . getColumnCount ( ) ) ; <nl> <nl> ColumnFamily oldCf = columnFamilies . putIfAbsent ( key , cf ) ; <nl> if ( oldCf = = null )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4e7a5d0 . . dfdad51 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 15 : 
 + * Fix partition - level - delete - only workload accounting ( CASSANDRA - 9194 ) 
 * Allow scrub to handle corrupted compressed chunks ( CASSANDRA - 9140 ) 
 * Fix assertion error when resetlocalschema is run during repair ( CASSANDRA - 9249 ) 
 * Disable single sstable tombstone compactions for DTCS by default ( CASSANDRA - 9234 ) 
 diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java 
 index 19f38be . . 897d94e 100644 
 - - - a / src / java / org / apache / cassandra / db / Memtable . java 
 + + + b / src / java / org / apache / cassandra / db / Memtable . java 
 @ @ - 206 , 17 + 206 , 21 @ @ public class Memtable 
 { 
 AtomicSortedColumns previous = rows . get ( key ) ; 
 
 + long initialSize = 0 ; 
 if ( previous = = null ) 
 { 
 AtomicSortedColumns empty = cf . cloneMeShallow ( AtomicSortedColumns . factory , false ) ; 
 / / We ' ll add the columns later . This avoids wasting works if we get beaten in the putIfAbsent 
 previous = rows . putIfAbsent ( new DecoratedKey ( key . token , allocator . clone ( key . key ) ) , empty ) ; 
 if ( previous = = null ) 
 + { 
 previous = empty ; 
 + initialSize + = 1 ; 
 + } 
 } 
 
 final Pair < Long , Long > pair = previous . addAllWithSizeDelta ( cf , allocator , localCopyFunction , indexer ) ; 
 - currentSize . addAndGet ( pair . left ) ; 
 + currentSize . addAndGet ( initialSize + pair . left ) ; 
 currentOperations . addAndGet ( cf . getColumnCount ( ) + ( cf . isMarkedForDelete ( ) ? 1 : 0 ) + cf . deletionInfo ( ) . rangeCount ( ) ) ; 
 return pair . right ; 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index bbbe82e . . 858e009 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 57 , 6 + 57 , 8 @ @ 
 * use 64KB flush buffer instead of in _ memory _ compaction _ limit ( CASSANDRA - 2463 ) 
 * fix duplicate results from CFS . scan ( CASSANDRA - 2406 ) 
 * avoid caching token - only decoratedkeys ( CASSANDRA - 2416 ) 
 + * count a row deletion as one operation towards memtable threshold 
 + ( CASSANDRA - 2519 ) 
 
 
 0 . 7 . 4 
 diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java 
 index cf48355 . . 2a05d05 100644 
 - - - a / src / java / org / apache / cassandra / db / Memtable . java 
 + + + b / src / java / org / apache / cassandra / db / Memtable . java 
 @ @ - 208 , 7 + 208 , 9 @ @ public class Memtable implements Comparable < Memtable > , IFlushable 
 private void resolve ( DecoratedKey key , ColumnFamily cf ) 
 { 
 currentThroughput . addAndGet ( cf . size ( ) ) ; 
 - currentOperations . addAndGet ( cf . getColumnCount ( ) ) ; 
 + currentOperations . addAndGet ( ( cf . getColumnCount ( ) = = 0 ) 
 + ? cf . isMarkedForDelete ( ) ? 1 : 0 
 + : cf . getColumnCount ( ) ) ; 
 
 ColumnFamily oldCf = columnFamilies . putIfAbsent ( key , cf ) ; 
 if ( oldCf = = null )
