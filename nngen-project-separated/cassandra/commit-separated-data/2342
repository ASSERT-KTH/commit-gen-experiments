BLEU SCORE: 0.008268217007907877

TEST MSG: Fix compilation with java 6 ( JAVA - 7147 regression )
GENERATED MSG: validate UTF8 keys in legacy OPP and COPP . patch by Nick Bailey ; reviewed by Stu Hood and jbellis

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / locator / CloudstackSnitch . java b / src / java / org / apache / cassandra / locator / CloudstackSnitch . java <nl> index 57c973b . . eb671d7 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / CloudstackSnitch . java <nl> + + + b / src / java / org / apache / cassandra / locator / CloudstackSnitch . java <nl> @ @ - 27 , 7 + 27 , 6 @ @ import java . net . HttpURLConnection ; <nl> import java . net . InetAddress ; <nl> import java . net . URL ; <nl> import java . net . URI ; <nl> - import java . nio . charset . StandardCharsets ; <nl> import java . util . Map ; <nl> import java . util . regex . Pattern ; <nl> import java . util . regex . Matcher ; <nl> @ @ - 137 , 7 + 136 , 7 @ @ public class CloudstackSnitch extends AbstractNetworkTopologySnitch <nl> byte [ ] b = new byte [ cl ] ; <nl> is = new DataInputStream ( new BufferedInputStream ( conn . getInputStream ( ) ) ) ; <nl> is . readFully ( b ) ; <nl> - return new String ( b , StandardCharsets . UTF _ 8 ) ; <nl> + return new String ( b , FBUtilities . UTF _ 8 ) ; <nl> } <nl> finally <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / utils / ByteBufferUtil . java b / src / java / org / apache / cassandra / utils / ByteBufferUtil . java <nl> index 86f3f02 . . acc4885 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / ByteBufferUtil . java <nl> + + + b / src / java / org / apache / cassandra / utils / ByteBufferUtil . java <nl> @ @ - 74 , 7 + 74 , 6 @ @ import org . apache . cassandra . io . util . FileUtils ; <nl> * / <nl> public class ByteBufferUtil <nl> { <nl> - private static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; <nl> public static final ByteBuffer EMPTY _ BYTE _ BUFFER = ByteBuffer . wrap ( new byte [ 0 ] ) ; <nl> <nl> public static int compareUnsigned ( ByteBuffer o1 , ByteBuffer o2 ) <nl> @ @ - 121 , 7 + 120 , 7 @ @ public class ByteBufferUtil <nl> * / <nl> public static String string ( ByteBuffer buffer ) throws CharacterCodingException <nl> { <nl> - return string ( buffer , UTF _ 8 ) ; <nl> + return string ( buffer , FBUtilities . UTF _ 8 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 135 , 7 + 134 , 7 @ @ public class ByteBufferUtil <nl> * / <nl> public static String string ( ByteBuffer buffer , int position , int length ) throws CharacterCodingException <nl> { <nl> - return string ( buffer , position , length , UTF _ 8 ) ; <nl> + return string ( buffer , position , length , FBUtilities . UTF _ 8 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 228 , 7 + 227 , 7 @ @ public class ByteBufferUtil <nl> * / <nl> public static ByteBuffer bytes ( String s ) <nl> { <nl> - return ByteBuffer . wrap ( s . getBytes ( UTF _ 8 ) ) ; <nl> + return ByteBuffer . wrap ( s . getBytes ( FBUtilities . UTF _ 8 ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> index 8cb6dae . . 437b6a8 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import java . net . SocketException ; <nl> import java . net . URL ; <nl> import java . net . UnknownHostException ; <nl> import java . nio . ByteBuffer ; <nl> + import java . nio . charset . Charset ; <nl> import java . security . MessageDigest ; <nl> import java . security . NoSuchAlgorithmException ; <nl> import java . util . * ; <nl> @ @ - 63 , 6 + 64 , 8 @ @ import org . codehaus . jackson . map . ObjectMapper ; <nl> <nl> public class FBUtilities <nl> { <nl> + public static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; <nl> + <nl> private static final Logger logger = LoggerFactory . getLogger ( FBUtilities . class ) ; <nl> <nl> private static ObjectMapper jsonMapper = new ObjectMapper ( new JsonFactory ( ) ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / dht / CollatingOrderPreservingPartitioner . java b / src / java / org / apache / cassandra / dht / CollatingOrderPreservingPartitioner . java <nl> index 7fb9dd0 . . 76b878b 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / CollatingOrderPreservingPartitioner . java <nl> + + + b / src / java / org / apache / cassandra / dht / CollatingOrderPreservingPartitioner . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> package org . apache . cassandra . dht ; <nl> <nl> import java . math . BigInteger ; <nl> + import java . nio . charset . CharacterCodingException ; <nl> import java . text . Collator ; <nl> import java . util . Arrays ; <nl> import java . util . Comparator ; <nl> @ @ - 39 , 7 + 40 , 16 @ @ public class CollatingOrderPreservingPartitioner extends AbstractByteOrderedPart <nl> { <nl> if ( key . length = = 0 ) <nl> return MINIMUM ; <nl> - String skey = new String ( key , FBUtilities . UTF8 ) ; <nl> + <nl> + String skey ; <nl> + try <nl> + { <nl> + skey = FBUtilities . decodeToUTF8 ( key ) ; <nl> + } <nl> + catch ( CharacterCodingException e ) <nl> + { <nl> + throw new RuntimeException ( " The provided key was not UTF8 encoded . " , e ) ; <nl> + } <nl> return new BytesToken ( collator . getCollationKey ( skey ) . toByteArray ( ) ) ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / dht / OrderPreservingPartitioner . java b / src / java / org / apache / cassandra / dht / OrderPreservingPartitioner . java <nl> index 9e1522e . . 27aa614 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / OrderPreservingPartitioner . java <nl> + + + b / src / java / org / apache / cassandra / dht / OrderPreservingPartitioner . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . dht ; <nl> <nl> import java . io . UnsupportedEncodingException ; <nl> import java . math . BigInteger ; <nl> + import java . nio . charset . CharacterCodingException ; <nl> import java . util . Arrays ; <nl> import java . util . Comparator ; <nl> import java . util . Random ; <nl> @ @ - 163 , 6 + 164 , 15 @ @ public class OrderPreservingPartitioner implements IPartitioner < StringToken > <nl> <nl> public StringToken getToken ( byte [ ] key ) <nl> { <nl> - return new StringToken ( new String ( key , FBUtilities . UTF8 ) ) ; <nl> + String skey ; <nl> + try <nl> + { <nl> + skey = FBUtilities . decodeToUTF8 ( key ) ; <nl> + } <nl> + catch ( CharacterCodingException e ) <nl> + { <nl> + throw new RuntimeException ( " The provided key was not UTF8 encoded . " , e ) ; <nl> + } <nl> + return new StringToken ( skey ) ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> index e6fce1f . . e2ffb2f 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> @ @ - 27 , 7 + 27 , 9 @ @ import java . net . InetAddress ; <nl> import java . net . URL ; <nl> import java . net . UnknownHostException ; <nl> import java . nio . ByteBuffer ; <nl> + import java . nio . charset . CharacterCodingException ; <nl> import java . nio . charset . Charset ; <nl> + import java . nio . charset . CharsetDecoder ; <nl> import java . security . MessageDigest ; <nl> import java . util . Arrays ; <nl> import java . util . Collections ; <nl> @ @ - 37 , 6 + 39 , 7 @ @ import java . util . concurrent . atomic . AtomicInteger ; <nl> import java . util . concurrent . atomic . AtomicLong ; <nl> import java . util . concurrent . atomic . AtomicReference ; <nl> <nl> + import com . google . common . base . Charsets ; <nl> import org . apache . commons . collections . iterators . CollatingIterator ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> @ @ - 63 , 6 + 66 , 7 @ @ public class FBUtilities <nl> private static volatile InetAddress localInetAddress _ ; <nl> <nl> public static final int MAX _ UNSIGNED _ SHORT = 0xFFFF ; <nl> + public static final CharsetDecoder utf8Decoder = Charsets . UTF _ 8 . newDecoder ( ) ; <nl> <nl> public static Charset UTF8 ; <nl> static <nl> @ @ - 480 , 6 + 484 , 11 @ @ public class FBUtilities <nl> return utflen ; <nl> } <nl> <nl> + public static String decodeToUTF8 ( byte [ ] bytes ) throws CharacterCodingException <nl> + { <nl> + return utf8Decoder . decode ( ByteBuffer . wrap ( bytes ) ) . toString ( ) ; <nl> + } <nl> + <nl> / * * <nl> * Test if a particular bit is set using a bit mask . <nl> * <nl> diff - - git a / test / unit / org / apache / cassandra / utils / FBUtilitiesTest . java b / test / unit / org / apache / cassandra / utils / FBUtilitiesTest . java <nl> index 216f41d . . 7ad79b7 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / FBUtilitiesTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / FBUtilitiesTest . java <nl> @ @ - 21 , 6 + 21 , 8 @ @ package org . apache . cassandra . utils ; <nl> import static org . junit . Assert . assertArrayEquals ; <nl> import static org . junit . Assert . assertEquals ; <nl> <nl> + import java . io . IOException ; <nl> + import java . nio . charset . CharacterCodingException ; <nl> import java . util . concurrent . atomic . AtomicReference ; <nl> <nl> import org . apache . cassandra . db . IClock ; <nl> @ @ - 80 , 4 + 82 , 11 @ @ public class FBUtilitiesTest <nl> FBUtilities . atomicSetMax ( atomicClock , new TimestampClock ( 3L ) ) ; <nl> assert ( ( TimestampClock ) atomicClock . get ( ) ) . timestamp ( ) = = 9L ; <nl> } <nl> + <nl> + @ Test ( expected = CharacterCodingException . class ) <nl> + public void testDecode ( ) throws IOException <nl> + { <nl> + byte [ ] bytes = new byte [ ] { ( byte ) 0xff , ( byte ) 0xfe } ; <nl> + FBUtilities . decodeToUTF8 ( bytes ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / locator / CloudstackSnitch . java b / src / java / org / apache / cassandra / locator / CloudstackSnitch . java 
 index 57c973b . . eb671d7 100644 
 - - - a / src / java / org / apache / cassandra / locator / CloudstackSnitch . java 
 + + + b / src / java / org / apache / cassandra / locator / CloudstackSnitch . java 
 @ @ - 27 , 7 + 27 , 6 @ @ import java . net . HttpURLConnection ; 
 import java . net . InetAddress ; 
 import java . net . URL ; 
 import java . net . URI ; 
 - import java . nio . charset . StandardCharsets ; 
 import java . util . Map ; 
 import java . util . regex . Pattern ; 
 import java . util . regex . Matcher ; 
 @ @ - 137 , 7 + 136 , 7 @ @ public class CloudstackSnitch extends AbstractNetworkTopologySnitch 
 byte [ ] b = new byte [ cl ] ; 
 is = new DataInputStream ( new BufferedInputStream ( conn . getInputStream ( ) ) ) ; 
 is . readFully ( b ) ; 
 - return new String ( b , StandardCharsets . UTF _ 8 ) ; 
 + return new String ( b , FBUtilities . UTF _ 8 ) ; 
 } 
 finally 
 { 
 diff - - git a / src / java / org / apache / cassandra / utils / ByteBufferUtil . java b / src / java / org / apache / cassandra / utils / ByteBufferUtil . java 
 index 86f3f02 . . acc4885 100644 
 - - - a / src / java / org / apache / cassandra / utils / ByteBufferUtil . java 
 + + + b / src / java / org / apache / cassandra / utils / ByteBufferUtil . java 
 @ @ - 74 , 7 + 74 , 6 @ @ import org . apache . cassandra . io . util . FileUtils ; 
 * / 
 public class ByteBufferUtil 
 { 
 - private static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; 
 public static final ByteBuffer EMPTY _ BYTE _ BUFFER = ByteBuffer . wrap ( new byte [ 0 ] ) ; 
 
 public static int compareUnsigned ( ByteBuffer o1 , ByteBuffer o2 ) 
 @ @ - 121 , 7 + 120 , 7 @ @ public class ByteBufferUtil 
 * / 
 public static String string ( ByteBuffer buffer ) throws CharacterCodingException 
 { 
 - return string ( buffer , UTF _ 8 ) ; 
 + return string ( buffer , FBUtilities . UTF _ 8 ) ; 
 } 
 
 / * * 
 @ @ - 135 , 7 + 134 , 7 @ @ public class ByteBufferUtil 
 * / 
 public static String string ( ByteBuffer buffer , int position , int length ) throws CharacterCodingException 
 { 
 - return string ( buffer , position , length , UTF _ 8 ) ; 
 + return string ( buffer , position , length , FBUtilities . UTF _ 8 ) ; 
 } 
 
 / * * 
 @ @ - 228 , 7 + 227 , 7 @ @ public class ByteBufferUtil 
 * / 
 public static ByteBuffer bytes ( String s ) 
 { 
 - return ByteBuffer . wrap ( s . getBytes ( UTF _ 8 ) ) ; 
 + return ByteBuffer . wrap ( s . getBytes ( FBUtilities . UTF _ 8 ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 index 8cb6dae . . 437b6a8 100644 
 - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java 
 + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import java . net . SocketException ; 
 import java . net . URL ; 
 import java . net . UnknownHostException ; 
 import java . nio . ByteBuffer ; 
 + import java . nio . charset . Charset ; 
 import java . security . MessageDigest ; 
 import java . security . NoSuchAlgorithmException ; 
 import java . util . * ; 
 @ @ - 63 , 6 + 64 , 8 @ @ import org . codehaus . jackson . map . ObjectMapper ; 
 
 public class FBUtilities 
 { 
 + public static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; 
 + 
 private static final Logger logger = LoggerFactory . getLogger ( FBUtilities . class ) ; 
 
 private static ObjectMapper jsonMapper = new ObjectMapper ( new JsonFactory ( ) ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / dht / CollatingOrderPreservingPartitioner . java b / src / java / org / apache / cassandra / dht / CollatingOrderPreservingPartitioner . java 
 index 7fb9dd0 . . 76b878b 100644 
 - - - a / src / java / org / apache / cassandra / dht / CollatingOrderPreservingPartitioner . java 
 + + + b / src / java / org / apache / cassandra / dht / CollatingOrderPreservingPartitioner . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 package org . apache . cassandra . dht ; 
 
 import java . math . BigInteger ; 
 + import java . nio . charset . CharacterCodingException ; 
 import java . text . Collator ; 
 import java . util . Arrays ; 
 import java . util . Comparator ; 
 @ @ - 39 , 7 + 40 , 16 @ @ public class CollatingOrderPreservingPartitioner extends AbstractByteOrderedPart 
 { 
 if ( key . length = = 0 ) 
 return MINIMUM ; 
 - String skey = new String ( key , FBUtilities . UTF8 ) ; 
 + 
 + String skey ; 
 + try 
 + { 
 + skey = FBUtilities . decodeToUTF8 ( key ) ; 
 + } 
 + catch ( CharacterCodingException e ) 
 + { 
 + throw new RuntimeException ( " The provided key was not UTF8 encoded . " , e ) ; 
 + } 
 return new BytesToken ( collator . getCollationKey ( skey ) . toByteArray ( ) ) ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / dht / OrderPreservingPartitioner . java b / src / java / org / apache / cassandra / dht / OrderPreservingPartitioner . java 
 index 9e1522e . . 27aa614 100644 
 - - - a / src / java / org / apache / cassandra / dht / OrderPreservingPartitioner . java 
 + + + b / src / java / org / apache / cassandra / dht / OrderPreservingPartitioner . java 
 @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . dht ; 
 
 import java . io . UnsupportedEncodingException ; 
 import java . math . BigInteger ; 
 + import java . nio . charset . CharacterCodingException ; 
 import java . util . Arrays ; 
 import java . util . Comparator ; 
 import java . util . Random ; 
 @ @ - 163 , 6 + 164 , 15 @ @ public class OrderPreservingPartitioner implements IPartitioner < StringToken > 
 
 public StringToken getToken ( byte [ ] key ) 
 { 
 - return new StringToken ( new String ( key , FBUtilities . UTF8 ) ) ; 
 + String skey ; 
 + try 
 + { 
 + skey = FBUtilities . decodeToUTF8 ( key ) ; 
 + } 
 + catch ( CharacterCodingException e ) 
 + { 
 + throw new RuntimeException ( " The provided key was not UTF8 encoded . " , e ) ; 
 + } 
 + return new StringToken ( skey ) ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 index e6fce1f . . e2ffb2f 100644 
 - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java 
 + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 @ @ - 27 , 7 + 27 , 9 @ @ import java . net . InetAddress ; 
 import java . net . URL ; 
 import java . net . UnknownHostException ; 
 import java . nio . ByteBuffer ; 
 + import java . nio . charset . CharacterCodingException ; 
 import java . nio . charset . Charset ; 
 + import java . nio . charset . CharsetDecoder ; 
 import java . security . MessageDigest ; 
 import java . util . Arrays ; 
 import java . util . Collections ; 
 @ @ - 37 , 6 + 39 , 7 @ @ import java . util . concurrent . atomic . AtomicInteger ; 
 import java . util . concurrent . atomic . AtomicLong ; 
 import java . util . concurrent . atomic . AtomicReference ; 
 
 + import com . google . common . base . Charsets ; 
 import org . apache . commons . collections . iterators . CollatingIterator ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 @ @ - 63 , 6 + 66 , 7 @ @ public class FBUtilities 
 private static volatile InetAddress localInetAddress _ ; 
 
 public static final int MAX _ UNSIGNED _ SHORT = 0xFFFF ; 
 + public static final CharsetDecoder utf8Decoder = Charsets . UTF _ 8 . newDecoder ( ) ; 
 
 public static Charset UTF8 ; 
 static 
 @ @ - 480 , 6 + 484 , 11 @ @ public class FBUtilities 
 return utflen ; 
 } 
 
 + public static String decodeToUTF8 ( byte [ ] bytes ) throws CharacterCodingException 
 + { 
 + return utf8Decoder . decode ( ByteBuffer . wrap ( bytes ) ) . toString ( ) ; 
 + } 
 + 
 / * * 
 * Test if a particular bit is set using a bit mask . 
 * 
 diff - - git a / test / unit / org / apache / cassandra / utils / FBUtilitiesTest . java b / test / unit / org / apache / cassandra / utils / FBUtilitiesTest . java 
 index 216f41d . . 7ad79b7 100644 
 - - - a / test / unit / org / apache / cassandra / utils / FBUtilitiesTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / FBUtilitiesTest . java 
 @ @ - 21 , 6 + 21 , 8 @ @ package org . apache . cassandra . utils ; 
 import static org . junit . Assert . assertArrayEquals ; 
 import static org . junit . Assert . assertEquals ; 
 
 + import java . io . IOException ; 
 + import java . nio . charset . CharacterCodingException ; 
 import java . util . concurrent . atomic . AtomicReference ; 
 
 import org . apache . cassandra . db . IClock ; 
 @ @ - 80 , 4 + 82 , 11 @ @ public class FBUtilitiesTest 
 FBUtilities . atomicSetMax ( atomicClock , new TimestampClock ( 3L ) ) ; 
 assert ( ( TimestampClock ) atomicClock . get ( ) ) . timestamp ( ) = = 9L ; 
 } 
 + 
 + @ Test ( expected = CharacterCodingException . class ) 
 + public void testDecode ( ) throws IOException 
 + { 
 + byte [ ] bytes = new byte [ ] { ( byte ) 0xff , ( byte ) 0xfe } ; 
 + FBUtilities . decodeToUTF8 ( bytes ) ; 
 + } 
 }
