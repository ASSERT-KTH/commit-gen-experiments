BLEU SCORE: 0.07495553473355841

TEST MSG: Swap all references to 3 . 0 with 2 . 2
GENERATED MSG: merge from 1 . 0

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1c8be70 . . e83b385 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - 3 . 0 <nl> + 2 . 2 <nl> * Allow roles cache to be invalidated ( CASSANDRA - 8967 ) <nl> * Upgrade Snappy ( CASSANDRA - 9063 ) <nl> * Don ' t start Thrift rpc by default ( CASSANDRA - 9319 ) <nl> diff - - git a / NEWS . txt b / NEWS . txt <nl> index 1358c35 . . c16b55a 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 13 , 7 + 13 , 7 @ @ restore snapshots created with the previous major version using the <nl> ' sstableloader ' tool . You can upgrade the file format of your snapshots <nl> using the provided ' sstableupgrade ' tool . <nl> <nl> - 3 . 0 <nl> + 2 . 2 <nl> = = = <nl> <nl> New features <nl> diff - - git a / build . xml b / build . xml <nl> index bdcb33c . . f613478 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 25 , 7 + 25 , 7 @ @ <nl> < property name = " debuglevel " value = " source , lines , vars " / > <nl> <nl> < ! - - default version and SCM information - - > <nl> - < property name = " base . version " value = " 3 . 0 . 0 " / > <nl> + < property name = " base . version " value = " 2 . 2 . 0 " / > <nl> < property name = " scm . connection " value = " scm : git : / / git . apache . org / cassandra . git " / > <nl> < property name = " scm . developerConnection " value = " scm : git : / / git . apache . org / cassandra . git " / > <nl> < property name = " scm . url " value = " http : / / git - wip - us . apache . org / repos / asf ? p = cassandra . git ; a = tree " / > <nl> diff - - git a / interface / cassandra . thrift b / interface / cassandra . thrift <nl> index 0af7e64 . . f5041c8 100644 <nl> - - - a / interface / cassandra . thrift <nl> + + + b / interface / cassandra . thrift <nl> @ @ - 884 , 7 + 884 , 7 @ @ service Cassandra { <nl> <nl> <nl> / * * <nl> - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . <nl> + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . <nl> * / <nl> CqlResult execute _ cql _ query ( 1 : required binary query , 2 : required Compression compression ) <nl> throws ( 1 : InvalidRequestException ire , <nl> @ @ - 904 , 7 + 904 , 7 @ @ service Cassandra { <nl> <nl> <nl> / * * <nl> - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . <nl> + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . <nl> * / <nl> CqlPreparedResult prepare _ cql _ query ( 1 : required binary query , 2 : required Compression compression ) <nl> throws ( 1 : InvalidRequestException ire ) <nl> @ @ - 920 , 7 + 920 , 7 @ @ service Cassandra { <nl> <nl> <nl> / * * <nl> - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . <nl> + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . <nl> * / <nl> CqlResult execute _ prepared _ cql _ query ( 1 : required i32 itemId , 2 : required list < binary > values ) <nl> throws ( 1 : InvalidRequestException ire , <nl> diff - - git a / interface / thrift / gen - java / org / apache / cassandra / thrift / Cassandra . java b / interface / thrift / gen - java / org / apache / cassandra / thrift / Cassandra . java <nl> index bf15559 . . cd4314b 100644 <nl> - - - a / interface / thrift / gen - java / org / apache / cassandra / thrift / Cassandra . java <nl> + + + b / interface / thrift / gen - java / org / apache / cassandra / thrift / Cassandra . java <nl> @ @ - 386 , 7 + 386 , 7 @ @ public class Cassandra { <nl> public String system _ update _ column _ family ( CfDef cf _ def ) throws InvalidRequestException , SchemaDisagreementException , org . apache . thrift . TException ; <nl> <nl> / * * <nl> - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . <nl> + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . <nl> * <nl> * @ param query <nl> * @ param compression <nl> @ @ - 404 , 7 + 404 , 7 @ @ public class Cassandra { <nl> public CqlResult execute _ cql3 _ query ( ByteBuffer query , Compression compression , ConsistencyLevel consistency ) throws InvalidRequestException , UnavailableException , TimedOutException , SchemaDisagreementException , org . apache . thrift . TException ; <nl> <nl> / * * <nl> - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . <nl> + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . <nl> * <nl> * @ param query <nl> * @ param compression <nl> @ @ - 423 , 7 + 423 , 7 @ @ public class Cassandra { <nl> public CqlPreparedResult prepare _ cql3 _ query ( ByteBuffer query , Compression compression ) throws InvalidRequestException , org . apache . thrift . TException ; <nl> <nl> / * * <nl> - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . <nl> + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . <nl> * <nl> * @ param itemId <nl> * @ param values <nl> diff - - git a / src / java / org / apache / cassandra / auth / IAuthorizer . java b / src / java / org / apache / cassandra / auth / IAuthorizer . java <nl> index 21b64dc . . 01c05af 100644 <nl> - - - a / src / java / org / apache / cassandra / auth / IAuthorizer . java <nl> + + + b / src / java / org / apache / cassandra / auth / IAuthorizer . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public interface IAuthorizer <nl> { <nl> / * * <nl> * Returns a set of permissions of a user on a resource . <nl> - * Since Roles were introduced in version 3 . 0 , Cassandra does not distinguish in any <nl> + * Since Roles were introduced in version 2 . 2 , Cassandra does not distinguish in any <nl> * meaningful way between users and roles . A role may or may not have login privileges <nl> * and roles may be granted to other roles . In fact , Cassandra does not really have the <nl> * concept of a user , except to link a client session to role . AuthenticatedUser can be <nl> diff - - git a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java <nl> index 6803e21 . . 87bc073 100644 <nl> - - - a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java <nl> + + + b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ import static org . apache . cassandra . auth . CassandraRoleManager . consistencyForRole ; <nl> * PasswordAuthenticator is an IAuthenticator implementation <nl> * that keeps credentials ( rolenames and bcrypt - hashed passwords ) <nl> * internally in C * - in system _ auth . roles CQL3 table . <nl> - * Since 3 . 0 , the management of roles ( creation , modification , <nl> + * Since 2 . 2 , the management of roles ( creation , modification , <nl> * querying etc is the responsibility of IRoleManager . Use of <nl> * PasswordAuthenticator requires the use of CassandraRoleManager <nl> * for storage and retrieval of encrypted passwords . <nl> diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> index 6b4bb73 . . 6e754a4 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> @ @ - 1119 , 7 + 1119 , 7 @ @ public final class SystemKeyspace <nl> try <nl> { <nl> DataOutputBuffer out = new DataOutputBuffer ( ) ; <nl> - Range . tokenSerializer . serialize ( range , out , MessagingService . VERSION _ 30 ) ; <nl> + Range . tokenSerializer . serialize ( range , out , MessagingService . VERSION _ 22 ) ; <nl> return out . buffer ( ) ; <nl> } <nl> catch ( IOException e ) <nl> @ @ - 1135 , 7 + 1135 , 7 @ @ public final class SystemKeyspace <nl> { <nl> return ( Range < Token > ) Range . tokenSerializer . deserialize ( ByteStreams . newDataInput ( ByteBufferUtil . getArray ( rawRange ) ) , <nl> partitioner , <nl> - MessagingService . VERSION _ 30 ) ; <nl> + MessagingService . VERSION _ 22 ) ; <nl> } <nl> catch ( IOException e ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogArchiver . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogArchiver . java <nl> index c795d66 . . 27abae3 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogArchiver . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogArchiver . java <nl> @ @ - 212 , 7 + 212 , 7 @ @ public class CommitLogArchiver <nl> descriptor = fromHeader ; <nl> else descriptor = fromName ; <nl> <nl> - if ( descriptor . version > CommitLogDescriptor . VERSION _ 30 ) <nl> + if ( descriptor . version > CommitLogDescriptor . VERSION _ 22 ) <nl> throw new IllegalStateException ( " Unsupported commit log version : " + descriptor . version ) ; <nl> <nl> if ( descriptor . compression ! = null ) { <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogDescriptor . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogDescriptor . java <nl> index c872677 . . c4728fd 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogDescriptor . java <nl> @ @ - 36 , 7 + 36 , 6 @ @ import com . google . common . annotations . VisibleForTesting ; <nl> import com . google . common . base . Objects ; <nl> import com . github . tjake . ICRC32 ; <nl> <nl> - import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . config . ParameterizedClass ; <nl> import org . apache . cassandra . exceptions . ConfigurationException ; <nl> import org . apache . cassandra . io . FSReadError ; <nl> @ @ - 57 , 13 + 56 , 13 @ @ public class CommitLogDescriptor <nl> public static final int VERSION _ 12 = 2 ; <nl> public static final int VERSION _ 20 = 3 ; <nl> public static final int VERSION _ 21 = 4 ; <nl> - public static final int VERSION _ 30 = 5 ; <nl> + public static final int VERSION _ 22 = 5 ; <nl> / * * <nl> * Increment this number if there is a changes in the commit log disc layout or MessagingVersion changes . <nl> * Note : make sure to handle { @ link # getMessagingVersion ( ) } <nl> * / <nl> @ VisibleForTesting <nl> - public static final int current _ version = VERSION _ 30 ; <nl> + public static final int current _ version = VERSION _ 22 ; <nl> <nl> final int version ; <nl> public final long id ; <nl> @ @ - 89 , 7 + 88 , 7 @ @ public class CommitLogDescriptor <nl> out . putLong ( descriptor . id ) ; <nl> crc . updateInt ( ( int ) ( descriptor . id & 0xFFFFFFFFL ) ) ; <nl> crc . updateInt ( ( int ) ( descriptor . id > > > 32 ) ) ; <nl> - if ( descriptor . version > = VERSION _ 30 ) { <nl> + if ( descriptor . version > = VERSION _ 22 ) { <nl> String parametersString = constructParametersString ( descriptor ) ; <nl> byte [ ] parametersBytes = parametersString . getBytes ( StandardCharsets . UTF _ 8 ) ; <nl> if ( parametersBytes . length ! = ( ( ( short ) parametersBytes . length ) & 0xFFFF ) ) <nl> @ @ - 142 , 7 + 141 , 7 @ @ public class CommitLogDescriptor <nl> checkcrc . updateInt ( ( int ) ( id & 0xFFFFFFFFL ) ) ; <nl> checkcrc . updateInt ( ( int ) ( id > > > 32 ) ) ; <nl> int parametersLength = 0 ; <nl> - if ( version > = VERSION _ 30 ) { <nl> + if ( version > = VERSION _ 22 ) { <nl> parametersLength = input . readShort ( ) & 0xFFFF ; <nl> checkcrc . updateInt ( parametersLength ) ; <nl> } <nl> @ @ - 194 , 8 + 193 , 8 @ @ public class CommitLogDescriptor <nl> return MessagingService . VERSION _ 20 ; <nl> case VERSION _ 21 : <nl> return MessagingService . VERSION _ 21 ; <nl> - case VERSION _ 30 : <nl> - return MessagingService . VERSION _ 30 ; <nl> + case VERSION _ 22 : <nl> + return MessagingService . VERSION _ 22 ; <nl> default : <nl> throw new IllegalStateException ( " Unknown commitlog version " + version ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / format / big / BigFormat . java b / src / java / org / apache / cassandra / io / sstable / format / big / BigFormat . java <nl> index e1a5622 . . a1e32cf 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / format / big / BigFormat . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / format / big / BigFormat . java <nl> @ @ - 134 , 7 + 134 , 7 @ @ public class BigFormat implements SSTableFormat <nl> / / index summaries can be downsampled and the sampling level is persisted <nl> / / switch uncompressed checksums to adler32 <nl> / / tracks presense of legacy ( local and remote ) counter shards <nl> - / / la ( 3 . 0 . 0 ) : new file name format <nl> + / / la ( 2 . 2 . 0 ) : new file name format <nl> <nl> private final boolean isLatestVersion ; <nl> private final boolean hasSamplingLevel ; <nl> diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index a7346f3 . . c54d5ee 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 80 , 8 + 80 , 8 @ @ public final class MessagingService implements MessagingServiceMBean <nl> public static final int VERSION _ 12 = 6 ; <nl> public static final int VERSION _ 20 = 7 ; <nl> public static final int VERSION _ 21 = 8 ; <nl> - public static final int VERSION _ 30 = 9 ; <nl> - public static final int current _ version = VERSION _ 30 ; <nl> + public static final int VERSION _ 22 = 9 ; <nl> + public static final int current _ version = VERSION _ 22 ; <nl> <nl> public static final String FAILURE _ CALLBACK _ PARAM = " CAL _ BAC " ; <nl> public static final byte [ ] ONE _ BYTE = new byte [ 1 ] ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index be7361b . . c0ea872 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1758 , 7 + 1758 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> <nl> private boolean isRpcReady ( InetAddress endpoint ) <nl> { <nl> - return MessagingService . instance ( ) . getVersion ( endpoint ) < MessagingService . VERSION _ 30 | | <nl> + return MessagingService . instance ( ) . getVersion ( endpoint ) < MessagingService . VERSION _ 22 | | <nl> Gossiper . instance . getEndpointStateForEndpoint ( endpoint ) . isRpcReady ( ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / streaming / messages / FileMessageHeader . java b / src / java / org / apache / cassandra / streaming / messages / FileMessageHeader . java <nl> index 5266e45 . . e9c99fe 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / messages / FileMessageHeader . java <nl> + + + b / src / java / org / apache / cassandra / streaming / messages / FileMessageHeader . java <nl> @ @ - 137 , 10 + 137 , 10 @ @ public class FileMessageHeader <nl> out . writeUTF ( header . version ) ; <nl> <nl> / / We can ' t stream to a node that doesn ' t understand a new sstable format <nl> - if ( version < StreamMessage . VERSION _ 30 & & header . format ! = SSTableFormat . Type . LEGACY & & header . format ! = SSTableFormat . Type . BIG ) <nl> - throw new UnsupportedOperationException ( " Can ' t stream non - legacy sstables to nodes < 3 . 0 " ) ; <nl> + if ( version < StreamMessage . VERSION _ 22 & & header . format ! = SSTableFormat . Type . LEGACY & & header . format ! = SSTableFormat . Type . BIG ) <nl> + throw new UnsupportedOperationException ( " Can ' t stream non - legacy sstables to nodes < 2 . 2 " ) ; <nl> <nl> - if ( version > = StreamMessage . VERSION _ 30 ) <nl> + if ( version > = StreamMessage . VERSION _ 22 ) <nl> out . writeUTF ( header . format . name ) ; <nl> <nl> out . writeLong ( header . estimatedKeys ) ; <nl> @ @ - 162 , 7 + 162 , 7 @ @ public class FileMessageHeader <nl> String sstableVersion = in . readUTF ( ) ; <nl> <nl> SSTableFormat . Type format = SSTableFormat . Type . LEGACY ; <nl> - if ( version > = StreamMessage . VERSION _ 30 ) <nl> + if ( version > = StreamMessage . VERSION _ 22 ) <nl> format = SSTableFormat . Type . validate ( in . readUTF ( ) ) ; <nl> <nl> long estimatedKeys = in . readLong ( ) ; <nl> @ @ - 182 , 7 + 182 , 7 @ @ public class FileMessageHeader <nl> size + = TypeSizes . NATIVE . sizeof ( header . sequenceNumber ) ; <nl> size + = TypeSizes . NATIVE . sizeof ( header . version ) ; <nl> <nl> - if ( version > = StreamMessage . VERSION _ 30 ) <nl> + if ( version > = StreamMessage . VERSION _ 22 ) <nl> size + = TypeSizes . NATIVE . sizeof ( header . format . name ) ; <nl> <nl> size + = TypeSizes . NATIVE . sizeof ( header . estimatedKeys ) ; <nl> @ @ - 198 , 4 + 198 , 4 @ @ public class FileMessageHeader <nl> return size ; <nl> } <nl> } <nl> - } <nl> \ No newline at end of file <nl> + } <nl> diff - - git a / src / java / org / apache / cassandra / streaming / messages / StreamMessage . java b / src / java / org / apache / cassandra / streaming / messages / StreamMessage . java <nl> index 8e3eeef . . d4e8a81 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / messages / StreamMessage . java <nl> + + + b / src / java / org / apache / cassandra / streaming / messages / StreamMessage . java <nl> @ @ - 33 , 8 + 33 , 8 @ @ public abstract class StreamMessage <nl> { <nl> / * * Streaming protocol version * / <nl> public static final int VERSION _ 20 = 2 ; <nl> - public static final int VERSION _ 30 = 3 ; <nl> - public static final int CURRENT _ VERSION = VERSION _ 30 ; <nl> + public static final int VERSION _ 22 = 3 ; <nl> + public static final int CURRENT _ VERSION = VERSION _ 22 ; <nl> <nl> public static void serialize ( StreamMessage message , DataOutputStreamPlus out , int version , StreamSession session ) throws IOException <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / thrift / CassandraServer . java b / src / java / org / apache / cassandra / thrift / CassandraServer . java <nl> index b558a13 . . 04d3d13 100644 <nl> - - - a / src / java / org / apache / cassandra / thrift / CassandraServer . java <nl> + + + b / src / java / org / apache / cassandra / thrift / CassandraServer . java <nl> @ @ - 1869 , 7 + 1869 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> <nl> public CqlResult execute _ cql _ query ( ByteBuffer query , Compression compression ) throws TException <nl> { <nl> - throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 3 . 0 . Please use CQL3 instead " ) ; <nl> + throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 2 . 2 . Please use CQL3 instead " ) ; <nl> } <nl> <nl> public CqlResult execute _ cql3 _ query ( ByteBuffer query , Compression compression , ConsistencyLevel cLevel ) throws TException <nl> @ @ - 1909 , 7 + 1909 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> <nl> public CqlPreparedResult prepare _ cql _ query ( ByteBuffer query , Compression compression ) throws TException <nl> { <nl> - throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 3 . 0 . Please use CQL3 instead " ) ; <nl> + throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 2 . 2 . Please use CQL3 instead " ) ; <nl> } <nl> <nl> public CqlPreparedResult prepare _ cql3 _ query ( ByteBuffer query , Compression compression ) throws TException <nl> @ @ - 1934 , 7 + 1934 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> <nl> public CqlResult execute _ prepared _ cql _ query ( int itemId , List < ByteBuffer > bindVariables ) throws TException <nl> { <nl> - throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 3 . 0 . Please use CQL3 instead " ) ; <nl> + throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 2 . 2 . Please use CQL3 instead " ) ; <nl> } <nl> <nl> public CqlResult execute _ prepared _ cql3 _ query ( int itemId , List < ByteBuffer > bindVariables , ConsistencyLevel cLevel ) throws TException <nl> @ @ - 2053 , 7 + 2053 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> } <nl> <nl> / * <nl> - * No - op since 3 . 0 . <nl> + * No - op since 2 . 2 . <nl> * / <nl> public void set _ cql _ version ( String version ) <nl> { <nl> diff - - git a / test / unit / org / apache / cassandra / db / CommitLogTest . java b / test / unit / org / apache / cassandra / db / CommitLogTest . java <nl> index 4db6057 . . 1ab678f 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / CommitLogTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / CommitLogTest . java <nl> @ @ - 386 , 9 + 386 , 9 @ @ public class CommitLogTest <nl> { <nl> testDescriptorPersistence ( new CommitLogDescriptor ( 11 , null ) ) ; <nl> testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 21 , 13 , null ) ) ; <nl> - testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 30 , 15 , null ) ) ; <nl> - testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 30 , 17 , new ParameterizedClass ( " LZ4Compressor " , null ) ) ) ; <nl> - testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 30 , 19 , <nl> + testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 22 , 15 , null ) ) ; <nl> + testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 22 , 17 , new ParameterizedClass ( " LZ4Compressor " , null ) ) ) ; <nl> + testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 22 , 19 , <nl> new ParameterizedClass ( " StubbyCompressor " , ImmutableMap . of ( " parameter1 " , " value1 " , " flag2 " , " 55 " , " argument3 " , " null " ) ) ) ) ; <nl> } <nl> <nl> @ @ - 399 , 7 + 399 , 7 @ @ public class CommitLogTest <nl> for ( int i = 0 ; i < 65535 ; + + i ) <nl> params . put ( " key " + i , Integer . toString ( i , 16 ) ) ; <nl> try { <nl> - CommitLogDescriptor desc = new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 30 , <nl> + CommitLogDescriptor desc = new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 22 , <nl> 21 , <nl> new ParameterizedClass ( " LZ4Compressor " , params ) ) ; <nl> ByteBuffer buf = ByteBuffer . allocate ( 1024000 ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d518830 . . 52cc2c1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 29 , 7 + 29 , 7 @ @ <nl> * add scheduler JMX metrics ( CASSANDRA - 2962 ) <nl> * add block level checksum for compressed data ( CASSANDRA - 1717 ) <nl> * make column family backed column map pluggable and introduce unsynchronized <nl> - ArrayList backed one to speedup reads ( CASSANDRA - 2843 ) <nl> + ArrayList backed one to speedup reads ( CASSANDRA - 2843 , 3165 ) <nl> * refactoring of the secondary index api ( CASSANDRA - 2982 ) <nl> * make CL > ONE reads wait for digest reconciliation before returning <nl> ( CASSANDRA - 2494 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> index c316a85 . . 71c7213 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> + + + b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> @ @ - 67 , 6 + 67 , 11 @ @ public class ArrayBackedSortedColumns extends ArrayList < IColumn > implements ISor <nl> this . reversed = reversed ; <nl> } <nl> <nl> + public ISortedColumns . Factory getFactory ( ) <nl> + { <nl> + return factory ( ) ; <nl> + } <nl> + <nl> public AbstractType < ? > getComparator ( ) <nl> { <nl> return comparator ; <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamily . java b / src / java / org / apache / cassandra / db / ColumnFamily . java <nl> index 1239d1c . . 38bc0d7 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamily . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamily . java <nl> @ @ - 81 , 14 + 81 , 19 @ @ public class ColumnFamily extends AbstractColumnContainer <nl> this . cfm = cfm ; <nl> } <nl> <nl> - public ColumnFamily cloneMeShallow ( ) <nl> + public ColumnFamily cloneMeShallow ( ISortedColumns . Factory factory ) <nl> { <nl> - ColumnFamily cf = ColumnFamily . create ( cfm ) ; <nl> + ColumnFamily cf = ColumnFamily . create ( cfm , factory ) ; <nl> / / since deletion info is immutable , aliasing it is fine <nl> cf . deletionInfo . set ( deletionInfo . get ( ) ) ; <nl> return cf ; <nl> } <nl> <nl> + public ColumnFamily cloneMeShallow ( ) <nl> + { <nl> + return cloneMeShallow ( columns . getFactory ( ) ) ; <nl> + } <nl> + <nl> public AbstractType getSubComparator ( ) <nl> { <nl> IColumnSerializer s = getColumnSerializer ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 0bfd1c5 . . 552d3e9 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 1162 , 8 + 1162 , 11 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> } <nl> } <nl> <nl> - / * * filter a cached row , which will not be modified by the filter , but may be modified by throwing out <nl> - * tombstones that are no longer relevant . * / <nl> + / * * <nl> + * Filter a cached row , which will not be modified by the filter , but may be modified by throwing out <nl> + * tombstones that are no longer relevant . <nl> + * The returned column family won ' t be thread safe . <nl> + * / <nl> ColumnFamily filterColumnFamily ( ColumnFamily cached , QueryFilter filter , int gcBefore ) <nl> { <nl> / / special case slicing the entire row : <nl> @ @ - 1184 , 7 + 1187 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> IColumn sc = cached . getColumn ( filter . path . superColumnName ) ; <nl> if ( sc = = null | | sliceFilter . count > = sc . getSubColumns ( ) . size ( ) ) <nl> { <nl> - ColumnFamily cf = cached . cloneMeShallow ( ) ; <nl> + ColumnFamily cf = cached . cloneMeShallow ( ArrayBackedSortedColumns . factory ( ) ) ; <nl> if ( sc ! = null ) <nl> cf . addColumn ( sc , HeapAllocator . instance ) ; <nl> return removeDeleted ( cf , gcBefore ) ; <nl> @ @ - 1203 , 7 + 1206 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> } <nl> <nl> IColumnIterator ci = filter . getMemtableColumnIterator ( cached , null , getComparator ( ) ) ; <nl> - ColumnFamily cf = ci . getColumnFamily ( ) . cloneMeShallow ( ) ; <nl> + ColumnFamily cf = ci . getColumnFamily ( ) . cloneMeShallow ( ArrayBackedSortedColumns . factory ( ) ) ; <nl> filter . collateColumns ( cf , Collections . singletonList ( ci ) , getComparator ( ) , gcBefore ) ; <nl> / / TODO this is necessary because when we collate supercolumns together , we don ' t check <nl> / / their subcolumns for relevance , so we need to do a second prune post facto here . <nl> diff - - git a / src / java / org / apache / cassandra / db / ISortedColumns . java b / src / java / org / apache / cassandra / db / ISortedColumns . java <nl> index 37f5a60 . . 624dec7 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ISortedColumns . java <nl> + + + b / src / java / org / apache / cassandra / db / ISortedColumns . java <nl> @ @ - 42 , 6 + 42 , 11 @ @ public interface ISortedColumns extends IIterableColumns <nl> public ISortedColumns cloneMe ( ) ; <nl> <nl> / * * <nl> + * Returns the factory used for this ISortedColumns implementation . <nl> + * / <nl> + public Factory getFactory ( ) ; <nl> + <nl> + / * * <nl> * Adds a column to this column map . <nl> * If a column with the same name is already present in the map , it will <nl> * be replaced by the newly added column . <nl> diff - - git a / src / java / org / apache / cassandra / db / ThreadSafeSortedColumns . java b / src / java / org / apache / cassandra / db / ThreadSafeSortedColumns . java <nl> index cd2488a . . 13a111a 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ThreadSafeSortedColumns . java <nl> + + + b / src / java / org / apache / cassandra / db / ThreadSafeSortedColumns . java <nl> @ @ - 62 , 6 + 62 , 11 @ @ public class ThreadSafeSortedColumns extends ConcurrentSkipListMap < ByteBuffer , I <nl> super ( columns ) ; <nl> } <nl> <nl> + public ISortedColumns . Factory getFactory ( ) <nl> + { <nl> + return factory ( ) ; <nl> + } <nl> + <nl> public ISortedColumns cloneMe ( ) <nl> { <nl> return new ThreadSafeSortedColumns ( this ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / TreeMapBackedSortedColumns . java b / src / java / org / apache / cassandra / db / TreeMapBackedSortedColumns . java <nl> index 34e83dc . . 6c3fc42 100644 <nl> - - - a / src / java / org / apache / cassandra / db / TreeMapBackedSortedColumns . java <nl> + + + b / src / java / org / apache / cassandra / db / TreeMapBackedSortedColumns . java <nl> @ @ - 62 , 6 + 62 , 11 @ @ public class TreeMapBackedSortedColumns extends TreeMap < ByteBuffer , IColumn > imp <nl> super ( columns ) ; <nl> } <nl> <nl> + public ISortedColumns . Factory getFactory ( ) <nl> + { <nl> + return factory ( ) ; <nl> + } <nl> + <nl> public ISortedColumns cloneMe ( ) <nl> { <nl> return new TreeMapBackedSortedColumns ( this ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1c8be70 . . e83b385 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - 3 . 0 
 + 2 . 2 
 * Allow roles cache to be invalidated ( CASSANDRA - 8967 ) 
 * Upgrade Snappy ( CASSANDRA - 9063 ) 
 * Don ' t start Thrift rpc by default ( CASSANDRA - 9319 ) 
 diff - - git a / NEWS . txt b / NEWS . txt 
 index 1358c35 . . c16b55a 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 13 , 7 + 13 , 7 @ @ restore snapshots created with the previous major version using the 
 ' sstableloader ' tool . You can upgrade the file format of your snapshots 
 using the provided ' sstableupgrade ' tool . 
 
 - 3 . 0 
 + 2 . 2 
 = = = 
 
 New features 
 diff - - git a / build . xml b / build . xml 
 index bdcb33c . . f613478 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 25 , 7 + 25 , 7 @ @ 
 < property name = " debuglevel " value = " source , lines , vars " / > 
 
 < ! - - default version and SCM information - - > 
 - < property name = " base . version " value = " 3 . 0 . 0 " / > 
 + < property name = " base . version " value = " 2 . 2 . 0 " / > 
 < property name = " scm . connection " value = " scm : git : / / git . apache . org / cassandra . git " / > 
 < property name = " scm . developerConnection " value = " scm : git : / / git . apache . org / cassandra . git " / > 
 < property name = " scm . url " value = " http : / / git - wip - us . apache . org / repos / asf ? p = cassandra . git ; a = tree " / > 
 diff - - git a / interface / cassandra . thrift b / interface / cassandra . thrift 
 index 0af7e64 . . f5041c8 100644 
 - - - a / interface / cassandra . thrift 
 + + + b / interface / cassandra . thrift 
 @ @ - 884 , 7 + 884 , 7 @ @ service Cassandra { 
 
 
 / * * 
 - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . 
 + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . 
 * / 
 CqlResult execute _ cql _ query ( 1 : required binary query , 2 : required Compression compression ) 
 throws ( 1 : InvalidRequestException ire , 
 @ @ - 904 , 7 + 904 , 7 @ @ service Cassandra { 
 
 
 / * * 
 - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . 
 + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . 
 * / 
 CqlPreparedResult prepare _ cql _ query ( 1 : required binary query , 2 : required Compression compression ) 
 throws ( 1 : InvalidRequestException ire ) 
 @ @ - 920 , 7 + 920 , 7 @ @ service Cassandra { 
 
 
 / * * 
 - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . 
 + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . 
 * / 
 CqlResult execute _ prepared _ cql _ query ( 1 : required i32 itemId , 2 : required list < binary > values ) 
 throws ( 1 : InvalidRequestException ire , 
 diff - - git a / interface / thrift / gen - java / org / apache / cassandra / thrift / Cassandra . java b / interface / thrift / gen - java / org / apache / cassandra / thrift / Cassandra . java 
 index bf15559 . . cd4314b 100644 
 - - - a / interface / thrift / gen - java / org / apache / cassandra / thrift / Cassandra . java 
 + + + b / interface / thrift / gen - java / org / apache / cassandra / thrift / Cassandra . java 
 @ @ - 386 , 7 + 386 , 7 @ @ public class Cassandra { 
 public String system _ update _ column _ family ( CfDef cf _ def ) throws InvalidRequestException , SchemaDisagreementException , org . apache . thrift . TException ; 
 
 / * * 
 - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . 
 + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . 
 * 
 * @ param query 
 * @ param compression 
 @ @ - 404 , 7 + 404 , 7 @ @ public class Cassandra { 
 public CqlResult execute _ cql3 _ query ( ByteBuffer query , Compression compression , ConsistencyLevel consistency ) throws InvalidRequestException , UnavailableException , TimedOutException , SchemaDisagreementException , org . apache . thrift . TException ; 
 
 / * * 
 - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . 
 + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . 
 * 
 * @ param query 
 * @ param compression 
 @ @ - 423 , 7 + 423 , 7 @ @ public class Cassandra { 
 public CqlPreparedResult prepare _ cql3 _ query ( ByteBuffer query , Compression compression ) throws InvalidRequestException , org . apache . thrift . TException ; 
 
 / * * 
 - * @ deprecated Throws InvalidRequestException since 3 . 0 . Please use the CQL3 version instead . 
 + * @ deprecated Throws InvalidRequestException since 2 . 2 . Please use the CQL3 version instead . 
 * 
 * @ param itemId 
 * @ param values 
 diff - - git a / src / java / org / apache / cassandra / auth / IAuthorizer . java b / src / java / org / apache / cassandra / auth / IAuthorizer . java 
 index 21b64dc . . 01c05af 100644 
 - - - a / src / java / org / apache / cassandra / auth / IAuthorizer . java 
 + + + b / src / java / org / apache / cassandra / auth / IAuthorizer . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public interface IAuthorizer 
 { 
 / * * 
 * Returns a set of permissions of a user on a resource . 
 - * Since Roles were introduced in version 3 . 0 , Cassandra does not distinguish in any 
 + * Since Roles were introduced in version 2 . 2 , Cassandra does not distinguish in any 
 * meaningful way between users and roles . A role may or may not have login privileges 
 * and roles may be granted to other roles . In fact , Cassandra does not really have the 
 * concept of a user , except to link a client session to role . AuthenticatedUser can be 
 diff - - git a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java 
 index 6803e21 . . 87bc073 100644 
 - - - a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java 
 + + + b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java 
 @ @ - 45 , 7 + 45 , 7 @ @ import static org . apache . cassandra . auth . CassandraRoleManager . consistencyForRole ; 
 * PasswordAuthenticator is an IAuthenticator implementation 
 * that keeps credentials ( rolenames and bcrypt - hashed passwords ) 
 * internally in C * - in system _ auth . roles CQL3 table . 
 - * Since 3 . 0 , the management of roles ( creation , modification , 
 + * Since 2 . 2 , the management of roles ( creation , modification , 
 * querying etc is the responsibility of IRoleManager . Use of 
 * PasswordAuthenticator requires the use of CassandraRoleManager 
 * for storage and retrieval of encrypted passwords . 
 diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 index 6b4bb73 . . 6e754a4 100644 
 - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 @ @ - 1119 , 7 + 1119 , 7 @ @ public final class SystemKeyspace 
 try 
 { 
 DataOutputBuffer out = new DataOutputBuffer ( ) ; 
 - Range . tokenSerializer . serialize ( range , out , MessagingService . VERSION _ 30 ) ; 
 + Range . tokenSerializer . serialize ( range , out , MessagingService . VERSION _ 22 ) ; 
 return out . buffer ( ) ; 
 } 
 catch ( IOException e ) 
 @ @ - 1135 , 7 + 1135 , 7 @ @ public final class SystemKeyspace 
 { 
 return ( Range < Token > ) Range . tokenSerializer . deserialize ( ByteStreams . newDataInput ( ByteBufferUtil . getArray ( rawRange ) ) , 
 partitioner , 
 - MessagingService . VERSION _ 30 ) ; 
 + MessagingService . VERSION _ 22 ) ; 
 } 
 catch ( IOException e ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogArchiver . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogArchiver . java 
 index c795d66 . . 27abae3 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogArchiver . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogArchiver . java 
 @ @ - 212 , 7 + 212 , 7 @ @ public class CommitLogArchiver 
 descriptor = fromHeader ; 
 else descriptor = fromName ; 
 
 - if ( descriptor . version > CommitLogDescriptor . VERSION _ 30 ) 
 + if ( descriptor . version > CommitLogDescriptor . VERSION _ 22 ) 
 throw new IllegalStateException ( " Unsupported commit log version : " + descriptor . version ) ; 
 
 if ( descriptor . compression ! = null ) { 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogDescriptor . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogDescriptor . java 
 index c872677 . . c4728fd 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogDescriptor . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogDescriptor . java 
 @ @ - 36 , 7 + 36 , 6 @ @ import com . google . common . annotations . VisibleForTesting ; 
 import com . google . common . base . Objects ; 
 import com . github . tjake . ICRC32 ; 
 
 - import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . config . ParameterizedClass ; 
 import org . apache . cassandra . exceptions . ConfigurationException ; 
 import org . apache . cassandra . io . FSReadError ; 
 @ @ - 57 , 13 + 56 , 13 @ @ public class CommitLogDescriptor 
 public static final int VERSION _ 12 = 2 ; 
 public static final int VERSION _ 20 = 3 ; 
 public static final int VERSION _ 21 = 4 ; 
 - public static final int VERSION _ 30 = 5 ; 
 + public static final int VERSION _ 22 = 5 ; 
 / * * 
 * Increment this number if there is a changes in the commit log disc layout or MessagingVersion changes . 
 * Note : make sure to handle { @ link # getMessagingVersion ( ) } 
 * / 
 @ VisibleForTesting 
 - public static final int current _ version = VERSION _ 30 ; 
 + public static final int current _ version = VERSION _ 22 ; 
 
 final int version ; 
 public final long id ; 
 @ @ - 89 , 7 + 88 , 7 @ @ public class CommitLogDescriptor 
 out . putLong ( descriptor . id ) ; 
 crc . updateInt ( ( int ) ( descriptor . id & 0xFFFFFFFFL ) ) ; 
 crc . updateInt ( ( int ) ( descriptor . id > > > 32 ) ) ; 
 - if ( descriptor . version > = VERSION _ 30 ) { 
 + if ( descriptor . version > = VERSION _ 22 ) { 
 String parametersString = constructParametersString ( descriptor ) ; 
 byte [ ] parametersBytes = parametersString . getBytes ( StandardCharsets . UTF _ 8 ) ; 
 if ( parametersBytes . length ! = ( ( ( short ) parametersBytes . length ) & 0xFFFF ) ) 
 @ @ - 142 , 7 + 141 , 7 @ @ public class CommitLogDescriptor 
 checkcrc . updateInt ( ( int ) ( id & 0xFFFFFFFFL ) ) ; 
 checkcrc . updateInt ( ( int ) ( id > > > 32 ) ) ; 
 int parametersLength = 0 ; 
 - if ( version > = VERSION _ 30 ) { 
 + if ( version > = VERSION _ 22 ) { 
 parametersLength = input . readShort ( ) & 0xFFFF ; 
 checkcrc . updateInt ( parametersLength ) ; 
 } 
 @ @ - 194 , 8 + 193 , 8 @ @ public class CommitLogDescriptor 
 return MessagingService . VERSION _ 20 ; 
 case VERSION _ 21 : 
 return MessagingService . VERSION _ 21 ; 
 - case VERSION _ 30 : 
 - return MessagingService . VERSION _ 30 ; 
 + case VERSION _ 22 : 
 + return MessagingService . VERSION _ 22 ; 
 default : 
 throw new IllegalStateException ( " Unknown commitlog version " + version ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / format / big / BigFormat . java b / src / java / org / apache / cassandra / io / sstable / format / big / BigFormat . java 
 index e1a5622 . . a1e32cf 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / format / big / BigFormat . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / format / big / BigFormat . java 
 @ @ - 134 , 7 + 134 , 7 @ @ public class BigFormat implements SSTableFormat 
 / / index summaries can be downsampled and the sampling level is persisted 
 / / switch uncompressed checksums to adler32 
 / / tracks presense of legacy ( local and remote ) counter shards 
 - / / la ( 3 . 0 . 0 ) : new file name format 
 + / / la ( 2 . 2 . 0 ) : new file name format 
 
 private final boolean isLatestVersion ; 
 private final boolean hasSamplingLevel ; 
 diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index a7346f3 . . c54d5ee 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 80 , 8 + 80 , 8 @ @ public final class MessagingService implements MessagingServiceMBean 
 public static final int VERSION _ 12 = 6 ; 
 public static final int VERSION _ 20 = 7 ; 
 public static final int VERSION _ 21 = 8 ; 
 - public static final int VERSION _ 30 = 9 ; 
 - public static final int current _ version = VERSION _ 30 ; 
 + public static final int VERSION _ 22 = 9 ; 
 + public static final int current _ version = VERSION _ 22 ; 
 
 public static final String FAILURE _ CALLBACK _ PARAM = " CAL _ BAC " ; 
 public static final byte [ ] ONE _ BYTE = new byte [ 1 ] ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index be7361b . . c0ea872 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1758 , 7 + 1758 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 
 private boolean isRpcReady ( InetAddress endpoint ) 
 { 
 - return MessagingService . instance ( ) . getVersion ( endpoint ) < MessagingService . VERSION _ 30 | | 
 + return MessagingService . instance ( ) . getVersion ( endpoint ) < MessagingService . VERSION _ 22 | | 
 Gossiper . instance . getEndpointStateForEndpoint ( endpoint ) . isRpcReady ( ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / streaming / messages / FileMessageHeader . java b / src / java / org / apache / cassandra / streaming / messages / FileMessageHeader . java 
 index 5266e45 . . e9c99fe 100644 
 - - - a / src / java / org / apache / cassandra / streaming / messages / FileMessageHeader . java 
 + + + b / src / java / org / apache / cassandra / streaming / messages / FileMessageHeader . java 
 @ @ - 137 , 10 + 137 , 10 @ @ public class FileMessageHeader 
 out . writeUTF ( header . version ) ; 
 
 / / We can ' t stream to a node that doesn ' t understand a new sstable format 
 - if ( version < StreamMessage . VERSION _ 30 & & header . format ! = SSTableFormat . Type . LEGACY & & header . format ! = SSTableFormat . Type . BIG ) 
 - throw new UnsupportedOperationException ( " Can ' t stream non - legacy sstables to nodes < 3 . 0 " ) ; 
 + if ( version < StreamMessage . VERSION _ 22 & & header . format ! = SSTableFormat . Type . LEGACY & & header . format ! = SSTableFormat . Type . BIG ) 
 + throw new UnsupportedOperationException ( " Can ' t stream non - legacy sstables to nodes < 2 . 2 " ) ; 
 
 - if ( version > = StreamMessage . VERSION _ 30 ) 
 + if ( version > = StreamMessage . VERSION _ 22 ) 
 out . writeUTF ( header . format . name ) ; 
 
 out . writeLong ( header . estimatedKeys ) ; 
 @ @ - 162 , 7 + 162 , 7 @ @ public class FileMessageHeader 
 String sstableVersion = in . readUTF ( ) ; 
 
 SSTableFormat . Type format = SSTableFormat . Type . LEGACY ; 
 - if ( version > = StreamMessage . VERSION _ 30 ) 
 + if ( version > = StreamMessage . VERSION _ 22 ) 
 format = SSTableFormat . Type . validate ( in . readUTF ( ) ) ; 
 
 long estimatedKeys = in . readLong ( ) ; 
 @ @ - 182 , 7 + 182 , 7 @ @ public class FileMessageHeader 
 size + = TypeSizes . NATIVE . sizeof ( header . sequenceNumber ) ; 
 size + = TypeSizes . NATIVE . sizeof ( header . version ) ; 
 
 - if ( version > = StreamMessage . VERSION _ 30 ) 
 + if ( version > = StreamMessage . VERSION _ 22 ) 
 size + = TypeSizes . NATIVE . sizeof ( header . format . name ) ; 
 
 size + = TypeSizes . NATIVE . sizeof ( header . estimatedKeys ) ; 
 @ @ - 198 , 4 + 198 , 4 @ @ public class FileMessageHeader 
 return size ; 
 } 
 } 
 - } 
 \ No newline at end of file 
 + } 
 diff - - git a / src / java / org / apache / cassandra / streaming / messages / StreamMessage . java b / src / java / org / apache / cassandra / streaming / messages / StreamMessage . java 
 index 8e3eeef . . d4e8a81 100644 
 - - - a / src / java / org / apache / cassandra / streaming / messages / StreamMessage . java 
 + + + b / src / java / org / apache / cassandra / streaming / messages / StreamMessage . java 
 @ @ - 33 , 8 + 33 , 8 @ @ public abstract class StreamMessage 
 { 
 / * * Streaming protocol version * / 
 public static final int VERSION _ 20 = 2 ; 
 - public static final int VERSION _ 30 = 3 ; 
 - public static final int CURRENT _ VERSION = VERSION _ 30 ; 
 + public static final int VERSION _ 22 = 3 ; 
 + public static final int CURRENT _ VERSION = VERSION _ 22 ; 
 
 public static void serialize ( StreamMessage message , DataOutputStreamPlus out , int version , StreamSession session ) throws IOException 
 { 
 diff - - git a / src / java / org / apache / cassandra / thrift / CassandraServer . java b / src / java / org / apache / cassandra / thrift / CassandraServer . java 
 index b558a13 . . 04d3d13 100644 
 - - - a / src / java / org / apache / cassandra / thrift / CassandraServer . java 
 + + + b / src / java / org / apache / cassandra / thrift / CassandraServer . java 
 @ @ - 1869 , 7 + 1869 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 
 public CqlResult execute _ cql _ query ( ByteBuffer query , Compression compression ) throws TException 
 { 
 - throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 3 . 0 . Please use CQL3 instead " ) ; 
 + throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 2 . 2 . Please use CQL3 instead " ) ; 
 } 
 
 public CqlResult execute _ cql3 _ query ( ByteBuffer query , Compression compression , ConsistencyLevel cLevel ) throws TException 
 @ @ - 1909 , 7 + 1909 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 
 public CqlPreparedResult prepare _ cql _ query ( ByteBuffer query , Compression compression ) throws TException 
 { 
 - throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 3 . 0 . Please use CQL3 instead " ) ; 
 + throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 2 . 2 . Please use CQL3 instead " ) ; 
 } 
 
 public CqlPreparedResult prepare _ cql3 _ query ( ByteBuffer query , Compression compression ) throws TException 
 @ @ - 1934 , 7 + 1934 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 
 public CqlResult execute _ prepared _ cql _ query ( int itemId , List < ByteBuffer > bindVariables ) throws TException 
 { 
 - throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 3 . 0 . Please use CQL3 instead " ) ; 
 + throw new InvalidRequestException ( " CQL2 has been removed in Cassandra 2 . 2 . Please use CQL3 instead " ) ; 
 } 
 
 public CqlResult execute _ prepared _ cql3 _ query ( int itemId , List < ByteBuffer > bindVariables , ConsistencyLevel cLevel ) throws TException 
 @ @ - 2053 , 7 + 2053 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 } 
 
 / * 
 - * No - op since 3 . 0 . 
 + * No - op since 2 . 2 . 
 * / 
 public void set _ cql _ version ( String version ) 
 { 
 diff - - git a / test / unit / org / apache / cassandra / db / CommitLogTest . java b / test / unit / org / apache / cassandra / db / CommitLogTest . java 
 index 4db6057 . . 1ab678f 100644 
 - - - a / test / unit / org / apache / cassandra / db / CommitLogTest . java 
 + + + b / test / unit / org / apache / cassandra / db / CommitLogTest . java 
 @ @ - 386 , 9 + 386 , 9 @ @ public class CommitLogTest 
 { 
 testDescriptorPersistence ( new CommitLogDescriptor ( 11 , null ) ) ; 
 testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 21 , 13 , null ) ) ; 
 - testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 30 , 15 , null ) ) ; 
 - testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 30 , 17 , new ParameterizedClass ( " LZ4Compressor " , null ) ) ) ; 
 - testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 30 , 19 , 
 + testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 22 , 15 , null ) ) ; 
 + testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 22 , 17 , new ParameterizedClass ( " LZ4Compressor " , null ) ) ) ; 
 + testDescriptorPersistence ( new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 22 , 19 , 
 new ParameterizedClass ( " StubbyCompressor " , ImmutableMap . of ( " parameter1 " , " value1 " , " flag2 " , " 55 " , " argument3 " , " null " ) ) ) ) ; 
 } 
 
 @ @ - 399 , 7 + 399 , 7 @ @ public class CommitLogTest 
 for ( int i = 0 ; i < 65535 ; + + i ) 
 params . put ( " key " + i , Integer . toString ( i , 16 ) ) ; 
 try { 
 - CommitLogDescriptor desc = new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 30 , 
 + CommitLogDescriptor desc = new CommitLogDescriptor ( CommitLogDescriptor . VERSION _ 22 , 
 21 , 
 new ParameterizedClass ( " LZ4Compressor " , params ) ) ; 
 ByteBuffer buf = ByteBuffer . allocate ( 1024000 ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d518830 . . 52cc2c1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 29 , 7 + 29 , 7 @ @ 
 * add scheduler JMX metrics ( CASSANDRA - 2962 ) 
 * add block level checksum for compressed data ( CASSANDRA - 1717 ) 
 * make column family backed column map pluggable and introduce unsynchronized 
 - ArrayList backed one to speedup reads ( CASSANDRA - 2843 ) 
 + ArrayList backed one to speedup reads ( CASSANDRA - 2843 , 3165 ) 
 * refactoring of the secondary index api ( CASSANDRA - 2982 ) 
 * make CL > ONE reads wait for digest reconciliation before returning 
 ( CASSANDRA - 2494 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 index c316a85 . . 71c7213 100644 
 - - - a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 + + + b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 @ @ - 67 , 6 + 67 , 11 @ @ public class ArrayBackedSortedColumns extends ArrayList < IColumn > implements ISor 
 this . reversed = reversed ; 
 } 
 
 + public ISortedColumns . Factory getFactory ( ) 
 + { 
 + return factory ( ) ; 
 + } 
 + 
 public AbstractType < ? > getComparator ( ) 
 { 
 return comparator ; 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamily . java b / src / java / org / apache / cassandra / db / ColumnFamily . java 
 index 1239d1c . . 38bc0d7 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamily . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamily . java 
 @ @ - 81 , 14 + 81 , 19 @ @ public class ColumnFamily extends AbstractColumnContainer 
 this . cfm = cfm ; 
 } 
 
 - public ColumnFamily cloneMeShallow ( ) 
 + public ColumnFamily cloneMeShallow ( ISortedColumns . Factory factory ) 
 { 
 - ColumnFamily cf = ColumnFamily . create ( cfm ) ; 
 + ColumnFamily cf = ColumnFamily . create ( cfm , factory ) ; 
 / / since deletion info is immutable , aliasing it is fine 
 cf . deletionInfo . set ( deletionInfo . get ( ) ) ; 
 return cf ; 
 } 
 
 + public ColumnFamily cloneMeShallow ( ) 
 + { 
 + return cloneMeShallow ( columns . getFactory ( ) ) ; 
 + } 
 + 
 public AbstractType getSubComparator ( ) 
 { 
 IColumnSerializer s = getColumnSerializer ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 0bfd1c5 . . 552d3e9 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 1162 , 8 + 1162 , 11 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 } 
 } 
 
 - / * * filter a cached row , which will not be modified by the filter , but may be modified by throwing out 
 - * tombstones that are no longer relevant . * / 
 + / * * 
 + * Filter a cached row , which will not be modified by the filter , but may be modified by throwing out 
 + * tombstones that are no longer relevant . 
 + * The returned column family won ' t be thread safe . 
 + * / 
 ColumnFamily filterColumnFamily ( ColumnFamily cached , QueryFilter filter , int gcBefore ) 
 { 
 / / special case slicing the entire row : 
 @ @ - 1184 , 7 + 1187 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 IColumn sc = cached . getColumn ( filter . path . superColumnName ) ; 
 if ( sc = = null | | sliceFilter . count > = sc . getSubColumns ( ) . size ( ) ) 
 { 
 - ColumnFamily cf = cached . cloneMeShallow ( ) ; 
 + ColumnFamily cf = cached . cloneMeShallow ( ArrayBackedSortedColumns . factory ( ) ) ; 
 if ( sc ! = null ) 
 cf . addColumn ( sc , HeapAllocator . instance ) ; 
 return removeDeleted ( cf , gcBefore ) ; 
 @ @ - 1203 , 7 + 1206 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 } 
 
 IColumnIterator ci = filter . getMemtableColumnIterator ( cached , null , getComparator ( ) ) ; 
 - ColumnFamily cf = ci . getColumnFamily ( ) . cloneMeShallow ( ) ; 
 + ColumnFamily cf = ci . getColumnFamily ( ) . cloneMeShallow ( ArrayBackedSortedColumns . factory ( ) ) ; 
 filter . collateColumns ( cf , Collections . singletonList ( ci ) , getComparator ( ) , gcBefore ) ; 
 / / TODO this is necessary because when we collate supercolumns together , we don ' t check 
 / / their subcolumns for relevance , so we need to do a second prune post facto here . 
 diff - - git a / src / java / org / apache / cassandra / db / ISortedColumns . java b / src / java / org / apache / cassandra / db / ISortedColumns . java 
 index 37f5a60 . . 624dec7 100644 
 - - - a / src / java / org / apache / cassandra / db / ISortedColumns . java 
 + + + b / src / java / org / apache / cassandra / db / ISortedColumns . java 
 @ @ - 42 , 6 + 42 , 11 @ @ public interface ISortedColumns extends IIterableColumns 
 public ISortedColumns cloneMe ( ) ; 
 
 / * * 
 + * Returns the factory used for this ISortedColumns implementation . 
 + * / 
 + public Factory getFactory ( ) ; 
 + 
 + / * * 
 * Adds a column to this column map . 
 * If a column with the same name is already present in the map , it will 
 * be replaced by the newly added column . 
 diff - - git a / src / java / org / apache / cassandra / db / ThreadSafeSortedColumns . java b / src / java / org / apache / cassandra / db / ThreadSafeSortedColumns . java 
 index cd2488a . . 13a111a 100644 
 - - - a / src / java / org / apache / cassandra / db / ThreadSafeSortedColumns . java 
 + + + b / src / java / org / apache / cassandra / db / ThreadSafeSortedColumns . java 
 @ @ - 62 , 6 + 62 , 11 @ @ public class ThreadSafeSortedColumns extends ConcurrentSkipListMap < ByteBuffer , I 
 super ( columns ) ; 
 } 
 
 + public ISortedColumns . Factory getFactory ( ) 
 + { 
 + return factory ( ) ; 
 + } 
 + 
 public ISortedColumns cloneMe ( ) 
 { 
 return new ThreadSafeSortedColumns ( this ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / TreeMapBackedSortedColumns . java b / src / java / org / apache / cassandra / db / TreeMapBackedSortedColumns . java 
 index 34e83dc . . 6c3fc42 100644 
 - - - a / src / java / org / apache / cassandra / db / TreeMapBackedSortedColumns . java 
 + + + b / src / java / org / apache / cassandra / db / TreeMapBackedSortedColumns . java 
 @ @ - 62 , 6 + 62 , 11 @ @ public class TreeMapBackedSortedColumns extends TreeMap < ByteBuffer , IColumn > imp 
 super ( columns ) ; 
 } 
 
 + public ISortedColumns . Factory getFactory ( ) 
 + { 
 + return factory ( ) ; 
 + } 
 + 
 public ISortedColumns cloneMe ( ) 
 { 
 return new TreeMapBackedSortedColumns ( this ) ;
