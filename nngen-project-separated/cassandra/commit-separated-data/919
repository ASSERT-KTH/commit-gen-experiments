BLEU SCORE: 0.021052823456422738

TEST MSG: Make number of cores used by cqlsh COPY visible to testing code
GENERATED MSG: cqlsh : fix rendering of blob fields ; patch by Aleksey Yeschenko , reviewed by Brandon Williams for CASSANDRA - 4970

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7bb97e5 . . 94f3c81 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 6 <nl> + * Make number of cores used by cqlsh COPY visible to testing code ( CASSANDRA - 11437 ) <nl> * Allow filtering on clustering columns for queries without secondary indexes ( CASSANDRA - 11310 ) <nl> * Refactor Restriction hierarchy ( CASSANDRA - 11354 ) <nl> * Eliminate allocations in R / W path ( CASSANDRA - 11421 ) <nl> diff - - git a / pylib / cqlshlib / copyutil . py b / pylib / cqlshlib / copyutil . py <nl> index 374062b . . 014fca4 100644 <nl> - - - a / pylib / cqlshlib / copyutil . py <nl> + + + b / pylib / cqlshlib / copyutil . py <nl> @ @ - 370 , 8 + 370 , 11 @ @ class CopyTask ( object ) : <nl> " " " <nl> try : <nl> num _ cores _ for _ testing = os . environ . get ( ' CQLSH _ COPY _ TEST _ NUM _ CORES ' , ' ' ) <nl> - return int ( num _ cores _ for _ testing ) if num _ cores _ for _ testing else mp . cpu _ count ( ) <nl> + ret = int ( num _ cores _ for _ testing ) if num _ cores _ for _ testing else mp . cpu _ count ( ) <nl> + printdebugmsg ( " Detected % d core ( s ) " % ( ret , ) ) <nl> + return ret <nl> except NotImplementedError : <nl> + printdebugmsg ( " Failed to detect number of cores , returning 1 " ) <nl> return 1 <nl> <nl> @ staticmethod
NEAREST DIFF (one line): diff - - git a / src / resources / org / apache / cassandra / cli / CliHelp . yaml b / src / resources / org / apache / cassandra / cli / CliHelp . yaml <nl> index 5c9684a . . 80b5dcb 100644 <nl> - - - a / src / resources / org / apache / cassandra / cli / CliHelp . yaml <nl> + + + b / src / resources / org / apache / cassandra / cli / CliHelp . yaml <nl> @ @ - 574 , 6 + 574 , 9 @ @ commands : <nl> column _ name : ' other name ' , <nl> validation _ class : LongType <nl> } ] ; <nl> + create column family UseComposites <nl> + with comparator = ' CompositeType ( UTF8Type , Int32Type ) ' <nl> + and caching = ' ALL ' ; <nl> - name : NODE _ UPDATE _ COLUMN _ FAMILY <nl> help : | <nl> update column family < name > ; <nl> @ @ - 1005 , 6 + 1008 , 7 @ @ commands : <nl> set Standard1 [ testkey ] [ testcol ] = utf8 ( ' this is utf8 string . ' ) ; <nl> set Standard1 [ testkey ] [ timeuuid ( ) ] = utf8 ( ' hello world ' ) ; <nl> set Standard1 [ testkey ] [ timeuuid ( ) ] = utf8 ( ' hello world ' ) with ttl = 30 ; <nl> + set UseComposites [ utf8 ( ' testkey ' ) ] [ ' CompositeType ( utf8 ( first ) , int ( 4 ) ) ' ] = utf8 ( ' inserts this string into a column with name first : 4 ' ) ; <nl> - name : NODE _ THRIFT _ DEL <nl> help : | <nl> del < cf > [ ' < key > ' ] ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7bb97e5 . . 94f3c81 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 6 
 + * Make number of cores used by cqlsh COPY visible to testing code ( CASSANDRA - 11437 ) 
 * Allow filtering on clustering columns for queries without secondary indexes ( CASSANDRA - 11310 ) 
 * Refactor Restriction hierarchy ( CASSANDRA - 11354 ) 
 * Eliminate allocations in R / W path ( CASSANDRA - 11421 ) 
 diff - - git a / pylib / cqlshlib / copyutil . py b / pylib / cqlshlib / copyutil . py 
 index 374062b . . 014fca4 100644 
 - - - a / pylib / cqlshlib / copyutil . py 
 + + + b / pylib / cqlshlib / copyutil . py 
 @ @ - 370 , 8 + 370 , 11 @ @ class CopyTask ( object ) : 
 " " " 
 try : 
 num _ cores _ for _ testing = os . environ . get ( ' CQLSH _ COPY _ TEST _ NUM _ CORES ' , ' ' ) 
 - return int ( num _ cores _ for _ testing ) if num _ cores _ for _ testing else mp . cpu _ count ( ) 
 + ret = int ( num _ cores _ for _ testing ) if num _ cores _ for _ testing else mp . cpu _ count ( ) 
 + printdebugmsg ( " Detected % d core ( s ) " % ( ret , ) ) 
 + return ret 
 except NotImplementedError : 
 + printdebugmsg ( " Failed to detect number of cores , returning 1 " ) 
 return 1 
 
 @ staticmethod

NEAREST DIFF:
diff - - git a / src / resources / org / apache / cassandra / cli / CliHelp . yaml b / src / resources / org / apache / cassandra / cli / CliHelp . yaml 
 index 5c9684a . . 80b5dcb 100644 
 - - - a / src / resources / org / apache / cassandra / cli / CliHelp . yaml 
 + + + b / src / resources / org / apache / cassandra / cli / CliHelp . yaml 
 @ @ - 574 , 6 + 574 , 9 @ @ commands : 
 column _ name : ' other name ' , 
 validation _ class : LongType 
 } ] ; 
 + create column family UseComposites 
 + with comparator = ' CompositeType ( UTF8Type , Int32Type ) ' 
 + and caching = ' ALL ' ; 
 - name : NODE _ UPDATE _ COLUMN _ FAMILY 
 help : | 
 update column family < name > ; 
 @ @ - 1005 , 6 + 1008 , 7 @ @ commands : 
 set Standard1 [ testkey ] [ testcol ] = utf8 ( ' this is utf8 string . ' ) ; 
 set Standard1 [ testkey ] [ timeuuid ( ) ] = utf8 ( ' hello world ' ) ; 
 set Standard1 [ testkey ] [ timeuuid ( ) ] = utf8 ( ' hello world ' ) with ttl = 30 ; 
 + set UseComposites [ utf8 ( ' testkey ' ) ] [ ' CompositeType ( utf8 ( first ) , int ( 4 ) ) ' ] = utf8 ( ' inserts this string into a column with name first : 4 ' ) ; 
 - name : NODE _ THRIFT _ DEL 
 help : | 
 del < cf > [ ' < key > ' ] ;
