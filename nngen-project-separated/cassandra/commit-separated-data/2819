BLEU SCORE: 0.03283637368030199

TEST MSG: Add missing keyspace preparation to DropType too
GENERATED MSG: handle replica unavailability in index scan

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java <nl> index 667ead4 . . 08543bd 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java <nl> @ @ - 38 , 6 + 38 , 16 @ @ public class DropTypeStatement extends SchemaAlteringStatement <nl> this . ifExists = ifExists ; <nl> } <nl> <nl> + @ Override <nl> + public void prepareKeyspace ( ClientState state ) throws InvalidRequestException <nl> + { <nl> + if ( ! name . hasKeyspace ( ) ) <nl> + name . setKeyspace ( state . getKeyspace ( ) ) ; <nl> + <nl> + if ( name . getKeyspace ( ) = = null ) <nl> + throw new InvalidRequestException ( " You need to be logged in a keyspace or use a fully qualified user type name " ) ; <nl> + } <nl> + <nl> public void checkAccess ( ClientState state ) throws UnauthorizedException , InvalidRequestException <nl> { <nl> state . hasKeyspaceAccess ( keyspace ( ) , Permission . DROP ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 30e8275 . . e4d8d3f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 40 , 6 + 40 , 7 @ @ dev <nl> * retain reference to PendingFile sstables ( CASSANDRA - 1749 ) <nl> * fix sstableimport regression ( CASSANDRA - 1753 ) <nl> * fix for bootstrap when no non - system tables are defined ( CASSANDRA - 1732 ) <nl> + * handle replica unavailability in index scan ( CASSANDRA - 1755 ) <nl> <nl> <nl> 0 . 7 . 0 - beta3 <nl> diff - - git a / src / java / org / apache / cassandra / avro / CassandraServer . java b / src / java / org / apache / cassandra / avro / CassandraServer . java <nl> index 325d3aa . . bec5039 100644 <nl> - - - a / src / java / org / apache / cassandra / avro / CassandraServer . java <nl> + + + b / src / java / org / apache / cassandra / avro / CassandraServer . java <nl> @ @ - 1100 , 6 + 1100 , 10 @ @ public class CassandraServer implements Cassandra { <nl> { <nl> throw new TimedOutException ( ) ; <nl> } <nl> + catch ( org . apache . cassandra . thrift . UnavailableException e ) <nl> + { <nl> + throw newUnavailableException ( ) ; <nl> + } <nl> return avronateKeySlices ( rows , column _ parent , column _ predicate ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 522cef0 . . 3f26f14 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 647 , 7 + 647 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> } <nl> <nl> public static List < Row > scan ( String keyspace , String column _ family , IndexClause index _ clause , SlicePredicate column _ predicate , ConsistencyLevel consistency _ level ) <nl> - throws IOException , TimeoutException <nl> + throws IOException , TimeoutException , UnavailableException <nl> { <nl> IPartitioner p = StorageService . getPartitioner ( ) ; <nl> <nl> @ @ - 666 , 7 + 666 , 11 @ @ public class StorageProxy implements StorageProxyMBean <nl> RangeSliceResponseResolver resolver = new RangeSliceResponseResolver ( keyspace , liveEndpoints ) ; <nl> AbstractReplicationStrategy rs = Table . open ( keyspace ) . replicationStrategy ; <nl> QuorumResponseHandler < List < Row > > handler = rs . getQuorumResponseHandler ( resolver , consistency _ level ) ; <nl> - / / TODO bail early if live endpoints can ' t satisfy requested consistency level <nl> + <nl> + / / bail early if live endpoints can ' t satisfy requested consistency level <nl> + if ( handler . blockfor > liveEndpoints . size ( ) ) <nl> + throw new UnavailableException ( ) ; <nl> + <nl> IndexScanCommand command = new IndexScanCommand ( keyspace , column _ family , index _ clause , column _ predicate , range ) ; <nl> Message message = command . getMessage ( ) ; <nl> for ( InetAddress endpoint : liveEndpoints )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java 
 index 667ead4 . . 08543bd 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java 
 @ @ - 38 , 6 + 38 , 16 @ @ public class DropTypeStatement extends SchemaAlteringStatement 
 this . ifExists = ifExists ; 
 } 
 
 + @ Override 
 + public void prepareKeyspace ( ClientState state ) throws InvalidRequestException 
 + { 
 + if ( ! name . hasKeyspace ( ) ) 
 + name . setKeyspace ( state . getKeyspace ( ) ) ; 
 + 
 + if ( name . getKeyspace ( ) = = null ) 
 + throw new InvalidRequestException ( " You need to be logged in a keyspace or use a fully qualified user type name " ) ; 
 + } 
 + 
 public void checkAccess ( ClientState state ) throws UnauthorizedException , InvalidRequestException 
 { 
 state . hasKeyspaceAccess ( keyspace ( ) , Permission . DROP ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 30e8275 . . e4d8d3f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 40 , 6 + 40 , 7 @ @ dev 
 * retain reference to PendingFile sstables ( CASSANDRA - 1749 ) 
 * fix sstableimport regression ( CASSANDRA - 1753 ) 
 * fix for bootstrap when no non - system tables are defined ( CASSANDRA - 1732 ) 
 + * handle replica unavailability in index scan ( CASSANDRA - 1755 ) 
 
 
 0 . 7 . 0 - beta3 
 diff - - git a / src / java / org / apache / cassandra / avro / CassandraServer . java b / src / java / org / apache / cassandra / avro / CassandraServer . java 
 index 325d3aa . . bec5039 100644 
 - - - a / src / java / org / apache / cassandra / avro / CassandraServer . java 
 + + + b / src / java / org / apache / cassandra / avro / CassandraServer . java 
 @ @ - 1100 , 6 + 1100 , 10 @ @ public class CassandraServer implements Cassandra { 
 { 
 throw new TimedOutException ( ) ; 
 } 
 + catch ( org . apache . cassandra . thrift . UnavailableException e ) 
 + { 
 + throw newUnavailableException ( ) ; 
 + } 
 return avronateKeySlices ( rows , column _ parent , column _ predicate ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 522cef0 . . 3f26f14 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 647 , 7 + 647 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 } 
 
 public static List < Row > scan ( String keyspace , String column _ family , IndexClause index _ clause , SlicePredicate column _ predicate , ConsistencyLevel consistency _ level ) 
 - throws IOException , TimeoutException 
 + throws IOException , TimeoutException , UnavailableException 
 { 
 IPartitioner p = StorageService . getPartitioner ( ) ; 
 
 @ @ - 666 , 7 + 666 , 11 @ @ public class StorageProxy implements StorageProxyMBean 
 RangeSliceResponseResolver resolver = new RangeSliceResponseResolver ( keyspace , liveEndpoints ) ; 
 AbstractReplicationStrategy rs = Table . open ( keyspace ) . replicationStrategy ; 
 QuorumResponseHandler < List < Row > > handler = rs . getQuorumResponseHandler ( resolver , consistency _ level ) ; 
 - / / TODO bail early if live endpoints can ' t satisfy requested consistency level 
 + 
 + / / bail early if live endpoints can ' t satisfy requested consistency level 
 + if ( handler . blockfor > liveEndpoints . size ( ) ) 
 + throw new UnavailableException ( ) ; 
 + 
 IndexScanCommand command = new IndexScanCommand ( keyspace , column _ family , index _ clause , column _ predicate , range ) ; 
 Message message = command . getMessage ( ) ; 
 for ( InetAddress endpoint : liveEndpoints )
