BLEU SCORE: 0.009800314768236574

TEST MSG: Allow metrics export for prometheus in its native format
GENERATED MSG: Backport from 2 . 0 - Expose whether jna is enabled and memory is locked via JMX

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d40cab4 . . 9495c96 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 8 <nl> + * Allow metrics export for prometheus in its native format ( CASSANDRA - 11967 ) <nl> * Move skip _ stop _ words filter before stemming ( CASSANDRA - 12078 ) <nl> * Support seek ( ) in EncryptedFileSegmentInputStream ( CASSANDRA - 11957 ) <nl> * SSTable tools mishandling LocalPartitioner ( CASSANDRA - 12002 ) <nl> diff - - git a / NEWS . txt b / NEWS . txt <nl> index 7418f3a . . 11e3b37 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 19 , 6 + 19 , 11 @ @ using the provided ' sstableupgrade ' tool . <nl> <nl> New features <nl> - - - - - - - - - - - - <nl> + - Support for alternative metrics exporters has been added . To use them , the appropiate <nl> + libraries need to be placed in the lib directory . Cassandra will load the class given in <nl> + the system property cassandra . metricsExporter and instantiate it by calling the constructor <nl> + taking an instance of com . codahale . metrics . MetricRegistry . If the provided class implements <nl> + java . io . Closeable , its close ( ) method will be called on shutdown . <nl> - Shared pool threads are now named according to the stage they are executing <nl> tasks for . Thread names mentioned in traced queries change accordingly . <nl> - A new option has been added to cassandra - stress " - rate fixed = { number } / s " <nl> diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> index 2d21bff . . b1c44be 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> @ @ - 17 , 10 + 17 , 12 @ @ <nl> * / <nl> package org . apache . cassandra . service ; <nl> <nl> + import java . io . Closeable ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . lang . management . ManagementFactory ; <nl> import java . lang . management . MemoryPoolMXBean ; <nl> + import java . lang . reflect . Constructor ; <nl> import java . net . InetAddress ; <nl> import java . net . URL ; <nl> import java . net . UnknownHostException ; <nl> @ @ - 40 , 6 + 42 , 7 @ @ import org . slf4j . LoggerFactory ; <nl> <nl> import com . addthis . metrics3 . reporter . config . ReporterConfig ; <nl> import com . codahale . metrics . Meter ; <nl> + import com . codahale . metrics . MetricRegistry ; <nl> import com . codahale . metrics . MetricRegistryListener ; <nl> import com . codahale . metrics . SharedMetricRegistries ; <nl> import org . apache . cassandra . batchlog . LegacyBatchlogMigrator ; <nl> @ @ - 365 , 6 + 368 , 38 @ @ public class CassandraDaemon <nl> } <nl> } <nl> <nl> + / / Alternative metrics <nl> + String metricsExporterClass = System . getProperty ( " cassandra . metricsExporter " ) ; <nl> + if ( metricsExporterClass ! = null ) <nl> + { <nl> + logger . info ( " Trying to initialize metrics - exporter { } " , metricsExporterClass ) ; <nl> + try <nl> + { <nl> + Constructor < ? > ctor = Class . forName ( metricsExporterClass ) . getConstructor ( MetricRegistry . class ) ; <nl> + Object metricsExporter = ctor . newInstance ( CassandraMetricsRegistry . Metrics ) ; <nl> + if ( metricsExporter . getClass ( ) . isAssignableFrom ( Closeable . class ) ) <nl> + { <nl> + Runtime . getRuntime ( ) . addShutdownHook ( new Thread ( ) { <nl> + public void run ( ) <nl> + { <nl> + try <nl> + { <nl> + ( ( Closeable ) metricsExporter ) . close ( ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + e . printStackTrace ( ) ; <nl> + } <nl> + } <nl> + } ) ; <nl> + } <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + logger . warn ( " Failed to initialize metrics - exporter " , e ) ; <nl> + } <nl> + } <nl> + <nl> / / start server internals <nl> StorageService . instance . registerDaemon ( this ) ; <nl> try
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / BatchlogManager . java b / src / java / org / apache / cassandra / db / BatchlogManager . java <nl> index 48d86e3 . . 9d46739 100644 <nl> - - - a / src / java / org / apache / cassandra / db / BatchlogManager . java <nl> + + + b / src / java / org / apache / cassandra / db / BatchlogManager . java <nl> @ @ - 203 , 7 + 203 , 7 @ @ public class BatchlogManager implements BatchlogManagerMBean <nl> * We try to deliver the mutations to the replicas ourselves if they are alive and only resort to writing hints <nl> * when a replica is down or a write request times out . <nl> * / <nl> - private void replaySerializedMutation ( RowMutation mutation , long writtenAt ) throws IOException <nl> + private void replaySerializedMutation ( RowMutation mutation , long writtenAt ) <nl> { <nl> int ttl = calculateHintTTL ( mutation , writtenAt ) ; <nl> if ( ttl < = 0 ) <nl> @ @ - 211 , 7 + 211 , 7 @ @ public class BatchlogManager implements BatchlogManagerMBean <nl> <nl> Set < InetAddress > liveEndpoints = new HashSet < InetAddress > ( ) ; <nl> String ks = mutation . getTable ( ) ; <nl> - Token tk = StorageService . getPartitioner ( ) . getToken ( mutation . key ( ) ) ; <nl> + Token < ? > tk = StorageService . getPartitioner ( ) . getToken ( mutation . key ( ) ) ; <nl> for ( InetAddress endpoint : Iterables . concat ( StorageService . instance . getNaturalEndpoints ( ks , tk ) , <nl> StorageService . instance . getTokenMetadata ( ) . pendingEndpointsFor ( tk , ks ) ) ) <nl> { <nl> @ @ - 227 , 7 + 227 , 7 @ @ public class BatchlogManager implements BatchlogManagerMBean <nl> attemptDirectDelivery ( mutation , writtenAt , liveEndpoints ) ; <nl> } <nl> <nl> - private void attemptDirectDelivery ( RowMutation mutation , long writtenAt , Set < InetAddress > endpoints ) throws IOException <nl> + private void attemptDirectDelivery ( RowMutation mutation , long writtenAt , Set < InetAddress > endpoints ) <nl> { <nl> List < WriteResponseHandler > handlers = Lists . newArrayList ( ) ; <nl> final CopyOnWriteArraySet < InetAddress > undelivered = new CopyOnWriteArraySet < InetAddress > ( endpoints ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d40cab4 . . 9495c96 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 8 
 + * Allow metrics export for prometheus in its native format ( CASSANDRA - 11967 ) 
 * Move skip _ stop _ words filter before stemming ( CASSANDRA - 12078 ) 
 * Support seek ( ) in EncryptedFileSegmentInputStream ( CASSANDRA - 11957 ) 
 * SSTable tools mishandling LocalPartitioner ( CASSANDRA - 12002 ) 
 diff - - git a / NEWS . txt b / NEWS . txt 
 index 7418f3a . . 11e3b37 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 19 , 6 + 19 , 11 @ @ using the provided ' sstableupgrade ' tool . 
 
 New features 
 - - - - - - - - - - - - 
 + - Support for alternative metrics exporters has been added . To use them , the appropiate 
 + libraries need to be placed in the lib directory . Cassandra will load the class given in 
 + the system property cassandra . metricsExporter and instantiate it by calling the constructor 
 + taking an instance of com . codahale . metrics . MetricRegistry . If the provided class implements 
 + java . io . Closeable , its close ( ) method will be called on shutdown . 
 - Shared pool threads are now named according to the stage they are executing 
 tasks for . Thread names mentioned in traced queries change accordingly . 
 - A new option has been added to cassandra - stress " - rate fixed = { number } / s " 
 diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 index 2d21bff . . b1c44be 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 @ @ - 17 , 10 + 17 , 12 @ @ 
 * / 
 package org . apache . cassandra . service ; 
 
 + import java . io . Closeable ; 
 import java . io . File ; 
 import java . io . IOException ; 
 import java . lang . management . ManagementFactory ; 
 import java . lang . management . MemoryPoolMXBean ; 
 + import java . lang . reflect . Constructor ; 
 import java . net . InetAddress ; 
 import java . net . URL ; 
 import java . net . UnknownHostException ; 
 @ @ - 40 , 6 + 42 , 7 @ @ import org . slf4j . LoggerFactory ; 
 
 import com . addthis . metrics3 . reporter . config . ReporterConfig ; 
 import com . codahale . metrics . Meter ; 
 + import com . codahale . metrics . MetricRegistry ; 
 import com . codahale . metrics . MetricRegistryListener ; 
 import com . codahale . metrics . SharedMetricRegistries ; 
 import org . apache . cassandra . batchlog . LegacyBatchlogMigrator ; 
 @ @ - 365 , 6 + 368 , 38 @ @ public class CassandraDaemon 
 } 
 } 
 
 + / / Alternative metrics 
 + String metricsExporterClass = System . getProperty ( " cassandra . metricsExporter " ) ; 
 + if ( metricsExporterClass ! = null ) 
 + { 
 + logger . info ( " Trying to initialize metrics - exporter { } " , metricsExporterClass ) ; 
 + try 
 + { 
 + Constructor < ? > ctor = Class . forName ( metricsExporterClass ) . getConstructor ( MetricRegistry . class ) ; 
 + Object metricsExporter = ctor . newInstance ( CassandraMetricsRegistry . Metrics ) ; 
 + if ( metricsExporter . getClass ( ) . isAssignableFrom ( Closeable . class ) ) 
 + { 
 + Runtime . getRuntime ( ) . addShutdownHook ( new Thread ( ) { 
 + public void run ( ) 
 + { 
 + try 
 + { 
 + ( ( Closeable ) metricsExporter ) . close ( ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + e . printStackTrace ( ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 + } 
 + catch ( Exception e ) 
 + { 
 + logger . warn ( " Failed to initialize metrics - exporter " , e ) ; 
 + } 
 + } 
 + 
 / / start server internals 
 StorageService . instance . registerDaemon ( this ) ; 
 try

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / BatchlogManager . java b / src / java / org / apache / cassandra / db / BatchlogManager . java 
 index 48d86e3 . . 9d46739 100644 
 - - - a / src / java / org / apache / cassandra / db / BatchlogManager . java 
 + + + b / src / java / org / apache / cassandra / db / BatchlogManager . java 
 @ @ - 203 , 7 + 203 , 7 @ @ public class BatchlogManager implements BatchlogManagerMBean 
 * We try to deliver the mutations to the replicas ourselves if they are alive and only resort to writing hints 
 * when a replica is down or a write request times out . 
 * / 
 - private void replaySerializedMutation ( RowMutation mutation , long writtenAt ) throws IOException 
 + private void replaySerializedMutation ( RowMutation mutation , long writtenAt ) 
 { 
 int ttl = calculateHintTTL ( mutation , writtenAt ) ; 
 if ( ttl < = 0 ) 
 @ @ - 211 , 7 + 211 , 7 @ @ public class BatchlogManager implements BatchlogManagerMBean 
 
 Set < InetAddress > liveEndpoints = new HashSet < InetAddress > ( ) ; 
 String ks = mutation . getTable ( ) ; 
 - Token tk = StorageService . getPartitioner ( ) . getToken ( mutation . key ( ) ) ; 
 + Token < ? > tk = StorageService . getPartitioner ( ) . getToken ( mutation . key ( ) ) ; 
 for ( InetAddress endpoint : Iterables . concat ( StorageService . instance . getNaturalEndpoints ( ks , tk ) , 
 StorageService . instance . getTokenMetadata ( ) . pendingEndpointsFor ( tk , ks ) ) ) 
 { 
 @ @ - 227 , 7 + 227 , 7 @ @ public class BatchlogManager implements BatchlogManagerMBean 
 attemptDirectDelivery ( mutation , writtenAt , liveEndpoints ) ; 
 } 
 
 - private void attemptDirectDelivery ( RowMutation mutation , long writtenAt , Set < InetAddress > endpoints ) throws IOException 
 + private void attemptDirectDelivery ( RowMutation mutation , long writtenAt , Set < InetAddress > endpoints ) 
 { 
 List < WriteResponseHandler > handlers = Lists . newArrayList ( ) ; 
 final CopyOnWriteArraySet < InetAddress > undelivered = new CopyOnWriteArraySet < InetAddress > ( endpoints ) ;
