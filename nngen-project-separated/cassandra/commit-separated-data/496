BLEU SCORE: 0.022882533035912193

TEST MSG: Fix speculative retry bugs
GENERATED MSG: cancel latency - sampling task when CF is dropped

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c5e5335 . . 086e0e5 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 9 <nl> + * Fix speculative retry bugs ( CASSANDRA - 13009 ) <nl> * Fix handling of nulls and unsets in IN conditions ( CASSANDRA - 12981 ) <nl> * Remove support for non - JavaScript UDFs ( CASSANDRA - 12883 ) <nl> * Fix DynamicEndpointSnitch noop in multi - datacenter situations ( CASSANDRA - 13074 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 4bc46d0 . . 2e52eb2 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 384 , 7 + 384 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> this . indexManager = new SecondaryIndexManager ( this ) ; <nl> this . metric = new ColumnFamilyMetrics ( this ) ; <nl> fileIndexGenerator . set ( generation ) ; <nl> - sampleLatencyNanos = DatabaseDescriptor . getReadRpcTimeout ( ) / 2 ; <nl> + sampleLatencyNanos = TimeUnit . MILLISECONDS . toNanos ( DatabaseDescriptor . getReadRpcTimeout ( ) / 2 ) ; <nl> <nl> logger . info ( " Initializing { } . { } " , keyspace . getName ( ) , name ) ; <nl> <nl> @ @ - 443 , 7 + 443 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> { <nl> case PERCENTILE : <nl> / / get percentile in nanos <nl> - sampleLatencyNanos = ( long ) ( metric . coordinatorReadLatency . getSnapshot ( ) . getValue ( retryPolicy . value ) * 1000d ) ; <nl> + sampleLatencyNanos = ( long ) ( metric . coordinatorReadLatency . getSnapshot ( ) . getValue ( retryPolicy . value ) ) ; <nl> break ; <nl> case CUSTOM : <nl> / / convert to nanos , since configuration is in millisecond
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c5e5335 . . 086e0e5 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 9 
 + * Fix speculative retry bugs ( CASSANDRA - 13009 ) 
 * Fix handling of nulls and unsets in IN conditions ( CASSANDRA - 12981 ) 
 * Remove support for non - JavaScript UDFs ( CASSANDRA - 12883 ) 
 * Fix DynamicEndpointSnitch noop in multi - datacenter situations ( CASSANDRA - 13074 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 4bc46d0 . . 2e52eb2 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 384 , 7 + 384 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 this . indexManager = new SecondaryIndexManager ( this ) ; 
 this . metric = new ColumnFamilyMetrics ( this ) ; 
 fileIndexGenerator . set ( generation ) ; 
 - sampleLatencyNanos = DatabaseDescriptor . getReadRpcTimeout ( ) / 2 ; 
 + sampleLatencyNanos = TimeUnit . MILLISECONDS . toNanos ( DatabaseDescriptor . getReadRpcTimeout ( ) / 2 ) ; 
 
 logger . info ( " Initializing { } . { } " , keyspace . getName ( ) , name ) ; 
 
 @ @ - 443 , 7 + 443 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 { 
 case PERCENTILE : 
 / / get percentile in nanos 
 - sampleLatencyNanos = ( long ) ( metric . coordinatorReadLatency . getSnapshot ( ) . getValue ( retryPolicy . value ) * 1000d ) ; 
 + sampleLatencyNanos = ( long ) ( metric . coordinatorReadLatency . getSnapshot ( ) . getValue ( retryPolicy . value ) ) ; 
 break ; 
 case CUSTOM : 
 / / convert to nanos , since configuration is in millisecond

NEAREST DIFF:
ELIMINATEDSENTENCE
