BLEU SCORE: 0.07986788803078405

TEST MSG: CHANGES . txt whitespace
GENERATED MSG: Add missing changelog entry

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7021e7b . . e7d7028 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 25 , 6 + 25 , 7 @ @ <nl> * reduce garbage creation in calculatePendingRanges ( CASSANDRA - 7191 ) <nl> * exit CQLSH with error status code if script fails ( CASSANDRA - 6344 ) <nl> <nl> + <nl> 1 . 2 . 16 <nl> * Add UNLOGGED , COUNTER options to BATCH documentation ( CASSANDRA - 6816 ) <nl> * add extra SSL cipher suites ( CASSANDRA - 6613 )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / utils / BytesReadTracker . java b / src / java / org / apache / cassandra / utils / BytesReadTracker . java <nl> index 8e7f15c . . 51971aa 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / BytesReadTracker . java <nl> + + + b / src / java / org / apache / cassandra / utils / BytesReadTracker . java <nl> @ @ - 49 , 7 + 49 , 6 @ @ public class BytesReadTracker implements DataInput <nl> bytesRead = 0 ; <nl> } <nl> <nl> - @ Override <nl> public boolean readBoolean ( ) throws IOException <nl> { <nl> boolean bool = source . readBoolean ( ) ; <nl> @ @ - 57 , 7 + 56 , 6 @ @ public class BytesReadTracker implements DataInput <nl> return bool ; <nl> } <nl> <nl> - @ Override <nl> public byte readByte ( ) throws IOException <nl> { <nl> byte b = source . readByte ( ) ; <nl> @ @ - 65 , 15 + 63 , 13 @ @ public class BytesReadTracker implements DataInput <nl> return b ; <nl> } <nl> <nl> - @ Override <nl> public char readChar ( ) throws IOException <nl> { <nl> char c = source . readChar ( ) ; <nl> - bytesRead + = 1 ; <nl> + bytesRead + = 2 ; <nl> return c ; <nl> } <nl> <nl> - @ Override <nl> public double readDouble ( ) throws IOException <nl> { <nl> double d = source . readDouble ( ) ; <nl> @ @ - 81 , 7 + 77 , 6 @ @ public class BytesReadTracker implements DataInput <nl> return d ; <nl> } <nl> <nl> - @ Override <nl> public float readFloat ( ) throws IOException <nl> { <nl> float f = source . readFloat ( ) ; <nl> @ @ - 89 , 21 + 84 , 18 @ @ public class BytesReadTracker implements DataInput <nl> return f ; <nl> } <nl> <nl> - @ Override <nl> public void readFully ( byte [ ] b , int off , int len ) throws IOException <nl> { <nl> source . readFully ( b , off , len ) ; <nl> bytesRead + = len ; <nl> } <nl> <nl> - @ Override <nl> public void readFully ( byte [ ] b ) throws IOException <nl> { <nl> source . readFully ( b ) ; <nl> bytesRead + = b . length ; <nl> } <nl> <nl> - @ Override <nl> public int readInt ( ) throws IOException <nl> { <nl> int i = source . readInt ( ) ; <nl> @ @ - 111 , 7 + 103 , 6 @ @ public class BytesReadTracker implements DataInput <nl> return i ; <nl> } <nl> <nl> - @ Override <nl> public String readLine ( ) throws IOException <nl> { <nl> / / since this method is deprecated and cannot track bytes read <nl> @ @ - 119 , 7 + 110 , 6 @ @ public class BytesReadTracker implements DataInput <nl> throw new UnsupportedOperationException ( ) ; <nl> } <nl> <nl> - @ Override <nl> public long readLong ( ) throws IOException <nl> { <nl> long l = source . readLong ( ) ; <nl> @ @ - 127 , 7 + 117 , 6 @ @ public class BytesReadTracker implements DataInput <nl> return l ; <nl> } <nl> <nl> - @ Override <nl> public short readShort ( ) throws IOException <nl> { <nl> short s = source . readShort ( ) ; <nl> @ @ - 135 , 13 + 124 , 11 @ @ public class BytesReadTracker implements DataInput <nl> return s ; <nl> } <nl> <nl> - @ Override <nl> public String readUTF ( ) throws IOException <nl> { <nl> return DataInputStream . readUTF ( this ) ; <nl> } <nl> <nl> - @ Override <nl> public int readUnsignedByte ( ) throws IOException <nl> { <nl> int i = source . readUnsignedByte ( ) ; <nl> @ @ - 149 , 7 + 136 , 6 @ @ public class BytesReadTracker implements DataInput <nl> return i ; <nl> } <nl> <nl> - @ Override <nl> public int readUnsignedShort ( ) throws IOException <nl> { <nl> int i = source . readUnsignedShort ( ) ; <nl> @ @ - 157 , 11 + 143 , 10 @ @ public class BytesReadTracker implements DataInput <nl> return i ; <nl> } <nl> <nl> - @ Override <nl> public int skipBytes ( int n ) throws IOException <nl> { <nl> int skipped = source . skipBytes ( n ) ; <nl> - bytesRead + = n ; <nl> + bytesRead + = skipped ; <nl> return skipped ; <nl> } <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / utils / BytesReadTrackerTest . java b / test / unit / org / apache / cassandra / utils / BytesReadTrackerTest . java <nl> index e367f94 . . 7724196 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / BytesReadTrackerTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / BytesReadTrackerTest . java <nl> @ @ - 79 , 34 + 79 , 36 @ @ public class BytesReadTrackerTest <nl> byte b = tracker . readByte ( ) ; <nl> assertEquals ( b , 0x1 ) ; <nl> assertEquals ( 2 , tracker . getBytesRead ( ) ) ; <nl> - / / char = 1byte <nl> + / / char = 2byte <nl> char c = tracker . readChar ( ) ; <nl> assertEquals ( ' a ' , c ) ; <nl> - assertEquals ( 3 , tracker . getBytesRead ( ) ) ; <nl> + assertEquals ( 4 , tracker . getBytesRead ( ) ) ; <nl> / / short = 2bytes <nl> short s = tracker . readShort ( ) ; <nl> assertEquals ( 1 , s ) ; <nl> - assertEquals ( ( short ) 5 , tracker . getBytesRead ( ) ) ; <nl> + assertEquals ( ( short ) 6 , tracker . getBytesRead ( ) ) ; <nl> / / int = 4bytes <nl> int i = tracker . readInt ( ) ; <nl> assertEquals ( 1 , i ) ; <nl> - assertEquals ( 9 , tracker . getBytesRead ( ) ) ; <nl> + assertEquals ( 10 , tracker . getBytesRead ( ) ) ; <nl> / / long = 8bytes <nl> long l = tracker . readLong ( ) ; <nl> assertEquals ( 1L , l ) ; <nl> - assertEquals ( 17 , tracker . getBytesRead ( ) ) ; <nl> + assertEquals ( 18 , tracker . getBytesRead ( ) ) ; <nl> / / float = 4bytes <nl> float f = tracker . readFloat ( ) ; <nl> assertEquals ( 1 . 0f , f , 0 ) ; <nl> - assertEquals ( 21 , tracker . getBytesRead ( ) ) ; <nl> + assertEquals ( 22 , tracker . getBytesRead ( ) ) ; <nl> / / double = 8bytes <nl> double d = tracker . readDouble ( ) ; <nl> assertEquals ( 1 . 0d , d , 0 ) ; <nl> - assertEquals ( 29 , tracker . getBytesRead ( ) ) ; <nl> + assertEquals ( 30 , tracker . getBytesRead ( ) ) ; <nl> / / String ( " abc " ) = 2 ( string size ) + 3 = 5 bytes <nl> String str = tracker . readUTF ( ) ; <nl> assertEquals ( " abc " , str ) ; <nl> - assertEquals ( 34 , tracker . getBytesRead ( ) ) ; <nl> + assertEquals ( 35 , tracker . getBytesRead ( ) ) ; <nl> + <nl> + assertEquals ( testData . length , tracker . getBytesRead ( ) ) ; <nl> } <nl> finally <nl> {

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7021e7b . . e7d7028 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 25 , 6 + 25 , 7 @ @ 
 * reduce garbage creation in calculatePendingRanges ( CASSANDRA - 7191 ) 
 * exit CQLSH with error status code if script fails ( CASSANDRA - 6344 ) 
 
 + 
 1 . 2 . 16 
 * Add UNLOGGED , COUNTER options to BATCH documentation ( CASSANDRA - 6816 ) 
 * add extra SSL cipher suites ( CASSANDRA - 6613 )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / utils / BytesReadTracker . java b / src / java / org / apache / cassandra / utils / BytesReadTracker . java 
 index 8e7f15c . . 51971aa 100644 
 - - - a / src / java / org / apache / cassandra / utils / BytesReadTracker . java 
 + + + b / src / java / org / apache / cassandra / utils / BytesReadTracker . java 
 @ @ - 49 , 7 + 49 , 6 @ @ public class BytesReadTracker implements DataInput 
 bytesRead = 0 ; 
 } 
 
 - @ Override 
 public boolean readBoolean ( ) throws IOException 
 { 
 boolean bool = source . readBoolean ( ) ; 
 @ @ - 57 , 7 + 56 , 6 @ @ public class BytesReadTracker implements DataInput 
 return bool ; 
 } 
 
 - @ Override 
 public byte readByte ( ) throws IOException 
 { 
 byte b = source . readByte ( ) ; 
 @ @ - 65 , 15 + 63 , 13 @ @ public class BytesReadTracker implements DataInput 
 return b ; 
 } 
 
 - @ Override 
 public char readChar ( ) throws IOException 
 { 
 char c = source . readChar ( ) ; 
 - bytesRead + = 1 ; 
 + bytesRead + = 2 ; 
 return c ; 
 } 
 
 - @ Override 
 public double readDouble ( ) throws IOException 
 { 
 double d = source . readDouble ( ) ; 
 @ @ - 81 , 7 + 77 , 6 @ @ public class BytesReadTracker implements DataInput 
 return d ; 
 } 
 
 - @ Override 
 public float readFloat ( ) throws IOException 
 { 
 float f = source . readFloat ( ) ; 
 @ @ - 89 , 21 + 84 , 18 @ @ public class BytesReadTracker implements DataInput 
 return f ; 
 } 
 
 - @ Override 
 public void readFully ( byte [ ] b , int off , int len ) throws IOException 
 { 
 source . readFully ( b , off , len ) ; 
 bytesRead + = len ; 
 } 
 
 - @ Override 
 public void readFully ( byte [ ] b ) throws IOException 
 { 
 source . readFully ( b ) ; 
 bytesRead + = b . length ; 
 } 
 
 - @ Override 
 public int readInt ( ) throws IOException 
 { 
 int i = source . readInt ( ) ; 
 @ @ - 111 , 7 + 103 , 6 @ @ public class BytesReadTracker implements DataInput 
 return i ; 
 } 
 
 - @ Override 
 public String readLine ( ) throws IOException 
 { 
 / / since this method is deprecated and cannot track bytes read 
 @ @ - 119 , 7 + 110 , 6 @ @ public class BytesReadTracker implements DataInput 
 throw new UnsupportedOperationException ( ) ; 
 } 
 
 - @ Override 
 public long readLong ( ) throws IOException 
 { 
 long l = source . readLong ( ) ; 
 @ @ - 127 , 7 + 117 , 6 @ @ public class BytesReadTracker implements DataInput 
 return l ; 
 } 
 
 - @ Override 
 public short readShort ( ) throws IOException 
 { 
 short s = source . readShort ( ) ; 
 @ @ - 135 , 13 + 124 , 11 @ @ public class BytesReadTracker implements DataInput 
 return s ; 
 } 
 
 - @ Override 
 public String readUTF ( ) throws IOException 
 { 
 return DataInputStream . readUTF ( this ) ; 
 } 
 
 - @ Override 
 public int readUnsignedByte ( ) throws IOException 
 { 
 int i = source . readUnsignedByte ( ) ; 
 @ @ - 149 , 7 + 136 , 6 @ @ public class BytesReadTracker implements DataInput 
 return i ; 
 } 
 
 - @ Override 
 public int readUnsignedShort ( ) throws IOException 
 { 
 int i = source . readUnsignedShort ( ) ; 
 @ @ - 157 , 11 + 143 , 10 @ @ public class BytesReadTracker implements DataInput 
 return i ; 
 } 
 
 - @ Override 
 public int skipBytes ( int n ) throws IOException 
 { 
 int skipped = source . skipBytes ( n ) ; 
 - bytesRead + = n ; 
 + bytesRead + = skipped ; 
 return skipped ; 
 } 
 } 
 diff - - git a / test / unit / org / apache / cassandra / utils / BytesReadTrackerTest . java b / test / unit / org / apache / cassandra / utils / BytesReadTrackerTest . java 
 index e367f94 . . 7724196 100644 
 - - - a / test / unit / org / apache / cassandra / utils / BytesReadTrackerTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / BytesReadTrackerTest . java 
 @ @ - 79 , 34 + 79 , 36 @ @ public class BytesReadTrackerTest 
 byte b = tracker . readByte ( ) ; 
 assertEquals ( b , 0x1 ) ; 
 assertEquals ( 2 , tracker . getBytesRead ( ) ) ; 
 - / / char = 1byte 
 + / / char = 2byte 
 char c = tracker . readChar ( ) ; 
 assertEquals ( ' a ' , c ) ; 
 - assertEquals ( 3 , tracker . getBytesRead ( ) ) ; 
 + assertEquals ( 4 , tracker . getBytesRead ( ) ) ; 
 / / short = 2bytes 
 short s = tracker . readShort ( ) ; 
 assertEquals ( 1 , s ) ; 
 - assertEquals ( ( short ) 5 , tracker . getBytesRead ( ) ) ; 
 + assertEquals ( ( short ) 6 , tracker . getBytesRead ( ) ) ; 
 / / int = 4bytes 
 int i = tracker . readInt ( ) ; 
 assertEquals ( 1 , i ) ; 
 - assertEquals ( 9 , tracker . getBytesRead ( ) ) ; 
 + assertEquals ( 10 , tracker . getBytesRead ( ) ) ; 
 / / long = 8bytes 
 long l = tracker . readLong ( ) ; 
 assertEquals ( 1L , l ) ; 
 - assertEquals ( 17 , tracker . getBytesRead ( ) ) ; 
 + assertEquals ( 18 , tracker . getBytesRead ( ) ) ; 
 / / float = 4bytes 
 float f = tracker . readFloat ( ) ; 
 assertEquals ( 1 . 0f , f , 0 ) ; 
 - assertEquals ( 21 , tracker . getBytesRead ( ) ) ; 
 + assertEquals ( 22 , tracker . getBytesRead ( ) ) ; 
 / / double = 8bytes 
 double d = tracker . readDouble ( ) ; 
 assertEquals ( 1 . 0d , d , 0 ) ; 
 - assertEquals ( 29 , tracker . getBytesRead ( ) ) ; 
 + assertEquals ( 30 , tracker . getBytesRead ( ) ) ; 
 / / String ( " abc " ) = 2 ( string size ) + 3 = 5 bytes 
 String str = tracker . readUTF ( ) ; 
 assertEquals ( " abc " , str ) ; 
 - assertEquals ( 34 , tracker . getBytesRead ( ) ) ; 
 + assertEquals ( 35 , tracker . getBytesRead ( ) ) ; 
 + 
 + assertEquals ( testData . length , tracker . getBytesRead ( ) ) ; 
 } 
 finally 
 {
