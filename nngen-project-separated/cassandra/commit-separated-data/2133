BLEU SCORE: 0.010122231330332757

TEST MSG: cassandra - stress : ninja fix profile param for user command to required , and print required fields first
GENERATED MSG: fixup

TEST DIFF (one line): diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / GroupedOptions . java b / tools / stress / src / org / apache / cassandra / stress / settings / GroupedOptions . java <nl> index d0e63b0 . . 8bbba15 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / settings / GroupedOptions . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / settings / GroupedOptions . java <nl> @ @ - 26 , 6 + 26 , 8 @ @ import java . util . HashSet ; <nl> import java . util . List ; <nl> import java . util . Set ; <nl> <nl> + import com . google . common . collect . ImmutableList ; <nl> + <nl> public abstract class GroupedOptions <nl> { <nl> <nl> @ @ - 112 , 6 + 114 , 20 @ @ public abstract class GroupedOptions <nl> } <nl> } <nl> <nl> + public static List < ? extends Option > merge ( List < ? extends Option > . . . optionss ) <nl> + { <nl> + ImmutableList . Builder < Option > builder = ImmutableList . builder ( ) ; <nl> + for ( List < ? extends Option > options : optionss ) <nl> + for ( Option option : options ) <nl> + if ( option instanceof OptionSimple & & ( ( OptionSimple ) option ) . isRequired ( ) ) <nl> + builder . add ( option ) ; <nl> + for ( List < ? extends Option > options : optionss ) <nl> + for ( Option option : options ) <nl> + if ( ! ( option instanceof OptionSimple & & ( ( OptionSimple ) option ) . isRequired ( ) ) ) <nl> + builder . add ( option ) ; <nl> + return builder . build ( ) ; <nl> + } <nl> + <nl> public static String formatLong ( String longDisplay , String description ) <nl> { <nl> return String . format ( " % - 40s % s " , longDisplay , description ) ; <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / OptionSimple . java b / tools / stress / src / org / apache / cassandra / stress / settings / OptionSimple . java <nl> index 71c1ffe . . ba26c2a 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / settings / OptionSimple . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / settings / OptionSimple . java <nl> @ @ - 88 , 6 + 88 , 11 @ @ class OptionSimple extends Option implements Serializable <nl> return value ! = null ; <nl> } <nl> <nl> + public boolean isRequired ( ) <nl> + { <nl> + return required ; <nl> + } <nl> + <nl> public boolean present ( ) <nl> { <nl> return value ! = null | | defaultValue ! = null ; <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefined . java b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefined . java <nl> index ab60dd1 . . 8583e90 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefined . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefined . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ package org . apache . cassandra . stress . settings ; <nl> <nl> <nl> import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> import java . util . Collections ; <nl> import java . util . List ; <nl> <nl> @ @ - 103 , 10 + 104 , 7 @ @ public class SettingsCommandPreDefined extends SettingsCommand <nl> @ Override <nl> public List < ? extends Option > options ( ) <nl> { <nl> - final List < Option > options = new ArrayList < > ( ) ; <nl> - options . addAll ( parent . options ( ) ) ; <nl> - options . add ( add ) ; <nl> - return options ; <nl> + return merge ( parent . options ( ) , Arrays . asList ( add , keysize ) ) ; <nl> } <nl> <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefinedMixed . java b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefinedMixed . java <nl> index dc45b89 . . 6beb55f 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefinedMixed . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefinedMixed . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ package org . apache . cassandra . stress . settings ; <nl> <nl> <nl> import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> <nl> @ @ - 108 , 11 + 109 , 7 @ @ public class SettingsCommandPreDefinedMixed extends SettingsCommandPreDefined <nl> @ Override <nl> public List < ? extends Option > options ( ) <nl> { <nl> - final List < Option > options = new ArrayList < > ( ) ; <nl> - options . add ( clustering ) ; <nl> - options . add ( probabilities ) ; <nl> - options . addAll ( super . options ( ) ) ; <nl> - return options ; <nl> + return merge ( Arrays . asList ( clustering , probabilities ) , super . options ( ) ) ; <nl> } <nl> <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandUser . java b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandUser . java <nl> index 2e30d62 . . a6dad35 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandUser . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandUser . java <nl> @ @ - 23 , 6 + 23 , 9 @ @ package org . apache . cassandra . stress . settings ; <nl> <nl> import java . io . File ; <nl> import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . Collections ; <nl> + import java . util . Comparator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> <nl> @ @ - 88 , 13 + 91 , 13 @ @ public class SettingsCommandUser extends SettingsCommand <nl> this . parent = parent ; <nl> } <nl> final OptionDistribution clustering = new OptionDistribution ( " clustering = " , " gaussian ( 1 . . 10 ) " , " Distribution clustering runs of operations of the same kind " ) ; <nl> - final OptionSimple profile = new OptionSimple ( " profile = " , " . * " , null , " Specify the path to a yaml cql3 profile " , false ) ; <nl> + final OptionSimple profile = new OptionSimple ( " profile = " , " . * " , null , " Specify the path to a yaml cql3 profile " , true ) ; <nl> final OptionAnyProbabilities ops = new OptionAnyProbabilities ( " ops " , " Specify the ratios for inserts / queries to perform ; e . g . ops ( insert = 2 , < query1 > = 1 ) will perform 2 inserts for each query1 " ) ; <nl> <nl> @ Override <nl> public List < ? extends Option > options ( ) <nl> { <nl> - return ImmutableList . < Option > builder ( ) . add ( ops , clustering , profile ) . addAll ( parent . options ( ) ) . build ( ) ; <nl> + return merge ( Arrays . asList ( ops , profile , clustering ) , parent . options ( ) ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / GroupedOptions . java b / tools / stress / src / org / apache / cassandra / stress / settings / GroupedOptions . java 
 index d0e63b0 . . 8bbba15 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / settings / GroupedOptions . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / settings / GroupedOptions . java 
 @ @ - 26 , 6 + 26 , 8 @ @ import java . util . HashSet ; 
 import java . util . List ; 
 import java . util . Set ; 
 
 + import com . google . common . collect . ImmutableList ; 
 + 
 public abstract class GroupedOptions 
 { 
 
 @ @ - 112 , 6 + 114 , 20 @ @ public abstract class GroupedOptions 
 } 
 } 
 
 + public static List < ? extends Option > merge ( List < ? extends Option > . . . optionss ) 
 + { 
 + ImmutableList . Builder < Option > builder = ImmutableList . builder ( ) ; 
 + for ( List < ? extends Option > options : optionss ) 
 + for ( Option option : options ) 
 + if ( option instanceof OptionSimple & & ( ( OptionSimple ) option ) . isRequired ( ) ) 
 + builder . add ( option ) ; 
 + for ( List < ? extends Option > options : optionss ) 
 + for ( Option option : options ) 
 + if ( ! ( option instanceof OptionSimple & & ( ( OptionSimple ) option ) . isRequired ( ) ) ) 
 + builder . add ( option ) ; 
 + return builder . build ( ) ; 
 + } 
 + 
 public static String formatLong ( String longDisplay , String description ) 
 { 
 return String . format ( " % - 40s % s " , longDisplay , description ) ; 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / OptionSimple . java b / tools / stress / src / org / apache / cassandra / stress / settings / OptionSimple . java 
 index 71c1ffe . . ba26c2a 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / settings / OptionSimple . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / settings / OptionSimple . java 
 @ @ - 88 , 6 + 88 , 11 @ @ class OptionSimple extends Option implements Serializable 
 return value ! = null ; 
 } 
 
 + public boolean isRequired ( ) 
 + { 
 + return required ; 
 + } 
 + 
 public boolean present ( ) 
 { 
 return value ! = null | | defaultValue ! = null ; 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefined . java b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefined . java 
 index ab60dd1 . . 8583e90 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefined . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefined . java 
 @ @ - 22 , 6 + 22 , 7 @ @ package org . apache . cassandra . stress . settings ; 
 
 
 import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 import java . util . Collections ; 
 import java . util . List ; 
 
 @ @ - 103 , 10 + 104 , 7 @ @ public class SettingsCommandPreDefined extends SettingsCommand 
 @ Override 
 public List < ? extends Option > options ( ) 
 { 
 - final List < Option > options = new ArrayList < > ( ) ; 
 - options . addAll ( parent . options ( ) ) ; 
 - options . add ( add ) ; 
 - return options ; 
 + return merge ( parent . options ( ) , Arrays . asList ( add , keysize ) ) ; 
 } 
 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefinedMixed . java b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefinedMixed . java 
 index dc45b89 . . 6beb55f 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefinedMixed . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandPreDefinedMixed . java 
 @ @ - 22 , 6 + 22 , 7 @ @ package org . apache . cassandra . stress . settings ; 
 
 
 import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 import java . util . List ; 
 import java . util . Map ; 
 
 @ @ - 108 , 11 + 109 , 7 @ @ public class SettingsCommandPreDefinedMixed extends SettingsCommandPreDefined 
 @ Override 
 public List < ? extends Option > options ( ) 
 { 
 - final List < Option > options = new ArrayList < > ( ) ; 
 - options . add ( clustering ) ; 
 - options . add ( probabilities ) ; 
 - options . addAll ( super . options ( ) ) ; 
 - return options ; 
 + return merge ( Arrays . asList ( clustering , probabilities ) , super . options ( ) ) ; 
 } 
 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandUser . java b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandUser . java 
 index 2e30d62 . . a6dad35 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandUser . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsCommandUser . java 
 @ @ - 23 , 6 + 23 , 9 @ @ package org . apache . cassandra . stress . settings ; 
 
 import java . io . File ; 
 import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 + import java . util . Collections ; 
 + import java . util . Comparator ; 
 import java . util . List ; 
 import java . util . Map ; 
 
 @ @ - 88 , 13 + 91 , 13 @ @ public class SettingsCommandUser extends SettingsCommand 
 this . parent = parent ; 
 } 
 final OptionDistribution clustering = new OptionDistribution ( " clustering = " , " gaussian ( 1 . . 10 ) " , " Distribution clustering runs of operations of the same kind " ) ; 
 - final OptionSimple profile = new OptionSimple ( " profile = " , " . * " , null , " Specify the path to a yaml cql3 profile " , false ) ; 
 + final OptionSimple profile = new OptionSimple ( " profile = " , " . * " , null , " Specify the path to a yaml cql3 profile " , true ) ; 
 final OptionAnyProbabilities ops = new OptionAnyProbabilities ( " ops " , " Specify the ratios for inserts / queries to perform ; e . g . ops ( insert = 2 , < query1 > = 1 ) will perform 2 inserts for each query1 " ) ; 
 
 @ Override 
 public List < ? extends Option > options ( ) 
 { 
 - return ImmutableList . < Option > builder ( ) . add ( ops , clustering , profile ) . addAll ( parent . options ( ) ) . build ( ) ; 
 + return merge ( Arrays . asList ( ops , profile , clustering ) , parent . options ( ) ) ; 
 } 
 } 


NEAREST DIFF:
ELIMINATEDSENTENCE
