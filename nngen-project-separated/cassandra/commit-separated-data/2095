BLEU SCORE: 0.027611988917697356

TEST MSG: Support many sstables to be passed into sstablerepairedset
GENERATED MSG: revert CASSANDRA - 5151 from 1 . 2

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ce0e76a . . 0080b25 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 1 <nl> + * Make sstablerepairedset take a list of files ( CASSANDRA - 7995 ) <nl> * ( cqlsh ) Tab completeion for indexes on map keys ( CASSANDRA - 7972 ) <nl> * ( cqlsh ) Fix UDT field selection in select clause ( CASSANDRA - 7891 ) <nl> * Fix resource leak in event of corrupt sstable <nl> diff - - git a / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java b / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java <nl> index 4dec32c . . b37d3b4 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java <nl> + + + b / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java <nl> @ @ - 17 , 25 + 17 , 16 @ @ <nl> * / <nl> package org . apache . cassandra . tools ; <nl> <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> - import java . io . PrintStream ; <nl> + import java . io . * ; <nl> + import java . nio . charset . Charset ; <nl> import java . nio . file . Files ; <nl> + import java . nio . file . Paths ; <nl> import java . nio . file . attribute . FileTime ; <nl> - import java . util . EnumSet ; <nl> - import java . util . Map ; <nl> - import java . util . Set ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> <nl> - import org . apache . cassandra . config . DatabaseDescriptor ; <nl> - import org . apache . cassandra . db . ColumnFamilyStore ; <nl> - import org . apache . cassandra . db . Keyspace ; <nl> import org . apache . cassandra . io . sstable . Component ; <nl> import org . apache . cassandra . io . sstable . Descriptor ; <nl> - import org . apache . cassandra . io . sstable . metadata . CompactionMetadata ; <nl> - import org . apache . cassandra . io . sstable . metadata . MetadataComponent ; <nl> - import org . apache . cassandra . io . sstable . metadata . MetadataType ; <nl> - import org . apache . cassandra . io . sstable . metadata . StatsMetadata ; <nl> - import org . apache . cassandra . io . sstable . metadata . ValidationMetadata ; <nl> import org . apache . cassandra . service . ActiveRepairService ; <nl> <nl> / * * <nl> @ @ - 45 , 7 + 36 , 7 @ @ import org . apache . cassandra . service . ActiveRepairService ; <nl> * <nl> * If you know you ran repair 2 weeks ago , you can do something like <nl> * <nl> - * for x in $ ( find / var / lib / cassandra / data / . . . / - iname " * Data . db * " - mtime + 14 ) ; do sstablerepairset - - is - repaired $ x ; done <nl> + * sstablerepairset - - is - repaired - f < ( find / var / lib / cassandra / data / . . . / - iname " * Data . db * " - mtime + 14 ) <nl> * <nl> * / <nl> public class SSTableRepairedAtSetter <nl> @ @ - 53 , 47 + 44 , 55 @ @ public class SSTableRepairedAtSetter <nl> / * * <nl> * @ param args a list of sstables whose metadata we are changing <nl> * / <nl> - public static void main ( String [ ] args ) throws IOException <nl> + public static void main ( final String [ ] args ) throws IOException <nl> { <nl> PrintStream out = System . out ; <nl> if ( args . length = = 0 ) <nl> { <nl> out . println ( " This command should be run with Cassandra stopped ! " ) ; <nl> - out . println ( " Usage : sstablerepairedset [ - - is - repaired | - - is - unrepaired ] < sstable > " ) ; <nl> + out . println ( " Usage : sstablerepairedset [ - - is - repaired | - - is - unrepaired ] [ - f < sstable - list > | < sstables > ] " ) ; <nl> System . exit ( 1 ) ; <nl> } <nl> <nl> - for ( String s : args ) <nl> - System . out . println ( s ) ; <nl> - <nl> - if ( args . length ! = 3 | | ! args [ 0 ] . equals ( " - - really - set " ) | | ( ! args [ 1 ] . equals ( " - - is - repaired " ) & & ! args [ 1 ] . equals ( " - - is - unrepaired " ) ) ) <nl> + if ( args . length < 3 | | ! args [ 0 ] . equals ( " - - really - set " ) | | ( ! args [ 1 ] . equals ( " - - is - repaired " ) & & ! args [ 1 ] . equals ( " - - is - unrepaired " ) ) ) <nl> { <nl> out . println ( " This command should be run with Cassandra stopped , otherwise you will get very strange behavior " ) ; <nl> out . println ( " Verify that Cassandra is not running and then execute the command like this : " ) ; <nl> - out . println ( " Usage : sstablelevelreset - - really - set [ - - is - repaired | - - is - unrepaired ] < sstable > " ) ; <nl> + out . println ( " Usage : sstablelevelreset - - really - set [ - - is - repaired | - - is - unrepaired ] [ - f < sstable - list > | < sstables > ] " ) ; <nl> System . exit ( 1 ) ; <nl> } <nl> <nl> boolean setIsRepaired = args [ 1 ] . equals ( " - - is - repaired " ) ; <nl> <nl> - String fname = args [ 2 ] ; <nl> - Descriptor descriptor = Descriptor . fromFilename ( fname ) ; <nl> - if ( descriptor . version . hasRepairedAt ) <nl> + List < String > fileNames ; <nl> + if ( args [ 2 ] . equals ( " - f " ) ) <nl> + { <nl> + fileNames = Files . readAllLines ( Paths . get ( args [ 3 ] ) , Charset . defaultCharset ( ) ) ; <nl> + } <nl> + else <nl> { <nl> - if ( setIsRepaired ) <nl> + fileNames = Arrays . asList ( args ) . subList ( 2 , args . length ) ; <nl> + } <nl> + <nl> + for ( String fname : fileNames ) <nl> + { <nl> + Descriptor descriptor = Descriptor . fromFilename ( fname ) ; <nl> + if ( descriptor . version . hasRepairedAt ) <nl> { <nl> - FileTime f = Files . getLastModifiedTime ( new File ( descriptor . filenameFor ( Component . DATA ) ) . toPath ( ) ) ; <nl> - descriptor . getMetadataSerializer ( ) . mutateRepairedAt ( descriptor , f . toMillis ( ) ) ; <nl> + if ( setIsRepaired ) <nl> + { <nl> + FileTime f = Files . getLastModifiedTime ( new File ( descriptor . filenameFor ( Component . DATA ) ) . toPath ( ) ) ; <nl> + descriptor . getMetadataSerializer ( ) . mutateRepairedAt ( descriptor , f . toMillis ( ) ) ; <nl> + } <nl> + else <nl> + { <nl> + descriptor . getMetadataSerializer ( ) . mutateRepairedAt ( descriptor , ActiveRepairService . UNREPAIRED _ SSTABLE ) ; <nl> + } <nl> } <nl> else <nl> { <nl> - descriptor . getMetadataSerializer ( ) . mutateRepairedAt ( descriptor , ActiveRepairService . UNREPAIRED _ SSTABLE ) ; <nl> + System . err . println ( " SSTable " + fname + " does not have repaired property , run upgradesstables " ) ; <nl> } <nl> } <nl> - else <nl> - { <nl> - out . println ( " SSTable " + fname + " does not have repaired property , run upgradesstables " ) ; <nl> - } <nl> - <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java <nl> index becbacf . . a413bc5 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java <nl> + + + b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public interface DynamicEndpointSnitchMBean { <nl> public String getSubsnitchClassName ( ) ; <nl> public List < Double > dumpTimings ( String hostname ) throws UnknownHostException ; <nl> / * * <nl> - * Use this if you want to specify a severity it can be - ve <nl> + * Use this if you want to specify a severity ; it can be negative <nl> * Example : Page cache is cold and you want data to be sent <nl> * though it is not preferred one . <nl> * /

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ce0e76a . . 0080b25 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 1 
 + * Make sstablerepairedset take a list of files ( CASSANDRA - 7995 ) 
 * ( cqlsh ) Tab completeion for indexes on map keys ( CASSANDRA - 7972 ) 
 * ( cqlsh ) Fix UDT field selection in select clause ( CASSANDRA - 7891 ) 
 * Fix resource leak in event of corrupt sstable 
 diff - - git a / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java b / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java 
 index 4dec32c . . b37d3b4 100644 
 - - - a / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java 
 + + + b / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java 
 @ @ - 17 , 25 + 17 , 16 @ @ 
 * / 
 package org . apache . cassandra . tools ; 
 
 - import java . io . File ; 
 - import java . io . IOException ; 
 - import java . io . PrintStream ; 
 + import java . io . * ; 
 + import java . nio . charset . Charset ; 
 import java . nio . file . Files ; 
 + import java . nio . file . Paths ; 
 import java . nio . file . attribute . FileTime ; 
 - import java . util . EnumSet ; 
 - import java . util . Map ; 
 - import java . util . Set ; 
 + import java . util . Arrays ; 
 + import java . util . List ; 
 
 - import org . apache . cassandra . config . DatabaseDescriptor ; 
 - import org . apache . cassandra . db . ColumnFamilyStore ; 
 - import org . apache . cassandra . db . Keyspace ; 
 import org . apache . cassandra . io . sstable . Component ; 
 import org . apache . cassandra . io . sstable . Descriptor ; 
 - import org . apache . cassandra . io . sstable . metadata . CompactionMetadata ; 
 - import org . apache . cassandra . io . sstable . metadata . MetadataComponent ; 
 - import org . apache . cassandra . io . sstable . metadata . MetadataType ; 
 - import org . apache . cassandra . io . sstable . metadata . StatsMetadata ; 
 - import org . apache . cassandra . io . sstable . metadata . ValidationMetadata ; 
 import org . apache . cassandra . service . ActiveRepairService ; 
 
 / * * 
 @ @ - 45 , 7 + 36 , 7 @ @ import org . apache . cassandra . service . ActiveRepairService ; 
 * 
 * If you know you ran repair 2 weeks ago , you can do something like 
 * 
 - * for x in $ ( find / var / lib / cassandra / data / . . . / - iname " * Data . db * " - mtime + 14 ) ; do sstablerepairset - - is - repaired $ x ; done 
 + * sstablerepairset - - is - repaired - f < ( find / var / lib / cassandra / data / . . . / - iname " * Data . db * " - mtime + 14 ) 
 * 
 * / 
 public class SSTableRepairedAtSetter 
 @ @ - 53 , 47 + 44 , 55 @ @ public class SSTableRepairedAtSetter 
 / * * 
 * @ param args a list of sstables whose metadata we are changing 
 * / 
 - public static void main ( String [ ] args ) throws IOException 
 + public static void main ( final String [ ] args ) throws IOException 
 { 
 PrintStream out = System . out ; 
 if ( args . length = = 0 ) 
 { 
 out . println ( " This command should be run with Cassandra stopped ! " ) ; 
 - out . println ( " Usage : sstablerepairedset [ - - is - repaired | - - is - unrepaired ] < sstable > " ) ; 
 + out . println ( " Usage : sstablerepairedset [ - - is - repaired | - - is - unrepaired ] [ - f < sstable - list > | < sstables > ] " ) ; 
 System . exit ( 1 ) ; 
 } 
 
 - for ( String s : args ) 
 - System . out . println ( s ) ; 
 - 
 - if ( args . length ! = 3 | | ! args [ 0 ] . equals ( " - - really - set " ) | | ( ! args [ 1 ] . equals ( " - - is - repaired " ) & & ! args [ 1 ] . equals ( " - - is - unrepaired " ) ) ) 
 + if ( args . length < 3 | | ! args [ 0 ] . equals ( " - - really - set " ) | | ( ! args [ 1 ] . equals ( " - - is - repaired " ) & & ! args [ 1 ] . equals ( " - - is - unrepaired " ) ) ) 
 { 
 out . println ( " This command should be run with Cassandra stopped , otherwise you will get very strange behavior " ) ; 
 out . println ( " Verify that Cassandra is not running and then execute the command like this : " ) ; 
 - out . println ( " Usage : sstablelevelreset - - really - set [ - - is - repaired | - - is - unrepaired ] < sstable > " ) ; 
 + out . println ( " Usage : sstablelevelreset - - really - set [ - - is - repaired | - - is - unrepaired ] [ - f < sstable - list > | < sstables > ] " ) ; 
 System . exit ( 1 ) ; 
 } 
 
 boolean setIsRepaired = args [ 1 ] . equals ( " - - is - repaired " ) ; 
 
 - String fname = args [ 2 ] ; 
 - Descriptor descriptor = Descriptor . fromFilename ( fname ) ; 
 - if ( descriptor . version . hasRepairedAt ) 
 + List < String > fileNames ; 
 + if ( args [ 2 ] . equals ( " - f " ) ) 
 + { 
 + fileNames = Files . readAllLines ( Paths . get ( args [ 3 ] ) , Charset . defaultCharset ( ) ) ; 
 + } 
 + else 
 { 
 - if ( setIsRepaired ) 
 + fileNames = Arrays . asList ( args ) . subList ( 2 , args . length ) ; 
 + } 
 + 
 + for ( String fname : fileNames ) 
 + { 
 + Descriptor descriptor = Descriptor . fromFilename ( fname ) ; 
 + if ( descriptor . version . hasRepairedAt ) 
 { 
 - FileTime f = Files . getLastModifiedTime ( new File ( descriptor . filenameFor ( Component . DATA ) ) . toPath ( ) ) ; 
 - descriptor . getMetadataSerializer ( ) . mutateRepairedAt ( descriptor , f . toMillis ( ) ) ; 
 + if ( setIsRepaired ) 
 + { 
 + FileTime f = Files . getLastModifiedTime ( new File ( descriptor . filenameFor ( Component . DATA ) ) . toPath ( ) ) ; 
 + descriptor . getMetadataSerializer ( ) . mutateRepairedAt ( descriptor , f . toMillis ( ) ) ; 
 + } 
 + else 
 + { 
 + descriptor . getMetadataSerializer ( ) . mutateRepairedAt ( descriptor , ActiveRepairService . UNREPAIRED _ SSTABLE ) ; 
 + } 
 } 
 else 
 { 
 - descriptor . getMetadataSerializer ( ) . mutateRepairedAt ( descriptor , ActiveRepairService . UNREPAIRED _ SSTABLE ) ; 
 + System . err . println ( " SSTable " + fname + " does not have repaired property , run upgradesstables " ) ; 
 } 
 } 
 - else 
 - { 
 - out . println ( " SSTable " + fname + " does not have repaired property , run upgradesstables " ) ; 
 - } 
 - 
 } 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java 
 index becbacf . . a413bc5 100644 
 - - - a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java 
 + + + b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitchMBean . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public interface DynamicEndpointSnitchMBean { 
 public String getSubsnitchClassName ( ) ; 
 public List < Double > dumpTimings ( String hostname ) throws UnknownHostException ; 
 / * * 
 - * Use this if you want to specify a severity it can be - ve 
 + * Use this if you want to specify a severity ; it can be negative 
 * Example : Page cache is cold and you want data to be sent 
 * though it is not preferred one . 
 * /
