BLEU SCORE: 0.029859662827819124

TEST MSG: unify test timeouts , exclude pig
GENERATED MSG: Versions , changes , news for 1 . 1 . 6 release

TEST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 2a6c524 . . 667dbe2 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1110 , 46 + 1110 , 52 @ @ <nl> < / target > <nl> <nl> < target name = " test " depends = " build - test " description = " Execute unit tests " > <nl> - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " 60000 " > <nl> + < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " > <nl> < jvmarg value = " - Dlegacy - sstable - root = $ { test . data } / legacy - sstables " / > <nl> < jvmarg value = " - Dcorrupt - sstable - root = $ { test . data } / corrupt - sstables " / > <nl> < jvmarg value = " - Dcassandra . ring _ delay _ ms = 1000 " / > <nl> < jvmarg value = " - Dcassandra . tolerate _ sstable _ size = true " / > <nl> < / testmacro > <nl> + < fileset dir = " $ { test . unit . src } " > <nl> + < exclude name = " * * / pig / * . java " / > <nl> + < / fileset > <nl> < / target > <nl> <nl> < target name = " test - compression " depends = " build - test " description = " Execute unit tests with sstable compression enabled " > <nl> - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " 60000 " > <nl> + < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " > <nl> < jvmarg value = " - Dlegacy - sstable - root = $ { test . data } / legacy - sstables " / > <nl> < jvmarg value = " - Dcorrupt - sstable - root = $ { test . data } / corrupt - sstables " / > <nl> < jvmarg value = " - Dcassandra . test . compression = true " / > <nl> < jvmarg value = " - Dcassandra . ring _ delay _ ms = 1000 " / > <nl> < jvmarg value = " - Dcassandra . tolerate _ sstable _ size = true " / > <nl> < / testmacro > <nl> + < fileset dir = " $ { test . unit . src } " > <nl> + < exclude name = " * * / pig / * . java " / > <nl> + < / fileset > <nl> < / target > <nl> <nl> < target name = " msg - ser - gen - test " depends = " build - test " description = " Generates message serializations " > <nl> < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " <nl> - timeout = " 60000 " filter = " * * / SerializationsTest . java " > <nl> + timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > <nl> < jvmarg value = " - Dcassandra . test - serialization - writes = True " / > <nl> < / testmacro > <nl> < / target > <nl> <nl> < target name = " msg - ser - test " depends = " build - test " description = " Tests message serializations " > <nl> - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " 60000 " <nl> + < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " <nl> filter = " * * / SerializationsTest . java " / > <nl> < / target > <nl> <nl> < target name = " msg - ser - test - 7 " depends = " build - test " description = " Generates message serializations " > <nl> < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " <nl> - timeout = " 60000 " filter = " * * / SerializationsTest . java " > <nl> + timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > <nl> < jvmarg value = " - Dcassandra . version = 0 . 7 " / > <nl> < / testmacro > <nl> < / target > <nl> <nl> < target name = " msg - ser - test - 10 " depends = " build - test " description = " Tests message serializations on 1 . 0 messages " > <nl> < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " <nl> - timeout = " 60000 " filter = " * * / SerializationsTest . java " > <nl> + timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > <nl> < jvmarg value = " - Dcassandra . version = 1 . 0 " / > <nl> < / testmacro > <nl> < / target >
NEAREST DIFF (one line): diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index f984618 . . 02acd47 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 113 , 6 + 113 , 9 @ @ DEFAULT _ HOST = ' localhost ' <nl> DEFAULT _ PORT = 9160 <nl> DEFAULT _ CQLVER = ' 2 ' <nl> <nl> + DEFAULT _ TIME _ FORMAT = ' % Y - % m - % d % H : % M : % S % z ' <nl> + DEFAULT _ FLOAT _ PRECISION = 3 <nl> + <nl> epilog = " " " Connects to % ( DEFAULT _ HOST ) s : % ( DEFAULT _ PORT ) d by default . These <nl> defaults can be changed by setting $ CQLSH _ HOST and / or $ CQLSH _ PORT . When a <nl> host ( and optional port number ) are given on the command line , they take <nl> @ @ - 546 , 8 + 549 , 6 @ @ class Shell ( cmd . Cmd ) : <nl> continue _ prompt = " . . . " <nl> keyspace _ prompt = " cqlsh : % s > " <nl> keyspace _ continue _ prompt = " % s . . . " <nl> - display _ time _ format = ' % Y - % m - % d % H : % M : % S % z ' <nl> - display _ float _ precision = 3 <nl> num _ retries = 4 <nl> show _ line _ nums = False <nl> debug = False <nl> @ @ - 559 , 7 + 560 , 9 @ @ class Shell ( cmd . Cmd ) : <nl> <nl> def _ _ init _ _ ( self , hostname , port , color = False , username = None , <nl> password = None , encoding = None , stdin = None , tty = True , <nl> - completekey = ' tab ' , use _ conn = None , cqlver = None , keyspace = None ) : <nl> + completekey = ' tab ' , use _ conn = None , cqlver = None , keyspace = None , <nl> + display _ time _ format = DEFAULT _ TIME _ FORMAT , <nl> + display _ float _ precision = DEFAULT _ FLOAT _ PRECISION ) : <nl> cmd . Cmd . _ _ init _ _ ( self , completekey = completekey ) <nl> self . hostname = hostname <nl> self . port = port <nl> @ @ - 582 , 6 + 585 , 8 @ @ class Shell ( cmd . Cmd ) : <nl> self . current _ keyspace = keyspace <nl> <nl> self . color = color <nl> + self . display _ time _ format = display _ time _ format <nl> + self . display _ float _ precision = display _ float _ precision <nl> if encoding is None : <nl> encoding = locale . getpreferredencoding ( ) <nl> self . encoding = encoding <nl> @ @ - 1796 , 7 + 1801 , 9 @ @ class Shell ( cmd . Cmd ) : <nl> return <nl> subshell = Shell ( self . hostname , self . port , color = self . color , <nl> encoding = self . encoding , stdin = f , tty = False , <nl> - use _ conn = self . conn , cqlver = self . cql _ version ) <nl> + use _ conn = self . conn , cqlver = self . cql _ version , <nl> + display _ time _ format = self . display _ time _ format , <nl> + display _ float _ precision = self . display _ float _ precision ) <nl> subshell . cmdloop ( ) <nl> f . close ( ) <nl> <nl> @ @ - 2610 , 6 + 2617 , 16 @ @ def option _ with _ default ( cparser _ getter , section , option , default = None ) : <nl> except ConfigParser . Error : <nl> return default <nl> <nl> + def raw _ option _ with _ default ( configs , section , option , default = None ) : <nl> + " " " <nl> + Same ( almost ) as option _ with _ default ( ) but won ' t do any string interpolation . <nl> + Useful for config values that include ' % ' symbol , e . g . time format string . <nl> + " " " <nl> + try : <nl> + return configs . get ( section , option , raw = True ) <nl> + except ConfigParser . Error : <nl> + return default <nl> + <nl> def should _ use _ color ( ) : <nl> if not sys . stdout . isatty ( ) : <nl> return False <nl> @ @ - 2637 , 6 + 2654 , 10 @ @ def read _ options ( cmdlineargs , environment ) : <nl> optvalues . keyspace = option _ with _ default ( configs . get , ' authentication ' , ' keyspace ' ) <nl> optvalues . completekey = option _ with _ default ( configs . get , ' ui ' , ' completekey ' , ' tab ' ) <nl> optvalues . color = option _ with _ default ( configs . getboolean , ' ui ' , ' color ' ) <nl> + optvalues . time _ format = raw _ option _ with _ default ( configs , ' ui ' , ' time _ format ' , <nl> + DEFAULT _ TIME _ FORMAT ) <nl> + optvalues . float _ precision = option _ with _ default ( configs . getint , ' ui ' , ' float _ precision ' , <nl> + DEFAULT _ FLOAT _ PRECISION ) <nl> optvalues . debug = False <nl> optvalues . file = None <nl> optvalues . tty = sys . stdin . isatty ( ) <nl> @ @ - 2732 , 7 + 2753 , 9 @ @ def main ( options , hostname , port ) : <nl> tty = options . tty , <nl> completekey = options . completekey , <nl> cqlver = options . cqlversion , <nl> - keyspace = options . keyspace ) <nl> + keyspace = options . keyspace , <nl> + display _ time _ format = options . time _ format , <nl> + display _ float _ precision = options . float _ precision ) <nl> except KeyboardInterrupt : <nl> sys . exit ( ' Connection aborted . ' ) <nl> except CQL _ ERRORS , e :

TEST DIFF:
diff - - git a / build . xml b / build . xml 
 index 2a6c524 . . 667dbe2 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 1110 , 46 + 1110 , 52 @ @ 
 < / target > 
 
 < target name = " test " depends = " build - test " description = " Execute unit tests " > 
 - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " 60000 " > 
 + < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " > 
 < jvmarg value = " - Dlegacy - sstable - root = $ { test . data } / legacy - sstables " / > 
 < jvmarg value = " - Dcorrupt - sstable - root = $ { test . data } / corrupt - sstables " / > 
 < jvmarg value = " - Dcassandra . ring _ delay _ ms = 1000 " / > 
 < jvmarg value = " - Dcassandra . tolerate _ sstable _ size = true " / > 
 < / testmacro > 
 + < fileset dir = " $ { test . unit . src } " > 
 + < exclude name = " * * / pig / * . java " / > 
 + < / fileset > 
 < / target > 
 
 < target name = " test - compression " depends = " build - test " description = " Execute unit tests with sstable compression enabled " > 
 - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " 60000 " > 
 + < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " > 
 < jvmarg value = " - Dlegacy - sstable - root = $ { test . data } / legacy - sstables " / > 
 < jvmarg value = " - Dcorrupt - sstable - root = $ { test . data } / corrupt - sstables " / > 
 < jvmarg value = " - Dcassandra . test . compression = true " / > 
 < jvmarg value = " - Dcassandra . ring _ delay _ ms = 1000 " / > 
 < jvmarg value = " - Dcassandra . tolerate _ sstable _ size = true " / > 
 < / testmacro > 
 + < fileset dir = " $ { test . unit . src } " > 
 + < exclude name = " * * / pig / * . java " / > 
 + < / fileset > 
 < / target > 
 
 < target name = " msg - ser - gen - test " depends = " build - test " description = " Generates message serializations " > 
 < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " 
 - timeout = " 60000 " filter = " * * / SerializationsTest . java " > 
 + timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > 
 < jvmarg value = " - Dcassandra . test - serialization - writes = True " / > 
 < / testmacro > 
 < / target > 
 
 < target name = " msg - ser - test " depends = " build - test " description = " Tests message serializations " > 
 - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " 60000 " 
 + < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " 
 filter = " * * / SerializationsTest . java " / > 
 < / target > 
 
 < target name = " msg - ser - test - 7 " depends = " build - test " description = " Generates message serializations " > 
 < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " 
 - timeout = " 60000 " filter = " * * / SerializationsTest . java " > 
 + timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > 
 < jvmarg value = " - Dcassandra . version = 0 . 7 " / > 
 < / testmacro > 
 < / target > 
 
 < target name = " msg - ser - test - 10 " depends = " build - test " description = " Tests message serializations on 1 . 0 messages " > 
 < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " 
 - timeout = " 60000 " filter = " * * / SerializationsTest . java " > 
 + timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > 
 < jvmarg value = " - Dcassandra . version = 1 . 0 " / > 
 < / testmacro > 
 < / target >

NEAREST DIFF:
diff - - git a / bin / cqlsh b / bin / cqlsh 
 index f984618 . . 02acd47 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 113 , 6 + 113 , 9 @ @ DEFAULT _ HOST = ' localhost ' 
 DEFAULT _ PORT = 9160 
 DEFAULT _ CQLVER = ' 2 ' 
 
 + DEFAULT _ TIME _ FORMAT = ' % Y - % m - % d % H : % M : % S % z ' 
 + DEFAULT _ FLOAT _ PRECISION = 3 
 + 
 epilog = " " " Connects to % ( DEFAULT _ HOST ) s : % ( DEFAULT _ PORT ) d by default . These 
 defaults can be changed by setting $ CQLSH _ HOST and / or $ CQLSH _ PORT . When a 
 host ( and optional port number ) are given on the command line , they take 
 @ @ - 546 , 8 + 549 , 6 @ @ class Shell ( cmd . Cmd ) : 
 continue _ prompt = " . . . " 
 keyspace _ prompt = " cqlsh : % s > " 
 keyspace _ continue _ prompt = " % s . . . " 
 - display _ time _ format = ' % Y - % m - % d % H : % M : % S % z ' 
 - display _ float _ precision = 3 
 num _ retries = 4 
 show _ line _ nums = False 
 debug = False 
 @ @ - 559 , 7 + 560 , 9 @ @ class Shell ( cmd . Cmd ) : 
 
 def _ _ init _ _ ( self , hostname , port , color = False , username = None , 
 password = None , encoding = None , stdin = None , tty = True , 
 - completekey = ' tab ' , use _ conn = None , cqlver = None , keyspace = None ) : 
 + completekey = ' tab ' , use _ conn = None , cqlver = None , keyspace = None , 
 + display _ time _ format = DEFAULT _ TIME _ FORMAT , 
 + display _ float _ precision = DEFAULT _ FLOAT _ PRECISION ) : 
 cmd . Cmd . _ _ init _ _ ( self , completekey = completekey ) 
 self . hostname = hostname 
 self . port = port 
 @ @ - 582 , 6 + 585 , 8 @ @ class Shell ( cmd . Cmd ) : 
 self . current _ keyspace = keyspace 
 
 self . color = color 
 + self . display _ time _ format = display _ time _ format 
 + self . display _ float _ precision = display _ float _ precision 
 if encoding is None : 
 encoding = locale . getpreferredencoding ( ) 
 self . encoding = encoding 
 @ @ - 1796 , 7 + 1801 , 9 @ @ class Shell ( cmd . Cmd ) : 
 return 
 subshell = Shell ( self . hostname , self . port , color = self . color , 
 encoding = self . encoding , stdin = f , tty = False , 
 - use _ conn = self . conn , cqlver = self . cql _ version ) 
 + use _ conn = self . conn , cqlver = self . cql _ version , 
 + display _ time _ format = self . display _ time _ format , 
 + display _ float _ precision = self . display _ float _ precision ) 
 subshell . cmdloop ( ) 
 f . close ( ) 
 
 @ @ - 2610 , 6 + 2617 , 16 @ @ def option _ with _ default ( cparser _ getter , section , option , default = None ) : 
 except ConfigParser . Error : 
 return default 
 
 + def raw _ option _ with _ default ( configs , section , option , default = None ) : 
 + " " " 
 + Same ( almost ) as option _ with _ default ( ) but won ' t do any string interpolation . 
 + Useful for config values that include ' % ' symbol , e . g . time format string . 
 + " " " 
 + try : 
 + return configs . get ( section , option , raw = True ) 
 + except ConfigParser . Error : 
 + return default 
 + 
 def should _ use _ color ( ) : 
 if not sys . stdout . isatty ( ) : 
 return False 
 @ @ - 2637 , 6 + 2654 , 10 @ @ def read _ options ( cmdlineargs , environment ) : 
 optvalues . keyspace = option _ with _ default ( configs . get , ' authentication ' , ' keyspace ' ) 
 optvalues . completekey = option _ with _ default ( configs . get , ' ui ' , ' completekey ' , ' tab ' ) 
 optvalues . color = option _ with _ default ( configs . getboolean , ' ui ' , ' color ' ) 
 + optvalues . time _ format = raw _ option _ with _ default ( configs , ' ui ' , ' time _ format ' , 
 + DEFAULT _ TIME _ FORMAT ) 
 + optvalues . float _ precision = option _ with _ default ( configs . getint , ' ui ' , ' float _ precision ' , 
 + DEFAULT _ FLOAT _ PRECISION ) 
 optvalues . debug = False 
 optvalues . file = None 
 optvalues . tty = sys . stdin . isatty ( ) 
 @ @ - 2732 , 7 + 2753 , 9 @ @ def main ( options , hostname , port ) : 
 tty = options . tty , 
 completekey = options . completekey , 
 cqlver = options . cqlversion , 
 - keyspace = options . keyspace ) 
 + keyspace = options . keyspace , 
 + display _ time _ format = options . time _ format , 
 + display _ float _ precision = options . float _ precision ) 
 except KeyboardInterrupt : 
 sys . exit ( ' Connection aborted . ' ) 
 except CQL _ ERRORS , e :
