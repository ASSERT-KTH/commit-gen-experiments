BLEU SCORE: 0.027611988917697356

TEST MSG: permit n = 1 in cassandra - stress
GENERATED MSG: fix warnings for _ as identifier

TEST DIFF (one line): diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / OptionDistribution . java b / tools / stress / src / org / apache / cassandra / stress / settings / OptionDistribution . java <nl> index 7186efb . . 713f5a6 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / settings / OptionDistribution . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / settings / OptionDistribution . java <nl> @ @ - 213 , 6 + 213 , 8 @ @ public class OptionDistribution extends Option <nl> mean = ( min + max ) / 2d ; <nl> stdev = ( ( max - min ) / 2d ) / stdevsToEdge ; <nl> } <nl> + if ( min = = max ) <nl> + return new FixedFactory ( min ) ; <nl> return new GaussianFactory ( min , max , mean , stdev ) ; <nl> } catch ( Exception ignore ) <nl> { <nl> @ @ - 233 , 6 + 235 , 8 @ @ public class OptionDistribution extends Option <nl> String [ ] bounds = params . get ( 0 ) . split ( " \ \ . \ \ . + " ) ; <nl> final long min = parseLong ( bounds [ 0 ] ) ; <nl> final long max = parseLong ( bounds [ 1 ] ) ; <nl> + if ( min = = max ) <nl> + return new FixedFactory ( min ) ; <nl> ExponentialDistribution findBounds = new ExponentialDistribution ( 1d ) ; <nl> / / max probability should be roughly equal to accuracy of ( max - min ) to ensure all values are visitable , <nl> / / over entire range , but this results in overly skewed distribution , so take sqrt <nl> @ @ - 257 , 6 + 261 , 8 @ @ public class OptionDistribution extends Option <nl> String [ ] bounds = params . get ( 0 ) . split ( " \ \ . \ \ . + " ) ; <nl> final long min = parseLong ( bounds [ 0 ] ) ; <nl> final long max = parseLong ( bounds [ 1 ] ) ; <nl> + if ( min = = max ) <nl> + return new FixedFactory ( min ) ; <nl> final double shape = Double . parseDouble ( params . get ( 1 ) ) ; <nl> WeibullDistribution findBounds = new WeibullDistribution ( shape , 1d ) ; <nl> / / max probability should be roughly equal to accuracy of ( max - min ) to ensure all values are visitable , <nl> @ @ - 288 , 6 + 294 , 8 @ @ public class OptionDistribution extends Option <nl> / / max probability should be roughly equal to accuracy of ( max - min ) to ensure all values are visitable , <nl> / / over entire range , but this results in overly skewed distribution , so take sqrt <nl> final double scale = ( max - min ) / findBounds . inverseCumulativeProbability ( 1d - Math . sqrt ( 1d / ( max - min ) ) ) ; <nl> + if ( min = = max ) <nl> + return new FixedFactory ( min ) ; <nl> return new QuantizedExtremeFactory ( min , max , shape , scale , quantas ) ; <nl> } catch ( Exception ignore ) <nl> { <nl> @ @ - 309 , 6 + 317 , 8 @ @ public class OptionDistribution extends Option <nl> String [ ] bounds = params . get ( 0 ) . split ( " \ \ . \ \ . + " ) ; <nl> final long min = parseLong ( bounds [ 0 ] ) ; <nl> final long max = parseLong ( bounds [ 1 ] ) ; <nl> + if ( min = = max ) <nl> + return new FixedFactory ( min ) ; <nl> return new UniformFactory ( min , max ) ; <nl> } catch ( Exception ignore ) <nl> {
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / OptionDistribution . java b / tools / stress / src / org / apache / cassandra / stress / settings / OptionDistribution . java 
 index 7186efb . . 713f5a6 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / settings / OptionDistribution . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / settings / OptionDistribution . java 
 @ @ - 213 , 6 + 213 , 8 @ @ public class OptionDistribution extends Option 
 mean = ( min + max ) / 2d ; 
 stdev = ( ( max - min ) / 2d ) / stdevsToEdge ; 
 } 
 + if ( min = = max ) 
 + return new FixedFactory ( min ) ; 
 return new GaussianFactory ( min , max , mean , stdev ) ; 
 } catch ( Exception ignore ) 
 { 
 @ @ - 233 , 6 + 235 , 8 @ @ public class OptionDistribution extends Option 
 String [ ] bounds = params . get ( 0 ) . split ( " \ \ . \ \ . + " ) ; 
 final long min = parseLong ( bounds [ 0 ] ) ; 
 final long max = parseLong ( bounds [ 1 ] ) ; 
 + if ( min = = max ) 
 + return new FixedFactory ( min ) ; 
 ExponentialDistribution findBounds = new ExponentialDistribution ( 1d ) ; 
 / / max probability should be roughly equal to accuracy of ( max - min ) to ensure all values are visitable , 
 / / over entire range , but this results in overly skewed distribution , so take sqrt 
 @ @ - 257 , 6 + 261 , 8 @ @ public class OptionDistribution extends Option 
 String [ ] bounds = params . get ( 0 ) . split ( " \ \ . \ \ . + " ) ; 
 final long min = parseLong ( bounds [ 0 ] ) ; 
 final long max = parseLong ( bounds [ 1 ] ) ; 
 + if ( min = = max ) 
 + return new FixedFactory ( min ) ; 
 final double shape = Double . parseDouble ( params . get ( 1 ) ) ; 
 WeibullDistribution findBounds = new WeibullDistribution ( shape , 1d ) ; 
 / / max probability should be roughly equal to accuracy of ( max - min ) to ensure all values are visitable , 
 @ @ - 288 , 6 + 294 , 8 @ @ public class OptionDistribution extends Option 
 / / max probability should be roughly equal to accuracy of ( max - min ) to ensure all values are visitable , 
 / / over entire range , but this results in overly skewed distribution , so take sqrt 
 final double scale = ( max - min ) / findBounds . inverseCumulativeProbability ( 1d - Math . sqrt ( 1d / ( max - min ) ) ) ; 
 + if ( min = = max ) 
 + return new FixedFactory ( min ) ; 
 return new QuantizedExtremeFactory ( min , max , shape , scale , quantas ) ; 
 } catch ( Exception ignore ) 
 { 
 @ @ - 309 , 6 + 317 , 8 @ @ public class OptionDistribution extends Option 
 String [ ] bounds = params . get ( 0 ) . split ( " \ \ . \ \ . + " ) ; 
 final long min = parseLong ( bounds [ 0 ] ) ; 
 final long max = parseLong ( bounds [ 1 ] ) ; 
 + if ( min = = max ) 
 + return new FixedFactory ( min ) ; 
 return new UniformFactory ( min , max ) ; 
 } catch ( Exception ignore ) 
 {

NEAREST DIFF:
ELIMINATEDSENTENCE
