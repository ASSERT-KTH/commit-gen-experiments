BLEU SCORE: 0.022491856490317246

TEST MSG: Document commitlog segment size and max mutations size link
GENERATED MSG: Adaptively set the heap size and memtable thresholds at runtime . Patch by brandonwilliams , reviewed by jbellis for CASSANDRA - 1469

TEST DIFF (one line): diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index f03a2f9 . . 4fd249f 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 312 , 12 + 312 , 18 @ @ commitlog _ sync _ period _ in _ ms : 10000 <nl> # The size of the individual commitlog file segments . A commitlog <nl> # segment may be archived , deleted , or recycled once all the data <nl> # in it ( potentially from each columnfamily in the system ) has been <nl> - # flushed to sstables . <nl> + # flushed to sstables . <nl> # <nl> # The default size is 32 , which is almost always fine , but if you are <nl> # archiving commitlog segments ( see commitlog _ archiving . properties ) , <nl> # then you probably want a finer granularity of archiving ; 8 or 16 MB <nl> # is reasonable . <nl> + # Max mutation size is also configurable via max _ mutation _ size _ in _ kb setting in <nl> + # cassandra . yaml . The default is half the size commitlog _ segment _ size _ in _ mb * 1024 . <nl> + # <nl> + # NOTE : If max _ mutation _ size _ in _ kb is set explicitly then commitlog _ segment _ size _ in _ mb must <nl> + # be set to at least twice the size of max _ mutation _ size _ in _ kb / 1024 <nl> + # <nl> commitlog _ segment _ size _ in _ mb : 32 <nl> <nl> # Compression to apply to the commit log . If omitted , the commit log
NEAREST DIFF (one line): diff - - git a / conf / cassandra - env . sh b / conf / cassandra - env . sh <nl> index 5c5ed8c . . fc2654d 100644 <nl> - - - a / conf / cassandra - env . sh <nl> + + + b / conf / cassandra - env . sh <nl> @ @ - 14 , 10 + 14 , 21 @ @ <nl> # See the License for the specific language governing permissions and <nl> # limitations under the License . <nl> <nl> + calculate _ heap _ size ( ) <nl> + { <nl> + system _ memory = ` free - m | awk ' / Mem : / { print $ 2 } ' ` <nl> + MAX _ HEAP _ SIZE = $ ( ( system _ memory / 2 ) ) M <nl> + } <nl> <nl> # The amount of memory to allocate to the JVM at startup , you almost <nl> - # certainly want to adjust this for your environment . <nl> - MAX _ HEAP _ SIZE = " 1G " <nl> + # certainly want to adjust this for your environment . If left commented <nl> + # out , the heap size will be automatically determined by calculate _ heap _ size <nl> + # MAX _ HEAP _ SIZE = " 4G " <nl> + <nl> + if [ " x $ MAX _ HEAP _ SIZE " = " x " ] ; then <nl> + calculate _ heap _ size <nl> + echo " Using adaptive heap size : " $ MAX _ HEAP _ SIZE <nl> + fi <nl> <nl> # Specifies the default port over which Cassandra will be available for <nl> # JMX connections . <nl> diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index 4fae68d . . c78d01c 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 143 , 11 + 143 , 14 @ @ binary _ memtable _ throughput _ in _ mb : 256 <nl> # This needs to be large enough that it won ' t cause a flush storm <nl> # of all your memtables flushing at once because none has hit <nl> # the size or count thresholds yet . <nl> - memtable _ flush _ after _ mins : 60 <nl> + # defaults to 60 <nl> + # memtable _ flush _ after _ mins : 60 <nl> # Size of the memtable in memory before it is flushed <nl> - memtable _ throughput _ in _ mb : 64 <nl> + # if left undefined , 1 / 8 of the heap will be used <nl> + # memtable _ throughput _ in _ mb : 256 <nl> # Number of objects in millions in the memtable before it is flushed <nl> - memtable _ operations _ in _ millions : 0 . 3 <nl> + # if left undefined , the memtable _ throughput _ in _ mb / 64 * 0 . 3 will be used <nl> + # memtable _ operations _ in _ millions : 1 . 2 <nl> <nl> # Add column indexes to a row after its contents reach this size . <nl> # Increase if your column values are large , or if you have a very large <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index bfb713f . . 71ed06b 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 73 , 9 + 73 , 9 @ @ public class Config <nl> / * Number of minutes to keep a memtable in memory * / <nl> public Integer memtable _ flush _ after _ mins = 60 * 60 * 1000 ; <nl> / * Size of the memtable in memory before it is dumped * / <nl> - public Integer memtable _ throughput _ in _ mb = 64 ; <nl> + public Integer memtable _ throughput _ in _ mb = ( int ) Runtime . getRuntime ( ) . maxMemory ( ) / 8 ; <nl> / * Number of objects in millions in the memtable before it is dumped * / <nl> - public Double memtable _ operations _ in _ millions = 0 . 1 ; <nl> + public Double memtable _ operations _ in _ millions = memtable _ throughput _ in _ mb / 64 * 0 . 3 ; <nl> <nl> / * if the size of columns or super - columns are more than this , indexing will kick in * / <nl> public Integer column _ index _ size _ in _ kb = 64 ;

TEST DIFF:
diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index f03a2f9 . . 4fd249f 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 312 , 12 + 312 , 18 @ @ commitlog _ sync _ period _ in _ ms : 10000 
 # The size of the individual commitlog file segments . A commitlog 
 # segment may be archived , deleted , or recycled once all the data 
 # in it ( potentially from each columnfamily in the system ) has been 
 - # flushed to sstables . 
 + # flushed to sstables . 
 # 
 # The default size is 32 , which is almost always fine , but if you are 
 # archiving commitlog segments ( see commitlog _ archiving . properties ) , 
 # then you probably want a finer granularity of archiving ; 8 or 16 MB 
 # is reasonable . 
 + # Max mutation size is also configurable via max _ mutation _ size _ in _ kb setting in 
 + # cassandra . yaml . The default is half the size commitlog _ segment _ size _ in _ mb * 1024 . 
 + # 
 + # NOTE : If max _ mutation _ size _ in _ kb is set explicitly then commitlog _ segment _ size _ in _ mb must 
 + # be set to at least twice the size of max _ mutation _ size _ in _ kb / 1024 
 + # 
 commitlog _ segment _ size _ in _ mb : 32 
 
 # Compression to apply to the commit log . If omitted , the commit log

NEAREST DIFF:
diff - - git a / conf / cassandra - env . sh b / conf / cassandra - env . sh 
 index 5c5ed8c . . fc2654d 100644 
 - - - a / conf / cassandra - env . sh 
 + + + b / conf / cassandra - env . sh 
 @ @ - 14 , 10 + 14 , 21 @ @ 
 # See the License for the specific language governing permissions and 
 # limitations under the License . 
 
 + calculate _ heap _ size ( ) 
 + { 
 + system _ memory = ` free - m | awk ' / Mem : / { print $ 2 } ' ` 
 + MAX _ HEAP _ SIZE = $ ( ( system _ memory / 2 ) ) M 
 + } 
 
 # The amount of memory to allocate to the JVM at startup , you almost 
 - # certainly want to adjust this for your environment . 
 - MAX _ HEAP _ SIZE = " 1G " 
 + # certainly want to adjust this for your environment . If left commented 
 + # out , the heap size will be automatically determined by calculate _ heap _ size 
 + # MAX _ HEAP _ SIZE = " 4G " 
 + 
 + if [ " x $ MAX _ HEAP _ SIZE " = " x " ] ; then 
 + calculate _ heap _ size 
 + echo " Using adaptive heap size : " $ MAX _ HEAP _ SIZE 
 + fi 
 
 # Specifies the default port over which Cassandra will be available for 
 # JMX connections . 
 diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index 4fae68d . . c78d01c 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 143 , 11 + 143 , 14 @ @ binary _ memtable _ throughput _ in _ mb : 256 
 # This needs to be large enough that it won ' t cause a flush storm 
 # of all your memtables flushing at once because none has hit 
 # the size or count thresholds yet . 
 - memtable _ flush _ after _ mins : 60 
 + # defaults to 60 
 + # memtable _ flush _ after _ mins : 60 
 # Size of the memtable in memory before it is flushed 
 - memtable _ throughput _ in _ mb : 64 
 + # if left undefined , 1 / 8 of the heap will be used 
 + # memtable _ throughput _ in _ mb : 256 
 # Number of objects in millions in the memtable before it is flushed 
 - memtable _ operations _ in _ millions : 0 . 3 
 + # if left undefined , the memtable _ throughput _ in _ mb / 64 * 0 . 3 will be used 
 + # memtable _ operations _ in _ millions : 1 . 2 
 
 # Add column indexes to a row after its contents reach this size . 
 # Increase if your column values are large , or if you have a very large 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index bfb713f . . 71ed06b 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 73 , 9 + 73 , 9 @ @ public class Config 
 / * Number of minutes to keep a memtable in memory * / 
 public Integer memtable _ flush _ after _ mins = 60 * 60 * 1000 ; 
 / * Size of the memtable in memory before it is dumped * / 
 - public Integer memtable _ throughput _ in _ mb = 64 ; 
 + public Integer memtable _ throughput _ in _ mb = ( int ) Runtime . getRuntime ( ) . maxMemory ( ) / 8 ; 
 / * Number of objects in millions in the memtable before it is dumped * / 
 - public Double memtable _ operations _ in _ millions = 0 . 1 ; 
 + public Double memtable _ operations _ in _ millions = memtable _ throughput _ in _ mb / 64 * 0 . 3 ; 
 
 / * if the size of columns or super - columns are more than this , indexing will kick in * / 
 public Integer column _ index _ size _ in _ kb = 64 ;
