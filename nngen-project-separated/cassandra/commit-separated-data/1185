BLEU SCORE: 0.040583489434387374

TEST MSG: 10485 - 3 . 0 patch
GENERATED MSG: cleanup

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 6bcc2f8 . . 63fa8cf 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 2476 , 10 + 2476 , 22 @ @ public class StorageProxy implements StorageProxyMBean <nl> { <nl> public void runMayThrow ( ) <nl> { <nl> - logger . trace ( " Adding hints for { } " , targets ) ; <nl> - HintsService . instance . write ( Iterables . transform ( targets , StorageService . instance : : getHostIdForEndpoint ) , <nl> - Hint . create ( mutation , System . currentTimeMillis ( ) ) ) ; <nl> - targets . forEach ( HintsService . instance . metrics : : incrCreatedHints ) ; <nl> + Set < InetAddress > validTargets = new HashSet < > ( targets . size ( ) ) ; <nl> + Set < UUID > hostIds = new HashSet < > ( targets . size ( ) ) ; <nl> + for ( InetAddress target : targets ) <nl> + { <nl> + UUID hostId = StorageService . instance . getHostIdForEndpoint ( target ) ; <nl> + if ( hostId ! = null ) <nl> + { <nl> + hostIds . add ( hostId ) ; <nl> + validTargets . add ( target ) ; <nl> + } <nl> + else <nl> + logger . debug ( " Discarding hint for endpoint not part of ring : { } " , target ) ; <nl> + } <nl> + logger . trace ( " Adding hints for { } " , validTargets ) ; <nl> + HintsService . instance . write ( hostIds , Hint . create ( mutation , System . currentTimeMillis ( ) ) ) ; <nl> + validTargets . forEach ( HintsService . instance . metrics : : incrCreatedHints ) ; <nl> / / Notify the handler only for CL = = ANY <nl> if ( responseHandler ! = null & & responseHandler . consistencyLevel = = ConsistencyLevel . ANY ) <nl> responseHandler . response ( null ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / CassandraServer . java b / src / java / org / apache / cassandra / service / CassandraServer . java <nl> index 1708b75 . . 1d14676 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraServer . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraServer . java <nl> @ @ - 618 , 7 + 618 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> } <nl> <nl> public List < KeySlice > get _ range _ slice ( String keyspace , ColumnParent column _ parent , SlicePredicate predicate , String start _ key , String finish _ key , int maxRows , ConsistencyLevel consistency _ level ) <nl> - throws InvalidRequestException , UnavailableException , TException , TimedOutException <nl> + throws InvalidRequestException , UnavailableException , TException , TimedOutException <nl> { <nl> if ( logger . isDebugEnabled ( ) ) <nl> logger . debug ( " range _ slice " ) ; <nl> @ @ - 664 , 7 + 664 , 6 @ @ public class CassandraServer implements Cassandra . Iface <nl> return keySlices ; <nl> } <nl> <nl> - @ Override <nl> public void login ( String keyspace , AuthenticationRequest auth _ request ) throws AuthenticationException , AuthorizationException , TException <nl> { <nl> DatabaseDescriptor . getAuthenticator ( ) . login ( keyspace , auth _ request ) ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 6bcc2f8 . . 63fa8cf 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 2476 , 10 + 2476 , 22 @ @ public class StorageProxy implements StorageProxyMBean 
 { 
 public void runMayThrow ( ) 
 { 
 - logger . trace ( " Adding hints for { } " , targets ) ; 
 - HintsService . instance . write ( Iterables . transform ( targets , StorageService . instance : : getHostIdForEndpoint ) , 
 - Hint . create ( mutation , System . currentTimeMillis ( ) ) ) ; 
 - targets . forEach ( HintsService . instance . metrics : : incrCreatedHints ) ; 
 + Set < InetAddress > validTargets = new HashSet < > ( targets . size ( ) ) ; 
 + Set < UUID > hostIds = new HashSet < > ( targets . size ( ) ) ; 
 + for ( InetAddress target : targets ) 
 + { 
 + UUID hostId = StorageService . instance . getHostIdForEndpoint ( target ) ; 
 + if ( hostId ! = null ) 
 + { 
 + hostIds . add ( hostId ) ; 
 + validTargets . add ( target ) ; 
 + } 
 + else 
 + logger . debug ( " Discarding hint for endpoint not part of ring : { } " , target ) ; 
 + } 
 + logger . trace ( " Adding hints for { } " , validTargets ) ; 
 + HintsService . instance . write ( hostIds , Hint . create ( mutation , System . currentTimeMillis ( ) ) ) ; 
 + validTargets . forEach ( HintsService . instance . metrics : : incrCreatedHints ) ; 
 / / Notify the handler only for CL = = ANY 
 if ( responseHandler ! = null & & responseHandler . consistencyLevel = = ConsistencyLevel . ANY ) 
 responseHandler . response ( null ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / CassandraServer . java b / src / java / org / apache / cassandra / service / CassandraServer . java 
 index 1708b75 . . 1d14676 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraServer . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraServer . java 
 @ @ - 618 , 7 + 618 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 } 
 
 public List < KeySlice > get _ range _ slice ( String keyspace , ColumnParent column _ parent , SlicePredicate predicate , String start _ key , String finish _ key , int maxRows , ConsistencyLevel consistency _ level ) 
 - throws InvalidRequestException , UnavailableException , TException , TimedOutException 
 + throws InvalidRequestException , UnavailableException , TException , TimedOutException 
 { 
 if ( logger . isDebugEnabled ( ) ) 
 logger . debug ( " range _ slice " ) ; 
 @ @ - 664 , 7 + 664 , 6 @ @ public class CassandraServer implements Cassandra . Iface 
 return keySlices ; 
 } 
 
 - @ Override 
 public void login ( String keyspace , AuthenticationRequest auth _ request ) throws AuthenticationException , AuthorizationException , TException 
 { 
 DatabaseDescriptor . getAuthenticator ( ) . login ( keyspace , auth _ request ) ;
