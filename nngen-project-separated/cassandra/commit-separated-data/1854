BLEU SCORE: 0.014971158614143297

TEST MSG: Throw OOM if allocating memory fails to return a valid pointer
GENERATED MSG: assert that we ' re not using the size of a freed memory region ( a sign of reference - counting bugs )

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7fa5f63 . . d2ecccc 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 13 : <nl> + * Throw OOM if allocating memory fails to return a valid pointer ( CASSANDRA - 8726 ) <nl> * Fix SSTableSimpleUnsortedWriter ConcurrentModificationException ( CASSANDRA - 8619 ) <nl> * Round up time deltas lower than 1ms in BulkLoader ( CASSANDRA - 8645 ) <nl> * Add batch remove iterator to ABSC ( CASSANDRA - 8414 , 8666 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / util / Memory . java b / src / java / org / apache / cassandra / io / util / Memory . java <nl> index 263205b . . fb70b99 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / Memory . java <nl> + + + b / src / java / org / apache / cassandra / io / util / Memory . java <nl> @ @ - 49 , 6 + 49 , 8 @ @ public class Memory <nl> { <nl> size = bytes ; <nl> peer = allocator . allocate ( size ) ; <nl> + if ( size ! = 0 & & peer = = 0 ) <nl> + throw new OutOfMemoryError ( ) ; <nl> } <nl> <nl> public static Memory allocate ( long bytes )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 87be6fa . . 70bb919 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 7 @ @ <nl> + 1 . 2 . 12 <nl> + * ( Hadoop ) Require CFRR batchSize to be at least 2 ( CASSANDRA - 6114 ) <nl> + <nl> + <nl> 1 . 2 . 11 <nl> * Add a warning for small LCS sstable size ( CASSANDRA - 6191 ) <nl> * Add ability to list specific KS / CF combinations in nodetool cfstats ( CASSANDRA - 4191 ) <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordReader . java b / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordReader . java <nl> index 701260a . . 6846356 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordReader . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordReader . java <nl> @ @ - 144 , 6 + 144 , 9 @ @ public class ColumnFamilyRecordReader extends RecordReader < ByteBuffer , SortedMap <nl> cfName = ConfigHelper . getInputColumnFamily ( conf ) ; <nl> consistencyLevel = ConsistencyLevel . valueOf ( ConfigHelper . getReadConsistencyLevel ( conf ) ) ; <nl> keyspace = ConfigHelper . getInputKeyspace ( conf ) ; <nl> + <nl> + if ( batchSize < 2 ) <nl> + throw new IllegalArgumentException ( " Minimum batchSize is 2 . Suggested batchSize is 100 or more " ) ; <nl> <nl> try <nl> {

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7fa5f63 . . d2ecccc 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 13 : 
 + * Throw OOM if allocating memory fails to return a valid pointer ( CASSANDRA - 8726 ) 
 * Fix SSTableSimpleUnsortedWriter ConcurrentModificationException ( CASSANDRA - 8619 ) 
 * Round up time deltas lower than 1ms in BulkLoader ( CASSANDRA - 8645 ) 
 * Add batch remove iterator to ABSC ( CASSANDRA - 8414 , 8666 ) 
 diff - - git a / src / java / org / apache / cassandra / io / util / Memory . java b / src / java / org / apache / cassandra / io / util / Memory . java 
 index 263205b . . fb70b99 100644 
 - - - a / src / java / org / apache / cassandra / io / util / Memory . java 
 + + + b / src / java / org / apache / cassandra / io / util / Memory . java 
 @ @ - 49 , 6 + 49 , 8 @ @ public class Memory 
 { 
 size = bytes ; 
 peer = allocator . allocate ( size ) ; 
 + if ( size ! = 0 & & peer = = 0 ) 
 + throw new OutOfMemoryError ( ) ; 
 } 
 
 public static Memory allocate ( long bytes )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 87be6fa . . 70bb919 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 7 @ @ 
 + 1 . 2 . 12 
 + * ( Hadoop ) Require CFRR batchSize to be at least 2 ( CASSANDRA - 6114 ) 
 + 
 + 
 1 . 2 . 11 
 * Add a warning for small LCS sstable size ( CASSANDRA - 6191 ) 
 * Add ability to list specific KS / CF combinations in nodetool cfstats ( CASSANDRA - 4191 ) 
 diff - - git a / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordReader . java b / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordReader . java 
 index 701260a . . 6846356 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordReader . java 
 + + + b / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordReader . java 
 @ @ - 144 , 6 + 144 , 9 @ @ public class ColumnFamilyRecordReader extends RecordReader < ByteBuffer , SortedMap 
 cfName = ConfigHelper . getInputColumnFamily ( conf ) ; 
 consistencyLevel = ConsistencyLevel . valueOf ( ConfigHelper . getReadConsistencyLevel ( conf ) ) ; 
 keyspace = ConfigHelper . getInputKeyspace ( conf ) ; 
 + 
 + if ( batchSize < 2 ) 
 + throw new IllegalArgumentException ( " Minimum batchSize is 2 . Suggested batchSize is 100 or more " ) ; 
 
 try 
 {
