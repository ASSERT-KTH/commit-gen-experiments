BLEU SCORE: 0.0416725164513856

TEST MSG: Improve PasswordAuthenticator default super user setup
GENERATED MSG: Relax CL for auth queries for non - default users

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9fad7c9 . . db5fa3a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 . 19 <nl> + * Improve PasswordAuthenticator default super user setup ( CASSANDRA - 7788 ) <nl> * Remove duplicates from StorageService . getJoiningNodes ( CASSANDRA - 7478 ) <nl> * Clone token map outside of hot gossip loops ( CASSANDRA - 7758 ) <nl> * Add stop method to EmbeddedCassandraService ( CASSANDRA - 7595 ) <nl> diff - - git a / src / java / org / apache / cassandra / auth / Auth . java b / src / java / org / apache / cassandra / auth / Auth . java <nl> index 9cee12a . . 60c87d7 100644 <nl> - - - a / src / java / org / apache / cassandra / auth / Auth . java <nl> + + + b / src / java / org / apache / cassandra / auth / Auth . java <nl> @ @ - 38 , 7 + 38 , 6 @ @ import org . apache . cassandra . locator . SimpleStrategy ; <nl> import org . apache . cassandra . service . * ; <nl> import org . apache . cassandra . transport . messages . ResultMessage ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> - import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> public class Auth <nl> { <nl> @ @ - 137 , 18 + 136 , 15 @ @ public class Auth <nl> / / the delay is here to give the node some time to see its peers - to reduce <nl> / / " Skipped default superuser setup : some nodes were not ready " log spam . <nl> / / It ' s the only reason for the delay . <nl> - if ( DatabaseDescriptor . getSeeds ( ) . contains ( FBUtilities . getBroadcastAddress ( ) ) | | ! DatabaseDescriptor . isAutoBootstrap ( ) ) <nl> - { <nl> - StorageService . tasks . schedule ( new Runnable ( ) <nl> + StorageService . tasks . schedule ( new Runnable ( ) <nl> + { <nl> + public void run ( ) <nl> { <nl> - public void run ( ) <nl> - { <nl> - setupDefaultSuperuser ( ) ; <nl> - } <nl> - } , <nl> - SUPERUSER _ SETUP _ DELAY , <nl> - TimeUnit . MILLISECONDS ) ; <nl> - } <nl> + setupDefaultSuperuser ( ) ; <nl> + } <nl> + } , <nl> + SUPERUSER _ SETUP _ DELAY , <nl> + TimeUnit . MILLISECONDS ) ; <nl> <nl> try <nl> { <nl> @ @ - 213 , 7 + 209 , 7 @ @ public class Auth <nl> USERS _ CF , <nl> DEFAULT _ SUPERUSER _ NAME , <nl> true ) , <nl> - ConsistencyLevel . QUORUM ) ; <nl> + ConsistencyLevel . ONE ) ; <nl> logger . info ( " Created default superuser ' { } ' " , DEFAULT _ SUPERUSER _ NAME ) ; <nl> } <nl> } <nl> @ @ - 228 , 7 + 224 , 8 @ @ public class Auth <nl> / / Try looking up the ' cassandra ' default super user first , to avoid the range query if possible . <nl> String defaultSUQuery = String . format ( " SELECT * FROM % s . % s WHERE name = ' % s ' " , AUTH _ KS , USERS _ CF , DEFAULT _ SUPERUSER _ NAME ) ; <nl> String allUsersQuery = String . format ( " SELECT * FROM % s . % s LIMIT 1 " , AUTH _ KS , USERS _ CF ) ; <nl> - return ! QueryProcessor . process ( defaultSUQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) <nl> + return ! QueryProcessor . process ( defaultSUQuery , ConsistencyLevel . ONE ) . isEmpty ( ) <nl> + | | ! QueryProcessor . process ( defaultSUQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) <nl> | | ! QueryProcessor . process ( allUsersQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java <nl> index 9adbe4e . . dfe7275 100644 <nl> - - - a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java <nl> + + + b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java <nl> @ @ - 27 , 7 + 27 , 6 @ @ import org . apache . commons . lang . StringUtils ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> - import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . config . Schema ; <nl> import org . apache . cassandra . cql3 . UntypedResultSet ; <nl> import org . apache . cassandra . cql3 . QueryProcessor ; <nl> @ @ - 39 , 7 + 38 , 6 @ @ import org . apache . cassandra . service . QueryState ; <nl> import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . transport . messages . ResultMessage ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> - import org . apache . cassandra . utils . FBUtilities ; <nl> import org . mindrot . jbcrypt . BCrypt ; <nl> <nl> / * * <nl> @ @ - 169 , 18 + 167 , 15 @ @ public class PasswordAuthenticator implements IAuthenticator <nl> / / the delay is here to give the node some time to see its peers - to reduce <nl> / / " skipped default user setup : some nodes are were not ready " log spam . <nl> / / It ' s the only reason for the delay . <nl> - if ( DatabaseDescriptor . getSeeds ( ) . contains ( FBUtilities . getBroadcastAddress ( ) ) | | ! DatabaseDescriptor . isAutoBootstrap ( ) ) <nl> - { <nl> - StorageService . tasks . schedule ( new Runnable ( ) <nl> + StorageService . tasks . schedule ( new Runnable ( ) <nl> + { <nl> + public void run ( ) <nl> { <nl> - public void run ( ) <nl> - { <nl> - setupDefaultUser ( ) ; <nl> - } <nl> - } , <nl> - Auth . SUPERUSER _ SETUP _ DELAY , <nl> - TimeUnit . MILLISECONDS ) ; <nl> - } <nl> + setupDefaultUser ( ) ; <nl> + } <nl> + } , <nl> + Auth . SUPERUSER _ SETUP _ DELAY , <nl> + TimeUnit . MILLISECONDS ) ; <nl> <nl> try <nl> { <nl> @ @ - 224 , 7 + 219 , 7 @ @ public class PasswordAuthenticator implements IAuthenticator <nl> CREDENTIALS _ CF , <nl> DEFAULT _ USER _ NAME , <nl> escape ( hashpw ( DEFAULT _ USER _ PASSWORD ) ) ) , <nl> - ConsistencyLevel . QUORUM ) ; <nl> + ConsistencyLevel . ONE ) ; <nl> logger . info ( " PasswordAuthenticator created default user ' { } ' " , DEFAULT _ USER _ NAME ) ; <nl> } <nl> } <nl> @ @ - 239 , 7 + 234 , 9 @ @ public class PasswordAuthenticator implements IAuthenticator <nl> / / Try looking up the ' cassandra ' default user first , to avoid the range query if possible . <nl> String defaultSUQuery = String . format ( " SELECT * FROM % s . % s WHERE username = ' % s ' " , Auth . AUTH _ KS , CREDENTIALS _ CF , DEFAULT _ USER _ NAME ) ; <nl> String allUsersQuery = String . format ( " SELECT * FROM % s . % s LIMIT 1 " , Auth . AUTH _ KS , CREDENTIALS _ CF ) ; <nl> - return ! process ( defaultSUQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) | | ! process ( allUsersQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) ; <nl> + return ! process ( defaultSUQuery , ConsistencyLevel . ONE ) . isEmpty ( ) <nl> + | | ! process ( defaultSUQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) <nl> + | | ! process ( allUsersQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) ; <nl> } <nl> <nl> private static String hashpw ( String password )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 72e6288 . . da81b66 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 1 . 11 <nl> + * add tmp flag to Descriptor hashcode ( CASSANDRA - 4021 ) <nl> * fix logging of " Found table data in data directories " when only system tables <nl> are present ( CASSANDRA - 5289 ) <nl> * cli : Add JMX authentication support ( CASSANDRA - 5080 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / Descriptor . java b / src / java / org / apache / cassandra / io / sstable / Descriptor . java <nl> index f4663b7 . . d2a9f46 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / Descriptor . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / Descriptor . java <nl> @ @ - 100 , 7 + 100 , 7 @ @ public class Descriptor <nl> this . cfname = cfname ; <nl> this . generation = generation ; <nl> temporary = temp ; <nl> - hashCode = Objects . hashCode ( directory , generation , ksname , cfname ) ; <nl> + hashCode = Objects . hashCode ( directory , generation , ksname , cfname , temp ) ; <nl> <nl> hasStringsInBloomFilter = version . compareTo ( " c " ) < 0 ; <nl> hasIntRowSize = version . compareTo ( " d " ) < 0 ; <nl> @ @ - 266 , 7 + 266 , 7 @ @ public class Descriptor <nl> if ( ! ( o instanceof Descriptor ) ) <nl> return false ; <nl> Descriptor that = ( Descriptor ) o ; <nl> - return that . directory . equals ( this . directory ) & & that . generation = = this . generation & & that . ksname . equals ( this . ksname ) & & that . cfname . equals ( this . cfname ) ; <nl> + return that . directory . equals ( this . directory ) & & that . generation = = this . generation & & that . ksname . equals ( this . ksname ) & & that . cfname . equals ( this . cfname ) & & that . temporary = = this . temporary ; <nl> } <nl> <nl> @ Override

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9fad7c9 . . db5fa3a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 . 19 
 + * Improve PasswordAuthenticator default super user setup ( CASSANDRA - 7788 ) 
 * Remove duplicates from StorageService . getJoiningNodes ( CASSANDRA - 7478 ) 
 * Clone token map outside of hot gossip loops ( CASSANDRA - 7758 ) 
 * Add stop method to EmbeddedCassandraService ( CASSANDRA - 7595 ) 
 diff - - git a / src / java / org / apache / cassandra / auth / Auth . java b / src / java / org / apache / cassandra / auth / Auth . java 
 index 9cee12a . . 60c87d7 100644 
 - - - a / src / java / org / apache / cassandra / auth / Auth . java 
 + + + b / src / java / org / apache / cassandra / auth / Auth . java 
 @ @ - 38 , 7 + 38 , 6 @ @ import org . apache . cassandra . locator . SimpleStrategy ; 
 import org . apache . cassandra . service . * ; 
 import org . apache . cassandra . transport . messages . ResultMessage ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 - import org . apache . cassandra . utils . FBUtilities ; 
 
 public class Auth 
 { 
 @ @ - 137 , 18 + 136 , 15 @ @ public class Auth 
 / / the delay is here to give the node some time to see its peers - to reduce 
 / / " Skipped default superuser setup : some nodes were not ready " log spam . 
 / / It ' s the only reason for the delay . 
 - if ( DatabaseDescriptor . getSeeds ( ) . contains ( FBUtilities . getBroadcastAddress ( ) ) | | ! DatabaseDescriptor . isAutoBootstrap ( ) ) 
 - { 
 - StorageService . tasks . schedule ( new Runnable ( ) 
 + StorageService . tasks . schedule ( new Runnable ( ) 
 + { 
 + public void run ( ) 
 { 
 - public void run ( ) 
 - { 
 - setupDefaultSuperuser ( ) ; 
 - } 
 - } , 
 - SUPERUSER _ SETUP _ DELAY , 
 - TimeUnit . MILLISECONDS ) ; 
 - } 
 + setupDefaultSuperuser ( ) ; 
 + } 
 + } , 
 + SUPERUSER _ SETUP _ DELAY , 
 + TimeUnit . MILLISECONDS ) ; 
 
 try 
 { 
 @ @ - 213 , 7 + 209 , 7 @ @ public class Auth 
 USERS _ CF , 
 DEFAULT _ SUPERUSER _ NAME , 
 true ) , 
 - ConsistencyLevel . QUORUM ) ; 
 + ConsistencyLevel . ONE ) ; 
 logger . info ( " Created default superuser ' { } ' " , DEFAULT _ SUPERUSER _ NAME ) ; 
 } 
 } 
 @ @ - 228 , 7 + 224 , 8 @ @ public class Auth 
 / / Try looking up the ' cassandra ' default super user first , to avoid the range query if possible . 
 String defaultSUQuery = String . format ( " SELECT * FROM % s . % s WHERE name = ' % s ' " , AUTH _ KS , USERS _ CF , DEFAULT _ SUPERUSER _ NAME ) ; 
 String allUsersQuery = String . format ( " SELECT * FROM % s . % s LIMIT 1 " , AUTH _ KS , USERS _ CF ) ; 
 - return ! QueryProcessor . process ( defaultSUQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) 
 + return ! QueryProcessor . process ( defaultSUQuery , ConsistencyLevel . ONE ) . isEmpty ( ) 
 + | | ! QueryProcessor . process ( defaultSUQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) 
 | | ! QueryProcessor . process ( allUsersQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java 
 index 9adbe4e . . dfe7275 100644 
 - - - a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java 
 + + + b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java 
 @ @ - 27 , 7 + 27 , 6 @ @ import org . apache . commons . lang . StringUtils ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 - import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . config . Schema ; 
 import org . apache . cassandra . cql3 . UntypedResultSet ; 
 import org . apache . cassandra . cql3 . QueryProcessor ; 
 @ @ - 39 , 7 + 38 , 6 @ @ import org . apache . cassandra . service . QueryState ; 
 import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . transport . messages . ResultMessage ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 - import org . apache . cassandra . utils . FBUtilities ; 
 import org . mindrot . jbcrypt . BCrypt ; 
 
 / * * 
 @ @ - 169 , 18 + 167 , 15 @ @ public class PasswordAuthenticator implements IAuthenticator 
 / / the delay is here to give the node some time to see its peers - to reduce 
 / / " skipped default user setup : some nodes are were not ready " log spam . 
 / / It ' s the only reason for the delay . 
 - if ( DatabaseDescriptor . getSeeds ( ) . contains ( FBUtilities . getBroadcastAddress ( ) ) | | ! DatabaseDescriptor . isAutoBootstrap ( ) ) 
 - { 
 - StorageService . tasks . schedule ( new Runnable ( ) 
 + StorageService . tasks . schedule ( new Runnable ( ) 
 + { 
 + public void run ( ) 
 { 
 - public void run ( ) 
 - { 
 - setupDefaultUser ( ) ; 
 - } 
 - } , 
 - Auth . SUPERUSER _ SETUP _ DELAY , 
 - TimeUnit . MILLISECONDS ) ; 
 - } 
 + setupDefaultUser ( ) ; 
 + } 
 + } , 
 + Auth . SUPERUSER _ SETUP _ DELAY , 
 + TimeUnit . MILLISECONDS ) ; 
 
 try 
 { 
 @ @ - 224 , 7 + 219 , 7 @ @ public class PasswordAuthenticator implements IAuthenticator 
 CREDENTIALS _ CF , 
 DEFAULT _ USER _ NAME , 
 escape ( hashpw ( DEFAULT _ USER _ PASSWORD ) ) ) , 
 - ConsistencyLevel . QUORUM ) ; 
 + ConsistencyLevel . ONE ) ; 
 logger . info ( " PasswordAuthenticator created default user ' { } ' " , DEFAULT _ USER _ NAME ) ; 
 } 
 } 
 @ @ - 239 , 7 + 234 , 9 @ @ public class PasswordAuthenticator implements IAuthenticator 
 / / Try looking up the ' cassandra ' default user first , to avoid the range query if possible . 
 String defaultSUQuery = String . format ( " SELECT * FROM % s . % s WHERE username = ' % s ' " , Auth . AUTH _ KS , CREDENTIALS _ CF , DEFAULT _ USER _ NAME ) ; 
 String allUsersQuery = String . format ( " SELECT * FROM % s . % s LIMIT 1 " , Auth . AUTH _ KS , CREDENTIALS _ CF ) ; 
 - return ! process ( defaultSUQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) | | ! process ( allUsersQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) ; 
 + return ! process ( defaultSUQuery , ConsistencyLevel . ONE ) . isEmpty ( ) 
 + | | ! process ( defaultSUQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) 
 + | | ! process ( allUsersQuery , ConsistencyLevel . QUORUM ) . isEmpty ( ) ; 
 } 
 
 private static String hashpw ( String password )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 72e6288 . . da81b66 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 1 . 11 
 + * add tmp flag to Descriptor hashcode ( CASSANDRA - 4021 ) 
 * fix logging of " Found table data in data directories " when only system tables 
 are present ( CASSANDRA - 5289 ) 
 * cli : Add JMX authentication support ( CASSANDRA - 5080 ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / Descriptor . java b / src / java / org / apache / cassandra / io / sstable / Descriptor . java 
 index f4663b7 . . d2a9f46 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / Descriptor . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / Descriptor . java 
 @ @ - 100 , 7 + 100 , 7 @ @ public class Descriptor 
 this . cfname = cfname ; 
 this . generation = generation ; 
 temporary = temp ; 
 - hashCode = Objects . hashCode ( directory , generation , ksname , cfname ) ; 
 + hashCode = Objects . hashCode ( directory , generation , ksname , cfname , temp ) ; 
 
 hasStringsInBloomFilter = version . compareTo ( " c " ) < 0 ; 
 hasIntRowSize = version . compareTo ( " d " ) < 0 ; 
 @ @ - 266 , 7 + 266 , 7 @ @ public class Descriptor 
 if ( ! ( o instanceof Descriptor ) ) 
 return false ; 
 Descriptor that = ( Descriptor ) o ; 
 - return that . directory . equals ( this . directory ) & & that . generation = = this . generation & & that . ksname . equals ( this . ksname ) & & that . cfname . equals ( this . cfname ) ; 
 + return that . directory . equals ( this . directory ) & & that . generation = = this . generation & & that . ksname . equals ( this . ksname ) & & that . cfname . equals ( this . cfname ) & & that . temporary = = this . temporary ; 
 } 
 
 @ Override
