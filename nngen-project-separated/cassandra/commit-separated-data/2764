BLEU SCORE: 0.020980574531482755

TEST MSG: Fix upgradesstables NPE for non - CF - based indexes
GENERATED MSG: merge from 1 . 2

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index cfdd148 . . 4be97f1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 6 + 1 , 8 @ @ <nl> 1 . 2 . 16 <nl> + * Fix upgradesstables NPE for non - CF - based indexes ( CASSANDRA - 6645 ) <nl> * Fix partition and range deletes not triggering flush ( CASSANDRA - 6655 ) <nl> <nl> + <nl> 1 . 2 . 15 <nl> * Move handling of migration event source to solve bootstrap race ( CASSANDRA - 6648 ) <nl> * Make sure compaction throughput value doesn ' t overflow with int math ( CASSANDRA - 6647 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / index / composites / CompositesSearcher . java b / src / java / org / apache / cassandra / db / index / composites / CompositesSearcher . java <nl> index 5ab1df6 . . 3974466 100644 <nl> - - - a / src / java / org / apache / cassandra / db / index / composites / CompositesSearcher . java <nl> + + + b / src / java / org / apache / cassandra / db / index / composites / CompositesSearcher . java <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class CompositesSearcher extends SecondaryIndexSearcher <nl> continue ; <nl> <nl> SecondaryIndex index = indexManager . getIndexForColumn ( expression . column _ name ) ; <nl> - if ( index = = null | | ( expression . op ! = IndexOperator . EQ ) ) <nl> + if ( index = = null | | index . getIndexCfs ( ) = = null | | ( expression . op ! = IndexOperator . EQ ) ) <nl> continue ; <nl> int columns = index . getIndexCfs ( ) . getMeanColumns ( ) ; <nl> candidates . put ( index , columns ) ; <nl> @ @ - 106 , 6 + 106 , 7 @ @ public class CompositesSearcher extends SecondaryIndexSearcher <nl> final IndexExpression primary = highestSelectivityPredicate ( filter . getClause ( ) ) ; <nl> final SecondaryIndex index = indexManager . getIndexForColumn ( primary . column _ name ) ; <nl> assert index ! = null ; <nl> + assert index . getIndexCfs ( ) ! = null ; <nl> final DecoratedKey indexKey = index . getIndexKeyFor ( primary . value ) ; <nl> <nl> if ( logger . isDebugEnabled ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / db / index / keys / KeysSearcher . java b / src / java / org / apache / cassandra / db / index / keys / KeysSearcher . java <nl> index bed6104 . . 7e7595b 100644 <nl> - - - a / src / java / org / apache / cassandra / db / index / keys / KeysSearcher . java <nl> + + + b / src / java / org / apache / cassandra / db / index / keys / KeysSearcher . java <nl> @ @ - 61 , 7 + 61 , 7 @ @ public class KeysSearcher extends SecondaryIndexSearcher <nl> continue ; <nl> <nl> SecondaryIndex index = indexManager . getIndexForColumn ( expression . column _ name ) ; <nl> - if ( index = = null | | ( expression . op ! = IndexOperator . EQ ) ) <nl> + if ( index = = null | | index . getIndexCfs ( ) = = null | | ( expression . op ! = IndexOperator . EQ ) ) <nl> continue ; <nl> int columns = index . getIndexCfs ( ) . getMeanColumns ( ) ; <nl> candidates . put ( index , columns ) ; <nl> @ @ - 102 , 6 + 102 , 7 @ @ public class KeysSearcher extends SecondaryIndexSearcher <nl> final IndexExpression primary = highestSelectivityPredicate ( filter . getClause ( ) ) ; <nl> final SecondaryIndex index = indexManager . getIndexForColumn ( primary . column _ name ) ; <nl> assert index ! = null ; <nl> + assert index . getIndexCfs ( ) ! = null ; <nl> final DecoratedKey indexKey = index . getIndexKeyFor ( primary . value ) ; <nl> <nl> if ( logger . isDebugEnabled ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index fa43154 . . 94dd73d 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 2314 , 8 + 2314 , 11 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> { <nl> for ( SecondaryIndex si : cfStore . indexManager . getIndexes ( ) ) <nl> { <nl> - logger . info ( " adding secondary index { } to operation " , si . getIndexName ( ) ) ; <nl> - valid . add ( si . getIndexCfs ( ) ) ; <nl> + if ( si . getIndexCfs ( ) ! = null ) <nl> + { <nl> + logger . info ( " adding secondary index { } to operation " , si . getIndexName ( ) ) ; <nl> + valid . add ( si . getIndexCfs ( ) ) ; <nl> + } <nl> } <nl> <nl> } <nl> @ @ - 2364 , 8 + 2367 , 11 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> { <nl> for ( SecondaryIndex si : cfStore . indexManager . getIndexes ( ) ) <nl> { <nl> - logger . info ( " adding secondary index { } to operation " , si . getIndexName ( ) ) ; <nl> - valid . add ( si . getIndexCfs ( ) ) ; <nl> + if ( si . getIndexCfs ( ) ! = null ) <nl> + { <nl> + logger . info ( " adding secondary index { } to operation " , si . getIndexName ( ) ) ; <nl> + valid . add ( si . getIndexCfs ( ) ) ; <nl> + } <nl> } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b935425 . . 7f5a487 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 - rc1 <nl> + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) <nl> * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) <nl> * save truncation position in system table ( CASSANDRA - 4906 ) <nl> * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) <nl> diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py <nl> index d15c083 . . bab3506 100644 <nl> - - - a / pylib / cqlshlib / formatting . py <nl> + + + b / pylib / cqlshlib / formatting . py <nl> @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : <nl> return f <nl> return registrator <nl> <nl> - @ formatter _ for ( ' bytes ' ) <nl> - def format _ value _ bytes ( val , colormap , * * _ ) : <nl> + @ formatter _ for ( ' blob ' ) <nl> + def format _ value _ blob ( val , colormap , * * _ ) : <nl> bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) <nl> return colorme ( bval , colormap , ' hex ' ) <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index cfdd148 . . 4be97f1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 6 + 1 , 8 @ @ 
 1 . 2 . 16 
 + * Fix upgradesstables NPE for non - CF - based indexes ( CASSANDRA - 6645 ) 
 * Fix partition and range deletes not triggering flush ( CASSANDRA - 6655 ) 
 
 + 
 1 . 2 . 15 
 * Move handling of migration event source to solve bootstrap race ( CASSANDRA - 6648 ) 
 * Make sure compaction throughput value doesn ' t overflow with int math ( CASSANDRA - 6647 ) 
 diff - - git a / src / java / org / apache / cassandra / db / index / composites / CompositesSearcher . java b / src / java / org / apache / cassandra / db / index / composites / CompositesSearcher . java 
 index 5ab1df6 . . 3974466 100644 
 - - - a / src / java / org / apache / cassandra / db / index / composites / CompositesSearcher . java 
 + + + b / src / java / org / apache / cassandra / db / index / composites / CompositesSearcher . java 
 @ @ - 65 , 7 + 65 , 7 @ @ public class CompositesSearcher extends SecondaryIndexSearcher 
 continue ; 
 
 SecondaryIndex index = indexManager . getIndexForColumn ( expression . column _ name ) ; 
 - if ( index = = null | | ( expression . op ! = IndexOperator . EQ ) ) 
 + if ( index = = null | | index . getIndexCfs ( ) = = null | | ( expression . op ! = IndexOperator . EQ ) ) 
 continue ; 
 int columns = index . getIndexCfs ( ) . getMeanColumns ( ) ; 
 candidates . put ( index , columns ) ; 
 @ @ - 106 , 6 + 106 , 7 @ @ public class CompositesSearcher extends SecondaryIndexSearcher 
 final IndexExpression primary = highestSelectivityPredicate ( filter . getClause ( ) ) ; 
 final SecondaryIndex index = indexManager . getIndexForColumn ( primary . column _ name ) ; 
 assert index ! = null ; 
 + assert index . getIndexCfs ( ) ! = null ; 
 final DecoratedKey indexKey = index . getIndexKeyFor ( primary . value ) ; 
 
 if ( logger . isDebugEnabled ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / db / index / keys / KeysSearcher . java b / src / java / org / apache / cassandra / db / index / keys / KeysSearcher . java 
 index bed6104 . . 7e7595b 100644 
 - - - a / src / java / org / apache / cassandra / db / index / keys / KeysSearcher . java 
 + + + b / src / java / org / apache / cassandra / db / index / keys / KeysSearcher . java 
 @ @ - 61 , 7 + 61 , 7 @ @ public class KeysSearcher extends SecondaryIndexSearcher 
 continue ; 
 
 SecondaryIndex index = indexManager . getIndexForColumn ( expression . column _ name ) ; 
 - if ( index = = null | | ( expression . op ! = IndexOperator . EQ ) ) 
 + if ( index = = null | | index . getIndexCfs ( ) = = null | | ( expression . op ! = IndexOperator . EQ ) ) 
 continue ; 
 int columns = index . getIndexCfs ( ) . getMeanColumns ( ) ; 
 candidates . put ( index , columns ) ; 
 @ @ - 102 , 6 + 102 , 7 @ @ public class KeysSearcher extends SecondaryIndexSearcher 
 final IndexExpression primary = highestSelectivityPredicate ( filter . getClause ( ) ) ; 
 final SecondaryIndex index = indexManager . getIndexForColumn ( primary . column _ name ) ; 
 assert index ! = null ; 
 + assert index . getIndexCfs ( ) ! = null ; 
 final DecoratedKey indexKey = index . getIndexKeyFor ( primary . value ) ; 
 
 if ( logger . isDebugEnabled ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index fa43154 . . 94dd73d 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 2314 , 8 + 2314 , 11 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 { 
 for ( SecondaryIndex si : cfStore . indexManager . getIndexes ( ) ) 
 { 
 - logger . info ( " adding secondary index { } to operation " , si . getIndexName ( ) ) ; 
 - valid . add ( si . getIndexCfs ( ) ) ; 
 + if ( si . getIndexCfs ( ) ! = null ) 
 + { 
 + logger . info ( " adding secondary index { } to operation " , si . getIndexName ( ) ) ; 
 + valid . add ( si . getIndexCfs ( ) ) ; 
 + } 
 } 
 
 } 
 @ @ - 2364 , 8 + 2367 , 11 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 { 
 for ( SecondaryIndex si : cfStore . indexManager . getIndexes ( ) ) 
 { 
 - logger . info ( " adding secondary index { } to operation " , si . getIndexName ( ) ) ; 
 - valid . add ( si . getIndexCfs ( ) ) ; 
 + if ( si . getIndexCfs ( ) ! = null ) 
 + { 
 + logger . info ( " adding secondary index { } to operation " , si . getIndexName ( ) ) ; 
 + valid . add ( si . getIndexCfs ( ) ) ; 
 + } 
 } 
 } 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b935425 . . 7f5a487 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 - rc1 
 + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) 
 * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) 
 * save truncation position in system table ( CASSANDRA - 4906 ) 
 * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) 
 diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py 
 index d15c083 . . bab3506 100644 
 - - - a / pylib / cqlshlib / formatting . py 
 + + + b / pylib / cqlshlib / formatting . py 
 @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : 
 return f 
 return registrator 
 
 - @ formatter _ for ( ' bytes ' ) 
 - def format _ value _ bytes ( val , colormap , * * _ ) : 
 + @ formatter _ for ( ' blob ' ) 
 + def format _ value _ blob ( val , colormap , * * _ ) : 
 bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) 
 return colorme ( bval , colormap , ' hex ' ) 

