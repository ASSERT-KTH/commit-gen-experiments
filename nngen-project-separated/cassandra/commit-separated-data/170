BLEU SCORE: 0.029079340872079116

TEST MSG: NodeTool clientstats should show SSL Cipher
GENERATED MSG: Add ability to specify driver name and version

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9436539 . . fed0cd1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * NodeTool clientstats should show SSL Cipher ( CASSANDRA - 14322 ) <nl> * Add ability to specify driver name and version ( CASSANDRA - 14275 ) <nl> * Abstract streaming for pluggable storage ( CASSANDRA - 14115 ) <nl> * Forced incremental repairs should promote sstables if they can ( CASSANDRA - 14294 ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / nodetool / ClientStats . java b / src / java / org / apache / cassandra / tools / nodetool / ClientStats . java <nl> index 4529c86 . . 0469074 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / ClientStats . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / ClientStats . java <nl> @ @ - 43 , 10 + 43 , 10 @ @ public class ClientStats extends NodeToolCmd <nl> if ( ! clients . isEmpty ( ) ) <nl> { <nl> TableBuilder table = new TableBuilder ( ) ; <nl> - table . add ( " Address " , " SSL " , " Version " , " User " , " Keyspace " , " Requests " , " Driver - Name " , " Driver - Version " ) ; <nl> + table . add ( " Address " , " SSL " , " Cipher " , " Protocol " , " Version " , " User " , " Keyspace " , " Requests " , " Driver - Name " , " Driver - Version " ) ; <nl> for ( Map < String , String > conn : clients ) <nl> { <nl> - table . add ( conn . get ( " address " ) , conn . get ( " ssl " ) , conn . get ( " version " ) , <nl> + table . add ( conn . get ( " address " ) , conn . get ( " ssl " ) , conn . get ( " cipher " ) , conn . get ( " protocol " ) , conn . get ( " version " ) , <nl> conn . get ( " user " ) , conn . get ( " keyspace " ) , conn . get ( " requests " ) , conn . get ( " driverName " ) , conn . get ( " driverVersion " ) ) ; <nl> } <nl> table . printTo ( System . out ) ; <nl> diff - - git a / src / java / org / apache / cassandra / transport / Server . java b / src / java / org / apache / cassandra / transport / Server . java <nl> index 0504b2f . . 0f666d8 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Server . java <nl> + + + b / src / java / org / apache / cassandra / transport / Server . java <nl> @ @ - 189 , 13 + 189 , 17 @ @ public class Server implements CassandraDaemon . Server <nl> if ( connection instanceof ServerConnection ) <nl> { <nl> ServerConnection conn = ( ServerConnection ) connection ; <nl> + SslHandler sslHandler = conn . channel ( ) . pipeline ( ) . get ( SslHandler . class ) ; <nl> + <nl> result . add ( new ImmutableMap . Builder < String , String > ( ) <nl> . put ( " user " , conn . getClientState ( ) . getUser ( ) . getName ( ) ) <nl> . put ( " keyspace " , conn . getClientState ( ) . getRawKeyspace ( ) = = null ? " " : conn . getClientState ( ) . getRawKeyspace ( ) ) <nl> . put ( " address " , conn . getClientState ( ) . getRemoteAddress ( ) . toString ( ) ) <nl> . put ( " version " , String . valueOf ( conn . getVersion ( ) . asInt ( ) ) ) <nl> . put ( " requests " , String . valueOf ( conn . requests . getCount ( ) ) ) <nl> - . put ( " ssl " , conn . channel ( ) . pipeline ( ) . get ( SslHandler . class ) = = null ? " false " : " true " ) <nl> + . put ( " ssl " , Boolean . toString ( sslHandler = = null ) ) <nl> + . put ( " cipher " , sslHandler ! = null ? sslHandler . engine ( ) . getSession ( ) . getCipherSuite ( ) : " undefined " ) <nl> + . put ( " protocol " , sslHandler ! = null ? sslHandler . engine ( ) . getSession ( ) . getProtocol ( ) : " undefined " ) <nl> . put ( " driverName " , conn . getClientState ( ) . getDriverName ( ) . orElse ( " undefined " ) ) <nl> . put ( " driverVersion " , conn . getClientState ( ) . getDriverVersion ( ) . orElse ( " undefined " ) ) <nl> . build ( ) ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9436539 . . fed0cd1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * NodeTool clientstats should show SSL Cipher ( CASSANDRA - 14322 ) 
 * Add ability to specify driver name and version ( CASSANDRA - 14275 ) 
 * Abstract streaming for pluggable storage ( CASSANDRA - 14115 ) 
 * Forced incremental repairs should promote sstables if they can ( CASSANDRA - 14294 ) 
 diff - - git a / src / java / org / apache / cassandra / tools / nodetool / ClientStats . java b / src / java / org / apache / cassandra / tools / nodetool / ClientStats . java 
 index 4529c86 . . 0469074 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / ClientStats . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / ClientStats . java 
 @ @ - 43 , 10 + 43 , 10 @ @ public class ClientStats extends NodeToolCmd 
 if ( ! clients . isEmpty ( ) ) 
 { 
 TableBuilder table = new TableBuilder ( ) ; 
 - table . add ( " Address " , " SSL " , " Version " , " User " , " Keyspace " , " Requests " , " Driver - Name " , " Driver - Version " ) ; 
 + table . add ( " Address " , " SSL " , " Cipher " , " Protocol " , " Version " , " User " , " Keyspace " , " Requests " , " Driver - Name " , " Driver - Version " ) ; 
 for ( Map < String , String > conn : clients ) 
 { 
 - table . add ( conn . get ( " address " ) , conn . get ( " ssl " ) , conn . get ( " version " ) , 
 + table . add ( conn . get ( " address " ) , conn . get ( " ssl " ) , conn . get ( " cipher " ) , conn . get ( " protocol " ) , conn . get ( " version " ) , 
 conn . get ( " user " ) , conn . get ( " keyspace " ) , conn . get ( " requests " ) , conn . get ( " driverName " ) , conn . get ( " driverVersion " ) ) ; 
 } 
 table . printTo ( System . out ) ; 
 diff - - git a / src / java / org / apache / cassandra / transport / Server . java b / src / java / org / apache / cassandra / transport / Server . java 
 index 0504b2f . . 0f666d8 100644 
 - - - a / src / java / org / apache / cassandra / transport / Server . java 
 + + + b / src / java / org / apache / cassandra / transport / Server . java 
 @ @ - 189 , 13 + 189 , 17 @ @ public class Server implements CassandraDaemon . Server 
 if ( connection instanceof ServerConnection ) 
 { 
 ServerConnection conn = ( ServerConnection ) connection ; 
 + SslHandler sslHandler = conn . channel ( ) . pipeline ( ) . get ( SslHandler . class ) ; 
 + 
 result . add ( new ImmutableMap . Builder < String , String > ( ) 
 . put ( " user " , conn . getClientState ( ) . getUser ( ) . getName ( ) ) 
 . put ( " keyspace " , conn . getClientState ( ) . getRawKeyspace ( ) = = null ? " " : conn . getClientState ( ) . getRawKeyspace ( ) ) 
 . put ( " address " , conn . getClientState ( ) . getRemoteAddress ( ) . toString ( ) ) 
 . put ( " version " , String . valueOf ( conn . getVersion ( ) . asInt ( ) ) ) 
 . put ( " requests " , String . valueOf ( conn . requests . getCount ( ) ) ) 
 - . put ( " ssl " , conn . channel ( ) . pipeline ( ) . get ( SslHandler . class ) = = null ? " false " : " true " ) 
 + . put ( " ssl " , Boolean . toString ( sslHandler = = null ) ) 
 + . put ( " cipher " , sslHandler ! = null ? sslHandler . engine ( ) . getSession ( ) . getCipherSuite ( ) : " undefined " ) 
 + . put ( " protocol " , sslHandler ! = null ? sslHandler . engine ( ) . getSession ( ) . getProtocol ( ) : " undefined " ) 
 . put ( " driverName " , conn . getClientState ( ) . getDriverName ( ) . orElse ( " undefined " ) ) 
 . put ( " driverVersion " , conn . getClientState ( ) . getDriverVersion ( ) . orElse ( " undefined " ) ) 
 . build ( ) ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
