BLEU SCORE: 0.019648763141608138

TEST MSG: merge from 2 . 0
GENERATED MSG: Fix truncate to not abort due to unreachable fat clients

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index a532bdc . . 9575c8b 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 22 , 8 + 22 , 8 @ @ <nl> * Fix stress smart Thrift client to pick servers correctly ( CASSANDRA - 6848 ) <nl> * Add logging levels ( minimal , normal or verbose ) to stress tool ( CASSANDRA - 6849 ) <nl> * Fix race condition in Batch CLE ( CASSANDRA - 6860 ) <nl> - <nl> Merged from 2 . 0 : <nl> + * Fix truncate to not abort due to unreachable fat clients ( CASSANDRA - 6864 ) <nl> * Fix schema concurrency exceptions ( CASSANDRA - 6841 ) <nl> * Fix leaking validator FH in StreamWriter ( CASSANDRA - 6832 ) <nl> * fix nodetool getsstables for blob PK ( CASSANDRA - 6803 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> index 04568d3 . . cabd886 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> @ @ - 26 , 7 + 26 , 6 @ @ import java . nio . channels . FileChannel ; <nl> import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> import java . util . Comparator ; <nl> - import java . util . HashMap ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> index a670e48 . . a7c4f97 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / Gossiper . java <nl> + + + b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> @ @ - 252 , 11 + 252 , 29 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> return tokenOwners ; <nl> } <nl> <nl> + / * * <nl> + * @ return a list of unreachable gossip participants , including fat clients <nl> + * / <nl> public Set < InetAddress > getUnreachableMembers ( ) <nl> { <nl> return unreachableEndpoints . keySet ( ) ; <nl> } <nl> <nl> + / * * <nl> + * @ return a list of unreachable token owners <nl> + * / <nl> + public Set < InetAddress > getUnreachableTokenOwners ( ) <nl> + { <nl> + Set < InetAddress > tokenOwners = new HashSet < > ( ) ; <nl> + for ( InetAddress endpoint : unreachableEndpoints . keySet ( ) ) <nl> + { <nl> + if ( StorageService . instance . getTokenMetadata ( ) . isMember ( endpoint ) ) <nl> + tokenOwners . add ( endpoint ) ; <nl> + } <nl> + <nl> + return tokenOwners ; <nl> + } <nl> + <nl> public long getEndpointDowntime ( InetAddress ep ) <nl> { <nl> Long downtime = unreachableEndpoints . get ( ep ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index c78d020 . . 64e06fe 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 1907 , 7 + 1907 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> public static void truncateBlocking ( String keyspace , String cfname ) throws UnavailableException , TimeoutException , IOException <nl> { <nl> logger . debug ( " Starting a blocking truncate operation on keyspace { } , CF { } " , keyspace , cfname ) ; <nl> - if ( isAnyHostDown ( ) ) <nl> + if ( isAnyStorageHostDown ( ) ) <nl> { <nl> logger . info ( " Cannot perform truncate , some hosts are down " ) ; <nl> / / Since the truncate operation is so aggressive and is typically only <nl> @ @ - 1945 , 11 + 1945 , 11 @ @ public class StorageProxy implements StorageProxyMBean <nl> * Asks the gossiper if there are any nodes that are currently down . <nl> * @ return true if the gossiper thinks all nodes are up . <nl> * / <nl> - private static boolean isAnyHostDown ( ) <nl> + private static boolean isAnyStorageHostDown ( ) <nl> { <nl> - return ! Gossiper . instance . getUnreachableMembers ( ) . isEmpty ( ) ; <nl> + return ! Gossiper . instance . getUnreachableTokenOwners ( ) . isEmpty ( ) ; <nl> } <nl> - <nl> + <nl> public interface WritePerformer <nl> { <nl> public void apply ( IMutation mutation ,
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index a532bdc . . 9575c8b 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 22 , 8 + 22 , 8 @ @ 
 * Fix stress smart Thrift client to pick servers correctly ( CASSANDRA - 6848 ) 
 * Add logging levels ( minimal , normal or verbose ) to stress tool ( CASSANDRA - 6849 ) 
 * Fix race condition in Batch CLE ( CASSANDRA - 6860 ) 
 - 
 Merged from 2 . 0 : 
 + * Fix truncate to not abort due to unreachable fat clients ( CASSANDRA - 6864 ) 
 * Fix schema concurrency exceptions ( CASSANDRA - 6841 ) 
 * Fix leaking validator FH in StreamWriter ( CASSANDRA - 6832 ) 
 * fix nodetool getsstables for blob PK ( CASSANDRA - 6803 ) 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 index 04568d3 . . cabd886 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 @ @ - 26 , 7 + 26 , 6 @ @ import java . nio . channels . FileChannel ; 
 import java . util . ArrayList ; 
 import java . util . Collection ; 
 import java . util . Comparator ; 
 - import java . util . HashMap ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Map ; 
 diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java 
 index a670e48 . . a7c4f97 100644 
 - - - a / src / java / org / apache / cassandra / gms / Gossiper . java 
 + + + b / src / java / org / apache / cassandra / gms / Gossiper . java 
 @ @ - 252 , 11 + 252 , 29 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 return tokenOwners ; 
 } 
 
 + / * * 
 + * @ return a list of unreachable gossip participants , including fat clients 
 + * / 
 public Set < InetAddress > getUnreachableMembers ( ) 
 { 
 return unreachableEndpoints . keySet ( ) ; 
 } 
 
 + / * * 
 + * @ return a list of unreachable token owners 
 + * / 
 + public Set < InetAddress > getUnreachableTokenOwners ( ) 
 + { 
 + Set < InetAddress > tokenOwners = new HashSet < > ( ) ; 
 + for ( InetAddress endpoint : unreachableEndpoints . keySet ( ) ) 
 + { 
 + if ( StorageService . instance . getTokenMetadata ( ) . isMember ( endpoint ) ) 
 + tokenOwners . add ( endpoint ) ; 
 + } 
 + 
 + return tokenOwners ; 
 + } 
 + 
 public long getEndpointDowntime ( InetAddress ep ) 
 { 
 Long downtime = unreachableEndpoints . get ( ep ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index c78d020 . . 64e06fe 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 1907 , 7 + 1907 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 public static void truncateBlocking ( String keyspace , String cfname ) throws UnavailableException , TimeoutException , IOException 
 { 
 logger . debug ( " Starting a blocking truncate operation on keyspace { } , CF { } " , keyspace , cfname ) ; 
 - if ( isAnyHostDown ( ) ) 
 + if ( isAnyStorageHostDown ( ) ) 
 { 
 logger . info ( " Cannot perform truncate , some hosts are down " ) ; 
 / / Since the truncate operation is so aggressive and is typically only 
 @ @ - 1945 , 11 + 1945 , 11 @ @ public class StorageProxy implements StorageProxyMBean 
 * Asks the gossiper if there are any nodes that are currently down . 
 * @ return true if the gossiper thinks all nodes are up . 
 * / 
 - private static boolean isAnyHostDown ( ) 
 + private static boolean isAnyStorageHostDown ( ) 
 { 
 - return ! Gossiper . instance . getUnreachableMembers ( ) . isEmpty ( ) ; 
 + return ! Gossiper . instance . getUnreachableTokenOwners ( ) . isEmpty ( ) ; 
 } 
 - 
 + 
 public interface WritePerformer 
 { 
 public void apply ( IMutation mutation ,

NEAREST DIFF:
ELIMINATEDSENTENCE
