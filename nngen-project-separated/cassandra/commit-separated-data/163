BLEU SCORE: 0.027611988917697356

TEST MSG: Add sstableloader option to accept target keyspace name
GENERATED MSG: merge from 0 . 7

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c0551b7 . . 04705ba 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Add sstableloader option to accept target keyspace name ( CASSANDRA - 13884 ) <nl> * Move processing of EchoMessage response to gossip stage ( CASSANDRA - 13713 ) <nl> * Add coordinator write metric per CF ( CASSANDRA - 14232 ) <nl> * Fix scheduling of speculative retry threshold recalculation ( CASSANDRA - 14338 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableLoader . java b / src / java / org / apache / cassandra / io / sstable / SSTableLoader . java <nl> index 980fdf1 . . a6985f7 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableLoader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableLoader . java <nl> @ @ - 56 , 13 + 56 , 13 @ @ public class SSTableLoader implements StreamEventHandler <nl> <nl> public SSTableLoader ( File directory , Client client , OutputHandler outputHandler ) <nl> { <nl> - this ( directory , client , outputHandler , 1 ) ; <nl> + this ( directory , client , outputHandler , 1 , null ) ; <nl> } <nl> <nl> - public SSTableLoader ( File directory , Client client , OutputHandler outputHandler , int connectionsPerHost ) <nl> + public SSTableLoader ( File directory , Client client , OutputHandler outputHandler , int connectionsPerHost , String targetKeyspace ) <nl> { <nl> this . directory = directory ; <nl> - this . keyspace = directory . getParentFile ( ) . getName ( ) ; <nl> + this . keyspace = targetKeyspace ! = null ? targetKeyspace : directory . getParentFile ( ) . getName ( ) ; <nl> this . client = client ; <nl> this . outputHandler = outputHandler ; <nl> this . connectionsPerHost = connectionsPerHost ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / BulkLoader . java b / src / java / org / apache / cassandra / tools / BulkLoader . java <nl> index 545d1f7 . . d85c605 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / BulkLoader . java <nl> + + + b / src / java / org / apache / cassandra / tools / BulkLoader . java <nl> @ @ - 65 , 7 + 65 , 8 @ @ public class BulkLoader <nl> buildSSLOptions ( options . clientEncOptions ) , <nl> options . allowServerPortDiscovery ) , <nl> handler , <nl> - options . connectionsPerHost ) ; <nl> + options . connectionsPerHost , <nl> + options . targetKeyspace ) ; <nl> DatabaseDescriptor . setStreamThroughputOutboundMegabitsPerSec ( options . throttle ) ; <nl> DatabaseDescriptor . setInterDCStreamThroughputOutboundMegabitsPerSec ( options . interDcThrottle ) ; <nl> StreamResultFuture future = null ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / LoaderOptions . java b / src / java / org / apache / cassandra / tools / LoaderOptions . java <nl> index 3686584 . . d6cb670 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / LoaderOptions . java <nl> + + + b / src / java / org / apache / cassandra / tools / LoaderOptions . java <nl> @ @ - 38 , 6 + 38 , 7 @ @ import org . apache . cassandra . tools . BulkLoader . CmdLineOptions ; <nl> import com . datastax . driver . core . AuthProvider ; <nl> import com . datastax . driver . core . PlainTextAuthProvider ; <nl> import org . apache . commons . cli . * ; <nl> + import org . apache . commons . lang3 . StringUtils ; <nl> <nl> public class LoaderOptions <nl> { <nl> @ @ - 59 , 6 + 60 , 7 @ @ public class LoaderOptions <nl> public static final String INTER _ DC _ THROTTLE _ MBITS = " inter - dc - throttle " ; <nl> public static final String TOOL _ NAME = " sstableloader " ; <nl> public static final String ALLOW _ SERVER _ PORT _ DISCOVERY _ OPTION = " server - port - discovery " ; <nl> + public static final String TARGET _ KEYSPACE = " target - keyspace " ; <nl> <nl> / * client encryption options * / <nl> public static final String SSL _ TRUSTSTORE = " truststore " ; <nl> @ @ - 88 , 6 + 90 , 7 @ @ public class LoaderOptions <nl> public final Set < InetSocketAddress > hosts ; <nl> public final Set < InetAddressAndPort > ignores ; <nl> public final boolean allowServerPortDiscovery ; <nl> + public final String targetKeyspace ; <nl> <nl> LoaderOptions ( Builder builder ) <nl> { <nl> @ @ - 109 , 6 + 112 , 7 @ @ public class LoaderOptions <nl> hosts = builder . hosts ; <nl> allowServerPortDiscovery = builder . allowServerPortDiscovery ; <nl> ignores = builder . ignores ; <nl> + targetKeyspace = builder . targetKeyspace ; <nl> } <nl> <nl> static class Builder <nl> @ @ - 134 , 6 + 138 , 7 @ @ public class LoaderOptions <nl> Set < InetSocketAddress > hosts = new HashSet < > ( ) ; <nl> Set < InetAddressAndPort > ignores = new HashSet < > ( ) ; <nl> boolean allowServerPortDiscovery ; <nl> + String targetKeyspace ; <nl> <nl> Builder ( ) <nl> { <nl> @ @ - 509 , 6 + 514 , 14 @ @ public class LoaderOptions <nl> clientEncOptions . cipher _ suites = cmd . getOptionValue ( SSL _ CIPHER _ SUITES ) . split ( " , " ) ; <nl> } <nl> <nl> + if ( cmd . hasOption ( TARGET _ KEYSPACE ) ) <nl> + { <nl> + targetKeyspace = cmd . getOptionValue ( TARGET _ KEYSPACE ) ; <nl> + if ( StringUtils . isBlank ( targetKeyspace ) ) <nl> + { <nl> + errorMsg ( " Empty keyspace is not supported . " , options ) ; <nl> + } <nl> + } <nl> return this ; <nl> } <nl> catch ( ParseException | ConfigurationException | MalformedURLException e ) <nl> @ @ - 615 , 6 + 628 , 7 @ @ public class LoaderOptions <nl> options . addOption ( " ciphers " , SSL _ CIPHER _ SUITES , " CIPHER - SUITES " , " Client SSL : comma - separated list of encryption suites to use " ) ; <nl> options . addOption ( " f " , CONFIG _ PATH , " path to config file " , " cassandra . yaml file path for streaming throughput and client / server SSL . " ) ; <nl> options . addOption ( " spd " , ALLOW _ SERVER _ PORT _ DISCOVERY _ OPTION , " allow server port discovery " , " Use ports published by server to decide how to connect . With SSL requires StartTLS to be used . " ) ; <nl> + options . addOption ( " k " , TARGET _ KEYSPACE , " target keyspace name " , " target keyspace name " ) ; <nl> return options ; <nl> } <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableLoaderTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableLoaderTest . java <nl> index 430b7c2 . . 8509115 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableLoaderTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableLoaderTest . java <nl> @ @ - 56 , 6 + 56 , 7 @ @ import static org . junit . Assert . assertTrue ; <nl> public class SSTableLoaderTest <nl> { <nl> public static final String KEYSPACE1 = " SSTableLoaderTest " ; <nl> + public static final String KEYSPACE2 = " SSTableLoaderTest1 " ; <nl> public static final String CF _ STANDARD1 = " Standard1 " ; <nl> public static final String CF _ STANDARD2 = " Standard2 " ; <nl> <nl> @ @ - 70 , 6 + 71 , 11 @ @ public class SSTableLoaderTest <nl> SchemaLoader . standardCFMD ( KEYSPACE1 , CF _ STANDARD1 ) , <nl> SchemaLoader . standardCFMD ( KEYSPACE1 , CF _ STANDARD2 ) ) ; <nl> <nl> + SchemaLoader . createKeyspace ( KEYSPACE2 , <nl> + KeyspaceParams . simple ( 1 ) , <nl> + SchemaLoader . standardCFMD ( KEYSPACE2 , CF _ STANDARD1 ) , <nl> + SchemaLoader . standardCFMD ( KEYSPACE2 , CF _ STANDARD2 ) ) ; <nl> + <nl> StorageService . instance . initServer ( ) ; <nl> } <nl> <nl> @ @ - 208 , 6 + 214 , 48 @ @ public class SSTableLoaderTest <nl> latch . await ( ) ; <nl> } <nl> <nl> + @ Test <nl> + public void testLoadingSSTableToDifferentKeyspace ( ) throws Exception <nl> + { <nl> + File dataDir = new File ( tmpdir . getAbsolutePath ( ) + File . separator + KEYSPACE1 + File . separator + CF _ STANDARD1 ) ; <nl> + assert dataDir . mkdirs ( ) ; <nl> + TableMetadata metadata = Schema . instance . getTableMetadata ( KEYSPACE1 , CF _ STANDARD1 ) ; <nl> + <nl> + String schema = " CREATE TABLE % s . % s ( key ascii , name ascii , val ascii , val1 ascii , PRIMARY KEY ( key , name ) ) " ; <nl> + String query = " INSERT INTO % s . % s ( key , name , val ) VALUES ( ? , ? , ? ) " ; <nl> + <nl> + try ( CQLSSTableWriter writer = CQLSSTableWriter . builder ( ) <nl> + . inDirectory ( dataDir ) <nl> + . forTable ( String . format ( schema , KEYSPACE1 , CF _ STANDARD1 ) ) <nl> + . using ( String . format ( query , KEYSPACE1 , CF _ STANDARD1 ) ) <nl> + . build ( ) ) <nl> + { <nl> + writer . addRow ( " key1 " , " col1 " , " 100 " ) ; <nl> + } <nl> + <nl> + ColumnFamilyStore cfs = Keyspace . open ( KEYSPACE1 ) . getColumnFamilyStore ( CF _ STANDARD1 ) ; <nl> + cfs . forceBlockingFlush ( ) ; / / wait for sstables to be on disk else we won ' t be able to stream them <nl> + <nl> + final CountDownLatch latch = new CountDownLatch ( 1 ) ; <nl> + SSTableLoader loader = new SSTableLoader ( dataDir , new TestClient ( ) , new OutputHandler . SystemOutput ( false , false ) , 1 , KEYSPACE2 ) ; <nl> + loader . stream ( Collections . emptySet ( ) , completionStreamListener ( latch ) ) . get ( ) ; <nl> + <nl> + cfs = Keyspace . open ( KEYSPACE2 ) . getColumnFamilyStore ( CF _ STANDARD1 ) ; <nl> + cfs . forceBlockingFlush ( ) ; <nl> + <nl> + List < FilteredPartition > partitions = Util . getAll ( Util . cmd ( cfs ) . build ( ) ) ; <nl> + <nl> + assertEquals ( 1 , partitions . size ( ) ) ; <nl> + assertEquals ( " key1 " , AsciiType . instance . getString ( partitions . get ( 0 ) . partitionKey ( ) . getKey ( ) ) ) ; <nl> + assertEquals ( ByteBufferUtil . bytes ( " 100 " ) , partitions . get ( 0 ) . getRow ( Clustering . make ( ByteBufferUtil . bytes ( " col1 " ) ) ) <nl> + . getCell ( metadata . getColumn ( ByteBufferUtil . bytes ( " val " ) ) ) <nl> + . value ( ) ) ; <nl> + <nl> + / / The stream future is signalled when the work is complete but before releasing references . Wait for release <nl> + / / before cleanup ( CASSANDRA - 10118 ) . <nl> + latch . await ( ) ; <nl> + } <nl> + <nl> StreamEventHandler completionStreamListener ( final CountDownLatch latch ) <nl> { <nl> return new StreamEventHandler ( ) {
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index eec904a . . 982454c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 59 , 6 + 59 , 8 @ @ <nl> the old ones ( CASSANDRA - 1644 ) <nl> * upgrade to Thrift 0 . 5 ( CASSANDRA - 1367 ) <nl> * renamed CL . DCQUORUM to LOCAL _ QUORUM and DCQUORUMSYNC to EACH _ QUORUM <nl> + * cli truncate support ( CASSANDRA - 1653 ) <nl> + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) <nl> <nl> <nl> 0 . 7 - beta2 <nl> diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g <nl> index e59c608 . . a9229ee 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / Cli . g <nl> + + + b / src / java / org / apache / cassandra / cli / Cli . g <nl> @ @ - 55 , 6 + 55 , 7 @ @ tokens { <nl> NODE _ UPDATE _ KEYSPACE ; <nl> NODE _ UPDATE _ COLUMN _ FAMILY ; <nl> NODE _ LIST ; <nl> + NODE _ TRUNCATE ; <nl> <nl> / / Internal Nodes . <nl> NODE _ COLUMN _ ACCESS ; <nl> @ @ - 123 , 6 + 124 , 7 @ @ statement <nl> | setStatement <nl> | showStatement <nl> | listStatement <nl> + | truncateStatement <nl> | - > ^ ( NODE _ NO _ OP ) <nl> ; <nl> <nl> @ @ - 174 , 6 + 176 , 8 @ @ helpStatement <nl> - > ^ ( NODE _ HELP NODE _ THRIFT _ COUNT ) <nl> | K _ HELP K _ LIST <nl> - > ^ ( NODE _ HELP NODE _ LIST ) <nl> + | K _ HELP K _ TRUNCATE <nl> + - > ^ ( NODE _ HELP NODE _ TRUNCATE ) <nl> | K _ HELP <nl> - > ^ ( NODE _ HELP ) <nl> | ' ? ' <nl> @ @ - 231 , 6 + 235 , 11 @ @ listStatement <nl> - > ^ ( NODE _ LIST columnFamily keyRangeExpr ? ^ ( NODE _ LIMIT $ limit ) ? ) <nl> ; <nl> <nl> + truncateStatement <nl> + : K _ TRUNCATE columnFamily <nl> + - > ^ ( NODE _ TRUNCATE columnFamily ) <nl> + ; <nl> + <nl> showClusterName <nl> : K _ SHOW K _ CLUSTER K _ NAME <nl> - > ^ ( NODE _ SHOW _ CLUSTER _ NAME ) <nl> @ @ - 430 , 6 + 439 , 7 @ @ K _ AND : ' AND ' ; <nl> K _ UPDATE : ' UPDATE ' ; <nl> K _ LIST : ' LIST ' ; <nl> K _ LIMIT : ' LIMIT ' ; <nl> + K _ TRUNCATE : ' TRUNCATE ' ; <nl> <nl> / / private syntactic rules <nl> fragment <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index b6ace98 . . b63105a 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 171 , 6 + 171 , 9 @ @ public class CliClient extends CliUserHelp <nl> case CliParser . NODE _ LIST : <nl> executeList ( tree ) ; <nl> break ; <nl> + case CliParser . NODE _ TRUNCATE : <nl> + executeTruncate ( tree . getChild ( 0 ) . getText ( ) ) ; <nl> + break ; <nl> case CliParser . NODE _ NO _ OP : <nl> / / comment lines come here ; they are treated as no ops . <nl> break ; <nl> @ @ - 943 , 6 + 946 , 30 @ @ public class CliClient extends CliUserHelp <nl> printSliceList ( columnFamilyDef , keySlices ) ; <nl> } <nl> <nl> + / / TRUNCATE < columnFamily > <nl> + private void executeTruncate ( String columnFamily ) <nl> + { <nl> + if ( ! CliMain . isConnected ( ) | | ! hasKeySpace ( ) ) <nl> + return ; <nl> + <nl> + / / getting CfDef , it will fail if there is no such column family in current keySpace . <nl> + CfDef cfDef = getCfDef ( columnFamily ) ; <nl> + <nl> + try <nl> + { <nl> + thriftClient . truncate ( cfDef . getName ( ) ) ; <nl> + sessionState . out . println ( columnFamily + " truncated . " ) ; <nl> + } <nl> + catch ( InvalidRequestException e ) <nl> + { <nl> + throw new RuntimeException ( e . getWhy ( ) ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + throw new RuntimeException ( e . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> / / SHOW API VERSION <nl> private void executeShowVersion ( ) throws TException <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> index f541fe5 . . b033d8f 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> @ @ - 55 , 12 + 55 , 16 @ @ public class CliCompleter extends SimpleCompletor <nl> " help set " , <nl> " help del " , <nl> " help count " , <nl> + " help list " , <nl> + " help truncate " <nl> } ; <nl> private static String [ ] keyspaceCommands = { <nl> " get " , <nl> " set " , <nl> " count " , <nl> - " del " <nl> + " del " , <nl> + " list " , <nl> + " truncate " <nl> } ; <nl> <nl> public CliCompleter ( ) <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliUserHelp . java b / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> index 7c512e2 . . db6a779 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> @ @ - 281 , 6 + 281 , 13 @ @ public class CliUserHelp { <nl> state . out . println ( " list Users [ j : ] limit 40 " ) ; <nl> break ; <nl> <nl> + case CliParser . NODE _ TRUNCATE : <nl> + state . out . println ( " truncate < column _ family > " ) ; <nl> + state . out . println ( " Truncate specified column family . \ n " ) ; <nl> + state . out . println ( " example : " ) ; <nl> + state . out . println ( " truncate Category " ) ; <nl> + break ; <nl> + <nl> default : <nl> state . out . println ( " ? " ) ; <nl> break ; <nl> @ @ - 324 , 7 + 331 , 8 @ @ public class CliUserHelp { <nl> state . out . println ( " del < cf > [ ' < key > ' ] [ ' < super > ' ] [ ' < col > ' ] Delete sub column . " ) ; <nl> state . out . println ( " count < cf > [ ' < key > ' ] Count columns in record . " ) ; <nl> state . out . println ( " count < cf > [ ' < key > ' ] [ ' < super > ' ] Count columns in a super column . " ) ; <nl> - state . out . println ( " list < cf > List all rows in the column family . " ) ; <nl> + state . out . println ( " truncate < column _ family > Truncate specified column family . " ) ; <nl> + state . out . println ( " list < cf > List all rows in the column family . " ) ; <nl> state . out . println ( " list < cf > [ < startKey > : ] " ) ; <nl> state . out . println ( " List rows in the column family beginning with < startKey > . " ) ; <nl> state . out . println ( " list < cf > [ < startKey > : < endKey > ] " ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> index 24a3de0 . . eddcafd 100644 <nl> - - - a / test / unit / org / apache / cassandra / cli / CliTest . java <nl> + + + b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> @ @ - 52 , 6 + 52 , 7 @ @ public class CliTest extends TestCase <nl> " list CF3 [ h : ] " , <nl> " list CF3 limit 10 " , <nl> " list CF3 [ h : g ] limit 10 " , <nl> + " truncate CF1 " , <nl> " update keyspace TestKeySpace with placement _ strategy = ' org . apache . cassandra . locator . LocalStrategy ' " , <nl> " update keyspace TestKeySpace with replication _ factor = 1 and strategy _ options = [ { DC1 : 3 , DC2 : 4 , DC5 : 1 } ] " <nl> } ; <nl> @ @ - 101 , 6 + 102 , 10 @ @ public class CliTest extends TestCase <nl> assertTrue ( result . startsWith ( " = > ( column = " ) ) ; <nl> } <nl> } <nl> + else if ( statement . startsWith ( " truncate " ) ) <nl> + { <nl> + assertTrue ( result . contains ( " truncated . " ) ) ; <nl> + } <nl> <nl> outStream . reset ( ) ; / / reset stream so we have only output from next statement all the time <nl> errStream . reset ( ) ; / / no errors to the end user .

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c0551b7 . . 04705ba 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Add sstableloader option to accept target keyspace name ( CASSANDRA - 13884 ) 
 * Move processing of EchoMessage response to gossip stage ( CASSANDRA - 13713 ) 
 * Add coordinator write metric per CF ( CASSANDRA - 14232 ) 
 * Fix scheduling of speculative retry threshold recalculation ( CASSANDRA - 14338 ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableLoader . java b / src / java / org / apache / cassandra / io / sstable / SSTableLoader . java 
 index 980fdf1 . . a6985f7 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableLoader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableLoader . java 
 @ @ - 56 , 13 + 56 , 13 @ @ public class SSTableLoader implements StreamEventHandler 
 
 public SSTableLoader ( File directory , Client client , OutputHandler outputHandler ) 
 { 
 - this ( directory , client , outputHandler , 1 ) ; 
 + this ( directory , client , outputHandler , 1 , null ) ; 
 } 
 
 - public SSTableLoader ( File directory , Client client , OutputHandler outputHandler , int connectionsPerHost ) 
 + public SSTableLoader ( File directory , Client client , OutputHandler outputHandler , int connectionsPerHost , String targetKeyspace ) 
 { 
 this . directory = directory ; 
 - this . keyspace = directory . getParentFile ( ) . getName ( ) ; 
 + this . keyspace = targetKeyspace ! = null ? targetKeyspace : directory . getParentFile ( ) . getName ( ) ; 
 this . client = client ; 
 this . outputHandler = outputHandler ; 
 this . connectionsPerHost = connectionsPerHost ; 
 diff - - git a / src / java / org / apache / cassandra / tools / BulkLoader . java b / src / java / org / apache / cassandra / tools / BulkLoader . java 
 index 545d1f7 . . d85c605 100644 
 - - - a / src / java / org / apache / cassandra / tools / BulkLoader . java 
 + + + b / src / java / org / apache / cassandra / tools / BulkLoader . java 
 @ @ - 65 , 7 + 65 , 8 @ @ public class BulkLoader 
 buildSSLOptions ( options . clientEncOptions ) , 
 options . allowServerPortDiscovery ) , 
 handler , 
 - options . connectionsPerHost ) ; 
 + options . connectionsPerHost , 
 + options . targetKeyspace ) ; 
 DatabaseDescriptor . setStreamThroughputOutboundMegabitsPerSec ( options . throttle ) ; 
 DatabaseDescriptor . setInterDCStreamThroughputOutboundMegabitsPerSec ( options . interDcThrottle ) ; 
 StreamResultFuture future = null ; 
 diff - - git a / src / java / org / apache / cassandra / tools / LoaderOptions . java b / src / java / org / apache / cassandra / tools / LoaderOptions . java 
 index 3686584 . . d6cb670 100644 
 - - - a / src / java / org / apache / cassandra / tools / LoaderOptions . java 
 + + + b / src / java / org / apache / cassandra / tools / LoaderOptions . java 
 @ @ - 38 , 6 + 38 , 7 @ @ import org . apache . cassandra . tools . BulkLoader . CmdLineOptions ; 
 import com . datastax . driver . core . AuthProvider ; 
 import com . datastax . driver . core . PlainTextAuthProvider ; 
 import org . apache . commons . cli . * ; 
 + import org . apache . commons . lang3 . StringUtils ; 
 
 public class LoaderOptions 
 { 
 @ @ - 59 , 6 + 60 , 7 @ @ public class LoaderOptions 
 public static final String INTER _ DC _ THROTTLE _ MBITS = " inter - dc - throttle " ; 
 public static final String TOOL _ NAME = " sstableloader " ; 
 public static final String ALLOW _ SERVER _ PORT _ DISCOVERY _ OPTION = " server - port - discovery " ; 
 + public static final String TARGET _ KEYSPACE = " target - keyspace " ; 
 
 / * client encryption options * / 
 public static final String SSL _ TRUSTSTORE = " truststore " ; 
 @ @ - 88 , 6 + 90 , 7 @ @ public class LoaderOptions 
 public final Set < InetSocketAddress > hosts ; 
 public final Set < InetAddressAndPort > ignores ; 
 public final boolean allowServerPortDiscovery ; 
 + public final String targetKeyspace ; 
 
 LoaderOptions ( Builder builder ) 
 { 
 @ @ - 109 , 6 + 112 , 7 @ @ public class LoaderOptions 
 hosts = builder . hosts ; 
 allowServerPortDiscovery = builder . allowServerPortDiscovery ; 
 ignores = builder . ignores ; 
 + targetKeyspace = builder . targetKeyspace ; 
 } 
 
 static class Builder 
 @ @ - 134 , 6 + 138 , 7 @ @ public class LoaderOptions 
 Set < InetSocketAddress > hosts = new HashSet < > ( ) ; 
 Set < InetAddressAndPort > ignores = new HashSet < > ( ) ; 
 boolean allowServerPortDiscovery ; 
 + String targetKeyspace ; 
 
 Builder ( ) 
 { 
 @ @ - 509 , 6 + 514 , 14 @ @ public class LoaderOptions 
 clientEncOptions . cipher _ suites = cmd . getOptionValue ( SSL _ CIPHER _ SUITES ) . split ( " , " ) ; 
 } 
 
 + if ( cmd . hasOption ( TARGET _ KEYSPACE ) ) 
 + { 
 + targetKeyspace = cmd . getOptionValue ( TARGET _ KEYSPACE ) ; 
 + if ( StringUtils . isBlank ( targetKeyspace ) ) 
 + { 
 + errorMsg ( " Empty keyspace is not supported . " , options ) ; 
 + } 
 + } 
 return this ; 
 } 
 catch ( ParseException | ConfigurationException | MalformedURLException e ) 
 @ @ - 615 , 6 + 628 , 7 @ @ public class LoaderOptions 
 options . addOption ( " ciphers " , SSL _ CIPHER _ SUITES , " CIPHER - SUITES " , " Client SSL : comma - separated list of encryption suites to use " ) ; 
 options . addOption ( " f " , CONFIG _ PATH , " path to config file " , " cassandra . yaml file path for streaming throughput and client / server SSL . " ) ; 
 options . addOption ( " spd " , ALLOW _ SERVER _ PORT _ DISCOVERY _ OPTION , " allow server port discovery " , " Use ports published by server to decide how to connect . With SSL requires StartTLS to be used . " ) ; 
 + options . addOption ( " k " , TARGET _ KEYSPACE , " target keyspace name " , " target keyspace name " ) ; 
 return options ; 
 } 
 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableLoaderTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableLoaderTest . java 
 index 430b7c2 . . 8509115 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableLoaderTest . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableLoaderTest . java 
 @ @ - 56 , 6 + 56 , 7 @ @ import static org . junit . Assert . assertTrue ; 
 public class SSTableLoaderTest 
 { 
 public static final String KEYSPACE1 = " SSTableLoaderTest " ; 
 + public static final String KEYSPACE2 = " SSTableLoaderTest1 " ; 
 public static final String CF _ STANDARD1 = " Standard1 " ; 
 public static final String CF _ STANDARD2 = " Standard2 " ; 
 
 @ @ - 70 , 6 + 71 , 11 @ @ public class SSTableLoaderTest 
 SchemaLoader . standardCFMD ( KEYSPACE1 , CF _ STANDARD1 ) , 
 SchemaLoader . standardCFMD ( KEYSPACE1 , CF _ STANDARD2 ) ) ; 
 
 + SchemaLoader . createKeyspace ( KEYSPACE2 , 
 + KeyspaceParams . simple ( 1 ) , 
 + SchemaLoader . standardCFMD ( KEYSPACE2 , CF _ STANDARD1 ) , 
 + SchemaLoader . standardCFMD ( KEYSPACE2 , CF _ STANDARD2 ) ) ; 
 + 
 StorageService . instance . initServer ( ) ; 
 } 
 
 @ @ - 208 , 6 + 214 , 48 @ @ public class SSTableLoaderTest 
 latch . await ( ) ; 
 } 
 
 + @ Test 
 + public void testLoadingSSTableToDifferentKeyspace ( ) throws Exception 
 + { 
 + File dataDir = new File ( tmpdir . getAbsolutePath ( ) + File . separator + KEYSPACE1 + File . separator + CF _ STANDARD1 ) ; 
 + assert dataDir . mkdirs ( ) ; 
 + TableMetadata metadata = Schema . instance . getTableMetadata ( KEYSPACE1 , CF _ STANDARD1 ) ; 
 + 
 + String schema = " CREATE TABLE % s . % s ( key ascii , name ascii , val ascii , val1 ascii , PRIMARY KEY ( key , name ) ) " ; 
 + String query = " INSERT INTO % s . % s ( key , name , val ) VALUES ( ? , ? , ? ) " ; 
 + 
 + try ( CQLSSTableWriter writer = CQLSSTableWriter . builder ( ) 
 + . inDirectory ( dataDir ) 
 + . forTable ( String . format ( schema , KEYSPACE1 , CF _ STANDARD1 ) ) 
 + . using ( String . format ( query , KEYSPACE1 , CF _ STANDARD1 ) ) 
 + . build ( ) ) 
 + { 
 + writer . addRow ( " key1 " , " col1 " , " 100 " ) ; 
 + } 
 + 
 + ColumnFamilyStore cfs = Keyspace . open ( KEYSPACE1 ) . getColumnFamilyStore ( CF _ STANDARD1 ) ; 
 + cfs . forceBlockingFlush ( ) ; / / wait for sstables to be on disk else we won ' t be able to stream them 
 + 
 + final CountDownLatch latch = new CountDownLatch ( 1 ) ; 
 + SSTableLoader loader = new SSTableLoader ( dataDir , new TestClient ( ) , new OutputHandler . SystemOutput ( false , false ) , 1 , KEYSPACE2 ) ; 
 + loader . stream ( Collections . emptySet ( ) , completionStreamListener ( latch ) ) . get ( ) ; 
 + 
 + cfs = Keyspace . open ( KEYSPACE2 ) . getColumnFamilyStore ( CF _ STANDARD1 ) ; 
 + cfs . forceBlockingFlush ( ) ; 
 + 
 + List < FilteredPartition > partitions = Util . getAll ( Util . cmd ( cfs ) . build ( ) ) ; 
 + 
 + assertEquals ( 1 , partitions . size ( ) ) ; 
 + assertEquals ( " key1 " , AsciiType . instance . getString ( partitions . get ( 0 ) . partitionKey ( ) . getKey ( ) ) ) ; 
 + assertEquals ( ByteBufferUtil . bytes ( " 100 " ) , partitions . get ( 0 ) . getRow ( Clustering . make ( ByteBufferUtil . bytes ( " col1 " ) ) ) 
 + . getCell ( metadata . getColumn ( ByteBufferUtil . bytes ( " val " ) ) ) 
 + . value ( ) ) ; 
 + 
 + / / The stream future is signalled when the work is complete but before releasing references . Wait for release 
 + / / before cleanup ( CASSANDRA - 10118 ) . 
 + latch . await ( ) ; 
 + } 
 + 
 StreamEventHandler completionStreamListener ( final CountDownLatch latch ) 
 { 
 return new StreamEventHandler ( ) {

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index eec904a . . 982454c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 59 , 6 + 59 , 8 @ @ 
 the old ones ( CASSANDRA - 1644 ) 
 * upgrade to Thrift 0 . 5 ( CASSANDRA - 1367 ) 
 * renamed CL . DCQUORUM to LOCAL _ QUORUM and DCQUORUMSYNC to EACH _ QUORUM 
 + * cli truncate support ( CASSANDRA - 1653 ) 
 + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) 
 
 
 0 . 7 - beta2 
 diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g 
 index e59c608 . . a9229ee 100644 
 - - - a / src / java / org / apache / cassandra / cli / Cli . g 
 + + + b / src / java / org / apache / cassandra / cli / Cli . g 
 @ @ - 55 , 6 + 55 , 7 @ @ tokens { 
 NODE _ UPDATE _ KEYSPACE ; 
 NODE _ UPDATE _ COLUMN _ FAMILY ; 
 NODE _ LIST ; 
 + NODE _ TRUNCATE ; 
 
 / / Internal Nodes . 
 NODE _ COLUMN _ ACCESS ; 
 @ @ - 123 , 6 + 124 , 7 @ @ statement 
 | setStatement 
 | showStatement 
 | listStatement 
 + | truncateStatement 
 | - > ^ ( NODE _ NO _ OP ) 
 ; 
 
 @ @ - 174 , 6 + 176 , 8 @ @ helpStatement 
 - > ^ ( NODE _ HELP NODE _ THRIFT _ COUNT ) 
 | K _ HELP K _ LIST 
 - > ^ ( NODE _ HELP NODE _ LIST ) 
 + | K _ HELP K _ TRUNCATE 
 + - > ^ ( NODE _ HELP NODE _ TRUNCATE ) 
 | K _ HELP 
 - > ^ ( NODE _ HELP ) 
 | ' ? ' 
 @ @ - 231 , 6 + 235 , 11 @ @ listStatement 
 - > ^ ( NODE _ LIST columnFamily keyRangeExpr ? ^ ( NODE _ LIMIT $ limit ) ? ) 
 ; 
 
 + truncateStatement 
 + : K _ TRUNCATE columnFamily 
 + - > ^ ( NODE _ TRUNCATE columnFamily ) 
 + ; 
 + 
 showClusterName 
 : K _ SHOW K _ CLUSTER K _ NAME 
 - > ^ ( NODE _ SHOW _ CLUSTER _ NAME ) 
 @ @ - 430 , 6 + 439 , 7 @ @ K _ AND : ' AND ' ; 
 K _ UPDATE : ' UPDATE ' ; 
 K _ LIST : ' LIST ' ; 
 K _ LIMIT : ' LIMIT ' ; 
 + K _ TRUNCATE : ' TRUNCATE ' ; 
 
 / / private syntactic rules 
 fragment 
 diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index b6ace98 . . b63105a 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 171 , 6 + 171 , 9 @ @ public class CliClient extends CliUserHelp 
 case CliParser . NODE _ LIST : 
 executeList ( tree ) ; 
 break ; 
 + case CliParser . NODE _ TRUNCATE : 
 + executeTruncate ( tree . getChild ( 0 ) . getText ( ) ) ; 
 + break ; 
 case CliParser . NODE _ NO _ OP : 
 / / comment lines come here ; they are treated as no ops . 
 break ; 
 @ @ - 943 , 6 + 946 , 30 @ @ public class CliClient extends CliUserHelp 
 printSliceList ( columnFamilyDef , keySlices ) ; 
 } 
 
 + / / TRUNCATE < columnFamily > 
 + private void executeTruncate ( String columnFamily ) 
 + { 
 + if ( ! CliMain . isConnected ( ) | | ! hasKeySpace ( ) ) 
 + return ; 
 + 
 + / / getting CfDef , it will fail if there is no such column family in current keySpace . 
 + CfDef cfDef = getCfDef ( columnFamily ) ; 
 + 
 + try 
 + { 
 + thriftClient . truncate ( cfDef . getName ( ) ) ; 
 + sessionState . out . println ( columnFamily + " truncated . " ) ; 
 + } 
 + catch ( InvalidRequestException e ) 
 + { 
 + throw new RuntimeException ( e . getWhy ( ) ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + throw new RuntimeException ( e . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 / / SHOW API VERSION 
 private void executeShowVersion ( ) throws TException 
 { 
 diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 index f541fe5 . . b033d8f 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java 
 + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 @ @ - 55 , 12 + 55 , 16 @ @ public class CliCompleter extends SimpleCompletor 
 " help set " , 
 " help del " , 
 " help count " , 
 + " help list " , 
 + " help truncate " 
 } ; 
 private static String [ ] keyspaceCommands = { 
 " get " , 
 " set " , 
 " count " , 
 - " del " 
 + " del " , 
 + " list " , 
 + " truncate " 
 } ; 
 
 public CliCompleter ( ) 
 diff - - git a / src / java / org / apache / cassandra / cli / CliUserHelp . java b / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 index 7c512e2 . . db6a779 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 + + + b / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 @ @ - 281 , 6 + 281 , 13 @ @ public class CliUserHelp { 
 state . out . println ( " list Users [ j : ] limit 40 " ) ; 
 break ; 
 
 + case CliParser . NODE _ TRUNCATE : 
 + state . out . println ( " truncate < column _ family > " ) ; 
 + state . out . println ( " Truncate specified column family . \ n " ) ; 
 + state . out . println ( " example : " ) ; 
 + state . out . println ( " truncate Category " ) ; 
 + break ; 
 + 
 default : 
 state . out . println ( " ? " ) ; 
 break ; 
 @ @ - 324 , 7 + 331 , 8 @ @ public class CliUserHelp { 
 state . out . println ( " del < cf > [ ' < key > ' ] [ ' < super > ' ] [ ' < col > ' ] Delete sub column . " ) ; 
 state . out . println ( " count < cf > [ ' < key > ' ] Count columns in record . " ) ; 
 state . out . println ( " count < cf > [ ' < key > ' ] [ ' < super > ' ] Count columns in a super column . " ) ; 
 - state . out . println ( " list < cf > List all rows in the column family . " ) ; 
 + state . out . println ( " truncate < column _ family > Truncate specified column family . " ) ; 
 + state . out . println ( " list < cf > List all rows in the column family . " ) ; 
 state . out . println ( " list < cf > [ < startKey > : ] " ) ; 
 state . out . println ( " List rows in the column family beginning with < startKey > . " ) ; 
 state . out . println ( " list < cf > [ < startKey > : < endKey > ] " ) ; 
 diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java 
 index 24a3de0 . . eddcafd 100644 
 - - - a / test / unit / org / apache / cassandra / cli / CliTest . java 
 + + + b / test / unit / org / apache / cassandra / cli / CliTest . java 
 @ @ - 52 , 6 + 52 , 7 @ @ public class CliTest extends TestCase 
 " list CF3 [ h : ] " , 
 " list CF3 limit 10 " , 
 " list CF3 [ h : g ] limit 10 " , 
 + " truncate CF1 " , 
 " update keyspace TestKeySpace with placement _ strategy = ' org . apache . cassandra . locator . LocalStrategy ' " , 
 " update keyspace TestKeySpace with replication _ factor = 1 and strategy _ options = [ { DC1 : 3 , DC2 : 4 , DC5 : 1 } ] " 
 } ; 
 @ @ - 101 , 6 + 102 , 10 @ @ public class CliTest extends TestCase 
 assertTrue ( result . startsWith ( " = > ( column = " ) ) ; 
 } 
 } 
 + else if ( statement . startsWith ( " truncate " ) ) 
 + { 
 + assertTrue ( result . contains ( " truncated . " ) ) ; 
 + } 
 
 outStream . reset ( ) ; / / reset stream so we have only output from next statement all the time 
 errStream . reset ( ) ; / / no errors to the end user .
