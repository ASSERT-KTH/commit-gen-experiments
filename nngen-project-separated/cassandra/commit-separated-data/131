BLEU SCORE: 0.020943469770777077

TEST MSG: Add missing dependencies in pom - all
GENERATED MSG: Switch from ivy to maven - ivy - tasks to ease maven central builds .

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1293bd4 . . 16fe6d1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 17 <nl> + * Add Missing dependencies in pom - all ( CASSANDRA - 14422 ) <nl> * Cleanup StartupClusterConnectivityChecker and PING Verb ( CASSANDRA - 14447 ) <nl> * Fix deprecated repair error notifications from 3 . x clusters to legacy JMX clients ( CASSANDRA - 13121 ) <nl> * Cassandra not starting when using enhanced startup scripts in windows ( CASSANDRA - 14418 ) <nl> diff - - git a / build . xml b / build . xml <nl> index 7bab97c . . 3fc64fb 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 65 , 10 + 65 , 10 @ @ <nl> < property name = " test . microbench . src " value = " $ { test . dir } / microbench " / > <nl> < property name = " dist . dir " value = " $ { build . dir } / dist " / > <nl> < property name = " tmp . dir " value = " $ { java . io . tmpdir } " / > <nl> - 	 <nl> + <nl> < property name = " source . version " value = " 1 . 8 " / > <nl> < property name = " target . version " value = " 1 . 8 " / > <nl> - 	 <nl> + <nl> < condition property = " version " value = " $ { base . version } " > <nl> < isset property = " release " / > <nl> < / condition > <nl> @ @ - 76 , 7 + 76 , 7 @ @ <nl> < property name = " version . properties . dir " <nl> value = " $ { build . src . resources } / org / apache / cassandra / config / " / > <nl> < property name = " final . name " value = " $ { ant . project . name } - $ { version } " / > <nl> - <nl> + <nl> < ! - - details of what version of Maven ANT Tasks to fetch - - > <nl> < property name = " maven - ant - tasks . version " value = " 2 . 1 . 3 " / > <nl> < property name = " maven - ant - tasks . local " value = " $ { user . home } / . m2 / repository / org / apache / maven / maven - ant - tasks " / > <nl> @ @ - 102 , 7 + 102 , 7 @ @ <nl> <nl> < ! - - skip flushing schema tables during tests - - > <nl> < property name = " cassandra . test . flush _ local _ schema _ changes " value = " false " / > <nl> - <nl> + <nl> < ! - - http : / / www . eclemma . org / jacoco / - - > <nl> < property name = " jacoco . export . dir " value = " $ { build . dir } / jacoco / " / > <nl> < property name = " jacoco . partials . dir " value = " $ { jacoco . export . dir } / partials " / > <nl> @ @ - 215 , 7 + 215 , 7 @ @ <nl> srcfile = " $ { build . src . java } / org / apache / cassandra / cql3 / Cql . g " <nl> targetfile = " $ { build . src . gen - java } / org / apache / cassandra / cql3 / Cql . tokens " / > <nl> < / target > <nl> - <nl> + <nl> < target name = " gen - cql3 - grammar " depends = " check - gen - cql3 - grammar " unless = " cql3current " > <nl> < echo > Building Grammar $ { build . src . java } / org / apache / cassandra / cql3 / Cql . g . . . < / echo > <nl> < java classname = " org . antlr . Tool " <nl> @ @ - 360 , 7 + 360 , 7 @ @ <nl> < dependency groupId = " com . googlecode . json - simple " artifactId = " json - simple " version = " 1 . 1 " / > <nl> < dependency groupId = " com . boundary " artifactId = " high - scale - lib " version = " 1 . 0 . 6 " / > <nl> < dependency groupId = " com . github . jbellis " artifactId = " jamm " version = " 0 . 3 . 0 " / > <nl> - 	 <nl> + <nl> < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 7 " > <nl> < exclusion groupId = " org . slf4j " artifactId = " slf4j - log4j12 " / > <nl> < / dependency > <nl> @ @ - 414 , 6 + 414 , 7 @ @ <nl> 	 < exclusion groupId = " log4j " artifactId = " log4j " / > <nl> < / dependency > <nl> < dependency groupId = " joda - time " artifactId = " joda - time " version = " 2 . 4 " / > <nl> + < dependency groupId = " org . ow2 . asm " artifactId = " asm " version = " 5 . 0 . 4 " / > <nl> <nl> < / dependencyManagement > <nl> < developer id = " adelapena " name = " Andres de la Pe Ã± a " / > <nl> @ @ - 552 , 6 + 553 , 7 @ @ <nl> < dependency groupId = " com . boundary " artifactId = " high - scale - lib " / > <nl> < dependency groupId = " org . yaml " artifactId = " snakeyaml " / > <nl> < dependency groupId = " org . mindrot " artifactId = " jbcrypt " / > <nl> + < dependency groupId = " io . airlift " artifactId = " airline " / > <nl> < dependency groupId = " io . dropwizard . metrics " artifactId = " metrics - core " / > <nl> < dependency groupId = " io . dropwizard . metrics " artifactId = " metrics - jvm " / > <nl> < dependency groupId = " com . addthis . metrics " artifactId = " reporter - config3 " / > <nl> @ @ - 582 , 6 + 584 , 8 @ @ <nl> < dependency groupId = " org . fusesource " artifactId = " sigar " / > <nl> < dependency groupId = " org . eclipse . jdt . core . compiler " artifactId = " ecj " / > <nl> < dependency groupId = " org . caffinitas . ohc " artifactId = " ohc - core " / > <nl> + < dependency groupId = " org . caffinitas . ohc " artifactId = " ohc - core - j8 " / > <nl> + < dependency groupId = " org . ow2 . asm " artifactId = " asm " / > <nl> < / artifact : pom > <nl> < artifact : pom id = " thrift - pom " <nl> artifactId = " cassandra - thrift " <nl> @ @ - 607 , 7 + 611 , 7 @ @ <nl> < scm connection = " $ { scm . connection } " developerConnection = " $ { scm . developerConnection } " url = " $ { scm . url } " / > <nl> < dependency groupId = " com . google . guava " artifactId = " guava " / > <nl> < / artifact : pom > <nl> - <nl> + <nl> < artifact : pom id = " dist - pom " <nl> artifactId = " apache - cassandra " <nl> packaging = " pom " <nl> @ @ - 666 , 8 + 670 , 8 @ @ <nl> < target name = " maven - ant - tasks - retrieve - test " depends = " maven - ant - tasks - init " > <nl> < artifact : dependencies pomRefId = " test - deps - pom " <nl> filesetId = " test - dependency - jars " <nl> - sourcesFilesetId = " test - dependency - sources " <nl> - cacheDependencyRefs = " true " <nl> + sourcesFilesetId = " test - dependency - sources " <nl> + cacheDependencyRefs = " true " <nl> dependencyRefsBuildFile = " $ { build . dir } / test - dependencies . xml " > <nl> < remoteRepository refid = " apache " / > <nl> < remoteRepository refid = " central " / > <nl> @ @ - 822 , 7 + 826 , 7 @ @ <nl> 	 < target name = " write - poms " unless = " without . maven " > <nl> 	 < antcall target = " _ write - poms " / > <nl> 	 < / target > <nl> - 	 <nl> + <nl> < ! - - <nl> The jar target makes cassandra . jar output . <nl> - - > <nl> @ @ - 946 , 7 + 950 , 7 @ @ <nl> < / create - javadoc > <nl> < jar jarfile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } - javadoc . jar " <nl> basedir = " $ { javadoc . jars . dir } / clientutil " / > <nl> - < ! - - javadoc task always rebuilds so might as well remove the generated docs to prevent <nl> + < ! - - javadoc task always rebuilds so might as well remove the generated docs to prevent <nl> being pulled into the distribution by accident - - > <nl> < delete quiet = " true " dir = " $ { javadoc . jars . dir } " / > <nl> < / target > <nl> @ @ - 1037 , 7 + 1041 , 7 @ @ <nl> < include name = " * . jar " / > <nl> < / fileset > <nl> < / copy > <nl> - < artifact : writepom pomRefId = " dist - pom " <nl> + < artifact : writepom pomRefId = " dist - pom " <nl> file = " $ { build . dir } / $ { final . name } - dist . pom " / > <nl> < tar compression = " gzip " longfile = " gnu " <nl> destfile = " $ { build . dir } / $ { final . name } - bin . tar . gz " > <nl> @ @ - 1134 , 7 + 1138 , 7 @ @ <nl> debuglevel = " $ { debuglevel } " <nl> destdir = " $ { test . classes } " <nl> includeantruntime = " true " <nl> - source = " $ { source . version } " <nl> + source = " $ { source . version } " <nl> target = " $ { target . version } " <nl> encoding = " utf - 8 " > <nl> < classpath > <nl> @ @ - 1273 , 7 + 1277 , 7 @ @ <nl> < / testmacro > <nl> < fileset dir = " $ { test . unit . src } " / > <nl> < / target > <nl> - <nl> + <nl> < ! - - Will not generate a junit report or fail on error since it is called in parallel for test - compression <nl> That is taken care of by testparallel - - > <nl> < macrodef name = " testlist " > <nl> @ @ - 1340 , 7 + 1344 , 7 @ @ <nl> < jvmarg value = " - Dcassandra . skip _ sync = true " / > <nl> < / testmacro > <nl> < / target > <nl> - <nl> + <nl> < target name = " test - compression " depends = " build - test " description = " Execute unit tests with sstable compression enabled " > <nl> < property name = " compressed _ yaml " value = " $ { build . test . dir } / cassandra . compressed . yaml " / > <nl> < concat destfile = " $ { compressed _ yaml } " > <nl> @ @ - 1360 , 12 + 1364 , 12 @ @ <nl> < jvmarg value = " - Dcassandra . test - serialization - writes = True " / > <nl> < / testmacro > <nl> < / target > <nl> - <nl> + <nl> < target name = " msg - ser - test " depends = " build - test " description = " Tests message serializations " > <nl> < testmacro inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " <nl> filter = " * * / SerializationsTest . java " / > <nl> < / target > <nl> - <nl> + <nl> < target name = " msg - ser - test - 7 " depends = " build - test " description = " Generates message serializations " > <nl> < testmacro inputdir = " $ { test . unit . src } " <nl> timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > <nl> @ @ - 1464 , 10 + 1468 , 10 @ @ <nl> < / sequential > <nl> < / target > <nl> <nl> - < target name = " test - all " <nl> - depends = " eclipse - warnings , test , long - test , test - compression " <nl> + < target name = " test - all " <nl> + depends = " eclipse - warnings , test , long - test , test - compression " <nl> description = " Run all tests except for those under test - burn " / > <nl> - <nl> + <nl> < ! - - Use JaCoCo ant extension without needing externally saved lib - - > <nl> < target name = " jacoco - init " depends = " maven - ant - tasks - init " > <nl> < artifact : dependencies pathId = " jacocoant . classpath " > <nl> @ @ - 1523 , 7 + 1527 , 7 @ @ <nl> < / target > <nl> <nl> < target name = " rat - check " depends = " rat - init " > <nl> - < rat : report xmlns : rat = " antlib : org . apache . rat . anttasks " <nl> + < rat : report xmlns : rat = " antlib : org . apache . rat . anttasks " <nl> reportFile = " $ { build . dir } / rat - report . log " > <nl> < fileset dir = " . " excludesfile = " . rat - excludes " / > <nl> < / rat : report > <nl> @ @ - 1791 , 7 + 1795 , 7 @ @ <nl> < classpathentry kind = " lib " path = " test / conf " / > <nl> < classpathentry kind = " lib " path = " $ { java . home } / . . / lib / tools . jar " / > <nl> ] ] > <nl> - 	 < / echo > 	 <nl> + 	 < / echo > <nl> 	 < path id = " eclipse - project - libs - path " > <nl> 	 < fileset dir = " lib " > <nl> 	 < include name = " * * / * . jar " / > <nl> @ @ - 1805 , 27 + 1809 , 27 @ @ <nl> 	 	 var File = java . io . File ; <nl> 	 	 var FilenameUtils = Packages . org . apache . commons . io . FilenameUtils ; <nl> 	 	 jars = project . getProperty ( " eclipse - project - libs " ) . split ( project . getProperty ( " path . separator " ) ) ; <nl> - 	 	 <nl> + <nl> 	 	 cp = " " ; <nl> 	 for ( i = 0 ; i < jars . length ; i + + ) { <nl> 	 srcjar = FilenameUtils . getBaseName ( jars [ i ] ) + ' - sources . jar ' ; <nl> 	 	 srcdir = FilenameUtils . concat ( project . getProperty ( " build . dir . lib " ) , ' sources ' ) ; <nl> 	 	 srcfile = new File ( FilenameUtils . concat ( srcdir , srcjar ) ) ; <nl> - 	 	 <nl> + <nl> 	 	 cp + = ' < classpathentry kind = " lib " path = " ' + jars [ i ] + ' " ' ; <nl> 	 	 if ( srcfile . exists ( ) ) { <nl> 	 	 cp + = ' sourcepath = " ' + srcfile . getAbsolutePath ( ) + ' " ' ; <nl> 	 	 } <nl> 	 	 cp + = ' / > \ n ' ; <nl> 	 	 } <nl> - 	 	 <nl> + <nl> 	 	 cp + = ' < / classpath > ' ; <nl> - 	 <nl> + <nl> 	 	 echo = project . createTask ( " echo " ) ; <nl> 	 echo . setMessage ( cp ) ; <nl> 	 	 echo . setFile ( new File ( " . classpath " ) ) ; <nl> 	 	 echo . setAppend ( true ) ; <nl> - 	 echo . perform ( ) ; 	 <nl> + 	 echo . perform ( ) ; <nl> 	 ] ] > < / script > <nl> < mkdir dir = " . settings " / > <nl> < / target > <nl> @ @ - 1845 , 29 + 1849 , 29 @ @ <nl> < / target > <nl> <nl> <nl> - < target name = " eclipse - warnings " depends = " build " description = " Run eclipse compiler code analysis " > <nl> + < target name = " eclipse - warnings " depends = " build " description = " Run eclipse compiler code analysis " > <nl> < property name = " ecj . log . dir " value = " $ { build . dir } / ecj " / > <nl> < property name = " ecj . warnings . file " value = " $ { ecj . log . dir } / eclipse _ compiler _ checks . txt " / > <nl> < mkdir dir = " $ { ecj . log . dir } " / > <nl> <nl> - < property name = " ecj . properties " value = " $ { basedir } / eclipse _ compiler . properties " / > <nl> + < property name = " ecj . properties " value = " $ { basedir } / eclipse _ compiler . properties " / > <nl> <nl> - < echo message = " Running Eclipse Code Analysis . Output logged to $ { ecj . warnings . file } " / > <nl> - <nl> - 	 < java <nl> + < echo message = " Running Eclipse Code Analysis . Output logged to $ { ecj . warnings . file } " / > <nl> + <nl> + 	 < java <nl> 	 jar = " $ { build . dir . lib } / jars / ecj - $ { ecj . version } . jar " <nl> fork = " true " <nl> 	 failonerror = " true " <nl> - maxmemory = " 512m " > <nl> + maxmemory = " 512m " > <nl> < arg value = " - source " / > <nl> - 	 < arg value = " $ { source . version } " / > <nl> + 	 < arg value = " $ { source . version } " / > <nl> 	 < arg value = " - target " / > <nl> - 	 < arg value = " $ { target . version } " / > <nl> + 	 < arg value = " $ { target . version } " / > <nl> 	 < arg value = " - d " / > <nl> < arg value = " none " / > <nl> - 	 < arg value = " - proc : none " / > <nl> + 	 < arg value = " - proc : none " / > <nl> < arg value = " - log " / > <nl> - < arg value = " $ { ecj . warnings . file } " / > <nl> + < arg value = " $ { ecj . warnings . file } " / > <nl> < arg value = " - properties " / > <nl> < arg value = " $ { ecj . properties } " / > <nl> < arg value = " - cp " / > <nl> @ @ - 1875 , 13 + 1879 , 13 @ @ <nl> < arg value = " $ { build . src . java } " / > <nl> < / java > <nl> < / target > <nl> - <nl> + <nl> <nl> < ! - - Publish artifacts to Maven repositories - - > <nl> < target name = " mvn - install " <nl> depends = " maven - declare - dependencies , artifacts , jar , sources - jar , javadoc - jar " <nl> description = " Installs the artifacts in the Maven Local Repository " > <nl> - <nl> + <nl> < ! - - the parent - - > <nl> < install pomFile = " $ { build . dir } / $ { final . name } - parent . pom " <nl> file = " $ { build . dir } / $ { final . name } - parent . pom " <nl> @ @ - 1899 , 8 + 1903 , 8 @ @ <nl> file = " $ { build . dir } / $ { final . name } - src . tar . gz " <nl> packaging = " tar . gz " <nl> classifier = " src " / > <nl> - <nl> - < ! - - the cassandra - thrift jar - - > <nl> + <nl> + < ! - - the cassandra - thrift jar - - > <nl> < install pomFile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . pom " <nl> file = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . jar " / > <nl> < install pomFile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . pom " <nl> @ @ - 1910 , 7 + 1914 , 7 @ @ <nl> file = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } - javadoc . jar " <nl> classifier = " javadoc " / > <nl> <nl> - < ! - - the cassandra - clientutil jar - - > <nl> + < ! - - the cassandra - clientutil jar - - > <nl> < install pomFile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . pom " <nl> file = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . jar " / > <nl> < install pomFile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . pom " <nl> @ @ - 1935 , 7 + 1939 , 7 @ @ <nl> depends = " mvn - install " <nl> if = " release " <nl> description = " Publishes the artifacts to the Maven repository " > <nl> - <nl> + <nl> < ! - - the parent - - > <nl> < deploy pomFile = " $ { build . dir } / $ { final . name } - parent . pom " <nl> file = " $ { build . dir } / $ { final . name } - parent . pom " <nl> @ @ - 1953 , 8 + 1957 , 8 @ @ <nl> file = " $ { build . dir } / $ { final . name } - src . tar . gz " <nl> packaging = " tar . gz " <nl> classifier = " src " / > <nl> - <nl> - < ! - - the cassandra - thrift jar - - > <nl> + <nl> + < ! - - the cassandra - thrift jar - - > <nl> < deploy pomFile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . pom " <nl> file = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . jar " / > <nl> < deploy pomFile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . pom " <nl> @ @ - 1964 , 7 + 1968 , 7 @ @ <nl> file = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } - javadoc . jar " <nl> classifier = " javadoc " / > <nl> <nl> - < ! - - the cassandra - clientutil jar - - > <nl> + < ! - - the cassandra - clientutil jar - - > <nl> < deploy pomFile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . pom " <nl> file = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . jar " / > <nl> < deploy pomFile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . pom "
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index a79c17f . . b8fbe55 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 169 , 7 + 169 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> / * This abstraction maintains the token / endpoint metadata information * / <nl> private TokenMetadata tokenMetadata _ = new TokenMetadata ( ) ; <nl> <nl> - private Set < InetAddress > replicatingNodes ; <nl> + private Set < InetAddress > replicatingNodes = new Collections . synchronizedSet ( new HashSet < InetAddress > ( ) ) ; <nl> private InetAddress removingNode ; <nl> <nl> / * Are we starting this node in bootstrap mode ? * / <nl> @ @ - 734 , 9 + 734 , 10 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> } <nl> <nl> / * * <nl> - * Handle node being actively removed from the ring . <nl> + * Handle notification that a node being actively removed from the ring via ' removetoken ' <nl> * <nl> * @ param endpoint node <nl> + * @ param state either REMOVED _ TOKEN ( node is gone ) or REMOVING _ TOKEN ( replicas need to be restored ) <nl> * / <nl> private void handleStateRemoving ( InetAddress endpoint , Token removeToken , String state ) <nl> { <nl> @ @ - 1676 , 17 + 1677 , 28 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> <nl> / * * <nl> * Force a remove operation to complete . This may be necessary if a remove operation <nl> - * blocks forever due to node / stream failure . <nl> + * blocks forever due to node / stream failure . removeToken ( ) must be called <nl> + * first , this is a last resort measure . No further attempt will be made to restore replicas . <nl> * / <nl> public void forceRemoveCompletion ( ) <nl> { <nl> if ( ! replicatingNodes . isEmpty ( ) ) <nl> + { <nl> logger _ . warn ( " Removal not confirmed for for " + StringUtils . join ( this . replicatingNodes , " , " ) ) ; <nl> - replicatingNodes . clear ( ) ; <nl> + replicatingNodes . clear ( ) ; <nl> + } <nl> + else <nl> + { <nl> + throw new UnsupportedOperationException ( " No tokens to force removal on , call ' removetoken ' first " ) ; <nl> + } <nl> } <nl> <nl> / * * <nl> - * Remove a node that has died . <nl> + * Remove a node that has died , attempting to restore the replica count . <nl> + * If the node is alive , decommission should be attempted . If decommission <nl> + * fails , then removeToken should be called . If we fail while trying to <nl> + * restore the replica count , finally forceRemoveCompleteion should be <nl> + * called to forcibly remove the node without regard to replica count . <nl> * <nl> * @ param tokenString token for the node <nl> * / <nl> @ @ - 1707 , 14 + 1719 , 13 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> throw new UnsupportedOperationException ( " Node " + endpoint + " is alive and owns this token . Use decommission command to remove it from the ring " ) ; <nl> <nl> / / A leaving endpoint that is dead is already being removed . <nl> - if ( tokenMetadata _ . isLeaving ( endpoint ) ) <nl> - throw new UnsupportedOperationException ( " Node " + endpoint + " is already being removed . " ) ; <nl> + if ( tokenMetadata _ . isLeaving ( endpoint ) ) <nl> + logger _ . warn ( " Node " + endpoint + " is already being removed , continuing removal anyway " ) ; <nl> <nl> if ( replicatingNodes ! = null ) <nl> - throw new UnsupportedOperationException ( " This node is already processing a removal . Wait for it to complete . " ) ; <nl> + throw new UnsupportedOperationException ( " This node is already processing a removal . Wait for it to complete , or use ' removetoken force ' if this has failed . " ) ; <nl> <nl> / / Find the endpoints that are going to become responsible for data <nl> - replicatingNodes = Collections . synchronizedSet ( new HashSet < InetAddress > ( ) ) ; <nl> for ( String table : DatabaseDescriptor . getNonSystemTables ( ) ) <nl> { <nl> / / if the replication factor is 1 the data is lost so we shouldn ' t wait for confirmation

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1293bd4 . . 16fe6d1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 17 
 + * Add Missing dependencies in pom - all ( CASSANDRA - 14422 ) 
 * Cleanup StartupClusterConnectivityChecker and PING Verb ( CASSANDRA - 14447 ) 
 * Fix deprecated repair error notifications from 3 . x clusters to legacy JMX clients ( CASSANDRA - 13121 ) 
 * Cassandra not starting when using enhanced startup scripts in windows ( CASSANDRA - 14418 ) 
 diff - - git a / build . xml b / build . xml 
 index 7bab97c . . 3fc64fb 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 65 , 10 + 65 , 10 @ @ 
 < property name = " test . microbench . src " value = " $ { test . dir } / microbench " / > 
 < property name = " dist . dir " value = " $ { build . dir } / dist " / > 
 < property name = " tmp . dir " value = " $ { java . io . tmpdir } " / > 
 - 	 
 + 
 < property name = " source . version " value = " 1 . 8 " / > 
 < property name = " target . version " value = " 1 . 8 " / > 
 - 	 
 + 
 < condition property = " version " value = " $ { base . version } " > 
 < isset property = " release " / > 
 < / condition > 
 @ @ - 76 , 7 + 76 , 7 @ @ 
 < property name = " version . properties . dir " 
 value = " $ { build . src . resources } / org / apache / cassandra / config / " / > 
 < property name = " final . name " value = " $ { ant . project . name } - $ { version } " / > 
 - 
 + 
 < ! - - details of what version of Maven ANT Tasks to fetch - - > 
 < property name = " maven - ant - tasks . version " value = " 2 . 1 . 3 " / > 
 < property name = " maven - ant - tasks . local " value = " $ { user . home } / . m2 / repository / org / apache / maven / maven - ant - tasks " / > 
 @ @ - 102 , 7 + 102 , 7 @ @ 
 
 < ! - - skip flushing schema tables during tests - - > 
 < property name = " cassandra . test . flush _ local _ schema _ changes " value = " false " / > 
 - 
 + 
 < ! - - http : / / www . eclemma . org / jacoco / - - > 
 < property name = " jacoco . export . dir " value = " $ { build . dir } / jacoco / " / > 
 < property name = " jacoco . partials . dir " value = " $ { jacoco . export . dir } / partials " / > 
 @ @ - 215 , 7 + 215 , 7 @ @ 
 srcfile = " $ { build . src . java } / org / apache / cassandra / cql3 / Cql . g " 
 targetfile = " $ { build . src . gen - java } / org / apache / cassandra / cql3 / Cql . tokens " / > 
 < / target > 
 - 
 + 
 < target name = " gen - cql3 - grammar " depends = " check - gen - cql3 - grammar " unless = " cql3current " > 
 < echo > Building Grammar $ { build . src . java } / org / apache / cassandra / cql3 / Cql . g . . . < / echo > 
 < java classname = " org . antlr . Tool " 
 @ @ - 360 , 7 + 360 , 7 @ @ 
 < dependency groupId = " com . googlecode . json - simple " artifactId = " json - simple " version = " 1 . 1 " / > 
 < dependency groupId = " com . boundary " artifactId = " high - scale - lib " version = " 1 . 0 . 6 " / > 
 < dependency groupId = " com . github . jbellis " artifactId = " jamm " version = " 0 . 3 . 0 " / > 
 - 	 
 + 
 < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 7 " > 
 < exclusion groupId = " org . slf4j " artifactId = " slf4j - log4j12 " / > 
 < / dependency > 
 @ @ - 414 , 6 + 414 , 7 @ @ 
 	 < exclusion groupId = " log4j " artifactId = " log4j " / > 
 < / dependency > 
 < dependency groupId = " joda - time " artifactId = " joda - time " version = " 2 . 4 " / > 
 + < dependency groupId = " org . ow2 . asm " artifactId = " asm " version = " 5 . 0 . 4 " / > 
 
 < / dependencyManagement > 
 < developer id = " adelapena " name = " Andres de la Pe Ã± a " / > 
 @ @ - 552 , 6 + 553 , 7 @ @ 
 < dependency groupId = " com . boundary " artifactId = " high - scale - lib " / > 
 < dependency groupId = " org . yaml " artifactId = " snakeyaml " / > 
 < dependency groupId = " org . mindrot " artifactId = " jbcrypt " / > 
 + < dependency groupId = " io . airlift " artifactId = " airline " / > 
 < dependency groupId = " io . dropwizard . metrics " artifactId = " metrics - core " / > 
 < dependency groupId = " io . dropwizard . metrics " artifactId = " metrics - jvm " / > 
 < dependency groupId = " com . addthis . metrics " artifactId = " reporter - config3 " / > 
 @ @ - 582 , 6 + 584 , 8 @ @ 
 < dependency groupId = " org . fusesource " artifactId = " sigar " / > 
 < dependency groupId = " org . eclipse . jdt . core . compiler " artifactId = " ecj " / > 
 < dependency groupId = " org . caffinitas . ohc " artifactId = " ohc - core " / > 
 + < dependency groupId = " org . caffinitas . ohc " artifactId = " ohc - core - j8 " / > 
 + < dependency groupId = " org . ow2 . asm " artifactId = " asm " / > 
 < / artifact : pom > 
 < artifact : pom id = " thrift - pom " 
 artifactId = " cassandra - thrift " 
 @ @ - 607 , 7 + 611 , 7 @ @ 
 < scm connection = " $ { scm . connection } " developerConnection = " $ { scm . developerConnection } " url = " $ { scm . url } " / > 
 < dependency groupId = " com . google . guava " artifactId = " guava " / > 
 < / artifact : pom > 
 - 
 + 
 < artifact : pom id = " dist - pom " 
 artifactId = " apache - cassandra " 
 packaging = " pom " 
 @ @ - 666 , 8 + 670 , 8 @ @ 
 < target name = " maven - ant - tasks - retrieve - test " depends = " maven - ant - tasks - init " > 
 < artifact : dependencies pomRefId = " test - deps - pom " 
 filesetId = " test - dependency - jars " 
 - sourcesFilesetId = " test - dependency - sources " 
 - cacheDependencyRefs = " true " 
 + sourcesFilesetId = " test - dependency - sources " 
 + cacheDependencyRefs = " true " 
 dependencyRefsBuildFile = " $ { build . dir } / test - dependencies . xml " > 
 < remoteRepository refid = " apache " / > 
 < remoteRepository refid = " central " / > 
 @ @ - 822 , 7 + 826 , 7 @ @ 
 	 < target name = " write - poms " unless = " without . maven " > 
 	 < antcall target = " _ write - poms " / > 
 	 < / target > 
 - 	 
 + 
 < ! - - 
 The jar target makes cassandra . jar output . 
 - - > 
 @ @ - 946 , 7 + 950 , 7 @ @ 
 < / create - javadoc > 
 < jar jarfile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } - javadoc . jar " 
 basedir = " $ { javadoc . jars . dir } / clientutil " / > 
 - < ! - - javadoc task always rebuilds so might as well remove the generated docs to prevent 
 + < ! - - javadoc task always rebuilds so might as well remove the generated docs to prevent 
 being pulled into the distribution by accident - - > 
 < delete quiet = " true " dir = " $ { javadoc . jars . dir } " / > 
 < / target > 
 @ @ - 1037 , 7 + 1041 , 7 @ @ 
 < include name = " * . jar " / > 
 < / fileset > 
 < / copy > 
 - < artifact : writepom pomRefId = " dist - pom " 
 + < artifact : writepom pomRefId = " dist - pom " 
 file = " $ { build . dir } / $ { final . name } - dist . pom " / > 
 < tar compression = " gzip " longfile = " gnu " 
 destfile = " $ { build . dir } / $ { final . name } - bin . tar . gz " > 
 @ @ - 1134 , 7 + 1138 , 7 @ @ 
 debuglevel = " $ { debuglevel } " 
 destdir = " $ { test . classes } " 
 includeantruntime = " true " 
 - source = " $ { source . version } " 
 + source = " $ { source . version } " 
 target = " $ { target . version } " 
 encoding = " utf - 8 " > 
 < classpath > 
 @ @ - 1273 , 7 + 1277 , 7 @ @ 
 < / testmacro > 
 < fileset dir = " $ { test . unit . src } " / > 
 < / target > 
 - 
 + 
 < ! - - Will not generate a junit report or fail on error since it is called in parallel for test - compression 
 That is taken care of by testparallel - - > 
 < macrodef name = " testlist " > 
 @ @ - 1340 , 7 + 1344 , 7 @ @ 
 < jvmarg value = " - Dcassandra . skip _ sync = true " / > 
 < / testmacro > 
 < / target > 
 - 
 + 
 < target name = " test - compression " depends = " build - test " description = " Execute unit tests with sstable compression enabled " > 
 < property name = " compressed _ yaml " value = " $ { build . test . dir } / cassandra . compressed . yaml " / > 
 < concat destfile = " $ { compressed _ yaml } " > 
 @ @ - 1360 , 12 + 1364 , 12 @ @ 
 < jvmarg value = " - Dcassandra . test - serialization - writes = True " / > 
 < / testmacro > 
 < / target > 
 - 
 + 
 < target name = " msg - ser - test " depends = " build - test " description = " Tests message serializations " > 
 < testmacro inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " 
 filter = " * * / SerializationsTest . java " / > 
 < / target > 
 - 
 + 
 < target name = " msg - ser - test - 7 " depends = " build - test " description = " Generates message serializations " > 
 < testmacro inputdir = " $ { test . unit . src } " 
 timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > 
 @ @ - 1464 , 10 + 1468 , 10 @ @ 
 < / sequential > 
 < / target > 
 
 - < target name = " test - all " 
 - depends = " eclipse - warnings , test , long - test , test - compression " 
 + < target name = " test - all " 
 + depends = " eclipse - warnings , test , long - test , test - compression " 
 description = " Run all tests except for those under test - burn " / > 
 - 
 + 
 < ! - - Use JaCoCo ant extension without needing externally saved lib - - > 
 < target name = " jacoco - init " depends = " maven - ant - tasks - init " > 
 < artifact : dependencies pathId = " jacocoant . classpath " > 
 @ @ - 1523 , 7 + 1527 , 7 @ @ 
 < / target > 
 
 < target name = " rat - check " depends = " rat - init " > 
 - < rat : report xmlns : rat = " antlib : org . apache . rat . anttasks " 
 + < rat : report xmlns : rat = " antlib : org . apache . rat . anttasks " 
 reportFile = " $ { build . dir } / rat - report . log " > 
 < fileset dir = " . " excludesfile = " . rat - excludes " / > 
 < / rat : report > 
 @ @ - 1791 , 7 + 1795 , 7 @ @ 
 < classpathentry kind = " lib " path = " test / conf " / > 
 < classpathentry kind = " lib " path = " $ { java . home } / . . / lib / tools . jar " / > 
 ] ] > 
 - 	 < / echo > 	 
 + 	 < / echo > 
 	 < path id = " eclipse - project - libs - path " > 
 	 < fileset dir = " lib " > 
 	 < include name = " * * / * . jar " / > 
 @ @ - 1805 , 27 + 1809 , 27 @ @ 
 	 	 var File = java . io . File ; 
 	 	 var FilenameUtils = Packages . org . apache . commons . io . FilenameUtils ; 
 	 	 jars = project . getProperty ( " eclipse - project - libs " ) . split ( project . getProperty ( " path . separator " ) ) ; 
 - 	 	 
 + 
 	 	 cp = " " ; 
 	 for ( i = 0 ; i < jars . length ; i + + ) { 
 	 srcjar = FilenameUtils . getBaseName ( jars [ i ] ) + ' - sources . jar ' ; 
 	 	 srcdir = FilenameUtils . concat ( project . getProperty ( " build . dir . lib " ) , ' sources ' ) ; 
 	 	 srcfile = new File ( FilenameUtils . concat ( srcdir , srcjar ) ) ; 
 - 	 	 
 + 
 	 	 cp + = ' < classpathentry kind = " lib " path = " ' + jars [ i ] + ' " ' ; 
 	 	 if ( srcfile . exists ( ) ) { 
 	 	 cp + = ' sourcepath = " ' + srcfile . getAbsolutePath ( ) + ' " ' ; 
 	 	 } 
 	 	 cp + = ' / > \ n ' ; 
 	 	 } 
 - 	 	 
 + 
 	 	 cp + = ' < / classpath > ' ; 
 - 	 
 + 
 	 	 echo = project . createTask ( " echo " ) ; 
 	 echo . setMessage ( cp ) ; 
 	 	 echo . setFile ( new File ( " . classpath " ) ) ; 
 	 	 echo . setAppend ( true ) ; 
 - 	 echo . perform ( ) ; 	 
 + 	 echo . perform ( ) ; 
 	 ] ] > < / script > 
 < mkdir dir = " . settings " / > 
 < / target > 
 @ @ - 1845 , 29 + 1849 , 29 @ @ 
 < / target > 
 
 
 - < target name = " eclipse - warnings " depends = " build " description = " Run eclipse compiler code analysis " > 
 + < target name = " eclipse - warnings " depends = " build " description = " Run eclipse compiler code analysis " > 
 < property name = " ecj . log . dir " value = " $ { build . dir } / ecj " / > 
 < property name = " ecj . warnings . file " value = " $ { ecj . log . dir } / eclipse _ compiler _ checks . txt " / > 
 < mkdir dir = " $ { ecj . log . dir } " / > 
 
 - < property name = " ecj . properties " value = " $ { basedir } / eclipse _ compiler . properties " / > 
 + < property name = " ecj . properties " value = " $ { basedir } / eclipse _ compiler . properties " / > 
 
 - < echo message = " Running Eclipse Code Analysis . Output logged to $ { ecj . warnings . file } " / > 
 - 
 - 	 < java 
 + < echo message = " Running Eclipse Code Analysis . Output logged to $ { ecj . warnings . file } " / > 
 + 
 + 	 < java 
 	 jar = " $ { build . dir . lib } / jars / ecj - $ { ecj . version } . jar " 
 fork = " true " 
 	 failonerror = " true " 
 - maxmemory = " 512m " > 
 + maxmemory = " 512m " > 
 < arg value = " - source " / > 
 - 	 < arg value = " $ { source . version } " / > 
 + 	 < arg value = " $ { source . version } " / > 
 	 < arg value = " - target " / > 
 - 	 < arg value = " $ { target . version } " / > 
 + 	 < arg value = " $ { target . version } " / > 
 	 < arg value = " - d " / > 
 < arg value = " none " / > 
 - 	 < arg value = " - proc : none " / > 
 + 	 < arg value = " - proc : none " / > 
 < arg value = " - log " / > 
 - < arg value = " $ { ecj . warnings . file } " / > 
 + < arg value = " $ { ecj . warnings . file } " / > 
 < arg value = " - properties " / > 
 < arg value = " $ { ecj . properties } " / > 
 < arg value = " - cp " / > 
 @ @ - 1875 , 13 + 1879 , 13 @ @ 
 < arg value = " $ { build . src . java } " / > 
 < / java > 
 < / target > 
 - 
 + 
 
 < ! - - Publish artifacts to Maven repositories - - > 
 < target name = " mvn - install " 
 depends = " maven - declare - dependencies , artifacts , jar , sources - jar , javadoc - jar " 
 description = " Installs the artifacts in the Maven Local Repository " > 
 - 
 + 
 < ! - - the parent - - > 
 < install pomFile = " $ { build . dir } / $ { final . name } - parent . pom " 
 file = " $ { build . dir } / $ { final . name } - parent . pom " 
 @ @ - 1899 , 8 + 1903 , 8 @ @ 
 file = " $ { build . dir } / $ { final . name } - src . tar . gz " 
 packaging = " tar . gz " 
 classifier = " src " / > 
 - 
 - < ! - - the cassandra - thrift jar - - > 
 + 
 + < ! - - the cassandra - thrift jar - - > 
 < install pomFile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . pom " 
 file = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . jar " / > 
 < install pomFile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . pom " 
 @ @ - 1910 , 7 + 1914 , 7 @ @ 
 file = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } - javadoc . jar " 
 classifier = " javadoc " / > 
 
 - < ! - - the cassandra - clientutil jar - - > 
 + < ! - - the cassandra - clientutil jar - - > 
 < install pomFile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . pom " 
 file = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . jar " / > 
 < install pomFile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . pom " 
 @ @ - 1935 , 7 + 1939 , 7 @ @ 
 depends = " mvn - install " 
 if = " release " 
 description = " Publishes the artifacts to the Maven repository " > 
 - 
 + 
 < ! - - the parent - - > 
 < deploy pomFile = " $ { build . dir } / $ { final . name } - parent . pom " 
 file = " $ { build . dir } / $ { final . name } - parent . pom " 
 @ @ - 1953 , 8 + 1957 , 8 @ @ 
 file = " $ { build . dir } / $ { final . name } - src . tar . gz " 
 packaging = " tar . gz " 
 classifier = " src " / > 
 - 
 - < ! - - the cassandra - thrift jar - - > 
 + 
 + < ! - - the cassandra - thrift jar - - > 
 < deploy pomFile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . pom " 
 file = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . jar " / > 
 < deploy pomFile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . pom " 
 @ @ - 1964 , 7 + 1968 , 7 @ @ 
 file = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } - javadoc . jar " 
 classifier = " javadoc " / > 
 
 - < ! - - the cassandra - clientutil jar - - > 
 + < ! - - the cassandra - clientutil jar - - > 
 < deploy pomFile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . pom " 
 file = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . jar " / > 
 < deploy pomFile = " $ { build . dir } / $ { ant . project . name } - clientutil - $ { version } . pom "

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index a79c17f . . b8fbe55 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 169 , 7 + 169 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 / * This abstraction maintains the token / endpoint metadata information * / 
 private TokenMetadata tokenMetadata _ = new TokenMetadata ( ) ; 
 
 - private Set < InetAddress > replicatingNodes ; 
 + private Set < InetAddress > replicatingNodes = new Collections . synchronizedSet ( new HashSet < InetAddress > ( ) ) ; 
 private InetAddress removingNode ; 
 
 / * Are we starting this node in bootstrap mode ? * / 
 @ @ - 734 , 9 + 734 , 10 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 } 
 
 / * * 
 - * Handle node being actively removed from the ring . 
 + * Handle notification that a node being actively removed from the ring via ' removetoken ' 
 * 
 * @ param endpoint node 
 + * @ param state either REMOVED _ TOKEN ( node is gone ) or REMOVING _ TOKEN ( replicas need to be restored ) 
 * / 
 private void handleStateRemoving ( InetAddress endpoint , Token removeToken , String state ) 
 { 
 @ @ - 1676 , 17 + 1677 , 28 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 
 / * * 
 * Force a remove operation to complete . This may be necessary if a remove operation 
 - * blocks forever due to node / stream failure . 
 + * blocks forever due to node / stream failure . removeToken ( ) must be called 
 + * first , this is a last resort measure . No further attempt will be made to restore replicas . 
 * / 
 public void forceRemoveCompletion ( ) 
 { 
 if ( ! replicatingNodes . isEmpty ( ) ) 
 + { 
 logger _ . warn ( " Removal not confirmed for for " + StringUtils . join ( this . replicatingNodes , " , " ) ) ; 
 - replicatingNodes . clear ( ) ; 
 + replicatingNodes . clear ( ) ; 
 + } 
 + else 
 + { 
 + throw new UnsupportedOperationException ( " No tokens to force removal on , call ' removetoken ' first " ) ; 
 + } 
 } 
 
 / * * 
 - * Remove a node that has died . 
 + * Remove a node that has died , attempting to restore the replica count . 
 + * If the node is alive , decommission should be attempted . If decommission 
 + * fails , then removeToken should be called . If we fail while trying to 
 + * restore the replica count , finally forceRemoveCompleteion should be 
 + * called to forcibly remove the node without regard to replica count . 
 * 
 * @ param tokenString token for the node 
 * / 
 @ @ - 1707 , 14 + 1719 , 13 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 throw new UnsupportedOperationException ( " Node " + endpoint + " is alive and owns this token . Use decommission command to remove it from the ring " ) ; 
 
 / / A leaving endpoint that is dead is already being removed . 
 - if ( tokenMetadata _ . isLeaving ( endpoint ) ) 
 - throw new UnsupportedOperationException ( " Node " + endpoint + " is already being removed . " ) ; 
 + if ( tokenMetadata _ . isLeaving ( endpoint ) ) 
 + logger _ . warn ( " Node " + endpoint + " is already being removed , continuing removal anyway " ) ; 
 
 if ( replicatingNodes ! = null ) 
 - throw new UnsupportedOperationException ( " This node is already processing a removal . Wait for it to complete . " ) ; 
 + throw new UnsupportedOperationException ( " This node is already processing a removal . Wait for it to complete , or use ' removetoken force ' if this has failed . " ) ; 
 
 / / Find the endpoints that are going to become responsible for data 
 - replicatingNodes = Collections . synchronizedSet ( new HashSet < InetAddress > ( ) ) ; 
 for ( String table : DatabaseDescriptor . getNonSystemTables ( ) ) 
 { 
 / / if the replication factor is 1 the data is lost so we shouldn ' t wait for confirmation
