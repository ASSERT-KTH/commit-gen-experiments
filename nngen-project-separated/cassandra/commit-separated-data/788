BLEU SCORE: 0.03283637368030199

TEST MSG: Account for partition deletions in tombstone histogram
GENERATED MSG: add incremental _ backups option

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index feeaded . . 354a1c2 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 15 <nl> + * Account for partition deletions in tombstone histogram ( CASSANDRA - 12112 ) <nl> * Avoid stalling paxos when the paxos state expires ( CASSANDRA - 12043 ) <nl> * Remove finished incoming streaming connections from MessagingService ( CASSANDRA - 11854 ) <nl> * Don ' t try to get sstables for non - repairing column families ( CASSANDRA - 12077 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / LazilyCompactedRow . java b / src / java / org / apache / cassandra / db / compaction / LazilyCompactedRow . java <nl> index 4ca9829 . . e9aecb2 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / LazilyCompactedRow . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / LazilyCompactedRow . java <nl> @ @ - 234 , 6 + 234 , 8 @ @ public class LazilyCompactedRow extends AbstractCompactedRow <nl> minTimestampTracker . update ( maxRowTombstone . isLive ( ) ? Long . MAX _ VALUE : maxRowTombstone . markedForDeleteAt ) ; <nl> maxTimestampTracker . update ( maxRowTombstone . markedForDeleteAt ) ; <nl> maxDeletionTimeTracker . update ( maxRowTombstone . isLive ( ) ? Integer . MIN _ VALUE : maxRowTombstone . localDeletionTime ) ; <nl> + if ( ! maxRowTombstone . isLive ( ) ) <nl> + tombstones . update ( maxRowTombstone . localDeletionTime ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java <nl> index 4553a45 . . c8fd781 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java <nl> @ @ - 26 , 6 + 26 , 8 @ @ import org . apache . cassandra . cql3 . CQLTester ; <nl> import org . apache . cassandra . cql3 . UntypedResultSet ; <nl> import org . apache . cassandra . db . ColumnFamilyStore ; <nl> import org . apache . cassandra . db . Keyspace ; <nl> + import org . apache . cassandra . io . sstable . SSTableReader ; <nl> + <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> @ @ - 189 , 6 + 191 , 19 @ @ public class CompactionsCQLTest extends CQLTester <nl> <nl> } <nl> <nl> + @ Test <nl> + public void testTopLevelDeletion ( ) throws Throwable <nl> + { <nl> + createTable ( " CREATE TABLE % s ( id int PRIMARY KEY , id2 text ) " ) ; <nl> + execute ( " delete from % s where id = 22 " ) ; <nl> + getCurrentColumnFamilyStore ( ) . forceBlockingFlush ( ) ; <nl> + for ( SSTableReader sstable : getCurrentColumnFamilyStore ( ) . getSSTables ( ) ) <nl> + assertFalse ( sstable . getSSTableMetadata ( ) . estimatedTombstoneDropTime . getAsMap ( ) . isEmpty ( ) ) ; <nl> + getCurrentColumnFamilyStore ( ) . forceMajorCompaction ( ) ; <nl> + for ( SSTableReader sstable : getCurrentColumnFamilyStore ( ) . getSSTables ( ) ) <nl> + assertFalse ( sstable . getSSTableMetadata ( ) . estimatedTombstoneDropTime . getAsMap ( ) . isEmpty ( ) ) ; <nl> + } <nl> + <nl> <nl> <nl> @ Test ( expected = IllegalArgumentException . class )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 59b3bf6 . . 2eb9705 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 21 , 6 + 21 , 8 @ @ <nl> * avoid exporting an un - requested row in sstable2json , when exporting <nl> a key that does not exist ( CASSANDRA - 2168 ) <nl> * track and migrate cached pages during compaction ( CASSANDRA - 1902 ) <nl> + * add incremental _ backups option ( CASSANDRA - 1872 ) <nl> + <nl> <nl> 0 . 7 . 3 <nl> * Keep endpoint state until aVeryLongTime ( CASSANDRA - 2115 ) <nl> diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index 60d3b6f . . 25f46bb 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 217 , 6 + 217 , 12 @ @ thrift _ framed _ transport _ size _ in _ mb : 15 <nl> # internal thrift overhead . <nl> thrift _ max _ message _ length _ in _ mb : 16 <nl> <nl> + # Set to true to have Cassandra create a hard link to each sstable <nl> + # flushed or streamed locally in a backups / subdirectory of the <nl> + # Keyspace data . Removing these links is the operator ' s <nl> + # responsibility . <nl> + incremental _ backups : false <nl> + <nl> # Whether or not to take a snapshot before each compaction . Be <nl> # careful using this option , since Cassandra won ' t clean up the <nl> # snapshots for you . Mostly useful if you ' re paranoid when there <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index 89ba3d0 . . b9a123d 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 118 , 6 + 118 , 8 @ @ public class Config <nl> / / TODO : remove in 0 . 8 <nl> public Boolean enable _ page _ cache _ migration = false ; <nl> <nl> + public boolean incremental _ backups = false ; <nl> + <nl> public static enum CommitLogSync { <nl> periodic , <nl> batch <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 04dd94b . . e1105b5 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 37 , 7 + 37 , 6 @ @ import org . apache . cassandra . config . Config . RequestSchedulerId ; <nl> import org . apache . cassandra . db . ColumnFamilyType ; <nl> import org . apache . cassandra . db . DefsTable ; <nl> import org . apache . cassandra . db . Table ; <nl> - import org . apache . cassandra . db . commitlog . CommitLog ; <nl> import org . apache . cassandra . db . marshal . AbstractType ; <nl> import org . apache . cassandra . db . migration . Migration ; <nl> import org . apache . cassandra . dht . IPartitioner ; <nl> @ @ - 1240 , 4 + 1239 , 9 @ @ public class DatabaseDescriptor <nl> { <nl> return conf . enable _ page _ cache _ migration ; <nl> } <nl> + <nl> + public static boolean incrementalBackupsEnabled ( ) <nl> + { <nl> + return conf . incremental _ backups ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index e3f19c1 . . 08c3755 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 962 , 6 + 962 , 21 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> { <nl> assert sstable . getColumnFamilyName ( ) . equals ( columnFamily ) ; <nl> ssTables . add ( Arrays . asList ( sstable ) ) ; <nl> + if ( DatabaseDescriptor . incrementalBackupsEnabled ( ) ) <nl> + { <nl> + File keyspaceDir = new File ( sstable . getFilename ( ) ) . getParentFile ( ) ; <nl> + File backupsDir = new File ( keyspaceDir , " backups " ) ; <nl> + try <nl> + { <nl> + if ( ! backupsDir . exists ( ) & & ! backupsDir . mkdirs ( ) ) <nl> + throw new IOException ( " Unable to create " + backupsDir ) ; <nl> + sstable . createLinks ( backupsDir . getCanonicalPath ( ) ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + throw new IOError ( e ) ; <nl> + } <nl> + } <nl> CompactionManager . instance . submitMinorIfNeeded ( this ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTable . java b / src / java / org / apache / cassandra / io / sstable / SSTable . java <nl> index 41c6f46 . . 05d6212 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTable . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTable . java <nl> @ @ - 183 , 7 + 183 , 7 @ @ public abstract class SSTable <nl> / * * <nl> * Discovers existing components for the descriptor . Slow : only intended for use outside the critical path . <nl> * / <nl> - static Set < Component > componentsFor ( final Descriptor desc ) throws IOException <nl> + static Set < Component > componentsFor ( final Descriptor desc ) <nl> { <nl> final Set < Component > components = new HashSet < Component > ( ) ; <nl> desc . directory . list ( new FilenameFilter ( ) <nl> diff - - git a / test / conf / cassandra . yaml b / test / conf / cassandra . yaml <nl> index f774903 . . 9738cd5 100644 <nl> - - - a / test / conf / cassandra . yaml <nl> + + + b / test / conf / cassandra . yaml <nl> @ @ - 32 , 6 + 32 , 7 @ @ encryption _ options : <nl> keystore _ password : cassandra <nl> truststore : conf / . truststore <nl> truststore _ password : cassandra <nl> + incremental _ backups : true <nl> keyspaces : <nl> - name : Keyspace1 <nl> replica _ placement _ strategy : org . apache . cassandra . locator . SimpleStrategy <nl> diff - - git a / test / system / test _ thrift _ server . py b / test / system / test _ thrift _ server . py <nl> index ab82d77 . . cf7a94b 100644 <nl> - - - a / test / system / test _ thrift _ server . py <nl> + + + b / test / system / test _ thrift _ server . py <nl> @ @ - 548 , 7 + 548 , 8 @ @ class TestMutations ( ThriftTester ) : <nl> _ assert _ columnpath _ exists ( key , ColumnPath ( ' Super1 ' , super _ column = ' sc1 ' , column = c ) ) <nl> _ assert _ columnpath _ exists ( key , ColumnPath ( ' Super2 ' , super _ column = ' sc1 ' , column = c ) ) <nl> <nl> - def test _ batch _ mutate _ does _ not _ accept _ cosc _ and _ deletion _ in _ same _ mutation ( self ) : <nl> + def test _ bad _ batch _ calls ( self ) : <nl> + # mutate _ does _ not _ accept _ cosc _ and _ deletion _ in _ same _ mutation <nl> def too _ full ( ) : <nl> _ set _ keyspace ( ' Keyspace1 ' ) <nl> col = ColumnOrSuperColumn ( column = Column ( " foo " , ' bar ' , 0 ) ) <nl> @ @ - 557 , 7 + 558 , 7 @ @ class TestMutations ( ThriftTester ) : <nl> ConsistencyLevel . ONE ) <nl> _ expect _ exception ( too _ full , InvalidRequestException ) <nl> <nl> - def test _ batch _ mutate _ does _ not _ yet _ accept _ slice _ ranges ( self ) : <nl> + # test _ batch _ mutate _ does _ not _ yet _ accept _ slice _ ranges <nl> def send _ range ( ) : <nl> _ set _ keyspace ( ' Keyspace1 ' ) <nl> sp = SlicePredicate ( slice _ range = SliceRange ( start = ' 0 ' , finish = " " , count = 10 ) ) <nl> @ @ - 566 , 7 + 567 , 7 @ @ class TestMutations ( ThriftTester ) : <nl> ConsistencyLevel . ONE ) <nl> _ expect _ exception ( send _ range , InvalidRequestException ) <nl> <nl> - def test _ batch _ mutate _ does _ not _ accept _ cosc _ on _ undefined _ cf ( self ) : <nl> + # test _ batch _ mutate _ does _ not _ accept _ cosc _ on _ undefined _ cf : <nl> def bad _ cf ( ) : <nl> _ set _ keyspace ( ' Keyspace1 ' ) <nl> col = ColumnOrSuperColumn ( column = Column ( " foo " , ' bar ' , 0 ) ) <nl> @ @ - 574 , 7 + 575 , 7 @ @ class TestMutations ( ThriftTester ) : <nl> ConsistencyLevel . ONE ) <nl> _ expect _ exception ( bad _ cf , InvalidRequestException ) <nl> <nl> - def test _ batch _ mutate _ does _ not _ accept _ deletion _ on _ undefined _ cf ( self ) : <nl> + # test _ batch _ mutate _ does _ not _ accept _ deletion _ on _ undefined _ cf <nl> def bad _ cf ( ) : <nl> _ set _ keyspace ( ' Keyspace1 ' ) <nl> d = Deletion ( 2 , predicate = SlicePredicate ( column _ names = [ ' baz ' ] ) ) <nl> diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java <nl> index 752ba53 . . 9794d8d 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> * / <nl> package org . apache . cassandra . db ; <nl> <nl> + import java . io . File ; <nl> import java . io . IOException ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . Arrays ; <nl> @ @ - 39 , 6 + 40 , 7 @ @ import org . apache . cassandra . CleanupHelper ; <nl> import org . apache . cassandra . Util ; <nl> import org . apache . cassandra . config . ColumnDefinition ; <nl> import org . apache . cassandra . config . ConfigurationException ; <nl> + import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . columniterator . IdentityQueryFilter ; <nl> import org . apache . cassandra . db . filter . * ; <nl> import org . apache . cassandra . dht . IPartitioner ; <nl> @ @ - 52 , 6 + 54 , 7 @ @ import org . apache . cassandra . thrift . IndexType ; <nl> import org . apache . cassandra . utils . WrappedRunnable ; <nl> <nl> import static junit . framework . Assert . assertEquals ; <nl> + import static junit . framework . Assert . assertTrue ; <nl> import static org . apache . cassandra . Util . column ; <nl> import static org . apache . cassandra . Util . getBytes ; <nl> import static org . junit . Assert . assertNull ; <nl> @ @ - 515 , 4 + 518 , 17 @ @ public class ColumnFamilyStoreTest extends CleanupHelper <nl> rms . add ( rm ) ; <nl> return Util . writeColumnFamily ( rms ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testBackupAfterFlush ( ) throws Throwable <nl> + { <nl> + insertKey1Key2 ( ) ; <nl> + <nl> + File backupDir = new File ( DatabaseDescriptor . getDataFileLocationForTable ( " Keyspace2 " , 0 ) , " backups " ) ; <nl> + for ( String f : Arrays . asList ( " Standard1 - f - 1 - Data . db " , " Standard1 - f - 1 - Index . db " , " Standard1 - f - 2 - Data . db " , " Standard1 - f - 2 - Index . db " , <nl> + " Standard1 - f - 1 - Filter . db " , " Standard1 - f - 1 - Statistics . db " , " Standard1 - f - 2 - Filter . db " , " Standard1 - f - 2 - Statistics . db " ) ) <nl> + { <nl> + assertTrue ( " can not find backedup file : " + f , new File ( backupDir , f ) . exists ( ) ) ; <nl> + } <nl> + } <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index feeaded . . 354a1c2 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 15 
 + * Account for partition deletions in tombstone histogram ( CASSANDRA - 12112 ) 
 * Avoid stalling paxos when the paxos state expires ( CASSANDRA - 12043 ) 
 * Remove finished incoming streaming connections from MessagingService ( CASSANDRA - 11854 ) 
 * Don ' t try to get sstables for non - repairing column families ( CASSANDRA - 12077 ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / LazilyCompactedRow . java b / src / java / org / apache / cassandra / db / compaction / LazilyCompactedRow . java 
 index 4ca9829 . . e9aecb2 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / LazilyCompactedRow . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / LazilyCompactedRow . java 
 @ @ - 234 , 6 + 234 , 8 @ @ public class LazilyCompactedRow extends AbstractCompactedRow 
 minTimestampTracker . update ( maxRowTombstone . isLive ( ) ? Long . MAX _ VALUE : maxRowTombstone . markedForDeleteAt ) ; 
 maxTimestampTracker . update ( maxRowTombstone . markedForDeleteAt ) ; 
 maxDeletionTimeTracker . update ( maxRowTombstone . isLive ( ) ? Integer . MIN _ VALUE : maxRowTombstone . localDeletionTime ) ; 
 + if ( ! maxRowTombstone . isLive ( ) ) 
 + tombstones . update ( maxRowTombstone . localDeletionTime ) ; 
 } 
 
 / * * 
 diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java 
 index 4553a45 . . c8fd781 100644 
 - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java 
 + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsCQLTest . java 
 @ @ - 26 , 6 + 26 , 8 @ @ import org . apache . cassandra . cql3 . CQLTester ; 
 import org . apache . cassandra . cql3 . UntypedResultSet ; 
 import org . apache . cassandra . db . ColumnFamilyStore ; 
 import org . apache . cassandra . db . Keyspace ; 
 + import org . apache . cassandra . io . sstable . SSTableReader ; 
 + 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 @ @ - 189 , 6 + 191 , 19 @ @ public class CompactionsCQLTest extends CQLTester 
 
 } 
 
 + @ Test 
 + public void testTopLevelDeletion ( ) throws Throwable 
 + { 
 + createTable ( " CREATE TABLE % s ( id int PRIMARY KEY , id2 text ) " ) ; 
 + execute ( " delete from % s where id = 22 " ) ; 
 + getCurrentColumnFamilyStore ( ) . forceBlockingFlush ( ) ; 
 + for ( SSTableReader sstable : getCurrentColumnFamilyStore ( ) . getSSTables ( ) ) 
 + assertFalse ( sstable . getSSTableMetadata ( ) . estimatedTombstoneDropTime . getAsMap ( ) . isEmpty ( ) ) ; 
 + getCurrentColumnFamilyStore ( ) . forceMajorCompaction ( ) ; 
 + for ( SSTableReader sstable : getCurrentColumnFamilyStore ( ) . getSSTables ( ) ) 
 + assertFalse ( sstable . getSSTableMetadata ( ) . estimatedTombstoneDropTime . getAsMap ( ) . isEmpty ( ) ) ; 
 + } 
 + 
 
 
 @ Test ( expected = IllegalArgumentException . class )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 59b3bf6 . . 2eb9705 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 21 , 6 + 21 , 8 @ @ 
 * avoid exporting an un - requested row in sstable2json , when exporting 
 a key that does not exist ( CASSANDRA - 2168 ) 
 * track and migrate cached pages during compaction ( CASSANDRA - 1902 ) 
 + * add incremental _ backups option ( CASSANDRA - 1872 ) 
 + 
 
 0 . 7 . 3 
 * Keep endpoint state until aVeryLongTime ( CASSANDRA - 2115 ) 
 diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index 60d3b6f . . 25f46bb 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 217 , 6 + 217 , 12 @ @ thrift _ framed _ transport _ size _ in _ mb : 15 
 # internal thrift overhead . 
 thrift _ max _ message _ length _ in _ mb : 16 
 
 + # Set to true to have Cassandra create a hard link to each sstable 
 + # flushed or streamed locally in a backups / subdirectory of the 
 + # Keyspace data . Removing these links is the operator ' s 
 + # responsibility . 
 + incremental _ backups : false 
 + 
 # Whether or not to take a snapshot before each compaction . Be 
 # careful using this option , since Cassandra won ' t clean up the 
 # snapshots for you . Mostly useful if you ' re paranoid when there 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index 89ba3d0 . . b9a123d 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 118 , 6 + 118 , 8 @ @ public class Config 
 / / TODO : remove in 0 . 8 
 public Boolean enable _ page _ cache _ migration = false ; 
 
 + public boolean incremental _ backups = false ; 
 + 
 public static enum CommitLogSync { 
 periodic , 
 batch 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 04dd94b . . e1105b5 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 37 , 7 + 37 , 6 @ @ import org . apache . cassandra . config . Config . RequestSchedulerId ; 
 import org . apache . cassandra . db . ColumnFamilyType ; 
 import org . apache . cassandra . db . DefsTable ; 
 import org . apache . cassandra . db . Table ; 
 - import org . apache . cassandra . db . commitlog . CommitLog ; 
 import org . apache . cassandra . db . marshal . AbstractType ; 
 import org . apache . cassandra . db . migration . Migration ; 
 import org . apache . cassandra . dht . IPartitioner ; 
 @ @ - 1240 , 4 + 1239 , 9 @ @ public class DatabaseDescriptor 
 { 
 return conf . enable _ page _ cache _ migration ; 
 } 
 + 
 + public static boolean incrementalBackupsEnabled ( ) 
 + { 
 + return conf . incremental _ backups ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index e3f19c1 . . 08c3755 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 962 , 6 + 962 , 21 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 { 
 assert sstable . getColumnFamilyName ( ) . equals ( columnFamily ) ; 
 ssTables . add ( Arrays . asList ( sstable ) ) ; 
 + if ( DatabaseDescriptor . incrementalBackupsEnabled ( ) ) 
 + { 
 + File keyspaceDir = new File ( sstable . getFilename ( ) ) . getParentFile ( ) ; 
 + File backupsDir = new File ( keyspaceDir , " backups " ) ; 
 + try 
 + { 
 + if ( ! backupsDir . exists ( ) & & ! backupsDir . mkdirs ( ) ) 
 + throw new IOException ( " Unable to create " + backupsDir ) ; 
 + sstable . createLinks ( backupsDir . getCanonicalPath ( ) ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + throw new IOError ( e ) ; 
 + } 
 + } 
 CompactionManager . instance . submitMinorIfNeeded ( this ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTable . java b / src / java / org / apache / cassandra / io / sstable / SSTable . java 
 index 41c6f46 . . 05d6212 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTable . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTable . java 
 @ @ - 183 , 7 + 183 , 7 @ @ public abstract class SSTable 
 / * * 
 * Discovers existing components for the descriptor . Slow : only intended for use outside the critical path . 
 * / 
 - static Set < Component > componentsFor ( final Descriptor desc ) throws IOException 
 + static Set < Component > componentsFor ( final Descriptor desc ) 
 { 
 final Set < Component > components = new HashSet < Component > ( ) ; 
 desc . directory . list ( new FilenameFilter ( ) 
 diff - - git a / test / conf / cassandra . yaml b / test / conf / cassandra . yaml 
 index f774903 . . 9738cd5 100644 
 - - - a / test / conf / cassandra . yaml 
 + + + b / test / conf / cassandra . yaml 
 @ @ - 32 , 6 + 32 , 7 @ @ encryption _ options : 
 keystore _ password : cassandra 
 truststore : conf / . truststore 
 truststore _ password : cassandra 
 + incremental _ backups : true 
 keyspaces : 
 - name : Keyspace1 
 replica _ placement _ strategy : org . apache . cassandra . locator . SimpleStrategy 
 diff - - git a / test / system / test _ thrift _ server . py b / test / system / test _ thrift _ server . py 
 index ab82d77 . . cf7a94b 100644 
 - - - a / test / system / test _ thrift _ server . py 
 + + + b / test / system / test _ thrift _ server . py 
 @ @ - 548 , 7 + 548 , 8 @ @ class TestMutations ( ThriftTester ) : 
 _ assert _ columnpath _ exists ( key , ColumnPath ( ' Super1 ' , super _ column = ' sc1 ' , column = c ) ) 
 _ assert _ columnpath _ exists ( key , ColumnPath ( ' Super2 ' , super _ column = ' sc1 ' , column = c ) ) 
 
 - def test _ batch _ mutate _ does _ not _ accept _ cosc _ and _ deletion _ in _ same _ mutation ( self ) : 
 + def test _ bad _ batch _ calls ( self ) : 
 + # mutate _ does _ not _ accept _ cosc _ and _ deletion _ in _ same _ mutation 
 def too _ full ( ) : 
 _ set _ keyspace ( ' Keyspace1 ' ) 
 col = ColumnOrSuperColumn ( column = Column ( " foo " , ' bar ' , 0 ) ) 
 @ @ - 557 , 7 + 558 , 7 @ @ class TestMutations ( ThriftTester ) : 
 ConsistencyLevel . ONE ) 
 _ expect _ exception ( too _ full , InvalidRequestException ) 
 
 - def test _ batch _ mutate _ does _ not _ yet _ accept _ slice _ ranges ( self ) : 
 + # test _ batch _ mutate _ does _ not _ yet _ accept _ slice _ ranges 
 def send _ range ( ) : 
 _ set _ keyspace ( ' Keyspace1 ' ) 
 sp = SlicePredicate ( slice _ range = SliceRange ( start = ' 0 ' , finish = " " , count = 10 ) ) 
 @ @ - 566 , 7 + 567 , 7 @ @ class TestMutations ( ThriftTester ) : 
 ConsistencyLevel . ONE ) 
 _ expect _ exception ( send _ range , InvalidRequestException ) 
 
 - def test _ batch _ mutate _ does _ not _ accept _ cosc _ on _ undefined _ cf ( self ) : 
 + # test _ batch _ mutate _ does _ not _ accept _ cosc _ on _ undefined _ cf : 
 def bad _ cf ( ) : 
 _ set _ keyspace ( ' Keyspace1 ' ) 
 col = ColumnOrSuperColumn ( column = Column ( " foo " , ' bar ' , 0 ) ) 
 @ @ - 574 , 7 + 575 , 7 @ @ class TestMutations ( ThriftTester ) : 
 ConsistencyLevel . ONE ) 
 _ expect _ exception ( bad _ cf , InvalidRequestException ) 
 
 - def test _ batch _ mutate _ does _ not _ accept _ deletion _ on _ undefined _ cf ( self ) : 
 + # test _ batch _ mutate _ does _ not _ accept _ deletion _ on _ undefined _ cf 
 def bad _ cf ( ) : 
 _ set _ keyspace ( ' Keyspace1 ' ) 
 d = Deletion ( 2 , predicate = SlicePredicate ( column _ names = [ ' baz ' ] ) ) 
 diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java 
 index 752ba53 . . 9794d8d 100644 
 - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java 
 + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 * / 
 package org . apache . cassandra . db ; 
 
 + import java . io . File ; 
 import java . io . IOException ; 
 import java . nio . ByteBuffer ; 
 import java . util . Arrays ; 
 @ @ - 39 , 6 + 40 , 7 @ @ import org . apache . cassandra . CleanupHelper ; 
 import org . apache . cassandra . Util ; 
 import org . apache . cassandra . config . ColumnDefinition ; 
 import org . apache . cassandra . config . ConfigurationException ; 
 + import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . columniterator . IdentityQueryFilter ; 
 import org . apache . cassandra . db . filter . * ; 
 import org . apache . cassandra . dht . IPartitioner ; 
 @ @ - 52 , 6 + 54 , 7 @ @ import org . apache . cassandra . thrift . IndexType ; 
 import org . apache . cassandra . utils . WrappedRunnable ; 
 
 import static junit . framework . Assert . assertEquals ; 
 + import static junit . framework . Assert . assertTrue ; 
 import static org . apache . cassandra . Util . column ; 
 import static org . apache . cassandra . Util . getBytes ; 
 import static org . junit . Assert . assertNull ; 
 @ @ - 515 , 4 + 518 , 17 @ @ public class ColumnFamilyStoreTest extends CleanupHelper 
 rms . add ( rm ) ; 
 return Util . writeColumnFamily ( rms ) ; 
 } 
 + 
 + @ Test 
 + public void testBackupAfterFlush ( ) throws Throwable 
 + { 
 + insertKey1Key2 ( ) ; 
 + 
 + File backupDir = new File ( DatabaseDescriptor . getDataFileLocationForTable ( " Keyspace2 " , 0 ) , " backups " ) ; 
 + for ( String f : Arrays . asList ( " Standard1 - f - 1 - Data . db " , " Standard1 - f - 1 - Index . db " , " Standard1 - f - 2 - Data . db " , " Standard1 - f - 2 - Index . db " , 
 + " Standard1 - f - 1 - Filter . db " , " Standard1 - f - 1 - Statistics . db " , " Standard1 - f - 2 - Filter . db " , " Standard1 - f - 2 - Statistics . db " ) ) 
 + { 
 + assertTrue ( " can not find backedup file : " + f , new File ( backupDir , f ) . exists ( ) ) ; 
 + } 
 + } 
 }
