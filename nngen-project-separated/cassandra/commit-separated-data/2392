BLEU SCORE: 0.04767707020457096

TEST MSG: Modify system tcp keepalive settings in Windows install scripts
GENERATED MSG: Add " install " command to cassandra . bat

TEST DIFF (one line): diff - - git a / bin / cassandra . bat b / bin / cassandra . bat <nl> index 629e58b . . e4e07aa 100644 <nl> - - - a / bin / cassandra . bat <nl> + + + b / bin / cassandra . bat <nl> @ @ - 35 , 8 + 35 , 7 @ @ goto runLegacy <nl> REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> : runPowerShell <nl> echo Detected powershell execution permissions . Running with enhanced startup scripts . <nl> - echo starting ps1 : % CASSANDRA _ HOME % / bin / cassandra . ps1 <nl> - powershell / file % CASSANDRA _ HOME % / bin / cassandra . ps1 % * <nl> + powershell / file % CASSANDRA _ HOME % \ bin \ cassandra . ps1 % * <nl> goto finally <nl> <nl> REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> diff - - git a / bin / cassandra . ps1 b / bin / cassandra . ps1 <nl> index ac8d89c . . b470b2c 100644 <nl> - - - a / bin / cassandra . ps1 <nl> + + + b / bin / cassandra . ps1 <nl> @ @ - 66 , 7 + 66 , 7 @ @ Function Main <nl> { <nl> ValidateArguments <nl> <nl> - . " $ env : CASSANDRA _ HOME / bin / source - conf . ps1 " <nl> + . " $ env : CASSANDRA _ HOME \ bin \ source - conf . ps1 " <nl> $ conf = Find - Conf <nl> if ( $ verbose ) <nl> { <nl> @ @ - 75 , 7 + 75 , 7 @ @ Function Main <nl> . $ conf <nl> <nl> SetCassandraEnvironment <nl> - $ pidfile = " $ env : CASSANDRA _ HOME / $ pidfile " <nl> + $ pidfile = " $ env : CASSANDRA _ HOME \ $ pidfile " <nl> <nl> $ logdir = " $ env : CASSANDRA _ HOME / logs " <nl> $ storagedir = " $ env : CASSANDRA _ HOME / data " <nl> @ @ - 93 , 7 + 93 , 7 @ @ Function Main <nl> if ( $ p ) <nl> { <nl> $ pidfile = " $ p " <nl> - $ env : CASSANDRA _ PARAMS = $ env : CASSANDRA _ PARAMS + " - Dcassandra - pidfile = $ pidfile " <nl> + $ env : CASSANDRA _ PARAMS = $ env : CASSANDRA _ PARAMS + ' - Dcassandra - pidfile = " ' + " $ pidfile " + ' " ' <nl> } <nl> <nl> if ( $ install - or $ uninstall ) <nl> @ @ - 110 , 32 + 110 , 55 @ @ Function Main <nl> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> Function HandleInstallation <nl> { <nl> - $ SERVICE _ JVM = " cassandra " <nl> - $ PATH _ PRUNSRV = " $ env : CASSANDRA _ HOME / bin / daemon / " <nl> + $ SERVICE _ JVM = " " " cassandra " " " <nl> + $ PATH _ PRUNSRV = " $ env : CASSANDRA _ HOME \ bin \ daemon " <nl> $ PR _ LOGPATH = $ serverPath <nl> <nl> + if ( - Not ( Test - Path $ PATH _ PRUNSRV \ prunsrv . exe ) ) <nl> + { <nl> + Write - Warning " Cannot find $ PATH _ PRUNSRV \ prunsrv . exe . Please download package from http : / / www . apache . org / dist / commons / daemon / binaries / windows / to install as a service . " <nl> + Break <nl> + } <nl> + <nl> + If ( - NOT ( [ Security . Principal . WindowsPrincipal ] [ Security . Principal . WindowsIdentity ] : : GetCurrent ( ) ) . IsInRole ( [ Security . Principal . WindowsBuiltInRole ] " Administrator " ) ) <nl> + { <nl> + Write - Warning " Cannot perform installation without admin credentials . Please re - run as administrator . " <nl> + Break <nl> + } <nl> if ( ! $ env : PRUNSRV ) <nl> { <nl> - $ env : PRUNSRV = " $ PATH _ PRUNSRV / prunsrv " <nl> + $ env : PRUNSRV = " $ PATH _ PRUNSRV \ prunsrv " <nl> } <nl> <nl> + $ regPath = " HKLM : \ SYSTEM \ CurrentControlSet \ services \ Tcpip \ Parameters \ " <nl> + <nl> echo " Attempting to delete existing $ SERVICE _ JVM service . . . " <nl> Start - Sleep - s 2 <nl> $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList " / / DS / / $ SERVICE _ JVM " - PassThru - WindowStyle Hidden <nl> <nl> + echo " Reverting to default TCP keepalive settings ( 2 hour timeout ) " <nl> + Remove - ItemProperty - Path $ regPath - Name KeepAliveTime - EA SilentlyContinue <nl> + <nl> # Quit out if this is uninstall only <nl> if ( $ uninstall ) <nl> { <nl> return <nl> } <nl> <nl> - echo " Installing [ $ SERVICE _ JVM ] . If you get registry warnings , re - run as an Administrator " <nl> + echo " Installing [ $ SERVICE _ JVM ] . " <nl> Start - Sleep - s 2 <nl> $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList " / / IS / / $ SERVICE _ JVM " - PassThru - WindowStyle Hidden <nl> <nl> - echo " Setting the parameters for [ $ SERVICE _ JVM ] " <nl> + echo " Setting launch parameters for [ $ SERVICE _ JVM ] " <nl> Start - Sleep - s 2 <nl> <nl> + # Change delim from " - " to " ; - " in JVM _ OPTS for prunsrv <nl> + $ env : JVM _ OPTS = $ env : JVM _ OPTS - replace " - " , " ; - " <nl> + $ env : JVM _ OPTS = $ env : JVM _ OPTS - replace " - " , " ; - " <nl> + <nl> + # Strip off leading ; if it ' s there <nl> + $ env : JVM _ OPTS = $ env : JVM _ OPTS . TrimStart ( " ; " ) <nl> + <nl> # Broken multi - line for convenience - glued back together in a bit <nl> $ args = @ " <nl> / / US / / $ SERVICE _ JVM <nl> @ @ - 144 , 11 + 167 , 14 @ @ Function HandleInstallation <nl> - - StartMode = jvm - - StartClass = $ env : CASSANDRA _ MAIN - - StartMethod = main <nl> - - StopMode = jvm - - StopClass = $ env : CASSANDRA _ MAIN - - StopMethod = stop <nl> + + JvmOptions = $ env : JVM _ OPTS + + JvmOptions = - DCassandra <nl> - - - PidFile $ pidfile <nl> + - - PidFile " $ pidfile " <nl> " @ <nl> $ args = $ args - replace [ Environment ] : : NewLine , " " <nl> $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList $ args - PassThru - WindowStyle Hidden <nl> <nl> + echo " Setting KeepAliveTimer to 5 minutes for TCP keepalive " <nl> + Set - ItemProperty - Path $ regPath - Name KeepAliveTime - Value 300000 <nl> + <nl> echo " Installation of [ $ SERVICE _ JVM ] is complete " <nl> } <nl> <nl> diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 <nl> index 3f64737 . . e897ee9 100644 <nl> - - - a / conf / cassandra - env . ps1 <nl> + + + b / conf / cassandra - env . ps1 <nl> @ @ - 39 , 15 + 39 , 15 @ @ Function SetCassandraMain ( ) <nl> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> Function BuildClassPath <nl> { <nl> - $ cp = " $ env : CASSANDRA _ HOME / conf " <nl> - foreach ( $ file in Get - ChildItem " $ env : CASSANDRA _ HOME / lib / * . jar " ) <nl> + $ cp = " $ env : CASSANDRA _ HOME \ conf " <nl> + foreach ( $ file in Get - ChildItem " $ env : CASSANDRA _ HOME \ lib \ * . jar " ) <nl> { <nl> $ file = $ file - replace " \ \ " , " / " <nl> - $ cp = $ cp + " ; " + " $ file " <nl> + $ cp = $ cp + " ; " + " " " $ file " " " <nl> } <nl> <nl> # Add build / classes / main so it works in development <nl> - $ cp = $ cp + " ; " + " $ env : CASSANDRA _ HOME / build / classes / main ; $ env : CASSANDRA _ HOME / build / classes / thrift " <nl> + $ cp = $ cp + " ; " + " $ env : CASSANDRA _ HOME \ build \ classes \ main ; $ env : CASSANDRA _ HOME \ build \ classes \ thrift " <nl> $ env : CLASSPATH = $ cp <nl> } <nl> <nl> @ @ - 174 , 7 + 174 , 7 @ @ Function SetCassandraEnvironment <nl> echo " Setting up Cassandra environment " <nl> if ( Test - Path Env : \ JAVA _ HOME ) <nl> { <nl> - $ env : JAVA _ BIN = " $ env : JAVA _ HOME / bin / java . exe " <nl> + $ env : JAVA _ BIN = " $ env : JAVA _ HOME \ bin \ java . exe " <nl> } <nl> elseif ( Get - Command " java . exe " ) <nl> { <nl> @ @ - 186 , 7 + 186 , 7 @ @ Function SetCassandraEnvironment <nl> exit <nl> } <nl> SetCassandraHome <nl> - $ env : CASSANDRA _ CONF = " $ env : CASSANDRA _ HOME / conf " <nl> + $ env : CASSANDRA _ CONF = " $ env : CASSANDRA _ HOME \ conf " <nl> $ env : CASSANDRA _ PARAMS = " - Dcassandra - Dlogback . configurationFile = logback . xml " <nl> SetCassandraMain <nl> BuildClassPath <nl> @ @ - 215 , 7 + 215 , 7 @ @ Function SetCassandraEnvironment <nl> if ( ( $ env : JVM _ VENDOR - ne " OpenJDK " ) - or ( $ env : JVM _ VERSION . CompareTo ( " 1 . 6 . 0 " ) - eq 1 ) - or <nl> ( ( $ env : JVM _ VERSION - eq " 1 . 6 . 0 " ) - and ( $ env : JVM _ PATCH _ VERSION . CompareTo ( " 22 " ) - eq 1 ) ) ) <nl> { <nl> - $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : $ env : CASSANDRA _ HOME / lib / jamm - 0 . 2 . 6 . jar " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : " " $ env : CASSANDRA _ HOME \ lib \ jamm - 0 . 2 . 6 . jar " " " <nl> } <nl> <nl> # enable assertions . disabling this in production will give a modest
NEAREST DIFF (one line): diff - - git a / NEWS . txt b / NEWS . txt <nl> index 651fc09 . . d1cd5df 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 6 , 6 + 6 , 10 @ @ Upgrading <nl> - the BinaryMemtable bulk - load interface has been removed . Use the <nl> sstableloader tool instead . <nl> <nl> + Features <nl> + - - - - - - - - <nl> + - " cassandra . bat install " will install Cassandra as a Windows Service <nl> + <nl> <nl> 0 . 8 . 4 <nl> = = = = = <nl> diff - - git a / README . txt b / README . txt <nl> index 93468ab . . 9e9dfb5 100644 <nl> - - - a / README . txt <nl> + + + b / README . txt <nl> @ @ - 38 , 8 + 38 , 10 @ @ Now that we ' re ready , let ' s start it up ! <nl> <nl> * bin / cassandra - f <nl> <nl> - Running the startup script with the - f argument will cause Cassandra to <nl> - remain in the foreground and log to standard out . <nl> + ( Running the startup script with the - f argument will cause Cassandra to <nl> + remain in the foreground and log to standard out . On windows , running <nl> + it with the ' install ' argument instead will install Cassandra as a <nl> + Windows Service . ) <nl> <nl> Now let ' s try to read and write some data using the command line client . <nl>

TEST DIFF:
diff - - git a / bin / cassandra . bat b / bin / cassandra . bat 
 index 629e58b . . e4e07aa 100644 
 - - - a / bin / cassandra . bat 
 + + + b / bin / cassandra . bat 
 @ @ - 35 , 8 + 35 , 7 @ @ goto runLegacy 
 REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 : runPowerShell 
 echo Detected powershell execution permissions . Running with enhanced startup scripts . 
 - echo starting ps1 : % CASSANDRA _ HOME % / bin / cassandra . ps1 
 - powershell / file % CASSANDRA _ HOME % / bin / cassandra . ps1 % * 
 + powershell / file % CASSANDRA _ HOME % \ bin \ cassandra . ps1 % * 
 goto finally 
 
 REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 diff - - git a / bin / cassandra . ps1 b / bin / cassandra . ps1 
 index ac8d89c . . b470b2c 100644 
 - - - a / bin / cassandra . ps1 
 + + + b / bin / cassandra . ps1 
 @ @ - 66 , 7 + 66 , 7 @ @ Function Main 
 { 
 ValidateArguments 
 
 - . " $ env : CASSANDRA _ HOME / bin / source - conf . ps1 " 
 + . " $ env : CASSANDRA _ HOME \ bin \ source - conf . ps1 " 
 $ conf = Find - Conf 
 if ( $ verbose ) 
 { 
 @ @ - 75 , 7 + 75 , 7 @ @ Function Main 
 . $ conf 
 
 SetCassandraEnvironment 
 - $ pidfile = " $ env : CASSANDRA _ HOME / $ pidfile " 
 + $ pidfile = " $ env : CASSANDRA _ HOME \ $ pidfile " 
 
 $ logdir = " $ env : CASSANDRA _ HOME / logs " 
 $ storagedir = " $ env : CASSANDRA _ HOME / data " 
 @ @ - 93 , 7 + 93 , 7 @ @ Function Main 
 if ( $ p ) 
 { 
 $ pidfile = " $ p " 
 - $ env : CASSANDRA _ PARAMS = $ env : CASSANDRA _ PARAMS + " - Dcassandra - pidfile = $ pidfile " 
 + $ env : CASSANDRA _ PARAMS = $ env : CASSANDRA _ PARAMS + ' - Dcassandra - pidfile = " ' + " $ pidfile " + ' " ' 
 } 
 
 if ( $ install - or $ uninstall ) 
 @ @ - 110 , 32 + 110 , 55 @ @ Function Main 
 # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 Function HandleInstallation 
 { 
 - $ SERVICE _ JVM = " cassandra " 
 - $ PATH _ PRUNSRV = " $ env : CASSANDRA _ HOME / bin / daemon / " 
 + $ SERVICE _ JVM = " " " cassandra " " " 
 + $ PATH _ PRUNSRV = " $ env : CASSANDRA _ HOME \ bin \ daemon " 
 $ PR _ LOGPATH = $ serverPath 
 
 + if ( - Not ( Test - Path $ PATH _ PRUNSRV \ prunsrv . exe ) ) 
 + { 
 + Write - Warning " Cannot find $ PATH _ PRUNSRV \ prunsrv . exe . Please download package from http : / / www . apache . org / dist / commons / daemon / binaries / windows / to install as a service . " 
 + Break 
 + } 
 + 
 + If ( - NOT ( [ Security . Principal . WindowsPrincipal ] [ Security . Principal . WindowsIdentity ] : : GetCurrent ( ) ) . IsInRole ( [ Security . Principal . WindowsBuiltInRole ] " Administrator " ) ) 
 + { 
 + Write - Warning " Cannot perform installation without admin credentials . Please re - run as administrator . " 
 + Break 
 + } 
 if ( ! $ env : PRUNSRV ) 
 { 
 - $ env : PRUNSRV = " $ PATH _ PRUNSRV / prunsrv " 
 + $ env : PRUNSRV = " $ PATH _ PRUNSRV \ prunsrv " 
 } 
 
 + $ regPath = " HKLM : \ SYSTEM \ CurrentControlSet \ services \ Tcpip \ Parameters \ " 
 + 
 echo " Attempting to delete existing $ SERVICE _ JVM service . . . " 
 Start - Sleep - s 2 
 $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList " / / DS / / $ SERVICE _ JVM " - PassThru - WindowStyle Hidden 
 
 + echo " Reverting to default TCP keepalive settings ( 2 hour timeout ) " 
 + Remove - ItemProperty - Path $ regPath - Name KeepAliveTime - EA SilentlyContinue 
 + 
 # Quit out if this is uninstall only 
 if ( $ uninstall ) 
 { 
 return 
 } 
 
 - echo " Installing [ $ SERVICE _ JVM ] . If you get registry warnings , re - run as an Administrator " 
 + echo " Installing [ $ SERVICE _ JVM ] . " 
 Start - Sleep - s 2 
 $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList " / / IS / / $ SERVICE _ JVM " - PassThru - WindowStyle Hidden 
 
 - echo " Setting the parameters for [ $ SERVICE _ JVM ] " 
 + echo " Setting launch parameters for [ $ SERVICE _ JVM ] " 
 Start - Sleep - s 2 
 
 + # Change delim from " - " to " ; - " in JVM _ OPTS for prunsrv 
 + $ env : JVM _ OPTS = $ env : JVM _ OPTS - replace " - " , " ; - " 
 + $ env : JVM _ OPTS = $ env : JVM _ OPTS - replace " - " , " ; - " 
 + 
 + # Strip off leading ; if it ' s there 
 + $ env : JVM _ OPTS = $ env : JVM _ OPTS . TrimStart ( " ; " ) 
 + 
 # Broken multi - line for convenience - glued back together in a bit 
 $ args = @ " 
 / / US / / $ SERVICE _ JVM 
 @ @ - 144 , 11 + 167 , 14 @ @ Function HandleInstallation 
 - - StartMode = jvm - - StartClass = $ env : CASSANDRA _ MAIN - - StartMethod = main 
 - - StopMode = jvm - - StopClass = $ env : CASSANDRA _ MAIN - - StopMethod = stop 
 + + JvmOptions = $ env : JVM _ OPTS + + JvmOptions = - DCassandra 
 - - - PidFile $ pidfile 
 + - - PidFile " $ pidfile " 
 " @ 
 $ args = $ args - replace [ Environment ] : : NewLine , " " 
 $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList $ args - PassThru - WindowStyle Hidden 
 
 + echo " Setting KeepAliveTimer to 5 minutes for TCP keepalive " 
 + Set - ItemProperty - Path $ regPath - Name KeepAliveTime - Value 300000 
 + 
 echo " Installation of [ $ SERVICE _ JVM ] is complete " 
 } 
 
 diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 
 index 3f64737 . . e897ee9 100644 
 - - - a / conf / cassandra - env . ps1 
 + + + b / conf / cassandra - env . ps1 
 @ @ - 39 , 15 + 39 , 15 @ @ Function SetCassandraMain ( ) 
 # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 Function BuildClassPath 
 { 
 - $ cp = " $ env : CASSANDRA _ HOME / conf " 
 - foreach ( $ file in Get - ChildItem " $ env : CASSANDRA _ HOME / lib / * . jar " ) 
 + $ cp = " $ env : CASSANDRA _ HOME \ conf " 
 + foreach ( $ file in Get - ChildItem " $ env : CASSANDRA _ HOME \ lib \ * . jar " ) 
 { 
 $ file = $ file - replace " \ \ " , " / " 
 - $ cp = $ cp + " ; " + " $ file " 
 + $ cp = $ cp + " ; " + " " " $ file " " " 
 } 
 
 # Add build / classes / main so it works in development 
 - $ cp = $ cp + " ; " + " $ env : CASSANDRA _ HOME / build / classes / main ; $ env : CASSANDRA _ HOME / build / classes / thrift " 
 + $ cp = $ cp + " ; " + " $ env : CASSANDRA _ HOME \ build \ classes \ main ; $ env : CASSANDRA _ HOME \ build \ classes \ thrift " 
 $ env : CLASSPATH = $ cp 
 } 
 
 @ @ - 174 , 7 + 174 , 7 @ @ Function SetCassandraEnvironment 
 echo " Setting up Cassandra environment " 
 if ( Test - Path Env : \ JAVA _ HOME ) 
 { 
 - $ env : JAVA _ BIN = " $ env : JAVA _ HOME / bin / java . exe " 
 + $ env : JAVA _ BIN = " $ env : JAVA _ HOME \ bin \ java . exe " 
 } 
 elseif ( Get - Command " java . exe " ) 
 { 
 @ @ - 186 , 7 + 186 , 7 @ @ Function SetCassandraEnvironment 
 exit 
 } 
 SetCassandraHome 
 - $ env : CASSANDRA _ CONF = " $ env : CASSANDRA _ HOME / conf " 
 + $ env : CASSANDRA _ CONF = " $ env : CASSANDRA _ HOME \ conf " 
 $ env : CASSANDRA _ PARAMS = " - Dcassandra - Dlogback . configurationFile = logback . xml " 
 SetCassandraMain 
 BuildClassPath 
 @ @ - 215 , 7 + 215 , 7 @ @ Function SetCassandraEnvironment 
 if ( ( $ env : JVM _ VENDOR - ne " OpenJDK " ) - or ( $ env : JVM _ VERSION . CompareTo ( " 1 . 6 . 0 " ) - eq 1 ) - or 
 ( ( $ env : JVM _ VERSION - eq " 1 . 6 . 0 " ) - and ( $ env : JVM _ PATCH _ VERSION . CompareTo ( " 22 " ) - eq 1 ) ) ) 
 { 
 - $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : $ env : CASSANDRA _ HOME / lib / jamm - 0 . 2 . 6 . jar " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : " " $ env : CASSANDRA _ HOME \ lib \ jamm - 0 . 2 . 6 . jar " " " 
 } 
 
 # enable assertions . disabling this in production will give a modest

NEAREST DIFF:
diff - - git a / NEWS . txt b / NEWS . txt 
 index 651fc09 . . d1cd5df 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 6 , 6 + 6 , 10 @ @ Upgrading 
 - the BinaryMemtable bulk - load interface has been removed . Use the 
 sstableloader tool instead . 
 
 + Features 
 + - - - - - - - - 
 + - " cassandra . bat install " will install Cassandra as a Windows Service 
 + 
 
 0 . 8 . 4 
 = = = = = 
 diff - - git a / README . txt b / README . txt 
 index 93468ab . . 9e9dfb5 100644 
 - - - a / README . txt 
 + + + b / README . txt 
 @ @ - 38 , 8 + 38 , 10 @ @ Now that we ' re ready , let ' s start it up ! 
 
 * bin / cassandra - f 
 
 - Running the startup script with the - f argument will cause Cassandra to 
 - remain in the foreground and log to standard out . 
 + ( Running the startup script with the - f argument will cause Cassandra to 
 + remain in the foreground and log to standard out . On windows , running 
 + it with the ' install ' argument instead will install Cassandra as a 
 + Windows Service . ) 
 
 Now let ' s try to read and write some data using the command line client . 

