BLEU SCORE: 0.034353182138500235

TEST MSG: Do not wrap CassandraException in TriggerExecutor
GENERATED MSG: Add test for triggers which throw IRE

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c23c301 . . 173d14f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 6 <nl> + * Do not wrap CassandraException in TriggerExecutor ( CASSANDRA - 9421 ) <nl> * COPY TO should have higher double precision ( CASSANDRA - 11255 ) <nl> * Stress should exit with non - zero status after failure ( CASSANDRA - 10340 ) <nl> * Add client to cqlsh SHOW _ SESSION ( CASSANDRA - 8958 ) <nl> diff - - git a / src / java / org / apache / cassandra / triggers / TriggerExecutor . java b / src / java / org / apache / cassandra / triggers / TriggerExecutor . java <nl> index 40d4094 . . 8cfa3e2 100644 <nl> - - - a / src / java / org / apache / cassandra / triggers / TriggerExecutor . java <nl> + + + b / src / java / org / apache / cassandra / triggers / TriggerExecutor . java <nl> @ @ - 31 , 6 + 31 , 7 @ @ import com . google . common . collect . Maps ; <nl> import org . apache . cassandra . cql3 . QueryProcessor ; <nl> import org . apache . cassandra . db . * ; <nl> import org . apache . cassandra . db . partitions . PartitionUpdate ; <nl> + import org . apache . cassandra . exceptions . CassandraException ; <nl> import org . apache . cassandra . exceptions . InvalidRequestException ; <nl> import org . apache . cassandra . schema . TriggerMetadata ; <nl> import org . apache . cassandra . schema . Triggers ; <nl> @ @ - 231 , 9 + 232 , 13 @ @ public class TriggerExecutor <nl> } <nl> return tmutations ; <nl> } <nl> + catch ( CassandraException ex ) <nl> + { <nl> + throw ex ; <nl> + } <nl> catch ( Exception ex ) <nl> { <nl> - throw new RuntimeException ( String . format ( " Exception while creating trigger on table with ID : % s " , update . metadata ( ) . cfId ) , ex ) ; <nl> + throw new RuntimeException ( String . format ( " Exception while executing trigger on table with ID : % s " , update . metadata ( ) . cfId ) , ex ) ; <nl> } <nl> finally <nl> { <nl> diff - - git a / test / unit / org / apache / cassandra / triggers / TriggersTest . java b / test / unit / org / apache / cassandra / triggers / TriggersTest . java <nl> index 13ecbe9 . . e5a2dd6 100644 <nl> - - - a / test / unit / org / apache / cassandra / triggers / TriggersTest . java <nl> + + + b / test / unit / org / apache / cassandra / triggers / TriggersTest . java <nl> @ @ - 18 , 7 + 18 , 6 @ @ <nl> package org . apache . cassandra . triggers ; <nl> <nl> import java . net . InetAddress ; <nl> - import java . nio . ByteBuffer ; <nl> import java . util . Collection ; <nl> import java . util . Collections ; <nl> <nl> @ @ - 35 , 7 + 34 , 6 @ @ import org . apache . cassandra . db . * ; <nl> import org . apache . cassandra . db . ConsistencyLevel ; <nl> import org . apache . cassandra . db . Mutation ; <nl> import org . apache . cassandra . db . partitions . Partition ; <nl> - import org . apache . cassandra . db . partitions . PartitionUpdate ; <nl> import org . apache . cassandra . exceptions . ConfigurationException ; <nl> import org . apache . cassandra . exceptions . RequestExecutionException ; <nl> import org . apache . cassandra . service . StorageService ; <nl> @ @ - 197 , 9 + 195 , 7 @ @ public class TriggersTest <nl> assertUpdateIsAugmented ( 6 ) ; <nl> } <nl> <nl> - / / Unfortunately , an IRE thrown from StorageProxy . cas <nl> - / / results in a RuntimeException from QueryProcessor . process <nl> - @ Test ( expected = RuntimeException . class ) <nl> + @ Test ( expected = org . apache . cassandra . exceptions . InvalidRequestException . class ) <nl> public void onCqlUpdateWithConditionsRejectGeneratedUpdatesForDifferentPartition ( ) throws Exception <nl> { <nl> String cf = " cf " + System . nanoTime ( ) ; <nl> @ @ - 215 , 9 + 211 , 7 @ @ public class TriggersTest <nl> } <nl> } <nl> <nl> - / / Unfortunately , an IRE thrown from StorageProxy . cas <nl> - / / results in a RuntimeException from QueryProcessor . process <nl> - @ Test ( expected = RuntimeException . class ) <nl> + @ Test ( expected = org . apache . cassandra . exceptions . InvalidRequestException . class ) <nl> public void onCqlUpdateWithConditionsRejectGeneratedUpdatesForDifferentTable ( ) throws Exception <nl> { <nl> String cf = " cf " + System . nanoTime ( ) ; <nl> @ @ - 283 , 6 + 277 , 27 @ @ public class TriggersTest <nl> } <nl> } <nl> <nl> + @ Test ( expected = org . apache . cassandra . exceptions . InvalidRequestException . class ) <nl> + public void ifTriggerThrowsErrorNoMutationsAreApplied ( ) throws Exception <nl> + { <nl> + String cf = " cf " + System . nanoTime ( ) ; <nl> + try <nl> + { <nl> + setupTableWithTrigger ( cf , ErrorTrigger . class ) ; <nl> + String cql = String . format ( " INSERT INTO % s . % s ( k , v1 ) VALUES ( 11 , 11 ) " , ksName , cf ) ; <nl> + QueryProcessor . process ( cql , ConsistencyLevel . ONE ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + assertTrue ( e . getMessage ( ) . equals ( ErrorTrigger . MESSAGE ) ) ; <nl> + throw e ; <nl> + } <nl> + finally <nl> + { <nl> + assertUpdateNotExecuted ( cf , 11 ) ; <nl> + } <nl> + } <nl> + <nl> private void setupTableWithTrigger ( String cf , Class < ? extends ITrigger > triggerImpl ) <nl> throws RequestExecutionException <nl> { <nl> @ @ - 352 , 4 + 367 , 13 @ @ public class TriggersTest <nl> return Collections . singletonList ( update . build ( ) ) ; <nl> } <nl> } <nl> + <nl> + public static class ErrorTrigger implements ITrigger <nl> + { <nl> + public static final String MESSAGE = " Thrown by ErrorTrigger " ; <nl> + public Collection < Mutation > augment ( Partition partition ) <nl> + { <nl> + throw new org . apache . cassandra . exceptions . InvalidRequestException ( MESSAGE ) ; <nl> + } <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c23c301 . . 173d14f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 6 
 + * Do not wrap CassandraException in TriggerExecutor ( CASSANDRA - 9421 ) 
 * COPY TO should have higher double precision ( CASSANDRA - 11255 ) 
 * Stress should exit with non - zero status after failure ( CASSANDRA - 10340 ) 
 * Add client to cqlsh SHOW _ SESSION ( CASSANDRA - 8958 ) 
 diff - - git a / src / java / org / apache / cassandra / triggers / TriggerExecutor . java b / src / java / org / apache / cassandra / triggers / TriggerExecutor . java 
 index 40d4094 . . 8cfa3e2 100644 
 - - - a / src / java / org / apache / cassandra / triggers / TriggerExecutor . java 
 + + + b / src / java / org / apache / cassandra / triggers / TriggerExecutor . java 
 @ @ - 31 , 6 + 31 , 7 @ @ import com . google . common . collect . Maps ; 
 import org . apache . cassandra . cql3 . QueryProcessor ; 
 import org . apache . cassandra . db . * ; 
 import org . apache . cassandra . db . partitions . PartitionUpdate ; 
 + import org . apache . cassandra . exceptions . CassandraException ; 
 import org . apache . cassandra . exceptions . InvalidRequestException ; 
 import org . apache . cassandra . schema . TriggerMetadata ; 
 import org . apache . cassandra . schema . Triggers ; 
 @ @ - 231 , 9 + 232 , 13 @ @ public class TriggerExecutor 
 } 
 return tmutations ; 
 } 
 + catch ( CassandraException ex ) 
 + { 
 + throw ex ; 
 + } 
 catch ( Exception ex ) 
 { 
 - throw new RuntimeException ( String . format ( " Exception while creating trigger on table with ID : % s " , update . metadata ( ) . cfId ) , ex ) ; 
 + throw new RuntimeException ( String . format ( " Exception while executing trigger on table with ID : % s " , update . metadata ( ) . cfId ) , ex ) ; 
 } 
 finally 
 { 
 diff - - git a / test / unit / org / apache / cassandra / triggers / TriggersTest . java b / test / unit / org / apache / cassandra / triggers / TriggersTest . java 
 index 13ecbe9 . . e5a2dd6 100644 
 - - - a / test / unit / org / apache / cassandra / triggers / TriggersTest . java 
 + + + b / test / unit / org / apache / cassandra / triggers / TriggersTest . java 
 @ @ - 18 , 7 + 18 , 6 @ @ 
 package org . apache . cassandra . triggers ; 
 
 import java . net . InetAddress ; 
 - import java . nio . ByteBuffer ; 
 import java . util . Collection ; 
 import java . util . Collections ; 
 
 @ @ - 35 , 7 + 34 , 6 @ @ import org . apache . cassandra . db . * ; 
 import org . apache . cassandra . db . ConsistencyLevel ; 
 import org . apache . cassandra . db . Mutation ; 
 import org . apache . cassandra . db . partitions . Partition ; 
 - import org . apache . cassandra . db . partitions . PartitionUpdate ; 
 import org . apache . cassandra . exceptions . ConfigurationException ; 
 import org . apache . cassandra . exceptions . RequestExecutionException ; 
 import org . apache . cassandra . service . StorageService ; 
 @ @ - 197 , 9 + 195 , 7 @ @ public class TriggersTest 
 assertUpdateIsAugmented ( 6 ) ; 
 } 
 
 - / / Unfortunately , an IRE thrown from StorageProxy . cas 
 - / / results in a RuntimeException from QueryProcessor . process 
 - @ Test ( expected = RuntimeException . class ) 
 + @ Test ( expected = org . apache . cassandra . exceptions . InvalidRequestException . class ) 
 public void onCqlUpdateWithConditionsRejectGeneratedUpdatesForDifferentPartition ( ) throws Exception 
 { 
 String cf = " cf " + System . nanoTime ( ) ; 
 @ @ - 215 , 9 + 211 , 7 @ @ public class TriggersTest 
 } 
 } 
 
 - / / Unfortunately , an IRE thrown from StorageProxy . cas 
 - / / results in a RuntimeException from QueryProcessor . process 
 - @ Test ( expected = RuntimeException . class ) 
 + @ Test ( expected = org . apache . cassandra . exceptions . InvalidRequestException . class ) 
 public void onCqlUpdateWithConditionsRejectGeneratedUpdatesForDifferentTable ( ) throws Exception 
 { 
 String cf = " cf " + System . nanoTime ( ) ; 
 @ @ - 283 , 6 + 277 , 27 @ @ public class TriggersTest 
 } 
 } 
 
 + @ Test ( expected = org . apache . cassandra . exceptions . InvalidRequestException . class ) 
 + public void ifTriggerThrowsErrorNoMutationsAreApplied ( ) throws Exception 
 + { 
 + String cf = " cf " + System . nanoTime ( ) ; 
 + try 
 + { 
 + setupTableWithTrigger ( cf , ErrorTrigger . class ) ; 
 + String cql = String . format ( " INSERT INTO % s . % s ( k , v1 ) VALUES ( 11 , 11 ) " , ksName , cf ) ; 
 + QueryProcessor . process ( cql , ConsistencyLevel . ONE ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + assertTrue ( e . getMessage ( ) . equals ( ErrorTrigger . MESSAGE ) ) ; 
 + throw e ; 
 + } 
 + finally 
 + { 
 + assertUpdateNotExecuted ( cf , 11 ) ; 
 + } 
 + } 
 + 
 private void setupTableWithTrigger ( String cf , Class < ? extends ITrigger > triggerImpl ) 
 throws RequestExecutionException 
 { 
 @ @ - 352 , 4 + 367 , 13 @ @ public class TriggersTest 
 return Collections . singletonList ( update . build ( ) ) ; 
 } 
 } 
 + 
 + public static class ErrorTrigger implements ITrigger 
 + { 
 + public static final String MESSAGE = " Thrown by ErrorTrigger " ; 
 + public Collection < Mutation > augment ( Partition partition ) 
 + { 
 + throw new org . apache . cassandra . exceptions . InvalidRequestException ( MESSAGE ) ; 
 + } 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
