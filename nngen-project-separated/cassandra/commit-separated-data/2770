BLEU SCORE: 0.021504238591261653

TEST MSG: Remove / update invalid sentences in CQL doc
GENERATED MSG: Use TreeMap backed column families for the SSTable simple writers

TEST DIFF (one line): diff - - git a / doc / cql3 / CQL . textile b / doc / cql3 / CQL . textile <nl> index 8b6cb08 . . b18ce22 100644 <nl> - - - a / doc / cql3 / CQL . textile <nl> + + + b / doc / cql3 / CQL . textile <nl> @ @ - 275 , 8 + 275 , 6 @ @ CREATE TABLE t ( <nl> PRIMARY KEY ( k ) <nl> ) <nl> <nl> - Moreover , a table must define at least one column that is not part of the PRIMARY KEY as a row exists in Cassandra only if it contains at least one value for one such column . <nl> - <nl> h4 ( # createTablepartitionClustering ) . Partition key and clustering columns <nl> <nl> In CQL , the order in which columns are defined for the @ PRIMARY KEY @ matters . The first column of the key is called the _ _ partition key _ _ . It has the property that all the rows sharing the same partition key ( even across table in fact ) are stored on the same physical node . Also , insertion / update / deletion on rows sharing the same partition key for a given table are performed _ _ atomically _ _ and in _ _ isolation _ _ . Note that it is possible to have a composite partition key , i . e . a partition key formed of multiple columns , using an extra set of parentheses to define which columns forms the partition key . <nl> @ @ - 445 , 7 + 443 , 7 @ @ INSERT INTO NerdMovies ( movie , director , main _ actor , year ) <nl> VALUES ( ' Serenity ' , ' Joss Whedon ' , ' Nathan Fillion ' , 2005 ) <nl> USING TTL 86400 ; <nl> <nl> - The @ INSERT @ statement writes one or more columns for a given row in a table . Note that since a row is identified by its @ PRIMARY KEY @ , the columns that compose it must be specified . Also , since a row only exists when it contains one value for a column not part of the @ PRIMARY KEY @ , one such value must be specified too . <nl> + The @ INSERT @ statement writes one or more columns for a given row in a table . Note that since a row is identified by its @ PRIMARY KEY @ , at least the columns composing it must be specified . <nl> <nl> Note that unlike in SQL , @ INSERT @ does not check the prior existence of the row : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . In fact , the semantic of @ INSERT @ and @ UPDATE @ are identical . <nl>
NEAREST DIFF (one line): diff - - git a / drivers / java / CHANGES . txt b / drivers / java / CHANGES . txt <nl> index 6a0616d . . 7c1f56a 100644 <nl> - - - a / drivers / java / CHANGES . txt <nl> + + + b / drivers / java / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> 1 . 0 . 4 <nl> - * improve JDBC spec compliance ( CASSANDRA - 2720 , 2754 , 3052 ) <nl> + * improve JDBC spec compliance ( CASSANDRA - 2720 , 2754 , 3052 , 3089 ) <nl> * cooperate with other jdbc drivers ( CASSANDRA - 2842 ) <nl> * fix unbox - to - NPE with null primitives ( CASSANDRA - 2956 ) <nl> diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / AbstractResultSet . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / AbstractResultSet . java <nl> index 980f761 . . 8774769 100644 <nl> - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / AbstractResultSet . java <nl> + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / AbstractResultSet . java <nl> @ @ - 155 , 10 + 155 , 6 @ @ abstract class AbstractResultSet <nl> throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; <nl> } <nl> <nl> - public RowId getRowId ( int arg0 ) throws SQLException <nl> - { <nl> - throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; <nl> - } <nl> <nl> public SQLXML getSQLXML ( int arg0 ) throws SQLException <nl> { <nl> diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CResultSet . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CResultSet . java <nl> index cd33215 . . f1c2bc7 100644 <nl> - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CResultSet . java <nl> + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CResultSet . java <nl> @ @ - 592 , 10 + 592 , 24 @ @ class CResultSet extends AbstractResultSet implements CassandraResultSet <nl> return rowNumber ; <nl> } <nl> <nl> - / / RowId ( shall we just store the raw bytes as it is kept in C * ? Probably . . . <nl> - public RowId getRowId ( String arg0 ) throws SQLException <nl> + public RowId getRowId ( int index ) throws SQLException <nl> { <nl> - throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; <nl> + checkIndex ( index ) ; <nl> + return getRowId ( values . get ( index - 1 ) ) ; <nl> + } <nl> + <nl> + public RowId getRowId ( String name ) throws SQLException <nl> + { <nl> + checkName ( name ) ; <nl> + return getRowId ( valueMap . get ( name ) ) ; <nl> + } <nl> + <nl> + private final RowId getRowId ( TypedColumn column ) throws SQLException <nl> + { <nl> + checkNotClosed ( ) ; <nl> + ByteBuffer value = column . getRawColumn ( ) . value ; <nl> + wasNull = value = = null ; <nl> + return value = = null ? null : new CassandraRowId ( value ) ; <nl> } <nl> <nl> public short getShort ( int index ) throws SQLException <nl> diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraDatabaseMetaData . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraDatabaseMetaData . java <nl> index 1e8411d . . 62668b5 100644 <nl> - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraDatabaseMetaData . java <nl> + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraDatabaseMetaData . java <nl> @ @ - 29 , 9 + 29 , 6 @ @ import java . sql . RowIdLifetime ; <nl> import java . sql . SQLException ; <nl> import java . sql . SQLFeatureNotSupportedException ; <nl> <nl> - import org . apache . cassandra . db . DBConstants ; <nl> - import org . apache . cassandra . utils . FBUtilities ; <nl> - <nl> class CassandraDatabaseMetaData implements DatabaseMetaData <nl> { <nl> private CassandraConnection connection ; <nl> @ @ - 360 , 7 + 357 , 7 @ @ class CassandraDatabaseMetaData implements DatabaseMetaData <nl> <nl> public RowIdLifetime getRowIdLifetime ( ) throws SQLException <nl> { <nl> - return RowIdLifetime . ROWID _ UNSUPPORTED ; <nl> + return RowIdLifetime . ROWID _ VALID _ FOREVER ; <nl> } <nl> <nl> public String getSQLKeywords ( ) throws SQLException <nl> diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraPreparedStatement . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraPreparedStatement . java <nl> index 37d97b2 . . b0aa1ce 100644 <nl> - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraPreparedStatement . java <nl> + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraPreparedStatement . java <nl> @ @ - 311 , 6 + 311 , 11 @ @ class CassandraPreparedStatement extends CassandraStatement implements PreparedS <nl> variables . put ( parameterIndex , x ) ; <nl> } <nl> <nl> + public void setRowId ( int parameterIndex , RowId rowid ) throws SQLException <nl> + { <nl> + setObject ( parameterIndex , ByteBuffer . wrap ( rowid . getBytes ( ) ) ) ; <nl> + } <nl> + <nl> public void setShort ( int parameterIndex , short x ) throws SQLException <nl> { <nl> setInt ( parameterIndex , x ) ; <nl> @ @ - 490 , 11 + 495 , 6 @ @ class CassandraPreparedStatement extends CassandraStatement implements PreparedS <nl> throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; <nl> } <nl> <nl> - public void setRowId ( int parameterIndex , RowId x ) throws SQLException <nl> - { <nl> - throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; <nl> - } <nl> - <nl> public void setSQLXML ( int parameterIndex , SQLXML xmlObject ) throws SQLException <nl> { <nl> throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ;

TEST DIFF:
diff - - git a / doc / cql3 / CQL . textile b / doc / cql3 / CQL . textile 
 index 8b6cb08 . . b18ce22 100644 
 - - - a / doc / cql3 / CQL . textile 
 + + + b / doc / cql3 / CQL . textile 
 @ @ - 275 , 8 + 275 , 6 @ @ CREATE TABLE t ( 
 PRIMARY KEY ( k ) 
 ) 
 
 - Moreover , a table must define at least one column that is not part of the PRIMARY KEY as a row exists in Cassandra only if it contains at least one value for one such column . 
 - 
 h4 ( # createTablepartitionClustering ) . Partition key and clustering columns 
 
 In CQL , the order in which columns are defined for the @ PRIMARY KEY @ matters . The first column of the key is called the _ _ partition key _ _ . It has the property that all the rows sharing the same partition key ( even across table in fact ) are stored on the same physical node . Also , insertion / update / deletion on rows sharing the same partition key for a given table are performed _ _ atomically _ _ and in _ _ isolation _ _ . Note that it is possible to have a composite partition key , i . e . a partition key formed of multiple columns , using an extra set of parentheses to define which columns forms the partition key . 
 @ @ - 445 , 7 + 443 , 7 @ @ INSERT INTO NerdMovies ( movie , director , main _ actor , year ) 
 VALUES ( ' Serenity ' , ' Joss Whedon ' , ' Nathan Fillion ' , 2005 ) 
 USING TTL 86400 ; 
 
 - The @ INSERT @ statement writes one or more columns for a given row in a table . Note that since a row is identified by its @ PRIMARY KEY @ , the columns that compose it must be specified . Also , since a row only exists when it contains one value for a column not part of the @ PRIMARY KEY @ , one such value must be specified too . 
 + The @ INSERT @ statement writes one or more columns for a given row in a table . Note that since a row is identified by its @ PRIMARY KEY @ , at least the columns composing it must be specified . 
 
 Note that unlike in SQL , @ INSERT @ does not check the prior existence of the row : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . In fact , the semantic of @ INSERT @ and @ UPDATE @ are identical . 


NEAREST DIFF:
diff - - git a / drivers / java / CHANGES . txt b / drivers / java / CHANGES . txt 
 index 6a0616d . . 7c1f56a 100644 
 - - - a / drivers / java / CHANGES . txt 
 + + + b / drivers / java / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 1 . 0 . 4 
 - * improve JDBC spec compliance ( CASSANDRA - 2720 , 2754 , 3052 ) 
 + * improve JDBC spec compliance ( CASSANDRA - 2720 , 2754 , 3052 , 3089 ) 
 * cooperate with other jdbc drivers ( CASSANDRA - 2842 ) 
 * fix unbox - to - NPE with null primitives ( CASSANDRA - 2956 ) 
 diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / AbstractResultSet . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / AbstractResultSet . java 
 index 980f761 . . 8774769 100644 
 - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / AbstractResultSet . java 
 + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / AbstractResultSet . java 
 @ @ - 155 , 10 + 155 , 6 @ @ abstract class AbstractResultSet 
 throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; 
 } 
 
 - public RowId getRowId ( int arg0 ) throws SQLException 
 - { 
 - throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; 
 - } 
 
 public SQLXML getSQLXML ( int arg0 ) throws SQLException 
 { 
 diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CResultSet . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CResultSet . java 
 index cd33215 . . f1c2bc7 100644 
 - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CResultSet . java 
 + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CResultSet . java 
 @ @ - 592 , 10 + 592 , 24 @ @ class CResultSet extends AbstractResultSet implements CassandraResultSet 
 return rowNumber ; 
 } 
 
 - / / RowId ( shall we just store the raw bytes as it is kept in C * ? Probably . . . 
 - public RowId getRowId ( String arg0 ) throws SQLException 
 + public RowId getRowId ( int index ) throws SQLException 
 { 
 - throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; 
 + checkIndex ( index ) ; 
 + return getRowId ( values . get ( index - 1 ) ) ; 
 + } 
 + 
 + public RowId getRowId ( String name ) throws SQLException 
 + { 
 + checkName ( name ) ; 
 + return getRowId ( valueMap . get ( name ) ) ; 
 + } 
 + 
 + private final RowId getRowId ( TypedColumn column ) throws SQLException 
 + { 
 + checkNotClosed ( ) ; 
 + ByteBuffer value = column . getRawColumn ( ) . value ; 
 + wasNull = value = = null ; 
 + return value = = null ? null : new CassandraRowId ( value ) ; 
 } 
 
 public short getShort ( int index ) throws SQLException 
 diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraDatabaseMetaData . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraDatabaseMetaData . java 
 index 1e8411d . . 62668b5 100644 
 - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraDatabaseMetaData . java 
 + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraDatabaseMetaData . java 
 @ @ - 29 , 9 + 29 , 6 @ @ import java . sql . RowIdLifetime ; 
 import java . sql . SQLException ; 
 import java . sql . SQLFeatureNotSupportedException ; 
 
 - import org . apache . cassandra . db . DBConstants ; 
 - import org . apache . cassandra . utils . FBUtilities ; 
 - 
 class CassandraDatabaseMetaData implements DatabaseMetaData 
 { 
 private CassandraConnection connection ; 
 @ @ - 360 , 7 + 357 , 7 @ @ class CassandraDatabaseMetaData implements DatabaseMetaData 
 
 public RowIdLifetime getRowIdLifetime ( ) throws SQLException 
 { 
 - return RowIdLifetime . ROWID _ UNSUPPORTED ; 
 + return RowIdLifetime . ROWID _ VALID _ FOREVER ; 
 } 
 
 public String getSQLKeywords ( ) throws SQLException 
 diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraPreparedStatement . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraPreparedStatement . java 
 index 37d97b2 . . b0aa1ce 100644 
 - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraPreparedStatement . java 
 + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraPreparedStatement . java 
 @ @ - 311 , 6 + 311 , 11 @ @ class CassandraPreparedStatement extends CassandraStatement implements PreparedS 
 variables . put ( parameterIndex , x ) ; 
 } 
 
 + public void setRowId ( int parameterIndex , RowId rowid ) throws SQLException 
 + { 
 + setObject ( parameterIndex , ByteBuffer . wrap ( rowid . getBytes ( ) ) ) ; 
 + } 
 + 
 public void setShort ( int parameterIndex , short x ) throws SQLException 
 { 
 setInt ( parameterIndex , x ) ; 
 @ @ - 490 , 11 + 495 , 6 @ @ class CassandraPreparedStatement extends CassandraStatement implements PreparedS 
 throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; 
 } 
 
 - public void setRowId ( int parameterIndex , RowId x ) throws SQLException 
 - { 
 - throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ; 
 - } 
 - 
 public void setSQLXML ( int parameterIndex , SQLXML xmlObject ) throws SQLException 
 { 
 throw new SQLFeatureNotSupportedException ( NOT _ SUPPORTED ) ;
