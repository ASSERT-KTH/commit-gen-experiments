BLEU SCORE: 0.037477767366779206

TEST MSG: Don ' t ignore deletion info in sstable on reverse queries
GENERATED MSG: Allow only DISTINCT queries with partition keys restrictions

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 8118de1 . . 20ed6e0 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 9 <nl> + * Fix reverse queries ignoring range tombstones ( CASSANDRA - 11733 ) <nl> * Improve streaming synchronization and fault tolerance ( CASSANDRA - 11414 ) <nl> * Avoid potential race when rebuilding CFMetaData ( CASSANDRA - 12098 ) <nl> * Avoid missing sstables when getting the canonical sstables ( CASSANDRA - 11996 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / columniterator / SSTableReversedIterator . java b / src / java / org / apache / cassandra / db / columniterator / SSTableReversedIterator . java <nl> index 14cec36 . . 3e49a3a 100644 <nl> - - - a / src / java / org / apache / cassandra / db / columniterator / SSTableReversedIterator . java <nl> + + + b / src / java / org / apache / cassandra / db / columniterator / SSTableReversedIterator . java <nl> @ @ - 356 , 7 + 356 , 7 @ @ public class SSTableReversedIterator extends AbstractSSTableIterator <nl> { <nl> deletionInfo = deletionBuilder . build ( ) ; <nl> built = new ImmutableBTreePartition ( metadata , partitionKey , columns , Rows . EMPTY _ STATIC _ ROW , rowBuilder . build ( ) , <nl> - DeletionInfo . LIVE , EncodingStats . NO _ STATS ) ; <nl> + deletionInfo , EncodingStats . NO _ STATS ) ; <nl> deletionBuilder = null ; <nl> } <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / DeleteTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / DeleteTest . java <nl> index 76351ee . . 814e822 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / DeleteTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / DeleteTest . java <nl> @ @ - 1057 , 4 + 1057 , 30 @ @ public class DeleteTest extends CQLTester <nl> if ( forceFlush ) <nl> flush ( ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testDeleteAndReverseQueries ( ) throws Throwable <nl> + { <nl> + / / This test insert rows in one sstable and a range tombstone covering some of those rows in another , and it <nl> + / / validates we correctly get only the non - removed rows when doing reverse queries . <nl> + <nl> + createTable ( " CREATE TABLE % s ( k text , i int , PRIMARY KEY ( k , i ) ) " ) ; <nl> + <nl> + for ( int i = 0 ; i < 10 ; i + + ) <nl> + execute ( " INSERT INTO % s ( k , i ) values ( ? , ? ) " , " a " , i ) ; <nl> + <nl> + flush ( ) ; <nl> + <nl> + execute ( " DELETE FROM % s WHERE k = ? AND i > = ? AND i < = ? " , " a " , 2 , 7 ) ; <nl> + <nl> + assertRows ( execute ( " SELECT i FROM % s WHERE k = ? ORDER BY i DESC " , " a " ) , <nl> + row ( 9 ) , row ( 8 ) , row ( 1 ) , row ( 0 ) <nl> + ) ; <nl> + <nl> + flush ( ) ; <nl> + <nl> + assertRows ( execute ( " SELECT i FROM % s WHERE k = ? ORDER BY i DESC " , " a " ) , <nl> + row ( 9 ) , row ( 8 ) , row ( 1 ) , row ( 0 ) <nl> + ) ; <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 8118de1 . . 20ed6e0 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 9 
 + * Fix reverse queries ignoring range tombstones ( CASSANDRA - 11733 ) 
 * Improve streaming synchronization and fault tolerance ( CASSANDRA - 11414 ) 
 * Avoid potential race when rebuilding CFMetaData ( CASSANDRA - 12098 ) 
 * Avoid missing sstables when getting the canonical sstables ( CASSANDRA - 11996 ) 
 diff - - git a / src / java / org / apache / cassandra / db / columniterator / SSTableReversedIterator . java b / src / java / org / apache / cassandra / db / columniterator / SSTableReversedIterator . java 
 index 14cec36 . . 3e49a3a 100644 
 - - - a / src / java / org / apache / cassandra / db / columniterator / SSTableReversedIterator . java 
 + + + b / src / java / org / apache / cassandra / db / columniterator / SSTableReversedIterator . java 
 @ @ - 356 , 7 + 356 , 7 @ @ public class SSTableReversedIterator extends AbstractSSTableIterator 
 { 
 deletionInfo = deletionBuilder . build ( ) ; 
 built = new ImmutableBTreePartition ( metadata , partitionKey , columns , Rows . EMPTY _ STATIC _ ROW , rowBuilder . build ( ) , 
 - DeletionInfo . LIVE , EncodingStats . NO _ STATS ) ; 
 + deletionInfo , EncodingStats . NO _ STATS ) ; 
 deletionBuilder = null ; 
 } 
 } 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / DeleteTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / DeleteTest . java 
 index 76351ee . . 814e822 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / DeleteTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / DeleteTest . java 
 @ @ - 1057 , 4 + 1057 , 30 @ @ public class DeleteTest extends CQLTester 
 if ( forceFlush ) 
 flush ( ) ; 
 } 
 + 
 + @ Test 
 + public void testDeleteAndReverseQueries ( ) throws Throwable 
 + { 
 + / / This test insert rows in one sstable and a range tombstone covering some of those rows in another , and it 
 + / / validates we correctly get only the non - removed rows when doing reverse queries . 
 + 
 + createTable ( " CREATE TABLE % s ( k text , i int , PRIMARY KEY ( k , i ) ) " ) ; 
 + 
 + for ( int i = 0 ; i < 10 ; i + + ) 
 + execute ( " INSERT INTO % s ( k , i ) values ( ? , ? ) " , " a " , i ) ; 
 + 
 + flush ( ) ; 
 + 
 + execute ( " DELETE FROM % s WHERE k = ? AND i > = ? AND i < = ? " , " a " , 2 , 7 ) ; 
 + 
 + assertRows ( execute ( " SELECT i FROM % s WHERE k = ? ORDER BY i DESC " , " a " ) , 
 + row ( 9 ) , row ( 8 ) , row ( 1 ) , row ( 0 ) 
 + ) ; 
 + 
 + flush ( ) ; 
 + 
 + assertRows ( execute ( " SELECT i FROM % s WHERE k = ? ORDER BY i DESC " , " a " ) , 
 + row ( 9 ) , row ( 8 ) , row ( 1 ) , row ( 0 ) 
 + ) ; 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
