BLEU SCORE: 0.04278179264606696

TEST MSG: Add AbstractCompactionStrategy . startup ( ) method
GENERATED MSG: fix removing tokens from SystemTable on decommission and removetoken .

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4009981 . . 94eaa79 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 14 , 6 + 14 , 7 @ @ <nl> * Fix paging discardFirst ( CASSANDRA - 6555 ) <nl> * Fix ArrayIndexOutOfBoundsException in 2ndary index query ( CASSANDRA - 6470 ) <nl> * Release sstables upon rebuilding 2i ( CASSANDRA - 6635 ) <nl> + * Add AbstractCompactionStrategy . startup ( ) method ( CASSANDRA - 6637 ) <nl> Merged from 1 . 2 : <nl> * fsync compression metadata ( CASSANDRA - 6531 ) <nl> * Validate CF existence on execution for prepared statement ( CASSANDRA - 6535 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 2cc325b . . 8d09453 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 147 , 6 + 147 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> { <nl> compactionStrategy . shutdown ( ) ; <nl> compactionStrategy = metadata . createCompactionStrategyInstance ( this ) ; <nl> + compactionStrategy . startup ( ) ; <nl> } <nl> } <nl> <nl> @ @ - 265 , 6 + 266 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> <nl> / / compaction strategy should be created after the CFS has been prepared <nl> this . compactionStrategy = metadata . createCompactionStrategyInstance ( this ) ; <nl> + this . compactionStrategy . startup ( ) ; <nl> <nl> if ( maxCompactionThreshold . value ( ) < = 0 | | minCompactionThreshold . value ( ) < = 0 ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java b / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java <nl> index f101998 . . 164cfda 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java <nl> @ @ - 68 , 7 + 68 , 7 @ @ public abstract class AbstractCompactionStrategy <nl> * <nl> * See CASSANDRA - 3430 <nl> * / <nl> - protected boolean isActive = true ; <nl> + protected boolean isActive = false ; <nl> <nl> protected volatile boolean enabled = true ; <nl> <nl> @ @ - 122 , 6 + 122 , 14 @ @ public abstract class AbstractCompactionStrategy <nl> } <nl> <nl> / * * <nl> + * Performs any extra initialization required <nl> + * / <nl> + public void startup ( ) <nl> + { <nl> + isActive = true ; <nl> + } <nl> + <nl> + / * * <nl> * Releases any resources if this strategy is shutdown ( when the CFS is reloaded after a schema change ) . <nl> * / <nl> public void shutdown ( )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d22038b . . a4810f6 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 31 , 6 + 31 , 8 @ @ dev <nl> * remove ConsistencyLevel . ZERO ( CASSANDRA - 1607 ) <nl> * expose in - progress compaction type in jmx ( CASSANDRA - 1586 ) <nl> * removed IClock & related classes from internals ( CASSANDRA - 1502 ) <nl> + * fix removing tokens from SystemTable on decommission and removetoken <nl> + ( CASSANDRA - 1609 ) <nl> <nl> <nl> 0 . 7 - beta2 <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 26249e6 . . 8280400 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 732 , 23 + 732 , 10 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> assert pieces . length = = 2 ; <nl> Token token = getPartitioner ( ) . getTokenFactory ( ) . fromString ( pieces [ 1 ] ) ; <nl> <nl> - / / endpoint itself is leaving <nl> if ( logger _ . isDebugEnabled ( ) ) <nl> logger _ . debug ( " Node " + endpoint + " state left , token " + token ) ; <nl> <nl> - / / If the node is member , remove all references to it . If not , call <nl> - / / removeBootstrapToken just in case it is there ( very unlikely chain of events ) <nl> - if ( tokenMetadata _ . isMember ( endpoint ) ) <nl> - { <nl> - if ( ! tokenMetadata _ . getToken ( endpoint ) . equals ( token ) ) <nl> - logger _ . warn ( " Node " + endpoint + " ' left ' token mismatch . Long network partition ? " ) ; <nl> - tokenMetadata _ . removeEndpoint ( endpoint ) ; <nl> - HintedHandOffManager . deleteHintsForEndPoint ( endpoint ) ; <nl> - } <nl> - <nl> - / / remove token from bootstrap tokens just in case it is still there <nl> - tokenMetadata _ . removeBootstrapToken ( token ) ; <nl> - calculatePendingRanges ( ) ; <nl> + excise ( token , endpoint ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 771 , 10 + 758 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> <nl> if ( VersionedValue . REMOVED _ TOKEN . equals ( state ) ) <nl> { <nl> - Gossiper . instance . removeEndpoint ( removeEndpoint ) ; <nl> - tokenMetadata _ . removeEndpoint ( removeEndpoint ) ; <nl> - HintedHandOffManager . deleteHintsForEndPoint ( removeEndpoint ) ; <nl> - tokenMetadata _ . removeBootstrapToken ( removeToken ) ; <nl> + excise ( removeToken , removeEndpoint ) ; <nl> } <nl> else if ( VersionedValue . REMOVING _ TOKEN . equals ( state ) ) <nl> { <nl> @ @ - 788 , 10 + 772 , 19 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> / / grab any data we are now responsible for and notify responsible node <nl> restoreReplicaCount ( removeEndpoint , endpoint ) ; <nl> } <nl> + } <nl> + <nl> + private void excise ( Token token , InetAddress endpoint ) <nl> + { <nl> + Gossiper . instance . removeEndpoint ( endpoint ) ; <nl> + tokenMetadata _ . removeEndpoint ( endpoint ) ; <nl> + HintedHandOffManager . deleteHintsForEndPoint ( endpoint ) ; <nl> + tokenMetadata _ . removeBootstrapToken ( token ) ; <nl> + calculatePendingRanges ( ) ; <nl> if ( ! isClientMode ) <nl> { <nl> - logger _ . info ( " Removing token " + removeToken + " for " + removeEndpoint ) ; <nl> - SystemTable . removeToken ( removeToken ) ; <nl> + logger _ . info ( " Removing token " + token + " for " + endpoint ) ; <nl> + SystemTable . removeToken ( token ) ; <nl> } <nl> } <nl> <nl> @ @ - 1778 , 13 + 1771 , 9 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> } <nl> } <nl> <nl> - Gossiper . instance . removeEndpoint ( endpoint ) ; <nl> - tokenMetadata _ . removeBootstrapToken ( token ) ; <nl> - tokenMetadata _ . removeEndpoint ( endpoint ) ; <nl> - HintedHandOffManager . deleteHintsForEndPoint ( endpoint ) ; <nl> + excise ( token , endpoint ) ; <nl> <nl> / / indicate the token has left <nl> - calculatePendingRanges ( ) ; <nl> Gossiper . instance . addLocalApplicationState ( ApplicationState . STATUS , valueFactory . removedNonlocal ( localToken , token ) ) ; <nl> <nl> replicatingNodes = null ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4009981 . . 94eaa79 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 14 , 6 + 14 , 7 @ @ 
 * Fix paging discardFirst ( CASSANDRA - 6555 ) 
 * Fix ArrayIndexOutOfBoundsException in 2ndary index query ( CASSANDRA - 6470 ) 
 * Release sstables upon rebuilding 2i ( CASSANDRA - 6635 ) 
 + * Add AbstractCompactionStrategy . startup ( ) method ( CASSANDRA - 6637 ) 
 Merged from 1 . 2 : 
 * fsync compression metadata ( CASSANDRA - 6531 ) 
 * Validate CF existence on execution for prepared statement ( CASSANDRA - 6535 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 2cc325b . . 8d09453 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 147 , 6 + 147 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 { 
 compactionStrategy . shutdown ( ) ; 
 compactionStrategy = metadata . createCompactionStrategyInstance ( this ) ; 
 + compactionStrategy . startup ( ) ; 
 } 
 } 
 
 @ @ - 265 , 6 + 266 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 
 / / compaction strategy should be created after the CFS has been prepared 
 this . compactionStrategy = metadata . createCompactionStrategyInstance ( this ) ; 
 + this . compactionStrategy . startup ( ) ; 
 
 if ( maxCompactionThreshold . value ( ) < = 0 | | minCompactionThreshold . value ( ) < = 0 ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java b / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java 
 index f101998 . . 164cfda 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / AbstractCompactionStrategy . java 
 @ @ - 68 , 7 + 68 , 7 @ @ public abstract class AbstractCompactionStrategy 
 * 
 * See CASSANDRA - 3430 
 * / 
 - protected boolean isActive = true ; 
 + protected boolean isActive = false ; 
 
 protected volatile boolean enabled = true ; 
 
 @ @ - 122 , 6 + 122 , 14 @ @ public abstract class AbstractCompactionStrategy 
 } 
 
 / * * 
 + * Performs any extra initialization required 
 + * / 
 + public void startup ( ) 
 + { 
 + isActive = true ; 
 + } 
 + 
 + / * * 
 * Releases any resources if this strategy is shutdown ( when the CFS is reloaded after a schema change ) . 
 * / 
 public void shutdown ( )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d22038b . . a4810f6 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 31 , 6 + 31 , 8 @ @ dev 
 * remove ConsistencyLevel . ZERO ( CASSANDRA - 1607 ) 
 * expose in - progress compaction type in jmx ( CASSANDRA - 1586 ) 
 * removed IClock & related classes from internals ( CASSANDRA - 1502 ) 
 + * fix removing tokens from SystemTable on decommission and removetoken 
 + ( CASSANDRA - 1609 ) 
 
 
 0 . 7 - beta2 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 26249e6 . . 8280400 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 732 , 23 + 732 , 10 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 assert pieces . length = = 2 ; 
 Token token = getPartitioner ( ) . getTokenFactory ( ) . fromString ( pieces [ 1 ] ) ; 
 
 - / / endpoint itself is leaving 
 if ( logger _ . isDebugEnabled ( ) ) 
 logger _ . debug ( " Node " + endpoint + " state left , token " + token ) ; 
 
 - / / If the node is member , remove all references to it . If not , call 
 - / / removeBootstrapToken just in case it is there ( very unlikely chain of events ) 
 - if ( tokenMetadata _ . isMember ( endpoint ) ) 
 - { 
 - if ( ! tokenMetadata _ . getToken ( endpoint ) . equals ( token ) ) 
 - logger _ . warn ( " Node " + endpoint + " ' left ' token mismatch . Long network partition ? " ) ; 
 - tokenMetadata _ . removeEndpoint ( endpoint ) ; 
 - HintedHandOffManager . deleteHintsForEndPoint ( endpoint ) ; 
 - } 
 - 
 - / / remove token from bootstrap tokens just in case it is still there 
 - tokenMetadata _ . removeBootstrapToken ( token ) ; 
 - calculatePendingRanges ( ) ; 
 + excise ( token , endpoint ) ; 
 } 
 
 / * * 
 @ @ - 771 , 10 + 758 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 
 if ( VersionedValue . REMOVED _ TOKEN . equals ( state ) ) 
 { 
 - Gossiper . instance . removeEndpoint ( removeEndpoint ) ; 
 - tokenMetadata _ . removeEndpoint ( removeEndpoint ) ; 
 - HintedHandOffManager . deleteHintsForEndPoint ( removeEndpoint ) ; 
 - tokenMetadata _ . removeBootstrapToken ( removeToken ) ; 
 + excise ( removeToken , removeEndpoint ) ; 
 } 
 else if ( VersionedValue . REMOVING _ TOKEN . equals ( state ) ) 
 { 
 @ @ - 788 , 10 + 772 , 19 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 / / grab any data we are now responsible for and notify responsible node 
 restoreReplicaCount ( removeEndpoint , endpoint ) ; 
 } 
 + } 
 + 
 + private void excise ( Token token , InetAddress endpoint ) 
 + { 
 + Gossiper . instance . removeEndpoint ( endpoint ) ; 
 + tokenMetadata _ . removeEndpoint ( endpoint ) ; 
 + HintedHandOffManager . deleteHintsForEndPoint ( endpoint ) ; 
 + tokenMetadata _ . removeBootstrapToken ( token ) ; 
 + calculatePendingRanges ( ) ; 
 if ( ! isClientMode ) 
 { 
 - logger _ . info ( " Removing token " + removeToken + " for " + removeEndpoint ) ; 
 - SystemTable . removeToken ( removeToken ) ; 
 + logger _ . info ( " Removing token " + token + " for " + endpoint ) ; 
 + SystemTable . removeToken ( token ) ; 
 } 
 } 
 
 @ @ - 1778 , 13 + 1771 , 9 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 } 
 } 
 
 - Gossiper . instance . removeEndpoint ( endpoint ) ; 
 - tokenMetadata _ . removeBootstrapToken ( token ) ; 
 - tokenMetadata _ . removeEndpoint ( endpoint ) ; 
 - HintedHandOffManager . deleteHintsForEndPoint ( endpoint ) ; 
 + excise ( token , endpoint ) ; 
 
 / / indicate the token has left 
 - calculatePendingRanges ( ) ; 
 Gossiper . instance . addLocalApplicationState ( ApplicationState . STATUS , valueFactory . removedNonlocal ( localToken , token ) ) ; 
 
 replicatingNodes = null ;
