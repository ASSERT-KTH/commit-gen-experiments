BLEU SCORE: 0.014199193612838947

TEST MSG: Don ' t NPE when username is supplied but password isn ' t .
GENERATED MSG: refactor to not require breaking slicepredicate encapsulation

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyInputFormat . java b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyInputFormat . java <nl> index 03b1576 . . 73bc25c 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyInputFormat . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyInputFormat . java <nl> @ @ - 103 , 7 + 103 , 7 @ @ public abstract class AbstractColumnFamilyInputFormat < K , Y > extends InputFormat < <nl> <nl> / / log in <nl> client . set _ keyspace ( ConfigHelper . getInputKeyspace ( conf ) ) ; <nl> - if ( ConfigHelper . getInputKeyspaceUserName ( conf ) ! = null ) <nl> + if ( ( ConfigHelper . getInputKeyspaceUserName ( conf ) ! = null ) & & ( ConfigHelper . getInputKeyspacePassword ( conf ) ! = null ) ) <nl> { <nl> Map < String , String > creds = new HashMap < String , String > ( ) ; <nl> creds . put ( IAuthenticator . USERNAME _ KEY , ConfigHelper . getInputKeyspaceUserName ( conf ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java <nl> index 3041829 . . 96ca65d 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java <nl> @ @ - 124 , 7 + 124 , 7 @ @ public abstract class AbstractColumnFamilyOutputFormat < K , Y > extends OutputForma <nl> TProtocol binaryProtocol = new TBinaryProtocol ( transport , true , true ) ; <nl> Cassandra . Client client = new Cassandra . Client ( binaryProtocol ) ; <nl> client . set _ keyspace ( ConfigHelper . getOutputKeyspace ( conf ) ) ; <nl> - if ( ConfigHelper . getOutputKeyspaceUserName ( conf ) ! = null ) <nl> + if ( ( ConfigHelper . getOutputKeyspaceUserName ( conf ) ! = null ) & & ( ConfigHelper . getOutputKeyspacePassword ( conf ) ! = null ) ) <nl> { <nl> Map < String , String > creds = new HashMap < String , String > ( ) ; <nl> creds . put ( IAuthenticator . USERNAME _ KEY , ConfigHelper . getOutputKeyspaceUserName ( conf ) ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index dc50102 . . 56ee2c9 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 78 , 7 + 78 , 16 @ @ public final class CFMetaData <nl> public static final CFMetaData SchemaCf = newSystemMetadata ( Migration . SCHEMA _ CF , 3 , " current state of the schema " , UTF8Type . instance , null ) ; <nl> public static final CFMetaData IndexCf = newSystemMetadata ( SystemTable . INDEX _ CF , 5 , " indexes that have been completed " , UTF8Type . instance , null ) ; <nl> public static final CFMetaData NodeIdCf = newSystemMetadata ( SystemTable . NODE _ ID _ CF , 6 , " nodeId and their metadata " , TimeUUIDType . instance , null ) ; <nl> - public static final CFMetaData VersionCf = newSystemMetadata ( SystemTable . VERSION _ CF , 7 , " server version information " , UTF8Type . instance , null ) ; <nl> + public static final CFMetaData VersionCf = <nl> + newSystemMetadata ( SystemTable . VERSION _ CF , 7 , " server version information " , UTF8Type . instance , null ) <nl> + . keyAlias ( ByteBufferUtil . bytes ( " component " ) ) <nl> + . keyValidator ( UTF8Type . instance ) <nl> + . columnMetadata ( Collections . singletonMap ( ByteBufferUtil . bytes ( " version " ) , <nl> + new ColumnDefinition ( ByteBufferUtil . bytes ( " version " ) , <nl> + UTF8Type . instance , <nl> + null , <nl> + null , <nl> + null ) ) ) ; <nl> public static final CFMetaData SchemaKeyspacesCf = schemaCFDefinition ( SystemTable . SCHEMA _ KEYSPACES _ CF , 8 , " keyspace attributes of the schema " , AsciiType . instance , 1 ) ; <nl> public static final CFMetaData SchemaColumnFamiliesCf = schemaCFDefinition ( SystemTable . SCHEMA _ COLUMNFAMILIES _ CF , 9 , " ColumnFamily attributes of the schema " , AsciiType . instance , 2 ) ; <nl> public static final CFMetaData SchemaColumnsCf = schemaCFDefinition ( SystemTable . SCHEMA _ COLUMNS _ CF , 10 , " ColumnFamily column attributes of the schema " , AsciiType . instance , 3 ) ; <nl> @ @ - 110 , 25 + 119 , 6 @ @ public final class CFMetaData <nl> . defaultValidator ( UTF8Type . instance ) ; <nl> } <nl> <nl> - static <nl> - { <nl> - try <nl> - { <nl> - VersionCf . keyAlias ( ByteBufferUtil . bytes ( " component " ) ) <nl> - . keyValidator ( UTF8Type . instance ) <nl> - . columnMetadata ( Collections . singletonMap ( ByteBufferUtil . bytes ( " version " ) , <nl> - new ColumnDefinition ( ByteBufferUtil . bytes ( " version " ) , <nl> - UTF8Type . instance , <nl> - null , <nl> - null , <nl> - null ) ) ) ; <nl> - } <nl> - catch ( ConfigurationException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> - } <nl> - <nl> public enum Caching <nl> { <nl> ALL , KEYS _ ONLY , ROWS _ ONLY , NONE ; <nl> diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> index 927ca39 . . 68875d6 100644 <nl> - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> @ @ - 46 , 7 + 46 , 7 @ @ public class ColumnDefinition <nl> private Map < String , String > index _ options ; <nl> private String index _ name ; <nl> <nl> - public ColumnDefinition ( ByteBuffer name , AbstractType < ? > validator , IndexType index _ type , Map < String , String > index _ options , String index _ name ) throws ConfigurationException <nl> + public ColumnDefinition ( ByteBuffer name , AbstractType < ? > validator , IndexType index _ type , Map < String , String > index _ options , String index _ name ) <nl> { <nl> this . name = name ; <nl> this . index _ name = index _ name ; <nl> @ @ - 223 , 9 + 223 , 6 @ @ public class ColumnDefinition <nl> / * * <nl> * Deserialize columns from low - level representation <nl> * <nl> - * @ param ksName The corresponding Keyspace <nl> - * @ param cfName The name of the parent ColumnFamily <nl> - * <nl> * @ return Thrift - based deserialized representation of the column <nl> * / <nl> public static List < ColumnDef > fromSchema ( ColumnFamily columns ) <nl> @ @ - 291 , 7 + 288 , 7 @ @ public class ColumnDefinition <nl> index _ name = s ; <nl> } <nl> <nl> - public void setIndexType ( IndexType index _ type , Map < String , String > index _ options ) throws ConfigurationException <nl> + public void setIndexType ( IndexType index _ type , Map < String , String > index _ options ) <nl> { <nl> this . index _ type = index _ type ; <nl> this . index _ options = index _ options ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyInputFormat . java b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyInputFormat . java 
 index 03b1576 . . 73bc25c 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyInputFormat . java 
 + + + b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyInputFormat . java 
 @ @ - 103 , 7 + 103 , 7 @ @ public abstract class AbstractColumnFamilyInputFormat < K , Y > extends InputFormat < 
 
 / / log in 
 client . set _ keyspace ( ConfigHelper . getInputKeyspace ( conf ) ) ; 
 - if ( ConfigHelper . getInputKeyspaceUserName ( conf ) ! = null ) 
 + if ( ( ConfigHelper . getInputKeyspaceUserName ( conf ) ! = null ) & & ( ConfigHelper . getInputKeyspacePassword ( conf ) ! = null ) ) 
 { 
 Map < String , String > creds = new HashMap < String , String > ( ) ; 
 creds . put ( IAuthenticator . USERNAME _ KEY , ConfigHelper . getInputKeyspaceUserName ( conf ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java 
 index 3041829 . . 96ca65d 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java 
 + + + b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java 
 @ @ - 124 , 7 + 124 , 7 @ @ public abstract class AbstractColumnFamilyOutputFormat < K , Y > extends OutputForma 
 TProtocol binaryProtocol = new TBinaryProtocol ( transport , true , true ) ; 
 Cassandra . Client client = new Cassandra . Client ( binaryProtocol ) ; 
 client . set _ keyspace ( ConfigHelper . getOutputKeyspace ( conf ) ) ; 
 - if ( ConfigHelper . getOutputKeyspaceUserName ( conf ) ! = null ) 
 + if ( ( ConfigHelper . getOutputKeyspaceUserName ( conf ) ! = null ) & & ( ConfigHelper . getOutputKeyspacePassword ( conf ) ! = null ) ) 
 { 
 Map < String , String > creds = new HashMap < String , String > ( ) ; 
 creds . put ( IAuthenticator . USERNAME _ KEY , ConfigHelper . getOutputKeyspaceUserName ( conf ) ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index dc50102 . . 56ee2c9 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 78 , 7 + 78 , 16 @ @ public final class CFMetaData 
 public static final CFMetaData SchemaCf = newSystemMetadata ( Migration . SCHEMA _ CF , 3 , " current state of the schema " , UTF8Type . instance , null ) ; 
 public static final CFMetaData IndexCf = newSystemMetadata ( SystemTable . INDEX _ CF , 5 , " indexes that have been completed " , UTF8Type . instance , null ) ; 
 public static final CFMetaData NodeIdCf = newSystemMetadata ( SystemTable . NODE _ ID _ CF , 6 , " nodeId and their metadata " , TimeUUIDType . instance , null ) ; 
 - public static final CFMetaData VersionCf = newSystemMetadata ( SystemTable . VERSION _ CF , 7 , " server version information " , UTF8Type . instance , null ) ; 
 + public static final CFMetaData VersionCf = 
 + newSystemMetadata ( SystemTable . VERSION _ CF , 7 , " server version information " , UTF8Type . instance , null ) 
 + . keyAlias ( ByteBufferUtil . bytes ( " component " ) ) 
 + . keyValidator ( UTF8Type . instance ) 
 + . columnMetadata ( Collections . singletonMap ( ByteBufferUtil . bytes ( " version " ) , 
 + new ColumnDefinition ( ByteBufferUtil . bytes ( " version " ) , 
 + UTF8Type . instance , 
 + null , 
 + null , 
 + null ) ) ) ; 
 public static final CFMetaData SchemaKeyspacesCf = schemaCFDefinition ( SystemTable . SCHEMA _ KEYSPACES _ CF , 8 , " keyspace attributes of the schema " , AsciiType . instance , 1 ) ; 
 public static final CFMetaData SchemaColumnFamiliesCf = schemaCFDefinition ( SystemTable . SCHEMA _ COLUMNFAMILIES _ CF , 9 , " ColumnFamily attributes of the schema " , AsciiType . instance , 2 ) ; 
 public static final CFMetaData SchemaColumnsCf = schemaCFDefinition ( SystemTable . SCHEMA _ COLUMNS _ CF , 10 , " ColumnFamily column attributes of the schema " , AsciiType . instance , 3 ) ; 
 @ @ - 110 , 25 + 119 , 6 @ @ public final class CFMetaData 
 . defaultValidator ( UTF8Type . instance ) ; 
 } 
 
 - static 
 - { 
 - try 
 - { 
 - VersionCf . keyAlias ( ByteBufferUtil . bytes ( " component " ) ) 
 - . keyValidator ( UTF8Type . instance ) 
 - . columnMetadata ( Collections . singletonMap ( ByteBufferUtil . bytes ( " version " ) , 
 - new ColumnDefinition ( ByteBufferUtil . bytes ( " version " ) , 
 - UTF8Type . instance , 
 - null , 
 - null , 
 - null ) ) ) ; 
 - } 
 - catch ( ConfigurationException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 - } 
 - 
 public enum Caching 
 { 
 ALL , KEYS _ ONLY , ROWS _ ONLY , NONE ; 
 diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 index 927ca39 . . 68875d6 100644 
 - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 @ @ - 46 , 7 + 46 , 7 @ @ public class ColumnDefinition 
 private Map < String , String > index _ options ; 
 private String index _ name ; 
 
 - public ColumnDefinition ( ByteBuffer name , AbstractType < ? > validator , IndexType index _ type , Map < String , String > index _ options , String index _ name ) throws ConfigurationException 
 + public ColumnDefinition ( ByteBuffer name , AbstractType < ? > validator , IndexType index _ type , Map < String , String > index _ options , String index _ name ) 
 { 
 this . name = name ; 
 this . index _ name = index _ name ; 
 @ @ - 223 , 9 + 223 , 6 @ @ public class ColumnDefinition 
 / * * 
 * Deserialize columns from low - level representation 
 * 
 - * @ param ksName The corresponding Keyspace 
 - * @ param cfName The name of the parent ColumnFamily 
 - * 
 * @ return Thrift - based deserialized representation of the column 
 * / 
 public static List < ColumnDef > fromSchema ( ColumnFamily columns ) 
 @ @ - 291 , 7 + 288 , 7 @ @ public class ColumnDefinition 
 index _ name = s ; 
 } 
 
 - public void setIndexType ( IndexType index _ type , Map < String , String > index _ options ) throws ConfigurationException 
 + public void setIndexType ( IndexType index _ type , Map < String , String > index _ options ) 
 { 
 this . index _ type = index _ type ; 
 this . index _ options = index _ options ;
