BLEU SCORE: 0.02383853510228548

TEST MSG: Update DTest GitHub URLs - Use ASF DTest location
GENERATED MSG: Add CONTRIBUTING . md

TEST DIFF (one line): diff - - git a / CONTRIBUTING . md b / CONTRIBUTING . md <nl> index 25e15ee . . 779df1b 100644 <nl> - - - a / CONTRIBUTING . md <nl> + + + b / CONTRIBUTING . md <nl> @ @ - 14 , 5 + 14 , 5 @ @ Use [ Cassandra JIRA ] ( https : / / issues . apache . org / jira / browse / CASSANDRA / ) to create <nl> - Running Cassandra in IDEA [ guide ] ( https : / / wiki . apache . org / cassandra / RunningCassandraInIDEA ) <nl> - Running Cassandra in Eclipse [ guide ] ( https : / / wiki . apache . org / cassandra / RunningCassandraInEclipse ) <nl> - Cassandra Cluster Manager - [ CCM ] ( https : / / github . com / pcmanus / ccm ) and a guide [ blog post ] ( http : / / www . datastax . com / dev / blog / ccm - a - development - tool - for - creating - local - cassandra - clusters ) <nl> - - Cassandra Distributed Tests aka [ dtests ] ( https : / / github . com / riptano / cassandra - dtest ) <nl> + - Cassandra Distributed Tests aka [ dtests ] ( https : / / github . com / apache / cassandra - dtest ) <nl> - Cassandra Testing Guidelines - see TESTING . md <nl> diff - - git a / doc / source / development / testing . rst b / doc / source / development / testing . rst <nl> index ca8b538 . . eb79932 100644 <nl> - - - a / doc / source / development / testing . rst <nl> + + + b / doc / source / development / testing . rst <nl> @ @ - 60 , 11 + 60 , 11 @ @ Test that consume a significant amount of time during execution can be found in <nl> DTests <nl> = = = = = = <nl> <nl> - One way of doing integration or system testing at larger scale is by using ` dtest < https : / / github . com / riptano / cassandra - dtest > ` _ , which stands for “ Cassandra Distributed Tests ” . The idea is to automatically setup Cassandra clusters using various configurations and simulate certain use cases you want to test . This is done using Python scripts and ` ` ccmlib ` ` from the ` ccm < https : / / github . com / pcmanus / ccm > ` _ project . Dtests will setup clusters using this library just as you do running ad - hoc ` ` ccm ` ` commands on your local machine . Afterwards dtests will use the ` Python driver < http : / / datastax . github . io / python - driver / installation . html > ` _ to interact with the nodes , manipulate the file system , analyze logs or mess with individual nodes . <nl> + One way of doing integration or system testing at larger scale is by using ` dtest < https : / / github . com / apache / cassandra - dtest > ` _ , which stands for “ Cassandra Distributed Tests ” . The idea is to automatically setup Cassandra clusters using various configurations and simulate certain use cases you want to test . This is done using Python scripts and ` ` ccmlib ` ` from the ` ccm < https : / / github . com / pcmanus / ccm > ` _ project . Dtests will setup clusters using this library just as you do running ad - hoc ` ` ccm ` ` commands on your local machine . Afterwards dtests will use the ` Python driver < http : / / datastax . github . io / python - driver / installation . html > ` _ to interact with the nodes , manipulate the file system , analyze logs or mess with individual nodes . <nl> <nl> Using dtests helps us to prevent regression bugs by continually executing tests on the ` CI server < https : / / builds . apache . org / > ` _ against new patches . Committers will be able to set up build branches there and your reviewer may use the CI environment to run tests for your patch . Read more on the motivation behind continuous integration ` here < http : / / www . datastax . com / dev / blog / cassandra - testing - improvements - for - developer - convenience - and - confidence > ` _ . <nl> <nl> - The best way to learn how to write dtests is probably by reading the introduction " ` How to Write a Dtest < http : / / www . datastax . com / dev / blog / how - to - write - a - dtest > ` _ " and by looking at existing , recently updated tests in the project . New tests must follow certain ` style conventions < https : / / github . com / riptano / cassandra - dtest / blob / master / CONTRIBUTING . md > ` _ that are being checked before accepting contributions . In contrast to Cassandra , dtest issues and pull - requests are managed on github , therefor you should make sure to link any created dtests in your Cassandra ticket and also refer to the ticket number in your dtest PR . <nl> + The best way to learn how to write dtests is probably by reading the introduction " ` How to Write a Dtest < http : / / www . datastax . com / dev / blog / how - to - write - a - dtest > ` _ " and by looking at existing , recently updated tests in the project . New tests must follow certain ` style conventions < https : / / github . com / apache / cassandra - dtest / blob / master / CONTRIBUTING . md > ` _ that are being checked before accepting contributions . In contrast to Cassandra , dtest issues and pull - requests are managed on github , therefor you should make sure to link any created dtests in your Cassandra ticket and also refer to the ticket number in your dtest PR . <nl> <nl> Creating a good dtest can be tough , but it should not prevent you from submitting patches ! Please ask in the corresponding JIRA ticket how to write a good dtest for the patch . In most cases a reviewer or committer will able to support you , and in some cases they may offer to write a dtest for you . <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CONTRIBUTING . md b / CONTRIBUTING . md 
 index 25e15ee . . 779df1b 100644 
 - - - a / CONTRIBUTING . md 
 + + + b / CONTRIBUTING . md 
 @ @ - 14 , 5 + 14 , 5 @ @ Use [ Cassandra JIRA ] ( https : / / issues . apache . org / jira / browse / CASSANDRA / ) to create 
 - Running Cassandra in IDEA [ guide ] ( https : / / wiki . apache . org / cassandra / RunningCassandraInIDEA ) 
 - Running Cassandra in Eclipse [ guide ] ( https : / / wiki . apache . org / cassandra / RunningCassandraInEclipse ) 
 - Cassandra Cluster Manager - [ CCM ] ( https : / / github . com / pcmanus / ccm ) and a guide [ blog post ] ( http : / / www . datastax . com / dev / blog / ccm - a - development - tool - for - creating - local - cassandra - clusters ) 
 - - Cassandra Distributed Tests aka [ dtests ] ( https : / / github . com / riptano / cassandra - dtest ) 
 + - Cassandra Distributed Tests aka [ dtests ] ( https : / / github . com / apache / cassandra - dtest ) 
 - Cassandra Testing Guidelines - see TESTING . md 
 diff - - git a / doc / source / development / testing . rst b / doc / source / development / testing . rst 
 index ca8b538 . . eb79932 100644 
 - - - a / doc / source / development / testing . rst 
 + + + b / doc / source / development / testing . rst 
 @ @ - 60 , 11 + 60 , 11 @ @ Test that consume a significant amount of time during execution can be found in 
 DTests 
 = = = = = = 
 
 - One way of doing integration or system testing at larger scale is by using ` dtest < https : / / github . com / riptano / cassandra - dtest > ` _ , which stands for “ Cassandra Distributed Tests ” . The idea is to automatically setup Cassandra clusters using various configurations and simulate certain use cases you want to test . This is done using Python scripts and ` ` ccmlib ` ` from the ` ccm < https : / / github . com / pcmanus / ccm > ` _ project . Dtests will setup clusters using this library just as you do running ad - hoc ` ` ccm ` ` commands on your local machine . Afterwards dtests will use the ` Python driver < http : / / datastax . github . io / python - driver / installation . html > ` _ to interact with the nodes , manipulate the file system , analyze logs or mess with individual nodes . 
 + One way of doing integration or system testing at larger scale is by using ` dtest < https : / / github . com / apache / cassandra - dtest > ` _ , which stands for “ Cassandra Distributed Tests ” . The idea is to automatically setup Cassandra clusters using various configurations and simulate certain use cases you want to test . This is done using Python scripts and ` ` ccmlib ` ` from the ` ccm < https : / / github . com / pcmanus / ccm > ` _ project . Dtests will setup clusters using this library just as you do running ad - hoc ` ` ccm ` ` commands on your local machine . Afterwards dtests will use the ` Python driver < http : / / datastax . github . io / python - driver / installation . html > ` _ to interact with the nodes , manipulate the file system , analyze logs or mess with individual nodes . 
 
 Using dtests helps us to prevent regression bugs by continually executing tests on the ` CI server < https : / / builds . apache . org / > ` _ against new patches . Committers will be able to set up build branches there and your reviewer may use the CI environment to run tests for your patch . Read more on the motivation behind continuous integration ` here < http : / / www . datastax . com / dev / blog / cassandra - testing - improvements - for - developer - convenience - and - confidence > ` _ . 
 
 - The best way to learn how to write dtests is probably by reading the introduction " ` How to Write a Dtest < http : / / www . datastax . com / dev / blog / how - to - write - a - dtest > ` _ " and by looking at existing , recently updated tests in the project . New tests must follow certain ` style conventions < https : / / github . com / riptano / cassandra - dtest / blob / master / CONTRIBUTING . md > ` _ that are being checked before accepting contributions . In contrast to Cassandra , dtest issues and pull - requests are managed on github , therefor you should make sure to link any created dtests in your Cassandra ticket and also refer to the ticket number in your dtest PR . 
 + The best way to learn how to write dtests is probably by reading the introduction " ` How to Write a Dtest < http : / / www . datastax . com / dev / blog / how - to - write - a - dtest > ` _ " and by looking at existing , recently updated tests in the project . New tests must follow certain ` style conventions < https : / / github . com / apache / cassandra - dtest / blob / master / CONTRIBUTING . md > ` _ that are being checked before accepting contributions . In contrast to Cassandra , dtest issues and pull - requests are managed on github , therefor you should make sure to link any created dtests in your Cassandra ticket and also refer to the ticket number in your dtest PR . 
 
 Creating a good dtest can be tough , but it should not prevent you from submitting patches ! Please ask in the corresponding JIRA ticket how to write a good dtest for the patch . In most cases a reviewer or committer will able to support you , and in some cases they may offer to write a dtest for you . 


NEAREST DIFF:
ELIMINATEDSENTENCE
