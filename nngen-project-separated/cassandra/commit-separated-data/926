BLEU SCORE: 0.02399905349559606

TEST MSG: Make ResultSetBuilder . rowToJson public
GENERATED MSG: Fix use of CQL3 functions with descending clustering order

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / selection / Selection . java b / src / java / org / apache / cassandra / cql3 / selection / Selection . java <nl> index e0e1bd8 . . 3bee743 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / selection / Selection . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / selection / Selection . java <nl> @ @ - 258 , 6 + 258 , 32 @ @ public abstract class Selection <nl> . toString ( ) ; <nl> } <nl> <nl> + public static List < ByteBuffer > rowToJson ( List < ByteBuffer > row , int protocolVersion , ResultSet . ResultMetadata metadata ) <nl> + { <nl> + StringBuilder sb = new StringBuilder ( " { " ) ; <nl> + for ( int i = 0 ; i < metadata . names . size ( ) ; i + + ) <nl> + { <nl> + if ( i > 0 ) <nl> + sb . append ( " , " ) ; <nl> + <nl> + ColumnSpecification spec = metadata . names . get ( i ) ; <nl> + String columnName = spec . name . toString ( ) ; <nl> + if ( ! columnName . equals ( columnName . toLowerCase ( Locale . US ) ) ) <nl> + columnName = " \ " " + columnName + " \ " " ; <nl> + <nl> + ByteBuffer buffer = row . get ( i ) ; <nl> + sb . append ( ' " ' ) ; <nl> + sb . append ( Json . quoteAsJsonString ( columnName ) ) ; <nl> + sb . append ( " \ " : " ) ; <nl> + if ( buffer = = null ) <nl> + sb . append ( " null " ) ; <nl> + else <nl> + sb . append ( spec . type . toJSONString ( buffer , protocolVersion ) ) ; <nl> + } <nl> + sb . append ( " } " ) ; <nl> + return Collections . singletonList ( UTF8Type . instance . getSerializer ( ) . serialize ( sb . toString ( ) ) ) ; <nl> + } <nl> + <nl> public class ResultSetBuilder <nl> { <nl> private final ResultSet resultSet ; <nl> @ @ - 367 , 35 + 393 , 9 @ @ public abstract class Selection <nl> private List < ByteBuffer > getOutputRow ( int protocolVersion ) <nl> { <nl> List < ByteBuffer > outputRow = selectors . getOutputRow ( protocolVersion ) ; <nl> - return isJson ? rowToJson ( outputRow , protocolVersion ) <nl> + return isJson ? rowToJson ( outputRow , protocolVersion , metadata ) <nl> : outputRow ; <nl> } <nl> - <nl> - private List < ByteBuffer > rowToJson ( List < ByteBuffer > row , int protocolVersion ) <nl> - { <nl> - StringBuilder sb = new StringBuilder ( " { " ) ; <nl> - for ( int i = 0 ; i < metadata . names . size ( ) ; i + + ) <nl> - { <nl> - if ( i > 0 ) <nl> - sb . append ( " , " ) ; <nl> - <nl> - ColumnSpecification spec = metadata . names . get ( i ) ; <nl> - String columnName = spec . name . toString ( ) ; <nl> - if ( ! columnName . equals ( columnName . toLowerCase ( Locale . US ) ) ) <nl> - columnName = " \ " " + columnName + " \ " " ; <nl> - <nl> - ByteBuffer buffer = row . get ( i ) ; <nl> - sb . append ( ' " ' ) ; <nl> - sb . append ( Json . quoteAsJsonString ( columnName ) ) ; <nl> - sb . append ( " \ " : " ) ; <nl> - if ( buffer = = null ) <nl> - sb . append ( " null " ) ; <nl> - else <nl> - sb . append ( spec . type . toJSONString ( buffer , protocolVersion ) ) ; <nl> - } <nl> - sb . append ( " } " ) ; <nl> - return Collections . singletonList ( UTF8Type . instance . getSerializer ( ) . serialize ( sb . toString ( ) ) ) ; <nl> - } <nl> } <nl> <nl> private static interface Selectors
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 241ef7c . . 3922cb3 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 132 , 6 + 132 , 12 @ @ Merged from 1 . 1 : <nl> * cqlsh : Add username autocompletion ( CASSANDRA - 5231 ) <nl> * Fix CQL3 composite partition key error ( CASSANDRA - 5240 ) <nl> * Allow IN clause on last clustering key ( CASSANDRA - 5230 ) <nl> + Merged from 1 . 1 : <nl> + * fix start key / end token validation for wide row iteration ( CASSANDRA - 5168 ) <nl> + * add ConfigHelper support for Thrift frame and max message sizes ( CASSANDRA - 5188 ) <nl> + * fix nodetool repair not fail on node down ( CASSANDRA - 5203 ) <nl> + * always collect tombstone hints ( CASSANDRA - 5068 ) <nl> + * Fix error when sourcing file in cqlsh ( CASSANDRA - 5235 ) <nl> <nl> <nl> 1 . 2 . 1 <nl> @ @ - 184 , 35 + 190 , 22 @ @ Merged from 1 . 1 : <nl> * Fix cf name extraction from manifest in Directories . migrateFile ( ) ( CASSANDRA - 5242 ) <nl> * Support pluggable internode authentication ( CASSANDRA - 5401 ) <nl> * Replace mistaken usage of commons - logging with slf4j ( CASSANDRA - 5464 ) <nl> - <nl> - <nl> - 1 . 1 . 10 <nl> - * fix saved key cache not loading at startup ( CASSANDRA - 5166 ) <nl> - * fix ConcurrentModificationException in getBootstrapSource ( CASSANDRA - 5170 ) <nl> - * fix sstable maxtimestamp for row deletes and pre - 1 . 1 . 1 sstables ( CASSANDRA - 5153 ) <nl> - * fix start key / end token validation for wide row iteration ( CASSANDRA - 5168 ) <nl> - * add ConfigHelper support for Thrift frame and max message sizes ( CASSANDRA - 5188 ) <nl> - * fix nodetool repair not fail on node down ( CASSANDRA - 5203 ) <nl> - * always collect tombstone hints ( CASSANDRA - 5068 ) <nl> - * Fix thread growth on node removal ( CASSANDRA - 5175 ) <nl> - * Fix error when sourcing file in cqlsh ( CASSANDRA - 5235 ) <nl> - * Make Ec2Region ' s datacenter name configurable ( CASSANDRA - 5155 ) <nl> - <nl> - <nl> - 1 . 1 . 9 <nl> + * Ensure Jackson dependency matches lib ( CASSANDRA - 5126 ) <nl> + * Expose droppable tombstone ratio stats over JMX ( CASSANDRA - 5159 ) <nl> + Merged from 1 . 1 : <nl> * Simplify CompressedRandomAccessReader to work around JDK FD bug ( CASSANDRA - 5088 ) <nl> * Improve handling a changing target throttle rate mid - compaction ( CASSANDRA - 5087 ) <nl> * Pig : correctly decode row keys in widerow mode ( CASSANDRA - 5098 ) <nl> * nodetool repair command now prints progress ( CASSANDRA - 4767 ) <nl> - * Ensure Jackson dependency matches lib ( CASSANDRA - 5126 ) <nl> * fix user defined compaction to run against 1 . 1 data directory ( CASSANDRA - 5118 ) <nl> * Fix CQL3 BATCH authorization caching ( CASSANDRA - 5145 ) <nl> * fix get _ count returns incorrect value with TTL ( CASSANDRA - 5099 ) <nl> - * better handling for amid compaction failure ( CASSANDRA - 5137 ) <nl> - * calculate pending ranges asynchronously ( CASSANDRA - 5135 ) <nl> + * better handling for mid - compaction failure ( CASSANDRA - 5137 ) <nl> * convert default marshallers list to map for better readability ( CASSANDRA - 5109 ) <nl> - * Expose droppable tombstone ratio stats over JMX ( CASSANDRA - 5159 ) <nl> - <nl> + * fix ConcurrentModificationException in getBootstrapSource ( CASSANDRA - 5170 ) <nl> + * fix sstable maxtimestamp for row deletes and pre - 1 . 1 . 1 sstables ( CASSANDRA - 5153 ) <nl> + * Fix thread growth on node removal ( CASSANDRA - 5175 ) <nl> + * Make Ec2Region ' s datacenter name configurable ( CASSANDRA - 5155 ) <nl> <nl> <nl> 1 . 2 . 0

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / selection / Selection . java b / src / java / org / apache / cassandra / cql3 / selection / Selection . java 
 index e0e1bd8 . . 3bee743 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / selection / Selection . java 
 + + + b / src / java / org / apache / cassandra / cql3 / selection / Selection . java 
 @ @ - 258 , 6 + 258 , 32 @ @ public abstract class Selection 
 . toString ( ) ; 
 } 
 
 + public static List < ByteBuffer > rowToJson ( List < ByteBuffer > row , int protocolVersion , ResultSet . ResultMetadata metadata ) 
 + { 
 + StringBuilder sb = new StringBuilder ( " { " ) ; 
 + for ( int i = 0 ; i < metadata . names . size ( ) ; i + + ) 
 + { 
 + if ( i > 0 ) 
 + sb . append ( " , " ) ; 
 + 
 + ColumnSpecification spec = metadata . names . get ( i ) ; 
 + String columnName = spec . name . toString ( ) ; 
 + if ( ! columnName . equals ( columnName . toLowerCase ( Locale . US ) ) ) 
 + columnName = " \ " " + columnName + " \ " " ; 
 + 
 + ByteBuffer buffer = row . get ( i ) ; 
 + sb . append ( ' " ' ) ; 
 + sb . append ( Json . quoteAsJsonString ( columnName ) ) ; 
 + sb . append ( " \ " : " ) ; 
 + if ( buffer = = null ) 
 + sb . append ( " null " ) ; 
 + else 
 + sb . append ( spec . type . toJSONString ( buffer , protocolVersion ) ) ; 
 + } 
 + sb . append ( " } " ) ; 
 + return Collections . singletonList ( UTF8Type . instance . getSerializer ( ) . serialize ( sb . toString ( ) ) ) ; 
 + } 
 + 
 public class ResultSetBuilder 
 { 
 private final ResultSet resultSet ; 
 @ @ - 367 , 35 + 393 , 9 @ @ public abstract class Selection 
 private List < ByteBuffer > getOutputRow ( int protocolVersion ) 
 { 
 List < ByteBuffer > outputRow = selectors . getOutputRow ( protocolVersion ) ; 
 - return isJson ? rowToJson ( outputRow , protocolVersion ) 
 + return isJson ? rowToJson ( outputRow , protocolVersion , metadata ) 
 : outputRow ; 
 } 
 - 
 - private List < ByteBuffer > rowToJson ( List < ByteBuffer > row , int protocolVersion ) 
 - { 
 - StringBuilder sb = new StringBuilder ( " { " ) ; 
 - for ( int i = 0 ; i < metadata . names . size ( ) ; i + + ) 
 - { 
 - if ( i > 0 ) 
 - sb . append ( " , " ) ; 
 - 
 - ColumnSpecification spec = metadata . names . get ( i ) ; 
 - String columnName = spec . name . toString ( ) ; 
 - if ( ! columnName . equals ( columnName . toLowerCase ( Locale . US ) ) ) 
 - columnName = " \ " " + columnName + " \ " " ; 
 - 
 - ByteBuffer buffer = row . get ( i ) ; 
 - sb . append ( ' " ' ) ; 
 - sb . append ( Json . quoteAsJsonString ( columnName ) ) ; 
 - sb . append ( " \ " : " ) ; 
 - if ( buffer = = null ) 
 - sb . append ( " null " ) ; 
 - else 
 - sb . append ( spec . type . toJSONString ( buffer , protocolVersion ) ) ; 
 - } 
 - sb . append ( " } " ) ; 
 - return Collections . singletonList ( UTF8Type . instance . getSerializer ( ) . serialize ( sb . toString ( ) ) ) ; 
 - } 
 } 
 
 private static interface Selectors

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 241ef7c . . 3922cb3 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 132 , 6 + 132 , 12 @ @ Merged from 1 . 1 : 
 * cqlsh : Add username autocompletion ( CASSANDRA - 5231 ) 
 * Fix CQL3 composite partition key error ( CASSANDRA - 5240 ) 
 * Allow IN clause on last clustering key ( CASSANDRA - 5230 ) 
 + Merged from 1 . 1 : 
 + * fix start key / end token validation for wide row iteration ( CASSANDRA - 5168 ) 
 + * add ConfigHelper support for Thrift frame and max message sizes ( CASSANDRA - 5188 ) 
 + * fix nodetool repair not fail on node down ( CASSANDRA - 5203 ) 
 + * always collect tombstone hints ( CASSANDRA - 5068 ) 
 + * Fix error when sourcing file in cqlsh ( CASSANDRA - 5235 ) 
 
 
 1 . 2 . 1 
 @ @ - 184 , 35 + 190 , 22 @ @ Merged from 1 . 1 : 
 * Fix cf name extraction from manifest in Directories . migrateFile ( ) ( CASSANDRA - 5242 ) 
 * Support pluggable internode authentication ( CASSANDRA - 5401 ) 
 * Replace mistaken usage of commons - logging with slf4j ( CASSANDRA - 5464 ) 
 - 
 - 
 - 1 . 1 . 10 
 - * fix saved key cache not loading at startup ( CASSANDRA - 5166 ) 
 - * fix ConcurrentModificationException in getBootstrapSource ( CASSANDRA - 5170 ) 
 - * fix sstable maxtimestamp for row deletes and pre - 1 . 1 . 1 sstables ( CASSANDRA - 5153 ) 
 - * fix start key / end token validation for wide row iteration ( CASSANDRA - 5168 ) 
 - * add ConfigHelper support for Thrift frame and max message sizes ( CASSANDRA - 5188 ) 
 - * fix nodetool repair not fail on node down ( CASSANDRA - 5203 ) 
 - * always collect tombstone hints ( CASSANDRA - 5068 ) 
 - * Fix thread growth on node removal ( CASSANDRA - 5175 ) 
 - * Fix error when sourcing file in cqlsh ( CASSANDRA - 5235 ) 
 - * Make Ec2Region ' s datacenter name configurable ( CASSANDRA - 5155 ) 
 - 
 - 
 - 1 . 1 . 9 
 + * Ensure Jackson dependency matches lib ( CASSANDRA - 5126 ) 
 + * Expose droppable tombstone ratio stats over JMX ( CASSANDRA - 5159 ) 
 + Merged from 1 . 1 : 
 * Simplify CompressedRandomAccessReader to work around JDK FD bug ( CASSANDRA - 5088 ) 
 * Improve handling a changing target throttle rate mid - compaction ( CASSANDRA - 5087 ) 
 * Pig : correctly decode row keys in widerow mode ( CASSANDRA - 5098 ) 
 * nodetool repair command now prints progress ( CASSANDRA - 4767 ) 
 - * Ensure Jackson dependency matches lib ( CASSANDRA - 5126 ) 
 * fix user defined compaction to run against 1 . 1 data directory ( CASSANDRA - 5118 ) 
 * Fix CQL3 BATCH authorization caching ( CASSANDRA - 5145 ) 
 * fix get _ count returns incorrect value with TTL ( CASSANDRA - 5099 ) 
 - * better handling for amid compaction failure ( CASSANDRA - 5137 ) 
 - * calculate pending ranges asynchronously ( CASSANDRA - 5135 ) 
 + * better handling for mid - compaction failure ( CASSANDRA - 5137 ) 
 * convert default marshallers list to map for better readability ( CASSANDRA - 5109 ) 
 - * Expose droppable tombstone ratio stats over JMX ( CASSANDRA - 5159 ) 
 - 
 + * fix ConcurrentModificationException in getBootstrapSource ( CASSANDRA - 5170 ) 
 + * fix sstable maxtimestamp for row deletes and pre - 1 . 1 . 1 sstables ( CASSANDRA - 5153 ) 
 + * Fix thread growth on node removal ( CASSANDRA - 5175 ) 
 + * Make Ec2Region ' s datacenter name configurable ( CASSANDRA - 5155 ) 
 
 
 1 . 2 . 0
