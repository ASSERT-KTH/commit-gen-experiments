BLEU SCORE: 0.04515183688171632

TEST MSG: MV should only query complex columns included in the view
GENERATED MSG: Make DropTableStatement throw an error if the table is a view

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index bdcf328 . . fbc1c8a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 4 <nl> + * MV should only query complex columns included in the view ( CASSANDRA - 11069 ) <nl> * Failed aggregate creation breaks server permanently ( CASSANDRA - 11064 ) <nl> * Add sstabledump tool ( CASSANDRA - 7464 ) <nl> * Introduce backpressure for hints ( CASSANDRA - 10972 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / view / View . java b / src / java / org / apache / cassandra / db / view / View . java <nl> index 30e9776 . . 1b823aa 100644 <nl> - - - a / src / java / org / apache / cassandra / db / view / View . java <nl> + + + b / src / java / org / apache / cassandra / db / view / View . java <nl> @ @ - 169 , 7 + 169 , 7 @ @ public class View <nl> <nl> for ( ColumnDefinition cdef : baseCfs . metadata . allColumns ( ) ) <nl> { <nl> - if ( cdef . isComplex ( ) ) <nl> + if ( cdef . isComplex ( ) & & definition . includes ( cdef . name ) ) <nl> { <nl> baseComplexColumns . add ( cdef ) ; <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewTest . java b / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> index 2e3cf5f . . 830f37f 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> @ @ - 18 , 20 + 18 , 20 @ @ <nl> <nl> package org . apache . cassandra . cql3 ; <nl> <nl> - import java . math . BigDecimal ; <nl> - import java . math . BigInteger ; <nl> - import java . net . InetAddress ; <nl> - import java . text . SimpleDateFormat ; <nl> import java . util . ArrayList ; <nl> - import java . util . Arrays ; <nl> - import java . util . Date ; <nl> import java . util . HashSet ; <nl> import java . util . List ; <nl> - import java . util . UUID ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> import junit . framework . Assert ; <nl> + import org . junit . After ; <nl> + import org . junit . Before ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . Test ; <nl> <nl> + import com . datastax . driver . core . ResultSet ; <nl> + import com . datastax . driver . core . Row ; <nl> + import com . datastax . driver . core . exceptions . InvalidQueryException ; <nl> import org . apache . cassandra . concurrent . SEPExecutor ; <nl> import org . apache . cassandra . concurrent . Stage ; <nl> import org . apache . cassandra . concurrent . StageManager ; <nl> @ @ - 41 , 14 + 41 , 6 @ @ import org . apache . cassandra . db . ColumnFamilyStore ; <nl> import org . apache . cassandra . db . Keyspace ; <nl> import org . apache . cassandra . db . SystemKeyspace ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> - import org . junit . After ; <nl> - import org . junit . Before ; <nl> - import org . junit . BeforeClass ; <nl> - import org . junit . Test ; <nl> - <nl> - import com . datastax . driver . core . ResultSet ; <nl> - import com . datastax . driver . core . Row ; <nl> - import com . datastax . driver . core . exceptions . InvalidQueryException ; <nl> <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> @ @ - 1002 , 4 + 994 , 29 @ @ public class ViewTest extends CQLTester <nl> mvRows = executeNet ( protocolVersion , " SELECT a , d , b FROM mv1 " ) ; <nl> assertTrue ( mvRows . isExhausted ( ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testCollectionInView ( ) throws Throwable <nl> + { <nl> + createTable ( " CREATE TABLE % s ( " + <nl> + " a int , " + <nl> + " b int , " + <nl> + " c map < int , text > , " + <nl> + " PRIMARY KEY ( a ) ) " ) ; <nl> + <nl> + executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; <nl> + createView ( " mvmap " , " CREATE MATERIALIZED VIEW % s AS SELECT a , b FROM % % s WHERE b IS NOT NULL PRIMARY KEY ( b , a ) " ) ; <nl> + <nl> + updateView ( " INSERT INTO % s ( a , b ) VALUES ( ? , ? ) " , 0 , 0 ) ; <nl> + ResultSet mvRows = executeNet ( protocolVersion , " SELECT a , b FROM mvmap WHERE b = ? " , 0 ) ; <nl> + assertRowsNet ( protocolVersion , mvRows , row ( 0 , 0 ) ) ; <nl> + <nl> + updateView ( " INSERT INTO % s ( a , b , c ) VALUES ( ? , ? , ? ) " , 1 , 1 , map ( 1 , " 1 " ) ) ; <nl> + mvRows = executeNet ( protocolVersion , " SELECT a , b FROM mvmap WHERE b = ? " , 1 ) ; <nl> + assertRowsNet ( protocolVersion , mvRows , row ( 1 , 1 ) ) ; <nl> + <nl> + updateView ( " INSERT INTO % s ( a , b , c ) VALUES ( ? , ? , ? ) " , 0 , 0 , map ( 0 , " 0 " ) ) ; <nl> + mvRows = executeNet ( protocolVersion , " SELECT a , b FROM mvmap WHERE b = ? " , 0 ) ; <nl> + assertRowsNet ( protocolVersion , mvRows , row ( 0 , 0 ) ) ; <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index bdcf328 . . fbc1c8a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 4 
 + * MV should only query complex columns included in the view ( CASSANDRA - 11069 ) 
 * Failed aggregate creation breaks server permanently ( CASSANDRA - 11064 ) 
 * Add sstabledump tool ( CASSANDRA - 7464 ) 
 * Introduce backpressure for hints ( CASSANDRA - 10972 ) 
 diff - - git a / src / java / org / apache / cassandra / db / view / View . java b / src / java / org / apache / cassandra / db / view / View . java 
 index 30e9776 . . 1b823aa 100644 
 - - - a / src / java / org / apache / cassandra / db / view / View . java 
 + + + b / src / java / org / apache / cassandra / db / view / View . java 
 @ @ - 169 , 7 + 169 , 7 @ @ public class View 
 
 for ( ColumnDefinition cdef : baseCfs . metadata . allColumns ( ) ) 
 { 
 - if ( cdef . isComplex ( ) ) 
 + if ( cdef . isComplex ( ) & & definition . includes ( cdef . name ) ) 
 { 
 baseComplexColumns . add ( cdef ) ; 
 } 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewTest . java b / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 index 2e3cf5f . . 830f37f 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 @ @ - 18 , 20 + 18 , 20 @ @ 
 
 package org . apache . cassandra . cql3 ; 
 
 - import java . math . BigDecimal ; 
 - import java . math . BigInteger ; 
 - import java . net . InetAddress ; 
 - import java . text . SimpleDateFormat ; 
 import java . util . ArrayList ; 
 - import java . util . Arrays ; 
 - import java . util . Date ; 
 import java . util . HashSet ; 
 import java . util . List ; 
 - import java . util . UUID ; 
 import java . util . concurrent . TimeUnit ; 
 
 import junit . framework . Assert ; 
 + import org . junit . After ; 
 + import org . junit . Before ; 
 + import org . junit . BeforeClass ; 
 + import org . junit . Test ; 
 
 + import com . datastax . driver . core . ResultSet ; 
 + import com . datastax . driver . core . Row ; 
 + import com . datastax . driver . core . exceptions . InvalidQueryException ; 
 import org . apache . cassandra . concurrent . SEPExecutor ; 
 import org . apache . cassandra . concurrent . Stage ; 
 import org . apache . cassandra . concurrent . StageManager ; 
 @ @ - 41 , 14 + 41 , 6 @ @ import org . apache . cassandra . db . ColumnFamilyStore ; 
 import org . apache . cassandra . db . Keyspace ; 
 import org . apache . cassandra . db . SystemKeyspace ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 - import org . junit . After ; 
 - import org . junit . Before ; 
 - import org . junit . BeforeClass ; 
 - import org . junit . Test ; 
 - 
 - import com . datastax . driver . core . ResultSet ; 
 - import com . datastax . driver . core . Row ; 
 - import com . datastax . driver . core . exceptions . InvalidQueryException ; 
 
 import static org . junit . Assert . assertTrue ; 
 
 @ @ - 1002 , 4 + 994 , 29 @ @ public class ViewTest extends CQLTester 
 mvRows = executeNet ( protocolVersion , " SELECT a , d , b FROM mv1 " ) ; 
 assertTrue ( mvRows . isExhausted ( ) ) ; 
 } 
 + 
 + @ Test 
 + public void testCollectionInView ( ) throws Throwable 
 + { 
 + createTable ( " CREATE TABLE % s ( " + 
 + " a int , " + 
 + " b int , " + 
 + " c map < int , text > , " + 
 + " PRIMARY KEY ( a ) ) " ) ; 
 + 
 + executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; 
 + createView ( " mvmap " , " CREATE MATERIALIZED VIEW % s AS SELECT a , b FROM % % s WHERE b IS NOT NULL PRIMARY KEY ( b , a ) " ) ; 
 + 
 + updateView ( " INSERT INTO % s ( a , b ) VALUES ( ? , ? ) " , 0 , 0 ) ; 
 + ResultSet mvRows = executeNet ( protocolVersion , " SELECT a , b FROM mvmap WHERE b = ? " , 0 ) ; 
 + assertRowsNet ( protocolVersion , mvRows , row ( 0 , 0 ) ) ; 
 + 
 + updateView ( " INSERT INTO % s ( a , b , c ) VALUES ( ? , ? , ? ) " , 1 , 1 , map ( 1 , " 1 " ) ) ; 
 + mvRows = executeNet ( protocolVersion , " SELECT a , b FROM mvmap WHERE b = ? " , 1 ) ; 
 + assertRowsNet ( protocolVersion , mvRows , row ( 1 , 1 ) ) ; 
 + 
 + updateView ( " INSERT INTO % s ( a , b , c ) VALUES ( ? , ? , ? ) " , 0 , 0 , map ( 0 , " 0 " ) ) ; 
 + mvRows = executeNet ( protocolVersion , " SELECT a , b FROM mvmap WHERE b = ? " , 0 ) ; 
 + assertRowsNet ( protocolVersion , mvRows , row ( 0 , 0 ) ) ; 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
