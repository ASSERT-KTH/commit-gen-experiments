BLEU SCORE: 0.024675789207681903

TEST MSG: Throw IRE for relations on entire collections
GENERATED MSG: fix potential NPE with both equal and unequal restriction

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0ac1fb6 . . de45376 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 6 @ @ <nl> 2 . 0 . 10 <nl> + * Throw InvalidRequestException when queries contain relations on entire <nl> + collection columns ( CASSANDRA - 7506 ) <nl> * Fix PRSI handling of CQL3 row markers for row cleanup ( CASSANDRA - 7787 ) <nl> * ( cqlsh ) enable CTRL - R history search with libedit ( CASSANDRA - 7577 ) <nl> * Fix dropping collection when it ' s the last regular column ( CASSANDRA - 7744 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> index 523302f . . 8145722 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> @ @ - 1658 , 6 + 1658 , 13 @ @ public class SelectStatement implements CQLStatement , MeasurableForPreparedCache <nl> StorageService . getPartitioner ( ) . getTokenValidator ( ) ) ; <nl> } <nl> <nl> + / / We don ' t support relations against entire collections , like " numbers = { 1 , 2 , 3 } " <nl> + if ( receiver . type . isCollection ( ) ) <nl> + { <nl> + throw new InvalidRequestException ( String . format ( " Collection column ' % s ' ( % s ) cannot be restricted by a ' % s ' relation " , <nl> + name , receiver . type . asCQL3Type ( ) , newRel . operator ( ) ) ) ; <nl> + } <nl> + <nl> switch ( newRel . operator ( ) ) <nl> { <nl> case EQ :
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6e72892 . . 4a5bfe9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> 1 . 1 . 6 <nl> * ( cql3 ) fix potential NPE with both equal and unequal restriction ( CASSANDRA - 4532 ) <nl> + * ( cql3 ) improves ORDER BY validation ( CASSANDRA - 4624 ) <nl> + <nl> <nl> 1 . 1 . 5 <nl> * add SecondaryIndex . reload API ( CASSANDRA - 4581 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> index dd00c5c . . 1d0918e 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> @ @ - 1070 , 8 + 1070 , 8 @ @ public class SelectStatement implements CQLStatement <nl> <nl> if ( ! stmt . parameters . orderings . isEmpty ( ) ) <nl> { <nl> - if ( whereClause . isEmpty ( ) ) <nl> - throw new InvalidRequestException ( " ORDER BY is only supported in combination with WHERE clause . " ) ; <nl> + if ( stmt . isKeyRange ( ) ) <nl> + throw new InvalidRequestException ( " ORDER BY is only supported when the partition key is restricted by an EQ or an IN . " ) ; <nl> <nl> Boolean [ ] reversedMap = new Boolean [ cfDef . columns . size ( ) ] ; <nl> int i = 0 ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0ac1fb6 . . de45376 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 6 @ @ 
 2 . 0 . 10 
 + * Throw InvalidRequestException when queries contain relations on entire 
 + collection columns ( CASSANDRA - 7506 ) 
 * Fix PRSI handling of CQL3 row markers for row cleanup ( CASSANDRA - 7787 ) 
 * ( cqlsh ) enable CTRL - R history search with libedit ( CASSANDRA - 7577 ) 
 * Fix dropping collection when it ' s the last regular column ( CASSANDRA - 7744 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 index 523302f . . 8145722 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 @ @ - 1658 , 6 + 1658 , 13 @ @ public class SelectStatement implements CQLStatement , MeasurableForPreparedCache 
 StorageService . getPartitioner ( ) . getTokenValidator ( ) ) ; 
 } 
 
 + / / We don ' t support relations against entire collections , like " numbers = { 1 , 2 , 3 } " 
 + if ( receiver . type . isCollection ( ) ) 
 + { 
 + throw new InvalidRequestException ( String . format ( " Collection column ' % s ' ( % s ) cannot be restricted by a ' % s ' relation " , 
 + name , receiver . type . asCQL3Type ( ) , newRel . operator ( ) ) ) ; 
 + } 
 + 
 switch ( newRel . operator ( ) ) 
 { 
 case EQ :

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6e72892 . . 4a5bfe9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 1 . 1 . 6 
 * ( cql3 ) fix potential NPE with both equal and unequal restriction ( CASSANDRA - 4532 ) 
 + * ( cql3 ) improves ORDER BY validation ( CASSANDRA - 4624 ) 
 + 
 
 1 . 1 . 5 
 * add SecondaryIndex . reload API ( CASSANDRA - 4581 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 index dd00c5c . . 1d0918e 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 @ @ - 1070 , 8 + 1070 , 8 @ @ public class SelectStatement implements CQLStatement 
 
 if ( ! stmt . parameters . orderings . isEmpty ( ) ) 
 { 
 - if ( whereClause . isEmpty ( ) ) 
 - throw new InvalidRequestException ( " ORDER BY is only supported in combination with WHERE clause . " ) ; 
 + if ( stmt . isKeyRange ( ) ) 
 + throw new InvalidRequestException ( " ORDER BY is only supported when the partition key is restricted by an EQ or an IN . " ) ; 
 
 Boolean [ ] reversedMap = new Boolean [ cfDef . columns . size ( ) ] ; 
 int i = 0 ;
