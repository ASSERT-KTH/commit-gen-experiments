BLEU SCORE: 0.018738883683389617

TEST MSG: Fix upgrading schema with super columns with non - text subcomparators
GENERATED MSG: Rename ColumnDefinition . Kind . CLUSTERING _ COLUMN to CLUSTERING

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7873742 . . cc682c4 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 8 <nl> + * Fix upgrading schema with super columns with non - text subcomparators ( CASSANDRA - 12023 ) <nl> * Add TimeWindowCompactionStrategy ( CASSANDRA - 9666 ) <nl> Merged from 2 . 2 : <nl> * Don ' t send erroneous NEW _ NODE notifications on restart ( CASSANDRA - 11038 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / CompactTables . java b / src / java / org / apache / cassandra / db / CompactTables . java <nl> index a72e7f2 . . a73b865 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CompactTables . java <nl> + + + b / src / java / org / apache / cassandra / db / CompactTables . java <nl> @ @ - 91 , 12 + 91 , 15 @ @ public abstract class CompactTables <nl> return columns . regulars . getSimple ( 0 ) ; <nl> } <nl> <nl> - public static AbstractType < ? > columnDefinitionComparator ( ColumnDefinition . Kind kind , boolean isSuper , AbstractType < ? > rawComparator , AbstractType < ? > rawSubComparator ) <nl> + public static AbstractType < ? > columnDefinitionComparator ( String kind , boolean isSuper , AbstractType < ? > rawComparator , AbstractType < ? > rawSubComparator ) <nl> { <nl> + if ( " compact _ value " . equals ( kind ) ) <nl> + return UTF8Type . instance ; <nl> + <nl> if ( isSuper ) <nl> - return kind = = ColumnDefinition . Kind . REGULAR ? rawSubComparator : UTF8Type . instance ; <nl> - else <nl> - return kind = = ColumnDefinition . Kind . STATIC ? rawComparator : UTF8Type . instance ; <nl> + return " regular " . equals ( kind ) ? rawSubComparator : UTF8Type . instance ; <nl> + <nl> + return " static " . equals ( kind ) ? rawComparator : UTF8Type . instance ; <nl> } <nl> <nl> public static boolean hasEmptyCompactValue ( CFMetaData metadata ) <nl> diff - - git a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> index 7411b93 . . 924bd7a 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> + + + b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> @ @ - 662 , 7 + 662 , 9 @ @ public final class LegacySchemaMigrator <nl> boolean isStaticCompactTable , <nl> boolean needsUpgrade ) <nl> { <nl> - ColumnDefinition . Kind kind = deserializeKind ( row . getString ( " type " ) ) ; <nl> + String rawKind = row . getString ( " type " ) ; <nl> + <nl> + ColumnDefinition . Kind kind = deserializeKind ( rawKind ) ; <nl> if ( needsUpgrade & & isStaticCompactTable & & kind = = ColumnDefinition . Kind . REGULAR ) <nl> kind = ColumnDefinition . Kind . STATIC ; <nl> <nl> @ @ - 678 , 7 + 680 , 7 @ @ public final class LegacySchemaMigrator <nl> / / we need to use the comparator fromString method <nl> AbstractType < ? > comparator = isCQLTable <nl> ? UTF8Type . instance <nl> - : CompactTables . columnDefinitionComparator ( kind , isSuper , rawComparator , rawSubComparator ) ; <nl> + : CompactTables . columnDefinitionComparator ( rawKind , isSuper , rawComparator , rawSubComparator ) ; <nl> ColumnIdentifier name = ColumnIdentifier . getInterned ( comparator . fromString ( row . getString ( " column _ name " ) ) , comparator ) ; <nl> <nl> AbstractType < ? > validator = parseType ( row . getString ( " validator " ) ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7873742 . . cc682c4 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 8 
 + * Fix upgrading schema with super columns with non - text subcomparators ( CASSANDRA - 12023 ) 
 * Add TimeWindowCompactionStrategy ( CASSANDRA - 9666 ) 
 Merged from 2 . 2 : 
 * Don ' t send erroneous NEW _ NODE notifications on restart ( CASSANDRA - 11038 ) 
 diff - - git a / src / java / org / apache / cassandra / db / CompactTables . java b / src / java / org / apache / cassandra / db / CompactTables . java 
 index a72e7f2 . . a73b865 100644 
 - - - a / src / java / org / apache / cassandra / db / CompactTables . java 
 + + + b / src / java / org / apache / cassandra / db / CompactTables . java 
 @ @ - 91 , 12 + 91 , 15 @ @ public abstract class CompactTables 
 return columns . regulars . getSimple ( 0 ) ; 
 } 
 
 - public static AbstractType < ? > columnDefinitionComparator ( ColumnDefinition . Kind kind , boolean isSuper , AbstractType < ? > rawComparator , AbstractType < ? > rawSubComparator ) 
 + public static AbstractType < ? > columnDefinitionComparator ( String kind , boolean isSuper , AbstractType < ? > rawComparator , AbstractType < ? > rawSubComparator ) 
 { 
 + if ( " compact _ value " . equals ( kind ) ) 
 + return UTF8Type . instance ; 
 + 
 if ( isSuper ) 
 - return kind = = ColumnDefinition . Kind . REGULAR ? rawSubComparator : UTF8Type . instance ; 
 - else 
 - return kind = = ColumnDefinition . Kind . STATIC ? rawComparator : UTF8Type . instance ; 
 + return " regular " . equals ( kind ) ? rawSubComparator : UTF8Type . instance ; 
 + 
 + return " static " . equals ( kind ) ? rawComparator : UTF8Type . instance ; 
 } 
 
 public static boolean hasEmptyCompactValue ( CFMetaData metadata ) 
 diff - - git a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 index 7411b93 . . 924bd7a 100644 
 - - - a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 + + + b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 @ @ - 662 , 7 + 662 , 9 @ @ public final class LegacySchemaMigrator 
 boolean isStaticCompactTable , 
 boolean needsUpgrade ) 
 { 
 - ColumnDefinition . Kind kind = deserializeKind ( row . getString ( " type " ) ) ; 
 + String rawKind = row . getString ( " type " ) ; 
 + 
 + ColumnDefinition . Kind kind = deserializeKind ( rawKind ) ; 
 if ( needsUpgrade & & isStaticCompactTable & & kind = = ColumnDefinition . Kind . REGULAR ) 
 kind = ColumnDefinition . Kind . STATIC ; 
 
 @ @ - 678 , 7 + 680 , 7 @ @ public final class LegacySchemaMigrator 
 / / we need to use the comparator fromString method 
 AbstractType < ? > comparator = isCQLTable 
 ? UTF8Type . instance 
 - : CompactTables . columnDefinitionComparator ( kind , isSuper , rawComparator , rawSubComparator ) ; 
 + : CompactTables . columnDefinitionComparator ( rawKind , isSuper , rawComparator , rawSubComparator ) ; 
 ColumnIdentifier name = ColumnIdentifier . getInterned ( comparator . fromString ( row . getString ( " column _ name " ) ) , comparator ) ; 
 
 AbstractType < ? > validator = parseType ( row . getString ( " validator " ) ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
