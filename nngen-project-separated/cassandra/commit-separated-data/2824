BLEU SCORE: 0.2259005009024612

TEST MSG: Fix serialization test
GENERATED MSG: cleanup

TEST DIFF (one line): diff - - git a / test / data / serialization / 2 . 0 / db . Row . bin b / test / data / serialization / 2 . 0 / db . Row . bin <nl> deleted file mode 100644 <nl> index c699448 . . 0000000 <nl> Binary files a / test / data / serialization / 2 . 0 / db . Row . bin and / dev / null differ <nl> diff - - git a / test / unit / org / apache / cassandra / db / SerializationsTest . java b / test / unit / org / apache / cassandra / db / SerializationsTest . java <nl> index 2bc1493 . . 68686cb 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / SerializationsTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / SerializationsTest . java <nl> @ @ - 200 , 8 + 200 , 9 @ @ public class SerializationsTest extends AbstractSerializationsTester <nl> @ Test <nl> public void testRowRead ( ) throws IOException <nl> { <nl> - if ( EXECUTE _ WRITES ) <nl> - testRowWrite ( ) ; <nl> + / / Since every table creation generates different CF ID , <nl> + / / we need to generate file every time <nl> + testRowWrite ( ) ; <nl> <nl> DataInputStream in = getInput ( " db . Row . bin " ) ; <nl> assert Row . serializer . deserialize ( in , getVersion ( ) ) ! = null ; <nl> @ @ - 248 , 8 + 249 , 7 @ @ public class SerializationsTest extends AbstractSerializationsTester <nl> public void testMutationRead ( ) throws IOException <nl> { <nl> / / mutation deserialization requires being able to look up the keyspace in the schema , <nl> - / / so we need to rewrite this each time . We can go back to testing on - disk data <nl> - / / once we pull RM . keyspace field out . <nl> + / / so we need to rewrite this each time . plus , CF ID is different for every run . <nl> testMutationWrite ( ) ; <nl> <nl> DataInputStream in = getInput ( " db . RowMutation . bin " ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / CassandraServer . java b / src / java / org / apache / cassandra / service / CassandraServer . java <nl> index 1708b75 . . 1d14676 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraServer . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraServer . java <nl> @ @ - 618 , 7 + 618 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> } <nl> <nl> public List < KeySlice > get _ range _ slice ( String keyspace , ColumnParent column _ parent , SlicePredicate predicate , String start _ key , String finish _ key , int maxRows , ConsistencyLevel consistency _ level ) <nl> - throws InvalidRequestException , UnavailableException , TException , TimedOutException <nl> + throws InvalidRequestException , UnavailableException , TException , TimedOutException <nl> { <nl> if ( logger . isDebugEnabled ( ) ) <nl> logger . debug ( " range _ slice " ) ; <nl> @ @ - 664 , 7 + 664 , 6 @ @ public class CassandraServer implements Cassandra . Iface <nl> return keySlices ; <nl> } <nl> <nl> - @ Override <nl> public void login ( String keyspace , AuthenticationRequest auth _ request ) throws AuthenticationException , AuthorizationException , TException <nl> { <nl> DatabaseDescriptor . getAuthenticator ( ) . login ( keyspace , auth _ request ) ;

TEST DIFF:
diff - - git a / test / data / serialization / 2 . 0 / db . Row . bin b / test / data / serialization / 2 . 0 / db . Row . bin 
 deleted file mode 100644 
 index c699448 . . 0000000 
 Binary files a / test / data / serialization / 2 . 0 / db . Row . bin and / dev / null differ 
 diff - - git a / test / unit / org / apache / cassandra / db / SerializationsTest . java b / test / unit / org / apache / cassandra / db / SerializationsTest . java 
 index 2bc1493 . . 68686cb 100644 
 - - - a / test / unit / org / apache / cassandra / db / SerializationsTest . java 
 + + + b / test / unit / org / apache / cassandra / db / SerializationsTest . java 
 @ @ - 200 , 8 + 200 , 9 @ @ public class SerializationsTest extends AbstractSerializationsTester 
 @ Test 
 public void testRowRead ( ) throws IOException 
 { 
 - if ( EXECUTE _ WRITES ) 
 - testRowWrite ( ) ; 
 + / / Since every table creation generates different CF ID , 
 + / / we need to generate file every time 
 + testRowWrite ( ) ; 
 
 DataInputStream in = getInput ( " db . Row . bin " ) ; 
 assert Row . serializer . deserialize ( in , getVersion ( ) ) ! = null ; 
 @ @ - 248 , 8 + 249 , 7 @ @ public class SerializationsTest extends AbstractSerializationsTester 
 public void testMutationRead ( ) throws IOException 
 { 
 / / mutation deserialization requires being able to look up the keyspace in the schema , 
 - / / so we need to rewrite this each time . We can go back to testing on - disk data 
 - / / once we pull RM . keyspace field out . 
 + / / so we need to rewrite this each time . plus , CF ID is different for every run . 
 testMutationWrite ( ) ; 
 
 DataInputStream in = getInput ( " db . RowMutation . bin " ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / CassandraServer . java b / src / java / org / apache / cassandra / service / CassandraServer . java 
 index 1708b75 . . 1d14676 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraServer . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraServer . java 
 @ @ - 618 , 7 + 618 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 } 
 
 public List < KeySlice > get _ range _ slice ( String keyspace , ColumnParent column _ parent , SlicePredicate predicate , String start _ key , String finish _ key , int maxRows , ConsistencyLevel consistency _ level ) 
 - throws InvalidRequestException , UnavailableException , TException , TimedOutException 
 + throws InvalidRequestException , UnavailableException , TException , TimedOutException 
 { 
 if ( logger . isDebugEnabled ( ) ) 
 logger . debug ( " range _ slice " ) ; 
 @ @ - 664 , 7 + 664 , 6 @ @ public class CassandraServer implements Cassandra . Iface 
 return keySlices ; 
 } 
 
 - @ Override 
 public void login ( String keyspace , AuthenticationRequest auth _ request ) throws AuthenticationException , AuthorizationException , TException 
 { 
 DatabaseDescriptor . getAuthenticator ( ) . login ( keyspace , auth _ request ) ;
