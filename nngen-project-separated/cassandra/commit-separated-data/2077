BLEU SCORE: 0.04767707020457096

TEST MSG: Improve system query to read paxos table on propose
GENERATED MSG: Fix potential NPE while loading paxos state

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 95e6f67 . . dc9a32f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 <nl> + * Improve query to read paxos table on propose ( CASSANDRA - 7929 ) <nl> * Remove cassandra - cli ( CASSANDRA - 7920 ) <nl> * Optimize java source - based UDF invocation ( CASSANDRA - 7924 ) <nl> * Accept dollar quoted strings in CQL ( CASSANDRA - 7769 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> index 8b62740 . . 2cff38d 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> @ @ - 860 , 6 + 860 , 19 @ @ public class SystemKeyspace <nl> return new PaxosState ( promised , accepted , mostRecent ) ; <nl> } <nl> <nl> + public static Commit loadPaxosPromise ( ByteBuffer key , CFMetaData metadata ) <nl> + { <nl> + String req = " SELECT in _ progress _ ballot FROM system . % s WHERE row _ key = ? AND cf _ id = ? " ; <nl> + UntypedResultSet results = executeInternal ( String . format ( req , PAXOS _ CF ) , key , metadata . cfId ) ; <nl> + if ( results . isEmpty ( ) ) <nl> + return Commit . emptyCommit ( key , metadata ) ; <nl> + UntypedResultSet . Row row = results . one ( ) ; <nl> + Commit promised = row . has ( " in _ progress _ ballot " ) <nl> + ? new Commit ( key , row . getUUID ( " in _ progress _ ballot " ) , ArrayBackedSortedColumns . factory . create ( metadata ) ) <nl> + : Commit . emptyCommit ( key , metadata ) ; <nl> + return promised ; <nl> + } <nl> + <nl> public static void savePaxosPromise ( Commit promise ) <nl> { <nl> String req = " UPDATE system . % s USING TIMESTAMP ? AND TTL ? SET in _ progress _ ballot = ? WHERE row _ key = ? AND cf _ id = ? " ; <nl> diff - - git a / src / java / org / apache / cassandra / service / paxos / PaxosState . java b / src / java / org / apache / cassandra / service / paxos / PaxosState . java <nl> index df7365d . . 37cea5c 100644 <nl> - - - a / src / java / org / apache / cassandra / service / paxos / PaxosState . java <nl> + + + b / src / java / org / apache / cassandra / service / paxos / PaxosState . java <nl> @ @ - 87 , 8 + 87 , 8 @ @ public class PaxosState <nl> lock . lock ( ) ; <nl> try <nl> { <nl> - PaxosState state = SystemKeyspace . loadPaxosState ( proposal . key , proposal . update . metadata ( ) ) ; <nl> - if ( proposal . hasBallot ( state . promised . ballot ) | | proposal . isAfter ( state . promised ) ) <nl> + Commit promised = SystemKeyspace . loadPaxosPromise ( proposal . key , proposal . update . metadata ( ) ) ; <nl> + if ( proposal . hasBallot ( promised . ballot ) | | proposal . isAfter ( promised ) ) <nl> { <nl> Tracing . trace ( " Accepting proposal { } " , proposal ) ; <nl> SystemKeyspace . savePaxosProposal ( proposal ) ; <nl> @ @ - 96 , 7 + 96 , 7 @ @ public class PaxosState <nl> } <nl> else <nl> { <nl> - Tracing . trace ( " Rejecting proposal for { } because inProgress is now { } " , proposal , state . promised ) ; <nl> + Tracing . trace ( " Rejecting proposal for { } because inProgress is now { } " , proposal , promised ) ; <nl> return false ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / transport / CBUtil . java b / src / java / org / apache / cassandra / transport / CBUtil . java <nl> index f183af3 . . dfd0439 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / CBUtil . java <nl> + + + b / src / java / org / apache / cassandra / transport / CBUtil . java <nl> @ @ - 227 , 7 + 227 , 7 @ @ public abstract class CBUtil <nl> Map < String , String > m = new HashMap < String , String > ( length ) ; <nl> for ( int i = 0 ; i < length ; i + + ) <nl> { <nl> - String k = readString ( cb ) . toUpperCase ( ) ; <nl> + String k = readString ( cb ) ; <nl> String v = readString ( cb ) ; <nl> m . put ( k , v ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / StartupMessage . java b / src / java / org / apache / cassandra / transport / messages / StartupMessage . java <nl> index 51fece1 . . d56a037 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / StartupMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / StartupMessage . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ <nl> * / <nl> package org . apache . cassandra . transport . messages ; <nl> <nl> + import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> import org . jboss . netty . buffer . ChannelBuffer ; <nl> @ @ - 42 , 7 + 43 , 7 @ @ public class StartupMessage extends Message . Request <nl> { <nl> public StartupMessage decode ( ChannelBuffer body , int version ) <nl> { <nl> - return new StartupMessage ( CBUtil . readStringMap ( body ) ) ; <nl> + return new StartupMessage ( upperCaseKeys ( CBUtil . readStringMap ( body ) ) ) ; <nl> } <nl> <nl> public void encode ( StartupMessage msg , ChannelBuffer dest , int version ) <nl> @ @ - 108 , 6 + 109 , 14 @ @ public class StartupMessage extends Message . Request <nl> return new ReadyMessage ( ) ; <nl> } <nl> <nl> + private static Map < String , String > upperCaseKeys ( Map < String , String > options ) <nl> + { <nl> + Map < String , String > newMap = new HashMap < String , String > ( options . size ( ) ) ; <nl> + for ( Map . Entry < String , String > entry : options . entrySet ( ) ) <nl> + newMap . put ( entry . getKey ( ) . toUpperCase ( ) , entry . getValue ( ) ) ; <nl> + return newMap ; <nl> + } <nl> + <nl> @ Override <nl> public String toString ( ) <nl> {

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 95e6f67 . . dc9a32f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 
 + * Improve query to read paxos table on propose ( CASSANDRA - 7929 ) 
 * Remove cassandra - cli ( CASSANDRA - 7920 ) 
 * Optimize java source - based UDF invocation ( CASSANDRA - 7924 ) 
 * Accept dollar quoted strings in CQL ( CASSANDRA - 7769 ) 
 diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 index 8b62740 . . 2cff38d 100644 
 - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 @ @ - 860 , 6 + 860 , 19 @ @ public class SystemKeyspace 
 return new PaxosState ( promised , accepted , mostRecent ) ; 
 } 
 
 + public static Commit loadPaxosPromise ( ByteBuffer key , CFMetaData metadata ) 
 + { 
 + String req = " SELECT in _ progress _ ballot FROM system . % s WHERE row _ key = ? AND cf _ id = ? " ; 
 + UntypedResultSet results = executeInternal ( String . format ( req , PAXOS _ CF ) , key , metadata . cfId ) ; 
 + if ( results . isEmpty ( ) ) 
 + return Commit . emptyCommit ( key , metadata ) ; 
 + UntypedResultSet . Row row = results . one ( ) ; 
 + Commit promised = row . has ( " in _ progress _ ballot " ) 
 + ? new Commit ( key , row . getUUID ( " in _ progress _ ballot " ) , ArrayBackedSortedColumns . factory . create ( metadata ) ) 
 + : Commit . emptyCommit ( key , metadata ) ; 
 + return promised ; 
 + } 
 + 
 public static void savePaxosPromise ( Commit promise ) 
 { 
 String req = " UPDATE system . % s USING TIMESTAMP ? AND TTL ? SET in _ progress _ ballot = ? WHERE row _ key = ? AND cf _ id = ? " ; 
 diff - - git a / src / java / org / apache / cassandra / service / paxos / PaxosState . java b / src / java / org / apache / cassandra / service / paxos / PaxosState . java 
 index df7365d . . 37cea5c 100644 
 - - - a / src / java / org / apache / cassandra / service / paxos / PaxosState . java 
 + + + b / src / java / org / apache / cassandra / service / paxos / PaxosState . java 
 @ @ - 87 , 8 + 87 , 8 @ @ public class PaxosState 
 lock . lock ( ) ; 
 try 
 { 
 - PaxosState state = SystemKeyspace . loadPaxosState ( proposal . key , proposal . update . metadata ( ) ) ; 
 - if ( proposal . hasBallot ( state . promised . ballot ) | | proposal . isAfter ( state . promised ) ) 
 + Commit promised = SystemKeyspace . loadPaxosPromise ( proposal . key , proposal . update . metadata ( ) ) ; 
 + if ( proposal . hasBallot ( promised . ballot ) | | proposal . isAfter ( promised ) ) 
 { 
 Tracing . trace ( " Accepting proposal { } " , proposal ) ; 
 SystemKeyspace . savePaxosProposal ( proposal ) ; 
 @ @ - 96 , 7 + 96 , 7 @ @ public class PaxosState 
 } 
 else 
 { 
 - Tracing . trace ( " Rejecting proposal for { } because inProgress is now { } " , proposal , state . promised ) ; 
 + Tracing . trace ( " Rejecting proposal for { } because inProgress is now { } " , proposal , promised ) ; 
 return false ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / transport / CBUtil . java b / src / java / org / apache / cassandra / transport / CBUtil . java 
 index f183af3 . . dfd0439 100644 
 - - - a / src / java / org / apache / cassandra / transport / CBUtil . java 
 + + + b / src / java / org / apache / cassandra / transport / CBUtil . java 
 @ @ - 227 , 7 + 227 , 7 @ @ public abstract class CBUtil 
 Map < String , String > m = new HashMap < String , String > ( length ) ; 
 for ( int i = 0 ; i < length ; i + + ) 
 { 
 - String k = readString ( cb ) . toUpperCase ( ) ; 
 + String k = readString ( cb ) ; 
 String v = readString ( cb ) ; 
 m . put ( k , v ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / StartupMessage . java b / src / java / org / apache / cassandra / transport / messages / StartupMessage . java 
 index 51fece1 . . d56a037 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / StartupMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / StartupMessage . java 
 @ @ - 17 , 6 + 17 , 7 @ @ 
 * / 
 package org . apache . cassandra . transport . messages ; 
 
 + import java . util . HashMap ; 
 import java . util . Map ; 
 
 import org . jboss . netty . buffer . ChannelBuffer ; 
 @ @ - 42 , 7 + 43 , 7 @ @ public class StartupMessage extends Message . Request 
 { 
 public StartupMessage decode ( ChannelBuffer body , int version ) 
 { 
 - return new StartupMessage ( CBUtil . readStringMap ( body ) ) ; 
 + return new StartupMessage ( upperCaseKeys ( CBUtil . readStringMap ( body ) ) ) ; 
 } 
 
 public void encode ( StartupMessage msg , ChannelBuffer dest , int version ) 
 @ @ - 108 , 6 + 109 , 14 @ @ public class StartupMessage extends Message . Request 
 return new ReadyMessage ( ) ; 
 } 
 
 + private static Map < String , String > upperCaseKeys ( Map < String , String > options ) 
 + { 
 + Map < String , String > newMap = new HashMap < String , String > ( options . size ( ) ) ; 
 + for ( Map . Entry < String , String > entry : options . entrySet ( ) ) 
 + newMap . put ( entry . getKey ( ) . toUpperCase ( ) , entry . getValue ( ) ) ; 
 + return newMap ; 
 + } 
 + 
 @ Override 
 public String toString ( ) 
 {
