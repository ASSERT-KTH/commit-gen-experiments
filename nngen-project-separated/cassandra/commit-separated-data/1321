BLEU SCORE: 0.06567274736060397

TEST MSG: Set test . timeout back to 60 seconds
GENERATED MSG: increase long - test timeout

TEST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 6048e27 . . c2b0496 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 94 , 7 + 94 , 7 @ @ <nl> < property name = " maven - repository - url " value = " https : / / repository . apache . org / content / repositories / snapshots " / > <nl> < property name = " maven - repository - id " value = " apache . snapshots . https " / > <nl> <nl> - < property name = " test . timeout " value = " 1200000 " / > <nl> + < property name = " test . timeout " value = " 60000 " / > <nl> < property name = " test . long . timeout " value = " 600000 " / > <nl> < property name = " test . burn . timeout " value = " 600000 " / > <nl>
NEAREST DIFF (one line): diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index 21cce89 . . f15b02c 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 1081 , 6 + 1081 , 8 @ @ class Shell ( cmd . Cmd ) : <nl> self . prompt = prompt <nl> <nl> def cql _ protect _ name ( self , name ) : <nl> + if isinstance ( name , unicode ) : <nl> + name = name . encode ( ' utf8 ' ) <nl> return cqlruleset . maybe _ escape _ name ( name ) <nl> <nl> def cql _ protect _ value ( self , value ) : <nl> diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py <nl> index 9c5f337 . . 27cec89 100644 <nl> - - - a / pylib / cqlshlib / cql3handling . py <nl> + + + b / pylib / cqlshlib / cql3handling . py <nl> @ @ - 884 , 6 + 884 , 7 @ @ class CqlTableDef : <nl> value _ cols = [ self . column _ class ( self . value _ alias , self . default _ validator ) ] <nl> else : <nl> value _ cols = map ( self . column _ class . from _ layout , self . coldefs ) <nl> + value _ cols . sort ( key = lambda c : c . name ) <nl> <nl> return partkey _ cols + colalias _ cols + value _ cols <nl> <nl> @ @ - 918 , 6 + 919 , 7 @ @ class CqlTableDef : <nl> warn ( UnexpectedTableStructure ( " Dynamic storage CF has a value _ alias ( % r ) " <nl> % ( self . value _ alias , ) ) ) <nl> value _ cols = map ( self . column _ class . from _ layout , self . coldefs ) <nl> + value _ cols . sort ( key = lambda c : c . name ) <nl> <nl> return partkey _ cols + colalias _ cols + value _ cols <nl>

TEST DIFF:
diff - - git a / build . xml b / build . xml 
 index 6048e27 . . c2b0496 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 94 , 7 + 94 , 7 @ @ 
 < property name = " maven - repository - url " value = " https : / / repository . apache . org / content / repositories / snapshots " / > 
 < property name = " maven - repository - id " value = " apache . snapshots . https " / > 
 
 - < property name = " test . timeout " value = " 1200000 " / > 
 + < property name = " test . timeout " value = " 60000 " / > 
 < property name = " test . long . timeout " value = " 600000 " / > 
 < property name = " test . burn . timeout " value = " 600000 " / > 


NEAREST DIFF:
diff - - git a / bin / cqlsh b / bin / cqlsh 
 index 21cce89 . . f15b02c 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 1081 , 6 + 1081 , 8 @ @ class Shell ( cmd . Cmd ) : 
 self . prompt = prompt 
 
 def cql _ protect _ name ( self , name ) : 
 + if isinstance ( name , unicode ) : 
 + name = name . encode ( ' utf8 ' ) 
 return cqlruleset . maybe _ escape _ name ( name ) 
 
 def cql _ protect _ value ( self , value ) : 
 diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py 
 index 9c5f337 . . 27cec89 100644 
 - - - a / pylib / cqlshlib / cql3handling . py 
 + + + b / pylib / cqlshlib / cql3handling . py 
 @ @ - 884 , 6 + 884 , 7 @ @ class CqlTableDef : 
 value _ cols = [ self . column _ class ( self . value _ alias , self . default _ validator ) ] 
 else : 
 value _ cols = map ( self . column _ class . from _ layout , self . coldefs ) 
 + value _ cols . sort ( key = lambda c : c . name ) 
 
 return partkey _ cols + colalias _ cols + value _ cols 
 
 @ @ - 918 , 6 + 919 , 7 @ @ class CqlTableDef : 
 warn ( UnexpectedTableStructure ( " Dynamic storage CF has a value _ alias ( % r ) " 
 % ( self . value _ alias , ) ) ) 
 value _ cols = map ( self . column _ class . from _ layout , self . coldefs ) 
 + value _ cols . sort ( key = lambda c : c . name ) 
 
 return partkey _ cols + colalias _ cols + value _ cols 

