BLEU SCORE: 0.03527502360630138

TEST MSG: Fix queries on static compact tables
GENERATED MSG: Fix Select * is only returning the first page of data

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b4b568c . . 54a6a07 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 0 - beta1 <nl> + * Fix query on static compact tables ( CASSANDRA - 10093 ) <nl> * Fix race during construction of commit log ( CASSANDRA - 10049 ) <nl> * Add option to only purge repaired tombstones ( CASSANDRA - 6434 ) <nl> * Change authorization handling for MVs ( CASSANDRA - 9927 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java b / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java <nl> index 1a3b083 . . 36f11ad 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java <nl> @ @ - 35 , 6 + 35 , 7 @ @ import org . apache . cassandra . dht . * ; <nl> import org . apache . cassandra . exceptions . InvalidRequestException ; <nl> import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> + import org . apache . cassandra . utils . btree . BTreeSet ; <nl> <nl> import static org . apache . cassandra . cql3 . statements . RequestValidations . checkFalse ; <nl> import static org . apache . cassandra . cql3 . statements . RequestValidations . checkNotNull ; <nl> @ @ - 478 , 6 + 479 , 12 @ @ public final class StatementRestrictions <nl> * / <nl> public NavigableSet < Clustering > getClusteringColumns ( QueryOptions options ) throws InvalidRequestException <nl> { <nl> + / / If this is a names command and the table is a static compact one , then as far as CQL is concerned we have <nl> + / / only a single row which internally correspond to the static parts . In which case we want to return an empty <nl> + / / set ( since that ' s what ClusteringIndexNamesFilter expects ) . <nl> + if ( cfm . isStaticCompactTable ( ) ) <nl> + return BTreeSet . empty ( cfm . comparator ) ; <nl> + <nl> return clusteringColumnsRestrictions . valuesAsClustering ( options ) ; <nl> } <nl> <nl> @ @ - 513 , 7 + 520 , 9 @ @ public final class StatementRestrictions <nl> * / <nl> public boolean isColumnRange ( ) <nl> { <nl> - / / For static compact tables we need to ignore the fake clustering column . <nl> + / / For static compact tables we want to ignore the fake clustering column ( note that if we weren ' t special casing , <nl> + / / this would mean a ' SELECT * ' on a static compact table would query whole partitions , even though we ' ll only return <nl> + / / the static part as far as CQL is concerned . This is thus mostly an optimization to use the query - by - name path ) . <nl> int numberOfClusteringColumns = cfm . isStaticCompactTable ( ) ? 0 : cfm . clusteringColumns ( ) . size ( ) ; <nl> / / it is a range query if it has at least one the column alias for which no relation is defined or is not EQ . <nl> return clusteringColumnsRestrictions . size ( ) < numberOfClusteringColumns <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> index 9acbb35 . . 01ce8e6 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> @ @ - 484 , 7 + 484 , 10 @ @ public class SelectStatement implements CQLStatement <nl> else <nl> { <nl> NavigableSet < Clustering > clusterings = getRequestedRows ( options ) ; <nl> - if ( clusterings . isEmpty ( ) & & ! selection . containsStaticColumns ( ) ) / / in case of IN ( ) for the last column of the key <nl> + / / We can have no clusterings if either we ' re only selecting the static columns , or if we have <nl> + / / a ' IN ( ) ' for clusterings . In that case , we still want to query if some static columns are <nl> + / / queried . But we ' re fine otherwise . <nl> + if ( clusterings . isEmpty ( ) & & queriedColumns . fetchedColumns ( ) . statics . isEmpty ( ) ) <nl> return null ; <nl> <nl> return new ClusteringIndexNamesFilter ( clusterings , isReversed ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / Clustering . java b / src / java / org / apache / cassandra / db / Clustering . java <nl> index a29ce65 . . 2fb92d9 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Clustering . java <nl> + + + b / src / java / org / apache / cassandra / db / Clustering . java <nl> @ @ - 134 , 6 + 134 , 7 @ @ public class Clustering extends AbstractClusteringPrefix <nl> public void serialize ( Clustering clustering , DataOutputPlus out , int version , List < AbstractType < ? > > types ) throws IOException <nl> { <nl> assert clustering ! = STATIC _ CLUSTERING : " We should never serialize a static clustering " ; <nl> + assert clustering . size ( ) = = types . size ( ) : " Invalid clustering for the table : " + clustering ; <nl> ClusteringPrefix . serializer . serializeValuesWithoutSize ( clustering , out , version , types ) ; <nl> } <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b4b568c . . 54a6a07 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 0 - beta1 
 + * Fix query on static compact tables ( CASSANDRA - 10093 ) 
 * Fix race during construction of commit log ( CASSANDRA - 10049 ) 
 * Add option to only purge repaired tombstones ( CASSANDRA - 6434 ) 
 * Change authorization handling for MVs ( CASSANDRA - 9927 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java b / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java 
 index 1a3b083 . . 36f11ad 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java 
 + + + b / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java 
 @ @ - 35 , 6 + 35 , 7 @ @ import org . apache . cassandra . dht . * ; 
 import org . apache . cassandra . exceptions . InvalidRequestException ; 
 import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 + import org . apache . cassandra . utils . btree . BTreeSet ; 
 
 import static org . apache . cassandra . cql3 . statements . RequestValidations . checkFalse ; 
 import static org . apache . cassandra . cql3 . statements . RequestValidations . checkNotNull ; 
 @ @ - 478 , 6 + 479 , 12 @ @ public final class StatementRestrictions 
 * / 
 public NavigableSet < Clustering > getClusteringColumns ( QueryOptions options ) throws InvalidRequestException 
 { 
 + / / If this is a names command and the table is a static compact one , then as far as CQL is concerned we have 
 + / / only a single row which internally correspond to the static parts . In which case we want to return an empty 
 + / / set ( since that ' s what ClusteringIndexNamesFilter expects ) . 
 + if ( cfm . isStaticCompactTable ( ) ) 
 + return BTreeSet . empty ( cfm . comparator ) ; 
 + 
 return clusteringColumnsRestrictions . valuesAsClustering ( options ) ; 
 } 
 
 @ @ - 513 , 7 + 520 , 9 @ @ public final class StatementRestrictions 
 * / 
 public boolean isColumnRange ( ) 
 { 
 - / / For static compact tables we need to ignore the fake clustering column . 
 + / / For static compact tables we want to ignore the fake clustering column ( note that if we weren ' t special casing , 
 + / / this would mean a ' SELECT * ' on a static compact table would query whole partitions , even though we ' ll only return 
 + / / the static part as far as CQL is concerned . This is thus mostly an optimization to use the query - by - name path ) . 
 int numberOfClusteringColumns = cfm . isStaticCompactTable ( ) ? 0 : cfm . clusteringColumns ( ) . size ( ) ; 
 / / it is a range query if it has at least one the column alias for which no relation is defined or is not EQ . 
 return clusteringColumnsRestrictions . size ( ) < numberOfClusteringColumns 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 index 9acbb35 . . 01ce8e6 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 @ @ - 484 , 7 + 484 , 10 @ @ public class SelectStatement implements CQLStatement 
 else 
 { 
 NavigableSet < Clustering > clusterings = getRequestedRows ( options ) ; 
 - if ( clusterings . isEmpty ( ) & & ! selection . containsStaticColumns ( ) ) / / in case of IN ( ) for the last column of the key 
 + / / We can have no clusterings if either we ' re only selecting the static columns , or if we have 
 + / / a ' IN ( ) ' for clusterings . In that case , we still want to query if some static columns are 
 + / / queried . But we ' re fine otherwise . 
 + if ( clusterings . isEmpty ( ) & & queriedColumns . fetchedColumns ( ) . statics . isEmpty ( ) ) 
 return null ; 
 
 return new ClusteringIndexNamesFilter ( clusterings , isReversed ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / Clustering . java b / src / java / org / apache / cassandra / db / Clustering . java 
 index a29ce65 . . 2fb92d9 100644 
 - - - a / src / java / org / apache / cassandra / db / Clustering . java 
 + + + b / src / java / org / apache / cassandra / db / Clustering . java 
 @ @ - 134 , 6 + 134 , 7 @ @ public class Clustering extends AbstractClusteringPrefix 
 public void serialize ( Clustering clustering , DataOutputPlus out , int version , List < AbstractType < ? > > types ) throws IOException 
 { 
 assert clustering ! = STATIC _ CLUSTERING : " We should never serialize a static clustering " ; 
 + assert clustering . size ( ) = = types . size ( ) : " Invalid clustering for the table : " + clustering ; 
 ClusteringPrefix . serializer . serializeValuesWithoutSize ( clustering , out , version , types ) ; 
 } 


NEAREST DIFF:
ELIMINATEDSENTENCE
