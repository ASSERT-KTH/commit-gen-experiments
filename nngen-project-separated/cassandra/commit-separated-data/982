BLEU SCORE: 0.006193628179172647

TEST MSG: trunk eclipse - warnings
GENERATED MSG: fix more findbugs complaints . patch by Michael Greene ; reviewed by jbellis for CASSANDRA - 338

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index cd9d8d9 . . b4ce53d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 6 <nl> + * Resolve some eclipse - warnings ( CASSANDRA - 11086 ) <nl> * ( cqlsh ) Show static columns in a different color ( CASSANDRA - 11059 ) <nl> * Allow to remove TTLs on table with default _ time _ to _ live ( CASSANDRA - 11207 ) <nl> <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / TermIterator . java b / src / java / org / apache / cassandra / index / sasi / TermIterator . java <nl> index cfa87c0 . . d2db88c 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / TermIterator . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / TermIterator . java <nl> @ @ - 79 , 6 + 79 , 7 @ @ public class TermIterator extends RangeIterator < Long , Token > <nl> this . referencedIndexes = referencedIndexes ; <nl> } <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> public static TermIterator build ( final Expression e , Set < SSTableIndex > perSSTableIndexes ) <nl> { <nl> final List < RangeIterator < Long , Token > > tokens = new CopyOnWriteArrayList < > ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskBlock . java b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskBlock . java <nl> index 32cda53 . . e335b50 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskBlock . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskBlock . java <nl> @ @ - 81 , 6 + 81 , 7 @ @ public abstract class OnDiskBlock < T extends Term > <nl> return new SearchResult < > ( element , cmp , middle ) ; <nl> } <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> protected T getTerm ( int index ) <nl> { <nl> MappedBuffer dup = blockIndex . duplicate ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndex . java b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndex . java <nl> index a84e8bf . . ef487f1 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndex . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndex . java <nl> @ @ - 114 , 6 + 114 , 7 @ @ public class OnDiskIndex implements Iterable < OnDiskIndex . DataTerm > , Closeable <nl> <nl> protected final ByteBuffer minTerm , maxTerm , minKey , maxKey ; <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> public OnDiskIndex ( File index , AbstractType < ? > cmp , Function < Long , DecoratedKey > keyReader ) <nl> { <nl> keyFetcher = keyReader ; <nl> @ @ - 256 , 6 + 257 , 7 @ @ public class OnDiskIndex implements Iterable < OnDiskIndex . DataTerm > , Closeable <nl> RangeUnionIterator . Builder < Long , Token > builder = RangeUnionIterator . builder ( ) ; <nl> for ( Expression e : ranges ) <nl> { <nl> + @ SuppressWarnings ( " resource " ) <nl> RangeIterator < Long , Token > range = searchRange ( e ) ; <nl> if ( range ! = null ) <nl> builder . add ( range ) ; <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndexBuilder . java b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndexBuilder . java <nl> index 04b7b1c . . 5adecf8 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndexBuilder . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndexBuilder . java <nl> @ @ - 245 , 6 + 245 , 7 @ @ public class OnDiskIndexBuilder <nl> return true ; <nl> } <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> protected void finish ( Descriptor descriptor , Pair < ByteBuffer , ByteBuffer > range , File file , TermIterator terms ) <nl> { <nl> SequentialWriter out = null ; <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / disk / PerSSTableIndexWriter . java b / src / java / org / apache / cassandra / index / sasi / disk / PerSSTableIndexWriter . java <nl> index 6e63c71 . . 018900e 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / disk / PerSSTableIndexWriter . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / disk / PerSSTableIndexWriter . java <nl> @ @ - 281 , 6 + 281 , 7 @ @ public class PerSSTableIndexWriter implements SSTableFlushObserver <nl> / / parts are present but there is something still in memory , let ' s flush that inline <nl> if ( ! currentBuilder . isEmpty ( ) ) <nl> { <nl> + @ SuppressWarnings ( " resource " ) <nl> OnDiskIndex last = scheduleSegmentFlush ( false ) . call ( ) ; <nl> segments . add ( Futures . immediateFuture ( last ) ) ; <nl> } <nl> @ @ - 290 , 6 + 291 , 7 @ @ public class PerSSTableIndexWriter implements SSTableFlushObserver <nl> <nl> for ( Future < OnDiskIndex > f : segments ) <nl> { <nl> + @ SuppressWarnings ( " resource " ) <nl> OnDiskIndex part = Futures . getUnchecked ( f ) ; <nl> if ( part = = null ) <nl> continue ; <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / plan / Operation . java b / src / java / org / apache / cassandra / index / sasi / plan / Operation . java <nl> index f8b02a3 . . 6f0904c 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / plan / Operation . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / plan / Operation . java <nl> @ @ - 39 , 6 + 39 , 7 @ @ import com . google . common . annotations . VisibleForTesting ; <nl> import com . google . common . collect . * ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> public class Operation extends RangeIterator < Long , Token > <nl> { <nl> public enum OperationType <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / CombinedTerm . java b / src / java / org / apache / cassandra / index / sasi / utils / CombinedTerm . java <nl> index 2bf5a07 . . 0131d46 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / utils / CombinedTerm . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / utils / CombinedTerm . java <nl> @ @ - 43 , 6 + 43 , 7 @ @ public class CombinedTerm implements CombinedValue < DataTerm > <nl> this . term = term ; <nl> this . tokens = new TreeMap < > ( ) ; <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> RangeIterator < Long , Token > tokens = term . getTokens ( ) ; <nl> while ( tokens . hasNext ( ) ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / CombinedTermIterator . java b / src / java / org / apache / cassandra / index / sasi / utils / CombinedTermIterator . java <nl> index 06c27bf . . c29de06 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / utils / CombinedTermIterator . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / utils / CombinedTermIterator . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import org . apache . cassandra . index . sasi . sa . TermIterator ; <nl> import org . apache . cassandra . db . marshal . AbstractType ; <nl> import org . apache . cassandra . utils . Pair ; <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> public class CombinedTermIterator extends TermIterator <nl> { <nl> final Descriptor descriptor ; <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / RangeIntersectionIterator . java b / src / java / org / apache / cassandra / index / sasi / utils / RangeIntersectionIterator . java <nl> index 0d2214a . . 02d9527 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / utils / RangeIntersectionIterator . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / utils / RangeIntersectionIterator . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import org . apache . cassandra . io . util . FileUtils ; <nl> <nl> import com . google . common . annotations . VisibleForTesting ; <nl> <nl> + @ SuppressWarnings ( " resource " ) <nl> public class RangeIntersectionIterator <nl> { <nl> protected enum Strategy <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / RangeUnionIterator . java b / src / java / org / apache / cassandra / index / sasi / utils / RangeUnionIterator . java <nl> index 310b6d0 . . 4be460c 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / utils / RangeUnionIterator . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / utils / RangeUnionIterator . java <nl> @ @ - 36 , 6 + 36 , 7 @ @ import org . apache . cassandra . io . util . FileUtils ; <nl> * @ param < K > The type used to sort ranges . <nl> * @ param < D > The container type which is going to be returned by { @ link Iterator # next ( ) } . <nl> * / <nl> + @ SuppressWarnings ( " resource " ) <nl> public class RangeUnionIterator < K extends Comparable < K > , D extends CombinedValue < K > > extends RangeIterator < K , D > <nl> { <nl> private final PriorityQueue < RangeIterator < K , D > > ranges ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 8baf41f . . f5da722 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 57 , 7 + 57 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> private static Logger logger _ = Logger . getLogger ( ColumnFamilyStore . class ) ; <nl> <nl> private static final int BUFSIZE = 128 * 1024 * 1024 ; <nl> - private static final int COMPACTION _ MEMORY _ THRESHOLD = 1 < < 30 ; <nl> <nl> private static NonBlockingHashMap < String , Set < Memtable > > memtablesPendingFlush = new NonBlockingHashMap < String , Set < Memtable > > ( ) ; <nl> private static ExecutorService flusher _ = new DebuggableThreadPoolExecutor ( " MEMTABLE - FLUSHER - POOL " ) ; <nl> @ @ - 902 , 7 + 901 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> long totalkeysWritten = 0 ; <nl> String rangeFileLocation ; <nl> String mergedFileName ; <nl> - IPartitioner p = StorageService . getPartitioner ( ) ; <nl> / / Calculate the expected compacted filesize <nl> long expectedRangeFileSize = getExpectedCompactedFileSize ( files ) ; <nl> / * in the worst case a node will be giving out half of its data so we take a chance * / <nl> @ @ - 1378 , 7 + 1376 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> / / if we are querying subcolumns of a supercolumn , fetch the supercolumn with NQF , then filter in - memory . <nl> if ( filter . path . superColumnName ! = null ) <nl> { <nl> - AbstractType comparator = DatabaseDescriptor . getComparator ( table _ , columnFamily _ ) ; <nl> QueryFilter nameFilter = new NamesQueryFilter ( filter . key , new QueryPath ( columnFamily _ ) , filter . path . superColumnName ) ; <nl> ColumnFamily cf = getColumnFamily ( nameFilter ) ; <nl> if ( cf ! = null ) <nl> diff - - git a / src / java / org / apache / cassandra / db / CommitLog . java b / src / java / org / apache / cassandra / db / CommitLog . java <nl> index 92d777e . . a82f762 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CommitLog . java <nl> + + + b / src / java / org / apache / cassandra / db / CommitLog . java <nl> @ @ - 101 , 13 + 101 , 6 @ @ public class CommitLog <nl> { <nl> return ( int ) ( getCreationTime ( f ) - getCreationTime ( f2 ) ) ; <nl> } <nl> - <nl> - public boolean equals ( Object o ) <nl> - { <nl> - if ( ! ( o instanceof CommitLogFileComparator ) ) <nl> - return false ; <nl> - return true ; <nl> - } <nl> } <nl> <nl> public static void setSegmentSize ( int size ) <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / BytesType . java b / src / java / org / apache / cassandra / db / marshal / BytesType . java <nl> index da5c070 . . 3633849 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / BytesType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / BytesType . java <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> package org . apache . cassandra . db . marshal ; <nl> <nl> + import java . util . Arrays ; <nl> + <nl> public class BytesType extends AbstractType <nl> { <nl> public int compare ( byte [ ] o1 , byte [ ] o2 ) <nl> @ @ - 28 , 6 + 30 , 6 @ @ public class BytesType extends AbstractType <nl> <nl> public String getString ( byte [ ] bytes ) <nl> { <nl> - return bytes . toString ( ) ; <nl> + return Arrays . toString ( bytes ) ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / LongType . java b / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> index a458274 . . efa3718 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> @ @ - 18 , 7 + 18 , 7 @ @ public class LongType extends AbstractType <nl> <nl> long L1 = ByteBuffer . wrap ( o1 ) . order ( ByteOrder . LITTLE _ ENDIAN ) . getLong ( ) ; <nl> long L2 = ByteBuffer . wrap ( o2 ) . order ( ByteOrder . LITTLE _ ENDIAN ) . getLong ( ) ; <nl> - return new Long ( L1 ) . compareTo ( L2 ) ; <nl> + return Long . valueOf ( L1 ) . compareTo ( Long . valueOf ( L2 ) ) ; <nl> } <nl> <nl> public String getString ( byte [ ] bytes ) <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java b / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java <nl> index f7c57f6 . . 6b3d16f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java <nl> @ @ - 1 , 7 + 1 , 6 @ @ <nl> package org . apache . cassandra . db . marshal ; <nl> <nl> import java . util . UUID ; <nl> - import java . nio . ByteBuffer ; <nl> <nl> public class TimeUUIDType extends AbstractType <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / dht / BootStrapper . java b / src / java / org / apache / cassandra / dht / BootStrapper . java <nl> index 7059cd9 . . 01e1766 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / BootStrapper . java <nl> + + + b / src / java / org / apache / cassandra / dht / BootStrapper . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> package org . apache . cassandra . dht ; <nl> <nl> import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . HashSet ; <nl> @ @ - 31 , 7 + 32 , 7 @ @ package org . apache . cassandra . dht ; <nl> import org . apache . cassandra . locator . TokenMetadata ; <nl> import org . apache . cassandra . net . EndPoint ; <nl> import org . apache . cassandra . service . StorageService ; <nl> - import org . apache . cassandra . utils . LogUtil ; <nl> + import org . apache . cassandra . utils . LogUtil ; <nl> <nl> <nl> / * * <nl> @ @ - 59 , 7 + 60 , 7 @ @ public class BootStrapper implements Runnable <nl> try <nl> { <nl> if ( logger _ . isDebugEnabled ( ) ) <nl> - logger _ . debug ( " Beginning bootstrap process for " + targets _ + " . . . " ) ; <nl> + logger _ . debug ( " Beginning bootstrap process for " + Arrays . toString ( targets _ ) + " . . . " ) ; <nl> / * copy the token to endpoint map * / <nl> Map < Token , EndPoint > tokenToEndPointMap = tokenMetadata _ . cloneTokenEndPointMap ( ) ; <nl> / * remove the tokens associated with the endpoints being bootstrapped * / <nl> diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadata . java b / src / java / org / apache / cassandra / dht / BootstrapMetadata . java <nl> index 34126b2 . . e7b09a7 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadata . java <nl> + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadata . java <nl> @ @ - 55 , 6 + 55 , 8 @ @ class BootstrapMetadata <nl> <nl> BootstrapMetadata ( EndPoint target , List < Range > ranges ) <nl> { <nl> + assert target _ ! = null ; <nl> + assert ranges _ ! = null ; <nl> target _ = target ; <nl> ranges _ = ranges ; <nl> } <nl> @ @ - 78 , 13 + 80 , 11 @ @ class BootstrapMetadataSerializer implements ICompactSerializer < BootstrapMetadat <nl> public void serialize ( BootstrapMetadata bsMetadata , DataOutputStream dos ) throws IOException <nl> { <nl> CompactEndPointSerializationHelper . serialize ( bsMetadata . target _ , dos ) ; <nl> - int size = ( bsMetadata . ranges _ = = null ) ? 0 : bsMetadata . ranges _ . size ( ) ; <nl> - dos . writeInt ( size ) ; <nl> - <nl> - for ( Range range : bsMetadata . ranges _ ) <nl> + dos . writeInt ( bsMetadata . ranges _ . size ( ) ) ; <nl> + for ( Range range : bsMetadata . ranges _ ) <nl> { <nl> Range . serializer ( ) . serialize ( range , dos ) ; <nl> - } <nl> + } <nl> } <nl> <nl> public BootstrapMetadata deserialize ( DataInputStream dis ) throws IOException <nl> diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java b / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java <nl> index 341d72e . . a786cab 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java <nl> + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java <nl> @ @ - 60 , 6 + 60 , 7 @ @ class BootstrapMetadataMessage <nl> <nl> BootstrapMetadataMessage ( BootstrapMetadata [ ] bsMetadata ) <nl> { <nl> + assert bsMetadata ! = null ; <nl> bsMetadata _ = bsMetadata ; <nl> } <nl> } <nl> @ @ - 69 , 9 + 70 , 8 @ @ class BootstrapMetadataMessageSerializer implements ICompactSerializer < Bootstrap <nl> public void serialize ( BootstrapMetadataMessage bsMetadataMessage , DataOutputStream dos ) throws IOException <nl> { <nl> BootstrapMetadata [ ] bsMetadata = bsMetadataMessage . bsMetadata _ ; <nl> - int size = ( bsMetadata = = null ) ? 0 : bsMetadata . length ; <nl> - dos . writeInt ( size ) ; <nl> - for ( BootstrapMetadata bsmd : bsMetadata ) <nl> + dos . writeInt ( bsMetadata . length ) ; <nl> + for ( BootstrapMetadata bsmd : bsMetadata ) <nl> { <nl> BootstrapMetadata . serializer ( ) . serialize ( bsmd , dos ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / ConsistencyManager . java b / src / java / org / apache / cassandra / service / ConsistencyManager . java <nl> index 94f9d3d . . 69c3296 100644 <nl> - - - a / src / java / org / apache / cassandra / service / ConsistencyManager . java <nl> + + + b / src / java / org / apache / cassandra / service / ConsistencyManager . java <nl> @ @ - 98 , 7 + 98 , 7 @ @ class ConsistencyManager implements Runnable <nl> 	 	 } <nl> 	 } <nl> 	 <nl> - 	 class DataRepairHandler implements IAsyncCallback , ICacheExpungeHook < String , String > <nl> + 	 static class DataRepairHandler implements IAsyncCallback , ICacheExpungeHook < String , String > <nl> 	 { <nl> 	 	 private List < Message > responses _ = new ArrayList < Message > ( ) ; <nl> 	 	 private IResponseResolver < Row > readResponseResolver _ ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / MembershipCleaner . java b / src / java / org / apache / cassandra / tools / MembershipCleaner . java <nl> index 28775f8 . . 71db3ee 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / MembershipCleaner . java <nl> + + + b / src / java / org / apache / cassandra / tools / MembershipCleaner . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public class MembershipCleaner <nl> { <nl> if ( args . length ! = 3 ) <nl> { <nl> - System . out . println ( " Usage : java com . facebook . infrastructure . tools . MembershipCleaner " + <nl> + System . out . println ( " Usage : java org . apache . cassandra . tools . MembershipCleaner " + <nl> " < ip : port to send the message > " + <nl> " < node which needs to be removed > " + <nl> " < file containing all nodes in the cluster > " ) ; <nl> @ @ - 82 , 7 + 82 , 6 @ @ public class MembershipCleaner <nl> public static class MembershipCleanerMessage implements Serializable <nl> { <nl> private static ICompactSerializer < MembershipCleanerMessage > serializer _ ; <nl> - private static AtomicInteger idGen _ = new AtomicInteger ( 0 ) ; <nl> <nl> static <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java b / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java <nl> index b34db74 . . 610b5e8 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java <nl> + + + b / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java <nl> @ @ - 69 , 7 + 69 , 7 @ @ public class MembershipCleanerVerbHandler implements IVerbHandler <nl> { <nl> if ( logger _ . isDebugEnabled ( ) ) <nl> logger _ . debug ( " Processing node " + node ) ; <nl> - byte [ ] bytes = headers . remove ( node ) ; <nl> + headers . remove ( node ) ; <nl> / * Send a message to this node to alter its membership state . * / <nl> EndPoint targetNode = new EndPoint ( node , DatabaseDescriptor . getStoragePort ( ) ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / utils / FileUtils . java b / src / java / org / apache / cassandra / utils / FileUtils . java <nl> index a29f2a8 . . 3110d04 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FileUtils . java <nl> + + + b / src / java / org / apache / cassandra / utils / FileUtils . java <nl> @ @ - 88 , 13 + 88 , 6 @ @ public class FileUtils <nl> { <nl> return ( int ) ( f . lastModified ( ) - f2 . lastModified ( ) ) ; <nl> } <nl> - <nl> - public boolean equals ( Object o ) <nl> - { <nl> - if ( ! ( o instanceof FileComparator ) ) <nl> - return false ; <nl> - return true ; <nl> - } <nl> } <nl> <nl> public static void createDirectory ( String directory ) throws IOException

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index cd9d8d9 . . b4ce53d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 6 
 + * Resolve some eclipse - warnings ( CASSANDRA - 11086 ) 
 * ( cqlsh ) Show static columns in a different color ( CASSANDRA - 11059 ) 
 * Allow to remove TTLs on table with default _ time _ to _ live ( CASSANDRA - 11207 ) 
 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / TermIterator . java b / src / java / org / apache / cassandra / index / sasi / TermIterator . java 
 index cfa87c0 . . d2db88c 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / TermIterator . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / TermIterator . java 
 @ @ - 79 , 6 + 79 , 7 @ @ public class TermIterator extends RangeIterator < Long , Token > 
 this . referencedIndexes = referencedIndexes ; 
 } 
 
 + @ SuppressWarnings ( " resource " ) 
 public static TermIterator build ( final Expression e , Set < SSTableIndex > perSSTableIndexes ) 
 { 
 final List < RangeIterator < Long , Token > > tokens = new CopyOnWriteArrayList < > ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskBlock . java b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskBlock . java 
 index 32cda53 . . e335b50 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskBlock . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskBlock . java 
 @ @ - 81 , 6 + 81 , 7 @ @ public abstract class OnDiskBlock < T extends Term > 
 return new SearchResult < > ( element , cmp , middle ) ; 
 } 
 
 + @ SuppressWarnings ( " resource " ) 
 protected T getTerm ( int index ) 
 { 
 MappedBuffer dup = blockIndex . duplicate ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndex . java b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndex . java 
 index a84e8bf . . ef487f1 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndex . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndex . java 
 @ @ - 114 , 6 + 114 , 7 @ @ public class OnDiskIndex implements Iterable < OnDiskIndex . DataTerm > , Closeable 
 
 protected final ByteBuffer minTerm , maxTerm , minKey , maxKey ; 
 
 + @ SuppressWarnings ( " resource " ) 
 public OnDiskIndex ( File index , AbstractType < ? > cmp , Function < Long , DecoratedKey > keyReader ) 
 { 
 keyFetcher = keyReader ; 
 @ @ - 256 , 6 + 257 , 7 @ @ public class OnDiskIndex implements Iterable < OnDiskIndex . DataTerm > , Closeable 
 RangeUnionIterator . Builder < Long , Token > builder = RangeUnionIterator . builder ( ) ; 
 for ( Expression e : ranges ) 
 { 
 + @ SuppressWarnings ( " resource " ) 
 RangeIterator < Long , Token > range = searchRange ( e ) ; 
 if ( range ! = null ) 
 builder . add ( range ) ; 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndexBuilder . java b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndexBuilder . java 
 index 04b7b1c . . 5adecf8 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndexBuilder . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / disk / OnDiskIndexBuilder . java 
 @ @ - 245 , 6 + 245 , 7 @ @ public class OnDiskIndexBuilder 
 return true ; 
 } 
 
 + @ SuppressWarnings ( " resource " ) 
 protected void finish ( Descriptor descriptor , Pair < ByteBuffer , ByteBuffer > range , File file , TermIterator terms ) 
 { 
 SequentialWriter out = null ; 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / disk / PerSSTableIndexWriter . java b / src / java / org / apache / cassandra / index / sasi / disk / PerSSTableIndexWriter . java 
 index 6e63c71 . . 018900e 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / disk / PerSSTableIndexWriter . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / disk / PerSSTableIndexWriter . java 
 @ @ - 281 , 6 + 281 , 7 @ @ public class PerSSTableIndexWriter implements SSTableFlushObserver 
 / / parts are present but there is something still in memory , let ' s flush that inline 
 if ( ! currentBuilder . isEmpty ( ) ) 
 { 
 + @ SuppressWarnings ( " resource " ) 
 OnDiskIndex last = scheduleSegmentFlush ( false ) . call ( ) ; 
 segments . add ( Futures . immediateFuture ( last ) ) ; 
 } 
 @ @ - 290 , 6 + 291 , 7 @ @ public class PerSSTableIndexWriter implements SSTableFlushObserver 
 
 for ( Future < OnDiskIndex > f : segments ) 
 { 
 + @ SuppressWarnings ( " resource " ) 
 OnDiskIndex part = Futures . getUnchecked ( f ) ; 
 if ( part = = null ) 
 continue ; 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / plan / Operation . java b / src / java / org / apache / cassandra / index / sasi / plan / Operation . java 
 index f8b02a3 . . 6f0904c 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / plan / Operation . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / plan / Operation . java 
 @ @ - 39 , 6 + 39 , 7 @ @ import com . google . common . annotations . VisibleForTesting ; 
 import com . google . common . collect . * ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 
 + @ SuppressWarnings ( " resource " ) 
 public class Operation extends RangeIterator < Long , Token > 
 { 
 public enum OperationType 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / CombinedTerm . java b / src / java / org / apache / cassandra / index / sasi / utils / CombinedTerm . java 
 index 2bf5a07 . . 0131d46 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / utils / CombinedTerm . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / utils / CombinedTerm . java 
 @ @ - 43 , 6 + 43 , 7 @ @ public class CombinedTerm implements CombinedValue < DataTerm > 
 this . term = term ; 
 this . tokens = new TreeMap < > ( ) ; 
 
 + @ SuppressWarnings ( " resource " ) 
 RangeIterator < Long , Token > tokens = term . getTokens ( ) ; 
 while ( tokens . hasNext ( ) ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / CombinedTermIterator . java b / src / java / org / apache / cassandra / index / sasi / utils / CombinedTermIterator . java 
 index 06c27bf . . c29de06 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / utils / CombinedTermIterator . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / utils / CombinedTermIterator . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import org . apache . cassandra . index . sasi . sa . TermIterator ; 
 import org . apache . cassandra . db . marshal . AbstractType ; 
 import org . apache . cassandra . utils . Pair ; 
 
 + @ SuppressWarnings ( " resource " ) 
 public class CombinedTermIterator extends TermIterator 
 { 
 final Descriptor descriptor ; 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / RangeIntersectionIterator . java b / src / java / org / apache / cassandra / index / sasi / utils / RangeIntersectionIterator . java 
 index 0d2214a . . 02d9527 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / utils / RangeIntersectionIterator . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / utils / RangeIntersectionIterator . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import org . apache . cassandra . io . util . FileUtils ; 
 
 import com . google . common . annotations . VisibleForTesting ; 
 
 + @ SuppressWarnings ( " resource " ) 
 public class RangeIntersectionIterator 
 { 
 protected enum Strategy 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / RangeUnionIterator . java b / src / java / org / apache / cassandra / index / sasi / utils / RangeUnionIterator . java 
 index 310b6d0 . . 4be460c 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / utils / RangeUnionIterator . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / utils / RangeUnionIterator . java 
 @ @ - 36 , 6 + 36 , 7 @ @ import org . apache . cassandra . io . util . FileUtils ; 
 * @ param < K > The type used to sort ranges . 
 * @ param < D > The container type which is going to be returned by { @ link Iterator # next ( ) } . 
 * / 
 + @ SuppressWarnings ( " resource " ) 
 public class RangeUnionIterator < K extends Comparable < K > , D extends CombinedValue < K > > extends RangeIterator < K , D > 
 { 
 private final PriorityQueue < RangeIterator < K , D > > ranges ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 8baf41f . . f5da722 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 57 , 7 + 57 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 private static Logger logger _ = Logger . getLogger ( ColumnFamilyStore . class ) ; 
 
 private static final int BUFSIZE = 128 * 1024 * 1024 ; 
 - private static final int COMPACTION _ MEMORY _ THRESHOLD = 1 < < 30 ; 
 
 private static NonBlockingHashMap < String , Set < Memtable > > memtablesPendingFlush = new NonBlockingHashMap < String , Set < Memtable > > ( ) ; 
 private static ExecutorService flusher _ = new DebuggableThreadPoolExecutor ( " MEMTABLE - FLUSHER - POOL " ) ; 
 @ @ - 902 , 7 + 901 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 long totalkeysWritten = 0 ; 
 String rangeFileLocation ; 
 String mergedFileName ; 
 - IPartitioner p = StorageService . getPartitioner ( ) ; 
 / / Calculate the expected compacted filesize 
 long expectedRangeFileSize = getExpectedCompactedFileSize ( files ) ; 
 / * in the worst case a node will be giving out half of its data so we take a chance * / 
 @ @ - 1378 , 7 + 1376 , 6 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 / / if we are querying subcolumns of a supercolumn , fetch the supercolumn with NQF , then filter in - memory . 
 if ( filter . path . superColumnName ! = null ) 
 { 
 - AbstractType comparator = DatabaseDescriptor . getComparator ( table _ , columnFamily _ ) ; 
 QueryFilter nameFilter = new NamesQueryFilter ( filter . key , new QueryPath ( columnFamily _ ) , filter . path . superColumnName ) ; 
 ColumnFamily cf = getColumnFamily ( nameFilter ) ; 
 if ( cf ! = null ) 
 diff - - git a / src / java / org / apache / cassandra / db / CommitLog . java b / src / java / org / apache / cassandra / db / CommitLog . java 
 index 92d777e . . a82f762 100644 
 - - - a / src / java / org / apache / cassandra / db / CommitLog . java 
 + + + b / src / java / org / apache / cassandra / db / CommitLog . java 
 @ @ - 101 , 13 + 101 , 6 @ @ public class CommitLog 
 { 
 return ( int ) ( getCreationTime ( f ) - getCreationTime ( f2 ) ) ; 
 } 
 - 
 - public boolean equals ( Object o ) 
 - { 
 - if ( ! ( o instanceof CommitLogFileComparator ) ) 
 - return false ; 
 - return true ; 
 - } 
 } 
 
 public static void setSegmentSize ( int size ) 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / BytesType . java b / src / java / org / apache / cassandra / db / marshal / BytesType . java 
 index da5c070 . . 3633849 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / BytesType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / BytesType . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package org . apache . cassandra . db . marshal ; 
 
 + import java . util . Arrays ; 
 + 
 public class BytesType extends AbstractType 
 { 
 public int compare ( byte [ ] o1 , byte [ ] o2 ) 
 @ @ - 28 , 6 + 30 , 6 @ @ public class BytesType extends AbstractType 
 
 public String getString ( byte [ ] bytes ) 
 { 
 - return bytes . toString ( ) ; 
 + return Arrays . toString ( bytes ) ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / LongType . java b / src / java / org / apache / cassandra / db / marshal / LongType . java 
 index a458274 . . efa3718 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / LongType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / LongType . java 
 @ @ - 18 , 7 + 18 , 7 @ @ public class LongType extends AbstractType 
 
 long L1 = ByteBuffer . wrap ( o1 ) . order ( ByteOrder . LITTLE _ ENDIAN ) . getLong ( ) ; 
 long L2 = ByteBuffer . wrap ( o2 ) . order ( ByteOrder . LITTLE _ ENDIAN ) . getLong ( ) ; 
 - return new Long ( L1 ) . compareTo ( L2 ) ; 
 + return Long . valueOf ( L1 ) . compareTo ( Long . valueOf ( L2 ) ) ; 
 } 
 
 public String getString ( byte [ ] bytes ) 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java b / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java 
 index f7c57f6 . . 6b3d16f 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / TimeUUIDType . java 
 @ @ - 1 , 7 + 1 , 6 @ @ 
 package org . apache . cassandra . db . marshal ; 
 
 import java . util . UUID ; 
 - import java . nio . ByteBuffer ; 
 
 public class TimeUUIDType extends AbstractType 
 { 
 diff - - git a / src / java / org / apache / cassandra / dht / BootStrapper . java b / src / java / org / apache / cassandra / dht / BootStrapper . java 
 index 7059cd9 . . 01e1766 100644 
 - - - a / src / java / org / apache / cassandra / dht / BootStrapper . java 
 + + + b / src / java / org / apache / cassandra / dht / BootStrapper . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 package org . apache . cassandra . dht ; 
 
 import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 import java . util . Collections ; 
 import java . util . HashMap ; 
 import java . util . HashSet ; 
 @ @ - 31 , 7 + 32 , 7 @ @ package org . apache . cassandra . dht ; 
 import org . apache . cassandra . locator . TokenMetadata ; 
 import org . apache . cassandra . net . EndPoint ; 
 import org . apache . cassandra . service . StorageService ; 
 - import org . apache . cassandra . utils . LogUtil ; 
 + import org . apache . cassandra . utils . LogUtil ; 
 
 
 / * * 
 @ @ - 59 , 7 + 60 , 7 @ @ public class BootStrapper implements Runnable 
 try 
 { 
 if ( logger _ . isDebugEnabled ( ) ) 
 - logger _ . debug ( " Beginning bootstrap process for " + targets _ + " . . . " ) ; 
 + logger _ . debug ( " Beginning bootstrap process for " + Arrays . toString ( targets _ ) + " . . . " ) ; 
 / * copy the token to endpoint map * / 
 Map < Token , EndPoint > tokenToEndPointMap = tokenMetadata _ . cloneTokenEndPointMap ( ) ; 
 / * remove the tokens associated with the endpoints being bootstrapped * / 
 diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadata . java b / src / java / org / apache / cassandra / dht / BootstrapMetadata . java 
 index 34126b2 . . e7b09a7 100644 
 - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadata . java 
 + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadata . java 
 @ @ - 55 , 6 + 55 , 8 @ @ class BootstrapMetadata 
 
 BootstrapMetadata ( EndPoint target , List < Range > ranges ) 
 { 
 + assert target _ ! = null ; 
 + assert ranges _ ! = null ; 
 target _ = target ; 
 ranges _ = ranges ; 
 } 
 @ @ - 78 , 13 + 80 , 11 @ @ class BootstrapMetadataSerializer implements ICompactSerializer < BootstrapMetadat 
 public void serialize ( BootstrapMetadata bsMetadata , DataOutputStream dos ) throws IOException 
 { 
 CompactEndPointSerializationHelper . serialize ( bsMetadata . target _ , dos ) ; 
 - int size = ( bsMetadata . ranges _ = = null ) ? 0 : bsMetadata . ranges _ . size ( ) ; 
 - dos . writeInt ( size ) ; 
 - 
 - for ( Range range : bsMetadata . ranges _ ) 
 + dos . writeInt ( bsMetadata . ranges _ . size ( ) ) ; 
 + for ( Range range : bsMetadata . ranges _ ) 
 { 
 Range . serializer ( ) . serialize ( range , dos ) ; 
 - } 
 + } 
 } 
 
 public BootstrapMetadata deserialize ( DataInputStream dis ) throws IOException 
 diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java b / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java 
 index 341d72e . . a786cab 100644 
 - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java 
 + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadataMessage . java 
 @ @ - 60 , 6 + 60 , 7 @ @ class BootstrapMetadataMessage 
 
 BootstrapMetadataMessage ( BootstrapMetadata [ ] bsMetadata ) 
 { 
 + assert bsMetadata ! = null ; 
 bsMetadata _ = bsMetadata ; 
 } 
 } 
 @ @ - 69 , 9 + 70 , 8 @ @ class BootstrapMetadataMessageSerializer implements ICompactSerializer < Bootstrap 
 public void serialize ( BootstrapMetadataMessage bsMetadataMessage , DataOutputStream dos ) throws IOException 
 { 
 BootstrapMetadata [ ] bsMetadata = bsMetadataMessage . bsMetadata _ ; 
 - int size = ( bsMetadata = = null ) ? 0 : bsMetadata . length ; 
 - dos . writeInt ( size ) ; 
 - for ( BootstrapMetadata bsmd : bsMetadata ) 
 + dos . writeInt ( bsMetadata . length ) ; 
 + for ( BootstrapMetadata bsmd : bsMetadata ) 
 { 
 BootstrapMetadata . serializer ( ) . serialize ( bsmd , dos ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / ConsistencyManager . java b / src / java / org / apache / cassandra / service / ConsistencyManager . java 
 index 94f9d3d . . 69c3296 100644 
 - - - a / src / java / org / apache / cassandra / service / ConsistencyManager . java 
 + + + b / src / java / org / apache / cassandra / service / ConsistencyManager . java 
 @ @ - 98 , 7 + 98 , 7 @ @ class ConsistencyManager implements Runnable 
 	 	 } 
 	 } 
 	 
 - 	 class DataRepairHandler implements IAsyncCallback , ICacheExpungeHook < String , String > 
 + 	 static class DataRepairHandler implements IAsyncCallback , ICacheExpungeHook < String , String > 
 	 { 
 	 	 private List < Message > responses _ = new ArrayList < Message > ( ) ; 
 	 	 private IResponseResolver < Row > readResponseResolver _ ; 
 diff - - git a / src / java / org / apache / cassandra / tools / MembershipCleaner . java b / src / java / org / apache / cassandra / tools / MembershipCleaner . java 
 index 28775f8 . . 71db3ee 100644 
 - - - a / src / java / org / apache / cassandra / tools / MembershipCleaner . java 
 + + + b / src / java / org / apache / cassandra / tools / MembershipCleaner . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public class MembershipCleaner 
 { 
 if ( args . length ! = 3 ) 
 { 
 - System . out . println ( " Usage : java com . facebook . infrastructure . tools . MembershipCleaner " + 
 + System . out . println ( " Usage : java org . apache . cassandra . tools . MembershipCleaner " + 
 " < ip : port to send the message > " + 
 " < node which needs to be removed > " + 
 " < file containing all nodes in the cluster > " ) ; 
 @ @ - 82 , 7 + 82 , 6 @ @ public class MembershipCleaner 
 public static class MembershipCleanerMessage implements Serializable 
 { 
 private static ICompactSerializer < MembershipCleanerMessage > serializer _ ; 
 - private static AtomicInteger idGen _ = new AtomicInteger ( 0 ) ; 
 
 static 
 { 
 diff - - git a / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java b / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java 
 index b34db74 . . 610b5e8 100644 
 - - - a / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java 
 + + + b / src / java / org / apache / cassandra / tools / MembershipCleanerVerbHandler . java 
 @ @ - 69 , 7 + 69 , 7 @ @ public class MembershipCleanerVerbHandler implements IVerbHandler 
 { 
 if ( logger _ . isDebugEnabled ( ) ) 
 logger _ . debug ( " Processing node " + node ) ; 
 - byte [ ] bytes = headers . remove ( node ) ; 
 + headers . remove ( node ) ; 
 / * Send a message to this node to alter its membership state . * / 
 EndPoint targetNode = new EndPoint ( node , DatabaseDescriptor . getStoragePort ( ) ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / utils / FileUtils . java b / src / java / org / apache / cassandra / utils / FileUtils . java 
 index a29f2a8 . . 3110d04 100644 
 - - - a / src / java / org / apache / cassandra / utils / FileUtils . java 
 + + + b / src / java / org / apache / cassandra / utils / FileUtils . java 
 @ @ - 88 , 13 + 88 , 6 @ @ public class FileUtils 
 { 
 return ( int ) ( f . lastModified ( ) - f2 . lastModified ( ) ) ; 
 } 
 - 
 - public boolean equals ( Object o ) 
 - { 
 - if ( ! ( o instanceof FileComparator ) ) 
 - return false ; 
 - return true ; 
 - } 
 } 
 
 public static void createDirectory ( String directory ) throws IOException
