BLEU SCORE: 0.027611988917697356

TEST MSG: Enable client encryption in sstableloader with cli options
GENERATED MSG: stress : add username / password authentication support

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d7ca9e5 . . acdf2e9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 7 <nl> + * Enable client encryption in sstableloader with cli options ( CASSANDRA - 11708 ) <nl> * Possible memory leak in NIODataInputStream ( CASSANDRA - 11867 ) <nl> * Fix commit log replay after out - of - order flush completion ( CASSANDRA - 9669 ) <nl> * Add seconds to cqlsh tracing session duration ( CASSANDRA - 11753 ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / BulkLoader . java b / src / java / org / apache / cassandra / tools / BulkLoader . java <nl> index 6d19f5e . . 7d0fdc8 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / BulkLoader . java <nl> + + + b / src / java / org / apache / cassandra / tools / BulkLoader . java <nl> @ @ - 80 , 7 + 80 , 7 @ @ public class BulkLoader <nl> options . storagePort , <nl> options . sslStoragePort , <nl> options . serverEncOptions , <nl> - buildSSLOptions ( ( EncryptionOptions . ClientEncryptionOptions ) options . encOptions ) ) , <nl> + buildSSLOptions ( options . clientEncOptions ) ) , <nl> handler , <nl> options . connectionsPerHost ) ; <nl> DatabaseDescriptor . setStreamThroughputOutboundMegabitsPerSec ( options . throttle ) ; <nl> @ @ - 313 , 7 + 313 , 7 @ @ public class BulkLoader <nl> public int interDcThrottle = 0 ; <nl> public int storagePort ; <nl> public int sslStoragePort ; <nl> - public EncryptionOptions encOptions = new EncryptionOptions . ClientEncryptionOptions ( ) ; <nl> + public EncryptionOptions . ClientEncryptionOptions clientEncOptions = new EncryptionOptions . ClientEncryptionOptions ( ) ; <nl> public int connectionsPerHost = 1 ; <nl> public EncryptionOptions . ServerEncryptionOptions serverEncOptions = new EncryptionOptions . ServerEncryptionOptions ( ) ; <nl> <nl> @ @ - 442 , 7 + 442 , 7 @ @ public class BulkLoader <nl> opts . sslStoragePort = config . ssl _ storage _ port ; <nl> opts . throttle = config . stream _ throughput _ outbound _ megabits _ per _ sec ; <nl> opts . interDcThrottle = config . inter _ dc _ stream _ throughput _ outbound _ megabits _ per _ sec ; <nl> - opts . encOptions = config . client _ encryption _ options ; <nl> + opts . clientEncOptions = config . client _ encryption _ options ; <nl> opts . serverEncOptions = config . server _ encryption _ options ; <nl> <nl> if ( cmd . hasOption ( THROTTLE _ MBITS ) ) <nl> @ @ - 455 , 46 + 455 , 52 @ @ public class BulkLoader <nl> opts . interDcThrottle = Integer . parseInt ( cmd . getOptionValue ( INTER _ DC _ THROTTLE _ MBITS ) ) ; <nl> } <nl> <nl> + if ( cmd . hasOption ( SSL _ TRUSTSTORE ) | | cmd . hasOption ( SSL _ TRUSTSTORE _ PW ) | | <nl> + cmd . hasOption ( SSL _ KEYSTORE ) | | cmd . hasOption ( SSL _ KEYSTORE _ PW ) ) <nl> + { <nl> + opts . clientEncOptions . enabled = true ; <nl> + } <nl> + <nl> if ( cmd . hasOption ( SSL _ TRUSTSTORE ) ) <nl> { <nl> - opts . encOptions . truststore = cmd . getOptionValue ( SSL _ TRUSTSTORE ) ; <nl> + opts . clientEncOptions . truststore = cmd . getOptionValue ( SSL _ TRUSTSTORE ) ; <nl> } <nl> <nl> if ( cmd . hasOption ( SSL _ TRUSTSTORE _ PW ) ) <nl> { <nl> - opts . encOptions . truststore _ password = cmd . getOptionValue ( SSL _ TRUSTSTORE _ PW ) ; <nl> + opts . clientEncOptions . truststore _ password = cmd . getOptionValue ( SSL _ TRUSTSTORE _ PW ) ; <nl> } <nl> <nl> if ( cmd . hasOption ( SSL _ KEYSTORE ) ) <nl> { <nl> - opts . encOptions . keystore = cmd . getOptionValue ( SSL _ KEYSTORE ) ; <nl> + opts . clientEncOptions . keystore = cmd . getOptionValue ( SSL _ KEYSTORE ) ; <nl> / / if a keystore was provided , lets assume we ' ll need to use it <nl> - opts . encOptions . require _ client _ auth = true ; <nl> + opts . clientEncOptions . require _ client _ auth = true ; <nl> } <nl> <nl> if ( cmd . hasOption ( SSL _ KEYSTORE _ PW ) ) <nl> { <nl> - opts . encOptions . keystore _ password = cmd . getOptionValue ( SSL _ KEYSTORE _ PW ) ; <nl> + opts . clientEncOptions . keystore _ password = cmd . getOptionValue ( SSL _ KEYSTORE _ PW ) ; <nl> } <nl> <nl> if ( cmd . hasOption ( SSL _ PROTOCOL ) ) <nl> { <nl> - opts . encOptions . protocol = cmd . getOptionValue ( SSL _ PROTOCOL ) ; <nl> + opts . clientEncOptions . protocol = cmd . getOptionValue ( SSL _ PROTOCOL ) ; <nl> } <nl> <nl> if ( cmd . hasOption ( SSL _ ALGORITHM ) ) <nl> { <nl> - opts . encOptions . algorithm = cmd . getOptionValue ( SSL _ ALGORITHM ) ; <nl> + opts . clientEncOptions . algorithm = cmd . getOptionValue ( SSL _ ALGORITHM ) ; <nl> } <nl> <nl> if ( cmd . hasOption ( SSL _ STORE _ TYPE ) ) <nl> { <nl> - opts . encOptions . store _ type = cmd . getOptionValue ( SSL _ STORE _ TYPE ) ; <nl> + opts . clientEncOptions . store _ type = cmd . getOptionValue ( SSL _ STORE _ TYPE ) ; <nl> } <nl> <nl> if ( cmd . hasOption ( SSL _ CIPHER _ SUITES ) ) <nl> { <nl> - opts . encOptions . cipher _ suites = cmd . getOptionValue ( SSL _ CIPHER _ SUITES ) . split ( " , " ) ; <nl> + opts . clientEncOptions . cipher _ suites = cmd . getOptionValue ( SSL _ CIPHER _ SUITES ) . split ( " , " ) ; <nl> } <nl> <nl> return opts ;
NEAREST DIFF (one line): diff - - git a / NEWS . txt b / NEWS . txt <nl> index 817b170 . . da52382 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 20 , 7 + 20 , 7 @ @ using the provided ' sstableupgrade ' tool . <nl> New features <nl> - - - - - - - - - - - - <nl> - Speculative retry defaults to 99th percentile <nl> - ( See blog post at TODO ) <nl> + ( See blog post at http : / / www . datastax . com / dev / blog / rapid - read - protection - in - cassandra - 2 - 0 - 2 ) <nl> - Configurable metrics reporting <nl> ( see conf / metrics - reporter - config - sample . yaml ) <nl> - Compaction history and stats are now saved to system keyspace <nl> @ @ - 43 , 6 + 43 , 7 @ @ Upgrading <nl> <nl> Upgrading <nl> - - - - - - - - - <nl> + - Java 7 is now * required * ! <nl> - Upgrading is ONLY supported from Cassandra 1 . 2 . 9 or later . This <nl> goes for sstable compatibility as well as network . When <nl> upgrading from an earlier release , upgrade to 1 . 2 . 9 first and

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d7ca9e5 . . acdf2e9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 7 
 + * Enable client encryption in sstableloader with cli options ( CASSANDRA - 11708 ) 
 * Possible memory leak in NIODataInputStream ( CASSANDRA - 11867 ) 
 * Fix commit log replay after out - of - order flush completion ( CASSANDRA - 9669 ) 
 * Add seconds to cqlsh tracing session duration ( CASSANDRA - 11753 ) 
 diff - - git a / src / java / org / apache / cassandra / tools / BulkLoader . java b / src / java / org / apache / cassandra / tools / BulkLoader . java 
 index 6d19f5e . . 7d0fdc8 100644 
 - - - a / src / java / org / apache / cassandra / tools / BulkLoader . java 
 + + + b / src / java / org / apache / cassandra / tools / BulkLoader . java 
 @ @ - 80 , 7 + 80 , 7 @ @ public class BulkLoader 
 options . storagePort , 
 options . sslStoragePort , 
 options . serverEncOptions , 
 - buildSSLOptions ( ( EncryptionOptions . ClientEncryptionOptions ) options . encOptions ) ) , 
 + buildSSLOptions ( options . clientEncOptions ) ) , 
 handler , 
 options . connectionsPerHost ) ; 
 DatabaseDescriptor . setStreamThroughputOutboundMegabitsPerSec ( options . throttle ) ; 
 @ @ - 313 , 7 + 313 , 7 @ @ public class BulkLoader 
 public int interDcThrottle = 0 ; 
 public int storagePort ; 
 public int sslStoragePort ; 
 - public EncryptionOptions encOptions = new EncryptionOptions . ClientEncryptionOptions ( ) ; 
 + public EncryptionOptions . ClientEncryptionOptions clientEncOptions = new EncryptionOptions . ClientEncryptionOptions ( ) ; 
 public int connectionsPerHost = 1 ; 
 public EncryptionOptions . ServerEncryptionOptions serverEncOptions = new EncryptionOptions . ServerEncryptionOptions ( ) ; 
 
 @ @ - 442 , 7 + 442 , 7 @ @ public class BulkLoader 
 opts . sslStoragePort = config . ssl _ storage _ port ; 
 opts . throttle = config . stream _ throughput _ outbound _ megabits _ per _ sec ; 
 opts . interDcThrottle = config . inter _ dc _ stream _ throughput _ outbound _ megabits _ per _ sec ; 
 - opts . encOptions = config . client _ encryption _ options ; 
 + opts . clientEncOptions = config . client _ encryption _ options ; 
 opts . serverEncOptions = config . server _ encryption _ options ; 
 
 if ( cmd . hasOption ( THROTTLE _ MBITS ) ) 
 @ @ - 455 , 46 + 455 , 52 @ @ public class BulkLoader 
 opts . interDcThrottle = Integer . parseInt ( cmd . getOptionValue ( INTER _ DC _ THROTTLE _ MBITS ) ) ; 
 } 
 
 + if ( cmd . hasOption ( SSL _ TRUSTSTORE ) | | cmd . hasOption ( SSL _ TRUSTSTORE _ PW ) | | 
 + cmd . hasOption ( SSL _ KEYSTORE ) | | cmd . hasOption ( SSL _ KEYSTORE _ PW ) ) 
 + { 
 + opts . clientEncOptions . enabled = true ; 
 + } 
 + 
 if ( cmd . hasOption ( SSL _ TRUSTSTORE ) ) 
 { 
 - opts . encOptions . truststore = cmd . getOptionValue ( SSL _ TRUSTSTORE ) ; 
 + opts . clientEncOptions . truststore = cmd . getOptionValue ( SSL _ TRUSTSTORE ) ; 
 } 
 
 if ( cmd . hasOption ( SSL _ TRUSTSTORE _ PW ) ) 
 { 
 - opts . encOptions . truststore _ password = cmd . getOptionValue ( SSL _ TRUSTSTORE _ PW ) ; 
 + opts . clientEncOptions . truststore _ password = cmd . getOptionValue ( SSL _ TRUSTSTORE _ PW ) ; 
 } 
 
 if ( cmd . hasOption ( SSL _ KEYSTORE ) ) 
 { 
 - opts . encOptions . keystore = cmd . getOptionValue ( SSL _ KEYSTORE ) ; 
 + opts . clientEncOptions . keystore = cmd . getOptionValue ( SSL _ KEYSTORE ) ; 
 / / if a keystore was provided , lets assume we ' ll need to use it 
 - opts . encOptions . require _ client _ auth = true ; 
 + opts . clientEncOptions . require _ client _ auth = true ; 
 } 
 
 if ( cmd . hasOption ( SSL _ KEYSTORE _ PW ) ) 
 { 
 - opts . encOptions . keystore _ password = cmd . getOptionValue ( SSL _ KEYSTORE _ PW ) ; 
 + opts . clientEncOptions . keystore _ password = cmd . getOptionValue ( SSL _ KEYSTORE _ PW ) ; 
 } 
 
 if ( cmd . hasOption ( SSL _ PROTOCOL ) ) 
 { 
 - opts . encOptions . protocol = cmd . getOptionValue ( SSL _ PROTOCOL ) ; 
 + opts . clientEncOptions . protocol = cmd . getOptionValue ( SSL _ PROTOCOL ) ; 
 } 
 
 if ( cmd . hasOption ( SSL _ ALGORITHM ) ) 
 { 
 - opts . encOptions . algorithm = cmd . getOptionValue ( SSL _ ALGORITHM ) ; 
 + opts . clientEncOptions . algorithm = cmd . getOptionValue ( SSL _ ALGORITHM ) ; 
 } 
 
 if ( cmd . hasOption ( SSL _ STORE _ TYPE ) ) 
 { 
 - opts . encOptions . store _ type = cmd . getOptionValue ( SSL _ STORE _ TYPE ) ; 
 + opts . clientEncOptions . store _ type = cmd . getOptionValue ( SSL _ STORE _ TYPE ) ; 
 } 
 
 if ( cmd . hasOption ( SSL _ CIPHER _ SUITES ) ) 
 { 
 - opts . encOptions . cipher _ suites = cmd . getOptionValue ( SSL _ CIPHER _ SUITES ) . split ( " , " ) ; 
 + opts . clientEncOptions . cipher _ suites = cmd . getOptionValue ( SSL _ CIPHER _ SUITES ) . split ( " , " ) ; 
 } 
 
 return opts ;

NEAREST DIFF:
diff - - git a / NEWS . txt b / NEWS . txt 
 index 817b170 . . da52382 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 20 , 7 + 20 , 7 @ @ using the provided ' sstableupgrade ' tool . 
 New features 
 - - - - - - - - - - - - 
 - Speculative retry defaults to 99th percentile 
 - ( See blog post at TODO ) 
 + ( See blog post at http : / / www . datastax . com / dev / blog / rapid - read - protection - in - cassandra - 2 - 0 - 2 ) 
 - Configurable metrics reporting 
 ( see conf / metrics - reporter - config - sample . yaml ) 
 - Compaction history and stats are now saved to system keyspace 
 @ @ - 43 , 6 + 43 , 7 @ @ Upgrading 
 
 Upgrading 
 - - - - - - - - - 
 + - Java 7 is now * required * ! 
 - Upgrading is ONLY supported from Cassandra 1 . 2 . 9 or later . This 
 goes for sstable compatibility as well as network . When 
 upgrading from an earlier release , upgrade to 1 . 2 . 9 first and
