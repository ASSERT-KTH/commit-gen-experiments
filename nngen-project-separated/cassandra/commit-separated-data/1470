BLEU SCORE: 0.018543295278285157

TEST MSG: Fix potential exception in SSTableIterator indexed reader
GENERATED MSG: r / m unnecessary declaration of IOException from IColumnIterator . getColumnFamily

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 56c3495 . . 7277140 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 3 , 7 + 3 , 7 @ @ <nl> * Metrics should use up to date nomenclature ( CASSANDRA - 9448 ) <nl> * Change CREATE / ALTER TABLE syntax for compression ( CASSANDRA - 8384 ) <nl> * Cleanup crc and adler code for java 8 ( CASSANDRA - 9650 ) <nl> - * Storage engine refactor ( CASSANDRA - 8099 , 9743 , 9746 , 9759 , 9781 , 9808 , 9825 , 9848 ) <nl> + * Storage engine refactor ( CASSANDRA - 8099 , 9743 , 9746 , 9759 , 9781 , 9808 , 9825 , 9848 , 9705 , 9859 ) <nl> * Update Guava to 18 . 0 ( CASSANDRA - 9653 ) <nl> * Bloom filter false positive ratio is not honoured ( CASSANDRA - 8413 ) <nl> * New option for cassandra - stress to leave a ratio of columns null ( CASSANDRA - 9522 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / columniterator / AbstractSSTableIterator . java b / src / java / org / apache / cassandra / db / columniterator / AbstractSSTableIterator . java <nl> index 8625112 . . 4a35e80 100644 <nl> - - - a / src / java / org / apache / cassandra / db / columniterator / AbstractSSTableIterator . java <nl> + + + b / src / java / org / apache / cassandra / db / columniterator / AbstractSSTableIterator . java <nl> @ @ - 456 , 7 + 456 , 7 @ @ abstract class AbstractSSTableIterator implements SliceableUnfilteredRowIterator <nl> / / Check if we ' ve crossed an index boundary ( based on the mark on the beginning of the index block ) . <nl> public boolean isPastCurrentBlock ( ) <nl> { <nl> - return currentIndexIdx < indexes . size ( ) & & reader . file . bytesPastMark ( mark ) > = currentIndex ( ) . width ; <nl> + return reader . file . bytesPastMark ( mark ) > = currentIndex ( ) . width ; <nl> } <nl> <nl> public int currentBlockIdx ( ) <nl> diff - - git a / src / java / org / apache / cassandra / db / columniterator / SSTableIterator . java b / src / java / org / apache / cassandra / db / columniterator / SSTableIterator . java <nl> index a58ea3e . . 64d33dc 100644 <nl> - - - a / src / java / org / apache / cassandra / db / columniterator / SSTableIterator . java <nl> + + + b / src / java / org / apache / cassandra / db / columniterator / SSTableIterator . java <nl> @ @ - 252 , 8 + 252 , 9 @ @ public class SSTableIterator extends AbstractSSTableIterator <nl> protected Unfiltered computeNext ( ) throws IOException <nl> { <nl> / / Our previous read might have made us cross an index block boundary . If so , update our informations . <nl> - if ( indexState . isPastCurrentBlock ( ) ) <nl> - indexState . setToBlock ( indexState . currentBlockIdx ( ) + 1 ) ; <nl> + int currentBlockIdx = indexState . currentBlockIdx ( ) ; <nl> + if ( indexState . isPastCurrentBlock ( ) & & currentBlockIdx + 1 < indexState . blocksCount ( ) ) <nl> + indexState . setToBlock ( currentBlockIdx + 1 ) ; <nl> <nl> / / Return the next unfiltered unless we ' ve reached the end , or we ' re beyond our slice <nl> / / end ( note that unless we ' re on the last block for the slice , there is no point
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6dd1fcb . . 4271551 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 22 , 6 + 22 , 7 @ @ <nl> * remove " nodetool loadbalance " ( CASSANDRA - 2448 ) <nl> * multithreaded compaction ( CASSANDRA - 2191 ) <nl> * compaction throttling ( CASSANDRA - 2156 ) <nl> + * cli no longer divides read _ repair _ chance by 100 ( CASSANDRA - 2458 ) <nl> <nl> <nl> 0 . 7 . 5 <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index f4aeb27 . . 44d0630 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 1039 , 10 + 1039 , 10 @ @ public class CliClient extends CliUserHelp <nl> cfDef . setKey _ cache _ size ( Double . parseDouble ( mValue ) ) ; <nl> break ; <nl> case READ _ REPAIR _ CHANCE : <nl> - double chance = Double . parseDouble ( mValue ) / 100 ; <nl> + double chance = Double . parseDouble ( mValue ) ; <nl> <nl> - if ( chance > 1 ) <nl> - throw new RuntimeException ( " Error : read _ repair _ chance / 100 should not be greater than 1 . " ) ; <nl> + if ( chance < 0 | | chance > 1 ) <nl> + throw new RuntimeException ( " Error : read _ repair _ chance must be between 0 and 1 . " ) ; <nl> <nl> cfDef . setRead _ repair _ chance ( chance ) ; <nl> break ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 56c3495 . . 7277140 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 3 , 7 + 3 , 7 @ @ 
 * Metrics should use up to date nomenclature ( CASSANDRA - 9448 ) 
 * Change CREATE / ALTER TABLE syntax for compression ( CASSANDRA - 8384 ) 
 * Cleanup crc and adler code for java 8 ( CASSANDRA - 9650 ) 
 - * Storage engine refactor ( CASSANDRA - 8099 , 9743 , 9746 , 9759 , 9781 , 9808 , 9825 , 9848 ) 
 + * Storage engine refactor ( CASSANDRA - 8099 , 9743 , 9746 , 9759 , 9781 , 9808 , 9825 , 9848 , 9705 , 9859 ) 
 * Update Guava to 18 . 0 ( CASSANDRA - 9653 ) 
 * Bloom filter false positive ratio is not honoured ( CASSANDRA - 8413 ) 
 * New option for cassandra - stress to leave a ratio of columns null ( CASSANDRA - 9522 ) 
 diff - - git a / src / java / org / apache / cassandra / db / columniterator / AbstractSSTableIterator . java b / src / java / org / apache / cassandra / db / columniterator / AbstractSSTableIterator . java 
 index 8625112 . . 4a35e80 100644 
 - - - a / src / java / org / apache / cassandra / db / columniterator / AbstractSSTableIterator . java 
 + + + b / src / java / org / apache / cassandra / db / columniterator / AbstractSSTableIterator . java 
 @ @ - 456 , 7 + 456 , 7 @ @ abstract class AbstractSSTableIterator implements SliceableUnfilteredRowIterator 
 / / Check if we ' ve crossed an index boundary ( based on the mark on the beginning of the index block ) . 
 public boolean isPastCurrentBlock ( ) 
 { 
 - return currentIndexIdx < indexes . size ( ) & & reader . file . bytesPastMark ( mark ) > = currentIndex ( ) . width ; 
 + return reader . file . bytesPastMark ( mark ) > = currentIndex ( ) . width ; 
 } 
 
 public int currentBlockIdx ( ) 
 diff - - git a / src / java / org / apache / cassandra / db / columniterator / SSTableIterator . java b / src / java / org / apache / cassandra / db / columniterator / SSTableIterator . java 
 index a58ea3e . . 64d33dc 100644 
 - - - a / src / java / org / apache / cassandra / db / columniterator / SSTableIterator . java 
 + + + b / src / java / org / apache / cassandra / db / columniterator / SSTableIterator . java 
 @ @ - 252 , 8 + 252 , 9 @ @ public class SSTableIterator extends AbstractSSTableIterator 
 protected Unfiltered computeNext ( ) throws IOException 
 { 
 / / Our previous read might have made us cross an index block boundary . If so , update our informations . 
 - if ( indexState . isPastCurrentBlock ( ) ) 
 - indexState . setToBlock ( indexState . currentBlockIdx ( ) + 1 ) ; 
 + int currentBlockIdx = indexState . currentBlockIdx ( ) ; 
 + if ( indexState . isPastCurrentBlock ( ) & & currentBlockIdx + 1 < indexState . blocksCount ( ) ) 
 + indexState . setToBlock ( currentBlockIdx + 1 ) ; 
 
 / / Return the next unfiltered unless we ' ve reached the end , or we ' re beyond our slice 
 / / end ( note that unless we ' re on the last block for the slice , there is no point

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6dd1fcb . . 4271551 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 22 , 6 + 22 , 7 @ @ 
 * remove " nodetool loadbalance " ( CASSANDRA - 2448 ) 
 * multithreaded compaction ( CASSANDRA - 2191 ) 
 * compaction throttling ( CASSANDRA - 2156 ) 
 + * cli no longer divides read _ repair _ chance by 100 ( CASSANDRA - 2458 ) 
 
 
 0 . 7 . 5 
 diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index f4aeb27 . . 44d0630 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 1039 , 10 + 1039 , 10 @ @ public class CliClient extends CliUserHelp 
 cfDef . setKey _ cache _ size ( Double . parseDouble ( mValue ) ) ; 
 break ; 
 case READ _ REPAIR _ CHANCE : 
 - double chance = Double . parseDouble ( mValue ) / 100 ; 
 + double chance = Double . parseDouble ( mValue ) ; 
 
 - if ( chance > 1 ) 
 - throw new RuntimeException ( " Error : read _ repair _ chance / 100 should not be greater than 1 . " ) ; 
 + if ( chance < 0 | | chance > 1 ) 
 + throw new RuntimeException ( " Error : read _ repair _ chance must be between 0 and 1 . " ) ; 
 
 cfDef . setRead _ repair _ chance ( chance ) ; 
 break ;
