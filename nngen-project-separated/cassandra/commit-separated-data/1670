BLEU SCORE: 0.009800314768236574

TEST MSG: DropRoleStatement should only checks su status for existing roles
GENERATED MSG: refs CASSANDRA - 6687 . Don ' t fail in checkAccess if table doesn ' t exist

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DropRoleStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DropRoleStatement . java <nl> index ec4bde7 . . 55fa83a 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / DropRoleStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / DropRoleStatement . java <nl> @ @ - 38 , 7 + 38 , 12 @ @ public class DropRoleStatement extends AuthenticationStatement <nl> public void checkAccess ( ClientState state ) throws UnauthorizedException <nl> { <nl> super . checkPermission ( state , Permission . DROP , role ) ; <nl> - if ( Roles . hasSuperuserStatus ( role ) & & ! state . getUser ( ) . isSuper ( ) ) <nl> + <nl> + / / We only check superuser status for existing roles to avoid <nl> + / / caching info about roles which don ' t exist ( CASSANDRA - 9189 ) <nl> + if ( DatabaseDescriptor . getRoleManager ( ) . isExistingRole ( role ) <nl> + & & Roles . hasSuperuserStatus ( role ) <nl> + & & ! state . getUser ( ) . isSuper ( ) ) <nl> throw new UnauthorizedException ( " Only superusers can drop a role with superuser status " ) ; <nl> } <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DropRoleStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DropRoleStatement . java 
 index ec4bde7 . . 55fa83a 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / DropRoleStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / DropRoleStatement . java 
 @ @ - 38 , 7 + 38 , 12 @ @ public class DropRoleStatement extends AuthenticationStatement 
 public void checkAccess ( ClientState state ) throws UnauthorizedException 
 { 
 super . checkPermission ( state , Permission . DROP , role ) ; 
 - if ( Roles . hasSuperuserStatus ( role ) & & ! state . getUser ( ) . isSuper ( ) ) 
 + 
 + / / We only check superuser status for existing roles to avoid 
 + / / caching info about roles which don ' t exist ( CASSANDRA - 9189 ) 
 + if ( DatabaseDescriptor . getRoleManager ( ) . isExistingRole ( role ) 
 + & & Roles . hasSuperuserStatus ( role ) 
 + & & ! state . getUser ( ) . isSuper ( ) ) 
 throw new UnauthorizedException ( " Only superusers can drop a role with superuser status " ) ; 
 } 


NEAREST DIFF:
ELIMINATEDSENTENCE
