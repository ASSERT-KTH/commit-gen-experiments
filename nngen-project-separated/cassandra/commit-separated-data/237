BLEU SCORE: 0.03283637368030199

TEST MSG: ninja - fix messy commit of 13530
GENERATED MSG: r / m clustertool

TEST DIFF (one line): diff - - git a / . circleci / config . yml b / . circleci / config . yml <nl> deleted file mode 100644 <nl> index 387e0f6 . . 0000000 <nl> - - - a / . circleci / config . yml <nl> + + + / dev / null <nl> @ @ - 1 , 254 + 0 , 0 @ @ <nl> - env _ vars : & env _ vars <nl> - JAVA _ HOME : / usr / local / openjdk8u154 - cassandra - b02 <nl> - ANT _ HOME : / usr / local / apache - ant - 1 . 10 . 1 <nl> - LANG : en _ US . UTF - 8 <nl> - JDK _ HOME : / usr / local / openjdk8u154 - cassandra - b02 <nl> - JAVA8 _ HOME : / usr / local / openjdk8u154 - cassandra - b02 <nl> - JAVA7 _ HOME : / usr / local / openjdk7u82 - cassandra - b02 <nl> - DEBUG : true <nl> - PRINT _ DEBUG : true <nl> - KEEP _ TEST _ DIR : true <nl> - CASSANDRA _ DIR : / home / cassandra / cassandra <nl> - DEFAULT _ DIR : / home / cassandra / cassandra - dtest <nl> - PYTHONIOENCODING : utf - 8 <nl> - PYTHONUNBUFFERED : true <nl> - CASS _ DRIVER _ NO _ EXTENSIONS : true <nl> - CASS _ DRIVER _ NO _ CYTHON : true <nl> - CCM _ MAX _ HEAP _ SIZE : 3072M <nl> - CCM _ HEAP _ NEWSIZE : 256M <nl> - version : 2 <nl> - jobs : <nl> - build : <nl> - resource _ class : xlarge <nl> - working _ directory : ~ / <nl> - shell : / bin / bash - eo pipefail - l <nl> - docker : <nl> - - image : kjellman / cassandra - test : 0 . 1 . 2 <nl> - environment : <nl> - < < : * env _ vars <nl> - steps : <nl> - - run : <nl> - name : Log Environment Information <nl> - command : | <nl> - echo ' * * * id * * * ' <nl> - id <nl> - echo ' * * * cat / proc / cpuinfo * * * ' <nl> - cat / proc / cpuinfo <nl> - echo ' * * * free - m * * * ' <nl> - free - m <nl> - echo ' * * * df - m * * * ' <nl> - df - m <nl> - echo ' * * * ifconfig - a * * * ' <nl> - ifconfig - a <nl> - echo ' * * * uname - a * * * ' <nl> - uname - a <nl> - echo ' * * * mount * * * ' <nl> - mount <nl> - echo ' * * * env * * * ' <nl> - env <nl> - - run : <nl> - name : Clone Cassandra Repository ( via git ) <nl> - command : | <nl> - export LANG = en _ US . UTF - 8 <nl> - git clone - - single - branch - - depth 1 - - branch $ CIRCLE _ BRANCH git : / / github . com / $ CIRCLE _ PROJECT _ USERNAME / $ CIRCLE _ PROJECT _ REPONAME . git ~ / cassandra <nl> - - run : <nl> - name : Build Cassandra <nl> - command : | <nl> - export LANG = en _ US . UTF - 8 <nl> - export JAVA _ TOOL _ OPTIONS = " - Dfile . encoding = UTF8 " <nl> - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> - cd ~ / cassandra <nl> - # Loop to prevent failure due to maven - ant - tasks not downloading a jar . . <nl> - for x in $ ( seq 1 3 ) ; do <nl> - $ { ANT _ HOME } / bin / ant clean jar <nl> - RETURN = " $ ? " <nl> - if [ " $ { RETURN } " - eq " 0 " ] ; then <nl> - break <nl> - fi <nl> - done <nl> - # Exit , if we didn ' t build successfully <nl> - if [ " $ { RETURN } " - ne " 0 " ] ; then <nl> - echo " Build failed with exit code : $ { RETURN } " <nl> - exit $ { RETURN } <nl> - fi <nl> - no _ output _ timeout : 20m <nl> - - persist _ to _ workspace : <nl> - root : / home / cassandra <nl> - paths : <nl> - - cassandra <nl> - - . m2 <nl> - unit _ tests : <nl> - resource _ class : xlarge <nl> - parallelism : 100 <nl> - working _ directory : ~ / <nl> - shell : / bin / bash - eo pipefail - l <nl> - docker : <nl> - - image : kjellman / cassandra - test : 0 . 1 . 2 <nl> - environment : <nl> - < < : * env _ vars <nl> - steps : <nl> - - attach _ workspace : <nl> - at : / home / cassandra <nl> - - run : <nl> - name : Determine Tests to Run <nl> - no _ output _ timeout : 10m <nl> - command : | <nl> - # reminder : this code ( along with all the steps ) is independently executed on every circle container <nl> - # so the goal here is to get the circleci script to return the tests * this * container will run <nl> - # which we do via the ` circleci ` cli tool . <nl> - <nl> - export LANG = en _ US . UTF - 8 <nl> - rm - fr ~ / cassandra - dtest / upgrade _ tests <nl> - echo " * * * java tests * * * " <nl> - <nl> - # get all of our unit test filenames <nl> - set - eo pipefail & & circleci tests glob " $ HOME / cassandra / test / unit / * * / * . java " > / tmp / all _ java _ unit _ tests . txt <nl> - <nl> - # split up the unit tests into groups based on the number of containers we have <nl> - set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = filename - - index = $ { CIRCLE _ NODE _ INDEX } - - total = $ { CIRCLE _ NODE _ TOTAL } / tmp / all _ java _ unit _ tests . txt > / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } . txt <nl> - set - eo pipefail & & cat / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } . txt | cut - c 37 - 1000000 | grep " Test \ . java $ " > / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt <nl> - echo " * * / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt " <nl> - cat / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt <nl> - - run : <nl> - name : Run Unit Tests <nl> - command : | <nl> - export LANG = en _ US . UTF - 8 <nl> - export JAVA _ TOOL _ OPTIONS = " - Dfile . encoding = UTF8 " <nl> - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> - <nl> - cd ~ / cassandra <nl> - ant testclasslist - Dtest . classlistfile = / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt | | true <nl> - no _ output _ timeout : 15m <nl> - - store _ test _ results : <nl> - path : ~ / cassandra / build / test / output / <nl> - - store _ artifacts : <nl> - path : ~ / cassandra / build / test / output <nl> - destination : junitxml <nl> - - store _ artifacts : <nl> - path : ~ / cassandra / build / test / logs <nl> - destination : logs <nl> - dtests : <nl> - resource _ class : xlarge <nl> - parallelism : 100 <nl> - working _ directory : ~ / <nl> - shell : / bin / bash - eo pipefail - l <nl> - docker : <nl> - - image : kjellman / cassandra - test : 0 . 1 . 2 <nl> - environment : <nl> - < < : * env _ vars <nl> - steps : <nl> - - attach _ workspace : <nl> - at : / home / cassandra <nl> - - run : <nl> - name : Clone Cassandra dtest Repository ( via git ) <nl> - command : | <nl> - export LANG = en _ US . UTF - 8 <nl> - git clone - - single - branch - - depth 1 git : / / github . com / jasobrown / cassandra - dtest . git ~ / cassandra - dtest <nl> - - run : <nl> - name : Configure virtualenv and python Dependencies <nl> - command : | <nl> - # note , this should be super quick as all dependencies should be pre - installed in the docker image <nl> - # if additional dependencies were added to requirmeents . txt and the docker image hasn ' t been updated <nl> - # we ' d have to install it here at runtime - - which will make things slow , so do yourself a favor and <nl> - # rebuild the docker image ! ( it automatically pulls the latest requirements . txt on build ) <nl> - export LANG = en _ US . UTF - 8 <nl> - source ~ / env / bin / activate <nl> - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> - export CASS _ DRIVER _ NO _ EXTENSIONS = true <nl> - export CASS _ DRIVER _ NO _ CYTHON = true <nl> - pip install - r ~ / cassandra - dtest / requirements . txt <nl> - pip freeze <nl> - - run : <nl> - name : Determine Tests to Run <nl> - no _ output _ timeout : 10m <nl> - command : | <nl> - # reminder : this code ( along with all the steps ) is independently executed on every circle container <nl> - # so the goal here is to get the circleci script to return the tests * this * container will run <nl> - # which we do via the ` circleci ` cli tool . <nl> - <nl> - export LANG = en _ US . UTF - 8 <nl> - echo " * * * python tests * * * " <nl> - cd cassandra - dtest <nl> - export CASSANDRA _ DIR = / home / cassandra / cassandra <nl> - source ~ / env / bin / activate <nl> - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> - <nl> - echo " * * * regular python tests * * * " <nl> - set - eo pipefail & & . / run _ dtests . py - - vnodes true - - nose - options = ' - - verbosity = 3 - - dtest - collect - only ' 2 > & 1 | tee / tmp / pythontestlist <nl> - set - eo pipefail & & cat / tmp / pythontestlist | grep - v ' upgrade _ tests ' | grep " . . . ok " | rev | cut - c 8 - | rev > / tmp / testlist _ trimmed <nl> - set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / testlist _ trimmed > / tmp / python _ tests . txt <nl> - cat / tmp / python _ tests . txt <nl> - cat / tmp / python _ tests . txt | grep - v " \ - novnode " | grep - v " \ - offheap " > / tmp / regular _ python _ tests . txt <nl> - cat / tmp / regular _ python _ tests . txt | tr ' \ n ' ' ' > / tmp / regular _ python _ tests _ final . txt <nl> - cat / tmp / regular _ python _ tests _ final . txt <nl> - <nl> - echo " * * * novnode python tests * * * " <nl> - rm / tmp / pythontestlist | | true <nl> - . / run _ dtests . py - - vnodes false - - nose - options = ' - - verbosity = 3 - - dtest - collect - only - - attr = ! resource - intensive ' 2 > & 1 | tee - a / tmp / pythontestlist <nl> - set - eo pipefail & & cat / tmp / pythontestlist | grep - v ' upgrade _ tests ' | grep " . . . ok " | rev | cut - c 8 - | rev > / tmp / testlist _ trimmed <nl> - set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / testlist _ trimmed > / tmp / novnode _ python _ tests . txt <nl> - cat / tmp / novnode _ python _ tests . txt | tr ' \ n ' ' ' > / tmp / novnode _ python _ tests _ final . txt <nl> - cat / tmp / novnode _ python _ tests _ final . txt <nl> - <nl> - # echo " * * * offheap python tests * * * " <nl> - # rm / tmp / pythontestlist | | true <nl> - # TEST _ TAG = offheap . / run _ dtests . py - - vnodes true - - nose - options = ' - - verbosity = 3 - - dtest - collect - only - - attr = ! resource - intensive ' 2 > & 1 | grep - v " upgrade _ tests . " | tee - a / tmp / pythontestlist <nl> - # cat / tmp / python _ tests . txt | grep " \ - offheap " | rev | cut - c 9 - | rev > / tmp / offheap _ python _ tests . txt <nl> - # cat / tmp / offheap _ python _ tests . txt | tr ' \ n ' ' ' > / tmp / offheap _ python _ tests _ final . txt <nl> - # cat / tmp / offheap _ python _ tests _ final . txt <nl> - - run : <nl> - name : Run dtests <nl> - no _ output _ timeout : 30m <nl> - command : | <nl> - echo " cat / tmp / regular _ python _ tests _ final . txt " <nl> - cat / tmp / regular _ python _ tests _ final . txt <nl> - <nl> - source ~ / env / bin / activate <nl> - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> - <nl> - cd ~ / cassandra - dtest <nl> - mkdir - p / tmp / dtest <nl> - export NUM _ TOKENS = " 32 " <nl> - <nl> - echo " env : $ ( env ) " <nl> - echo " * * done env " <nl> - . / run _ dtests . py - - vnodes true - - nose - options = " - - verbosity = 3 - - with - xunit - - nocapture " ` cat / tmp / regular _ python _ tests _ final . txt ` 2 > & 1 | tee / tmp / dtest / stdout . txt | | true <nl> - <nl> - # store the test results somewhere where we can pick them up <nl> - mv nosetests . xml nosetests - regular . xml <nl> - mkdir - p / tmp / results / | | true <nl> - find ~ / cassandra - dtest / - name " * . xml " - exec cp { } / tmp / results / \ ; <nl> - - run : <nl> - name : Run dtests ( without vnodes ) <nl> - no _ output _ timeout : 30m <nl> - command : | <nl> - source ~ / env / bin / activate <nl> - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> - <nl> - cd ~ / cassandra - dtest <nl> - export TEST _ TAG = " novnodes " <nl> - . / run _ dtests . py - - vnodes false - - nose - options = " - - verbosity = 3 - - with - dtestxunit - - nocapture - - attr = ! resource - intensive " ` cat / tmp / novnode _ python _ tests _ final . txt ` 2 > & 1 | tee / tmp / dtest / stdout - novnodes . txt | | true <nl> - <nl> - # store the test results somewhere where we can pick them up <nl> - mv nosetests . xml nosetests - novnode . xml <nl> - mkdir - p / tmp / results / | | true <nl> - find ~ / cassandra - dtest / - name " * . xml " - exec cp { } / tmp / results / \ ; <nl> - - store _ test _ results : <nl> - path : / tmp / results / <nl> - - store _ artifacts : <nl> - path : / tmp / dtest <nl> - destination : dtest <nl> - - store _ artifacts : <nl> - path : ~ / cassandra - dtest / logs <nl> - destination : dtest _ logs <nl> - workflows : <nl> - version : 2 <nl> - build _ and _ run _ tests : <nl> - jobs : <nl> - - build <nl> - - unit _ tests : <nl> - requires : <nl> - - build <nl> - - dtests : <nl> - requires : <nl> - - unit _ tests <nl> diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 56458f8 . . d197038 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Add GroupCommitLogService ( CASSANDRA - 13530 ) <nl> * Parallelize initial materialized view build ( CASSANDRA - 12245 ) <nl> * Fix flaky SecondaryIndexManagerTest . assert [ Not ] MarkedAsBuilt ( CASSANDRA - 13965 ) <nl> * Make LWTs send resultset metadata on every request ( CASSANDRA - 13992 )
NEAREST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / utils / MerkleTreeTest . java b / test / unit / org / apache / cassandra / utils / MerkleTreeTest . java <nl> index a5ad296 . . ded9f51 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / MerkleTreeTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / MerkleTreeTest . java <nl> @ @ - 447 , 13 + 447 , 14 @ @ public class MerkleTreeTest <nl> / / split the leftmost <nl> Iterator < TreeRange > ranges = mt . invalids ( ) ; <nl> leftmost = ranges . next ( ) ; <nl> - mt . split ( leftmost . left ) ; <nl> - <nl> - / / set the hash for the left neighbor of rightmost <nl> + mt . split ( leftmost . right ) ; <nl> + <nl> + / / set the hashes for the leaf of the created split <nl> middle = mt . get ( leftmost . right ) ; <nl> middle . hash ( " arbitrary ! " . getBytes ( ) ) ; <nl> + mt . get ( partitioner . midpoint ( leftmost . left , leftmost . right ) ) . hash ( " even more arbitrary ! " . getBytes ( ) ) ; <nl> <nl> - / / trees should disagree for ( middle . left , rightmost . right ] <nl> + / / trees should disagree for ( leftmost . left , middle . right ] <nl> List < TreeRange > diffs = MerkleTree . difference ( mt , mt2 ) ; <nl> assertEquals ( diffs + " contains wrong number of differences : " , 1 , diffs . size ( ) ) ; <nl> assertTrue ( diffs . contains ( new Range ( leftmost . left , middle . right ) ) ) ;

TEST DIFF:
diff - - git a / . circleci / config . yml b / . circleci / config . yml 
 deleted file mode 100644 
 index 387e0f6 . . 0000000 
 - - - a / . circleci / config . yml 
 + + + / dev / null 
 @ @ - 1 , 254 + 0 , 0 @ @ 
 - env _ vars : & env _ vars 
 - JAVA _ HOME : / usr / local / openjdk8u154 - cassandra - b02 
 - ANT _ HOME : / usr / local / apache - ant - 1 . 10 . 1 
 - LANG : en _ US . UTF - 8 
 - JDK _ HOME : / usr / local / openjdk8u154 - cassandra - b02 
 - JAVA8 _ HOME : / usr / local / openjdk8u154 - cassandra - b02 
 - JAVA7 _ HOME : / usr / local / openjdk7u82 - cassandra - b02 
 - DEBUG : true 
 - PRINT _ DEBUG : true 
 - KEEP _ TEST _ DIR : true 
 - CASSANDRA _ DIR : / home / cassandra / cassandra 
 - DEFAULT _ DIR : / home / cassandra / cassandra - dtest 
 - PYTHONIOENCODING : utf - 8 
 - PYTHONUNBUFFERED : true 
 - CASS _ DRIVER _ NO _ EXTENSIONS : true 
 - CASS _ DRIVER _ NO _ CYTHON : true 
 - CCM _ MAX _ HEAP _ SIZE : 3072M 
 - CCM _ HEAP _ NEWSIZE : 256M 
 - version : 2 
 - jobs : 
 - build : 
 - resource _ class : xlarge 
 - working _ directory : ~ / 
 - shell : / bin / bash - eo pipefail - l 
 - docker : 
 - - image : kjellman / cassandra - test : 0 . 1 . 2 
 - environment : 
 - < < : * env _ vars 
 - steps : 
 - - run : 
 - name : Log Environment Information 
 - command : | 
 - echo ' * * * id * * * ' 
 - id 
 - echo ' * * * cat / proc / cpuinfo * * * ' 
 - cat / proc / cpuinfo 
 - echo ' * * * free - m * * * ' 
 - free - m 
 - echo ' * * * df - m * * * ' 
 - df - m 
 - echo ' * * * ifconfig - a * * * ' 
 - ifconfig - a 
 - echo ' * * * uname - a * * * ' 
 - uname - a 
 - echo ' * * * mount * * * ' 
 - mount 
 - echo ' * * * env * * * ' 
 - env 
 - - run : 
 - name : Clone Cassandra Repository ( via git ) 
 - command : | 
 - export LANG = en _ US . UTF - 8 
 - git clone - - single - branch - - depth 1 - - branch $ CIRCLE _ BRANCH git : / / github . com / $ CIRCLE _ PROJECT _ USERNAME / $ CIRCLE _ PROJECT _ REPONAME . git ~ / cassandra 
 - - run : 
 - name : Build Cassandra 
 - command : | 
 - export LANG = en _ US . UTF - 8 
 - export JAVA _ TOOL _ OPTIONS = " - Dfile . encoding = UTF8 " 
 - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 - cd ~ / cassandra 
 - # Loop to prevent failure due to maven - ant - tasks not downloading a jar . . 
 - for x in $ ( seq 1 3 ) ; do 
 - $ { ANT _ HOME } / bin / ant clean jar 
 - RETURN = " $ ? " 
 - if [ " $ { RETURN } " - eq " 0 " ] ; then 
 - break 
 - fi 
 - done 
 - # Exit , if we didn ' t build successfully 
 - if [ " $ { RETURN } " - ne " 0 " ] ; then 
 - echo " Build failed with exit code : $ { RETURN } " 
 - exit $ { RETURN } 
 - fi 
 - no _ output _ timeout : 20m 
 - - persist _ to _ workspace : 
 - root : / home / cassandra 
 - paths : 
 - - cassandra 
 - - . m2 
 - unit _ tests : 
 - resource _ class : xlarge 
 - parallelism : 100 
 - working _ directory : ~ / 
 - shell : / bin / bash - eo pipefail - l 
 - docker : 
 - - image : kjellman / cassandra - test : 0 . 1 . 2 
 - environment : 
 - < < : * env _ vars 
 - steps : 
 - - attach _ workspace : 
 - at : / home / cassandra 
 - - run : 
 - name : Determine Tests to Run 
 - no _ output _ timeout : 10m 
 - command : | 
 - # reminder : this code ( along with all the steps ) is independently executed on every circle container 
 - # so the goal here is to get the circleci script to return the tests * this * container will run 
 - # which we do via the ` circleci ` cli tool . 
 - 
 - export LANG = en _ US . UTF - 8 
 - rm - fr ~ / cassandra - dtest / upgrade _ tests 
 - echo " * * * java tests * * * " 
 - 
 - # get all of our unit test filenames 
 - set - eo pipefail & & circleci tests glob " $ HOME / cassandra / test / unit / * * / * . java " > / tmp / all _ java _ unit _ tests . txt 
 - 
 - # split up the unit tests into groups based on the number of containers we have 
 - set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = filename - - index = $ { CIRCLE _ NODE _ INDEX } - - total = $ { CIRCLE _ NODE _ TOTAL } / tmp / all _ java _ unit _ tests . txt > / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } . txt 
 - set - eo pipefail & & cat / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } . txt | cut - c 37 - 1000000 | grep " Test \ . java $ " > / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt 
 - echo " * * / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt " 
 - cat / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt 
 - - run : 
 - name : Run Unit Tests 
 - command : | 
 - export LANG = en _ US . UTF - 8 
 - export JAVA _ TOOL _ OPTIONS = " - Dfile . encoding = UTF8 " 
 - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 - 
 - cd ~ / cassandra 
 - ant testclasslist - Dtest . classlistfile = / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt | | true 
 - no _ output _ timeout : 15m 
 - - store _ test _ results : 
 - path : ~ / cassandra / build / test / output / 
 - - store _ artifacts : 
 - path : ~ / cassandra / build / test / output 
 - destination : junitxml 
 - - store _ artifacts : 
 - path : ~ / cassandra / build / test / logs 
 - destination : logs 
 - dtests : 
 - resource _ class : xlarge 
 - parallelism : 100 
 - working _ directory : ~ / 
 - shell : / bin / bash - eo pipefail - l 
 - docker : 
 - - image : kjellman / cassandra - test : 0 . 1 . 2 
 - environment : 
 - < < : * env _ vars 
 - steps : 
 - - attach _ workspace : 
 - at : / home / cassandra 
 - - run : 
 - name : Clone Cassandra dtest Repository ( via git ) 
 - command : | 
 - export LANG = en _ US . UTF - 8 
 - git clone - - single - branch - - depth 1 git : / / github . com / jasobrown / cassandra - dtest . git ~ / cassandra - dtest 
 - - run : 
 - name : Configure virtualenv and python Dependencies 
 - command : | 
 - # note , this should be super quick as all dependencies should be pre - installed in the docker image 
 - # if additional dependencies were added to requirmeents . txt and the docker image hasn ' t been updated 
 - # we ' d have to install it here at runtime - - which will make things slow , so do yourself a favor and 
 - # rebuild the docker image ! ( it automatically pulls the latest requirements . txt on build ) 
 - export LANG = en _ US . UTF - 8 
 - source ~ / env / bin / activate 
 - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 - export CASS _ DRIVER _ NO _ EXTENSIONS = true 
 - export CASS _ DRIVER _ NO _ CYTHON = true 
 - pip install - r ~ / cassandra - dtest / requirements . txt 
 - pip freeze 
 - - run : 
 - name : Determine Tests to Run 
 - no _ output _ timeout : 10m 
 - command : | 
 - # reminder : this code ( along with all the steps ) is independently executed on every circle container 
 - # so the goal here is to get the circleci script to return the tests * this * container will run 
 - # which we do via the ` circleci ` cli tool . 
 - 
 - export LANG = en _ US . UTF - 8 
 - echo " * * * python tests * * * " 
 - cd cassandra - dtest 
 - export CASSANDRA _ DIR = / home / cassandra / cassandra 
 - source ~ / env / bin / activate 
 - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 - 
 - echo " * * * regular python tests * * * " 
 - set - eo pipefail & & . / run _ dtests . py - - vnodes true - - nose - options = ' - - verbosity = 3 - - dtest - collect - only ' 2 > & 1 | tee / tmp / pythontestlist 
 - set - eo pipefail & & cat / tmp / pythontestlist | grep - v ' upgrade _ tests ' | grep " . . . ok " | rev | cut - c 8 - | rev > / tmp / testlist _ trimmed 
 - set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / testlist _ trimmed > / tmp / python _ tests . txt 
 - cat / tmp / python _ tests . txt 
 - cat / tmp / python _ tests . txt | grep - v " \ - novnode " | grep - v " \ - offheap " > / tmp / regular _ python _ tests . txt 
 - cat / tmp / regular _ python _ tests . txt | tr ' \ n ' ' ' > / tmp / regular _ python _ tests _ final . txt 
 - cat / tmp / regular _ python _ tests _ final . txt 
 - 
 - echo " * * * novnode python tests * * * " 
 - rm / tmp / pythontestlist | | true 
 - . / run _ dtests . py - - vnodes false - - nose - options = ' - - verbosity = 3 - - dtest - collect - only - - attr = ! resource - intensive ' 2 > & 1 | tee - a / tmp / pythontestlist 
 - set - eo pipefail & & cat / tmp / pythontestlist | grep - v ' upgrade _ tests ' | grep " . . . ok " | rev | cut - c 8 - | rev > / tmp / testlist _ trimmed 
 - set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / testlist _ trimmed > / tmp / novnode _ python _ tests . txt 
 - cat / tmp / novnode _ python _ tests . txt | tr ' \ n ' ' ' > / tmp / novnode _ python _ tests _ final . txt 
 - cat / tmp / novnode _ python _ tests _ final . txt 
 - 
 - # echo " * * * offheap python tests * * * " 
 - # rm / tmp / pythontestlist | | true 
 - # TEST _ TAG = offheap . / run _ dtests . py - - vnodes true - - nose - options = ' - - verbosity = 3 - - dtest - collect - only - - attr = ! resource - intensive ' 2 > & 1 | grep - v " upgrade _ tests . " | tee - a / tmp / pythontestlist 
 - # cat / tmp / python _ tests . txt | grep " \ - offheap " | rev | cut - c 9 - | rev > / tmp / offheap _ python _ tests . txt 
 - # cat / tmp / offheap _ python _ tests . txt | tr ' \ n ' ' ' > / tmp / offheap _ python _ tests _ final . txt 
 - # cat / tmp / offheap _ python _ tests _ final . txt 
 - - run : 
 - name : Run dtests 
 - no _ output _ timeout : 30m 
 - command : | 
 - echo " cat / tmp / regular _ python _ tests _ final . txt " 
 - cat / tmp / regular _ python _ tests _ final . txt 
 - 
 - source ~ / env / bin / activate 
 - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 - 
 - cd ~ / cassandra - dtest 
 - mkdir - p / tmp / dtest 
 - export NUM _ TOKENS = " 32 " 
 - 
 - echo " env : $ ( env ) " 
 - echo " * * done env " 
 - . / run _ dtests . py - - vnodes true - - nose - options = " - - verbosity = 3 - - with - xunit - - nocapture " ` cat / tmp / regular _ python _ tests _ final . txt ` 2 > & 1 | tee / tmp / dtest / stdout . txt | | true 
 - 
 - # store the test results somewhere where we can pick them up 
 - mv nosetests . xml nosetests - regular . xml 
 - mkdir - p / tmp / results / | | true 
 - find ~ / cassandra - dtest / - name " * . xml " - exec cp { } / tmp / results / \ ; 
 - - run : 
 - name : Run dtests ( without vnodes ) 
 - no _ output _ timeout : 30m 
 - command : | 
 - source ~ / env / bin / activate 
 - export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 - 
 - cd ~ / cassandra - dtest 
 - export TEST _ TAG = " novnodes " 
 - . / run _ dtests . py - - vnodes false - - nose - options = " - - verbosity = 3 - - with - dtestxunit - - nocapture - - attr = ! resource - intensive " ` cat / tmp / novnode _ python _ tests _ final . txt ` 2 > & 1 | tee / tmp / dtest / stdout - novnodes . txt | | true 
 - 
 - # store the test results somewhere where we can pick them up 
 - mv nosetests . xml nosetests - novnode . xml 
 - mkdir - p / tmp / results / | | true 
 - find ~ / cassandra - dtest / - name " * . xml " - exec cp { } / tmp / results / \ ; 
 - - store _ test _ results : 
 - path : / tmp / results / 
 - - store _ artifacts : 
 - path : / tmp / dtest 
 - destination : dtest 
 - - store _ artifacts : 
 - path : ~ / cassandra - dtest / logs 
 - destination : dtest _ logs 
 - workflows : 
 - version : 2 
 - build _ and _ run _ tests : 
 - jobs : 
 - - build 
 - - unit _ tests : 
 - requires : 
 - - build 
 - - dtests : 
 - requires : 
 - - unit _ tests 
 diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 56458f8 . . d197038 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Add GroupCommitLogService ( CASSANDRA - 13530 ) 
 * Parallelize initial materialized view build ( CASSANDRA - 12245 ) 
 * Fix flaky SecondaryIndexManagerTest . assert [ Not ] MarkedAsBuilt ( CASSANDRA - 13965 ) 
 * Make LWTs send resultset metadata on every request ( CASSANDRA - 13992 )

NEAREST DIFF:
diff - - git a / test / unit / org / apache / cassandra / utils / MerkleTreeTest . java b / test / unit / org / apache / cassandra / utils / MerkleTreeTest . java 
 index a5ad296 . . ded9f51 100644 
 - - - a / test / unit / org / apache / cassandra / utils / MerkleTreeTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / MerkleTreeTest . java 
 @ @ - 447 , 13 + 447 , 14 @ @ public class MerkleTreeTest 
 / / split the leftmost 
 Iterator < TreeRange > ranges = mt . invalids ( ) ; 
 leftmost = ranges . next ( ) ; 
 - mt . split ( leftmost . left ) ; 
 - 
 - / / set the hash for the left neighbor of rightmost 
 + mt . split ( leftmost . right ) ; 
 + 
 + / / set the hashes for the leaf of the created split 
 middle = mt . get ( leftmost . right ) ; 
 middle . hash ( " arbitrary ! " . getBytes ( ) ) ; 
 + mt . get ( partitioner . midpoint ( leftmost . left , leftmost . right ) ) . hash ( " even more arbitrary ! " . getBytes ( ) ) ; 
 
 - / / trees should disagree for ( middle . left , rightmost . right ] 
 + / / trees should disagree for ( leftmost . left , middle . right ] 
 List < TreeRange > diffs = MerkleTree . difference ( mt , mt2 ) ; 
 assertEquals ( diffs + " contains wrong number of differences : " , 1 , diffs . size ( ) ) ; 
 assertTrue ( diffs . contains ( new Range ( leftmost . left , middle . right ) ) ) ;
