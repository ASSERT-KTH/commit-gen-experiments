BLEU SCORE: 0.028398387225677897

TEST MSG: Reject default _ time _ to _ live option when creating or altering MVs
GENERATED MSG: Fix AssertionError while flushing memtable due to materialized views incorrectly inserting empty rows

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fff1d54 . . 8cdca57 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 11 <nl> + * Reject default _ time _ to _ live option when creating or altering MVs ( CASSANDRA - 12868 ) <nl> * Nodetool should use a more sane max heap size ( CASSANDRA - 12739 ) <nl> * LocalToken ensures token values are cloned on heap ( CASSANDRA - 12651 ) <nl> * AnticompactionRequestSerializer serializedSize is incorrect ( CASSANDRA - 12934 ) <nl> diff - - git a / NEWS . txt b / NEWS . txt <nl> index d5f4f06 . . 32b5084 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 20 , 6 + 20 , 9 @ @ Upgrading <nl> - - - - - - - - - <nl> - Nothing specific to this release , but please see previous versions upgrading section , <nl> especially if you are upgrading from 2 . 2 . <nl> + - Specifying the default _ time _ to _ live option when creating or altering a <nl> + materialized view was erroneously accepted ( and ignored ) . It is now <nl> + properly rejected . <nl> <nl> 3 . 0 . 10 <nl> = = = = = <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / AlterViewStatement . java b / src / java / org / apache / cassandra / cql3 / statements / AlterViewStatement . java <nl> index 5b1699b . . ba077c7 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / AlterViewStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / AlterViewStatement . java <nl> @ @ - 75 , 6 + 75 , 14 @ @ public class AlterViewStatement extends SchemaAlteringStatement <nl> " value is used to TTL undelivered updates . Setting gc _ grace _ seconds too " + <nl> " low might cause undelivered updates to expire before being replayed . " ) ; <nl> } <nl> + <nl> + if ( params . defaultTimeToLive > 0 ) <nl> + { <nl> + throw new InvalidRequestException ( " Cannot set or alter default _ time _ to _ live for a materialized view . " + <nl> + " Data in a materialized view always expire at the same time than " + <nl> + " the corresponding data in the parent table . " ) ; <nl> + } <nl> + <nl> viewCopy . metadata . params ( params ) ; <nl> <nl> MigrationManager . announceViewUpdate ( viewCopy , isLocalOnly ) ; <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java <nl> index 13e528c . . 30e55a0 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java <nl> @ @ - 275 , 12 + 275 , 21 @ @ public class CreateViewStatement extends SchemaAlteringStatement <nl> if ( targetClusteringColumns . isEmpty ( ) ) <nl> throw new InvalidRequestException ( " No columns are defined for Materialized View other than primary key " ) ; <nl> <nl> + TableParams params = properties . properties . asNewTableParams ( ) ; <nl> + <nl> + if ( params . defaultTimeToLive > 0 ) <nl> + { <nl> + throw new InvalidRequestException ( " Cannot set default _ time _ to _ live for a materialized view . " + <nl> + " Data in a materialized view always expire at the same time than " + <nl> + " the corresponding data in the parent table . " ) ; <nl> + } <nl> + <nl> CFMetaData . Builder cfmBuilder = CFMetaData . Builder . createView ( keyspace ( ) , columnFamily ( ) ) ; <nl> add ( cfm , targetPartitionKeys , cfmBuilder : : addPartitionKey ) ; <nl> add ( cfm , targetClusteringColumns , cfmBuilder : : addClusteringColumn ) ; <nl> add ( cfm , includedColumns , cfmBuilder : : addRegularColumn ) ; <nl> cfmBuilder . withId ( properties . properties . getId ( ) ) ; <nl> - TableParams params = properties . properties . asNewTableParams ( ) ; <nl> + <nl> CFMetaData viewCfm = cfmBuilder . build ( ) . params ( params ) ; <nl> ViewDefinition definition = new ViewDefinition ( keyspace ( ) , <nl> columnFamily ( ) , <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewTest . java b / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> index a6de756 . . 2070bef 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> @ @ - 335 , 6 + 335 , 52 @ @ public class ViewTest extends CQLTester <nl> } <nl> <nl> @ Test <nl> + public void testCreateMvWithTTL ( ) throws Throwable <nl> + { <nl> + createTable ( " CREATE TABLE % s ( " + <nl> + " k int PRIMARY KEY , " + <nl> + " c int , " + <nl> + " val int ) WITH default _ time _ to _ live = 60 " ) ; <nl> + <nl> + execute ( " USE " + keyspace ( ) ) ; <nl> + executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; <nl> + <nl> + / / Must NOT include " default _ time _ to _ live " for Materialized View creation <nl> + try <nl> + { <nl> + createView ( " mv _ ttl1 " , " CREATE MATERIALIZED VIEW % s AS SELECT * FROM % % s WHERE k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( k , c ) WITH default _ time _ to _ live = 30 " ) ; <nl> + Assert . fail ( " Should fail if TTL is provided for materialized view " ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> + public void testAlterMvWithTTL ( ) throws Throwable <nl> + { <nl> + createTable ( " CREATE TABLE % s ( " + <nl> + " k int PRIMARY KEY , " + <nl> + " c int , " + <nl> + " val int ) WITH default _ time _ to _ live = 60 " ) ; <nl> + <nl> + execute ( " USE " + keyspace ( ) ) ; <nl> + executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; <nl> + <nl> + createView ( " mv _ ttl2 " , " CREATE MATERIALIZED VIEW % s AS SELECT * FROM % % s WHERE k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( k , c ) " ) ; <nl> + <nl> + / / Must NOT include " default _ time _ to _ live " on alter Materialized View <nl> + try <nl> + { <nl> + executeNet ( protocolVersion , " ALTER MATERIALIZED VIEW % s WITH default _ time _ to _ live = 30 " ) ; <nl> + Assert . fail ( " Should fail if TTL is provided while altering materialized view " ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> public void complexTimestampUpdateTestWithFlush ( ) throws Throwable <nl> { <nl> complexTimestampUpdateTest ( true ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fff1d54 . . 8cdca57 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 11 
 + * Reject default _ time _ to _ live option when creating or altering MVs ( CASSANDRA - 12868 ) 
 * Nodetool should use a more sane max heap size ( CASSANDRA - 12739 ) 
 * LocalToken ensures token values are cloned on heap ( CASSANDRA - 12651 ) 
 * AnticompactionRequestSerializer serializedSize is incorrect ( CASSANDRA - 12934 ) 
 diff - - git a / NEWS . txt b / NEWS . txt 
 index d5f4f06 . . 32b5084 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 20 , 6 + 20 , 9 @ @ Upgrading 
 - - - - - - - - - 
 - Nothing specific to this release , but please see previous versions upgrading section , 
 especially if you are upgrading from 2 . 2 . 
 + - Specifying the default _ time _ to _ live option when creating or altering a 
 + materialized view was erroneously accepted ( and ignored ) . It is now 
 + properly rejected . 
 
 3 . 0 . 10 
 = = = = = 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / AlterViewStatement . java b / src / java / org / apache / cassandra / cql3 / statements / AlterViewStatement . java 
 index 5b1699b . . ba077c7 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / AlterViewStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / AlterViewStatement . java 
 @ @ - 75 , 6 + 75 , 14 @ @ public class AlterViewStatement extends SchemaAlteringStatement 
 " value is used to TTL undelivered updates . Setting gc _ grace _ seconds too " + 
 " low might cause undelivered updates to expire before being replayed . " ) ; 
 } 
 + 
 + if ( params . defaultTimeToLive > 0 ) 
 + { 
 + throw new InvalidRequestException ( " Cannot set or alter default _ time _ to _ live for a materialized view . " + 
 + " Data in a materialized view always expire at the same time than " + 
 + " the corresponding data in the parent table . " ) ; 
 + } 
 + 
 viewCopy . metadata . params ( params ) ; 
 
 MigrationManager . announceViewUpdate ( viewCopy , isLocalOnly ) ; 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java 
 index 13e528c . . 30e55a0 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java 
 @ @ - 275 , 12 + 275 , 21 @ @ public class CreateViewStatement extends SchemaAlteringStatement 
 if ( targetClusteringColumns . isEmpty ( ) ) 
 throw new InvalidRequestException ( " No columns are defined for Materialized View other than primary key " ) ; 
 
 + TableParams params = properties . properties . asNewTableParams ( ) ; 
 + 
 + if ( params . defaultTimeToLive > 0 ) 
 + { 
 + throw new InvalidRequestException ( " Cannot set default _ time _ to _ live for a materialized view . " + 
 + " Data in a materialized view always expire at the same time than " + 
 + " the corresponding data in the parent table . " ) ; 
 + } 
 + 
 CFMetaData . Builder cfmBuilder = CFMetaData . Builder . createView ( keyspace ( ) , columnFamily ( ) ) ; 
 add ( cfm , targetPartitionKeys , cfmBuilder : : addPartitionKey ) ; 
 add ( cfm , targetClusteringColumns , cfmBuilder : : addClusteringColumn ) ; 
 add ( cfm , includedColumns , cfmBuilder : : addRegularColumn ) ; 
 cfmBuilder . withId ( properties . properties . getId ( ) ) ; 
 - TableParams params = properties . properties . asNewTableParams ( ) ; 
 + 
 CFMetaData viewCfm = cfmBuilder . build ( ) . params ( params ) ; 
 ViewDefinition definition = new ViewDefinition ( keyspace ( ) , 
 columnFamily ( ) , 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewTest . java b / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 index a6de756 . . 2070bef 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 @ @ - 335 , 6 + 335 , 52 @ @ public class ViewTest extends CQLTester 
 } 
 
 @ Test 
 + public void testCreateMvWithTTL ( ) throws Throwable 
 + { 
 + createTable ( " CREATE TABLE % s ( " + 
 + " k int PRIMARY KEY , " + 
 + " c int , " + 
 + " val int ) WITH default _ time _ to _ live = 60 " ) ; 
 + 
 + execute ( " USE " + keyspace ( ) ) ; 
 + executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; 
 + 
 + / / Must NOT include " default _ time _ to _ live " for Materialized View creation 
 + try 
 + { 
 + createView ( " mv _ ttl1 " , " CREATE MATERIALIZED VIEW % s AS SELECT * FROM % % s WHERE k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( k , c ) WITH default _ time _ to _ live = 30 " ) ; 
 + Assert . fail ( " Should fail if TTL is provided for materialized view " ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + } 
 + } 
 + 
 + @ Test 
 + public void testAlterMvWithTTL ( ) throws Throwable 
 + { 
 + createTable ( " CREATE TABLE % s ( " + 
 + " k int PRIMARY KEY , " + 
 + " c int , " + 
 + " val int ) WITH default _ time _ to _ live = 60 " ) ; 
 + 
 + execute ( " USE " + keyspace ( ) ) ; 
 + executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; 
 + 
 + createView ( " mv _ ttl2 " , " CREATE MATERIALIZED VIEW % s AS SELECT * FROM % % s WHERE k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( k , c ) " ) ; 
 + 
 + / / Must NOT include " default _ time _ to _ live " on alter Materialized View 
 + try 
 + { 
 + executeNet ( protocolVersion , " ALTER MATERIALIZED VIEW % s WITH default _ time _ to _ live = 30 " ) ; 
 + Assert . fail ( " Should fail if TTL is provided while altering materialized view " ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + } 
 + } 
 + 
 + @ Test 
 public void complexTimestampUpdateTestWithFlush ( ) throws Throwable 
 { 
 complexTimestampUpdateTest ( true ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
