BLEU SCORE: 0.05341087579952926

TEST MSG: nit remove redundant int cast
GENERATED MSG: avoid silently swallowing errors

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / util / DataIntegrityMetadata . java b / src / java / org / apache / cassandra / io / util / DataIntegrityMetadata . java <nl> index e6f5083 . . ac924ec 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / DataIntegrityMetadata . java <nl> + + + b / src / java / org / apache / cassandra / io / util / DataIntegrityMetadata . java <nl> @ @ - 123 , 7 + 123 , 7 @ @ public class DataIntegrityMetadata <nl> <nl> incrementalChecksum . update ( buffer , start , end ) ; <nl> incrementalChecksumValue = ( int ) incrementalChecksum . getValue ( ) ; <nl> - incrementalOut . writeInt ( ( int ) incrementalChecksumValue ) ; <nl> + incrementalOut . writeInt ( incrementalChecksumValue ) ; <nl> incrementalChecksum . reset ( ) ; <nl> <nl> fullChecksum . update ( buffer , start , end ) ; <nl> @ @ - 131 , 7 + 131 , 7 @ @ public class DataIntegrityMetadata <nl> if ( checksumIncrementalResult ) <nl> { <nl> ByteBuffer byteBuffer = ByteBuffer . allocate ( 4 ) ; <nl> - byteBuffer . putInt ( ( int ) incrementalChecksumValue ) ; <nl> + byteBuffer . putInt ( incrementalChecksumValue ) ; <nl> fullChecksum . update ( byteBuffer . array ( ) , 0 , byteBuffer . array ( ) . length ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / sstable / CacheWriter . java b / src / java / org / apache / cassandra / io / sstable / CacheWriter . java <nl> index d20f657 . . a79f55a 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / CacheWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / CacheWriter . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ public class CacheWriter < K , V > implements ICompactionInfo <nl> logger . debug ( " Saving { } " , path ) ; <nl> File tmpFile = File . createTempFile ( path . getName ( ) , null , path . getParentFile ( ) ) ; <nl> <nl> - BufferedRandomAccessFile out = new BufferedRandomAccessFile ( tmpFile , " w " , BufferedRandomAccessFile . DEFAULT _ BUFFER _ SIZE , true ) ; <nl> + BufferedRandomAccessFile out = new BufferedRandomAccessFile ( tmpFile , " rw " , BufferedRandomAccessFile . DEFAULT _ BUFFER _ SIZE , true ) ; <nl> try <nl> { <nl> for ( K key : keys ) <nl> diff - - git a / src / java / org / apache / cassandra / io / util / BufferedRandomAccessFile . java b / src / java / org / apache / cassandra / io / util / BufferedRandomAccessFile . java <nl> index ac90aaf . . 9f21d15 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / BufferedRandomAccessFile . java <nl> + + + b / src / java / org / apache / cassandra / io / util / BufferedRandomAccessFile . java <nl> @ @ - 63 , 7 + 63 , 7 @ @ public class BufferedRandomAccessFile extends RandomAccessFile implements FileDa <nl> / / or in directIO ( ) method to the DEFAULT _ DIRECT _ BUFFER _ SIZE <nl> private long maxBufferSize ; <nl> <nl> - / / constant , used for caching purpose , - 1 if file is open in " w " mode <nl> + / / constant , used for caching purpose , - 1 if file is open in " rw " mode <nl> / / otherwise this will hold cached file length <nl> private final long fileLength ; <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / util / DataIntegrityMetadata . java b / src / java / org / apache / cassandra / io / util / DataIntegrityMetadata . java 
 index e6f5083 . . ac924ec 100644 
 - - - a / src / java / org / apache / cassandra / io / util / DataIntegrityMetadata . java 
 + + + b / src / java / org / apache / cassandra / io / util / DataIntegrityMetadata . java 
 @ @ - 123 , 7 + 123 , 7 @ @ public class DataIntegrityMetadata 
 
 incrementalChecksum . update ( buffer , start , end ) ; 
 incrementalChecksumValue = ( int ) incrementalChecksum . getValue ( ) ; 
 - incrementalOut . writeInt ( ( int ) incrementalChecksumValue ) ; 
 + incrementalOut . writeInt ( incrementalChecksumValue ) ; 
 incrementalChecksum . reset ( ) ; 
 
 fullChecksum . update ( buffer , start , end ) ; 
 @ @ - 131 , 7 + 131 , 7 @ @ public class DataIntegrityMetadata 
 if ( checksumIncrementalResult ) 
 { 
 ByteBuffer byteBuffer = ByteBuffer . allocate ( 4 ) ; 
 - byteBuffer . putInt ( ( int ) incrementalChecksumValue ) ; 
 + byteBuffer . putInt ( incrementalChecksumValue ) ; 
 fullChecksum . update ( byteBuffer . array ( ) , 0 , byteBuffer . array ( ) . length ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / sstable / CacheWriter . java b / src / java / org / apache / cassandra / io / sstable / CacheWriter . java 
 index d20f657 . . a79f55a 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / CacheWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / CacheWriter . java 
 @ @ - 45 , 7 + 45 , 7 @ @ public class CacheWriter < K , V > implements ICompactionInfo 
 logger . debug ( " Saving { } " , path ) ; 
 File tmpFile = File . createTempFile ( path . getName ( ) , null , path . getParentFile ( ) ) ; 
 
 - BufferedRandomAccessFile out = new BufferedRandomAccessFile ( tmpFile , " w " , BufferedRandomAccessFile . DEFAULT _ BUFFER _ SIZE , true ) ; 
 + BufferedRandomAccessFile out = new BufferedRandomAccessFile ( tmpFile , " rw " , BufferedRandomAccessFile . DEFAULT _ BUFFER _ SIZE , true ) ; 
 try 
 { 
 for ( K key : keys ) 
 diff - - git a / src / java / org / apache / cassandra / io / util / BufferedRandomAccessFile . java b / src / java / org / apache / cassandra / io / util / BufferedRandomAccessFile . java 
 index ac90aaf . . 9f21d15 100644 
 - - - a / src / java / org / apache / cassandra / io / util / BufferedRandomAccessFile . java 
 + + + b / src / java / org / apache / cassandra / io / util / BufferedRandomAccessFile . java 
 @ @ - 63 , 7 + 63 , 7 @ @ public class BufferedRandomAccessFile extends RandomAccessFile implements FileDa 
 / / or in directIO ( ) method to the DEFAULT _ DIRECT _ BUFFER _ SIZE 
 private long maxBufferSize ; 
 
 - / / constant , used for caching purpose , - 1 if file is open in " w " mode 
 + / / constant , used for caching purpose , - 1 if file is open in " rw " mode 
 / / otherwise this will hold cached file length 
 private final long fileLength ; 

