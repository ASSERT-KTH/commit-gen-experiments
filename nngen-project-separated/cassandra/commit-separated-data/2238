BLEU SCORE: 1.0

TEST MSG: fix build
GENERATED MSG: fix build

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java <nl> index b375ce2 . . 7a5fd47 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java <nl> @ @ - 422 , 15 + 422 , 15 @ @ public class CqlConfigHelper <nl> poolingOptions . setCoreConnectionsPerHost ( HostDistance . LOCAL , coreConnections . get ( ) ) ; <nl> if ( maxConnections . isPresent ( ) ) <nl> poolingOptions . setMaxConnectionsPerHost ( HostDistance . LOCAL , maxConnections . get ( ) ) ; <nl> - if ( maxSimultaneousRequests . isPresent ( ) ) <nl> - poolingOptions . setMaxSimultaneousRequestsPerConnectionThreshold ( HostDistance . LOCAL , maxSimultaneousRequests . get ( ) ) ; <nl> if ( minSimultaneousRequests . isPresent ( ) ) <nl> poolingOptions . setMinSimultaneousRequestsPerConnectionThreshold ( HostDistance . LOCAL , minSimultaneousRequests . get ( ) ) ; <nl> + if ( maxSimultaneousRequests . isPresent ( ) ) <nl> + poolingOptions . setMaxSimultaneousRequestsPerConnectionThreshold ( HostDistance . LOCAL , maxSimultaneousRequests . get ( ) ) ; <nl> <nl> poolingOptions . setCoreConnectionsPerHost ( HostDistance . REMOTE , 0 ) <nl> . setMaxConnectionsPerHost ( HostDistance . REMOTE , 0 ) <nl> - . setMaxSimultaneousRequestsPerConnectionThreshold ( HostDistance . REMOTE , 0 ) <nl> - . setMinSimultaneousRequestsPerConnectionThreshold ( HostDistance . REMOTE , 0 ) ; <nl> + . setMinSimultaneousRequestsPerConnectionThreshold ( HostDistance . REMOTE , 0 ) <nl> + . setMaxSimultaneousRequestsPerConnectionThreshold ( HostDistance . REMOTE , 0 ) ; <nl> <nl> return poolingOptions ; <nl> } <nl> @ @ - 519 , 6 + 519 , 11 @ @ public class CqlConfigHelper <nl> } <nl> <nl> @ Override <nl> + public void onSuspected ( Host host ) <nl> + { <nl> + } <nl> + <nl> + @ Override <nl> public HostDistance distance ( Host host ) <nl> { <nl> if ( host . getAddress ( ) . getHostName ( ) . equals ( stickHost ) )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> index 7e0b199 . . b8e290c 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class SSTableWriter extends SSTable <nl> { <nl> super ( filename , metadata , partitioner ) ; <nl> iwriter = new IndexWriter ( desc , partitioner , keyCount ) ; <nl> - dbuilder = SegmentedFile . getBuilder ( ) ; <nl> + dbuilder = SegmentedFile . getBuilder ( DatabaseDescriptor . getDiskAccessMode ( ) ) ; <nl> dataFile = new BufferedRandomAccessFile ( getFilename ( ) , " rw " , DatabaseDescriptor . getInMemoryCompactionLimit ( ) ) ; <nl> } <nl> <nl> @ @ - 344 , 7 + 344 , 7 @ @ public class SSTableWriter extends SSTable <nl> this . desc = desc ; <nl> this . partitioner = part ; <nl> indexFile = new BufferedRandomAccessFile ( desc . filenameFor ( SSTable . COMPONENT _ INDEX ) , " rw " , 8 * 1024 * 1024 ) ; <nl> - builder = SegmentedFile . getBuilder ( ) ; <nl> + builder = SegmentedFile . getBuilder ( DatabaseDescriptor . getIndexAccessMode ( ) ) ; <nl> summary = new IndexSummary ( ) ; <nl> bf = BloomFilter . getFilter ( keyCount , 15 ) ; <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java 
 index b375ce2 . . 7a5fd47 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java 
 + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java 
 @ @ - 422 , 15 + 422 , 15 @ @ public class CqlConfigHelper 
 poolingOptions . setCoreConnectionsPerHost ( HostDistance . LOCAL , coreConnections . get ( ) ) ; 
 if ( maxConnections . isPresent ( ) ) 
 poolingOptions . setMaxConnectionsPerHost ( HostDistance . LOCAL , maxConnections . get ( ) ) ; 
 - if ( maxSimultaneousRequests . isPresent ( ) ) 
 - poolingOptions . setMaxSimultaneousRequestsPerConnectionThreshold ( HostDistance . LOCAL , maxSimultaneousRequests . get ( ) ) ; 
 if ( minSimultaneousRequests . isPresent ( ) ) 
 poolingOptions . setMinSimultaneousRequestsPerConnectionThreshold ( HostDistance . LOCAL , minSimultaneousRequests . get ( ) ) ; 
 + if ( maxSimultaneousRequests . isPresent ( ) ) 
 + poolingOptions . setMaxSimultaneousRequestsPerConnectionThreshold ( HostDistance . LOCAL , maxSimultaneousRequests . get ( ) ) ; 
 
 poolingOptions . setCoreConnectionsPerHost ( HostDistance . REMOTE , 0 ) 
 . setMaxConnectionsPerHost ( HostDistance . REMOTE , 0 ) 
 - . setMaxSimultaneousRequestsPerConnectionThreshold ( HostDistance . REMOTE , 0 ) 
 - . setMinSimultaneousRequestsPerConnectionThreshold ( HostDistance . REMOTE , 0 ) ; 
 + . setMinSimultaneousRequestsPerConnectionThreshold ( HostDistance . REMOTE , 0 ) 
 + . setMaxSimultaneousRequestsPerConnectionThreshold ( HostDistance . REMOTE , 0 ) ; 
 
 return poolingOptions ; 
 } 
 @ @ - 519 , 6 + 519 , 11 @ @ public class CqlConfigHelper 
 } 
 
 @ Override 
 + public void onSuspected ( Host host ) 
 + { 
 + } 
 + 
 + @ Override 
 public HostDistance distance ( Host host ) 
 { 
 if ( host . getAddress ( ) . getHostName ( ) . equals ( stickHost ) )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 index 7e0b199 . . b8e290c 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public class SSTableWriter extends SSTable 
 { 
 super ( filename , metadata , partitioner ) ; 
 iwriter = new IndexWriter ( desc , partitioner , keyCount ) ; 
 - dbuilder = SegmentedFile . getBuilder ( ) ; 
 + dbuilder = SegmentedFile . getBuilder ( DatabaseDescriptor . getDiskAccessMode ( ) ) ; 
 dataFile = new BufferedRandomAccessFile ( getFilename ( ) , " rw " , DatabaseDescriptor . getInMemoryCompactionLimit ( ) ) ; 
 } 
 
 @ @ - 344 , 7 + 344 , 7 @ @ public class SSTableWriter extends SSTable 
 this . desc = desc ; 
 this . partitioner = part ; 
 indexFile = new BufferedRandomAccessFile ( desc . filenameFor ( SSTable . COMPONENT _ INDEX ) , " rw " , 8 * 1024 * 1024 ) ; 
 - builder = SegmentedFile . getBuilder ( ) ; 
 + builder = SegmentedFile . getBuilder ( DatabaseDescriptor . getIndexAccessMode ( ) ) ; 
 summary = new IndexSummary ( ) ; 
 bf = BloomFilter . getFilter ( keyCount , 15 ) ; 
 }
