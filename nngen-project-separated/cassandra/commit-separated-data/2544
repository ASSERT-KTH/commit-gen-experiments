BLEU SCORE: 0.05341087579952926

TEST MSG: Setting severity via JMX broken
GENERATED MSG: add nodeprobe cancelpending

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitch . java b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitch . java <nl> index 00c3618 . . c76a196 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitch . java <nl> + + + b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitch . java <nl> @ @ - 300 , 7 + 300 , 7 @ @ public class DynamicEndpointSnitch extends AbstractEndpointSnitch implements ILa <nl> <nl> public void setSeverity ( double severity ) <nl> { <nl> - StorageService . instance . reportSeverity ( severity ) ; <nl> + StorageService . instance . reportManualSeverity ( severity ) ; <nl> } <nl> <nl> public double getSeverity ( ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 7382cbd . . 75f6427 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1054 , 6 + 1054 , 11 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> bgMonitor . incrCompactionSeverity ( incr ) ; <nl> } <nl> <nl> + public void reportManualSeverity ( double incr ) <nl> + { <nl> + bgMonitor . incrManualSeverity ( incr ) ; <nl> + } <nl> + <nl> public double getSeverity ( InetAddress endpoint ) <nl> { <nl> return bgMonitor . getSeverity ( endpoint ) ; <nl> diff - - git a / src / java / org / apache / cassandra / utils / BackgroundActivityMonitor . java b / src / java / org / apache / cassandra / utils / BackgroundActivityMonitor . java <nl> index bad9a17 . . 93906eb 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / BackgroundActivityMonitor . java <nl> + + + b / src / java / org / apache / cassandra / utils / BackgroundActivityMonitor . java <nl> @ @ - 56 , 6 + 56 , 7 @ @ public class BackgroundActivityMonitor <nl> private static final String PROC _ STAT _ PATH = " / proc / stat " ; <nl> <nl> private final AtomicDouble compaction _ severity = new AtomicDouble ( ) ; <nl> + private final AtomicDouble manual _ severity = new AtomicDouble ( ) ; <nl> private final ScheduledExecutorService reportThread = new DebuggableScheduledThreadPoolExecutor ( " Background _ Reporter " ) ; <nl> <nl> private RandomAccessFile statsFile ; <nl> @ @ - 112 , 6 + 113 , 11 @ @ public class BackgroundActivityMonitor <nl> compaction _ severity . addAndGet ( sev ) ; <nl> } <nl> <nl> + public void incrManualSeverity ( double sev ) <nl> + { <nl> + manual _ severity . addAndGet ( sev ) ; <nl> + } <nl> + <nl> public double getIOWait ( ) throws IOException <nl> { <nl> if ( statsFile = = null ) <nl> @ @ - 157 , 6 + 163 , 7 @ @ public class BackgroundActivityMonitor <nl> <nl> if ( ! Gossiper . instance . isEnabled ( ) ) <nl> return ; <nl> + report + = manual _ severity . get ( ) ; / / add manual severity setting . <nl> VersionedValue updated = StorageService . instance . valueFactory . severity ( report ) ; <nl> Gossiper . instance . addLocalApplicationState ( ApplicationState . SEVERITY , updated ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / locator / TokenMetadata . java b / src / java / org / apache / cassandra / locator / TokenMetadata . java <nl> index 164d80f . . 771ce2f 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / TokenMetadata . java <nl> + + + b / src / java / org / apache / cassandra / locator / TokenMetadata . java <nl> @ @ - 287 , 4 + 287 , 9 @ @ public class TokenMetadata <nl> { <nl> return getEndPoint ( getSuccessor ( getToken ( endPoint ) ) ) ; <nl> } <nl> + <nl> + public void clearPendingRanges ( ) <nl> + { <nl> + pendingRanges . clear ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index bc23170 . . d4beeb8 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1046 , 4 + 1046 , 9 @ @ public final class StorageService implements IEndPointStateChangeSubscriber , Sto <nl> { <nl> return replicationStrategy _ ; <nl> } <nl> + <nl> + public void cancelPendingRanges ( ) <nl> + { <nl> + tokenMetadata _ . clearPendingRanges ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> index f4a9913 . . 3cb2001 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> @ @ - 131 , 6 + 131 , 13 @ @ public interface StorageServiceMBean <nl> * / <nl> public void loadBalance ( ) throws IOException , InterruptedException ; <nl> <nl> + / * * <nl> + * cancel writes to nodes that are set to be changing ranges . <nl> + * Only do this if the reason for the range changes no longer exists <nl> + * ( e . g . , a bootstrapping node was killed or crashed . ) <nl> + * / <nl> + public void cancelPendingRanges ( ) ; <nl> + <nl> / * * set the logging level at runtime * / <nl> public void setLog4jLevel ( String classQualifier , String level ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index 96d80bf . . 347e2c1 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 393 , 6 + 393 , 11 @ @ public class NodeProbe <nl> ssProxy . move ( newToken ) ; <nl> } <nl> <nl> + public void cancelPendingRanges ( ) <nl> + { <nl> + ssProxy . cancelPendingRanges ( ) ; <nl> + } <nl> + <nl> / * * <nl> * Print out the size of the queues in the thread pools <nl> * <nl> @ @ - 488 , 7 + 493 , 7 @ @ public class NodeProbe <nl> HelpFormatter hf = new HelpFormatter ( ) ; <nl> String header = String . format ( <nl> " % nAvailable commands : ring , info , cleanup , compact , cfstats , snapshot [ name ] , clearsnapshot , " + <nl> - " tpstats , flush , decommission , move , loadbalance , " + <nl> + " tpstats , flush , decommission , move , loadbalance , cancelpending , " + <nl> " getcompactionthreshold , setcompactionthreshold [ minthreshold ] ( [ maxthreshold ] ) " ) ; <nl> String usage = String . format ( " java % s - host < arg > < command > % n " , NodeProbe . class . getName ( ) ) ; <nl> hf . printHelp ( usage , " " , options , header ) ; <nl> @ @ - 563 , 6 + 568 , 10 @ @ public class NodeProbe <nl> } <nl> probe . move ( arguments [ 1 ] ) ; <nl> } <nl> + else if ( cmdName . equals ( " cancelpending " ) ) <nl> + { <nl> + probe . cancelPendingRanges ( ) ; <nl> + } <nl> else if ( cmdName . equals ( " snapshot " ) ) <nl> { <nl> String snapshotName = " " ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitch . java b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitch . java 
 index 00c3618 . . c76a196 100644 
 - - - a / src / java / org / apache / cassandra / locator / DynamicEndpointSnitch . java 
 + + + b / src / java / org / apache / cassandra / locator / DynamicEndpointSnitch . java 
 @ @ - 300 , 7 + 300 , 7 @ @ public class DynamicEndpointSnitch extends AbstractEndpointSnitch implements ILa 
 
 public void setSeverity ( double severity ) 
 { 
 - StorageService . instance . reportSeverity ( severity ) ; 
 + StorageService . instance . reportManualSeverity ( severity ) ; 
 } 
 
 public double getSeverity ( ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 7382cbd . . 75f6427 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1054 , 6 + 1054 , 11 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 bgMonitor . incrCompactionSeverity ( incr ) ; 
 } 
 
 + public void reportManualSeverity ( double incr ) 
 + { 
 + bgMonitor . incrManualSeverity ( incr ) ; 
 + } 
 + 
 public double getSeverity ( InetAddress endpoint ) 
 { 
 return bgMonitor . getSeverity ( endpoint ) ; 
 diff - - git a / src / java / org / apache / cassandra / utils / BackgroundActivityMonitor . java b / src / java / org / apache / cassandra / utils / BackgroundActivityMonitor . java 
 index bad9a17 . . 93906eb 100644 
 - - - a / src / java / org / apache / cassandra / utils / BackgroundActivityMonitor . java 
 + + + b / src / java / org / apache / cassandra / utils / BackgroundActivityMonitor . java 
 @ @ - 56 , 6 + 56 , 7 @ @ public class BackgroundActivityMonitor 
 private static final String PROC _ STAT _ PATH = " / proc / stat " ; 
 
 private final AtomicDouble compaction _ severity = new AtomicDouble ( ) ; 
 + private final AtomicDouble manual _ severity = new AtomicDouble ( ) ; 
 private final ScheduledExecutorService reportThread = new DebuggableScheduledThreadPoolExecutor ( " Background _ Reporter " ) ; 
 
 private RandomAccessFile statsFile ; 
 @ @ - 112 , 6 + 113 , 11 @ @ public class BackgroundActivityMonitor 
 compaction _ severity . addAndGet ( sev ) ; 
 } 
 
 + public void incrManualSeverity ( double sev ) 
 + { 
 + manual _ severity . addAndGet ( sev ) ; 
 + } 
 + 
 public double getIOWait ( ) throws IOException 
 { 
 if ( statsFile = = null ) 
 @ @ - 157 , 6 + 163 , 7 @ @ public class BackgroundActivityMonitor 
 
 if ( ! Gossiper . instance . isEnabled ( ) ) 
 return ; 
 + report + = manual _ severity . get ( ) ; / / add manual severity setting . 
 VersionedValue updated = StorageService . instance . valueFactory . severity ( report ) ; 
 Gossiper . instance . addLocalApplicationState ( ApplicationState . SEVERITY , updated ) ; 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / locator / TokenMetadata . java b / src / java / org / apache / cassandra / locator / TokenMetadata . java 
 index 164d80f . . 771ce2f 100644 
 - - - a / src / java / org / apache / cassandra / locator / TokenMetadata . java 
 + + + b / src / java / org / apache / cassandra / locator / TokenMetadata . java 
 @ @ - 287 , 4 + 287 , 9 @ @ public class TokenMetadata 
 { 
 return getEndPoint ( getSuccessor ( getToken ( endPoint ) ) ) ; 
 } 
 + 
 + public void clearPendingRanges ( ) 
 + { 
 + pendingRanges . clear ( ) ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index bc23170 . . d4beeb8 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1046 , 4 + 1046 , 9 @ @ public final class StorageService implements IEndPointStateChangeSubscriber , Sto 
 { 
 return replicationStrategy _ ; 
 } 
 + 
 + public void cancelPendingRanges ( ) 
 + { 
 + tokenMetadata _ . clearPendingRanges ( ) ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 index f4a9913 . . 3cb2001 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 @ @ - 131 , 6 + 131 , 13 @ @ public interface StorageServiceMBean 
 * / 
 public void loadBalance ( ) throws IOException , InterruptedException ; 
 
 + / * * 
 + * cancel writes to nodes that are set to be changing ranges . 
 + * Only do this if the reason for the range changes no longer exists 
 + * ( e . g . , a bootstrapping node was killed or crashed . ) 
 + * / 
 + public void cancelPendingRanges ( ) ; 
 + 
 / * * set the logging level at runtime * / 
 public void setLog4jLevel ( String classQualifier , String level ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index 96d80bf . . 347e2c1 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 393 , 6 + 393 , 11 @ @ public class NodeProbe 
 ssProxy . move ( newToken ) ; 
 } 
 
 + public void cancelPendingRanges ( ) 
 + { 
 + ssProxy . cancelPendingRanges ( ) ; 
 + } 
 + 
 / * * 
 * Print out the size of the queues in the thread pools 
 * 
 @ @ - 488 , 7 + 493 , 7 @ @ public class NodeProbe 
 HelpFormatter hf = new HelpFormatter ( ) ; 
 String header = String . format ( 
 " % nAvailable commands : ring , info , cleanup , compact , cfstats , snapshot [ name ] , clearsnapshot , " + 
 - " tpstats , flush , decommission , move , loadbalance , " + 
 + " tpstats , flush , decommission , move , loadbalance , cancelpending , " + 
 " getcompactionthreshold , setcompactionthreshold [ minthreshold ] ( [ maxthreshold ] ) " ) ; 
 String usage = String . format ( " java % s - host < arg > < command > % n " , NodeProbe . class . getName ( ) ) ; 
 hf . printHelp ( usage , " " , options , header ) ; 
 @ @ - 563 , 6 + 568 , 10 @ @ public class NodeProbe 
 } 
 probe . move ( arguments [ 1 ] ) ; 
 } 
 + else if ( cmdName . equals ( " cancelpending " ) ) 
 + { 
 + probe . cancelPendingRanges ( ) ; 
 + } 
 else if ( cmdName . equals ( " snapshot " ) ) 
 { 
 String snapshotName = " " ;
