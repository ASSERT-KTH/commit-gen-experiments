BLEU SCORE: 0.034353182138500235

TEST MSG: Fix ipv6 parsing on Windows startup
GENERATED MSG: remove option to launch avro rpc daemon

TEST DIFF (one line): diff - - git a / bin / cassandra . ps1 b / bin / cassandra . ps1 <nl> index 80049ee . . 41ea7c1 100644 <nl> - - - a / bin / cassandra . ps1 <nl> + + + b / bin / cassandra . ps1 <nl> @ @ - 299 , 12 + 299 , 12 @ @ Function VerifyPortsAreAvailable <nl> { <nl> if ( $ line - match " ^ listen _ address : " ) <nl> { <nl> - $ args = $ line - Split " : " <nl> + $ args = $ line - Split " : " <nl> $ listenAddress = $ args [ 1 ] - replace " " , " " <nl> } <nl> if ( $ line - match " ^ rpc _ address : " ) <nl> { <nl> - $ args = $ line - Split " : " <nl> + $ args = $ line - Split " : " <nl> $ rpcAddress = $ args [ 1 ] - replace " " , " " <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 0a9cf15 . . 5580a25 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 38 , 7 + 38 , 6 @ @ <nl> < property name = " interface . dir " value = " $ { basedir } / interface " / > <nl> < property name = " interface . thrift . dir " value = " $ { interface . dir } / thrift " / > <nl> < property name = " interface . thrift . gen - java " value = " $ { interface . thrift . dir } / gen - java " / > <nl> - < property name = " interface . avro . dir " value = " $ { interface . dir } / avro " / > <nl> < property name = " test . dir " value = " $ { basedir } / test " / > <nl> < property name = " test . resources " value = " $ { test . dir } / resources " / > <nl> < property name = " test . lib " value = " $ { build . dir } / test / lib " / > <nl> @ @ - 119 , 7 + 118 , 6 @ @ <nl> < delete dir = " $ { build . test . dir } " / > <nl> < delete dir = " $ { build . classes } " / > <nl> < delete dir = " $ { build . src . gen - java } " / > <nl> - < delete dir = " $ { interface . avro . dir } " / > <nl> < delete file = " $ { build . dir } / internode . avpr " / > <nl> < / target > <nl> < target depends = " clean " name = " cleanall " / > <nl> @ @ - 210 , 21 + 208 , 23 @ @ <nl> < taskdef name = " avro - protocol " classname = " org . apache . avro . specific . ProtocolTask " > <nl> < classpath refid = " cassandra . classpath " / > <nl> < / taskdef > <nl> - < uptodate property = " avroInterfaceUpToDate " srcfile = " $ { interface . dir } / cassandra . genavro " <nl> - targetfile = " $ { interface . avro . dir } / cassandra . avpr " / > <nl> + < uptodate property = " avroInterfaceUpToDate " <nl> + srcfile = " $ { build . src . java } / org / apache / cassandra / hadoop / hadoop . genavro " <nl> + targetfile = " $ { build . src . gen - java } / org / apache / cassandra / hadoop / hadoop . avpr " / > <nl> < uptodate property = " avroINProtoUpToDate " srcfile = " $ { avro . src } / internode . genavro " <nl> targetfile = " $ { build . dir } / internode . avpr " / > <nl> < / target > <nl> <nl> < target name = " avro - generate " <nl> - depends = " avro - interface - generate - client , avro - interface - generate - internode " <nl> + depends = " avro - interface - generate - hadoop , avro - interface - generate - internode " <nl> description = " Generates Java Avro classes for client and internal use . " / > <nl> <nl> - < target name = " avro - interface - generate - client " unless = " avroInterfaceUpToDate " <nl> + < target name = " avro - interface - generate - hadoop " unless = " avroInterfaceUpToDate " <nl> depends = " init , check - avro - generate , ivy - retrieve - build " > <nl> - < ! - - A copy for our build . - - > <nl> - < avromacro protocolname = " api " inputfile = " $ { interface . dir } / cassandra . genavro " <nl> - jsondir = " $ { build . dir } " outputdir = " $ { build . src } " / > <nl> + < avromacro protocolname = " hadoop " <nl> + inputfile = " $ { build . src . java } / org / apache / cassandra / hadoop / hadoop . genavro " <nl> + jsondir = " $ { build . src . gen - java } / org / apache / cassandra / hadoop " <nl> + outputdir = " $ { build . src } " / > <nl> < / target > <nl> < target name = " avro - interface - generate - internode " unless = " avroINProtoUpToDate " <nl> depends = " init , check - avro - generate , ivy - retrieve - build " > <nl> @ @ - 362 , 8 + 362 , 6 @ @ <nl> < copy todir = " $ { dist . dir } / interface " > <nl> < fileset dir = " interface " > <nl> < include name = " * * / * . thrift " / > <nl> - < include name = " cassandra . genavro " / > <nl> - < include name = " avro / cassandra . avpr " / > <nl> < / fileset > <nl> < / copy > <nl> < copy todir = " $ { dist . dir } / " > <nl> @ @ - 401 , 7 + 399 , 6 @ @ <nl> < include name = " * * " / > <nl> < exclude name = " build / * * " / > <nl> < exclude name = " src / gen - java / * * " / > <nl> - < exclude name = " interface / avro / * * " / > <nl> < exclude name = " . git / * * " / > <nl> < exclude name = " bin / * " / > < ! - - handled separately below - - > <nl> < ! - - exclude Eclipse files - - > <nl> diff - - git a / interface / cassandra . genavro b / interface / cassandra . genavro <nl> deleted file mode 100644 <nl> index 1d834ef . . 0000000 <nl> - - - a / interface / cassandra . genavro <nl> + + + / dev / null <nl> @ @ - 1 , 70 + 0 , 0 @ @ <nl> - / * * <nl> - * Licensed to the Apache Software Foundation ( ASF ) under one <nl> - * or more contributor license agreements . See the NOTICE file <nl> - * distributed with this work for additional information <nl> - * regarding copyright ownership . The ASF licenses this file <nl> - * to you under the Apache License , Version 2 . 0 ( the <nl> - * " License " ) ; you may not use this file except in compliance <nl> - * with the License . You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - / * * <nl> - * Cassandra client interface ( legacy ) . <nl> - * / <nl> - @ namespace ( " org . apache . cassandra . avro " ) <nl> - <nl> - protocol Cassandra { <nl> - record Column { <nl> - bytes name ; <nl> - bytes value ; <nl> - long timestamp ; <nl> - union { int , null } ttl ; <nl> - } <nl> - <nl> - record SuperColumn { <nl> - bytes name ; <nl> - array < Column > columns ; <nl> - } <nl> - <nl> - record ColumnOrSuperColumn { <nl> - union { Column , null } column ; <nl> - union { SuperColumn , null } super _ column ; <nl> - } <nl> - <nl> - record SliceRange { <nl> - bytes start ; <nl> - bytes finish ; <nl> - boolean reversed ; <nl> - int count ; <nl> - union { array < bytes > , null } bitmasks ; <nl> - } <nl> - <nl> - record SlicePredicate { <nl> - union { array < bytes > , null } column _ names ; <nl> - union { SliceRange , null } slice _ range ; <nl> - } <nl> - <nl> - record Deletion { <nl> - long timestamp ; <nl> - union { bytes , null } super _ column ; <nl> - union { SlicePredicate , null } predicate ; <nl> - } <nl> - <nl> - record Mutation { <nl> - union { ColumnOrSuperColumn , null } column _ or _ supercolumn ; <nl> - union { Deletion , null } deletion ; <nl> - } <nl> - <nl> - record StreamingMutation { <nl> - bytes key ; <nl> - Mutation mutation ; <nl> - } <nl> - } <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / ColumnFamilyOutputFormat . java b / src / java / org / apache / cassandra / hadoop / ColumnFamilyOutputFormat . java <nl> index b298e90 . . 1d50f10 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / ColumnFamilyOutputFormat . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / ColumnFamilyOutputFormat . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . auth . SimpleAuthenticator ; <nl> - import org . apache . cassandra . avro . Mutation ; <nl> + import org . apache . cassandra . hadoop . avro . Mutation ; <nl> import org . apache . cassandra . thrift . * ; <nl> import org . apache . hadoop . conf . Configuration ; <nl> import org . apache . hadoop . mapreduce . * ; <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordWriter . java b / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordWriter . java <nl> index 79456e4 . . 0947019 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordWriter . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordWriter . java <nl> @ @ - 59 , 8 + 59 , 8 @ @ import static org . apache . cassandra . io . SerDeUtils . copy ; <nl> * @ see OutputFormat <nl> * <nl> * / <nl> - final class ColumnFamilyRecordWriter extends RecordWriter < ByteBuffer , List < org . apache . cassandra . avro . Mutation > > <nl> - implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cassandra . avro . Mutation > > <nl> + final class ColumnFamilyRecordWriter extends RecordWriter < ByteBuffer , List < org . apache . cassandra . hadoop . avro . Mutation > > <nl> + implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cassandra . hadoop . avro . Mutation > > <nl> { <nl> / / The configuration this writer is associated with . <nl> private final Configuration conf ; <nl> @ @ - 118 , 7 + 118 , 7 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass <nl> * @ throws IOException <nl> * / <nl> @ Override <nl> - public void write ( ByteBuffer keybuff , List < org . apache . cassandra . avro . Mutation > value ) throws IOException <nl> + public void write ( ByteBuffer keybuff , List < org . apache . cassandra . hadoop . avro . Mutation > value ) throws IOException <nl> { <nl> Range range = ringCache . getRange ( keybuff ) ; <nl> <nl> @ @ - 132 , 17 + 132 , 17 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass <nl> clients . put ( range , client ) ; <nl> } <nl> <nl> - for ( org . apache . cassandra . avro . Mutation amut : value ) <nl> + for ( org . apache . cassandra . hadoop . avro . Mutation amut : value ) <nl> client . put ( new Pair < ByteBuffer , Mutation > ( keybuff , avroToThrift ( amut ) ) ) ; <nl> } <nl> <nl> / * * <nl> * Deep copies the given Avro mutation into a new Thrift mutation . <nl> * / <nl> - private Mutation avroToThrift ( org . apache . cassandra . avro . Mutation amut ) <nl> + private Mutation avroToThrift ( org . apache . cassandra . hadoop . avro . Mutation amut ) <nl> { <nl> Mutation mutation = new Mutation ( ) ; <nl> - org . apache . cassandra . avro . ColumnOrSuperColumn acosc = amut . column _ or _ supercolumn ; <nl> + org . apache . cassandra . hadoop . avro . ColumnOrSuperColumn acosc = amut . column _ or _ supercolumn ; <nl> if ( acosc ! = null ) <nl> { <nl> / / creation <nl> @ @ - 156 , 7 + 156 , 7 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass <nl> / / super column <nl> ByteBuffer scolname = acosc . super _ column . name ; <nl> List < Column > scolcols = new ArrayList < Column > ( acosc . super _ column . columns . size ( ) ) ; <nl> - for ( org . apache . cassandra . avro . Column acol : acosc . super _ column . columns ) <nl> + for ( org . apache . cassandra . hadoop . avro . Column acol : acosc . super _ column . columns ) <nl> scolcols . add ( avroToThrift ( acol ) ) ; <nl> cosc . setSuper _ column ( new SuperColumn ( scolname , scolcols ) ) ; <nl> } <nl> @ @ - 166 , 7 + 166 , 7 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass <nl> / / deletion <nl> Deletion deletion = new Deletion ( amut . deletion . timestamp ) ; <nl> mutation . setDeletion ( deletion ) ; <nl> - org . apache . cassandra . avro . SlicePredicate apred = amut . deletion . predicate ; <nl> + org . apache . cassandra . hadoop . avro . SlicePredicate apred = amut . deletion . predicate ; <nl> if ( amut . deletion . super _ column ! = null ) <nl> / / super column <nl> deletion . setSuper _ column ( copy ( amut . deletion . super _ column ) ) ; <nl> @ @ - 187 , 12 + 187 , 12 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass <nl> return mutation ; <nl> } <nl> <nl> - private SliceRange avroToThrift ( org . apache . cassandra . avro . SliceRange asr ) <nl> + private SliceRange avroToThrift ( org . apache . cassandra . hadoop . avro . SliceRange asr ) <nl> { <nl> return new SliceRange ( asr . start , asr . finish , asr . reversed , asr . count ) ; <nl> } <nl> <nl> - private Column avroToThrift ( org . apache . cassandra . avro . Column acol ) <nl> + private Column avroToThrift ( org . apache . cassandra . hadoop . avro . Column acol ) <nl> { <nl> return new Column ( acol . name , acol . value , acol . timestamp ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / hadoop . genavro b / src / java / org / apache / cassandra / hadoop / hadoop . genavro <nl> new file mode 100644 <nl> index 0000000 . . af9c53c <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / hadoop / hadoop . genavro <nl> @ @ - 0 , 0 + 1 , 70 @ @ <nl> + / * * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + / * * <nl> + * Cassandra client interface ( legacy ) . <nl> + * / <nl> + @ namespace ( " org . apache . cassandra . hadoop . avro " ) <nl> + <nl> + protocol Cassandra { <nl> + record Column { <nl> + bytes name ; <nl> + bytes value ; <nl> + long timestamp ; <nl> + union { int , null } ttl ; <nl> + } <nl> + <nl> + record SuperColumn { <nl> + bytes name ; <nl> + array < Column > columns ; <nl> + } <nl> + <nl> + record ColumnOrSuperColumn { <nl> + union { Column , null } column ; <nl> + union { SuperColumn , null } super _ column ; <nl> + } <nl> + <nl> + record SliceRange { <nl> + bytes start ; <nl> + bytes finish ; <nl> + boolean reversed ; <nl> + int count ; <nl> + union { array < bytes > , null } bitmasks ; <nl> + } <nl> + <nl> + record SlicePredicate { <nl> + union { array < bytes > , null } column _ names ; <nl> + union { SliceRange , null } slice _ range ; <nl> + } <nl> + <nl> + record Deletion { <nl> + long timestamp ; <nl> + union { bytes , null } super _ column ; <nl> + union { SlicePredicate , null } predicate ; <nl> + } <nl> + <nl> + record Mutation { <nl> + union { ColumnOrSuperColumn , null } column _ or _ supercolumn ; <nl> + union { Deletion , null } deletion ; <nl> + } <nl> + <nl> + record StreamingMutation { <nl> + bytes key ; <nl> + Mutation mutation ; <nl> + } <nl> + } <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / streaming / AvroOutputReader . java b / src / java / org / apache / cassandra / hadoop / streaming / AvroOutputReader . java <nl> index 7fdbf47 . . 3366886 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / streaming / AvroOutputReader . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / streaming / AvroOutputReader . java <nl> @ @ - 30 , 8 + 30 , 8 @ @ import java . util . List ; <nl> import org . apache . avro . io . BinaryDecoder ; <nl> import org . apache . avro . io . DecoderFactory ; <nl> import org . apache . avro . specific . SpecificDatumReader ; <nl> - import org . apache . cassandra . avro . Mutation ; <nl> - import org . apache . cassandra . avro . StreamingMutation ; <nl> + import org . apache . cassandra . hadoop . avro . Mutation ; <nl> + import org . apache . cassandra . hadoop . avro . StreamingMutation ; <nl> import org . apache . hadoop . streaming . PipeMapRed ; <nl> import org . apache . hadoop . streaming . io . OutputReader ; <nl>

TEST DIFF:
diff - - git a / bin / cassandra . ps1 b / bin / cassandra . ps1 
 index 80049ee . . 41ea7c1 100644 
 - - - a / bin / cassandra . ps1 
 + + + b / bin / cassandra . ps1 
 @ @ - 299 , 12 + 299 , 12 @ @ Function VerifyPortsAreAvailable 
 { 
 if ( $ line - match " ^ listen _ address : " ) 
 { 
 - $ args = $ line - Split " : " 
 + $ args = $ line - Split " : " 
 $ listenAddress = $ args [ 1 ] - replace " " , " " 
 } 
 if ( $ line - match " ^ rpc _ address : " ) 
 { 
 - $ args = $ line - Split " : " 
 + $ args = $ line - Split " : " 
 $ rpcAddress = $ args [ 1 ] - replace " " , " " 
 } 
 }

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 0a9cf15 . . 5580a25 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 38 , 7 + 38 , 6 @ @ 
 < property name = " interface . dir " value = " $ { basedir } / interface " / > 
 < property name = " interface . thrift . dir " value = " $ { interface . dir } / thrift " / > 
 < property name = " interface . thrift . gen - java " value = " $ { interface . thrift . dir } / gen - java " / > 
 - < property name = " interface . avro . dir " value = " $ { interface . dir } / avro " / > 
 < property name = " test . dir " value = " $ { basedir } / test " / > 
 < property name = " test . resources " value = " $ { test . dir } / resources " / > 
 < property name = " test . lib " value = " $ { build . dir } / test / lib " / > 
 @ @ - 119 , 7 + 118 , 6 @ @ 
 < delete dir = " $ { build . test . dir } " / > 
 < delete dir = " $ { build . classes } " / > 
 < delete dir = " $ { build . src . gen - java } " / > 
 - < delete dir = " $ { interface . avro . dir } " / > 
 < delete file = " $ { build . dir } / internode . avpr " / > 
 < / target > 
 < target depends = " clean " name = " cleanall " / > 
 @ @ - 210 , 21 + 208 , 23 @ @ 
 < taskdef name = " avro - protocol " classname = " org . apache . avro . specific . ProtocolTask " > 
 < classpath refid = " cassandra . classpath " / > 
 < / taskdef > 
 - < uptodate property = " avroInterfaceUpToDate " srcfile = " $ { interface . dir } / cassandra . genavro " 
 - targetfile = " $ { interface . avro . dir } / cassandra . avpr " / > 
 + < uptodate property = " avroInterfaceUpToDate " 
 + srcfile = " $ { build . src . java } / org / apache / cassandra / hadoop / hadoop . genavro " 
 + targetfile = " $ { build . src . gen - java } / org / apache / cassandra / hadoop / hadoop . avpr " / > 
 < uptodate property = " avroINProtoUpToDate " srcfile = " $ { avro . src } / internode . genavro " 
 targetfile = " $ { build . dir } / internode . avpr " / > 
 < / target > 
 
 < target name = " avro - generate " 
 - depends = " avro - interface - generate - client , avro - interface - generate - internode " 
 + depends = " avro - interface - generate - hadoop , avro - interface - generate - internode " 
 description = " Generates Java Avro classes for client and internal use . " / > 
 
 - < target name = " avro - interface - generate - client " unless = " avroInterfaceUpToDate " 
 + < target name = " avro - interface - generate - hadoop " unless = " avroInterfaceUpToDate " 
 depends = " init , check - avro - generate , ivy - retrieve - build " > 
 - < ! - - A copy for our build . - - > 
 - < avromacro protocolname = " api " inputfile = " $ { interface . dir } / cassandra . genavro " 
 - jsondir = " $ { build . dir } " outputdir = " $ { build . src } " / > 
 + < avromacro protocolname = " hadoop " 
 + inputfile = " $ { build . src . java } / org / apache / cassandra / hadoop / hadoop . genavro " 
 + jsondir = " $ { build . src . gen - java } / org / apache / cassandra / hadoop " 
 + outputdir = " $ { build . src } " / > 
 < / target > 
 < target name = " avro - interface - generate - internode " unless = " avroINProtoUpToDate " 
 depends = " init , check - avro - generate , ivy - retrieve - build " > 
 @ @ - 362 , 8 + 362 , 6 @ @ 
 < copy todir = " $ { dist . dir } / interface " > 
 < fileset dir = " interface " > 
 < include name = " * * / * . thrift " / > 
 - < include name = " cassandra . genavro " / > 
 - < include name = " avro / cassandra . avpr " / > 
 < / fileset > 
 < / copy > 
 < copy todir = " $ { dist . dir } / " > 
 @ @ - 401 , 7 + 399 , 6 @ @ 
 < include name = " * * " / > 
 < exclude name = " build / * * " / > 
 < exclude name = " src / gen - java / * * " / > 
 - < exclude name = " interface / avro / * * " / > 
 < exclude name = " . git / * * " / > 
 < exclude name = " bin / * " / > < ! - - handled separately below - - > 
 < ! - - exclude Eclipse files - - > 
 diff - - git a / interface / cassandra . genavro b / interface / cassandra . genavro 
 deleted file mode 100644 
 index 1d834ef . . 0000000 
 - - - a / interface / cassandra . genavro 
 + + + / dev / null 
 @ @ - 1 , 70 + 0 , 0 @ @ 
 - / * * 
 - * Licensed to the Apache Software Foundation ( ASF ) under one 
 - * or more contributor license agreements . See the NOTICE file 
 - * distributed with this work for additional information 
 - * regarding copyright ownership . The ASF licenses this file 
 - * to you under the Apache License , Version 2 . 0 ( the 
 - * " License " ) ; you may not use this file except in compliance 
 - * with the License . You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - / * * 
 - * Cassandra client interface ( legacy ) . 
 - * / 
 - @ namespace ( " org . apache . cassandra . avro " ) 
 - 
 - protocol Cassandra { 
 - record Column { 
 - bytes name ; 
 - bytes value ; 
 - long timestamp ; 
 - union { int , null } ttl ; 
 - } 
 - 
 - record SuperColumn { 
 - bytes name ; 
 - array < Column > columns ; 
 - } 
 - 
 - record ColumnOrSuperColumn { 
 - union { Column , null } column ; 
 - union { SuperColumn , null } super _ column ; 
 - } 
 - 
 - record SliceRange { 
 - bytes start ; 
 - bytes finish ; 
 - boolean reversed ; 
 - int count ; 
 - union { array < bytes > , null } bitmasks ; 
 - } 
 - 
 - record SlicePredicate { 
 - union { array < bytes > , null } column _ names ; 
 - union { SliceRange , null } slice _ range ; 
 - } 
 - 
 - record Deletion { 
 - long timestamp ; 
 - union { bytes , null } super _ column ; 
 - union { SlicePredicate , null } predicate ; 
 - } 
 - 
 - record Mutation { 
 - union { ColumnOrSuperColumn , null } column _ or _ supercolumn ; 
 - union { Deletion , null } deletion ; 
 - } 
 - 
 - record StreamingMutation { 
 - bytes key ; 
 - Mutation mutation ; 
 - } 
 - } 
 diff - - git a / src / java / org / apache / cassandra / hadoop / ColumnFamilyOutputFormat . java b / src / java / org / apache / cassandra / hadoop / ColumnFamilyOutputFormat . java 
 index b298e90 . . 1d50f10 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / ColumnFamilyOutputFormat . java 
 + + + b / src / java / org / apache / cassandra / hadoop / ColumnFamilyOutputFormat . java 
 @ @ - 31 , 7 + 31 , 7 @ @ import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . auth . SimpleAuthenticator ; 
 - import org . apache . cassandra . avro . Mutation ; 
 + import org . apache . cassandra . hadoop . avro . Mutation ; 
 import org . apache . cassandra . thrift . * ; 
 import org . apache . hadoop . conf . Configuration ; 
 import org . apache . hadoop . mapreduce . * ; 
 diff - - git a / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordWriter . java b / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordWriter . java 
 index 79456e4 . . 0947019 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordWriter . java 
 + + + b / src / java / org / apache / cassandra / hadoop / ColumnFamilyRecordWriter . java 
 @ @ - 59 , 8 + 59 , 8 @ @ import static org . apache . cassandra . io . SerDeUtils . copy ; 
 * @ see OutputFormat 
 * 
 * / 
 - final class ColumnFamilyRecordWriter extends RecordWriter < ByteBuffer , List < org . apache . cassandra . avro . Mutation > > 
 - implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cassandra . avro . Mutation > > 
 + final class ColumnFamilyRecordWriter extends RecordWriter < ByteBuffer , List < org . apache . cassandra . hadoop . avro . Mutation > > 
 + implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cassandra . hadoop . avro . Mutation > > 
 { 
 / / The configuration this writer is associated with . 
 private final Configuration conf ; 
 @ @ - 118 , 7 + 118 , 7 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass 
 * @ throws IOException 
 * / 
 @ Override 
 - public void write ( ByteBuffer keybuff , List < org . apache . cassandra . avro . Mutation > value ) throws IOException 
 + public void write ( ByteBuffer keybuff , List < org . apache . cassandra . hadoop . avro . Mutation > value ) throws IOException 
 { 
 Range range = ringCache . getRange ( keybuff ) ; 
 
 @ @ - 132 , 17 + 132 , 17 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass 
 clients . put ( range , client ) ; 
 } 
 
 - for ( org . apache . cassandra . avro . Mutation amut : value ) 
 + for ( org . apache . cassandra . hadoop . avro . Mutation amut : value ) 
 client . put ( new Pair < ByteBuffer , Mutation > ( keybuff , avroToThrift ( amut ) ) ) ; 
 } 
 
 / * * 
 * Deep copies the given Avro mutation into a new Thrift mutation . 
 * / 
 - private Mutation avroToThrift ( org . apache . cassandra . avro . Mutation amut ) 
 + private Mutation avroToThrift ( org . apache . cassandra . hadoop . avro . Mutation amut ) 
 { 
 Mutation mutation = new Mutation ( ) ; 
 - org . apache . cassandra . avro . ColumnOrSuperColumn acosc = amut . column _ or _ supercolumn ; 
 + org . apache . cassandra . hadoop . avro . ColumnOrSuperColumn acosc = amut . column _ or _ supercolumn ; 
 if ( acosc ! = null ) 
 { 
 / / creation 
 @ @ - 156 , 7 + 156 , 7 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass 
 / / super column 
 ByteBuffer scolname = acosc . super _ column . name ; 
 List < Column > scolcols = new ArrayList < Column > ( acosc . super _ column . columns . size ( ) ) ; 
 - for ( org . apache . cassandra . avro . Column acol : acosc . super _ column . columns ) 
 + for ( org . apache . cassandra . hadoop . avro . Column acol : acosc . super _ column . columns ) 
 scolcols . add ( avroToThrift ( acol ) ) ; 
 cosc . setSuper _ column ( new SuperColumn ( scolname , scolcols ) ) ; 
 } 
 @ @ - 166 , 7 + 166 , 7 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass 
 / / deletion 
 Deletion deletion = new Deletion ( amut . deletion . timestamp ) ; 
 mutation . setDeletion ( deletion ) ; 
 - org . apache . cassandra . avro . SlicePredicate apred = amut . deletion . predicate ; 
 + org . apache . cassandra . hadoop . avro . SlicePredicate apred = amut . deletion . predicate ; 
 if ( amut . deletion . super _ column ! = null ) 
 / / super column 
 deletion . setSuper _ column ( copy ( amut . deletion . super _ column ) ) ; 
 @ @ - 187 , 12 + 187 , 12 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < org . apache . cass 
 return mutation ; 
 } 
 
 - private SliceRange avroToThrift ( org . apache . cassandra . avro . SliceRange asr ) 
 + private SliceRange avroToThrift ( org . apache . cassandra . hadoop . avro . SliceRange asr ) 
 { 
 return new SliceRange ( asr . start , asr . finish , asr . reversed , asr . count ) ; 
 } 
 
 - private Column avroToThrift ( org . apache . cassandra . avro . Column acol ) 
 + private Column avroToThrift ( org . apache . cassandra . hadoop . avro . Column acol ) 
 { 
 return new Column ( acol . name , acol . value , acol . timestamp ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / hadoop / hadoop . genavro b / src / java / org / apache / cassandra / hadoop / hadoop . genavro 
 new file mode 100644 
 index 0000000 . . af9c53c 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / hadoop / hadoop . genavro 
 @ @ - 0 , 0 + 1 , 70 @ @ 
 + / * * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + / * * 
 + * Cassandra client interface ( legacy ) . 
 + * / 
 + @ namespace ( " org . apache . cassandra . hadoop . avro " ) 
 + 
 + protocol Cassandra { 
 + record Column { 
 + bytes name ; 
 + bytes value ; 
 + long timestamp ; 
 + union { int , null } ttl ; 
 + } 
 + 
 + record SuperColumn { 
 + bytes name ; 
 + array < Column > columns ; 
 + } 
 + 
 + record ColumnOrSuperColumn { 
 + union { Column , null } column ; 
 + union { SuperColumn , null } super _ column ; 
 + } 
 + 
 + record SliceRange { 
 + bytes start ; 
 + bytes finish ; 
 + boolean reversed ; 
 + int count ; 
 + union { array < bytes > , null } bitmasks ; 
 + } 
 + 
 + record SlicePredicate { 
 + union { array < bytes > , null } column _ names ; 
 + union { SliceRange , null } slice _ range ; 
 + } 
 + 
 + record Deletion { 
 + long timestamp ; 
 + union { bytes , null } super _ column ; 
 + union { SlicePredicate , null } predicate ; 
 + } 
 + 
 + record Mutation { 
 + union { ColumnOrSuperColumn , null } column _ or _ supercolumn ; 
 + union { Deletion , null } deletion ; 
 + } 
 + 
 + record StreamingMutation { 
 + bytes key ; 
 + Mutation mutation ; 
 + } 
 + } 
 diff - - git a / src / java / org / apache / cassandra / hadoop / streaming / AvroOutputReader . java b / src / java / org / apache / cassandra / hadoop / streaming / AvroOutputReader . java 
 index 7fdbf47 . . 3366886 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / streaming / AvroOutputReader . java 
 + + + b / src / java / org / apache / cassandra / hadoop / streaming / AvroOutputReader . java 
 @ @ - 30 , 8 + 30 , 8 @ @ import java . util . List ; 
 import org . apache . avro . io . BinaryDecoder ; 
 import org . apache . avro . io . DecoderFactory ; 
 import org . apache . avro . specific . SpecificDatumReader ; 
 - import org . apache . cassandra . avro . Mutation ; 
 - import org . apache . cassandra . avro . StreamingMutation ; 
 + import org . apache . cassandra . hadoop . avro . Mutation ; 
 + import org . apache . cassandra . hadoop . avro . StreamingMutation ; 
 import org . apache . hadoop . streaming . PipeMapRed ; 
 import org . apache . hadoop . streaming . io . OutputReader ; 

