BLEU SCORE: 0.04767707020457096

TEST MSG: ninja - use logging parm markers , for logging
GENERATED MSG: Make IncomingTcpConnection responsible for version handling .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / async / NettyFactory . java b / src / java / org / apache / cassandra / net / async / NettyFactory . java <nl> index 7fb81d3 . . 7844c9b 100644 <nl> - - - a / src / java / org / apache / cassandra / net / async / NettyFactory . java <nl> + + + b / src / java / org / apache / cassandra / net / async / NettyFactory . java <nl> @ @ - 248 , 7 + 248 , 7 @ @ public final class NettyFactory <nl> } <nl> else <nl> { <nl> - logger . debug ( " Creating SSL handler for % s : % d " , peer . getHostString ( ) , peer . getPort ( ) ) ; <nl> + logger . debug ( " Creating SSL handler for { } : { } " , peer . getHostString ( ) , peer . getPort ( ) ) ; <nl> SslHandler sslHandler = sslContext . newHandler ( channel . alloc ( ) , peer . getHostString ( ) , peer . getPort ( ) ) ; <nl> SSLEngine engine = sslHandler . engine ( ) ; <nl> SSLParameters sslParameters = engine . getSSLParameters ( ) ;
NEAREST DIFF (one line): diff - - git a / src / resources / org / apache / cassandra / cli / CliHelp . yaml b / src / resources / org / apache / cassandra / cli / CliHelp . yaml <nl> index 183ff0d . . ac89737 100644 <nl> - - - a / src / resources / org / apache / cassandra / cli / CliHelp . yaml <nl> + + + b / src / resources / org / apache / cassandra / cli / CliHelp . yaml <nl> @ @ - 546 , 22 + 546 , 23 @ @ commands : <nl> follower replicas . Accepts the values true and false . <nl> <nl> - row _ cache _ provider : The provider for the row cache to use for this <nl> - column family . Defaults to ConcurrentLinkedHashCacheProvider . . <nl> + column family . <nl> <nl> Supported values are : <nl> - ConcurrentLinkedHashCacheProvider <nl> - - SerializingCacheProvider <nl> + - SerializingCacheProvider ( requires JNA ) <nl> <nl> It is also valid to specify the fully - qualified class name to a class <nl> that implements org . apache . cassandra . cache . IRowCacheProvider . <nl> <nl> - ConcurrentLinkedHashCacheProvider provides the same features as the versions <nl> - prior to Cassandra v0 . 8 . Row data is cached using the Java JVM heap . <nl> - <nl> - SerializingCacheProvider serialises the contents of the row and <nl> - stores the data off the JVM Heap . This may reduce the GC pressure . <nl> - NOTE : This provider requires JNA . jar to be in the class path to <nl> - enable native methods . <nl> + row _ cache _ provider defaults to ConcurrentLinkedHashCacheProvider , <nl> + but if you have JNA installed you should usually use <nl> + SerializingCacheProvider , which serialises the contents of the <nl> + row and stores it in native memory , i . e . , off the JVM <nl> + Heap . Serialized rows take significantly less memory than <nl> + " live " rows in the JVM , so you can cache more rows in a given <nl> + memory footprint . And storing the cache off - heap means you <nl> + can use smaller heap sizes , reducing the impact of GC pauses . <nl> <nl> - compression : Use compression for SSTable data files . <nl> <nl> @ @ - 818 , 22 + 819 , 23 @ @ commands : <nl> follower replicas . Accepts the values true and false . <nl> <nl> - row _ cache _ provider : The provider for the row cache to use for this <nl> - column family . Defaults to ConcurrentLinkedHashCacheProvider . . <nl> + column family . <nl> <nl> Supported values are : <nl> - ConcurrentLinkedHashCacheProvider <nl> - - SerializingCacheProvider <nl> + - SerializingCacheProvider ( requires JNA ) <nl> <nl> It is also valid to specify the fully - qualified class name to a class <nl> that implements org . apache . cassandra . cache . IRowCacheProvider . <nl> <nl> - ConcurrentLinkedHashCacheProvider provides the same features as the versions <nl> - prior to Cassandra v0 . 8 . Row data is cached using the Java JVM heap . <nl> - <nl> - SerializingCacheProvider serialises the contents of the row and <nl> - stores the data off the JVM Heap . This may reduce the GC pressure . <nl> - NOTE : Thsi provider requires JNA . jar to be in the class path to <nl> - enable native methods . <nl> + row _ cache _ provider defaults to ConcurrentLinkedHashCacheProvider , <nl> + but if you have JNA installed you should usually use <nl> + SerializingCacheProvider , which serialises the contents of the <nl> + row and stores it in native memory , i . e . , off the JVM <nl> + Heap . Serialized rows take significantly less memory than <nl> + " live " rows in the JVM , so you can cache more rows in a given <nl> + memory footprint . And storing the cache off - heap means you <nl> + can use smaller heap sizes , reducing the impact of GC pauses . <nl> <nl> - compression : Use compression for SSTable data files . Accepts the values true and false . <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / async / NettyFactory . java b / src / java / org / apache / cassandra / net / async / NettyFactory . java 
 index 7fb81d3 . . 7844c9b 100644 
 - - - a / src / java / org / apache / cassandra / net / async / NettyFactory . java 
 + + + b / src / java / org / apache / cassandra / net / async / NettyFactory . java 
 @ @ - 248 , 7 + 248 , 7 @ @ public final class NettyFactory 
 } 
 else 
 { 
 - logger . debug ( " Creating SSL handler for % s : % d " , peer . getHostString ( ) , peer . getPort ( ) ) ; 
 + logger . debug ( " Creating SSL handler for { } : { } " , peer . getHostString ( ) , peer . getPort ( ) ) ; 
 SslHandler sslHandler = sslContext . newHandler ( channel . alloc ( ) , peer . getHostString ( ) , peer . getPort ( ) ) ; 
 SSLEngine engine = sslHandler . engine ( ) ; 
 SSLParameters sslParameters = engine . getSSLParameters ( ) ;

NEAREST DIFF:
diff - - git a / src / resources / org / apache / cassandra / cli / CliHelp . yaml b / src / resources / org / apache / cassandra / cli / CliHelp . yaml 
 index 183ff0d . . ac89737 100644 
 - - - a / src / resources / org / apache / cassandra / cli / CliHelp . yaml 
 + + + b / src / resources / org / apache / cassandra / cli / CliHelp . yaml 
 @ @ - 546 , 22 + 546 , 23 @ @ commands : 
 follower replicas . Accepts the values true and false . 
 
 - row _ cache _ provider : The provider for the row cache to use for this 
 - column family . Defaults to ConcurrentLinkedHashCacheProvider . . 
 + column family . 
 
 Supported values are : 
 - ConcurrentLinkedHashCacheProvider 
 - - SerializingCacheProvider 
 + - SerializingCacheProvider ( requires JNA ) 
 
 It is also valid to specify the fully - qualified class name to a class 
 that implements org . apache . cassandra . cache . IRowCacheProvider . 
 
 - ConcurrentLinkedHashCacheProvider provides the same features as the versions 
 - prior to Cassandra v0 . 8 . Row data is cached using the Java JVM heap . 
 - 
 - SerializingCacheProvider serialises the contents of the row and 
 - stores the data off the JVM Heap . This may reduce the GC pressure . 
 - NOTE : This provider requires JNA . jar to be in the class path to 
 - enable native methods . 
 + row _ cache _ provider defaults to ConcurrentLinkedHashCacheProvider , 
 + but if you have JNA installed you should usually use 
 + SerializingCacheProvider , which serialises the contents of the 
 + row and stores it in native memory , i . e . , off the JVM 
 + Heap . Serialized rows take significantly less memory than 
 + " live " rows in the JVM , so you can cache more rows in a given 
 + memory footprint . And storing the cache off - heap means you 
 + can use smaller heap sizes , reducing the impact of GC pauses . 
 
 - compression : Use compression for SSTable data files . 
 
 @ @ - 818 , 22 + 819 , 23 @ @ commands : 
 follower replicas . Accepts the values true and false . 
 
 - row _ cache _ provider : The provider for the row cache to use for this 
 - column family . Defaults to ConcurrentLinkedHashCacheProvider . . 
 + column family . 
 
 Supported values are : 
 - ConcurrentLinkedHashCacheProvider 
 - - SerializingCacheProvider 
 + - SerializingCacheProvider ( requires JNA ) 
 
 It is also valid to specify the fully - qualified class name to a class 
 that implements org . apache . cassandra . cache . IRowCacheProvider . 
 
 - ConcurrentLinkedHashCacheProvider provides the same features as the versions 
 - prior to Cassandra v0 . 8 . Row data is cached using the Java JVM heap . 
 - 
 - SerializingCacheProvider serialises the contents of the row and 
 - stores the data off the JVM Heap . This may reduce the GC pressure . 
 - NOTE : Thsi provider requires JNA . jar to be in the class path to 
 - enable native methods . 
 + row _ cache _ provider defaults to ConcurrentLinkedHashCacheProvider , 
 + but if you have JNA installed you should usually use 
 + SerializingCacheProvider , which serialises the contents of the 
 + row and stores it in native memory , i . e . , off the JVM 
 + Heap . Serialized rows take significantly less memory than 
 + " live " rows in the JVM , so you can cache more rows in a given 
 + memory footprint . And storing the cache off - heap means you 
 + can use smaller heap sizes , reducing the impact of GC pauses . 
 
 - compression : Use compression for SSTable data files . Accepts the values true and false . 

