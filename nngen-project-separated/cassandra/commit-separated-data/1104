BLEU SCORE: 0.37991784282579627

TEST MSG: minor javadoc fixes
GENERATED MSG: javadoc corrections

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / partitions / CachedPartition . java b / src / java / org / apache / cassandra / db / partitions / CachedPartition . java <nl> index 33e6ecc . . 0cbaba0 100644 <nl> - - - a / src / java / org / apache / cassandra / db / partitions / CachedPartition . java <nl> + + + b / src / java / org / apache / cassandra / db / partitions / CachedPartition . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ public interface CachedPartition extends Partition , IRowCacheEntry <nl> / * * <nl> * The number of rows that were live at the time the partition was cached . <nl> * <nl> - * See { @ link ColumnFamilyStore # isFilterFullyCoveredBy } to see why we need this . <nl> + * See { @ link org . apache . cassandra . db . ColumnFamilyStore # isFilterFullyCoveredBy } to see why we need this . <nl> * <nl> * @ return the number of rows in this partition that were live at the time the <nl> * partition was cached ( this can be different from the number of live rows now <nl> @ @ - 58 , 7 + 58 , 7 @ @ public interface CachedPartition extends Partition , IRowCacheEntry <nl> * non - deleted cell . <nl> * <nl> * Note that this is generally not a very meaningful number , but this is used by <nl> - * { @ link DataLimits # hasEnoughLiveData } as an optimization . <nl> + * { @ link org . apache . cassandra . db . filter . DataLimits # hasEnoughLiveData } as an optimization . <nl> * <nl> * @ return the number of row that have at least one non - expiring non - deleted cell . <nl> * / <nl> @ @ - 86 , 7 + 86 , 7 @ @ public interface CachedPartition extends Partition , IRowCacheEntry <nl> * The number of cells in this cached partition that are neither tombstone nor expiring . <nl> * <nl> * Note that this is generally not a very meaningful number , but this is used by <nl> - * { @ link DataLimits # hasEnoughLiveData } as an optimization . <nl> + * { @ link org . apache . cassandra . db . filter . DataLimits # hasEnoughLiveData } as an optimization . <nl> * <nl> * @ return the number of cells that are neither tombstones nor expiring . <nl> * / <nl> diff - - git a / src / java / org / apache / cassandra / db / rows / LazilyInitializedUnfilteredRowIterator . java b / src / java / org / apache / cassandra / db / rows / LazilyInitializedUnfilteredRowIterator . java <nl> index 8ba4394 . . 1bf78dd 100644 <nl> - - - a / src / java / org / apache / cassandra / db / rows / LazilyInitializedUnfilteredRowIterator . java <nl> + + + b / src / java / org / apache / cassandra / db / rows / LazilyInitializedUnfilteredRowIterator . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ import org . apache . cassandra . db . * ; <nl> * <nl> * This is used during partition range queries when we know the partition key but want <nl> * to defer the initialization of the rest of the UnfilteredRowIterator until we need those informations . <nl> - * See { @ link BigTableScanner # KeyScanningIterator } for instance . <nl> + * See { @ link org . apache . cassandra . io . sstable . format . big . BigTableScanner # KeyScanningIterator } for instance . <nl> * / <nl> public abstract class LazilyInitializedUnfilteredRowIterator extends AbstractIterator < Unfiltered > implements UnfilteredRowIterator <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / rows / RangeTombstoneMarker . java b / src / java / org / apache / cassandra / db / rows / RangeTombstoneMarker . java <nl> index 5771a86 . . 053b5dc 100644 <nl> - - - a / src / java / org / apache / cassandra / db / rows / RangeTombstoneMarker . java <nl> + + + b / src / java / org / apache / cassandra / db / rows / RangeTombstoneMarker . java <nl> @ @ - 27 , 7 + 27 , 8 @ @ import org . apache . cassandra . utils . memory . AbstractAllocator ; <nl> / * * <nl> * A marker for a range tombstone bound . <nl> * < p > <nl> - * There is 2 types of markers : bounds ( see { @ link RangeTombstoneBound } ) and boundaries ( see { @ link RangeTombstoneBoundary } ) . <nl> + * There is 2 types of markers : bounds ( see { @ link RangeTombstoneBoundMarker } ) and boundaries ( see { @ link RangeTombstoneBoundaryMarker } ) . <nl> + * < / p > <nl> * / <nl> public interface RangeTombstoneMarker extends Unfiltered <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / rows / Unfiltered . java b / src / java / org / apache / cassandra / db / rows / Unfiltered . java <nl> index ba03741 . . d34403c 100644 <nl> - - - a / src / java / org / apache / cassandra / db / rows / Unfiltered . java <nl> + + + b / src / java / org / apache / cassandra / db / rows / Unfiltered . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public interface Unfiltered extends Clusterable <nl> * Validate the data of this atom . <nl> * <nl> * @ param metadata the metadata for the table this atom is part of . <nl> - * @ throws MarshalException if some of the data in this atom is <nl> + * @ throws org . apache . cassandra . serializers . MarshalException if some of the data in this atom is <nl> * invalid ( some value is invalid for its column type , or some field <nl> * is nonsensical ) . <nl> * / <nl> diff - - git a / src / java / org / apache / cassandra / index / Index . java b / src / java / org / apache / cassandra / index / Index . java <nl> index 75429c7 . . 3aadce9 100644 <nl> - - - a / src / java / org / apache / cassandra / index / Index . java <nl> + + + b / src / java / org / apache / cassandra / index / Index . java <nl> @ @ - 491 , 7 + 491 , 7 @ @ public interface Index <nl> public interface Searcher <nl> { <nl> / * * <nl> - * @ param orderGroup the collection of OpOrder . Groups which the ReadCommand is being performed under . <nl> + * @ param executionController the collection of OpOrder . Groups which the ReadCommand is being performed under . <nl> * @ return partitions from the base table matching the criteria of the search . <nl> * / <nl> public UnfilteredPartitionIterator search ( ReadExecutionController executionController ) ; <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java <nl> index 1dafea3 . . c63e52d 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java <nl> @ @ - 1664 , 7 + 1664 , 6 @ @ public abstract class SSTableReader extends SSTable implements SelfRefCounted < SS <nl> * When calling this function , the caller must ensure that the SSTableReader is not referenced anywhere <nl> * except for threads holding a reference . <nl> * <nl> - * @ return true if the this is the first time the file was marked obsolete . Calling this <nl> * multiple times is usually buggy ( see exceptions in Tracker . unmarkCompacting and removeOldSSTablesSize ) . <nl> * / <nl> public void markObsolete ( Runnable tidier ) <nl> diff - - git a / src / java / org / apache / cassandra / io / util / RandomAccessReader . java b / src / java / org / apache / cassandra / io / util / RandomAccessReader . java <nl> index b495bf0 . . e6da1a7 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / RandomAccessReader . java <nl> + + + b / src / java / org / apache / cassandra / io / util / RandomAccessReader . java <nl> @ @ - 308 , 10 + 308 , 10 @ @ public class RandomAccessReader extends RebufferingInputStream implements FileDa <nl> * represented by zero or more characters followed by { @ code ' \ n ' } , { @ code <nl> * ' \ r ' } , { @ code " \ r \ n " } or the end of file marker . The string does not <nl> * include the line terminating sequence . <nl> - * < p / > <nl> + * < p > <nl> * Blocks until a line terminating sequence has been read , the end of the <nl> * file is reached or an exception is thrown . <nl> - * <nl> + * < / p > <nl> * @ return the contents of the line or { @ code null } if no characters have <nl> * been read before the end of the file has been reached . <nl> * @ throws IOException if this file is closed or another I / O error occurs . <nl> diff - - git a / src / java / org / apache / cassandra / repair / Validator . java b / src / java / org / apache / cassandra / repair / Validator . java <nl> index 3db9761 . . 6308f6b 100644 <nl> - - - a / src / java / org / apache / cassandra / repair / Validator . java <nl> + + + b / src / java / org / apache / cassandra / repair / Validator . java <nl> @ @ - 128 , 7 + 128 , 7 @ @ public class Validator implements Runnable <nl> * Called ( in order ) for every row present in the CF . <nl> * Hashes the row , and adds it to the tree being built . <nl> * <nl> - * @ param row Row to add hash <nl> + * @ param partition Partition to add hash <nl> * / <nl> public void add ( UnfilteredRowIterator partition ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / schema / Indexes . java b / src / java / org / apache / cassandra / schema / Indexes . java <nl> index 49a1d3b . . eb49d39 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / Indexes . java <nl> + + + b / src / java / org / apache / cassandra / schema / Indexes . java <nl> @ @ - 95 , 7 + 95 , 7 @ @ public class Indexes implements Iterable < IndexMetadata > <nl> / * * <nl> * Get the index with the specified id <nl> * <nl> - * @ param name a UUID which identifies an index <nl> + * @ param id a UUID which identifies an index <nl> * @ return an empty { @ link Optional } if no index with the specified id is found ; a non - empty optional of <nl> * { @ link IndexMetadata } otherwise <nl> * / <nl> @ @ - 107 , 7 + 107 , 7 @ @ public class Indexes implements Iterable < IndexMetadata > <nl> <nl> / * * <nl> * Answer true if contains an index with the specified id . <nl> - * @ param name a UUID which identifies an index . <nl> + * @ param id a UUID which identifies an index . <nl> * @ return true if an index with the specified id is found ; false otherwise <nl> * / <nl> public boolean has ( UUID id ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> index 64e60fd . . ae3889a 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> @ @ - 515 , 7 + 515 , 7 @ @ public interface StorageServiceMBean extends NotificationEmitter <nl> * Load new SSTables to the given keyspace / table <nl> * <nl> * @ param ksName The parent keyspace name <nl> - * @ param cfName The ColumnFamily name where SSTables belong <nl> + * @ param tableName The ColumnFamily name where SSTables belong <nl> * / <nl> public void loadNewSSTables ( String ksName , String tableName ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / thrift / CustomTThreadPoolServer . java b / src / java / org / apache / cassandra / thrift / CustomTThreadPoolServer . java <nl> index bde5310 . . 87c6409 100644 <nl> - - - a / src / java / org / apache / cassandra / thrift / CustomTThreadPoolServer . java <nl> + + + b / src / java / org / apache / cassandra / thrift / CustomTThreadPoolServer . java <nl> @ @ - 56 , 8 + 56 , 8 @ @ import com . google . common . util . concurrent . Uninterruptibles ; <nl> * Slightly modified version of the Apache Thrift TThreadPoolServer . <nl> * < p > <nl> * This allows passing an executor so you have more control over the actual <nl> - * behaviour of the tasks being run . <nl> - * < p / > <nl> + * behavior of the tasks being run . <nl> + * < / p > <nl> * Newer version of Thrift should make this obsolete . <nl> * / <nl> public class CustomTThreadPoolServer extends TServer <nl> diff - - git a / src / java / org / apache / cassandra / utils / ByteBufferUtil . java b / src / java / org / apache / cassandra / utils / ByteBufferUtil . java <nl> index e1bc5c7 . . 6bcec96 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / ByteBufferUtil . java <nl> + + + b / src / java / org / apache / cassandra / utils / ByteBufferUtil . java <nl> @ @ - 383 , 7 + 383 , 6 @ @ public class ByteBufferUtil <nl> <nl> / * * <nl> * @ param in data input <nl> - * @ return null <nl> * @ throws IOException if an I / O error occurs . <nl> * / <nl> public static void skipShortLength ( DataInputPlus in ) throws IOException <nl> diff - - git a / src / java / org / apache / cassandra / utils / CassandraVersion . java b / src / java / org / apache / cassandra / utils / CassandraVersion . java <nl> index 62d68be . . 6887a88 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / CassandraVersion . java <nl> + + + b / src / java / org / apache / cassandra / utils / CassandraVersion . java <nl> @ @ - 26 , 8 + 26 , 9 @ @ import org . apache . commons . lang3 . StringUtils ; <nl> <nl> / * * <nl> * Implements versioning used in Cassandra and CQL . <nl> - * < p / > <nl> + * < p > <nl> * Note : The following code uses a slight variation from the semver document ( http : / / semver . org ) . <nl> + * < / p > <nl> * / <nl> public class CassandraVersion implements Comparable < CassandraVersion > <nl> { <nl> @ @ - 123 , 13 + 124 , 14 @ @ public class CassandraVersion implements Comparable < CassandraVersion > <nl> / * * <nl> * Returns a version that is backward compatible with this version amongst a list <nl> * of provided version , or null if none can be found . <nl> - * < p / > <nl> + * < p > <nl> * For instance : <nl> * " 2 . 0 . 0 " . findSupportingVersion ( " 2 . 0 . 0 " , " 3 . 0 . 0 " ) = = " 2 . 0 . 0 " <nl> * " 2 . 0 . 0 " . findSupportingVersion ( " 2 . 1 . 3 " , " 3 . 0 . 0 " ) = = " 2 . 1 . 3 " <nl> * " 2 . 0 . 0 " . findSupportingVersion ( " 3 . 0 . 0 " ) = = null <nl> * " 2 . 0 . 3 " . findSupportingVersion ( " 2 . 0 . 0 " ) = = " 2 . 0 . 0 " <nl> * " 2 . 1 . 0 " . findSupportingVersion ( " 2 . 0 . 0 " ) = = null <nl> + * < / p > <nl> * / <nl> public CassandraVersion findSupportingVersion ( CassandraVersion . . . versions ) <nl> {
NEAREST DIFF (one line): diff - - git a / bin / cassandra b / bin / cassandra <nl> index 8ce8d57 . . 4dd2497 100755 <nl> - - - a / bin / cassandra <nl> + + + b / bin / cassandra <nl> @ @ - 89 , 6 + 89 , 16 @ @ else <nl> JAVA = java <nl> fi <nl> <nl> + # If numactl is available , use it . For Cassandra , the priority is to <nl> + # avoid disk I / O . Even for the purpose of CPU efficiency , we don ' t <nl> + # really have CPU < - > data affinity anyway . <nl> + if which numactl > / dev / null 2 > / dev / null <nl> + then <nl> + NUMACTL = " numactl - - interleave = all " <nl> + else <nl> + NUMACTL = " " <nl> + fi <nl> + <nl> if [ - z " $ CASSANDRA _ CONF " - o - z " $ CLASSPATH " ] ; then <nl> echo " You must set the CASSANDRA _ CONF and CLASSPATH vars " > & 2 <nl> exit 1 <nl> @ @ - 122 , 10 + 132 , 10 @ @ launch _ service ( ) <nl> # to close stdout / stderr , but it ' s up to us not to background . <nl> if [ " x $ foreground " ! = " x " ] ; then <nl> cassandra _ parms = " $ cassandra _ parms - Dcassandra - foreground = yes " <nl> - exec " $ JAVA " $ JVM _ OPTS $ cassandra _ parms - cp " $ CLASSPATH " $ props " $ class " <nl> + exec $ NUMACTL " $ JAVA " $ JVM _ OPTS $ cassandra _ parms - cp " $ CLASSPATH " $ props " $ class " <nl> # Startup CassandraDaemon , background it , and write the pid . <nl> else <nl> - exec " $ JAVA " $ JVM _ OPTS $ cassandra _ parms - cp " $ CLASSPATH " $ props " $ class " < & - & <nl> + exec $ NUMACTL " $ JAVA " $ JVM _ OPTS $ cassandra _ parms - cp " $ CLASSPATH " $ props " $ class " < & - & <nl> [ ! - z " $ pidpath " ] & & printf " % d " $ ! > " $ pidpath " <nl> fi <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / partitions / CachedPartition . java b / src / java / org / apache / cassandra / db / partitions / CachedPartition . java 
 index 33e6ecc . . 0cbaba0 100644 
 - - - a / src / java / org / apache / cassandra / db / partitions / CachedPartition . java 
 + + + b / src / java / org / apache / cassandra / db / partitions / CachedPartition . java 
 @ @ - 45 , 7 + 45 , 7 @ @ public interface CachedPartition extends Partition , IRowCacheEntry 
 / * * 
 * The number of rows that were live at the time the partition was cached . 
 * 
 - * See { @ link ColumnFamilyStore # isFilterFullyCoveredBy } to see why we need this . 
 + * See { @ link org . apache . cassandra . db . ColumnFamilyStore # isFilterFullyCoveredBy } to see why we need this . 
 * 
 * @ return the number of rows in this partition that were live at the time the 
 * partition was cached ( this can be different from the number of live rows now 
 @ @ - 58 , 7 + 58 , 7 @ @ public interface CachedPartition extends Partition , IRowCacheEntry 
 * non - deleted cell . 
 * 
 * Note that this is generally not a very meaningful number , but this is used by 
 - * { @ link DataLimits # hasEnoughLiveData } as an optimization . 
 + * { @ link org . apache . cassandra . db . filter . DataLimits # hasEnoughLiveData } as an optimization . 
 * 
 * @ return the number of row that have at least one non - expiring non - deleted cell . 
 * / 
 @ @ - 86 , 7 + 86 , 7 @ @ public interface CachedPartition extends Partition , IRowCacheEntry 
 * The number of cells in this cached partition that are neither tombstone nor expiring . 
 * 
 * Note that this is generally not a very meaningful number , but this is used by 
 - * { @ link DataLimits # hasEnoughLiveData } as an optimization . 
 + * { @ link org . apache . cassandra . db . filter . DataLimits # hasEnoughLiveData } as an optimization . 
 * 
 * @ return the number of cells that are neither tombstones nor expiring . 
 * / 
 diff - - git a / src / java / org / apache / cassandra / db / rows / LazilyInitializedUnfilteredRowIterator . java b / src / java / org / apache / cassandra / db / rows / LazilyInitializedUnfilteredRowIterator . java 
 index 8ba4394 . . 1bf78dd 100644 
 - - - a / src / java / org / apache / cassandra / db / rows / LazilyInitializedUnfilteredRowIterator . java 
 + + + b / src / java / org / apache / cassandra / db / rows / LazilyInitializedUnfilteredRowIterator . java 
 @ @ - 27 , 7 + 27 , 7 @ @ import org . apache . cassandra . db . * ; 
 * 
 * This is used during partition range queries when we know the partition key but want 
 * to defer the initialization of the rest of the UnfilteredRowIterator until we need those informations . 
 - * See { @ link BigTableScanner # KeyScanningIterator } for instance . 
 + * See { @ link org . apache . cassandra . io . sstable . format . big . BigTableScanner # KeyScanningIterator } for instance . 
 * / 
 public abstract class LazilyInitializedUnfilteredRowIterator extends AbstractIterator < Unfiltered > implements UnfilteredRowIterator 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / rows / RangeTombstoneMarker . java b / src / java / org / apache / cassandra / db / rows / RangeTombstoneMarker . java 
 index 5771a86 . . 053b5dc 100644 
 - - - a / src / java / org / apache / cassandra / db / rows / RangeTombstoneMarker . java 
 + + + b / src / java / org / apache / cassandra / db / rows / RangeTombstoneMarker . java 
 @ @ - 27 , 7 + 27 , 8 @ @ import org . apache . cassandra . utils . memory . AbstractAllocator ; 
 / * * 
 * A marker for a range tombstone bound . 
 * < p > 
 - * There is 2 types of markers : bounds ( see { @ link RangeTombstoneBound } ) and boundaries ( see { @ link RangeTombstoneBoundary } ) . 
 + * There is 2 types of markers : bounds ( see { @ link RangeTombstoneBoundMarker } ) and boundaries ( see { @ link RangeTombstoneBoundaryMarker } ) . 
 + * < / p > 
 * / 
 public interface RangeTombstoneMarker extends Unfiltered 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / rows / Unfiltered . java b / src / java / org / apache / cassandra / db / rows / Unfiltered . java 
 index ba03741 . . d34403c 100644 
 - - - a / src / java / org / apache / cassandra / db / rows / Unfiltered . java 
 + + + b / src / java / org / apache / cassandra / db / rows / Unfiltered . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public interface Unfiltered extends Clusterable 
 * Validate the data of this atom . 
 * 
 * @ param metadata the metadata for the table this atom is part of . 
 - * @ throws MarshalException if some of the data in this atom is 
 + * @ throws org . apache . cassandra . serializers . MarshalException if some of the data in this atom is 
 * invalid ( some value is invalid for its column type , or some field 
 * is nonsensical ) . 
 * / 
 diff - - git a / src / java / org / apache / cassandra / index / Index . java b / src / java / org / apache / cassandra / index / Index . java 
 index 75429c7 . . 3aadce9 100644 
 - - - a / src / java / org / apache / cassandra / index / Index . java 
 + + + b / src / java / org / apache / cassandra / index / Index . java 
 @ @ - 491 , 7 + 491 , 7 @ @ public interface Index 
 public interface Searcher 
 { 
 / * * 
 - * @ param orderGroup the collection of OpOrder . Groups which the ReadCommand is being performed under . 
 + * @ param executionController the collection of OpOrder . Groups which the ReadCommand is being performed under . 
 * @ return partitions from the base table matching the criteria of the search . 
 * / 
 public UnfilteredPartitionIterator search ( ReadExecutionController executionController ) ; 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java 
 index 1dafea3 . . c63e52d 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java 
 @ @ - 1664 , 7 + 1664 , 6 @ @ public abstract class SSTableReader extends SSTable implements SelfRefCounted < SS 
 * When calling this function , the caller must ensure that the SSTableReader is not referenced anywhere 
 * except for threads holding a reference . 
 * 
 - * @ return true if the this is the first time the file was marked obsolete . Calling this 
 * multiple times is usually buggy ( see exceptions in Tracker . unmarkCompacting and removeOldSSTablesSize ) . 
 * / 
 public void markObsolete ( Runnable tidier ) 
 diff - - git a / src / java / org / apache / cassandra / io / util / RandomAccessReader . java b / src / java / org / apache / cassandra / io / util / RandomAccessReader . java 
 index b495bf0 . . e6da1a7 100644 
 - - - a / src / java / org / apache / cassandra / io / util / RandomAccessReader . java 
 + + + b / src / java / org / apache / cassandra / io / util / RandomAccessReader . java 
 @ @ - 308 , 10 + 308 , 10 @ @ public class RandomAccessReader extends RebufferingInputStream implements FileDa 
 * represented by zero or more characters followed by { @ code ' \ n ' } , { @ code 
 * ' \ r ' } , { @ code " \ r \ n " } or the end of file marker . The string does not 
 * include the line terminating sequence . 
 - * < p / > 
 + * < p > 
 * Blocks until a line terminating sequence has been read , the end of the 
 * file is reached or an exception is thrown . 
 - * 
 + * < / p > 
 * @ return the contents of the line or { @ code null } if no characters have 
 * been read before the end of the file has been reached . 
 * @ throws IOException if this file is closed or another I / O error occurs . 
 diff - - git a / src / java / org / apache / cassandra / repair / Validator . java b / src / java / org / apache / cassandra / repair / Validator . java 
 index 3db9761 . . 6308f6b 100644 
 - - - a / src / java / org / apache / cassandra / repair / Validator . java 
 + + + b / src / java / org / apache / cassandra / repair / Validator . java 
 @ @ - 128 , 7 + 128 , 7 @ @ public class Validator implements Runnable 
 * Called ( in order ) for every row present in the CF . 
 * Hashes the row , and adds it to the tree being built . 
 * 
 - * @ param row Row to add hash 
 + * @ param partition Partition to add hash 
 * / 
 public void add ( UnfilteredRowIterator partition ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / schema / Indexes . java b / src / java / org / apache / cassandra / schema / Indexes . java 
 index 49a1d3b . . eb49d39 100644 
 - - - a / src / java / org / apache / cassandra / schema / Indexes . java 
 + + + b / src / java / org / apache / cassandra / schema / Indexes . java 
 @ @ - 95 , 7 + 95 , 7 @ @ public class Indexes implements Iterable < IndexMetadata > 
 / * * 
 * Get the index with the specified id 
 * 
 - * @ param name a UUID which identifies an index 
 + * @ param id a UUID which identifies an index 
 * @ return an empty { @ link Optional } if no index with the specified id is found ; a non - empty optional of 
 * { @ link IndexMetadata } otherwise 
 * / 
 @ @ - 107 , 7 + 107 , 7 @ @ public class Indexes implements Iterable < IndexMetadata > 
 
 / * * 
 * Answer true if contains an index with the specified id . 
 - * @ param name a UUID which identifies an index . 
 + * @ param id a UUID which identifies an index . 
 * @ return true if an index with the specified id is found ; false otherwise 
 * / 
 public boolean has ( UUID id ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 index 64e60fd . . ae3889a 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 @ @ - 515 , 7 + 515 , 7 @ @ public interface StorageServiceMBean extends NotificationEmitter 
 * Load new SSTables to the given keyspace / table 
 * 
 * @ param ksName The parent keyspace name 
 - * @ param cfName The ColumnFamily name where SSTables belong 
 + * @ param tableName The ColumnFamily name where SSTables belong 
 * / 
 public void loadNewSSTables ( String ksName , String tableName ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / thrift / CustomTThreadPoolServer . java b / src / java / org / apache / cassandra / thrift / CustomTThreadPoolServer . java 
 index bde5310 . . 87c6409 100644 
 - - - a / src / java / org / apache / cassandra / thrift / CustomTThreadPoolServer . java 
 + + + b / src / java / org / apache / cassandra / thrift / CustomTThreadPoolServer . java 
 @ @ - 56 , 8 + 56 , 8 @ @ import com . google . common . util . concurrent . Uninterruptibles ; 
 * Slightly modified version of the Apache Thrift TThreadPoolServer . 
 * < p > 
 * This allows passing an executor so you have more control over the actual 
 - * behaviour of the tasks being run . 
 - * < p / > 
 + * behavior of the tasks being run . 
 + * < / p > 
 * Newer version of Thrift should make this obsolete . 
 * / 
 public class CustomTThreadPoolServer extends TServer 
 diff - - git a / src / java / org / apache / cassandra / utils / ByteBufferUtil . java b / src / java / org / apache / cassandra / utils / ByteBufferUtil . java 
 index e1bc5c7 . . 6bcec96 100644 
 - - - a / src / java / org / apache / cassandra / utils / ByteBufferUtil . java 
 + + + b / src / java / org / apache / cassandra / utils / ByteBufferUtil . java 
 @ @ - 383 , 7 + 383 , 6 @ @ public class ByteBufferUtil 
 
 / * * 
 * @ param in data input 
 - * @ return null 
 * @ throws IOException if an I / O error occurs . 
 * / 
 public static void skipShortLength ( DataInputPlus in ) throws IOException 
 diff - - git a / src / java / org / apache / cassandra / utils / CassandraVersion . java b / src / java / org / apache / cassandra / utils / CassandraVersion . java 
 index 62d68be . . 6887a88 100644 
 - - - a / src / java / org / apache / cassandra / utils / CassandraVersion . java 
 + + + b / src / java / org / apache / cassandra / utils / CassandraVersion . java 
 @ @ - 26 , 8 + 26 , 9 @ @ import org . apache . commons . lang3 . StringUtils ; 
 
 / * * 
 * Implements versioning used in Cassandra and CQL . 
 - * < p / > 
 + * < p > 
 * Note : The following code uses a slight variation from the semver document ( http : / / semver . org ) . 
 + * < / p > 
 * / 
 public class CassandraVersion implements Comparable < CassandraVersion > 
 { 
 @ @ - 123 , 13 + 124 , 14 @ @ public class CassandraVersion implements Comparable < CassandraVersion > 
 / * * 
 * Returns a version that is backward compatible with this version amongst a list 
 * of provided version , or null if none can be found . 
 - * < p / > 
 + * < p > 
 * For instance : 
 * " 2 . 0 . 0 " . findSupportingVersion ( " 2 . 0 . 0 " , " 3 . 0 . 0 " ) = = " 2 . 0 . 0 " 
 * " 2 . 0 . 0 " . findSupportingVersion ( " 2 . 1 . 3 " , " 3 . 0 . 0 " ) = = " 2 . 1 . 3 " 
 * " 2 . 0 . 0 " . findSupportingVersion ( " 3 . 0 . 0 " ) = = null 
 * " 2 . 0 . 3 " . findSupportingVersion ( " 2 . 0 . 0 " ) = = " 2 . 0 . 0 " 
 * " 2 . 1 . 0 " . findSupportingVersion ( " 2 . 0 . 0 " ) = = null 
 + * < / p > 
 * / 
 public CassandraVersion findSupportingVersion ( CassandraVersion . . . versions ) 
 {

NEAREST DIFF:
diff - - git a / bin / cassandra b / bin / cassandra 
 index 8ce8d57 . . 4dd2497 100755 
 - - - a / bin / cassandra 
 + + + b / bin / cassandra 
 @ @ - 89 , 6 + 89 , 16 @ @ else 
 JAVA = java 
 fi 
 
 + # If numactl is available , use it . For Cassandra , the priority is to 
 + # avoid disk I / O . Even for the purpose of CPU efficiency , we don ' t 
 + # really have CPU < - > data affinity anyway . 
 + if which numactl > / dev / null 2 > / dev / null 
 + then 
 + NUMACTL = " numactl - - interleave = all " 
 + else 
 + NUMACTL = " " 
 + fi 
 + 
 if [ - z " $ CASSANDRA _ CONF " - o - z " $ CLASSPATH " ] ; then 
 echo " You must set the CASSANDRA _ CONF and CLASSPATH vars " > & 2 
 exit 1 
 @ @ - 122 , 10 + 132 , 10 @ @ launch _ service ( ) 
 # to close stdout / stderr , but it ' s up to us not to background . 
 if [ " x $ foreground " ! = " x " ] ; then 
 cassandra _ parms = " $ cassandra _ parms - Dcassandra - foreground = yes " 
 - exec " $ JAVA " $ JVM _ OPTS $ cassandra _ parms - cp " $ CLASSPATH " $ props " $ class " 
 + exec $ NUMACTL " $ JAVA " $ JVM _ OPTS $ cassandra _ parms - cp " $ CLASSPATH " $ props " $ class " 
 # Startup CassandraDaemon , background it , and write the pid . 
 else 
 - exec " $ JAVA " $ JVM _ OPTS $ cassandra _ parms - cp " $ CLASSPATH " $ props " $ class " < & - & 
 + exec $ NUMACTL " $ JAVA " $ JVM _ OPTS $ cassandra _ parms - cp " $ CLASSPATH " $ props " $ class " < & - & 
 [ ! - z " $ pidpath " ] & & printf " % d " $ ! > " $ pidpath " 
 fi 

