BLEU SCORE: 0.02383853510228548

TEST MSG: Added support for IBM zSystems architecture ( s390x )
GENERATED MSG: remove [ Freeable ] Memory finalizers

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 70abffe . . 57e985d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 3 <nl> + * Added support for IBM zSystems architecture ( CASSANDRA - 11054 ) <nl> * Update CQL documentation ( CASSANDRA - 10899 ) <nl> * Check the column name , not cell name , for dropped columns when reading <nl> legacy sstables ( CASSANDRA - 11018 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / util / Memory . java b / src / java / org / apache / cassandra / io / util / Memory . java <nl> index 07d3ca3 . . 78950ce 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / Memory . java <nl> + + + b / src / java / org / apache / cassandra / io / util / Memory . java <nl> @ @ - 59 , 7 + 59 , 7 @ @ public class Memory implements AutoCloseable <nl> { <nl> String arch = System . getProperty ( " os . arch " ) ; <nl> unaligned = arch . equals ( " i386 " ) | | arch . equals ( " x86 " ) <nl> - | | arch . equals ( " amd64 " ) | | arch . equals ( " x86 _ 64 " ) ; <nl> + | | arch . equals ( " amd64 " ) | | arch . equals ( " x86 _ 64 " ) | | arch . equals ( " s390x " ) ; <nl> } <nl> <nl> protected long peer ; <nl> diff - - git a / src / java / org / apache / cassandra / utils / FastByteOperations . java b / src / java / org / apache / cassandra / utils / FastByteOperations . java <nl> index f35d2e2 . . 68e395c 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FastByteOperations . java <nl> + + + b / src / java / org / apache / cassandra / utils / FastByteOperations . java <nl> @ @ - 104 , 7 + 104 , 7 @ @ public class FastByteOperations <nl> { <nl> String arch = System . getProperty ( " os . arch " ) ; <nl> boolean unaligned = arch . equals ( " i386 " ) | | arch . equals ( " x86 " ) <nl> - | | arch . equals ( " amd64 " ) | | arch . equals ( " x86 _ 64 " ) ; <nl> + | | arch . equals ( " amd64 " ) | | arch . equals ( " x86 _ 64 " ) | | arch . equals ( " s390x " ) ; <nl> if ( ! unaligned ) <nl> return new PureJavaOperations ( ) ; <nl> try
NEAREST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / streaming / BootstrapTest . java b / test / unit / org / apache / cassandra / streaming / BootstrapTest . java <nl> index b2d24f4 . . 20313f0 100644 <nl> - - - a / test / unit / org / apache / cassandra / streaming / BootstrapTest . java <nl> + + + b / test / unit / org / apache / cassandra / streaming / BootstrapTest . java <nl> @ @ - 36 , 8 + 36 , 8 @ @ public class BootstrapTest extends SchemaLoader <nl> @ Test <nl> public void testGetNewNames ( ) throws IOException <nl> { <nl> - Descriptor desc = Descriptor . fromFilename ( new File ( " Keyspace1 " , " Keyspace1 - Standard1 - f - 500 - Data . db " ) . toString ( ) ) ; <nl> - assert ! desc . isLatestVersion ; / / deliberately test old version <nl> + Descriptor desc = Descriptor . fromFilename ( new File ( " Keyspace1 " , " Keyspace1 - Standard1 - ia - 500 - Data . db " ) . toString ( ) ) ; <nl> + / / assert ! desc . isLatestVersion ; / / minimum compatible version - - for now it is the latest as well <nl> PendingFile inContext = new PendingFile ( null , desc , " Data . db " , Arrays . asList ( new Pair < Long , Long > ( 0L , 1L ) ) , OperationType . BOOTSTRAP ) ; <nl> <nl> PendingFile outContext = StreamIn . getContextMapping ( inContext ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 70abffe . . 57e985d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 3 
 + * Added support for IBM zSystems architecture ( CASSANDRA - 11054 ) 
 * Update CQL documentation ( CASSANDRA - 10899 ) 
 * Check the column name , not cell name , for dropped columns when reading 
 legacy sstables ( CASSANDRA - 11018 ) 
 diff - - git a / src / java / org / apache / cassandra / io / util / Memory . java b / src / java / org / apache / cassandra / io / util / Memory . java 
 index 07d3ca3 . . 78950ce 100644 
 - - - a / src / java / org / apache / cassandra / io / util / Memory . java 
 + + + b / src / java / org / apache / cassandra / io / util / Memory . java 
 @ @ - 59 , 7 + 59 , 7 @ @ public class Memory implements AutoCloseable 
 { 
 String arch = System . getProperty ( " os . arch " ) ; 
 unaligned = arch . equals ( " i386 " ) | | arch . equals ( " x86 " ) 
 - | | arch . equals ( " amd64 " ) | | arch . equals ( " x86 _ 64 " ) ; 
 + | | arch . equals ( " amd64 " ) | | arch . equals ( " x86 _ 64 " ) | | arch . equals ( " s390x " ) ; 
 } 
 
 protected long peer ; 
 diff - - git a / src / java / org / apache / cassandra / utils / FastByteOperations . java b / src / java / org / apache / cassandra / utils / FastByteOperations . java 
 index f35d2e2 . . 68e395c 100644 
 - - - a / src / java / org / apache / cassandra / utils / FastByteOperations . java 
 + + + b / src / java / org / apache / cassandra / utils / FastByteOperations . java 
 @ @ - 104 , 7 + 104 , 7 @ @ public class FastByteOperations 
 { 
 String arch = System . getProperty ( " os . arch " ) ; 
 boolean unaligned = arch . equals ( " i386 " ) | | arch . equals ( " x86 " ) 
 - | | arch . equals ( " amd64 " ) | | arch . equals ( " x86 _ 64 " ) ; 
 + | | arch . equals ( " amd64 " ) | | arch . equals ( " x86 _ 64 " ) | | arch . equals ( " s390x " ) ; 
 if ( ! unaligned ) 
 return new PureJavaOperations ( ) ; 
 try

NEAREST DIFF:
diff - - git a / test / unit / org / apache / cassandra / streaming / BootstrapTest . java b / test / unit / org / apache / cassandra / streaming / BootstrapTest . java 
 index b2d24f4 . . 20313f0 100644 
 - - - a / test / unit / org / apache / cassandra / streaming / BootstrapTest . java 
 + + + b / test / unit / org / apache / cassandra / streaming / BootstrapTest . java 
 @ @ - 36 , 8 + 36 , 8 @ @ public class BootstrapTest extends SchemaLoader 
 @ Test 
 public void testGetNewNames ( ) throws IOException 
 { 
 - Descriptor desc = Descriptor . fromFilename ( new File ( " Keyspace1 " , " Keyspace1 - Standard1 - f - 500 - Data . db " ) . toString ( ) ) ; 
 - assert ! desc . isLatestVersion ; / / deliberately test old version 
 + Descriptor desc = Descriptor . fromFilename ( new File ( " Keyspace1 " , " Keyspace1 - Standard1 - ia - 500 - Data . db " ) . toString ( ) ) ; 
 + / / assert ! desc . isLatestVersion ; / / minimum compatible version - - for now it is the latest as well 
 PendingFile inContext = new PendingFile ( null , desc , " Data . db " , Arrays . asList ( new Pair < Long , Long > ( 0L , 1L ) ) , OperationType . BOOTSTRAP ) ; 
 
 PendingFile outContext = StreamIn . getContextMapping ( inContext ) ;
