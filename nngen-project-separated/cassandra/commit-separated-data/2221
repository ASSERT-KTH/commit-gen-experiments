BLEU SCORE: 0.020980574531482755

TEST MSG: Pass mutated cf to index updater for use by PRSI
GENERATED MSG: add SecondaryIndex . reload API

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index f34b912 . . a426df4 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 0 - rc6 <nl> + * Pass mutated cf to index updater for use by PRSI ( CASSANDRA - 7742 ) <nl> * Include stress yaml example in release and deb ( CASSANDRA - 7717 ) <nl> * workaround for netty issue causing corrupted data off the wire ( CASSANDRA - 7695 ) <nl> * cqlsh DESC CLUSTER fails retrieving ring information ( CASSANDRA - 7687 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / Keyspace . java b / src / java / org / apache / cassandra / db / Keyspace . java <nl> index ff4d272 . . 5770304 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Keyspace . java <nl> + + + b / src / java / org / apache / cassandra / db / Keyspace . java <nl> @ @ - 388 , 7 + 388 , 9 @ @ public class Keyspace <nl> } <nl> <nl> Tracing . trace ( " Adding to { } memtable " , cf . metadata ( ) . cfName ) ; <nl> - SecondaryIndexManager . Updater updater = updateIndexes ? cfs . indexManager . updaterFor ( key , opGroup ) : SecondaryIndexManager . nullUpdater ; <nl> + SecondaryIndexManager . Updater updater = updateIndexes <nl> + ? cfs . indexManager . updaterFor ( key , cf , opGroup ) <nl> + : SecondaryIndexManager . nullUpdater ; <nl> cfs . apply ( key , cf , updater , opGroup , replayPosition ) ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java b / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java <nl> index 339af8f . . c184097 100644 <nl> - - - a / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java <nl> + + + b / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java <nl> @ @ - 512 , 14 + 512 , 6 @ @ public class SecondaryIndexManager <nl> / * * <nl> * Updated closure with only the modified row key . <nl> * / <nl> - public Updater updaterFor ( DecoratedKey key , OpOrder . Group opGroup ) <nl> - { <nl> - return updaterFor ( key , null , opGroup ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Updated closure with only the modified row key . <nl> - * / <nl> public Updater gcUpdaterFor ( DecoratedKey key ) <nl> { <nl> return new GCUpdater ( key ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / db / index / PerRowSecondaryIndexTest . java b / test / unit / org / apache / cassandra / db / index / PerRowSecondaryIndexTest . java <nl> index 158dd2c . . de78594 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / index / PerRowSecondaryIndexTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / index / PerRowSecondaryIndexTest . java <nl> @ @ - 132 , 7 + 132 , 7 @ @ public class PerRowSecondaryIndexTest extends SchemaLoader <nl> QueryFilter filter = QueryFilter . getIdentityFilter ( DatabaseDescriptor . getPartitioner ( ) . decorateKey ( rowKey ) , <nl> baseCfs . getColumnFamilyName ( ) , <nl> System . currentTimeMillis ( ) ) ; <nl> - LAST _ INDEXED _ ROW = baseCfs . getColumnFamily ( filter ) ; <nl> + LAST _ INDEXED _ ROW = cf ; <nl> LAST _ INDEXED _ KEY = rowKey ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 8125e38 . . 46222c5 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 51 , 6 + 51 , 7 @ @ <nl> <nl> <nl> 1 . 1 . 5 <nl> + * add SecondaryIndex . reload API ( CASSANDRA - 4581 ) <nl> * use millis + atomicint for commitlog segment creation instead of <nl> nanotime , which has issues under some hypervisors ( CASSANDRA - 4601 ) <nl> * fix FD leak in slice queries ( CASSANDRA - 4571 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / index / AbstractSimplePerColumnSecondaryIndex . java b / src / java / org / apache / cassandra / db / index / AbstractSimplePerColumnSecondaryIndex . java <nl> index 3a012f6 . . ecabf23 100644 <nl> - - - a / src / java / org / apache / cassandra / db / index / AbstractSimplePerColumnSecondaryIndex . java <nl> + + + b / src / java / org / apache / cassandra / db / index / AbstractSimplePerColumnSecondaryIndex . java <nl> @ @ - 157 , 4 + 157 , 10 @ @ public abstract class AbstractSimplePerColumnSecondaryIndex extends PerColumnSec <nl> { <nl> return indexCfs . getMemtableDataSize ( ) ; <nl> } <nl> + <nl> + public void reload ( ) <nl> + { <nl> + indexCfs . metadata . reloadSecondaryIndexMetadata ( baseCfs . metadata ) ; <nl> + indexCfs . reload ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / index / SecondaryIndex . java b / src / java / org / apache / cassandra / db / index / SecondaryIndex . java <nl> index b0ffe3a . . fd9fabf 100644 <nl> - - - a / src / java / org / apache / cassandra / db / index / SecondaryIndex . java <nl> + + + b / src / java / org / apache / cassandra / db / index / SecondaryIndex . java <nl> @ @ - 17 , 8 + 17 , 8 @ @ <nl> * / <nl> package org . apache . cassandra . db . index ; <nl> <nl> + import java . io . IOException ; <nl> import java . nio . ByteBuffer ; <nl> - import java . nio . charset . CharacterCodingException ; <nl> import java . util . * ; <nl> import java . util . concurrent . * ; <nl> <nl> @ @ - 75 , 6 + 75 , 14 @ @ public abstract class SecondaryIndex <nl> public abstract void init ( ) ; <nl> <nl> / * * <nl> + * Reload an existing index following a change to its configuration , <nl> + * or that of the indexed column ( s ) . Differs from init ( ) in that we expect <nl> + * expect new resources ( such as CFS for a KEYS index ) to be created by <nl> + * init ( ) but not here <nl> + * / <nl> + public abstract void reload ( ) ; <nl> + <nl> + / * * <nl> * Validates the index _ options passed in the ColumnDef <nl> * @ throws ConfigurationException <nl> * / <nl> diff - - git a / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java b / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java <nl> index a01b0f9 . . 1eb5d2a 100644 <nl> - - - a / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java <nl> + + + b / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java <nl> @ @ - 104 , 10 + 104 , 11 @ @ public class SecondaryIndexManager <nl> if ( cdef . getIndexType ( ) ! = null & & ! indexedColumnNames . contains ( cdef . name ) ) <nl> addIndexedColumn ( cdef ) ; <nl> <nl> - for ( ColumnFamilyStore cfs : getIndexesBackedByCfs ( ) ) <nl> + Set < SecondaryIndex > reloadedIndexes = Collections . newSetFromMap ( new IdentityHashMap < SecondaryIndex , Boolean > ( ) ) ; <nl> + for ( SecondaryIndex index : indexesByColumn . values ( ) ) <nl> { <nl> - cfs . metadata . reloadSecondaryIndexMetadata ( baseCfs . metadata ) ; <nl> - cfs . reload ( ) ; <nl> + if ( reloadedIndexes . add ( index ) ) <nl> + index . reload ( ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / db / index / keys / KeysIndex . java b / src / java / org / apache / cassandra / db / index / keys / KeysIndex . java <nl> index dbc32ce . . 7174ffc 100644 <nl> - - - a / src / java / org / apache / cassandra / db / index / keys / KeysIndex . java <nl> + + + b / src / java / org / apache / cassandra / db / index / keys / KeysIndex . java <nl> @ @ - 19 , 20 + 19 , 12 @ @ package org . apache . cassandra . db . index . keys ; <nl> <nl> import java . nio . ByteBuffer ; <nl> import java . util . Set ; <nl> - import java . util . concurrent . ExecutionException ; <nl> <nl> - import org . apache . cassandra . config . CFMetaData ; <nl> import org . apache . cassandra . config . ColumnDefinition ; <nl> - import org . apache . cassandra . exceptions . ConfigurationException ; <nl> - import org . apache . cassandra . db . * ; <nl> + import org . apache . cassandra . db . IColumn ; <nl> import org . apache . cassandra . db . index . AbstractSimplePerColumnSecondaryIndex ; <nl> import org . apache . cassandra . db . index . SecondaryIndexSearcher ; <nl> - import org . apache . cassandra . db . marshal . AbstractType ; <nl> - import org . apache . cassandra . db . marshal . BytesType ; <nl> - import org . apache . cassandra . db . marshal . LocalByPartionerType ; <nl> - import org . apache . cassandra . dht . * ; <nl> - import org . apache . cassandra . service . StorageService ; <nl> - import org . apache . cassandra . utils . ByteBufferUtil ; <nl> + import org . apache . cassandra . exceptions . ConfigurationException ; <nl> <nl> / * * <nl> * Implements a secondary index for a column family using a second column family <nl> diff - - git a / test / unit / org / apache / cassandra / db / SecondaryIndexColumnSizeTest . java b / test / unit / org / apache / cassandra / db / SecondaryIndexColumnSizeTest . java <nl> index e1cce4e . . 8872d65 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / SecondaryIndexColumnSizeTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / SecondaryIndexColumnSizeTest . java <nl> @ @ - 138 , 6 + 138 , 11 @ @ public class SecondaryIndexColumnSizeTest <nl> public void delete ( DecoratedKey key ) <nl> { <nl> } <nl> + <nl> + @ Override <nl> + public void reload ( ) <nl> + { <nl> + } <nl> } <nl> <nl> <nl> @ @ - 211 , 5 + 216 , 10 @ @ public class SecondaryIndexColumnSizeTest <nl> public void update ( ByteBuffer rowKey , IColumn col ) <nl> { <nl> } <nl> + <nl> + @ Override <nl> + public void reload ( ) <nl> + { <nl> + } <nl> } <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index f34b912 . . a426df4 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 0 - rc6 
 + * Pass mutated cf to index updater for use by PRSI ( CASSANDRA - 7742 ) 
 * Include stress yaml example in release and deb ( CASSANDRA - 7717 ) 
 * workaround for netty issue causing corrupted data off the wire ( CASSANDRA - 7695 ) 
 * cqlsh DESC CLUSTER fails retrieving ring information ( CASSANDRA - 7687 ) 
 diff - - git a / src / java / org / apache / cassandra / db / Keyspace . java b / src / java / org / apache / cassandra / db / Keyspace . java 
 index ff4d272 . . 5770304 100644 
 - - - a / src / java / org / apache / cassandra / db / Keyspace . java 
 + + + b / src / java / org / apache / cassandra / db / Keyspace . java 
 @ @ - 388 , 7 + 388 , 9 @ @ public class Keyspace 
 } 
 
 Tracing . trace ( " Adding to { } memtable " , cf . metadata ( ) . cfName ) ; 
 - SecondaryIndexManager . Updater updater = updateIndexes ? cfs . indexManager . updaterFor ( key , opGroup ) : SecondaryIndexManager . nullUpdater ; 
 + SecondaryIndexManager . Updater updater = updateIndexes 
 + ? cfs . indexManager . updaterFor ( key , cf , opGroup ) 
 + : SecondaryIndexManager . nullUpdater ; 
 cfs . apply ( key , cf , updater , opGroup , replayPosition ) ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java b / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java 
 index 339af8f . . c184097 100644 
 - - - a / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java 
 + + + b / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java 
 @ @ - 512 , 14 + 512 , 6 @ @ public class SecondaryIndexManager 
 / * * 
 * Updated closure with only the modified row key . 
 * / 
 - public Updater updaterFor ( DecoratedKey key , OpOrder . Group opGroup ) 
 - { 
 - return updaterFor ( key , null , opGroup ) ; 
 - } 
 - 
 - / * * 
 - * Updated closure with only the modified row key . 
 - * / 
 public Updater gcUpdaterFor ( DecoratedKey key ) 
 { 
 return new GCUpdater ( key ) ; 
 diff - - git a / test / unit / org / apache / cassandra / db / index / PerRowSecondaryIndexTest . java b / test / unit / org / apache / cassandra / db / index / PerRowSecondaryIndexTest . java 
 index 158dd2c . . de78594 100644 
 - - - a / test / unit / org / apache / cassandra / db / index / PerRowSecondaryIndexTest . java 
 + + + b / test / unit / org / apache / cassandra / db / index / PerRowSecondaryIndexTest . java 
 @ @ - 132 , 7 + 132 , 7 @ @ public class PerRowSecondaryIndexTest extends SchemaLoader 
 QueryFilter filter = QueryFilter . getIdentityFilter ( DatabaseDescriptor . getPartitioner ( ) . decorateKey ( rowKey ) , 
 baseCfs . getColumnFamilyName ( ) , 
 System . currentTimeMillis ( ) ) ; 
 - LAST _ INDEXED _ ROW = baseCfs . getColumnFamily ( filter ) ; 
 + LAST _ INDEXED _ ROW = cf ; 
 LAST _ INDEXED _ KEY = rowKey ; 
 } 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 8125e38 . . 46222c5 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 51 , 6 + 51 , 7 @ @ 
 
 
 1 . 1 . 5 
 + * add SecondaryIndex . reload API ( CASSANDRA - 4581 ) 
 * use millis + atomicint for commitlog segment creation instead of 
 nanotime , which has issues under some hypervisors ( CASSANDRA - 4601 ) 
 * fix FD leak in slice queries ( CASSANDRA - 4571 ) 
 diff - - git a / src / java / org / apache / cassandra / db / index / AbstractSimplePerColumnSecondaryIndex . java b / src / java / org / apache / cassandra / db / index / AbstractSimplePerColumnSecondaryIndex . java 
 index 3a012f6 . . ecabf23 100644 
 - - - a / src / java / org / apache / cassandra / db / index / AbstractSimplePerColumnSecondaryIndex . java 
 + + + b / src / java / org / apache / cassandra / db / index / AbstractSimplePerColumnSecondaryIndex . java 
 @ @ - 157 , 4 + 157 , 10 @ @ public abstract class AbstractSimplePerColumnSecondaryIndex extends PerColumnSec 
 { 
 return indexCfs . getMemtableDataSize ( ) ; 
 } 
 + 
 + public void reload ( ) 
 + { 
 + indexCfs . metadata . reloadSecondaryIndexMetadata ( baseCfs . metadata ) ; 
 + indexCfs . reload ( ) ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / index / SecondaryIndex . java b / src / java / org / apache / cassandra / db / index / SecondaryIndex . java 
 index b0ffe3a . . fd9fabf 100644 
 - - - a / src / java / org / apache / cassandra / db / index / SecondaryIndex . java 
 + + + b / src / java / org / apache / cassandra / db / index / SecondaryIndex . java 
 @ @ - 17 , 8 + 17 , 8 @ @ 
 * / 
 package org . apache . cassandra . db . index ; 
 
 + import java . io . IOException ; 
 import java . nio . ByteBuffer ; 
 - import java . nio . charset . CharacterCodingException ; 
 import java . util . * ; 
 import java . util . concurrent . * ; 
 
 @ @ - 75 , 6 + 75 , 14 @ @ public abstract class SecondaryIndex 
 public abstract void init ( ) ; 
 
 / * * 
 + * Reload an existing index following a change to its configuration , 
 + * or that of the indexed column ( s ) . Differs from init ( ) in that we expect 
 + * expect new resources ( such as CFS for a KEYS index ) to be created by 
 + * init ( ) but not here 
 + * / 
 + public abstract void reload ( ) ; 
 + 
 + / * * 
 * Validates the index _ options passed in the ColumnDef 
 * @ throws ConfigurationException 
 * / 
 diff - - git a / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java b / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java 
 index a01b0f9 . . 1eb5d2a 100644 
 - - - a / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java 
 + + + b / src / java / org / apache / cassandra / db / index / SecondaryIndexManager . java 
 @ @ - 104 , 10 + 104 , 11 @ @ public class SecondaryIndexManager 
 if ( cdef . getIndexType ( ) ! = null & & ! indexedColumnNames . contains ( cdef . name ) ) 
 addIndexedColumn ( cdef ) ; 
 
 - for ( ColumnFamilyStore cfs : getIndexesBackedByCfs ( ) ) 
 + Set < SecondaryIndex > reloadedIndexes = Collections . newSetFromMap ( new IdentityHashMap < SecondaryIndex , Boolean > ( ) ) ; 
 + for ( SecondaryIndex index : indexesByColumn . values ( ) ) 
 { 
 - cfs . metadata . reloadSecondaryIndexMetadata ( baseCfs . metadata ) ; 
 - cfs . reload ( ) ; 
 + if ( reloadedIndexes . add ( index ) ) 
 + index . reload ( ) ; 
 } 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / db / index / keys / KeysIndex . java b / src / java / org / apache / cassandra / db / index / keys / KeysIndex . java 
 index dbc32ce . . 7174ffc 100644 
 - - - a / src / java / org / apache / cassandra / db / index / keys / KeysIndex . java 
 + + + b / src / java / org / apache / cassandra / db / index / keys / KeysIndex . java 
 @ @ - 19 , 20 + 19 , 12 @ @ package org . apache . cassandra . db . index . keys ; 
 
 import java . nio . ByteBuffer ; 
 import java . util . Set ; 
 - import java . util . concurrent . ExecutionException ; 
 
 - import org . apache . cassandra . config . CFMetaData ; 
 import org . apache . cassandra . config . ColumnDefinition ; 
 - import org . apache . cassandra . exceptions . ConfigurationException ; 
 - import org . apache . cassandra . db . * ; 
 + import org . apache . cassandra . db . IColumn ; 
 import org . apache . cassandra . db . index . AbstractSimplePerColumnSecondaryIndex ; 
 import org . apache . cassandra . db . index . SecondaryIndexSearcher ; 
 - import org . apache . cassandra . db . marshal . AbstractType ; 
 - import org . apache . cassandra . db . marshal . BytesType ; 
 - import org . apache . cassandra . db . marshal . LocalByPartionerType ; 
 - import org . apache . cassandra . dht . * ; 
 - import org . apache . cassandra . service . StorageService ; 
 - import org . apache . cassandra . utils . ByteBufferUtil ; 
 + import org . apache . cassandra . exceptions . ConfigurationException ; 
 
 / * * 
 * Implements a secondary index for a column family using a second column family 
 diff - - git a / test / unit / org / apache / cassandra / db / SecondaryIndexColumnSizeTest . java b / test / unit / org / apache / cassandra / db / SecondaryIndexColumnSizeTest . java 
 index e1cce4e . . 8872d65 100644 
 - - - a / test / unit / org / apache / cassandra / db / SecondaryIndexColumnSizeTest . java 
 + + + b / test / unit / org / apache / cassandra / db / SecondaryIndexColumnSizeTest . java 
 @ @ - 138 , 6 + 138 , 11 @ @ public class SecondaryIndexColumnSizeTest 
 public void delete ( DecoratedKey key ) 
 { 
 } 
 + 
 + @ Override 
 + public void reload ( ) 
 + { 
 + } 
 } 
 
 
 @ @ - 211 , 5 + 216 , 10 @ @ public class SecondaryIndexColumnSizeTest 
 public void update ( ByteBuffer rowKey , IColumn col ) 
 { 
 } 
 + 
 + @ Override 
 + public void reload ( ) 
 + { 
 + } 
 } 
 }
