BLEU SCORE: 0.02383853510228548

TEST MSG: Better detection / logging for corruption in compressed sstables
GENERATED MSG: fsync compression metadata

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1f93bf5 . . e7a4ee5 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 3 <nl> + * Better detection / logging for corruption in compressed sstables ( CASSANDRA - 8192 ) <nl> * Use the correct repairedAt value when closing writer ( CASSANDRA - 8570 ) <nl> * ( cqlsh ) Handle a schema mismatch being detected on startup ( CASSANDRA - 8512 ) <nl> * Properly calculate expected write size during compaction ( CASSANDRA - 8532 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / compress / CompressionMetadata . java b / src / java / org / apache / cassandra / io / compress / CompressionMetadata . java <nl> index f19d502 . . a40048a 100644 <nl> - - - a / src / java / org / apache / cassandra / io / compress / CompressionMetadata . java <nl> + + + b / src / java / org / apache / cassandra / io / compress / CompressionMetadata . java <nl> @ @ - 178 , 6 + 178 , 9 @ @ public class CompressionMetadata <nl> try <nl> { <nl> int chunkCount = input . readInt ( ) ; <nl> + if ( chunkCount < = 0 ) <nl> + throw new IOException ( " Compressed file with 0 chunks encountered : " + input ) ; <nl> + <nl> Memory offsets = Memory . allocate ( chunkCount * 8 ) ; <nl> <nl> for ( int i = 0 ; i < chunkCount ; i + + ) <nl> @ @ - 398 , 6 + 401 , 8 @ @ public class CompressionMetadata <nl> <nl> public Chunk ( long offset , int length ) <nl> { <nl> + assert ( length > 0 ) ; <nl> + <nl> this . offset = offset ; <nl> this . length = length ; <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1f93bf5 . . e7a4ee5 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 3 
 + * Better detection / logging for corruption in compressed sstables ( CASSANDRA - 8192 ) 
 * Use the correct repairedAt value when closing writer ( CASSANDRA - 8570 ) 
 * ( cqlsh ) Handle a schema mismatch being detected on startup ( CASSANDRA - 8512 ) 
 * Properly calculate expected write size during compaction ( CASSANDRA - 8532 ) 
 diff - - git a / src / java / org / apache / cassandra / io / compress / CompressionMetadata . java b / src / java / org / apache / cassandra / io / compress / CompressionMetadata . java 
 index f19d502 . . a40048a 100644 
 - - - a / src / java / org / apache / cassandra / io / compress / CompressionMetadata . java 
 + + + b / src / java / org / apache / cassandra / io / compress / CompressionMetadata . java 
 @ @ - 178 , 6 + 178 , 9 @ @ public class CompressionMetadata 
 try 
 { 
 int chunkCount = input . readInt ( ) ; 
 + if ( chunkCount < = 0 ) 
 + throw new IOException ( " Compressed file with 0 chunks encountered : " + input ) ; 
 + 
 Memory offsets = Memory . allocate ( chunkCount * 8 ) ; 
 
 for ( int i = 0 ; i < chunkCount ; i + + ) 
 @ @ - 398 , 6 + 401 , 8 @ @ public class CompressionMetadata 
 
 public Chunk ( long offset , int length ) 
 { 
 + assert ( length > 0 ) ; 
 + 
 this . offset = offset ; 
 this . length = length ; 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
