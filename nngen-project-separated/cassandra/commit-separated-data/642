BLEU SCORE: 0.06285596338261261

TEST MSG: Fix exceptions when enabling gossip on nodes that haven ' t joined the ring
GENERATED MSG: Reject bootstrapping endpoints that are already in the ring with

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ee4015e . . bc9fc5b 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 8 <nl> + * Fix exceptions when enabling gossip on nodes that haven ' t joined the ring ( CASSANDRA - 12253 ) <nl> * Fix authentication problem when invoking clqsh copy from a SOURCE command ( CASSANDRA - 12642 ) <nl> * Decrement pending range calculator jobs counter in finally block <nl> ( CASSANDRA - 12554 ) <nl> diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> index a8f9524 . . 06b14c4 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / Gossiper . java <nl> + + + b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> @ @ - 1446 , 7 + 1446 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> public void stop ( ) <nl> { <nl> EndpointState mystate = endpointStateMap . get ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> - if ( mystate ! = null & & ! isSilentShutdownState ( mystate ) ) <nl> + if ( mystate ! = null & & ! isSilentShutdownState ( mystate ) & & StorageService . instance . isJoined ( ) ) <nl> { <nl> logger . info ( " Announcing shutdown " ) ; <nl> addLocalApplicationState ( ApplicationState . STATUS , StorageService . instance . valueFactory . shutdown ( true ) ) ; <nl> @ @ - 1456 , 7 + 1456 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> Uninterruptibles . sleepUninterruptibly ( Integer . getInteger ( " cassandra . shutdown _ announce _ in _ ms " , 2000 ) , TimeUnit . MILLISECONDS ) ; <nl> } <nl> else <nl> - logger . warn ( " No local state or state is in silent shutdown , not announcing shutdown " ) ; <nl> + logger . warn ( " No local state , state is in silent shutdown , or node hasn ' t joined , not announcing shutdown " ) ; <nl> if ( scheduledGossipTask ! = null ) <nl> scheduledGossipTask . cancel ( false ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 9197ab1 . . 0b6e851 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 185 , 6 + 185 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> / / true when keeping strict consistency while bootstrapping <nl> private boolean useStrictConsistency = Boolean . parseBoolean ( System . getProperty ( " cassandra . consistent . rangemovement " , " true " ) ) ; <nl> private static final boolean allowSimultaneousMoves = Boolean . valueOf ( System . getProperty ( " cassandra . consistent . simultaneousmoves . allow " , " false " ) ) ; <nl> + private static final boolean joinRing = Boolean . parseBoolean ( System . getProperty ( " cassandra . join _ ring " , " true " ) ) ; <nl> private boolean replacing ; <nl> private UUID replacingId ; <nl> <nl> @ @ - 292 , 7 + 293 , 17 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> if ( ! initialized ) <nl> { <nl> logger . warn ( " Starting gossip by operator request " ) ; <nl> - setGossipTokens ( getLocalTokens ( ) ) ; <nl> + Collection < Token > tokens = SystemKeyspace . getSavedTokens ( ) ; <nl> + <nl> + boolean validTokens = tokens ! = null & & ! tokens . isEmpty ( ) ; <nl> + <nl> + / / shouldn ' t be called before these are set if we intend to join the ring / are in the process of doing so <nl> + if ( joined | | joinRing ) <nl> + assert validTokens : " Cannot start gossiping for a node intended to join without valid tokens " ; <nl> + <nl> + if ( validTokens ) <nl> + setGossipTokens ( tokens ) ; <nl> + <nl> Gossiper . instance . forceNewerGeneration ( ) ; <nl> Gossiper . instance . start ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ; <nl> initialized = true ; <nl> @ @ - 631 , 7 + 642 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> logger . warn ( " Error loading counter cache " , t ) ; <nl> } <nl> <nl> - if ( Boolean . parseBoolean ( System . getProperty ( " cassandra . join _ ring " , " true " ) ) ) <nl> + if ( joinRing ) <nl> { <nl> joinTokenRing ( delay ) ; <nl> } <nl> @ @ - 674 , 7 + 685 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> { <nl> Map < ApplicationState , VersionedValue > appStates = new EnumMap < > ( ApplicationState . class ) ; <nl> <nl> - if ( replacing & & ! ( Boolean . parseBoolean ( System . getProperty ( " cassandra . join _ ring " , " true " ) ) ) ) <nl> + if ( replacing & & ! joinRing ) <nl> throw new ConfigurationException ( " Cannot set both join _ ring = false and attempt to replace a node " ) ; <nl> if ( DatabaseDescriptor . getReplaceTokens ( ) . size ( ) > 0 | | DatabaseDescriptor . getReplaceNode ( ) ! = null ) <nl> throw new RuntimeException ( " Replace method removed ; use cassandra . replace _ address instead " ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ac4c010 . . c01b4a8 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 7 @ @ <nl> + 2 . 0 . 3 <nl> + * Reject bootstrapping if the node already exists in gossip ( CASSANDRA - 5571 ) <nl> + <nl> + <nl> 2 . 0 . 2 <nl> * Update FailureDetector to use nanontime ( CASSANDRA - 4925 ) <nl> * Fix FileCacheService regressions ( CASSANDRA - 6149 )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ee4015e . . bc9fc5b 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 8 
 + * Fix exceptions when enabling gossip on nodes that haven ' t joined the ring ( CASSANDRA - 12253 ) 
 * Fix authentication problem when invoking clqsh copy from a SOURCE command ( CASSANDRA - 12642 ) 
 * Decrement pending range calculator jobs counter in finally block 
 ( CASSANDRA - 12554 ) 
 diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java 
 index a8f9524 . . 06b14c4 100644 
 - - - a / src / java / org / apache / cassandra / gms / Gossiper . java 
 + + + b / src / java / org / apache / cassandra / gms / Gossiper . java 
 @ @ - 1446 , 7 + 1446 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 public void stop ( ) 
 { 
 EndpointState mystate = endpointStateMap . get ( FBUtilities . getBroadcastAddress ( ) ) ; 
 - if ( mystate ! = null & & ! isSilentShutdownState ( mystate ) ) 
 + if ( mystate ! = null & & ! isSilentShutdownState ( mystate ) & & StorageService . instance . isJoined ( ) ) 
 { 
 logger . info ( " Announcing shutdown " ) ; 
 addLocalApplicationState ( ApplicationState . STATUS , StorageService . instance . valueFactory . shutdown ( true ) ) ; 
 @ @ - 1456 , 7 + 1456 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 Uninterruptibles . sleepUninterruptibly ( Integer . getInteger ( " cassandra . shutdown _ announce _ in _ ms " , 2000 ) , TimeUnit . MILLISECONDS ) ; 
 } 
 else 
 - logger . warn ( " No local state or state is in silent shutdown , not announcing shutdown " ) ; 
 + logger . warn ( " No local state , state is in silent shutdown , or node hasn ' t joined , not announcing shutdown " ) ; 
 if ( scheduledGossipTask ! = null ) 
 scheduledGossipTask . cancel ( false ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 9197ab1 . . 0b6e851 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 185 , 6 + 185 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 / / true when keeping strict consistency while bootstrapping 
 private boolean useStrictConsistency = Boolean . parseBoolean ( System . getProperty ( " cassandra . consistent . rangemovement " , " true " ) ) ; 
 private static final boolean allowSimultaneousMoves = Boolean . valueOf ( System . getProperty ( " cassandra . consistent . simultaneousmoves . allow " , " false " ) ) ; 
 + private static final boolean joinRing = Boolean . parseBoolean ( System . getProperty ( " cassandra . join _ ring " , " true " ) ) ; 
 private boolean replacing ; 
 private UUID replacingId ; 
 
 @ @ - 292 , 7 + 293 , 17 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 if ( ! initialized ) 
 { 
 logger . warn ( " Starting gossip by operator request " ) ; 
 - setGossipTokens ( getLocalTokens ( ) ) ; 
 + Collection < Token > tokens = SystemKeyspace . getSavedTokens ( ) ; 
 + 
 + boolean validTokens = tokens ! = null & & ! tokens . isEmpty ( ) ; 
 + 
 + / / shouldn ' t be called before these are set if we intend to join the ring / are in the process of doing so 
 + if ( joined | | joinRing ) 
 + assert validTokens : " Cannot start gossiping for a node intended to join without valid tokens " ; 
 + 
 + if ( validTokens ) 
 + setGossipTokens ( tokens ) ; 
 + 
 Gossiper . instance . forceNewerGeneration ( ) ; 
 Gossiper . instance . start ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ; 
 initialized = true ; 
 @ @ - 631 , 7 + 642 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 logger . warn ( " Error loading counter cache " , t ) ; 
 } 
 
 - if ( Boolean . parseBoolean ( System . getProperty ( " cassandra . join _ ring " , " true " ) ) ) 
 + if ( joinRing ) 
 { 
 joinTokenRing ( delay ) ; 
 } 
 @ @ - 674 , 7 + 685 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 { 
 Map < ApplicationState , VersionedValue > appStates = new EnumMap < > ( ApplicationState . class ) ; 
 
 - if ( replacing & & ! ( Boolean . parseBoolean ( System . getProperty ( " cassandra . join _ ring " , " true " ) ) ) ) 
 + if ( replacing & & ! joinRing ) 
 throw new ConfigurationException ( " Cannot set both join _ ring = false and attempt to replace a node " ) ; 
 if ( DatabaseDescriptor . getReplaceTokens ( ) . size ( ) > 0 | | DatabaseDescriptor . getReplaceNode ( ) ! = null ) 
 throw new RuntimeException ( " Replace method removed ; use cassandra . replace _ address instead " ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ac4c010 . . c01b4a8 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 7 @ @ 
 + 2 . 0 . 3 
 + * Reject bootstrapping if the node already exists in gossip ( CASSANDRA - 5571 ) 
 + 
 + 
 2 . 0 . 2 
 * Update FailureDetector to use nanontime ( CASSANDRA - 4925 ) 
 * Fix FileCacheService regressions ( CASSANDRA - 6149 )
