BLEU SCORE: 0.06567274736060397

TEST MSG: Fix unit for streaming throughput in nodetool
GENERATED MSG: add nodetool enablebackup / disablebackup

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index f3d5998 . . 9914ad9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 33 , 6 + 33 , 7 @ @ <nl> * Fix NPE when table dropped during streaming ( CASSANDRA - 7946 ) <nl> * Fix wrong progress when streaming uncompressed ( CASSANDRA - 7878 ) <nl> * Fix possible infinite loop in creating repair range ( CASSANDRA - 7983 ) <nl> + * Fix unit in nodetool for streaming throughput ( CASSANDRA - 7375 ) <nl> Merged from 1 . 2 : <nl> * Don ' t index tombstones ( CASSANDRA - 7828 ) <nl> <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 4d9992f . . 27b50a7 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 811 , 7 + 811 , 7 @ @ public class NodeCmd <nl> * / <nl> public void printStreamThroughput ( PrintStream outs ) <nl> { <nl> - outs . println ( " Current stream throughput : " + probe . getStreamThroughput ( ) + " MB / s " ) ; <nl> + outs . println ( " Current stream throughput : " + probe . getStreamThroughput ( ) + " Mb / s " ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml b / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml <nl> index 416ef1a . . fa2b39c 100644 <nl> - - - a / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml <nl> + + + b / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml <nl> @ @ - 123 , 7 + 123 , 7 @ @ commands : <nl> Set the MB / s throughput cap for compaction in the system , or 0 to disable throttling . <nl> - name : setstreamthroughput < value _ in _ mb > <nl> help : | <nl> - Set the MB / s throughput cap for streaming in the system , or 0 to disable throttling . <nl> + Set the Mb / s throughput cap for streaming in the system , or 0 to disable throttling . <nl> - name : describecluster <nl> help : | <nl> Print the name , snitch , partitioner and schema version of a cluster . <nl> @ @ - 189 , 7 + 189 , 7 @ @ commands : <nl> Print the MB / s throughput cap for compaction in the system <nl> - name : getstreamthroughput <nl> help : | <nl> - Print the MB / s throughput cap for streaming in the system <nl> + Print the Mb / s throughput cap for streaming in the system <nl> - name : stop < compaction _ type > <nl> help : | <nl> Supported types are COMPACTION , VALIDATION , CLEANUP , SCRUB , INDEX _ BUILD
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1aca920 . . fb95e14 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 43 , 7 + 43 , 7 @ @ <nl> * Add binary protocol versioning ( CASSANDRA - 5436 ) <nl> * Swap THshaServer for TThreadedSelectorServer ( CASSANDRA - 5530 ) <nl> * Add alias support to SELECT statement ( CASSANDRA - 5075 ) <nl> - <nl> + * Don ' t create empty RowMutations in CommitLogReplayer ( CASSANDRA - 5541 ) <nl> <nl> 1 . 2 . 5 <nl> * fix 2i updates with identical values and timestamps ( CASSANDRA - 5540 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java <nl> index 37094c6 . . 3d4cb8c 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java <nl> @ @ - 237 , 11 + 237 , 11 @ @ public class CommitLogReplayer <nl> return ; <nl> <nl> final Table table = Table . open ( frm . getTable ( ) ) ; <nl> - RowMutation newRm = new RowMutation ( frm . getTable ( ) , frm . key ( ) ) ; <nl> <nl> / / Rebuild the row mutation , omitting column families that <nl> / / a ) have already been flushed , <nl> / / b ) are part of a cf that was dropped . Keep in mind that the cf . name ( ) is suspect . do every thing based on the cfid instead . <nl> + RowMutation newRm = null ; <nl> for ( ColumnFamily columnFamily : frm . getColumnFamilies ( ) ) <nl> { <nl> if ( Schema . instance . getCF ( columnFamily . id ( ) ) = = null ) <nl> @ @ - 254 , 12 + 254 , 15 @ @ public class CommitLogReplayer <nl> / / if it is the last known segment , if we are after the replay position <nl> if ( segment > rp . segment | | ( segment = = rp . segment & & entryLocation > rp . position ) ) <nl> { <nl> + if ( newRm = = null ) <nl> + newRm = new RowMutation ( frm . getTable ( ) , frm . key ( ) ) ; <nl> newRm . add ( columnFamily ) ; <nl> replayedCount . incrementAndGet ( ) ; <nl> } <nl> } <nl> - if ( ! newRm . isEmpty ( ) ) <nl> + if ( newRm ! = null ) <nl> { <nl> + assert ! newRm . isEmpty ( ) ; <nl> Table . open ( newRm . getTable ( ) ) . apply ( newRm , false ) ; <nl> tablesRecovered . add ( table ) ; <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index f3d5998 . . 9914ad9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 33 , 6 + 33 , 7 @ @ 
 * Fix NPE when table dropped during streaming ( CASSANDRA - 7946 ) 
 * Fix wrong progress when streaming uncompressed ( CASSANDRA - 7878 ) 
 * Fix possible infinite loop in creating repair range ( CASSANDRA - 7983 ) 
 + * Fix unit in nodetool for streaming throughput ( CASSANDRA - 7375 ) 
 Merged from 1 . 2 : 
 * Don ' t index tombstones ( CASSANDRA - 7828 ) 
 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 4d9992f . . 27b50a7 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 811 , 7 + 811 , 7 @ @ public class NodeCmd 
 * / 
 public void printStreamThroughput ( PrintStream outs ) 
 { 
 - outs . println ( " Current stream throughput : " + probe . getStreamThroughput ( ) + " MB / s " ) ; 
 + outs . println ( " Current stream throughput : " + probe . getStreamThroughput ( ) + " Mb / s " ) ; 
 } 
 
 / * * 
 diff - - git a / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml b / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml 
 index 416ef1a . . fa2b39c 100644 
 - - - a / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml 
 + + + b / src / resources / org / apache / cassandra / tools / NodeToolHelp . yaml 
 @ @ - 123 , 7 + 123 , 7 @ @ commands : 
 Set the MB / s throughput cap for compaction in the system , or 0 to disable throttling . 
 - name : setstreamthroughput < value _ in _ mb > 
 help : | 
 - Set the MB / s throughput cap for streaming in the system , or 0 to disable throttling . 
 + Set the Mb / s throughput cap for streaming in the system , or 0 to disable throttling . 
 - name : describecluster 
 help : | 
 Print the name , snitch , partitioner and schema version of a cluster . 
 @ @ - 189 , 7 + 189 , 7 @ @ commands : 
 Print the MB / s throughput cap for compaction in the system 
 - name : getstreamthroughput 
 help : | 
 - Print the MB / s throughput cap for streaming in the system 
 + Print the Mb / s throughput cap for streaming in the system 
 - name : stop < compaction _ type > 
 help : | 
 Supported types are COMPACTION , VALIDATION , CLEANUP , SCRUB , INDEX _ BUILD

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1aca920 . . fb95e14 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 43 , 7 + 43 , 7 @ @ 
 * Add binary protocol versioning ( CASSANDRA - 5436 ) 
 * Swap THshaServer for TThreadedSelectorServer ( CASSANDRA - 5530 ) 
 * Add alias support to SELECT statement ( CASSANDRA - 5075 ) 
 - 
 + * Don ' t create empty RowMutations in CommitLogReplayer ( CASSANDRA - 5541 ) 
 
 1 . 2 . 5 
 * fix 2i updates with identical values and timestamps ( CASSANDRA - 5540 ) 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java 
 index 37094c6 . . 3d4cb8c 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java 
 @ @ - 237 , 11 + 237 , 11 @ @ public class CommitLogReplayer 
 return ; 
 
 final Table table = Table . open ( frm . getTable ( ) ) ; 
 - RowMutation newRm = new RowMutation ( frm . getTable ( ) , frm . key ( ) ) ; 
 
 / / Rebuild the row mutation , omitting column families that 
 / / a ) have already been flushed , 
 / / b ) are part of a cf that was dropped . Keep in mind that the cf . name ( ) is suspect . do every thing based on the cfid instead . 
 + RowMutation newRm = null ; 
 for ( ColumnFamily columnFamily : frm . getColumnFamilies ( ) ) 
 { 
 if ( Schema . instance . getCF ( columnFamily . id ( ) ) = = null ) 
 @ @ - 254 , 12 + 254 , 15 @ @ public class CommitLogReplayer 
 / / if it is the last known segment , if we are after the replay position 
 if ( segment > rp . segment | | ( segment = = rp . segment & & entryLocation > rp . position ) ) 
 { 
 + if ( newRm = = null ) 
 + newRm = new RowMutation ( frm . getTable ( ) , frm . key ( ) ) ; 
 newRm . add ( columnFamily ) ; 
 replayedCount . incrementAndGet ( ) ; 
 } 
 } 
 - if ( ! newRm . isEmpty ( ) ) 
 + if ( newRm ! = null ) 
 { 
 + assert ! newRm . isEmpty ( ) ; 
 Table . open ( newRm . getTable ( ) ) . apply ( newRm , false ) ; 
 tablesRecovered . add ( table ) ; 
 }
