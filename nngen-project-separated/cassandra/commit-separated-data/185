BLEU SCORE: 0.018738883683389617

TEST MSG: Ninja fix bitwise OR to logical OR in StorageServer . onChange
GENERATED MSG: handleStateLeft no longer needs the version - removed

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 42e3ddf . . d465431 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 2011 , 7 + 2011 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> * / <nl> public void onChange ( InetAddressAndPort endpoint , ApplicationState state , VersionedValue value ) <nl> { <nl> - if ( state = = ApplicationState . STATUS | state = = ApplicationState . STATUS _ WITH _ PORT ) <nl> + if ( state = = ApplicationState . STATUS | | state = = ApplicationState . STATUS _ WITH _ PORT ) <nl> { <nl> String [ ] pieces = splitValue ( value ) ; <nl> assert ( pieces . length > 0 ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 31054e3 . . f73349a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 38 , 6 + 38 , 7 @ @ <nl> * Add an official way to disable compactions ( CASSANDRA - 5074 ) <nl> * Reenable ALTER TABLE DROP with new semantics ( CASSANDRA - 3919 ) <nl> * Add binary protocol versioning ( CASSANDRA - 5436 ) <nl> + * Swap THshaServer for TThreadedSelectorServer ( CASSANDRA - 5530 ) <nl> <nl> 1 . 2 . 5 <nl> * fix compaction throttling bursty - ness ( CASSANDRA - 4316 ) <nl> diff - - git a / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java b / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java <nl> index 557a5d8 . . 411e082 100644 <nl> - - - a / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java <nl> + + + b / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import java . util . concurrent . ExecutorService ; <nl> import java . util . concurrent . SynchronousQueue ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> + import org . apache . thrift . server . TThreadedSelectorServer ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> @ @ - 41 , 7 + 42 , 7 @ @ import org . apache . thrift . transport . TTransportException ; <nl> * it is spread across multiple threads . Number of selector thread can be the <nl> * number of CPU available . <nl> * / <nl> - public class CustomTHsHaServer extends THsHaServer <nl> + public class CustomTHsHaServer extends TThreadedSelectorServer <nl> { <nl> private static final Logger LOGGER = LoggerFactory . getLogger ( CustomTHsHaServer . class . getName ( ) ) ; <nl> <nl> @ @ - 89 , 11 + 90 , 12 @ @ public class CustomTHsHaServer extends THsHaServer <nl> TimeUnit . SECONDS , <nl> new SynchronousQueue < Runnable > ( ) , <nl> new NamedThreadFactory ( " RPC - Thread " ) , " RPC - THREAD - POOL " ) ; <nl> - THsHaServer . Args serverArgs = new THsHaServer . Args ( serverTransport ) . inputTransportFactory ( args . inTransportFactory ) <nl> + TThreadedSelectorServer . Args serverArgs = new TThreadedSelectorServer . Args ( serverTransport ) . inputTransportFactory ( args . inTransportFactory ) <nl> . outputTransportFactory ( args . outTransportFactory ) <nl> . inputProtocolFactory ( args . tProtocolFactory ) <nl> . outputProtocolFactory ( args . tProtocolFactory ) <nl> . processor ( args . processor ) <nl> + . selectorThreads ( Runtime . getRuntime ( ) . availableProcessors ( ) ) <nl> . executorService ( executorService ) ; <nl> / / Check for available processors in the system which will be equal to the IO Threads . <nl> return new CustomTHsHaServer ( serverArgs ) ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 42e3ddf . . d465431 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 2011 , 7 + 2011 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 * / 
 public void onChange ( InetAddressAndPort endpoint , ApplicationState state , VersionedValue value ) 
 { 
 - if ( state = = ApplicationState . STATUS | state = = ApplicationState . STATUS _ WITH _ PORT ) 
 + if ( state = = ApplicationState . STATUS | | state = = ApplicationState . STATUS _ WITH _ PORT ) 
 { 
 String [ ] pieces = splitValue ( value ) ; 
 assert ( pieces . length > 0 ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 31054e3 . . f73349a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 38 , 6 + 38 , 7 @ @ 
 * Add an official way to disable compactions ( CASSANDRA - 5074 ) 
 * Reenable ALTER TABLE DROP with new semantics ( CASSANDRA - 3919 ) 
 * Add binary protocol versioning ( CASSANDRA - 5436 ) 
 + * Swap THshaServer for TThreadedSelectorServer ( CASSANDRA - 5530 ) 
 
 1 . 2 . 5 
 * fix compaction throttling bursty - ness ( CASSANDRA - 4316 ) 
 diff - - git a / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java b / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java 
 index 557a5d8 . . 411e082 100644 
 - - - a / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java 
 + + + b / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import java . util . concurrent . ExecutorService ; 
 import java . util . concurrent . SynchronousQueue ; 
 import java . util . concurrent . TimeUnit ; 
 
 + import org . apache . thrift . server . TThreadedSelectorServer ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 @ @ - 41 , 7 + 42 , 7 @ @ import org . apache . thrift . transport . TTransportException ; 
 * it is spread across multiple threads . Number of selector thread can be the 
 * number of CPU available . 
 * / 
 - public class CustomTHsHaServer extends THsHaServer 
 + public class CustomTHsHaServer extends TThreadedSelectorServer 
 { 
 private static final Logger LOGGER = LoggerFactory . getLogger ( CustomTHsHaServer . class . getName ( ) ) ; 
 
 @ @ - 89 , 11 + 90 , 12 @ @ public class CustomTHsHaServer extends THsHaServer 
 TimeUnit . SECONDS , 
 new SynchronousQueue < Runnable > ( ) , 
 new NamedThreadFactory ( " RPC - Thread " ) , " RPC - THREAD - POOL " ) ; 
 - THsHaServer . Args serverArgs = new THsHaServer . Args ( serverTransport ) . inputTransportFactory ( args . inTransportFactory ) 
 + TThreadedSelectorServer . Args serverArgs = new TThreadedSelectorServer . Args ( serverTransport ) . inputTransportFactory ( args . inTransportFactory ) 
 . outputTransportFactory ( args . outTransportFactory ) 
 . inputProtocolFactory ( args . tProtocolFactory ) 
 . outputProtocolFactory ( args . tProtocolFactory ) 
 . processor ( args . processor ) 
 + . selectorThreads ( Runtime . getRuntime ( ) . availableProcessors ( ) ) 
 . executorService ( executorService ) ; 
 / / Check for available processors in the system which will be equal to the IO Threads . 
 return new CustomTHsHaServer ( serverArgs ) ;
