BLEU SCORE: 0.020980574531482755

TEST MSG: Set stream ID on response for non - Exception Throwables
GENERATED MSG: Fix binary protocol bug , using singleton message by mistake

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1a79e8d . . 2951fed 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 7 @ @ <nl> + 1 . 2 . 19 <nl> + * Set correct stream ID on responses when non - Exception Throwables <nl> + are thrown while handling native protocol messages ( CASSANDRA - 7470 ) <nl> + <nl> 1 . 2 . 18 <nl> * Support Thrift tables clustering columns on CqlPagingInputFormat ( CASSANDRA - 7445 ) <nl> * Fix compilation with java 6 broke by CASSANDRA - 7147 <nl> diff - - git a / src / java / org / apache / cassandra / transport / Message . java b / src / java / org / apache / cassandra / transport / Message . java <nl> index 5cc3998 . . 74aaad1 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Message . java <nl> + + + b / src / java / org / apache / cassandra / transport / Message . java <nl> @ @ - 293 , 7 + 293 , 7 @ @ public abstract class Message <nl> <nl> ctx . getChannel ( ) . write ( response ) ; <nl> } <nl> - catch ( Exception ex ) <nl> + catch ( Throwable ex ) <nl> { <nl> / / Don ' t let the exception propagate to exceptionCaught ( ) if we can help it so that we can assign the right streamID . <nl> ctx . getChannel ( ) . write ( ErrorMessage . fromException ( ex ) . setStreamId ( request . getStreamId ( ) ) ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9c09742 . . 12cc92a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 42 , 6 + 42 , 7 @ @ <nl> * Allow renaming PK columns in CQL3 ( CASSANDRA - 4822 ) <nl> * Fix binary protocol NEW _ NODE event ( CASSANDRA - 4679 ) <nl> * Fix potential infinite loop in tombstone compaction ( CASSANDRA - 4781 ) <nl> + * Remove system tables accounting from schema ( CASSANDRA - 4850 ) <nl> Merged from 1 . 1 : <nl> * add get [ Row | Key ] CacheEntries to CacheServiceMBean ( CASSANDRA - 4859 ) <nl> * fix get _ paged _ slice to wrap to next row correctly ( CASSANDRA - 4816 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java <nl> index de89140 . . c3e90be 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Schema . java <nl> + + + b / src / java / org / apache / cassandra / config / Schema . java <nl> @ @ - 18 , 11 + 18 , 13 @ @ <nl> package org . apache . cassandra . config ; <nl> <nl> import java . nio . ByteBuffer ; <nl> + import java . nio . charset . CharacterCodingException ; <nl> import java . security . MessageDigest ; <nl> import java . security . NoSuchAlgorithmException ; <nl> import java . util . * ; <nl> <nl> import com . google . common . collect . * ; <nl> + import org . apache . cassandra . utils . ByteBufferUtil ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> @ @ - 431 , 7 + 433 , 7 @ @ public class Schema <nl> <nl> for ( Row row : SystemTable . serializedSchema ( ) ) <nl> { <nl> - if ( row . cf = = null | | ( row . cf . isMarkedForDelete ( ) & & row . cf . isEmpty ( ) ) ) <nl> + if ( invalidSchemaRow ( row ) | | ignoredSchemaRow ( row ) ) <nl> continue ; <nl> <nl> row . cf . updateDigest ( versionDigest ) ; <nl> @ @ - 469 , 4 + 471 , 21 @ @ public class Schema <nl> <nl> updateVersionAndAnnounce ( ) ; <nl> } <nl> + <nl> + public static boolean invalidSchemaRow ( Row row ) <nl> + { <nl> + return row . cf = = null | | ( row . cf . isMarkedForDelete ( ) & & row . cf . isEmpty ( ) ) ; <nl> + } <nl> + <nl> + public static boolean ignoredSchemaRow ( Row row ) <nl> + { <nl> + try <nl> + { <nl> + return systemKeyspaceNames . contains ( ByteBufferUtil . string ( row . key . key ) ) ; <nl> + } <nl> + catch ( CharacterCodingException e ) <nl> + { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / DefsTable . java b / src / java / org / apache / cassandra / db / DefsTable . java <nl> index a012168 . . f1b2b4f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / DefsTable . java <nl> + + + b / src / java / org / apache / cassandra / db / DefsTable . java <nl> @ @ - 151 , 7 + 151 , 7 @ @ public class DefsTable <nl> <nl> for ( Row row : serializedSchema ) <nl> { <nl> - if ( invalidSchemaRow ( row ) | | ignoredSchemaRow ( row ) ) <nl> + if ( Schema . invalidSchemaRow ( row ) | | Schema . ignoredSchemaRow ( row ) ) <nl> continue ; <nl> <nl> keyspaces . add ( KSMetaData . fromSchema ( row , serializedColumnFamilies ( row . key ) ) ) ; <nl> @ @ - 179 , 7 + 179 , 7 @ @ public class DefsTable <nl> row _ check _ loop : <nl> for ( Row row : rows ) <nl> { <nl> - if ( invalidSchemaRow ( row ) ) <nl> + if ( Schema . invalidSchemaRow ( row ) ) <nl> continue ; <nl> <nl> for ( IColumn column : row . cf . columns ) <nl> @ @ - 214 , 7 + 214 , 7 @ @ public class DefsTable <nl> <nl> for ( Row row : rows ) <nl> { <nl> - if ( invalidSchemaRow ( row ) ) <nl> + if ( Schema . invalidSchemaRow ( row ) ) <nl> continue ; <nl> <nl> RowMutation mutation = new RowMutation ( Table . SYSTEM _ KS , row . key . key ) ; <nl> @ @ - 229 , 23 + 229 , 6 @ @ public class DefsTable <nl> } <nl> } <nl> <nl> - private static boolean invalidSchemaRow ( Row row ) <nl> - { <nl> - return row . cf = = null | | ( row . cf . isMarkedForDelete ( ) & & row . cf . isEmpty ( ) ) ; <nl> - } <nl> - <nl> - private static boolean ignoredSchemaRow ( Row row ) <nl> - { <nl> - try <nl> - { <nl> - return Schema . systemKeyspaceNames . contains ( ByteBufferUtil . string ( row . key . key ) ) ; <nl> - } <nl> - catch ( CharacterCodingException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> - } <nl> - <nl> public static ByteBuffer searchComposite ( String name , boolean start ) <nl> { <nl> assert name ! = null ; <nl> diff - - git a / src / java / org / apache / cassandra / db / SystemTable . java b / src / java / org / apache / cassandra / db / SystemTable . java <nl> index e21e266 . . 88825a7 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SystemTable . java <nl> + + + b / src / java / org / apache / cassandra / db / SystemTable . java <nl> @ @ - 590 , 6 + 590 , 9 @ @ public class SystemTable <nl> { <nl> for ( Row schemaRow : serializedSchema ( schemaCfName ) ) <nl> { <nl> + if ( Schema . ignoredSchemaRow ( schemaRow ) ) <nl> + continue ; <nl> + <nl> RowMutation mutation = mutationMap . get ( schemaRow . key ) ; <nl> <nl> if ( mutation = = null )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1a79e8d . . 2951fed 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 7 @ @ 
 + 1 . 2 . 19 
 + * Set correct stream ID on responses when non - Exception Throwables 
 + are thrown while handling native protocol messages ( CASSANDRA - 7470 ) 
 + 
 1 . 2 . 18 
 * Support Thrift tables clustering columns on CqlPagingInputFormat ( CASSANDRA - 7445 ) 
 * Fix compilation with java 6 broke by CASSANDRA - 7147 
 diff - - git a / src / java / org / apache / cassandra / transport / Message . java b / src / java / org / apache / cassandra / transport / Message . java 
 index 5cc3998 . . 74aaad1 100644 
 - - - a / src / java / org / apache / cassandra / transport / Message . java 
 + + + b / src / java / org / apache / cassandra / transport / Message . java 
 @ @ - 293 , 7 + 293 , 7 @ @ public abstract class Message 
 
 ctx . getChannel ( ) . write ( response ) ; 
 } 
 - catch ( Exception ex ) 
 + catch ( Throwable ex ) 
 { 
 / / Don ' t let the exception propagate to exceptionCaught ( ) if we can help it so that we can assign the right streamID . 
 ctx . getChannel ( ) . write ( ErrorMessage . fromException ( ex ) . setStreamId ( request . getStreamId ( ) ) ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9c09742 . . 12cc92a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 42 , 6 + 42 , 7 @ @ 
 * Allow renaming PK columns in CQL3 ( CASSANDRA - 4822 ) 
 * Fix binary protocol NEW _ NODE event ( CASSANDRA - 4679 ) 
 * Fix potential infinite loop in tombstone compaction ( CASSANDRA - 4781 ) 
 + * Remove system tables accounting from schema ( CASSANDRA - 4850 ) 
 Merged from 1 . 1 : 
 * add get [ Row | Key ] CacheEntries to CacheServiceMBean ( CASSANDRA - 4859 ) 
 * fix get _ paged _ slice to wrap to next row correctly ( CASSANDRA - 4816 ) 
 diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java 
 index de89140 . . c3e90be 100644 
 - - - a / src / java / org / apache / cassandra / config / Schema . java 
 + + + b / src / java / org / apache / cassandra / config / Schema . java 
 @ @ - 18 , 11 + 18 , 13 @ @ 
 package org . apache . cassandra . config ; 
 
 import java . nio . ByteBuffer ; 
 + import java . nio . charset . CharacterCodingException ; 
 import java . security . MessageDigest ; 
 import java . security . NoSuchAlgorithmException ; 
 import java . util . * ; 
 
 import com . google . common . collect . * ; 
 + import org . apache . cassandra . utils . ByteBufferUtil ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 @ @ - 431 , 7 + 433 , 7 @ @ public class Schema 
 
 for ( Row row : SystemTable . serializedSchema ( ) ) 
 { 
 - if ( row . cf = = null | | ( row . cf . isMarkedForDelete ( ) & & row . cf . isEmpty ( ) ) ) 
 + if ( invalidSchemaRow ( row ) | | ignoredSchemaRow ( row ) ) 
 continue ; 
 
 row . cf . updateDigest ( versionDigest ) ; 
 @ @ - 469 , 4 + 471 , 21 @ @ public class Schema 
 
 updateVersionAndAnnounce ( ) ; 
 } 
 + 
 + public static boolean invalidSchemaRow ( Row row ) 
 + { 
 + return row . cf = = null | | ( row . cf . isMarkedForDelete ( ) & & row . cf . isEmpty ( ) ) ; 
 + } 
 + 
 + public static boolean ignoredSchemaRow ( Row row ) 
 + { 
 + try 
 + { 
 + return systemKeyspaceNames . contains ( ByteBufferUtil . string ( row . key . key ) ) ; 
 + } 
 + catch ( CharacterCodingException e ) 
 + { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / DefsTable . java b / src / java / org / apache / cassandra / db / DefsTable . java 
 index a012168 . . f1b2b4f 100644 
 - - - a / src / java / org / apache / cassandra / db / DefsTable . java 
 + + + b / src / java / org / apache / cassandra / db / DefsTable . java 
 @ @ - 151 , 7 + 151 , 7 @ @ public class DefsTable 
 
 for ( Row row : serializedSchema ) 
 { 
 - if ( invalidSchemaRow ( row ) | | ignoredSchemaRow ( row ) ) 
 + if ( Schema . invalidSchemaRow ( row ) | | Schema . ignoredSchemaRow ( row ) ) 
 continue ; 
 
 keyspaces . add ( KSMetaData . fromSchema ( row , serializedColumnFamilies ( row . key ) ) ) ; 
 @ @ - 179 , 7 + 179 , 7 @ @ public class DefsTable 
 row _ check _ loop : 
 for ( Row row : rows ) 
 { 
 - if ( invalidSchemaRow ( row ) ) 
 + if ( Schema . invalidSchemaRow ( row ) ) 
 continue ; 
 
 for ( IColumn column : row . cf . columns ) 
 @ @ - 214 , 7 + 214 , 7 @ @ public class DefsTable 
 
 for ( Row row : rows ) 
 { 
 - if ( invalidSchemaRow ( row ) ) 
 + if ( Schema . invalidSchemaRow ( row ) ) 
 continue ; 
 
 RowMutation mutation = new RowMutation ( Table . SYSTEM _ KS , row . key . key ) ; 
 @ @ - 229 , 23 + 229 , 6 @ @ public class DefsTable 
 } 
 } 
 
 - private static boolean invalidSchemaRow ( Row row ) 
 - { 
 - return row . cf = = null | | ( row . cf . isMarkedForDelete ( ) & & row . cf . isEmpty ( ) ) ; 
 - } 
 - 
 - private static boolean ignoredSchemaRow ( Row row ) 
 - { 
 - try 
 - { 
 - return Schema . systemKeyspaceNames . contains ( ByteBufferUtil . string ( row . key . key ) ) ; 
 - } 
 - catch ( CharacterCodingException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 - } 
 - 
 public static ByteBuffer searchComposite ( String name , boolean start ) 
 { 
 assert name ! = null ; 
 diff - - git a / src / java / org / apache / cassandra / db / SystemTable . java b / src / java / org / apache / cassandra / db / SystemTable . java 
 index e21e266 . . 88825a7 100644 
 - - - a / src / java / org / apache / cassandra / db / SystemTable . java 
 + + + b / src / java / org / apache / cassandra / db / SystemTable . java 
 @ @ - 590 , 6 + 590 , 9 @ @ public class SystemTable 
 { 
 for ( Row schemaRow : serializedSchema ( schemaCfName ) ) 
 { 
 + if ( Schema . ignoredSchemaRow ( schemaRow ) ) 
 + continue ; 
 + 
 RowMutation mutation = mutationMap . get ( schemaRow . key ) ; 
 
 if ( mutation = = null )
