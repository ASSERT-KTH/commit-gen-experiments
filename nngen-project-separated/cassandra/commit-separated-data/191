BLEU SCORE: 0.06916271812933183

TEST MSG: Fix unit test failures in ViewComplexTest
GENERATED MSG: fix test due to change in exception message

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 197ba58 . . 90bd53f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 16 <nl> + * Fix unit test failures in ViewComplexTest ( CASSANDRA - 14219 ) <nl> * Add MinGW uname check to start scripts ( CASSANDRA - 12940 ) <nl> * Protect against overflow of local expiration time ( CASSANDRA - 14092 ) <nl> * Use the correct digest file and reload sstable metadata in nodetool verify ( CASSANDRA - 14217 ) <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewComplexTest . java b / test / unit / org / apache / cassandra / cql3 / ViewComplexTest . java <nl> index 464cc39 . . bb0e269 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / ViewComplexTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / ViewComplexTest . java <nl> @ @ - 319 , 7 + 319 , 7 @ @ public class ViewComplexTest extends CQLTester <nl> private void testUpdateColumnNotInView ( boolean flush ) throws Throwable <nl> { <nl> / / CASSANDRA - 13127 : if base column not selected in view are alive , then pk of view row should be alive <nl> - createTable ( " create table % s ( p int , c int , v1 int , v2 int , primary key ( p , c ) ) " ) ; <nl> + String baseTable = createTable ( " create table % s ( p int , c int , v1 int , v2 int , primary key ( p , c ) ) " ) ; <nl> <nl> execute ( " USE " + keyspace ( ) ) ; <nl> executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; <nl> @ @ - 399 , 7 + 399 , 7 @ @ public class ViewComplexTest extends CQLTester <nl> assertRowsIgnoringOrder ( execute ( " SELECT * from % s WHERE c = ? AND p = ? " , 0 , 0 ) , row ( 0 , 0 , null , 1 ) ) ; <nl> assertRowsIgnoringOrder ( execute ( " SELECT * from mv WHERE c = ? AND p = ? " , 0 , 0 ) , row ( 0 , 0 ) ) ; <nl> <nl> - assertInvalidMessage ( " Cannot drop column v2 on base table with materialized views " , " ALTER TABLE % s DROP v2 " ) ; <nl> + assertInvalidMessage ( String . format ( " Cannot drop column v2 on base table % s with materialized views . " , baseTable ) , " ALTER TABLE % s DROP v2 " ) ; <nl> / / / / drop unselected base column , unselected metadata should be removed , thus view row is dead <nl> / / updateView ( " ALTER TABLE % s DROP v2 " ) ; <nl> / / assertRowsIgnoringOrder ( execute ( " SELECT * from % s WHERE c = ? AND p = ? " , 0 , 0 ) ) ; <nl> @ @ - 424 , 7 + 424 , 7 @ @ public class ViewComplexTest extends CQLTester <nl> { <nl> execute ( " USE " + keyspace ( ) ) ; <nl> executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; <nl> - String baseTableName = createTable ( " CREATE TABLE % s ( k int , c int , a int , b int , l list < int > , s set < int > , m map < int , int > , PRIMARY KEY ( k , c ) ) " ) ; <nl> + String baseTable = createTable ( " CREATE TABLE % s ( k int , c int , a int , b int , l list < int > , s set < int > , m map < int , int > , PRIMARY KEY ( k , c ) ) " ) ; <nl> createView ( " mv " , <nl> " CREATE MATERIALIZED VIEW % s AS SELECT a , b FROM % % s WHERE k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( c , k ) " ) ; <nl> Keyspace ks = Keyspace . open ( keyspace ( ) ) ; <nl> @ @ - 460 , 7 + 460 , 7 @ @ public class ViewComplexTest extends CQLTester <nl> assertRowsIgnoringOrder ( execute ( " SELECT k , c , a , b from % s " ) , row ( 1 , 1 , null , null ) ) ; <nl> assertRowsIgnoringOrder ( execute ( " SELECT * from mv " ) , row ( 1 , 1 , null , null ) ) ; <nl> <nl> - assertInvalidMessage ( " Cannot drop column m on base table " + baseTableName + " with materialized views " , " ALTER TABLE % s DROP m " ) ; <nl> + assertInvalidMessage ( String . format ( " Cannot drop column m on base table % s with materialized views . " , baseTable ) , " ALTER TABLE % s DROP m " ) ; <nl> / / executeNet ( protocolVersion , " ALTER TABLE % s DROP m " ) ; <nl> / / ks . getColumnFamilyStore ( " mv " ) . forceMajorCompaction ( ) ; <nl> / / assertRowsIgnoringOrder ( execute ( " SELECT k , c , a , b from % s WHERE k = 1 AND c = 1 " ) ) ; <nl> @ @ - 880 , 7 + 880 , 7 @ @ public class ViewComplexTest extends CQLTester <nl> public void testUpdateWithColumnTimestampBiggerThanPk ( boolean flush ) throws Throwable <nl> { <nl> / / CASSANDRA - 11500 able to shadow old view row with column ts greater tahn pk ' s ts and re - insert the view row <nl> - createTable ( " CREATE TABLE % s ( k int PRIMARY KEY , a int , b int ) ; " ) ; <nl> + String baseTable = createTable ( " CREATE TABLE % s ( k int PRIMARY KEY , a int , b int ) ; " ) ; <nl> <nl> execute ( " USE " + keyspace ( ) ) ; <nl> executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; <nl> @ @ - 929 , 7 + 929 , 7 @ @ public class ViewComplexTest extends CQLTester <nl> assertRowsIgnoringOrder ( execute ( " SELECT k , a , b from mv " ) , row ( 1 , 1 , 2 ) ) ; <nl> assertRowsIgnoringOrder ( execute ( " SELECT k , a , b from % s " ) , row ( 1 , 1 , 2 ) ) ; <nl> <nl> - assertInvalidMessage ( " Cannot drop column a on base table with materialized views " , " ALTER TABLE % s DROP a " ) ; <nl> + assertInvalidMessage ( String . format ( " Cannot drop column a on base table % s with materialized views . " , baseTable ) , " ALTER TABLE % s DROP a " ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 197ba58 . . 90bd53f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 16 
 + * Fix unit test failures in ViewComplexTest ( CASSANDRA - 14219 ) 
 * Add MinGW uname check to start scripts ( CASSANDRA - 12940 ) 
 * Protect against overflow of local expiration time ( CASSANDRA - 14092 ) 
 * Use the correct digest file and reload sstable metadata in nodetool verify ( CASSANDRA - 14217 ) 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewComplexTest . java b / test / unit / org / apache / cassandra / cql3 / ViewComplexTest . java 
 index 464cc39 . . bb0e269 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / ViewComplexTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / ViewComplexTest . java 
 @ @ - 319 , 7 + 319 , 7 @ @ public class ViewComplexTest extends CQLTester 
 private void testUpdateColumnNotInView ( boolean flush ) throws Throwable 
 { 
 / / CASSANDRA - 13127 : if base column not selected in view are alive , then pk of view row should be alive 
 - createTable ( " create table % s ( p int , c int , v1 int , v2 int , primary key ( p , c ) ) " ) ; 
 + String baseTable = createTable ( " create table % s ( p int , c int , v1 int , v2 int , primary key ( p , c ) ) " ) ; 
 
 execute ( " USE " + keyspace ( ) ) ; 
 executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; 
 @ @ - 399 , 7 + 399 , 7 @ @ public class ViewComplexTest extends CQLTester 
 assertRowsIgnoringOrder ( execute ( " SELECT * from % s WHERE c = ? AND p = ? " , 0 , 0 ) , row ( 0 , 0 , null , 1 ) ) ; 
 assertRowsIgnoringOrder ( execute ( " SELECT * from mv WHERE c = ? AND p = ? " , 0 , 0 ) , row ( 0 , 0 ) ) ; 
 
 - assertInvalidMessage ( " Cannot drop column v2 on base table with materialized views " , " ALTER TABLE % s DROP v2 " ) ; 
 + assertInvalidMessage ( String . format ( " Cannot drop column v2 on base table % s with materialized views . " , baseTable ) , " ALTER TABLE % s DROP v2 " ) ; 
 / / / / drop unselected base column , unselected metadata should be removed , thus view row is dead 
 / / updateView ( " ALTER TABLE % s DROP v2 " ) ; 
 / / assertRowsIgnoringOrder ( execute ( " SELECT * from % s WHERE c = ? AND p = ? " , 0 , 0 ) ) ; 
 @ @ - 424 , 7 + 424 , 7 @ @ public class ViewComplexTest extends CQLTester 
 { 
 execute ( " USE " + keyspace ( ) ) ; 
 executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; 
 - String baseTableName = createTable ( " CREATE TABLE % s ( k int , c int , a int , b int , l list < int > , s set < int > , m map < int , int > , PRIMARY KEY ( k , c ) ) " ) ; 
 + String baseTable = createTable ( " CREATE TABLE % s ( k int , c int , a int , b int , l list < int > , s set < int > , m map < int , int > , PRIMARY KEY ( k , c ) ) " ) ; 
 createView ( " mv " , 
 " CREATE MATERIALIZED VIEW % s AS SELECT a , b FROM % % s WHERE k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( c , k ) " ) ; 
 Keyspace ks = Keyspace . open ( keyspace ( ) ) ; 
 @ @ - 460 , 7 + 460 , 7 @ @ public class ViewComplexTest extends CQLTester 
 assertRowsIgnoringOrder ( execute ( " SELECT k , c , a , b from % s " ) , row ( 1 , 1 , null , null ) ) ; 
 assertRowsIgnoringOrder ( execute ( " SELECT * from mv " ) , row ( 1 , 1 , null , null ) ) ; 
 
 - assertInvalidMessage ( " Cannot drop column m on base table " + baseTableName + " with materialized views " , " ALTER TABLE % s DROP m " ) ; 
 + assertInvalidMessage ( String . format ( " Cannot drop column m on base table % s with materialized views . " , baseTable ) , " ALTER TABLE % s DROP m " ) ; 
 / / executeNet ( protocolVersion , " ALTER TABLE % s DROP m " ) ; 
 / / ks . getColumnFamilyStore ( " mv " ) . forceMajorCompaction ( ) ; 
 / / assertRowsIgnoringOrder ( execute ( " SELECT k , c , a , b from % s WHERE k = 1 AND c = 1 " ) ) ; 
 @ @ - 880 , 7 + 880 , 7 @ @ public class ViewComplexTest extends CQLTester 
 public void testUpdateWithColumnTimestampBiggerThanPk ( boolean flush ) throws Throwable 
 { 
 / / CASSANDRA - 11500 able to shadow old view row with column ts greater tahn pk ' s ts and re - insert the view row 
 - createTable ( " CREATE TABLE % s ( k int PRIMARY KEY , a int , b int ) ; " ) ; 
 + String baseTable = createTable ( " CREATE TABLE % s ( k int PRIMARY KEY , a int , b int ) ; " ) ; 
 
 execute ( " USE " + keyspace ( ) ) ; 
 executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; 
 @ @ - 929 , 7 + 929 , 7 @ @ public class ViewComplexTest extends CQLTester 
 assertRowsIgnoringOrder ( execute ( " SELECT k , a , b from mv " ) , row ( 1 , 1 , 2 ) ) ; 
 assertRowsIgnoringOrder ( execute ( " SELECT k , a , b from % s " ) , row ( 1 , 1 , 2 ) ) ; 
 
 - assertInvalidMessage ( " Cannot drop column a on base table with materialized views " , " ALTER TABLE % s DROP a " ) ; 
 + assertInvalidMessage ( String . format ( " Cannot drop column a on base table % s with materialized views . " , baseTable ) , " ALTER TABLE % s DROP a " ) ; 
 } 
 
 @ Test

NEAREST DIFF:
ELIMINATEDSENTENCE
