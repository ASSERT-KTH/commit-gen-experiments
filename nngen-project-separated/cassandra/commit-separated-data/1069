BLEU SCORE: 1.0

TEST MSG: ( cqlsh ) Add request timeout option to cqlsh
GENERATED MSG: ( cqlsh ) Add request timeout option to cqlsh

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 21c5b27 . . 1554cf5 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 16 , 6 + 16 , 7 @ @ <nl> * Disable reloading of GossipingPropertyFileSnitch ( CASSANDRA - 9474 ) <nl> * Verify tables in pseudo - system keyspaces at startup ( CASSANDRA - 10761 ) <nl> Merged from 2 . 1 : <nl> + * ( cqlsh ) Add request timeout option to cqlsh ( CASSANDRA - 10686 ) <nl> * Avoid AssertionError while submitting hint with LWT ( CASSANDRA - 10477 ) <nl> * If CompactionMetadata is not in stats file , use index summary instead ( CASSANDRA - 10676 ) <nl> * Retry sending gossip syn multiple times during shadow round ( CASSANDRA - 8072 ) <nl> diff - - git a / bin / cqlsh . py b / bin / cqlsh . py <nl> index be2ad46 . . c03a3c2 100644 <nl> - - - a / bin / cqlsh . py <nl> + + + b / bin / cqlsh . py <nl> @ @ - 165 , 6 + 165 , 7 @ @ DEFAULT _ PORT = 9042 <nl> DEFAULT _ CQLVER = ' 3 . 3 . 1 ' <nl> DEFAULT _ PROTOCOL _ VERSION = 4 <nl> DEFAULT _ CONNECT _ TIMEOUT _ SECONDS = 5 <nl> + DEFAULT _ REQUEST _ TIMEOUT _ SECONDS = 10 <nl> <nl> DEFAULT _ FLOAT _ PRECISION = 5 <nl> DEFAULT _ MAX _ TRACE _ WAIT = 10 <nl> @ @ - 209 , 6 + 210 , 8 @ @ parser . add _ option ( ' - - cqlversion ' , default = DEFAULT _ CQLVER , <nl> parser . add _ option ( " - e " , " - - execute " , help = ' Execute the statement and quit . ' ) <nl> parser . add _ option ( " - - connect - timeout " , default = DEFAULT _ CONNECT _ TIMEOUT _ SECONDS , dest = ' connect _ timeout ' , <nl> help = ' Specify the connection timeout in seconds ( default : % default seconds ) . ' ) <nl> + parser . add _ option ( " - - request - timeout " , default = DEFAULT _ REQUEST _ TIMEOUT _ SECONDS , dest = ' request _ timeout ' , <nl> + help = ' Specify the default request timeout in seconds ( default : % default seconds ) . ' ) <nl> parser . add _ option ( " - t " , " - - tty " , action = ' store _ true ' , dest = ' tty ' , <nl> help = ' Force tty mode ( command prompt ) . ' ) <nl> <nl> @ @ - 657 , 7 + 660 , 7 @ @ class Shell ( cmd . Cmd ) : <nl> max _ trace _ wait = DEFAULT _ MAX _ TRACE _ WAIT , <nl> ssl = False , <nl> single _ statement = None , <nl> - client _ timeout = 10 , <nl> + request _ timeout = DEFAULT _ REQUEST _ TIMEOUT _ SECONDS , <nl> protocol _ version = DEFAULT _ PROTOCOL _ VERSION , <nl> connect _ timeout = DEFAULT _ CONNECT _ TIMEOUT _ SECONDS ) : <nl> cmd . Cmd . _ _ init _ _ ( self , completekey = completekey ) <nl> @ @ - 707 , 7 + 710 , 7 @ @ class Shell ( cmd . Cmd ) : <nl> if not self . conn . metadata . keyspaces : <nl> self . refresh _ schema _ metadata _ best _ effort ( ) <nl> <nl> - self . session . default _ timeout = client _ timeout <nl> + self . session . default _ timeout = request _ timeout <nl> self . session . row _ factory = ordered _ dict _ factory <nl> self . session . default _ consistency _ level = cassandra . ConsistencyLevel . ONE <nl> self . get _ connection _ versions ( ) <nl> @ @ - 2324 , 6 + 2327 , 7 @ @ def read _ options ( cmdlineargs , environment ) : <nl> optvalues . tty = option _ with _ default ( configs . getboolean , ' ui ' , ' tty ' , sys . stdin . isatty ( ) ) <nl> optvalues . cqlversion = option _ with _ default ( configs . get , ' cql ' , ' version ' , DEFAULT _ CQLVER ) <nl> optvalues . connect _ timeout = option _ with _ default ( configs . getint , ' connection ' , ' timeout ' , DEFAULT _ CONNECT _ TIMEOUT _ SECONDS ) <nl> + optvalues . request _ timeout = option _ with _ default ( configs . getint , ' connection ' , ' request _ timeout ' , DEFAULT _ REQUEST _ TIMEOUT _ SECONDS ) <nl> optvalues . execute = None <nl> <nl> ( options , arguments ) = parser . parse _ args ( cmdlineargs , values = optvalues ) <nl> @ @ - 2334 , 14 + 2338 , 14 @ @ def read _ options ( cmdlineargs , environment ) : <nl> try : <nl> options . connect _ timeout = int ( options . connect _ timeout ) <nl> except ValueError : <nl> - parser . error ( ' " % s " is not a valid timeout . ' % ( options . connect _ timeout , ) ) <nl> + parser . error ( ' " % s " is not a valid connect timeout . ' % ( options . connect _ timeout , ) ) <nl> options . connect _ timeout = DEFAULT _ CONNECT _ TIMEOUT _ SECONDS <nl> <nl> - options . client _ timeout = option _ with _ default ( configs . get , ' connection ' , ' client _ timeout ' , ' 10 ' ) <nl> - if options . client _ timeout . lower ( ) = = ' none ' : <nl> - options . client _ timeout = None <nl> - else : <nl> - options . client _ timeout = int ( options . client _ timeout ) <nl> + try : <nl> + options . request _ timeout = int ( options . request _ timeout ) <nl> + except ValueError : <nl> + parser . error ( ' " % s " is not a valid request timeout . ' % ( options . request _ timeout , ) ) <nl> + options . request _ timeout = DEFAULT _ REQUEST _ TIMEOUT _ SECONDS <nl> <nl> hostname = environment . get ( ' CQLSH _ HOST ' , hostname ) <nl> port = environment . get ( ' CQLSH _ PORT ' , port ) <nl> @ @ - 2451 , 7 + 2455 , 7 @ @ def main ( options , hostname , port ) : <nl> max _ trace _ wait = options . max _ trace _ wait , <nl> ssl = options . ssl , <nl> single _ statement = options . execute , <nl> - client _ timeout = options . client _ timeout , <nl> + request _ timeout = options . request _ timeout , <nl> connect _ timeout = options . connect _ timeout , <nl> encoding = options . encoding ) <nl> except KeyboardInterrupt :
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 21c5b27 . . 1554cf5 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 16 , 6 + 16 , 7 @ @ 
 * Disable reloading of GossipingPropertyFileSnitch ( CASSANDRA - 9474 ) 
 * Verify tables in pseudo - system keyspaces at startup ( CASSANDRA - 10761 ) 
 Merged from 2 . 1 : 
 + * ( cqlsh ) Add request timeout option to cqlsh ( CASSANDRA - 10686 ) 
 * Avoid AssertionError while submitting hint with LWT ( CASSANDRA - 10477 ) 
 * If CompactionMetadata is not in stats file , use index summary instead ( CASSANDRA - 10676 ) 
 * Retry sending gossip syn multiple times during shadow round ( CASSANDRA - 8072 ) 
 diff - - git a / bin / cqlsh . py b / bin / cqlsh . py 
 index be2ad46 . . c03a3c2 100644 
 - - - a / bin / cqlsh . py 
 + + + b / bin / cqlsh . py 
 @ @ - 165 , 6 + 165 , 7 @ @ DEFAULT _ PORT = 9042 
 DEFAULT _ CQLVER = ' 3 . 3 . 1 ' 
 DEFAULT _ PROTOCOL _ VERSION = 4 
 DEFAULT _ CONNECT _ TIMEOUT _ SECONDS = 5 
 + DEFAULT _ REQUEST _ TIMEOUT _ SECONDS = 10 
 
 DEFAULT _ FLOAT _ PRECISION = 5 
 DEFAULT _ MAX _ TRACE _ WAIT = 10 
 @ @ - 209 , 6 + 210 , 8 @ @ parser . add _ option ( ' - - cqlversion ' , default = DEFAULT _ CQLVER , 
 parser . add _ option ( " - e " , " - - execute " , help = ' Execute the statement and quit . ' ) 
 parser . add _ option ( " - - connect - timeout " , default = DEFAULT _ CONNECT _ TIMEOUT _ SECONDS , dest = ' connect _ timeout ' , 
 help = ' Specify the connection timeout in seconds ( default : % default seconds ) . ' ) 
 + parser . add _ option ( " - - request - timeout " , default = DEFAULT _ REQUEST _ TIMEOUT _ SECONDS , dest = ' request _ timeout ' , 
 + help = ' Specify the default request timeout in seconds ( default : % default seconds ) . ' ) 
 parser . add _ option ( " - t " , " - - tty " , action = ' store _ true ' , dest = ' tty ' , 
 help = ' Force tty mode ( command prompt ) . ' ) 
 
 @ @ - 657 , 7 + 660 , 7 @ @ class Shell ( cmd . Cmd ) : 
 max _ trace _ wait = DEFAULT _ MAX _ TRACE _ WAIT , 
 ssl = False , 
 single _ statement = None , 
 - client _ timeout = 10 , 
 + request _ timeout = DEFAULT _ REQUEST _ TIMEOUT _ SECONDS , 
 protocol _ version = DEFAULT _ PROTOCOL _ VERSION , 
 connect _ timeout = DEFAULT _ CONNECT _ TIMEOUT _ SECONDS ) : 
 cmd . Cmd . _ _ init _ _ ( self , completekey = completekey ) 
 @ @ - 707 , 7 + 710 , 7 @ @ class Shell ( cmd . Cmd ) : 
 if not self . conn . metadata . keyspaces : 
 self . refresh _ schema _ metadata _ best _ effort ( ) 
 
 - self . session . default _ timeout = client _ timeout 
 + self . session . default _ timeout = request _ timeout 
 self . session . row _ factory = ordered _ dict _ factory 
 self . session . default _ consistency _ level = cassandra . ConsistencyLevel . ONE 
 self . get _ connection _ versions ( ) 
 @ @ - 2324 , 6 + 2327 , 7 @ @ def read _ options ( cmdlineargs , environment ) : 
 optvalues . tty = option _ with _ default ( configs . getboolean , ' ui ' , ' tty ' , sys . stdin . isatty ( ) ) 
 optvalues . cqlversion = option _ with _ default ( configs . get , ' cql ' , ' version ' , DEFAULT _ CQLVER ) 
 optvalues . connect _ timeout = option _ with _ default ( configs . getint , ' connection ' , ' timeout ' , DEFAULT _ CONNECT _ TIMEOUT _ SECONDS ) 
 + optvalues . request _ timeout = option _ with _ default ( configs . getint , ' connection ' , ' request _ timeout ' , DEFAULT _ REQUEST _ TIMEOUT _ SECONDS ) 
 optvalues . execute = None 
 
 ( options , arguments ) = parser . parse _ args ( cmdlineargs , values = optvalues ) 
 @ @ - 2334 , 14 + 2338 , 14 @ @ def read _ options ( cmdlineargs , environment ) : 
 try : 
 options . connect _ timeout = int ( options . connect _ timeout ) 
 except ValueError : 
 - parser . error ( ' " % s " is not a valid timeout . ' % ( options . connect _ timeout , ) ) 
 + parser . error ( ' " % s " is not a valid connect timeout . ' % ( options . connect _ timeout , ) ) 
 options . connect _ timeout = DEFAULT _ CONNECT _ TIMEOUT _ SECONDS 
 
 - options . client _ timeout = option _ with _ default ( configs . get , ' connection ' , ' client _ timeout ' , ' 10 ' ) 
 - if options . client _ timeout . lower ( ) = = ' none ' : 
 - options . client _ timeout = None 
 - else : 
 - options . client _ timeout = int ( options . client _ timeout ) 
 + try : 
 + options . request _ timeout = int ( options . request _ timeout ) 
 + except ValueError : 
 + parser . error ( ' " % s " is not a valid request timeout . ' % ( options . request _ timeout , ) ) 
 + options . request _ timeout = DEFAULT _ REQUEST _ TIMEOUT _ SECONDS 
 
 hostname = environment . get ( ' CQLSH _ HOST ' , hostname ) 
 port = environment . get ( ' CQLSH _ PORT ' , port ) 
 @ @ - 2451 , 7 + 2455 , 7 @ @ def main ( options , hostname , port ) : 
 max _ trace _ wait = options . max _ trace _ wait , 
 ssl = options . ssl , 
 single _ statement = options . execute , 
 - client _ timeout = options . client _ timeout , 
 + request _ timeout = options . request _ timeout , 
 connect _ timeout = options . connect _ timeout , 
 encoding = options . encoding ) 
 except KeyboardInterrupt :

NEAREST DIFF:
ELIMINATEDSENTENCE
