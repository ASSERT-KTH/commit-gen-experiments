BLEU SCORE: 0.027611988917697356

TEST MSG: fix eclipse - warnings after CASSANDRA - 14197
GENERATED MSG: inline

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java <nl> index c77ed92 . . 91c7aad 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java <nl> @ @ - 210 , 6 + 210 , 7 @ @ public class CompactionStrategyManager implements INotificationConsumer <nl> * @ return <nl> * / <nl> @ VisibleForTesting <nl> + @ SuppressWarnings ( " resource " ) / / transaction is closed by AbstractCompactionTask : : execute <nl> AbstractCompactionTask findUpgradeSSTableTask ( ) <nl> { <nl> if ( ! isEnabled ( ) | | ! DatabaseDescriptor . automaticSSTableUpgrade ( ) )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0e47132 . . 25993ff 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 - dev <nl> + * multithreaded hint replay ( CASSANDRA - 4189 ) <nl> * add inter - node message compression ( CASSANDRA - 3127 ) <nl> * enforce 1m min keycache for auto ( CASSANDRA - 4306 ) <nl> * remove COPP ( CASSANDRA - 2479 ) <nl> diff - - git a / NEWS . txt b / NEWS . txt <nl> index 92723fd . . 6cad6c2 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 33 , 6 + 33 , 8 @ @ Upgrading <nl> - The somewhat ill - concieved CollatingOrderPreservingPartitioner <nl> has been removed . Use RandomPartitioner ( recommended ) or <nl> ByteOrderedPartitioner instead . <nl> + - Global option hinted _ handoff _ throttle _ delay _ in _ ms has been removed . <nl> + hinted _ handoff _ throttle _ in _ kb has been added instead . <nl> <nl> <nl> 1 . 1 . 1 <nl> diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index 6969095 . . cddd491 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 26 , 8 + 26 , 12 @ @ hinted _ handoff _ enabled : true <nl> # this defines the maximum amount of time a dead host will have hints <nl> # generated . After it has been dead this long , hints will be dropped . <nl> max _ hint _ window _ in _ ms : 3600000 # one hour <nl> - # Sleep this long after delivering each hint <nl> - hinted _ handoff _ throttle _ delay _ in _ ms : 1 <nl> + # throttle in KB ' s per second , per delivery thread <nl> + hinted _ handoff _ throttle _ in _ kb : 1024 <nl> + # Number of threads with which to deliver hints ; <nl> + # Consider increasing this number when you have multi - dc deployments , since <nl> + # cross - dc handoff tends to be slower <nl> + max _ hints _ delivery _ threads : 2 <nl> <nl> # The following setting populates the page cache on memtable flush and compaction <nl> # WARNING : Enable this setting only when the whole node ' s data fits in memory . <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index 8a24400 . . e1c9a42 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 119 , 7 + 119 , 8 @ @ public class Config <nl> public Double flush _ largest _ memtables _ at = 1 . 0 ; <nl> public Double reduce _ cache _ sizes _ at = 1 . 0 ; <nl> public double reduce _ cache _ capacity _ to = 0 . 6 ; <nl> - public int hinted _ handoff _ throttle _ delay _ in _ ms = 0 ; <nl> + public int hinted _ handoff _ throttle _ in _ kb = 1024 ; <nl> + public int max _ hints _ delivery _ threads = 1 ; <nl> public boolean compaction _ preheat _ key _ cache = true ; <nl> <nl> public boolean incremental _ backups = false ; <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 7d71113 . . 9a073a9 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 954 , 9 + 954 , 14 @ @ public class DatabaseDescriptor <nl> return conf . reduce _ cache _ capacity _ to ; <nl> } <nl> <nl> - public static int getHintedHandoffThrottleDelay ( ) <nl> + public static int getHintedHandoffThrottleInKB ( ) <nl> { <nl> - return conf . hinted _ handoff _ throttle _ delay _ in _ ms ; <nl> + return conf . hinted _ handoff _ throttle _ in _ kb ; <nl> + } <nl> + <nl> + public static int getMaxHintsThread ( ) <nl> + { <nl> + return conf . max _ hints _ delivery _ threads ; <nl> } <nl> <nl> public static boolean getPreheatKeyCache ( ) <nl> diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> index 3aed559 . . 8a3b7de 100644 <nl> - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> @ @ - 33 , 6 + 33 , 7 @ @ import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . concurrent . JMXEnabledThreadPoolExecutor ; <nl> + import org . apache . cassandra . concurrent . NamedThreadFactory ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . compaction . CompactionManager ; <nl> import org . apache . cassandra . db . filter . * ; <nl> @ @ - 44 , 11 + 45 , 13 @ @ import org . apache . cassandra . gms . FailureDetector ; <nl> import org . apache . cassandra . gms . Gossiper ; <nl> import org . apache . cassandra . io . sstable . Descriptor ; <nl> import org . apache . cassandra . io . sstable . SSTable ; <nl> + import org . apache . cassandra . net . MessageOut ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> import org . apache . cassandra . service . * ; <nl> import org . apache . cassandra . thrift . * ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> + import org . apache . cassandra . utils . Throttle ; <nl> import org . apache . cassandra . utils . UUIDGen ; <nl> import org . apache . cassandra . utils . WrappedRunnable ; <nl> import org . cliffc . high _ scale _ lib . NonBlockingHashSet ; <nl> @ @ - 94 , 7 + 97 , 11 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> <nl> private final NonBlockingHashSet < InetAddress > queuedDeliveries = new NonBlockingHashSet < InetAddress > ( ) ; <nl> <nl> - private final ExecutorService executor = new JMXEnabledThreadPoolExecutor ( " HintedHandoff " , Thread . MIN _ PRIORITY ) ; <nl> + private final ThreadPoolExecutor executor = new JMXEnabledThreadPoolExecutor ( DatabaseDescriptor . getMaxHintsThread ( ) , <nl> + Integer . MAX _ VALUE , <nl> + TimeUnit . SECONDS , <nl> + new LinkedBlockingQueue < Runnable > ( ) , <nl> + new NamedThreadFactory ( " HintedHandoff " , Thread . MIN _ PRIORITY ) , " HintedHandoff " ) ; <nl> <nl> public void start ( ) <nl> { <nl> @ @ - 119 , 20 + 126 , 11 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> StorageService . optionalTasks . scheduleWithFixedDelay ( runnable , 10 , 10 , TimeUnit . MINUTES ) ; <nl> } <nl> <nl> - private static void sendMutation ( InetAddress endpoint , RowMutation mutation ) throws TimeoutException <nl> + private static void sendMutation ( InetAddress endpoint , MessageOut < ? > message ) throws TimeoutException <nl> { <nl> IWriteResponseHandler responseHandler = WriteResponseHandler . create ( endpoint ) ; <nl> - MessagingService . instance ( ) . sendRR ( mutation . createMessage ( ) , endpoint , responseHandler ) ; <nl> + MessagingService . instance ( ) . sendRR ( message , endpoint , responseHandler ) ; <nl> responseHandler . get ( ) ; <nl> - <nl> - try <nl> - { <nl> - Thread . sleep ( DatabaseDescriptor . getHintedHandoffThrottleDelay ( ) ) ; <nl> - } <nl> - catch ( InterruptedException e ) <nl> - { <nl> - throw new AssertionError ( e ) ; <nl> - } <nl> } <nl> <nl> private static void deleteHint ( ByteBuffer tokenBytes , ByteBuffer hintId , long timestamp ) throws IOException <nl> @ @ - 260 , 6 + 258 , 21 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> <nl> private void deliverHintsToEndpointInternal ( InetAddress endpoint ) throws IOException , DigestMismatchException , InvalidRequestException , InterruptedException <nl> { <nl> + long hintSizes = 0 ; <nl> + Throttle hintThrottle = new Throttle ( " HintThrottle " , new Throttle . ThroughputFunction ( ) <nl> + { <nl> + public int targetThroughput ( ) <nl> + { <nl> + if ( DatabaseDescriptor . getHintedHandoffThrottleInKB ( ) < 1 ) <nl> + / / throttling disabled <nl> + return 0 ; <nl> + / / total throughput <nl> + int totalBytesPerMS = ( DatabaseDescriptor . getHintedHandoffThrottleInKB ( ) * 1024 ) / 8 / 1000 ; <nl> + / / per hint throughput ( target bytes per MS ) <nl> + return totalBytesPerMS / Math . max ( 1 , executor . getActiveCount ( ) ) ; <nl> + } <nl> + } ) ; <nl> + <nl> ColumnFamilyStore hintStore = Table . open ( Table . SYSTEM _ TABLE ) . getColumnFamilyStore ( HINTS _ CF ) ; <nl> if ( hintStore . isEmpty ( ) ) <nl> return ; / / nothing to do , don ' t confuse users by logging a no - op handoff <nl> @ @ - 360 , 7 + 373 , 11 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> { <nl> if ( rm ! = null ) <nl> { <nl> - sendMutation ( endpoint , rm ) ; <nl> + MessageOut < RowMutation > message = rm . createMessage ( ) ; <nl> + sendMutation ( endpoint , message ) ; <nl> + / / throttle for the messages sent . <nl> + hintSizes + = message . serializedSize ( MessagingService . current _ version ) ; <nl> + hintThrottle . throttle ( hintSizes ) ; <nl> rowsReplayed + + ; <nl> } <nl> deleteHint ( hostIdBytes , hint . name ( ) , hint . maxTimestamp ( ) ) ; <nl> @ @ - 423 , 10 + 440 , 10 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> * / <nl> public void scheduleHintDelivery ( final InetAddress to ) <nl> { <nl> - logger . debug ( " deliverHints to { } " , to ) ; <nl> - if ( ! queuedDeliveries . add ( to ) ) <nl> + / / We should not deliver hints to the same host in 2 different threads <nl> + if ( queuedDeliveries . contains ( to ) | | ! queuedDeliveries . add ( to ) ) <nl> return ; <nl> - <nl> + logger . debug ( " Scheduling delivery of Hints to { } " , to ) ; <nl> Runnable r = new WrappedRunnable ( ) <nl> { <nl> public void runMayThrow ( ) throws Exception <nl> diff - - git a / src / java / org / apache / cassandra / net / MessageOut . java b / src / java / org / apache / cassandra / net / MessageOut . java <nl> index 1d5c34c . . fe09c2e 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessageOut . java <nl> + + + b / src / java / org / apache / cassandra / net / MessageOut . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import java . util . Map ; <nl> import com . google . common . collect . ImmutableMap ; <nl> <nl> import org . apache . cassandra . concurrent . Stage ; <nl> + import org . apache . cassandra . db . TypeSizes ; <nl> import org . apache . cassandra . io . IVersionedSerializer ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> @ @ - 112 , 4 + 113 , 24 @ @ public class MessageOut < T > <nl> if ( payload ! = null ) <nl> serializer . serialize ( payload , out , version ) ; <nl> } <nl> + <nl> + public int serializedSize ( int version ) <nl> + { <nl> + int size = CompactEndpointSerializationHelper . serializedSize ( from ) ; <nl> + <nl> + size + = TypeSizes . NATIVE . sizeof ( verb . ordinal ( ) ) ; <nl> + size + = TypeSizes . NATIVE . sizeof ( parameters . size ( ) ) ; <nl> + for ( Map . Entry < String , byte [ ] > entry : parameters . entrySet ( ) ) <nl> + { <nl> + TypeSizes . NATIVE . sizeof ( entry . getKey ( ) ) ; <nl> + TypeSizes . NATIVE . sizeof ( entry . getValue ( ) . length ) ; <nl> + size + = entry . getValue ( ) . length ; <nl> + } <nl> + <nl> + long longSize = payload = = null ? 0 : serializer . serializedSize ( payload , version ) ; <nl> + assert longSize < = Integer . MAX _ VALUE ; / / larger values are supported in sstables but not messages <nl> + size + = TypeSizes . NATIVE . sizeof ( ( int ) longSize ) ; <nl> + size + = longSize ; <nl> + return size ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java 
 index c77ed92 . . 91c7aad 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionStrategyManager . java 
 @ @ - 210 , 6 + 210 , 7 @ @ public class CompactionStrategyManager implements INotificationConsumer 
 * @ return 
 * / 
 @ VisibleForTesting 
 + @ SuppressWarnings ( " resource " ) / / transaction is closed by AbstractCompactionTask : : execute 
 AbstractCompactionTask findUpgradeSSTableTask ( ) 
 { 
 if ( ! isEnabled ( ) | | ! DatabaseDescriptor . automaticSSTableUpgrade ( ) )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0e47132 . . 25993ff 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 - dev 
 + * multithreaded hint replay ( CASSANDRA - 4189 ) 
 * add inter - node message compression ( CASSANDRA - 3127 ) 
 * enforce 1m min keycache for auto ( CASSANDRA - 4306 ) 
 * remove COPP ( CASSANDRA - 2479 ) 
 diff - - git a / NEWS . txt b / NEWS . txt 
 index 92723fd . . 6cad6c2 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 33 , 6 + 33 , 8 @ @ Upgrading 
 - The somewhat ill - concieved CollatingOrderPreservingPartitioner 
 has been removed . Use RandomPartitioner ( recommended ) or 
 ByteOrderedPartitioner instead . 
 + - Global option hinted _ handoff _ throttle _ delay _ in _ ms has been removed . 
 + hinted _ handoff _ throttle _ in _ kb has been added instead . 
 
 
 1 . 1 . 1 
 diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index 6969095 . . cddd491 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 26 , 8 + 26 , 12 @ @ hinted _ handoff _ enabled : true 
 # this defines the maximum amount of time a dead host will have hints 
 # generated . After it has been dead this long , hints will be dropped . 
 max _ hint _ window _ in _ ms : 3600000 # one hour 
 - # Sleep this long after delivering each hint 
 - hinted _ handoff _ throttle _ delay _ in _ ms : 1 
 + # throttle in KB ' s per second , per delivery thread 
 + hinted _ handoff _ throttle _ in _ kb : 1024 
 + # Number of threads with which to deliver hints ; 
 + # Consider increasing this number when you have multi - dc deployments , since 
 + # cross - dc handoff tends to be slower 
 + max _ hints _ delivery _ threads : 2 
 
 # The following setting populates the page cache on memtable flush and compaction 
 # WARNING : Enable this setting only when the whole node ' s data fits in memory . 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index 8a24400 . . e1c9a42 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 119 , 7 + 119 , 8 @ @ public class Config 
 public Double flush _ largest _ memtables _ at = 1 . 0 ; 
 public Double reduce _ cache _ sizes _ at = 1 . 0 ; 
 public double reduce _ cache _ capacity _ to = 0 . 6 ; 
 - public int hinted _ handoff _ throttle _ delay _ in _ ms = 0 ; 
 + public int hinted _ handoff _ throttle _ in _ kb = 1024 ; 
 + public int max _ hints _ delivery _ threads = 1 ; 
 public boolean compaction _ preheat _ key _ cache = true ; 
 
 public boolean incremental _ backups = false ; 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 7d71113 . . 9a073a9 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 954 , 9 + 954 , 14 @ @ public class DatabaseDescriptor 
 return conf . reduce _ cache _ capacity _ to ; 
 } 
 
 - public static int getHintedHandoffThrottleDelay ( ) 
 + public static int getHintedHandoffThrottleInKB ( ) 
 { 
 - return conf . hinted _ handoff _ throttle _ delay _ in _ ms ; 
 + return conf . hinted _ handoff _ throttle _ in _ kb ; 
 + } 
 + 
 + public static int getMaxHintsThread ( ) 
 + { 
 + return conf . max _ hints _ delivery _ threads ; 
 } 
 
 public static boolean getPreheatKeyCache ( ) 
 diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 index 3aed559 . . 8a3b7de 100644 
 - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 @ @ - 33 , 6 + 33 , 7 @ @ import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . concurrent . JMXEnabledThreadPoolExecutor ; 
 + import org . apache . cassandra . concurrent . NamedThreadFactory ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . compaction . CompactionManager ; 
 import org . apache . cassandra . db . filter . * ; 
 @ @ - 44 , 11 + 45 , 13 @ @ import org . apache . cassandra . gms . FailureDetector ; 
 import org . apache . cassandra . gms . Gossiper ; 
 import org . apache . cassandra . io . sstable . Descriptor ; 
 import org . apache . cassandra . io . sstable . SSTable ; 
 + import org . apache . cassandra . net . MessageOut ; 
 import org . apache . cassandra . net . MessagingService ; 
 import org . apache . cassandra . service . * ; 
 import org . apache . cassandra . thrift . * ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 + import org . apache . cassandra . utils . Throttle ; 
 import org . apache . cassandra . utils . UUIDGen ; 
 import org . apache . cassandra . utils . WrappedRunnable ; 
 import org . cliffc . high _ scale _ lib . NonBlockingHashSet ; 
 @ @ - 94 , 7 + 97 , 11 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 
 private final NonBlockingHashSet < InetAddress > queuedDeliveries = new NonBlockingHashSet < InetAddress > ( ) ; 
 
 - private final ExecutorService executor = new JMXEnabledThreadPoolExecutor ( " HintedHandoff " , Thread . MIN _ PRIORITY ) ; 
 + private final ThreadPoolExecutor executor = new JMXEnabledThreadPoolExecutor ( DatabaseDescriptor . getMaxHintsThread ( ) , 
 + Integer . MAX _ VALUE , 
 + TimeUnit . SECONDS , 
 + new LinkedBlockingQueue < Runnable > ( ) , 
 + new NamedThreadFactory ( " HintedHandoff " , Thread . MIN _ PRIORITY ) , " HintedHandoff " ) ; 
 
 public void start ( ) 
 { 
 @ @ - 119 , 20 + 126 , 11 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 StorageService . optionalTasks . scheduleWithFixedDelay ( runnable , 10 , 10 , TimeUnit . MINUTES ) ; 
 } 
 
 - private static void sendMutation ( InetAddress endpoint , RowMutation mutation ) throws TimeoutException 
 + private static void sendMutation ( InetAddress endpoint , MessageOut < ? > message ) throws TimeoutException 
 { 
 IWriteResponseHandler responseHandler = WriteResponseHandler . create ( endpoint ) ; 
 - MessagingService . instance ( ) . sendRR ( mutation . createMessage ( ) , endpoint , responseHandler ) ; 
 + MessagingService . instance ( ) . sendRR ( message , endpoint , responseHandler ) ; 
 responseHandler . get ( ) ; 
 - 
 - try 
 - { 
 - Thread . sleep ( DatabaseDescriptor . getHintedHandoffThrottleDelay ( ) ) ; 
 - } 
 - catch ( InterruptedException e ) 
 - { 
 - throw new AssertionError ( e ) ; 
 - } 
 } 
 
 private static void deleteHint ( ByteBuffer tokenBytes , ByteBuffer hintId , long timestamp ) throws IOException 
 @ @ - 260 , 6 + 258 , 21 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 
 private void deliverHintsToEndpointInternal ( InetAddress endpoint ) throws IOException , DigestMismatchException , InvalidRequestException , InterruptedException 
 { 
 + long hintSizes = 0 ; 
 + Throttle hintThrottle = new Throttle ( " HintThrottle " , new Throttle . ThroughputFunction ( ) 
 + { 
 + public int targetThroughput ( ) 
 + { 
 + if ( DatabaseDescriptor . getHintedHandoffThrottleInKB ( ) < 1 ) 
 + / / throttling disabled 
 + return 0 ; 
 + / / total throughput 
 + int totalBytesPerMS = ( DatabaseDescriptor . getHintedHandoffThrottleInKB ( ) * 1024 ) / 8 / 1000 ; 
 + / / per hint throughput ( target bytes per MS ) 
 + return totalBytesPerMS / Math . max ( 1 , executor . getActiveCount ( ) ) ; 
 + } 
 + } ) ; 
 + 
 ColumnFamilyStore hintStore = Table . open ( Table . SYSTEM _ TABLE ) . getColumnFamilyStore ( HINTS _ CF ) ; 
 if ( hintStore . isEmpty ( ) ) 
 return ; / / nothing to do , don ' t confuse users by logging a no - op handoff 
 @ @ - 360 , 7 + 373 , 11 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 { 
 if ( rm ! = null ) 
 { 
 - sendMutation ( endpoint , rm ) ; 
 + MessageOut < RowMutation > message = rm . createMessage ( ) ; 
 + sendMutation ( endpoint , message ) ; 
 + / / throttle for the messages sent . 
 + hintSizes + = message . serializedSize ( MessagingService . current _ version ) ; 
 + hintThrottle . throttle ( hintSizes ) ; 
 rowsReplayed + + ; 
 } 
 deleteHint ( hostIdBytes , hint . name ( ) , hint . maxTimestamp ( ) ) ; 
 @ @ - 423 , 10 + 440 , 10 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 * / 
 public void scheduleHintDelivery ( final InetAddress to ) 
 { 
 - logger . debug ( " deliverHints to { } " , to ) ; 
 - if ( ! queuedDeliveries . add ( to ) ) 
 + / / We should not deliver hints to the same host in 2 different threads 
 + if ( queuedDeliveries . contains ( to ) | | ! queuedDeliveries . add ( to ) ) 
 return ; 
 - 
 + logger . debug ( " Scheduling delivery of Hints to { } " , to ) ; 
 Runnable r = new WrappedRunnable ( ) 
 { 
 public void runMayThrow ( ) throws Exception 
 diff - - git a / src / java / org / apache / cassandra / net / MessageOut . java b / src / java / org / apache / cassandra / net / MessageOut . java 
 index 1d5c34c . . fe09c2e 100644 
 - - - a / src / java / org / apache / cassandra / net / MessageOut . java 
 + + + b / src / java / org / apache / cassandra / net / MessageOut . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import java . util . Map ; 
 import com . google . common . collect . ImmutableMap ; 
 
 import org . apache . cassandra . concurrent . Stage ; 
 + import org . apache . cassandra . db . TypeSizes ; 
 import org . apache . cassandra . io . IVersionedSerializer ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 
 @ @ - 112 , 4 + 113 , 24 @ @ public class MessageOut < T > 
 if ( payload ! = null ) 
 serializer . serialize ( payload , out , version ) ; 
 } 
 + 
 + public int serializedSize ( int version ) 
 + { 
 + int size = CompactEndpointSerializationHelper . serializedSize ( from ) ; 
 + 
 + size + = TypeSizes . NATIVE . sizeof ( verb . ordinal ( ) ) ; 
 + size + = TypeSizes . NATIVE . sizeof ( parameters . size ( ) ) ; 
 + for ( Map . Entry < String , byte [ ] > entry : parameters . entrySet ( ) ) 
 + { 
 + TypeSizes . NATIVE . sizeof ( entry . getKey ( ) ) ; 
 + TypeSizes . NATIVE . sizeof ( entry . getValue ( ) . length ) ; 
 + size + = entry . getValue ( ) . length ; 
 + } 
 + 
 + long longSize = payload = = null ? 0 : serializer . serializedSize ( payload , version ) ; 
 + assert longSize < = Integer . MAX _ VALUE ; / / larger values are supported in sstables but not messages 
 + size + = TypeSizes . NATIVE . sizeof ( ( int ) longSize ) ; 
 + size + = longSize ; 
 + return size ; 
 + } 
 }
