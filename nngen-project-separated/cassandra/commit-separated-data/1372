BLEU SCORE: 0.013878957858167952

TEST MSG: Fix multiget _ slice
GENERATED MSG: Expose whether jna is enabled and memory is locked via JMX

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / thrift / CassandraServer . java b / src / java / org / apache / cassandra / thrift / CassandraServer . java <nl> index fd391aa . . e827e95 100644 <nl> - - - a / src / java / org / apache / cassandra / thrift / CassandraServer . java <nl> + + + b / src / java / org / apache / cassandra / thrift / CassandraServer . java <nl> @ @ - 30 , 9 + 30 , 12 @ @ import java . util . zip . Inflater ; <nl> import com . google . common . base . Joiner ; <nl> import com . google . common . collect . * ; <nl> import com . google . common . primitives . Longs ; <nl> + <nl> + import org . apache . cassandra . config . ColumnDefinition ; <nl> + import org . apache . cassandra . db . filter . ColumnFilter ; <nl> + <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> - <nl> import org . apache . cassandra . auth . Permission ; <nl> import org . apache . cassandra . config . * ; <nl> import org . apache . cassandra . cql3 . QueryOptions ; <nl> @ @ - 399 , 8 + 402 , 13 @ @ public class CassandraServer implements Cassandra . Iface <nl> for ( ByteBuffer bb : predicate . column _ names ) <nl> { <nl> LegacyLayout . LegacyCellName name = LegacyLayout . decodeCellName ( metadata , parent . bufferForSuper _ column ( ) , bb ) ; <nl> - clusterings . add ( name . clustering ) ; <nl> + <nl> + if ( ! name . clustering . equals ( Clustering . STATIC _ CLUSTERING ) ) <nl> + clusterings . add ( name . clustering ) ; <nl> } <nl> + <nl> + / / clusterings cannot include STATIC _ CLUSTERING , so if the names filter is for static columns , clusterings <nl> + / / will be empty . However , by requesting the static columns in our ColumnFilter , this will still work . <nl> return new ClusteringIndexNamesFilter ( clusterings , false ) ; <nl> } <nl> } <nl> @ @ - 492 , 12 + 500 , 16 @ @ public class CassandraServer implements Cassandra . Iface <nl> } <nl> else <nl> { <nl> - PartitionColumns . Builder builder = new PartitionColumns . Builder ( ) ; <nl> + PartitionColumns . Builder builder = PartitionColumns . builder ( ) ; <nl> for ( ByteBuffer bb : predicate . column _ names ) <nl> { <nl> LegacyLayout . LegacyCellName name = LegacyLayout . decodeCellName ( metadata , parent . bufferForSuper _ column ( ) , bb ) ; <nl> builder . add ( name . column ) ; <nl> } <nl> + <nl> + if ( metadata . isStaticCompactTable ( ) ) <nl> + builder . add ( metadata . compactValueColumn ( ) ) ; <nl> + <nl> return ColumnFilter . selection ( builder . build ( ) ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> new file mode 100644 <nl> index 0000000 . . 39b96c5 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package org . apache . cassandra . service ; <nl> + <nl> + public interface NativeAccessMBean <nl> + { <nl> + boolean isAvailable ( ) ; <nl> + <nl> + boolean isMemoryLockable ( ) ; <nl> + } <nl> +

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / thrift / CassandraServer . java b / src / java / org / apache / cassandra / thrift / CassandraServer . java 
 index fd391aa . . e827e95 100644 
 - - - a / src / java / org / apache / cassandra / thrift / CassandraServer . java 
 + + + b / src / java / org / apache / cassandra / thrift / CassandraServer . java 
 @ @ - 30 , 9 + 30 , 12 @ @ import java . util . zip . Inflater ; 
 import com . google . common . base . Joiner ; 
 import com . google . common . collect . * ; 
 import com . google . common . primitives . Longs ; 
 + 
 + import org . apache . cassandra . config . ColumnDefinition ; 
 + import org . apache . cassandra . db . filter . ColumnFilter ; 
 + 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 - 
 import org . apache . cassandra . auth . Permission ; 
 import org . apache . cassandra . config . * ; 
 import org . apache . cassandra . cql3 . QueryOptions ; 
 @ @ - 399 , 8 + 402 , 13 @ @ public class CassandraServer implements Cassandra . Iface 
 for ( ByteBuffer bb : predicate . column _ names ) 
 { 
 LegacyLayout . LegacyCellName name = LegacyLayout . decodeCellName ( metadata , parent . bufferForSuper _ column ( ) , bb ) ; 
 - clusterings . add ( name . clustering ) ; 
 + 
 + if ( ! name . clustering . equals ( Clustering . STATIC _ CLUSTERING ) ) 
 + clusterings . add ( name . clustering ) ; 
 } 
 + 
 + / / clusterings cannot include STATIC _ CLUSTERING , so if the names filter is for static columns , clusterings 
 + / / will be empty . However , by requesting the static columns in our ColumnFilter , this will still work . 
 return new ClusteringIndexNamesFilter ( clusterings , false ) ; 
 } 
 } 
 @ @ - 492 , 12 + 500 , 16 @ @ public class CassandraServer implements Cassandra . Iface 
 } 
 else 
 { 
 - PartitionColumns . Builder builder = new PartitionColumns . Builder ( ) ; 
 + PartitionColumns . Builder builder = PartitionColumns . builder ( ) ; 
 for ( ByteBuffer bb : predicate . column _ names ) 
 { 
 LegacyLayout . LegacyCellName name = LegacyLayout . decodeCellName ( metadata , parent . bufferForSuper _ column ( ) , bb ) ; 
 builder . add ( name . column ) ; 
 } 
 + 
 + if ( metadata . isStaticCompactTable ( ) ) 
 + builder . add ( metadata . compactValueColumn ( ) ) ; 
 + 
 return ColumnFilter . selection ( builder . build ( ) ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 new file mode 100644 
 index 0000000 . . 39b96c5 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package org . apache . cassandra . service ; 
 + 
 + public interface NativeAccessMBean 
 + { 
 + boolean isAvailable ( ) ; 
 + 
 + boolean isMemoryLockable ( ) ; 
 + } 
 +
