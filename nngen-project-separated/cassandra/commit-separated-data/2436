BLEU SCORE: 0.09980099403873663

TEST MSG: cqlsh : always emphasize the partition key in DESC output
GENERATED MSG: cqlsh : handle disabled compression in DESCRIBE output

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c6c51c3 . . b8c3963 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> 2 . 0 . 9 <nl> * Add missing iso8601 patterns for date strings ( 6973 ) <nl> * Support selecting multiple rows in a partition using IN ( CASSANDRA - 6875 ) <nl> + * cqlsh : always emphasize the partition key in DESC output ( CASSANDRA - 7274 ) <nl> <nl> 2 . 0 . 8 <nl> * Always reallocate buffers in HSHA ( CASSANDRA - 6285 ) <nl> diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index 6575387 . . 75c4299 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 1136 , 10 + 1136 , 10 @ @ class Shell ( cmd . Cmd ) : <nl> <nl> out . write ( " PRIMARY KEY ( " ) <nl> partkeynames = self . cql _ protect _ names ( layout . partition _ key _ columns ) <nl> - if len ( partkeynames ) > 1 : <nl> - partkey = " ( % s ) " % ' , ' . join ( partkeynames ) <nl> - else : <nl> - partkey = partkeynames [ 0 ] <nl> + <nl> + # Changed to put parenthesis around one or more partition keys in CASSANDRA - 7274 <nl> + partkey = " ( % s ) " % ' , ' . join ( partkeynames ) <nl> + <nl> pk _ parts = [ partkey ] + self . cql _ protect _ names ( layout . clustering _ key _ columns ) <nl> out . write ( ' , ' . join ( pk _ parts ) + ' ) ' ) <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c0dda21 . . 80b73f4 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 . 7 <nl> + * if no seeds can be a reached a node won ' t start in a ring by itself ( CASSANDRA - 5768 ) <nl> * add cassandra . unsafesystem property ( CASSANDRA - 5704 ) <nl> * ( Hadoop ) quote identifiers in CqlPagingRecordReader ( CASSANDRA - 5763 ) <nl> * Add replace _ node functionality for vnodes ( CASSANDRA - 5337 ) <nl> diff - - git a / src / java / org / apache / cassandra / gms / GossipDigestAckVerbHandler . java b / src / java / org / apache / cassandra / gms / GossipDigestAckVerbHandler . java <nl> index cdc9686 . . 2a03ff2 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / GossipDigestAckVerbHandler . java <nl> + + + b / src / java / org / apache / cassandra / gms / GossipDigestAckVerbHandler . java <nl> @ @ - 57 , 6 + 57 , 8 @ @ public class GossipDigestAckVerbHandler implements IVerbHandler < GossipDigestAck > <nl> Gossiper . instance . applyStateLocally ( epStateMap ) ; <nl> } <nl> <nl> + Gossiper . instance . checkSeedContact ( from ) ; <nl> + <nl> / * Get the state required to send to this gossipee - construct GossipDigestAck2Message * / <nl> Map < InetAddress , EndpointState > deltaEpStateMap = new HashMap < InetAddress , EndpointState > ( ) ; <nl> for ( GossipDigest gDigest : gDigestList ) <nl> diff - - git a / src / java / org / apache / cassandra / gms / GossipDigestSynVerbHandler . java b / src / java / org / apache / cassandra / gms / GossipDigestSynVerbHandler . java <nl> index 6e90ac4 . . 61d21ed 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / GossipDigestSynVerbHandler . java <nl> + + + b / src / java / org / apache / cassandra / gms / GossipDigestSynVerbHandler . java <nl> @ @ - 82 , 6 + 82 , 7 @ @ public class GossipDigestSynVerbHandler implements IVerbHandler < GossipDigestSyn > <nl> GossipDigestAck . serializer ) ; <nl> if ( logger . isTraceEnabled ( ) ) <nl> logger . trace ( " Sending a GossipDigestAckMessage to { } " , from ) ; <nl> + Gossiper . instance . checkSeedContact ( from ) ; <nl> MessagingService . instance ( ) . sendOneWay ( gDigestAckMessage , from ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> index efa9865 . . b0284c1 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / Gossiper . java <nl> + + + b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> @ @ - 101 , 6 + 101 , 9 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> <nl> private final Map < InetAddress , Long > expireTimeEndpointMap = new ConcurrentHashMap < InetAddress , Long > ( ) ; <nl> <nl> + / / have we ever in our lifetime reached a seed ? <nl> + private boolean seedContacted = false ; <nl> + <nl> private class GossipTask implements Runnable <nl> { <nl> public void run ( ) <nl> @ @ - 181 , 6 + 184 , 17 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> } <nl> } <nl> <nl> + protected void checkSeedContact ( InetAddress ep ) <nl> + { <nl> + if ( ! seedContacted & & seeds . contains ( ep ) ) <nl> + seedContacted = true ; <nl> + } <nl> + <nl> + public boolean seenAnySeed ( ) <nl> + { <nl> + return seedContacted ; <nl> + } <nl> + <nl> / * * <nl> * Register for interesting state changes . <nl> * @ param subscriber module which implements the IEndpointStateChangeSubscriber <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 7f1bdbc . . c4ceee5 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 943 , 6 + 943 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> tokenMetadata . updateNormalTokens ( tokens , FBUtilities . getBroadcastAddress ( ) ) ; <nl> } <nl> Tracing . instance ( ) ; <nl> + if ( ! Gossiper . instance . seenAnySeed ( ) ) <nl> + throw new IllegalStateException ( " Unable to contact any seeds ! " ) <nl> setMode ( Mode . JOINING , " Starting to bootstrap . . . " , true ) ; <nl> new BootStrapper ( FBUtilities . getBroadcastAddress ( ) , tokens , tokenMetadata ) . bootstrap ( ) ; / / handles token update <nl> logger . info ( " Bootstrap completed ! for the tokens { } " , tokens ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c6c51c3 . . b8c3963 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 2 . 0 . 9 
 * Add missing iso8601 patterns for date strings ( 6973 ) 
 * Support selecting multiple rows in a partition using IN ( CASSANDRA - 6875 ) 
 + * cqlsh : always emphasize the partition key in DESC output ( CASSANDRA - 7274 ) 
 
 2 . 0 . 8 
 * Always reallocate buffers in HSHA ( CASSANDRA - 6285 ) 
 diff - - git a / bin / cqlsh b / bin / cqlsh 
 index 6575387 . . 75c4299 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 1136 , 10 + 1136 , 10 @ @ class Shell ( cmd . Cmd ) : 
 
 out . write ( " PRIMARY KEY ( " ) 
 partkeynames = self . cql _ protect _ names ( layout . partition _ key _ columns ) 
 - if len ( partkeynames ) > 1 : 
 - partkey = " ( % s ) " % ' , ' . join ( partkeynames ) 
 - else : 
 - partkey = partkeynames [ 0 ] 
 + 
 + # Changed to put parenthesis around one or more partition keys in CASSANDRA - 7274 
 + partkey = " ( % s ) " % ' , ' . join ( partkeynames ) 
 + 
 pk _ parts = [ partkey ] + self . cql _ protect _ names ( layout . clustering _ key _ columns ) 
 out . write ( ' , ' . join ( pk _ parts ) + ' ) ' ) 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c0dda21 . . 80b73f4 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 . 7 
 + * if no seeds can be a reached a node won ' t start in a ring by itself ( CASSANDRA - 5768 ) 
 * add cassandra . unsafesystem property ( CASSANDRA - 5704 ) 
 * ( Hadoop ) quote identifiers in CqlPagingRecordReader ( CASSANDRA - 5763 ) 
 * Add replace _ node functionality for vnodes ( CASSANDRA - 5337 ) 
 diff - - git a / src / java / org / apache / cassandra / gms / GossipDigestAckVerbHandler . java b / src / java / org / apache / cassandra / gms / GossipDigestAckVerbHandler . java 
 index cdc9686 . . 2a03ff2 100644 
 - - - a / src / java / org / apache / cassandra / gms / GossipDigestAckVerbHandler . java 
 + + + b / src / java / org / apache / cassandra / gms / GossipDigestAckVerbHandler . java 
 @ @ - 57 , 6 + 57 , 8 @ @ public class GossipDigestAckVerbHandler implements IVerbHandler < GossipDigestAck > 
 Gossiper . instance . applyStateLocally ( epStateMap ) ; 
 } 
 
 + Gossiper . instance . checkSeedContact ( from ) ; 
 + 
 / * Get the state required to send to this gossipee - construct GossipDigestAck2Message * / 
 Map < InetAddress , EndpointState > deltaEpStateMap = new HashMap < InetAddress , EndpointState > ( ) ; 
 for ( GossipDigest gDigest : gDigestList ) 
 diff - - git a / src / java / org / apache / cassandra / gms / GossipDigestSynVerbHandler . java b / src / java / org / apache / cassandra / gms / GossipDigestSynVerbHandler . java 
 index 6e90ac4 . . 61d21ed 100644 
 - - - a / src / java / org / apache / cassandra / gms / GossipDigestSynVerbHandler . java 
 + + + b / src / java / org / apache / cassandra / gms / GossipDigestSynVerbHandler . java 
 @ @ - 82 , 6 + 82 , 7 @ @ public class GossipDigestSynVerbHandler implements IVerbHandler < GossipDigestSyn > 
 GossipDigestAck . serializer ) ; 
 if ( logger . isTraceEnabled ( ) ) 
 logger . trace ( " Sending a GossipDigestAckMessage to { } " , from ) ; 
 + Gossiper . instance . checkSeedContact ( from ) ; 
 MessagingService . instance ( ) . sendOneWay ( gDigestAckMessage , from ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java 
 index efa9865 . . b0284c1 100644 
 - - - a / src / java / org / apache / cassandra / gms / Gossiper . java 
 + + + b / src / java / org / apache / cassandra / gms / Gossiper . java 
 @ @ - 101 , 6 + 101 , 9 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 
 private final Map < InetAddress , Long > expireTimeEndpointMap = new ConcurrentHashMap < InetAddress , Long > ( ) ; 
 
 + / / have we ever in our lifetime reached a seed ? 
 + private boolean seedContacted = false ; 
 + 
 private class GossipTask implements Runnable 
 { 
 public void run ( ) 
 @ @ - 181 , 6 + 184 , 17 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 } 
 } 
 
 + protected void checkSeedContact ( InetAddress ep ) 
 + { 
 + if ( ! seedContacted & & seeds . contains ( ep ) ) 
 + seedContacted = true ; 
 + } 
 + 
 + public boolean seenAnySeed ( ) 
 + { 
 + return seedContacted ; 
 + } 
 + 
 / * * 
 * Register for interesting state changes . 
 * @ param subscriber module which implements the IEndpointStateChangeSubscriber 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 7f1bdbc . . c4ceee5 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 943 , 6 + 943 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 tokenMetadata . updateNormalTokens ( tokens , FBUtilities . getBroadcastAddress ( ) ) ; 
 } 
 Tracing . instance ( ) ; 
 + if ( ! Gossiper . instance . seenAnySeed ( ) ) 
 + throw new IllegalStateException ( " Unable to contact any seeds ! " ) 
 setMode ( Mode . JOINING , " Starting to bootstrap . . . " , true ) ; 
 new BootStrapper ( FBUtilities . getBroadcastAddress ( ) , tokens , tokenMetadata ) . bootstrap ( ) ; / / handles token update 
 logger . info ( " Bootstrap completed ! for the tokens { } " , tokens ) ;
