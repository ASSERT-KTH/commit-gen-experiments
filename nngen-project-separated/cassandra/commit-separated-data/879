BLEU SCORE: 0.056697911109760024

TEST MSG: Reduce amount of logging calls from ColumnFamilyStore . selectAndReference
GENERATED MSG: merge from 1 . 2

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index edc3564 . . b64d5de 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 1941 , 8 + 1941 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> for ( SSTableReader reader : view . sstables ) <nl> if ( reader . selfRef ( ) . globalCount ( ) = = 0 ) <nl> released . add ( reader ) ; <nl> - logger . info ( " Spinning trying to capture released readers { } " , released ) ; <nl> - logger . info ( " Spinning trying to capture all readers { } " , view . sstables ) ; <nl> + NoSpamLogger . log ( logger , NoSpamLogger . Level . WARN , 1 , TimeUnit . SECONDS , <nl> + " Spinning trying to capture readers { } , released : { } , " , view . sstables , released ) ; <nl> failingSince = System . nanoTime ( ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b935425 . . 7f5a487 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 - rc1 <nl> + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) <nl> * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) <nl> * save truncation position in system table ( CASSANDRA - 4906 ) <nl> * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) <nl> diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py <nl> index d15c083 . . bab3506 100644 <nl> - - - a / pylib / cqlshlib / formatting . py <nl> + + + b / pylib / cqlshlib / formatting . py <nl> @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : <nl> return f <nl> return registrator <nl> <nl> - @ formatter _ for ( ' bytes ' ) <nl> - def format _ value _ bytes ( val , colormap , * * _ ) : <nl> + @ formatter _ for ( ' blob ' ) <nl> + def format _ value _ blob ( val , colormap , * * _ ) : <nl> bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) <nl> return colorme ( bval , colormap , ' hex ' ) <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index edc3564 . . b64d5de 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 1941 , 8 + 1941 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 for ( SSTableReader reader : view . sstables ) 
 if ( reader . selfRef ( ) . globalCount ( ) = = 0 ) 
 released . add ( reader ) ; 
 - logger . info ( " Spinning trying to capture released readers { } " , released ) ; 
 - logger . info ( " Spinning trying to capture all readers { } " , view . sstables ) ; 
 + NoSpamLogger . log ( logger , NoSpamLogger . Level . WARN , 1 , TimeUnit . SECONDS , 
 + " Spinning trying to capture readers { } , released : { } , " , view . sstables , released ) ; 
 failingSince = System . nanoTime ( ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b935425 . . 7f5a487 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 - rc1 
 + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) 
 * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) 
 * save truncation position in system table ( CASSANDRA - 4906 ) 
 * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) 
 diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py 
 index d15c083 . . bab3506 100644 
 - - - a / pylib / cqlshlib / formatting . py 
 + + + b / pylib / cqlshlib / formatting . py 
 @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : 
 return f 
 return registrator 
 
 - @ formatter _ for ( ' bytes ' ) 
 - def format _ value _ bytes ( val , colormap , * * _ ) : 
 + @ formatter _ for ( ' blob ' ) 
 + def format _ value _ blob ( val , colormap , * * _ ) : 
 bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) 
 return colorme ( bval , colormap , ' hex ' ) 

