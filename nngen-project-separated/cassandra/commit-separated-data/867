BLEU SCORE: 0.018738883683389617

TEST MSG: Generic Java UDF types broken for RETURNS NULL ON NULL INPUT
GENERATED MSG: Add nodetool statushandoff / statusbackup

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / functions / UDHelper . java b / src / java / org / apache / cassandra / cql3 / functions / UDHelper . java <nl> index 9f322e5 . . 86cb89d 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / functions / UDHelper . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / functions / UDHelper . java <nl> @ @ - 89 , 20 + 89 , 19 @ @ public final class UDHelper <nl> / / only care about classes that can be used in a data type <nl> Class < ? > clazz = typeToken . getRawType ( ) ; <nl> if ( clazz = = Integer . class ) <nl> - clazz = int . class ; <nl> + typeToken = TypeToken . of ( int . class ) ; <nl> else if ( clazz = = Long . class ) <nl> - clazz = long . class ; <nl> + typeToken = TypeToken . of ( long . class ) ; <nl> else if ( clazz = = Byte . class ) <nl> - clazz = byte . class ; <nl> + typeToken = TypeToken . of ( byte . class ) ; <nl> else if ( clazz = = Short . class ) <nl> - clazz = short . class ; <nl> + typeToken = TypeToken . of ( short . class ) ; <nl> else if ( clazz = = Float . class ) <nl> - clazz = float . class ; <nl> + typeToken = TypeToken . of ( float . class ) ; <nl> else if ( clazz = = Double . class ) <nl> - clazz = double . class ; <nl> + typeToken = TypeToken . of ( double . class ) ; <nl> else if ( clazz = = Boolean . class ) <nl> - clazz = boolean . class ; <nl> - typeToken = TypeToken . of ( clazz ) ; <nl> + typeToken = TypeToken . of ( boolean . class ) ; <nl> } <nl> paramTypes [ i ] = typeToken ; <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java <nl> index 3cd5be7 . . e7c46a5 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java <nl> @ @ - 2504 , 7 + 2504 , 23 @ @ public class UFTest extends CQLTester <nl> <nl> String typeName = createType ( " CREATE TYPE % s ( txt text , i int ) " ) ; <nl> <nl> - String f = createFunction ( KEYSPACE , " text " , <nl> + createFunction ( KEYSPACE , " map < text , bigint > , list < text > " , <nl> + " CREATE FUNCTION IF NOT EXISTS % s ( state map < text , bigint > , styles list < text > ) \ n " + <nl> + " RETURNS NULL ON NULL INPUT \ n " + <nl> + " RETURNS map < text , bigint > \ n " + <nl> + " LANGUAGE java \ n " + <nl> + " AS $ $ \ n " + <nl> + " for ( String style : styles ) { \ n " + <nl> + " if ( state . containsKey ( style ) ) { \ n " + <nl> + " state . put ( style , state . get ( style ) + 1L ) ; \ n " + <nl> + " } else { \ n " + <nl> + " state . put ( style , 1L ) ; \ n " + <nl> + " } \ n " + <nl> + " } \ n " + <nl> + " return state ; \ n " + <nl> + " $ $ " ) ; <nl> + <nl> + createFunction ( KEYSPACE , " text " , <nl> " CREATE OR REPLACE FUNCTION % s ( " + <nl> " listText list < text > , " + <nl> " setText set < text > , " +
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / functions / UDHelper . java b / src / java / org / apache / cassandra / cql3 / functions / UDHelper . java 
 index 9f322e5 . . 86cb89d 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / functions / UDHelper . java 
 + + + b / src / java / org / apache / cassandra / cql3 / functions / UDHelper . java 
 @ @ - 89 , 20 + 89 , 19 @ @ public final class UDHelper 
 / / only care about classes that can be used in a data type 
 Class < ? > clazz = typeToken . getRawType ( ) ; 
 if ( clazz = = Integer . class ) 
 - clazz = int . class ; 
 + typeToken = TypeToken . of ( int . class ) ; 
 else if ( clazz = = Long . class ) 
 - clazz = long . class ; 
 + typeToken = TypeToken . of ( long . class ) ; 
 else if ( clazz = = Byte . class ) 
 - clazz = byte . class ; 
 + typeToken = TypeToken . of ( byte . class ) ; 
 else if ( clazz = = Short . class ) 
 - clazz = short . class ; 
 + typeToken = TypeToken . of ( short . class ) ; 
 else if ( clazz = = Float . class ) 
 - clazz = float . class ; 
 + typeToken = TypeToken . of ( float . class ) ; 
 else if ( clazz = = Double . class ) 
 - clazz = double . class ; 
 + typeToken = TypeToken . of ( double . class ) ; 
 else if ( clazz = = Boolean . class ) 
 - clazz = boolean . class ; 
 - typeToken = TypeToken . of ( clazz ) ; 
 + typeToken = TypeToken . of ( boolean . class ) ; 
 } 
 paramTypes [ i ] = typeToken ; 
 } 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java 
 index 3cd5be7 . . e7c46a5 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / UFTest . java 
 @ @ - 2504 , 7 + 2504 , 23 @ @ public class UFTest extends CQLTester 
 
 String typeName = createType ( " CREATE TYPE % s ( txt text , i int ) " ) ; 
 
 - String f = createFunction ( KEYSPACE , " text " , 
 + createFunction ( KEYSPACE , " map < text , bigint > , list < text > " , 
 + " CREATE FUNCTION IF NOT EXISTS % s ( state map < text , bigint > , styles list < text > ) \ n " + 
 + " RETURNS NULL ON NULL INPUT \ n " + 
 + " RETURNS map < text , bigint > \ n " + 
 + " LANGUAGE java \ n " + 
 + " AS $ $ \ n " + 
 + " for ( String style : styles ) { \ n " + 
 + " if ( state . containsKey ( style ) ) { \ n " + 
 + " state . put ( style , state . get ( style ) + 1L ) ; \ n " + 
 + " } else { \ n " + 
 + " state . put ( style , 1L ) ; \ n " + 
 + " } \ n " + 
 + " } \ n " + 
 + " return state ; \ n " + 
 + " $ $ " ) ; 
 + 
 + createFunction ( KEYSPACE , " text " , 
 " CREATE OR REPLACE FUNCTION % s ( " + 
 " listText list < text > , " + 
 " setText set < text > , " +

NEAREST DIFF:
ELIMINATEDSENTENCE
